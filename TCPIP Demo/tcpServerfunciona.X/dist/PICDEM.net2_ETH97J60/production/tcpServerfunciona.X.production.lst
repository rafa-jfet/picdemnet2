

Microchip Technology PIC18 PRO Macro Assembler V1.38 build -256452561 
                                                                                               Sun Sep 04 20:25:44 2016

Microchip Technology Omniscient Code Generator v1.38 (PRO mode) build 201607010351
     1                           	processor	18F97J60
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1
    85                           	psect	text67,global,reloc=2,class=CODE,delta=1
    86                           	psect	text68,global,reloc=2,class=CODE,delta=1
    87                           	psect	text69,global,reloc=2,class=CODE,delta=1
    88                           	psect	text70,global,reloc=2,class=CODE,delta=1
    89                           	psect	text71,global,reloc=2,class=CODE,delta=1
    90                           	psect	text72,global,reloc=2,class=CODE,delta=1
    91                           	psect	text73,global,reloc=2,class=CODE,delta=1
    92                           	psect	text74,global,reloc=2,class=CODE,delta=1
    93                           	psect	text75,global,reloc=2,class=CODE,delta=1
    94                           	psect	text76,global,reloc=2,class=CODE,delta=1
    95                           	psect	text77,global,reloc=2,class=CODE,delta=1
    96                           	psect	text78,global,reloc=2,class=CODE,delta=1
    97                           	psect	text79,global,reloc=2,class=CODE,delta=1
    98                           	psect	text80,global,reloc=2,class=CODE,delta=1
    99                           	psect	text81,global,reloc=2,class=CODE,delta=1
   100                           	psect	text82,global,reloc=2,class=CODE,delta=1
   101                           	psect	text83,global,reloc=2,class=CODE,delta=1
   102                           	psect	text84,global,reloc=2,class=CODE,delta=1
   103                           	psect	text85,global,reloc=2,class=CODE,delta=1
   104                           	psect	text86,global,reloc=2,class=CODE,delta=1
   105                           	psect	text87,global,reloc=2,class=CODE,delta=1
   106                           	psect	text88,global,reloc=2,class=CODE,delta=1
   107                           	psect	text89,global,reloc=2,class=CODE,delta=1
   108                           	psect	text90,global,reloc=2,class=CODE,delta=1
   109                           	psect	text91,global,reloc=2,class=CODE,delta=1
   110                           	psect	text92,global,reloc=2,class=CODE,delta=1
   111                           	psect	text93,global,reloc=2,class=CODE,delta=1
   112                           	psect	text94,global,reloc=2,class=CODE,delta=1
   113                           	psect	text95,global,reloc=2,class=CODE,delta=1
   114                           	psect	text96,global,reloc=2,class=CODE,delta=1
   115                           	psect	text97,global,reloc=2,class=CODE,delta=1
   116                           	psect	text98,global,reloc=2,class=CODE,delta=1
   117                           	psect	text99,global,reloc=2,class=CODE,delta=1
   118                           	psect	text100,global,reloc=2,class=CODE,delta=1
   119                           	psect	text101,global,reloc=2,class=CODE,delta=1
   120                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   121                           	psect	text103,global,reloc=2,class=CODE,delta=1
   122                           	psect	text104,global,reloc=2,class=CODE,delta=1
   123                           	psect	text105,global,reloc=2,class=CODE,delta=1
   124                           	psect	text106,global,reloc=2,class=CODE,delta=1
   125                           	psect	text107,global,reloc=2,class=CODE,delta=1
   126                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   127                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   128                           	psect	text109,global,reloc=2,class=CODE,delta=1
   129                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   130                           	psect	text110,global,reloc=2,class=CODE,delta=1
   131                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   132                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   133                           	psect	pa_nodes,global,class=CODE,delta=1
   134                           	dabs	1,0xE7E,2,_errataTemp
   135  0000                     tosu	equ	0xFFF
   136                           tosh	equ	0xFFE
   137                           tosl	equ	0xFFD
   138                           pclath	equ	0xFFA
   139                           tblptru	equ	0xFF8
   140                           tblptrh	equ	0xFF7
   141                           tblptrl	equ	0xFF6
   142                           tablat	equ	0xFF5
   143                           prodh	equ	0xFF4
   144                           prodl	equ	0xFF3
   145                           intcon	equ	0xFF2
   146                           indf0	equ	0xFEF
   147                           postinc0	equ	0xFEE
   148                           fsr0h	equ	0xFEA
   149                           fsr0l	equ	0xFE9
   150                           wreg	equ	0xFE8
   151                           indf1	equ	0xFE7
   152                           postinc1	equ	0xFE6
   153                           postdec1	equ	0xFE5
   154                           plusw1	equ	0xFE3
   155                           fsr1h	equ	0xFE2
   156                           fsr1l	equ	0xFE1
   157                           indf2	equ	0xFDF
   158                           postinc2	equ	0xFDE
   159                           postdec2	equ	0xFDD
   160                           plusw2	equ	0xFDB
   161                           fsr2h	equ	0xFDA
   162                           fsr2l	equ	0xFD9
   163                           status	equ	0xFD8
   164                           
   165                           	psect	idataCOMRAM
   166  0064CA                     __pidataCOMRAM:
   167                           	opt stack 0
   168                           
   169                           ;initializer for _clientState
   170  0064CA  01                 	db	1
   171                           tosu	equ	0xFFF
   172                           tosh	equ	0xFFE
   173                           tosl	equ	0xFFD
   174                           pclath	equ	0xFFA
   175                           tblptru	equ	0xFF8
   176                           tblptrh	equ	0xFF7
   177                           tblptrl	equ	0xFF6
   178                           tablat	equ	0xFF5
   179                           prodh	equ	0xFF4
   180                           prodl	equ	0xFF3
   181                           intcon	equ	0xFF2
   182                           indf0	equ	0xFEF
   183                           postinc0	equ	0xFEE
   184                           fsr0h	equ	0xFEA
   185                           fsr0l	equ	0xFE9
   186                           wreg	equ	0xFE8
   187                           indf1	equ	0xFE7
   188                           postinc1	equ	0xFE6
   189                           postdec1	equ	0xFE5
   190                           plusw1	equ	0xFE3
   191                           fsr1h	equ	0xFE2
   192                           fsr1l	equ	0xFE1
   193                           indf2	equ	0xFDF
   194                           postinc2	equ	0xFDE
   195                           postdec2	equ	0xFDD
   196                           plusw2	equ	0xFDB
   197                           fsr2h	equ	0xFDA
   198                           fsr2l	equ	0xFD9
   199                           status	equ	0xFD8
   200                           
   201                           	psect	smallconst
   202  001000                     __psmallconst:
   203                           	opt stack 0
   204  001000  00                 	db	0
   205  001001                     _dpowers:
   206                           	opt stack 0
   207  001001  0001               	dw	1
   208  001003  000A               	dw	10
   209  001005  0064               	dw	100
   210  001007  03E8               	dw	1000
   211  001009  2710               	dw	10000
   212  00100B                     __end_of_dpowers:
   213                           	opt stack 0
   214  00100B                     _hexpowers:
   215                           	opt stack 0
   216  00100B  0001               	dw	1
   217  00100D  0010               	dw	16
   218  00100F  0100               	dw	256
   219  001011  1000               	dw	4096
   220  001013                     __end_of_hexpowers:
   221                           	opt stack 0
   222  001013                     _dhcpName:
   223                           	opt stack 0
   224  001013  50                 	db	80
   225  001014  49                 	db	73
   226  001015  43                 	db	67
   227  001016  31                 	db	49
   228  001017  38                 	db	56
   229  001018  46                 	db	70
   230  001019  39                 	db	57
   231  00101A  37                 	db	55
   232  00101B  4A                 	db	74
   233  00101C  36                 	db	54
   234  00101D  30                 	db	48
   235  00101E  20                 	db	32
   236  00101F  45                 	db	69
   237  001020  54                 	db	84
   238  001021  48                 	db	72
   239  001022  45                 	db	69
   240  001023  52                 	db	82
   241  001024  4E                 	db	78
   242  001025  45                 	db	69
   243  001026  54                 	db	84
   244  001027  00                 	db	0
   245  001028                     __end_of_dhcpName:
   246                           	opt stack 0
   247  001028                     _broadcastMAC:
   248                           	opt stack 0
   249  001028  FF                 	db	255
   250  001029  FF                 	db	255
   251  00102A  FF                 	db	255
   252  00102B  FF                 	db	255
   253  00102C  FF                 	db	255
   254  00102D  FF                 	db	255
   255  00102E                     __end_of_broadcastMAC:
   256                           	opt stack 0
   257  00102E                     _macAddress:
   258                           	opt stack 0
   259  00102E  00                 	db	0
   260  00102F  DE                 	db	222
   261  001030  AD                 	db	173
   262  001031  00                 	db	0
   263  001032  BE                 	db	190
   264  001033  EF                 	db	239
   265  001034                     __end_of_macAddress:
   266                           	opt stack 0
   267  001034                     _UDP_CallBackTable:
   268                           	opt stack 0
   269  001034  0044               	dw	68
   270  001036  7C                 	db	low _DHCP_Handler
   271  001037  39                 	db	high _DHCP_Handler
   272  001038  00                 	db	low (_DHCP_Handler shr (0+16))
   273  001039                     __end_of_UDP_CallBackTable:
   274                           	opt stack 0
   275  001039                     STR_3:
   276  001039  0D                 	db	13
   277  00103A  0A                 	db	10
   278  00103B  0D                 	db	13
   279  00103C  0A                 	db	10
   280  00103D  53                 	db	83	;'S'
   281  00103E  74                 	db	116	;'t'
   282  00103F  61                 	db	97	;'a'
   283  001040  72                 	db	114	;'r'
   284  001041  74                 	db	116	;'t'
   285  001042  69                 	db	105	;'i'
   286  001043  6E                 	db	110	;'n'
   287  001044  67                 	db	103	;'g'
   288  001045  20                 	db	32
   289  001046  53                 	db	83	;'S'
   290  001047  79                 	db	121	;'y'
   291  001048  73                 	db	115	;'s'
   292  001049  6C                 	db	108	;'l'
   293  00104A  6F                 	db	111	;'o'
   294  00104B  67                 	db	103	;'g'
   295  00104C  20                 	db	32
   296  00104D  61                 	db	97	;'a'
   297  00104E  74                 	db	116	;'t'
   298  00104F  20                 	db	32
   299  001050  25                 	db	37
   300  001051  75                 	db	117	;'u'
   301  001052  0D                 	db	13
   302  001053  0A                 	db	10
   303  001054  00                 	db	0
   304  001055                     STR_11:
   305  001055  30                 	db	48	;'0'
   306  001056  31                 	db	49	;'1'
   307  001057  32                 	db	50	;'2'
   308  001058  33                 	db	51	;'3'
   309  001059  34                 	db	52	;'4'
   310  00105A  35                 	db	53	;'5'
   311  00105B  36                 	db	54	;'6'
   312  00105C  37                 	db	55	;'7'
   313  00105D  38                 	db	56	;'8'
   314  00105E  39                 	db	57	;'9'
   315  00105F  61                 	db	97	;'a'
   316  001060  62                 	db	98	;'b'
   317  001061  63                 	db	99	;'c'
   318  001062  64                 	db	100	;'d'
   319  001063  65                 	db	101	;'e'
   320  001064  66                 	db	102	;'f'
   321  001065  00                 	db	0
   322  001066                     STR_7:
   323  001066  57                 	db	87	;'W'
   324  001067  61                 	db	97	;'a'
   325  001068  69                 	db	105	;'i'
   326  001069  74                 	db	116	;'t'
   327  00106A  69                 	db	105	;'i'
   328  00106B  6E                 	db	110	;'n'
   329  00106C  67                 	db	103	;'g'
   330  00106D  20                 	db	32
   331  00106E  66                 	db	102	;'f'
   332  00106F  6F                 	db	111	;'o'
   333  001070  72                 	db	114	;'r'
   334  001071  20                 	db	32
   335  001072  4C                 	db	76	;'L'
   336  001073  69                 	db	105	;'i'
   337  001074  6E                 	db	110	;'n'
   338  001075  6B                 	db	107	;'k'
   339  001076  00                 	db	0
   340  001077                     STR_1:
   341  001077  44                 	db	68	;'D'
   342  001078  4D                 	db	77	;'M'
   343  001079  41                 	db	65	;'A'
   344  00107A  20                 	db	32
   345  00107B  54                 	db	84	;'T'
   346  00107C  49                 	db	73	;'I'
   347  00107D  4D                 	db	77	;'M'
   348  00107E  45                 	db	69	;'E'
   349  00107F  4F                 	db	79	;'O'
   350  001080  55                 	db	85	;'U'
   351  001081  54                 	db	84	;'T'
   352  001082  21                 	db	33
   353  001083  21                 	db	33
   354  001084  21                 	db	33
   355  001085  00                 	db	0
   356  001086                     STR_8:
   357  001086  4C                 	db	76	;'L'
   358  001087  69                 	db	105	;'i'
   359  001088  6E                 	db	110	;'n'
   360  001089  6B                 	db	107	;'k'
   361  00108A  20                 	db	32
   362  00108B  73                 	db	115	;'s'
   363  00108C  74                 	db	116	;'t'
   364  00108D  61                 	db	97	;'a'
   365  00108E  72                 	db	114	;'r'
   366  00108F  74                 	db	116	;'t'
   367  001090  65                 	db	101	;'e'
   368  001091  64                 	db	100	;'d'
   369  001092  00                 	db	0
   370  001093                     STR_9:
   371  001093  25                 	db	37
   372  001094  64                 	db	100	;'d'
   373  001095  2E                 	db	46
   374  001096  25                 	db	37
   375  001097  64                 	db	100	;'d'
   376  001098  2E                 	db	46
   377  001099  25                 	db	37
   378  00109A  64                 	db	100	;'d'
   379  00109B  2E                 	db	46
   380  00109C  25                 	db	37
   381  00109D  64                 	db	100	;'d'
   382  00109E  00                 	db	0
   383  00109F                     STR_5:
   384  00109F  4E                 	db	78	;'N'
   385  0010A0  4F                 	db	79	;'O'
   386  0010A1  20                 	db	32
   387  0010A2  4C                 	db	76	;'L'
   388  0010A3  49                 	db	73	;'I'
   389  0010A4  4E                 	db	78	;'N'
   390  0010A5  4B                 	db	75	;'K'
   391  0010A6  45                 	db	69	;'E'
   392  0010A7  44                 	db	68	;'D'
   393  0010A8  00                 	db	0
   394  0010A9                     STR_4:
   395  0010A9  25                 	db	37
   396  0010AA  75                 	db	117	;'u'
   397  0010AB  20                 	db	32
   398  0010AC  3A                 	db	58	;':'
   399  0010AD  20                 	db	32
   400  0010AE  25                 	db	37
   401  0010AF  73                 	db	115	;'s'
   402  0010B0  0D                 	db	13
   403  0010B1  0A                 	db	10
   404  0010B2  00                 	db	0
   405  0010B3                     STR_2:
   406  0010B3  25                 	db	37
   407  0010B4  78                 	db	120	;'x'
   408  0010B5  20                 	db	32
   409  0010B6  3A                 	db	58	;':'
   410  0010B7  20                 	db	32
   411  0010B8  25                 	db	37
   412  0010B9  64                 	db	100	;'d'
   413  0010BA  00                 	db	0
   414  0010BB                     STR_10:
   415  0010BB  28                 	db	40
   416  0010BC  6E                 	db	110	;'n'
   417  0010BD  75                 	db	117	;'u'
   418  0010BE  6C                 	db	108	;'l'
   419  0010BF  6C                 	db	108	;'l'
   420  0010C0  29                 	db	41
   421  0010C1  00                 	db	0
   422  0000                     
   423                           ; #config settings
   424  0010C2  00                 	db	0	; dummy byte at the end
   425  0000                     tosu	equ	0xFFF
   426                           tosh	equ	0xFFE
   427                           tosl	equ	0xFFD
   428                           pclath	equ	0xFFA
   429                           tblptru	equ	0xFF8
   430                           tblptrh	equ	0xFF7
   431                           tblptrl	equ	0xFF6
   432                           tablat	equ	0xFF5
   433                           prodh	equ	0xFF4
   434                           prodl	equ	0xFF3
   435                           intcon	equ	0xFF2
   436                           indf0	equ	0xFEF
   437                           postinc0	equ	0xFEE
   438                           fsr0h	equ	0xFEA
   439                           fsr0l	equ	0xFE9
   440                           wreg	equ	0xFE8
   441                           indf1	equ	0xFE7
   442                           postinc1	equ	0xFE6
   443                           postdec1	equ	0xFE5
   444                           plusw1	equ	0xFE3
   445                           fsr1h	equ	0xFE2
   446                           fsr1l	equ	0xFE1
   447                           indf2	equ	0xFDF
   448                           postinc2	equ	0xFDE
   449                           postdec2	equ	0xFDD
   450                           plusw2	equ	0xFDB
   451                           fsr2h	equ	0xFDA
   452                           fsr2l	equ	0xFD9
   453                           status	equ	0xFD8
   454                           
   455                           	psect	nvBANK2
   456  0002D4                     __pnvBANK2:
   457                           	opt stack 0
   458  0002D4                     _deviceTime:
   459                           	opt stack 0
   460  0002D4                     	ds	4
   461  0002D8                     _localTime:
   462                           	opt stack 0
   463  0002D8                     	ds	4
   464  0000                     _EDMADST	set	3828
   465  0000                     _EDMAND	set	3826
   466  0000                     _EDMAST	set	3824
   467  0000                     _ERXND	set	3818
   468  0000                     _ERXRDPT	set	3820
   469  0000                     _ERXST	set	3816
   470  0000                     _ETXND	set	3814
   471  0000                     _ETXST	set	3812
   472  0000                     _EWRPT	set	3810
   473  0000                     _MAIPG	set	3750
   474  0000                     _MAMXFL	set	3754
   475  0000                     _MIRD	set	3768
   476  0000                     _MIWR	set	3766
   477  0000                     _ECON2	set	3838
   478  0000                     _EIE	set	3835
   479  0000                     _EIEbits	set	3835
   480  0000                     _EPKTCNT	set	3801
   481  0000                     _ERXFCON	set	3800
   482  0000                     _ESTATbits	set	3837
   483  0000                     _MAADR1	set	3716
   484  0000                     _MAADR2	set	3717
   485  0000                     _MAADR3	set	3714
   486  0000                     _MAADR4	set	3715
   487  0000                     _MAADR5	set	3712
   488  0000                     _MAADR6	set	3713
   489  0000                     _MABBIPG	set	3748
   490  0000                     _MACON1	set	3744
   491  0000                     _MACON3	set	3746
   492  0000                     _MACON4	set	3747
   493  0000                     _MICMD	set	3762
   494  0000                     _MICMDbits	set	3762
   495  0000                     _MIREGADR	set	3764
   496  0000                     _MISTATbits	set	3722
   497  0000                     _ERDPT	set	3962
   498  0000                     _TMR1	set	4046
   499  0000                     _BAUDCON1	set	3966
   500  0000                     _BAUDCON1bits	set	3966
   501  0000                     _ECON1	set	4050
   502  0000                     _ECON1bits	set	4050
   503  0000                     _EIRbits	set	3936
   504  0000                     _INTCON	set	4082
   505  0000                     _IPR2bits	set	4002
   506  0000                     _LATE	set	3981
   507  0000                     _LATH	set	3984
   508  0000                     _LATJ	set	3985
   509  0000                     _OSCCON	set	4051
   510  0000                     _OSCTUNE	set	3995
   511  0000                     _PIE2bits	set	4000
   512  0000                     _PIR2bits	set	4001
   513  0000                     _PORTBbits	set	3969
   514  0000                     _PORTJ	set	3976
   515  0000                     _PORTJbits	set	3976
   516  0000                     _SPBRG1	set	4015
   517  0000                     _SSP1CON1	set	4038
   518  0000                     _SSP1CON1bits	set	4038
   519  0000                     _SSP1STATbits	set	4039
   520  0000                     _TRISA	set	3986
   521  0000                     _TRISB	set	3987
   522  0000                     _TRISBbits	set	3987
   523  0000                     _TRISCbits	set	3988
   524  0000                     _TRISD	set	3989
   525  0000                     _TRISE	set	3990
   526  0000                     _TRISH	set	3993
   527  0000                     _TRISJ	set	3994
   528  0000                     _TXREG1	set	4013
   529  0000                     _TXSTA1	set	4012
   530  0000                     _CREN1	set	32092
   531  0000                     _GIE	set	32663
   532  0000                     _GIEH	set	32663
   533  0000                     _GIEL	set	32662
   534  0000                     _IPEN	set	32391
   535  0000                     _LATH0	set	31872
   536  0000                     _LATH1	set	31873
   537  0000                     _LATH2	set	31874
   538  0000                     _SPEN1	set	32095
   539  0000                     _T1CKPS0	set	32364
   540  0000                     _T1CKPS1	set	32365
   541  0000                     _T1OSCEN	set	32363
   542  0000                     _T1SYNC	set	32362
   543  0000                     _TMR1CS	set	32361
   544  0000                     _TMR1IE	set	31976
   545  0000                     _TMR1IF	set	31984
   546  0000                     _TMR1IP	set	31992
   547  0000                     _TMR1ON	set	32360
   548  0000                     _TX1IF	set	31988
   549                           tosu	equ	0xFFF
   550                           tosh	equ	0xFFE
   551                           tosl	equ	0xFFD
   552                           pclath	equ	0xFFA
   553                           tblptru	equ	0xFF8
   554                           tblptrh	equ	0xFF7
   555                           tblptrl	equ	0xFF6
   556                           tablat	equ	0xFF5
   557                           prodh	equ	0xFF4
   558                           prodl	equ	0xFF3
   559                           intcon	equ	0xFF2
   560                           indf0	equ	0xFEF
   561                           postinc0	equ	0xFEE
   562                           fsr0h	equ	0xFEA
   563                           fsr0l	equ	0xFE9
   564                           wreg	equ	0xFE8
   565                           indf1	equ	0xFE7
   566                           postinc1	equ	0xFE6
   567                           postdec1	equ	0xFE5
   568                           plusw1	equ	0xFE3
   569                           fsr1h	equ	0xFE2
   570                           fsr1l	equ	0xFE1
   571                           indf2	equ	0xFDF
   572                           postinc2	equ	0xFDE
   573                           postdec2	equ	0xFDD
   574                           plusw2	equ	0xFDB
   575                           fsr2h	equ	0xFDA
   576                           fsr2l	equ	0xFD9
   577                           status	equ	0xFD8
   578                           
   579                           	psect	cinit
   580  005C72                     __pcinit:
   581                           	opt stack 0
   582  005C72                     start_initialization:
   583                           	opt stack 0
   584  005C72                     __initialization:
   585                           	opt stack 0
   586                           
   587                           ; Initialize objects allocated to COMRAM (1 bytes)
   588                           ; load TBLPTR registers with __pidataCOMRAM
   589  005C72  0ECA               	movlw	low __pidataCOMRAM
   590  005C74  6EF6               	movwf	tblptrl,c
   591  005C76  0E64               	movlw	high __pidataCOMRAM
   592  005C78  6EF7               	movwf	tblptrh,c
   593  005C7A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   594  005C7C  6EF8               	movwf	tblptru,c
   595  005C7E  0009               	tblrd		*+	;fetch initializer
   596  005C80  CFF5 F048          	movff	tablat,__pdataCOMRAM
   597                           
   598                           ; Clear objects allocated to BANK3 (104 bytes)
   599  005C84  EE03  F000         	lfsr	0,__pbssBANK3
   600  005C88  0E68               	movlw	104
   601  005C8A                     clear_0:
   602  005C8A  6AEE               	clrf	postinc0,c
   603  005C8C  06E8               	decf	wreg,f,c
   604  005C8E  E1FD               	bnz	clear_0
   605                           
   606                           ; Clear objects allocated to BANK2 (167 bytes)
   607  005C90  EE02  F000         	lfsr	0,__pbssBANK2
   608  005C94  0EA7               	movlw	167
   609  005C96                     clear_1:
   610  005C96  6AEE               	clrf	postinc0,c
   611  005C98  06E8               	decf	wreg,f,c
   612  005C9A  E1FD               	bnz	clear_1
   613                           
   614                           ; Clear objects allocated to BANK1 (45 bytes)
   615  005C9C  EE01  F0BD         	lfsr	0,__pbssBANK1
   616  005CA0  0E2D               	movlw	45
   617  005CA2                     clear_2:
   618  005CA2  6AEE               	clrf	postinc0,c
   619  005CA4  06E8               	decf	wreg,f,c
   620  005CA6  E1FD               	bnz	clear_2
   621                           
   622                           ; Clear objects allocated to COMRAM (21 bytes)
   623  005CA8  EE00  F033         	lfsr	0,__pbssCOMRAM
   624  005CAC  0E15               	movlw	21
   625  005CAE                     clear_3:
   626  005CAE  6AEE               	clrf	postinc0,c
   627  005CB0  06E8               	decf	wreg,f,c
   628  005CB2  E1FD               	bnz	clear_3
   629  005CB4                     end_of_initialization:
   630                           	opt stack 0
   631  005CB4                     __end_of__initialization:
   632                           	opt stack 0
   633  005CB4  9049               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   634  005CB6  9249               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   635  005CB8  0100               	movlb	0
   636  005CBA  EF8F  F026         	goto	_main	;jump to C main() function
   637                           tosu	equ	0xFFF
   638                           tosh	equ	0xFFE
   639                           tosl	equ	0xFFD
   640                           pclath	equ	0xFFA
   641                           tblptru	equ	0xFF8
   642                           tblptrh	equ	0xFF7
   643                           tblptrl	equ	0xFF6
   644                           tablat	equ	0xFF5
   645                           prodh	equ	0xFF4
   646                           prodl	equ	0xFF3
   647                           intcon	equ	0xFF2
   648                           indf0	equ	0xFEF
   649                           postinc0	equ	0xFEE
   650                           fsr0h	equ	0xFEA
   651                           fsr0l	equ	0xFE9
   652                           wreg	equ	0xFE8
   653                           indf1	equ	0xFE7
   654                           postinc1	equ	0xFE6
   655                           postdec1	equ	0xFE5
   656                           plusw1	equ	0xFE3
   657                           fsr1h	equ	0xFE2
   658                           fsr1l	equ	0xFE1
   659                           indf2	equ	0xFDF
   660                           postinc2	equ	0xFDE
   661                           postdec2	equ	0xFDD
   662                           plusw2	equ	0xFDB
   663                           fsr2h	equ	0xFDA
   664                           fsr2l	equ	0xFD9
   665                           status	equ	0xFD8
   666                           
   667                           	psect	bssCOMRAM
   668  000033                     __pbssCOMRAM:
   669                           	opt stack 0
   670  000033                     _ipv4Address:
   671                           	opt stack 0
   672  000033                     	ds	4
   673  000037                     _receivedRemoteAddress:
   674                           	opt stack 0
   675  000037                     	ds	4
   676  00003B                     _currentTCB:
   677                           	opt stack 0
   678  00003B                     	ds	2
   679  00003D                     _nextAvailablePort:
   680                           	opt stack 0
   681  00003D                     	ds	2
   682  00003F                     _nextPacketPointer:
   683                           	opt stack 0
   684  00003F                     	ds	2
   685  000041                     _tcbList:
   686                           	opt stack 0
   687  000041                     	ds	2
   688  000043                     _tcpMss:
   689                           	opt stack 0
   690  000043                     	ds	2
   691  000045                     TCP_Server@U1:
   692                           	opt stack 0
   693  000045                     	ds	1
   694  000046                     TCP_Server@U2:
   695                           	opt stack 0
   696  000046                     	ds	1
   697  000047                     _tcbListSize:
   698                           	opt stack 0
   699  000047                     	ds	1
   700                           tosu	equ	0xFFF
   701                           tosh	equ	0xFFE
   702                           tosl	equ	0xFFD
   703                           pclath	equ	0xFFA
   704                           tblptru	equ	0xFF8
   705                           tblptrh	equ	0xFF7
   706                           tblptrl	equ	0xFF6
   707                           tablat	equ	0xFF5
   708                           prodh	equ	0xFF4
   709                           prodl	equ	0xFF3
   710                           intcon	equ	0xFF2
   711                           indf0	equ	0xFEF
   712                           postinc0	equ	0xFEE
   713                           fsr0h	equ	0xFEA
   714                           fsr0l	equ	0xFE9
   715                           wreg	equ	0xFE8
   716                           indf1	equ	0xFE7
   717                           postinc1	equ	0xFE6
   718                           postdec1	equ	0xFE5
   719                           plusw1	equ	0xFE3
   720                           fsr1h	equ	0xFE2
   721                           fsr1l	equ	0xFE1
   722                           indf2	equ	0xFDF
   723                           postinc2	equ	0xFDE
   724                           postdec2	equ	0xFDD
   725                           plusw2	equ	0xFDB
   726                           fsr2h	equ	0xFDA
   727                           fsr2l	equ	0xFD9
   728                           status	equ	0xFD8
   729                           
   730                           	psect	dataCOMRAM
   731  000048                     __pdataCOMRAM:
   732                           	opt stack 0
   733  000048                     _clientState:
   734                           	opt stack 0
   735  000048                     	ds	1
   736                           tosu	equ	0xFFF
   737                           tosh	equ	0xFFE
   738                           tosl	equ	0xFFD
   739                           pclath	equ	0xFFA
   740                           tblptru	equ	0xFF8
   741                           tblptrh	equ	0xFF7
   742                           tblptrl	equ	0xFF6
   743                           tablat	equ	0xFF5
   744                           prodh	equ	0xFF4
   745                           prodl	equ	0xFF3
   746                           intcon	equ	0xFF2
   747                           indf0	equ	0xFEF
   748                           postinc0	equ	0xFEE
   749                           fsr0h	equ	0xFEA
   750                           fsr0l	equ	0xFE9
   751                           wreg	equ	0xFE8
   752                           indf1	equ	0xFE7
   753                           postinc1	equ	0xFE6
   754                           postdec1	equ	0xFE5
   755                           plusw1	equ	0xFE3
   756                           fsr1h	equ	0xFE2
   757                           fsr1l	equ	0xFE1
   758                           indf2	equ	0xFDF
   759                           postinc2	equ	0xFDE
   760                           postdec2	equ	0xFDD
   761                           plusw2	equ	0xFDB
   762                           fsr2h	equ	0xFDA
   763                           fsr2l	equ	0xFD9
   764                           status	equ	0xFD8
   765                           
   766                           	psect	bssBANK1
   767  0001BD                     __pbssBANK1:
   768                           	opt stack 0
   769  0001BD                     _ethData:
   770                           	opt stack 0
   771  0001BD                     	ds	7
   772  0001C4                     _dhcpLeaseTime:
   773                           	opt stack 0
   774  0001C4                     	ds	4
   775  0001C8                     _ipv4SubnetMask:
   776                           	opt stack 0
   777  0001C8                     	ds	4
   778  0001CC                     _rxPacketStatusVector:
   779                           	opt stack 0
   780  0001CC                     	ds	4
   781  0001D0                     _rcvPayloadLen:
   782                           	opt stack 0
   783  0001D0                     	ds	2
   784  0001D2                     _tcpHeader:
   785                           	opt stack 0
   786  0001D2                     	ds	20
   787  0001E6                     _arpTimer:
   788                           	opt stack 0
   789  0001E6                     	ds	4
   790                           tosu	equ	0xFFF
   791                           tosh	equ	0xFFE
   792                           tosl	equ	0xFFD
   793                           pclath	equ	0xFFA
   794                           tblptru	equ	0xFF8
   795                           tblptrh	equ	0xFF7
   796                           tblptrl	equ	0xFF6
   797                           tablat	equ	0xFF5
   798                           prodh	equ	0xFF4
   799                           prodl	equ	0xFF3
   800                           intcon	equ	0xFF2
   801                           indf0	equ	0xFEF
   802                           postinc0	equ	0xFEE
   803                           fsr0h	equ	0xFEA
   804                           fsr0l	equ	0xFE9
   805                           wreg	equ	0xFE8
   806                           indf1	equ	0xFE7
   807                           postinc1	equ	0xFE6
   808                           postdec1	equ	0xFE5
   809                           plusw1	equ	0xFE3
   810                           fsr1h	equ	0xFE2
   811                           fsr1l	equ	0xFE1
   812                           indf2	equ	0xFDF
   813                           postinc2	equ	0xFDE
   814                           postdec2	equ	0xFDD
   815                           plusw2	equ	0xFDB
   816                           fsr2h	equ	0xFDA
   817                           fsr2l	equ	0xFD9
   818                           status	equ	0xFD8
   819                           
   820                           	psect	bssBANK2
   821  000200                     __pbssBANK2:
   822                           	opt stack 0
   823  000200                     _led_values:
   824                           	opt stack 0
   825  000200                     	ds	16
   826  000210                     _ipv4DNS:
   827                           	opt stack 0
   828  000210                     	ds	8
   829  000218                     Network_Manage@nowPv:
   830                           	opt stack 0
   831  000218                     	ds	4
   832  00021C                     _dhcpServerId:
   833                           	opt stack 0
   834  00021C                     	ds	4
   835  000220                     _ipv4Router:
   836                           	opt stack 0
   837  000220                     	ds	4
   838  000224                     _nextSequenceNumber:
   839                           	opt stack 0
   840  000224                     	ds	4
   841  000228                     _remoteIpv4Address:
   842                           	opt stack 0
   843  000228                     	ds	4
   844  00022C                     TCP_Server@port7TCB:
   845                           	opt stack 0
   846  00022C                     	ds	55
   847  000263                     TCP_Server@rxdataPort7:
   848                           	opt stack 0
   849  000263                     	ds	20
   850  000277                     TCP_Server@txdataPort7:
   851                           	opt stack 0
   852  000277                     	ds	20
   853  00028B                     _ipv4Header:
   854                           	opt stack 0
   855  00028B                     	ds	20
   856  00029F                     _udpHeader:
   857                           	opt stack 0
   858  00029F                     	ds	8
   859                           tosu	equ	0xFFF
   860                           tosh	equ	0xFFE
   861                           tosl	equ	0xFFD
   862                           pclath	equ	0xFFA
   863                           tblptru	equ	0xFF8
   864                           tblptrh	equ	0xFF7
   865                           tblptrl	equ	0xFF6
   866                           tablat	equ	0xFF5
   867                           prodh	equ	0xFF4
   868                           prodl	equ	0xFF3
   869                           intcon	equ	0xFF2
   870                           indf0	equ	0xFEF
   871                           postinc0	equ	0xFEE
   872                           fsr0h	equ	0xFEA
   873                           fsr0l	equ	0xFE9
   874                           wreg	equ	0xFE8
   875                           indf1	equ	0xFE7
   876                           postinc1	equ	0xFE6
   877                           postdec1	equ	0xFE5
   878                           plusw1	equ	0xFE3
   879                           fsr1h	equ	0xFE2
   880                           fsr1l	equ	0xFE1
   881                           indf2	equ	0xFDF
   882                           postinc2	equ	0xFDE
   883                           postdec2	equ	0xFDD
   884                           plusw2	equ	0xFDB
   885                           fsr2h	equ	0xFDA
   886                           fsr2l	equ	0xFD9
   887                           status	equ	0xFD8
   888                           
   889                           	psect	bssBANK3
   890  000300                     __pbssBANK3:
   891                           	opt stack 0
   892  000300                     _arpMap:
   893                           	opt stack 0
   894  000300                     	ds	104
   895                           tosu	equ	0xFFF
   896                           tosh	equ	0xFFE
   897                           tosl	equ	0xFFD
   898                           pclath	equ	0xFFA
   899                           tblptru	equ	0xFF8
   900                           tblptrh	equ	0xFF7
   901                           tblptrl	equ	0xFF6
   902                           tablat	equ	0xFF5
   903                           prodh	equ	0xFF4
   904                           prodl	equ	0xFF3
   905                           intcon	equ	0xFF2
   906                           indf0	equ	0xFEF
   907                           postinc0	equ	0xFEE
   908                           fsr0h	equ	0xFEA
   909                           fsr0l	equ	0xFE9
   910                           wreg	equ	0xFE8
   911                           indf1	equ	0xFE7
   912                           postinc1	equ	0xFE6
   913                           postdec1	equ	0xFE5
   914                           plusw1	equ	0xFE3
   915                           fsr1h	equ	0xFE2
   916                           fsr1l	equ	0xFE1
   917                           indf2	equ	0xFDF
   918                           postinc2	equ	0xFDE
   919                           postdec2	equ	0xFDD
   920                           plusw2	equ	0xFDB
   921                           fsr2h	equ	0xFDA
   922                           fsr2l	equ	0xFD9
   923                           status	equ	0xFD8
   924                           
   925                           	psect	cstackBANK2
   926  0002A7                     __pcstackBANK2:
   927                           	opt stack 0
   928  0002A7                     main@old_ip:
   929                           	opt stack 0
   930                           
   931                           ; 4 bytes @ 0x0
   932  0002A7                     	ds	4
   933  0002AB                     main@t:
   934                           	opt stack 0
   935                           
   936                           ; 4 bytes @ 0x4
   937  0002AB                     	ds	4
   938  0002AF                     main@no_ip_display:
   939                           	opt stack 0
   940                           
   941                           ; 1 bytes @ 0x8
   942  0002AF                     	ds	1
   943  0002B0                     main@str:
   944                           	opt stack 0
   945                           
   946                           ; 32 bytes @ 0x9
   947  0002B0                     	ds	32
   948  0002D0                     main@ip:
   949                           	opt stack 0
   950                           
   951                           ; 4 bytes @ 0x29
   952  0002D0                     	ds	4
   953                           tosu	equ	0xFFF
   954                           tosh	equ	0xFFE
   955                           tosl	equ	0xFFD
   956                           pclath	equ	0xFFA
   957                           tblptru	equ	0xFF8
   958                           tblptrh	equ	0xFF7
   959                           tblptrl	equ	0xFF6
   960                           tablat	equ	0xFF5
   961                           prodh	equ	0xFF4
   962                           prodl	equ	0xFF3
   963                           intcon	equ	0xFF2
   964                           indf0	equ	0xFEF
   965                           postinc0	equ	0xFEE
   966                           fsr0h	equ	0xFEA
   967                           fsr0l	equ	0xFE9
   968                           wreg	equ	0xFE8
   969                           indf1	equ	0xFE7
   970                           postinc1	equ	0xFE6
   971                           postdec1	equ	0xFE5
   972                           plusw1	equ	0xFE3
   973                           fsr1h	equ	0xFE2
   974                           fsr1l	equ	0xFE1
   975                           indf2	equ	0xFDF
   976                           postinc2	equ	0xFDE
   977                           postdec2	equ	0xFDD
   978                           plusw2	equ	0xFDB
   979                           fsr2h	equ	0xFDA
   980                           fsr2l	equ	0xFD9
   981                           status	equ	0xFD8
   982                           
   983                           	psect	cstackBANK1
   984  000100                     __pcstackBANK1:
   985                           	opt stack 0
   986  000100                     ??_TCP_FiniteStateMachine:
   987                           
   988                           ; 1 bytes @ 0x0
   989  000100                     	ds	12
   990  00010C                     TCP_FiniteStateMachine@ret:
   991                           	opt stack 0
   992                           
   993                           ; 1 bytes @ 0xC
   994  00010C                     	ds	1
   995  00010D                     TCP_FiniteStateMachine@notAckBytes:
   996                           	opt stack 0
   997                           
   998                           ; 2 bytes @ 0xD
   999  00010D                     	ds	2
  1000  00010F                     TCP_FiniteStateMachine@event:
  1001                           	opt stack 0
  1002                           
  1003                           ; 1 bytes @ 0xF
  1004  00010F                     	ds	1
  1005  000110                     TCP_FiniteStateMachine@nextState:
  1006                           	opt stack 0
  1007                           
  1008                           ; 1 bytes @ 0x10
  1009  000110                     	ds	1
  1010  000111                     ??_TCP_Update:
  1011  000111                     TCP_Listen@tcbPtr:
  1012                           	opt stack 0
  1013  000111                     TCP_Recv@remoteAddress:
  1014                           	opt stack 0
  1015                           
  1016                           ; 4 bytes @ 0x11
  1017  000111                     	ds	2
  1018  000113                     
  1019                           ; 1 bytes @ 0x13
  1020  000113                     	ds	2
  1021  000115                     TCP_Recv@length:
  1022                           	opt stack 0
  1023  000115                     TCP_Server@txLen:
  1024                           	opt stack 0
  1025                           
  1026                           ; 2 bytes @ 0x15
  1027  000115                     	ds	2
  1028  000117                     ??_TCP_Recv:
  1029  000117                     TCP_Server@socket_state:
  1030                           	opt stack 0
  1031                           
  1032                           ; 1 bytes @ 0x17
  1033  000117                     	ds	1
  1034  000118                     TCP_Server@rxLen:
  1035                           	opt stack 0
  1036                           
  1037                           ; 2 bytes @ 0x18
  1038  000118                     	ds	1
  1039  000119                     TCP_Update@count:
  1040                           	opt stack 0
  1041                           
  1042                           ; 2 bytes @ 0x19
  1043  000119                     	ds	1
  1044  00011A                     TCP_Server@i:
  1045                           	opt stack 0
  1046                           
  1047                           ; 2 bytes @ 0x1A
  1048  00011A                     	ds	1
  1049  00011B                     TCP_Update@tcbPtr:
  1050                           	opt stack 0
  1051                           
  1052                           ; 2 bytes @ 0x1B
  1053  00011B                     	ds	24
  1054  000133                     TCP_Recv@count:
  1055                           	opt stack 0
  1056                           
  1057                           ; 1 bytes @ 0x33
  1058  000133                     	ds	1
  1059  000134                     TCP_Recv@tcbPtr:
  1060                           	opt stack 0
  1061                           
  1062                           ; 2 bytes @ 0x34
  1063  000134                     	ds	2
  1064  000136                     ??_IPV4_Packet:
  1065                           
  1066                           ; 1 bytes @ 0x36
  1067  000136                     	ds	28
  1068  000152                     IPV4_Packet@hdrLen:
  1069                           	opt stack 0
  1070                           
  1071                           ; 1 bytes @ 0x52
  1072  000152                     	ds	1
  1073  000153                     IPV4_Packet@length:
  1074                           	opt stack 0
  1075                           
  1076                           ; 2 bytes @ 0x53
  1077  000153                     	ds	2
  1078  000155                     IPV4_Packet@cksm:
  1079                           	opt stack 0
  1080                           
  1081                           ; 2 bytes @ 0x55
  1082  000155                     	ds	2
  1083  000157                     ??_Network_Read:
  1084                           
  1085                           ; 1 bytes @ 0x57
  1086  000157                     	ds	4
  1087  00015B                     Network_Read@debug_str:
  1088                           	opt stack 0
  1089                           
  1090                           ; 80 bytes @ 0x5B
  1091  00015B                     	ds	80
  1092  0001AB                     Network_Read@header:
  1093                           	opt stack 0
  1094                           
  1095                           ; 14 bytes @ 0xAB
  1096  0001AB                     	ds	14
  1097  0001B9                     Network_Manage@now:
  1098                           	opt stack 0
  1099                           
  1100                           ; 4 bytes @ 0xB9
  1101  0001B9                     	ds	4
  1102                           tosu	equ	0xFFF
  1103                           tosh	equ	0xFFE
  1104                           tosl	equ	0xFFD
  1105                           pclath	equ	0xFFA
  1106                           tblptru	equ	0xFF8
  1107                           tblptrh	equ	0xFF7
  1108                           tblptrl	equ	0xFF6
  1109                           tablat	equ	0xFF5
  1110                           prodh	equ	0xFF4
  1111                           prodl	equ	0xFF3
  1112                           intcon	equ	0xFF2
  1113                           indf0	equ	0xFEF
  1114                           postinc0	equ	0xFEE
  1115                           fsr0h	equ	0xFEA
  1116                           fsr0l	equ	0xFE9
  1117                           wreg	equ	0xFE8
  1118                           indf1	equ	0xFE7
  1119                           postinc1	equ	0xFE6
  1120                           postdec1	equ	0xFE5
  1121                           plusw1	equ	0xFE3
  1122                           fsr1h	equ	0xFE2
  1123                           fsr1l	equ	0xFE1
  1124                           indf2	equ	0xFDF
  1125                           postinc2	equ	0xFDE
  1126                           postdec2	equ	0xFDD
  1127                           plusw2	equ	0xFDB
  1128                           fsr2h	equ	0xFDA
  1129                           fsr2l	equ	0xFD9
  1130                           status	equ	0xFD8
  1131                           
  1132                           	psect	cstackBANK0
  1133  000060                     __pcstackBANK0:
  1134                           	opt stack 0
  1135  000060                     ??_ETH_TxComputeChecksum:
  1136  000060                     ??_ARPV4_Packet:
  1137  000060                     ??_ARPV4_Request:
  1138  000060                     ?_sprintf:
  1139                           	opt stack 0
  1140  000060                     ?_printf:
  1141                           	opt stack 0
  1142  000060                     printf@f:
  1143                           	opt stack 0
  1144  000060                     sprintf@wh:
  1145                           	opt stack 0
  1146                           
  1147                           ; 2 bytes @ 0x0
  1148  000060                     	ds	2
  1149  000062                     sprintf@f:
  1150                           	opt stack 0
  1151                           
  1152                           ; 1 bytes @ 0x2
  1153  000062                     	ds	3
  1154  000065                     printf@ap:
  1155                           	opt stack 0
  1156                           
  1157                           ; 1 bytes @ 0x5
  1158  000065                     	ds	1
  1159  000066                     printf@pb:
  1160                           	opt stack 0
  1161                           
  1162                           ; 5 bytes @ 0x6
  1163  000066                     	ds	5
  1164  00006B                     ??_IPV4_Send:
  1165  00006B                     sprintf@ap:
  1166                           	opt stack 0
  1167  00006B                     SYSLOG_Write@t:
  1168                           	opt stack 0
  1169  00006B                     SYSLOG_Init@t:
  1170                           	opt stack 0
  1171                           
  1172                           ; 4 bytes @ 0xB
  1173  00006B                     	ds	1
  1174  00006C                     sprintf@pb:
  1175                           	opt stack 0
  1176                           
  1177                           ; 5 bytes @ 0xC
  1178  00006C                     	ds	1
  1179  00006D                     ETH_Copy@len:
  1180                           	opt stack 0
  1181                           
  1182                           ; 2 bytes @ 0xD
  1183  00006D                     	ds	2
  1184  00006F                     IPV4_Send@ret:
  1185                           	opt stack 0
  1186  00006F                     ETH_Copy@timer:
  1187                           	opt stack 0
  1188                           
  1189                           ; 2 bytes @ 0xF
  1190  00006F                     	ds	1
  1191  000070                     IPV4_Send@cksm:
  1192                           	opt stack 0
  1193                           
  1194                           ; 2 bytes @ 0x10
  1195  000070                     	ds	1
  1196  000071                     ETH_Copy@tmp_len:
  1197                           	opt stack 0
  1198                           
  1199                           ; 2 bytes @ 0x11
  1200  000071                     	ds	1
  1201  000072                     IPV4_Send@totalLength:
  1202                           	opt stack 0
  1203                           
  1204                           ; 2 bytes @ 0x12
  1205  000072                     	ds	2
  1206  000074                     ??_UDP_Send:
  1207                           
  1208                           ; 1 bytes @ 0x14
  1209  000074                     	ds	5
  1210  000079                     UDP_Send@cksm:
  1211                           	opt stack 0
  1212                           
  1213                           ; 2 bytes @ 0x19
  1214  000079                     	ds	2
  1215  00007B                     ARPV4_Request@ret:
  1216                           	opt stack 0
  1217  00007B                     UDP_Send@udpLength:
  1218                           	opt stack 0
  1219                           
  1220                           ; 2 bytes @ 0x1B
  1221  00007B                     	ds	1
  1222  00007C                     ARPV4_Request@header:
  1223                           	opt stack 0
  1224                           
  1225                           ; 28 bytes @ 0x1C
  1226  00007C                     	ds	4
  1227  000080                     ARPV4_Packet@length:
  1228                           	opt stack 0
  1229                           
  1230                           ; 2 bytes @ 0x20
  1231  000080                     	ds	2
  1232  000082                     ARPV4_Packet@mergeFlag:
  1233                           	opt stack 0
  1234                           
  1235                           ; 1 bytes @ 0x22
  1236  000082                     	ds	1
  1237  000083                     ARPV4_Packet@ret:
  1238                           	opt stack 0
  1239                           
  1240                           ; 1 bytes @ 0x23
  1241  000083                     	ds	1
  1242  000084                     ARPV4_Packet@arpPtr:
  1243                           	opt stack 0
  1244                           
  1245                           ; 2 bytes @ 0x24
  1246  000084                     	ds	2
  1247  000086                     ARPV4_Packet@x:
  1248                           	opt stack 0
  1249                           
  1250                           ; 1 bytes @ 0x26
  1251  000086                     	ds	1
  1252  000087                     ARPV4_Packet@x_1670:
  1253                           	opt stack 0
  1254                           
  1255                           ; 1 bytes @ 0x27
  1256  000087                     	ds	1
  1257  000088                     ARPV4_Packet@entryPointer:
  1258                           	opt stack 0
  1259                           
  1260                           ; 2 bytes @ 0x28
  1261  000088                     	ds	2
  1262  00008A                     ARPV4_Packet@header:
  1263                           	opt stack 0
  1264                           
  1265                           ; 28 bytes @ 0x2A
  1266  00008A                     	ds	14
  1267  000098                     IPv4_Start@targetAddress:
  1268                           	opt stack 0
  1269                           
  1270                           ; 4 bytes @ 0x38
  1271  000098                     	ds	4
  1272  00009C                     IPv4_Start@macAddress:
  1273                           	opt stack 0
  1274                           
  1275                           ; 2 bytes @ 0x3C
  1276  00009C                     	ds	2
  1277  00009E                     IPv4_Start@ret:
  1278                           	opt stack 0
  1279                           
  1280                           ; 1 bytes @ 0x3E
  1281  00009E                     	ds	1
  1282  00009F                     ICMP_EchoReply@icmpHdr:
  1283                           	opt stack 0
  1284  00009F                     TCP_Snd@tcbPtr:
  1285                           	opt stack 0
  1286  00009F                     UDP_Start@destIP:
  1287                           	opt stack 0
  1288                           
  1289                           ; 4 bytes @ 0x3F
  1290  00009F                     	ds	1
  1291  0000A0                     ICMP_EchoReply@ipv4Hdr:
  1292                           	opt stack 0
  1293                           
  1294                           ; 2 bytes @ 0x40
  1295  0000A0                     	ds	1
  1296  0000A1                     ??_TCP_Snd:
  1297                           
  1298                           ; 1 bytes @ 0x41
  1299  0000A1                     	ds	1
  1300  0000A2                     ??_ICMP_EchoReply:
  1301                           
  1302                           ; 1 bytes @ 0x42
  1303  0000A2                     	ds	1
  1304  0000A3                     UDP_Start@srcPort:
  1305                           	opt stack 0
  1306                           
  1307                           ; 2 bytes @ 0x43
  1308  0000A3                     	ds	2
  1309  0000A5                     UDP_Start@dstPort:
  1310                           	opt stack 0
  1311                           
  1312                           ; 2 bytes @ 0x45
  1313  0000A5                     	ds	2
  1314  0000A7                     DHCP_Request@started:
  1315                           	opt stack 0
  1316                           
  1317                           ; 1 bytes @ 0x47
  1318  0000A7                     	ds	1
  1319  0000A8                     DHCP_Request@type:
  1320                           	opt stack 0
  1321                           
  1322                           ; 1 bytes @ 0x48
  1323  0000A8                     	ds	1
  1324  0000A9                     DHCP_Request@ethMAC:
  1325                           	opt stack 0
  1326                           
  1327                           ; 6 bytes @ 0x49
  1328  0000A9                     	ds	1
  1329  0000AA                     ICMP_EchoReply@cksm:
  1330                           	opt stack 0
  1331                           
  1332                           ; 2 bytes @ 0x4A
  1333  0000AA                     	ds	2
  1334  0000AC                     ICMP_EchoReply@ipv4PayloadLength:
  1335                           	opt stack 0
  1336                           
  1337                           ; 2 bytes @ 0x4C
  1338  0000AC                     	ds	2
  1339  0000AE                     ICMP_EchoReply@ret:
  1340                           	opt stack 0
  1341                           
  1342                           ; 1 bytes @ 0x4E
  1343  0000AE                     	ds	1
  1344  0000AF                     DHCP_Handler@length:
  1345                           	opt stack 0
  1346  0000AF                     ICMP_Receive@ipv4Hdr:
  1347                           	opt stack 0
  1348                           
  1349                           ; 2 bytes @ 0x4F
  1350  0000AF                     	ds	2
  1351  0000B1                     ??_DHCP_Handler:
  1352  0000B1                     ??_ICMP_Receive:
  1353                           
  1354                           ; 1 bytes @ 0x51
  1355  0000B1                     	ds	2
  1356  0000B3                     DHCP_Handler@ip:
  1357                           	opt stack 0
  1358                           
  1359                           ; 8 bytes @ 0x53
  1360  0000B3                     	ds	3
  1361  0000B6                     ICMP_Receive@icmpHdr:
  1362                           	opt stack 0
  1363                           
  1364                           ; 8 bytes @ 0x56
  1365  0000B6                     	ds	5
  1366  0000BB                     DHCP_Handler@v:
  1367                           	opt stack 0
  1368                           
  1369                           ; 4 bytes @ 0x5B
  1370  0000BB                     	ds	4
  1371  0000BF                     DHCP_Handler@v16:
  1372                           	opt stack 0
  1373                           
  1374                           ; 2 bytes @ 0x5F
  1375  0000BF                     	ds	2
  1376  0000C1                     DHCP_Handler@option:
  1377                           	opt stack 0
  1378                           
  1379                           ; 1 bytes @ 0x61
  1380  0000C1                     	ds	1
  1381  0000C2                     DHCP_Handler@ethPktMAC:
  1382                           	opt stack 0
  1383                           
  1384                           ; 6 bytes @ 0x62
  1385  0000C2                     	ds	6
  1386  0000C8                     DHCP_Handler@ethMAC:
  1387                           	opt stack 0
  1388                           
  1389                           ; 6 bytes @ 0x68
  1390  0000C8                     	ds	6
  1391  0000CE                     DHCP_Handler@optionLength:
  1392                           	opt stack 0
  1393                           
  1394                           ; 1 bytes @ 0x6E
  1395  0000CE                     	ds	1
  1396  0000CF                     DHCP_Handler@myip:
  1397                           	opt stack 0
  1398                           
  1399                           ; 4 bytes @ 0x6F
  1400  0000CF                     	ds	2
  1401  0000D1                     TCP_Snd@data:
  1402                           	opt stack 0
  1403                           
  1404                           ; 2 bytes @ 0x71
  1405  0000D1                     	ds	2
  1406  0000D3                     TCP_Snd@cksm:
  1407                           	opt stack 0
  1408  0000D3                     UDP_Receive@udpcksm:
  1409                           	opt stack 0
  1410                           
  1411                           ; 2 bytes @ 0x73
  1412  0000D3                     	ds	2
  1413  0000D5                     ??_UDP_Receive:
  1414  0000D5                     TCP_Snd@payloadLength:
  1415                           	opt stack 0
  1416                           
  1417                           ; 2 bytes @ 0x75
  1418  0000D5                     	ds	2
  1419  0000D7                     TCP_Snd@ret:
  1420                           	opt stack 0
  1421                           
  1422                           ; 1 bytes @ 0x77
  1423  0000D7                     	ds	1
  1424  0000D8                     TCP_Snd@tcpDataLength:
  1425                           	opt stack 0
  1426                           
  1427                           ; 2 bytes @ 0x78
  1428  0000D8                     	ds	2
  1429  0000DA                     TCP_Snd@txHeader:
  1430                           	opt stack 0
  1431                           
  1432                           ; 20 bytes @ 0x7A
  1433  0000DA                     	ds	1
  1434  0000DB                     UDP_Receive@x:
  1435                           	opt stack 0
  1436                           
  1437                           ; 2 bytes @ 0x7B
  1438  0000DB                     	ds	2
  1439  0000DD                     UDP_Receive@hptr:
  1440                           	opt stack 0
  1441                           
  1442                           ; 1 bytes @ 0x7D
  1443  0000DD                     	ds	17
  1444  0000EE                     TCP_PayloadSave@len:
  1445                           	opt stack 0
  1446  0000EE                     TCP_Send@tcbPtr:
  1447                           	opt stack 0
  1448                           
  1449                           ; 2 bytes @ 0x8E
  1450  0000EE                     	ds	2
  1451  0000F0                     ??_TCP_PayloadSave:
  1452  0000F0                     TCP_Send@data:
  1453                           	opt stack 0
  1454                           
  1455                           ; 2 bytes @ 0x90
  1456  0000F0                     	ds	2
  1457  0000F2                     TCP_Send@dataLen:
  1458                           	opt stack 0
  1459                           
  1460                           ; 2 bytes @ 0x92
  1461  0000F2                     	ds	11
  1462  0000FD                     TCP_PayloadSave@buffer_size:
  1463                           	opt stack 0
  1464                           
  1465                           ; 2 bytes @ 0x9D
  1466  0000FD                     	ds	2
  1467  0000FF                     ??_Network_Manage:
  1468                           
  1469                           ; 1 bytes @ 0x9F
  1470  0000FF                     	ds	1
  1471                           tosu	equ	0xFFF
  1472                           tosh	equ	0xFFE
  1473                           tosl	equ	0xFFD
  1474                           pclath	equ	0xFFA
  1475                           tblptru	equ	0xFF8
  1476                           tblptrh	equ	0xFF7
  1477                           tblptrl	equ	0xFF6
  1478                           tablat	equ	0xFF5
  1479                           prodh	equ	0xFF4
  1480                           prodl	equ	0xFF3
  1481                           intcon	equ	0xFF2
  1482                           indf0	equ	0xFEF
  1483                           postinc0	equ	0xFEE
  1484                           fsr0h	equ	0xFEA
  1485                           fsr0l	equ	0xFE9
  1486                           wreg	equ	0xFE8
  1487                           indf1	equ	0xFE7
  1488                           postinc1	equ	0xFE6
  1489                           postdec1	equ	0xFE5
  1490                           plusw1	equ	0xFE3
  1491                           fsr1h	equ	0xFE2
  1492                           fsr1l	equ	0xFE1
  1493                           indf2	equ	0xFDF
  1494                           postinc2	equ	0xFDE
  1495                           postdec2	equ	0xFDD
  1496                           plusw2	equ	0xFDB
  1497                           fsr2h	equ	0xFDA
  1498                           fsr2l	equ	0xFD9
  1499                           status	equ	0xFD8
  1500                           
  1501                           	psect	cstackCOMRAM
  1502  000001                     __pcstackCOMRAM:
  1503                           	opt stack 0
  1504  000001                     i1PHY_WaitForBusy@ret:
  1505                           	opt stack 0
  1506                           
  1507                           ; 1 bytes @ 0x0
  1508  000001                     	ds	1
  1509  000002                     i1PHY_WaitForBusy@timeout:
  1510                           	opt stack 0
  1511                           
  1512                           ; 1 bytes @ 0x1
  1513  000002                     	ds	1
  1514  000003                     ?i1_PHY_Read:
  1515                           	opt stack 0
  1516                           
  1517                           ; 4 bytes @ 0x2
  1518  000003                     	ds	4
  1519  000007                     i1PHY_Read@reg:
  1520                           	opt stack 0
  1521                           
  1522                           ; 1 bytes @ 0x6
  1523  000007                     	ds	1
  1524  000008                     i1PHY_Read@ret:
  1525                           	opt stack 0
  1526                           
  1527                           ; 4 bytes @ 0x7
  1528  000008                     	ds	4
  1529  00000C                     ?i1_ETH_readLinkStatus:
  1530                           	opt stack 0
  1531                           
  1532                           ; 4 bytes @ 0xB
  1533  00000C                     	ds	4
  1534  000010                     i1ETH_CheckLinkUp@value:
  1535                           	opt stack 0
  1536                           
  1537                           ; 4 bytes @ 0xF
  1538  000010                     	ds	4
  1539  000014                     ??_low_isr:
  1540  000014                     
  1541                           ; 1 bytes @ 0x13
  1542  000014                     	ds	3
  1543  000017                     ??_ETH_Flush:
  1544  000017                     ?_memcmp:
  1545                           	opt stack 0
  1546  000017                     ?_ETH_Read16:
  1547                           	opt stack 0
  1548  000017                     ?_ETH_ReadBlock:
  1549                           	opt stack 0
  1550  000017                     ?_ETH_ComputeChecksum:
  1551                           	opt stack 0
  1552  000017                     ?_ETH_GetByteCount:
  1553                           	opt stack 0
  1554  000017                     ?_ARPV4_Lookup:
  1555                           	opt stack 0
  1556  000017                     ?_IPV4_PseudoHeaderChecksum:
  1557                           	opt stack 0
  1558  000017                     ?___wmul:
  1559                           	opt stack 0
  1560  000017                     ?___lwdiv:
  1561                           	opt stack 0
  1562  000017                     ?_time:
  1563                           	opt stack 0
  1564  000017                     ?_ETH_Read32:
  1565                           	opt stack 0
  1566  000017                     ?_IPV4_GetMyIP:
  1567                           	opt stack 0
  1568  000017                     lcd_write_ctrl@c:
  1569                           	opt stack 0
  1570  000017                     lcd_write_data@d:
  1571                           	opt stack 0
  1572  000017                     LED_Init@x:
  1573                           	opt stack 0
  1574  000017                     putch@data:
  1575                           	opt stack 0
  1576  000017                     PHY_WaitForBusy@ret:
  1577                           	opt stack 0
  1578  000017                     ETH_Read8@ret:
  1579                           	opt stack 0
  1580  000017                     ETH_Write8@data:
  1581                           	opt stack 0
  1582  000017                     ETH_Insert@data:
  1583                           	opt stack 0
  1584  000017                     ETH_GetMAC@mac:
  1585                           	opt stack 0
  1586  000017                     ARPV4_Init@x:
  1587                           	opt stack 0
  1588  000017                     memcmp@s1:
  1589                           	opt stack 0
  1590  000017                     time@t:
  1591                           	opt stack 0
  1592  000017                     ETH_ReadBlock@buffer:
  1593                           	opt stack 0
  1594  000017                     ETH_Write16@data:
  1595                           	opt stack 0
  1596  000017                     ETH_WriteBlock@buffer:
  1597                           	opt stack 0
  1598  000017                     ETH_WriteStart@dest_mac:
  1599                           	opt stack 0
  1600  000017                     ETH_Send@packetEnd:
  1601                           	opt stack 0
  1602  000017                     ETH_Dump@length:
  1603                           	opt stack 0
  1604  000017                     ETH_ComputeChecksum@len:
  1605                           	opt stack 0
  1606  000017                     ARPV4_Update@entryPointer:
  1607                           	opt stack 0
  1608  000017                     IPV4_PseudoHeaderChecksum@payloadLen:
  1609                           	opt stack 0
  1610  000017                     TCB_Insert@ptr:
  1611                           	opt stack 0
  1612  000017                     TCB_Reset@tcbPtr:
  1613                           	opt stack 0
  1614  000017                     TCB_Check@ptr:
  1615                           	opt stack 0
  1616  000017                     ___wmul@multiplier:
  1617                           	opt stack 0
  1618  000017                     ___lwdiv@dividend:
  1619                           	opt stack 0
  1620  000017                     memset@p1:
  1621                           	opt stack 0
  1622  000017                     ETH_Write32@data:
  1623                           	opt stack 0
  1624  000017                     ARPV4_Lookup@ip_address:
  1625                           	opt stack 0
  1626                           
  1627                           ; 4 bytes @ 0x16
  1628  000017                     	ds	1
  1629  000018                     ??_lcd_init:
  1630  000018                     lcd_putch@c:
  1631                           	opt stack 0
  1632  000018                     lcd_goto1@pos:
  1633                           	opt stack 0
  1634  000018                     PHY_WaitForBusy@timeout:
  1635                           	opt stack 0
  1636  000018                     memcmp@s2:
  1637                           	opt stack 0
  1638  000018                     ETH_Insert@len:
  1639                           	opt stack 0
  1640  000018                     DHCP_WriteZeros@length:
  1641                           	opt stack 0
  1642                           
  1643                           ; 2 bytes @ 0x17
  1644  000018                     	ds	1
  1645  000019                     ??_IPV4_PseudoHeaderChecksum:
  1646  000019                     ??_TCB_Reset:
  1647  000019                     ??_TCB_Check:
  1648  000019                     ?_PHY_Read:
  1649                           	opt stack 0
  1650  000019                     ARPV4_Update@x:
  1651                           	opt stack 0
  1652  000019                     lcd_puts@s:
  1653                           	opt stack 0
  1654  000019                     PHY_Write@data:
  1655                           	opt stack 0
  1656  000019                     ETH_Read16@ret:
  1657                           	opt stack 0
  1658  000019                     ETH_ReadBlock@length:
  1659                           	opt stack 0
  1660  000019                     ETH_WriteBlock@length:
  1661                           	opt stack 0
  1662  000019                     ETH_WriteStart@type:
  1663                           	opt stack 0
  1664  000019                     ETH_ComputeChecksum@seed:
  1665                           	opt stack 0
  1666  000019                     ETH_GetByteCount@val:
  1667                           	opt stack 0
  1668  000019                     ___wmul@multiplicand:
  1669                           	opt stack 0
  1670  000019                     ___lwdiv@divisor:
  1671                           	opt stack 0
  1672  000019                     memcmp@n:
  1673                           	opt stack 0
  1674  000019                     memset@c:
  1675                           	opt stack 0
  1676                           
  1677                           ; 2 bytes @ 0x18
  1678  000019                     	ds	1
  1679  00001A                     ETH_Insert@offset:
  1680                           	opt stack 0
  1681                           
  1682                           ; 2 bytes @ 0x19
  1683  00001A                     	ds	1
  1684  00001B                     ??_memcmp:
  1685  00001B                     ??_ETH_ReadBlock:
  1686  00001B                     ??_ETH_WriteStart:
  1687  00001B                     ??_ETH_ComputeChecksum:
  1688  00001B                     ??_TCP_ParseTCPOptions:
  1689  00001B                     time@gie_val:
  1690                           	opt stack 0
  1691  00001B                     PHY_Write@reg:
  1692                           	opt stack 0
  1693  00001B                     TCB_Check@ret:
  1694                           	opt stack 0
  1695  00001B                     ___lwdiv@counter:
  1696                           	opt stack 0
  1697  00001B                     ETH_WriteBlock@p:
  1698                           	opt stack 0
  1699  00001B                     ___wmul@product:
  1700                           	opt stack 0
  1701  00001B                     memset@n:
  1702                           	opt stack 0
  1703  00001B                     ETH_Read32@ret:
  1704                           	opt stack 0
  1705                           
  1706                           ; 4 bytes @ 0x1A
  1707  00001B                     	ds	1
  1708  00001C                     PHY_Write@GIESave:
  1709                           	opt stack 0
  1710  00001C                     TCB_Check@count:
  1711                           	opt stack 0
  1712  00001C                     ETH_ReadBlock@len:
  1713                           	opt stack 0
  1714  00001C                     ETH_Insert@current_tx_ptr:
  1715                           	opt stack 0
  1716  00001C                     ___lwdiv@quotient:
  1717                           	opt stack 0
  1718  00001C                     time@the_time:
  1719                           	opt stack 0
  1720                           
  1721                           ; 4 bytes @ 0x1B
  1722  00001C                     	ds	1
  1723  00001D                     PHY_Read@reg:
  1724                           	opt stack 0
  1725  00001D                     IPV4_PseudoHeaderChecksum@v:
  1726                           	opt stack 0
  1727  00001D                     TCP_ParseTCPOptions@ret:
  1728                           	opt stack 0
  1729  00001D                     TCB_Check@tcbPtr:
  1730                           	opt stack 0
  1731  00001D                     memset@p:
  1732                           	opt stack 0
  1733  00001D                     ARPV4_Request@destAddress:
  1734                           	opt stack 0
  1735                           
  1736                           ; 4 bytes @ 0x1C
  1737  00001D                     	ds	1
  1738  00001E                     ?___lwmod:
  1739                           	opt stack 0
  1740  00001E                     IPV4_PseudoHeaderChecksum@len:
  1741                           	opt stack 0
  1742  00001E                     TCP_ParseTCPOptions@opt:
  1743                           	opt stack 0
  1744  00001E                     ETH_ReadBlock@p:
  1745                           	opt stack 0
  1746  00001E                     ___lwmod@dividend:
  1747                           	opt stack 0
  1748  00001E                     PHY_Read@ret:
  1749                           	opt stack 0
  1750                           
  1751                           ; 4 bytes @ 0x1D
  1752  00001E                     	ds	1
  1753  00001F                     ?_TCP_GetReceivedData:
  1754                           	opt stack 0
  1755  00001F                     ?_TCP_GetRxLength:
  1756                           	opt stack 0
  1757  00001F                     ARPV4_Lookup@entry_pointer:
  1758                           	opt stack 0
  1759  00001F                     TCP_ParseTCPOptions@tcpOptionsSize:
  1760                           	opt stack 0
  1761  00001F                     TCP_SocketInit@tcbPtr:
  1762                           	opt stack 0
  1763  00001F                     TCP_SocketPoll@socket_ptr:
  1764                           	opt stack 0
  1765  00001F                     TCP_Bind@tcbPtr:
  1766                           	opt stack 0
  1767  00001F                     TCP_SendDone@tcbPtr:
  1768                           	opt stack 0
  1769  00001F                     TCP_InsertRxBuffer@tcbPtr:
  1770                           	opt stack 0
  1771  00001F                     TCP_GetReceivedData@tcbPtr:
  1772                           	opt stack 0
  1773  00001F                     TCP_GetRxLength@tcbPtr:
  1774                           	opt stack 0
  1775  00001F                     ETH_ComputeChecksum@cksm:
  1776                           	opt stack 0
  1777  00001F                     IPV4_PseudoHeaderChecksum@cksm:
  1778                           	opt stack 0
  1779                           
  1780                           ; 4 bytes @ 0x1E
  1781  00001F                     	ds	1
  1782  000020                     ___lwmod@divisor:
  1783                           	opt stack 0
  1784                           
  1785                           ; 2 bytes @ 0x1F
  1786  000020                     	ds	1
  1787  000021                     ??_TCP_GetReceivedData:
  1788  000021                     ??_TCP_GetRxLength:
  1789  000021                     ARPV4_Lookup@x:
  1790                           	opt stack 0
  1791  000021                     TCP_SocketPoll@tmpSocketState:
  1792                           	opt stack 0
  1793  000021                     TCP_SendDone@ret:
  1794                           	opt stack 0
  1795  000021                     TCP_Bind@port:
  1796                           	opt stack 0
  1797  000021                     TCP_InsertRxBuffer@data:
  1798                           	opt stack 0
  1799                           
  1800                           ; 2 bytes @ 0x20
  1801  000021                     	ds	1
  1802  000022                     ?_ETH_readLinkStatus:
  1803                           	opt stack 0
  1804  000022                     ___lwmod@counter:
  1805                           	opt stack 0
  1806  000022                     IPv4_Start@destAddress:
  1807                           	opt stack 0
  1808                           
  1809                           ; 4 bytes @ 0x21
  1810  000022                     	ds	1
  1811  000023                     ?__doprnt:
  1812                           	opt stack 0
  1813  000023                     __doprnt@pb:
  1814                           	opt stack 0
  1815  000023                     ETH_ComputeChecksum@v:
  1816                           	opt stack 0
  1817  000023                     TCP_InsertRxBuffer@data_len:
  1818                           	opt stack 0
  1819  000023                     IPV4_PseudoHeaderChecksum@tmp:
  1820                           	opt stack 0
  1821                           
  1822                           ; 12 bytes @ 0x22
  1823  000023                     	ds	1
  1824  000024                     __doprnt@f:
  1825                           	opt stack 0
  1826                           
  1827                           ; 1 bytes @ 0x23
  1828  000024                     	ds	1
  1829  000025                     ?_ETH_TxComputeChecksum:
  1830                           	opt stack 0
  1831  000025                     ?_ETH_RxComputeChecksum:
  1832                           	opt stack 0
  1833  000025                     __doprnt@ap:
  1834                           	opt stack 0
  1835  000025                     ETH_TxComputeChecksum@position:
  1836                           	opt stack 0
  1837  000025                     ETH_RxComputeChecksum@len:
  1838                           	opt stack 0
  1839  000025                     TCP_GetReceivedData@ret:
  1840                           	opt stack 0
  1841  000025                     TCP_GetRxLength@ret:
  1842                           	opt stack 0
  1843                           
  1844                           ; 2 bytes @ 0x24
  1845  000025                     	ds	1
  1846  000026                     ??__doprnt:
  1847  000026                     IPv4_Start@protocol:
  1848                           	opt stack 0
  1849  000026                     ETH_CheckLinkUp@value:
  1850                           	opt stack 0
  1851                           
  1852                           ; 4 bytes @ 0x25
  1853  000026                     	ds	1
  1854  000027                     ??_IPv4_Start:
  1855  000027                     ETH_TxComputeChecksum@len:
  1856                           	opt stack 0
  1857  000027                     ETH_RxComputeChecksum@seed:
  1858                           	opt stack 0
  1859                           
  1860                           ; 2 bytes @ 0x26
  1861  000027                     	ds	2
  1862  000029                     ??_ETH_RxComputeChecksum:
  1863  000029                     __doprnt@idx:
  1864                           	opt stack 0
  1865  000029                     ETH_TxComputeChecksum@seed:
  1866                           	opt stack 0
  1867                           
  1868                           ; 2 bytes @ 0x28
  1869  000029                     	ds	1
  1870  00002A                     ??_ETH_Init:
  1871  00002A                     __doprnt@prec:
  1872                           	opt stack 0
  1873                           
  1874                           ; 1 bytes @ 0x29
  1875  00002A                     	ds	1
  1876  00002B                     ETH_TxComputeChecksum@rxptr:
  1877                           	opt stack 0
  1878  00002B                     __doprnt@cp:
  1879                           	opt stack 0
  1880                           
  1881                           ; 2 bytes @ 0x2A
  1882  00002B                     	ds	2
  1883  00002D                     ETH_Init@mac:
  1884                           	opt stack 0
  1885  00002D                     __doprnt@flag:
  1886                           	opt stack 0
  1887  00002D                     ETH_RxComputeChecksum@rxptr:
  1888                           	opt stack 0
  1889  00002D                     ETH_TxComputeChecksum@cksm:
  1890                           	opt stack 0
  1891                           
  1892                           ; 4 bytes @ 0x2C
  1893  00002D                     	ds	1
  1894  00002E                     __doprnt@val:
  1895                           	opt stack 0
  1896                           
  1897                           ; 2 bytes @ 0x2D
  1898  00002E                     	ds	1
  1899  00002F                     UDP_Start@ret:
  1900                           	opt stack 0
  1901  00002F                     ETH_RxComputeChecksum@cksm:
  1902                           	opt stack 0
  1903                           
  1904                           ; 4 bytes @ 0x2E
  1905  00002F                     	ds	1
  1906  000030                     __doprnt@c:
  1907                           	opt stack 0
  1908                           
  1909                           ; 1 bytes @ 0x2F
  1910  000030                     	ds	1
  1911  000031                     IPV4_Send@payloadLength:
  1912                           	opt stack 0
  1913  000031                     SYSLOG_Write@message:
  1914                           	opt stack 0
  1915                           
  1916                           ; 2 bytes @ 0x30
  1917  000031                     	ds	2
  1918  000033                     tosu	equ	0xFFF
  1919                           tosh	equ	0xFFE
  1920                           tosl	equ	0xFFD
  1921                           pclath	equ	0xFFA
  1922                           tblptru	equ	0xFF8
  1923                           tblptrh	equ	0xFF7
  1924                           tblptrl	equ	0xFF6
  1925                           tablat	equ	0xFF5
  1926                           prodh	equ	0xFF4
  1927                           prodl	equ	0xFF3
  1928                           intcon	equ	0xFF2
  1929                           indf0	equ	0xFEF
  1930                           postinc0	equ	0xFEE
  1931                           fsr0h	equ	0xFEA
  1932                           fsr0l	equ	0xFE9
  1933                           wreg	equ	0xFE8
  1934                           indf1	equ	0xFE7
  1935                           postinc1	equ	0xFE6
  1936                           postdec1	equ	0xFE5
  1937                           plusw1	equ	0xFE3
  1938                           fsr1h	equ	0xFE2
  1939                           fsr1l	equ	0xFE1
  1940                           indf2	equ	0xFDF
  1941                           postinc2	equ	0xFDE
  1942                           postdec2	equ	0xFDD
  1943                           plusw2	equ	0xFDB
  1944                           fsr2h	equ	0xFDA
  1945                           fsr2l	equ	0xFD9
  1946                           status	equ	0xFD8
  1947                           
  1948                           ; 1 bytes @ 0x32
  1949 ;;
  1950 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1951 ;;
  1952 ;; *************** function _main *****************
  1953 ;; Defined at:
  1954 ;;		line 332 in file "main.c"
  1955 ;; Parameters:    Size  Location     Type
  1956 ;;		None
  1957 ;; Auto vars:     Size  Location     Type
  1958 ;;  str            32    9[BANK2 ] unsigned char [32]
  1959 ;;  ip              4   41[BANK2 ] unsigned long 
  1960 ;;  t               4    4[BANK2 ] long 
  1961 ;;  old_ip          4    0[BANK2 ] unsigned long 
  1962 ;;  no_ip_displa    1    8[BANK2 ] unsigned char 
  1963 ;; Return value:  Size  Location     Type
  1964 ;;                  1    wreg      void 
  1965 ;; Registers used:
  1966 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  1967 ;; Tracked objects:
  1968 ;;		On entry : 0/0
  1969 ;;		On exit  : 0/0
  1970 ;;		Unchanged: 0/0
  1971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1973 ;;      Locals:         0       0       0      45       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1975 ;;      Totals:         0       0       0      45       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1976 ;;Total ram usage:       45 bytes
  1977 ;; Hardware stack levels required when called:   19
  1978 ;; This function calls:
  1979 ;;		_IPV4_GetMyIP
  1980 ;;		_Network_Init
  1981 ;;		_Network_Manage
  1982 ;;		_Network_WaitForLink
  1983 ;;		_SYSLOG_Init
  1984 ;;		_SYSLOG_Write
  1985 ;;		_TCP_Server
  1986 ;;		_initHW
  1987 ;;		_lcd_goto1
  1988 ;;		_lcd_puts
  1989 ;;		_memset
  1990 ;;		_sprintf
  1991 ;;		_time
  1992 ;; This function is called by:
  1993 ;;		Startup code after reset
  1994 ;; This function uses a non-reentrant model
  1995 ;;
  1996                           
  1997                           	psect	text0
  1998  004D1E                     __ptext0:
  1999                           	opt stack 0
  2000  004D1E                     _main:
  2001                           	opt stack 12
  2002                           
  2003                           ;main.c: 334: time_t t;
  2004                           ;main.c: 335: unsigned long ip, old_ip;
  2005                           ;main.c: 336: char str[32];
  2006                           ;main.c: 337: bool no_ip_display = 1;
  2007                           
  2008                           ;incstack = 0
  2009  004D1E  0E01               	movlw	1
  2010  004D20  0102               	movlb	2	; () banked
  2011  004D22  6FAF               	movwf	main@no_ip_display& (0+255),b
  2012                           
  2013                           ; BSR set to: 2
  2014                           ;main.c: 339: initHW();
  2015  004D24  ECF5  F02E         	call	_initHW	;wreg free
  2016                           
  2017                           ;main.c: 340: Network_Init();
  2018  004D28  EC65  F031         	call	_Network_Init	;wreg free
  2019                           
  2020                           ; BSR set to: 1
  2021                           ;main.c: 341: SYSLOG_Init();
  2022  004D2C  EC11  F030         	call	_SYSLOG_Init	;wreg free
  2023                           
  2024                           ;main.c: 344: IPEN = 1;
  2025  004D30  8ED0               	bsf	4048,7,c	;volatile
  2026                           
  2027                           ;main.c: 345: GIEH = 1;
  2028  004D32  8EF2               	bsf	intcon,7,c	;volatile
  2029                           
  2030                           ;main.c: 346: GIEL = 1;
  2031  004D34  8CF2               	bsf	intcon,6,c	;volatile
  2032                           
  2033                           ;main.c: 348: SYSLOG_Write("Waiting for Link");
  2034  004D36  0E66               	movlw	low STR_7
  2035  004D38  EC21  F021         	call	PL547	;call to abstracted procedure
  2036  004D3C  ECDD  F030         	call	_SYSLOG_Write	;wreg free
  2037                           
  2038                           ;main.c: 349: Network_WaitForLink();
  2039  004D40  EC2D  F032         	call	_Network_WaitForLink	;wreg free
  2040                           
  2041                           ;main.c: 350: SYSLOG_Write("Link started");
  2042  004D44  0E86               	movlw	low STR_8
  2043  004D46  EC21  F021         	call	PL547	;call to abstracted procedure
  2044  004D4A  ECDD  F030         	call	_SYSLOG_Write	;wreg free
  2045  004D4E                     l9964:
  2046                           
  2047                           ;main.c: 353: {
  2048                           ;main.c: 369: Network_Manage();
  2049  004D4E  EC4F  F02A         	call	_Network_Manage	;wreg free
  2050                           
  2051                           ;main.c: 370: time(&t);
  2052  004D52  0EAB               	movlw	low main@t
  2053  004D54  6E17               	movwf	time@t,c
  2054  004D56  0E02               	movlw	high main@t
  2055  004D58  6E18               	movwf	time@t+1,c
  2056  004D5A  EC72  F02D         	call	_time	;wreg free
  2057                           
  2058                           ;main.c: 372: ip = IPV4_GetMyIP();
  2059  004D5E  EC1D  F032         	call	_IPV4_GetMyIP	;wreg free
  2060  004D62  C017  F2D0         	movff	?_IPV4_GetMyIP,main@ip
  2061  004D66  C018  F2D1         	movff	?_IPV4_GetMyIP+1,main@ip+1
  2062  004D6A  C019  F2D2         	movff	?_IPV4_GetMyIP+2,main@ip+2
  2063  004D6E  C01A  F2D3         	movff	?_IPV4_GetMyIP+3,main@ip+3
  2064                           
  2065                           ;main.c: 374: if((no_ip_display) || (old_ip != ip))
  2066  004D72  0102               	movlb	2	; () banked
  2067  004D74  51AF               	movf	main@no_ip_display& (0+255),w,b
  2068  004D76  E10C               	bnz	l1610
  2069                           
  2070                           ; BSR set to: 2
  2071  004D78  51D0               	movf	main@ip& (0+255),w,b
  2072  004D7A  19A7               	xorwf	main@old_ip& (0+255),w,b
  2073  004D7C  E109               	bnz	u15590
  2074  004D7E  51D1               	movf	(main@ip+1)& (0+255),w,b
  2075  004D80  19A8               	xorwf	(main@old_ip+1)& (0+255),w,b
  2076  004D82  E106               	bnz	u15590
  2077  004D84  51D2               	movf	(main@ip+2)& (0+255),w,b
  2078  004D86  19A9               	xorwf	(main@old_ip+2)& (0+255),w,b
  2079  004D88  E103               	bnz	u15590
  2080  004D8A  51D3               	movf	(main@ip+3)& (0+255),w,b
  2081  004D8C  19AA               	xorwf	(main@old_ip+3)& (0+255),w,b
  2082  004D8E  E039               	bz	l9986
  2083  004D90                     u15590:
  2084  004D90                     l1610:
  2085                           
  2086                           ; BSR set to: 2
  2087                           ;main.c: 375: {
  2088                           ;main.c: 376: old_ip = ip;
  2089  004D90  C2D0  F2A7         	movff	main@ip,main@old_ip
  2090  004D94  C2D1  F2A8         	movff	main@ip+1,main@old_ip+1
  2091  004D98  C2D2  F2A9         	movff	main@ip+2,main@old_ip+2
  2092  004D9C  C2D3  F2AA         	movff	main@ip+3,main@old_ip+3
  2093                           
  2094                           ; BSR set to: 2
  2095                           ;main.c: 377: memset(str,0,sizeof(str));
  2096  004DA0  0EB0               	movlw	low main@str
  2097  004DA2  6E17               	movwf	memset@p1,c
  2098  004DA4  0E02               	movlw	high main@str
  2099  004DA6  6E18               	movwf	memset@p1+1,c
  2100  004DA8  6A1A               	clrf	memset@c+1,c
  2101  004DAA  6A19               	clrf	memset@c,c
  2102  004DAC  6A1C               	clrf	memset@n+1,c
  2103  004DAE  0E20               	movlw	32
  2104  004DB0  6E1B               	movwf	memset@n,c
  2105  004DB2  EC9E  F030         	call	_memset	;wreg free
  2106                           
  2107                           ; BSR set to: 2
  2108                           ;main.c: 378: sprintf(str,"%d.%d.%d.%d",((char*)&ip)[3],((char*)&ip)[2],((char*)&ip)[1],
      +                          ((char*)&ip)[0]);
  2109  004DB6  0EB0               	movlw	low main@str
  2110  004DB8  0100               	movlb	0	; () banked
  2111  004DBA  6F60               	movwf	sprintf@wh& (0+255),b
  2112  004DBC  0E02               	movlw	high main@str
  2113  004DBE  6F61               	movwf	(sprintf@wh+1)& (0+255),b
  2114  004DC0  0E93               	movlw	low STR_9
  2115  004DC2  6F62               	movwf	sprintf@f& (0+255),b
  2116  004DC4  C2D3  F063         	movff	main@ip+3,?_sprintf+3
  2117  004DC8  6B64               	clrf	(?_sprintf+4)& (0+255),b
  2118  004DCA  C2D2  F065         	movff	main@ip+2,?_sprintf+5
  2119  004DCE  6B66               	clrf	(?_sprintf+6)& (0+255),b
  2120  004DD0  C2D1  F067         	movff	main@ip+1,?_sprintf+7
  2121  004DD4  6B68               	clrf	(?_sprintf+8)& (0+255),b
  2122  004DD6  C2D0  F069         	movff	main@ip,?_sprintf+9
  2123  004DDA  6B6A               	clrf	(?_sprintf+10)& (0+255),b
  2124  004DDC  EC43  F030         	call	_sprintf	;wreg free
  2125                           
  2126                           ;main.c: 379: lcd_goto1(0);
  2127  004DE0  0E00               	movlw	0
  2128  004DE2  EC26  F032         	call	_lcd_goto1
  2129                           
  2130                           ;main.c: 380: lcd_puts(str);
  2131  004DE6  0EB0               	movlw	low main@str
  2132  004DE8  6E19               	movwf	lcd_puts@s,c
  2133  004DEA  0E02               	movlw	high main@str
  2134  004DEC  6E1A               	movwf	lcd_puts@s+1,c
  2135  004DEE  ECA6  F031         	call	_lcd_puts	;wreg free
  2136                           
  2137                           ;main.c: 381: SYSLOG_Write(str);
  2138  004DF2  0EB0               	movlw	low main@str
  2139  004DF4  6E31               	movwf	SYSLOG_Write@message,c
  2140  004DF6  0E02               	movlw	high main@str
  2141  004DF8  6E32               	movwf	SYSLOG_Write@message+1,c
  2142  004DFA  ECDD  F030         	call	_SYSLOG_Write	;wreg free
  2143                           
  2144                           ;main.c: 382: no_ip_display = 0;
  2145  004DFE  0102               	movlb	2	; () banked
  2146  004E00  6BAF               	clrf	main@no_ip_display& (0+255),b
  2147  004E02                     l9986:
  2148                           
  2149                           ; BSR set to: 2
  2150                           ;main.c: 383: }
  2151                           ;main.c: 384: TCP_Server();
  2152  004E02  EC29  F020         	call	_TCP_Server	;wreg free
  2153  004E06  D7A3               	goto	l9964
  2154  004E08                     __end_of_main:
  2155                           	opt stack 0
  2156                           tosu	equ	0xFFF
  2157                           tosh	equ	0xFFE
  2158                           tosl	equ	0xFFD
  2159                           pclath	equ	0xFFA
  2160                           tblptru	equ	0xFF8
  2161                           tblptrh	equ	0xFF7
  2162                           tblptrl	equ	0xFF6
  2163                           tablat	equ	0xFF5
  2164                           prodh	equ	0xFF4
  2165                           prodl	equ	0xFF3
  2166                           intcon	equ	0xFF2
  2167                           indf0	equ	0xFEF
  2168                           postinc0	equ	0xFEE
  2169                           fsr0h	equ	0xFEA
  2170                           fsr0l	equ	0xFE9
  2171                           wreg	equ	0xFE8
  2172                           indf1	equ	0xFE7
  2173                           postinc1	equ	0xFE6
  2174                           postdec1	equ	0xFE5
  2175                           plusw1	equ	0xFE3
  2176                           fsr1h	equ	0xFE2
  2177                           fsr1l	equ	0xFE1
  2178                           indf2	equ	0xFDF
  2179                           postinc2	equ	0xFDE
  2180                           postdec2	equ	0xFDD
  2181                           plusw2	equ	0xFDB
  2182                           fsr2h	equ	0xFDA
  2183                           fsr2l	equ	0xFD9
  2184                           status	equ	0xFD8
  2185                           
  2186 ;; *************** function _memset *****************
  2187 ;; Defined at:
  2188 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\memset.c"
  2189 ;; Parameters:    Size  Location     Type
  2190 ;;  p1              2   22[COMRAM] PTR void 
  2191 ;;		 -> main@str(32), 
  2192 ;;  c               2   24[COMRAM] int 
  2193 ;;  n               2   26[COMRAM] unsigned int 
  2194 ;; Auto vars:     Size  Location     Type
  2195 ;;  p               2   28[COMRAM] PTR unsigned char 
  2196 ;;		 -> main@str(32), 
  2197 ;; Return value:  Size  Location     Type
  2198 ;;                  2   22[COMRAM] PTR void 
  2199 ;; Registers used:
  2200 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2201 ;; Tracked objects:
  2202 ;;		On entry : F/2
  2203 ;;		On exit  : F/2
  2204 ;;		Unchanged: F/0
  2205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2206 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2207 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2209 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2210 ;;Total ram usage:        8 bytes
  2211 ;; Hardware stack levels used:    1
  2212 ;; Hardware stack levels required when called:    8
  2213 ;; This function calls:
  2214 ;;		Nothing
  2215 ;; This function is called by:
  2216 ;;		_main
  2217 ;; This function uses a non-reentrant model
  2218 ;;
  2219                           
  2220                           	psect	text1
  2221  00613C                     __ptext1:
  2222                           	opt stack 0
  2223  00613C                     _memset:
  2224                           	opt stack 22
  2225                           
  2226                           ; BSR set to: 2
  2227                           
  2228                           ;incstack = 0
  2229  00613C  C017  F01D         	movff	memset@p1,memset@p
  2230  006140  C018  F01E         	movff	memset@p1+1,memset@p+1
  2231  006144  D008               	goto	l9942
  2232  006146                     l9938:
  2233                           
  2234                           ; BSR set to: 2
  2235  006146  C01D  FFD9         	movff	memset@p,fsr2l
  2236  00614A  C01E  FFDA         	movff	memset@p+1,fsr2h
  2237  00614E  C019  FFDF         	movff	memset@c,indf2
  2238                           
  2239                           ; BSR set to: 2
  2240  006152  4A1D               	infsnz	memset@p,f,c
  2241  006154  2A1E               	incf	memset@p+1,f,c
  2242  006156                     l9942:
  2243                           
  2244                           ; BSR set to: 2
  2245  006156  061B               	decf	memset@n,f,c
  2246  006158  A0D8               	btfss	status,0,c
  2247  00615A  061C               	decf	memset@n+1,f,c
  2248  00615C  281B               	incf	memset@n,w,c
  2249  00615E  E1F3               	bnz	l9938
  2250  006160  281C               	incf	memset@n+1,w,c
  2251  006162  E1F1               	bnz	l9938
  2252                           
  2253                           ; BSR set to: 2
  2254  006164  0012               	return		;funcret
  2255  006166                     __end_of_memset:
  2256                           	opt stack 0
  2257                           tosu	equ	0xFFF
  2258                           tosh	equ	0xFFE
  2259                           tosl	equ	0xFFD
  2260                           pclath	equ	0xFFA
  2261                           tblptru	equ	0xFF8
  2262                           tblptrh	equ	0xFF7
  2263                           tblptrl	equ	0xFF6
  2264                           tablat	equ	0xFF5
  2265                           prodh	equ	0xFF4
  2266                           prodl	equ	0xFF3
  2267                           intcon	equ	0xFF2
  2268                           indf0	equ	0xFEF
  2269                           postinc0	equ	0xFEE
  2270                           fsr0h	equ	0xFEA
  2271                           fsr0l	equ	0xFE9
  2272                           wreg	equ	0xFE8
  2273                           indf1	equ	0xFE7
  2274                           postinc1	equ	0xFE6
  2275                           postdec1	equ	0xFE5
  2276                           plusw1	equ	0xFE3
  2277                           fsr1h	equ	0xFE2
  2278                           fsr1l	equ	0xFE1
  2279                           indf2	equ	0xFDF
  2280                           postinc2	equ	0xFDE
  2281                           postdec2	equ	0xFDD
  2282                           plusw2	equ	0xFDB
  2283                           fsr2h	equ	0xFDA
  2284                           fsr2l	equ	0xFD9
  2285                           status	equ	0xFD8
  2286                           
  2287 ;; *************** function _lcd_puts *****************
  2288 ;; Defined at:
  2289 ;;		line 86 in file "../board_support_package/picdem2_net/lcd.c"
  2290 ;; Parameters:    Size  Location     Type
  2291 ;;  s               2   24[COMRAM] PTR const unsigned char 
  2292 ;;		 -> main@str(32), 
  2293 ;; Auto vars:     Size  Location     Type
  2294 ;;		None
  2295 ;; Return value:  Size  Location     Type
  2296 ;;                  1    wreg      void 
  2297 ;; Registers used:
  2298 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2299 ;; Tracked objects:
  2300 ;;		On entry : 0/2
  2301 ;;		On exit  : 0/0
  2302 ;;		Unchanged: 0/0
  2303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2304 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2307 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2308 ;;Total ram usage:        2 bytes
  2309 ;; Hardware stack levels used:    1
  2310 ;; Hardware stack levels required when called:   10
  2311 ;; This function calls:
  2312 ;;		_lcd_putch
  2313 ;; This function is called by:
  2314 ;;		_main
  2315 ;; This function uses a non-reentrant model
  2316 ;;
  2317                           
  2318                           	psect	text2
  2319  00634C                     __ptext2:
  2320                           	opt stack 0
  2321  00634C                     _lcd_puts:
  2322                           	opt stack 20
  2323                           
  2324                           ;lcd.c: 88: while(*s)
  2325                           
  2326                           ; BSR set to: 2
  2327                           ;incstack = 0
  2328  00634C  D005               	goto	l9844
  2329  00634E                     l9840:
  2330                           
  2331                           ;lcd.c: 89: lcd_putch(*s++);
  2332  00634E  D807               	call	PL669	;call to abstracted procedure
  2333  006350  ECC4  F031         	call	_lcd_putch
  2334  006354  4A19               	infsnz	lcd_puts@s,f,c
  2335  006356  2A1A               	incf	lcd_puts@s+1,f,c
  2336  006358                     l9844:
  2337  006358  D802               	call	PL669	;call to abstracted procedure
  2338  00635A  E1F9               	bnz	l9840
  2339  00635C  0012               	return		;funcret
  2340  00635E                     __end_of_lcd_puts:
  2341                           	opt stack 0
  2342  00635E                     PL669:
  2343                           	opt stack 20
  2344  00635E  C019  FFD9         	movff	lcd_puts@s,fsr2l
  2345  006362  C01A  FFDA         	movff	lcd_puts@s+1,fsr2h
  2346  006366  50DF               	movf	indf2,w,c
  2347  006368  0012               	return	
  2348  00636A                     __end_ofPL669:
  2349                           	opt stack 0
  2350                           tosu	equ	0xFFF
  2351                           tosh	equ	0xFFE
  2352                           tosl	equ	0xFFD
  2353                           pclath	equ	0xFFA
  2354                           tblptru	equ	0xFF8
  2355                           tblptrh	equ	0xFF7
  2356                           tblptrl	equ	0xFF6
  2357                           tablat	equ	0xFF5
  2358                           prodh	equ	0xFF4
  2359                           prodl	equ	0xFF3
  2360                           intcon	equ	0xFF2
  2361                           indf0	equ	0xFEF
  2362                           postinc0	equ	0xFEE
  2363                           fsr0h	equ	0xFEA
  2364                           fsr0l	equ	0xFE9
  2365                           wreg	equ	0xFE8
  2366                           indf1	equ	0xFE7
  2367                           postinc1	equ	0xFE6
  2368                           postdec1	equ	0xFE5
  2369                           plusw1	equ	0xFE3
  2370                           fsr1h	equ	0xFE2
  2371                           fsr1l	equ	0xFE1
  2372                           indf2	equ	0xFDF
  2373                           postinc2	equ	0xFDE
  2374                           postdec2	equ	0xFDD
  2375                           plusw2	equ	0xFDB
  2376                           fsr2h	equ	0xFDA
  2377                           fsr2l	equ	0xFD9
  2378                           status	equ	0xFD8
  2379                           
  2380 ;; *************** function _lcd_putch *****************
  2381 ;; Defined at:
  2382 ;;		line 76 in file "../board_support_package/picdem2_net/lcd.c"
  2383 ;; Parameters:    Size  Location     Type
  2384 ;;  c               1    wreg     unsigned char 
  2385 ;; Auto vars:     Size  Location     Type
  2386 ;;  c               1   23[COMRAM] unsigned char 
  2387 ;; Return value:  Size  Location     Type
  2388 ;;                  1    wreg      void 
  2389 ;; Registers used:
  2390 ;;		wreg, status,2, status,0, cstack
  2391 ;; Tracked objects:
  2392 ;;		On entry : 0/2
  2393 ;;		On exit  : 0/0
  2394 ;;		Unchanged: 0/0
  2395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2397 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2399 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2400 ;;Total ram usage:        1 bytes
  2401 ;; Hardware stack levels used:    1
  2402 ;; Hardware stack levels required when called:    9
  2403 ;; This function calls:
  2404 ;;		_lcd_busy
  2405 ;;		_lcd_write_data
  2406 ;; This function is called by:
  2407 ;;		_lcd_puts
  2408 ;; This function uses a non-reentrant model
  2409 ;;
  2410                           
  2411                           	psect	text3
  2412  006388                     __ptext3:
  2413                           	opt stack 0
  2414  006388                     _lcd_putch:
  2415                           	opt stack 20
  2416                           
  2417                           ;incstack = 0
  2418                           ;lcd_putch@c stored from wreg
  2419  006388  6E18               	movwf	lcd_putch@c,c
  2420                           
  2421                           ;lcd.c: 78: if(c >= ' ' && c < 127)
  2422  00638A  0E1F               	movlw	31
  2423  00638C  6418               	cpfsgt	lcd_putch@c,c
  2424  00638E  EF46  F032         	goto	_lcd_busy
  2425  006392  0E7F               	movlw	127
  2426  006394  6018               	cpfslt	lcd_putch@c,c
  2427  006396  EF46  F032         	goto	_lcd_busy
  2428                           
  2429                           ;lcd.c: 79: {
  2430                           ;lcd.c: 80: lcd_write_data(c);
  2431  00639A  5018               	movf	lcd_putch@c,w,c
  2432  00639C  EC76  F031         	call	_lcd_write_data
  2433                           
  2434                           ;lcd.c: 81: }
  2435                           ;lcd.c: 82: lcd_busy();
  2436  0063A0  EF46  F032         	goto	_lcd_busy	;wreg free
  2437  0063A4                     __end_of_lcd_putch:
  2438                           	opt stack 0
  2439                           tosu	equ	0xFFF
  2440                           tosh	equ	0xFFE
  2441                           tosl	equ	0xFFD
  2442                           pclath	equ	0xFFA
  2443                           tblptru	equ	0xFF8
  2444                           tblptrh	equ	0xFF7
  2445                           tblptrl	equ	0xFF6
  2446                           tablat	equ	0xFF5
  2447                           prodh	equ	0xFF4
  2448                           prodl	equ	0xFF3
  2449                           intcon	equ	0xFF2
  2450                           indf0	equ	0xFEF
  2451                           postinc0	equ	0xFEE
  2452                           fsr0h	equ	0xFEA
  2453                           fsr0l	equ	0xFE9
  2454                           wreg	equ	0xFE8
  2455                           indf1	equ	0xFE7
  2456                           postinc1	equ	0xFE6
  2457                           postdec1	equ	0xFE5
  2458                           plusw1	equ	0xFE3
  2459                           fsr1h	equ	0xFE2
  2460                           fsr1l	equ	0xFE1
  2461                           indf2	equ	0xFDF
  2462                           postinc2	equ	0xFDE
  2463                           postdec2	equ	0xFDD
  2464                           plusw2	equ	0xFDB
  2465                           fsr2h	equ	0xFDA
  2466                           fsr2l	equ	0xFD9
  2467                           status	equ	0xFD8
  2468                           
  2469 ;; *************** function _lcd_write_data *****************
  2470 ;; Defined at:
  2471 ;;		line 71 in file "../board_support_package/picdem2_net/lcd_hw.c"
  2472 ;; Parameters:    Size  Location     Type
  2473 ;;  d               1    wreg     unsigned char 
  2474 ;; Auto vars:     Size  Location     Type
  2475 ;;  d               1   22[COMRAM] unsigned char 
  2476 ;; Return value:  Size  Location     Type
  2477 ;;                  1    wreg      void 
  2478 ;; Registers used:
  2479 ;;		wreg
  2480 ;; Tracked objects:
  2481 ;;		On entry : 0/2
  2482 ;;		On exit  : 0/0
  2483 ;;		Unchanged: 0/0
  2484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2486 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2488 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2489 ;;Total ram usage:        1 bytes
  2490 ;; Hardware stack levels used:    1
  2491 ;; Hardware stack levels required when called:    8
  2492 ;; This function calls:
  2493 ;;		Nothing
  2494 ;; This function is called by:
  2495 ;;		_lcd_putch
  2496 ;; This function uses a non-reentrant model
  2497 ;;
  2498                           
  2499                           	psect	text4
  2500  0062EC                     __ptext4:
  2501                           	opt stack 0
  2502  0062EC                     _lcd_write_data:
  2503                           	opt stack 20
  2504                           
  2505                           ;incstack = 0
  2506                           ;lcd_write_data@d stored from wreg
  2507  0062EC  6E17               	movwf	lcd_write_data@d,c
  2508                           
  2509                           ;lcd_hw.c: 73: LATH1 = 0;
  2510  0062EE  9290               	bcf	3984,1,c	;volatile
  2511                           
  2512                           ;lcd_hw.c: 74: LATH2 = 1;
  2513  0062F0  8490               	bsf	3984,2,c	;volatile
  2514                           
  2515                           ;lcd_hw.c: 75: LATE = d;
  2516  0062F2  C017  FF8D         	movff	lcd_write_data@d,3981	;volatile
  2517                           
  2518                           ;lcd_hw.c: 76: _delay((unsigned long)((1)*(41666667UL/4000000.0)));
  2519  0062F6  0E03               	movlw	3
  2520  0062F8                     u15607:
  2521  0062F8  2EE8               	decfsz	wreg,f,c
  2522  0062FA  D7FE               	goto	u15607
  2523  0062FC  F000               	nop	
  2524                           
  2525                           ;lcd_hw.c: 77: LATH0 = 1;
  2526  0062FE  8090               	bsf	3984,0,c	;volatile
  2527                           
  2528                           ;lcd_hw.c: 78: _delay((unsigned long)((1)*(41666667UL/4000000.0)));
  2529  006300  0E03               	movlw	3
  2530  006302                     u15617:
  2531  006302  2EE8               	decfsz	wreg,f,c
  2532  006304  D7FE               	goto	u15617
  2533  006306  F000               	nop	
  2534                           
  2535                           ;lcd_hw.c: 79: LATH0 = 0;
  2536  006308  9090               	bcf	3984,0,c	;volatile
  2537  00630A  0012               	return		;funcret
  2538  00630C                     __end_of_lcd_write_data:
  2539                           	opt stack 0
  2540                           tosu	equ	0xFFF
  2541                           tosh	equ	0xFFE
  2542                           tosl	equ	0xFFD
  2543                           pclath	equ	0xFFA
  2544                           tblptru	equ	0xFF8
  2545                           tblptrh	equ	0xFF7
  2546                           tblptrl	equ	0xFF6
  2547                           tablat	equ	0xFF5
  2548                           prodh	equ	0xFF4
  2549                           prodl	equ	0xFF3
  2550                           intcon	equ	0xFF2
  2551                           indf0	equ	0xFEF
  2552                           postinc0	equ	0xFEE
  2553                           fsr0h	equ	0xFEA
  2554                           fsr0l	equ	0xFE9
  2555                           wreg	equ	0xFE8
  2556                           indf1	equ	0xFE7
  2557                           postinc1	equ	0xFE6
  2558                           postdec1	equ	0xFE5
  2559                           plusw1	equ	0xFE3
  2560                           fsr1h	equ	0xFE2
  2561                           fsr1l	equ	0xFE1
  2562                           indf2	equ	0xFDF
  2563                           postinc2	equ	0xFDE
  2564                           postdec2	equ	0xFDD
  2565                           plusw2	equ	0xFDB
  2566                           fsr2h	equ	0xFDA
  2567                           fsr2l	equ	0xFD9
  2568                           status	equ	0xFD8
  2569                           
  2570 ;; *************** function _lcd_goto1 *****************
  2571 ;; Defined at:
  2572 ;;		line 96 in file "../board_support_package/picdem2_net/lcd.c"
  2573 ;; Parameters:    Size  Location     Type
  2574 ;;  pos             1    wreg     unsigned char 
  2575 ;; Auto vars:     Size  Location     Type
  2576 ;;  pos             1   23[COMRAM] unsigned char 
  2577 ;; Return value:  Size  Location     Type
  2578 ;;                  1    wreg      void 
  2579 ;; Registers used:
  2580 ;;		wreg, status,2, status,0, cstack
  2581 ;; Tracked objects:
  2582 ;;		On entry : 0/2
  2583 ;;		On exit  : 0/0
  2584 ;;		Unchanged: 0/0
  2585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2587 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2589 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2590 ;;Total ram usage:        1 bytes
  2591 ;; Hardware stack levels used:    1
  2592 ;; Hardware stack levels required when called:    9
  2593 ;; This function calls:
  2594 ;;		_lcd_busy
  2595 ;;		_lcd_write_ctrl
  2596 ;; This function is called by:
  2597 ;;		_main
  2598 ;; This function uses a non-reentrant model
  2599 ;;
  2600                           
  2601                           	psect	text5
  2602  00644C                     __ptext5:
  2603                           	opt stack 0
  2604  00644C                     _lcd_goto1:
  2605                           	opt stack 21
  2606                           
  2607                           ;incstack = 0
  2608                           ;lcd_goto1@pos stored from wreg
  2609  00644C  6E18               	movwf	lcd_goto1@pos,c
  2610                           
  2611                           ;lcd.c: 98: lcd_write_ctrl(0x80+pos);
  2612  00644E  5018               	movf	lcd_goto1@pos,w,c
  2613  006450  0F80               	addlw	128
  2614  006452  EC86  F031         	call	_lcd_write_ctrl
  2615                           
  2616                           ;lcd.c: 99: lcd_busy();
  2617  006456  EF46  F032         	goto	_lcd_busy	;wreg free
  2618  00645A                     __end_of_lcd_goto1:
  2619                           	opt stack 0
  2620                           tosu	equ	0xFFF
  2621                           tosh	equ	0xFFE
  2622                           tosl	equ	0xFFD
  2623                           pclath	equ	0xFFA
  2624                           tblptru	equ	0xFF8
  2625                           tblptrh	equ	0xFF7
  2626                           tblptrl	equ	0xFF6
  2627                           tablat	equ	0xFF5
  2628                           prodh	equ	0xFF4
  2629                           prodl	equ	0xFF3
  2630                           intcon	equ	0xFF2
  2631                           indf0	equ	0xFEF
  2632                           postinc0	equ	0xFEE
  2633                           fsr0h	equ	0xFEA
  2634                           fsr0l	equ	0xFE9
  2635                           wreg	equ	0xFE8
  2636                           indf1	equ	0xFE7
  2637                           postinc1	equ	0xFE6
  2638                           postdec1	equ	0xFE5
  2639                           plusw1	equ	0xFE3
  2640                           fsr1h	equ	0xFE2
  2641                           fsr1l	equ	0xFE1
  2642                           indf2	equ	0xFDF
  2643                           postinc2	equ	0xFDE
  2644                           postdec2	equ	0xFDD
  2645                           plusw2	equ	0xFDB
  2646                           fsr2h	equ	0xFDA
  2647                           fsr2l	equ	0xFD9
  2648                           status	equ	0xFD8
  2649                           
  2650 ;; *************** function _initHW *****************
  2651 ;; Defined at:
  2652 ;;		line 50 in file "../board_support_package/picdem2_net/hardware.c"
  2653 ;; Parameters:    Size  Location     Type
  2654 ;;		None
  2655 ;; Auto vars:     Size  Location     Type
  2656 ;;		None
  2657 ;; Return value:  Size  Location     Type
  2658 ;;                  1    wreg      void 
  2659 ;; Registers used:
  2660 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2661 ;; Tracked objects:
  2662 ;;		On entry : F/2
  2663 ;;		On exit  : 0/0
  2664 ;;		Unchanged: 0/0
  2665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2670 ;;Total ram usage:        0 bytes
  2671 ;; Hardware stack levels used:    1
  2672 ;; Hardware stack levels required when called:   10
  2673 ;; This function calls:
  2674 ;;		_LED_Init
  2675 ;;		_lcd_init
  2676 ;;		_rtcc_init
  2677 ;;		_spi_init
  2678 ;;		_uart_init
  2679 ;; This function is called by:
  2680 ;;		_main
  2681 ;; This function uses a non-reentrant model
  2682 ;;
  2683                           
  2684                           	psect	text6
  2685  005DEA                     __ptext6:
  2686                           	opt stack 0
  2687  005DEA                     _initHW:
  2688                           	opt stack 20
  2689                           
  2690                           ; BSR set to: 2
  2691                           ;hardware.c: 53: OSCCON = 0x02;
  2692                           
  2693                           ;incstack = 0
  2694  005DEA  0E02               	movlw	2
  2695  005DEC  6ED3               	movwf	4051,c	;volatile
  2696                           
  2697                           ;hardware.c: 56: OSCTUNE = 0x40;
  2698  005DEE  0E40               	movlw	64
  2699  005DF0  6E9B               	movwf	3995,c	;volatile
  2700                           
  2701                           ; BSR set to: 2
  2702                           ;hardware.c: 59: TRISJ = 0;
  2703  005DF2  6A9A               	clrf	3994,c	;volatile
  2704                           
  2705                           ; BSR set to: 2
  2706                           ;hardware.c: 60: LATJ = 0;
  2707  005DF4  6A91               	clrf	3985,c	;volatile
  2708                           
  2709                           ; BSR set to: 2
  2710                           ;hardware.c: 66: TRISCbits.TRISC3 = 0;
  2711  005DF6  9694               	bcf	3988,3,c	;volatile
  2712                           
  2713                           ; BSR set to: 2
  2714                           ;hardware.c: 68: TRISCbits.TRISC5 = 0;
  2715  005DF8  9A94               	bcf	3988,5,c	;volatile
  2716                           
  2717                           ; BSR set to: 2
  2718                           ;hardware.c: 75: TRISD = 0b00000000;
  2719  005DFA  6A95               	clrf	3989,c	;volatile
  2720                           
  2721                           ; BSR set to: 2
  2722                           ;hardware.c: 83: TRISCbits.TRISC4 = 0;
  2723  005DFC  9894               	bcf	3988,4,c	;volatile
  2724                           
  2725                           ; BSR set to: 2
  2726                           ;hardware.c: 86: TRISA = 0b00000000;
  2727  005DFE  6A92               	clrf	3986,c	;volatile
  2728                           
  2729                           ;hardware.c: 116: TRISB = 0x01;
  2730  005E00  0E01               	movlw	1
  2731  005E02  6E93               	movwf	3987,c	;volatile
  2732                           
  2733                           ; BSR set to: 2
  2734                           ;hardware.c: 117: TRISBbits.TRISB1 = 0b0;
  2735  005E04  9293               	bcf	3987,1,c	;volatile
  2736                           
  2737                           ; BSR set to: 2
  2738                           ;hardware.c: 118: TRISBbits.TRISB2 = 0b0;
  2739  005E06  9493               	bcf	3987,2,c	;volatile
  2740                           
  2741                           ; BSR set to: 2
  2742                           ;hardware.c: 119: TRISBbits.TRISB3 = 0b0;
  2743  005E08  9693               	bcf	3987,3,c	;volatile
  2744                           
  2745                           ; BSR set to: 2
  2746                           ;hardware.c: 120: TRISBbits.TRISB4 = 0b0;
  2747  005E0A  9893               	bcf	3987,4,c	;volatile
  2748                           
  2749                           ; BSR set to: 2
  2750                           ;hardware.c: 121: TRISBbits.TRISB5 = 0b0;
  2751  005E0C  9A93               	bcf	3987,5,c	;volatile
  2752                           
  2753                           ; BSR set to: 2
  2754                           ;hardware.c: 122: TRISBbits.TRISB6 = 0b0;
  2755  005E0E  9C93               	bcf	3987,6,c	;volatile
  2756                           
  2757                           ; BSR set to: 2
  2758                           ;hardware.c: 123: TRISBbits.TRISB7 = 0b0;
  2759  005E10  9E93               	bcf	3987,7,c	;volatile
  2760                           
  2761                           ; BSR set to: 2
  2762                           ;hardware.c: 126: PORTBbits.RB1 = 0b0;
  2763  005E12  9281               	bcf	3969,1,c	;volatile
  2764                           
  2765                           ; BSR set to: 2
  2766                           ;hardware.c: 127: PORTBbits.RB2 = 0b0;
  2767  005E14  9481               	bcf	3969,2,c	;volatile
  2768                           
  2769                           ; BSR set to: 2
  2770                           ;hardware.c: 128: PORTBbits.RB3 = 0b0;
  2771  005E16  9681               	bcf	3969,3,c	;volatile
  2772                           
  2773                           ; BSR set to: 2
  2774                           ;hardware.c: 130: PORTBbits.RB4 = 0b0;
  2775  005E18  9881               	bcf	3969,4,c	;volatile
  2776                           
  2777                           ; BSR set to: 2
  2778                           ;hardware.c: 131: PORTBbits.RB5 = 0b0;
  2779  005E1A  9A81               	bcf	3969,5,c	;volatile
  2780                           
  2781                           ; BSR set to: 2
  2782                           ;hardware.c: 132: PORTBbits.RB6 = 0b0;
  2783  005E1C  9C81               	bcf	3969,6,c	;volatile
  2784                           
  2785                           ; BSR set to: 2
  2786                           ;hardware.c: 137: rtcc_init();
  2787  005E1E  ECC0  F02F         	call	_rtcc_init	;wreg free
  2788                           
  2789                           ; BSR set to: 2
  2790                           ;hardware.c: 140: spi_init();
  2791  005E22  EC3B  F032         	call	_spi_init	;wreg free
  2792                           
  2793                           ; BSR set to: 2
  2794                           ;hardware.c: 143: uart_init();
  2795  005E26  EC12  F032         	call	_uart_init	;wreg free
  2796                           
  2797                           ; BSR set to: 2
  2798                           ;hardware.c: 146: lcd_init();
  2799  005E2A  EC1F  F029         	call	_lcd_init	;wreg free
  2800                           
  2801                           ;hardware.c: 154: LED_Init();
  2802  005E2E  EF96  F031         	goto	_LED_Init	;wreg free
  2803  005E32                     __end_of_initHW:
  2804                           	opt stack 0
  2805                           tosu	equ	0xFFF
  2806                           tosh	equ	0xFFE
  2807                           tosl	equ	0xFFD
  2808                           pclath	equ	0xFFA
  2809                           tblptru	equ	0xFF8
  2810                           tblptrh	equ	0xFF7
  2811                           tblptrl	equ	0xFF6
  2812                           tablat	equ	0xFF5
  2813                           prodh	equ	0xFF4
  2814                           prodl	equ	0xFF3
  2815                           intcon	equ	0xFF2
  2816                           indf0	equ	0xFEF
  2817                           postinc0	equ	0xFEE
  2818                           fsr0h	equ	0xFEA
  2819                           fsr0l	equ	0xFE9
  2820                           wreg	equ	0xFE8
  2821                           indf1	equ	0xFE7
  2822                           postinc1	equ	0xFE6
  2823                           postdec1	equ	0xFE5
  2824                           plusw1	equ	0xFE3
  2825                           fsr1h	equ	0xFE2
  2826                           fsr1l	equ	0xFE1
  2827                           indf2	equ	0xFDF
  2828                           postinc2	equ	0xFDE
  2829                           postdec2	equ	0xFDD
  2830                           plusw2	equ	0xFDB
  2831                           fsr2h	equ	0xFDA
  2832                           fsr2l	equ	0xFD9
  2833                           status	equ	0xFD8
  2834                           
  2835 ;; *************** function _uart_init *****************
  2836 ;; Defined at:
  2837 ;;		line 55 in file "../board_support_package/picdem2_net/uart.c"
  2838 ;; Parameters:    Size  Location     Type
  2839 ;;		None
  2840 ;; Auto vars:     Size  Location     Type
  2841 ;;		None
  2842 ;; Return value:  Size  Location     Type
  2843 ;;                  1    wreg      void 
  2844 ;; Registers used:
  2845 ;;		wreg, status,2
  2846 ;; Tracked objects:
  2847 ;;		On entry : F/2
  2848 ;;		On exit  : F/2
  2849 ;;		Unchanged: F/0
  2850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2855 ;;Total ram usage:        0 bytes
  2856 ;; Hardware stack levels used:    1
  2857 ;; Hardware stack levels required when called:    8
  2858 ;; This function calls:
  2859 ;;		Nothing
  2860 ;; This function is called by:
  2861 ;;		_initHW
  2862 ;; This function uses a non-reentrant model
  2863 ;;
  2864                           
  2865                           	psect	text7
  2866  006424                     __ptext7:
  2867                           	opt stack 0
  2868  006424                     _uart_init:
  2869                           	opt stack 21
  2870                           
  2871                           ; BSR set to: 2
  2872                           ;uart.c: 58: TRISCbits.TRISC7 = 1;
  2873                           
  2874                           ;incstack = 0
  2875  006424  8E94               	bsf	3988,7,c	;volatile
  2876                           
  2877                           ;uart.c: 59: TRISCbits.TRISC6 = 0;
  2878  006426  9C94               	bcf	3988,6,c	;volatile
  2879                           
  2880                           ;uart.c: 62: BAUDCON1 = 0x00;
  2881  006428  6A7E               	clrf	3966,c	;volatile
  2882                           
  2883                           ; BSR set to: 2
  2884                           ;uart.c: 69: SPBRG1 = 89;
  2885  00642A  0E59               	movlw	89
  2886  00642C  6EAF               	movwf	4015,c	;volatile
  2887                           
  2888                           ; BSR set to: 2
  2889                           ;uart.c: 70: BAUDCON1bits.BRG16 = 1;
  2890  00642E  867E               	bsf	3966,3,c	;volatile
  2891                           
  2892                           ;uart.c: 71: TXSTA1 = 0x26;
  2893  006430  0E26               	movlw	38
  2894  006432  6EAC               	movwf	4012,c	;volatile
  2895                           
  2896                           ; BSR set to: 2
  2897                           ;uart.c: 73: CREN1 = 1;
  2898  006434  88AB               	bsf	4011,4,c	;volatile
  2899                           
  2900                           ; BSR set to: 2
  2901                           ;uart.c: 74: SPEN1 = 1;
  2902  006436  8EAB               	bsf	4011,7,c	;volatile
  2903                           
  2904                           ; BSR set to: 2
  2905  006438  0C26               	retlw	38	;funcret
  2906  00643A                     __end_of_uart_init:
  2907                           	opt stack 0
  2908                           tosu	equ	0xFFF
  2909                           tosh	equ	0xFFE
  2910                           tosl	equ	0xFFD
  2911                           pclath	equ	0xFFA
  2912                           tblptru	equ	0xFF8
  2913                           tblptrh	equ	0xFF7
  2914                           tblptrl	equ	0xFF6
  2915                           tablat	equ	0xFF5
  2916                           prodh	equ	0xFF4
  2917                           prodl	equ	0xFF3
  2918                           intcon	equ	0xFF2
  2919                           indf0	equ	0xFEF
  2920                           postinc0	equ	0xFEE
  2921                           fsr0h	equ	0xFEA
  2922                           fsr0l	equ	0xFE9
  2923                           wreg	equ	0xFE8
  2924                           indf1	equ	0xFE7
  2925                           postinc1	equ	0xFE6
  2926                           postdec1	equ	0xFE5
  2927                           plusw1	equ	0xFE3
  2928                           fsr1h	equ	0xFE2
  2929                           fsr1l	equ	0xFE1
  2930                           indf2	equ	0xFDF
  2931                           postinc2	equ	0xFDE
  2932                           postdec2	equ	0xFDD
  2933                           plusw2	equ	0xFDB
  2934                           fsr2h	equ	0xFDA
  2935                           fsr2l	equ	0xFD9
  2936                           status	equ	0xFD8
  2937                           
  2938 ;; *************** function _spi_init *****************
  2939 ;; Defined at:
  2940 ;;		line 46 in file "../board_support_package/picdem2_net/mssp_spi_master.c"
  2941 ;; Parameters:    Size  Location     Type
  2942 ;;		None
  2943 ;; Auto vars:     Size  Location     Type
  2944 ;;		None
  2945 ;; Return value:  Size  Location     Type
  2946 ;;                  1    wreg      void 
  2947 ;; Registers used:
  2948 ;;		wreg, status,2
  2949 ;; Tracked objects:
  2950 ;;		On entry : F/2
  2951 ;;		On exit  : F/2
  2952 ;;		Unchanged: F/0
  2953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2958 ;;Total ram usage:        0 bytes
  2959 ;; Hardware stack levels used:    1
  2960 ;; Hardware stack levels required when called:    8
  2961 ;; This function calls:
  2962 ;;		Nothing
  2963 ;; This function is called by:
  2964 ;;		_initHW
  2965 ;; This function uses a non-reentrant model
  2966 ;;
  2967                           
  2968                           	psect	text8
  2969  006476                     __ptext8:
  2970                           	opt stack 0
  2971  006476                     _spi_init:
  2972                           	opt stack 21
  2973                           
  2974                           ; BSR set to: 2
  2975                           ;mssp_spi_master.c: 48: SSP1STATbits.CKE = 1;
  2976                           
  2977                           ; BSR set to: 2
  2978                           ;incstack = 0
  2979  006476  8CC7               	bsf	4039,6,c	;volatile
  2980                           
  2981                           ;mssp_spi_master.c: 49: SSP1STATbits.SMP = 0;
  2982  006478  9EC7               	bcf	4039,7,c	;volatile
  2983                           
  2984                           ; BSR set to: 2
  2985                           ;mssp_spi_master.c: 51: SSP1CON1 = 0x01;
  2986  00647A  0E01               	movlw	1
  2987  00647C  6EC6               	movwf	4038,c	;volatile
  2988                           
  2989                           ; BSR set to: 2
  2990                           ;mssp_spi_master.c: 52: SSP1CON1bits.SSPEN = 1;
  2991  00647E  8AC6               	bsf	4038,5,c	;volatile
  2992                           
  2993                           ; BSR set to: 2
  2994  006480  0C01               	retlw	1	;funcret
  2995  006482                     __end_of_spi_init:
  2996                           	opt stack 0
  2997                           tosu	equ	0xFFF
  2998                           tosh	equ	0xFFE
  2999                           tosl	equ	0xFFD
  3000                           pclath	equ	0xFFA
  3001                           tblptru	equ	0xFF8
  3002                           tblptrh	equ	0xFF7
  3003                           tblptrl	equ	0xFF6
  3004                           tablat	equ	0xFF5
  3005                           prodh	equ	0xFF4
  3006                           prodl	equ	0xFF3
  3007                           intcon	equ	0xFF2
  3008                           indf0	equ	0xFEF
  3009                           postinc0	equ	0xFEE
  3010                           fsr0h	equ	0xFEA
  3011                           fsr0l	equ	0xFE9
  3012                           wreg	equ	0xFE8
  3013                           indf1	equ	0xFE7
  3014                           postinc1	equ	0xFE6
  3015                           postdec1	equ	0xFE5
  3016                           plusw1	equ	0xFE3
  3017                           fsr1h	equ	0xFE2
  3018                           fsr1l	equ	0xFE1
  3019                           indf2	equ	0xFDF
  3020                           postinc2	equ	0xFDE
  3021                           postdec2	equ	0xFDD
  3022                           plusw2	equ	0xFDB
  3023                           fsr2h	equ	0xFDA
  3024                           fsr2l	equ	0xFD9
  3025                           status	equ	0xFD8
  3026                           
  3027 ;; *************** function _rtcc_init *****************
  3028 ;; Defined at:
  3029 ;;		line 77 in file "../board_support_package/picdem2_net/rtcc.c"
  3030 ;; Parameters:    Size  Location     Type
  3031 ;;		None
  3032 ;; Auto vars:     Size  Location     Type
  3033 ;;		None
  3034 ;; Return value:  Size  Location     Type
  3035 ;;                  1    wreg      void 
  3036 ;; Registers used:
  3037 ;;		wreg, status,2
  3038 ;; Tracked objects:
  3039 ;;		On entry : F/2
  3040 ;;		On exit  : F/2
  3041 ;;		Unchanged: 0/0
  3042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3047 ;;Total ram usage:        0 bytes
  3048 ;; Hardware stack levels used:    1
  3049 ;; Hardware stack levels required when called:    8
  3050 ;; This function calls:
  3051 ;;		Nothing
  3052 ;; This function is called by:
  3053 ;;		_initHW
  3054 ;; This function uses a non-reentrant model
  3055 ;;
  3056                           
  3057                           	psect	text9
  3058  005F80                     __ptext9:
  3059                           	opt stack 0
  3060  005F80                     _rtcc_init:
  3061                           	opt stack 21
  3062                           
  3063                           ; BSR set to: 2
  3064                           ;rtcc.c: 79: TMR1CS = 1;
  3065                           
  3066                           ; BSR set to: 2
  3067                           ;incstack = 0
  3068  005F80  82CD               	bsf	4045,1,c	;volatile
  3069                           
  3070                           ;rtcc.c: 80: T1OSCEN = 1;
  3071  005F82  86CD               	bsf	4045,3,c	;volatile
  3072                           
  3073                           ;rtcc.c: 81: T1CKPS0 = 0;
  3074  005F84  98CD               	bcf	4045,4,c	;volatile
  3075                           
  3076                           ;rtcc.c: 82: T1CKPS1 = 0;
  3077  005F86  9ACD               	bcf	4045,5,c	;volatile
  3078                           
  3079                           ;rtcc.c: 83: T1SYNC = 1;
  3080  005F88  84CD               	bsf	4045,2,c	;volatile
  3081                           
  3082                           ;rtcc.c: 84: TMR1ON = 1;
  3083  005F8A  80CD               	bsf	4045,0,c	;volatile
  3084                           
  3085                           ; BSR set to: 2
  3086                           ;rtcc.c: 86: TMR1 = 32768UL;
  3087  005F8C  0E80               	movlw	128
  3088  005F8E  6ECF               	movwf	4047,c	;volatile
  3089  005F90  6ACE               	clrf	4046,c	;volatile
  3090                           
  3091                           ;rtcc.c: 87: deviceTime = 1293861600;
  3092  005F92  0EE0               	movlw	224
  3093  005F94  6FD4               	movwf	_deviceTime& (0+255),b	;volatile
  3094  005F96  0EC2               	movlw	194
  3095  005F98  6FD5               	movwf	(_deviceTime+1)& (0+255),b	;volatile
  3096  005F9A  0E1E               	movlw	30
  3097  005F9C  6FD6               	movwf	(_deviceTime+2)& (0+255),b	;volatile
  3098  005F9E  0E4D               	movlw	77
  3099  005FA0  6FD7               	movwf	(_deviceTime+3)& (0+255),b	;volatile
  3100                           
  3101                           ;rtcc.c: 88: localTime = 1293861600 + 2208988800;
  3102  005FA2  0E60               	movlw	96
  3103  005FA4  6FD8               	movwf	_localTime& (0+255),b	;volatile
  3104  005FA6  0E41               	movlw	65
  3105  005FA8  6FD9               	movwf	(_localTime+1)& (0+255),b	;volatile
  3106  005FAA  0EC9               	movlw	201
  3107  005FAC  6FDA               	movwf	(_localTime+2)& (0+255),b	;volatile
  3108  005FAE  0ED0               	movlw	208
  3109  005FB0  6FDB               	movwf	(_localTime+3)& (0+255),b	;volatile
  3110                           
  3111                           ; BSR set to: 2
  3112                           ;rtcc.c: 90: TMR1IP = 1;
  3113  005FB2  809F               	bsf	3999,0,c	;volatile
  3114                           
  3115                           ; BSR set to: 2
  3116                           ;rtcc.c: 91: TMR1IE = 1;
  3117  005FB4  809D               	bsf	3997,0,c	;volatile
  3118                           
  3119                           ; BSR set to: 2
  3120  005FB6  0CD0               	retlw	208	;funcret
  3121  005FB8                     __end_of_rtcc_init:
  3122                           	opt stack 0
  3123                           tosu	equ	0xFFF
  3124                           tosh	equ	0xFFE
  3125                           tosl	equ	0xFFD
  3126                           pclath	equ	0xFFA
  3127                           tblptru	equ	0xFF8
  3128                           tblptrh	equ	0xFF7
  3129                           tblptrl	equ	0xFF6
  3130                           tablat	equ	0xFF5
  3131                           prodh	equ	0xFF4
  3132                           prodl	equ	0xFF3
  3133                           intcon	equ	0xFF2
  3134                           indf0	equ	0xFEF
  3135                           postinc0	equ	0xFEE
  3136                           fsr0h	equ	0xFEA
  3137                           fsr0l	equ	0xFE9
  3138                           wreg	equ	0xFE8
  3139                           indf1	equ	0xFE7
  3140                           postinc1	equ	0xFE6
  3141                           postdec1	equ	0xFE5
  3142                           plusw1	equ	0xFE3
  3143                           fsr1h	equ	0xFE2
  3144                           fsr1l	equ	0xFE1
  3145                           indf2	equ	0xFDF
  3146                           postinc2	equ	0xFDE
  3147                           postdec2	equ	0xFDD
  3148                           plusw2	equ	0xFDB
  3149                           fsr2h	equ	0xFDA
  3150                           fsr2l	equ	0xFD9
  3151                           status	equ	0xFD8
  3152                           
  3153 ;; *************** function _lcd_init *****************
  3154 ;; Defined at:
  3155 ;;		line 110 in file "../board_support_package/picdem2_net/lcd.c"
  3156 ;; Parameters:    Size  Location     Type
  3157 ;;		None
  3158 ;; Auto vars:     Size  Location     Type
  3159 ;;  y               2    0        volatile int 
  3160 ;;  x               2    0        volatile int 
  3161 ;; Return value:  Size  Location     Type
  3162 ;;                  1    wreg      void 
  3163 ;; Registers used:
  3164 ;;		wreg, cstack
  3165 ;; Tracked objects:
  3166 ;;		On entry : F/2
  3167 ;;		On exit  : 0/0
  3168 ;;		Unchanged: 0/0
  3169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3172 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3173 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3174 ;;Total ram usage:        1 bytes
  3175 ;; Hardware stack levels used:    1
  3176 ;; Hardware stack levels required when called:    9
  3177 ;; This function calls:
  3178 ;;		_lcd_busy
  3179 ;;		_lcd_init_pins
  3180 ;;		_lcd_write_ctrl
  3181 ;; This function is called by:
  3182 ;;		_initHW
  3183 ;; This function uses a non-reentrant model
  3184 ;;
  3185                           
  3186                           	psect	text10
  3187  00523E                     __ptext10:
  3188                           	opt stack 0
  3189  00523E                     _lcd_init:
  3190                           	opt stack 20
  3191                           
  3192                           ; BSR set to: 2
  3193                           ;lcd.c: 112: volatile int x,y;
  3194                           ;lcd.c: 114: lcd_init_pins();
  3195                           
  3196                           ; BSR set to: 2
  3197                           ;incstack = 0
  3198  00523E  EC41  F032         	call	_lcd_init_pins	;wreg free
  3199                           
  3200                           ; BSR set to: 2
  3201                           ;lcd.c: 116: _delay((unsigned long)((10)*(41666667UL/4000.0)));
  3202  005242  D846               	call	PL721	;call to abstracted procedure
  3203  005244                     u15627:
  3204  005244  2EE8               	decfsz	wreg,f,c
  3205  005246  D7FE               	goto	u15627
  3206  005248  2E18               	decfsz	??_lcd_init& (0+255),f,c
  3207  00524A  D7FC               	goto	u15627
  3208  00524C  D000               	nop2	
  3209                           
  3210                           ;lcd.c: 117: _delay((unsigned long)((10)*(41666667UL/4000.0)));
  3211  00524E  D840               	call	PL721	;call to abstracted procedure
  3212  005250                     u15637:
  3213  005250  2EE8               	decfsz	wreg,f,c
  3214  005252  D7FE               	goto	u15637
  3215  005254  2E18               	decfsz	??_lcd_init& (0+255),f,c
  3216  005256  D7FC               	goto	u15637
  3217  005258  D000               	nop2	
  3218                           
  3219                           ;lcd.c: 118: _delay((unsigned long)((10)*(41666667UL/4000.0)));
  3220  00525A  D83A               	call	PL721	;call to abstracted procedure
  3221  00525C                     u15647:
  3222  00525C  2EE8               	decfsz	wreg,f,c
  3223  00525E  D7FE               	goto	u15647
  3224  005260  2E18               	decfsz	??_lcd_init& (0+255),f,c
  3225  005262  D7FC               	goto	u15647
  3226  005264  D000               	nop2	
  3227                           
  3228                           ;lcd.c: 119: _delay((unsigned long)((10)*(41666667UL/4000.0)));
  3229  005266  D834               	call	PL721	;call to abstracted procedure
  3230  005268                     u15657:
  3231  005268  2EE8               	decfsz	wreg,f,c
  3232  00526A  D7FE               	goto	u15657
  3233  00526C  2E18               	decfsz	??_lcd_init& (0+255),f,c
  3234  00526E  D7FC               	goto	u15657
  3235  005270  D000               	nop2	
  3236                           
  3237                           ;lcd.c: 122: lcd_write_ctrl(0x03);
  3238  005272  0E03               	movlw	3
  3239  005274  EC86  F031         	call	_lcd_write_ctrl
  3240                           
  3241                           ;lcd.c: 123: _delay((unsigned long)((4)*(41666667UL/4000.0)));
  3242  005278  D82E               	call	PL741	;call to abstracted procedure
  3243  00527A                     u15667:
  3244  00527A  2EE8               	decfsz	wreg,f,c
  3245  00527C  D7FE               	goto	u15667
  3246  00527E  2E18               	decfsz	??_lcd_init& (0+255),f,c
  3247  005280  D7FC               	goto	u15667
  3248  005282  F000               	nop	
  3249                           
  3250                           ;lcd.c: 124: lcd_write_ctrl(0x03);
  3251  005284  0E03               	movlw	3
  3252  005286  EC86  F031         	call	_lcd_write_ctrl
  3253                           
  3254                           ;lcd.c: 125: _delay((unsigned long)((4)*(41666667UL/4000.0)));
  3255  00528A  D825               	call	PL741	;call to abstracted procedure
  3256  00528C                     u15677:
  3257  00528C  2EE8               	decfsz	wreg,f,c
  3258  00528E  D7FE               	goto	u15677
  3259  005290  2E18               	decfsz	??_lcd_init& (0+255),f,c
  3260  005292  D7FC               	goto	u15677
  3261  005294  F000               	nop	
  3262                           
  3263                           ;lcd.c: 126: lcd_write_ctrl(0x03);
  3264  005296  0E03               	movlw	3
  3265  005298  EC86  F031         	call	_lcd_write_ctrl
  3266                           
  3267                           ;lcd.c: 129: lcd_write_ctrl(0x38);
  3268  00529C  0E38               	movlw	56
  3269  00529E  EC86  F031         	call	_lcd_write_ctrl
  3270                           
  3271                           ;lcd.c: 131: lcd_busy();
  3272  0052A2  EC46  F032         	call	_lcd_busy	;wreg free
  3273                           
  3274                           ;lcd.c: 132: lcd_write_ctrl(0x0C);
  3275  0052A6  0E0C               	movlw	12
  3276  0052A8  EC86  F031         	call	_lcd_write_ctrl
  3277                           
  3278                           ;lcd.c: 133: lcd_busy();
  3279  0052AC  EC46  F032         	call	_lcd_busy	;wreg free
  3280                           
  3281                           ;lcd.c: 134: lcd_write_ctrl(0x01);
  3282  0052B0  0E01               	movlw	1
  3283  0052B2  EC86  F031         	call	_lcd_write_ctrl
  3284                           
  3285                           ;lcd.c: 135: lcd_busy();
  3286  0052B6  EC46  F032         	call	_lcd_busy	;wreg free
  3287                           
  3288                           ;lcd.c: 138: lcd_write_ctrl(0x01);
  3289  0052BA  0E01               	movlw	1
  3290  0052BC  EC86  F031         	call	_lcd_write_ctrl
  3291                           
  3292                           ;lcd.c: 139: _delay((unsigned long)((2)*(41666667UL/4000.0)));
  3293  0052C0  0E1C               	movlw	28
  3294  0052C2  6E18               	movwf	??_lcd_init& (0+255),c
  3295  0052C4  0E0D               	movlw	13
  3296  0052C6                     u15687:
  3297  0052C6  2EE8               	decfsz	wreg,f,c
  3298  0052C8  D7FE               	goto	u15687
  3299  0052CA  2E18               	decfsz	??_lcd_init& (0+255),f,c
  3300  0052CC  D7FC               	goto	u15687
  3301  0052CE  0012               	return		;funcret
  3302  0052D0                     __end_of_lcd_init:
  3303                           	opt stack 0
  3304  0052D0                     PL721:
  3305                           	opt stack 20
  3306  0052D0  0E88               	movlw	136
  3307  0052D2  6E18               	movwf	??_lcd_init& (0+255),c
  3308  0052D4  0C46               	retlw	70
  3309  0052D6                     __end_ofPL721:
  3310                           	opt stack 0
  3311  0052D6                     PL741:
  3312                           	opt stack 20
  3313  0052D6  0E37               	movlw	55
  3314  0052D8  6E18               	movwf	??_lcd_init& (0+255),c
  3315  0052DA  0C1B               	retlw	27
  3316  0052DC                     __end_ofPL741:
  3317                           	opt stack 0
  3318                           tosu	equ	0xFFF
  3319                           tosh	equ	0xFFE
  3320                           tosl	equ	0xFFD
  3321                           pclath	equ	0xFFA
  3322                           tblptru	equ	0xFF8
  3323                           tblptrh	equ	0xFF7
  3324                           tblptrl	equ	0xFF6
  3325                           tablat	equ	0xFF5
  3326                           prodh	equ	0xFF4
  3327                           prodl	equ	0xFF3
  3328                           intcon	equ	0xFF2
  3329                           indf0	equ	0xFEF
  3330                           postinc0	equ	0xFEE
  3331                           fsr0h	equ	0xFEA
  3332                           fsr0l	equ	0xFE9
  3333                           wreg	equ	0xFE8
  3334                           indf1	equ	0xFE7
  3335                           postinc1	equ	0xFE6
  3336                           postdec1	equ	0xFE5
  3337                           plusw1	equ	0xFE3
  3338                           fsr1h	equ	0xFE2
  3339                           fsr1l	equ	0xFE1
  3340                           indf2	equ	0xFDF
  3341                           postinc2	equ	0xFDE
  3342                           postdec2	equ	0xFDD
  3343                           plusw2	equ	0xFDB
  3344                           fsr2h	equ	0xFDA
  3345                           fsr2l	equ	0xFD9
  3346                           status	equ	0xFD8
  3347                           
  3348 ;; *************** function _lcd_write_ctrl *****************
  3349 ;; Defined at:
  3350 ;;		line 59 in file "../board_support_package/picdem2_net/lcd_hw.c"
  3351 ;; Parameters:    Size  Location     Type
  3352 ;;  c               1    wreg     unsigned char 
  3353 ;; Auto vars:     Size  Location     Type
  3354 ;;  c               1   22[COMRAM] unsigned char 
  3355 ;; Return value:  Size  Location     Type
  3356 ;;                  1    wreg      void 
  3357 ;; Registers used:
  3358 ;;		wreg
  3359 ;; Tracked objects:
  3360 ;;		On entry : 0/2
  3361 ;;		On exit  : 0/0
  3362 ;;		Unchanged: 0/0
  3363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3365 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3367 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3368 ;;Total ram usage:        1 bytes
  3369 ;; Hardware stack levels used:    1
  3370 ;; Hardware stack levels required when called:    8
  3371 ;; This function calls:
  3372 ;;		Nothing
  3373 ;; This function is called by:
  3374 ;;		_lcd_goto1
  3375 ;;		_lcd_init
  3376 ;; This function uses a non-reentrant model
  3377 ;;
  3378                           
  3379                           	psect	text11
  3380  00630C                     __ptext11:
  3381                           	opt stack 0
  3382  00630C                     _lcd_write_ctrl:
  3383                           	opt stack 21
  3384                           
  3385                           ;incstack = 0
  3386                           ;lcd_write_ctrl@c stored from wreg
  3387  00630C  6E17               	movwf	lcd_write_ctrl@c,c
  3388                           
  3389                           ;lcd_hw.c: 61: LATH1 = 0;
  3390  00630E  9290               	bcf	3984,1,c	;volatile
  3391                           
  3392                           ;lcd_hw.c: 62: LATH2 = 0;
  3393  006310  9490               	bcf	3984,2,c	;volatile
  3394                           
  3395                           ;lcd_hw.c: 64: _delay((unsigned long)((50)*(41666667UL/4000000.0)));
  3396  006312  0EAD               	movlw	173
  3397  006314                     u15697:
  3398  006314  2EE8               	decfsz	wreg,f,c
  3399  006316  D7FE               	goto	u15697
  3400  006318  F000               	nop	
  3401                           
  3402                           ;lcd_hw.c: 65: LATE = c;
  3403  00631A  C017  FF8D         	movff	lcd_write_ctrl@c,3981	;volatile
  3404                           
  3405                           ;lcd_hw.c: 66: LATH0 = 1;
  3406  00631E  8090               	bsf	3984,0,c	;volatile
  3407                           
  3408                           ;lcd_hw.c: 67: _delay((unsigned long)((50)*(41666667UL/4000000.0)));
  3409  006320  0EAD               	movlw	173
  3410  006322                     u15707:
  3411  006322  2EE8               	decfsz	wreg,f,c
  3412  006324  D7FE               	goto	u15707
  3413  006326  F000               	nop	
  3414                           
  3415                           ;lcd_hw.c: 68: LATH0 = 0;
  3416  006328  9090               	bcf	3984,0,c	;volatile
  3417  00632A  0012               	return		;funcret
  3418  00632C                     __end_of_lcd_write_ctrl:
  3419                           	opt stack 0
  3420                           tosu	equ	0xFFF
  3421                           tosh	equ	0xFFE
  3422                           tosl	equ	0xFFD
  3423                           pclath	equ	0xFFA
  3424                           tblptru	equ	0xFF8
  3425                           tblptrh	equ	0xFF7
  3426                           tblptrl	equ	0xFF6
  3427                           tablat	equ	0xFF5
  3428                           prodh	equ	0xFF4
  3429                           prodl	equ	0xFF3
  3430                           intcon	equ	0xFF2
  3431                           indf0	equ	0xFEF
  3432                           postinc0	equ	0xFEE
  3433                           fsr0h	equ	0xFEA
  3434                           fsr0l	equ	0xFE9
  3435                           wreg	equ	0xFE8
  3436                           indf1	equ	0xFE7
  3437                           postinc1	equ	0xFE6
  3438                           postdec1	equ	0xFE5
  3439                           plusw1	equ	0xFE3
  3440                           fsr1h	equ	0xFE2
  3441                           fsr1l	equ	0xFE1
  3442                           indf2	equ	0xFDF
  3443                           postinc2	equ	0xFDE
  3444                           postdec2	equ	0xFDD
  3445                           plusw2	equ	0xFDB
  3446                           fsr2h	equ	0xFDA
  3447                           fsr2l	equ	0xFD9
  3448                           status	equ	0xFD8
  3449                           
  3450 ;; *************** function _lcd_init_pins *****************
  3451 ;; Defined at:
  3452 ;;		line 50 in file "../board_support_package/picdem2_net/lcd_hw.c"
  3453 ;; Parameters:    Size  Location     Type
  3454 ;;		None
  3455 ;; Auto vars:     Size  Location     Type
  3456 ;;		None
  3457 ;; Return value:  Size  Location     Type
  3458 ;;                  1    wreg      void 
  3459 ;; Registers used:
  3460 ;;		None
  3461 ;; Tracked objects:
  3462 ;;		On entry : F/2
  3463 ;;		On exit  : F/2
  3464 ;;		Unchanged: F/0
  3465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3470 ;;Total ram usage:        0 bytes
  3471 ;; Hardware stack levels used:    1
  3472 ;; Hardware stack levels required when called:    8
  3473 ;; This function calls:
  3474 ;;		Nothing
  3475 ;; This function is called by:
  3476 ;;		_lcd_init
  3477 ;; This function uses a non-reentrant model
  3478 ;;
  3479                           
  3480                           	psect	text12
  3481  006482                     __ptext12:
  3482                           	opt stack 0
  3483  006482                     _lcd_init_pins:
  3484                           	opt stack 20
  3485                           
  3486                           ; BSR set to: 2
  3487                           ;lcd_hw.c: 52: TRISE = 0;
  3488                           
  3489                           ;incstack = 0
  3490  006482  6A96               	clrf	3990,c	;volatile
  3491                           
  3492                           ;lcd_hw.c: 53: TRISH = 0x00;
  3493  006484  6A99               	clrf	3993,c	;volatile
  3494                           
  3495                           ;lcd_hw.c: 54: LATE = 0;
  3496  006486  6A8D               	clrf	3981,c	;volatile
  3497                           
  3498                           ;lcd_hw.c: 55: LATH = 0;
  3499  006488  6A90               	clrf	3984,c	;volatile
  3500                           
  3501                           ; BSR set to: 2
  3502  00648A  0012               	return		;funcret
  3503  00648C                     __end_of_lcd_init_pins:
  3504                           	opt stack 0
  3505                           tosu	equ	0xFFF
  3506                           tosh	equ	0xFFE
  3507                           tosl	equ	0xFFD
  3508                           pclath	equ	0xFFA
  3509                           tblptru	equ	0xFF8
  3510                           tblptrh	equ	0xFF7
  3511                           tblptrl	equ	0xFF6
  3512                           tablat	equ	0xFF5
  3513                           prodh	equ	0xFF4
  3514                           prodl	equ	0xFF3
  3515                           intcon	equ	0xFF2
  3516                           indf0	equ	0xFEF
  3517                           postinc0	equ	0xFEE
  3518                           fsr0h	equ	0xFEA
  3519                           fsr0l	equ	0xFE9
  3520                           wreg	equ	0xFE8
  3521                           indf1	equ	0xFE7
  3522                           postinc1	equ	0xFE6
  3523                           postdec1	equ	0xFE5
  3524                           plusw1	equ	0xFE3
  3525                           fsr1h	equ	0xFE2
  3526                           fsr1l	equ	0xFE1
  3527                           indf2	equ	0xFDF
  3528                           postinc2	equ	0xFDE
  3529                           postdec2	equ	0xFDD
  3530                           plusw2	equ	0xFDB
  3531                           fsr2h	equ	0xFDA
  3532                           fsr2l	equ	0xFD9
  3533                           status	equ	0xFD8
  3534                           
  3535 ;; *************** function _lcd_busy *****************
  3536 ;; Defined at:
  3537 ;;		line 82 in file "../board_support_package/picdem2_net/lcd_hw.c"
  3538 ;; Parameters:    Size  Location     Type
  3539 ;;		None
  3540 ;; Auto vars:     Size  Location     Type
  3541 ;;		None
  3542 ;; Return value:  Size  Location     Type
  3543 ;;                  1    wreg      void 
  3544 ;; Registers used:
  3545 ;;		wreg
  3546 ;; Tracked objects:
  3547 ;;		On entry : 0/2
  3548 ;;		On exit  : 0/0
  3549 ;;		Unchanged: 0/0
  3550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3555 ;;Total ram usage:        0 bytes
  3556 ;; Hardware stack levels used:    1
  3557 ;; Hardware stack levels required when called:    8
  3558 ;; This function calls:
  3559 ;;		Nothing
  3560 ;; This function is called by:
  3561 ;;		_lcd_putch
  3562 ;;		_lcd_goto1
  3563 ;;		_lcd_init
  3564 ;; This function uses a non-reentrant model
  3565 ;;
  3566                           
  3567                           	psect	text13
  3568  00648C                     __ptext13:
  3569                           	opt stack 0
  3570  00648C                     _lcd_busy:
  3571                           	opt stack 20
  3572                           
  3573                           ;lcd_hw.c: 84: _delay((unsigned long)((50)*(41666667UL/4000000.0)));
  3574                           
  3575                           ; BSR set to: 2
  3576                           ;incstack = 0
  3577  00648C  0EAD               	movlw	173
  3578  00648E                     u15717:
  3579  00648E  2EE8               	decfsz	wreg,f,c
  3580  006490  D7FE               	goto	u15717
  3581  006492  F000               	nop	
  3582  006494  0012               	return		;funcret
  3583  006496                     __end_of_lcd_busy:
  3584                           	opt stack 0
  3585                           tosu	equ	0xFFF
  3586                           tosh	equ	0xFFE
  3587                           tosl	equ	0xFFD
  3588                           pclath	equ	0xFFA
  3589                           tblptru	equ	0xFF8
  3590                           tblptrh	equ	0xFF7
  3591                           tblptrl	equ	0xFF6
  3592                           tablat	equ	0xFF5
  3593                           prodh	equ	0xFF4
  3594                           prodl	equ	0xFF3
  3595                           intcon	equ	0xFF2
  3596                           indf0	equ	0xFEF
  3597                           postinc0	equ	0xFEE
  3598                           fsr0h	equ	0xFEA
  3599                           fsr0l	equ	0xFE9
  3600                           wreg	equ	0xFE8
  3601                           indf1	equ	0xFE7
  3602                           postinc1	equ	0xFE6
  3603                           postdec1	equ	0xFE5
  3604                           plusw1	equ	0xFE3
  3605                           fsr1h	equ	0xFE2
  3606                           fsr1l	equ	0xFE1
  3607                           indf2	equ	0xFDF
  3608                           postinc2	equ	0xFDE
  3609                           postdec2	equ	0xFDD
  3610                           plusw2	equ	0xFDB
  3611                           fsr2h	equ	0xFDA
  3612                           fsr2l	equ	0xFD9
  3613                           status	equ	0xFD8
  3614                           
  3615 ;; *************** function _LED_Init *****************
  3616 ;; Defined at:
  3617 ;;		line 55 in file "../board_support_package/picdem2_net/led_driver.c"
  3618 ;; Parameters:    Size  Location     Type
  3619 ;;		None
  3620 ;; Auto vars:     Size  Location     Type
  3621 ;;  x               1   22[COMRAM] unsigned char 
  3622 ;; Return value:  Size  Location     Type
  3623 ;;                  1    wreg      void 
  3624 ;; Registers used:
  3625 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3626 ;; Tracked objects:
  3627 ;;		On entry : 0/2
  3628 ;;		On exit  : 0/0
  3629 ;;		Unchanged: 0/0
  3630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3632 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3634 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3635 ;;Total ram usage:        1 bytes
  3636 ;; Hardware stack levels used:    1
  3637 ;; Hardware stack levels required when called:    8
  3638 ;; This function calls:
  3639 ;;		Nothing
  3640 ;; This function is called by:
  3641 ;;		_initHW
  3642 ;; This function uses a non-reentrant model
  3643 ;;
  3644                           
  3645                           	psect	text14
  3646  00632C                     __ptext14:
  3647                           	opt stack 0
  3648  00632C                     _LED_Init:
  3649                           	opt stack 21
  3650                           
  3651                           ;led_driver.c: 57: uint8_t x = 0;
  3652                           
  3653                           ;incstack = 0
  3654  00632C  6A17               	clrf	LED_Init@x,c
  3655                           
  3656                           ;led_driver.c: 58: for(x = 0; x < 8; x++)
  3657  00632E  6A17               	clrf	LED_Init@x,c
  3658  006330                     l9402:
  3659                           
  3660                           ;led_driver.c: 59: {
  3661                           ;led_driver.c: 60: led_values[x].value = 0;
  3662  006330  5017               	movf	LED_Init@x,w,c
  3663  006332  0D02               	mullw	2
  3664  006334  0E00               	movlw	low _led_values
  3665  006336  24F3               	addwf	prodl,w,c
  3666  006338  6ED9               	movwf	fsr2l,c
  3667  00633A  0E02               	movlw	high _led_values
  3668  00633C  20F4               	addwfc	prodh,w,c
  3669  00633E  6EDA               	movwf	fsr2h,c
  3670  006340  6ADF               	clrf	indf2,c
  3671  006342  2A17               	incf	LED_Init@x,f,c
  3672  006344  0E07               	movlw	7
  3673  006346  6417               	cpfsgt	LED_Init@x,c
  3674  006348  D7F3               	goto	l9402
  3675  00634A  0C07               	retlw	7
  3676  00634C                     __end_of_LED_Init:
  3677                           	opt stack 0
  3678                           tosu	equ	0xFFF
  3679                           tosh	equ	0xFFE
  3680                           tosl	equ	0xFFD
  3681                           pclath	equ	0xFFA
  3682                           tblptru	equ	0xFF8
  3683                           tblptrh	equ	0xFF7
  3684                           tblptrl	equ	0xFF6
  3685                           tablat	equ	0xFF5
  3686                           prodh	equ	0xFF4
  3687                           prodl	equ	0xFF3
  3688                           intcon	equ	0xFF2
  3689                           indf0	equ	0xFEF
  3690                           postinc0	equ	0xFEE
  3691                           fsr0h	equ	0xFEA
  3692                           fsr0l	equ	0xFE9
  3693                           wreg	equ	0xFE8
  3694                           indf1	equ	0xFE7
  3695                           postinc1	equ	0xFE6
  3696                           postdec1	equ	0xFE5
  3697                           plusw1	equ	0xFE3
  3698                           fsr1h	equ	0xFE2
  3699                           fsr1l	equ	0xFE1
  3700                           indf2	equ	0xFDF
  3701                           postinc2	equ	0xFDE
  3702                           postdec2	equ	0xFDD
  3703                           plusw2	equ	0xFDB
  3704                           fsr2h	equ	0xFDA
  3705                           fsr2l	equ	0xFD9
  3706                           status	equ	0xFD8
  3707                           
  3708 ;; *************** function _TCP_Server *****************
  3709 ;; Defined at:
  3710 ;;		line 76 in file "main.c"
  3711 ;; Parameters:    Size  Location     Type
  3712 ;;		None
  3713 ;; Auto vars:     Size  Location     Type
  3714 ;;  i               2   26[BANK1 ] unsigned int 
  3715 ;;  rxLen           2   24[BANK1 ] unsigned int 
  3716 ;;  txLen           2   21[BANK1 ] unsigned int 
  3717 ;;  lmessage        2    0        unsigned int 
  3718 ;;  socket_state    1   23[BANK1 ] enum E7289
  3719 ;; Return value:  Size  Location     Type
  3720 ;;                  1    wreg      void 
  3721 ;; Registers used:
  3722 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  3723 ;; Tracked objects:
  3724 ;;		On entry : F/2
  3725 ;;		On exit  : 0/0
  3726 ;;		Unchanged: 0/0
  3727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3729 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3731 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3732 ;;Total ram usage:        7 bytes
  3733 ;; Hardware stack levels used:    1
  3734 ;; Hardware stack levels required when called:   16
  3735 ;; This function calls:
  3736 ;;		_SYSLOG_Write
  3737 ;;		_TCP_Bind
  3738 ;;		_TCP_GetReceivedData
  3739 ;;		_TCP_GetRxLength
  3740 ;;		_TCP_InsertRxBuffer
  3741 ;;		_TCP_Listen
  3742 ;;		_TCP_Send
  3743 ;;		_TCP_SendDone
  3744 ;;		_TCP_SocketInit
  3745 ;;		_TCP_SocketPoll
  3746 ;; This function is called by:
  3747 ;;		_main
  3748 ;; This function uses a non-reentrant model
  3749 ;;
  3750                           
  3751                           	psect	text15
  3752  004052                     __ptext15:
  3753                           	opt stack 0
  3754  004052                     _TCP_Server:
  3755                           	opt stack 14
  3756                           
  3757                           ; BSR set to: 2
  3758                           ;main.c: 79: static tcpTCB_t port7TCB;
  3759                           ;main.c: 82: static uint8_t rxdataPort7[20];
  3760                           ;main.c: 83: static uint8_t txdataPort7[20];
  3761                           ;main.c: 84: static uint8_t message[20];
  3762                           ;main.c: 85: uint16_t rxLen, txLen, i,lmessage;
  3763                           ;main.c: 86: socketState_t socket_state;
  3764                           ;main.c: 87: static uint8_t U1,U2;
  3765                           ;main.c: 89: socket_state = TCP_SocketPoll(&port7TCB);
  3766                           
  3767                           ;incstack = 0
  3768  004052  0E2C               	movlw	low TCP_Server@port7TCB
  3769  004054  6E1F               	movwf	TCP_SocketPoll@socket_ptr,c
  3770  004056  0E02               	movlw	high TCP_Server@port7TCB
  3771  004058  6E20               	movwf	TCP_SocketPoll@socket_ptr+1,c
  3772  00405A  EC1B  F031         	call	_TCP_SocketPoll	;wreg free
  3773  00405E  0101               	movlb	1	; () banked
  3774  004060  6F17               	movwf	TCP_Server@socket_state& (0+255),b
  3775                           
  3776                           ; BSR set to: 1
  3777                           ;main.c: 92: SYSLOG_Write("NO LINKED");
  3778  004062  0E9F               	movlw	low STR_5
  3779  004064  D8EE               	call	PL547	;call to abstracted procedure
  3780  004066  ECDD  F030         	call	_SYSLOG_Write	;wreg free
  3781                           
  3782                           ;main.c: 93: switch(socket_state)
  3783  00406A  D0E0               	goto	l9934
  3784  00406C                     l9894:
  3785                           
  3786                           ; BSR set to: 1
  3787                           ;main.c: 97: TCP_SocketInit(&port7TCB);
  3788  00406C  0E2C               	movlw	low TCP_Server@port7TCB
  3789  00406E  6E1F               	movwf	TCP_SocketInit@tcbPtr,c
  3790  004070  0E02               	movlw	high TCP_Server@port7TCB
  3791  004072  6E20               	movwf	TCP_SocketInit@tcbPtr+1,c
  3792  004074  EF06  F02A         	goto	_TCP_SocketInit	;wreg free
  3793  004078                     l9896:
  3794                           
  3795                           ; BSR set to: 1
  3796                           ;main.c: 101: TCP_Bind(&port7TCB, 7);
  3797  004078  0E2C               	movlw	low TCP_Server@port7TCB
  3798  00407A  6E1F               	movwf	TCP_Bind@tcbPtr,c
  3799  00407C  0E02               	movlw	high TCP_Server@port7TCB
  3800  00407E  6E20               	movwf	TCP_Bind@tcbPtr+1,c
  3801  004080  6A22               	clrf	TCP_Bind@port+1,c
  3802  004082  0E07               	movlw	7
  3803  004084  6E21               	movwf	TCP_Bind@port,c
  3804  004086  EC41  F031         	call	_TCP_Bind	;wreg free
  3805                           
  3806                           ;main.c: 103: TCP_InsertRxBuffer(&port7TCB, rxdataPort7, sizeof(rxdataPort7));
  3807  00408A  D8E1               	call	PL581	;call to abstracted procedure
  3808  00408C  ECE3  F02B         	call	_TCP_InsertRxBuffer	;wreg free
  3809                           
  3810                           ;main.c: 105: TCP_Listen(&port7TCB);
  3811  004090  0E2C               	movlw	low TCP_Server@port7TCB
  3812  004092  0101               	movlb	1	; () banked
  3813  004094  6F11               	movwf	TCP_Listen@tcbPtr& (0+255),b
  3814  004096  0E02               	movlw	high TCP_Server@port7TCB
  3815  004098  6F12               	movwf	(TCP_Listen@tcbPtr+1)& (0+255),b
  3816  00409A  EFA7  F02B         	goto	_TCP_Listen	;wreg free
  3817  00409E                     l9902:
  3818                           
  3819                           ; BSR set to: 1
  3820                           ;main.c: 110: SYSLOG_Write("LINKED");
  3821  00409E  0EA2               	movlw	low (STR_5+3)
  3822  0040A0  D8D0               	call	PL547	;call to abstracted procedure
  3823  0040A2  ECDD  F030         	call	_SYSLOG_Write	;wreg free
  3824                           
  3825                           ;main.c: 112: if(TCP_SendDone(&port7TCB))
  3826  0040A6  0E2C               	movlw	low TCP_Server@port7TCB
  3827  0040A8  6E1F               	movwf	TCP_SendDone@tcbPtr,c
  3828  0040AA  0E02               	movlw	high TCP_Server@port7TCB
  3829  0040AC  6E20               	movwf	TCP_SendDone@tcbPtr+1,c
  3830  0040AE  ECB3  F030         	call	_TCP_SendDone	;wreg free
  3831  0040B2  0900               	iorlw	0
  3832  0040B4  B4D8               	btfsc	status,2,c
  3833  0040B6  0012               	return	
  3834                           
  3835                           ;main.c: 113: {
  3836                           ;main.c: 115: rxLen = TCP_GetRxLength(&port7TCB);
  3837  0040B8  0E2C               	movlw	low TCP_Server@port7TCB
  3838  0040BA  6E1F               	movwf	TCP_GetRxLength@tcbPtr,c
  3839  0040BC  0E02               	movlw	high TCP_Server@port7TCB
  3840  0040BE  6E20               	movwf	TCP_GetRxLength@tcbPtr+1,c
  3841  0040C0  ECC4  F02C         	call	_TCP_GetRxLength	;wreg free
  3842  0040C4  C01F  F118         	movff	?_TCP_GetRxLength,TCP_Server@rxLen
  3843  0040C8  C020  F119         	movff	?_TCP_GetRxLength+1,TCP_Server@rxLen+1
  3844                           
  3845                           ;main.c: 116: if(rxLen > 0)
  3846  0040CC  0101               	movlb	1	; () banked
  3847  0040CE  5118               	movf	TCP_Server@rxLen& (0+255),w,b
  3848  0040D0  1119               	iorwf	(TCP_Server@rxLen+1)& (0+255),w,b
  3849  0040D2  B4D8               	btfsc	status,2,c
  3850  0040D4  0012               	return	
  3851                           
  3852                           ; BSR set to: 1
  3853                           ;main.c: 117: {
  3854                           ;main.c: 118: rxLen = TCP_GetReceivedData(&port7TCB);
  3855  0040D6  0E2C               	movlw	low TCP_Server@port7TCB
  3856  0040D8  6E1F               	movwf	TCP_GetReceivedData@tcbPtr,c
  3857  0040DA  0E02               	movlw	high TCP_Server@port7TCB
  3858  0040DC  6E20               	movwf	TCP_GetReceivedData@tcbPtr+1,c
  3859  0040DE  EC1E  F02C         	call	_TCP_GetReceivedData	;wreg free
  3860  0040E2  C01F  F118         	movff	?_TCP_GetReceivedData,TCP_Server@rxLen
  3861  0040E6  C020  F119         	movff	?_TCP_GetReceivedData+1,TCP_Server@rxLen+1
  3862                           
  3863                           ;main.c: 175: U1 = 0x30 + ( rxdataPort7[11] & 0b00000111 );
  3864  0040EA  0102               	movlb	2	; () banked
  3865  0040EC  516E               	movf	(TCP_Server@rxdataPort7+11)& (0+255),w,b
  3866  0040EE  0B07               	andlw	7
  3867  0040F0  0F30               	addlw	48
  3868  0040F2  6E45               	movwf	TCP_Server@U1,c
  3869                           
  3870                           ; BSR set to: 2
  3871                           ;main.c: 176: PORTJ=0;
  3872  0040F4  6A88               	clrf	3976,c	;volatile
  3873                           
  3874                           ;main.c: 177: switch( U1 )
  3875  0040F6  D01A               	goto	l9916
  3876  0040F8                     l1579:
  3877                           
  3878                           ; BSR set to: 2
  3879                           ;main.c: 180: PORTBbits.RB1 = 0b0;
  3880  0040F8  9281               	bcf	3969,1,c	;volatile
  3881  0040FA  D001               	goto	L1
  3882  0040FC                     l1581:
  3883                           
  3884                           ; BSR set to: 2
  3885                           ;main.c: 187: PORTBbits.RB1 = 0b1;
  3886  0040FC  8281               	bsf	3969,1,c	;volatile
  3887  0040FE                     L1:
  3888                           
  3889                           ;main.c: 188: PORTBbits.RB2 = 0b0;
  3890  0040FE  9481               	bcf	3969,2,c	;volatile
  3891  004100  D002               	goto	L2
  3892  004102                     l1582:
  3893                           
  3894                           ; BSR set to: 2
  3895                           ;main.c: 194: PORTBbits.RB1 = 0b0;
  3896  004102  9281               	bcf	3969,1,c	;volatile
  3897  004104  D003               	goto	L3
  3898  004106                     L2:
  3899                           
  3900                           ;main.c: 196: PORTBbits.RB3 = 0b0;
  3901  004106  9681               	bcf	3969,3,c	;volatile
  3902                           
  3903                           ;main.c: 198: break;
  3904  004108  D023               	goto	l9918
  3905  00410A                     l1583:
  3906                           
  3907                           ; BSR set to: 2
  3908                           ;main.c: 200: PORTBbits.RB1 = 0b1;
  3909  00410A  8281               	bsf	3969,1,c	;volatile
  3910  00410C                     L3:
  3911                           
  3912                           ;main.c: 201: PORTBbits.RB2 = 0b1;
  3913  00410C  8481               	bsf	3969,2,c	;volatile
  3914  00410E  D7FB               	goto	L2
  3915  004110                     l1584:
  3916                           
  3917                           ; BSR set to: 2
  3918                           ;main.c: 206: PORTBbits.RB1 = 0b0;
  3919  004110  9281               	bcf	3969,1,c	;volatile
  3920  004112  D001               	goto	L4
  3921  004114                     l1585:
  3922                           
  3923                           ; BSR set to: 2
  3924                           ;main.c: 212: PORTBbits.RB1 = 0b1;
  3925  004114  8281               	bsf	3969,1,c	;volatile
  3926  004116                     L4:
  3927                           
  3928                           ;main.c: 213: PORTBbits.RB2 = 0b0;
  3929  004116  9481               	bcf	3969,2,c	;volatile
  3930  004118  D002               	goto	L5
  3931  00411A                     l1586:
  3932                           
  3933                           ; BSR set to: 2
  3934                           ;main.c: 218: PORTBbits.RB1 = 0b0;
  3935  00411A  9281               	bcf	3969,1,c	;volatile
  3936  00411C  D003               	goto	L6
  3937  00411E                     L5:
  3938                           
  3939                           ;main.c: 220: PORTBbits.RB3 = 0b1;
  3940  00411E  8681               	bsf	3969,3,c	;volatile
  3941                           
  3942                           ;main.c: 222: break;
  3943  004120  D017               	goto	l9918
  3944  004122                     l1587:
  3945                           
  3946                           ; BSR set to: 2
  3947                           ;main.c: 224: PORTBbits.RB1 = 0b1;
  3948  004122  8281               	bsf	3969,1,c	;volatile
  3949  004124                     L6:
  3950                           
  3951                           ;main.c: 225: PORTBbits.RB2 = 0b1;
  3952  004124  8481               	bsf	3969,2,c	;volatile
  3953  004126  D7FB               	goto	L5
  3954  004128                     l1588:
  3955                           
  3956                           ; BSR set to: 2
  3957                           ;main.c: 230: PORTJ=0;
  3958  004128  6A88               	clrf	3976,c	;volatile
  3959                           
  3960                           ;main.c: 231: }
  3961  00412A  D012               	goto	l9918
  3962  00412C                     l9916:
  3963                           
  3964                           ; BSR set to: 2
  3965  00412C  5045               	movf	TCP_Server@U1,w,c
  3966                           
  3967                           ; Switch size 1, requested type "space"
  3968                           ; Number of cases is 8, Range of values is 48 to 55
  3969                           ; switch strategies available:
  3970                           ; Name         Instructions Cycles
  3971                           ; simple_byte           25    13 (average)
  3972                           ;	Chosen strategy is simple_byte
  3973  00412E  0A30               	xorlw	48	; case 48
  3974  004130  E0E3               	bz	l1579
  3975  004132  0A01               	xorlw	1	; case 49
  3976  004134  E0E3               	bz	l1581
  3977  004136  0A03               	xorlw	3	; case 50
  3978  004138  E0E4               	bz	l1582
  3979  00413A  0A01               	xorlw	1	; case 51
  3980  00413C  E0E6               	bz	l1583
  3981  00413E  0A07               	xorlw	7	; case 52
  3982  004140  E0E7               	bz	l1584
  3983  004142  0A01               	xorlw	1	; case 53
  3984  004144  E0E7               	bz	l1585
  3985  004146  0A03               	xorlw	3	; case 54
  3986  004148  E0E8               	bz	l1586
  3987  00414A  0A01               	xorlw	1	; case 55
  3988  00414C  E0EA               	bz	l1587
  3989  00414E  D7EC               	goto	l1588
  3990  004150                     l9918:
  3991                           
  3992                           ; BSR set to: 2
  3993                           ;main.c: 232: U2 = rxdataPort7[11] & 0b00111000 ;
  3994  004150  516E               	movf	(TCP_Server@rxdataPort7+11)& (0+255),w,b
  3995  004152  0B38               	andlw	56
  3996  004154  6E46               	movwf	TCP_Server@U2,c
  3997                           
  3998                           ;main.c: 236: switch( U2 )
  3999  004156  D02A               	goto	l9920
  4000  004158                     l1590:
  4001                           
  4002                           ; BSR set to: 2
  4003                           ;main.c: 239: PORTBbits.RB4 = 0b0;
  4004  004158  9881               	bcf	3969,4,c	;volatile
  4005                           
  4006                           ;main.c: 240: PORTBbits.RB5 = 0b0;
  4007  00415A  9A81               	bcf	3969,5,c	;volatile
  4008                           
  4009                           ;main.c: 241: PORTBbits.RB6 = 0b0;
  4010  00415C  9C81               	bcf	3969,6,c	;volatile
  4011                           
  4012                           ;main.c: 242: PORTJbits.RJ0=1;
  4013  00415E  8088               	bsf	3976,0,c	;volatile
  4014                           
  4015                           ;main.c: 244: break;
  4016  004160  D036               	goto	l1591
  4017  004162                     l1592:
  4018                           
  4019                           ; BSR set to: 2
  4020                           ;main.c: 246: PORTBbits.RB4 = 0b1;
  4021  004162  8881               	bsf	3969,4,c	;volatile
  4022                           
  4023                           ;main.c: 247: PORTBbits.RB5 = 0b0;
  4024  004164  9A81               	bcf	3969,5,c	;volatile
  4025                           
  4026                           ;main.c: 248: PORTBbits.RB6 = 0b0;
  4027  004166  9C81               	bcf	3969,6,c	;volatile
  4028                           
  4029                           ;main.c: 249: PORTJbits.RJ1=1;
  4030  004168  8288               	bsf	3976,1,c	;volatile
  4031                           
  4032                           ;main.c: 251: break;
  4033  00416A  D031               	goto	l1591
  4034  00416C                     l1593:
  4035                           
  4036                           ; BSR set to: 2
  4037                           ;main.c: 253: PORTBbits.RB4 = 0b0;
  4038  00416C  9881               	bcf	3969,4,c	;volatile
  4039                           
  4040                           ;main.c: 254: PORTBbits.RB5 = 0b1;
  4041  00416E  8A81               	bsf	3969,5,c	;volatile
  4042                           
  4043                           ;main.c: 255: PORTBbits.RB6 = 0b0;
  4044  004170  9C81               	bcf	3969,6,c	;volatile
  4045                           
  4046                           ;main.c: 256: PORTJbits.RJ2=1;
  4047  004172  8488               	bsf	3976,2,c	;volatile
  4048                           
  4049                           ;main.c: 257: break;
  4050  004174  D02C               	goto	l1591
  4051  004176                     l1594:
  4052                           
  4053                           ; BSR set to: 2
  4054                           ;main.c: 259: PORTBbits.RB4 = 0b1;
  4055  004176  8881               	bsf	3969,4,c	;volatile
  4056                           
  4057                           ;main.c: 260: PORTBbits.RB5 = 0b1;
  4058  004178  8A81               	bsf	3969,5,c	;volatile
  4059                           
  4060                           ;main.c: 261: PORTBbits.RB6 = 0b0;
  4061  00417A  9C81               	bcf	3969,6,c	;volatile
  4062                           
  4063                           ;main.c: 262: PORTJbits.RJ3=1;
  4064  00417C  8688               	bsf	3976,3,c	;volatile
  4065                           
  4066                           ;main.c: 263: break;
  4067  00417E  D027               	goto	l1591
  4068  004180                     l1595:
  4069                           
  4070                           ; BSR set to: 2
  4071                           ;main.c: 265: PORTBbits.RB4 = 0b0;
  4072  004180  9881               	bcf	3969,4,c	;volatile
  4073                           
  4074                           ;main.c: 266: PORTBbits.RB5 = 0b0;
  4075  004182  9A81               	bcf	3969,5,c	;volatile
  4076                           
  4077                           ;main.c: 267: PORTBbits.RB6 = 0b1;
  4078  004184  8C81               	bsf	3969,6,c	;volatile
  4079                           
  4080                           ;main.c: 268: PORTJbits.RJ4=1;
  4081  004186  8888               	bsf	3976,4,c	;volatile
  4082                           
  4083                           ;main.c: 269: break;
  4084  004188  D022               	goto	l1591
  4085  00418A                     l1596:
  4086                           
  4087                           ; BSR set to: 2
  4088                           ;main.c: 271: PORTBbits.RB4 = 0b1;
  4089  00418A  8881               	bsf	3969,4,c	;volatile
  4090                           
  4091                           ;main.c: 272: PORTBbits.RB5 = 0b0;
  4092  00418C  9A81               	bcf	3969,5,c	;volatile
  4093                           
  4094                           ;main.c: 273: PORTBbits.RB6 = 0b1;
  4095  00418E  8C81               	bsf	3969,6,c	;volatile
  4096                           
  4097                           ;main.c: 274: PORTJbits.RJ5=1;
  4098  004190  8A88               	bsf	3976,5,c	;volatile
  4099                           
  4100                           ;main.c: 275: break;
  4101  004192  D01D               	goto	l1591
  4102  004194                     l1597:
  4103                           
  4104                           ; BSR set to: 2
  4105                           ;main.c: 277: PORTBbits.RB4 = 0b0;
  4106  004194  9881               	bcf	3969,4,c	;volatile
  4107                           
  4108                           ;main.c: 278: PORTBbits.RB5 = 0b1;
  4109  004196  8A81               	bsf	3969,5,c	;volatile
  4110                           
  4111                           ;main.c: 279: PORTBbits.RB6 = 0b1;
  4112  004198  8C81               	bsf	3969,6,c	;volatile
  4113                           
  4114                           ;main.c: 280: PORTJbits.RJ6=1;
  4115  00419A  8C88               	bsf	3976,6,c	;volatile
  4116                           
  4117                           ;main.c: 281: break;
  4118  00419C  D018               	goto	l1591
  4119  00419E                     l1598:
  4120                           
  4121                           ; BSR set to: 2
  4122                           ;main.c: 283: PORTBbits.RB4 = 0b1;
  4123  00419E  8881               	bsf	3969,4,c	;volatile
  4124                           
  4125                           ;main.c: 284: PORTBbits.RB5 = 0b1;
  4126  0041A0  8A81               	bsf	3969,5,c	;volatile
  4127                           
  4128                           ;main.c: 285: PORTBbits.RB6 = 0b1;
  4129  0041A2  8C81               	bsf	3969,6,c	;volatile
  4130                           
  4131                           ;main.c: 286: PORTJbits.RJ7=1;
  4132  0041A4  8E88               	bsf	3976,7,c	;volatile
  4133                           
  4134                           ;main.c: 287: break;
  4135  0041A6  D013               	goto	l1591
  4136  0041A8                     l1599:
  4137                           
  4138                           ; BSR set to: 2
  4139                           ;main.c: 289: PORTJ=0;
  4140  0041A8  6A88               	clrf	3976,c	;volatile
  4141                           
  4142                           ;main.c: 290: }
  4143  0041AA  D011               	goto	l1591
  4144  0041AC                     l9920:
  4145                           
  4146                           ; BSR set to: 2
  4147  0041AC  5046               	movf	TCP_Server@U2,w,c
  4148                           
  4149                           ; Switch size 1, requested type "space"
  4150                           ; Number of cases is 8, Range of values is 0 to 56
  4151                           ; switch strategies available:
  4152                           ; Name         Instructions Cycles
  4153                           ; simple_byte           25    13 (average)
  4154                           ;	Chosen strategy is simple_byte
  4155  0041AE  E0D4               	bz	l1590
  4156  0041B0  0A08               	xorlw	8	; case 8
  4157  0041B2  E0D7               	bz	l1592
  4158  0041B4  0A18               	xorlw	24	; case 16
  4159  0041B6  E0DA               	bz	l1593
  4160  0041B8  0A08               	xorlw	8	; case 24
  4161  0041BA  E0DD               	bz	l1594
  4162  0041BC  0A38               	xorlw	56	; case 32
  4163  0041BE  E0E0               	bz	l1595
  4164  0041C0  0A08               	xorlw	8	; case 40
  4165  0041C2  E0E3               	bz	l1596
  4166  0041C4  0A18               	xorlw	24	; case 48
  4167  0041C6  E0E6               	bz	l1597
  4168  0041C8  0A08               	xorlw	8	; case 56
  4169  0041CA  E0E9               	bz	l1598
  4170  0041CC  D7ED               	goto	l1599
  4171  0041CE                     l1591:
  4172                           
  4173                           ; BSR set to: 2
  4174                           ;main.c: 313: for(i = 0; i < rxLen; i++)
  4175  0041CE  0101               	movlb	1	; () banked
  4176  0041D0  6B1A               	clrf	TCP_Server@i& (0+255),b
  4177  0041D2  6B1B               	clrf	(TCP_Server@i+1)& (0+255),b
  4178  0041D4  D010               	goto	l9926
  4179  0041D6                     l9922:
  4180                           
  4181                           ; BSR set to: 1
  4182                           ;main.c: 314: {
  4183                           ;main.c: 315: txdataPort7[i] = rxdataPort7[i];
  4184  0041D6  0E63               	movlw	low TCP_Server@rxdataPort7
  4185  0041D8  251A               	addwf	TCP_Server@i& (0+255),w,b
  4186  0041DA  6ED9               	movwf	fsr2l,c
  4187  0041DC  0E02               	movlw	high TCP_Server@rxdataPort7
  4188  0041DE  211B               	addwfc	(TCP_Server@i+1)& (0+255),w,b
  4189  0041E0  6EDA               	movwf	fsr2h,c
  4190  0041E2  0E77               	movlw	low TCP_Server@txdataPort7
  4191  0041E4  251A               	addwf	TCP_Server@i& (0+255),w,b
  4192  0041E6  6EE1               	movwf	fsr1l,c
  4193  0041E8  0E02               	movlw	high TCP_Server@txdataPort7
  4194  0041EA  211B               	addwfc	(TCP_Server@i+1)& (0+255),w,b
  4195  0041EC  6EE2               	movwf	fsr1h,c
  4196  0041EE  CFDF FFE7          	movff	indf2,indf1
  4197                           
  4198                           ; BSR set to: 1
  4199  0041F2  4B1A               	infsnz	TCP_Server@i& (0+255),f,b
  4200  0041F4  2B1B               	incf	(TCP_Server@i+1)& (0+255),f,b
  4201  0041F6                     l9926:
  4202                           
  4203                           ; BSR set to: 1
  4204  0041F6  5118               	movf	TCP_Server@rxLen& (0+255),w,b
  4205  0041F8  5D1A               	subwf	TCP_Server@i& (0+255),w,b
  4206  0041FA  5119               	movf	(TCP_Server@rxLen+1)& (0+255),w,b
  4207  0041FC  591B               	subwfb	(TCP_Server@i+1)& (0+255),w,b
  4208  0041FE  E3EB               	bnc	l9922
  4209                           
  4210                           ; BSR set to: 1
  4211                           ;main.c: 316: }
  4212                           ;main.c: 319: TCP_InsertRxBuffer(&port7TCB, rxdataPort7, sizeof(rxdataPort7));
  4213  004200  D826               	call	PL581	;call to abstracted procedure
  4214  004202  ECE3  F02B         	call	_TCP_InsertRxBuffer	;wreg free
  4215                           
  4216                           ;main.c: 320: txLen = rxLen;
  4217  004206  C118  F115         	movff	TCP_Server@rxLen,TCP_Server@txLen
  4218  00420A  C119  F116         	movff	TCP_Server@rxLen+1,TCP_Server@txLen+1
  4219                           
  4220                           ;main.c: 322: TCP_Send(&port7TCB, txdataPort7, txLen);
  4221  00420E  0E2C               	movlw	low TCP_Server@port7TCB
  4222  004210  0100               	movlb	0	; () banked
  4223  004212  6FEE               	movwf	TCP_Send@tcbPtr& (0+255),b
  4224  004214  0E02               	movlw	high TCP_Server@port7TCB
  4225  004216  6FEF               	movwf	(TCP_Send@tcbPtr+1)& (0+255),b
  4226  004218  0E77               	movlw	low TCP_Server@txdataPort7
  4227  00421A  6FF0               	movwf	TCP_Send@data& (0+255),b
  4228  00421C  0E02               	movlw	high TCP_Server@txdataPort7
  4229  00421E  6FF1               	movwf	(TCP_Send@data+1)& (0+255),b
  4230  004220  C115  F0F2         	movff	TCP_Server@txLen,TCP_Send@dataLen
  4231  004224  C116  F0F3         	movff	TCP_Server@txLen+1,TCP_Send@dataLen+1
  4232  004228  EF6E  F029         	goto	_TCP_Send	;wreg free
  4233  00422C                     l9934:
  4234  00422C  0101               	movlb	1	; () banked
  4235  00422E  5117               	movf	TCP_Server@socket_state& (0+255),w,b
  4236                           
  4237                           ; Switch size 1, requested type "space"
  4238                           ; Number of cases is 3, Range of values is 0 to 3
  4239                           ; switch strategies available:
  4240                           ; Name         Instructions Cycles
  4241                           ; simple_byte           10     6 (average)
  4242                           ;	Chosen strategy is simple_byte
  4243  004230  E101 D71C          	bz	l9894
  4244  004234  0A01               	xorlw	1	; case 1
  4245  004236  E101 D71F          	bz	l9896
  4246  00423A  0A02               	xorlw	2	; case 3
  4247  00423C  E101 D72F          	bz	l9902
  4248  004240  0012               	return		;funcret
  4249  004242                     __end_of_TCP_Server:
  4250                           	opt stack 0
  4251  004242                     PL547:
  4252                           	opt stack 12
  4253  004242  6E31               	movwf	SYSLOG_Write@message,c
  4254  004244  5031               	movf	SYSLOG_Write@message,w,c
  4255  004246  A4D8               	btfss	status,2,c
  4256  004248  0E10               	movlw	high __smallconst
  4257  00424A  6E32               	movwf	SYSLOG_Write@message+1,c
  4258  00424C  0012               	return	
  4259  00424E                     __end_ofPL547:
  4260                           	opt stack 0
  4261  00424E                     PL581:
  4262                           	opt stack 14
  4263  00424E  0E2C               	movlw	low TCP_Server@port7TCB
  4264  004250  6E1F               	movwf	TCP_InsertRxBuffer@tcbPtr,c
  4265  004252  0E02               	movlw	high TCP_Server@port7TCB
  4266  004254  6E20               	movwf	TCP_InsertRxBuffer@tcbPtr+1,c
  4267  004256  0E63               	movlw	low TCP_Server@rxdataPort7
  4268  004258  6E21               	movwf	TCP_InsertRxBuffer@data,c
  4269  00425A  0E02               	movlw	high TCP_Server@rxdataPort7
  4270  00425C  6E22               	movwf	TCP_InsertRxBuffer@data+1,c
  4271  00425E  6A24               	clrf	TCP_InsertRxBuffer@data_len+1,c
  4272  004260  0E14               	movlw	20
  4273  004262  6E23               	movwf	TCP_InsertRxBuffer@data_len,c
  4274  004264  0C14               	retlw	20
  4275  004266                     __end_ofPL581:
  4276                           	opt stack 0
  4277                           tosu	equ	0xFFF
  4278                           tosh	equ	0xFFE
  4279                           tosl	equ	0xFFD
  4280                           pclath	equ	0xFFA
  4281                           tblptru	equ	0xFF8
  4282                           tblptrh	equ	0xFF7
  4283                           tblptrl	equ	0xFF6
  4284                           tablat	equ	0xFF5
  4285                           prodh	equ	0xFF4
  4286                           prodl	equ	0xFF3
  4287                           intcon	equ	0xFF2
  4288                           indf0	equ	0xFEF
  4289                           postinc0	equ	0xFEE
  4290                           fsr0h	equ	0xFEA
  4291                           fsr0l	equ	0xFE9
  4292                           wreg	equ	0xFE8
  4293                           indf1	equ	0xFE7
  4294                           postinc1	equ	0xFE6
  4295                           postdec1	equ	0xFE5
  4296                           plusw1	equ	0xFE3
  4297                           fsr1h	equ	0xFE2
  4298                           fsr1l	equ	0xFE1
  4299                           indf2	equ	0xFDF
  4300                           postinc2	equ	0xFDE
  4301                           postdec2	equ	0xFDD
  4302                           plusw2	equ	0xFDB
  4303                           fsr2h	equ	0xFDA
  4304                           fsr2l	equ	0xFD9
  4305                           status	equ	0xFD8
  4306                           
  4307 ;; *************** function _TCP_SocketInit *****************
  4308 ;; Defined at:
  4309 ;;		line 1181 in file "../../TCPIP Library/source/tcpv4.c"
  4310 ;; Parameters:    Size  Location     Type
  4311 ;;  tcbPtr          2   30[COMRAM] PTR struct .
  4312 ;;		 -> TCP_Server@port7TCB(55), 
  4313 ;; Auto vars:     Size  Location     Type
  4314 ;;  ret             1    0        enum E177
  4315 ;; Return value:  Size  Location     Type
  4316 ;;                  1    wreg      enum E177
  4317 ;; Registers used:
  4318 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4319 ;; Tracked objects:
  4320 ;;		On entry : C/1
  4321 ;;		On exit  : 0/0
  4322 ;;		Unchanged: 0/0
  4323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4324 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4325 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4327 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4328 ;;Total ram usage:        3 bytes
  4329 ;; Hardware stack levels used:    1
  4330 ;; Hardware stack levels required when called:    9
  4331 ;; This function calls:
  4332 ;;		_TCB_Check
  4333 ;;		_TCB_Insert
  4334 ;;		_TCB_Reset
  4335 ;; This function is called by:
  4336 ;;		_TCP_Server
  4337 ;; This function uses a non-reentrant model
  4338 ;;
  4339                           
  4340                           	psect	text16
  4341  00540C                     __ptext16:
  4342                           	opt stack 0
  4343  00540C                     _TCP_SocketInit:
  4344                           	opt stack 20
  4345                           
  4346                           ;tcpv4.c: 1186: if(TCB_Check(tcbPtr) == 0)
  4347                           
  4348                           ;incstack = 0
  4349  00540C  C01F  F017         	movff	TCP_SocketInit@tcbPtr,TCB_Check@ptr
  4350  005410  C020  F018         	movff	TCP_SocketInit@tcbPtr+1,TCB_Check@ptr+1
  4351  005414  EC68  F02B         	call	_TCB_Check	;wreg free
  4352  005418  0900               	iorlw	0
  4353  00541A  A4D8               	btfss	status,2,c
  4354  00541C  0012               	return	
  4355                           
  4356                           ;tcpv4.c: 1187: {
  4357                           ;tcpv4.c: 1188: TCB_Reset(tcbPtr);
  4358  00541E  C01F  F017         	movff	TCP_SocketInit@tcbPtr,TCB_Reset@tcbPtr
  4359  005422  C020  F018         	movff	TCP_SocketInit@tcbPtr+1,TCB_Reset@tcbPtr+1
  4360  005426  ECCE  F022         	call	_TCB_Reset	;wreg free
  4361                           
  4362                           ;tcpv4.c: 1190: tcbPtr->localWnd = 0;
  4363  00542A  EE20 F01A          	lfsr	2,26
  4364  00542E  D832               	call	PL501	;call to abstracted procedure
  4365  005430  6ADE               	clrf	postinc2,c
  4366  005432  6ADD               	clrf	postdec2,c
  4367                           
  4368                           ;tcpv4.c: 1191: tcbPtr->mss = 1460u;
  4369  005434  EE20 F01C          	lfsr	2,28
  4370  005438  D82D               	call	PL501	;call to abstracted procedure
  4371  00543A  0EB4               	movlw	180
  4372  00543C  6EDE               	movwf	postinc2,c
  4373  00543E  0E05               	movlw	5
  4374  005440  6EDD               	movwf	postdec2,c
  4375                           
  4376                           ;tcpv4.c: 1192: tcbPtr->fsmState = CLOSED;
  4377  005442  EE20 F02A          	lfsr	2,42
  4378  005446  D826               	call	PL501	;call to abstracted procedure
  4379  005448  6ADF               	clrf	indf2,c
  4380                           
  4381                           ;tcpv4.c: 1193: tcbPtr->connectionEvent = NOP;
  4382  00544A  EE20 F02B          	lfsr	2,43
  4383  00544E  D822               	call	PL501	;call to abstracted procedure
  4384  005450  0E0D               	movlw	13
  4385  005452  6EDF               	movwf	indf2,c
  4386                           
  4387                           ;tcpv4.c: 1194: tcbPtr->rxBufferStart = (0);
  4388  005454  EE20 F01E          	lfsr	2,30
  4389  005458  D81D               	call	PL501	;call to abstracted procedure
  4390                           
  4391                           ;tcpv4.c: 1195: tcbPtr->rxBufState = NO_BUFF;
  4392  00545A  EC54  F02C         	call	PL707	;call to abstracted procedure
  4393  00545E  D81A               	call	PL501	;call to abstracted procedure
  4394  005460  6ADF               	clrf	indf2,c
  4395                           
  4396                           ;tcpv4.c: 1196: tcbPtr->txBufferStart = (0);
  4397  005462  EE20 F023          	lfsr	2,35
  4398  005466  D816               	call	PL501	;call to abstracted procedure
  4399  005468  6ADE               	clrf	postinc2,c
  4400  00546A  6ADD               	clrf	postdec2,c
  4401                           
  4402                           ;tcpv4.c: 1197: tcbPtr->txBufferPtr = (0);
  4403  00546C  EE20 F025          	lfsr	2,37
  4404  005470  D811               	call	PL501	;call to abstracted procedure
  4405  005472  6ADE               	clrf	postinc2,c
  4406  005474  6ADD               	clrf	postdec2,c
  4407                           
  4408                           ;tcpv4.c: 1198: tcbPtr->bytesToSend = 0;
  4409  005476  EE20 F027          	lfsr	2,39
  4410  00547A  D80C               	call	PL501	;call to abstracted procedure
  4411  00547C  6ADE               	clrf	postinc2,c
  4412  00547E  6ADD               	clrf	postdec2,c
  4413                           
  4414                           ;tcpv4.c: 1199: tcbPtr->txBufState = NO_BUFF;
  4415  005480  EE20 F029          	lfsr	2,41
  4416  005484  D807               	call	PL501	;call to abstracted procedure
  4417  005486  6ADF               	clrf	indf2,c
  4418                           
  4419                           ;tcpv4.c: 1201: TCB_Insert(tcbPtr);
  4420  005488  C01F  F017         	movff	TCP_SocketInit@tcbPtr,TCB_Insert@ptr
  4421  00548C  C020  F018         	movff	TCP_SocketInit@tcbPtr+1,TCB_Insert@ptr+1
  4422  005490  EF19  F02F         	goto	_TCB_Insert	;wreg free
  4423  005494                     __end_of_TCP_SocketInit:
  4424                           	opt stack 0
  4425  005494                     PL501:
  4426                           	opt stack 20
  4427  005494  501F               	movf	TCP_SocketInit@tcbPtr,w,c
  4428  005496  26D9               	addwf	fsr2l,f,c
  4429  005498  5020               	movf	TCP_SocketInit@tcbPtr+1,w,c
  4430  00549A  22DA               	addwfc	fsr2h,f,c
  4431  00549C  0012               	return	
  4432  00549E                     __end_ofPL501:
  4433                           	opt stack 0
  4434                           tosu	equ	0xFFF
  4435                           tosh	equ	0xFFE
  4436                           tosl	equ	0xFFD
  4437                           pclath	equ	0xFFA
  4438                           tblptru	equ	0xFF8
  4439                           tblptrh	equ	0xFF7
  4440                           tblptrl	equ	0xFF6
  4441                           tablat	equ	0xFF5
  4442                           prodh	equ	0xFF4
  4443                           prodl	equ	0xFF3
  4444                           intcon	equ	0xFF2
  4445                           indf0	equ	0xFEF
  4446                           postinc0	equ	0xFEE
  4447                           fsr0h	equ	0xFEA
  4448                           fsr0l	equ	0xFE9
  4449                           wreg	equ	0xFE8
  4450                           indf1	equ	0xFE7
  4451                           postinc1	equ	0xFE6
  4452                           postdec1	equ	0xFE5
  4453                           plusw1	equ	0xFE3
  4454                           fsr1h	equ	0xFE2
  4455                           fsr1l	equ	0xFE1
  4456                           indf2	equ	0xFDF
  4457                           postinc2	equ	0xFDE
  4458                           postdec2	equ	0xFDD
  4459                           plusw2	equ	0xFDB
  4460                           fsr2h	equ	0xFDA
  4461                           fsr2l	equ	0xFD9
  4462                           status	equ	0xFD8
  4463                           
  4464 ;; *************** function _TCB_Insert *****************
  4465 ;; Defined at:
  4466 ;;		line 80 in file "../../TCPIP Library/source/tcpv4.c"
  4467 ;; Parameters:    Size  Location     Type
  4468 ;;  ptr             2   22[COMRAM] PTR struct .
  4469 ;;		 -> TCP_Server@port7TCB(55), 
  4470 ;; Auto vars:     Size  Location     Type
  4471 ;;		None
  4472 ;; Return value:  Size  Location     Type
  4473 ;;                  1    wreg      void 
  4474 ;; Registers used:
  4475 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4476 ;; Tracked objects:
  4477 ;;		On entry : 0/1
  4478 ;;		On exit  : 0/0
  4479 ;;		Unchanged: 0/0
  4480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4481 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4484 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4485 ;;Total ram usage:        2 bytes
  4486 ;; Hardware stack levels used:    1
  4487 ;; Hardware stack levels required when called:    8
  4488 ;; This function calls:
  4489 ;;		Nothing
  4490 ;; This function is called by:
  4491 ;;		_TCP_SocketInit
  4492 ;; This function uses a non-reentrant model
  4493 ;;
  4494                           
  4495                           	psect	text17
  4496  005E32                     __ptext17:
  4497                           	opt stack 0
  4498  005E32                     _TCB_Insert:
  4499                           	opt stack 20
  4500                           
  4501                           ;tcpv4.c: 84: if(tcbList != (0))
  4502                           
  4503                           ;incstack = 0
  4504  005E32  5041               	movf	_tcbList,w,c
  4505  005E34  1042               	iorwf	_tcbList+1,w,c
  4506  005E36  E00A               	bz	l1086
  4507                           
  4508                           ;tcpv4.c: 85: {
  4509                           ;tcpv4.c: 87: tcbList->prevTCB = ptr;
  4510  005E38  EE20 F02E          	lfsr	2,46
  4511  005E3C  5041               	movf	_tcbList,w,c
  4512  005E3E  26D9               	addwf	fsr2l,f,c
  4513  005E40  5042               	movf	_tcbList+1,w,c
  4514  005E42  22DA               	addwfc	fsr2h,f,c
  4515  005E44  C017  FFDE         	movff	TCB_Insert@ptr,postinc2
  4516  005E48  C018  FFDD         	movff	TCB_Insert@ptr+1,postdec2
  4517  005E4C                     l1086:
  4518                           
  4519                           ;tcpv4.c: 88: }
  4520                           ;tcpv4.c: 89: ptr->nextTCB = tcbList;
  4521  005E4C  EE20 F02C          	lfsr	2,44
  4522  005E50  D80F               	call	PL711	;call to abstracted procedure
  4523  005E52  C041  FFDE         	movff	_tcbList,postinc2
  4524  005E56  C042  FFDD         	movff	_tcbList+1,postdec2
  4525                           
  4526                           ;tcpv4.c: 90: tcbList = ptr;
  4527  005E5A  C017  F041         	movff	TCB_Insert@ptr,_tcbList
  4528  005E5E  C018  F042         	movff	TCB_Insert@ptr+1,_tcbList+1
  4529                           
  4530                           ;tcpv4.c: 91: ptr->prevTCB = (0);
  4531  005E62  EE20 F02E          	lfsr	2,46
  4532  005E66  D804               	call	PL711	;call to abstracted procedure
  4533  005E68  6ADE               	clrf	postinc2,c
  4534  005E6A  6ADD               	clrf	postdec2,c
  4535                           
  4536                           ;tcpv4.c: 92: tcbListSize ++;
  4537  005E6C  2A47               	incf	_tcbListSize,f,c
  4538  005E6E  0C00               	retlw	0	;funcret
  4539  005E70                     __end_of_TCB_Insert:
  4540                           	opt stack 0
  4541  005E70                     PL711:
  4542                           	opt stack 20
  4543  005E70  5017               	movf	TCB_Insert@ptr,w,c
  4544  005E72  26D9               	addwf	fsr2l,f,c
  4545  005E74  5018               	movf	TCB_Insert@ptr+1,w,c
  4546  005E76  22DA               	addwfc	fsr2h,f,c
  4547  005E78  0012               	return	
  4548  005E7A                     __end_ofPL711:
  4549                           	opt stack 0
  4550                           tosu	equ	0xFFF
  4551                           tosh	equ	0xFFE
  4552                           tosl	equ	0xFFD
  4553                           pclath	equ	0xFFA
  4554                           tblptru	equ	0xFF8
  4555                           tblptrh	equ	0xFF7
  4556                           tblptrl	equ	0xFF6
  4557                           tablat	equ	0xFF5
  4558                           prodh	equ	0xFF4
  4559                           prodl	equ	0xFF3
  4560                           intcon	equ	0xFF2
  4561                           indf0	equ	0xFEF
  4562                           postinc0	equ	0xFEE
  4563                           fsr0h	equ	0xFEA
  4564                           fsr0l	equ	0xFE9
  4565                           wreg	equ	0xFE8
  4566                           indf1	equ	0xFE7
  4567                           postinc1	equ	0xFE6
  4568                           postdec1	equ	0xFE5
  4569                           plusw1	equ	0xFE3
  4570                           fsr1h	equ	0xFE2
  4571                           fsr1l	equ	0xFE1
  4572                           indf2	equ	0xFDF
  4573                           postinc2	equ	0xFDE
  4574                           postdec2	equ	0xFDD
  4575                           plusw2	equ	0xFDB
  4576                           fsr2h	equ	0xFDA
  4577                           fsr2l	equ	0xFD9
  4578                           status	equ	0xFD8
  4579                           
  4580 ;; *************** function _TCP_SendDone *****************
  4581 ;; Defined at:
  4582 ;;		line 1347 in file "../../TCPIP Library/source/tcpv4.c"
  4583 ;; Parameters:    Size  Location     Type
  4584 ;;  tcbPtr          2   30[COMRAM] PTR struct .
  4585 ;;		 -> TCP_Server@port7TCB(55), 
  4586 ;; Auto vars:     Size  Location     Type
  4587 ;;  ret             1   32[COMRAM] unsigned char 
  4588 ;; Return value:  Size  Location     Type
  4589 ;;                  1    wreg      unsigned char 
  4590 ;; Registers used:
  4591 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4592 ;; Tracked objects:
  4593 ;;		On entry : 0/1
  4594 ;;		On exit  : 0/0
  4595 ;;		Unchanged: 0/0
  4596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4597 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4598 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4600 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4601 ;;Total ram usage:        3 bytes
  4602 ;; Hardware stack levels used:    1
  4603 ;; Hardware stack levels required when called:    9
  4604 ;; This function calls:
  4605 ;;		_TCB_Check
  4606 ;; This function is called by:
  4607 ;;		_TCP_Server
  4608 ;; This function uses a non-reentrant model
  4609 ;;
  4610                           
  4611                           	psect	text18
  4612  006166                     __ptext18:
  4613                           	opt stack 0
  4614  006166                     _TCP_SendDone:
  4615                           	opt stack 20
  4616                           
  4617                           ;tcpv4.c: 1349: bool ret = 0;
  4618                           
  4619                           ;incstack = 0
  4620  006166  6A21               	clrf	TCP_SendDone@ret,c
  4621                           
  4622                           ;tcpv4.c: 1351: if(TCB_Check(tcbPtr))
  4623  006168  C01F  F017         	movff	TCP_SendDone@tcbPtr,TCB_Check@ptr
  4624  00616C  C020  F018         	movff	TCP_SendDone@tcbPtr+1,TCB_Check@ptr+1
  4625  006170  EC68  F02B         	call	_TCB_Check	;wreg free
  4626  006174  0900               	iorlw	0
  4627  006176  E00A               	bz	l1356
  4628                           
  4629                           ;tcpv4.c: 1352: {
  4630                           ;tcpv4.c: 1353: if (tcbPtr->txBufState == NO_BUFF)
  4631  006178  EE20 F029          	lfsr	2,41
  4632  00617C  501F               	movf	TCP_SendDone@tcbPtr,w,c
  4633  00617E  26D9               	addwf	fsr2l,f,c
  4634  006180  5020               	movf	TCP_SendDone@tcbPtr+1,w,c
  4635  006182  22DA               	addwfc	fsr2h,f,c
  4636  006184  50DF               	movf	indf2,w,c
  4637  006186  E102               	bnz	l1356
  4638                           
  4639                           ;tcpv4.c: 1354: {
  4640                           ;tcpv4.c: 1355: ret = 1;
  4641  006188  0E01               	movlw	1
  4642  00618A  6E21               	movwf	TCP_SendDone@ret,c
  4643  00618C                     l1356:
  4644                           
  4645                           ;tcpv4.c: 1356: }
  4646                           ;tcpv4.c: 1357: }
  4647                           ;tcpv4.c: 1358: return ret;
  4648  00618C  5021               	movf	TCP_SendDone@ret,w,c
  4649  00618E  0012               	return		;funcret
  4650  006190                     __end_of_TCP_SendDone:
  4651                           	opt stack 0
  4652                           tosu	equ	0xFFF
  4653                           tosh	equ	0xFFE
  4654                           tosl	equ	0xFFD
  4655                           pclath	equ	0xFFA
  4656                           tblptru	equ	0xFF8
  4657                           tblptrh	equ	0xFF7
  4658                           tblptrl	equ	0xFF6
  4659                           tablat	equ	0xFF5
  4660                           prodh	equ	0xFF4
  4661                           prodl	equ	0xFF3
  4662                           intcon	equ	0xFF2
  4663                           indf0	equ	0xFEF
  4664                           postinc0	equ	0xFEE
  4665                           fsr0h	equ	0xFEA
  4666                           fsr0l	equ	0xFE9
  4667                           wreg	equ	0xFE8
  4668                           indf1	equ	0xFE7
  4669                           postinc1	equ	0xFE6
  4670                           postdec1	equ	0xFE5
  4671                           plusw1	equ	0xFE3
  4672                           fsr1h	equ	0xFE2
  4673                           fsr1l	equ	0xFE1
  4674                           indf2	equ	0xFDF
  4675                           postinc2	equ	0xFDE
  4676                           postdec2	equ	0xFDD
  4677                           plusw2	equ	0xFDB
  4678                           fsr2h	equ	0xFDA
  4679                           fsr2l	equ	0xFD9
  4680                           status	equ	0xFD8
  4681                           
  4682 ;; *************** function _TCP_Send *****************
  4683 ;; Defined at:
  4684 ;;		line 1318 in file "../../TCPIP Library/source/tcpv4.c"
  4685 ;; Parameters:    Size  Location     Type
  4686 ;;  tcbPtr          2  142[BANK0 ] PTR struct .
  4687 ;;		 -> TCP_Server@port7TCB(55), 
  4688 ;;  data            2  144[BANK0 ] PTR unsigned char 
  4689 ;;		 -> TCP_Server@txdataPort7(20), 
  4690 ;;  dataLen         2  146[BANK0 ] unsigned int 
  4691 ;; Auto vars:     Size  Location     Type
  4692 ;;  ret             1    0        unsigned char 
  4693 ;; Return value:  Size  Location     Type
  4694 ;;                  1    wreg      unsigned char 
  4695 ;; Registers used:
  4696 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4697 ;; Tracked objects:
  4698 ;;		On entry : F/0
  4699 ;;		On exit  : 0/0
  4700 ;;		Unchanged: 0/0
  4701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4702 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4703 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4705 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4706 ;;Total ram usage:        7 bytes
  4707 ;; Hardware stack levels used:    1
  4708 ;; Hardware stack levels required when called:   13
  4709 ;; This function calls:
  4710 ;;		_TCP_Snd
  4711 ;;		_TCP_SocketPoll
  4712 ;; This function is called by:
  4713 ;;		_TCP_Server
  4714 ;; This function uses a non-reentrant model
  4715 ;;
  4716                           
  4717                           	psect	text19
  4718  0052DC                     __ptext19:
  4719                           	opt stack 0
  4720  0052DC                     _TCP_Send:
  4721                           	opt stack 16
  4722                           
  4723                           ; BSR set to: 0
  4724                           ;tcpv4.c: 1322: if (TCP_SocketPoll(tcbPtr) == SOCKET_CONNECTED)
  4725                           
  4726                           ; BSR set to: 0
  4727                           
  4728                           ;incstack = 0
  4729  0052DC  C0EE  F01F         	movff	TCP_Send@tcbPtr,TCP_SocketPoll@socket_ptr
  4730  0052E0  C0EF  F020         	movff	TCP_Send@tcbPtr+1,TCP_SocketPoll@socket_ptr+1
  4731  0052E4  EC1B  F031         	call	_TCP_SocketPoll	;wreg free
  4732  0052E8  0A03               	xorlw	3
  4733  0052EA  A4D8               	btfss	status,2,c
  4734  0052EC  0012               	return	
  4735                           
  4736                           ;tcpv4.c: 1323: {
  4737                           ;tcpv4.c: 1324: if (tcbPtr->txBufState == NO_BUFF)
  4738  0052EE  0100               	movlb	0	; () banked
  4739  0052F0  EE20 F029          	lfsr	2,41
  4740  0052F4  D83A               	call	PL535	;call to abstracted procedure
  4741  0052F6  50DF               	movf	indf2,w,c
  4742  0052F8  A4D8               	btfss	status,2,c
  4743  0052FA  0012               	return	
  4744                           
  4745                           ; BSR set to: 0
  4746                           ;tcpv4.c: 1325: {
  4747                           ;tcpv4.c: 1326: if (data != (0))
  4748  0052FC  51F0               	movf	TCP_Send@data& (0+255),w,b
  4749  0052FE  11F1               	iorwf	(TCP_Send@data+1)& (0+255),w,b
  4750  005300  B4D8               	btfsc	status,2,c
  4751  005302  0012               	return	
  4752                           
  4753                           ; BSR set to: 0
  4754                           ;tcpv4.c: 1327: {
  4755                           ;tcpv4.c: 1328: tcbPtr->txBufferStart = data;
  4756  005304  EE20 F023          	lfsr	2,35
  4757  005308  D830               	call	PL535	;call to abstracted procedure
  4758  00530A  C0F0  FFDE         	movff	TCP_Send@data,postinc2
  4759  00530E  C0F1  FFDD         	movff	TCP_Send@data+1,postdec2
  4760                           
  4761                           ; BSR set to: 0
  4762                           ;tcpv4.c: 1329: tcbPtr->txBufferPtr = tcbPtr->txBufferStart;
  4763  005312  EE20 F023          	lfsr	2,35
  4764  005316  D829               	call	PL535	;call to abstracted procedure
  4765  005318  EE10 F025          	lfsr	1,37
  4766  00531C  51EE               	movf	TCP_Send@tcbPtr& (0+255),w,b
  4767  00531E  26E1               	addwf	fsr1l,f,c
  4768  005320  51EF               	movf	(TCP_Send@tcbPtr+1)& (0+255),w,b
  4769  005322  EC18  F02C         	call	PL677	;call to abstracted procedure
  4770                           
  4771                           ; BSR set to: 0
  4772                           ;tcpv4.c: 1330: tcbPtr->bytesToSend = dataLen;
  4773  005326  EE20 F027          	lfsr	2,39
  4774  00532A  D81F               	call	PL535	;call to abstracted procedure
  4775  00532C  C0F2  FFDE         	movff	TCP_Send@dataLen,postinc2
  4776  005330  C0F3  FFDD         	movff	TCP_Send@dataLen+1,postdec2
  4777                           
  4778                           ; BSR set to: 0
  4779                           ;tcpv4.c: 1331: tcbPtr->txBufState = TX_BUFF_IN_USE;
  4780  005334  EE20 F029          	lfsr	2,41
  4781  005338  D818               	call	PL535	;call to abstracted procedure
  4782  00533A  0E02               	movlw	2
  4783  00533C  6EDF               	movwf	indf2,c
  4784                           
  4785                           ; BSR set to: 0
  4786                           ;tcpv4.c: 1333: tcbPtr->timeoutReloadValue = ((unsigned long)1*2);
  4787  00533E  EE20 F032          	lfsr	2,50
  4788  005342  D813               	call	PL535	;call to abstracted procedure
  4789  005344  0E02               	movlw	2
  4790  005346  6EDE               	movwf	postinc2,c
  4791  005348  6ADD               	clrf	postdec2,c
  4792                           
  4793                           ; BSR set to: 0
  4794                           ;tcpv4.c: 1334: tcbPtr->timeoutsCount = (5u);
  4795  00534A  EE20 F034          	lfsr	2,52
  4796  00534E  D80D               	call	PL535	;call to abstracted procedure
  4797  005350  0E05               	movlw	5
  4798  005352  6EDF               	movwf	indf2,c
  4799                           
  4800                           ; BSR set to: 0
  4801                           ;tcpv4.c: 1336: tcbPtr->flags = 0x10U;
  4802  005354  EE20 F035          	lfsr	2,53
  4803  005358  D808               	call	PL535	;call to abstracted procedure
  4804  00535A  0E10               	movlw	16
  4805  00535C  6EDF               	movwf	indf2,c
  4806                           
  4807                           ; BSR set to: 0
  4808                           ;tcpv4.c: 1338: TCP_Snd(tcbPtr);
  4809  00535E  C0EE  F09F         	movff	TCP_Send@tcbPtr,TCP_Snd@tcbPtr
  4810  005362  C0EF  F0A0         	movff	TCP_Send@tcbPtr+1,TCP_Snd@tcbPtr+1
  4811  005366  EFAC  F012         	goto	_TCP_Snd	;wreg free
  4812  00536A                     __end_of_TCP_Send:
  4813                           	opt stack 0
  4814  00536A                     PL535:
  4815                           	opt stack 16
  4816  00536A  51EE               	movf	TCP_Send@tcbPtr& (0+255),w,b
  4817  00536C  26D9               	addwf	fsr2l,f,c
  4818  00536E  51EF               	movf	(TCP_Send@tcbPtr+1)& (0+255),w,b
  4819  005370  22DA               	addwfc	fsr2h,f,c
  4820  005372  0012               	return	
  4821  005374                     __end_ofPL535:
  4822                           	opt stack 0
  4823                           tosu	equ	0xFFF
  4824                           tosh	equ	0xFFE
  4825                           tosl	equ	0xFFD
  4826                           pclath	equ	0xFFA
  4827                           tblptru	equ	0xFF8
  4828                           tblptrh	equ	0xFF7
  4829                           tblptrl	equ	0xFF6
  4830                           tablat	equ	0xFF5
  4831                           prodh	equ	0xFF4
  4832                           prodl	equ	0xFF3
  4833                           intcon	equ	0xFF2
  4834                           indf0	equ	0xFEF
  4835                           postinc0	equ	0xFEE
  4836                           fsr0h	equ	0xFEA
  4837                           fsr0l	equ	0xFE9
  4838                           wreg	equ	0xFE8
  4839                           indf1	equ	0xFE7
  4840                           postinc1	equ	0xFE6
  4841                           postdec1	equ	0xFE5
  4842                           plusw1	equ	0xFE3
  4843                           fsr1h	equ	0xFE2
  4844                           fsr1l	equ	0xFE1
  4845                           indf2	equ	0xFDF
  4846                           postinc2	equ	0xFDE
  4847                           postdec2	equ	0xFDD
  4848                           plusw2	equ	0xFDB
  4849                           fsr2h	equ	0xFDA
  4850                           fsr2l	equ	0xFD9
  4851                           status	equ	0xFD8
  4852                           
  4853 ;; *************** function _TCP_SocketPoll *****************
  4854 ;; Defined at:
  4855 ;;		line 1220 in file "../../TCPIP Library/source/tcpv4.c"
  4856 ;; Parameters:    Size  Location     Type
  4857 ;;  socket_ptr      2   30[COMRAM] PTR struct .
  4858 ;;		 -> TCP_Server@port7TCB(55), 
  4859 ;; Auto vars:     Size  Location     Type
  4860 ;;  tmpSocketSta    1   32[COMRAM] enum E667
  4861 ;; Return value:  Size  Location     Type
  4862 ;;                  1    wreg      enum E667
  4863 ;; Registers used:
  4864 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4865 ;; Tracked objects:
  4866 ;;		On entry : D/2
  4867 ;;		On exit  : 0/0
  4868 ;;		Unchanged: 0/0
  4869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4870 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4871 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4873 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4874 ;;Total ram usage:        3 bytes
  4875 ;; Hardware stack levels used:    1
  4876 ;; Hardware stack levels required when called:    9
  4877 ;; This function calls:
  4878 ;;		_TCB_Check
  4879 ;; This function is called by:
  4880 ;;		_TCP_Send
  4881 ;;		_TCP_Server
  4882 ;; This function uses a non-reentrant model
  4883 ;;
  4884                           
  4885                           	psect	text20
  4886  006236                     __ptext20:
  4887                           	opt stack 0
  4888  006236                     _TCP_SocketPoll:
  4889                           	opt stack 20
  4890                           
  4891                           ;tcpv4.c: 1222: socketState_t tmpSocketState;
  4892                           ;tcpv4.c: 1224: tmpSocketState = NOT_A_SOCKET;
  4893                           
  4894                           ;incstack = 0
  4895  006236  6A21               	clrf	TCP_SocketPoll@tmpSocketState,c
  4896                           
  4897                           ;tcpv4.c: 1226: if(TCB_Check(socket_ptr))
  4898  006238  C01F  F017         	movff	TCP_SocketPoll@socket_ptr,TCB_Check@ptr
  4899  00623C  C020  F018         	movff	TCP_SocketPoll@socket_ptr+1,TCB_Check@ptr+1
  4900  006240  EC68  F02B         	call	_TCB_Check	;wreg free
  4901  006244  0900               	iorlw	0
  4902  006246  E008               	bz	l9350
  4903                           
  4904                           ;tcpv4.c: 1227: {
  4905                           ;tcpv4.c: 1228: tmpSocketState = socket_ptr->socketState;
  4906  006248  EE20 F036          	lfsr	2,54
  4907  00624C  501F               	movf	TCP_SocketPoll@socket_ptr,w,c
  4908  00624E  26D9               	addwf	fsr2l,f,c
  4909  006250  5020               	movf	TCP_SocketPoll@socket_ptr+1,w,c
  4910  006252  22DA               	addwfc	fsr2h,f,c
  4911  006254  50DF               	movf	indf2,w,c
  4912  006256  6E21               	movwf	TCP_SocketPoll@tmpSocketState,c
  4913  006258                     l9350:
  4914                           
  4915                           ;tcpv4.c: 1229: }
  4916                           ;tcpv4.c: 1231: return tmpSocketState;
  4917  006258  5021               	movf	TCP_SocketPoll@tmpSocketState,w,c
  4918  00625A  0012               	return		;funcret
  4919  00625C                     __end_of_TCP_SocketPoll:
  4920                           	opt stack 0
  4921                           tosu	equ	0xFFF
  4922                           tosh	equ	0xFFE
  4923                           tosl	equ	0xFFD
  4924                           pclath	equ	0xFFA
  4925                           tblptru	equ	0xFF8
  4926                           tblptrh	equ	0xFF7
  4927                           tblptrl	equ	0xFF6
  4928                           tablat	equ	0xFF5
  4929                           prodh	equ	0xFF4
  4930                           prodl	equ	0xFF3
  4931                           intcon	equ	0xFF2
  4932                           indf0	equ	0xFEF
  4933                           postinc0	equ	0xFEE
  4934                           fsr0h	equ	0xFEA
  4935                           fsr0l	equ	0xFE9
  4936                           wreg	equ	0xFE8
  4937                           indf1	equ	0xFE7
  4938                           postinc1	equ	0xFE6
  4939                           postdec1	equ	0xFE5
  4940                           plusw1	equ	0xFE3
  4941                           fsr1h	equ	0xFE2
  4942                           fsr1l	equ	0xFE1
  4943                           indf2	equ	0xFDF
  4944                           postinc2	equ	0xFDE
  4945                           postdec2	equ	0xFDD
  4946                           plusw2	equ	0xFDB
  4947                           fsr2h	equ	0xFDA
  4948                           fsr2l	equ	0xFD9
  4949                           status	equ	0xFD8
  4950                           
  4951 ;; *************** function _TCP_Listen *****************
  4952 ;; Defined at:
  4953 ;;		line 1250 in file "../../TCPIP Library/source/tcpv4.c"
  4954 ;; Parameters:    Size  Location     Type
  4955 ;;  tcbPtr          2   17[BANK1 ] PTR struct .
  4956 ;;		 -> TCP_Server@port7TCB(55), 
  4957 ;; Auto vars:     Size  Location     Type
  4958 ;;  ret             1    0        unsigned char 
  4959 ;; Return value:  Size  Location     Type
  4960 ;;                  1    wreg      unsigned char 
  4961 ;; Registers used:
  4962 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4963 ;; Tracked objects:
  4964 ;;		On entry : F/1
  4965 ;;		On exit  : 0/0
  4966 ;;		Unchanged: 0/0
  4967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4968 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4969 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4970 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4971 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4972 ;;Total ram usage:        5 bytes
  4973 ;; Hardware stack levels used:    1
  4974 ;; Hardware stack levels required when called:   15
  4975 ;; This function calls:
  4976 ;;		_TCB_Check
  4977 ;;		_TCP_FiniteStateMachine
  4978 ;; This function is called by:
  4979 ;;		_TCP_Server
  4980 ;; This function uses a non-reentrant model
  4981 ;;
  4982                           
  4983                           	psect	text21
  4984  00574E                     __ptext21:
  4985                           	opt stack 0
  4986  00574E                     _TCP_Listen:
  4987                           	opt stack 14
  4988                           
  4989                           ; BSR set to: 1
  4990                           ;tcpv4.c: 1254: ;
  4991                           ;tcpv4.c: 1256: if (TCB_Check(tcbPtr))
  4992                           
  4993                           ; BSR set to: 1
  4994                           
  4995                           ;incstack = 0
  4996  00574E  C111  F017         	movff	TCP_Listen@tcbPtr,TCB_Check@ptr
  4997  005752  C112  F018         	movff	TCP_Listen@tcbPtr+1,TCB_Check@ptr+1
  4998  005756  EC68  F02B         	call	_TCB_Check	;wreg free
  4999  00575A  0900               	iorlw	0
  5000  00575C  B4D8               	btfsc	status,2,c
  5001  00575E  0012               	return	
  5002                           
  5003                           ;tcpv4.c: 1257: {
  5004                           ;tcpv4.c: 1258: tcbPtr->connectionEvent = PASIVE_OPEN;
  5005  005760  0101               	movlb	1	; () banked
  5006  005762  EE20 F02B          	lfsr	2,43
  5007  005766  D825               	call	PL659	;call to abstracted procedure
  5008  005768  0E02               	movlw	2
  5009  00576A  6EDF               	movwf	indf2,c
  5010                           
  5011                           ;tcpv4.c: 1259: tcbPtr->socketState = SOCKET_IN_PROGRESS;
  5012  00576C  EE20 F036          	lfsr	2,54
  5013  005770  D820               	call	PL659	;call to abstracted procedure
  5014  005772  0E02               	movlw	2
  5015  005774  6EDF               	movwf	indf2,c
  5016                           
  5017                           ;tcpv4.c: 1260: tcbPtr->localSeqno = nextSequenceNumber;
  5018  005776  EE20 F010          	lfsr	2,16
  5019  00577A  D81B               	call	PL659	;call to abstracted procedure
  5020  00577C  C224  FFDE         	movff	_nextSequenceNumber,postinc2
  5021  005780  C225  FFDE         	movff	_nextSequenceNumber+1,postinc2
  5022  005784  C226  FFDE         	movff	_nextSequenceNumber+2,postinc2
  5023  005788  C227  FFDE         	movff	_nextSequenceNumber+3,postinc2
  5024                           
  5025                           ; BSR set to: 1
  5026                           ;tcpv4.c: 1261: currentTCB = tcbPtr;
  5027  00578C  C111  F03B         	movff	TCP_Listen@tcbPtr,_currentTCB
  5028  005790  C112  F03C         	movff	TCP_Listen@tcbPtr+1,_currentTCB+1
  5029                           
  5030                           ; BSR set to: 1
  5031                           ;tcpv4.c: 1262: if (tcbPtr->localPort == 0)
  5032  005794  D813               	call	PL713	;call to abstracted procedure
  5033  005796  50DE               	movf	postinc2,w,c
  5034  005798  10DE               	iorwf	postinc2,w,c
  5035  00579A  E002 EF62  F008    	bnz	_TCP_FiniteStateMachine
  5036                           
  5037                           ; BSR set to: 1
  5038                           ;tcpv4.c: 1263: {
  5039                           ;tcpv4.c: 1264: tcbPtr->localPort = nextAvailablePort++;
  5040  0057A0  D80D               	call	PL713	;call to abstracted procedure
  5041  0057A2  C03D  FFDE         	movff	_nextAvailablePort,postinc2
  5042  0057A6  C03E  FFDD         	movff	_nextAvailablePort+1,postdec2
  5043                           
  5044                           ; BSR set to: 1
  5045  0057AA  4A3D               	infsnz	_nextAvailablePort,f,c
  5046  0057AC  2A3E               	incf	_nextAvailablePort+1,f,c
  5047                           
  5048                           ; BSR set to: 1
  5049  0057AE  EF62  F008         	goto	_TCP_FiniteStateMachine	;wreg free
  5050  0057B2                     __end_of_TCP_Listen:
  5051                           	opt stack 0
  5052  0057B2                     PL659:
  5053                           	opt stack 14
  5054  0057B2  5111               	movf	TCP_Listen@tcbPtr& (0+255),w,b
  5055  0057B4  26D9               	addwf	fsr2l,f,c
  5056  0057B6  5112               	movf	(TCP_Listen@tcbPtr+1)& (0+255),w,b
  5057  0057B8  22DA               	addwfc	fsr2h,f,c
  5058  0057BA  0012               	return	
  5059  0057BC                     __end_ofPL659:
  5060                           	opt stack 0
  5061  0057BC                     PL713:
  5062                           	opt stack 14
  5063  0057BC  C111  FFD9         	movff	TCP_Listen@tcbPtr,fsr2l
  5064  0057C0  C112  FFDA         	movff	TCP_Listen@tcbPtr+1,fsr2h
  5065  0057C4  0012               	return	
  5066  0057C6                     __end_ofPL713:
  5067                           	opt stack 0
  5068                           tosu	equ	0xFFF
  5069                           tosh	equ	0xFFE
  5070                           tosl	equ	0xFFD
  5071                           pclath	equ	0xFFA
  5072                           tblptru	equ	0xFF8
  5073                           tblptrh	equ	0xFF7
  5074                           tblptrl	equ	0xFF6
  5075                           tablat	equ	0xFF5
  5076                           prodh	equ	0xFF4
  5077                           prodl	equ	0xFF3
  5078                           intcon	equ	0xFF2
  5079                           indf0	equ	0xFEF
  5080                           postinc0	equ	0xFEE
  5081                           fsr0h	equ	0xFEA
  5082                           fsr0l	equ	0xFE9
  5083                           wreg	equ	0xFE8
  5084                           indf1	equ	0xFE7
  5085                           postinc1	equ	0xFE6
  5086                           postdec1	equ	0xFE5
  5087                           plusw1	equ	0xFE3
  5088                           fsr1h	equ	0xFE2
  5089                           fsr1l	equ	0xFE1
  5090                           indf2	equ	0xFDF
  5091                           postinc2	equ	0xFDE
  5092                           postdec2	equ	0xFDD
  5093                           plusw2	equ	0xFDB
  5094                           fsr2h	equ	0xFDA
  5095                           fsr2l	equ	0xFD9
  5096                           status	equ	0xFD8
  5097                           
  5098 ;; *************** function _TCP_InsertRxBuffer *****************
  5099 ;; Defined at:
  5100 ;;		line 1361 in file "../../TCPIP Library/source/tcpv4.c"
  5101 ;; Parameters:    Size  Location     Type
  5102 ;;  tcbPtr          2   30[COMRAM] PTR struct .
  5103 ;;		 -> TCP_Server@port7TCB(55), 
  5104 ;;  data            2   32[COMRAM] PTR unsigned char 
  5105 ;;		 -> TCP_Server@rxdataPort7(20), 
  5106 ;;  data_len        2   34[COMRAM] unsigned int 
  5107 ;; Auto vars:     Size  Location     Type
  5108 ;;  ret             1    0        unsigned char 
  5109 ;; Return value:  Size  Location     Type
  5110 ;;                  1    wreg      unsigned char 
  5111 ;; Registers used:
  5112 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5113 ;; Tracked objects:
  5114 ;;		On entry : 0/1
  5115 ;;		On exit  : 0/0
  5116 ;;		Unchanged: 0/0
  5117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5118 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5119 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5121 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5122 ;;Total ram usage:        7 bytes
  5123 ;; Hardware stack levels used:    1
  5124 ;; Hardware stack levels required when called:    9
  5125 ;; This function calls:
  5126 ;;		_TCB_Check
  5127 ;; This function is called by:
  5128 ;;		_TCP_Server
  5129 ;; This function uses a non-reentrant model
  5130 ;;
  5131                           
  5132                           	psect	text22
  5133  0057C6                     __ptext22:
  5134                           	opt stack 0
  5135  0057C6                     _TCP_InsertRxBuffer:
  5136                           	opt stack 20
  5137                           
  5138                           ;tcpv4.c: 1365: if (TCB_Check(tcbPtr))
  5139                           
  5140                           ;incstack = 0
  5141  0057C6  C01F  F017         	movff	TCP_InsertRxBuffer@tcbPtr,TCB_Check@ptr
  5142  0057CA  C020  F018         	movff	TCP_InsertRxBuffer@tcbPtr+1,TCB_Check@ptr+1
  5143  0057CE  EC68  F02B         	call	_TCB_Check	;wreg free
  5144  0057D2  0900               	iorlw	0
  5145  0057D4  B4D8               	btfsc	status,2,c
  5146  0057D6  0012               	return	
  5147                           
  5148                           ;tcpv4.c: 1366: {
  5149                           ;tcpv4.c: 1367: if (tcbPtr->rxBufState == NO_BUFF)
  5150  0057D8  EE20 F022          	lfsr	2,34
  5151  0057DC  D824               	call	PL603	;call to abstracted procedure
  5152  0057DE  50DF               	movf	indf2,w,c
  5153  0057E0  A4D8               	btfss	status,2,c
  5154  0057E2  0012               	return	
  5155                           
  5156                           ;tcpv4.c: 1368: {
  5157                           ;tcpv4.c: 1369: if (data != (0))
  5158  0057E4  5021               	movf	TCP_InsertRxBuffer@data,w,c
  5159  0057E6  1022               	iorwf	TCP_InsertRxBuffer@data+1,w,c
  5160  0057E8  B4D8               	btfsc	status,2,c
  5161  0057EA  0012               	return	
  5162                           
  5163                           ;tcpv4.c: 1370: {
  5164                           ;tcpv4.c: 1371: tcbPtr->rxBufferStart = data;
  5165  0057EC  EE20 F01E          	lfsr	2,30
  5166  0057F0  D81A               	call	PL603	;call to abstracted procedure
  5167  0057F2  C021  FFDE         	movff	TCP_InsertRxBuffer@data,postinc2
  5168  0057F6  C022  FFDD         	movff	TCP_InsertRxBuffer@data+1,postdec2
  5169                           
  5170                           ;tcpv4.c: 1372: tcbPtr->rxBufferPtr = tcbPtr->rxBufferStart;
  5171  0057FA  EE20 F01E          	lfsr	2,30
  5172  0057FE  D813               	call	PL603	;call to abstracted procedure
  5173  005800  EE10 F020          	lfsr	1,32
  5174  005804  501F               	movf	TCP_InsertRxBuffer@tcbPtr,w,c
  5175  005806  26E1               	addwf	fsr1l,f,c
  5176  005808  5020               	movf	TCP_InsertRxBuffer@tcbPtr+1,w,c
  5177  00580A  D812               	call	PL677	;call to abstracted procedure
  5178                           
  5179                           ;tcpv4.c: 1373: tcbPtr->localWnd = data_len;
  5180  00580C  EE20 F01A          	lfsr	2,26
  5181  005810  D80A               	call	PL603	;call to abstracted procedure
  5182  005812  C023  FFDE         	movff	TCP_InsertRxBuffer@data_len,postinc2
  5183  005816  C024  FFDD         	movff	TCP_InsertRxBuffer@data_len+1,postdec2
  5184                           
  5185                           ;tcpv4.c: 1374: tcbPtr->rxBufState = RX_BUFF_IN_USE;
  5186  00581A  EE20 F022          	lfsr	2,34
  5187  00581E  D803               	call	PL603	;call to abstracted procedure
  5188  005820  0E01               	movlw	1
  5189  005822  6EDF               	movwf	indf2,c
  5190  005824  0C01               	retlw	1
  5191  005826                     __end_of_TCP_InsertRxBuffer:
  5192                           	opt stack 0
  5193  005826                     PL603:
  5194                           	opt stack 20
  5195  005826  501F               	movf	TCP_InsertRxBuffer@tcbPtr,w,c
  5196  005828  26D9               	addwf	fsr2l,f,c
  5197  00582A  5020               	movf	TCP_InsertRxBuffer@tcbPtr+1,w,c
  5198  00582C  22DA               	addwfc	fsr2h,f,c
  5199  00582E  0012               	return	
  5200  005830                     __end_ofPL603:
  5201                           	opt stack 0
  5202  005830                     PL677:
  5203                           	opt stack 16
  5204  005830  22E2               	addwfc	fsr1h,f,c
  5205  005832  CFDE FFE6          	movff	postinc2,postinc1
  5206  005836  CFDD FFE5          	movff	postdec2,postdec1
  5207  00583A  0012               	return	
  5208  00583C                     __end_ofPL677:
  5209                           	opt stack 0
  5210                           tosu	equ	0xFFF
  5211                           tosh	equ	0xFFE
  5212                           tosl	equ	0xFFD
  5213                           pclath	equ	0xFFA
  5214                           tblptru	equ	0xFF8
  5215                           tblptrh	equ	0xFF7
  5216                           tblptrl	equ	0xFF6
  5217                           tablat	equ	0xFF5
  5218                           prodh	equ	0xFF4
  5219                           prodl	equ	0xFF3
  5220                           intcon	equ	0xFF2
  5221                           indf0	equ	0xFEF
  5222                           postinc0	equ	0xFEE
  5223                           fsr0h	equ	0xFEA
  5224                           fsr0l	equ	0xFE9
  5225                           wreg	equ	0xFE8
  5226                           indf1	equ	0xFE7
  5227                           postinc1	equ	0xFE6
  5228                           postdec1	equ	0xFE5
  5229                           plusw1	equ	0xFE3
  5230                           fsr1h	equ	0xFE2
  5231                           fsr1l	equ	0xFE1
  5232                           indf2	equ	0xFDF
  5233                           postinc2	equ	0xFDE
  5234                           postdec2	equ	0xFDD
  5235                           plusw2	equ	0xFDB
  5236                           fsr2h	equ	0xFDA
  5237                           fsr2l	equ	0xFD9
  5238                           status	equ	0xFD8
  5239                           
  5240 ;; *************** function _TCP_GetRxLength *****************
  5241 ;; Defined at:
  5242 ;;		line 1403 in file "../../TCPIP Library/source/tcpv4.c"
  5243 ;; Parameters:    Size  Location     Type
  5244 ;;  tcbPtr          2   30[COMRAM] PTR struct .
  5245 ;;		 -> TCP_Server@port7TCB(55), 
  5246 ;; Auto vars:     Size  Location     Type
  5247 ;;  ret             2   36[COMRAM] int 
  5248 ;; Return value:  Size  Location     Type
  5249 ;;                  2   30[COMRAM] int 
  5250 ;; Registers used:
  5251 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5252 ;; Tracked objects:
  5253 ;;		On entry : 0/1
  5254 ;;		On exit  : 0/0
  5255 ;;		Unchanged: 0/0
  5256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5257 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5258 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5259 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5260 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5261 ;;Total ram usage:        8 bytes
  5262 ;; Hardware stack levels used:    1
  5263 ;; Hardware stack levels required when called:    9
  5264 ;; This function calls:
  5265 ;;		_TCB_Check
  5266 ;; This function is called by:
  5267 ;;		_TCP_Server
  5268 ;; This function uses a non-reentrant model
  5269 ;;
  5270                           
  5271                           	psect	text23
  5272  005988                     __ptext23:
  5273                           	opt stack 0
  5274  005988                     _TCP_GetRxLength:
  5275                           	opt stack 20
  5276                           
  5277                           ;tcpv4.c: 1405: int16_t ret = 0;
  5278                           
  5279                           ;incstack = 0
  5280  005988  6A25               	clrf	TCP_GetRxLength@ret,c
  5281  00598A  6A26               	clrf	TCP_GetRxLength@ret+1,c
  5282                           
  5283                           ;tcpv4.c: 1407: if (TCB_Check(tcbPtr))
  5284  00598C  C01F  F017         	movff	TCP_GetRxLength@tcbPtr,TCB_Check@ptr
  5285  005990  C020  F018         	movff	TCP_GetRxLength@tcbPtr+1,TCB_Check@ptr+1
  5286  005994  EC68  F02B         	call	_TCB_Check	;wreg free
  5287  005998  0900               	iorlw	0
  5288  00599A  E019               	bz	l9782
  5289                           
  5290                           ;tcpv4.c: 1408: {
  5291                           ;tcpv4.c: 1409: if (tcbPtr->rxBufState == RX_BUFF_IN_USE)
  5292  00599C  EE20 F022          	lfsr	2,34
  5293  0059A0  D81B               	call	PL655	;call to abstracted procedure
  5294  0059A2  04DE               	decf	postinc2,w,c
  5295  0059A4  E114               	bnz	l9782
  5296                           
  5297                           ;tcpv4.c: 1410: {
  5298                           ;tcpv4.c: 1411: ret = tcbPtr->rxBufferPtr - tcbPtr->rxBufferStart;
  5299  0059A6  EE20 F01E          	lfsr	2,30
  5300  0059AA  D816               	call	PL655	;call to abstracted procedure
  5301  0059AC  CFDE F021          	movff	postinc2,??_TCP_GetRxLength
  5302  0059B0  CFDD F022          	movff	postdec2,??_TCP_GetRxLength+1
  5303  0059B4  EE20 F020          	lfsr	2,32
  5304  0059B8  D80F               	call	PL655	;call to abstracted procedure
  5305  0059BA  CFDE F023          	movff	postinc2,??_TCP_GetRxLength+2
  5306  0059BE  CFDD F024          	movff	postdec2,??_TCP_GetRxLength+3
  5307  0059C2  5021               	movf	??_TCP_GetRxLength,w,c
  5308  0059C4  5C23               	subwf	??_TCP_GetRxLength+2,w,c
  5309  0059C6  6E25               	movwf	TCP_GetRxLength@ret,c
  5310  0059C8  5022               	movf	??_TCP_GetRxLength+1,w,c
  5311  0059CA  5824               	subwfb	??_TCP_GetRxLength+3,w,c
  5312  0059CC  6E26               	movwf	TCP_GetRxLength@ret+1,c
  5313  0059CE                     l9782:
  5314                           
  5315                           ;tcpv4.c: 1412: }
  5316                           ;tcpv4.c: 1413: }
  5317                           ;tcpv4.c: 1414: return ret;
  5318  0059CE  C025  F01F         	movff	TCP_GetRxLength@ret,?_TCP_GetRxLength
  5319  0059D2  C026  F020         	movff	TCP_GetRxLength@ret+1,?_TCP_GetRxLength+1
  5320  0059D6  0012               	return		;funcret
  5321  0059D8                     __end_of_TCP_GetRxLength:
  5322                           	opt stack 0
  5323  0059D8                     PL655:
  5324                           	opt stack 20
  5325  0059D8  501F               	movf	TCP_GetRxLength@tcbPtr,w,c
  5326  0059DA  26D9               	addwf	fsr2l,f,c
  5327  0059DC  5020               	movf	TCP_GetRxLength@tcbPtr+1,w,c
  5328  0059DE  22DA               	addwfc	fsr2h,f,c
  5329  0059E0  0012               	return	
  5330  0059E2                     __end_ofPL655:
  5331                           	opt stack 0
  5332                           tosu	equ	0xFFF
  5333                           tosh	equ	0xFFE
  5334                           tosl	equ	0xFFD
  5335                           pclath	equ	0xFFA
  5336                           tblptru	equ	0xFF8
  5337                           tblptrh	equ	0xFF7
  5338                           tblptrl	equ	0xFF6
  5339                           tablat	equ	0xFF5
  5340                           prodh	equ	0xFF4
  5341                           prodl	equ	0xFF3
  5342                           intcon	equ	0xFF2
  5343                           indf0	equ	0xFEF
  5344                           postinc0	equ	0xFEE
  5345                           fsr0h	equ	0xFEA
  5346                           fsr0l	equ	0xFE9
  5347                           wreg	equ	0xFE8
  5348                           indf1	equ	0xFE7
  5349                           postinc1	equ	0xFE6
  5350                           postdec1	equ	0xFE5
  5351                           plusw1	equ	0xFE3
  5352                           fsr1h	equ	0xFE2
  5353                           fsr1l	equ	0xFE1
  5354                           indf2	equ	0xFDF
  5355                           postinc2	equ	0xFDE
  5356                           postdec2	equ	0xFDD
  5357                           plusw2	equ	0xFDB
  5358                           fsr2h	equ	0xFDA
  5359                           fsr2l	equ	0xFD9
  5360                           status	equ	0xFD8
  5361                           
  5362 ;; *************** function _TCP_GetReceivedData *****************
  5363 ;; Defined at:
  5364 ;;		line 1383 in file "../../TCPIP Library/source/tcpv4.c"
  5365 ;; Parameters:    Size  Location     Type
  5366 ;;  tcbPtr          2   30[COMRAM] PTR struct .
  5367 ;;		 -> TCP_Server@port7TCB(55), 
  5368 ;; Auto vars:     Size  Location     Type
  5369 ;;  ret             2   36[COMRAM] int 
  5370 ;; Return value:  Size  Location     Type
  5371 ;;                  2   30[COMRAM] int 
  5372 ;; Registers used:
  5373 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5374 ;; Tracked objects:
  5375 ;;		On entry : F/1
  5376 ;;		On exit  : 0/0
  5377 ;;		Unchanged: 0/0
  5378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5379 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5380 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5381 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5382 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5383 ;;Total ram usage:        8 bytes
  5384 ;; Hardware stack levels used:    1
  5385 ;; Hardware stack levels required when called:    9
  5386 ;; This function calls:
  5387 ;;		_TCB_Check
  5388 ;; This function is called by:
  5389 ;;		_TCP_Server
  5390 ;; This function uses a non-reentrant model
  5391 ;;
  5392                           
  5393                           	psect	text24
  5394  00583C                     __ptext24:
  5395                           	opt stack 0
  5396  00583C                     _TCP_GetReceivedData:
  5397                           	opt stack 20
  5398                           
  5399                           ; BSR set to: 1
  5400                           ;tcpv4.c: 1385: int16_t ret = 0;
  5401                           
  5402                           ;incstack = 0
  5403  00583C  6A25               	clrf	TCP_GetReceivedData@ret,c
  5404  00583E  6A26               	clrf	TCP_GetReceivedData@ret+1,c
  5405                           
  5406                           ; BSR set to: 1
  5407                           ;tcpv4.c: 1387: if (TCB_Check(tcbPtr))
  5408  005840  C01F  F017         	movff	TCP_GetReceivedData@tcbPtr,TCB_Check@ptr
  5409  005844  C020  F018         	movff	TCP_GetReceivedData@tcbPtr+1,TCB_Check@ptr+1
  5410  005848  EC68  F02B         	call	_TCB_Check	;wreg free
  5411  00584C  0900               	iorlw	0
  5412  00584E  E022               	bz	l9770
  5413                           
  5414                           ;tcpv4.c: 1388: {
  5415                           ;tcpv4.c: 1389: if (tcbPtr->rxBufState == RX_BUFF_IN_USE)
  5416  005850  EE20 F022          	lfsr	2,34
  5417  005854  D824               	call	PL601	;call to abstracted procedure
  5418  005856  04DE               	decf	postinc2,w,c
  5419  005858  E11D               	bnz	l9770
  5420                           
  5421                           ;tcpv4.c: 1390: {
  5422                           ;tcpv4.c: 1391: ret = tcbPtr->rxBufferPtr - tcbPtr->rxBufferStart;
  5423  00585A  EE20 F01E          	lfsr	2,30
  5424  00585E  D81F               	call	PL601	;call to abstracted procedure
  5425  005860  CFDE F021          	movff	postinc2,??_TCP_GetReceivedData
  5426  005864  CFDD F022          	movff	postdec2,??_TCP_GetReceivedData+1
  5427  005868  EE20 F020          	lfsr	2,32
  5428  00586C  D818               	call	PL601	;call to abstracted procedure
  5429  00586E  CFDE F023          	movff	postinc2,??_TCP_GetReceivedData+2
  5430  005872  CFDD F024          	movff	postdec2,??_TCP_GetReceivedData+3
  5431  005876  5021               	movf	??_TCP_GetReceivedData,w,c
  5432  005878  5C23               	subwf	??_TCP_GetReceivedData+2,w,c
  5433  00587A  6E25               	movwf	TCP_GetReceivedData@ret,c
  5434  00587C  5022               	movf	??_TCP_GetReceivedData+1,w,c
  5435  00587E  5824               	subwfb	??_TCP_GetReceivedData+3,w,c
  5436  005880  6E26               	movwf	TCP_GetReceivedData@ret+1,c
  5437                           
  5438                           ;tcpv4.c: 1393: if (ret != 0)
  5439  005882  1025               	iorwf	TCP_GetReceivedData@ret,w,c
  5440  005884  E007               	bz	l9770
  5441                           
  5442                           ;tcpv4.c: 1394: {
  5443                           ;tcpv4.c: 1395: tcbPtr->localWnd = 0;
  5444  005886  EE20 F01A          	lfsr	2,26
  5445  00588A  D809               	call	PL601	;call to abstracted procedure
  5446                           
  5447                           ;tcpv4.c: 1396: tcbPtr->rxBufState = NO_BUFF;
  5448  00588C  D80D               	call	PL707	;call to abstracted procedure
  5449  00588E  D807               	call	PL601	;call to abstracted procedure
  5450  005890  0E00               	movlw	0
  5451  005892  6ADF               	clrf	indf2,c
  5452  005894                     l9770:
  5453                           
  5454                           ;tcpv4.c: 1397: }
  5455                           ;tcpv4.c: 1398: }
  5456                           ;tcpv4.c: 1399: }
  5457                           ;tcpv4.c: 1400: return ret;
  5458  005894  C025  F01F         	movff	TCP_GetReceivedData@ret,?_TCP_GetReceivedData
  5459  005898  C026  F020         	movff	TCP_GetReceivedData@ret+1,?_TCP_GetReceivedData+1
  5460  00589C  0012               	return		;funcret
  5461  00589E                     __end_of_TCP_GetReceivedData:
  5462                           	opt stack 0
  5463  00589E                     PL601:
  5464                           	opt stack 20
  5465  00589E  501F               	movf	TCP_GetReceivedData@tcbPtr,w,c
  5466  0058A0  26D9               	addwf	fsr2l,f,c
  5467  0058A2  5020               	movf	TCP_GetReceivedData@tcbPtr+1,w,c
  5468  0058A4  22DA               	addwfc	fsr2h,f,c
  5469  0058A6  0012               	return	
  5470  0058A8                     __end_ofPL601:
  5471                           	opt stack 0
  5472  0058A8                     PL707:
  5473                           	opt stack 20
  5474  0058A8  6ADE               	clrf	postinc2,c
  5475  0058AA  6ADD               	clrf	postdec2,c
  5476  0058AC  EE20 F022          	lfsr	2,34
  5477  0058B0  0012               	return	
  5478  0058B2                     __end_ofPL707:
  5479                           	opt stack 0
  5480                           tosu	equ	0xFFF
  5481                           tosh	equ	0xFFE
  5482                           tosl	equ	0xFFD
  5483                           pclath	equ	0xFFA
  5484                           tblptru	equ	0xFF8
  5485                           tblptrh	equ	0xFF7
  5486                           tblptrl	equ	0xFF6
  5487                           tablat	equ	0xFF5
  5488                           prodh	equ	0xFF4
  5489                           prodl	equ	0xFF3
  5490                           intcon	equ	0xFF2
  5491                           indf0	equ	0xFEF
  5492                           postinc0	equ	0xFEE
  5493                           fsr0h	equ	0xFEA
  5494                           fsr0l	equ	0xFE9
  5495                           wreg	equ	0xFE8
  5496                           indf1	equ	0xFE7
  5497                           postinc1	equ	0xFE6
  5498                           postdec1	equ	0xFE5
  5499                           plusw1	equ	0xFE3
  5500                           fsr1h	equ	0xFE2
  5501                           fsr1l	equ	0xFE1
  5502                           indf2	equ	0xFDF
  5503                           postinc2	equ	0xFDE
  5504                           postdec2	equ	0xFDD
  5505                           plusw2	equ	0xFDB
  5506                           fsr2h	equ	0xFDA
  5507                           fsr2l	equ	0xFD9
  5508                           status	equ	0xFD8
  5509                           
  5510 ;; *************** function _TCP_Bind *****************
  5511 ;; Defined at:
  5512 ;;		line 1235 in file "../../TCPIP Library/source/tcpv4.c"
  5513 ;; Parameters:    Size  Location     Type
  5514 ;;  tcbPtr          2   30[COMRAM] PTR struct .
  5515 ;;		 -> TCP_Server@port7TCB(55), 
  5516 ;;  port            2   32[COMRAM] unsigned int 
  5517 ;; Auto vars:     Size  Location     Type
  5518 ;;  ret             1    0        unsigned char 
  5519 ;; Return value:  Size  Location     Type
  5520 ;;                  1    wreg      unsigned char 
  5521 ;; Registers used:
  5522 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5523 ;; Tracked objects:
  5524 ;;		On entry : C/1
  5525 ;;		On exit  : 0/0
  5526 ;;		Unchanged: 0/0
  5527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5528 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5529 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5531 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5532 ;;Total ram usage:        5 bytes
  5533 ;; Hardware stack levels used:    1
  5534 ;; Hardware stack levels required when called:    9
  5535 ;; This function calls:
  5536 ;;		_TCB_Check
  5537 ;; This function is called by:
  5538 ;;		_TCP_Server
  5539 ;; This function uses a non-reentrant model
  5540 ;;
  5541                           
  5542                           	psect	text25
  5543  006282                     __ptext25:
  5544                           	opt stack 0
  5545  006282                     _TCP_Bind:
  5546                           	opt stack 20
  5547                           
  5548                           ;tcpv4.c: 1239: ;
  5549                           ;tcpv4.c: 1241: if (TCB_Check(tcbPtr))
  5550                           
  5551                           ;incstack = 0
  5552  006282  C01F  F017         	movff	TCP_Bind@tcbPtr,TCB_Check@ptr
  5553  006286  C020  F018         	movff	TCP_Bind@tcbPtr+1,TCB_Check@ptr+1
  5554  00628A  EC68  F02B         	call	_TCB_Check	;wreg free
  5555  00628E  0900               	iorlw	0
  5556  006290  B4D8               	btfsc	status,2,c
  5557  006292  0012               	return	
  5558                           
  5559                           ;tcpv4.c: 1242: {
  5560                           ;tcpv4.c: 1243: tcbPtr->localPort = port;
  5561  006294  C01F  FFD9         	movff	TCP_Bind@tcbPtr,fsr2l
  5562  006298  C020  FFDA         	movff	TCP_Bind@tcbPtr+1,fsr2h
  5563  00629C  C021  FFDE         	movff	TCP_Bind@port,postinc2
  5564  0062A0  C022  FFDD         	movff	TCP_Bind@port+1,postdec2
  5565  0062A4  0012               	return		;funcret
  5566  0062A6                     __end_of_TCP_Bind:
  5567                           	opt stack 0
  5568                           tosu	equ	0xFFF
  5569                           tosh	equ	0xFFE
  5570                           tosl	equ	0xFFD
  5571                           pclath	equ	0xFFA
  5572                           tblptru	equ	0xFF8
  5573                           tblptrh	equ	0xFF7
  5574                           tblptrl	equ	0xFF6
  5575                           tablat	equ	0xFF5
  5576                           prodh	equ	0xFF4
  5577                           prodl	equ	0xFF3
  5578                           intcon	equ	0xFF2
  5579                           indf0	equ	0xFEF
  5580                           postinc0	equ	0xFEE
  5581                           fsr0h	equ	0xFEA
  5582                           fsr0l	equ	0xFE9
  5583                           wreg	equ	0xFE8
  5584                           indf1	equ	0xFE7
  5585                           postinc1	equ	0xFE6
  5586                           postdec1	equ	0xFE5
  5587                           plusw1	equ	0xFE3
  5588                           fsr1h	equ	0xFE2
  5589                           fsr1l	equ	0xFE1
  5590                           indf2	equ	0xFDF
  5591                           postinc2	equ	0xFDE
  5592                           postdec2	equ	0xFDD
  5593                           plusw2	equ	0xFDB
  5594                           fsr2h	equ	0xFDA
  5595                           fsr2l	equ	0xFD9
  5596                           status	equ	0xFD8
  5597                           
  5598 ;; *************** function _TCB_Check *****************
  5599 ;; Defined at:
  5600 ;;		line 162 in file "../../TCPIP Library/source/tcpv4.c"
  5601 ;; Parameters:    Size  Location     Type
  5602 ;;  ptr             2   22[COMRAM] PTR struct .
  5603 ;;		 -> TCP_Server@port7TCB(55), 
  5604 ;; Auto vars:     Size  Location     Type
  5605 ;;  tcbPtr          2   28[COMRAM] PTR struct .
  5606 ;;		 -> ?_sprintf(2), ?_printf(2), main@str(32), STR_8(13), 
  5607 ;;		 -> STR_7(17), STR_6(7), STR_5(10), TCP_Server@port7TCB(55), 
  5608 ;;		 -> Network_Read@debug_str(80), STR_1(15), NULL(0), 
  5609 ;;  count           1   27[COMRAM] char 
  5610 ;;  ret             1   26[COMRAM] unsigned char 
  5611 ;; Return value:  Size  Location     Type
  5612 ;;                  1    wreg      unsigned char 
  5613 ;; Registers used:
  5614 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  5615 ;; Tracked objects:
  5616 ;;		On entry : 0/1
  5617 ;;		On exit  : 0/0
  5618 ;;		Unchanged: 0/0
  5619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5620 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5621 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5622 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5623 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5624 ;;Total ram usage:        8 bytes
  5625 ;; Hardware stack levels used:    1
  5626 ;; Hardware stack levels required when called:    8
  5627 ;; This function calls:
  5628 ;;		Nothing
  5629 ;; This function is called by:
  5630 ;;		_TCP_SocketInit
  5631 ;;		_TCP_SocketPoll
  5632 ;;		_TCP_Bind
  5633 ;;		_TCP_Listen
  5634 ;;		_TCP_SendDone
  5635 ;;		_TCP_InsertRxBuffer
  5636 ;;		_TCP_GetReceivedData
  5637 ;;		_TCP_GetRxLength
  5638 ;; This function uses a non-reentrant model
  5639 ;;
  5640                           
  5641                           	psect	text26
  5642  0056D0                     __ptext26:
  5643                           	opt stack 0
  5644  0056D0                     _TCB_Check:
  5645                           	opt stack 20
  5646                           
  5647                           ;tcpv4.c: 164: tcpTCB_t *tcbPtr;
  5648                           ;tcpv4.c: 165: bool ret = 0;
  5649                           
  5650                           ;incstack = 0
  5651  0056D0  6A1B               	clrf	TCB_Check@ret,c
  5652                           
  5653                           ;tcpv4.c: 166: socklistsize_t count = 0;
  5654  0056D2  6A1C               	clrf	TCB_Check@count,c
  5655                           
  5656                           ;tcpv4.c: 168: if((tcbList != (0)) && (ptr != (0)))
  5657  0056D4  5041               	movf	_tcbList,w,c
  5658  0056D6  1042               	iorwf	_tcbList+1,w,c
  5659  0056D8  E038               	bz	l9090
  5660  0056DA  5017               	movf	TCB_Check@ptr,w,c
  5661  0056DC  1018               	iorwf	TCB_Check@ptr+1,w,c
  5662  0056DE  E035               	bz	l9090
  5663                           
  5664                           ;tcpv4.c: 169: {
  5665                           ;tcpv4.c: 171: tcbPtr = tcbList;
  5666  0056E0  C041  F01D         	movff	_tcbList,TCB_Check@tcbPtr
  5667  0056E4  C042  F01E         	movff	_tcbList+1,TCB_Check@tcbPtr+1
  5668                           
  5669                           ;tcpv4.c: 172: while((tcbPtr != (0)) && (count < tcbListSize))
  5670  0056E8  D026               	goto	l9086
  5671  0056EA                     l9076:
  5672                           
  5673                           ;tcpv4.c: 173: {
  5674                           ;tcpv4.c: 174: if (tcbPtr == ptr)
  5675  0056EA  5017               	movf	TCB_Check@ptr,w,c
  5676  0056EC  181D               	xorwf	TCB_Check@tcbPtr,w,c
  5677  0056EE  E106               	bnz	l9082
  5678  0056F0  5018               	movf	TCB_Check@ptr+1,w,c
  5679  0056F2  181E               	xorwf	TCB_Check@tcbPtr+1,w,c
  5680  0056F4  E103               	bnz	l9082
  5681                           
  5682                           ;tcpv4.c: 175: {
  5683                           ;tcpv4.c: 176: ret = 1;
  5684  0056F6  0E01               	movlw	1
  5685  0056F8  6E1B               	movwf	TCB_Check@ret,c
  5686                           
  5687                           ;tcpv4.c: 177: break;
  5688  0056FA  D027               	goto	l9090
  5689  0056FC                     l9082:
  5690                           
  5691                           ;tcpv4.c: 179: else
  5692                           ;tcpv4.c: 180: {
  5693                           ;tcpv4.c: 181: tcbPtr = tcbPtr->nextTCB;
  5694  0056FC  0E2C               	movlw	44
  5695  0056FE  241D               	addwf	TCB_Check@tcbPtr,w,c
  5696  005700  6E19               	movwf	??_TCB_Check& (0+255),c
  5697  005702  0E00               	movlw	0
  5698  005704  201E               	addwfc	TCB_Check@tcbPtr+1,w,c
  5699  005706  6E1A               	movwf	(??_TCB_Check+1)& (0+255),c
  5700  005708  C019  FFF6         	movff	??_TCB_Check,tblptrl
  5701  00570C  C01A  FFF7         	movff	??_TCB_Check+1,tblptrh
  5702  005710  0E00               	movlw	low (__smallconst shr (0+16))
  5703  005712  6EF8               	movwf	tblptru,c
  5704  005714  0E0F               	movlw	(high __ramtop+-1)
  5705  005716  64F7               	cpfsgt	tblptrh,c
  5706  005718  D007               	bra	u14567
  5707  00571A  0009               	tblrd		*+
  5708  00571C  CFF5 F01D          	movff	tablat,TCB_Check@tcbPtr
  5709  005720  0009               	tblrd		*+
  5710  005722  CFF5 F01E          	movff	tablat,TCB_Check@tcbPtr+1
  5711  005726  D006               	bra	u14560
  5712  005728                     u14567:
  5713  005728  EC73  F011         	call	PL389	;call to abstracted procedure
  5714  00572C  CFEE F01D          	movff	postinc0,TCB_Check@tcbPtr
  5715  005730  CFEE F01E          	movff	postinc0,TCB_Check@tcbPtr+1
  5716  005734                     u14560:
  5717                           
  5718                           ;tcpv4.c: 182: count ++;
  5719  005734  2A1C               	incf	TCB_Check@count,f,c
  5720  005736                     l9086:
  5721  005736  501D               	movf	TCB_Check@tcbPtr,w,c
  5722  005738  101E               	iorwf	TCB_Check@tcbPtr+1,w,c
  5723  00573A  E007               	bz	l9090
  5724  00573C  501C               	movf	TCB_Check@count,w,c
  5725  00573E  0A80               	xorlw	128
  5726  005740  6E19               	movwf	??_TCB_Check& (0+255),c
  5727  005742  5047               	movf	_tcbListSize,w,c
  5728  005744  0A80               	xorlw	128
  5729  005746  5C19               	subwf	??_TCB_Check& (0+255),w,c
  5730  005748  E3D0               	bnc	l9076
  5731  00574A                     l9090:
  5732                           
  5733                           ;tcpv4.c: 183: }
  5734                           ;tcpv4.c: 184: }
  5735                           ;tcpv4.c: 185: }
  5736                           ;tcpv4.c: 186: return ret;
  5737  00574A  501B               	movf	TCB_Check@ret,w,c
  5738  00574C  0012               	return		;funcret
  5739  00574E                     __end_of_TCB_Check:
  5740                           	opt stack 0
  5741                           tosu	equ	0xFFF
  5742                           tosh	equ	0xFFE
  5743                           tosl	equ	0xFFD
  5744                           pclath	equ	0xFFA
  5745                           tblptru	equ	0xFF8
  5746                           tblptrh	equ	0xFF7
  5747                           tblptrl	equ	0xFF6
  5748                           tablat	equ	0xFF5
  5749                           prodh	equ	0xFF4
  5750                           prodl	equ	0xFF3
  5751                           intcon	equ	0xFF2
  5752                           indf0	equ	0xFEF
  5753                           postinc0	equ	0xFEE
  5754                           fsr0h	equ	0xFEA
  5755                           fsr0l	equ	0xFE9
  5756                           wreg	equ	0xFE8
  5757                           indf1	equ	0xFE7
  5758                           postinc1	equ	0xFE6
  5759                           postdec1	equ	0xFE5
  5760                           plusw1	equ	0xFE3
  5761                           fsr1h	equ	0xFE2
  5762                           fsr1l	equ	0xFE1
  5763                           indf2	equ	0xFDF
  5764                           postinc2	equ	0xFDE
  5765                           postdec2	equ	0xFDD
  5766                           plusw2	equ	0xFDB
  5767                           fsr2h	equ	0xFDA
  5768                           fsr2l	equ	0xFD9
  5769                           status	equ	0xFD8
  5770                           
  5771 ;; *************** function _SYSLOG_Init *****************
  5772 ;; Defined at:
  5773 ;;		line 43 in file "../../TCPIP Library/source/syslog.c"
  5774 ;; Parameters:    Size  Location     Type
  5775 ;;		None
  5776 ;; Auto vars:     Size  Location     Type
  5777 ;;  t               4   11[BANK0 ] unsigned long 
  5778 ;; Return value:  Size  Location     Type
  5779 ;;                  1    wreg      void 
  5780 ;; Registers used:
  5781 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5782 ;; Tracked objects:
  5783 ;;		On entry : F/1
  5784 ;;		On exit  : 0/0
  5785 ;;		Unchanged: 0/0
  5786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5788 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5790 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5791 ;;Total ram usage:        4 bytes
  5792 ;; Hardware stack levels used:    1
  5793 ;; Hardware stack levels required when called:   11
  5794 ;; This function calls:
  5795 ;;		_printf
  5796 ;;		_time
  5797 ;; This function is called by:
  5798 ;;		_main
  5799 ;; This function uses a non-reentrant model
  5800 ;;
  5801                           
  5802                           	psect	text27
  5803  006022                     __ptext27:
  5804                           	opt stack 0
  5805  006022                     _SYSLOG_Init:
  5806                           	opt stack 19
  5807                           
  5808                           ; BSR set to: 1
  5809                           ;syslog.c: 45: unsigned long t = time(0);
  5810                           
  5811                           ;incstack = 0
  5812  006022  6A17               	clrf	time@t,c
  5813  006024  6A18               	clrf	time@t+1,c
  5814  006026  EC72  F02D         	call	_time	;wreg free
  5815  00602A  C017  F06B         	movff	?_time,SYSLOG_Init@t
  5816  00602E  C018  F06C         	movff	?_time+1,SYSLOG_Init@t+1
  5817  006032  C019  F06D         	movff	?_time+2,SYSLOG_Init@t+2
  5818  006036  C01A  F06E         	movff	?_time+3,SYSLOG_Init@t+3
  5819                           
  5820                           ;syslog.c: 47: printf("\r\n\r\nStarting Syslog at %u\r\n",t);
  5821  00603A  0E39               	movlw	low STR_3
  5822  00603C  0100               	movlb	0	; () banked
  5823  00603E  6F60               	movwf	printf@f& (0+255),b
  5824  006040  C06B  F061         	movff	SYSLOG_Init@t,?_printf+1
  5825  006044  C06C  F062         	movff	SYSLOG_Init@t+1,?_printf+2
  5826  006048  C06D  F063         	movff	SYSLOG_Init@t+2,?_printf+3
  5827  00604C  C06E  F064         	movff	SYSLOG_Init@t+3,?_printf+4
  5828  006050  EF53  F031         	goto	_printf	;wreg free
  5829  006054                     __end_of_SYSLOG_Init:
  5830                           	opt stack 0
  5831                           tosu	equ	0xFFF
  5832                           tosh	equ	0xFFE
  5833                           tosl	equ	0xFFD
  5834                           pclath	equ	0xFFA
  5835                           tblptru	equ	0xFF8
  5836                           tblptrh	equ	0xFF7
  5837                           tblptrl	equ	0xFF6
  5838                           tablat	equ	0xFF5
  5839                           prodh	equ	0xFF4
  5840                           prodl	equ	0xFF3
  5841                           intcon	equ	0xFF2
  5842                           indf0	equ	0xFEF
  5843                           postinc0	equ	0xFEE
  5844                           fsr0h	equ	0xFEA
  5845                           fsr0l	equ	0xFE9
  5846                           wreg	equ	0xFE8
  5847                           indf1	equ	0xFE7
  5848                           postinc1	equ	0xFE6
  5849                           postdec1	equ	0xFE5
  5850                           plusw1	equ	0xFE3
  5851                           fsr1h	equ	0xFE2
  5852                           fsr1l	equ	0xFE1
  5853                           indf2	equ	0xFDF
  5854                           postinc2	equ	0xFDE
  5855                           postdec2	equ	0xFDD
  5856                           plusw2	equ	0xFDB
  5857                           fsr2h	equ	0xFDA
  5858                           fsr2l	equ	0xFD9
  5859                           status	equ	0xFD8
  5860                           
  5861 ;; *************** function _Network_WaitForLink *****************
  5862 ;; Defined at:
  5863 ;;		line 76 in file "../../TCPIP Library/source/network.c"
  5864 ;; Parameters:    Size  Location     Type
  5865 ;;		None
  5866 ;; Auto vars:     Size  Location     Type
  5867 ;;		None
  5868 ;; Return value:  Size  Location     Type
  5869 ;;                  1    wreg      void 
  5870 ;; Registers used:
  5871 ;;		wreg, status,2, status,0, cstack
  5872 ;; Tracked objects:
  5873 ;;		On entry : 0/1
  5874 ;;		On exit  : 0/0
  5875 ;;		Unchanged: 0/0
  5876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5881 ;;Total ram usage:        0 bytes
  5882 ;; Hardware stack levels used:    1
  5883 ;; Hardware stack levels required when called:   12
  5884 ;; This function calls:
  5885 ;;		_ETH_CheckLinkUp
  5886 ;; This function is called by:
  5887 ;;		_main
  5888 ;; This function uses a non-reentrant model
  5889 ;;
  5890                           
  5891                           	psect	text28
  5892  00645A                     __ptext28:
  5893                           	opt stack 0
  5894  00645A                     _Network_WaitForLink:
  5895                           	opt stack 18
  5896                           
  5897                           ;network.c: 78: while(!ETH_CheckLinkUp()) __nop();
  5898                           
  5899                           ;incstack = 0
  5900  00645A  D001               	goto	l9866
  5901  00645C                     l1009:
  5902  00645C  F000               	nop	
  5903  00645E                     l9866:
  5904  00645E  EC71  F030         	call	_ETH_CheckLinkUp	;wreg free
  5905  006462  0900               	iorlw	0
  5906  006464  E0FB               	bz	l1009
  5907  006466  0012               	return		;funcret
  5908  006468                     __end_of_Network_WaitForLink:
  5909                           	opt stack 0
  5910                           tosu	equ	0xFFF
  5911                           tosh	equ	0xFFE
  5912                           tosl	equ	0xFFD
  5913                           pclath	equ	0xFFA
  5914                           tblptru	equ	0xFF8
  5915                           tblptrh	equ	0xFF7
  5916                           tblptrl	equ	0xFF6
  5917                           tablat	equ	0xFF5
  5918                           prodh	equ	0xFF4
  5919                           prodl	equ	0xFF3
  5920                           intcon	equ	0xFF2
  5921                           indf0	equ	0xFEF
  5922                           postinc0	equ	0xFEE
  5923                           fsr0h	equ	0xFEA
  5924                           fsr0l	equ	0xFE9
  5925                           wreg	equ	0xFE8
  5926                           indf1	equ	0xFE7
  5927                           postinc1	equ	0xFE6
  5928                           postdec1	equ	0xFE5
  5929                           plusw1	equ	0xFE3
  5930                           fsr1h	equ	0xFE2
  5931                           fsr1l	equ	0xFE1
  5932                           indf2	equ	0xFDF
  5933                           postinc2	equ	0xFDE
  5934                           postdec2	equ	0xFDD
  5935                           plusw2	equ	0xFDB
  5936                           fsr2h	equ	0xFDA
  5937                           fsr2l	equ	0xFD9
  5938                           status	equ	0xFD8
  5939                           
  5940 ;; *************** function _Network_Manage *****************
  5941 ;; Defined at:
  5942 ;;		line 81 in file "../../TCPIP Library/source/network.c"
  5943 ;; Parameters:    Size  Location     Type
  5944 ;;		None
  5945 ;; Auto vars:     Size  Location     Type
  5946 ;;  now             4  185[BANK1 ] long 
  5947 ;; Return value:  Size  Location     Type
  5948 ;;                  1    wreg      void 
  5949 ;; Registers used:
  5950 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  5951 ;; Tracked objects:
  5952 ;;		On entry : 0/1
  5953 ;;		On exit  : E/0
  5954 ;;		Unchanged: 0/0
  5955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5957 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5958 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5959 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5960 ;;Total ram usage:        5 bytes
  5961 ;; Hardware stack levels used:    1
  5962 ;; Hardware stack levels required when called:   18
  5963 ;; This function calls:
  5964 ;;		_ARPV4_Update
  5965 ;;		_DHCP_Manage
  5966 ;;		_ETH_EventHandler
  5967 ;;		_Network_Read
  5968 ;;		_TCP_Update
  5969 ;;		_time
  5970 ;; This function is called by:
  5971 ;;		_main
  5972 ;; This function uses a non-reentrant model
  5973 ;;
  5974                           
  5975                           	psect	text29
  5976  00549E                     __ptext29:
  5977                           	opt stack 0
  5978  00549E                     _Network_Manage:
  5979                           	opt stack 12
  5980                           
  5981                           ;network.c: 83: time_t now;
  5982                           ;network.c: 84: static time_t nowPv = 0;
  5983                           ;network.c: 86: ETH_EventHandler();
  5984                           
  5985                           ;incstack = 0
  5986  00549E  EC5F  F02E         	call	_ETH_EventHandler	;wreg free
  5987                           
  5988                           ;network.c: 87: Network_Read();
  5989  0054A2  ECCE  F027         	call	_Network_Read	;wreg free
  5990                           
  5991                           ;network.c: 90: time(&now);
  5992  0054A6  0EB9               	movlw	low Network_Manage@now
  5993  0054A8  6E17               	movwf	time@t,c
  5994  0054AA  0E01               	movlw	high Network_Manage@now
  5995  0054AC  6E18               	movwf	time@t+1,c
  5996  0054AE  EC72  F02D         	call	_time	;wreg free
  5997                           
  5998                           ;network.c: 91: if(now >= arpTimer)
  5999  0054B2  0101               	movlb	1	; () banked
  6000  0054B4  51E6               	movf	_arpTimer& (0+255),w,b
  6001  0054B6  5DB9               	subwf	Network_Manage@now& (0+255),w,b
  6002  0054B8  51E7               	movf	(_arpTimer+1)& (0+255),w,b
  6003  0054BA  59BA               	subwfb	(Network_Manage@now+1)& (0+255),w,b
  6004  0054BC  51E8               	movf	(_arpTimer+2)& (0+255),w,b
  6005  0054BE  59BB               	subwfb	(Network_Manage@now+2)& (0+255),w,b
  6006  0054C0  51BC               	movf	(Network_Manage@now+3)& (0+255),w,b
  6007  0054C2  D830               	call	PL725	;call to abstracted procedure
  6008  0054C4  51E9               	movf	(_arpTimer+3)& (0+255),w,b
  6009  0054C6  0A80               	xorlw	128
  6010  0054C8  0100               	movlb	0	; () banked
  6011  0054CA  59FF               	subwfb	??_Network_Manage& (0+255),w,b
  6012  0054CC  E303               	bnc	l9880
  6013                           
  6014                           ; BSR set to: 0
  6015                           ;network.c: 92: {
  6016                           ;network.c: 93: ARPV4_Update();
  6017  0054CE  ECF2  F030         	call	_ARPV4_Update	;wreg free
  6018                           
  6019                           ; BSR set to: 0
  6020                           ;network.c: 94: arpTimer += 10;
  6021  0054D2  D820               	call	PL633	;call to abstracted procedure
  6022  0054D4                     l9880:
  6023                           
  6024                           ;network.c: 95: }
  6025                           ;network.c: 96: if(now > nowPv)
  6026  0054D4  0101               	movlb	1	; () banked
  6027  0054D6  51B9               	movf	Network_Manage@now& (0+255),w,b
  6028  0054D8  0102               	movlb	2	; () banked
  6029  0054DA  5D18               	subwf	Network_Manage@nowPv& (0+255),w,b
  6030  0054DC  0101               	movlb	1	; () banked
  6031  0054DE  51BA               	movf	(Network_Manage@now+1)& (0+255),w,b
  6032  0054E0  0102               	movlb	2	; () banked
  6033  0054E2  5919               	subwfb	(Network_Manage@nowPv+1)& (0+255),w,b
  6034  0054E4  0101               	movlb	1	; () banked
  6035  0054E6  51BB               	movf	(Network_Manage@now+2)& (0+255),w,b
  6036  0054E8  0102               	movlb	2	; () banked
  6037  0054EA  591A               	subwfb	(Network_Manage@nowPv+2)& (0+255),w,b
  6038  0054EC  511B               	movf	(Network_Manage@nowPv+3)& (0+255),w,b
  6039  0054EE  D81A               	call	PL725	;call to abstracted procedure
  6040  0054F0  51BC               	movf	(Network_Manage@now+3)& (0+255),w,b
  6041  0054F2  0A80               	xorlw	128
  6042  0054F4  0100               	movlb	0	; () banked
  6043  0054F6  59FF               	subwfb	??_Network_Manage& (0+255),w,b
  6044  0054F8  E204               	bc	l9884
  6045                           
  6046                           ; BSR set to: 0
  6047                           ;network.c: 97: {
  6048                           ;network.c: 98: DHCP_Manage();
  6049  0054FA  EC24  F02B         	call	_DHCP_Manage	;wreg free
  6050                           
  6051                           ;network.c: 100: TCP_Update();
  6052  0054FE  ECF2  F01D         	call	_TCP_Update	;wreg free
  6053  005502                     l9884:
  6054                           
  6055                           ;network.c: 101: }
  6056                           ;network.c: 102: nowPv = now;
  6057  005502  C1B9  F218         	movff	Network_Manage@now,Network_Manage@nowPv
  6058  005506  C1BA  F219         	movff	Network_Manage@now+1,Network_Manage@nowPv+1
  6059  00550A  C1BB  F21A         	movff	Network_Manage@now+2,Network_Manage@nowPv+2
  6060  00550E  C1BC  F21B         	movff	Network_Manage@now+3,Network_Manage@nowPv+3
  6061  005512  0012               	return		;funcret
  6062  005514                     __end_of_Network_Manage:
  6063                           	opt stack 0
  6064  005514                     PL633:
  6065                           	opt stack 17
  6066  005514  0E0A               	movlw	10
  6067  005516  0101               	movlb	1	; () banked
  6068  005518  27E6               	addwf	_arpTimer& (0+255),f,b
  6069  00551A  0E00               	movlw	0
  6070  00551C  23E7               	addwfc	(_arpTimer+1)& (0+255),f,b
  6071  00551E  23E8               	addwfc	(_arpTimer+2)& (0+255),f,b
  6072  005520  23E9               	addwfc	(_arpTimer+3)& (0+255),f,b
  6073  005522  0C00               	retlw	0
  6074  005524                     __end_ofPL633:
  6075                           	opt stack 0
  6076  005524                     PL725:
  6077                           	opt stack 12
  6078  005524  0A80               	xorlw	128
  6079  005526  0100               	movlb	0	; () banked
  6080  005528  6FFF               	movwf	??_Network_Manage& (0+255),b
  6081  00552A  0101               	movlb	1	; () banked
  6082  00552C  0012               	return	
  6083  00552E                     __end_ofPL725:
  6084                           	opt stack 0
  6085                           tosu	equ	0xFFF
  6086                           tosh	equ	0xFFE
  6087                           tosl	equ	0xFFD
  6088                           pclath	equ	0xFFA
  6089                           tblptru	equ	0xFF8
  6090                           tblptrh	equ	0xFF7
  6091                           tblptrl	equ	0xFF6
  6092                           tablat	equ	0xFF5
  6093                           prodh	equ	0xFF4
  6094                           prodl	equ	0xFF3
  6095                           intcon	equ	0xFF2
  6096                           indf0	equ	0xFEF
  6097                           postinc0	equ	0xFEE
  6098                           fsr0h	equ	0xFEA
  6099                           fsr0l	equ	0xFE9
  6100                           wreg	equ	0xFE8
  6101                           indf1	equ	0xFE7
  6102                           postinc1	equ	0xFE6
  6103                           postdec1	equ	0xFE5
  6104                           plusw1	equ	0xFE3
  6105                           fsr1h	equ	0xFE2
  6106                           fsr1l	equ	0xFE1
  6107                           indf2	equ	0xFDF
  6108                           postinc2	equ	0xFDE
  6109                           postdec2	equ	0xFDD
  6110                           plusw2	equ	0xFDB
  6111                           fsr2h	equ	0xFDA
  6112                           fsr2l	equ	0xFD9
  6113                           status	equ	0xFD8
  6114                           
  6115 ;; *************** function _TCP_Update *****************
  6116 ;; Defined at:
  6117 ;;		line 1417 in file "../../TCPIP Library/source/tcpv4.c"
  6118 ;; Parameters:    Size  Location     Type
  6119 ;;		None
  6120 ;; Auto vars:     Size  Location     Type
  6121 ;;  tcbPtr          2   27[BANK1 ] PTR struct .
  6122 ;;		 -> ?_sprintf(2), ?_printf(2), main@str(32), STR_8(13), 
  6123 ;;		 -> STR_7(17), STR_6(7), STR_5(10), TCP_Server@port7TCB(55), 
  6124 ;;		 -> Network_Read@debug_str(80), STR_1(15), NULL(0), 
  6125 ;;  count           2   25[BANK1 ] int 
  6126 ;; Return value:  Size  Location     Type
  6127 ;;                  1    wreg      void 
  6128 ;; Registers used:
  6129 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6130 ;; Tracked objects:
  6131 ;;		On entry : E/0
  6132 ;;		On exit  : F/1
  6133 ;;		Unchanged: 0/0
  6134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6136 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6137 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6138 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6139 ;;Total ram usage:       12 bytes
  6140 ;; Hardware stack levels used:    1
  6141 ;; Hardware stack levels required when called:   15
  6142 ;; This function calls:
  6143 ;;		_TCP_FiniteStateMachine
  6144 ;; This function is called by:
  6145 ;;		_Network_Manage
  6146 ;; This function uses a non-reentrant model
  6147 ;;
  6148                           
  6149                           	psect	text30
  6150  003BE4                     __ptext30:
  6151                           	opt stack 0
  6152  003BE4                     _TCP_Update:
  6153                           	opt stack 14
  6154                           
  6155                           ;tcpv4.c: 1421: int count = 0;
  6156                           
  6157                           ;incstack = 0
  6158  003BE4  0101               	movlb	1	; () banked
  6159  003BE6  6B19               	clrf	TCP_Update@count& (0+255),b
  6160  003BE8  6B1A               	clrf	(TCP_Update@count+1)& (0+255),b
  6161                           
  6162                           ; BSR set to: 1
  6163                           ;tcpv4.c: 1425: nextSequenceNumber++;
  6164  003BEA  0102               	movlb	2	; () banked
  6165  003BEC  2B24               	incf	_nextSequenceNumber& (0+255),f,b
  6166  003BEE  0E00               	movlw	0
  6167  003BF0  2325               	addwfc	(_nextSequenceNumber+1)& (0+255),f,b
  6168  003BF2  2326               	addwfc	(_nextSequenceNumber+2)& (0+255),f,b
  6169  003BF4  2327               	addwfc	(_nextSequenceNumber+3)& (0+255),f,b
  6170                           
  6171                           ; BSR set to: 2
  6172                           ;tcpv4.c: 1428: nextAvailablePort = nextAvailablePort + 1;
  6173  003BF6  4A3D               	infsnz	_nextAvailablePort,f,c
  6174  003BF8  2A3E               	incf	_nextAvailablePort+1,f,c
  6175                           
  6176                           ; BSR set to: 2
  6177                           ;tcpv4.c: 1429: if (nextAvailablePort < (1024u))
  6178  003BFA  0E04               	movlw	4
  6179  003BFC  5C3E               	subwf	_nextAvailablePort+1,w,c
  6180  003BFE  E203               	bc	l9616
  6181                           
  6182                           ; BSR set to: 2
  6183                           ;tcpv4.c: 1430: {
  6184                           ;tcpv4.c: 1431: nextAvailablePort = (1024u);
  6185  003C00  0E04               	movlw	4
  6186  003C02  6E3E               	movwf	_nextAvailablePort+1,c
  6187  003C04  6A3D               	clrf	_nextAvailablePort,c
  6188  003C06                     l9616:
  6189                           
  6190                           ; BSR set to: 2
  6191                           ;tcpv4.c: 1432: }
  6192                           ;tcpv4.c: 1435: tcbPtr = tcbList;
  6193  003C06  C041  F11B         	movff	_tcbList,TCP_Update@tcbPtr
  6194  003C0A  C042  F11C         	movff	_tcbList+1,TCP_Update@tcbPtr+1
  6195                           
  6196                           ;tcpv4.c: 1436: while((tcbPtr != (0)) && (count < tcbListSize))
  6197  003C0E  D0E8               	goto	l9636
  6198  003C10                     l9618:
  6199                           
  6200                           ; BSR set to: 1
  6201                           ;tcpv4.c: 1437: {
  6202                           ;tcpv4.c: 1438: if (tcbPtr->timeout > 0)
  6203  003C10  0E30               	movlw	48
  6204  003C12  D8FB               	call	PL411	;call to abstracted procedure
  6205  003C14  64F7               	cpfsgt	tblptrh,c
  6206  003C16  D002               	bra	u15157
  6207  003C18  D905               	call	PL595	;call to abstracted procedure
  6208  003C1A  D003               	bra	u15150
  6209  003C1C                     u15157:
  6210  003C1C  EC73  F011         	call	PL389	;call to abstracted procedure
  6211  003C20  D908               	call	PL661	;call to abstracted procedure
  6212  003C22                     u15150:
  6213  003C22  0101               	movlb	1	; () banked
  6214  003C24  5113               	movf	(??_TCP_Update+2)& (0+255),w,b
  6215  003C26  1114               	iorwf	(??_TCP_Update+3)& (0+255),w,b
  6216  003C28  E101 D0C5          	bz	l9632
  6217                           
  6218                           ; BSR set to: 1
  6219                           ;tcpv4.c: 1439: {
  6220                           ;tcpv4.c: 1440: ;
  6221                           ;tcpv4.c: 1441: tcbPtr->timeout = tcbPtr->timeout - 1;
  6222  003C2C  6911               	setf	??_TCP_Update& (0+255),b
  6223  003C2E  6912               	setf	(??_TCP_Update+1)& (0+255),b
  6224  003C30  0E30               	movlw	48
  6225  003C32  251B               	addwf	TCP_Update@tcbPtr& (0+255),w,b
  6226  003C34  6F13               	movwf	(??_TCP_Update+2)& (0+255),b
  6227  003C36  0E00               	movlw	0
  6228  003C38  211C               	addwfc	(TCP_Update@tcbPtr+1)& (0+255),w,b
  6229  003C3A  6F14               	movwf	(??_TCP_Update+3)& (0+255),b
  6230  003C3C  C113  FFF6         	movff	??_TCP_Update+2,tblptrl
  6231  003C40  C114  FFF7         	movff	??_TCP_Update+3,tblptrh
  6232  003C44  0E00               	movlw	low (__smallconst shr (0+16))
  6233  003C46  6EF8               	movwf	tblptru,c
  6234  003C48  0E0F               	movlw	(high __ramtop+-1)
  6235  003C4A  64F7               	cpfsgt	tblptrh,c
  6236  003C4C  D007               	bra	u15177
  6237  003C4E  0009               	tblrd		*+
  6238  003C50  CFF5 F115          	movff	tablat,??_TCP_Update+4
  6239  003C54  0009               	tblrd		*+
  6240  003C56  CFF5 F116          	movff	tablat,??_TCP_Update+5
  6241  003C5A  D006               	bra	u15170
  6242  003C5C                     u15177:
  6243  003C5C  EC73  F011         	call	PL389	;call to abstracted procedure
  6244  003C60  CFEE F115          	movff	postinc0,??_TCP_Update+4
  6245  003C64  CFEE F116          	movff	postinc0,??_TCP_Update+5
  6246  003C68                     u15170:
  6247  003C68  0101               	movlb	1	; () banked
  6248  003C6A  5111               	movf	??_TCP_Update& (0+255),w,b
  6249  003C6C  2715               	addwf	(??_TCP_Update+4)& (0+255),f,b
  6250  003C6E  5112               	movf	(??_TCP_Update+1)& (0+255),w,b
  6251  003C70  2316               	addwfc	(??_TCP_Update+5)& (0+255),f,b
  6252  003C72  0E30               	movlw	48
  6253  003C74  251B               	addwf	TCP_Update@tcbPtr& (0+255),w,b
  6254  003C76  6F17               	movwf	(??_TCP_Update+6)& (0+255),b
  6255  003C78  0E00               	movlw	0
  6256  003C7A  211C               	addwfc	(TCP_Update@tcbPtr+1)& (0+255),w,b
  6257  003C7C  6F18               	movwf	(??_TCP_Update+7)& (0+255),b
  6258  003C7E  C117  FFF6         	movff	??_TCP_Update+6,tblptrl
  6259  003C82  C118  FFF7         	movff	??_TCP_Update+7,tblptrh
  6260  003C86  0E00               	movlw	low (__smallconst shr (0+16))
  6261  003C88  6EF8               	movwf	tblptru,c
  6262  003C8A  0E0F               	movlw	(high __ramtop+-1)
  6263  003C8C  64F7               	cpfsgt	tblptrh,c
  6264  003C8E  D007               	bra	u15187
  6265  003C90  C115  FFF5         	movff	??_TCP_Update+4,tablat
  6266  003C94  000D               	tblwt		*+
  6267  003C96  C116  FFF5         	movff	??_TCP_Update+5,tablat
  6268  003C9A  000C               	tblwt		*
  6269  003C9C  D006               	bra	u15180
  6270  003C9E                     u15187:
  6271  003C9E  EC73  F011         	call	PL389	;call to abstracted procedure
  6272  003CA2  C115  FFEE         	movff	??_TCP_Update+4,postinc0
  6273  003CA6  C116  FFEF         	movff	??_TCP_Update+5,indf0
  6274  003CAA                     u15180:
  6275                           
  6276                           ;tcpv4.c: 1443: if (tcbPtr->timeout == 0)
  6277  003CAA  0E30               	movlw	48
  6278  003CAC  0101               	movlb	1	; () banked
  6279  003CAE  D8AD               	call	PL411	;call to abstracted procedure
  6280  003CB0  64F7               	cpfsgt	tblptrh,c
  6281  003CB2  D002               	bra	u15197
  6282  003CB4  D8B7               	call	PL595	;call to abstracted procedure
  6283  003CB6  D003               	bra	u15190
  6284  003CB8                     u15197:
  6285  003CB8  EC73  F011         	call	PL389	;call to abstracted procedure
  6286  003CBC  D8BA               	call	PL661	;call to abstracted procedure
  6287  003CBE                     u15190:
  6288  003CBE  0101               	movlb	1	; () banked
  6289  003CC0  5113               	movf	(??_TCP_Update+2)& (0+255),w,b
  6290  003CC2  1114               	iorwf	(??_TCP_Update+3)& (0+255),w,b
  6291  003CC4  E178               	bnz	l9632
  6292                           
  6293                           ; BSR set to: 1
  6294                           ;tcpv4.c: 1444: {
  6295                           ;tcpv4.c: 1445: if (tcbPtr->timeoutsCount > 0)
  6296  003CC6  0E34               	movlw	52
  6297  003CC8  D8A0               	call	PL411	;call to abstracted procedure
  6298  003CCA  64F7               	cpfsgt	tblptrh,c
  6299  003CCC  D003               	bra	u15217
  6300  003CCE  0008               	tblrd		*
  6301  003CD0  50F5               	movf	tablat,w,c
  6302  003CD2  D003               	bra	u15210
  6303  003CD4                     u15217:
  6304  003CD4  EC73  F011         	call	PL389	;call to abstracted procedure
  6305  003CD8  50EF               	movf	indf0,w,c
  6306  003CDA                     u15210:
  6307  003CDA  0900               	iorlw	0
  6308  003CDC  E06C               	bz	l9632
  6309                           
  6310                           ;tcpv4.c: 1446: {
  6311                           ;tcpv4.c: 1448: if (tcbPtr->connectionEvent == NOP)
  6312  003CDE  0E2B               	movlw	43
  6313  003CE0  0101               	movlb	1	; () banked
  6314  003CE2  D893               	call	PL411	;call to abstracted procedure
  6315  003CE4  64F7               	cpfsgt	tblptrh,c
  6316  003CE6  D003               	bra	u15237
  6317  003CE8  0008               	tblrd		*
  6318  003CEA  50F5               	movf	tablat,w,c
  6319  003CEC  D003               	bra	u15230
  6320  003CEE                     u15237:
  6321  003CEE  EC73  F011         	call	PL389	;call to abstracted procedure
  6322  003CF2  50EF               	movf	indf0,w,c
  6323  003CF4                     u15230:
  6324  003CF4  0A0D               	xorlw	13
  6325  003CF6  E15F               	bnz	l9632
  6326                           
  6327                           ;tcpv4.c: 1449: {
  6328                           ;tcpv4.c: 1450: tcbPtr->timeout = tcbPtr->timeoutReloadValue;
  6329  003CF8  0E32               	movlw	50
  6330  003CFA  0101               	movlb	1	; () banked
  6331  003CFC  D886               	call	PL411	;call to abstracted procedure
  6332  003CFE  64F7               	cpfsgt	tblptrh,c
  6333  003D00  D002               	bra	u15257
  6334  003D02  D890               	call	PL595	;call to abstracted procedure
  6335  003D04  D003               	bra	u15250
  6336  003D06                     u15257:
  6337  003D06  EC73  F011         	call	PL389	;call to abstracted procedure
  6338  003D0A  D893               	call	PL661	;call to abstracted procedure
  6339  003D0C                     u15250:
  6340  003D0C  0E30               	movlw	48
  6341  003D0E  0101               	movlb	1	; () banked
  6342  003D10  251B               	addwf	TCP_Update@tcbPtr& (0+255),w,b
  6343  003D12  6F15               	movwf	(??_TCP_Update+4)& (0+255),b
  6344  003D14  0E00               	movlw	0
  6345  003D16  211C               	addwfc	(TCP_Update@tcbPtr+1)& (0+255),w,b
  6346  003D18  6F16               	movwf	(??_TCP_Update+5)& (0+255),b
  6347  003D1A  C115  FFF6         	movff	??_TCP_Update+4,tblptrl
  6348  003D1E  C116  FFF7         	movff	??_TCP_Update+5,tblptrh
  6349  003D22  0E00               	movlw	low (__smallconst shr (0+16))
  6350  003D24  6EF8               	movwf	tblptru,c
  6351  003D26  0E0F               	movlw	(high __ramtop+-1)
  6352  003D28  64F7               	cpfsgt	tblptrh,c
  6353  003D2A  D007               	bra	u15267
  6354  003D2C  C113  FFF5         	movff	??_TCP_Update+2,tablat
  6355  003D30  000D               	tblwt		*+
  6356  003D32  C114  FFF5         	movff	??_TCP_Update+3,tablat
  6357  003D36  000C               	tblwt		*
  6358  003D38  D006               	bra	u15260
  6359  003D3A                     u15267:
  6360  003D3A  EC73  F011         	call	PL389	;call to abstracted procedure
  6361  003D3E  C113  FFEE         	movff	??_TCP_Update+2,postinc0
  6362  003D42  C114  FFEF         	movff	??_TCP_Update+3,indf0
  6363  003D46                     u15260:
  6364                           
  6365                           ;tcpv4.c: 1451: tcbPtr->timeoutsCount = tcbPtr->timeoutsCount - 1;
  6366  003D46  0E34               	movlw	52
  6367  003D48  0101               	movlb	1	; () banked
  6368  003D4A  D85F               	call	PL411	;call to abstracted procedure
  6369  003D4C  64F7               	cpfsgt	tblptrh,c
  6370  003D4E  D003               	bra	u15277
  6371  003D50  0008               	tblrd		*
  6372  003D52  50F5               	movf	tablat,w,c
  6373  003D54  D003               	bra	u15270
  6374  003D56                     u15277:
  6375  003D56  EC73  F011         	call	PL389	;call to abstracted procedure
  6376  003D5A  50EF               	movf	indf0,w,c
  6377  003D5C                     u15270:
  6378  003D5C  0101               	movlb	1	; () banked
  6379  003D5E  6F13               	movwf	(??_TCP_Update+2)& (0+255),b
  6380  003D60  0713               	decf	(??_TCP_Update+2)& (0+255),f,b
  6381  003D62  0E34               	movlw	52
  6382  003D64  251B               	addwf	TCP_Update@tcbPtr& (0+255),w,b
  6383  003D66  6F14               	movwf	(??_TCP_Update+3)& (0+255),b
  6384  003D68  0E00               	movlw	0
  6385  003D6A  211C               	addwfc	(TCP_Update@tcbPtr+1)& (0+255),w,b
  6386  003D6C  6F15               	movwf	(??_TCP_Update+4)& (0+255),b
  6387  003D6E  C114  FFF6         	movff	??_TCP_Update+3,tblptrl
  6388  003D72  C115  FFF7         	movff	??_TCP_Update+4,tblptrh
  6389  003D76  0E00               	movlw	low (__smallconst shr (0+16))
  6390  003D78  6EF8               	movwf	tblptru,c
  6391  003D7A  0E0F               	movlw	(high __ramtop+-1)
  6392  003D7C  64F7               	cpfsgt	tblptrh,c
  6393  003D7E  D004               	bra	u15287
  6394  003D80  C113  FFF5         	movff	??_TCP_Update+2,tablat
  6395  003D84  000C               	tblwt		*
  6396  003D86  D004               	bra	u15280
  6397  003D88                     u15287:
  6398  003D88  EC73  F011         	call	PL389	;call to abstracted procedure
  6399  003D8C  C113  FFEF         	movff	??_TCP_Update+2,indf0
  6400  003D90                     u15280:
  6401                           
  6402                           ;tcpv4.c: 1452: tcbPtr->connectionEvent = TIMEOUT;
  6403  003D90  0E2B               	movlw	43
  6404  003D92  0101               	movlb	1	; () banked
  6405  003D94  D83A               	call	PL411	;call to abstracted procedure
  6406  003D96  64F7               	cpfsgt	tblptrh,c
  6407  003D98  D004               	bra	u15297
  6408  003D9A  0E0C               	movlw	12
  6409  003D9C  6EF5               	movwf	tablat,c
  6410  003D9E  000C               	tblwt		*
  6411  003DA0  D004               	bra	u15290
  6412  003DA2                     u15297:
  6413  003DA2  EC73  F011         	call	PL389	;call to abstracted procedure
  6414  003DA6  0E0C               	movlw	12
  6415  003DA8  6EEF               	movwf	indf0,c
  6416  003DAA                     u15290:
  6417                           
  6418                           ;tcpv4.c: 1453: currentTCB = tcbPtr;
  6419  003DAA  C11B  F03B         	movff	TCP_Update@tcbPtr,_currentTCB
  6420  003DAE  C11C  F03C         	movff	TCP_Update@tcbPtr+1,_currentTCB+1
  6421                           
  6422                           ;tcpv4.c: 1454: TCP_FiniteStateMachine();
  6423  003DB2  EC62  F008         	call	_TCP_FiniteStateMachine	;wreg free
  6424  003DB6                     l9632:
  6425                           
  6426                           ;tcpv4.c: 1455: }
  6427                           ;tcpv4.c: 1456: }
  6428                           ;tcpv4.c: 1457: }
  6429                           ;tcpv4.c: 1458: }
  6430                           ;tcpv4.c: 1459: tcbPtr = tcbPtr->nextTCB;
  6431  003DB6  0E2C               	movlw	44
  6432  003DB8  0101               	movlb	1	; () banked
  6433  003DBA  D827               	call	PL411	;call to abstracted procedure
  6434  003DBC  64F7               	cpfsgt	tblptrh,c
  6435  003DBE  D007               	bra	u15307
  6436  003DC0  0009               	tblrd		*+
  6437  003DC2  CFF5 F11B          	movff	tablat,TCP_Update@tcbPtr
  6438  003DC6  0009               	tblrd		*+
  6439  003DC8  CFF5 F11C          	movff	tablat,TCP_Update@tcbPtr+1
  6440  003DCC  D006               	bra	u15300
  6441  003DCE                     u15307:
  6442  003DCE  EC73  F011         	call	PL389	;call to abstracted procedure
  6443  003DD2  CFEE F11B          	movff	postinc0,TCP_Update@tcbPtr
  6444  003DD6  CFEE F11C          	movff	postinc0,TCP_Update@tcbPtr+1
  6445  003DDA                     u15300:
  6446                           
  6447                           ;tcpv4.c: 1460: count ++;
  6448  003DDA  0101               	movlb	1	; () banked
  6449  003DDC  4B19               	infsnz	TCP_Update@count& (0+255),f,b
  6450  003DDE  2B1A               	incf	(TCP_Update@count+1)& (0+255),f,b
  6451  003DE0                     l9636:
  6452  003DE0  0101               	movlb	1	; () banked
  6453  003DE2  511B               	movf	TCP_Update@tcbPtr& (0+255),w,b
  6454  003DE4  111C               	iorwf	(TCP_Update@tcbPtr+1)& (0+255),w,b
  6455  003DE6  B4D8               	btfsc	status,2,c
  6456  003DE8  0012               	return	
  6457                           
  6458                           ; BSR set to: 1
  6459  003DEA  C047  F111         	movff	_tcbListSize,??_TCP_Update
  6460  003DEE  6B12               	clrf	(??_TCP_Update+1)& (0+255),b
  6461  003DF0  BF11               	btfsc	??_TCP_Update& (0+255),7,b
  6462  003DF2  0712               	decf	(??_TCP_Update+1)& (0+255),f,b
  6463  003DF4  5111               	movf	??_TCP_Update& (0+255),w,b
  6464  003DF6  5D19               	subwf	TCP_Update@count& (0+255),w,b
  6465  003DF8  511A               	movf	(TCP_Update@count+1)& (0+255),w,b
  6466  003DFA  0A80               	xorlw	128
  6467  003DFC  6F13               	movwf	(??_TCP_Update+2)& (0+255),b
  6468  003DFE  5112               	movf	(??_TCP_Update+1)& (0+255),w,b
  6469  003E00  0A80               	xorlw	128
  6470  003E02  5913               	subwfb	(??_TCP_Update+2)& (0+255),w,b
  6471  003E04  E201 D704          	bnc	l9618
  6472                           
  6473                           ; BSR set to: 1
  6474  003E08  0012               	return		;funcret
  6475  003E0A                     __end_of_TCP_Update:
  6476                           	opt stack 0
  6477  003E0A                     PL411:
  6478                           	opt stack 14
  6479  003E0A  251B               	addwf	TCP_Update@tcbPtr& (0+255),w,b
  6480  003E0C  6F11               	movwf	??_TCP_Update& (0+255),b
  6481  003E0E  0E00               	movlw	0
  6482  003E10  211C               	addwfc	(TCP_Update@tcbPtr+1)& (0+255),w,b
  6483  003E12  6F12               	movwf	(??_TCP_Update+1)& (0+255),b
  6484  003E14  C111  FFF6         	movff	??_TCP_Update,tblptrl
  6485  003E18  C112  FFF7         	movff	??_TCP_Update+1,tblptrh
  6486  003E1C  0E00               	movlw	low (__smallconst shr (0+16))
  6487  003E1E  6EF8               	movwf	tblptru,c
  6488  003E20  0E0F               	movlw	(high __ramtop+-1)
  6489  003E22  0012               	return	
  6490  003E24                     __end_ofPL411:
  6491                           	opt stack 0
  6492  003E24                     PL595:
  6493                           	opt stack 14
  6494  003E24  0009               	tblrd		*+
  6495  003E26  CFF5 F113          	movff	tablat,??_TCP_Update+2
  6496  003E2A  0009               	tblrd		*+
  6497  003E2C  CFF5 F114          	movff	tablat,??_TCP_Update+3
  6498  003E30  0012               	return	
  6499  003E32                     __end_ofPL595:
  6500                           	opt stack 0
  6501  003E32                     PL661:
  6502                           	opt stack 14
  6503  003E32  CFEE F113          	movff	postinc0,??_TCP_Update+2
  6504  003E36  CFEE F114          	movff	postinc0,??_TCP_Update+3
  6505  003E3A  0012               	return	
  6506  003E3C                     __end_ofPL661:
  6507                           	opt stack 0
  6508                           tosu	equ	0xFFF
  6509                           tosh	equ	0xFFE
  6510                           tosl	equ	0xFFD
  6511                           pclath	equ	0xFFA
  6512                           tblptru	equ	0xFF8
  6513                           tblptrh	equ	0xFF7
  6514                           tblptrl	equ	0xFF6
  6515                           tablat	equ	0xFF5
  6516                           prodh	equ	0xFF4
  6517                           prodl	equ	0xFF3
  6518                           intcon	equ	0xFF2
  6519                           indf0	equ	0xFEF
  6520                           postinc0	equ	0xFEE
  6521                           fsr0h	equ	0xFEA
  6522                           fsr0l	equ	0xFE9
  6523                           wreg	equ	0xFE8
  6524                           indf1	equ	0xFE7
  6525                           postinc1	equ	0xFE6
  6526                           postdec1	equ	0xFE5
  6527                           plusw1	equ	0xFE3
  6528                           fsr1h	equ	0xFE2
  6529                           fsr1l	equ	0xFE1
  6530                           indf2	equ	0xFDF
  6531                           postinc2	equ	0xFDE
  6532                           postdec2	equ	0xFDD
  6533                           plusw2	equ	0xFDB
  6534                           fsr2h	equ	0xFDA
  6535                           fsr2l	equ	0xFD9
  6536                           status	equ	0xFD8
  6537                           
  6538 ;; *************** function _Network_Read *****************
  6539 ;; Defined at:
  6540 ;;		line 105 in file "../../TCPIP Library/source/network.c"
  6541 ;; Parameters:    Size  Location     Type
  6542 ;;		None
  6543 ;; Auto vars:     Size  Location     Type
  6544 ;;  debug_str      80   91[BANK1 ] unsigned char [80]
  6545 ;;  header         14  171[BANK1 ] struct .
  6546 ;; Return value:  Size  Location     Type
  6547 ;;                  1    wreg      void 
  6548 ;; Registers used:
  6549 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  6550 ;; Tracked objects:
  6551 ;;		On entry : 0/1
  6552 ;;		On exit  : 0/0
  6553 ;;		Unchanged: 0/0
  6554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6556 ;;      Locals:         0       0      94       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6557 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6558 ;;      Totals:         0       0      98       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6559 ;;Total ram usage:       98 bytes
  6560 ;; Hardware stack levels used:    1
  6561 ;; Hardware stack levels required when called:   17
  6562 ;; This function calls:
  6563 ;;		_ARPV4_Packet
  6564 ;;		_ETH_Flush
  6565 ;;		_ETH_NextPacketUpdate
  6566 ;;		_ETH_ReadBlock
  6567 ;;		_IPV4_Packet
  6568 ;;		_sprintf
  6569 ;; This function is called by:
  6570 ;;		_Network_Manage
  6571 ;; This function uses a non-reentrant model
  6572 ;;
  6573                           
  6574                           	psect	text31
  6575  004F9C                     __ptext31:
  6576                           	opt stack 0
  6577  004F9C                     _Network_Read:
  6578                           	opt stack 12
  6579                           
  6580                           ;network.c: 107: ethernetFrame_t header;
  6581                           ;network.c: 108: char debug_str[80];
  6582                           ;network.c: 110: if(ethData.pktReady)
  6583                           
  6584                           ; BSR set to: 1
  6585                           ;incstack = 0
  6586  004F9C  0101               	movlb	1	; () banked
  6587  004F9E  A3BD               	btfss	_ethData& (0+255),1,b	;volatile
  6588  004FA0  0012               	return	
  6589                           
  6590                           ; BSR set to: 1
  6591                           ;network.c: 111: {
  6592                           ;network.c: 112: ETH_NextPacketUpdate();
  6593  004FA2  EC1D  F02D         	call	_ETH_NextPacketUpdate	;wreg free
  6594                           
  6595                           ; BSR set to: 1
  6596                           ;network.c: 113: ETH_ReadBlock((char *)&header, sizeof(header));
  6597  004FA6  0EAB               	movlw	low Network_Read@header
  6598  004FA8  6E17               	movwf	ETH_ReadBlock@buffer,c
  6599  004FAA  0E01               	movlw	high Network_Read@header
  6600  004FAC  6E18               	movwf	ETH_ReadBlock@buffer+1,c
  6601  004FAE  6A1A               	clrf	ETH_ReadBlock@length+1,c
  6602  004FB0  0E0E               	movlw	14
  6603  004FB2  6E19               	movwf	ETH_ReadBlock@length,c
  6604  004FB4  EC92  F02C         	call	_ETH_ReadBlock	;wreg free
  6605                           
  6606                           ; BSR set to: 1
  6607                           ;network.c: 114: header.id.type = ((((uint16_t)header.id.type & (uint16_t)0xFF00) >> 8) 
      +                          | (((uint16_t)header.id.type & (uint16_t)0x00FF) << 8));
  6608  004FB8  51B7               	movf	(Network_Read@header+12)& (0+255),w,b
  6609  004FBA  6F58               	movwf	(??_Network_Read+1)& (0+255),b
  6610  004FBC  6B57               	clrf	??_Network_Read& (0+255),b
  6611  004FBE  EE21  F0B7         	lfsr	2,Network_Read@header+12
  6612  004FC2  CFDE F159          	movff	postinc2,??_Network_Read+2
  6613  004FC6  CFDD F15A          	movff	postdec2,??_Network_Read+3
  6614  004FCA  C15A  F159         	movff	??_Network_Read+3,??_Network_Read+2
  6615  004FCE  6B5A               	clrf	(??_Network_Read+3)& (0+255),b
  6616  004FD0  6B5A               	clrf	(??_Network_Read+3)& (0+255),b
  6617  004FD2  5157               	movf	??_Network_Read& (0+255),w,b
  6618  004FD4  1159               	iorwf	(??_Network_Read+2)& (0+255),w,b
  6619  004FD6  6FB7               	movwf	(Network_Read@header+12)& (0+255),b
  6620  004FD8  5158               	movf	(??_Network_Read+1)& (0+255),w,b
  6621  004FDA  115A               	iorwf	(??_Network_Read+3)& (0+255),w,b
  6622  004FDC  6FB8               	movwf	(Network_Read@header+13)& (0+255),b
  6623                           
  6624                           ;network.c: 115: switch (header.id.type)
  6625  004FDE  D01B               	goto	l9590
  6626  004FE0                     l9582:
  6627                           
  6628                           ; BSR set to: 1
  6629                           ;network.c: 121: ;
  6630                           ;network.c: 122: ARPV4_Packet();
  6631  004FE0  EC2A  F018         	call	_ARPV4_Packet	;wreg free
  6632                           
  6633                           ;network.c: 123: break;
  6634  004FE4  EF48  F02D         	goto	_ETH_Flush
  6635  004FE8                     l9584:
  6636                           
  6637                           ; BSR set to: 1
  6638                           ;network.c: 125: ;
  6639                           ;network.c: 126: IPV4_Packet();
  6640  004FE8  ECCB  F019         	call	_IPV4_Packet	;wreg free
  6641                           
  6642                           ;network.c: 127: break;
  6643  004FEC  EF48  F02D         	goto	_ETH_Flush
  6644  004FF0                     l9586:
  6645                           
  6646                           ; BSR set to: 1
  6647                           ;network.c: 132: sprintf(debug_str,"%x : %d",header.id.type,header.id.length);
  6648  004FF0  0E5B               	movlw	low Network_Read@debug_str
  6649  004FF2  0100               	movlb	0	; () banked
  6650  004FF4  6F60               	movwf	sprintf@wh& (0+255),b
  6651  004FF6  0E01               	movlw	high Network_Read@debug_str
  6652  004FF8  6F61               	movwf	(sprintf@wh+1)& (0+255),b
  6653  004FFA  0EB3               	movlw	low STR_2
  6654  004FFC  6F62               	movwf	sprintf@f& (0+255),b
  6655  004FFE  C1B7  F063         	movff	Network_Read@header+12,?_sprintf+3
  6656  005002  C1B8  F064         	movff	Network_Read@header+13,?_sprintf+4
  6657  005006  C1B7  F065         	movff	Network_Read@header+12,?_sprintf+5
  6658  00500A  C1B8  F066         	movff	Network_Read@header+13,?_sprintf+6
  6659  00500E  EC43  F030         	call	_sprintf	;wreg free
  6660                           
  6661                           ;network.c: 133: ;
  6662                           ;network.c: 134: break;
  6663  005012  EF48  F02D         	goto	_ETH_Flush
  6664  005016                     l9590:
  6665                           
  6666                           ; BSR set to: 1
  6667  005016  EE21  F0B7         	lfsr	2,Network_Read@header+12
  6668  00501A  CFDE F157          	movff	postinc2,??_Network_Read
  6669  00501E  CFDD F158          	movff	postdec2,??_Network_Read+1
  6670                           
  6671                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 3 sub-sw
      +                          itches
  6672                           ; Switch size 1, requested type "space"
  6673                           ; Number of cases is 3, Range of values is 8 to 134
  6674                           ; switch strategies available:
  6675                           ; Name         Instructions Cycles
  6676                           ; simple_byte           10     6 (average)
  6677                           ;	Chosen strategy is simple_byte
  6678  005022  5158               	movf	(??_Network_Read+1)& (0+255),w,b
  6679  005024  0A08               	xorlw	8	; case 8
  6680  005026  E005               	bz	l10068
  6681  005028  0A89               	xorlw	137	; case 129
  6682  00502A  E008               	bz	l10070
  6683  00502C  0A07               	xorlw	7	; case 134
  6684  00502E  E008               	bz	l10072
  6685  005030  D7DF               	goto	l9586
  6686  005032                     l10068:
  6687                           
  6688                           ; BSR set to: 1
  6689                           ; Switch size 1, requested type "space"
  6690                           ; Number of cases is 2, Range of values is 0 to 6
  6691                           ; switch strategies available:
  6692                           ; Name         Instructions Cycles
  6693                           ; simple_byte            7     4 (average)
  6694                           ;	Chosen strategy is simple_byte
  6695  005032  5157               	movf	??_Network_Read& (0+255),w,b
  6696  005034  E0D9               	bz	l9584
  6697  005036  0A06               	xorlw	6	; case 6
  6698  005038  E0D3               	bz	l9582
  6699  00503A  D7DA               	goto	l9586
  6700  00503C                     l10070:
  6701                           
  6702                           ; BSR set to: 1
  6703                           ; Switch size 1, requested type "space"
  6704                           ; Number of cases is 1, Range of values is 0 to 0
  6705                           ; switch strategies available:
  6706                           ; Name         Instructions Cycles
  6707                           ; simple_byte            4     3 (average)
  6708                           ;	Chosen strategy is simple_byte
  6709  00503C  5157               	movf	??_Network_Read& (0+255),w,b
  6710  00503E  D002               	goto	L7
  6711  005040                     l10072:
  6712                           
  6713                           ; BSR set to: 1
  6714                           ; Switch size 1, requested type "space"
  6715                           ; Number of cases is 1, Range of values is 221 to 221
  6716                           ; switch strategies available:
  6717                           ; Name         Instructions Cycles
  6718                           ; simple_byte            4     3 (average)
  6719                           ;	Chosen strategy is simple_byte
  6720  005040  5157               	movf	??_Network_Read& (0+255),w,b
  6721  005042  0ADD               	xorlw	221	; case 221
  6722  005044                     L7:
  6723  005044  E1D5               	bnz	l9586
  6724                           
  6725                           ;network.c: 136: ETH_Flush();
  6726  005046  EF48  F02D         	goto	_ETH_Flush	;wreg free
  6727  00504A                     __end_of_Network_Read:
  6728                           	opt stack 0
  6729                           tosu	equ	0xFFF
  6730                           tosh	equ	0xFFE
  6731                           tosl	equ	0xFFD
  6732                           pclath	equ	0xFFA
  6733                           tblptru	equ	0xFF8
  6734                           tblptrh	equ	0xFF7
  6735                           tblptrl	equ	0xFF6
  6736                           tablat	equ	0xFF5
  6737                           prodh	equ	0xFF4
  6738                           prodl	equ	0xFF3
  6739                           intcon	equ	0xFF2
  6740                           indf0	equ	0xFEF
  6741                           postinc0	equ	0xFEE
  6742                           fsr0h	equ	0xFEA
  6743                           fsr0l	equ	0xFE9
  6744                           wreg	equ	0xFE8
  6745                           indf1	equ	0xFE7
  6746                           postinc1	equ	0xFE6
  6747                           postdec1	equ	0xFE5
  6748                           plusw1	equ	0xFE3
  6749                           fsr1h	equ	0xFE2
  6750                           fsr1l	equ	0xFE1
  6751                           indf2	equ	0xFDF
  6752                           postinc2	equ	0xFDE
  6753                           postdec2	equ	0xFDD
  6754                           plusw2	equ	0xFDB
  6755                           fsr2h	equ	0xFDA
  6756                           fsr2l	equ	0xFD9
  6757                           status	equ	0xFD8
  6758                           
  6759 ;; *************** function _sprintf *****************
  6760 ;; Defined at:
  6761 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\sprintf.c"
  6762 ;; Parameters:    Size  Location     Type
  6763 ;;  wh              2    0[BANK0 ] PTR unsigned char 
  6764 ;;		 -> main@str(32), Network_Read@debug_str(80), 
  6765 ;;  f               1    2[BANK0 ] PTR const unsigned char 
  6766 ;;		 -> STR_9(12), STR_2(8), 
  6767 ;; Auto vars:     Size  Location     Type
  6768 ;;  pb              5   12[BANK0 ] struct __prbuf
  6769 ;;  ap              1   11[BANK0 ] PTR void [1]
  6770 ;;		 -> ?_sprintf(2), ?_printf(2), 
  6771 ;; Return value:  Size  Location     Type
  6772 ;;                  2    0[BANK0 ] int 
  6773 ;; Registers used:
  6774 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6775 ;; Tracked objects:
  6776 ;;		On entry : F/0
  6777 ;;		On exit  : 0/0
  6778 ;;		Unchanged: 0/0
  6779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6780 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6781 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6783 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6784 ;;Total ram usage:       17 bytes
  6785 ;; Hardware stack levels used:    1
  6786 ;; Hardware stack levels required when called:   10
  6787 ;; This function calls:
  6788 ;;		__doprnt
  6789 ;; This function is called by:
  6790 ;;		_Network_Read
  6791 ;;		_main
  6792 ;; This function uses a non-reentrant model
  6793 ;;
  6794                           
  6795                           	psect	text32
  6796  006086                     __ptext32:
  6797                           	opt stack 0
  6798  006086                     _sprintf:
  6799                           	opt stack 20
  6800                           
  6801                           ; BSR set to: 0
  6802                           
  6803                           ;incstack = 0
  6804  006086  C060  F06C         	movff	sprintf@wh,sprintf@pb
  6805  00608A  C061  F06D         	movff	sprintf@wh+1,sprintf@pb+1
  6806                           
  6807                           ; BSR set to: 0
  6808  00608E  6B6E               	clrf	(sprintf@pb+2)& (0+255),b
  6809  006090  6B6F               	clrf	(sprintf@pb+3)& (0+255),b
  6810  006092  6B70               	clrf	(sprintf@pb+4)& (0+255),b
  6811  006094  0E63               	movlw	low (?_sprintf+3)
  6812  006096  6F6B               	movwf	sprintf@ap& (0+255),b
  6813                           
  6814                           ; BSR set to: 0
  6815  006098  0E6C               	movlw	low sprintf@pb
  6816  00609A  6E23               	movwf	__doprnt@pb,c
  6817  00609C  C062  F024         	movff	sprintf@f,__doprnt@f
  6818  0060A0  0E6B               	movlw	low sprintf@ap
  6819  0060A2  6E25               	movwf	__doprnt@ap,c
  6820  0060A4  EC47  F01B         	call	__doprnt	;wreg free
  6821  0060A8  C06C  FFD9         	movff	sprintf@pb,fsr2l
  6822  0060AC  C06D  FFDA         	movff	sprintf@pb+1,fsr2h
  6823  0060B0  6ADF               	clrf	indf2,c
  6824  0060B2  0C00               	retlw	0	;funcret
  6825  0060B4                     __end_of_sprintf:
  6826                           	opt stack 0
  6827                           tosu	equ	0xFFF
  6828                           tosh	equ	0xFFE
  6829                           tosl	equ	0xFFD
  6830                           pclath	equ	0xFFA
  6831                           tblptru	equ	0xFF8
  6832                           tblptrh	equ	0xFF7
  6833                           tblptrl	equ	0xFF6
  6834                           tablat	equ	0xFF5
  6835                           prodh	equ	0xFF4
  6836                           prodl	equ	0xFF3
  6837                           intcon	equ	0xFF2
  6838                           indf0	equ	0xFEF
  6839                           postinc0	equ	0xFEE
  6840                           fsr0h	equ	0xFEA
  6841                           fsr0l	equ	0xFE9
  6842                           wreg	equ	0xFE8
  6843                           indf1	equ	0xFE7
  6844                           postinc1	equ	0xFE6
  6845                           postdec1	equ	0xFE5
  6846                           plusw1	equ	0xFE3
  6847                           fsr1h	equ	0xFE2
  6848                           fsr1l	equ	0xFE1
  6849                           indf2	equ	0xFDF
  6850                           postinc2	equ	0xFDE
  6851                           postdec2	equ	0xFDD
  6852                           plusw2	equ	0xFDB
  6853                           fsr2h	equ	0xFDA
  6854                           fsr2l	equ	0xFD9
  6855                           status	equ	0xFD8
  6856                           
  6857 ;; *************** function _IPV4_Packet *****************
  6858 ;; Defined at:
  6859 ;;		line 115 in file "../../TCPIP Library/source/ipv4.c"
  6860 ;; Parameters:    Size  Location     Type
  6861 ;;		None
  6862 ;; Auto vars:     Size  Location     Type
  6863 ;;  msg            40    0        unsigned char [40]
  6864 ;;  cksm            2   85[BANK1 ] unsigned int 
  6865 ;;  length          2   83[BANK1 ] unsigned int 
  6866 ;;  hdrLen          1   82[BANK1 ] unsigned char 
  6867 ;; Return value:  Size  Location     Type
  6868 ;;                  1    wreg      enum E6890
  6869 ;; Registers used:
  6870 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  6871 ;; Tracked objects:
  6872 ;;		On entry : 0/1
  6873 ;;		On exit  : C/0
  6874 ;;		Unchanged: 0/0
  6875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6877 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6878 ;;      Temps:          0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6879 ;;      Totals:         0       0      33       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6880 ;;Total ram usage:       33 bytes
  6881 ;; Hardware stack levels used:    1
  6882 ;; Hardware stack levels required when called:   16
  6883 ;; This function calls:
  6884 ;;		_ETH_Dump
  6885 ;;		_ETH_ReadBlock
  6886 ;;		_ETH_RxComputeChecksum
  6887 ;;		_ICMP_Receive
  6888 ;;		_IPV4_PseudoHeaderChecksum
  6889 ;;		_TCP_Recv
  6890 ;;		_UDP_Receive
  6891 ;; This function is called by:
  6892 ;;		_Network_Read
  6893 ;; This function uses a non-reentrant model
  6894 ;;
  6895                           
  6896                           	psect	text33
  6897  003396                     __ptext33:
  6898                           	opt stack 0
  6899  003396                     _IPV4_Packet:
  6900                           	opt stack 12
  6901                           
  6902                           ;ipv4.c: 118: uint16_t length = 0;
  6903                           
  6904                           ;incstack = 0
  6905  003396  0101               	movlb	1	; () banked
  6906  003398  6B53               	clrf	IPV4_Packet@length& (0+255),b
  6907  00339A  6B54               	clrf	(IPV4_Packet@length+1)& (0+255),b
  6908                           
  6909                           ; BSR set to: 1
  6910                           ;ipv4.c: 119: char msg[40];
  6911                           ;ipv4.c: 120: uint8_t hdrLen;
  6912                           ;ipv4.c: 123: cksm = ETH_RxComputeChecksum(sizeof(ipv4Header_t), 0);
  6913  00339C  6A26               	clrf	ETH_RxComputeChecksum@len+1,c
  6914  00339E  0E14               	movlw	20
  6915  0033A0  6E25               	movwf	ETH_RxComputeChecksum@len,c
  6916  0033A2  6A28               	clrf	ETH_RxComputeChecksum@seed+1,c
  6917  0033A4  6A27               	clrf	ETH_RxComputeChecksum@seed,c
  6918  0033A6  EC3D  F02F         	call	_ETH_RxComputeChecksum	;wreg free
  6919                           
  6920                           ;ipv4.c: 124: if (cksm != 0)
  6921  0033AA  D945               	call	PL569	;call to abstracted procedure
  6922  0033AC  E001               	bz	l9268
  6923  0033AE  0012               	return	
  6924  0033B0                     l9268:
  6925                           
  6926                           ; BSR set to: 1
  6927                           ;ipv4.c: 128: }
  6928                           ;ipv4.c: 130: ETH_ReadBlock((char *)&ipv4Header, sizeof(ipv4Header_t));
  6929  0033B0  0E8B               	movlw	low _ipv4Header
  6930  0033B2  6E17               	movwf	ETH_ReadBlock@buffer,c
  6931  0033B4  0E02               	movlw	high _ipv4Header
  6932  0033B6  EC25  F018         	call	PL697	;call to abstracted procedure
  6933  0033BA  EC92  F02C         	call	_ETH_ReadBlock	;wreg free
  6934                           
  6935                           ; BSR set to: 1
  6936                           ;ipv4.c: 131: if(ipv4Header.version != 4)
  6937  0033BE  0102               	movlb	2	; () banked
  6938  0033C0  398B               	swapf	_ipv4Header& (0+255),w,b
  6939  0033C2  0B0F               	andlw	15
  6940  0033C4  0A04               	xorlw	4
  6941  0033C6  E001               	bz	l9274
  6942  0033C8  0012               	return	
  6943  0033CA                     l9274:
  6944                           
  6945                           ; BSR set to: 2
  6946                           ;ipv4.c: 134: }
  6947                           ;ipv4.c: 136: ipv4Header.dstIpAddress = ((((uint32_t)ipv4Header.dstIpAddress&(uint32_t)0
      +                          xff000000) >> 24) | (((uint32_t)ipv4Header.dstIpAddress&(uint32_t)0x00ff0000) >> 8) | ((
      +                          (uint32_t)ipv4Header.dstIpAddress&(uint32_t)0x0000ff00) << 8) | (((uint32_t)ipv4Header.d
  6948  0033CA  519B               	movf	(_ipv4Header+16)& (0+255),w,b
  6949  0033CC  D93C               	call	PL585	;call to abstracted procedure
  6950  0033CE  EE22  F09B         	lfsr	2,_ipv4Header+16
  6951  0033D2  D8FA               	call	PL497	;call to abstracted procedure
  6952  0033D4  C29B  F13E         	movff	_ipv4Header+16,??_IPV4_Packet+8
  6953  0033D8  C29C  F13F         	movff	_ipv4Header+17,??_IPV4_Packet+9
  6954  0033DC  C29D  F140         	movff	_ipv4Header+18,??_IPV4_Packet+10
  6955  0033E0  C29E  F141         	movff	_ipv4Header+19,??_IPV4_Packet+11
  6956  0033E4  D90E               	call	PL539	;call to abstracted procedure
  6957  0033E6  EE22  F09B         	lfsr	2,_ipv4Header+16
  6958  0033EA  D8BE               	call	PL433	;call to abstracted procedure
  6959  0033EC  6F9B               	movwf	(_ipv4Header+16)& (0+255),b
  6960  0033EE  D940               	call	PL687	;call to abstracted procedure
  6961  0033F0  6F9C               	movwf	(_ipv4Header+17)& (0+255),b
  6962  0033F2  D943               	call	PL705	;call to abstracted procedure
  6963  0033F4  6F9D               	movwf	(_ipv4Header+18)& (0+255),b
  6964  0033F6  D937               	call	PL685	;call to abstracted procedure
  6965  0033F8  6F9E               	movwf	(_ipv4Header+19)& (0+255),b
  6966                           
  6967                           ;ipv4.c: 137: ipv4Header.srcIpAddress = ((((uint32_t)ipv4Header.srcIpAddress&(uint32_t)0
      +                          xff000000) >> 24) | (((uint32_t)ipv4Header.srcIpAddress&(uint32_t)0x00ff0000) >> 8) | ((
      +                          (uint32_t)ipv4Header.srcIpAddress&(uint32_t)0x0000ff00) << 8) | (((uint32_t)ipv4Header.s
  6968  0033FA  5197               	movf	(_ipv4Header+12)& (0+255),w,b
  6969  0033FC  D924               	call	PL585	;call to abstracted procedure
  6970  0033FE  EE22  F097         	lfsr	2,_ipv4Header+12
  6971  003402  D8E2               	call	PL497	;call to abstracted procedure
  6972  003404  C297  F13E         	movff	_ipv4Header+12,??_IPV4_Packet+8
  6973  003408  C298  F13F         	movff	_ipv4Header+13,??_IPV4_Packet+9
  6974  00340C  C299  F140         	movff	_ipv4Header+14,??_IPV4_Packet+10
  6975  003410  C29A  F141         	movff	_ipv4Header+15,??_IPV4_Packet+11
  6976  003414  D8F6               	call	PL539	;call to abstracted procedure
  6977  003416  EE22  F097         	lfsr	2,_ipv4Header+12
  6978  00341A  D8A6               	call	PL433	;call to abstracted procedure
  6979  00341C  6F97               	movwf	(_ipv4Header+12)& (0+255),b
  6980  00341E  D928               	call	PL687	;call to abstracted procedure
  6981  003420  6F98               	movwf	(_ipv4Header+13)& (0+255),b
  6982  003422  D92B               	call	PL705	;call to abstracted procedure
  6983  003424  6F99               	movwf	(_ipv4Header+14)& (0+255),b
  6984  003426  D91F               	call	PL685	;call to abstracted procedure
  6985  003428  6F9A               	movwf	(_ipv4Header+15)& (0+255),b
  6986                           
  6987                           ; BSR set to: 2
  6988                           ;ipv4.c: 139: if((ipv4Header.dstIpAddress == ipv4Address) ||( ipv4Header.dstIpAddress ==
      +                           0xFFFFFFFF))
  6989  00342A  5033               	movf	_ipv4Address,w,c
  6990  00342C  199B               	xorwf	(_ipv4Header+16)& (0+255),w,b
  6991  00342E  E109               	bnz	u14830
  6992  003430  5034               	movf	_ipv4Address+1,w,c
  6993  003432  199C               	xorwf	(_ipv4Header+17)& (0+255),w,b
  6994  003434  E106               	bnz	u14830
  6995  003436  5035               	movf	_ipv4Address+2,w,c
  6996  003438  199D               	xorwf	(_ipv4Header+18)& (0+255),w,b
  6997  00343A  E103               	bnz	u14830
  6998  00343C  5036               	movf	_ipv4Address+3,w,c
  6999  00343E  199E               	xorwf	(_ipv4Header+19)& (0+255),w,b
  7000  003440  E009               	bz	l9280
  7001  003442                     u14830:
  7002                           
  7003                           ; BSR set to: 2
  7004  003442  299B               	incf	(_ipv4Header+16)& (0+255),w,b
  7005  003444  E106               	bnz	u14841
  7006  003446  299C               	incf	(_ipv4Header+17)& (0+255),w,b
  7007  003448  E104               	bnz	u14841
  7008  00344A  299D               	incf	(_ipv4Header+18)& (0+255),w,b
  7009  00344C  E102               	bnz	u14841
  7010  00344E  299E               	incf	(_ipv4Header+19)& (0+255),w,b
  7011  003450  A4D8               	btfss	status,2,c
  7012  003452                     u14841:
  7013  003452  0012               	return	
  7014  003454                     l9280:
  7015                           
  7016                           ; BSR set to: 2
  7017                           ;ipv4.c: 140: {
  7018                           ;ipv4.c: 141: ipv4Header.length = ((((uint16_t)ipv4Header.length & (uint16_t)0xFF00) >> 
      +                          8) | (((uint16_t)ipv4Header.length & (uint16_t)0x00FF) << 8));
  7019  003454  518D               	movf	(_ipv4Header+2)& (0+255),w,b
  7020  003456  0101               	movlb	1	; () banked
  7021  003458  6F37               	movwf	(??_IPV4_Packet+1)& (0+255),b
  7022  00345A  6B36               	clrf	??_IPV4_Packet& (0+255),b
  7023  00345C  EE22  F08D         	lfsr	2,_ipv4Header+2
  7024  003460  CFDE F138          	movff	postinc2,??_IPV4_Packet+2
  7025  003464  CFDD F139          	movff	postdec2,??_IPV4_Packet+3
  7026  003468  C139  F138         	movff	??_IPV4_Packet+3,??_IPV4_Packet+2
  7027  00346C  6B39               	clrf	(??_IPV4_Packet+3)& (0+255),b
  7028  00346E  6B39               	clrf	(??_IPV4_Packet+3)& (0+255),b
  7029  003470  5136               	movf	??_IPV4_Packet& (0+255),w,b
  7030  003472  1138               	iorwf	(??_IPV4_Packet+2)& (0+255),w,b
  7031  003474  0102               	movlb	2	; () banked
  7032  003476  6F8D               	movwf	(_ipv4Header+2)& (0+255),b
  7033  003478  0101               	movlb	1	; () banked
  7034  00347A  5137               	movf	(??_IPV4_Packet+1)& (0+255),w,b
  7035  00347C  1139               	iorwf	(??_IPV4_Packet+3)& (0+255),w,b
  7036  00347E  0102               	movlb	2	; () banked
  7037  003480  6F8E               	movwf	(_ipv4Header+3)& (0+255),b
  7038                           
  7039                           ; BSR set to: 2
  7040                           ;ipv4.c: 143: hdrLen = (uint8_t)(ipv4Header.ihl << 2);
  7041  003482  D900               	call	PL719	;call to abstracted procedure
  7042  003484  90D8               	bcf	status,0,c
  7043  003486  3736               	rlcf	??_IPV4_Packet& (0+255),f,b
  7044  003488  90D8               	bcf	status,0,c
  7045  00348A  3536               	rlcf	??_IPV4_Packet& (0+255),w,b
  7046  00348C  6F52               	movwf	IPV4_Packet@hdrLen& (0+255),b
  7047                           
  7048                           ; BSR set to: 1
  7049                           ;ipv4.c: 145: if (ipv4Header.ihl > 5)
  7050  00348E  0102               	movlb	2	; () banked
  7051  003490  D8F9               	call	PL719	;call to abstracted procedure
  7052  003492  0E05               	movlw	5
  7053  003494  6536               	cpfsgt	??_IPV4_Packet& (0+255),b
  7054  003496  D05F               	goto	l9320
  7055                           
  7056                           ; BSR set to: 1
  7057                           ;ipv4.c: 146: {
  7058                           ;ipv4.c: 148: ETH_Dump((uint16_t)(hdrLen - sizeof(ipv4Header_t)));
  7059  003498  0EEC               	movlw	236
  7060  00349A  2552               	addwf	IPV4_Packet@hdrLen& (0+255),w,b
  7061  00349C  6E17               	movwf	ETH_Dump@length,c
  7062  00349E  6A18               	clrf	ETH_Dump@length+1,c
  7063  0034A0  0EFF               	movlw	255
  7064  0034A2  2218               	addwfc	ETH_Dump@length+1,f,c
  7065  0034A4  EC5A  F030         	call	_ETH_Dump	;wreg free
  7066  0034A8  D056               	goto	l9320
  7067  0034AA                     l9288:
  7068                           
  7069                           ; BSR set to: 2
  7070                           ;ipv4.c: 154: {
  7071                           ;ipv4.c: 156: ;
  7072                           ;ipv4.c: 157: length = ipv4Header.length - hdrLen;
  7073  0034AA  0101               	movlb	1	; () banked
  7074  0034AC  5152               	movf	IPV4_Packet@hdrLen& (0+255),w,b
  7075  0034AE  0102               	movlb	2	; () banked
  7076  0034B0  5D8D               	subwf	(_ipv4Header+2)& (0+255),w,b
  7077  0034B2  D89E               	call	PL521	;call to abstracted procedure
  7078                           
  7079                           ; BSR set to: 1
  7080                           ;ipv4.c: 158: cksm = ETH_RxComputeChecksum(length, 0);
  7081  0034B4  C153  F025         	movff	IPV4_Packet@length,ETH_RxComputeChecksum@len
  7082  0034B8  C154  F026         	movff	IPV4_Packet@length+1,ETH_RxComputeChecksum@len+1
  7083  0034BC  6A28               	clrf	ETH_RxComputeChecksum@seed+1,c
  7084  0034BE  6A27               	clrf	ETH_RxComputeChecksum@seed,c
  7085  0034C0  EC3D  F02F         	call	_ETH_RxComputeChecksum	;wreg free
  7086                           
  7087                           ;ipv4.c: 160: if (cksm == 0)
  7088  0034C4  D8B8               	call	PL569	;call to abstracted procedure
  7089  0034C6  A4D8               	btfss	status,2,c
  7090  0034C8  0012               	return	
  7091                           
  7092                           ; BSR set to: 1
  7093                           ;ipv4.c: 161: {
  7094                           ;ipv4.c: 162: ICMP_Receive(&ipv4Header);
  7095  0034CA  0E8B               	movlw	low _ipv4Header
  7096  0034CC  0100               	movlb	0	; () banked
  7097  0034CE  6FAF               	movwf	ICMP_Receive@ipv4Hdr& (0+255),b
  7098  0034D0  0E02               	movlw	high _ipv4Header
  7099  0034D2  6FB0               	movwf	(ICMP_Receive@ipv4Hdr+1)& (0+255),b
  7100  0034D4  EFC4  F02D         	goto	_ICMP_Receive	;wreg free
  7101  0034D8                     l9296:
  7102                           
  7103                           ; BSR set to: 2
  7104                           ;ipv4.c: 174: ;
  7105                           ;ipv4.c: 175: length = ipv4Header.length - hdrLen;
  7106  0034D8  0101               	movlb	1	; () banked
  7107  0034DA  5152               	movf	IPV4_Packet@hdrLen& (0+255),w,b
  7108  0034DC  0102               	movlb	2	; () banked
  7109  0034DE  5D8D               	subwf	(_ipv4Header+2)& (0+255),w,b
  7110  0034E0  D887               	call	PL521	;call to abstracted procedure
  7111                           
  7112                           ; BSR set to: 1
  7113                           ;ipv4.c: 176: cksm = IPV4_PseudoHeaderChecksum(length);
  7114  0034E2  D8BC               	call	PL679	;call to abstracted procedure
  7115  0034E4  ECBA  F029         	call	_IPV4_PseudoHeaderChecksum	;wreg free
  7116                           
  7117                           ; BSR set to: 1
  7118                           ;ipv4.c: 177: cksm = ETH_RxComputeChecksum(length, cksm);
  7119  0034E8  D899               	call	PL567	;call to abstracted procedure
  7120  0034EA  EC3D  F02F         	call	_ETH_RxComputeChecksum	;wreg free
  7121  0034EE  C025  F155         	movff	?_ETH_RxComputeChecksum,IPV4_Packet@cksm
  7122  0034F2  C026  F156         	movff	?_ETH_RxComputeChecksum+1,IPV4_Packet@cksm+1
  7123                           
  7124                           ;ipv4.c: 178: UDP_Receive(cksm);
  7125  0034F6  C155  F0D3         	movff	IPV4_Packet@cksm,UDP_Receive@udpcksm
  7126  0034FA  C156  F0D4         	movff	IPV4_Packet@cksm+1,UDP_Receive@udpcksm+1
  7127  0034FE  EF04  F027         	goto	_UDP_Receive	;wreg free
  7128  003502                     l9304:
  7129                           
  7130                           ; BSR set to: 2
  7131                           ;ipv4.c: 183: ;
  7132                           ;ipv4.c: 184: length = ipv4Header.length - hdrLen;
  7133  003502  0101               	movlb	1	; () banked
  7134  003504  5152               	movf	IPV4_Packet@hdrLen& (0+255),w,b
  7135  003506  0102               	movlb	2	; () banked
  7136  003508  5D8D               	subwf	(_ipv4Header+2)& (0+255),w,b
  7137  00350A  D872               	call	PL521	;call to abstracted procedure
  7138                           
  7139                           ; BSR set to: 1
  7140                           ;ipv4.c: 185: cksm = IPV4_PseudoHeaderChecksum(length);
  7141  00350C  D8A7               	call	PL679	;call to abstracted procedure
  7142  00350E  ECBA  F029         	call	_IPV4_PseudoHeaderChecksum	;wreg free
  7143                           
  7144                           ; BSR set to: 1
  7145                           ;ipv4.c: 186: cksm = ETH_RxComputeChecksum(length, cksm);
  7146  003512  D884               	call	PL567	;call to abstracted procedure
  7147  003514  EC3D  F02F         	call	_ETH_RxComputeChecksum	;wreg free
  7148                           
  7149                           ;ipv4.c: 189: if (cksm == 0)
  7150  003518  D88E               	call	PL569	;call to abstracted procedure
  7151  00351A  A4D8               	btfss	status,2,c
  7152  00351C  0012               	return	
  7153                           
  7154                           ; BSR set to: 1
  7155                           ;ipv4.c: 190: {
  7156                           ;ipv4.c: 191: remoteIpv4Address = ipv4Header.srcIpAddress;
  7157  00351E  C297  F228         	movff	_ipv4Header+12,_remoteIpv4Address
  7158  003522  C298  F229         	movff	_ipv4Header+13,_remoteIpv4Address+1
  7159  003526  C299  F22A         	movff	_ipv4Header+14,_remoteIpv4Address+2
  7160  00352A  C29A  F22B         	movff	_ipv4Header+15,_remoteIpv4Address+3
  7161                           
  7162                           ; BSR set to: 1
  7163                           ;ipv4.c: 192: TCP_Recv(remoteIpv4Address, length);
  7164  00352E  C228  F111         	movff	_remoteIpv4Address,TCP_Recv@remoteAddress
  7165  003532  C229  F112         	movff	_remoteIpv4Address+1,TCP_Recv@remoteAddress+1
  7166  003536  C22A  F113         	movff	_remoteIpv4Address+2,TCP_Recv@remoteAddress+2
  7167  00353A  C22B  F114         	movff	_remoteIpv4Address+3,TCP_Recv@remoteAddress+3
  7168  00353E  C153  F115         	movff	IPV4_Packet@length,TCP_Recv@length
  7169  003542  C154  F116         	movff	IPV4_Packet@length+1,TCP_Recv@length+1
  7170  003546  EF41  F016         	goto	_TCP_Recv	;wreg free
  7171  00354A                     l9316:
  7172                           
  7173                           ; BSR set to: 2
  7174                           ;ipv4.c: 199: ETH_Dump(ipv4Header.length);
  7175  00354A  C28D  F017         	movff	_ipv4Header+2,ETH_Dump@length
  7176  00354E  C28E  F018         	movff	_ipv4Header+3,ETH_Dump@length+1
  7177  003552  EF5A  F030         	goto	_ETH_Dump	;wreg free
  7178  003556                     l9320:
  7179                           
  7180                           ; BSR set to: 1
  7181  003556  0102               	movlb	2	; () banked
  7182  003558  5194               	movf	(_ipv4Header+9)& (0+255),w,b
  7183                           
  7184                           ; Switch size 1, requested type "space"
  7185                           ; Number of cases is 3, Range of values is 1 to 17
  7186                           ; switch strategies available:
  7187                           ; Name         Instructions Cycles
  7188                           ; simple_byte           10     6 (average)
  7189                           ;	Chosen strategy is simple_byte
  7190  00355A  0A01               	xorlw	1	; case 1
  7191  00355C  E0A6               	bz	l9288
  7192  00355E  0A07               	xorlw	7	; case 6
  7193  003560  E0D0               	bz	l9304
  7194  003562  0A17               	xorlw	23	; case 17
  7195  003564  E0B9               	bz	l9296
  7196  003566  D7F1               	goto	l9316
  7197  003568                     __end_of_IPV4_Packet:
  7198                           	opt stack 0
  7199  003568                     PL433:
  7200                           	opt stack 12
  7201  003568  14DE               	andwf	postinc2,w,c
  7202  00356A  6F46               	movwf	(??_IPV4_Packet+16)& (0+255),b
  7203  00356C  0E00               	movlw	0
  7204  00356E  14DE               	andwf	postinc2,w,c
  7205  003570  6F47               	movwf	(??_IPV4_Packet+17)& (0+255),b
  7206  003572  0E00               	movlw	0
  7207  003574  14DE               	andwf	postinc2,w,c
  7208  003576  6F48               	movwf	(??_IPV4_Packet+18)& (0+255),b
  7209  003578  0EFF               	movlw	255
  7210  00357A  14DE               	andwf	postinc2,w,c
  7211  00357C  6F49               	movwf	(??_IPV4_Packet+19)& (0+255),b
  7212  00357E  0E19               	movlw	25
  7213  003580  D005               	goto	u14810
  7214  003582                     u14815:
  7215  003582  90D8               	bcf	status,0,c
  7216  003584  3349               	rrcf	(??_IPV4_Packet+19)& (0+255),f,b
  7217  003586  3348               	rrcf	(??_IPV4_Packet+18)& (0+255),f,b
  7218  003588  3347               	rrcf	(??_IPV4_Packet+17)& (0+255),f,b
  7219  00358A  3346               	rrcf	(??_IPV4_Packet+16)& (0+255),f,b
  7220  00358C                     u14810:
  7221  00358C  2EE8               	decfsz	wreg,f,c
  7222  00358E  D7F9               	goto	u14815
  7223  003590  5142               	movf	(??_IPV4_Packet+12)& (0+255),w,b
  7224  003592  1146               	iorwf	(??_IPV4_Packet+16)& (0+255),w,b
  7225  003594  6F4A               	movwf	(??_IPV4_Packet+20)& (0+255),b
  7226  003596  5143               	movf	(??_IPV4_Packet+13)& (0+255),w,b
  7227  003598  1147               	iorwf	(??_IPV4_Packet+17)& (0+255),w,b
  7228  00359A  6F4B               	movwf	(??_IPV4_Packet+21)& (0+255),b
  7229  00359C  5144               	movf	(??_IPV4_Packet+14)& (0+255),w,b
  7230  00359E  1148               	iorwf	(??_IPV4_Packet+18)& (0+255),w,b
  7231  0035A0  6F4C               	movwf	(??_IPV4_Packet+22)& (0+255),b
  7232  0035A2  5145               	movf	(??_IPV4_Packet+15)& (0+255),w,b
  7233  0035A4  1149               	iorwf	(??_IPV4_Packet+19)& (0+255),w,b
  7234  0035A6  6F4D               	movwf	(??_IPV4_Packet+23)& (0+255),b
  7235  0035A8  513A               	movf	(??_IPV4_Packet+4)& (0+255),w,b
  7236  0035AA  114A               	iorwf	(??_IPV4_Packet+20)& (0+255),w,b
  7237  0035AC  6F4E               	movwf	(??_IPV4_Packet+24)& (0+255),b
  7238  0035AE  513B               	movf	(??_IPV4_Packet+5)& (0+255),w,b
  7239  0035B0  114B               	iorwf	(??_IPV4_Packet+21)& (0+255),w,b
  7240  0035B2  6F4F               	movwf	(??_IPV4_Packet+25)& (0+255),b
  7241  0035B4  513C               	movf	(??_IPV4_Packet+6)& (0+255),w,b
  7242  0035B6  114C               	iorwf	(??_IPV4_Packet+22)& (0+255),w,b
  7243  0035B8  6F50               	movwf	(??_IPV4_Packet+26)& (0+255),b
  7244  0035BA  513D               	movf	(??_IPV4_Packet+7)& (0+255),w,b
  7245  0035BC  114D               	iorwf	(??_IPV4_Packet+23)& (0+255),w,b
  7246  0035BE  6F51               	movwf	(??_IPV4_Packet+27)& (0+255),b
  7247  0035C0  5136               	movf	??_IPV4_Packet& (0+255),w,b
  7248  0035C2  114E               	iorwf	(??_IPV4_Packet+24)& (0+255),w,b
  7249  0035C4  0102               	movlb	2	; () banked
  7250  0035C6  0012               	return	
  7251  0035C8                     __end_ofPL433:
  7252                           	opt stack 0
  7253  0035C8                     PL497:
  7254                           	opt stack 12
  7255  0035C8  0E00               	movlw	0
  7256  0035CA  14DE               	andwf	postinc2,w,c
  7257  0035CC  6F3A               	movwf	(??_IPV4_Packet+4)& (0+255),b
  7258  0035CE  0EFF               	movlw	255
  7259  0035D0  14DE               	andwf	postinc2,w,c
  7260  0035D2  6F3B               	movwf	(??_IPV4_Packet+5)& (0+255),b
  7261  0035D4  0E00               	movlw	0
  7262  0035D6  14DE               	andwf	postinc2,w,c
  7263  0035D8  6F3C               	movwf	(??_IPV4_Packet+6)& (0+255),b
  7264  0035DA  0E00               	movlw	0
  7265  0035DC  14DE               	andwf	postinc2,w,c
  7266  0035DE  6F3D               	movwf	(??_IPV4_Packet+7)& (0+255),b
  7267  0035E0  C13C  F13D         	movff	??_IPV4_Packet+6,??_IPV4_Packet+7
  7268  0035E4  C13B  F13C         	movff	??_IPV4_Packet+5,??_IPV4_Packet+6
  7269  0035E8  C13A  F13B         	movff	??_IPV4_Packet+4,??_IPV4_Packet+5
  7270  0035EC  6B3A               	clrf	(??_IPV4_Packet+4)& (0+255),b
  7271  0035EE  0012               	return	
  7272  0035F0                     __end_ofPL497:
  7273                           	opt stack 0
  7274  0035F0                     PL521:
  7275                           	opt stack 12
  7276  0035F0  0101               	movlb	1	; () banked
  7277  0035F2  6F53               	movwf	IPV4_Packet@length& (0+255),b
  7278  0035F4  0102               	movlb	2	; () banked
  7279  0035F6  518E               	movf	(_ipv4Header+3)& (0+255),w,b
  7280  0035F8  A0D8               	btfss	status,0,c
  7281  0035FA  058E               	decf	(_ipv4Header+3)& (0+255),w,b
  7282  0035FC  0101               	movlb	1	; () banked
  7283  0035FE  6F54               	movwf	(IPV4_Packet@length+1)& (0+255),b
  7284  003600  0012               	return	
  7285  003602                     __end_ofPL521:
  7286                           	opt stack 0
  7287  003602                     PL539:
  7288                           	opt stack 12
  7289  003602  C13F  F13E         	movff	??_IPV4_Packet+9,??_IPV4_Packet+8
  7290  003606  C140  F13F         	movff	??_IPV4_Packet+10,??_IPV4_Packet+9
  7291  00360A  C141  F140         	movff	??_IPV4_Packet+11,??_IPV4_Packet+10
  7292  00360E  6B41               	clrf	(??_IPV4_Packet+11)& (0+255),b
  7293  003610  6B42               	clrf	(??_IPV4_Packet+12)& (0+255),b
  7294  003612  513F               	movf	(??_IPV4_Packet+9)& (0+255),w,b
  7295  003614  6F43               	movwf	(??_IPV4_Packet+13)& (0+255),b
  7296  003616  6B44               	clrf	(??_IPV4_Packet+14)& (0+255),b
  7297  003618  6B45               	clrf	(??_IPV4_Packet+15)& (0+255),b
  7298  00361A  0C00               	retlw	0
  7299  00361C                     __end_ofPL539:
  7300                           	opt stack 0
  7301  00361C                     PL567:
  7302                           	opt stack 12
  7303  00361C  C017  F155         	movff	?_IPV4_PseudoHeaderChecksum,IPV4_Packet@cksm
  7304  003620  C018  F156         	movff	?_IPV4_PseudoHeaderChecksum+1,IPV4_Packet@cksm+1
  7305  003624  C153  F025         	movff	IPV4_Packet@length,ETH_RxComputeChecksum@len
  7306  003628  C154  F026         	movff	IPV4_Packet@length+1,ETH_RxComputeChecksum@len+1
  7307  00362C  C155  F027         	movff	IPV4_Packet@cksm,ETH_RxComputeChecksum@seed
  7308  003630  C156  F028         	movff	IPV4_Packet@cksm+1,ETH_RxComputeChecksum@seed+1
  7309  003634  0012               	return	
  7310  003636                     __end_ofPL567:
  7311                           	opt stack 0
  7312  003636                     PL569:
  7313                           	opt stack 12
  7314  003636  C025  F155         	movff	?_ETH_RxComputeChecksum,IPV4_Packet@cksm
  7315  00363A  C026  F156         	movff	?_ETH_RxComputeChecksum+1,IPV4_Packet@cksm+1
  7316  00363E  0101               	movlb	1	; () banked
  7317  003640  5155               	movf	IPV4_Packet@cksm& (0+255),w,b
  7318  003642  1156               	iorwf	(IPV4_Packet@cksm+1)& (0+255),w,b
  7319  003644  0012               	return	
  7320  003646                     __end_ofPL569:
  7321                           	opt stack 0
  7322  003646                     PL585:
  7323                           	opt stack 12
  7324  003646  0101               	movlb	1	; () banked
  7325  003648  6F36               	movwf	??_IPV4_Packet& (0+255),b
  7326  00364A  6B37               	clrf	(??_IPV4_Packet+1)& (0+255),b
  7327  00364C  6B38               	clrf	(??_IPV4_Packet+2)& (0+255),b
  7328  00364E  6B39               	clrf	(??_IPV4_Packet+3)& (0+255),b
  7329  003650  C136  F139         	movff	??_IPV4_Packet,??_IPV4_Packet+3
  7330  003654  6B38               	clrf	(??_IPV4_Packet+2)& (0+255),b
  7331  003656  6B37               	clrf	(??_IPV4_Packet+1)& (0+255),b
  7332  003658  6B36               	clrf	??_IPV4_Packet& (0+255),b
  7333  00365A  0012               	return	
  7334  00365C                     __end_ofPL585:
  7335                           	opt stack 0
  7336  00365C                     PL679:
  7337                           	opt stack 12
  7338  00365C  C153  F017         	movff	IPV4_Packet@length,IPV4_PseudoHeaderChecksum@payloadLen
  7339  003660  C154  F018         	movff	IPV4_Packet@length+1,IPV4_PseudoHeaderChecksum@payloadLen+1
  7340  003664  0012               	return	
  7341  003666                     __end_ofPL679:
  7342                           	opt stack 0
  7343  003666                     PL685:
  7344                           	opt stack 12
  7345  003666  0101               	movlb	1	; () banked
  7346  003668  5139               	movf	(??_IPV4_Packet+3)& (0+255),w,b
  7347  00366A  1151               	iorwf	(??_IPV4_Packet+27)& (0+255),w,b
  7348  00366C  0102               	movlb	2	; () banked
  7349  00366E  0012               	return	
  7350  003670                     __end_ofPL685:
  7351                           	opt stack 0
  7352  003670                     PL687:
  7353                           	opt stack 12
  7354  003670  0101               	movlb	1	; () banked
  7355  003672  5137               	movf	(??_IPV4_Packet+1)& (0+255),w,b
  7356  003674  114F               	iorwf	(??_IPV4_Packet+25)& (0+255),w,b
  7357  003676  0102               	movlb	2	; () banked
  7358  003678  0012               	return	
  7359  00367A                     __end_ofPL687:
  7360                           	opt stack 0
  7361  00367A                     PL705:
  7362                           	opt stack 12
  7363  00367A  0101               	movlb	1	; () banked
  7364  00367C  5138               	movf	(??_IPV4_Packet+2)& (0+255),w,b
  7365  00367E  1150               	iorwf	(??_IPV4_Packet+26)& (0+255),w,b
  7366  003680  0102               	movlb	2	; () banked
  7367  003682  0012               	return	
  7368  003684                     __end_ofPL705:
  7369                           	opt stack 0
  7370  003684                     PL719:
  7371                           	opt stack 12
  7372  003684  518B               	movf	_ipv4Header& (0+255),w,b
  7373  003686  0B0F               	andlw	15
  7374  003688  0101               	movlb	1	; () banked
  7375  00368A  6F36               	movwf	??_IPV4_Packet& (0+255),b
  7376  00368C  0012               	return	
  7377  00368E                     __end_ofPL719:
  7378                           	opt stack 0
  7379                           tosu	equ	0xFFF
  7380                           tosh	equ	0xFFE
  7381                           tosl	equ	0xFFD
  7382                           pclath	equ	0xFFA
  7383                           tblptru	equ	0xFF8
  7384                           tblptrh	equ	0xFF7
  7385                           tblptrl	equ	0xFF6
  7386                           tablat	equ	0xFF5
  7387                           prodh	equ	0xFF4
  7388                           prodl	equ	0xFF3
  7389                           intcon	equ	0xFF2
  7390                           indf0	equ	0xFEF
  7391                           postinc0	equ	0xFEE
  7392                           fsr0h	equ	0xFEA
  7393                           fsr0l	equ	0xFE9
  7394                           wreg	equ	0xFE8
  7395                           indf1	equ	0xFE7
  7396                           postinc1	equ	0xFE6
  7397                           postdec1	equ	0xFE5
  7398                           plusw1	equ	0xFE3
  7399                           fsr1h	equ	0xFE2
  7400                           fsr1l	equ	0xFE1
  7401                           indf2	equ	0xFDF
  7402                           postinc2	equ	0xFDE
  7403                           postdec2	equ	0xFDD
  7404                           plusw2	equ	0xFDB
  7405                           fsr2h	equ	0xFDA
  7406                           fsr2l	equ	0xFD9
  7407                           status	equ	0xFD8
  7408                           
  7409 ;; *************** function _UDP_Receive *****************
  7410 ;; Defined at:
  7411 ;;		line 126 in file "../../TCPIP Library/source/udpv4.c"
  7412 ;; Parameters:    Size  Location     Type
  7413 ;;  udpcksm         2  115[BANK0 ] unsigned int 
  7414 ;; Auto vars:     Size  Location     Type
  7415 ;;  x               2  123[BANK0 ] unsigned int 
  7416 ;;  hptr            1  125[BANK0 ] PTR const struct .
  7417 ;;		 -> UDP_CallBackTable(5), 
  7418 ;;  ret             1    0        enum E367
  7419 ;; Return value:  Size  Location     Type
  7420 ;;                  1    wreg      enum E6890
  7421 ;; Registers used:
  7422 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
  7423 ;; Tracked objects:
  7424 ;;		On entry : 0/1
  7425 ;;		On exit  : E/0
  7426 ;;		Unchanged: 0/0
  7427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7428 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7429 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7430 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7431 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7432 ;;Total ram usage:       11 bytes
  7433 ;; Hardware stack levels used:    1
  7434 ;; Hardware stack levels required when called:   15
  7435 ;; This function calls:
  7436 ;;		_DHCP_Handler
  7437 ;;		_ETH_ReadBlock
  7438 ;; This function is called by:
  7439 ;;		_IPV4_Packet
  7440 ;; This function uses a non-reentrant model
  7441 ;;
  7442                           
  7443                           	psect	text34
  7444  004E08                     __ptext34:
  7445                           	opt stack 0
  7446  004E08                     _UDP_Receive:
  7447                           	opt stack 12
  7448                           
  7449                           ;udpv4.c: 129: const udp_handler_t *hptr;
  7450                           ;udpv4.c: 130: uint16_t x;
  7451                           ;udpv4.c: 132: hptr = UDP_CallBackTable;
  7452                           
  7453                           ;incstack = 0
  7454  004E08  0E34               	movlw	low _UDP_CallBackTable
  7455  004E0A  0100               	movlb	0	; () banked
  7456  004E0C  6FDD               	movwf	UDP_Receive@hptr& (0+255),b
  7457                           
  7458                           ; BSR set to: 0
  7459                           ;udpv4.c: 133: ETH_ReadBlock((char *)&udpHeader,sizeof(udpHeader));
  7460  004E0E  0E9F               	movlw	low _udpHeader
  7461  004E10  6E17               	movwf	ETH_ReadBlock@buffer,c
  7462  004E12  0E02               	movlw	high _udpHeader
  7463  004E14  6E18               	movwf	ETH_ReadBlock@buffer+1,c
  7464  004E16  ECE7  F02D         	call	PL747	;call to abstracted procedure
  7465  004E1A  EC92  F02C         	call	_ETH_ReadBlock	;wreg free
  7466                           
  7467                           ; BSR set to: 1
  7468                           ;udpv4.c: 135: if((udpHeader.checksum == 0) || (udpcksm == 0))
  7469  004E1E  0102               	movlb	2	; () banked
  7470  004E20  51A5               	movf	(_udpHeader+6)& (0+255),w,b
  7471  004E22  11A6               	iorwf	(_udpHeader+7)& (0+255),w,b
  7472  004E24  E005               	bz	l8976
  7473                           
  7474                           ; BSR set to: 2
  7475  004E26  0100               	movlb	0	; () banked
  7476  004E28  51D3               	movf	UDP_Receive@udpcksm& (0+255),w,b
  7477  004E2A  11D4               	iorwf	(UDP_Receive@udpcksm+1)& (0+255),w,b
  7478  004E2C  A4D8               	btfss	status,2,c
  7479  004E2E  0012               	return	
  7480  004E30                     l8976:
  7481                           
  7482                           ;udpv4.c: 138: destPort = ((((uint16_t)udpHeader.srcPort & (uint16_t)0xFF00) >> 8) | (((
      +                          uint16_t)udpHeader.srcPort & (uint16_t)0x00FF) << 8));
  7483  004E30  0102               	movlb	2	; () banked
  7484  004E32  51A1               	movf	(_udpHeader+2)& (0+255),w,b
  7485  004E34  0100               	movlb	0	; () banked
  7486  004E36  6FD6               	movwf	(??_UDP_Receive+1)& (0+255),b
  7487  004E38  6BD5               	clrf	??_UDP_Receive& (0+255),b
  7488  004E3A  EE22  F0A1         	lfsr	2,_udpHeader+2
  7489  004E3E  D849               	call	PL599	;call to abstracted procedure
  7490  004E40  11D7               	iorwf	(??_UDP_Receive+2)& (0+255),w,b
  7491  004E42  0102               	movlb	2	; () banked
  7492  004E44  6FA1               	movwf	(_udpHeader+2)& (0+255),b
  7493  004E46  0100               	movlb	0	; () banked
  7494  004E48  51D6               	movf	(??_UDP_Receive+1)& (0+255),w,b
  7495  004E4A  11D8               	iorwf	(??_UDP_Receive+3)& (0+255),w,b
  7496  004E4C  0102               	movlb	2	; () banked
  7497  004E4E  6FA2               	movwf	(_udpHeader+3)& (0+255),b
  7498                           
  7499                           ; BSR set to: 2
  7500                           ;udpv4.c: 142: for(x = 0; x < (sizeof(UDP_CallBackTable) / sizeof(*(UDP_CallBackTable)))
      +                          ;x++)
  7501                           
  7502                           ; BSR set to: 2
  7503  004E50  0100               	movlb	0	; () banked
  7504  004E52  6BDB               	clrf	UDP_Receive@x& (0+255),b
  7505  004E54  6BDC               	clrf	(UDP_Receive@x+1)& (0+255),b
  7506  004E56                     l8986:
  7507                           
  7508                           ; BSR set to: 0
  7509                           ;udpv4.c: 143: {
  7510                           ;udpv4.c: 144: if(hptr->portNumber == udpHeader.dstPort)
  7511  004E56  C0DD  FFF6         	movff	UDP_Receive@hptr,tblptrl
  7512  004E5A  D836               	call	PL481	;call to abstracted procedure
  7513  004E5C  0102               	movlb	2	; () banked
  7514  004E5E  51A1               	movf	(_udpHeader+2)& (0+255),w,b
  7515  004E60  0009               	tblrd		*+
  7516  004E62  18F5               	xorwf	tablat,w,c
  7517  004E64  E128               	bnz	l8992
  7518  004E66  51A2               	movf	(_udpHeader+3)& (0+255),w,b
  7519  004E68  0009               	tblrd		*+
  7520  004E6A  18F5               	xorwf	tablat,w,c
  7521  004E6C  E124               	bnz	l8992
  7522                           
  7523                           ; BSR set to: 2
  7524                           ;udpv4.c: 145: {
  7525                           ;udpv4.c: 146: hptr->callBack(((((uint16_t)udpHeader.length & (uint16_t)0xFF00) >> 8) | 
      +                          (((uint16_t)udpHeader.length & (uint16_t)0x00FF) << 8)) - sizeof(udpHeader));
  7526  004E6E  51A3               	movf	(_udpHeader+4)& (0+255),w,b
  7527  004E70  0100               	movlb	0	; () banked
  7528  004E72  6FD6               	movwf	(??_UDP_Receive+1)& (0+255),b
  7529  004E74  6BD5               	clrf	??_UDP_Receive& (0+255),b
  7530  004E76  EE22  F0A3         	lfsr	2,_udpHeader+4
  7531  004E7A  D82B               	call	PL599	;call to abstracted procedure
  7532  004E7C  13D7               	iorwf	(??_UDP_Receive+2)& (0+255),f,b
  7533  004E7E  51D6               	movf	(??_UDP_Receive+1)& (0+255),w,b
  7534  004E80  13D8               	iorwf	(??_UDP_Receive+3)& (0+255),f,b
  7535  004E82  0EF8               	movlw	248
  7536  004E84  25D7               	addwf	(??_UDP_Receive+2)& (0+255),w,b
  7537  004E86  6FAF               	movwf	DHCP_Handler@length& (0+255),b
  7538  004E88  0EFF               	movlw	255
  7539  004E8A  21D8               	addwfc	(??_UDP_Receive+3)& (0+255),w,b
  7540  004E8C  6FB0               	movwf	(DHCP_Handler@length+1)& (0+255),b
  7541  004E8E  C0DD  F0D9         	movff	UDP_Receive@hptr,??_UDP_Receive+4
  7542  004E92  0E02               	movlw	2
  7543  004E94  27D9               	addwf	(??_UDP_Receive+4)& (0+255),f,b
  7544  004E96  C0D9  FFF6         	movff	??_UDP_Receive+4,tblptrl
  7545  004E9A  D816               	call	PL481	;call to abstracted procedure
  7546  004E9C  0005               	push	
  7547  004E9E  6EFA               	movwf	pclath,c
  7548  004EA0  0009               	tblrd		*+
  7549  004EA2  50F5               	movf	tablat,w,c
  7550  004EA4  6EFD               	movwf	tosl,c
  7551  004EA6  0009               	tblrd		*+
  7552  004EA8  50F5               	movf	tablat,w,c
  7553  004EAA  6EFE               	movwf	tosh,c
  7554  004EAC  0009               	tblrd		*+
  7555  004EAE  50F5               	movf	tablat,w,c
  7556  004EB0  6EFF               	movwf	tosu,c
  7557  004EB2  50FA               	movf	pclath,w,c
  7558  004EB4  0012               	return		;indir
  7559  004EB6                     l8992:
  7560                           
  7561                           ; BSR set to: 2
  7562                           ;udpv4.c: 149: }
  7563                           ;udpv4.c: 150: hptr ++;
  7564  004EB6  0E05               	movlw	5
  7565  004EB8  0100               	movlb	0	; () banked
  7566  004EBA  27DD               	addwf	UDP_Receive@hptr& (0+255),f,b
  7567                           
  7568                           ; BSR set to: 0
  7569  004EBC  4BDB               	infsnz	UDP_Receive@x& (0+255),f,b
  7570  004EBE  2BDC               	incf	(UDP_Receive@x+1)& (0+255),f,b
  7571                           
  7572                           ; BSR set to: 0
  7573  004EC0  51DB               	movf	UDP_Receive@x& (0+255),w,b
  7574  004EC2  11DC               	iorwf	(UDP_Receive@x+1)& (0+255),w,b
  7575  004EC4  E0C8               	bz	l8986
  7576  004EC6  0012               	return	
  7577  004EC8                     __end_of_UDP_Receive:
  7578                           	opt stack 0
  7579  004EC8                     PL481:
  7580                           	opt stack 12
  7581  004EC8                     	if	1	;There is more than 1 active tblptr byte
  7582  004EC8  0E10               	movlw	high __smallconst
  7583  004ECA  6EF7               	movwf	tblptrh,c
  7584  004ECC                     	endif
  7585  004ECC                     	if	0	;tblptru may be non-zero
  7586  004ECC                     	endif
  7587  004ECC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7588  004ECC  0E00               	movlw	low (__smallconst shr (0+16))
  7589  004ECE  6EF8               	movwf	tblptru,c
  7590  004ED0                     	endif
  7591  004ED0  0012               	return	
  7592  004ED2                     __end_ofPL481:
  7593                           	opt stack 0
  7594  004ED2                     PL599:
  7595                           	opt stack 12
  7596  004ED2  CFDE F0D7          	movff	postinc2,??_UDP_Receive+2
  7597  004ED6  CFDD F0D8          	movff	postdec2,??_UDP_Receive+3
  7598  004EDA  C0D8  F0D7         	movff	??_UDP_Receive+3,??_UDP_Receive+2
  7599  004EDE  6BD8               	clrf	(??_UDP_Receive+3)& (0+255),b
  7600  004EE0  6BD8               	clrf	(??_UDP_Receive+3)& (0+255),b
  7601  004EE2  51D5               	movf	??_UDP_Receive& (0+255),w,b
  7602  004EE4  0012               	return	
  7603  004EE6                     __end_ofPL599:
  7604                           	opt stack 0
  7605                           tosu	equ	0xFFF
  7606                           tosh	equ	0xFFE
  7607                           tosl	equ	0xFFD
  7608                           pclath	equ	0xFFA
  7609                           tblptru	equ	0xFF8
  7610                           tblptrh	equ	0xFF7
  7611                           tblptrl	equ	0xFF6
  7612                           tablat	equ	0xFF5
  7613                           prodh	equ	0xFF4
  7614                           prodl	equ	0xFF3
  7615                           intcon	equ	0xFF2
  7616                           indf0	equ	0xFEF
  7617                           postinc0	equ	0xFEE
  7618                           fsr0h	equ	0xFEA
  7619                           fsr0l	equ	0xFE9
  7620                           wreg	equ	0xFE8
  7621                           indf1	equ	0xFE7
  7622                           postinc1	equ	0xFE6
  7623                           postdec1	equ	0xFE5
  7624                           plusw1	equ	0xFE3
  7625                           fsr1h	equ	0xFE2
  7626                           fsr1l	equ	0xFE1
  7627                           indf2	equ	0xFDF
  7628                           postinc2	equ	0xFDE
  7629                           postdec2	equ	0xFDD
  7630                           plusw2	equ	0xFDB
  7631                           fsr2h	equ	0xFDA
  7632                           fsr2l	equ	0xFD9
  7633                           status	equ	0xFD8
  7634                           
  7635 ;; *************** function _DHCP_Handler *****************
  7636 ;; Defined at:
  7637 ;;		line 162 in file "../../TCPIP Library/source/dhcp_client.c"
  7638 ;; Parameters:    Size  Location     Type
  7639 ;;  length          2   79[BANK0 ] int 
  7640 ;; Auto vars:     Size  Location     Type
  7641 ;;  optionLength    1  110[BANK0 ] unsigned char 
  7642 ;;  option          1   97[BANK0 ] unsigned char 
  7643 ;;  ip              8   83[BANK0 ] unsigned int [4]
  7644 ;;  ethMAC          6  104[BANK0 ] struct .
  7645 ;;  ethPktMAC       6   98[BANK0 ] struct .
  7646 ;;  myip            4  111[BANK0 ] unsigned long 
  7647 ;;  v               4   91[BANK0 ] unsigned long 
  7648 ;;  v16             2   95[BANK0 ] unsigned int 
  7649 ;; Return value:  Size  Location     Type
  7650 ;;                  1    wreg      void 
  7651 ;; Registers used:
  7652 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7653 ;; Tracked objects:
  7654 ;;		On entry : F/0
  7655 ;;		On exit  : E/0
  7656 ;;		Unchanged: 0/0
  7657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7658 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7659 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7660 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7661 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7662 ;;Total ram usage:       36 bytes
  7663 ;; Hardware stack levels used:    1
  7664 ;; Hardware stack levels required when called:   14
  7665 ;; This function calls:
  7666 ;;		_DHCP_Request
  7667 ;;		_ETH_Dump
  7668 ;;		_ETH_GetMAC
  7669 ;;		_ETH_Read16
  7670 ;;		_ETH_Read32
  7671 ;;		_ETH_Read8
  7672 ;;		_ETH_ReadBlock
  7673 ;;		_memcmp
  7674 ;; This function is called by:
  7675 ;;		_UDP_Receive
  7676 ;; This function uses a non-reentrant model
  7677 ;;
  7678                           
  7679                           	psect	text35
  7680  00397C                     __ptext35:
  7681                           	opt stack 0
  7682  00397C                     _DHCP_Handler:
  7683                           	opt stack 12
  7684                           
  7685                           ; BSR set to: 0
  7686                           ;dhcp_client.c: 165: uint32_t myip,v;
  7687                           ;dhcp_client.c: 166: uint16_t v16;
  7688                           ;dhcp_client.c: 167: uint16_t ip[4];
  7689                           ;dhcp_client.c: 169: mac48Address_t ethPktMAC;
  7690                           ;dhcp_client.c: 170: mac48Address_t ethMAC;
  7691                           ;dhcp_client.c: 172: ETH_GetMAC((char*)&ethMAC);
  7692                           
  7693                           ;incstack = 0
  7694  00397C  0EC8               	movlw	low DHCP_Handler@ethMAC
  7695  00397E  6E17               	movwf	ETH_GetMAC@mac,c
  7696  003980  ECF7  F02F         	call	_ETH_GetMAC	;wreg free
  7697                           
  7698                           ;dhcp_client.c: 178: if(length > 240)
  7699  003984  0100               	movlb	0	; () banked
  7700  003986  BFB0               	btfsc	(DHCP_Handler@length+1)& (0+255),7,b
  7701  003988  0012               	return	
  7702  00398A  51B0               	movf	(DHCP_Handler@length+1)& (0+255),w,b
  7703  00398C  E104               	bnz	u12160
  7704  00398E  0EF1               	movlw	241
  7705  003990  5DAF               	subwf	DHCP_Handler@length& (0+255),w,b
  7706  003992  A0D8               	btfss	status,0,c
  7707  003994  0012               	return	
  7708  003996                     u12160:
  7709                           
  7710                           ; BSR set to: 0
  7711                           ;dhcp_client.c: 179: {
  7712                           ;dhcp_client.c: 180: v16 = ETH_Read16();
  7713  003996  EC61  F02F         	call	_ETH_Read16	;wreg free
  7714  00399A  C017  F0BF         	movff	?_ETH_Read16,DHCP_Handler@v16
  7715  00399E  C018  F0C0         	movff	?_ETH_Read16+1,DHCP_Handler@v16+1
  7716                           
  7717                           ; BSR set to: 1
  7718                           ;dhcp_client.c: 181: if(v16 == 0x0201)
  7719  0039A2  0100               	movlb	0	; () banked
  7720  0039A4  05BF               	decf	DHCP_Handler@v16& (0+255),w,b
  7721  0039A6  E103               	bnz	u12171
  7722  0039A8  0E02               	movlw	2
  7723  0039AA  19C0               	xorwf	(DHCP_Handler@v16+1)& (0+255),w,b
  7724  0039AC  A4D8               	btfss	status,2,c
  7725  0039AE                     u12171:
  7726  0039AE  0012               	return	
  7727                           
  7728                           ; BSR set to: 0
  7729                           ;dhcp_client.c: 182: {
  7730                           ;dhcp_client.c: 183: ETH_Dump(2);
  7731  0039B0  6A18               	clrf	ETH_Dump@length+1,c
  7732  0039B2  0E02               	movlw	2
  7733  0039B4  6E17               	movwf	ETH_Dump@length,c
  7734  0039B6  EC5A  F030         	call	_ETH_Dump	;wreg free
  7735                           
  7736                           ;dhcp_client.c: 184: v = ETH_Read32();
  7737  0039BA  ECF1  F02C         	call	_ETH_Read32	;wreg free
  7738  0039BE  C017  F0BB         	movff	?_ETH_Read32,DHCP_Handler@v
  7739  0039C2  C018  F0BC         	movff	?_ETH_Read32+1,DHCP_Handler@v+1
  7740  0039C6  C019  F0BD         	movff	?_ETH_Read32+2,DHCP_Handler@v+2
  7741  0039CA  C01A  F0BE         	movff	?_ETH_Read32+3,DHCP_Handler@v+3
  7742                           
  7743                           ; BSR set to: 1
  7744                           ;dhcp_client.c: 185: if(v == xidValue)
  7745  0039CE  0E50               	movlw	80
  7746  0039D0  0100               	movlb	0	; () banked
  7747  0039D2  19BB               	xorwf	DHCP_Handler@v& (0+255),w,b
  7748  0039D4  E109               	bnz	u12181
  7749  0039D6  0E48               	movlw	72
  7750  0039D8  19BC               	xorwf	(DHCP_Handler@v+1)& (0+255),w,b
  7751  0039DA  E106               	bnz	u12181
  7752  0039DC  0E43               	movlw	67
  7753  0039DE  19BD               	xorwf	(DHCP_Handler@v+2)& (0+255),w,b
  7754  0039E0  E103               	bnz	u12181
  7755  0039E2  0E4D               	movlw	77
  7756  0039E4  19BE               	xorwf	(DHCP_Handler@v+3)& (0+255),w,b
  7757  0039E6  A4D8               	btfss	status,2,c
  7758  0039E8                     u12181:
  7759  0039E8  0012               	return	
  7760                           
  7761                           ; BSR set to: 0
  7762                           ;dhcp_client.c: 186: {
  7763                           ;dhcp_client.c: 187: ETH_Dump(8);
  7764  0039EA  D8F8               	call	PL737	;call to abstracted procedure
  7765  0039EC  EC5A  F030         	call	_ETH_Dump	;wreg free
  7766                           
  7767                           ;dhcp_client.c: 188: myip = ETH_Read32();
  7768  0039F0  ECF1  F02C         	call	_ETH_Read32	;wreg free
  7769  0039F4  C017  F0CF         	movff	?_ETH_Read32,DHCP_Handler@myip
  7770  0039F8  C018  F0D0         	movff	?_ETH_Read32+1,DHCP_Handler@myip+1
  7771  0039FC  C019  F0D1         	movff	?_ETH_Read32+2,DHCP_Handler@myip+2
  7772  003A00  C01A  F0D2         	movff	?_ETH_Read32+3,DHCP_Handler@myip+3
  7773                           
  7774                           ; BSR set to: 1
  7775                           ;dhcp_client.c: 189: ip[0] = myip & 0x00FF;
  7776  003A04  0100               	movlb	0	; () banked
  7777  003A06  51CF               	movf	DHCP_Handler@myip& (0+255),w,b
  7778  003A08  6FB3               	movwf	DHCP_Handler@ip& (0+255),b
  7779  003A0A  6BB4               	clrf	(DHCP_Handler@ip+1)& (0+255),b
  7780                           
  7781                           ; BSR set to: 0
  7782                           ;dhcp_client.c: 190: ip[1] = (myip >> 8) & 0x00FF;
  7783  003A0C  51D0               	movf	(DHCP_Handler@myip+1)& (0+255),w,b
  7784  003A0E  6FB5               	movwf	(DHCP_Handler@ip+2)& (0+255),b
  7785  003A10  6BB6               	clrf	(DHCP_Handler@ip+3)& (0+255),b
  7786                           
  7787                           ; BSR set to: 0
  7788                           ;dhcp_client.c: 191: ip[2] = (myip >> 16) & 0x00FF;
  7789  003A12  51D1               	movf	(DHCP_Handler@myip+2)& (0+255),w,b
  7790  003A14  6FB7               	movwf	(DHCP_Handler@ip+4)& (0+255),b
  7791  003A16  6BB8               	clrf	(DHCP_Handler@ip+5)& (0+255),b
  7792                           
  7793                           ; BSR set to: 0
  7794                           ;dhcp_client.c: 192: ip[3] = (myip >> 24) & 0x00FF;
  7795  003A18  C0D2  F0B9         	movff	DHCP_Handler@myip+3,DHCP_Handler@ip+6
  7796  003A1C  6BBA               	clrf	(DHCP_Handler@ip+7)& (0+255),b
  7797                           
  7798                           ; BSR set to: 0
  7799                           ;dhcp_client.c: 193: ETH_Dump(8);
  7800  003A1E  D8DE               	call	PL737	;call to abstracted procedure
  7801  003A20  EC5A  F030         	call	_ETH_Dump	;wreg free
  7802                           
  7803                           ; BSR set to: 1
  7804                           ;dhcp_client.c: 194: ETH_ReadBlock((char *)&ethPktMAC, sizeof(ethPktMAC.s));
  7805  003A24  0EC2               	movlw	low DHCP_Handler@ethPktMAC
  7806  003A26  6E17               	movwf	ETH_ReadBlock@buffer,c
  7807  003A28  6A18               	clrf	ETH_ReadBlock@buffer+1,c
  7808  003A2A  6A1A               	clrf	ETH_ReadBlock@length+1,c
  7809  003A2C  0E06               	movlw	6
  7810  003A2E  6E19               	movwf	ETH_ReadBlock@length,c
  7811  003A30  EC92  F02C         	call	_ETH_ReadBlock	;wreg free
  7812                           
  7813                           ; BSR set to: 1
  7814                           ;dhcp_client.c: 196: if(memcmp(&ethPktMAC.s, &ethMAC.s, 6)== 0)
  7815  003A34  0EC2               	movlw	low DHCP_Handler@ethPktMAC
  7816  003A36  6E17               	movwf	memcmp@s1,c
  7817  003A38  0EC8               	movlw	low DHCP_Handler@ethMAC
  7818  003A3A  6E18               	movwf	memcmp@s2,c
  7819  003A3C  6A1A               	clrf	memcmp@n+1,c
  7820  003A3E  0E06               	movlw	6
  7821  003A40  6E19               	movwf	memcmp@n,c
  7822  003A42  ECAB  F02E         	call	_memcmp	;wreg free
  7823  003A46  5017               	movf	?_memcmp,w,c
  7824  003A48  1018               	iorwf	?_memcmp+1,w,c
  7825  003A4A  E001 D0B5          	bnz	l8464
  7826                           
  7827                           ; BSR set to: 1
  7828                           ;dhcp_client.c: 197: {
  7829                           ;dhcp_client.c: 198: ETH_Dump(202);
  7830  003A4E  6A18               	clrf	ETH_Dump@length+1,c
  7831  003A50  0ECA               	movlw	202
  7832  003A52  6E17               	movwf	ETH_Dump@length,c
  7833  003A54  EC5A  F030         	call	_ETH_Dump	;wreg free
  7834                           
  7835                           ;dhcp_client.c: 199: if(ETH_Read32() == 0x63825363)
  7836  003A58  ECF1  F02C         	call	_ETH_Read32	;wreg free
  7837  003A5C  0E63               	movlw	99
  7838  003A5E  1817               	xorwf	?_ETH_Read32,w,c
  7839  003A60  E109               	bnz	u12201
  7840  003A62  0E53               	movlw	83
  7841  003A64  1818               	xorwf	?_ETH_Read32+1,w,c
  7842  003A66  E106               	bnz	u12201
  7843  003A68  0E82               	movlw	130
  7844  003A6A  1819               	xorwf	?_ETH_Read32+2,w,c
  7845  003A6C  E103               	bnz	u12201
  7846  003A6E  0E63               	movlw	99
  7847  003A70  181A               	xorwf	?_ETH_Read32+3,w,c
  7848  003A72  A4D8               	btfss	status,2,c
  7849  003A74                     u12201:
  7850  003A74  0012               	return	
  7851                           
  7852                           ; BSR set to: 1
  7853                           ;dhcp_client.c: 200: {
  7854                           ;dhcp_client.c: 201: length -= 240;
  7855  003A76  0100               	movlb	0	; () banked
  7856  003A78  0E10               	movlw	16
  7857  003A7A  27AF               	addwf	DHCP_Handler@length& (0+255),f,b
  7858  003A7C  0EFF               	movlw	255
  7859  003A7E  23B0               	addwfc	(DHCP_Handler@length+1)& (0+255),f,b
  7860                           
  7861                           ;dhcp_client.c: 202: while(length>0)
  7862  003A80  D08C               	goto	l8458
  7863  003A82                     l8410:
  7864                           
  7865                           ; BSR set to: 0
  7866                           ;dhcp_client.c: 203: {
  7867                           ;dhcp_client.c: 205: uint8_t option, optionLength;
  7868                           ;dhcp_client.c: 206: option = ETH_Read8();
  7869  003A82  ECC8  F030         	call	_ETH_Read8	;wreg free
  7870  003A86  0100               	movlb	0	; () banked
  7871  003A88  6FC1               	movwf	DHCP_Handler@option& (0+255),b
  7872                           
  7873                           ;dhcp_client.c: 207: optionLength = ETH_Read8();
  7874  003A8A  ECC8  F030         	call	_ETH_Read8	;wreg free
  7875  003A8E  0100               	movlb	0	; () banked
  7876  003A90  6FCE               	movwf	DHCP_Handler@optionLength& (0+255),b
  7877                           
  7878                           ; BSR set to: 0
  7879                           ;dhcp_client.c: 208: length -= 2 + optionLength;
  7880  003A92  51CE               	movf	DHCP_Handler@optionLength& (0+255),w,b
  7881  003A94  6FB1               	movwf	??_DHCP_Handler& (0+255),b
  7882  003A96  6BB2               	clrf	(??_DHCP_Handler+1)& (0+255),b
  7883  003A98  0E02               	movlw	2
  7884  003A9A  27B1               	addwf	??_DHCP_Handler& (0+255),f,b
  7885  003A9C  0E00               	movlw	0
  7886  003A9E  23B2               	addwfc	(??_DHCP_Handler+1)& (0+255),f,b
  7887  003AA0  51B1               	movf	??_DHCP_Handler& (0+255),w,b
  7888  003AA2  5FAF               	subwf	DHCP_Handler@length& (0+255),f,b
  7889  003AA4  51B2               	movf	(??_DHCP_Handler+1)& (0+255),w,b
  7890  003AA6  5BB0               	subwfb	(DHCP_Handler@length+1)& (0+255),f,b
  7891                           
  7892                           ;dhcp_client.c: 209: switch(option)
  7893  003AA8  D06A               	goto	l8456
  7894  003AAA                     l8414:
  7895                           
  7896                           ; BSR set to: 0
  7897                           ;dhcp_client.c: 212: ipv4SubnetMask = ETH_Read32();
  7898  003AAA  ECF1  F02C         	call	_ETH_Read32	;wreg free
  7899  003AAE  C017  F1C8         	movff	?_ETH_Read32,_ipv4SubnetMask
  7900  003AB2  C018  F1C9         	movff	?_ETH_Read32+1,_ipv4SubnetMask+1
  7901  003AB6  C019  F1CA         	movff	?_ETH_Read32+2,_ipv4SubnetMask+2
  7902  003ABA  C01A  F1CB         	movff	?_ETH_Read32+3,_ipv4SubnetMask+3
  7903                           
  7904                           ;dhcp_client.c: 213: break;
  7905  003ABE  D06D               	goto	l8458
  7906  003AC0                     l8416:
  7907                           
  7908                           ; BSR set to: 0
  7909                           ;dhcp_client.c: 215: ipv4Router = ETH_Read32();
  7910  003AC0  ECF1  F02C         	call	_ETH_Read32	;wreg free
  7911  003AC4  C017  F220         	movff	?_ETH_Read32,_ipv4Router
  7912  003AC8  C018  F221         	movff	?_ETH_Read32+1,_ipv4Router+1
  7913  003ACC  C019  F222         	movff	?_ETH_Read32+2,_ipv4Router+2
  7914  003AD0  C01A  F223         	movff	?_ETH_Read32+3,_ipv4Router+3
  7915                           
  7916                           ;dhcp_client.c: 216: break;
  7917  003AD4  D062               	goto	l8458
  7918  003AD6                     l8418:
  7919                           
  7920                           ; BSR set to: 0
  7921                           ;dhcp_client.c: 219: if(optionLength >= 4)
  7922  003AD6  0E03               	movlw	3
  7923  003AD8  65CE               	cpfsgt	DHCP_Handler@optionLength& (0+255),b
  7924  003ADA  D05F               	goto	l8458
  7925                           
  7926                           ; BSR set to: 0
  7927                           ;dhcp_client.c: 220: {
  7928                           ;dhcp_client.c: 221: ipv4DNS[0] = ETH_Read32();
  7929  003ADC  ECF1  F02C         	call	_ETH_Read32	;wreg free
  7930  003AE0  C017  F210         	movff	?_ETH_Read32,_ipv4DNS
  7931  003AE4  C018  F211         	movff	?_ETH_Read32+1,_ipv4DNS+1
  7932  003AE8  C019  F212         	movff	?_ETH_Read32+2,_ipv4DNS+2
  7933  003AEC  C01A  F213         	movff	?_ETH_Read32+3,_ipv4DNS+3
  7934                           
  7935                           ; BSR set to: 1
  7936                           ;dhcp_client.c: 222: optionLength -= 4;
  7937  003AF0  0E04               	movlw	4
  7938  003AF2  0100               	movlb	0	; () banked
  7939  003AF4  5FCE               	subwf	DHCP_Handler@optionLength& (0+255),f,b
  7940                           
  7941                           ; BSR set to: 0
  7942                           ;dhcp_client.c: 223: if(optionLength >= 4)
  7943  003AF6  0E03               	movlw	3
  7944  003AF8  65CE               	cpfsgt	DHCP_Handler@optionLength& (0+255),b
  7945  003AFA  D04F               	goto	l8458
  7946                           
  7947                           ; BSR set to: 0
  7948                           ;dhcp_client.c: 224: {
  7949                           ;dhcp_client.c: 225: ipv4DNS[1] = ETH_Read32();
  7950  003AFC  ECF1  F02C         	call	_ETH_Read32	;wreg free
  7951  003B00  C017  F214         	movff	?_ETH_Read32,_ipv4DNS+4
  7952  003B04  C018  F215         	movff	?_ETH_Read32+1,_ipv4DNS+5
  7953  003B08  C019  F216         	movff	?_ETH_Read32+2,_ipv4DNS+6
  7954  003B0C  C01A  F217         	movff	?_ETH_Read32+3,_ipv4DNS+7
  7955  003B10                     l8428:
  7956                           
  7957                           ; BSR set to: 1
  7958                           ;dhcp_client.c: 226: optionLength -= 4;
  7959  003B10  0E04               	movlw	4
  7960  003B12  0100               	movlb	0	; () banked
  7961  003B14  5FCE               	subwf	DHCP_Handler@optionLength& (0+255),f,b
  7962  003B16  D041               	goto	l8458
  7963  003B18                     l8430:
  7964                           
  7965                           ; BSR set to: 0
  7966                           ;dhcp_client.c: 231: if(optionLength >= 4)
  7967  003B18  0E03               	movlw	3
  7968  003B1A  65CE               	cpfsgt	DHCP_Handler@optionLength& (0+255),b
  7969  003B1C  D03E               	goto	l8458
  7970                           
  7971                           ; BSR set to: 0
  7972                           ;dhcp_client.c: 232: {
  7973                           ;dhcp_client.c: 233: dhcpLeaseTime = ETH_Read32();
  7974  003B1E  ECF1  F02C         	call	_ETH_Read32	;wreg free
  7975  003B22  C017  F1C4         	movff	?_ETH_Read32,_dhcpLeaseTime
  7976  003B26  C018  F1C5         	movff	?_ETH_Read32+1,_dhcpLeaseTime+1
  7977  003B2A  C019  F1C6         	movff	?_ETH_Read32+2,_dhcpLeaseTime+2
  7978  003B2E  C01A  F1C7         	movff	?_ETH_Read32+3,_dhcpLeaseTime+3
  7979  003B32  D7EE               	goto	l8428
  7980  003B34                     l8436:
  7981                           
  7982                           ; BSR set to: 0
  7983                           ;dhcp_client.c: 238: dhcpServerId = ETH_Read32();
  7984  003B34  ECF1  F02C         	call	_ETH_Read32	;wreg free
  7985  003B38  C017  F21C         	movff	?_ETH_Read32,_dhcpServerId
  7986  003B3C  C018  F21D         	movff	?_ETH_Read32+1,_dhcpServerId+1
  7987  003B40  C019  F21E         	movff	?_ETH_Read32+2,_dhcpServerId+2
  7988  003B44  C01A  F21F         	movff	?_ETH_Read32+3,_dhcpServerId+3
  7989  003B48  D7E3               	goto	l8428
  7990  003B4A                     l801:
  7991                           
  7992                           ; BSR set to: 1
  7993                           ;dhcp_client.c: 245: ipv4Address = myip;
  7994  003B4A  D83F               	call	PL607	;call to abstracted procedure
  7995                           
  7996                           ; BSR set to: 1
  7997                           ;dhcp_client.c: 246: clientState = REQUESTING;
  7998  003B4C  0E04               	movlw	4
  7999  003B4E  D004               	goto	L9
  8000  003B50                     l803:
  8001                           
  8002                           ; BSR set to: 1
  8003                           ;dhcp_client.c: 249: ipv4Address = myip;
  8004  003B50  D83C               	call	PL607	;call to abstracted procedure
  8005                           
  8006                           ; BSR set to: 1
  8007                           ;dhcp_client.c: 250: clientState = BOUND;
  8008  003B52  0E05               	movlw	5
  8009  003B54  D001               	goto	L9
  8010  003B56                     l8444:
  8011                           
  8012                           ; BSR set to: 1
  8013                           ;dhcp_client.c: 254: clientState = INIT;
  8014  003B56  0E01               	movlw	1
  8015  003B58                     L9:
  8016  003B58  6E48               	movwf	_clientState,c
  8017                           
  8018                           ;dhcp_client.c: 255: break;
  8019  003B5A  D008               	goto	l8450
  8020  003B5C                     l8448:
  8021                           
  8022                           ; BSR set to: 0
  8023  003B5C  ECC8  F030         	call	_ETH_Read8	;wreg free
  8024                           
  8025                           ; Switch size 1, requested type "space"
  8026                           ; Number of cases is 3, Range of values is 2 to 6
  8027                           ; switch strategies available:
  8028                           ; Name         Instructions Cycles
  8029                           ; simple_byte           10     6 (average)
  8030                           ;	Chosen strategy is simple_byte
  8031  003B60  0A02               	xorlw	2	; case 2
  8032  003B62  E0F3               	bz	l801
  8033  003B64  0A07               	xorlw	7	; case 5
  8034  003B66  E0F4               	bz	l803
  8035  003B68  0A03               	xorlw	3	; case 6
  8036  003B6A  E0F5               	bz	l8444
  8037  003B6C                     l8450:
  8038                           
  8039                           ; BSR set to: 1
  8040                           ;dhcp_client.c: 259: optionLength -=1;
  8041  003B6C  0100               	movlb	0	; () banked
  8042  003B6E  07CE               	decf	DHCP_Handler@optionLength& (0+255),f,b
  8043                           
  8044                           ;dhcp_client.c: 260: break;
  8045  003B70  D014               	goto	l8458
  8046  003B72                     l8452:
  8047                           
  8048                           ; BSR set to: 0
  8049                           ;dhcp_client.c: 262: ETH_Dump(optionLength);
  8050  003B72  C0CE  F017         	movff	DHCP_Handler@optionLength,ETH_Dump@length
  8051  003B76  6A18               	clrf	ETH_Dump@length+1,c
  8052  003B78  EC5A  F030         	call	_ETH_Dump	;wreg free
  8053                           
  8054                           ;dhcp_client.c: 263: break;
  8055  003B7C  D00E               	goto	l8458
  8056  003B7E                     l8456:
  8057                           
  8058                           ; BSR set to: 0
  8059  003B7E  51C1               	movf	DHCP_Handler@option& (0+255),w,b
  8060                           
  8061                           ; Switch size 1, requested type "space"
  8062                           ; Number of cases is 6, Range of values is 1 to 54
  8063                           ; switch strategies available:
  8064                           ; Name         Instructions Cycles
  8065                           ; simple_byte           19    10 (average)
  8066                           ;	Chosen strategy is simple_byte
  8067  003B80  0A01               	xorlw	1	; case 1
  8068  003B82  E093               	bz	l8414
  8069  003B84  0A02               	xorlw	2	; case 3
  8070  003B86  E09C               	bz	l8416
  8071  003B88  0A05               	xorlw	5	; case 6
  8072  003B8A  E0A5               	bz	l8418
  8073  003B8C  0A35               	xorlw	53	; case 51
  8074  003B8E  E0C4               	bz	l8430
  8075  003B90  0A06               	xorlw	6	; case 53
  8076  003B92  E0E4               	bz	l8448
  8077  003B94  0A03               	xorlw	3	; case 54
  8078  003B96  E0CE               	bz	l8436
  8079  003B98  D7EC               	goto	l8452
  8080  003B9A                     l8458:
  8081  003B9A  0100               	movlb	0	; () banked
  8082  003B9C  BFB0               	btfsc	(DHCP_Handler@length+1)& (0+255),7,b
  8083  003B9E  D005               	goto	l8460
  8084  003BA0  51B0               	movf	(DHCP_Handler@length+1)& (0+255),w,b
  8085  003BA2  E102               	bnz	u12241
  8086  003BA4  05AF               	decf	DHCP_Handler@length& (0+255),w,b
  8087  003BA6  B0D8               	btfsc	status,0,c
  8088  003BA8                     u12241:
  8089  003BA8  D76C               	goto	l8410
  8090  003BAA                     l8460:
  8091                           
  8092                           ; BSR set to: 0
  8093                           ;dhcp_client.c: 265: }
  8094                           ;dhcp_client.c: 266: if (clientState == REQUESTING)
  8095  003BAA  0E04               	movlw	4
  8096  003BAC  1848               	xorwf	_clientState,w,c
  8097  003BAE  A4D8               	btfss	status,2,c
  8098  003BB0  0012               	return	
  8099                           
  8100                           ; BSR set to: 0
  8101                           ;dhcp_client.c: 267: DHCP_Request( DHCP_REQUEST );
  8102  003BB2  0E03               	movlw	3
  8103  003BB4  EF33  F021         	goto	_DHCP_Request
  8104  003BB8                     l8464:
  8105                           
  8106                           ; BSR set to: 1
  8107                           ;dhcp_client.c: 270: else
  8108                           ;dhcp_client.c: 271: ETH_Dump(length - 34);
  8109  003BB8  0EDE               	movlw	222
  8110  003BBA  0100               	movlb	0	; () banked
  8111  003BBC  25AF               	addwf	DHCP_Handler@length& (0+255),w,b
  8112  003BBE  6E17               	movwf	ETH_Dump@length,c
  8113  003BC0  0EFF               	movlw	255
  8114  003BC2  21B0               	addwfc	(DHCP_Handler@length+1)& (0+255),w,b
  8115  003BC4  6E18               	movwf	ETH_Dump@length+1,c
  8116  003BC6  EF5A  F030         	goto	_ETH_Dump	;wreg free
  8117  003BCA                     __end_of_DHCP_Handler:
  8118                           	opt stack 0
  8119  003BCA                     PL607:
  8120                           	opt stack 12
  8121  003BCA  C0CF  F033         	movff	DHCP_Handler@myip,_ipv4Address
  8122  003BCE  C0D0  F034         	movff	DHCP_Handler@myip+1,_ipv4Address+1
  8123  003BD2  C0D1  F035         	movff	DHCP_Handler@myip+2,_ipv4Address+2
  8124  003BD6  C0D2  F036         	movff	DHCP_Handler@myip+3,_ipv4Address+3
  8125  003BDA  0012               	return	
  8126  003BDC                     __end_ofPL607:
  8127                           	opt stack 0
  8128  003BDC                     PL737:
  8129                           	opt stack 12
  8130  003BDC  6A18               	clrf	ETH_Dump@length+1,c
  8131  003BDE  0E08               	movlw	8
  8132  003BE0  6E17               	movwf	ETH_Dump@length,c
  8133  003BE2  0C08               	retlw	8
  8134  003BE4                     __end_ofPL737:
  8135                           	opt stack 0
  8136                           tosu	equ	0xFFF
  8137                           tosh	equ	0xFFE
  8138                           tosl	equ	0xFFD
  8139                           pclath	equ	0xFFA
  8140                           tblptru	equ	0xFF8
  8141                           tblptrh	equ	0xFF7
  8142                           tblptrl	equ	0xFF6
  8143                           tablat	equ	0xFF5
  8144                           prodh	equ	0xFF4
  8145                           prodl	equ	0xFF3
  8146                           intcon	equ	0xFF2
  8147                           indf0	equ	0xFEF
  8148                           postinc0	equ	0xFEE
  8149                           fsr0h	equ	0xFEA
  8150                           fsr0l	equ	0xFE9
  8151                           wreg	equ	0xFE8
  8152                           indf1	equ	0xFE7
  8153                           postinc1	equ	0xFE6
  8154                           postdec1	equ	0xFE5
  8155                           plusw1	equ	0xFE3
  8156                           fsr1h	equ	0xFE2
  8157                           fsr1l	equ	0xFE1
  8158                           indf2	equ	0xFDF
  8159                           postinc2	equ	0xFDE
  8160                           postdec2	equ	0xFDD
  8161                           plusw2	equ	0xFDB
  8162                           fsr2h	equ	0xFDA
  8163                           fsr2l	equ	0xFD9
  8164                           status	equ	0xFD8
  8165                           
  8166 ;; *************** function _memcmp *****************
  8167 ;; Defined at:
  8168 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\memcmp.c"
  8169 ;; Parameters:    Size  Location     Type
  8170 ;;  s1              1   22[COMRAM] PTR const void 
  8171 ;;		 -> DHCP_Handler@ethPktMAC(6), 
  8172 ;;  s2              1   23[COMRAM] PTR const void 
  8173 ;;		 -> DHCP_Handler@ethMAC(6), 
  8174 ;;  n               2   24[COMRAM] unsigned int 
  8175 ;; Auto vars:     Size  Location     Type
  8176 ;;		None
  8177 ;; Return value:  Size  Location     Type
  8178 ;;                  2   22[COMRAM] int 
  8179 ;; Registers used:
  8180 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8181 ;; Tracked objects:
  8182 ;;		On entry : F/1
  8183 ;;		On exit  : F/1
  8184 ;;		Unchanged: F/0
  8185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8186 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8188 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8189 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8190 ;;Total ram usage:        6 bytes
  8191 ;; Hardware stack levels used:    1
  8192 ;; Hardware stack levels required when called:    8
  8193 ;; This function calls:
  8194 ;;		Nothing
  8195 ;; This function is called by:
  8196 ;;		_DHCP_Handler
  8197 ;; This function uses a non-reentrant model
  8198 ;;
  8199                           
  8200                           	psect	text36
  8201  005D56                     __ptext36:
  8202                           	opt stack 0
  8203  005D56                     _memcmp:
  8204                           	opt stack 17
  8205                           
  8206                           ; BSR set to: 1
  8207                           
  8208                           ;incstack = 0
  8209  005D56  D01A               	goto	l8332
  8210  005D58                     l8324:
  8211                           
  8212                           ; BSR set to: 1
  8213  005D58  5018               	movf	memcmp@s2,w,c
  8214  005D5A  6ED9               	movwf	fsr2l,c
  8215  005D5C  6ADA               	clrf	fsr2h,c
  8216  005D5E  5017               	movf	memcmp@s1,w,c
  8217  005D60  6EE1               	movwf	fsr1l,c
  8218  005D62  6AE2               	clrf	fsr1h,c
  8219  005D64  50DE               	movf	postinc2,w,c
  8220  005D66  18E6               	xorwf	postinc1,w,c
  8221  005D68  E00F               	bz	l8330
  8222                           
  8223                           ; BSR set to: 1
  8224  005D6A  5017               	movf	memcmp@s1,w,c
  8225  005D6C  6ED9               	movwf	fsr2l,c
  8226  005D6E  6ADA               	clrf	fsr2h,c
  8227  005D70  50DF               	movf	indf2,w,c
  8228  005D72  6E1B               	movwf	??_memcmp& (0+255),c
  8229  005D74  5018               	movf	memcmp@s2,w,c
  8230  005D76  6ED9               	movwf	fsr2l,c
  8231  005D78  6ADA               	clrf	fsr2h,c
  8232  005D7A  50DF               	movf	indf2,w,c
  8233  005D7C  5C1B               	subwf	??_memcmp,w,c
  8234  005D7E  6E17               	movwf	?_memcmp,c
  8235  005D80  6A18               	clrf	?_memcmp+1,c
  8236  005D82  A0D8               	btfss	status,0,c
  8237  005D84  0618               	decf	?_memcmp+1,f,c
  8238  005D86  0012               	return	
  8239  005D88                     l8330:
  8240                           
  8241                           ; BSR set to: 1
  8242  005D88  2A17               	incf	memcmp@s1,f,c
  8243  005D8A  2A18               	incf	memcmp@s2,f,c
  8244  005D8C                     l8332:
  8245                           
  8246                           ; BSR set to: 1
  8247  005D8C  0619               	decf	memcmp@n,f,c
  8248  005D8E  A0D8               	btfss	status,0,c
  8249  005D90  061A               	decf	memcmp@n+1,f,c
  8250  005D92  2819               	incf	memcmp@n,w,c
  8251  005D94  E1E1               	bnz	l8324
  8252  005D96  281A               	incf	memcmp@n+1,w,c
  8253  005D98  E1DF               	bnz	l8324
  8254                           
  8255                           ; BSR set to: 1
  8256  005D9A  6A17               	clrf	?_memcmp,c
  8257  005D9C  6A18               	clrf	?_memcmp+1,c
  8258                           
  8259                           ; BSR set to: 1
  8260  005D9E  0012               	return		;funcret
  8261  005DA0                     __end_of_memcmp:
  8262                           	opt stack 0
  8263                           tosu	equ	0xFFF
  8264                           tosh	equ	0xFFE
  8265                           tosl	equ	0xFFD
  8266                           pclath	equ	0xFFA
  8267                           tblptru	equ	0xFF8
  8268                           tblptrh	equ	0xFF7
  8269                           tblptrl	equ	0xFF6
  8270                           tablat	equ	0xFF5
  8271                           prodh	equ	0xFF4
  8272                           prodl	equ	0xFF3
  8273                           intcon	equ	0xFF2
  8274                           indf0	equ	0xFEF
  8275                           postinc0	equ	0xFEE
  8276                           fsr0h	equ	0xFEA
  8277                           fsr0l	equ	0xFE9
  8278                           wreg	equ	0xFE8
  8279                           indf1	equ	0xFE7
  8280                           postinc1	equ	0xFE6
  8281                           postdec1	equ	0xFE5
  8282                           plusw1	equ	0xFE3
  8283                           fsr1h	equ	0xFE2
  8284                           fsr1l	equ	0xFE1
  8285                           indf2	equ	0xFDF
  8286                           postinc2	equ	0xFDE
  8287                           postdec2	equ	0xFDD
  8288                           plusw2	equ	0xFDB
  8289                           fsr2h	equ	0xFDA
  8290                           fsr2l	equ	0xFD9
  8291                           status	equ	0xFD8
  8292                           
  8293 ;; *************** function _ETH_Read32 *****************
  8294 ;; Defined at:
  8295 ;;		line 420 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
  8296 ;; Parameters:    Size  Location     Type
  8297 ;;		None
  8298 ;; Auto vars:     Size  Location     Type
  8299 ;;  ret             4   26[COMRAM] unsigned long 
  8300 ;; Return value:  Size  Location     Type
  8301 ;;                  4   22[COMRAM] unsigned long 
  8302 ;; Registers used:
  8303 ;;		wreg, status,2, status,0, cstack
  8304 ;; Tracked objects:
  8305 ;;		On entry : E/1
  8306 ;;		On exit  : F/1
  8307 ;;		Unchanged: 0/0
  8308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8309 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8310 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8312 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8313 ;;Total ram usage:        8 bytes
  8314 ;; Hardware stack levels used:    1
  8315 ;; Hardware stack levels required when called:    9
  8316 ;; This function calls:
  8317 ;;		_ETH_EdataRead
  8318 ;; This function is called by:
  8319 ;;		_DHCP_Handler
  8320 ;; This function uses a non-reentrant model
  8321 ;;
  8322                           
  8323                           	psect	text37
  8324  0059E2                     __ptext37:
  8325                           	opt stack 0
  8326  0059E2                     _ETH_Read32:
  8327                           	opt stack 16
  8328                           
  8329                           ;j60_driver.c: 422: uint32_t ret = 0;
  8330                           
  8331                           ; BSR set to: 1
  8332                           ;incstack = 0
  8333  0059E2  6A1B               	clrf	ETH_Read32@ret,c
  8334  0059E4  6A1C               	clrf	ETH_Read32@ret+1,c
  8335  0059E6  6A1D               	clrf	ETH_Read32@ret+2,c
  8336  0059E8  6A1E               	clrf	ETH_Read32@ret+3,c
  8337                           
  8338                           ;j60_driver.c: 423: if(rxPacketStatusVector.byteCount >= sizeof(ret))
  8339  0059EA  0101               	movlb	1	; () banked
  8340  0059EC  51CD               	movf	(_rxPacketStatusVector+1)& (0+255),w,b
  8341  0059EE  E103               	bnz	u11720
  8342  0059F0  0E04               	movlw	4
  8343  0059F2  5DCC               	subwf	_rxPacketStatusVector& (0+255),w,b
  8344  0059F4  E318               	bnc	l535
  8345  0059F6                     u11720:
  8346  0059F6                     i1L__ptext81:
  8347                           	opt stack 0
  8348  0059F6                     i1L_ETH_EdataRead:
  8349                           	opt stack 0
  8350  0059F6                     i1Ll7562:
  8351                           	opt stack 16
  8352  0059F6  CF61 FE7E          	movff	3937,_errataTemp	;# 
  8353  0059FA                     i1Ll7564:
  8354                           	opt stack 16
  8355                           
  8356                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
  8357  0059FA  010E               	movlb	14	; () banked
  8358  0059FC  517E               	movf	126,w,b
  8359  0059FE                     i1Ll460:
  8360                           	opt stack 16
  8361  0059FE  6E1E               	movwf	ETH_Read32@ret+3,c
  8362  005A00                     i2L__ptext81:
  8363                           	opt stack 0
  8364  005A00                     i2L_ETH_EdataRead:
  8365                           	opt stack 0
  8366  005A00                     i2Ll7562:
  8367                           	opt stack 16
  8368  005A00  CF61 FE7E          	movff	3937,_errataTemp	;# 
  8369  005A04                     i2Ll7564:
  8370                           	opt stack 16
  8371                           
  8372                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
  8373  005A04  010E               	movlb	14	; () banked
  8374  005A06  517E               	movf	126,w,b
  8375  005A08                     i2Ll460:
  8376                           	opt stack 16
  8377  005A08  6E1D               	movwf	ETH_Read32@ret+2,c
  8378  005A0A                     i3L__ptext81:
  8379                           	opt stack 0
  8380  005A0A                     i3L_ETH_EdataRead:
  8381                           	opt stack 0
  8382  005A0A                     i3Ll7562:
  8383                           	opt stack 16
  8384  005A0A  CF61 FE7E          	movff	3937,_errataTemp	;# 
  8385  005A0E                     i3Ll7564:
  8386                           	opt stack 16
  8387                           
  8388                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
  8389  005A0E  010E               	movlb	14	; () banked
  8390  005A10  517E               	movf	126,w,b
  8391  005A12                     i3Ll460:
  8392                           	opt stack 16
  8393  005A12  6E1C               	movwf	ETH_Read32@ret+1,c
  8394  005A14                     i4L__ptext81:
  8395                           	opt stack 0
  8396  005A14                     i4L_ETH_EdataRead:
  8397                           	opt stack 0
  8398  005A14                     i4Ll7562:
  8399                           	opt stack 16
  8400  005A14  CF61 FE7E          	movff	3937,_errataTemp	;# 
  8401  005A18                     i4Ll7564:
  8402                           	opt stack 16
  8403                           
  8404                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
  8405  005A18  010E               	movlb	14	; () banked
  8406  005A1A  517E               	movf	126,w,b
  8407  005A1C                     i4Ll460:
  8408                           	opt stack 16
  8409  005A1C  6E1B               	movwf	ETH_Read32@ret,c
  8410                           
  8411                           ; BSR set to: 14
  8412                           ;j60_driver.c: 429: rxPacketStatusVector.byteCount -= sizeof(ret);
  8413  005A1E  0E04               	movlw	4
  8414                           
  8415                           ; BSR set to: 1
  8416                           ;j60_driver.c: 430: ethData.error = 0;
  8417  005A20  EC7C  F02F         	call	PL663	;call to abstracted procedure
  8418                           
  8419                           ;j60_driver.c: 431: }
  8420  005A24  D001               	goto	l536
  8421  005A26                     l535:
  8422                           
  8423                           ; BSR set to: 1
  8424                           ;j60_driver.c: 432: else
  8425                           ;j60_driver.c: 433: {
  8426                           ;j60_driver.c: 434: ethData.error = 1;
  8427  005A26  81BD               	bsf	_ethData& (0+255),0,b	;volatile
  8428  005A28                     l536:
  8429                           
  8430                           ; BSR set to: 1
  8431                           ;j60_driver.c: 435: }
  8432                           ;j60_driver.c: 436: return ret;
  8433  005A28  C01B  F017         	movff	ETH_Read32@ret,?_ETH_Read32
  8434  005A2C  C01C  F018         	movff	ETH_Read32@ret+1,?_ETH_Read32+1
  8435  005A30  C01D  F019         	movff	ETH_Read32@ret+2,?_ETH_Read32+2
  8436  005A34  C01E  F01A         	movff	ETH_Read32@ret+3,?_ETH_Read32+3
  8437                           
  8438                           ; BSR set to: 1
  8439  005A38  0012               	return		;funcret
  8440  005A3A                     __end_of_ETH_Read32:
  8441                           	opt stack 0
  8442                           tosu	equ	0xFFF
  8443                           tosh	equ	0xFFE
  8444                           tosl	equ	0xFFD
  8445                           pclath	equ	0xFFA
  8446                           tblptru	equ	0xFF8
  8447                           tblptrh	equ	0xFF7
  8448                           tblptrl	equ	0xFF6
  8449                           tablat	equ	0xFF5
  8450                           prodh	equ	0xFF4
  8451                           prodl	equ	0xFF3
  8452                           intcon	equ	0xFF2
  8453                           indf0	equ	0xFEF
  8454                           postinc0	equ	0xFEE
  8455                           fsr0h	equ	0xFEA
  8456                           fsr0l	equ	0xFE9
  8457                           wreg	equ	0xFE8
  8458                           indf1	equ	0xFE7
  8459                           postinc1	equ	0xFE6
  8460                           postdec1	equ	0xFE5
  8461                           plusw1	equ	0xFE3
  8462                           fsr1h	equ	0xFE2
  8463                           fsr1l	equ	0xFE1
  8464                           indf2	equ	0xFDF
  8465                           postinc2	equ	0xFDE
  8466                           postdec2	equ	0xFDD
  8467                           plusw2	equ	0xFDB
  8468                           fsr2h	equ	0xFDA
  8469                           fsr2l	equ	0xFD9
  8470                           status	equ	0xFD8
  8471                           
  8472 ;; *************** function _TCP_Recv *****************
  8473 ;; Defined at:
  8474 ;;		line 483 in file "../../TCPIP Library/source/tcpv4.c"
  8475 ;; Parameters:    Size  Location     Type
  8476 ;;  remoteAddres    4   17[BANK1 ] unsigned long 
  8477 ;;  length          2   21[BANK1 ] unsigned int 
  8478 ;; Auto vars:     Size  Location     Type
  8479 ;;  tcbPtr          2   52[BANK1 ] PTR struct .
  8480 ;;		 -> ?_sprintf(2), ?_printf(2), main@str(32), STR_8(13), 
  8481 ;;		 -> STR_7(17), STR_6(7), STR_5(10), TCP_Server@port7TCB(55), 
  8482 ;;		 -> Network_Read@debug_str(80), STR_1(15), NULL(0), 
  8483 ;;  count           1   51[BANK1 ] char 
  8484 ;; Return value:  Size  Location     Type
  8485 ;;                  1    wreg      void 
  8486 ;; Registers used:
  8487 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8488 ;; Tracked objects:
  8489 ;;		On entry : F/1
  8490 ;;		On exit  : F/1
  8491 ;;		Unchanged: 0/0
  8492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8493 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8494 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8495 ;;      Temps:          0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8496 ;;      Totals:         0       0      37       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8497 ;;Total ram usage:       37 bytes
  8498 ;; Hardware stack levels used:    1
  8499 ;; Hardware stack levels required when called:   15
  8500 ;; This function calls:
  8501 ;;		_ETH_ReadBlock
  8502 ;;		_TCP_FiniteStateMachine
  8503 ;;		_TCP_ParseTCPOptions
  8504 ;; This function is called by:
  8505 ;;		_IPV4_Packet
  8506 ;; This function uses a non-reentrant model
  8507 ;;
  8508                           
  8509                           	psect	text38
  8510  002C82                     __ptext38:
  8511                           	opt stack 0
  8512  002C82                     _TCP_Recv:
  8513                           	opt stack 12
  8514                           
  8515                           ; BSR set to: 1
  8516                           ;tcpv4.c: 485: tcpTCB_t *tcbPtr;
  8517                           ;tcpv4.c: 486: socklistsize_t count = 0;
  8518                           
  8519                           ; BSR set to: 1
  8520                           ;incstack = 0
  8521  002C82  6B33               	clrf	TCP_Recv@count& (0+255),b
  8522                           
  8523                           ;tcpv4.c: 490: receivedRemoteAddress = 0;
  8524  002C84  6A37               	clrf	_receivedRemoteAddress,c
  8525  002C86  6A38               	clrf	_receivedRemoteAddress+1,c
  8526  002C88  6A39               	clrf	_receivedRemoteAddress+2,c
  8527  002C8A  6A3A               	clrf	_receivedRemoteAddress+3,c
  8528                           
  8529                           ;tcpv4.c: 491: rcvPayloadLen = 0;
  8530  002C8C  6BD0               	clrf	_rcvPayloadLen& (0+255),b
  8531  002C8E  6BD1               	clrf	(_rcvPayloadLen+1)& (0+255),b
  8532                           
  8533                           ; BSR set to: 1
  8534                           ;tcpv4.c: 493: ETH_ReadBlock((char *)&tcpHeader,sizeof(tcpHeader_t));
  8535  002C90  0ED2               	movlw	low _tcpHeader
  8536  002C92  6E17               	movwf	ETH_ReadBlock@buffer,c
  8537  002C94  0E01               	movlw	high _tcpHeader
  8538  002C96  D9D9               	call	PL697	;call to abstracted procedure
  8539  002C98  EC92  F02C         	call	_ETH_ReadBlock	;wreg free
  8540                           
  8541                           ; BSR set to: 1
  8542                           ;tcpv4.c: 495: currentTCB = (0);
  8543  002C9C  6A3B               	clrf	_currentTCB,c
  8544  002C9E  6A3C               	clrf	_currentTCB+1,c
  8545                           
  8546                           ; BSR set to: 1
  8547                           ;tcpv4.c: 498: if ((tcpHeader.destPort != 0) && (tcpHeader.sourcePort != 0))
  8548  002CA0  51D4               	movf	(_tcpHeader+2)& (0+255),w,b
  8549  002CA2  11D5               	iorwf	(_tcpHeader+3)& (0+255),w,b
  8550  002CA4  B4D8               	btfsc	status,2,c
  8551  002CA6  0012               	return	
  8552                           
  8553                           ; BSR set to: 1
  8554  002CA8  51D2               	movf	_tcpHeader& (0+255),w,b
  8555  002CAA  11D3               	iorwf	(_tcpHeader+1)& (0+255),w,b
  8556  002CAC  B4D8               	btfsc	status,2,c
  8557  002CAE  0012               	return	
  8558                           
  8559                           ; BSR set to: 1
  8560                           ;tcpv4.c: 499: {
  8561                           ;tcpv4.c: 500: tcpHeader.sourcePort = ((((uint16_t)tcpHeader.sourcePort & (uint16_t)0xFF
      +                          00) >> 8) | (((uint16_t)tcpHeader.sourcePort & (uint16_t)0x00FF) << 8));
  8562  002CB0  51D2               	movf	_tcpHeader& (0+255),w,b
  8563  002CB2  6F18               	movwf	(??_TCP_Recv+1)& (0+255),b
  8564  002CB4  6B17               	clrf	??_TCP_Recv& (0+255),b
  8565  002CB6  51D3               	movf	(_tcpHeader+1)& (0+255),w,b
  8566  002CB8  6F19               	movwf	(??_TCP_Recv+2)& (0+255),b
  8567  002CBA  6B1A               	clrf	(??_TCP_Recv+3)& (0+255),b
  8568  002CBC  5117               	movf	??_TCP_Recv& (0+255),w,b
  8569  002CBE  1119               	iorwf	(??_TCP_Recv+2)& (0+255),w,b
  8570  002CC0  6FD2               	movwf	_tcpHeader& (0+255),b
  8571  002CC2  5118               	movf	(??_TCP_Recv+1)& (0+255),w,b
  8572  002CC4  111A               	iorwf	(??_TCP_Recv+3)& (0+255),w,b
  8573  002CC6  6FD3               	movwf	(_tcpHeader+1)& (0+255),b
  8574                           
  8575                           ; BSR set to: 1
  8576                           ;tcpv4.c: 501: tcpHeader.destPort = ((((uint16_t)tcpHeader.destPort & (uint16_t)0xFF00) 
      +                          >> 8) | (((uint16_t)tcpHeader.destPort & (uint16_t)0x00FF) << 8));
  8577  002CC8  51D4               	movf	(_tcpHeader+2)& (0+255),w,b
  8578  002CCA  6F18               	movwf	(??_TCP_Recv+1)& (0+255),b
  8579  002CCC  6B17               	clrf	??_TCP_Recv& (0+255),b
  8580  002CCE  EE21  F0D4         	lfsr	2,_tcpHeader+2
  8581  002CD2  CFDE F119          	movff	postinc2,??_TCP_Recv+2
  8582  002CD6  CFDD F11A          	movff	postdec2,??_TCP_Recv+3
  8583  002CDA  C11A  F119         	movff	??_TCP_Recv+3,??_TCP_Recv+2
  8584  002CDE  6B1A               	clrf	(??_TCP_Recv+3)& (0+255),b
  8585  002CE0  6B1A               	clrf	(??_TCP_Recv+3)& (0+255),b
  8586  002CE2  5117               	movf	??_TCP_Recv& (0+255),w,b
  8587  002CE4  1119               	iorwf	(??_TCP_Recv+2)& (0+255),w,b
  8588  002CE6  6FD4               	movwf	(_tcpHeader+2)& (0+255),b
  8589  002CE8  5118               	movf	(??_TCP_Recv+1)& (0+255),w,b
  8590  002CEA  111A               	iorwf	(??_TCP_Recv+3)& (0+255),w,b
  8591  002CEC  6FD5               	movwf	(_tcpHeader+3)& (0+255),b
  8592                           
  8593                           ; BSR set to: 1
  8594                           ;tcpv4.c: 504: tcbPtr = tcbList;
  8595  002CEE  C041  F134         	movff	_tcbList,TCP_Recv@tcbPtr
  8596  002CF2  C042  F135         	movff	_tcbList+1,TCP_Recv@tcbPtr+1
  8597                           
  8598                           ;tcpv4.c: 505: while((tcbPtr != (0)) && (count < tcbListSize))
  8599  002CF6  D040               	goto	l9028
  8600  002CF8                     l9018:
  8601                           
  8602                           ; BSR set to: 1
  8603                           ;tcpv4.c: 506: {
  8604                           ;tcpv4.c: 507: if (tcpHeader.destPort == tcbPtr->localPort)
  8605  002CF8  C134  FFF6         	movff	TCP_Recv@tcbPtr,tblptrl
  8606  002CFC  C135  FFF7         	movff	TCP_Recv@tcbPtr+1,tblptrh
  8607  002D00  0E00               	movlw	low (__smallconst shr (0+16))
  8608  002D02  6EF8               	movwf	tblptru,c
  8609  002D04  0E0F               	movlw	(high __ramtop+-1)
  8610  002D06  64F7               	cpfsgt	tblptrh,c
  8611  002D08  D007               	bra	u14267
  8612  002D0A  0009               	tblrd		*+
  8613  002D0C  CFF5 F117          	movff	tablat,??_TCP_Recv
  8614  002D10  0009               	tblrd		*+
  8615  002D12  CFF5 F118          	movff	tablat,??_TCP_Recv+1
  8616  002D16  D006               	bra	u14260
  8617  002D18                     u14267:
  8618  002D18  EC73  F011         	call	PL389	;call to abstracted procedure
  8619  002D1C  CFEE F117          	movff	postinc0,??_TCP_Recv
  8620  002D20  CFEE F118          	movff	postinc0,??_TCP_Recv+1
  8621  002D24                     u14260:
  8622  002D24  0101               	movlb	1	; () banked
  8623  002D26  5117               	movf	??_TCP_Recv& (0+255),w,b
  8624  002D28  19D4               	xorwf	(_tcpHeader+2)& (0+255),w,b
  8625  002D2A  E108               	bnz	l9024
  8626  002D2C  5118               	movf	(??_TCP_Recv+1)& (0+255),w,b
  8627  002D2E  19D5               	xorwf	(_tcpHeader+3)& (0+255),w,b
  8628  002D30  E105               	bnz	l9024
  8629                           
  8630                           ; BSR set to: 1
  8631                           ;tcpv4.c: 508: {
  8632                           ;tcpv4.c: 509: currentTCB = tcbPtr;
  8633  002D32  C134  F03B         	movff	TCP_Recv@tcbPtr,_currentTCB
  8634  002D36  C135  F03C         	movff	TCP_Recv@tcbPtr+1,_currentTCB+1
  8635                           
  8636                           ;tcpv4.c: 510: break;
  8637  002D3A  D028               	goto	l9032
  8638  002D3C                     l9024:
  8639                           
  8640                           ; BSR set to: 1
  8641                           ;tcpv4.c: 512: else
  8642                           ;tcpv4.c: 513: {
  8643                           ;tcpv4.c: 514: tcbPtr = tcbPtr->nextTCB;
  8644  002D3C  0E2C               	movlw	44
  8645  002D3E  2534               	addwf	TCP_Recv@tcbPtr& (0+255),w,b
  8646  002D40  6F17               	movwf	??_TCP_Recv& (0+255),b
  8647  002D42  0E00               	movlw	0
  8648  002D44  2135               	addwfc	(TCP_Recv@tcbPtr+1)& (0+255),w,b
  8649  002D46  6F18               	movwf	(??_TCP_Recv+1)& (0+255),b
  8650  002D48  C117  FFF6         	movff	??_TCP_Recv,tblptrl
  8651  002D4C  C118  FFF7         	movff	??_TCP_Recv+1,tblptrh
  8652  002D50  0E00               	movlw	low (__smallconst shr (0+16))
  8653  002D52  6EF8               	movwf	tblptru,c
  8654  002D54  0E0F               	movlw	(high __ramtop+-1)
  8655  002D56  64F7               	cpfsgt	tblptrh,c
  8656  002D58  D007               	bra	u14287
  8657  002D5A  0009               	tblrd		*+
  8658  002D5C  CFF5 F134          	movff	tablat,TCP_Recv@tcbPtr
  8659  002D60  0009               	tblrd		*+
  8660  002D62  CFF5 F135          	movff	tablat,TCP_Recv@tcbPtr+1
  8661  002D66  D006               	bra	u14280
  8662  002D68                     u14287:
  8663  002D68  EC73  F011         	call	PL389	;call to abstracted procedure
  8664  002D6C  CFEE F134          	movff	postinc0,TCP_Recv@tcbPtr
  8665  002D70  CFEE F135          	movff	postinc0,TCP_Recv@tcbPtr+1
  8666  002D74                     u14280:
  8667                           
  8668                           ;tcpv4.c: 515: count ++;
  8669  002D74  0101               	movlb	1	; () banked
  8670  002D76  2B33               	incf	TCP_Recv@count& (0+255),f,b
  8671  002D78                     l9028:
  8672                           
  8673                           ; BSR set to: 1
  8674  002D78  5134               	movf	TCP_Recv@tcbPtr& (0+255),w,b
  8675  002D7A  1135               	iorwf	(TCP_Recv@tcbPtr+1)& (0+255),w,b
  8676  002D7C  E007               	bz	l9032
  8677                           
  8678                           ; BSR set to: 1
  8679  002D7E  5133               	movf	TCP_Recv@count& (0+255),w,b
  8680  002D80  0A80               	xorlw	128
  8681  002D82  6F17               	movwf	??_TCP_Recv& (0+255),b
  8682  002D84  5047               	movf	_tcbListSize,w,c
  8683  002D86  0A80               	xorlw	128
  8684  002D88  5D17               	subwf	??_TCP_Recv& (0+255),w,b
  8685  002D8A  E3B6               	bnc	l9018
  8686  002D8C                     l9032:
  8687                           
  8688                           ; BSR set to: 1
  8689                           ;tcpv4.c: 516: }
  8690                           ;tcpv4.c: 517: }
  8691                           ;tcpv4.c: 519: if (currentTCB != (0))
  8692  002D8C  503B               	movf	_currentTCB,w,c
  8693  002D8E  103C               	iorwf	_currentTCB+1,w,c
  8694  002D90  B4D8               	btfsc	status,2,c
  8695  002D92  0012               	return	
  8696                           
  8697                           ; BSR set to: 1
  8698                           ;tcpv4.c: 520: {
  8699                           ;tcpv4.c: 521: if((tcpHeader.sourcePort == currentTCB->destPort) ||
  8700                           ;tcpv4.c: 522: (currentTCB->destIP == 0))
  8701  002D94  0E06               	movlw	6
  8702  002D96  D8E6               	call	PL409	;call to abstracted procedure
  8703  002D98  64F7               	cpfsgt	tblptrh,c
  8704  002D9A  D002               	bra	u14327
  8705  002D9C  D94A               	call	PL649	;call to abstracted procedure
  8706  002D9E  D003               	bra	u14320
  8707  002DA0                     u14327:
  8708  002DA0  EC73  F011         	call	PL389	;call to abstracted procedure
  8709  002DA4  D94D               	call	PL695	;call to abstracted procedure
  8710  002DA6                     u14320:
  8711  002DA6  0101               	movlb	1	; () banked
  8712  002DA8  51D2               	movf	_tcpHeader& (0+255),w,b
  8713  002DAA  1919               	xorwf	(??_TCP_Recv+2)& (0+255),w,b
  8714  002DAC  E103               	bnz	u14330
  8715  002DAE  51D3               	movf	(_tcpHeader+1)& (0+255),w,b
  8716  002DB0  191A               	xorwf	(??_TCP_Recv+3)& (0+255),w,b
  8717  002DB2  E01A               	bz	l1169
  8718  002DB4                     u14330:
  8719                           
  8720                           ; BSR set to: 1
  8721  002DB4  0E02               	movlw	2
  8722  002DB6  D8D6               	call	PL409	;call to abstracted procedure
  8723  002DB8  64F7               	cpfsgt	tblptrh,c
  8724  002DBA  D008               	bra	u14347
  8725  002DBC  D93A               	call	PL649	;call to abstracted procedure
  8726  002DBE  0009               	tblrd		*+
  8727  002DC0  CFF5 F11B          	movff	tablat,??_TCP_Recv+4
  8728  002DC4  0009               	tblrd		*+
  8729  002DC6  CFF5 F11C          	movff	tablat,??_TCP_Recv+5
  8730  002DCA  D007               	bra	u14340
  8731  002DCC                     u14347:
  8732  002DCC  EC73  F011         	call	PL389	;call to abstracted procedure
  8733  002DD0  D937               	call	PL695	;call to abstracted procedure
  8734  002DD2  CFEE F11B          	movff	postinc0,??_TCP_Recv+4
  8735  002DD6  CFEE F11C          	movff	postinc0,??_TCP_Recv+5
  8736  002DDA                     u14340:
  8737  002DDA  0101               	movlb	1	; () banked
  8738  002DDC  5119               	movf	(??_TCP_Recv+2)& (0+255),w,b
  8739  002DDE  111A               	iorwf	(??_TCP_Recv+3)& (0+255),w,b
  8740  002DE0  111B               	iorwf	(??_TCP_Recv+4)& (0+255),w,b
  8741  002DE2  111C               	iorwf	(??_TCP_Recv+5)& (0+255),w,b
  8742  002DE4  A4D8               	btfss	status,2,c
  8743  002DE6  0012               	return	
  8744  002DE8                     l1169:
  8745                           
  8746                           ; BSR set to: 1
  8747                           ;tcpv4.c: 523: {
  8748                           ;tcpv4.c: 526: receivedRemoteAddress = remoteAddress;
  8749  002DE8  C111  F037         	movff	TCP_Recv@remoteAddress,_receivedRemoteAddress
  8750  002DEC  C112  F038         	movff	TCP_Recv@remoteAddress+1,_receivedRemoteAddress+1
  8751  002DF0  C113  F039         	movff	TCP_Recv@remoteAddress+2,_receivedRemoteAddress+2
  8752  002DF4  C114  F03A         	movff	TCP_Recv@remoteAddress+3,_receivedRemoteAddress+3
  8753                           
  8754                           ; BSR set to: 1
  8755                           ;tcpv4.c: 527: rcvPayloadLen = length - (uint16_t)(tcpHeader.dataOffset << 2);
  8756  002DF8  39DE               	swapf	(_tcpHeader+12)& (0+255),w,b
  8757  002DFA  0B0F               	andlw	15
  8758  002DFC  6F17               	movwf	??_TCP_Recv& (0+255),b
  8759  002DFE  6B18               	clrf	(??_TCP_Recv+1)& (0+255),b
  8760  002E00  90D8               	bcf	status,0,c
  8761  002E02  3717               	rlcf	??_TCP_Recv& (0+255),f,b
  8762  002E04  3718               	rlcf	(??_TCP_Recv+1)& (0+255),f,b
  8763  002E06  90D8               	bcf	status,0,c
  8764  002E08  3717               	rlcf	??_TCP_Recv& (0+255),f,b
  8765  002E0A  3718               	rlcf	(??_TCP_Recv+1)& (0+255),f,b
  8766  002E0C  5117               	movf	??_TCP_Recv& (0+255),w,b
  8767  002E0E  5D15               	subwf	TCP_Recv@length& (0+255),w,b
  8768  002E10  6FD0               	movwf	_rcvPayloadLen& (0+255),b
  8769  002E12  5118               	movf	(??_TCP_Recv+1)& (0+255),w,b
  8770  002E14  5916               	subwfb	(TCP_Recv@length+1)& (0+255),w,b
  8771  002E16  6FD1               	movwf	(_rcvPayloadLen+1)& (0+255),b
  8772                           
  8773                           ; BSR set to: 1
  8774                           ;tcpv4.c: 530: if (TCP_ParseTCPOptions() == 1)
  8775  002E18  EC08  F026         	call	_TCP_ParseTCPOptions	;wreg free
  8776  002E1C  06E8               	decf	wreg,f,c
  8777  002E1E  A4D8               	btfss	status,2,c
  8778  002E20  0012               	return	
  8779                           
  8780                           ; BSR set to: 1
  8781                           ;tcpv4.c: 531: {
  8782                           ;tcpv4.c: 534: if(tcpHeader.syn)
  8783  002E22  A3DF               	btfss	(_tcpHeader+13)& (0+255),1,b
  8784  002E24  D01C               	goto	l1171
  8785                           
  8786                           ; BSR set to: 1
  8787                           ;tcpv4.c: 535: {
  8788                           ;tcpv4.c: 536: if(tcpHeader.ack)
  8789  002E26  A9DF               	btfss	(_tcpHeader+13)& (0+255),4,b
  8790  002E28  D00D               	goto	l9048
  8791                           
  8792                           ; BSR set to: 1
  8793                           ;tcpv4.c: 537: {
  8794                           ;tcpv4.c: 538: ;
  8795                           ;tcpv4.c: 539: currentTCB->connectionEvent = RCV_SYNACK;
  8796  002E2A  0E2B               	movlw	43
  8797  002E2C  D89B               	call	PL409	;call to abstracted procedure
  8798  002E2E  64F7               	cpfsgt	tblptrh,c
  8799  002E30  D004               	bra	u14397
  8800  002E32  0E05               	movlw	5
  8801  002E34  6EF5               	movwf	tablat,c
  8802  002E36  000C               	tblwt		*
  8803  002E38  D004               	bra	u14390
  8804  002E3A                     u14397:
  8805  002E3A  EC73  F011         	call	PL389	;call to abstracted procedure
  8806  002E3E  0E05               	movlw	5
  8807  002E40  D048               	goto	L14
  8808  002E42                     u14390:
  8809                           
  8810                           ;tcpv4.c: 540: } else
  8811  002E42  D057               	goto	l9064
  8812  002E44                     l9048:
  8813                           
  8814                           ; BSR set to: 1
  8815                           ;tcpv4.c: 541: {
  8816                           ;tcpv4.c: 542: ;
  8817                           ;tcpv4.c: 543: currentTCB->connectionEvent = RCV_SYN;
  8818  002E44  0E2B               	movlw	43
  8819  002E46  D88E               	call	PL409	;call to abstracted procedure
  8820  002E48  64F7               	cpfsgt	tblptrh,c
  8821  002E4A  D004               	bra	u14407
  8822  002E4C  0E03               	movlw	3
  8823  002E4E  6EF5               	movwf	tablat,c
  8824  002E50  000C               	tblwt		*
  8825  002E52  D004               	bra	u14400
  8826  002E54                     u14407:
  8827  002E54  EC73  F011         	call	PL389	;call to abstracted procedure
  8828  002E58  0E03               	movlw	3
  8829  002E5A  D03B               	goto	L14
  8830  002E5C                     u14400:
  8831  002E5C  D04A               	goto	l9064
  8832  002E5E                     l1171:
  8833                           
  8834                           ; BSR set to: 1
  8835  002E5E  A1DF               	btfss	(_tcpHeader+13)& (0+255),0,b
  8836  002E60  D01C               	goto	l1175
  8837                           
  8838                           ; BSR set to: 1
  8839                           ;tcpv4.c: 546: {
  8840                           ;tcpv4.c: 547: if(tcpHeader.ack)
  8841  002E62  A9DF               	btfss	(_tcpHeader+13)& (0+255),4,b
  8842  002E64  D00D               	goto	l9054
  8843                           
  8844                           ; BSR set to: 1
  8845                           ;tcpv4.c: 548: {
  8846                           ;tcpv4.c: 549: ;
  8847                           ;tcpv4.c: 550: currentTCB->connectionEvent = RCV_FINACK;
  8848  002E66  0E2B               	movlw	43
  8849  002E68  D87D               	call	PL409	;call to abstracted procedure
  8850  002E6A  64F7               	cpfsgt	tblptrh,c
  8851  002E6C  D004               	bra	u14437
  8852  002E6E  0E07               	movlw	7
  8853  002E70  6EF5               	movwf	tablat,c
  8854  002E72  000C               	tblwt		*
  8855  002E74  D004               	bra	u14430
  8856  002E76                     u14437:
  8857  002E76  EC73  F011         	call	PL389	;call to abstracted procedure
  8858  002E7A  0E07               	movlw	7
  8859  002E7C  D02A               	goto	L14
  8860  002E7E                     u14430:
  8861                           
  8862                           ;tcpv4.c: 551: } else
  8863  002E7E  D039               	goto	l9064
  8864  002E80                     l9054:
  8865                           
  8866                           ; BSR set to: 1
  8867                           ;tcpv4.c: 552: {
  8868                           ;tcpv4.c: 553: ;
  8869                           ;tcpv4.c: 554: currentTCB->connectionEvent = RCV_FIN;
  8870  002E80  0E2B               	movlw	43
  8871  002E82  D870               	call	PL409	;call to abstracted procedure
  8872  002E84  64F7               	cpfsgt	tblptrh,c
  8873  002E86  D004               	bra	u14447
  8874  002E88  0E06               	movlw	6
  8875  002E8A  6EF5               	movwf	tablat,c
  8876  002E8C  000C               	tblwt		*
  8877  002E8E  D004               	bra	u14440
  8878  002E90                     u14447:
  8879  002E90  EC73  F011         	call	PL389	;call to abstracted procedure
  8880  002E94  0E06               	movlw	6
  8881  002E96  D01D               	goto	L14
  8882  002E98                     u14440:
  8883  002E98  D02C               	goto	l9064
  8884  002E9A                     l1175:
  8885                           
  8886                           ; BSR set to: 1
  8887  002E9A  A5DF               	btfss	(_tcpHeader+13)& (0+255),2,b
  8888  002E9C  D01C               	goto	l1179
  8889                           
  8890                           ; BSR set to: 1
  8891                           ;tcpv4.c: 557: {
  8892                           ;tcpv4.c: 558: if(tcpHeader.ack)
  8893  002E9E  A9DF               	btfss	(_tcpHeader+13)& (0+255),4,b
  8894  002EA0  D00D               	goto	l9060
  8895                           
  8896                           ; BSR set to: 1
  8897                           ;tcpv4.c: 559: {
  8898                           ;tcpv4.c: 560: ;
  8899                           ;tcpv4.c: 561: currentTCB->connectionEvent = RCV_RSTACK;
  8900  002EA2  0E2B               	movlw	43
  8901  002EA4  D85F               	call	PL409	;call to abstracted procedure
  8902  002EA6  64F7               	cpfsgt	tblptrh,c
  8903  002EA8  D004               	bra	u14477
  8904  002EAA  0E0A               	movlw	10
  8905  002EAC  6EF5               	movwf	tablat,c
  8906  002EAE  000C               	tblwt		*
  8907  002EB0  D004               	bra	u14470
  8908  002EB2                     u14477:
  8909  002EB2  EC73  F011         	call	PL389	;call to abstracted procedure
  8910  002EB6  0E0A               	movlw	10
  8911  002EB8  D00C               	goto	L14
  8912  002EBA                     u14470:
  8913                           
  8914                           ;tcpv4.c: 562: } else
  8915  002EBA  D01B               	goto	l9064
  8916  002EBC                     l9060:
  8917                           
  8918                           ; BSR set to: 1
  8919                           ;tcpv4.c: 563: {
  8920                           ;tcpv4.c: 564: ;
  8921                           ;tcpv4.c: 565: currentTCB->connectionEvent = RCV_RST;
  8922  002EBC  0E2B               	movlw	43
  8923  002EBE  D852               	call	PL409	;call to abstracted procedure
  8924  002EC0  64F7               	cpfsgt	tblptrh,c
  8925  002EC2  D004               	bra	u14487
  8926  002EC4  0E09               	movlw	9
  8927  002EC6  6EF5               	movwf	tablat,c
  8928  002EC8  000C               	tblwt		*
  8929  002ECA  D004               	bra	u14480
  8930  002ECC                     u14487:
  8931  002ECC  EC73  F011         	call	PL389	;call to abstracted procedure
  8932  002ED0  0E09               	movlw	9
  8933  002ED2                     L14:
  8934  002ED2  6EEF               	movwf	indf0,c
  8935  002ED4                     u14480:
  8936  002ED4  D00E               	goto	l9064
  8937  002ED6                     l1179:
  8938                           
  8939                           ; BSR set to: 1
  8940  002ED6  A9DF               	btfss	(_tcpHeader+13)& (0+255),4,b
  8941  002ED8  D00C               	goto	l9064
  8942                           
  8943                           ; BSR set to: 1
  8944                           ;tcpv4.c: 568: {
  8945                           ;tcpv4.c: 569: ;
  8946                           ;tcpv4.c: 570: currentTCB->connectionEvent = RCV_ACK;
  8947  002EDA  0E2B               	movlw	43
  8948  002EDC  D843               	call	PL409	;call to abstracted procedure
  8949  002EDE  64F7               	cpfsgt	tblptrh,c
  8950  002EE0  D004               	bra	u14507
  8951  002EE2  0E04               	movlw	4
  8952  002EE4  6EF5               	movwf	tablat,c
  8953  002EE6  000C               	tblwt		*
  8954  002EE8  D004               	bra	u14500
  8955  002EEA                     u14507:
  8956  002EEA  EC73  F011         	call	PL389	;call to abstracted procedure
  8957  002EEE  0E04               	movlw	4
  8958  002EF0  6EEF               	movwf	indf0,c
  8959  002EF2                     u14500:
  8960  002EF2                     l9064:
  8961                           
  8962                           ;tcpv4.c: 575: }
  8963                           ;tcpv4.c: 577: tcpHeader.ackNumber = ((((uint32_t)tcpHeader.ackNumber&(uint32_t)0xff0000
      +                          00) >> 24) | (((uint32_t)tcpHeader.ackNumber&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)t
      +                          cpHeader.ackNumber&(uint32_t)0x0000ff00) << 8) | (((uint32_t)tcpHeader.ackNumber&(uint32
      +                          _
  8964  002EF2  0101               	movlb	1	; () banked
  8965  002EF4  51DA               	movf	(_tcpHeader+8)& (0+255),w,b
  8966  002EF6  D893               	call	PL597	;call to abstracted procedure
  8967  002EF8  EE21  F0DA         	lfsr	2,_tcpHeader+8
  8968  002EFC  D86F               	call	PL489	;call to abstracted procedure
  8969  002EFE  C1DA  F11F         	movff	_tcpHeader+8,??_TCP_Recv+8
  8970  002F02  C1DB  F120         	movff	_tcpHeader+9,??_TCP_Recv+9
  8971  002F06  C1DC  F121         	movff	_tcpHeader+10,??_TCP_Recv+10
  8972  002F0A  C1DD  F122         	movff	_tcpHeader+11,??_TCP_Recv+11
  8973  002F0E  D87A               	call	PL533	;call to abstracted procedure
  8974  002F10  EE21  F0DA         	lfsr	2,_tcpHeader+8
  8975  002F14  D834               	call	PL435	;call to abstracted procedure
  8976  002F16  6FDA               	movwf	(_tcpHeader+8)& (0+255),b
  8977  002F18  5118               	movf	(??_TCP_Recv+1)& (0+255),w,b
  8978  002F1A  1130               	iorwf	(??_TCP_Recv+25)& (0+255),w,b
  8979  002F1C  6FDB               	movwf	(_tcpHeader+9)& (0+255),b
  8980  002F1E  5119               	movf	(??_TCP_Recv+2)& (0+255),w,b
  8981  002F20  1131               	iorwf	(??_TCP_Recv+26)& (0+255),w,b
  8982  002F22  6FDC               	movwf	(_tcpHeader+10)& (0+255),b
  8983  002F24  511A               	movf	(??_TCP_Recv+3)& (0+255),w,b
  8984  002F26  1132               	iorwf	(??_TCP_Recv+27)& (0+255),w,b
  8985  002F28  6FDD               	movwf	(_tcpHeader+11)& (0+255),b
  8986                           
  8987                           ;tcpv4.c: 578: tcpHeader.sequenceNumber = ((((uint32_t)tcpHeader.sequenceNumber&(uint32_
      +                          t)0xff000000) >> 24) | (((uint32_t)tcpHeader.sequenceNumber&(uint32_t)0x00ff0000) >> 8) 
      +                          | (((uint32_t)tcpHeader.sequenceNumber&(uint32_t)0x0000ff00) << 8) | (((uint32_t)tcpHead
      +                          e
  8988  002F2A  51D6               	movf	(_tcpHeader+4)& (0+255),w,b
  8989  002F2C  D878               	call	PL597	;call to abstracted procedure
  8990  002F2E  EE21  F0D6         	lfsr	2,_tcpHeader+4
  8991  002F32  D854               	call	PL489	;call to abstracted procedure
  8992  002F34  C1D6  F11F         	movff	_tcpHeader+4,??_TCP_Recv+8
  8993  002F38  C1D7  F120         	movff	_tcpHeader+5,??_TCP_Recv+9
  8994  002F3C  C1D8  F121         	movff	_tcpHeader+6,??_TCP_Recv+10
  8995  002F40  C1D9  F122         	movff	_tcpHeader+7,??_TCP_Recv+11
  8996  002F44  D85F               	call	PL533	;call to abstracted procedure
  8997  002F46  EE21  F0D6         	lfsr	2,_tcpHeader+4
  8998  002F4A  D819               	call	PL435	;call to abstracted procedure
  8999  002F4C  6FD6               	movwf	(_tcpHeader+4)& (0+255),b
  9000  002F4E  5118               	movf	(??_TCP_Recv+1)& (0+255),w,b
  9001  002F50  1130               	iorwf	(??_TCP_Recv+25)& (0+255),w,b
  9002  002F52  6FD7               	movwf	(_tcpHeader+5)& (0+255),b
  9003  002F54  5119               	movf	(??_TCP_Recv+2)& (0+255),w,b
  9004  002F56  1131               	iorwf	(??_TCP_Recv+26)& (0+255),w,b
  9005  002F58  6FD8               	movwf	(_tcpHeader+6)& (0+255),b
  9006  002F5A  511A               	movf	(??_TCP_Recv+3)& (0+255),w,b
  9007  002F5C  1132               	iorwf	(??_TCP_Recv+27)& (0+255),w,b
  9008  002F5E  6FD9               	movwf	(_tcpHeader+7)& (0+255),b
  9009                           
  9010                           ; BSR set to: 1
  9011                           ;tcpv4.c: 580: TCP_FiniteStateMachine();
  9012  002F60  EF62  F008         	goto	_TCP_FiniteStateMachine	;wreg free
  9013  002F64                     __end_of_TCP_Recv:
  9014                           	opt stack 0
  9015  002F64                     PL409:
  9016                           	opt stack 12
  9017  002F64  243B               	addwf	_currentTCB,w,c
  9018  002F66  6F17               	movwf	??_TCP_Recv& (0+255),b
  9019  002F68  0E00               	movlw	0
  9020  002F6A  203C               	addwfc	_currentTCB+1,w,c
  9021  002F6C  6F18               	movwf	(??_TCP_Recv+1)& (0+255),b
  9022  002F6E  C117  FFF6         	movff	??_TCP_Recv,tblptrl
  9023  002F72  C118  FFF7         	movff	??_TCP_Recv+1,tblptrh
  9024  002F76  0E00               	movlw	low (__smallconst shr (0+16))
  9025  002F78  6EF8               	movwf	tblptru,c
  9026  002F7A  0E0F               	movlw	(high __ramtop+-1)
  9027  002F7C  0012               	return	
  9028  002F7E                     __end_ofPL409:
  9029                           	opt stack 0
  9030  002F7E                     PL435:
  9031                           	opt stack 12
  9032  002F7E  14DE               	andwf	postinc2,w,c
  9033  002F80  6F27               	movwf	(??_TCP_Recv+16)& (0+255),b
  9034  002F82  0E00               	movlw	0
  9035  002F84  14DE               	andwf	postinc2,w,c
  9036  002F86  6F28               	movwf	(??_TCP_Recv+17)& (0+255),b
  9037  002F88  0E00               	movlw	0
  9038  002F8A  14DE               	andwf	postinc2,w,c
  9039  002F8C  6F29               	movwf	(??_TCP_Recv+18)& (0+255),b
  9040  002F8E  0EFF               	movlw	255
  9041  002F90  14DE               	andwf	postinc2,w,c
  9042  002F92  6F2A               	movwf	(??_TCP_Recv+19)& (0+255),b
  9043  002F94  0E19               	movlw	25
  9044  002F96  D005               	goto	u14510
  9045  002F98                     u14515:
  9046  002F98  90D8               	bcf	status,0,c
  9047  002F9A  332A               	rrcf	(??_TCP_Recv+19)& (0+255),f,b
  9048  002F9C  3329               	rrcf	(??_TCP_Recv+18)& (0+255),f,b
  9049  002F9E  3328               	rrcf	(??_TCP_Recv+17)& (0+255),f,b
  9050  002FA0  3327               	rrcf	(??_TCP_Recv+16)& (0+255),f,b
  9051  002FA2                     u14510:
  9052  002FA2  2EE8               	decfsz	wreg,f,c
  9053  002FA4  D7F9               	goto	u14515
  9054  002FA6  5123               	movf	(??_TCP_Recv+12)& (0+255),w,b
  9055  002FA8  1127               	iorwf	(??_TCP_Recv+16)& (0+255),w,b
  9056  002FAA  6F2B               	movwf	(??_TCP_Recv+20)& (0+255),b
  9057  002FAC  5124               	movf	(??_TCP_Recv+13)& (0+255),w,b
  9058  002FAE  1128               	iorwf	(??_TCP_Recv+17)& (0+255),w,b
  9059  002FB0  6F2C               	movwf	(??_TCP_Recv+21)& (0+255),b
  9060  002FB2  5125               	movf	(??_TCP_Recv+14)& (0+255),w,b
  9061  002FB4  1129               	iorwf	(??_TCP_Recv+18)& (0+255),w,b
  9062  002FB6  6F2D               	movwf	(??_TCP_Recv+22)& (0+255),b
  9063  002FB8  5126               	movf	(??_TCP_Recv+15)& (0+255),w,b
  9064  002FBA  112A               	iorwf	(??_TCP_Recv+19)& (0+255),w,b
  9065  002FBC  6F2E               	movwf	(??_TCP_Recv+23)& (0+255),b
  9066  002FBE  511B               	movf	(??_TCP_Recv+4)& (0+255),w,b
  9067  002FC0  112B               	iorwf	(??_TCP_Recv+20)& (0+255),w,b
  9068  002FC2  6F2F               	movwf	(??_TCP_Recv+24)& (0+255),b
  9069  002FC4  511C               	movf	(??_TCP_Recv+5)& (0+255),w,b
  9070  002FC6  112C               	iorwf	(??_TCP_Recv+21)& (0+255),w,b
  9071  002FC8  6F30               	movwf	(??_TCP_Recv+25)& (0+255),b
  9072  002FCA  511D               	movf	(??_TCP_Recv+6)& (0+255),w,b
  9073  002FCC  112D               	iorwf	(??_TCP_Recv+22)& (0+255),w,b
  9074  002FCE  6F31               	movwf	(??_TCP_Recv+26)& (0+255),b
  9075  002FD0  511E               	movf	(??_TCP_Recv+7)& (0+255),w,b
  9076  002FD2  112E               	iorwf	(??_TCP_Recv+23)& (0+255),w,b
  9077  002FD4  6F32               	movwf	(??_TCP_Recv+27)& (0+255),b
  9078  002FD6  5117               	movf	??_TCP_Recv& (0+255),w,b
  9079  002FD8  112F               	iorwf	(??_TCP_Recv+24)& (0+255),w,b
  9080  002FDA  0012               	return	
  9081  002FDC                     __end_ofPL435:
  9082                           	opt stack 0
  9083  002FDC                     PL489:
  9084                           	opt stack 12
  9085  002FDC  0E00               	movlw	0
  9086  002FDE  14DE               	andwf	postinc2,w,c
  9087  002FE0  6F1B               	movwf	(??_TCP_Recv+4)& (0+255),b
  9088  002FE2  0EFF               	movlw	255
  9089  002FE4  14DE               	andwf	postinc2,w,c
  9090  002FE6  6F1C               	movwf	(??_TCP_Recv+5)& (0+255),b
  9091  002FE8  0E00               	movlw	0
  9092  002FEA  14DE               	andwf	postinc2,w,c
  9093  002FEC  6F1D               	movwf	(??_TCP_Recv+6)& (0+255),b
  9094  002FEE  0E00               	movlw	0
  9095  002FF0  14DE               	andwf	postinc2,w,c
  9096  002FF2  6F1E               	movwf	(??_TCP_Recv+7)& (0+255),b
  9097  002FF4  C11D  F11E         	movff	??_TCP_Recv+6,??_TCP_Recv+7
  9098  002FF8  C11C  F11D         	movff	??_TCP_Recv+5,??_TCP_Recv+6
  9099  002FFC  C11B  F11C         	movff	??_TCP_Recv+4,??_TCP_Recv+5
  9100  003000  6B1B               	clrf	(??_TCP_Recv+4)& (0+255),b
  9101  003002  0012               	return	
  9102  003004                     __end_ofPL489:
  9103                           	opt stack 0
  9104  003004                     PL533:
  9105                           	opt stack 12
  9106  003004  C120  F11F         	movff	??_TCP_Recv+9,??_TCP_Recv+8
  9107  003008  C121  F120         	movff	??_TCP_Recv+10,??_TCP_Recv+9
  9108  00300C  C122  F121         	movff	??_TCP_Recv+11,??_TCP_Recv+10
  9109  003010  6B22               	clrf	(??_TCP_Recv+11)& (0+255),b
  9110  003012  6B23               	clrf	(??_TCP_Recv+12)& (0+255),b
  9111  003014  5120               	movf	(??_TCP_Recv+9)& (0+255),w,b
  9112  003016  6F24               	movwf	(??_TCP_Recv+13)& (0+255),b
  9113  003018  6B25               	clrf	(??_TCP_Recv+14)& (0+255),b
  9114  00301A  6B26               	clrf	(??_TCP_Recv+15)& (0+255),b
  9115  00301C  0C00               	retlw	0
  9116  00301E                     __end_ofPL533:
  9117                           	opt stack 0
  9118  00301E                     PL597:
  9119                           	opt stack 12
  9120  00301E  6F17               	movwf	??_TCP_Recv& (0+255),b
  9121  003020  6B18               	clrf	(??_TCP_Recv+1)& (0+255),b
  9122  003022  6B19               	clrf	(??_TCP_Recv+2)& (0+255),b
  9123  003024  6B1A               	clrf	(??_TCP_Recv+3)& (0+255),b
  9124  003026  C117  F11A         	movff	??_TCP_Recv,??_TCP_Recv+3
  9125  00302A  6B19               	clrf	(??_TCP_Recv+2)& (0+255),b
  9126  00302C  6B18               	clrf	(??_TCP_Recv+1)& (0+255),b
  9127  00302E  6B17               	clrf	??_TCP_Recv& (0+255),b
  9128  003030  0012               	return	
  9129  003032                     __end_ofPL597:
  9130                           	opt stack 0
  9131  003032                     PL649:
  9132                           	opt stack 12
  9133  003032  0009               	tblrd		*+
  9134  003034  CFF5 F119          	movff	tablat,??_TCP_Recv+2
  9135  003038  0009               	tblrd		*+
  9136  00303A  CFF5 F11A          	movff	tablat,??_TCP_Recv+3
  9137  00303E  0012               	return	
  9138  003040                     __end_ofPL649:
  9139                           	opt stack 0
  9140  003040                     PL695:
  9141                           	opt stack 12
  9142  003040  CFEE F119          	movff	postinc0,??_TCP_Recv+2
  9143  003044  CFEE F11A          	movff	postinc0,??_TCP_Recv+3
  9144  003048  0012               	return	
  9145  00304A                     __end_ofPL695:
  9146                           	opt stack 0
  9147  00304A                     PL697:
  9148                           	opt stack 12
  9149  00304A  6E18               	movwf	ETH_ReadBlock@buffer+1,c
  9150  00304C  6A1A               	clrf	ETH_ReadBlock@length+1,c
  9151  00304E  0E14               	movlw	20
  9152  003050  6E19               	movwf	ETH_ReadBlock@length,c
  9153  003052  0C14               	retlw	20
  9154  003054                     __end_ofPL697:
  9155                           	opt stack 0
  9156                           tosu	equ	0xFFF
  9157                           tosh	equ	0xFFE
  9158                           tosl	equ	0xFFD
  9159                           pclath	equ	0xFFA
  9160                           tblptru	equ	0xFF8
  9161                           tblptrh	equ	0xFF7
  9162                           tblptrl	equ	0xFF6
  9163                           tablat	equ	0xFF5
  9164                           prodh	equ	0xFF4
  9165                           prodl	equ	0xFF3
  9166                           intcon	equ	0xFF2
  9167                           indf0	equ	0xFEF
  9168                           postinc0	equ	0xFEE
  9169                           fsr0h	equ	0xFEA
  9170                           fsr0l	equ	0xFE9
  9171                           wreg	equ	0xFE8
  9172                           indf1	equ	0xFE7
  9173                           postinc1	equ	0xFE6
  9174                           postdec1	equ	0xFE5
  9175                           plusw1	equ	0xFE3
  9176                           fsr1h	equ	0xFE2
  9177                           fsr1l	equ	0xFE1
  9178                           indf2	equ	0xFDF
  9179                           postinc2	equ	0xFDE
  9180                           postdec2	equ	0xFDD
  9181                           plusw2	equ	0xFDB
  9182                           fsr2h	equ	0xFDA
  9183                           fsr2l	equ	0xFD9
  9184                           status	equ	0xFD8
  9185                           
  9186 ;; *************** function _TCP_ParseTCPOptions *****************
  9187 ;; Defined at:
  9188 ;;		line 356 in file "../../TCPIP Library/source/tcpv4.c"
  9189 ;; Parameters:    Size  Location     Type
  9190 ;;		None
  9191 ;; Auto vars:     Size  Location     Type
  9192 ;;  tcpOptionsSi    2   30[COMRAM] unsigned int 
  9193 ;;  opt             1   29[COMRAM] unsigned char 
  9194 ;;  ret             1   28[COMRAM] unsigned char 
  9195 ;; Return value:  Size  Location     Type
  9196 ;;                  1    wreg      unsigned char 
  9197 ;; Registers used:
  9198 ;;		wreg, status,2, status,0, cstack
  9199 ;; Tracked objects:
  9200 ;;		On entry : F/1
  9201 ;;		On exit  : F/1
  9202 ;;		Unchanged: 0/0
  9203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9205 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9206 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9207 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9208 ;;Total ram usage:        6 bytes
  9209 ;; Hardware stack levels used:    1
  9210 ;; Hardware stack levels required when called:   10
  9211 ;; This function calls:
  9212 ;;		_ETH_Dump
  9213 ;;		_ETH_Read16
  9214 ;;		_ETH_Read8
  9215 ;; This function is called by:
  9216 ;;		_TCP_Recv
  9217 ;; This function uses a non-reentrant model
  9218 ;;
  9219                           
  9220                           	psect	text39
  9221  004C10                     __ptext39:
  9222                           	opt stack 0
  9223  004C10                     _TCP_ParseTCPOptions:
  9224                           	opt stack 16
  9225                           
  9226                           ; BSR set to: 1
  9227                           ;tcpv4.c: 358: uint8_t opt;
  9228                           ;tcpv4.c: 359: uint16_t tcpOptionsSize;
  9229                           ;tcpv4.c: 360: bool ret;
  9230                           ;tcpv4.c: 362: ret = 0;
  9231                           
  9232                           ; BSR set to: 1
  9233                           ;incstack = 0
  9234  004C10  6A1D               	clrf	TCP_ParseTCPOptions@ret,c
  9235                           
  9236                           ; BSR set to: 1
  9237                           ;tcpv4.c: 364: tcpOptionsSize = (uint16_t)((tcpHeader.dataOffset << 2) - sizeof(tcpHeade
      +                          r_t));
  9238  004C12  39DE               	swapf	(_tcpHeader+12)& (0+255),w,b
  9239  004C14  0B0F               	andlw	15
  9240  004C16  6E1B               	movwf	??_TCP_ParseTCPOptions& (0+255),c
  9241  004C18  6A1C               	clrf	(??_TCP_ParseTCPOptions+1)& (0+255),c
  9242  004C1A  90D8               	bcf	status,0,c
  9243  004C1C  361B               	rlcf	??_TCP_ParseTCPOptions,f,c
  9244  004C1E  361C               	rlcf	??_TCP_ParseTCPOptions+1,f,c
  9245  004C20  90D8               	bcf	status,0,c
  9246  004C22  361B               	rlcf	??_TCP_ParseTCPOptions,f,c
  9247  004C24  361C               	rlcf	??_TCP_ParseTCPOptions+1,f,c
  9248  004C26  0EEC               	movlw	236
  9249  004C28  241B               	addwf	??_TCP_ParseTCPOptions,w,c
  9250  004C2A  6E1F               	movwf	TCP_ParseTCPOptions@tcpOptionsSize,c
  9251  004C2C  0EFF               	movlw	255
  9252  004C2E  201C               	addwfc	??_TCP_ParseTCPOptions+1,w,c
  9253  004C30  6E20               	movwf	TCP_ParseTCPOptions@tcpOptionsSize+1,c
  9254                           
  9255                           ;tcpv4.c: 366: if (tcpOptionsSize > 0)
  9256  004C32  101F               	iorwf	TCP_ParseTCPOptions@tcpOptionsSize,w,c
  9257  004C34  E06B               	bz	l8558
  9258                           
  9259                           ; BSR set to: 1
  9260                           ;tcpv4.c: 367: {
  9261                           ;tcpv4.c: 370: tcpMss = 536;
  9262  004C36  0E02               	movlw	2
  9263  004C38  6E44               	movwf	_tcpMss+1,c
  9264  004C3A  0E18               	movlw	24
  9265  004C3C  6E43               	movwf	_tcpMss,c
  9266                           
  9267                           ; BSR set to: 1
  9268                           ;tcpv4.c: 372: if(tcpHeader.syn)
  9269  004C3E  A3DF               	btfss	(_tcpHeader+13)& (0+255),1,b
  9270  004C40  D062               	goto	l8556
  9271  004C42  D059               	goto	l8554
  9272  004C44                     l8512:
  9273                           
  9274                           ; BSR set to: 1
  9275                           ;tcpv4.c: 376: {
  9276                           ;tcpv4.c: 377: opt = ETH_Read8();
  9277  004C44  ECC8  F030         	call	_ETH_Read8	;wreg free
  9278  004C48  6E1E               	movwf	TCP_ParseTCPOptions@opt,c
  9279                           
  9280                           ;tcpv4.c: 378: switch (opt)
  9281  004C4A  D04E               	goto	l8552
  9282  004C4C                     l8514:
  9283                           
  9284                           ; BSR set to: 1
  9285                           ;tcpv4.c: 382: if (tcpOptionsSize)
  9286  004C4C  501F               	movf	TCP_ParseTCPOptions@tcpOptionsSize,w,c
  9287  004C4E  1020               	iorwf	TCP_ParseTCPOptions@tcpOptionsSize+1,w,c
  9288  004C50  E005               	bz	l8520
  9289                           
  9290                           ; BSR set to: 1
  9291                           ;tcpv4.c: 383: {
  9292                           ;tcpv4.c: 385: ETH_Dump(tcpOptionsSize);
  9293  004C52  D860               	call	PL691	;call to abstracted procedure
  9294  004C54  EC5A  F030         	call	_ETH_Dump	;wreg free
  9295                           
  9296                           ; BSR set to: 1
  9297                           ;tcpv4.c: 386: tcpOptionsSize = 0;
  9298  004C58  6A1F               	clrf	TCP_ParseTCPOptions@tcpOptionsSize,c
  9299  004C5A  6A20               	clrf	TCP_ParseTCPOptions@tcpOptionsSize+1,c
  9300  004C5C                     l8520:
  9301                           
  9302                           ; BSR set to: 1
  9303                           ;tcpv4.c: 387: }
  9304                           ;tcpv4.c: 388: ret = 1;
  9305  004C5C  0E01               	movlw	1
  9306  004C5E  6E1D               	movwf	TCP_ParseTCPOptions@ret,c
  9307                           
  9308                           ;tcpv4.c: 389: break;
  9309  004C60  D04A               	goto	l8554
  9310  004C62                     l8522:
  9311                           
  9312                           ; BSR set to: 1
  9313                           ;tcpv4.c: 394: if (tcpOptionsSize >= 3)
  9314  004C62  5020               	movf	TCP_ParseTCPOptions@tcpOptionsSize+1,w,c
  9315  004C64  E103               	bnz	u12310
  9316  004C66  0E03               	movlw	3
  9317  004C68  5C1F               	subwf	TCP_ParseTCPOptions@tcpOptionsSize,w,c
  9318  004C6A  E31D               	bnc	l1142
  9319  004C6C                     u12310:
  9320                           
  9321                           ; BSR set to: 1
  9322                           ;tcpv4.c: 395: {
  9323                           ;tcpv4.c: 396: opt = ETH_Read8();
  9324  004C6C  ECC8  F030         	call	_ETH_Read8	;wreg free
  9325  004C70  6E1E               	movwf	TCP_ParseTCPOptions@opt,c
  9326                           
  9327                           ; BSR set to: 1
  9328                           ;tcpv4.c: 397: if (opt == 0x04)
  9329  004C72  0E04               	movlw	4
  9330  004C74  181E               	xorwf	TCP_ParseTCPOptions@opt,w,c
  9331  004C76  E114               	bnz	l1143
  9332                           
  9333                           ; BSR set to: 1
  9334                           ;tcpv4.c: 398: {
  9335                           ;tcpv4.c: 400: tcpMss = ETH_Read16();
  9336  004C78  EC61  F02F         	call	_ETH_Read16	;wreg free
  9337  004C7C  C017  F043         	movff	?_ETH_Read16,_tcpMss
  9338  004C80  C018  F044         	movff	?_ETH_Read16+1,_tcpMss+1
  9339                           
  9340                           ; BSR set to: 1
  9341                           ;tcpv4.c: 402: tcpOptionsSize = tcpOptionsSize - 3;
  9342  004C84  0EFD               	movlw	253
  9343  004C86  261F               	addwf	TCP_ParseTCPOptions@tcpOptionsSize,f,c
  9344  004C88  0EFF               	movlw	255
  9345  004C8A  2220               	addwfc	TCP_ParseTCPOptions@tcpOptionsSize+1,f,c
  9346                           
  9347                           ; BSR set to: 1
  9348                           ;tcpv4.c: 405: if (tcpMss > 1460u)
  9349  004C8C  0EB5               	movlw	181
  9350  004C8E  5C43               	subwf	_tcpMss,w,c
  9351  004C90  0E05               	movlw	5
  9352  004C92  5844               	subwfb	_tcpMss+1,w,c
  9353  004C94  E3E3               	bnc	l8520
  9354                           
  9355                           ; BSR set to: 1
  9356                           ;tcpv4.c: 406: {
  9357                           ;tcpv4.c: 407: tcpMss = 1460u;
  9358  004C96  0E05               	movlw	5
  9359  004C98  6E44               	movwf	_tcpMss+1,c
  9360  004C9A  0EB4               	movlw	180
  9361  004C9C  6E43               	movwf	_tcpMss,c
  9362  004C9E  D7DE               	goto	l8520
  9363  004CA0                     l1143:
  9364                           
  9365                           ; BSR set to: 1
  9366                           ;tcpv4.c: 412: {
  9367                           ;tcpv4.c: 414: ;
  9368                           ;tcpv4.c: 416: tcpOptionsSize = 0;
  9369  004CA0  6A1F               	clrf	TCP_ParseTCPOptions@tcpOptionsSize,c
  9370  004CA2  6A20               	clrf	TCP_ParseTCPOptions@tcpOptionsSize+1,c
  9371  004CA4  D028               	goto	l8554
  9372  004CA6                     l1142:
  9373                           
  9374                           ; BSR set to: 1
  9375                           ;tcpv4.c: 419: {
  9376                           ;tcpv4.c: 421: tcpOptionsSize = 0;
  9377  004CA6  6A1F               	clrf	TCP_ParseTCPOptions@tcpOptionsSize,c
  9378  004CA8  6A20               	clrf	TCP_ParseTCPOptions@tcpOptionsSize+1,c
  9379                           
  9380                           ;tcpv4.c: 422: ret = 0;
  9381  004CAA  6A1D               	clrf	TCP_ParseTCPOptions@ret,c
  9382  004CAC  D024               	goto	l8554
  9383  004CAE                     l8536:
  9384                           
  9385                           ; BSR set to: 1
  9386                           ;tcpv4.c: 426: ;
  9387                           ;tcpv4.c: 427: opt = ETH_Read8();
  9388  004CAE  ECC8  F030         	call	_ETH_Read8	;wreg free
  9389  004CB2  6E1E               	movwf	TCP_ParseTCPOptions@opt,c
  9390                           
  9391                           ; BSR set to: 1
  9392                           ;tcpv4.c: 428: tcpOptionsSize--;
  9393  004CB4  061F               	decf	TCP_ParseTCPOptions@tcpOptionsSize,f,c
  9394  004CB6  A0D8               	btfss	status,0,c
  9395  004CB8  0620               	decf	TCP_ParseTCPOptions@tcpOptionsSize+1,f,c
  9396                           
  9397                           ; BSR set to: 1
  9398                           ;tcpv4.c: 430: if (opt > 1)
  9399  004CBA  0E01               	movlw	1
  9400  004CBC  641E               	cpfsgt	TCP_ParseTCPOptions@opt,c
  9401  004CBE  D7F3               	goto	l1142
  9402                           
  9403                           ; BSR set to: 1
  9404                           ;tcpv4.c: 431: {
  9405                           ;tcpv4.c: 433: opt = opt - 2;
  9406  004CC0  0EFE               	movlw	254
  9407  004CC2  261E               	addwf	TCP_ParseTCPOptions@opt,f,c
  9408                           
  9409                           ;tcpv4.c: 434: if (opt <= tcpOptionsSize)
  9410  004CC4  501E               	movf	TCP_ParseTCPOptions@opt,w,c
  9411  004CC6  6E1B               	movwf	??_TCP_ParseTCPOptions& (0+255),c
  9412  004CC8  6A1C               	clrf	(??_TCP_ParseTCPOptions+1)& (0+255),c
  9413  004CCA  501B               	movf	??_TCP_ParseTCPOptions,w,c
  9414  004CCC  5C1F               	subwf	TCP_ParseTCPOptions@tcpOptionsSize,w,c
  9415  004CCE  501C               	movf	??_TCP_ParseTCPOptions+1,w,c
  9416  004CD0  5820               	subwfb	TCP_ParseTCPOptions@tcpOptionsSize+1,w,c
  9417  004CD2  E3E9               	bnc	l1142
  9418                           
  9419                           ; BSR set to: 1
  9420                           ;tcpv4.c: 435: {
  9421                           ;tcpv4.c: 437: ETH_Dump(opt);
  9422  004CD4  C01E  F017         	movff	TCP_ParseTCPOptions@opt,ETH_Dump@length
  9423  004CD8  6A18               	clrf	ETH_Dump@length+1,c
  9424  004CDA  EC5A  F030         	call	_ETH_Dump	;wreg free
  9425                           
  9426                           ; BSR set to: 1
  9427                           ;tcpv4.c: 438: tcpOptionsSize = tcpOptionsSize - opt;
  9428  004CDE  501E               	movf	TCP_ParseTCPOptions@opt,w,c
  9429  004CE0  5E1F               	subwf	TCP_ParseTCPOptions@tcpOptionsSize,f,c
  9430  004CE2  0E00               	movlw	0
  9431  004CE4  5A20               	subwfb	TCP_ParseTCPOptions@tcpOptionsSize+1,f,c
  9432  004CE6  D7BA               	goto	l8520
  9433  004CE8                     l8552:
  9434                           
  9435                           ; BSR set to: 1
  9436  004CE8  501E               	movf	TCP_ParseTCPOptions@opt,w,c
  9437                           
  9438                           ; Switch size 1, requested type "space"
  9439                           ; Number of cases is 3, Range of values is 0 to 2
  9440                           ; switch strategies available:
  9441                           ; Name         Instructions Cycles
  9442                           ; simple_byte           10     6 (average)
  9443                           ;	Chosen strategy is simple_byte
  9444  004CEA  E0B0               	bz	l8514
  9445  004CEC  0A01               	xorlw	1	; case 1
  9446  004CEE  E003               	bz	l8554
  9447  004CF0  0A03               	xorlw	3	; case 2
  9448  004CF2  E0B7               	bz	l8522
  9449  004CF4  D7DC               	goto	l8536
  9450  004CF6                     l8554:
  9451                           
  9452                           ; BSR set to: 1
  9453  004CF6  061F               	decf	TCP_ParseTCPOptions@tcpOptionsSize,f,c
  9454  004CF8  A0D8               	btfss	status,0,c
  9455  004CFA  0620               	decf	TCP_ParseTCPOptions@tcpOptionsSize+1,f,c
  9456  004CFC  281F               	incf	TCP_ParseTCPOptions@tcpOptionsSize,w,c
  9457  004CFE  E1A2               	bnz	l8512
  9458  004D00  2820               	incf	TCP_ParseTCPOptions@tcpOptionsSize+1,w,c
  9459  004D02  E006               	bz	l1154
  9460  004D04  D79F               	goto	l8512
  9461  004D06                     l8556:
  9462                           
  9463                           ; BSR set to: 1
  9464                           ;tcpv4.c: 459: {
  9465                           ;tcpv4.c: 460: ETH_Dump(tcpOptionsSize);
  9466  004D06  D806               	call	PL691	;call to abstracted procedure
  9467  004D08  EC5A  F030         	call	_ETH_Dump	;wreg free
  9468  004D0C                     l8558:
  9469                           
  9470                           ; BSR set to: 1
  9471                           ;tcpv4.c: 461: ret = 1;
  9472  004D0C  0E01               	movlw	1
  9473  004D0E  6E1D               	movwf	TCP_ParseTCPOptions@ret,c
  9474  004D10                     l1154:
  9475                           
  9476                           ; BSR set to: 1
  9477                           ;tcpv4.c: 466: }
  9478                           ;tcpv4.c: 468: return ret;
  9479  004D10  501D               	movf	TCP_ParseTCPOptions@ret,w,c
  9480                           
  9481                           ; BSR set to: 1
  9482  004D12  0012               	return		;funcret
  9483  004D14                     __end_of_TCP_ParseTCPOptions:
  9484                           	opt stack 0
  9485  004D14                     PL691:
  9486                           	opt stack 16
  9487  004D14  C01F  F017         	movff	TCP_ParseTCPOptions@tcpOptionsSize,ETH_Dump@length
  9488  004D18  C020  F018         	movff	TCP_ParseTCPOptions@tcpOptionsSize+1,ETH_Dump@length+1
  9489  004D1C  0012               	return	
  9490  004D1E                     __end_ofPL691:
  9491                           	opt stack 0
  9492                           tosu	equ	0xFFF
  9493                           tosh	equ	0xFFE
  9494                           tosl	equ	0xFFD
  9495                           pclath	equ	0xFFA
  9496                           tblptru	equ	0xFF8
  9497                           tblptrh	equ	0xFF7
  9498                           tblptrl	equ	0xFF6
  9499                           tablat	equ	0xFF5
  9500                           prodh	equ	0xFF4
  9501                           prodl	equ	0xFF3
  9502                           intcon	equ	0xFF2
  9503                           indf0	equ	0xFEF
  9504                           postinc0	equ	0xFEE
  9505                           fsr0h	equ	0xFEA
  9506                           fsr0l	equ	0xFE9
  9507                           wreg	equ	0xFE8
  9508                           indf1	equ	0xFE7
  9509                           postinc1	equ	0xFE6
  9510                           postdec1	equ	0xFE5
  9511                           plusw1	equ	0xFE3
  9512                           fsr1h	equ	0xFE2
  9513                           fsr1l	equ	0xFE1
  9514                           indf2	equ	0xFDF
  9515                           postinc2	equ	0xFDE
  9516                           postdec2	equ	0xFDD
  9517                           plusw2	equ	0xFDB
  9518                           fsr2h	equ	0xFDA
  9519                           fsr2l	equ	0xFD9
  9520                           status	equ	0xFD8
  9521                           
  9522 ;; *************** function _ETH_Read8 *****************
  9523 ;; Defined at:
  9524 ;;		line 380 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
  9525 ;; Parameters:    Size  Location     Type
  9526 ;;		None
  9527 ;; Auto vars:     Size  Location     Type
  9528 ;;  ret             1   22[COMRAM] unsigned char 
  9529 ;; Return value:  Size  Location     Type
  9530 ;;                  1    wreg      unsigned char 
  9531 ;; Registers used:
  9532 ;;		wreg, status,2, status,0, cstack
  9533 ;; Tracked objects:
  9534 ;;		On entry : E/0
  9535 ;;		On exit  : F/1
  9536 ;;		Unchanged: 0/0
  9537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9539 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9541 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9542 ;;Total ram usage:        1 bytes
  9543 ;; Hardware stack levels used:    1
  9544 ;; Hardware stack levels required when called:    9
  9545 ;; This function calls:
  9546 ;;		_ETH_EdataRead
  9547 ;; This function is called by:
  9548 ;;		_DHCP_Handler
  9549 ;;		_TCP_ParseTCPOptions
  9550 ;; This function uses a non-reentrant model
  9551 ;;
  9552                           
  9553                           	psect	text40
  9554  006190                     __ptext40:
  9555                           	opt stack 0
  9556  006190                     _ETH_Read8:
  9557                           	opt stack 16
  9558                           
  9559                           ;j60_driver.c: 382: uint8_t ret = 0;
  9560                           
  9561                           ; BSR set to: 1
  9562                           ;incstack = 0
  9563  006190  6A17               	clrf	ETH_Read8@ret,c
  9564                           
  9565                           ;j60_driver.c: 383: if(rxPacketStatusVector.byteCount >= sizeof(ret))
  9566  006192  0101               	movlb	1	; () banked
  9567  006194  51CC               	movf	_rxPacketStatusVector& (0+255),w,b
  9568  006196  11CD               	iorwf	(_rxPacketStatusVector+1)& (0+255),w,b
  9569  006198  E007               	bz	l525
  9570  00619A                     i5L__ptext81:
  9571                           	opt stack 0
  9572  00619A                     i5L_ETH_EdataRead:
  9573                           	opt stack 0
  9574  00619A                     i5Ll7562:
  9575                           	opt stack 16
  9576  00619A  CF61 FE7E          	movff	3937,_errataTemp	;# 
  9577  00619E                     i5Ll7564:
  9578                           	opt stack 16
  9579                           
  9580                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
  9581  00619E  010E               	movlb	14	; () banked
  9582  0061A0  517E               	movf	126,w,b
  9583  0061A2                     i5Ll460:
  9584                           	opt stack 16
  9585  0061A2  6E17               	movwf	ETH_Read8@ret,c
  9586                           
  9587                           ; BSR set to: 14
  9588                           ;j60_driver.c: 386: rxPacketStatusVector.byteCount -= sizeof(ret);
  9589                           
  9590                           ; BSR set to: 1
  9591                           ;j60_driver.c: 387: ethData.error = 0;
  9592  0061A4  D804               	call	PL673	;call to abstracted procedure
  9593                           
  9594                           ;j60_driver.c: 388: }
  9595  0061A6  D001               	goto	l8208
  9596  0061A8                     l525:
  9597                           
  9598                           ; BSR set to: 1
  9599                           ;j60_driver.c: 389: else
  9600                           ;j60_driver.c: 390: {
  9601                           ;j60_driver.c: 391: ethData.error = 1;
  9602  0061A8  81BD               	bsf	_ethData& (0+255),0,b	;volatile
  9603  0061AA                     l8208:
  9604                           
  9605                           ; BSR set to: 1
  9606                           ;j60_driver.c: 392: }
  9607                           ;j60_driver.c: 393: return ret;
  9608  0061AA  5017               	movf	ETH_Read8@ret,w,c
  9609                           
  9610                           ; BSR set to: 1
  9611  0061AC  0012               	return		;funcret
  9612  0061AE                     __end_of_ETH_Read8:
  9613                           	opt stack 0
  9614  0061AE                     PL673:
  9615                           	opt stack 17
  9616  0061AE  0101               	movlb	1	; () banked
  9617  0061B0  07CC               	decf	_rxPacketStatusVector& (0+255),f,b
  9618  0061B2  A0D8               	btfss	status,0,c
  9619  0061B4  07CD               	decf	(_rxPacketStatusVector+1)& (0+255),f,b
  9620  0061B6  91BD               	bcf	_ethData& (0+255),0,b	;volatile
  9621  0061B8  0012               	return	
  9622  0061BA                     __end_ofPL673:
  9623                           	opt stack 0
  9624                           tosu	equ	0xFFF
  9625                           tosh	equ	0xFFE
  9626                           tosl	equ	0xFFD
  9627                           pclath	equ	0xFFA
  9628                           tblptru	equ	0xFF8
  9629                           tblptrh	equ	0xFF7
  9630                           tblptrl	equ	0xFF6
  9631                           tablat	equ	0xFF5
  9632                           prodh	equ	0xFF4
  9633                           prodl	equ	0xFF3
  9634                           intcon	equ	0xFF2
  9635                           indf0	equ	0xFEF
  9636                           postinc0	equ	0xFEE
  9637                           fsr0h	equ	0xFEA
  9638                           fsr0l	equ	0xFE9
  9639                           wreg	equ	0xFE8
  9640                           indf1	equ	0xFE7
  9641                           postinc1	equ	0xFE6
  9642                           postdec1	equ	0xFE5
  9643                           plusw1	equ	0xFE3
  9644                           fsr1h	equ	0xFE2
  9645                           fsr1l	equ	0xFE1
  9646                           indf2	equ	0xFDF
  9647                           postinc2	equ	0xFDE
  9648                           postdec2	equ	0xFDD
  9649                           plusw2	equ	0xFDB
  9650                           fsr2h	equ	0xFDA
  9651                           fsr2l	equ	0xFD9
  9652                           status	equ	0xFD8
  9653                           
  9654 ;; *************** function _ETH_Read16 *****************
  9655 ;; Defined at:
  9656 ;;		line 399 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
  9657 ;; Parameters:    Size  Location     Type
  9658 ;;		None
  9659 ;; Auto vars:     Size  Location     Type
  9660 ;;  ret             2   24[COMRAM] unsigned int 
  9661 ;; Return value:  Size  Location     Type
  9662 ;;                  2   22[COMRAM] unsigned int 
  9663 ;; Registers used:
  9664 ;;		wreg, status,2, status,0, cstack
  9665 ;; Tracked objects:
  9666 ;;		On entry : E/0
  9667 ;;		On exit  : F/1
  9668 ;;		Unchanged: 0/0
  9669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9670 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9671 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9673 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9674 ;;Total ram usage:        4 bytes
  9675 ;; Hardware stack levels used:    1
  9676 ;; Hardware stack levels required when called:    9
  9677 ;; This function calls:
  9678 ;;		_ETH_EdataRead
  9679 ;; This function is called by:
  9680 ;;		_DHCP_Handler
  9681 ;;		_TCP_ParseTCPOptions
  9682 ;; This function uses a non-reentrant model
  9683 ;;
  9684                           
  9685                           	psect	text41
  9686  005EC2                     __ptext41:
  9687                           	opt stack 0
  9688  005EC2                     _ETH_Read16:
  9689                           	opt stack 16
  9690                           
  9691                           ;j60_driver.c: 401: uint16_t ret = 0;
  9692                           
  9693                           ; BSR set to: 1
  9694                           ;incstack = 0
  9695  005EC2  6A19               	clrf	ETH_Read16@ret,c
  9696  005EC4  6A1A               	clrf	ETH_Read16@ret+1,c
  9697                           
  9698                           ;j60_driver.c: 402: if(rxPacketStatusVector.byteCount >= sizeof(ret))
  9699  005EC6  0101               	movlb	1	; () banked
  9700  005EC8  51CD               	movf	(_rxPacketStatusVector+1)& (0+255),w,b
  9701  005ECA  E103               	bnz	u11710
  9702  005ECC  0E02               	movlw	2
  9703  005ECE  5DCC               	subwf	_rxPacketStatusVector& (0+255),w,b
  9704  005ED0  E30D               	bnc	l530
  9705  005ED2                     u11710:
  9706  005ED2                     i6L__ptext81:
  9707                           	opt stack 0
  9708  005ED2                     i6L_ETH_EdataRead:
  9709                           	opt stack 0
  9710  005ED2                     i6Ll7562:
  9711                           	opt stack 16
  9712  005ED2  CF61 FE7E          	movff	3937,_errataTemp	;# 
  9713  005ED6                     i6Ll7564:
  9714                           	opt stack 16
  9715                           
  9716                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
  9717  005ED6  010E               	movlb	14	; () banked
  9718  005ED8  517E               	movf	126,w,b
  9719  005EDA                     i6Ll460:
  9720                           	opt stack 16
  9721  005EDA  6E1A               	movwf	ETH_Read16@ret+1,c
  9722  005EDC                     i7L__ptext81:
  9723                           	opt stack 0
  9724  005EDC                     i7L_ETH_EdataRead:
  9725                           	opt stack 0
  9726  005EDC                     i7Ll7562:
  9727                           	opt stack 16
  9728  005EDC  CF61 FE7E          	movff	3937,_errataTemp	;# 
  9729  005EE0                     i7Ll7564:
  9730                           	opt stack 16
  9731                           
  9732                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
  9733  005EE0  010E               	movlb	14	; () banked
  9734  005EE2  517E               	movf	126,w,b
  9735  005EE4                     i7Ll460:
  9736                           	opt stack 16
  9737  005EE4  6E19               	movwf	ETH_Read16@ret,c
  9738                           
  9739                           ; BSR set to: 14
  9740                           ;j60_driver.c: 406: rxPacketStatusVector.byteCount -= sizeof(ret);
  9741  005EE6  0E02               	movlw	2
  9742                           
  9743                           ; BSR set to: 1
  9744                           ;j60_driver.c: 407: ethData.error = 0;
  9745  005EE8  D807               	call	PL663	;call to abstracted procedure
  9746                           
  9747                           ;j60_driver.c: 408: }
  9748  005EEA  D001               	goto	l531
  9749  005EEC                     l530:
  9750                           
  9751                           ; BSR set to: 1
  9752                           ;j60_driver.c: 409: else
  9753                           ;j60_driver.c: 410: {
  9754                           ;j60_driver.c: 411: ethData.error = 1;
  9755  005EEC  81BD               	bsf	_ethData& (0+255),0,b	;volatile
  9756  005EEE                     l531:
  9757                           
  9758                           ; BSR set to: 1
  9759                           ;j60_driver.c: 412: }
  9760                           ;j60_driver.c: 413: return ret;
  9761  005EEE  C019  F017         	movff	ETH_Read16@ret,?_ETH_Read16
  9762  005EF2  C01A  F018         	movff	ETH_Read16@ret+1,?_ETH_Read16+1
  9763                           
  9764                           ; BSR set to: 1
  9765  005EF6  0012               	return		;funcret
  9766  005EF8                     __end_of_ETH_Read16:
  9767                           	opt stack 0
  9768  005EF8                     PL663:
  9769                           	opt stack 16
  9770  005EF8  0101               	movlb	1	; () banked
  9771  005EFA  5FCC               	subwf	_rxPacketStatusVector& (0+255),f,b
  9772  005EFC  0E00               	movlw	0
  9773  005EFE  5BCD               	subwfb	(_rxPacketStatusVector+1)& (0+255),f,b
  9774  005F00  91BD               	bcf	_ethData& (0+255),0,b	;volatile
  9775  005F02  0C00               	retlw	0
  9776  005F04                     __end_ofPL663:
  9777                           	opt stack 0
  9778                           tosu	equ	0xFFF
  9779                           tosh	equ	0xFFE
  9780                           tosl	equ	0xFFD
  9781                           pclath	equ	0xFFA
  9782                           tblptru	equ	0xFF8
  9783                           tblptrh	equ	0xFF7
  9784                           tblptrl	equ	0xFF6
  9785                           tablat	equ	0xFF5
  9786                           prodh	equ	0xFF4
  9787                           prodl	equ	0xFF3
  9788                           intcon	equ	0xFF2
  9789                           indf0	equ	0xFEF
  9790                           postinc0	equ	0xFEE
  9791                           fsr0h	equ	0xFEA
  9792                           fsr0l	equ	0xFE9
  9793                           wreg	equ	0xFE8
  9794                           indf1	equ	0xFE7
  9795                           postinc1	equ	0xFE6
  9796                           postdec1	equ	0xFE5
  9797                           plusw1	equ	0xFE3
  9798                           fsr1h	equ	0xFE2
  9799                           fsr1l	equ	0xFE1
  9800                           indf2	equ	0xFDF
  9801                           postinc2	equ	0xFDE
  9802                           postdec2	equ	0xFDD
  9803                           plusw2	equ	0xFDB
  9804                           fsr2h	equ	0xFDA
  9805                           fsr2l	equ	0xFD9
  9806                           status	equ	0xFD8
  9807                           
  9808 ;; *************** function _ETH_Dump *****************
  9809 ;; Defined at:
  9810 ;;		line 611 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
  9811 ;; Parameters:    Size  Location     Type
  9812 ;;  length          2   22[COMRAM] unsigned int 
  9813 ;; Auto vars:     Size  Location     Type
  9814 ;;		None
  9815 ;; Return value:  Size  Location     Type
  9816 ;;                  1    wreg      void 
  9817 ;; Registers used:
  9818 ;;		wreg, status,2, status,0
  9819 ;; Tracked objects:
  9820 ;;		On entry : C/1
  9821 ;;		On exit  : F/1
  9822 ;;		Unchanged: 0/0
  9823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9824 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9827 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9828 ;;Total ram usage:        2 bytes
  9829 ;; Hardware stack levels used:    1
  9830 ;; Hardware stack levels required when called:    8
  9831 ;; This function calls:
  9832 ;;		Nothing
  9833 ;; This function is called by:
  9834 ;;		_DHCP_Handler
  9835 ;;		_IPV4_Packet
  9836 ;;		_TCP_ParseTCPOptions
  9837 ;; This function uses a non-reentrant model
  9838 ;;
  9839                           
  9840                           	psect	text42
  9841  0060B4                     __ptext42:
  9842                           	opt stack 0
  9843  0060B4                     _ETH_Dump:
  9844                           	opt stack 17
  9845                           
  9846                           ;j60_driver.c: 613: length = (rxPacketStatusVector.byteCount <= length) ? rxPacketStatus
      +                          Vector.byteCount : length;
  9847                           
  9848                           ; BSR set to: 1
  9849                           ;incstack = 0
  9850  0060B4  0101               	movlb	1	; () banked
  9851  0060B6  51CC               	movf	_rxPacketStatusVector& (0+255),w,b
  9852  0060B8  5C17               	subwf	ETH_Dump@length,w,c
  9853  0060BA  51CD               	movf	(_rxPacketStatusVector+1)& (0+255),w,b
  9854  0060BC  5818               	subwfb	ETH_Dump@length+1,w,c
  9855  0060BE  E304               	bnc	l8236
  9856                           
  9857                           ; BSR set to: 1
  9858  0060C0  C1CC  F017         	movff	_rxPacketStatusVector,ETH_Dump@length
  9859  0060C4  C1CD  F018         	movff	_rxPacketStatusVector+1,ETH_Dump@length+1
  9860  0060C8                     l8236:
  9861                           
  9862                           ; BSR set to: 1
  9863                           ;j60_driver.c: 614: if (length)
  9864  0060C8  5017               	movf	ETH_Dump@length,w,c
  9865  0060CA  1018               	iorwf	ETH_Dump@length+1,w,c
  9866  0060CC  B4D8               	btfsc	status,2,c
  9867  0060CE  0012               	return	
  9868                           
  9869                           ; BSR set to: 1
  9870                           ;j60_driver.c: 615: {
  9871                           ;j60_driver.c: 617: ERDPT += length;
  9872  0060D0  5017               	movf	ETH_Dump@length,w,c
  9873  0060D2  267A               	addwf	3962,f,c	;volatile
  9874  0060D4  5018               	movf	ETH_Dump@length+1,w,c
  9875  0060D6  227B               	addwfc	3963,f,c	;volatile
  9876                           
  9877                           ;j60_driver.c: 618: rxPacketStatusVector.byteCount -= length;
  9878  0060D8  5017               	movf	ETH_Dump@length,w,c
  9879  0060DA  5FCC               	subwf	_rxPacketStatusVector& (0+255),f,b
  9880  0060DC  5018               	movf	ETH_Dump@length+1,w,c
  9881  0060DE  5BCD               	subwfb	(_rxPacketStatusVector+1)& (0+255),f,b
  9882                           
  9883                           ; BSR set to: 1
  9884  0060E0  0012               	return		;funcret
  9885  0060E2                     __end_of_ETH_Dump:
  9886                           	opt stack 0
  9887                           tosu	equ	0xFFF
  9888                           tosh	equ	0xFFE
  9889                           tosl	equ	0xFFD
  9890                           pclath	equ	0xFFA
  9891                           tblptru	equ	0xFF8
  9892                           tblptrh	equ	0xFF7
  9893                           tblptrl	equ	0xFF6
  9894                           tablat	equ	0xFF5
  9895                           prodh	equ	0xFF4
  9896                           prodl	equ	0xFF3
  9897                           intcon	equ	0xFF2
  9898                           indf0	equ	0xFEF
  9899                           postinc0	equ	0xFEE
  9900                           fsr0h	equ	0xFEA
  9901                           fsr0l	equ	0xFE9
  9902                           wreg	equ	0xFE8
  9903                           indf1	equ	0xFE7
  9904                           postinc1	equ	0xFE6
  9905                           postdec1	equ	0xFE5
  9906                           plusw1	equ	0xFE3
  9907                           fsr1h	equ	0xFE2
  9908                           fsr1l	equ	0xFE1
  9909                           indf2	equ	0xFDF
  9910                           postinc2	equ	0xFDE
  9911                           postdec2	equ	0xFDD
  9912                           plusw2	equ	0xFDB
  9913                           fsr2h	equ	0xFDA
  9914                           fsr2l	equ	0xFD9
  9915                           status	equ	0xFD8
  9916                           
  9917 ;; *************** function _TCP_FiniteStateMachine *****************
  9918 ;; Defined at:
  9919 ;;		line 602 in file "../../TCPIP Library/source/tcpv4.c"
  9920 ;; Parameters:    Size  Location     Type
  9921 ;;		None
  9922 ;; Auto vars:     Size  Location     Type
  9923 ;;  notAckBytes     2   13[BANK1 ] unsigned int 
  9924 ;;  nextState       1   16[BANK1 ] enum E638
  9925 ;;  event           1   15[BANK1 ] enum E651
  9926 ;;  ret             1   12[BANK1 ] unsigned char 
  9927 ;; Return value:  Size  Location     Type
  9928 ;;                  1    wreg      unsigned char 
  9929 ;; Registers used:
  9930 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9931 ;; Tracked objects:
  9932 ;;		On entry : 0/1
  9933 ;;		On exit  : F/1
  9934 ;;		Unchanged: 0/0
  9935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9937 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9938 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9939 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9940 ;;Total ram usage:       17 bytes
  9941 ;; Hardware stack levels used:    1
  9942 ;; Hardware stack levels required when called:   14
  9943 ;; This function calls:
  9944 ;;		_TCB_Reset
  9945 ;;		_TCP_PayloadSave
  9946 ;;		_TCP_Snd
  9947 ;; This function is called by:
  9948 ;;		_TCP_Recv
  9949 ;;		_TCP_Listen
  9950 ;;		_TCP_Update
  9951 ;; This function uses a non-reentrant model
  9952 ;;
  9953                           
  9954                           	psect	text43
  9955  0010C4                     __ptext43:
  9956                           	opt stack 0
  9957  0010C4                     _TCP_FiniteStateMachine:
  9958                           	opt stack 14
  9959                           
  9960                           ;tcpv4.c: 604: uint16_t notAckBytes;
  9961                           ;tcpv4.c: 605: bool ret = 0;
  9962                           
  9963                           ; BSR set to: 1
  9964                           ;incstack = 0
  9965  0010C4  0101               	movlb	1	; () banked
  9966  0010C6  6B0C               	clrf	TCP_FiniteStateMachine@ret& (0+255),b
  9967                           
  9968                           ; BSR set to: 1
  9969                           ;tcpv4.c: 607: tcp_fsm_states_t nextState = currentTCB->fsmState;
  9970  0010C8  0E2A               	movlw	42
  9971  0010CA  243B               	addwf	_currentTCB,w,c
  9972  0010CC  EC67  F011         	call	PL387	;call to abstracted procedure
  9973  0010D0  64F7               	cpfsgt	tblptrh,c
  9974  0010D2  D003               	bra	u12377
  9975  0010D4  0008               	tblrd		*
  9976  0010D6  50F5               	movf	tablat,w,c
  9977  0010D8  D003               	bra	u12370
  9978  0010DA                     u12377:
  9979  0010DA  EC73  F011         	call	PL389	;call to abstracted procedure
  9980  0010DE  50EF               	movf	indf0,w,c
  9981  0010E0                     u12370:
  9982  0010E0  0101               	movlb	1	; () banked
  9983  0010E2  6F10               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
  9984                           
  9985                           ;tcpv4.c: 608: tcpEvent_t event = currentTCB->connectionEvent;
  9986  0010E4  0E2B               	movlw	43
  9987  0010E6  243B               	addwf	_currentTCB,w,c
  9988  0010E8  EC67  F011         	call	PL387	;call to abstracted procedure
  9989  0010EC  64F7               	cpfsgt	tblptrh,c
  9990  0010EE  D003               	bra	u12387
  9991  0010F0  0008               	tblrd		*
  9992  0010F2  50F5               	movf	tablat,w,c
  9993  0010F4  D003               	bra	u12380
  9994  0010F6                     u12387:
  9995  0010F6  EC73  F011         	call	PL389	;call to abstracted procedure
  9996  0010FA  50EF               	movf	indf0,w,c
  9997  0010FC                     u12380:
  9998  0010FC  0101               	movlb	1	; () banked
  9999  0010FE  6F0F               	movwf	TCP_FiniteStateMachine@event& (0+255),b
 10000                           
 10001                           ;tcpv4.c: 610: switch (currentTCB->fsmState)
 10002  001100  EF1F  F011         	goto	l8906
 10003  001104                     l8568:
 10004                           
 10005                           ; BSR set to: 1
 10006                           ;tcpv4.c: 616: ;
 10007                           ;tcpv4.c: 619: currentTCB->destIP = receivedRemoteAddress;
 10008  001104  0E02               	movlw	2
 10009  001106  243B               	addwf	_currentTCB,w,c
 10010  001108  EC67  F011         	call	PL387	;call to abstracted procedure
 10011  00110C  64F7               	cpfsgt	tblptrh,c
 10012  00110E  D00D               	bra	u12397
 10013  001110  C037  FFF5         	movff	_receivedRemoteAddress,tablat
 10014  001114  000D               	tblwt		*+
 10015  001116  C038  FFF5         	movff	_receivedRemoteAddress+1,tablat
 10016  00111A  000D               	tblwt		*+
 10017  00111C  C039  FFF5         	movff	_receivedRemoteAddress+2,tablat
 10018  001120  000D               	tblwt		*+
 10019  001122  C03A  FFF5         	movff	_receivedRemoteAddress+3,tablat
 10020  001126  000C               	tblwt		*
 10021  001128  D00A               	bra	u12390
 10022  00112A                     u12397:
 10023  00112A  EC73  F011         	call	PL389	;call to abstracted procedure
 10024  00112E  C037  FFEE         	movff	_receivedRemoteAddress,postinc0
 10025  001132  C038  FFEE         	movff	_receivedRemoteAddress+1,postinc0
 10026  001136  C039  FFEE         	movff	_receivedRemoteAddress+2,postinc0
 10027  00113A  C03A  FFEF         	movff	_receivedRemoteAddress+3,indf0
 10028  00113E                     u12390:
 10029                           
 10030                           ;tcpv4.c: 620: currentTCB->destPort = tcpHeader.sourcePort;
 10031  00113E  EC18  F012         	call	PL447	;call to abstracted procedure
 10032  001142  EC67  F011         	call	PL387	;call to abstracted procedure
 10033  001146  64F7               	cpfsgt	tblptrh,c
 10034  001148  D007               	bra	u12407
 10035  00114A  C1D2  FFF5         	movff	_tcpHeader,tablat
 10036  00114E  000D               	tblwt		*+
 10037  001150  C1D3  FFF5         	movff	_tcpHeader+1,tablat
 10038  001154  000C               	tblwt		*
 10039  001156  D006               	bra	u12400
 10040  001158                     u12407:
 10041  001158  EC73  F011         	call	PL389	;call to abstracted procedure
 10042  00115C  C1D2  FFEE         	movff	_tcpHeader,postinc0
 10043  001160  C1D3  FFEF         	movff	_tcpHeader+1,indf0
 10044  001164                     u12400:
 10045                           
 10046                           ;tcpv4.c: 623: currentTCB->localLastAck = 0;
 10047  001164  EC4F  F012         	call	PL473	;call to abstracted procedure
 10048  001168  EC67  F011         	call	PL387	;call to abstracted procedure
 10049  00116C  64F7               	cpfsgt	tblptrh,c
 10050  00116E  D007               	bra	u12417
 10051  001170  6AF5               	clrf	tablat,c
 10052  001172  000D               	tblwt		*+
 10053  001174  6AF5               	clrf	tablat,c
 10054  001176  000D               	tblwt		*+
 10055  001178  ECD2  F011         	call	PL423	;call to abstracted procedure
 10056  00117C  D004               	bra	u12410
 10057  00117E                     u12417:
 10058  00117E  EC73  F011         	call	PL389	;call to abstracted procedure
 10059  001182  EC46  F012         	call	PL467	;call to abstracted procedure
 10060  001186                     u12410:
 10061                           
 10062                           ;tcpv4.c: 625: currentTCB->remoteSeqno = tcpHeader.sequenceNumber;
 10063  001186  ECCA  F011         	call	PL417	;call to abstracted procedure
 10064  00118A  EC67  F011         	call	PL387	;call to abstracted procedure
 10065  00118E  64F7               	cpfsgt	tblptrh,c
 10066  001190  D003               	bra	u12427
 10067  001192  ECF1  F011         	call	PL439	;call to abstracted procedure
 10068  001196  D004               	bra	u12420
 10069  001198                     u12427:
 10070  001198  EC73  F011         	call	PL389	;call to abstracted procedure
 10071  00119C  EC5C  F012         	call	PL477	;call to abstracted procedure
 10072  0011A0                     u12420:
 10073                           
 10074                           ;tcpv4.c: 626: currentTCB->remoteAck = currentTCB->remoteSeqno + 1;
 10075  0011A0  ECCA  F011         	call	PL417	;call to abstracted procedure
 10076  0011A4  EC67  F011         	call	PL387	;call to abstracted procedure
 10077  0011A8  64F7               	cpfsgt	tblptrh,c
 10078  0011AA  D003               	bra	u12437
 10079  0011AC  EC7C  F011         	call	PL395	;call to abstracted procedure
 10080  0011B0  D004               	bra	u12430
 10081  0011B2                     u12437:
 10082  0011B2  EC73  F011         	call	PL389	;call to abstracted procedure
 10083  0011B6  EC9D  F011         	call	PL403	;call to abstracted procedure
 10084  0011BA                     u12430:
 10085  0011BA  EC8F  F011         	call	PL401	;call to abstracted procedure
 10086  0011BE  0E0C               	movlw	12
 10087  0011C0  EC0B  F012         	call	PL443	;call to abstracted procedure
 10088  0011C4  64F7               	cpfsgt	tblptrh,c
 10089  0011C6  D003               	bra	u12447
 10090  0011C8  ECFE  F011         	call	PL441	;call to abstracted procedure
 10091  0011CC  D004               	bra	u12440
 10092  0011CE                     u12447:
 10093  0011CE  EC73  F011         	call	PL389	;call to abstracted procedure
 10094  0011D2  EC53  F012         	call	PL475	;call to abstracted procedure
 10095  0011D6                     u12440:
 10096                           
 10097                           ;tcpv4.c: 629: currentTCB->remoteWnd = ((((uint16_t)tcpHeader.windowSize & (uint16_t)0xF
      +                          F00) >> 8) | (((uint16_t)tcpHeader.windowSize & (uint16_t)0x00FF) << 8));
 10098  0011D6  ECB3  F011         	call	PL407	;call to abstracted procedure
 10099  0011DA  ECA6  F011         	call	PL405	;call to abstracted procedure
 10100  0011DE  64F7               	cpfsgt	tblptrh,c
 10101  0011E0  D003               	bra	u12457
 10102  0011E2  EC20  F012         	call	PL453	;call to abstracted procedure
 10103  0011E6  D004               	bra	u12450
 10104  0011E8                     u12457:
 10105  0011E8  EC73  F011         	call	PL389	;call to abstracted procedure
 10106  0011EC  EC77  F012         	call	PL503	;call to abstracted procedure
 10107  0011F0                     u12450:
 10108                           
 10109                           ;tcpv4.c: 630: currentTCB->mss = tcpMss;
 10110  0011F0  ECC6  F011         	call	PL415	;call to abstracted procedure
 10111  0011F4  EC67  F011         	call	PL387	;call to abstracted procedure
 10112  0011F8  64F7               	cpfsgt	tblptrh,c
 10113  0011FA  D003               	bra	u12467
 10114  0011FC  EC88  F012         	call	PL545	;call to abstracted procedure
 10115  001200  D004               	bra	u12460
 10116  001202                     u12467:
 10117  001202  EC73  F011         	call	PL389	;call to abstracted procedure
 10118  001206  EC93  F012         	call	PL631	;call to abstracted procedure
 10119  00120A                     u12460:
 10120                           
 10121                           ;tcpv4.c: 633: currentTCB->flags = 0x02U | 0x10U;
 10122  00120A  EC78  F011         	call	PL393	;call to abstracted procedure
 10123  00120E  EC67  F011         	call	PL387	;call to abstracted procedure
 10124  001212  64F7               	cpfsgt	tblptrh,c
 10125  001214  D004               	bra	u12477
 10126  001216  0E12               	movlw	18
 10127  001218  6EF5               	movwf	tablat,c
 10128  00121A  000C               	tblwt		*
 10129  00121C  D004               	bra	u12470
 10130  00121E                     u12477:
 10131  00121E  EC73  F011         	call	PL389	;call to abstracted procedure
 10132  001222  0E12               	movlw	18
 10133  001224  6EEF               	movwf	indf0,c
 10134  001226                     u12470:
 10135                           
 10136                           ;tcpv4.c: 634: currentTCB->timeout = ((unsigned long)1*2);
 10137  001226  ECE9  F011         	call	PL429	;call to abstracted procedure
 10138  00122A  EC67  F011         	call	PL387	;call to abstracted procedure
 10139  00122E  64F7               	cpfsgt	tblptrh,c
 10140  001230  D003               	bra	u12487
 10141  001232  EC3B  F012         	call	PL459	;call to abstracted procedure
 10142  001236  D004               	bra	u12480
 10143  001238                     u12487:
 10144  001238  EC73  F011         	call	PL389	;call to abstracted procedure
 10145  00123C  EC8F  F012         	call	PL615	;call to abstracted procedure
 10146  001240                     u12480:
 10147                           
 10148                           ;tcpv4.c: 635: currentTCB->timeoutReloadValue = ((unsigned long)1*2);
 10149  001240  ECE5  F011         	call	PL427	;call to abstracted procedure
 10150  001244  EC67  F011         	call	PL387	;call to abstracted procedure
 10151  001248  64F7               	cpfsgt	tblptrh,c
 10152  00124A  D003               	bra	u12497
 10153  00124C  EC3B  F012         	call	PL459	;call to abstracted procedure
 10154  001250  D004               	bra	u12490
 10155  001252                     u12497:
 10156  001252  EC73  F011         	call	PL389	;call to abstracted procedure
 10157  001256  EC8F  F012         	call	PL615	;call to abstracted procedure
 10158  00125A                     u12490:
 10159                           
 10160                           ;tcpv4.c: 636: currentTCB->timeoutsCount = (3u);
 10161  00125A  ECCE  F011         	call	PL419	;call to abstracted procedure
 10162  00125E  EC67  F011         	call	PL387	;call to abstracted procedure
 10163  001262  64F7               	cpfsgt	tblptrh,c
 10164  001264  D004               	bra	u12507
 10165  001266  0E03               	movlw	3
 10166  001268  6EF5               	movwf	tablat,c
 10167  00126A  000C               	tblwt		*
 10168  00126C  D004               	bra	u12500
 10169  00126E                     u12507:
 10170  00126E  EC73  F011         	call	PL389	;call to abstracted procedure
 10171  001272  0E03               	movlw	3
 10172  001274  6EEF               	movwf	indf0,c
 10173  001276                     u12500:
 10174  001276                     l8582:
 10175                           
 10176                           ;tcpv4.c: 638: TCP_Snd(currentTCB);
 10177  001276  EC41  F012         	call	PL465	;call to abstracted procedure
 10178  00127A  ECAC  F012         	call	_TCP_Snd	;wreg free
 10179                           
 10180                           ; BSR set to: 0
 10181                           ;tcpv4.c: 639: nextState = SYN_RECEIVED;
 10182  00127E  0E03               	movlw	3
 10183  001280  EF26  F010         	goto	L20
 10184  001284                     l1194:
 10185                           
 10186                           ;tcpv4.c: 642: ;
 10187                           ;tcpv4.c: 643: nextState = CLOSE;
 10188  001284  0101               	movlb	1	; () banked
 10189  001286  6B10               	clrf	TCP_FiniteStateMachine@nextState& (0+255),b
 10190                           
 10191                           ; BSR set to: 1
 10192                           ;tcpv4.c: 644: TCB_Reset(currentTCB);
 10193  001288  C03B  F017         	movff	_currentTCB,TCB_Reset@tcbPtr
 10194  00128C  C03C  F018         	movff	_currentTCB+1,TCB_Reset@tcbPtr+1
 10195  001290  ECCE  F022         	call	_TCB_Reset	;wreg free
 10196                           
 10197                           ;tcpv4.c: 645: break;
 10198  001294  EF4A  F011         	goto	l8908
 10199  001298                     l8590:
 10200  001298  0101               	movlb	1	; () banked
 10201  00129A  510F               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 10202                           
 10203                           ; Switch size 1, requested type "space"
 10204                           ; Number of cases is 2, Range of values is 0 to 3
 10205                           ; switch strategies available:
 10206                           ; Name         Instructions Cycles
 10207                           ; simple_byte            7     4 (average)
 10208                           ;	Chosen strategy is simple_byte
 10209  00129C  E0F3               	bz	l1194
 10210  00129E  0A03               	xorlw	3	; case 3
 10211  0012A0  E101 D730          	bz	l8568
 10212                           
 10213                           ;tcpv4.c: 650: break;
 10214  0012A4  EF4A  F011         	goto	l8908
 10215  0012A8                     l8592:
 10216                           
 10217                           ; BSR set to: 1
 10218                           ;tcpv4.c: 655: ;
 10219                           ;tcpv4.c: 657: currentTCB->remoteSeqno = tcpHeader.sequenceNumber;
 10220  0012A8  0E08               	movlw	8
 10221  0012AA  243B               	addwf	_currentTCB,w,c
 10222  0012AC  EC67  F011         	call	PL387	;call to abstracted procedure
 10223  0012B0  64F7               	cpfsgt	tblptrh,c
 10224  0012B2  D003               	bra	u12517
 10225  0012B4  ECF1  F011         	call	PL439	;call to abstracted procedure
 10226  0012B8  D004               	bra	u12510
 10227  0012BA                     u12517:
 10228  0012BA  EC73  F011         	call	PL389	;call to abstracted procedure
 10229  0012BE  EC5C  F012         	call	PL477	;call to abstracted procedure
 10230  0012C2                     u12510:
 10231                           
 10232                           ;tcpv4.c: 658: currentTCB->remoteAck = tcpHeader.sequenceNumber + 1;
 10233  0012C2  ECD7  F011         	call	PL425	;call to abstracted procedure
 10234  0012C6  ECA6  F011         	call	PL405	;call to abstracted procedure
 10235  0012CA  64F7               	cpfsgt	tblptrh,c
 10236  0012CC  D005               	bra	u12527
 10237  0012CE  EC27  F012         	call	PL455	;call to abstracted procedure
 10238  0012D2  EC20  F012         	call	PL453	;call to abstracted procedure
 10239  0012D6  D004               	bra	u12520
 10240  0012D8                     u12527:
 10241  0012D8  EC73  F011         	call	PL389	;call to abstracted procedure
 10242  0012DC  EC65  F012         	call	PL487	;call to abstracted procedure
 10243  0012E0                     u12520:
 10244                           
 10245                           ;tcpv4.c: 661: currentTCB->remoteWnd = ((((uint16_t)tcpHeader.windowSize & (uint16_t)0xF
      +                          F00) >> 8) | (((uint16_t)tcpHeader.windowSize & (uint16_t)0x00FF) << 8));
 10246  0012E0  ECB3  F011         	call	PL407	;call to abstracted procedure
 10247  0012E4  ECA6  F011         	call	PL405	;call to abstracted procedure
 10248  0012E8  64F7               	cpfsgt	tblptrh,c
 10249  0012EA  D003               	bra	u12537
 10250  0012EC  EC20  F012         	call	PL453	;call to abstracted procedure
 10251  0012F0  D004               	bra	u12530
 10252  0012F2                     u12537:
 10253  0012F2  EC73  F011         	call	PL389	;call to abstracted procedure
 10254  0012F6  EC77  F012         	call	PL503	;call to abstracted procedure
 10255  0012FA                     u12530:
 10256                           
 10257                           ;tcpv4.c: 662: currentTCB->mss = tcpMss;
 10258  0012FA  ECC6  F011         	call	PL415	;call to abstracted procedure
 10259  0012FE  EC67  F011         	call	PL387	;call to abstracted procedure
 10260  001302  64F7               	cpfsgt	tblptrh,c
 10261  001304  D003               	bra	u12547
 10262  001306  EC88  F012         	call	PL545	;call to abstracted procedure
 10263  00130A  D004               	bra	u12540
 10264  00130C                     u12547:
 10265  00130C  EC73  F011         	call	PL389	;call to abstracted procedure
 10266  001310  EC93  F012         	call	PL631	;call to abstracted procedure
 10267  001314                     u12540:
 10268                           
 10269                           ;tcpv4.c: 665: currentTCB->timeout = ((unsigned long)1*2);
 10270  001314  ECE9  F011         	call	PL429	;call to abstracted procedure
 10271  001318  EC67  F011         	call	PL387	;call to abstracted procedure
 10272  00131C  64F7               	cpfsgt	tblptrh,c
 10273  00131E  D003               	bra	u12557
 10274  001320  EC3B  F012         	call	PL459	;call to abstracted procedure
 10275  001324  D004               	bra	u12550
 10276  001326                     u12557:
 10277  001326  EC73  F011         	call	PL389	;call to abstracted procedure
 10278  00132A  EC8F  F012         	call	PL615	;call to abstracted procedure
 10279  00132E                     u12550:
 10280                           
 10281                           ;tcpv4.c: 666: currentTCB->timeoutReloadValue = ((unsigned long)1*2);
 10282  00132E  ECE5  F011         	call	PL427	;call to abstracted procedure
 10283  001332  EC67  F011         	call	PL387	;call to abstracted procedure
 10284  001336  64F7               	cpfsgt	tblptrh,c
 10285  001338  D003               	bra	u12567
 10286  00133A  EC3B  F012         	call	PL459	;call to abstracted procedure
 10287  00133E  D004               	bra	u12560
 10288  001340                     u12567:
 10289  001340  EC73  F011         	call	PL389	;call to abstracted procedure
 10290  001344  EC8F  F012         	call	PL615	;call to abstracted procedure
 10291  001348                     u12560:
 10292                           
 10293                           ;tcpv4.c: 667: currentTCB->timeoutsCount = (3u);
 10294  001348  ECCE  F011         	call	PL419	;call to abstracted procedure
 10295  00134C  EC67  F011         	call	PL387	;call to abstracted procedure
 10296  001350  64F7               	cpfsgt	tblptrh,c
 10297  001352  D004               	bra	u12577
 10298  001354  0E03               	movlw	3
 10299  001356  6EF5               	movwf	tablat,c
 10300  001358  000C               	tblwt		*
 10301  00135A  D004               	bra	u12570
 10302  00135C                     u12577:
 10303  00135C  EC73  F011         	call	PL389	;call to abstracted procedure
 10304  001360  0E03               	movlw	3
 10305  001362  6EEF               	movwf	indf0,c
 10306  001364                     u12570:
 10307                           
 10308                           ;tcpv4.c: 668: currentTCB->flags = 0x02U | 0x10U;
 10309  001364  EC78  F011         	call	PL393	;call to abstracted procedure
 10310  001368  EC67  F011         	call	PL387	;call to abstracted procedure
 10311  00136C  64F7               	cpfsgt	tblptrh,c
 10312  00136E  D004               	bra	u12587
 10313  001370  0E12               	movlw	18
 10314  001372  6EF5               	movwf	tablat,c
 10315  001374  000C               	tblwt		*
 10316  001376  D004               	bra	u12580
 10317  001378                     u12587:
 10318  001378  EC73  F011         	call	PL389	;call to abstracted procedure
 10319  00137C  0E12               	movlw	18
 10320  00137E  6EEF               	movwf	indf0,c
 10321  001380                     u12580:
 10322  001380  D77A               	goto	l8582
 10323  001382                     l8610:
 10324                           
 10325                           ; BSR set to: 1
 10326                           ;tcpv4.c: 676: ;
 10327                           ;tcpv4.c: 678: currentTCB->timeout = 0;
 10328  001382  0E30               	movlw	48
 10329  001384  243B               	addwf	_currentTCB,w,c
 10330  001386  EC67  F011         	call	PL387	;call to abstracted procedure
 10331  00138A  64F7               	cpfsgt	tblptrh,c
 10332  00138C  D003               	bra	u12597
 10333  00138E  ECD2  F011         	call	PL423	;call to abstracted procedure
 10334  001392  D004               	bra	u12590
 10335  001394                     u12597:
 10336  001394  EC73  F011         	call	PL389	;call to abstracted procedure
 10337  001398  6AEE               	clrf	postinc0,c
 10338  00139A  6AEF               	clrf	indf0,c
 10339  00139C                     u12590:
 10340                           
 10341                           ;tcpv4.c: 680: if ((currentTCB->localSeqno + 1) == tcpHeader.ackNumber)
 10342  00139C  ECED  F011         	call	PL431	;call to abstracted procedure
 10343  0013A0  EC67  F011         	call	PL387	;call to abstracted procedure
 10344  0013A4  64F7               	cpfsgt	tblptrh,c
 10345  0013A6  D003               	bra	u12607
 10346  0013A8  EC7C  F011         	call	PL395	;call to abstracted procedure
 10347  0013AC  D004               	bra	u12600
 10348  0013AE                     u12607:
 10349  0013AE  EC73  F011         	call	PL389	;call to abstracted procedure
 10350  0013B2  EC9D  F011         	call	PL403	;call to abstracted procedure
 10351  0013B6                     u12600:
 10352  0013B6  EC8F  F011         	call	PL401	;call to abstracted procedure
 10353  0013BA  51DA               	movf	(_tcpHeader+8)& (0+255),w,b
 10354  0013BC  1906               	xorwf	(??_TCP_FiniteStateMachine+6)& (0+255),w,b
 10355  0013BE  E109               	bnz	u12611
 10356  0013C0  51DB               	movf	(_tcpHeader+9)& (0+255),w,b
 10357  0013C2  1907               	xorwf	(??_TCP_FiniteStateMachine+7)& (0+255),w,b
 10358  0013C4  E17D               	bnz	l8624
 10359  0013C6  51DC               	movf	(_tcpHeader+10)& (0+255),w,b
 10360  0013C8  1908               	xorwf	(??_TCP_FiniteStateMachine+8)& (0+255),w,b
 10361  0013CA  E17A               	bnz	l8624
 10362  0013CC  51DD               	movf	(_tcpHeader+11)& (0+255),w,b
 10363  0013CE  1909               	xorwf	(??_TCP_FiniteStateMachine+9)& (0+255),w,b
 10364  0013D0  A4D8               	btfss	status,2,c
 10365  0013D2                     u12611:
 10366  0013D2  D076               	goto	l8624
 10367                           
 10368                           ; BSR set to: 1
 10369                           ;tcpv4.c: 681: {
 10370                           ;tcpv4.c: 683: currentTCB->localSeqno = currentTCB->localSeqno + 1;
 10371  0013D4  0E10               	movlw	16
 10372  0013D6  243B               	addwf	_currentTCB,w,c
 10373  0013D8  EC67  F011         	call	PL387	;call to abstracted procedure
 10374  0013DC  64F7               	cpfsgt	tblptrh,c
 10375  0013DE  D003               	bra	u12627
 10376  0013E0  EC7C  F011         	call	PL395	;call to abstracted procedure
 10377  0013E4  D004               	bra	u12620
 10378  0013E6                     u12627:
 10379  0013E6  EC73  F011         	call	PL389	;call to abstracted procedure
 10380  0013EA  EC9D  F011         	call	PL403	;call to abstracted procedure
 10381  0013EE                     u12620:
 10382  0013EE  EC8F  F011         	call	PL401	;call to abstracted procedure
 10383  0013F2  0E10               	movlw	16
 10384  0013F4  EC0B  F012         	call	PL443	;call to abstracted procedure
 10385  0013F8  64F7               	cpfsgt	tblptrh,c
 10386  0013FA  D003               	bra	u12637
 10387  0013FC  ECFE  F011         	call	PL441	;call to abstracted procedure
 10388  001400  D004               	bra	u12630
 10389  001402                     u12637:
 10390  001402  EC73  F011         	call	PL389	;call to abstracted procedure
 10391  001406  EC53  F012         	call	PL475	;call to abstracted procedure
 10392  00140A                     u12630:
 10393                           
 10394                           ;tcpv4.c: 684: currentTCB->flags = 0x10U;
 10395  00140A  EC78  F011         	call	PL393	;call to abstracted procedure
 10396  00140E  EC67  F011         	call	PL387	;call to abstracted procedure
 10397  001412  64F7               	cpfsgt	tblptrh,c
 10398  001414  D004               	bra	u12647
 10399  001416  0E10               	movlw	16
 10400  001418  6EF5               	movwf	tablat,c
 10401  00141A  000C               	tblwt		*
 10402  00141C  D004               	bra	u12640
 10403  00141E                     u12647:
 10404  00141E  EC73  F011         	call	PL389	;call to abstracted procedure
 10405  001422  0E10               	movlw	16
 10406  001424  6EEF               	movwf	indf0,c
 10407  001426                     u12640:
 10408                           
 10409                           ;tcpv4.c: 687: currentTCB->remoteSeqno = tcpHeader.sequenceNumber;
 10410  001426  ECCA  F011         	call	PL417	;call to abstracted procedure
 10411  00142A  EC67  F011         	call	PL387	;call to abstracted procedure
 10412  00142E  64F7               	cpfsgt	tblptrh,c
 10413  001430  D003               	bra	u12657
 10414  001432  ECF1  F011         	call	PL439	;call to abstracted procedure
 10415  001436  D004               	bra	u12650
 10416  001438                     u12657:
 10417  001438  EC73  F011         	call	PL389	;call to abstracted procedure
 10418  00143C  EC5C  F012         	call	PL477	;call to abstracted procedure
 10419  001440                     u12650:
 10420                           
 10421                           ;tcpv4.c: 689: currentTCB->remoteAck = tcpHeader.sequenceNumber + 1;
 10422  001440  ECD7  F011         	call	PL425	;call to abstracted procedure
 10423  001444  ECA6  F011         	call	PL405	;call to abstracted procedure
 10424  001448  64F7               	cpfsgt	tblptrh,c
 10425  00144A  D005               	bra	u12667
 10426  00144C  EC27  F012         	call	PL455	;call to abstracted procedure
 10427  001450  EC20  F012         	call	PL453	;call to abstracted procedure
 10428  001454  D004               	bra	u12660
 10429  001456                     u12667:
 10430  001456  EC73  F011         	call	PL389	;call to abstracted procedure
 10431  00145A  EC65  F012         	call	PL487	;call to abstracted procedure
 10432  00145E                     u12660:
 10433                           
 10434                           ;tcpv4.c: 691: currentTCB->remoteWnd = ((((uint16_t)tcpHeader.windowSize & (uint16_t)0xF
      +                          F00) >> 8) | (((uint16_t)tcpHeader.windowSize & (uint16_t)0x00FF) << 8));
 10435  00145E  ECB3  F011         	call	PL407	;call to abstracted procedure
 10436  001462  ECA6  F011         	call	PL405	;call to abstracted procedure
 10437  001466  64F7               	cpfsgt	tblptrh,c
 10438  001468  D003               	bra	u12677
 10439  00146A  EC20  F012         	call	PL453	;call to abstracted procedure
 10440  00146E  D004               	bra	u12670
 10441  001470                     u12677:
 10442  001470  EC73  F011         	call	PL389	;call to abstracted procedure
 10443  001474  EC77  F012         	call	PL503	;call to abstracted procedure
 10444  001478                     u12670:
 10445                           
 10446                           ;tcpv4.c: 692: currentTCB->mss = tcpMss;
 10447  001478  ECC6  F011         	call	PL415	;call to abstracted procedure
 10448  00147C  EC67  F011         	call	PL387	;call to abstracted procedure
 10449  001480  64F7               	cpfsgt	tblptrh,c
 10450  001482  D003               	bra	u12687
 10451  001484  EC88  F012         	call	PL545	;call to abstracted procedure
 10452  001488  D004               	bra	u12680
 10453  00148A                     u12687:
 10454  00148A  EC73  F011         	call	PL389	;call to abstracted procedure
 10455  00148E  EC93  F012         	call	PL631	;call to abstracted procedure
 10456  001492                     u12680:
 10457                           
 10458                           ;tcpv4.c: 694: if(TCP_Snd(currentTCB))
 10459  001492  EC41  F012         	call	PL465	;call to abstracted procedure
 10460  001496  ECAC  F012         	call	_TCP_Snd	;wreg free
 10461  00149A  0900               	iorlw	0
 10462  00149C  E102 EF4A  F011    	bz	l8908
 10463                           
 10464                           ; BSR set to: 0
 10465                           ;tcpv4.c: 695: {
 10466                           ;tcpv4.c: 696: nextState = ESTABLISHED;
 10467  0014A2  0E04               	movlw	4
 10468  0014A4  0101               	movlb	1	; () banked
 10469                           
 10470                           ; BSR set to: 1
 10471                           ;tcpv4.c: 697: currentTCB->socketState = SOCKET_CONNECTED;
 10472  0014A6  EC1C  F012         	call	PL449	;call to abstracted procedure
 10473  0014AA  EC67  F011         	call	PL387	;call to abstracted procedure
 10474  0014AE  64F7               	cpfsgt	tblptrh,c
 10475  0014B0  D004               	bra	u12707
 10476  0014B2  0E03               	movlw	3
 10477  0014B4  6EF5               	movwf	tablat,c
 10478  0014B6  000C               	tblwt		*
 10479  0014B8  D001               	bra	u12700
 10480  0014BA                     u12707:
 10481  0014BA  D26A               	goto	u13197
 10482  0014BC                     u12700:
 10483  0014BC  EF4A  F011         	goto	l8908
 10484  0014C0                     l8624:
 10485                           
 10486                           ; BSR set to: 1
 10487                           ;tcpv4.c: 700: else
 10488                           ;tcpv4.c: 701: {
 10489                           ;tcpv4.c: 703: currentTCB->localSeqno = tcpHeader.ackNumber;
 10490  0014C0  0E10               	movlw	16
 10491  0014C2  243B               	addwf	_currentTCB,w,c
 10492  0014C4  EC67  F011         	call	PL387	;call to abstracted procedure
 10493  0014C8  64F7               	cpfsgt	tblptrh,c
 10494  0014CA  D003               	bra	u12717
 10495  0014CC  EC2E  F012         	call	PL457	;call to abstracted procedure
 10496  0014D0  D004               	bra	u12710
 10497  0014D2                     u12717:
 10498  0014D2  EC73  F011         	call	PL389	;call to abstracted procedure
 10499  0014D6  EC6E  F012         	call	PL493	;call to abstracted procedure
 10500  0014DA                     u12710:
 10501                           
 10502                           ;tcpv4.c: 704: currentTCB->flags = 0x04U | 0x10U;
 10503  0014DA  EC78  F011         	call	PL393	;call to abstracted procedure
 10504  0014DE  EC67  F011         	call	PL387	;call to abstracted procedure
 10505  0014E2  64F7               	cpfsgt	tblptrh,c
 10506  0014E4  D004               	bra	u12727
 10507  0014E6  0E14               	movlw	20
 10508  0014E8  6EF5               	movwf	tablat,c
 10509  0014EA  000C               	tblwt		*
 10510  0014EC  D004               	bra	u12720
 10511  0014EE                     u12727:
 10512  0014EE  EC73  F011         	call	PL389	;call to abstracted procedure
 10513  0014F2  0E14               	movlw	20
 10514  0014F4  6EEF               	movwf	indf0,c
 10515  0014F6                     u12720:
 10516                           
 10517                           ;tcpv4.c: 705: if(TCP_Snd(currentTCB))
 10518  0014F6  EC41  F012         	call	PL465	;call to abstracted procedure
 10519  0014FA  ECAC  F012         	call	_TCP_Snd	;wreg free
 10520  0014FE                     L16:
 10521  0014FE  0900               	iorlw	0
 10522  001500  E001 D6C0          	bnz	l1194
 10523  001504  EF4A  F011         	goto	l8908
 10524  001508                     l8632:
 10525                           
 10526                           ; BSR set to: 1
 10527                           ;tcpv4.c: 713: ;
 10528                           ;tcpv4.c: 715: currentTCB->timeout = 0;
 10529  001508  0E30               	movlw	48
 10530  00150A  243B               	addwf	_currentTCB,w,c
 10531  00150C  EC67  F011         	call	PL387	;call to abstracted procedure
 10532  001510  64F7               	cpfsgt	tblptrh,c
 10533  001512  D003               	bra	u12747
 10534  001514  ECD2  F011         	call	PL423	;call to abstracted procedure
 10535  001518  D004               	bra	u12740
 10536  00151A                     u12747:
 10537  00151A  EC73  F011         	call	PL389	;call to abstracted procedure
 10538  00151E  6AEE               	clrf	postinc0,c
 10539  001520  6AEF               	clrf	indf0,c
 10540  001522                     u12740:
 10541                           
 10542                           ;tcpv4.c: 717: if ((currentTCB->localSeqno + 1) == tcpHeader.ackNumber)
 10543  001522  ECED  F011         	call	PL431	;call to abstracted procedure
 10544  001526  EC67  F011         	call	PL387	;call to abstracted procedure
 10545  00152A  64F7               	cpfsgt	tblptrh,c
 10546  00152C  D003               	bra	u12757
 10547  00152E  EC7C  F011         	call	PL395	;call to abstracted procedure
 10548  001532  D004               	bra	u12750
 10549  001534                     u12757:
 10550  001534  EC73  F011         	call	PL389	;call to abstracted procedure
 10551  001538  EC9D  F011         	call	PL403	;call to abstracted procedure
 10552  00153C                     u12750:
 10553  00153C  EC8F  F011         	call	PL401	;call to abstracted procedure
 10554  001540  51DA               	movf	(_tcpHeader+8)& (0+255),w,b
 10555  001542  1906               	xorwf	(??_TCP_FiniteStateMachine+6)& (0+255),w,b
 10556  001544  E178               	bnz	l8644
 10557  001546  51DB               	movf	(_tcpHeader+9)& (0+255),w,b
 10558  001548  1907               	xorwf	(??_TCP_FiniteStateMachine+7)& (0+255),w,b
 10559  00154A  E175               	bnz	l8644
 10560  00154C  51DC               	movf	(_tcpHeader+10)& (0+255),w,b
 10561  00154E  1908               	xorwf	(??_TCP_FiniteStateMachine+8)& (0+255),w,b
 10562  001550  E172               	bnz	l8644
 10563  001552  51DD               	movf	(_tcpHeader+11)& (0+255),w,b
 10564  001554  1909               	xorwf	(??_TCP_FiniteStateMachine+9)& (0+255),w,b
 10565  001556  A4D8               	btfss	status,2,c
 10566  001558                     u12761:
 10567  001558  D06E               	goto	l8644
 10568                           
 10569                           ; BSR set to: 1
 10570                           ;tcpv4.c: 718: {
 10571                           ;tcpv4.c: 720: currentTCB->localSeqno = currentTCB->localSeqno + 1;
 10572  00155A  0E10               	movlw	16
 10573  00155C  243B               	addwf	_currentTCB,w,c
 10574  00155E  EC67  F011         	call	PL387	;call to abstracted procedure
 10575  001562  64F7               	cpfsgt	tblptrh,c
 10576  001564  D003               	bra	u12777
 10577  001566  EC7C  F011         	call	PL395	;call to abstracted procedure
 10578  00156A  D004               	bra	u12770
 10579  00156C                     u12777:
 10580  00156C  EC73  F011         	call	PL389	;call to abstracted procedure
 10581  001570  EC9D  F011         	call	PL403	;call to abstracted procedure
 10582  001574                     u12770:
 10583  001574  EC8F  F011         	call	PL401	;call to abstracted procedure
 10584  001578  0E10               	movlw	16
 10585  00157A  EC0B  F012         	call	PL443	;call to abstracted procedure
 10586  00157E  64F7               	cpfsgt	tblptrh,c
 10587  001580  D003               	bra	u12787
 10588  001582  ECFE  F011         	call	PL441	;call to abstracted procedure
 10589  001586  D004               	bra	u12780
 10590  001588                     u12787:
 10591  001588  EC73  F011         	call	PL389	;call to abstracted procedure
 10592  00158C  EC53  F012         	call	PL475	;call to abstracted procedure
 10593  001590                     u12780:
 10594                           
 10595                           ;tcpv4.c: 721: currentTCB->flags = 0x10U;
 10596  001590  EC78  F011         	call	PL393	;call to abstracted procedure
 10597  001594  EC67  F011         	call	PL387	;call to abstracted procedure
 10598  001598  64F7               	cpfsgt	tblptrh,c
 10599  00159A  D004               	bra	u12797
 10600  00159C  0E10               	movlw	16
 10601  00159E  6EF5               	movwf	tablat,c
 10602  0015A0  000C               	tblwt		*
 10603  0015A2  D004               	bra	u12790
 10604  0015A4                     u12797:
 10605  0015A4  EC73  F011         	call	PL389	;call to abstracted procedure
 10606  0015A8  0E10               	movlw	16
 10607  0015AA  6EEF               	movwf	indf0,c
 10608  0015AC                     u12790:
 10609                           
 10610                           ;tcpv4.c: 724: currentTCB->remoteSeqno = tcpHeader.sequenceNumber;
 10611  0015AC  ECCA  F011         	call	PL417	;call to abstracted procedure
 10612  0015B0  EC67  F011         	call	PL387	;call to abstracted procedure
 10613  0015B4  64F7               	cpfsgt	tblptrh,c
 10614  0015B6  D003               	bra	u12807
 10615  0015B8  ECF1  F011         	call	PL439	;call to abstracted procedure
 10616  0015BC  D004               	bra	u12800
 10617  0015BE                     u12807:
 10618  0015BE  EC73  F011         	call	PL389	;call to abstracted procedure
 10619  0015C2  EC5C  F012         	call	PL477	;call to abstracted procedure
 10620  0015C6                     u12800:
 10621                           
 10622                           ;tcpv4.c: 725: currentTCB->remoteAck = tcpHeader.sequenceNumber + 1;
 10623  0015C6  ECD7  F011         	call	PL425	;call to abstracted procedure
 10624  0015CA  ECA6  F011         	call	PL405	;call to abstracted procedure
 10625  0015CE  64F7               	cpfsgt	tblptrh,c
 10626  0015D0  D005               	bra	u12817
 10627  0015D2  EC27  F012         	call	PL455	;call to abstracted procedure
 10628  0015D6  EC20  F012         	call	PL453	;call to abstracted procedure
 10629  0015DA  D004               	bra	u12810
 10630  0015DC                     u12817:
 10631  0015DC  EC73  F011         	call	PL389	;call to abstracted procedure
 10632  0015E0  EC65  F012         	call	PL487	;call to abstracted procedure
 10633  0015E4                     u12810:
 10634                           
 10635                           ;tcpv4.c: 727: currentTCB->remoteWnd = ((((uint16_t)tcpHeader.windowSize & (uint16_t)0xF
      +                          F00) >> 8) | (((uint16_t)tcpHeader.windowSize & (uint16_t)0x00FF) << 8));
 10636  0015E4  ECB3  F011         	call	PL407	;call to abstracted procedure
 10637  0015E8  ECA6  F011         	call	PL405	;call to abstracted procedure
 10638  0015EC  64F7               	cpfsgt	tblptrh,c
 10639  0015EE  D003               	bra	u12827
 10640  0015F0  EC20  F012         	call	PL453	;call to abstracted procedure
 10641  0015F4  D004               	bra	u12820
 10642  0015F6                     u12827:
 10643  0015F6  EC73  F011         	call	PL389	;call to abstracted procedure
 10644  0015FA  EC77  F012         	call	PL503	;call to abstracted procedure
 10645  0015FE                     u12820:
 10646                           
 10647                           ;tcpv4.c: 728: currentTCB->mss = tcpMss;
 10648  0015FE  ECC6  F011         	call	PL415	;call to abstracted procedure
 10649  001602  EC67  F011         	call	PL387	;call to abstracted procedure
 10650  001606  64F7               	cpfsgt	tblptrh,c
 10651  001608  D003               	bra	u12837
 10652  00160A  EC88  F012         	call	PL545	;call to abstracted procedure
 10653  00160E  D004               	bra	u12830
 10654  001610                     u12837:
 10655  001610  EC73  F011         	call	PL389	;call to abstracted procedure
 10656  001614  EC93  F012         	call	PL631	;call to abstracted procedure
 10657  001618                     u12830:
 10658                           
 10659                           ;tcpv4.c: 730: nextState = ESTABLISHED;
 10660  001618  0E04               	movlw	4
 10661  00161A  0101               	movlb	1	; () banked
 10662                           
 10663                           ; BSR set to: 1
 10664                           ;tcpv4.c: 731: currentTCB->socketState = SOCKET_CONNECTED;
 10665  00161C  EC1C  F012         	call	PL449	;call to abstracted procedure
 10666  001620  EC67  F011         	call	PL387	;call to abstracted procedure
 10667  001624  64F7               	cpfsgt	tblptrh,c
 10668  001626  D004               	bra	u12847
 10669  001628  0E03               	movlw	3
 10670  00162A  6EF5               	movwf	tablat,c
 10671  00162C  000C               	tblwt		*
 10672  00162E  D001               	bra	u12840
 10673  001630                     u12847:
 10674  001630  D1AF               	goto	u13197
 10675  001632                     u12840:
 10676                           
 10677                           ;tcpv4.c: 732: }
 10678  001632  EF4A  F011         	goto	l8908
 10679  001636                     l8644:
 10680                           
 10681                           ; BSR set to: 1
 10682                           ;tcpv4.c: 733: else
 10683                           ;tcpv4.c: 734: {
 10684                           ;tcpv4.c: 736: currentTCB->localSeqno = tcpHeader.ackNumber;
 10685  001636  0E10               	movlw	16
 10686  001638  243B               	addwf	_currentTCB,w,c
 10687  00163A  EC67  F011         	call	PL387	;call to abstracted procedure
 10688  00163E  64F7               	cpfsgt	tblptrh,c
 10689  001640  D003               	bra	u12857
 10690  001642  EC2E  F012         	call	PL457	;call to abstracted procedure
 10691  001646  D004               	bra	u12850
 10692  001648                     u12857:
 10693  001648  EC73  F011         	call	PL389	;call to abstracted procedure
 10694  00164C  EC6E  F012         	call	PL493	;call to abstracted procedure
 10695  001650                     u12850:
 10696                           
 10697                           ;tcpv4.c: 737: currentTCB->flags = 0x04U;
 10698  001650  EC78  F011         	call	PL393	;call to abstracted procedure
 10699  001654  EC67  F011         	call	PL387	;call to abstracted procedure
 10700  001658  64F7               	cpfsgt	tblptrh,c
 10701  00165A  D004               	bra	u12867
 10702  00165C  0E04               	movlw	4
 10703  00165E  6EF5               	movwf	tablat,c
 10704  001660  000C               	tblwt		*
 10705  001662  D004               	bra	u12860
 10706  001664                     u12867:
 10707  001664  EC73  F011         	call	PL389	;call to abstracted procedure
 10708  001668  0E04               	movlw	4
 10709  00166A  6EEF               	movwf	indf0,c
 10710  00166C                     u12860:
 10711                           
 10712                           ;tcpv4.c: 738: if(TCP_Snd(currentTCB))
 10713  00166C  EC41  F012         	call	PL465	;call to abstracted procedure
 10714  001670  ECAC  F012         	call	_TCP_Snd	;wreg free
 10715  001674  D744               	goto	L16
 10716  001676                     l8654:
 10717                           
 10718                           ; BSR set to: 1
 10719                           ;tcpv4.c: 752: ;
 10720                           ;tcpv4.c: 755: if (currentTCB->timeoutsCount)
 10721  001676  0E34               	movlw	52
 10722  001678  243B               	addwf	_currentTCB,w,c
 10723  00167A  EC67  F011         	call	PL387	;call to abstracted procedure
 10724  00167E  64F7               	cpfsgt	tblptrh,c
 10725  001680  D003               	bra	u12887
 10726  001682  0008               	tblrd		*
 10727  001684  50F5               	movf	tablat,w,c
 10728  001686  D003               	bra	u12880
 10729  001688                     u12887:
 10730  001688  EC73  F011         	call	PL389	;call to abstracted procedure
 10731  00168C  50EF               	movf	indf0,w,c
 10732  00168E                     u12880:
 10733  00168E  0900               	iorlw	0
 10734  001690  E037               	bz	l8670
 10735                           
 10736                           ;tcpv4.c: 756: {
 10737                           ;tcpv4.c: 757: if(TCP_Snd(currentTCB))
 10738  001692  EC41  F012         	call	PL465	;call to abstracted procedure
 10739  001696  ECAC  F012         	call	_TCP_Snd	;wreg free
 10740  00169A  0900               	iorlw	0
 10741  00169C  E102 EF4A  F011    	bz	l8908
 10742                           
 10743                           ; BSR set to: 0
 10744                           ;tcpv4.c: 758: {
 10745                           ;tcpv4.c: 759: if (currentTCB->flags & 0x04U)
 10746  0016A2  EC78  F011         	call	PL393	;call to abstracted procedure
 10747  0016A6  EC67  F011         	call	PL387	;call to abstracted procedure
 10748  0016AA  64F7               	cpfsgt	tblptrh,c
 10749  0016AC  D003               	bra	u12917
 10750  0016AE  0008               	tblrd		*
 10751  0016B0  50F5               	movf	tablat,w,c
 10752  0016B2  D003               	bra	u12910
 10753  0016B4                     u12917:
 10754  0016B4  EC73  F011         	call	PL389	;call to abstracted procedure
 10755  0016B8  50EF               	movf	indf0,w,c
 10756  0016BA                     u12910:
 10757  0016BA  0101               	movlb	1	; () banked
 10758  0016BC  6F02               	movwf	(??_TCP_FiniteStateMachine+2)& (0+255),b
 10759  0016BE  B502               	btfsc	(??_TCP_FiniteStateMachine+2)& (0+255),2,b
 10760  0016C0  D5E1               	goto	l1194
 10761                           
 10762                           ; BSR set to: 1
 10763                           ;tcpv4.c: 764: if(currentTCB->flags & 0x10U)
 10764  0016C2  0E35               	movlw	53
 10765  0016C4  243B               	addwf	_currentTCB,w,c
 10766  0016C6  EC67  F011         	call	PL387	;call to abstracted procedure
 10767  0016CA  64F7               	cpfsgt	tblptrh,c
 10768  0016CC  D003               	bra	u12937
 10769  0016CE  0008               	tblrd		*
 10770  0016D0  50F5               	movf	tablat,w,c
 10771  0016D2  D003               	bra	u12930
 10772  0016D4                     u12937:
 10773  0016D4  EC73  F011         	call	PL389	;call to abstracted procedure
 10774  0016D8  50EF               	movf	indf0,w,c
 10775  0016DA                     u12930:
 10776  0016DA  0101               	movlb	1	; () banked
 10777  0016DC  6F02               	movwf	(??_TCP_FiniteStateMachine+2)& (0+255),b
 10778  0016DE  A902               	btfss	(??_TCP_FiniteStateMachine+2)& (0+255),4,b
 10779  0016E0  EF4A  F011         	goto	l8908
 10780                           
 10781                           ; BSR set to: 1
 10782                           ;tcpv4.c: 765: {
 10783                           ;tcpv4.c: 766: nextState = ESTABLISHED;
 10784  0016E4  0E04               	movlw	4
 10785                           
 10786                           ; BSR set to: 1
 10787                           ;tcpv4.c: 767: currentTCB->socketState = SOCKET_CONNECTED;
 10788  0016E6  EC1C  F012         	call	PL449	;call to abstracted procedure
 10789  0016EA  EC67  F011         	call	PL387	;call to abstracted procedure
 10790  0016EE  64F7               	cpfsgt	tblptrh,c
 10791  0016F0  D004               	bra	u12957
 10792  0016F2  0E03               	movlw	3
 10793  0016F4  6EF5               	movwf	tablat,c
 10794  0016F6  000C               	tblwt		*
 10795  0016F8  D001               	bra	u12950
 10796  0016FA                     u12957:
 10797  0016FA  D14A               	goto	u13197
 10798  0016FC                     u12950:
 10799  0016FC  EF4A  F011         	goto	l8908
 10800  001700                     l8670:
 10801                           
 10802                           ;tcpv4.c: 771: {
 10803                           ;tcpv4.c: 773: currentTCB->flags = 0x04U;
 10804  001700  EC78  F011         	call	PL393	;call to abstracted procedure
 10805  001704  EC67  F011         	call	PL387	;call to abstracted procedure
 10806  001708  64F7               	cpfsgt	tblptrh,c
 10807  00170A  D004               	bra	u12967
 10808  00170C  0E04               	movlw	4
 10809  00170E  6EF5               	movwf	tablat,c
 10810  001710  000C               	tblwt		*
 10811  001712  D004               	bra	u12960
 10812  001714                     u12967:
 10813  001714  EC73  F011         	call	PL389	;call to abstracted procedure
 10814  001718  0E04               	movlw	4
 10815  00171A  6EEF               	movwf	indf0,c
 10816  00171C                     u12960:
 10817                           
 10818                           ;tcpv4.c: 774: if(TCP_Snd(currentTCB))
 10819  00171C  EC41  F012         	call	PL465	;call to abstracted procedure
 10820  001720  ECAC  F012         	call	_TCP_Snd	;wreg free
 10821  001724  D6EC               	goto	L16
 10822  001726                     l8682:
 10823  001726  0101               	movlb	1	; () banked
 10824  001728  510F               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 10825                           
 10826                           ; Switch size 1, requested type "space"
 10827                           ; Number of cases is 7, Range of values is 0 to 12
 10828                           ; switch strategies available:
 10829                           ; Name         Instructions Cycles
 10830                           ; simple_byte           22    12 (average)
 10831                           ;	Chosen strategy is simple_byte
 10832  00172A  E101 D5AB          	bz	l1194
 10833  00172E  0A03               	xorlw	3	; case 3
 10834  001730  E101 D5BA          	bz	l8592
 10835  001734  0A07               	xorlw	7	; case 4
 10836  001736  E101 D6E7          	bz	l8632
 10837  00173A  0A01               	xorlw	1	; case 5
 10838  00173C  E101 D621          	bz	l8610
 10839  001740  0A0C               	xorlw	12	; case 9
 10840  001742  E101 D59F          	bz	l1194
 10841  001746  0A03               	xorlw	3	; case 10
 10842  001748  E101 D59C          	bz	l1194
 10843  00174C  0A06               	xorlw	6	; case 12
 10844  00174E  E093               	bz	l8654
 10845  001750  EF4A  F011         	goto	l8908
 10846  001754                     l8684:
 10847                           
 10848                           ; BSR set to: 1
 10849                           ;tcpv4.c: 796: ;
 10850                           ;tcpv4.c: 797: if (currentTCB->localPort == tcpHeader.destPort)
 10851  001754  EC98  F012         	call	PL635	;call to abstracted procedure
 10852  001758  64F7               	cpfsgt	tblptrh,c
 10853  00175A  D003               	bra	u12987
 10854  00175C  ECA0  F012         	call	PL637	;call to abstracted procedure
 10855  001760  D004               	bra	u12980
 10856  001762                     u12987:
 10857  001762  EC73  F011         	call	PL389	;call to abstracted procedure
 10858  001766  ECA7  F012         	call	PL683	;call to abstracted procedure
 10859  00176A                     u12980:
 10860  00176A  0101               	movlb	1	; () banked
 10861  00176C  51D4               	movf	(_tcpHeader+2)& (0+255),w,b
 10862  00176E  1900               	xorwf	??_TCP_FiniteStateMachine& (0+255),w,b
 10863  001770  E103               	bnz	u12991
 10864  001772  51D5               	movf	(_tcpHeader+3)& (0+255),w,b
 10865  001774  1901               	xorwf	(??_TCP_FiniteStateMachine+1)& (0+255),w,b
 10866  001776  A4D8               	btfss	status,2,c
 10867  001778                     u12991:
 10868  001778  EF4A  F011         	goto	l8908
 10869                           
 10870                           ; BSR set to: 1
 10871                           ;tcpv4.c: 798: {
 10872                           ;tcpv4.c: 800: currentTCB->timeout = 0;
 10873  00177C  0E30               	movlw	48
 10874  00177E  243B               	addwf	_currentTCB,w,c
 10875  001780  EC67  F011         	call	PL387	;call to abstracted procedure
 10876  001784  64F7               	cpfsgt	tblptrh,c
 10877  001786  D003               	bra	u13007
 10878  001788  ECD2  F011         	call	PL423	;call to abstracted procedure
 10879  00178C  D004               	bra	u13000
 10880  00178E                     u13007:
 10881  00178E  EC73  F011         	call	PL389	;call to abstracted procedure
 10882  001792  6AEE               	clrf	postinc0,c
 10883  001794  6AEF               	clrf	indf0,c
 10884  001796                     u13000:
 10885                           
 10886                           ;tcpv4.c: 804: if ((currentTCB->destIP == receivedRemoteAddress) && (currentTCB->destPor
      +                          t == tcpHeader.sourcePort))
 10887  001796  EC84  F012         	call	PL517	;call to abstracted procedure
 10888  00179A  EC67  F011         	call	PL387	;call to abstracted procedure
 10889  00179E  64F7               	cpfsgt	tblptrh,c
 10890  0017A0  D003               	bra	u13017
 10891  0017A2  EC7C  F011         	call	PL395	;call to abstracted procedure
 10892  0017A6  D004               	bra	u13010
 10893  0017A8                     u13017:
 10894  0017A8  EC73  F011         	call	PL389	;call to abstracted procedure
 10895  0017AC  EC9D  F011         	call	PL403	;call to abstracted procedure
 10896  0017B0                     u13010:
 10897  0017B0  5037               	movf	_receivedRemoteAddress,w,c
 10898  0017B2  0101               	movlb	1	; () banked
 10899  0017B4  1902               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 10900  0017B6  E13D               	bnz	l8694
 10901  0017B8  5038               	movf	_receivedRemoteAddress+1,w,c
 10902  0017BA  1903               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 10903  0017BC  E13A               	bnz	l8694
 10904  0017BE  5039               	movf	_receivedRemoteAddress+2,w,c
 10905  0017C0  1904               	xorwf	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 10906  0017C2  E137               	bnz	l8694
 10907  0017C4  503A               	movf	_receivedRemoteAddress+3,w,c
 10908  0017C6  1905               	xorwf	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 10909  0017C8  E134               	bnz	l8694
 10910                           
 10911                           ; BSR set to: 1
 10912  0017CA  0E06               	movlw	6
 10913  0017CC  243B               	addwf	_currentTCB,w,c
 10914  0017CE  EC67  F011         	call	PL387	;call to abstracted procedure
 10915  0017D2  64F7               	cpfsgt	tblptrh,c
 10916  0017D4  D004               	bra	u13037
 10917  0017D6  0009               	tblrd		*+
 10918  0017D8  EC89  F011         	call	PL397	;call to abstracted procedure
 10919  0017DC  D006               	bra	u13030
 10920  0017DE                     u13037:
 10921  0017DE  EC73  F011         	call	PL389	;call to abstracted procedure
 10922  0017E2  CFEE F102          	movff	postinc0,??_TCP_FiniteStateMachine+2
 10923  0017E6  CFEE F103          	movff	postinc0,??_TCP_FiniteStateMachine+3
 10924  0017EA                     u13030:
 10925  0017EA  0101               	movlb	1	; () banked
 10926  0017EC  51D2               	movf	_tcpHeader& (0+255),w,b
 10927  0017EE  1902               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 10928  0017F0  E120               	bnz	l8694
 10929  0017F2  51D3               	movf	(_tcpHeader+1)& (0+255),w,b
 10930  0017F4  1903               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 10931  0017F6  E11D               	bnz	l8694
 10932                           
 10933                           ; BSR set to: 1
 10934                           ;tcpv4.c: 805: if ((currentTCB->localSeqno + 1) == tcpHeader.ackNumber)
 10935  0017F8  0E10               	movlw	16
 10936  0017FA  243B               	addwf	_currentTCB,w,c
 10937  0017FC  EC67  F011         	call	PL387	;call to abstracted procedure
 10938  001800  64F7               	cpfsgt	tblptrh,c
 10939  001802  D003               	bra	u13057
 10940  001804  EC7C  F011         	call	PL395	;call to abstracted procedure
 10941  001808  D004               	bra	u13050
 10942  00180A                     u13057:
 10943  00180A  EC73  F011         	call	PL389	;call to abstracted procedure
 10944  00180E  EC9D  F011         	call	PL403	;call to abstracted procedure
 10945  001812                     u13050:
 10946  001812  EC8F  F011         	call	PL401	;call to abstracted procedure
 10947  001816  51DA               	movf	(_tcpHeader+8)& (0+255),w,b
 10948  001818  1906               	xorwf	(??_TCP_FiniteStateMachine+6)& (0+255),w,b
 10949  00181A  E10B               	bnz	l8694
 10950  00181C  51DB               	movf	(_tcpHeader+9)& (0+255),w,b
 10951  00181E  1907               	xorwf	(??_TCP_FiniteStateMachine+7)& (0+255),w,b
 10952  001820  E108               	bnz	l8694
 10953  001822  51DC               	movf	(_tcpHeader+10)& (0+255),w,b
 10954  001824  1908               	xorwf	(??_TCP_FiniteStateMachine+8)& (0+255),w,b
 10955  001826  E105               	bnz	l8694
 10956  001828  51DD               	movf	(_tcpHeader+11)& (0+255),w,b
 10957  00182A  1909               	xorwf	(??_TCP_FiniteStateMachine+9)& (0+255),w,b
 10958  00182C  E102               	bnz	l8694
 10959                           
 10960                           ; BSR set to: 1
 10961                           ;tcpv4.c: 807: nextState = ESTABLISHED;
 10962  00182E  0E04               	movlw	4
 10963  001830  6F10               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 10964  001832                     l8694:
 10965                           
 10966                           ; BSR set to: 1
 10967                           ;tcpv4.c: 808: currentTCB->socketState = SOCKET_CONNECTED;
 10968  001832  0E36               	movlw	54
 10969  001834  243B               	addwf	_currentTCB,w,c
 10970  001836  EC67  F011         	call	PL387	;call to abstracted procedure
 10971  00183A  64F7               	cpfsgt	tblptrh,c
 10972  00183C  D004               	bra	u13077
 10973  00183E  0E03               	movlw	3
 10974  001840  6EF5               	movwf	tablat,c
 10975  001842  000C               	tblwt		*
 10976  001844  D001               	bra	u13070
 10977  001846                     u13077:
 10978  001846  D0A4               	goto	u13197
 10979  001848                     u13070:
 10980  001848  EF4A  F011         	goto	l8908
 10981  00184C                     l8696:
 10982                           
 10983                           ; BSR set to: 1
 10984                           ;tcpv4.c: 812: ;
 10985                           ;tcpv4.c: 816: if ((currentTCB->destIP == receivedRemoteAddress) && (currentTCB->destPor
      +                          t == tcpHeader.sourcePort))
 10986  00184C  0E02               	movlw	2
 10987  00184E  243B               	addwf	_currentTCB,w,c
 10988  001850  EC67  F011         	call	PL387	;call to abstracted procedure
 10989  001854  64F7               	cpfsgt	tblptrh,c
 10990  001856  D003               	bra	u13087
 10991  001858  EC7C  F011         	call	PL395	;call to abstracted procedure
 10992  00185C  D004               	bra	u13080
 10993  00185E                     u13087:
 10994  00185E  EC73  F011         	call	PL389	;call to abstracted procedure
 10995  001862  EC9D  F011         	call	PL403	;call to abstracted procedure
 10996  001866                     u13080:
 10997  001866  5037               	movf	_receivedRemoteAddress,w,c
 10998  001868  0101               	movlb	1	; () banked
 10999  00186A  1902               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 11000  00186C  E109               	bnz	u13091
 11001  00186E  5038               	movf	_receivedRemoteAddress+1,w,c
 11002  001870  1903               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 11003  001872  E106               	bnz	u13091
 11004  001874  5039               	movf	_receivedRemoteAddress+2,w,c
 11005  001876  1904               	xorwf	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 11006  001878  E103               	bnz	u13091
 11007  00187A  503A               	movf	_receivedRemoteAddress+3,w,c
 11008  00187C  1905               	xorwf	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 11009  00187E  A4D8               	btfss	status,2,c
 11010  001880                     u13091:
 11011  001880  EF4A  F011         	goto	l8908
 11012                           
 11013                           ; BSR set to: 1
 11014  001884  0E06               	movlw	6
 11015  001886  243B               	addwf	_currentTCB,w,c
 11016  001888  EC67  F011         	call	PL387	;call to abstracted procedure
 11017  00188C  64F7               	cpfsgt	tblptrh,c
 11018  00188E  D004               	bra	u13107
 11019  001890  0009               	tblrd		*+
 11020  001892  EC89  F011         	call	PL397	;call to abstracted procedure
 11021  001896  D006               	bra	u13100
 11022  001898                     u13107:
 11023  001898  EC73  F011         	call	PL389	;call to abstracted procedure
 11024  00189C  CFEE F102          	movff	postinc0,??_TCP_FiniteStateMachine+2
 11025  0018A0  CFEE F103          	movff	postinc0,??_TCP_FiniteStateMachine+3
 11026  0018A4                     u13100:
 11027  0018A4  0101               	movlb	1	; () banked
 11028  0018A6  51D2               	movf	_tcpHeader& (0+255),w,b
 11029  0018A8  1902               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 11030  0018AA  E103               	bnz	u13111
 11031  0018AC  51D3               	movf	(_tcpHeader+1)& (0+255),w,b
 11032  0018AE  1903               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 11033  0018B0  A4D8               	btfss	status,2,c
 11034  0018B2                     u13111:
 11035  0018B2  EF4A  F011         	goto	l8908
 11036                           
 11037                           ; BSR set to: 1
 11038                           ;tcpv4.c: 817: {
 11039                           ;tcpv4.c: 820: if (currentTCB->remoteAck == tcpHeader.sequenceNumber)
 11040  0018B6  0E0C               	movlw	12
 11041  0018B8  243B               	addwf	_currentTCB,w,c
 11042  0018BA  EC67  F011         	call	PL387	;call to abstracted procedure
 11043  0018BE  64F7               	cpfsgt	tblptrh,c
 11044  0018C0  D003               	bra	u13127
 11045  0018C2  EC7C  F011         	call	PL395	;call to abstracted procedure
 11046  0018C6  D004               	bra	u13120
 11047  0018C8                     u13127:
 11048  0018C8  EC73  F011         	call	PL389	;call to abstracted procedure
 11049  0018CC  EC9D  F011         	call	PL403	;call to abstracted procedure
 11050  0018D0                     u13120:
 11051  0018D0  0101               	movlb	1	; () banked
 11052  0018D2  51D6               	movf	(_tcpHeader+4)& (0+255),w,b
 11053  0018D4  1902               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 11054  0018D6  E109               	bnz	u13131
 11055  0018D8  51D7               	movf	(_tcpHeader+5)& (0+255),w,b
 11056  0018DA  1903               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 11057  0018DC  E106               	bnz	u13131
 11058  0018DE  51D8               	movf	(_tcpHeader+6)& (0+255),w,b
 11059  0018E0  1904               	xorwf	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 11060  0018E2  E103               	bnz	u13131
 11061  0018E4  51D9               	movf	(_tcpHeader+7)& (0+255),w,b
 11062  0018E6  1905               	xorwf	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 11063  0018E8  A4D8               	btfss	status,2,c
 11064  0018EA                     u13131:
 11065  0018EA  EF4A  F011         	goto	l8908
 11066                           
 11067                           ; BSR set to: 1
 11068                           ;tcpv4.c: 821: {
 11069                           ;tcpv4.c: 823: if ((currentTCB->localSeqno + 1) == tcpHeader.ackNumber)
 11070  0018EE  0E10               	movlw	16
 11071  0018F0  243B               	addwf	_currentTCB,w,c
 11072  0018F2  EC67  F011         	call	PL387	;call to abstracted procedure
 11073  0018F6  64F7               	cpfsgt	tblptrh,c
 11074  0018F8  D003               	bra	u13147
 11075  0018FA  EC7C  F011         	call	PL395	;call to abstracted procedure
 11076  0018FE  D004               	bra	u13140
 11077  001900                     u13147:
 11078  001900  EC73  F011         	call	PL389	;call to abstracted procedure
 11079  001904  EC9D  F011         	call	PL403	;call to abstracted procedure
 11080  001908                     u13140:
 11081  001908  EC8F  F011         	call	PL401	;call to abstracted procedure
 11082  00190C  51DA               	movf	(_tcpHeader+8)& (0+255),w,b
 11083  00190E  1906               	xorwf	(??_TCP_FiniteStateMachine+6)& (0+255),w,b
 11084  001910  E109               	bnz	u13151
 11085  001912  51DB               	movf	(_tcpHeader+9)& (0+255),w,b
 11086  001914  1907               	xorwf	(??_TCP_FiniteStateMachine+7)& (0+255),w,b
 11087  001916  E106               	bnz	u13151
 11088  001918  51DC               	movf	(_tcpHeader+10)& (0+255),w,b
 11089  00191A  1908               	xorwf	(??_TCP_FiniteStateMachine+8)& (0+255),w,b
 11090  00191C  E103               	bnz	u13151
 11091  00191E  51DD               	movf	(_tcpHeader+11)& (0+255),w,b
 11092  001920  1909               	xorwf	(??_TCP_FiniteStateMachine+9)& (0+255),w,b
 11093  001922  A4D8               	btfss	status,2,c
 11094  001924                     u13151:
 11095  001924  EF4A  F011         	goto	l8908
 11096                           
 11097                           ; BSR set to: 1
 11098                           ;tcpv4.c: 824: {
 11099                           ;tcpv4.c: 825: currentTCB->localSeqno = currentTCB->localSeqno + 1;
 11100  001928  0E10               	movlw	16
 11101  00192A  243B               	addwf	_currentTCB,w,c
 11102  00192C  EC67  F011         	call	PL387	;call to abstracted procedure
 11103  001930  64F7               	cpfsgt	tblptrh,c
 11104  001932  D003               	bra	u13167
 11105  001934  EC7C  F011         	call	PL395	;call to abstracted procedure
 11106  001938  D004               	bra	u13160
 11107  00193A                     u13167:
 11108  00193A  EC73  F011         	call	PL389	;call to abstracted procedure
 11109  00193E  EC9D  F011         	call	PL403	;call to abstracted procedure
 11110  001942                     u13160:
 11111  001942  EC8F  F011         	call	PL401	;call to abstracted procedure
 11112  001946  0E10               	movlw	16
 11113  001948  EC0B  F012         	call	PL443	;call to abstracted procedure
 11114  00194C  64F7               	cpfsgt	tblptrh,c
 11115  00194E  D003               	bra	u13177
 11116  001950  ECFE  F011         	call	PL441	;call to abstracted procedure
 11117  001954  D004               	bra	u13170
 11118  001956                     u13177:
 11119  001956  EC73  F011         	call	PL389	;call to abstracted procedure
 11120  00195A  EC53  F012         	call	PL475	;call to abstracted procedure
 11121  00195E                     u13170:
 11122                           
 11123                           ;tcpv4.c: 827: currentTCB->timeout = 0;
 11124  00195E  ECE9  F011         	call	PL429	;call to abstracted procedure
 11125  001962  EC67  F011         	call	PL387	;call to abstracted procedure
 11126  001966  64F7               	cpfsgt	tblptrh,c
 11127  001968  D003               	bra	u13187
 11128  00196A  ECD2  F011         	call	PL423	;call to abstracted procedure
 11129  00196E  D004               	bra	u13180
 11130  001970                     u13187:
 11131  001970  EC73  F011         	call	PL389	;call to abstracted procedure
 11132  001974  6AEE               	clrf	postinc0,c
 11133  001976  6AEF               	clrf	indf0,c
 11134  001978                     u13180:
 11135                           
 11136                           ;tcpv4.c: 829: nextState = ESTABLISHED;
 11137  001978  0E04               	movlw	4
 11138  00197A  0101               	movlb	1	; () banked
 11139                           
 11140                           ; BSR set to: 1
 11141                           ;tcpv4.c: 830: currentTCB->socketState = SOCKET_CONNECTED;
 11142  00197C  EC1C  F012         	call	PL449	;call to abstracted procedure
 11143  001980  EC67  F011         	call	PL387	;call to abstracted procedure
 11144  001984  64F7               	cpfsgt	tblptrh,c
 11145  001986  D004               	bra	u13197
 11146  001988  0E03               	movlw	3
 11147  00198A  6EF5               	movwf	tablat,c
 11148  00198C  000C               	tblwt		*
 11149  00198E  D004               	bra	u13190
 11150  001990                     u13197:
 11151  001990  EC73  F011         	call	PL389	;call to abstracted procedure
 11152  001994  0E03               	movlw	3
 11153  001996  6EEF               	movwf	indf0,c
 11154  001998                     u13190:
 11155  001998  EF4A  F011         	goto	l8908
 11156  00199C                     l8710:
 11157                           
 11158                           ; BSR set to: 1
 11159                           ;tcpv4.c: 836: ;
 11160                           ;tcpv4.c: 838: currentTCB->timeout = 0;
 11161  00199C  0E30               	movlw	48
 11162  00199E  243B               	addwf	_currentTCB,w,c
 11163  0019A0  EC67  F011         	call	PL387	;call to abstracted procedure
 11164  0019A4  64F7               	cpfsgt	tblptrh,c
 11165  0019A6  D003               	bra	u13207
 11166  0019A8  ECD2  F011         	call	PL423	;call to abstracted procedure
 11167  0019AC  D004               	bra	u13200
 11168  0019AE                     u13207:
 11169  0019AE  EC73  F011         	call	PL389	;call to abstracted procedure
 11170  0019B2  6AEE               	clrf	postinc0,c
 11171  0019B4  6AEF               	clrf	indf0,c
 11172  0019B6                     u13200:
 11173                           
 11174                           ;tcpv4.c: 840: currentTCB->flags = 0x01U;
 11175  0019B6  EC78  F011         	call	PL393	;call to abstracted procedure
 11176  0019BA  EC67  F011         	call	PL387	;call to abstracted procedure
 11177  0019BE  64F7               	cpfsgt	tblptrh,c
 11178  0019C0  D004               	bra	u13217
 11179  0019C2  0E01               	movlw	1
 11180  0019C4  6EF5               	movwf	tablat,c
 11181  0019C6  000C               	tblwt		*
 11182  0019C8  D004               	bra	u13210
 11183  0019CA                     u13217:
 11184  0019CA  EC73  F011         	call	PL389	;call to abstracted procedure
 11185  0019CE  0E01               	movlw	1
 11186  0019D0  6EEF               	movwf	indf0,c
 11187  0019D2                     u13210:
 11188                           
 11189                           ;tcpv4.c: 841: currentTCB->timeout = ((unsigned long)1*2);
 11190  0019D2  ECE9  F011         	call	PL429	;call to abstracted procedure
 11191  0019D6  EC67  F011         	call	PL387	;call to abstracted procedure
 11192  0019DA  64F7               	cpfsgt	tblptrh,c
 11193  0019DC  D003               	bra	u13227
 11194  0019DE  EC3B  F012         	call	PL459	;call to abstracted procedure
 11195  0019E2  D004               	bra	u13220
 11196  0019E4                     u13227:
 11197  0019E4  EC73  F011         	call	PL389	;call to abstracted procedure
 11198  0019E8  EC8F  F012         	call	PL615	;call to abstracted procedure
 11199  0019EC                     u13220:
 11200                           
 11201                           ;tcpv4.c: 842: currentTCB->timeoutReloadValue = ((unsigned long)1*2);
 11202  0019EC  ECE5  F011         	call	PL427	;call to abstracted procedure
 11203  0019F0  EC67  F011         	call	PL387	;call to abstracted procedure
 11204  0019F4  64F7               	cpfsgt	tblptrh,c
 11205  0019F6  D003               	bra	u13237
 11206  0019F8  EC3B  F012         	call	PL459	;call to abstracted procedure
 11207  0019FC  D004               	bra	u13230
 11208  0019FE                     u13237:
 11209  0019FE  EC73  F011         	call	PL389	;call to abstracted procedure
 11210  001A02  EC8F  F012         	call	PL615	;call to abstracted procedure
 11211  001A06                     u13230:
 11212                           
 11213                           ;tcpv4.c: 843: currentTCB->timeoutsCount = (5u);
 11214  001A06  ECCE  F011         	call	PL419	;call to abstracted procedure
 11215  001A0A  EC67  F011         	call	PL387	;call to abstracted procedure
 11216  001A0E  64F7               	cpfsgt	tblptrh,c
 11217  001A10  D004               	bra	u13247
 11218  001A12  0E05               	movlw	5
 11219  001A14  6EF5               	movwf	tablat,c
 11220  001A16  000C               	tblwt		*
 11221  001A18  D004               	bra	u13240
 11222  001A1A                     u13247:
 11223  001A1A  EC73  F011         	call	PL389	;call to abstracted procedure
 11224  001A1E  0E05               	movlw	5
 11225  001A20  6EEF               	movwf	indf0,c
 11226  001A22                     u13240:
 11227  001A22                     l8712:
 11228                           
 11229                           ;tcpv4.c: 845: nextState = FIN_WAIT_1;
 11230  001A22  0E05               	movlw	5
 11231  001A24  0101               	movlb	1	; () banked
 11232  001A26  6F10               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 11233  001A28                     l8714:
 11234                           
 11235                           ;tcpv4.c: 846: TCP_Snd(currentTCB);
 11236  001A28  EC41  F012         	call	PL465	;call to abstracted procedure
 11237  001A2C  ECAC  F012         	call	_TCP_Snd	;wreg free
 11238                           
 11239                           ;tcpv4.c: 847: break;
 11240  001A30  EF4A  F011         	goto	l8908
 11241  001A34                     l8716:
 11242                           
 11243                           ; BSR set to: 1
 11244                           ;tcpv4.c: 849: case RCV_RST:
 11245                           ;tcpv4.c: 851: ;
 11246                           ;tcpv4.c: 853: if (currentTCB->localPort == tcpHeader.destPort)
 11247  001A34  EC98  F012         	call	PL635	;call to abstracted procedure
 11248  001A38  64F7               	cpfsgt	tblptrh,c
 11249  001A3A  D003               	bra	u13257
 11250  001A3C  ECA0  F012         	call	PL637	;call to abstracted procedure
 11251  001A40  D004               	bra	u13250
 11252  001A42                     u13257:
 11253  001A42  EC73  F011         	call	PL389	;call to abstracted procedure
 11254  001A46  ECA7  F012         	call	PL683	;call to abstracted procedure
 11255  001A4A                     u13250:
 11256  001A4A  0101               	movlb	1	; () banked
 11257  001A4C  51D4               	movf	(_tcpHeader+2)& (0+255),w,b
 11258  001A4E  1900               	xorwf	??_TCP_FiniteStateMachine& (0+255),w,b
 11259  001A50  E103               	bnz	u13261
 11260  001A52  51D5               	movf	(_tcpHeader+3)& (0+255),w,b
 11261  001A54  1901               	xorwf	(??_TCP_FiniteStateMachine+1)& (0+255),w,b
 11262  001A56  A4D8               	btfss	status,2,c
 11263  001A58                     u13261:
 11264  001A58  EF4A  F011         	goto	l8908
 11265                           
 11266                           ; BSR set to: 1
 11267                           ;tcpv4.c: 854: {
 11268                           ;tcpv4.c: 855: if (currentTCB->remoteAck == tcpHeader.sequenceNumber)
 11269  001A5C  0E0C               	movlw	12
 11270  001A5E  243B               	addwf	_currentTCB,w,c
 11271  001A60  EC67  F011         	call	PL387	;call to abstracted procedure
 11272  001A64  64F7               	cpfsgt	tblptrh,c
 11273  001A66  D003               	bra	u13277
 11274  001A68  EC7C  F011         	call	PL395	;call to abstracted procedure
 11275  001A6C  D004               	bra	u13270
 11276  001A6E                     u13277:
 11277  001A6E  EC73  F011         	call	PL389	;call to abstracted procedure
 11278  001A72  EC9D  F011         	call	PL403	;call to abstracted procedure
 11279  001A76                     u13270:
 11280  001A76  0101               	movlb	1	; () banked
 11281  001A78  51D6               	movf	(_tcpHeader+4)& (0+255),w,b
 11282  001A7A  1902               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 11283  001A7C  E109               	bnz	u13281
 11284  001A7E  51D7               	movf	(_tcpHeader+5)& (0+255),w,b
 11285  001A80  1903               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 11286  001A82  E106               	bnz	u13281
 11287  001A84  51D8               	movf	(_tcpHeader+6)& (0+255),w,b
 11288  001A86  1904               	xorwf	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 11289  001A88  E103               	bnz	u13281
 11290  001A8A  51D9               	movf	(_tcpHeader+7)& (0+255),w,b
 11291  001A8C  1905               	xorwf	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 11292  001A8E  A4D8               	btfss	status,2,c
 11293  001A90                     u13281:
 11294  001A90  EF4A  F011         	goto	l8908
 11295                           
 11296                           ; BSR set to: 1
 11297                           ;tcpv4.c: 856: {
 11298                           ;tcpv4.c: 857: ;
 11299                           ;tcpv4.c: 858: currentTCB->destIP = 0;
 11300  001A94  0E02               	movlw	2
 11301  001A96  243B               	addwf	_currentTCB,w,c
 11302  001A98  EC67  F011         	call	PL387	;call to abstracted procedure
 11303  001A9C  64F7               	cpfsgt	tblptrh,c
 11304  001A9E  D007               	bra	u13297
 11305  001AA0  6AF5               	clrf	tablat,c
 11306  001AA2  000D               	tblwt		*+
 11307  001AA4  6AF5               	clrf	tablat,c
 11308  001AA6  000D               	tblwt		*+
 11309  001AA8  ECD2  F011         	call	PL423	;call to abstracted procedure
 11310  001AAC  D004               	bra	u13290
 11311  001AAE                     u13297:
 11312  001AAE  EC73  F011         	call	PL389	;call to abstracted procedure
 11313  001AB2  EC46  F012         	call	PL467	;call to abstracted procedure
 11314  001AB6                     u13290:
 11315                           
 11316                           ;tcpv4.c: 859: currentTCB->destPort = 0;
 11317  001AB6  EC18  F012         	call	PL447	;call to abstracted procedure
 11318  001ABA  EC67  F011         	call	PL387	;call to abstracted procedure
 11319  001ABE  64F7               	cpfsgt	tblptrh,c
 11320  001AC0  D003               	bra	u13307
 11321  001AC2  ECD2  F011         	call	PL423	;call to abstracted procedure
 11322  001AC6  D004               	bra	u13300
 11323  001AC8                     u13307:
 11324  001AC8  EC73  F011         	call	PL389	;call to abstracted procedure
 11325  001ACC  6AEE               	clrf	postinc0,c
 11326  001ACE  6AEF               	clrf	indf0,c
 11327  001AD0                     u13300:
 11328                           
 11329                           ;tcpv4.c: 860: currentTCB->localSeqno = 0;
 11330  001AD0  ECED  F011         	call	PL431	;call to abstracted procedure
 11331  001AD4  DBFC               	call	PL387	;call to abstracted procedure
 11332  001AD6  64F7               	cpfsgt	tblptrh,c
 11333  001AD8  D007               	bra	u13317
 11334  001ADA  6AF5               	clrf	tablat,c
 11335  001ADC  000D               	tblwt		*+
 11336  001ADE  6AF5               	clrf	tablat,c
 11337  001AE0  000D               	tblwt		*+
 11338  001AE2  ECD2  F011         	call	PL423	;call to abstracted procedure
 11339  001AE6  D003               	bra	u13310
 11340  001AE8                     u13317:
 11341  001AE8  DBFE               	call	PL389	;call to abstracted procedure
 11342  001AEA  EC46  F012         	call	PL467	;call to abstracted procedure
 11343  001AEE                     u13310:
 11344                           
 11345                           ;tcpv4.c: 861: currentTCB->localLastAck = 0;
 11346  001AEE  EC4F  F012         	call	PL473	;call to abstracted procedure
 11347  001AF2  DBED               	call	PL387	;call to abstracted procedure
 11348  001AF4  64F7               	cpfsgt	tblptrh,c
 11349  001AF6  D007               	bra	u13327
 11350  001AF8  6AF5               	clrf	tablat,c
 11351  001AFA  000D               	tblwt		*+
 11352  001AFC  6AF5               	clrf	tablat,c
 11353  001AFE  000D               	tblwt		*+
 11354  001B00  ECD2  F011         	call	PL423	;call to abstracted procedure
 11355  001B04  D003               	bra	u13320
 11356  001B06                     u13327:
 11357  001B06  DBEF               	call	PL389	;call to abstracted procedure
 11358  001B08  EC46  F012         	call	PL467	;call to abstracted procedure
 11359  001B0C                     u13320:
 11360                           
 11361                           ;tcpv4.c: 862: currentTCB->remoteSeqno = 0;
 11362  001B0C  ECCA  F011         	call	PL417	;call to abstracted procedure
 11363  001B10  DBDE               	call	PL387	;call to abstracted procedure
 11364  001B12  64F7               	cpfsgt	tblptrh,c
 11365  001B14  D007               	bra	u13337
 11366  001B16  6AF5               	clrf	tablat,c
 11367  001B18  000D               	tblwt		*+
 11368  001B1A  6AF5               	clrf	tablat,c
 11369  001B1C  000D               	tblwt		*+
 11370  001B1E  ECD2  F011         	call	PL423	;call to abstracted procedure
 11371  001B22  D003               	bra	u13330
 11372  001B24                     u13337:
 11373  001B24  DBE0               	call	PL389	;call to abstracted procedure
 11374  001B26  EC46  F012         	call	PL467	;call to abstracted procedure
 11375  001B2A                     u13330:
 11376                           
 11377                           ;tcpv4.c: 863: currentTCB->remoteAck = 0;
 11378  001B2A  EC4B  F012         	call	PL471	;call to abstracted procedure
 11379  001B2E  DBCF               	call	PL387	;call to abstracted procedure
 11380  001B30  64F7               	cpfsgt	tblptrh,c
 11381  001B32  D007               	bra	u13347
 11382  001B34  6AF5               	clrf	tablat,c
 11383  001B36  000D               	tblwt		*+
 11384  001B38  6AF5               	clrf	tablat,c
 11385  001B3A  000D               	tblwt		*+
 11386  001B3C  ECD2  F011         	call	PL423	;call to abstracted procedure
 11387  001B40  D003               	bra	u13340
 11388  001B42                     u13347:
 11389  001B42  DBD1               	call	PL389	;call to abstracted procedure
 11390  001B44  EC46  F012         	call	PL467	;call to abstracted procedure
 11391  001B48                     u13340:
 11392                           
 11393                           ;tcpv4.c: 864: currentTCB->remoteWnd = 0;
 11394  001B48  EC80  F012         	call	PL515	;call to abstracted procedure
 11395  001B4C  DBC0               	call	PL387	;call to abstracted procedure
 11396  001B4E  64F7               	cpfsgt	tblptrh,c
 11397  001B50  D003               	bra	u13357
 11398  001B52  ECD2  F011         	call	PL423	;call to abstracted procedure
 11399  001B56  D003               	bra	u13350
 11400  001B58                     u13357:
 11401  001B58  DBC6               	call	PL389	;call to abstracted procedure
 11402  001B5A  6AEE               	clrf	postinc0,c
 11403  001B5C  6AEF               	clrf	indf0,c
 11404  001B5E                     u13350:
 11405                           
 11406                           ;tcpv4.c: 865: currentTCB->mss = 0;
 11407  001B5E  ECC6  F011         	call	PL415	;call to abstracted procedure
 11408  001B62  DBB5               	call	PL387	;call to abstracted procedure
 11409  001B64  64F7               	cpfsgt	tblptrh,c
 11410  001B66  D003               	bra	u13367
 11411  001B68  ECD2  F011         	call	PL423	;call to abstracted procedure
 11412  001B6C  D003               	bra	u13360
 11413  001B6E                     u13367:
 11414  001B6E  DBBB               	call	PL389	;call to abstracted procedure
 11415  001B70  6AEE               	clrf	postinc0,c
 11416  001B72  6AEF               	clrf	indf0,c
 11417  001B74                     u13360:
 11418  001B74                     l8722:
 11419                           
 11420                           ;tcpv4.c: 867: nextState = LISTEN;
 11421  001B74  0E01               	movlw	1
 11422  001B76  D26A               	goto	L20
 11423  001B78                     l8724:
 11424                           
 11425                           ; BSR set to: 1
 11426                           ;tcpv4.c: 872: ;
 11427                           ;tcpv4.c: 873: if (currentTCB->timeoutsCount)
 11428  001B78  0E34               	movlw	52
 11429  001B7A  243B               	addwf	_currentTCB,w,c
 11430  001B7C  DBA8               	call	PL387	;call to abstracted procedure
 11431  001B7E  64F7               	cpfsgt	tblptrh,c
 11432  001B80  D003               	bra	u13377
 11433  001B82  0008               	tblrd		*
 11434  001B84  50F5               	movf	tablat,w,c
 11435  001B86  D002               	bra	u13370
 11436  001B88                     u13377:
 11437  001B88  DBAE               	call	PL389	;call to abstracted procedure
 11438  001B8A  50EF               	movf	indf0,w,c
 11439  001B8C                     u13370:
 11440  001B8C  0900               	iorlw	0
 11441  001B8E  E001 D74B          	bnz	l8714
 11442                           
 11443                           ;tcpv4.c: 877: else
 11444                           ;tcpv4.c: 878: {
 11445                           ;tcpv4.c: 880: currentTCB->flags = 0x04U;
 11446  001B92  DBAE               	call	PL393	;call to abstracted procedure
 11447  001B94  DB9C               	call	PL387	;call to abstracted procedure
 11448  001B96  64F7               	cpfsgt	tblptrh,c
 11449  001B98  D004               	bra	u13397
 11450  001B9A  0E04               	movlw	4
 11451  001B9C  6EF5               	movwf	tablat,c
 11452  001B9E  000C               	tblwt		*
 11453  001BA0  D003               	bra	u13390
 11454  001BA2                     u13397:
 11455  001BA2  DBA1               	call	PL389	;call to abstracted procedure
 11456  001BA4  0E04               	movlw	4
 11457  001BA6  6EEF               	movwf	indf0,c
 11458  001BA8                     u13390:
 11459                           
 11460                           ;tcpv4.c: 881: if(TCP_Snd(currentTCB))
 11461  001BA8  EC41  F012         	call	PL465	;call to abstracted procedure
 11462  001BAC  ECAC  F012         	call	_TCP_Snd	;wreg free
 11463  001BB0  0900               	iorlw	0
 11464  001BB2  E101 D36F          	bz	l8908
 11465                           
 11466                           ; BSR set to: 0
 11467                           ;tcpv4.c: 882: {
 11468                           ;tcpv4.c: 883: currentTCB->destIP = 0;
 11469  001BB6  EC84  F012         	call	PL517	;call to abstracted procedure
 11470  001BBA  DB89               	call	PL387	;call to abstracted procedure
 11471  001BBC  64F7               	cpfsgt	tblptrh,c
 11472  001BBE  D006               	bra	u13417
 11473  001BC0  6AF5               	clrf	tablat,c
 11474  001BC2  000D               	tblwt		*+
 11475  001BC4  6AF5               	clrf	tablat,c
 11476  001BC6  000D               	tblwt		*+
 11477  001BC8  DBED               	call	PL423	;call to abstracted procedure
 11478  001BCA  D003               	bra	u13410
 11479  001BCC                     u13417:
 11480  001BCC  DB8C               	call	PL389	;call to abstracted procedure
 11481  001BCE  EC46  F012         	call	PL467	;call to abstracted procedure
 11482  001BD2                     u13410:
 11483                           
 11484                           ;tcpv4.c: 884: currentTCB->destPort = 0;
 11485  001BD2  EC18  F012         	call	PL447	;call to abstracted procedure
 11486  001BD6  DB7B               	call	PL387	;call to abstracted procedure
 11487  001BD8  64F7               	cpfsgt	tblptrh,c
 11488  001BDA  D002               	bra	u13427
 11489  001BDC  DBE3               	call	PL423	;call to abstracted procedure
 11490  001BDE  D003               	bra	u13420
 11491  001BE0                     u13427:
 11492  001BE0  DB82               	call	PL389	;call to abstracted procedure
 11493  001BE2  6AEE               	clrf	postinc0,c
 11494  001BE4  6AEF               	clrf	indf0,c
 11495  001BE6                     u13420:
 11496                           
 11497                           ;tcpv4.c: 885: currentTCB->localSeqno = 0;
 11498  001BE6  DBF9               	call	PL431	;call to abstracted procedure
 11499  001BE8  DB72               	call	PL387	;call to abstracted procedure
 11500  001BEA  64F7               	cpfsgt	tblptrh,c
 11501  001BEC  D006               	bra	u13437
 11502  001BEE  6AF5               	clrf	tablat,c
 11503  001BF0  000D               	tblwt		*+
 11504  001BF2  6AF5               	clrf	tablat,c
 11505  001BF4  000D               	tblwt		*+
 11506  001BF6  DBD6               	call	PL423	;call to abstracted procedure
 11507  001BF8  D003               	bra	u13430
 11508  001BFA                     u13437:
 11509  001BFA  DB75               	call	PL389	;call to abstracted procedure
 11510  001BFC  EC46  F012         	call	PL467	;call to abstracted procedure
 11511  001C00                     u13430:
 11512                           
 11513                           ;tcpv4.c: 886: currentTCB->localLastAck = 0;
 11514  001C00  EC4F  F012         	call	PL473	;call to abstracted procedure
 11515  001C04  DB64               	call	PL387	;call to abstracted procedure
 11516  001C06  64F7               	cpfsgt	tblptrh,c
 11517  001C08  D006               	bra	u13447
 11518  001C0A  6AF5               	clrf	tablat,c
 11519  001C0C  000D               	tblwt		*+
 11520  001C0E  6AF5               	clrf	tablat,c
 11521  001C10  000D               	tblwt		*+
 11522  001C12  DBC8               	call	PL423	;call to abstracted procedure
 11523  001C14  D003               	bra	u13440
 11524  001C16                     u13447:
 11525  001C16  DB67               	call	PL389	;call to abstracted procedure
 11526  001C18  EC46  F012         	call	PL467	;call to abstracted procedure
 11527  001C1C                     u13440:
 11528                           
 11529                           ;tcpv4.c: 887: currentTCB->remoteSeqno = 0;
 11530  001C1C  DBBB               	call	PL417	;call to abstracted procedure
 11531  001C1E  DB57               	call	PL387	;call to abstracted procedure
 11532  001C20  64F7               	cpfsgt	tblptrh,c
 11533  001C22  D006               	bra	u13457
 11534  001C24  6AF5               	clrf	tablat,c
 11535  001C26  000D               	tblwt		*+
 11536  001C28  6AF5               	clrf	tablat,c
 11537  001C2A  000D               	tblwt		*+
 11538  001C2C  DBBB               	call	PL423	;call to abstracted procedure
 11539  001C2E  D003               	bra	u13450
 11540  001C30                     u13457:
 11541  001C30  DB5A               	call	PL389	;call to abstracted procedure
 11542  001C32  EC46  F012         	call	PL467	;call to abstracted procedure
 11543  001C36                     u13450:
 11544                           
 11545                           ;tcpv4.c: 888: currentTCB->remoteAck = 0;
 11546  001C36  EC4B  F012         	call	PL471	;call to abstracted procedure
 11547  001C3A  DB49               	call	PL387	;call to abstracted procedure
 11548  001C3C  64F7               	cpfsgt	tblptrh,c
 11549  001C3E  D006               	bra	u13467
 11550  001C40  6AF5               	clrf	tablat,c
 11551  001C42  000D               	tblwt		*+
 11552  001C44  6AF5               	clrf	tablat,c
 11553  001C46  000D               	tblwt		*+
 11554  001C48  DBAD               	call	PL423	;call to abstracted procedure
 11555  001C4A  D003               	bra	u13460
 11556  001C4C                     u13467:
 11557  001C4C  DB4C               	call	PL389	;call to abstracted procedure
 11558  001C4E  EC46  F012         	call	PL467	;call to abstracted procedure
 11559  001C52                     u13460:
 11560                           
 11561                           ;tcpv4.c: 889: currentTCB->remoteWnd = 0;
 11562  001C52  EC80  F012         	call	PL515	;call to abstracted procedure
 11563  001C56  DB3B               	call	PL387	;call to abstracted procedure
 11564  001C58  64F7               	cpfsgt	tblptrh,c
 11565  001C5A  D002               	bra	u13477
 11566  001C5C  DBA3               	call	PL423	;call to abstracted procedure
 11567  001C5E  D003               	bra	u13470
 11568  001C60                     u13477:
 11569  001C60  DB42               	call	PL389	;call to abstracted procedure
 11570  001C62  6AEE               	clrf	postinc0,c
 11571  001C64  6AEF               	clrf	indf0,c
 11572  001C66                     u13470:
 11573                           
 11574                           ;tcpv4.c: 890: currentTCB->mss = 0;
 11575  001C66  DB92               	call	PL415	;call to abstracted procedure
 11576  001C68  DB32               	call	PL387	;call to abstracted procedure
 11577  001C6A  64F7               	cpfsgt	tblptrh,c
 11578  001C6C  D002               	bra	u13487
 11579  001C6E  DB9A               	call	PL423	;call to abstracted procedure
 11580  001C70  D003               	bra	u13480
 11581  001C72                     u13487:
 11582  001C72  DB39               	call	PL389	;call to abstracted procedure
 11583  001C74  6AEE               	clrf	postinc0,c
 11584  001C76  6AEF               	clrf	indf0,c
 11585  001C78                     u13480:
 11586  001C78  D77D               	goto	l8722
 11587  001C7A                     l8738:
 11588  001C7A  0101               	movlb	1	; () banked
 11589  001C7C  510F               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 11590                           
 11591                           ; Switch size 1, requested type "space"
 11592                           ; Number of cases is 6, Range of values is 0 to 12
 11593                           ; switch strategies available:
 11594                           ; Name         Instructions Cycles
 11595                           ; simple_byte           19    10 (average)
 11596                           ;	Chosen strategy is simple_byte
 11597  001C7E  E101 D68D          	bz	l8710
 11598  001C82  0A04               	xorlw	4	; case 4
 11599  001C84  E101 D5E2          	bz	l8696
 11600  001C88  0A01               	xorlw	1	; case 5
 11601  001C8A  E101 D563          	bz	l8684
 11602  001C8E  0A0C               	xorlw	12	; case 9
 11603  001C90  E101 D6D0          	bz	l8716
 11604  001C94  0A03               	xorlw	3	; case 10
 11605  001C96  E101 D6CD          	bz	l8716
 11606  001C9A  0A06               	xorlw	6	; case 12
 11607  001C9C  E101 D76C          	bz	l8724
 11608  001CA0  D2F9               	goto	l8908
 11609  001CA2                     l8740:
 11610                           
 11611                           ; BSR set to: 1
 11612                           ;tcpv4.c: 904: ;
 11613                           ;tcpv4.c: 905: if (currentTCB->destIP == receivedRemoteAddress)
 11614  001CA2  0E02               	movlw	2
 11615  001CA4  243B               	addwf	_currentTCB,w,c
 11616  001CA6  DB13               	call	PL387	;call to abstracted procedure
 11617  001CA8  64F7               	cpfsgt	tblptrh,c
 11618  001CAA  D002               	bra	u13497
 11619  001CAC  DB25               	call	PL395	;call to abstracted procedure
 11620  001CAE  D002               	bra	u13490
 11621  001CB0                     u13497:
 11622  001CB0  DB1A               	call	PL389	;call to abstracted procedure
 11623  001CB2  DB43               	call	PL403	;call to abstracted procedure
 11624  001CB4                     u13490:
 11625  001CB4  5037               	movf	_receivedRemoteAddress,w,c
 11626  001CB6  0101               	movlb	1	; () banked
 11627  001CB8  1902               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 11628  001CBA  E109               	bnz	u13501
 11629  001CBC  5038               	movf	_receivedRemoteAddress+1,w,c
 11630  001CBE  1903               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 11631  001CC0  E106               	bnz	u13501
 11632  001CC2  5039               	movf	_receivedRemoteAddress+2,w,c
 11633  001CC4  1904               	xorwf	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 11634  001CC6  E103               	bnz	u13501
 11635  001CC8  503A               	movf	_receivedRemoteAddress+3,w,c
 11636  001CCA  1905               	xorwf	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 11637  001CCC  A4D8               	btfss	status,2,c
 11638  001CCE                     u13501:
 11639  001CCE  D2E2               	goto	l8908
 11640                           
 11641                           ; BSR set to: 1
 11642                           ;tcpv4.c: 906: {
 11643                           ;tcpv4.c: 910: if (currentTCB->remoteAck == tcpHeader.sequenceNumber)
 11644  001CD0  0E0C               	movlw	12
 11645  001CD2  243B               	addwf	_currentTCB,w,c
 11646  001CD4  DAFC               	call	PL387	;call to abstracted procedure
 11647  001CD6  64F7               	cpfsgt	tblptrh,c
 11648  001CD8  D002               	bra	u13517
 11649  001CDA  DB0E               	call	PL395	;call to abstracted procedure
 11650  001CDC  D002               	bra	u13510
 11651  001CDE                     u13517:
 11652  001CDE  DB03               	call	PL389	;call to abstracted procedure
 11653  001CE0  DB2C               	call	PL403	;call to abstracted procedure
 11654  001CE2                     u13510:
 11655  001CE2  0101               	movlb	1	; () banked
 11656  001CE4  51D6               	movf	(_tcpHeader+4)& (0+255),w,b
 11657  001CE6  1902               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 11658  001CE8  E109               	bnz	u13521
 11659  001CEA  51D7               	movf	(_tcpHeader+5)& (0+255),w,b
 11660  001CEC  1903               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 11661  001CEE  E106               	bnz	u13521
 11662  001CF0  51D8               	movf	(_tcpHeader+6)& (0+255),w,b
 11663  001CF2  1904               	xorwf	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 11664  001CF4  E103               	bnz	u13521
 11665  001CF6  51D9               	movf	(_tcpHeader+7)& (0+255),w,b
 11666  001CF8  1905               	xorwf	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 11667  001CFA  A4D8               	btfss	status,2,c
 11668  001CFC                     u13521:
 11669  001CFC  D2CB               	goto	l8908
 11670                           
 11671                           ; BSR set to: 1
 11672                           ;tcpv4.c: 911: {
 11673                           ;tcpv4.c: 915: if (currentTCB->localLastAck < tcpHeader.ackNumber)
 11674  001CFE  0E14               	movlw	20
 11675  001D00  243B               	addwf	_currentTCB,w,c
 11676  001D02  DAE5               	call	PL387	;call to abstracted procedure
 11677  001D04  64F7               	cpfsgt	tblptrh,c
 11678  001D06  D002               	bra	u13537
 11679  001D08  DAF7               	call	PL395	;call to abstracted procedure
 11680  001D0A  D002               	bra	u13530
 11681  001D0C                     u13537:
 11682  001D0C  DAEC               	call	PL389	;call to abstracted procedure
 11683  001D0E  DB15               	call	PL403	;call to abstracted procedure
 11684  001D10                     u13530:
 11685  001D10  0101               	movlb	1	; () banked
 11686  001D12  51DA               	movf	(_tcpHeader+8)& (0+255),w,b
 11687  001D14  5D02               	subwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 11688  001D16  51DB               	movf	(_tcpHeader+9)& (0+255),w,b
 11689  001D18  5903               	subwfb	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 11690  001D1A  51DC               	movf	(_tcpHeader+10)& (0+255),w,b
 11691  001D1C  5904               	subwfb	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 11692  001D1E  51DD               	movf	(_tcpHeader+11)& (0+255),w,b
 11693  001D20  5905               	subwfb	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 11694  001D22  E301 D2B7          	bc	l8908
 11695                           
 11696                           ; BSR set to: 1
 11697                           ;tcpv4.c: 916: {
 11698                           ;tcpv4.c: 918: if ((currentTCB->localSeqno + 1) >= tcpHeader.ackNumber)
 11699  001D26  0E10               	movlw	16
 11700  001D28  243B               	addwf	_currentTCB,w,c
 11701  001D2A  DAD1               	call	PL387	;call to abstracted procedure
 11702  001D2C  64F7               	cpfsgt	tblptrh,c
 11703  001D2E  D002               	bra	u13557
 11704  001D30  DAE3               	call	PL395	;call to abstracted procedure
 11705  001D32  D002               	bra	u13550
 11706  001D34                     u13557:
 11707  001D34  DAD8               	call	PL389	;call to abstracted procedure
 11708  001D36  DB01               	call	PL403	;call to abstracted procedure
 11709  001D38                     u13550:
 11710  001D38  DAF2               	call	PL401	;call to abstracted procedure
 11711  001D3A  51DA               	movf	(_tcpHeader+8)& (0+255),w,b
 11712  001D3C  5D06               	subwf	(??_TCP_FiniteStateMachine+6)& (0+255),w,b
 11713  001D3E  51DB               	movf	(_tcpHeader+9)& (0+255),w,b
 11714  001D40  5907               	subwfb	(??_TCP_FiniteStateMachine+7)& (0+255),w,b
 11715  001D42  51DC               	movf	(_tcpHeader+10)& (0+255),w,b
 11716  001D44  5908               	subwfb	(??_TCP_FiniteStateMachine+8)& (0+255),w,b
 11717  001D46  51DD               	movf	(_tcpHeader+11)& (0+255),w,b
 11718  001D48  5909               	subwfb	(??_TCP_FiniteStateMachine+9)& (0+255),w,b
 11719  001D4A  E201 D0A3          	bnc	l8764
 11720                           
 11721                           ; BSR set to: 1
 11722                           ;tcpv4.c: 919: {
 11723                           ;tcpv4.c: 920: notAckBytes = currentTCB->localSeqno - tcpHeader.ackNumber;
 11724  001D4E  0E10               	movlw	16
 11725  001D50  243B               	addwf	_currentTCB,w,c
 11726  001D52  DABD               	call	PL387	;call to abstracted procedure
 11727  001D54  64F7               	cpfsgt	tblptrh,c
 11728  001D56  D003               	bra	u13577
 11729  001D58  0009               	tblrd		*+
 11730  001D5A  DADB               	call	PL397	;call to abstracted procedure
 11731  001D5C  D005               	bra	u13570
 11732  001D5E                     u13577:
 11733  001D5E  DAC3               	call	PL389	;call to abstracted procedure
 11734  001D60  CFEE F102          	movff	postinc0,??_TCP_FiniteStateMachine+2
 11735  001D64  CFEE F103          	movff	postinc0,??_TCP_FiniteStateMachine+3
 11736  001D68                     u13570:
 11737  001D68  0101               	movlb	1	; () banked
 11738  001D6A  51DA               	movf	(_tcpHeader+8)& (0+255),w,b
 11739  001D6C  5D02               	subwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 11740  001D6E  6F0D               	movwf	TCP_FiniteStateMachine@notAckBytes& (0+255),b
 11741  001D70  51DB               	movf	(_tcpHeader+9)& (0+255),w,b
 11742  001D72  5903               	subwfb	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 11743  001D74  6F0E               	movwf	(TCP_FiniteStateMachine@notAckBytes+1)& (0+255),b
 11744                           
 11745                           ;tcpv4.c: 923: currentTCB->txBufferPtr = currentTCB->txBufferPtr - notAckBytes;
 11746  001D76  0E25               	movlw	37
 11747  001D78  243B               	addwf	_currentTCB,w,c
 11748  001D7A  DAA9               	call	PL387	;call to abstracted procedure
 11749  001D7C  64F7               	cpfsgt	tblptrh,c
 11750  001D7E  D003               	bra	u13587
 11751  001D80  0009               	tblrd		*+
 11752  001D82  DAC7               	call	PL397	;call to abstracted procedure
 11753  001D84  D005               	bra	u13580
 11754  001D86                     u13587:
 11755  001D86  DAAF               	call	PL389	;call to abstracted procedure
 11756  001D88  CFEE F102          	movff	postinc0,??_TCP_FiniteStateMachine+2
 11757  001D8C  CFEE F103          	movff	postinc0,??_TCP_FiniteStateMachine+3
 11758  001D90                     u13580:
 11759  001D90  0101               	movlb	1	; () banked
 11760  001D92  510D               	movf	TCP_FiniteStateMachine@notAckBytes& (0+255),w,b
 11761  001D94  5F02               	subwf	(??_TCP_FiniteStateMachine+2)& (0+255),f,b
 11762  001D96  510E               	movf	(TCP_FiniteStateMachine@notAckBytes+1)& (0+255),w,b
 11763  001D98  5B03               	subwfb	(??_TCP_FiniteStateMachine+3)& (0+255),f,b
 11764  001D9A  0E25               	movlw	37
 11765  001D9C  DAD7               	call	PL405	;call to abstracted procedure
 11766  001D9E  64F7               	cpfsgt	tblptrh,c
 11767  001DA0  D002               	bra	u13597
 11768  001DA2  DB4E               	call	PL453	;call to abstracted procedure
 11769  001DA4  D002               	bra	u13590
 11770  001DA6                     u13597:
 11771  001DA6  DA9F               	call	PL389	;call to abstracted procedure
 11772  001DA8  DBA2               	call	PL503	;call to abstracted procedure
 11773  001DAA                     u13590:
 11774                           
 11775                           ;tcpv4.c: 924: currentTCB->bytesToSend = currentTCB->bytesToSend + notAckBytes;
 11776  001DAA  DBA6               	call	PL511	;call to abstracted procedure
 11777  001DAC  DA90               	call	PL387	;call to abstracted procedure
 11778  001DAE  64F7               	cpfsgt	tblptrh,c
 11779  001DB0  D003               	bra	u13607
 11780  001DB2  0009               	tblrd		*+
 11781  001DB4  DAAE               	call	PL397	;call to abstracted procedure
 11782  001DB6  D005               	bra	u13600
 11783  001DB8                     u13607:
 11784  001DB8  DA96               	call	PL389	;call to abstracted procedure
 11785  001DBA  CFEE F102          	movff	postinc0,??_TCP_FiniteStateMachine+2
 11786  001DBE  CFEE F103          	movff	postinc0,??_TCP_FiniteStateMachine+3
 11787  001DC2                     u13600:
 11788  001DC2  0101               	movlb	1	; () banked
 11789  001DC4  510D               	movf	TCP_FiniteStateMachine@notAckBytes& (0+255),w,b
 11790  001DC6  2702               	addwf	(??_TCP_FiniteStateMachine+2)& (0+255),f,b
 11791  001DC8  510E               	movf	(TCP_FiniteStateMachine@notAckBytes+1)& (0+255),w,b
 11792  001DCA  2303               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),f,b
 11793  001DCC  0E27               	movlw	39
 11794  001DCE  DABE               	call	PL405	;call to abstracted procedure
 11795  001DD0  64F7               	cpfsgt	tblptrh,c
 11796  001DD2  D002               	bra	u13617
 11797  001DD4  DB35               	call	PL453	;call to abstracted procedure
 11798  001DD6  D002               	bra	u13610
 11799  001DD8                     u13617:
 11800  001DD8  DA86               	call	PL389	;call to abstracted procedure
 11801  001DDA  DB89               	call	PL503	;call to abstracted procedure
 11802  001DDC                     u13610:
 11803                           
 11804                           ;tcpv4.c: 927: if(currentTCB->bytesToSend == 0)
 11805  001DDC  DB8D               	call	PL511	;call to abstracted procedure
 11806  001DDE  DA77               	call	PL387	;call to abstracted procedure
 11807  001DE0  64F7               	cpfsgt	tblptrh,c
 11808  001DE2  D003               	bra	u13627
 11809  001DE4  0009               	tblrd		*+
 11810  001DE6  DA95               	call	PL397	;call to abstracted procedure
 11811  001DE8  D005               	bra	u13620
 11812  001DEA                     u13627:
 11813  001DEA  DA7D               	call	PL389	;call to abstracted procedure
 11814  001DEC  CFEE F102          	movff	postinc0,??_TCP_FiniteStateMachine+2
 11815  001DF0  CFEE F103          	movff	postinc0,??_TCP_FiniteStateMachine+3
 11816  001DF4                     u13620:
 11817  001DF4  0101               	movlb	1	; () banked
 11818  001DF6  5102               	movf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 11819  001DF8  1103               	iorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 11820  001DFA  E117               	bnz	l8754
 11821                           
 11822                           ; BSR set to: 1
 11823                           ;tcpv4.c: 928: {
 11824                           ;tcpv4.c: 929: if (currentTCB->txBufState == TX_BUFF_IN_USE)
 11825  001DFC  0E29               	movlw	41
 11826  001DFE  243B               	addwf	_currentTCB,w,c
 11827  001E00  DA66               	call	PL387	;call to abstracted procedure
 11828  001E02  64F7               	cpfsgt	tblptrh,c
 11829  001E04  D003               	bra	u13647
 11830  001E06  0008               	tblrd		*
 11831  001E08  50F5               	movf	tablat,w,c
 11832  001E0A  D002               	bra	u13640
 11833  001E0C                     u13647:
 11834  001E0C  DA6C               	call	PL389	;call to abstracted procedure
 11835  001E0E  50EF               	movf	indf0,w,c
 11836  001E10                     u13640:
 11837  001E10  0A02               	xorlw	2
 11838  001E12  E10B               	bnz	l8754
 11839                           
 11840                           ;tcpv4.c: 930: {
 11841                           ;tcpv4.c: 931: currentTCB->txBufState = NO_BUFF;
 11842  001E14  0E29               	movlw	41
 11843  001E16  243B               	addwf	_currentTCB,w,c
 11844  001E18  0101               	movlb	1	; () banked
 11845  001E1A  DA59               	call	PL387	;call to abstracted procedure
 11846  001E1C  64F7               	cpfsgt	tblptrh,c
 11847  001E1E  D003               	bra	u13667
 11848  001E20  6AF5               	clrf	tablat,c
 11849  001E22  000C               	tblwt		*
 11850  001E24  D002               	bra	u13660
 11851  001E26                     u13667:
 11852  001E26  DA5F               	call	PL389	;call to abstracted procedure
 11853  001E28  6AEF               	clrf	indf0,c
 11854  001E2A                     u13660:
 11855  001E2A                     l8754:
 11856                           
 11857                           ;tcpv4.c: 932: }
 11858                           ;tcpv4.c: 933: }
 11859                           ;tcpv4.c: 935: currentTCB->localLastAck = tcpHeader.ackNumber - 1;
 11860  001E2A  EE21  F0DA         	lfsr	2,_tcpHeader+8
 11861  001E2E  0EFF               	movlw	255
 11862  001E30  24DE               	addwf	postinc2,w,c
 11863  001E32  0101               	movlb	1	; () banked
 11864  001E34  6F00               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 11865  001E36  0EFF               	movlw	255
 11866  001E38  20DE               	addwfc	postinc2,w,c
 11867  001E3A  6F01               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 11868  001E3C  0EFF               	movlw	255
 11869  001E3E  20DE               	addwfc	postinc2,w,c
 11870  001E40  6F02               	movwf	(??_TCP_FiniteStateMachine+2)& (0+255),b
 11871  001E42  0EFF               	movlw	255
 11872  001E44  20DE               	addwfc	postinc2,w,c
 11873  001E46  6F03               	movwf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 11874  001E48  0E14               	movlw	20
 11875  001E4A  DA80               	call	PL405	;call to abstracted procedure
 11876  001E4C  64F7               	cpfsgt	tblptrh,c
 11877  001E4E  D003               	bra	u13677
 11878  001E50  DAFE               	call	PL455	;call to abstracted procedure
 11879  001E52  DAF6               	call	PL453	;call to abstracted procedure
 11880  001E54  D002               	bra	u13670
 11881  001E56                     u13677:
 11882  001E56  DA47               	call	PL389	;call to abstracted procedure
 11883  001E58  DB38               	call	PL487	;call to abstracted procedure
 11884  001E5A                     u13670:
 11885                           
 11886                           ;tcpv4.c: 936: currentTCB->localSeqno = tcpHeader.ackNumber;
 11887  001E5A  DABF               	call	PL431	;call to abstracted procedure
 11888  001E5C  DA38               	call	PL387	;call to abstracted procedure
 11889  001E5E  64F7               	cpfsgt	tblptrh,c
 11890  001E60  D002               	bra	u13687
 11891  001E62  DAFC               	call	PL457	;call to abstracted procedure
 11892  001E64  D002               	bra	u13680
 11893  001E66                     u13687:
 11894  001E66  DA3F               	call	PL389	;call to abstracted procedure
 11895  001E68  DB39               	call	PL493	;call to abstracted procedure
 11896  001E6A                     u13680:
 11897                           
 11898                           ;tcpv4.c: 939: if(rcvPayloadLen > 0)
 11899  001E6A  0101               	movlb	1	; () banked
 11900  001E6C  51D0               	movf	_rcvPayloadLen& (0+255),w,b
 11901  001E6E  11D1               	iorwf	(_rcvPayloadLen+1)& (0+255),w,b
 11902  001E70  E101 D210          	bz	l8908
 11903                           
 11904                           ; BSR set to: 1
 11905                           ;tcpv4.c: 940: {
 11906                           ;tcpv4.c: 941: currentTCB->remoteSeqno = tcpHeader.sequenceNumber;
 11907  001E74  0E08               	movlw	8
 11908  001E76  243B               	addwf	_currentTCB,w,c
 11909  001E78  DA2A               	call	PL387	;call to abstracted procedure
 11910  001E7A  64F7               	cpfsgt	tblptrh,c
 11911  001E7C  D002               	bra	u13707
 11912  001E7E  DAB1               	call	PL439	;call to abstracted procedure
 11913  001E80  D002               	bra	u13700
 11914  001E82                     u13707:
 11915  001E82  DA31               	call	PL389	;call to abstracted procedure
 11916  001E84  DB19               	call	PL477	;call to abstracted procedure
 11917  001E86                     u13700:
 11918                           
 11919                           ;tcpv4.c: 944: TCP_PayloadSave(rcvPayloadLen);
 11920  001E86  C1D0  F0EE         	movff	_rcvPayloadLen,TCP_PayloadSave@len
 11921  001E8A  C1D1  F0EF         	movff	_rcvPayloadLen+1,TCP_PayloadSave@len+1
 11922  001E8E  EC1E  F01F         	call	_TCP_PayloadSave	;wreg free
 11923  001E92  D200               	goto	l8908
 11924  001E94                     l8764:
 11925                           
 11926                           ; BSR set to: 1
 11927                           ;tcpv4.c: 947: {
 11928                           ;tcpv4.c: 951: currentTCB->flags = 0x04U | 0x10U;
 11929  001E94  0E35               	movlw	53
 11930  001E96  243B               	addwf	_currentTCB,w,c
 11931  001E98  DA1A               	call	PL387	;call to abstracted procedure
 11932  001E9A  64F7               	cpfsgt	tblptrh,c
 11933  001E9C  D004               	bra	u13717
 11934  001E9E  0E14               	movlw	20
 11935  001EA0  6EF5               	movwf	tablat,c
 11936  001EA2  000C               	tblwt		*
 11937  001EA4  D003               	bra	u13710
 11938  001EA6                     u13717:
 11939  001EA6  DA1F               	call	PL389	;call to abstracted procedure
 11940  001EA8  0E14               	movlw	20
 11941  001EAA  6EEF               	movwf	indf0,c
 11942  001EAC                     u13710:
 11943                           
 11944                           ;tcpv4.c: 952: if (TCP_Snd(currentTCB))
 11945  001EAC  DAEA               	call	PL465	;call to abstracted procedure
 11946  001EAE  ECAC  F012         	call	_TCP_Snd	;wreg free
 11947  001EB2  EF7F  F00A         	goto	L16
 11948  001EB6                     l8772:
 11949                           
 11950                           ; BSR set to: 1
 11951                           ;tcpv4.c: 963: ;
 11952                           ;tcpv4.c: 964: currentTCB->flags = 0x01U;
 11953  001EB6  0E35               	movlw	53
 11954  001EB8  243B               	addwf	_currentTCB,w,c
 11955  001EBA  DA09               	call	PL387	;call to abstracted procedure
 11956  001EBC  64F7               	cpfsgt	tblptrh,c
 11957  001EBE  D004               	bra	u13737
 11958  001EC0  0E01               	movlw	1
 11959  001EC2  6EF5               	movwf	tablat,c
 11960  001EC4  000C               	tblwt		*
 11961  001EC6  D003               	bra	u13730
 11962  001EC8                     u13737:
 11963  001EC8  DA0E               	call	PL389	;call to abstracted procedure
 11964  001ECA  0E01               	movlw	1
 11965  001ECC  6EEF               	movwf	indf0,c
 11966  001ECE                     u13730:
 11967  001ECE  D5A9               	goto	l8712
 11968  001ED0                     l8778:
 11969                           
 11970                           ; BSR set to: 1
 11971                           ;tcpv4.c: 971: ;
 11972                           ;tcpv4.c: 974: currentTCB->localSeqno = tcpHeader.ackNumber;
 11973  001ED0  0E10               	movlw	16
 11974  001ED2  243B               	addwf	_currentTCB,w,c
 11975  001ED4  D9FC               	call	PL387	;call to abstracted procedure
 11976  001ED6  64F7               	cpfsgt	tblptrh,c
 11977  001ED8  D002               	bra	u13747
 11978  001EDA  DAC0               	call	PL457	;call to abstracted procedure
 11979  001EDC  D002               	bra	u13740
 11980  001EDE                     u13747:
 11981  001EDE  DA03               	call	PL389	;call to abstracted procedure
 11982  001EE0  DAFD               	call	PL493	;call to abstracted procedure
 11983  001EE2                     u13740:
 11984                           
 11985                           ;tcpv4.c: 975: currentTCB->remoteAck = currentTCB->remoteAck + 1;
 11986  001EE2  DAD9               	call	PL471	;call to abstracted procedure
 11987  001EE4  D9F4               	call	PL387	;call to abstracted procedure
 11988  001EE6  64F7               	cpfsgt	tblptrh,c
 11989  001EE8  D002               	bra	u13757
 11990  001EEA  DA06               	call	PL395	;call to abstracted procedure
 11991  001EEC  D002               	bra	u13750
 11992  001EEE                     u13757:
 11993  001EEE  D9FB               	call	PL389	;call to abstracted procedure
 11994  001EF0  DA24               	call	PL403	;call to abstracted procedure
 11995  001EF2                     u13750:
 11996  001EF2  DA15               	call	PL401	;call to abstracted procedure
 11997  001EF4  0E0C               	movlw	12
 11998  001EF6  DA8F               	call	PL443	;call to abstracted procedure
 11999  001EF8  64F7               	cpfsgt	tblptrh,c
 12000  001EFA  D002               	bra	u13767
 12001  001EFC  DA7F               	call	PL441	;call to abstracted procedure
 12002  001EFE  D002               	bra	u13760
 12003  001F00                     u13767:
 12004  001F00  D9F2               	call	PL389	;call to abstracted procedure
 12005  001F02  DAD1               	call	PL475	;call to abstracted procedure
 12006  001F04                     u13760:
 12007                           
 12008                           ;tcpv4.c: 977: currentTCB->socketState = SOCKET_CLOSING;
 12009  001F04  0E36               	movlw	54
 12010  001F06  243B               	addwf	_currentTCB,w,c
 12011  001F08  0101               	movlb	1	; () banked
 12012  001F0A  D9E1               	call	PL387	;call to abstracted procedure
 12013  001F0C  64F7               	cpfsgt	tblptrh,c
 12014  001F0E  D004               	bra	u13777
 12015  001F10  0E04               	movlw	4
 12016  001F12  6EF5               	movwf	tablat,c
 12017  001F14  000C               	tblwt		*
 12018  001F16  D003               	bra	u13770
 12019  001F18                     u13777:
 12020  001F18  D9E6               	call	PL389	;call to abstracted procedure
 12021  001F1A  0E04               	movlw	4
 12022  001F1C  6EEF               	movwf	indf0,c
 12023  001F1E                     u13770:
 12024                           
 12025                           ;tcpv4.c: 978: currentTCB->timeout = ((unsigned long)1*2);
 12026  001F1E  DA59               	call	PL429	;call to abstracted procedure
 12027  001F20  D9D6               	call	PL387	;call to abstracted procedure
 12028  001F22  64F7               	cpfsgt	tblptrh,c
 12029  001F24  D002               	bra	u13787
 12030  001F26  DAA7               	call	PL459	;call to abstracted procedure
 12031  001F28  D002               	bra	u13780
 12032  001F2A                     u13787:
 12033  001F2A  D9DD               	call	PL389	;call to abstracted procedure
 12034  001F2C  DAF8               	call	PL615	;call to abstracted procedure
 12035  001F2E                     u13780:
 12036                           
 12037                           ;tcpv4.c: 979: currentTCB->timeoutReloadValue = ((unsigned long)1*2);
 12038  001F2E  DA4D               	call	PL427	;call to abstracted procedure
 12039  001F30  D9CE               	call	PL387	;call to abstracted procedure
 12040  001F32  64F7               	cpfsgt	tblptrh,c
 12041  001F34  D002               	bra	u13797
 12042  001F36  DA9F               	call	PL459	;call to abstracted procedure
 12043  001F38  D002               	bra	u13790
 12044  001F3A                     u13797:
 12045  001F3A  D9D5               	call	PL389	;call to abstracted procedure
 12046  001F3C  DAF0               	call	PL615	;call to abstracted procedure
 12047  001F3E                     u13790:
 12048                           
 12049                           ;tcpv4.c: 980: currentTCB->timeoutsCount = (5u);
 12050  001F3E  DA2E               	call	PL419	;call to abstracted procedure
 12051  001F40  D9C6               	call	PL387	;call to abstracted procedure
 12052  001F42  64F7               	cpfsgt	tblptrh,c
 12053  001F44  D004               	bra	u13807
 12054  001F46  0E05               	movlw	5
 12055  001F48  6EF5               	movwf	tablat,c
 12056  001F4A  000C               	tblwt		*
 12057  001F4C  D003               	bra	u13800
 12058  001F4E                     u13807:
 12059  001F4E  D9CB               	call	PL389	;call to abstracted procedure
 12060  001F50  0E05               	movlw	5
 12061  001F52  6EEF               	movwf	indf0,c
 12062  001F54                     u13800:
 12063                           
 12064                           ;tcpv4.c: 982: currentTCB->flags = 0x01U | 0x10U;
 12065  001F54  D9CD               	call	PL393	;call to abstracted procedure
 12066  001F56  D9BB               	call	PL387	;call to abstracted procedure
 12067  001F58  64F7               	cpfsgt	tblptrh,c
 12068  001F5A  D004               	bra	u13817
 12069  001F5C  0E11               	movlw	17
 12070  001F5E  6EF5               	movwf	tablat,c
 12071  001F60  000C               	tblwt		*
 12072  001F62  D003               	bra	u13810
 12073  001F64                     u13817:
 12074  001F64  D9C0               	call	PL389	;call to abstracted procedure
 12075  001F66  0E11               	movlw	17
 12076  001F68  6EEF               	movwf	indf0,c
 12077  001F6A                     u13810:
 12078                           
 12079                           ;tcpv4.c: 984: nextState = LAST_ACK;
 12080  001F6A  0E09               	movlw	9
 12081  001F6C  D55B               	goto	L18
 12082  001F6E                     l8786:
 12083                           
 12084                           ; BSR set to: 1
 12085                           ;tcpv4.c: 993: ;
 12086                           ;tcpv4.c: 994: if (currentTCB->timeoutsCount)
 12087  001F6E  0E34               	movlw	52
 12088  001F70  243B               	addwf	_currentTCB,w,c
 12089  001F72  D9AD               	call	PL387	;call to abstracted procedure
 12090  001F74  64F7               	cpfsgt	tblptrh,c
 12091  001F76  D003               	bra	u13827
 12092  001F78  0008               	tblrd		*
 12093  001F7A  50F5               	movf	tablat,w,c
 12094  001F7C  D002               	bra	u13820
 12095  001F7E                     u13827:
 12096  001F7E  D9B3               	call	PL389	;call to abstracted procedure
 12097  001F80  50EF               	movf	indf0,w,c
 12098  001F82                     u13820:
 12099  001F82  0900               	iorlw	0
 12100  001F84  E001 D550          	bnz	l8714
 12101                           
 12102                           ;tcpv4.c: 998: {
 12103                           ;tcpv4.c: 1000: currentTCB->flags = 0x04U;
 12104  001F88  D9B3               	call	PL393	;call to abstracted procedure
 12105  001F8A  D9A1               	call	PL387	;call to abstracted procedure
 12106  001F8C  64F7               	cpfsgt	tblptrh,c
 12107  001F8E  D004               	bra	u13847
 12108  001F90  0E04               	movlw	4
 12109  001F92  6EF5               	movwf	tablat,c
 12110  001F94  000C               	tblwt		*
 12111  001F96  D003               	bra	u13840
 12112  001F98                     u13847:
 12113  001F98  D9A6               	call	PL389	;call to abstracted procedure
 12114  001F9A  0E04               	movlw	4
 12115  001F9C  6EEF               	movwf	indf0,c
 12116  001F9E                     u13840:
 12117                           
 12118                           ;tcpv4.c: 1001: if(TCP_Snd(currentTCB))
 12119  001F9E  DA71               	call	PL465	;call to abstracted procedure
 12120  001FA0  ECAC  F012         	call	_TCP_Snd	;wreg free
 12121  001FA4  EF7F  F00A         	goto	L16
 12122  001FA8                     l8800:
 12123  001FA8  0101               	movlb	1	; () banked
 12124  001FAA  510F               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 12125                           
 12126                           ; Switch size 1, requested type "space"
 12127                           ; Number of cases is 7, Range of values is 0 to 12
 12128                           ; switch strategies available:
 12129                           ; Name         Instructions Cycles
 12130                           ; simple_byte           22    12 (average)
 12131                           ;	Chosen strategy is simple_byte
 12132  001FAC  E084               	bz	l8772
 12133  001FAE  0A04               	xorlw	4	; case 4
 12134  001FB0  E101 D677          	bz	l8740
 12135  001FB4  0A02               	xorlw	2	; case 6
 12136  001FB6  E08C               	bz	l8778
 12137  001FB8  0A01               	xorlw	1	; case 7
 12138  001FBA  E08A               	bz	l8778
 12139  001FBC  0A0E               	xorlw	14	; case 9
 12140  001FBE  E102 EF42  F009    	bz	l1194
 12141  001FC4  0A03               	xorlw	3	; case 10
 12142  001FC6  E102 EF42  F009    	bz	l1194
 12143  001FCC  0A06               	xorlw	6	; case 12
 12144  001FCE  E0CF               	bz	l8786
 12145  001FD0  D161               	goto	l8908
 12146  001FD2                     l8802:
 12147                           
 12148                           ; BSR set to: 1
 12149                           ;tcpv4.c: 1016: ;
 12150                           ;tcpv4.c: 1017: currentTCB->flags = 0x10U;
 12151  001FD2  0E35               	movlw	53
 12152  001FD4  243B               	addwf	_currentTCB,w,c
 12153  001FD6  D97B               	call	PL387	;call to abstracted procedure
 12154  001FD8  64F7               	cpfsgt	tblptrh,c
 12155  001FDA  D004               	bra	u13867
 12156  001FDC  0E10               	movlw	16
 12157  001FDE  6EF5               	movwf	tablat,c
 12158  001FE0  000C               	tblwt		*
 12159  001FE2  D003               	bra	u13860
 12160  001FE4                     u13867:
 12161  001FE4  D980               	call	PL389	;call to abstracted procedure
 12162  001FE6  0E10               	movlw	16
 12163  001FE8  6EEF               	movwf	indf0,c
 12164  001FEA                     u13860:
 12165                           
 12166                           ;tcpv4.c: 1018: if(TCP_Snd(currentTCB))
 12167  001FEA  DA4B               	call	PL465	;call to abstracted procedure
 12168  001FEC  ECAC  F012         	call	_TCP_Snd	;wreg free
 12169  001FF0  0900               	iorlw	0
 12170  001FF2  E101 D14F          	bz	l8908
 12171                           
 12172                           ; BSR set to: 0
 12173                           ;tcpv4.c: 1019: {
 12174                           ;tcpv4.c: 1020: nextState = CLOSING;
 12175  001FF6  0E08               	movlw	8
 12176  001FF8  D029               	goto	L20
 12177  001FFA                     l8808:
 12178                           
 12179                           ; BSR set to: 1
 12180                           ;tcpv4.c: 1024: ;
 12181                           ;tcpv4.c: 1026: currentTCB->timeout = ((unsigned long)1*2);
 12182  001FFA  0E30               	movlw	48
 12183  001FFC  243B               	addwf	_currentTCB,w,c
 12184  001FFE  D967               	call	PL387	;call to abstracted procedure
 12185  002000  64F7               	cpfsgt	tblptrh,c
 12186  002002  D002               	bra	u13887
 12187  002004  DA38               	call	PL459	;call to abstracted procedure
 12188  002006  D002               	bra	u13880
 12189  002008                     u13887:
 12190  002008  D96E               	call	PL389	;call to abstracted procedure
 12191  00200A  DA89               	call	PL615	;call to abstracted procedure
 12192  00200C                     u13880:
 12193                           
 12194                           ;tcpv4.c: 1027: currentTCB->timeoutsCount = 1;
 12195  00200C  D9C7               	call	PL419	;call to abstracted procedure
 12196  00200E  D95F               	call	PL387	;call to abstracted procedure
 12197  002010  64F7               	cpfsgt	tblptrh,c
 12198  002012  D004               	bra	u13897
 12199  002014  0E01               	movlw	1
 12200  002016  6EF5               	movwf	tablat,c
 12201  002018  000C               	tblwt		*
 12202  00201A  D003               	bra	u13890
 12203  00201C                     u13897:
 12204  00201C  D964               	call	PL389	;call to abstracted procedure
 12205  00201E  0E01               	movlw	1
 12206  002020  6EEF               	movwf	indf0,c
 12207  002022                     u13890:
 12208                           
 12209                           ;tcpv4.c: 1028: nextState = FIN_WAIT_2;
 12210  002022  0E06               	movlw	6
 12211  002024  D013               	goto	L20
 12212  002026                     l8812:
 12213                           
 12214                           ; BSR set to: 1
 12215                           ;tcpv4.c: 1031: ;
 12216                           ;tcpv4.c: 1032: currentTCB->flags = 0x10U;
 12217  002026  0E35               	movlw	53
 12218  002028  243B               	addwf	_currentTCB,w,c
 12219  00202A  D951               	call	PL387	;call to abstracted procedure
 12220  00202C  64F7               	cpfsgt	tblptrh,c
 12221  00202E  D004               	bra	u13907
 12222  002030  0E10               	movlw	16
 12223  002032  6EF5               	movwf	tablat,c
 12224  002034  000C               	tblwt		*
 12225  002036  D003               	bra	u13900
 12226  002038                     u13907:
 12227  002038  D956               	call	PL389	;call to abstracted procedure
 12228  00203A  0E10               	movlw	16
 12229  00203C  6EEF               	movwf	indf0,c
 12230  00203E                     u13900:
 12231                           
 12232                           ;tcpv4.c: 1033: if(TCP_Snd(currentTCB))
 12233  00203E  DA21               	call	PL465	;call to abstracted procedure
 12234  002040  ECAC  F012         	call	_TCP_Snd	;wreg free
 12235  002044  0900               	iorlw	0
 12236  002046  E101 D125          	bz	l8908
 12237  00204A                     l8816:
 12238                           
 12239                           ;tcpv4.c: 1034: {
 12240                           ;tcpv4.c: 1035: nextState = TIME_WAIT;
 12241  00204A  0E0A               	movlw	10
 12242  00204C                     L20:
 12243  00204C  0101               	movlb	1	; () banked
 12244  00204E  6F10               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 12245  002050  D121               	goto	l8908
 12246  002052                     l8818:
 12247                           
 12248                           ; BSR set to: 1
 12249                           ;tcpv4.c: 1039: ;
 12250                           ;tcpv4.c: 1040: if (currentTCB->timeoutsCount)
 12251  002052  0E34               	movlw	52
 12252  002054  243B               	addwf	_currentTCB,w,c
 12253  002056  D93B               	call	PL387	;call to abstracted procedure
 12254  002058  64F7               	cpfsgt	tblptrh,c
 12255  00205A  D003               	bra	u13927
 12256  00205C  0008               	tblrd		*
 12257  00205E  50F5               	movf	tablat,w,c
 12258  002060  D002               	bra	u13920
 12259  002062                     u13927:
 12260  002062  D941               	call	PL389	;call to abstracted procedure
 12261  002064  50EF               	movf	indf0,w,c
 12262  002066                     u13920:
 12263  002066  0900               	iorlw	0
 12264  002068  E001 D4DE          	bnz	l8714
 12265                           
 12266                           ;tcpv4.c: 1044: {
 12267                           ;tcpv4.c: 1046: currentTCB->flags = 0x04U;
 12268  00206C  D941               	call	PL393	;call to abstracted procedure
 12269  00206E  D92F               	call	PL387	;call to abstracted procedure
 12270  002070  64F7               	cpfsgt	tblptrh,c
 12271  002072  D004               	bra	u13947
 12272  002074  0E04               	movlw	4
 12273  002076  6EF5               	movwf	tablat,c
 12274  002078  000C               	tblwt		*
 12275  00207A  D003               	bra	u13940
 12276  00207C                     u13947:
 12277  00207C  D934               	call	PL389	;call to abstracted procedure
 12278  00207E  0E04               	movlw	4
 12279  002080  6EEF               	movwf	indf0,c
 12280  002082                     u13940:
 12281                           
 12282                           ;tcpv4.c: 1047: if(TCP_Snd(currentTCB))
 12283  002082  D9FF               	call	PL465	;call to abstracted procedure
 12284  002084  ECAC  F012         	call	_TCP_Snd	;wreg free
 12285  002088  EF7F  F00A         	goto	L16
 12286  00208C                     l8832:
 12287  00208C  0101               	movlb	1	; () banked
 12288  00208E  510F               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 12289                           
 12290                           ; Switch size 1, requested type "space"
 12291                           ; Number of cases is 4, Range of values is 4 to 12
 12292                           ; switch strategies available:
 12293                           ; Name         Instructions Cycles
 12294                           ; simple_byte           13     7 (average)
 12295                           ;	Chosen strategy is simple_byte
 12296  002090  0A04               	xorlw	4	; case 4
 12297  002092  E0B3               	bz	l8808
 12298  002094  0A02               	xorlw	2	; case 6
 12299  002096  E09D               	bz	l8802
 12300  002098  0A01               	xorlw	1	; case 7
 12301  00209A  E0C5               	bz	l8812
 12302  00209C  0A0B               	xorlw	11	; case 12
 12303  00209E  E0D9               	bz	l8818
 12304  0020A0  D0F9               	goto	l8908
 12305  0020A2                     l8834:
 12306                           
 12307                           ; BSR set to: 1
 12308                           ;tcpv4.c: 1062: ;
 12309                           ;tcpv4.c: 1063: if(TCP_Snd(currentTCB))
 12310  0020A2  D9EF               	call	PL465	;call to abstracted procedure
 12311  0020A4  ECAC  F012         	call	_TCP_Snd	;wreg free
 12312  0020A8  D7CD               	goto	L21
 12313  0020AA                     l8838:
 12314                           
 12315                           ; BSR set to: 1
 12316                           ;tcpv4.c: 1069: ;
 12317                           ;tcpv4.c: 1070: if (currentTCB->timeoutsCount)
 12318  0020AA  0E34               	movlw	52
 12319  0020AC  243B               	addwf	_currentTCB,w,c
 12320  0020AE  D90F               	call	PL387	;call to abstracted procedure
 12321  0020B0  64F7               	cpfsgt	tblptrh,c
 12322  0020B2  D003               	bra	u13977
 12323  0020B4  0008               	tblrd		*
 12324  0020B6  50F5               	movf	tablat,w,c
 12325  0020B8  D002               	bra	u13970
 12326  0020BA                     u13977:
 12327  0020BA  D915               	call	PL389	;call to abstracted procedure
 12328  0020BC  50EF               	movf	indf0,w,c
 12329  0020BE                     u13970:
 12330  0020BE  0900               	iorlw	0
 12331  0020C0  E001 D4B2          	bnz	l8714
 12332                           
 12333                           ;tcpv4.c: 1074: {
 12334                           ;tcpv4.c: 1076: currentTCB->flags = 0x04U;
 12335  0020C4  D915               	call	PL393	;call to abstracted procedure
 12336  0020C6  D903               	call	PL387	;call to abstracted procedure
 12337  0020C8  64F7               	cpfsgt	tblptrh,c
 12338  0020CA  D004               	bra	u13997
 12339  0020CC  0E04               	movlw	4
 12340  0020CE  6EF5               	movwf	tablat,c
 12341  0020D0  000C               	tblwt		*
 12342  0020D2  D003               	bra	u13990
 12343  0020D4                     u13997:
 12344  0020D4  D908               	call	PL389	;call to abstracted procedure
 12345  0020D6  0E04               	movlw	4
 12346  0020D8  6EEF               	movwf	indf0,c
 12347  0020DA                     u13990:
 12348                           
 12349                           ;tcpv4.c: 1077: if(TCP_Snd(currentTCB))
 12350  0020DA  D9D3               	call	PL465	;call to abstracted procedure
 12351  0020DC  ECAC  F012         	call	_TCP_Snd	;wreg free
 12352  0020E0  EF7F  F00A         	goto	L16
 12353  0020E4                     l8852:
 12354  0020E4  0101               	movlb	1	; () banked
 12355  0020E6  510F               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 12356                           
 12357                           ; Switch size 1, requested type "space"
 12358                           ; Number of cases is 2, Range of values is 6 to 12
 12359                           ; switch strategies available:
 12360                           ; Name         Instructions Cycles
 12361                           ; simple_byte            7     4 (average)
 12362                           ;	Chosen strategy is simple_byte
 12363  0020E8  0A06               	xorlw	6	; case 6
 12364  0020EA  E0DB               	bz	l8834
 12365  0020EC  0A0A               	xorlw	10	; case 12
 12366  0020EE  E0DD               	bz	l8838
 12367  0020F0  D0D1               	goto	l8908
 12368  0020F2                     l8858:
 12369  0020F2  0101               	movlb	1	; () banked
 12370  0020F4  510F               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 12371                           
 12372                           ; Switch size 1, requested type "space"
 12373                           ; Number of cases is 1, Range of values is 4 to 4
 12374                           ; switch strategies available:
 12375                           ; Name         Instructions Cycles
 12376                           ; simple_byte            4     3 (average)
 12377                           ;	Chosen strategy is simple_byte
 12378  0020F6  0A04               	xorlw	4	; case 4
 12379  0020F8  E0A8               	bz	l8816
 12380  0020FA  D0CC               	goto	l8908
 12381  0020FC                     l8860:
 12382                           
 12383                           ; BSR set to: 1
 12384                           ;tcpv4.c: 1107: case RCV_ACK:
 12385                           ;tcpv4.c: 1108: if ((currentTCB->destIP == receivedRemoteAddress) &&
 12386                           ;tcpv4.c: 1109: (currentTCB->destPort == tcpHeader.sourcePort))
 12387  0020FC  0E02               	movlw	2
 12388  0020FE  243B               	addwf	_currentTCB,w,c
 12389  002100  D8E6               	call	PL387	;call to abstracted procedure
 12390  002102  64F7               	cpfsgt	tblptrh,c
 12391  002104  D002               	bra	u14017
 12392  002106  D8F8               	call	PL395	;call to abstracted procedure
 12393  002108  D002               	bra	u14010
 12394  00210A                     u14017:
 12395  00210A  D8ED               	call	PL389	;call to abstracted procedure
 12396  00210C  D916               	call	PL403	;call to abstracted procedure
 12397  00210E                     u14010:
 12398  00210E  5037               	movf	_receivedRemoteAddress,w,c
 12399  002110  0101               	movlb	1	; () banked
 12400  002112  1902               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 12401  002114  E109               	bnz	u14021
 12402  002116  5038               	movf	_receivedRemoteAddress+1,w,c
 12403  002118  1903               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 12404  00211A  E106               	bnz	u14021
 12405  00211C  5039               	movf	_receivedRemoteAddress+2,w,c
 12406  00211E  1904               	xorwf	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 12407  002120  E103               	bnz	u14021
 12408  002122  503A               	movf	_receivedRemoteAddress+3,w,c
 12409  002124  1905               	xorwf	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 12410  002126  A4D8               	btfss	status,2,c
 12411  002128                     u14021:
 12412  002128  D0B5               	goto	l8908
 12413                           
 12414                           ; BSR set to: 1
 12415  00212A  0E06               	movlw	6
 12416  00212C  243B               	addwf	_currentTCB,w,c
 12417  00212E  D8CF               	call	PL387	;call to abstracted procedure
 12418  002130  64F7               	cpfsgt	tblptrh,c
 12419  002132  D003               	bra	u14037
 12420  002134  0009               	tblrd		*+
 12421  002136  D8ED               	call	PL397	;call to abstracted procedure
 12422  002138  D005               	bra	u14030
 12423  00213A                     u14037:
 12424  00213A  D8D5               	call	PL389	;call to abstracted procedure
 12425  00213C  CFEE F102          	movff	postinc0,??_TCP_FiniteStateMachine+2
 12426  002140  CFEE F103          	movff	postinc0,??_TCP_FiniteStateMachine+3
 12427  002144                     u14030:
 12428  002144  0101               	movlb	1	; () banked
 12429  002146  51D2               	movf	_tcpHeader& (0+255),w,b
 12430  002148  1902               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 12431  00214A  E103               	bnz	u14041
 12432  00214C  51D3               	movf	(_tcpHeader+1)& (0+255),w,b
 12433  00214E  1903               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 12434  002150  D09E               	goto	L22
 12435  002152                     u14041:
 12436  002152  D0A0               	goto	l8908
 12437  002154                     l8868:
 12438                           
 12439                           ; BSR set to: 1
 12440                           ;tcpv4.c: 1117: if (currentTCB->timeoutsCount)
 12441  002154  0E34               	movlw	52
 12442  002156  243B               	addwf	_currentTCB,w,c
 12443  002158  D8BA               	call	PL387	;call to abstracted procedure
 12444  00215A  64F7               	cpfsgt	tblptrh,c
 12445  00215C  D003               	bra	u14057
 12446  00215E  0008               	tblrd		*
 12447  002160  50F5               	movf	tablat,w,c
 12448  002162  D002               	bra	u14050
 12449  002164                     u14057:
 12450  002164  D8C0               	call	PL389	;call to abstracted procedure
 12451  002166  50EF               	movf	indf0,w,c
 12452  002168                     u14050:
 12453  002168  0900               	iorlw	0
 12454  00216A  E001 D45D          	bnz	l8714
 12455                           
 12456                           ;tcpv4.c: 1121: {
 12457                           ;tcpv4.c: 1123: currentTCB->flags = 0x04U;
 12458  00216E  D8C0               	call	PL393	;call to abstracted procedure
 12459  002170  D8AE               	call	PL387	;call to abstracted procedure
 12460  002172  64F7               	cpfsgt	tblptrh,c
 12461  002174  D004               	bra	u14077
 12462  002176  0E04               	movlw	4
 12463  002178  6EF5               	movwf	tablat,c
 12464  00217A  000C               	tblwt		*
 12465  00217C  D003               	bra	u14070
 12466  00217E                     u14077:
 12467  00217E  D8B3               	call	PL389	;call to abstracted procedure
 12468  002180  0E04               	movlw	4
 12469  002182  6EEF               	movwf	indf0,c
 12470  002184                     u14070:
 12471                           
 12472                           ;tcpv4.c: 1124: if(TCP_Snd(currentTCB))
 12473  002184  D97E               	call	PL465	;call to abstracted procedure
 12474  002186  ECAC  F012         	call	_TCP_Snd	;wreg free
 12475  00218A  EF7F  F00A         	goto	L16
 12476  00218E                     l8882:
 12477  00218E  0101               	movlb	1	; () banked
 12478  002190  510F               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 12479                           
 12480                           ; Switch size 1, requested type "space"
 12481                           ; Number of cases is 3, Range of values is 4 to 12
 12482                           ; switch strategies available:
 12483                           ; Name         Instructions Cycles
 12484                           ; simple_byte           10     6 (average)
 12485                           ;	Chosen strategy is simple_byte
 12486  002192  0A04               	xorlw	4	; case 4
 12487  002194  E0B3               	bz	l8860
 12488  002196  0A03               	xorlw	3	; case 7
 12489  002198  E0B1               	bz	l8860
 12490  00219A  0A0B               	xorlw	11	; case 12
 12491  00219C  E0DB               	bz	l8868
 12492  00219E  D07A               	goto	l8908
 12493  0021A0                     l8886:
 12494                           
 12495                           ; BSR set to: 1
 12496                           ;tcpv4.c: 1143: ;
 12497                           ;tcpv4.c: 1145: currentTCB->timeout = ((unsigned long)1*2);
 12498  0021A0  0E30               	movlw	48
 12499  0021A2  243B               	addwf	_currentTCB,w,c
 12500  0021A4  D894               	call	PL387	;call to abstracted procedure
 12501  0021A6  64F7               	cpfsgt	tblptrh,c
 12502  0021A8  D002               	bra	u14097
 12503  0021AA  D965               	call	PL459	;call to abstracted procedure
 12504  0021AC  D002               	bra	u14090
 12505  0021AE                     u14097:
 12506  0021AE  D89B               	call	PL389	;call to abstracted procedure
 12507  0021B0  D9B6               	call	PL615	;call to abstracted procedure
 12508  0021B2                     u14090:
 12509                           
 12510                           ;tcpv4.c: 1146: currentTCB->timeoutReloadValue = ((unsigned long)1*2);
 12511  0021B2  D90B               	call	PL427	;call to abstracted procedure
 12512  0021B4  D88C               	call	PL387	;call to abstracted procedure
 12513  0021B6  64F7               	cpfsgt	tblptrh,c
 12514  0021B8  D002               	bra	u14107
 12515  0021BA  D95D               	call	PL459	;call to abstracted procedure
 12516  0021BC  D002               	bra	u14100
 12517  0021BE                     u14107:
 12518  0021BE  D893               	call	PL389	;call to abstracted procedure
 12519  0021C0  D9AE               	call	PL615	;call to abstracted procedure
 12520  0021C2                     u14100:
 12521                           
 12522                           ;tcpv4.c: 1147: currentTCB->timeoutsCount = (3u);
 12523  0021C2  D8EC               	call	PL419	;call to abstracted procedure
 12524  0021C4  D884               	call	PL387	;call to abstracted procedure
 12525  0021C6  64F7               	cpfsgt	tblptrh,c
 12526  0021C8  D004               	bra	u14117
 12527  0021CA  0E03               	movlw	3
 12528  0021CC  6EF5               	movwf	tablat,c
 12529  0021CE  000C               	tblwt		*
 12530  0021D0  D003               	bra	u14110
 12531  0021D2                     u14117:
 12532  0021D2  D889               	call	PL389	;call to abstracted procedure
 12533  0021D4  0E03               	movlw	3
 12534  0021D6  6EEF               	movwf	indf0,c
 12535  0021D8                     u14110:
 12536                           
 12537                           ;tcpv4.c: 1148: currentTCB->flags = 0x02U;
 12538  0021D8  D88B               	call	PL393	;call to abstracted procedure
 12539  0021DA  D879               	call	PL387	;call to abstracted procedure
 12540  0021DC  64F7               	cpfsgt	tblptrh,c
 12541  0021DE  D004               	bra	u14127
 12542  0021E0  0E02               	movlw	2
 12543  0021E2  6EF5               	movwf	tablat,c
 12544  0021E4  000C               	tblwt		*
 12545  0021E6  D003               	bra	u14120
 12546  0021E8                     u14127:
 12547  0021E8  D87E               	call	PL389	;call to abstracted procedure
 12548  0021EA  0E02               	movlw	2
 12549  0021EC  6EEF               	movwf	indf0,c
 12550  0021EE                     u14120:
 12551                           
 12552                           ;tcpv4.c: 1149: TCP_Snd(currentTCB);
 12553  0021EE  D949               	call	PL465	;call to abstracted procedure
 12554  0021F0  ECAC  F012         	call	_TCP_Snd	;wreg free
 12555                           
 12556                           ; BSR set to: 0
 12557                           ;tcpv4.c: 1150: nextState = SYN_SENT;
 12558  0021F4  0E02               	movlw	2
 12559  0021F6  0101               	movlb	1	; () banked
 12560  0021F8  6F10               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 12561                           
 12562                           ; BSR set to: 1
 12563                           ;tcpv4.c: 1151: ret = 1;
 12564  0021FA  0E01               	movlw	1
 12565  0021FC  6F0C               	movwf	TCP_FiniteStateMachine@ret& (0+255),b
 12566                           
 12567                           ;tcpv4.c: 1152: break;
 12568  0021FE  D04A               	goto	l8908
 12569  002200                     l8894:
 12570                           
 12571                           ; BSR set to: 1
 12572                           ;tcpv4.c: 1154: ;
 12573                           ;tcpv4.c: 1155: currentTCB->destIP = 0;
 12574  002200  0E02               	movlw	2
 12575  002202  243B               	addwf	_currentTCB,w,c
 12576  002204  D864               	call	PL387	;call to abstracted procedure
 12577  002206  64F7               	cpfsgt	tblptrh,c
 12578  002208  D006               	bra	u14137
 12579  00220A  6AF5               	clrf	tablat,c
 12580  00220C  000D               	tblwt		*+
 12581  00220E  6AF5               	clrf	tablat,c
 12582  002210  000D               	tblwt		*+
 12583  002212  D8C8               	call	PL423	;call to abstracted procedure
 12584  002214  D002               	bra	u14130
 12585  002216                     u14137:
 12586  002216  D867               	call	PL389	;call to abstracted procedure
 12587  002218  D939               	call	PL467	;call to abstracted procedure
 12588  00221A                     u14130:
 12589                           
 12590                           ;tcpv4.c: 1156: currentTCB->destPort = 0;
 12591  00221A  D90A               	call	PL447	;call to abstracted procedure
 12592  00221C  D858               	call	PL387	;call to abstracted procedure
 12593  00221E  64F7               	cpfsgt	tblptrh,c
 12594  002220  D002               	bra	u14147
 12595  002222  D8C0               	call	PL423	;call to abstracted procedure
 12596  002224  D003               	bra	u14140
 12597  002226                     u14147:
 12598  002226  D85F               	call	PL389	;call to abstracted procedure
 12599  002228  6AEE               	clrf	postinc0,c
 12600  00222A  6AEF               	clrf	indf0,c
 12601  00222C                     u14140:
 12602                           
 12603                           ;tcpv4.c: 1157: nextState = LISTEN;
 12604  00222C  0E01               	movlw	1
 12605  00222E  D7E3               	goto	L23
 12606  002230                     l8902:
 12607  002230  0101               	movlb	1	; () banked
 12608  002232  510F               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 12609                           
 12610                           ; Switch size 1, requested type "space"
 12611                           ; Number of cases is 2, Range of values is 1 to 2
 12612                           ; switch strategies available:
 12613                           ; Name         Instructions Cycles
 12614                           ; simple_byte            7     4 (average)
 12615                           ;	Chosen strategy is simple_byte
 12616  002234  0A01               	xorlw	1	; case 1
 12617  002236  E0B4               	bz	l8886
 12618  002238  0A03               	xorlw	3	; case 2
 12619  00223A  E0E2               	bz	l8894
 12620  00223C  D02B               	goto	l8908
 12621  00223E                     l8906:
 12622                           
 12623                           ; BSR set to: 1
 12624  00223E  0E2A               	movlw	42
 12625  002240  243B               	addwf	_currentTCB,w,c
 12626  002242  D845               	call	PL387	;call to abstracted procedure
 12627  002244  64F7               	cpfsgt	tblptrh,c
 12628  002246  D003               	bra	u14157
 12629  002248  0008               	tblrd		*
 12630  00224A  50F5               	movf	tablat,w,c
 12631  00224C  D002               	bra	u14150
 12632  00224E                     u14157:
 12633  00224E  D84B               	call	PL389	;call to abstracted procedure
 12634  002250  50EF               	movf	indf0,w,c
 12635  002252                     u14150:
 12636                           
 12637                           ; Switch size 1, requested type "space"
 12638                           ; Number of cases is 11, Range of values is 0 to 10
 12639                           ; switch strategies available:
 12640                           ; Name         Instructions Cycles
 12641                           ; simple_byte           34    18 (average)
 12642                           ;	Chosen strategy is simple_byte
 12643  002252  0A00               	xorlw	0	; case 0
 12644  002254  E0ED               	bz	l8902
 12645  002256  0A01               	xorlw	1	; case 1
 12646  002258  E102 EF4C  F009    	bz	l8590
 12647  00225E  0A03               	xorlw	3	; case 2
 12648  002260  E102 EF93  F00B    	bz	l8682
 12649  002266  0A01               	xorlw	1	; case 3
 12650  002268  E101 D507          	bz	l8738
 12651  00226C  0A07               	xorlw	7	; case 4
 12652  00226E  E101 D69B          	bz	l8800
 12653  002272  0A01               	xorlw	1	; case 5
 12654  002274  E101 D70A          	bz	l8832
 12655  002278  0A03               	xorlw	3	; case 6
 12656  00227A  E101 D733          	bz	l8852
 12657  00227E  0A01               	xorlw	1	; case 7
 12658  002280  E009               	bz	l8908
 12659  002282  0A0F               	xorlw	15	; case 8
 12660  002284  E101 D735          	bz	l8858
 12661  002288  0A01               	xorlw	1	; case 9
 12662  00228A  E081               	bz	l8882
 12663  00228C  0A03               	xorlw	3	; case 10
 12664  00228E                     L22:
 12665  00228E  E102 EF42  F009    	bz	l1194
 12666  002294                     l8908:
 12667                           
 12668                           ;tcpv4.c: 1167: currentTCB->connectionEvent = NOP;
 12669  002294  0E2B               	movlw	43
 12670  002296  243B               	addwf	_currentTCB,w,c
 12671  002298  0101               	movlb	1	; () banked
 12672  00229A  D819               	call	PL387	;call to abstracted procedure
 12673  00229C  64F7               	cpfsgt	tblptrh,c
 12674  00229E  D004               	bra	u14167
 12675  0022A0  0E0D               	movlw	13
 12676  0022A2  6EF5               	movwf	tablat,c
 12677  0022A4  000C               	tblwt		*
 12678  0022A6  D003               	bra	u14160
 12679  0022A8                     u14167:
 12680  0022A8  D81E               	call	PL389	;call to abstracted procedure
 12681  0022AA  0E0D               	movlw	13
 12682  0022AC  6EEF               	movwf	indf0,c
 12683  0022AE                     u14160:
 12684                           
 12685                           ;tcpv4.c: 1168: currentTCB->fsmState = nextState;
 12686  0022AE  0E2A               	movlw	42
 12687  0022B0  243B               	addwf	_currentTCB,w,c
 12688  0022B2  0101               	movlb	1	; () banked
 12689  0022B4  D80C               	call	PL387	;call to abstracted procedure
 12690  0022B6  64F7               	cpfsgt	tblptrh,c
 12691  0022B8  D004               	bra	u14177
 12692  0022BA  C110  FFF5         	movff	TCP_FiniteStateMachine@nextState,tablat
 12693  0022BE  000C               	tblwt		*
 12694  0022C0  D003               	bra	u14170
 12695  0022C2                     u14177:
 12696  0022C2  D811               	call	PL389	;call to abstracted procedure
 12697  0022C4  C110  FFEF         	movff	TCP_FiniteStateMachine@nextState,indf0
 12698  0022C8                     u14170:
 12699                           
 12700                           ;tcpv4.c: 1169: return ret;
 12701  0022C8  0101               	movlb	1	; () banked
 12702  0022CA  510C               	movf	TCP_FiniteStateMachine@ret& (0+255),w,b
 12703                           
 12704                           ; BSR set to: 1
 12705  0022CC  0012               	return		;funcret
 12706  0022CE                     __end_of_TCP_FiniteStateMachine:
 12707                           	opt stack 0
 12708  0022CE                     PL387:
 12709                           	opt stack 14
 12710  0022CE  6F00               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 12711  0022D0  0E00               	movlw	0
 12712  0022D2  203C               	addwfc	_currentTCB+1,w,c
 12713  0022D4  6F01               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 12714  0022D6  C100  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 12715  0022DA  C101  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 12716  0022DE  0E00               	movlw	low (__smallconst shr (0+16))
 12717  0022E0  6EF8               	movwf	tblptru,c
 12718  0022E2  0E0F               	movlw	(high __ramtop+-1)
 12719  0022E4  0012               	return	
 12720  0022E6                     __end_ofPL387:
 12721                           	opt stack 0
 12722  0022E6                     PL389:
 12723                           	opt stack 20
 12724  0022E6  CFF6 FFE9          	movff	tblptrl,fsr0l
 12725  0022EA  CFF7 FFEA          	movff	tblptrh,fsr0h
 12726  0022EE  0012               	return	
 12727  0022F0                     __end_ofPL389:
 12728                           	opt stack 0
 12729  0022F0                     PL393:
 12730                           	opt stack 14
 12731  0022F0  0E35               	movlw	53
 12732  0022F2  243B               	addwf	_currentTCB,w,c
 12733  0022F4  0101               	movlb	1	; () banked
 12734  0022F6  0012               	return	
 12735  0022F8                     __end_ofPL393:
 12736                           	opt stack 0
 12737  0022F8                     PL395:
 12738                           	opt stack 14
 12739  0022F8  0009               	tblrd		*+
 12740  0022FA  CFF5 F102          	movff	tablat,??_TCP_FiniteStateMachine+2
 12741  0022FE  0009               	tblrd		*+
 12742  002300  CFF5 F103          	movff	tablat,??_TCP_FiniteStateMachine+3
 12743  002304  0009               	tblrd		*+
 12744  002306  CFF5 F104          	movff	tablat,??_TCP_FiniteStateMachine+4
 12745  00230A  0009               	tblrd		*+
 12746  00230C  CFF5 F105          	movff	tablat,??_TCP_FiniteStateMachine+5
 12747  002310  0012               	return	
 12748  002312                     __end_ofPL395:
 12749                           	opt stack 0
 12750  002312                     PL397:
 12751                           	opt stack 14
 12752  002312  CFF5 F102          	movff	tablat,??_TCP_FiniteStateMachine+2
 12753  002316  0009               	tblrd		*+
 12754  002318  CFF5 F103          	movff	tablat,??_TCP_FiniteStateMachine+3
 12755  00231C  0012               	return	
 12756  00231E                     __end_ofPL397:
 12757                           	opt stack 0
 12758  00231E                     PL401:
 12759                           	opt stack 14
 12760  00231E  0E01               	movlw	1
 12761  002320  0101               	movlb	1	; () banked
 12762  002322  2502               	addwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 12763  002324  6F06               	movwf	(??_TCP_FiniteStateMachine+6)& (0+255),b
 12764  002326  0E00               	movlw	0
 12765  002328  2103               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 12766  00232A  6F07               	movwf	(??_TCP_FiniteStateMachine+7)& (0+255),b
 12767  00232C  0E00               	movlw	0
 12768  00232E  2104               	addwfc	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 12769  002330  6F08               	movwf	(??_TCP_FiniteStateMachine+8)& (0+255),b
 12770  002332  0E00               	movlw	0
 12771  002334  2105               	addwfc	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 12772  002336  6F09               	movwf	(??_TCP_FiniteStateMachine+9)& (0+255),b
 12773  002338  0012               	return	
 12774  00233A                     __end_ofPL401:
 12775                           	opt stack 0
 12776  00233A                     PL403:
 12777                           	opt stack 14
 12778  00233A  CFEE F102          	movff	postinc0,??_TCP_FiniteStateMachine+2
 12779  00233E  CFEE F103          	movff	postinc0,??_TCP_FiniteStateMachine+3
 12780  002342  CFEE F104          	movff	postinc0,??_TCP_FiniteStateMachine+4
 12781  002346  CFEE F105          	movff	postinc0,??_TCP_FiniteStateMachine+5
 12782  00234A  0012               	return	
 12783  00234C                     __end_ofPL403:
 12784                           	opt stack 0
 12785  00234C                     PL405:
 12786                           	opt stack 14
 12787  00234C  243B               	addwf	_currentTCB,w,c
 12788  00234E  6F04               	movwf	(??_TCP_FiniteStateMachine+4)& (0+255),b
 12789  002350  0E00               	movlw	0
 12790  002352  203C               	addwfc	_currentTCB+1,w,c
 12791  002354  6F05               	movwf	(??_TCP_FiniteStateMachine+5)& (0+255),b
 12792  002356  C104  FFF6         	movff	??_TCP_FiniteStateMachine+4,tblptrl
 12793  00235A  C105  FFF7         	movff	??_TCP_FiniteStateMachine+5,tblptrh
 12794  00235E  0E00               	movlw	low (__smallconst shr (0+16))
 12795  002360  6EF8               	movwf	tblptru,c
 12796  002362  0E0F               	movlw	(high __ramtop+-1)
 12797  002364  0012               	return	
 12798  002366                     __end_ofPL405:
 12799                           	opt stack 0
 12800  002366                     PL407:
 12801                           	opt stack 14
 12802  002366  0101               	movlb	1	; () banked
 12803  002368  51E0               	movf	(_tcpHeader+14)& (0+255),w,b
 12804  00236A  6F01               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 12805  00236C  6B00               	clrf	??_TCP_FiniteStateMachine& (0+255),b
 12806  00236E  EE21  F0E0         	lfsr	2,_tcpHeader+14
 12807  002372  CFDE F102          	movff	postinc2,??_TCP_FiniteStateMachine+2
 12808  002376  CFDD F103          	movff	postdec2,??_TCP_FiniteStateMachine+3
 12809  00237A  C103  F102         	movff	??_TCP_FiniteStateMachine+3,??_TCP_FiniteStateMachine+2
 12810  00237E  6B03               	clrf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 12811  002380  6B03               	clrf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 12812  002382  5100               	movf	??_TCP_FiniteStateMachine& (0+255),w,b
 12813  002384  1302               	iorwf	(??_TCP_FiniteStateMachine+2)& (0+255),f,b
 12814  002386  5101               	movf	(??_TCP_FiniteStateMachine+1)& (0+255),w,b
 12815  002388  1303               	iorwf	(??_TCP_FiniteStateMachine+3)& (0+255),f,b
 12816  00238A  0C18               	retlw	24
 12817  00238C                     __end_ofPL407:
 12818                           	opt stack 0
 12819  00238C                     PL415:
 12820                           	opt stack 14
 12821  00238C  0E1C               	movlw	28
 12822  00238E  243B               	addwf	_currentTCB,w,c
 12823  002390  0101               	movlb	1	; () banked
 12824  002392  0012               	return	
 12825  002394                     __end_ofPL415:
 12826                           	opt stack 0
 12827  002394                     PL417:
 12828                           	opt stack 14
 12829  002394  0E08               	movlw	8
 12830  002396  243B               	addwf	_currentTCB,w,c
 12831  002398  0101               	movlb	1	; () banked
 12832  00239A  0012               	return	
 12833  00239C                     __end_ofPL417:
 12834                           	opt stack 0
 12835  00239C                     PL419:
 12836                           	opt stack 14
 12837  00239C  0E34               	movlw	52
 12838  00239E  243B               	addwf	_currentTCB,w,c
 12839  0023A0  0101               	movlb	1	; () banked
 12840  0023A2  0012               	return	
 12841  0023A4                     __end_ofPL419:
 12842                           	opt stack 0
 12843  0023A4                     PL423:
 12844                           	opt stack 14
 12845  0023A4  6AF5               	clrf	tablat,c
 12846  0023A6  000D               	tblwt		*+
 12847  0023A8  6AF5               	clrf	tablat,c
 12848  0023AA  000C               	tblwt		*
 12849  0023AC  0012               	return	
 12850  0023AE                     __end_ofPL423:
 12851                           	opt stack 0
 12852  0023AE                     PL425:
 12853                           	opt stack 14
 12854  0023AE  0E01               	movlw	1
 12855  0023B0  0101               	movlb	1	; () banked
 12856  0023B2  25D6               	addwf	(_tcpHeader+4)& (0+255),w,b
 12857  0023B4  6F00               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 12858  0023B6  0E00               	movlw	0
 12859  0023B8  21D7               	addwfc	(_tcpHeader+5)& (0+255),w,b
 12860  0023BA  6F01               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 12861  0023BC  0E00               	movlw	0
 12862  0023BE  21D8               	addwfc	(_tcpHeader+6)& (0+255),w,b
 12863  0023C0  6F02               	movwf	(??_TCP_FiniteStateMachine+2)& (0+255),b
 12864  0023C2  0E00               	movlw	0
 12865  0023C4  21D9               	addwfc	(_tcpHeader+7)& (0+255),w,b
 12866  0023C6  6F03               	movwf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 12867  0023C8  0C0C               	retlw	12
 12868  0023CA                     __end_ofPL425:
 12869                           	opt stack 0
 12870  0023CA                     PL427:
 12871                           	opt stack 14
 12872  0023CA  0E32               	movlw	50
 12873  0023CC  243B               	addwf	_currentTCB,w,c
 12874  0023CE  0101               	movlb	1	; () banked
 12875  0023D0  0012               	return	
 12876  0023D2                     __end_ofPL427:
 12877                           	opt stack 0
 12878  0023D2                     PL429:
 12879                           	opt stack 14
 12880  0023D2  0E30               	movlw	48
 12881  0023D4  243B               	addwf	_currentTCB,w,c
 12882  0023D6  0101               	movlb	1	; () banked
 12883  0023D8  0012               	return	
 12884  0023DA                     __end_ofPL429:
 12885                           	opt stack 0
 12886  0023DA                     PL431:
 12887                           	opt stack 14
 12888  0023DA  0E10               	movlw	16
 12889  0023DC  243B               	addwf	_currentTCB,w,c
 12890  0023DE  0101               	movlb	1	; () banked
 12891  0023E0  0012               	return	
 12892  0023E2                     __end_ofPL431:
 12893                           	opt stack 0
 12894  0023E2                     PL439:
 12895                           	opt stack 14
 12896  0023E2  C1D6  FFF5         	movff	_tcpHeader+4,tablat
 12897  0023E6  000D               	tblwt		*+
 12898  0023E8  C1D7  FFF5         	movff	_tcpHeader+5,tablat
 12899  0023EC  000D               	tblwt		*+
 12900  0023EE  C1D8  FFF5         	movff	_tcpHeader+6,tablat
 12901  0023F2  000D               	tblwt		*+
 12902  0023F4  C1D9  FFF5         	movff	_tcpHeader+7,tablat
 12903  0023F8  000C               	tblwt		*
 12904  0023FA  0012               	return	
 12905  0023FC                     __end_ofPL439:
 12906                           	opt stack 0
 12907  0023FC                     PL441:
 12908                           	opt stack 14
 12909  0023FC  C106  FFF5         	movff	??_TCP_FiniteStateMachine+6,tablat
 12910  002400  000D               	tblwt		*+
 12911  002402  C107  FFF5         	movff	??_TCP_FiniteStateMachine+7,tablat
 12912  002406  000D               	tblwt		*+
 12913  002408  C108  FFF5         	movff	??_TCP_FiniteStateMachine+8,tablat
 12914  00240C  000D               	tblwt		*+
 12915  00240E  C109  FFF5         	movff	??_TCP_FiniteStateMachine+9,tablat
 12916  002412  000C               	tblwt		*
 12917  002414  0012               	return	
 12918  002416                     __end_ofPL441:
 12919                           	opt stack 0
 12920  002416                     PL443:
 12921                           	opt stack 14
 12922  002416  243B               	addwf	_currentTCB,w,c
 12923  002418  6F0A               	movwf	(??_TCP_FiniteStateMachine+10)& (0+255),b
 12924  00241A  0E00               	movlw	0
 12925  00241C  203C               	addwfc	_currentTCB+1,w,c
 12926  00241E  6F0B               	movwf	(??_TCP_FiniteStateMachine+11)& (0+255),b
 12927  002420  C10A  FFF6         	movff	??_TCP_FiniteStateMachine+10,tblptrl
 12928  002424  C10B  FFF7         	movff	??_TCP_FiniteStateMachine+11,tblptrh
 12929  002428  0E00               	movlw	low (__smallconst shr (0+16))
 12930  00242A  6EF8               	movwf	tblptru,c
 12931  00242C  0E0F               	movlw	(high __ramtop+-1)
 12932  00242E  0012               	return	
 12933  002430                     __end_ofPL443:
 12934                           	opt stack 0
 12935  002430                     PL447:
 12936                           	opt stack 14
 12937  002430  0E06               	movlw	6
 12938  002432  243B               	addwf	_currentTCB,w,c
 12939  002434  0101               	movlb	1	; () banked
 12940  002436  0012               	return	
 12941  002438                     __end_ofPL447:
 12942                           	opt stack 0
 12943  002438                     PL449:
 12944                           	opt stack 14
 12945  002438  6F10               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 12946  00243A  0E36               	movlw	54
 12947  00243C  243B               	addwf	_currentTCB,w,c
 12948  00243E  0012               	return	
 12949  002440                     __end_ofPL449:
 12950                           	opt stack 0
 12951  002440                     PL453:
 12952                           	opt stack 14
 12953  002440  C102  FFF5         	movff	??_TCP_FiniteStateMachine+2,tablat
 12954  002444  000D               	tblwt		*+
 12955  002446  C103  FFF5         	movff	??_TCP_FiniteStateMachine+3,tablat
 12956  00244A  000C               	tblwt		*
 12957  00244C  0012               	return	
 12958  00244E                     __end_ofPL453:
 12959                           	opt stack 0
 12960  00244E                     PL455:
 12961                           	opt stack 14
 12962  00244E  C100  FFF5         	movff	??_TCP_FiniteStateMachine,tablat
 12963  002452  000D               	tblwt		*+
 12964  002454  C101  FFF5         	movff	??_TCP_FiniteStateMachine+1,tablat
 12965  002458  000D               	tblwt		*+
 12966  00245A  0012               	return	
 12967  00245C                     __end_ofPL455:
 12968                           	opt stack 0
 12969  00245C                     PL457:
 12970                           	opt stack 14
 12971  00245C  C1DA  FFF5         	movff	_tcpHeader+8,tablat
 12972  002460  000D               	tblwt		*+
 12973  002462  C1DB  FFF5         	movff	_tcpHeader+9,tablat
 12974  002466  000D               	tblwt		*+
 12975  002468  C1DC  FFF5         	movff	_tcpHeader+10,tablat
 12976  00246C  000D               	tblwt		*+
 12977  00246E  C1DD  FFF5         	movff	_tcpHeader+11,tablat
 12978  002472  000C               	tblwt		*
 12979  002474  0012               	return	
 12980  002476                     __end_ofPL457:
 12981                           	opt stack 0
 12982  002476                     PL459:
 12983                           	opt stack 14
 12984  002476  0E02               	movlw	2
 12985  002478  6EF5               	movwf	tablat,c
 12986  00247A  000D               	tblwt		*+
 12987  00247C  6AF5               	clrf	tablat,c
 12988  00247E  000C               	tblwt		*
 12989  002480  0C02               	retlw	2
 12990  002482                     __end_ofPL459:
 12991                           	opt stack 0
 12992  002482                     PL465:
 12993                           	opt stack 14
 12994  002482  C03B  F09F         	movff	_currentTCB,TCP_Snd@tcbPtr
 12995  002486  C03C  F0A0         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 12996  00248A  0012               	return	
 12997  00248C                     __end_ofPL465:
 12998                           	opt stack 0
 12999  00248C                     PL467:
 13000                           	opt stack 14
 13001  00248C  6AEE               	clrf	postinc0,c
 13002  00248E  6AEE               	clrf	postinc0,c
 13003  002490  6AEE               	clrf	postinc0,c
 13004  002492  6AEF               	clrf	indf0,c
 13005  002494  0012               	return	
 13006  002496                     __end_ofPL467:
 13007                           	opt stack 0
 13008  002496                     PL471:
 13009                           	opt stack 14
 13010  002496  0E0C               	movlw	12
 13011  002498  243B               	addwf	_currentTCB,w,c
 13012  00249A  0101               	movlb	1	; () banked
 13013  00249C  0012               	return	
 13014  00249E                     __end_ofPL471:
 13015                           	opt stack 0
 13016  00249E                     PL473:
 13017                           	opt stack 14
 13018  00249E  0E14               	movlw	20
 13019  0024A0  243B               	addwf	_currentTCB,w,c
 13020  0024A2  0101               	movlb	1	; () banked
 13021  0024A4  0012               	return	
 13022  0024A6                     __end_ofPL473:
 13023                           	opt stack 0
 13024  0024A6                     PL475:
 13025                           	opt stack 14
 13026  0024A6  C106  FFEE         	movff	??_TCP_FiniteStateMachine+6,postinc0
 13027  0024AA  C107  FFEE         	movff	??_TCP_FiniteStateMachine+7,postinc0
 13028  0024AE  C108  FFEE         	movff	??_TCP_FiniteStateMachine+8,postinc0
 13029  0024B2  C109  FFEF         	movff	??_TCP_FiniteStateMachine+9,indf0
 13030  0024B6  0012               	return	
 13031  0024B8                     __end_ofPL475:
 13032                           	opt stack 0
 13033  0024B8                     PL477:
 13034                           	opt stack 14
 13035  0024B8  C1D6  FFEE         	movff	_tcpHeader+4,postinc0
 13036  0024BC  C1D7  FFEE         	movff	_tcpHeader+5,postinc0
 13037  0024C0  C1D8  FFEE         	movff	_tcpHeader+6,postinc0
 13038  0024C4  C1D9  FFEF         	movff	_tcpHeader+7,indf0
 13039  0024C8  0012               	return	
 13040  0024CA                     __end_ofPL477:
 13041                           	opt stack 0
 13042  0024CA                     PL487:
 13043                           	opt stack 14
 13044  0024CA  C100  FFEE         	movff	??_TCP_FiniteStateMachine,postinc0
 13045  0024CE  C101  FFEE         	movff	??_TCP_FiniteStateMachine+1,postinc0
 13046  0024D2  C102  FFEE         	movff	??_TCP_FiniteStateMachine+2,postinc0
 13047  0024D6  C103  FFEF         	movff	??_TCP_FiniteStateMachine+3,indf0
 13048  0024DA  0012               	return	
 13049  0024DC                     __end_ofPL487:
 13050                           	opt stack 0
 13051  0024DC                     PL493:
 13052                           	opt stack 14
 13053  0024DC  C1DA  FFEE         	movff	_tcpHeader+8,postinc0
 13054  0024E0  C1DB  FFEE         	movff	_tcpHeader+9,postinc0
 13055  0024E4  C1DC  FFEE         	movff	_tcpHeader+10,postinc0
 13056  0024E8  C1DD  FFEF         	movff	_tcpHeader+11,indf0
 13057  0024EC  0012               	return	
 13058  0024EE                     __end_ofPL493:
 13059                           	opt stack 0
 13060  0024EE                     PL503:
 13061                           	opt stack 14
 13062  0024EE  C102  FFEE         	movff	??_TCP_FiniteStateMachine+2,postinc0
 13063  0024F2  C103  FFEF         	movff	??_TCP_FiniteStateMachine+3,indf0
 13064  0024F6  0012               	return	
 13065  0024F8                     __end_ofPL503:
 13066                           	opt stack 0
 13067  0024F8                     PL511:
 13068                           	opt stack 14
 13069  0024F8  0E27               	movlw	39
 13070  0024FA  243B               	addwf	_currentTCB,w,c
 13071  0024FC  0101               	movlb	1	; () banked
 13072  0024FE  0012               	return	
 13073  002500                     __end_ofPL511:
 13074                           	opt stack 0
 13075  002500                     PL515:
 13076                           	opt stack 14
 13077  002500  0E18               	movlw	24
 13078  002502  243B               	addwf	_currentTCB,w,c
 13079  002504  0101               	movlb	1	; () banked
 13080  002506  0012               	return	
 13081  002508                     __end_ofPL515:
 13082                           	opt stack 0
 13083  002508                     PL517:
 13084                           	opt stack 14
 13085  002508  0E02               	movlw	2
 13086  00250A  243B               	addwf	_currentTCB,w,c
 13087  00250C  0101               	movlb	1	; () banked
 13088  00250E  0012               	return	
 13089  002510                     __end_ofPL517:
 13090                           	opt stack 0
 13091  002510                     PL545:
 13092                           	opt stack 14
 13093  002510  C043  FFF5         	movff	_tcpMss,tablat
 13094  002514  000D               	tblwt		*+
 13095  002516  C044  FFF5         	movff	_tcpMss+1,tablat
 13096  00251A  000C               	tblwt		*
 13097  00251C  0012               	return	
 13098  00251E                     __end_ofPL545:
 13099                           	opt stack 0
 13100  00251E                     PL615:
 13101                           	opt stack 14
 13102  00251E  0E02               	movlw	2
 13103  002520  6EEE               	movwf	postinc0,c
 13104  002522  6AEF               	clrf	indf0,c
 13105  002524  0C02               	retlw	2
 13106  002526                     __end_ofPL615:
 13107                           	opt stack 0
 13108  002526                     PL631:
 13109                           	opt stack 14
 13110  002526  C043  FFEE         	movff	_tcpMss,postinc0
 13111  00252A  C044  FFEF         	movff	_tcpMss+1,indf0
 13112  00252E  0012               	return	
 13113  002530                     __end_ofPL631:
 13114                           	opt stack 0
 13115  002530                     PL635:
 13116                           	opt stack 14
 13117  002530  C03B  FFF6         	movff	_currentTCB,tblptrl
 13118  002534  C03C  FFF7         	movff	_currentTCB+1,tblptrh
 13119  002538  0E00               	movlw	low (__smallconst shr (0+16))
 13120  00253A  6EF8               	movwf	tblptru,c
 13121  00253C  0E0F               	movlw	(high __ramtop+-1)
 13122  00253E  0012               	return	
 13123  002540                     __end_ofPL635:
 13124                           	opt stack 0
 13125  002540                     PL637:
 13126                           	opt stack 14
 13127  002540  0009               	tblrd		*+
 13128  002542  CFF5 F100          	movff	tablat,??_TCP_FiniteStateMachine
 13129  002546  0009               	tblrd		*+
 13130  002548  CFF5 F101          	movff	tablat,??_TCP_FiniteStateMachine+1
 13131  00254C  0012               	return	
 13132  00254E                     __end_ofPL637:
 13133                           	opt stack 0
 13134  00254E                     PL683:
 13135                           	opt stack 14
 13136  00254E  CFEE F100          	movff	postinc0,??_TCP_FiniteStateMachine
 13137  002552  CFEE F101          	movff	postinc0,??_TCP_FiniteStateMachine+1
 13138  002556  0012               	return	
 13139  002558                     __end_ofPL683:
 13140                           	opt stack 0
 13141                           tosu	equ	0xFFF
 13142                           tosh	equ	0xFFE
 13143                           tosl	equ	0xFFD
 13144                           pclath	equ	0xFFA
 13145                           tblptru	equ	0xFF8
 13146                           tblptrh	equ	0xFF7
 13147                           tblptrl	equ	0xFF6
 13148                           tablat	equ	0xFF5
 13149                           prodh	equ	0xFF4
 13150                           prodl	equ	0xFF3
 13151                           intcon	equ	0xFF2
 13152                           indf0	equ	0xFEF
 13153                           postinc0	equ	0xFEE
 13154                           fsr0h	equ	0xFEA
 13155                           fsr0l	equ	0xFE9
 13156                           wreg	equ	0xFE8
 13157                           indf1	equ	0xFE7
 13158                           postinc1	equ	0xFE6
 13159                           postdec1	equ	0xFE5
 13160                           plusw1	equ	0xFE3
 13161                           fsr1h	equ	0xFE2
 13162                           fsr1l	equ	0xFE1
 13163                           indf2	equ	0xFDF
 13164                           postinc2	equ	0xFDE
 13165                           postdec2	equ	0xFDD
 13166                           plusw2	equ	0xFDB
 13167                           fsr2h	equ	0xFDA
 13168                           fsr2l	equ	0xFD9
 13169                           status	equ	0xFD8
 13170                           
 13171 ;; *************** function _TCP_PayloadSave *****************
 13172 ;; Defined at:
 13173 ;;		line 310 in file "../../TCPIP Library/source/tcpv4.c"
 13174 ;; Parameters:    Size  Location     Type
 13175 ;;  len             2  142[BANK0 ] unsigned int 
 13176 ;; Auto vars:     Size  Location     Type
 13177 ;;  buffer_size     2  157[BANK0 ] unsigned int 
 13178 ;;  ret             1    0        unsigned char 
 13179 ;; Return value:  Size  Location     Type
 13180 ;;                  1    wreg      unsigned char 
 13181 ;; Registers used:
 13182 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13183 ;; Tracked objects:
 13184 ;;		On entry : 0/1
 13185 ;;		On exit  : 0/0
 13186 ;;		Unchanged: 0/0
 13187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13188 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13189 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13190 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13191 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13192 ;;Total ram usage:       17 bytes
 13193 ;; Hardware stack levels used:    1
 13194 ;; Hardware stack levels required when called:   13
 13195 ;; This function calls:
 13196 ;;		_ETH_ReadBlock
 13197 ;;		_TCP_Snd
 13198 ;; This function is called by:
 13199 ;;		_TCP_FiniteStateMachine
 13200 ;; This function uses a non-reentrant model
 13201 ;;
 13202                           
 13203                           	psect	text44
 13204  003E3C                     __ptext44:
 13205                           	opt stack 0
 13206  003E3C                     _TCP_PayloadSave:
 13207                           	opt stack 14
 13208                           
 13209                           ;tcpv4.c: 313: uint16_t buffer_size;
 13210                           ;tcpv4.c: 316: if (currentTCB->rxBufState == RX_BUFF_IN_USE)
 13211                           
 13212                           ; BSR set to: 1
 13213                           ;incstack = 0
 13214  003E3C  0E22               	movlw	34
 13215  003E3E  D8D6               	call	PL413	;call to abstracted procedure
 13216  003E40  64F7               	cpfsgt	tblptrh,c
 13217  003E42  D003               	bra	u12017
 13218  003E44  0008               	tblrd		*
 13219  003E46  50F5               	movf	tablat,w,c
 13220  003E48  D003               	bra	u12010
 13221  003E4A                     u12017:
 13222  003E4A  EC73  F011         	call	PL389	;call to abstracted procedure
 13223  003E4E  50EF               	movf	indf0,w,c
 13224  003E50                     u12010:
 13225  003E50  06E8               	decf	wreg,f,c
 13226  003E52  A4D8               	btfss	status,2,c
 13227  003E54  0012               	return	
 13228                           
 13229                           ;tcpv4.c: 317: {
 13230                           ;tcpv4.c: 319: if (currentTCB->localWnd >= len)
 13231  003E56  0E1A               	movlw	26
 13232  003E58  D8C9               	call	PL413	;call to abstracted procedure
 13233  003E5A  64F7               	cpfsgt	tblptrh,c
 13234  003E5C  D002               	bra	u12037
 13235  003E5E  D8D4               	call	PL543	;call to abstracted procedure
 13236  003E60  D003               	bra	u12030
 13237  003E62                     u12037:
 13238  003E62  EC73  F011         	call	PL389	;call to abstracted procedure
 13239  003E66  D8E4               	call	PL629	;call to abstracted procedure
 13240  003E68                     u12030:
 13241  003E68  0100               	movlb	0	; () banked
 13242  003E6A  51EE               	movf	TCP_PayloadSave@len& (0+255),w,b
 13243  003E6C  5DF2               	subwf	(??_TCP_PayloadSave+2)& (0+255),w,b
 13244  003E6E  51EF               	movf	(TCP_PayloadSave@len+1)& (0+255),w,b
 13245  003E70  59F3               	subwfb	(??_TCP_PayloadSave+3)& (0+255),w,b
 13246  003E72  E305               	bnc	l8348
 13247                           
 13248                           ; BSR set to: 0
 13249                           ;tcpv4.c: 320: {
 13250                           ;tcpv4.c: 321: buffer_size = len;
 13251  003E74  C0EE  F0FD         	movff	TCP_PayloadSave@len,TCP_PayloadSave@buffer_size
 13252  003E78  C0EF  F0FE         	movff	TCP_PayloadSave@len+1,TCP_PayloadSave@buffer_size+1
 13253                           
 13254                           ;tcpv4.c: 322: }else
 13255  003E7C  D01C               	goto	l8350
 13256  003E7E                     l8348:
 13257                           
 13258                           ; BSR set to: 0
 13259                           ;tcpv4.c: 323: {
 13260                           ;tcpv4.c: 324: buffer_size = currentTCB->localWnd;
 13261  003E7E  0E1A               	movlw	26
 13262  003E80  243B               	addwf	_currentTCB,w,c
 13263  003E82  6FF0               	movwf	??_TCP_PayloadSave& (0+255),b
 13264  003E84  0E00               	movlw	0
 13265  003E86  203C               	addwfc	_currentTCB+1,w,c
 13266  003E88  6FF1               	movwf	(??_TCP_PayloadSave+1)& (0+255),b
 13267  003E8A  C0F0  FFF6         	movff	??_TCP_PayloadSave,tblptrl
 13268  003E8E  C0F1  FFF7         	movff	??_TCP_PayloadSave+1,tblptrh
 13269  003E92  0E00               	movlw	low (__smallconst shr (0+16))
 13270  003E94  6EF8               	movwf	tblptru,c
 13271  003E96  0E0F               	movlw	(high __ramtop+-1)
 13272  003E98  64F7               	cpfsgt	tblptrh,c
 13273  003E9A  D007               	bra	u12057
 13274  003E9C  0009               	tblrd		*+
 13275  003E9E  CFF5 F0FD          	movff	tablat,TCP_PayloadSave@buffer_size
 13276  003EA2  0009               	tblrd		*+
 13277  003EA4  CFF5 F0FE          	movff	tablat,TCP_PayloadSave@buffer_size+1
 13278  003EA8  D006               	bra	u12050
 13279  003EAA                     u12057:
 13280  003EAA  EC73  F011         	call	PL389	;call to abstracted procedure
 13281  003EAE  CFEE F0FD          	movff	postinc0,TCP_PayloadSave@buffer_size
 13282  003EB2  CFEE F0FE          	movff	postinc0,TCP_PayloadSave@buffer_size+1
 13283  003EB6                     u12050:
 13284  003EB6                     l8350:
 13285                           
 13286                           ;tcpv4.c: 325: }
 13287                           ;tcpv4.c: 327: ETH_ReadBlock(currentTCB->rxBufferPtr, buffer_size);
 13288  003EB6  0E20               	movlw	32
 13289  003EB8  D899               	call	PL413	;call to abstracted procedure
 13290  003EBA  64F7               	cpfsgt	tblptrh,c
 13291  003EBC  D007               	bra	u12067
 13292  003EBE  0009               	tblrd		*+
 13293  003EC0  CFF5 F017          	movff	tablat,ETH_ReadBlock@buffer
 13294  003EC4  0009               	tblrd		*+
 13295  003EC6  CFF5 F018          	movff	tablat,ETH_ReadBlock@buffer+1
 13296  003ECA  D006               	bra	u12060
 13297  003ECC                     u12067:
 13298  003ECC  EC73  F011         	call	PL389	;call to abstracted procedure
 13299  003ED0  CFEE F017          	movff	postinc0,ETH_ReadBlock@buffer
 13300  003ED4  CFEE F018          	movff	postinc0,ETH_ReadBlock@buffer+1
 13301  003ED8                     u12060:
 13302  003ED8  C0FD  F019         	movff	TCP_PayloadSave@buffer_size,ETH_ReadBlock@length
 13303  003EDC  C0FE  F01A         	movff	TCP_PayloadSave@buffer_size+1,ETH_ReadBlock@length+1
 13304  003EE0  EC92  F02C         	call	_ETH_ReadBlock	;wreg free
 13305                           
 13306                           ; BSR set to: 1
 13307                           ;tcpv4.c: 328: currentTCB->rxBufferPtr = currentTCB->rxBufferPtr + buffer_size;
 13308  003EE4  0E20               	movlw	32
 13309  003EE6  D882               	call	PL413	;call to abstracted procedure
 13310  003EE8  64F7               	cpfsgt	tblptrh,c
 13311  003EEA  D002               	bra	u12077
 13312  003EEC  D88D               	call	PL543	;call to abstracted procedure
 13313  003EEE  D003               	bra	u12070
 13314  003EF0                     u12077:
 13315  003EF0  EC73  F011         	call	PL389	;call to abstracted procedure
 13316  003EF4  D89D               	call	PL629	;call to abstracted procedure
 13317  003EF6                     u12070:
 13318  003EF6  0100               	movlb	0	; () banked
 13319  003EF8  51FD               	movf	TCP_PayloadSave@buffer_size& (0+255),w,b
 13320  003EFA  27F2               	addwf	(??_TCP_PayloadSave+2)& (0+255),f,b
 13321  003EFC  51FE               	movf	(TCP_PayloadSave@buffer_size+1)& (0+255),w,b
 13322  003EFE  23F3               	addwfc	(??_TCP_PayloadSave+3)& (0+255),f,b
 13323  003F00  0E20               	movlw	32
 13324  003F02  D889               	call	PL551	;call to abstracted procedure
 13325  003F04  64F7               	cpfsgt	tblptrh,c
 13326  003F06  D002               	bra	u12087
 13327  003F08  D898               	call	PL643	;call to abstracted procedure
 13328  003F0A  D003               	bra	u12080
 13329  003F0C                     u12087:
 13330  003F0C  EC73  F011         	call	PL389	;call to abstracted procedure
 13331  003F10  D89B               	call	PL681	;call to abstracted procedure
 13332  003F12                     u12080:
 13333                           
 13334                           ;tcpv4.c: 331: currentTCB->localWnd = currentTCB->localWnd - buffer_size;
 13335  003F12  0E1A               	movlw	26
 13336  003F14  D86B               	call	PL413	;call to abstracted procedure
 13337  003F16  64F7               	cpfsgt	tblptrh,c
 13338  003F18  D002               	bra	u12097
 13339  003F1A  D876               	call	PL543	;call to abstracted procedure
 13340  003F1C  D003               	bra	u12090
 13341  003F1E                     u12097:
 13342  003F1E  EC73  F011         	call	PL389	;call to abstracted procedure
 13343  003F22  D886               	call	PL629	;call to abstracted procedure
 13344  003F24                     u12090:
 13345  003F24  0100               	movlb	0	; () banked
 13346  003F26  51FD               	movf	TCP_PayloadSave@buffer_size& (0+255),w,b
 13347  003F28  5FF2               	subwf	(??_TCP_PayloadSave+2)& (0+255),f,b
 13348  003F2A  51FE               	movf	(TCP_PayloadSave@buffer_size+1)& (0+255),w,b
 13349  003F2C  5BF3               	subwfb	(??_TCP_PayloadSave+3)& (0+255),f,b
 13350  003F2E  0E1A               	movlw	26
 13351  003F30  D872               	call	PL551	;call to abstracted procedure
 13352  003F32  64F7               	cpfsgt	tblptrh,c
 13353  003F34  D002               	bra	u12107
 13354  003F36  D881               	call	PL643	;call to abstracted procedure
 13355  003F38  D003               	bra	u12100
 13356  003F3A                     u12107:
 13357  003F3A  EC73  F011         	call	PL389	;call to abstracted procedure
 13358  003F3E  D884               	call	PL681	;call to abstracted procedure
 13359  003F40                     u12100:
 13360                           
 13361                           ;tcpv4.c: 332: currentTCB->remoteAck = currentTCB->remoteSeqno + buffer_size;
 13362  003F40  0E08               	movlw	8
 13363  003F42  D854               	call	PL413	;call to abstracted procedure
 13364  003F44  64F7               	cpfsgt	tblptrh,c
 13365  003F46  D008               	bra	u12117
 13366  003F48  D85F               	call	PL543	;call to abstracted procedure
 13367  003F4A  0009               	tblrd		*+
 13368  003F4C  CFF5 F0F4          	movff	tablat,??_TCP_PayloadSave+4
 13369  003F50  0009               	tblrd		*+
 13370  003F52  CFF5 F0F5          	movff	tablat,??_TCP_PayloadSave+5
 13371  003F56  D007               	bra	u12110
 13372  003F58                     u12117:
 13373  003F58  EC73  F011         	call	PL389	;call to abstracted procedure
 13374  003F5C  D869               	call	PL629	;call to abstracted procedure
 13375  003F5E  CFEE F0F4          	movff	postinc0,??_TCP_PayloadSave+4
 13376  003F62  CFEE F0F5          	movff	postinc0,??_TCP_PayloadSave+5
 13377  003F66                     u12110:
 13378  003F66  0100               	movlb	0	; () banked
 13379  003F68  51FD               	movf	TCP_PayloadSave@buffer_size& (0+255),w,b
 13380  003F6A  25F2               	addwf	(??_TCP_PayloadSave+2)& (0+255),w,b
 13381  003F6C  6FF6               	movwf	(??_TCP_PayloadSave+6)& (0+255),b
 13382  003F6E  51FE               	movf	(TCP_PayloadSave@buffer_size+1)& (0+255),w,b
 13383  003F70  21F3               	addwfc	(??_TCP_PayloadSave+3)& (0+255),w,b
 13384  003F72  6FF7               	movwf	(??_TCP_PayloadSave+7)& (0+255),b
 13385  003F74  0E00               	movlw	0
 13386  003F76  21F4               	addwfc	(??_TCP_PayloadSave+4)& (0+255),w,b
 13387  003F78  6FF8               	movwf	(??_TCP_PayloadSave+8)& (0+255),b
 13388  003F7A  0E00               	movlw	0
 13389  003F7C  21F5               	addwfc	(??_TCP_PayloadSave+5)& (0+255),w,b
 13390  003F7E  6FF9               	movwf	(??_TCP_PayloadSave+9)& (0+255),b
 13391  003F80  0E0C               	movlw	12
 13392  003F82  243B               	addwf	_currentTCB,w,c
 13393  003F84  6FFA               	movwf	(??_TCP_PayloadSave+10)& (0+255),b
 13394  003F86  0E00               	movlw	0
 13395  003F88  203C               	addwfc	_currentTCB+1,w,c
 13396  003F8A  6FFB               	movwf	(??_TCP_PayloadSave+11)& (0+255),b
 13397  003F8C  C0FA  FFF6         	movff	??_TCP_PayloadSave+10,tblptrl
 13398  003F90  C0FB  FFF7         	movff	??_TCP_PayloadSave+11,tblptrh
 13399  003F94  0E00               	movlw	low (__smallconst shr (0+16))
 13400  003F96  6EF8               	movwf	tblptru,c
 13401  003F98  0E0F               	movlw	(high __ramtop+-1)
 13402  003F9A  64F7               	cpfsgt	tblptrh,c
 13403  003F9C  D00D               	bra	u12127
 13404  003F9E  C0F6  FFF5         	movff	??_TCP_PayloadSave+6,tablat
 13405  003FA2  000D               	tblwt		*+
 13406  003FA4  C0F7  FFF5         	movff	??_TCP_PayloadSave+7,tablat
 13407  003FA8  000D               	tblwt		*+
 13408  003FAA  C0F8  FFF5         	movff	??_TCP_PayloadSave+8,tablat
 13409  003FAE  000D               	tblwt		*+
 13410  003FB0  C0F9  FFF5         	movff	??_TCP_PayloadSave+9,tablat
 13411  003FB4  000C               	tblwt		*
 13412  003FB6  D00A               	bra	u12120
 13413  003FB8                     u12127:
 13414  003FB8  EC73  F011         	call	PL389	;call to abstracted procedure
 13415  003FBC  C0F6  FFEE         	movff	??_TCP_PayloadSave+6,postinc0
 13416  003FC0  C0F7  FFEE         	movff	??_TCP_PayloadSave+7,postinc0
 13417  003FC4  C0F8  FFEE         	movff	??_TCP_PayloadSave+8,postinc0
 13418  003FC8  C0F9  FFEF         	movff	??_TCP_PayloadSave+9,indf0
 13419  003FCC                     u12120:
 13420                           
 13421                           ;tcpv4.c: 335: currentTCB->flags = 0x10U;
 13422  003FCC  0E35               	movlw	53
 13423  003FCE  D80E               	call	PL413	;call to abstracted procedure
 13424  003FD0  64F7               	cpfsgt	tblptrh,c
 13425  003FD2  D004               	bra	u12137
 13426  003FD4  0E10               	movlw	16
 13427  003FD6  6EF5               	movwf	tablat,c
 13428  003FD8  000C               	tblwt		*
 13429  003FDA  D004               	bra	u12130
 13430  003FDC                     u12137:
 13431  003FDC  EC73  F011         	call	PL389	;call to abstracted procedure
 13432  003FE0  0E10               	movlw	16
 13433  003FE2  6EEF               	movwf	indf0,c
 13434  003FE4                     u12130:
 13435                           
 13436                           ;tcpv4.c: 336: TCP_Snd(currentTCB);
 13437  003FE4  EC41  F012         	call	PL465	;call to abstracted procedure
 13438  003FE8  EFAC  F012         	goto	_TCP_Snd	;wreg free
 13439  003FEC                     __end_of_TCP_PayloadSave:
 13440                           	opt stack 0
 13441  003FEC                     PL413:
 13442                           	opt stack 14
 13443  003FEC  243B               	addwf	_currentTCB,w,c
 13444  003FEE  0100               	movlb	0	; () banked
 13445  003FF0  6FF0               	movwf	??_TCP_PayloadSave& (0+255),b
 13446  003FF2  0E00               	movlw	0
 13447  003FF4  203C               	addwfc	_currentTCB+1,w,c
 13448  003FF6  6FF1               	movwf	(??_TCP_PayloadSave+1)& (0+255),b
 13449  003FF8  C0F0  FFF6         	movff	??_TCP_PayloadSave,tblptrl
 13450  003FFC  C0F1  FFF7         	movff	??_TCP_PayloadSave+1,tblptrh
 13451  004000  0E00               	movlw	low (__smallconst shr (0+16))
 13452  004002  6EF8               	movwf	tblptru,c
 13453  004004  0E0F               	movlw	(high __ramtop+-1)
 13454  004006  0012               	return	
 13455  004008                     __end_ofPL413:
 13456                           	opt stack 0
 13457  004008                     PL543:
 13458                           	opt stack 14
 13459  004008  0009               	tblrd		*+
 13460  00400A  CFF5 F0F2          	movff	tablat,??_TCP_PayloadSave+2
 13461  00400E  0009               	tblrd		*+
 13462  004010  CFF5 F0F3          	movff	tablat,??_TCP_PayloadSave+3
 13463  004014  0012               	return	
 13464  004016                     __end_ofPL543:
 13465                           	opt stack 0
 13466  004016                     PL551:
 13467                           	opt stack 14
 13468  004016  243B               	addwf	_currentTCB,w,c
 13469  004018  6FF4               	movwf	(??_TCP_PayloadSave+4)& (0+255),b
 13470  00401A  0E00               	movlw	0
 13471  00401C  203C               	addwfc	_currentTCB+1,w,c
 13472  00401E  6FF5               	movwf	(??_TCP_PayloadSave+5)& (0+255),b
 13473  004020  C0F4  FFF6         	movff	??_TCP_PayloadSave+4,tblptrl
 13474  004024  C0F5  FFF7         	movff	??_TCP_PayloadSave+5,tblptrh
 13475  004028  0E00               	movlw	low (__smallconst shr (0+16))
 13476  00402A  6EF8               	movwf	tblptru,c
 13477  00402C  0E0F               	movlw	(high __ramtop+-1)
 13478  00402E  0012               	return	
 13479  004030                     __end_ofPL551:
 13480                           	opt stack 0
 13481  004030                     PL629:
 13482                           	opt stack 14
 13483  004030  CFEE F0F2          	movff	postinc0,??_TCP_PayloadSave+2
 13484  004034  CFEE F0F3          	movff	postinc0,??_TCP_PayloadSave+3
 13485  004038  0012               	return	
 13486  00403A                     __end_ofPL629:
 13487                           	opt stack 0
 13488  00403A                     PL643:
 13489                           	opt stack 14
 13490  00403A  C0F2  FFF5         	movff	??_TCP_PayloadSave+2,tablat
 13491  00403E  000D               	tblwt		*+
 13492  004040  C0F3  FFF5         	movff	??_TCP_PayloadSave+3,tablat
 13493  004044  000C               	tblwt		*
 13494  004046  0012               	return	
 13495  004048                     __end_ofPL643:
 13496                           	opt stack 0
 13497  004048                     PL681:
 13498                           	opt stack 14
 13499  004048  C0F2  FFEE         	movff	??_TCP_PayloadSave+2,postinc0
 13500  00404C  C0F3  FFEF         	movff	??_TCP_PayloadSave+3,indf0
 13501  004050  0012               	return	
 13502  004052                     __end_ofPL681:
 13503                           	opt stack 0
 13504                           tosu	equ	0xFFF
 13505                           tosh	equ	0xFFE
 13506                           tosl	equ	0xFFD
 13507                           pclath	equ	0xFFA
 13508                           tblptru	equ	0xFF8
 13509                           tblptrh	equ	0xFF7
 13510                           tblptrl	equ	0xFF6
 13511                           tablat	equ	0xFF5
 13512                           prodh	equ	0xFF4
 13513                           prodl	equ	0xFF3
 13514                           intcon	equ	0xFF2
 13515                           indf0	equ	0xFEF
 13516                           postinc0	equ	0xFEE
 13517                           fsr0h	equ	0xFEA
 13518                           fsr0l	equ	0xFE9
 13519                           wreg	equ	0xFE8
 13520                           indf1	equ	0xFE7
 13521                           postinc1	equ	0xFE6
 13522                           postdec1	equ	0xFE5
 13523                           plusw1	equ	0xFE3
 13524                           fsr1h	equ	0xFE2
 13525                           fsr1l	equ	0xFE1
 13526                           indf2	equ	0xFDF
 13527                           postinc2	equ	0xFDE
 13528                           postdec2	equ	0xFDD
 13529                           plusw2	equ	0xFDB
 13530                           fsr2h	equ	0xFDA
 13531                           fsr2l	equ	0xFD9
 13532                           status	equ	0xFD8
 13533                           
 13534 ;; *************** function _TCP_Snd *****************
 13535 ;; Defined at:
 13536 ;;		line 200 in file "../../TCPIP Library/source/tcpv4.c"
 13537 ;; Parameters:    Size  Location     Type
 13538 ;;  tcbPtr          2   63[BANK0 ] PTR struct .
 13539 ;;		 -> ?_sprintf(2), ?_printf(2), main@str(32), STR_8(13), 
 13540 ;;		 -> STR_7(17), STR_6(7), STR_5(10), TCP_Server@port7TCB(55), 
 13541 ;;		 -> Network_Read@debug_str(80), STR_1(15), NULL(0), 
 13542 ;; Auto vars:     Size  Location     Type
 13543 ;;  txHeader       20  122[BANK0 ] struct .
 13544 ;;  tcpDataLengt    2  120[BANK0 ] unsigned int 
 13545 ;;  payloadLengt    2  117[BANK0 ] unsigned int 
 13546 ;;  cksm            2  115[BANK0 ] unsigned int 
 13547 ;;  data            2  113[BANK0 ] PTR unsigned char 
 13548 ;;		 -> ?_sprintf(2), ?_printf(2), main@str(32), STR_8(13), 
 13549 ;;		 -> STR_7(17), TCP_Server@txdataPort7(20), STR_6(7), STR_5(10), 
 13550 ;;		 -> Network_Read@debug_str(80), STR_1(15), NULL(0), 
 13551 ;;  ret             1  119[BANK0 ] unsigned char 
 13552 ;; Return value:  Size  Location     Type
 13553 ;;                  1    wreg      unsigned char 
 13554 ;; Registers used:
 13555 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13556 ;; Tracked objects:
 13557 ;;		On entry : 0/0
 13558 ;;		On exit  : F/0
 13559 ;;		Unchanged: 0/0
 13560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13561 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13562 ;;      Locals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13563 ;;      Temps:          0      48       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13564 ;;      Totals:         0      79       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13565 ;;Total ram usage:       79 bytes
 13566 ;; Hardware stack levels used:    1
 13567 ;; Hardware stack levels required when called:   12
 13568 ;; This function calls:
 13569 ;;		_ETH_Insert
 13570 ;;		_ETH_TxComputeChecksum
 13571 ;;		_ETH_WriteBlock
 13572 ;;		_IPV4_Send
 13573 ;;		_IPv4_Start
 13574 ;; This function is called by:
 13575 ;;		_TCP_PayloadSave
 13576 ;;		_TCP_FiniteStateMachine
 13577 ;;		_TCP_Send
 13578 ;; This function uses a non-reentrant model
 13579 ;;
 13580                           
 13581                           	psect	text45
 13582  002558                     __ptext45:
 13583                           	opt stack 0
 13584  002558                     _TCP_Snd:
 13585                           	opt stack 0
 13586                           
 13587                           ;tcpv4.c: 203: tcpHeader_t txHeader;
 13588                           ;tcpv4.c: 204: uint16_t payloadLength;
 13589                           ;tcpv4.c: 205: uint16_t cksm;
 13590                           ;tcpv4.c: 206: uint16_t tcpDataLength;
 13591                           ;tcpv4.c: 207: uint8_t *data;
 13592                           ;tcpv4.c: 209: txHeader.sourcePort = ((((uint16_t)tcbPtr->localPort & (uint16_t)0xFF00) 
      +                          >> 8) | (((uint16_t)tcbPtr->localPort & (uint16_t)0x00FF) << 8));
 13593                           
 13594                           ;incstack = 0
 13595  002558  DB4F               	call	PL617	;call to abstracted procedure
 13596  00255A  64F7               	cpfsgt	tblptrh,c
 13597  00255C  D007               	bra	u11217
 13598  00255E  0009               	tblrd		*+
 13599  002560  CFF5 F0A1          	movff	tablat,??_TCP_Snd
 13600  002564  0009               	tblrd		*+
 13601  002566  CFF5 F0A2          	movff	tablat,??_TCP_Snd+1
 13602  00256A  D006               	bra	u11210
 13603  00256C                     u11217:
 13604  00256C  EC73  F011         	call	PL389	;call to abstracted procedure
 13605  002570  CFEE F0A1          	movff	postinc0,??_TCP_Snd
 13606  002574  CFEE F0A2          	movff	postinc0,??_TCP_Snd+1
 13607  002578                     u11210:
 13608  002578  0100               	movlb	0	; () banked
 13609  00257A  51A1               	movf	??_TCP_Snd& (0+255),w,b
 13610  00257C  6FA4               	movwf	(??_TCP_Snd+3)& (0+255),b
 13611  00257E  6BA3               	clrf	(??_TCP_Snd+2)& (0+255),b
 13612  002580  DB3B               	call	PL617	;call to abstracted procedure
 13613  002582  64F7               	cpfsgt	tblptrh,c
 13614  002584  D002               	bra	u11227
 13615  002586  DA8C               	call	PL525	;call to abstracted procedure
 13616  002588  D003               	bra	u11220
 13617  00258A                     u11227:
 13618  00258A  EC73  F011         	call	PL389	;call to abstracted procedure
 13619  00258E  DB3C               	call	PL623	;call to abstracted procedure
 13620  002590                     u11220:
 13621  002590  C0A6  F0A5         	movff	??_TCP_Snd+5,??_TCP_Snd+4
 13622  002594  0100               	movlb	0	; () banked
 13623  002596  6BA6               	clrf	(??_TCP_Snd+5)& (0+255),b
 13624  002598  6BA6               	clrf	(??_TCP_Snd+5)& (0+255),b
 13625  00259A  51A3               	movf	(??_TCP_Snd+2)& (0+255),w,b
 13626  00259C  11A5               	iorwf	(??_TCP_Snd+4)& (0+255),w,b
 13627  00259E  6FDA               	movwf	TCP_Snd@txHeader& (0+255),b
 13628  0025A0  51A4               	movf	(??_TCP_Snd+3)& (0+255),w,b
 13629  0025A2  11A6               	iorwf	(??_TCP_Snd+5)& (0+255),w,b
 13630  0025A4  6FDB               	movwf	(TCP_Snd@txHeader+1)& (0+255),b
 13631                           
 13632                           ;tcpv4.c: 210: txHeader.destPort = ((((uint16_t)tcbPtr->destPort & (uint16_t)0xFF00) >> 
      +                          8) | (((uint16_t)tcbPtr->destPort & (uint16_t)0x00FF) << 8));
 13633  0025A6  0E06               	movlw	6
 13634  0025A8  DA2B               	call	PL391	;call to abstracted procedure
 13635  0025AA  64F7               	cpfsgt	tblptrh,c
 13636  0025AC  D002               	bra	u11237
 13637  0025AE  DA5F               	call	PL445	;call to abstracted procedure
 13638  0025B0  D003               	bra	u11230
 13639  0025B2                     u11237:
 13640  0025B2  EC73  F011         	call	PL389	;call to abstracted procedure
 13641  0025B6  DA6F               	call	PL499	;call to abstracted procedure
 13642  0025B8                     u11230:
 13643  0025B8  DB4D               	call	PL693	;call to abstracted procedure
 13644  0025BA  0E06               	movlw	6
 13645  0025BC  DAA1               	call	PL553	;call to abstracted procedure
 13646  0025BE  64F7               	cpfsgt	tblptrh,c
 13647  0025C0  D002               	bra	u11247
 13648  0025C2  DB36               	call	PL645	;call to abstracted procedure
 13649  0025C4  D003               	bra	u11240
 13650  0025C6                     u11247:
 13651  0025C6  EC73  F011         	call	PL389	;call to abstracted procedure
 13652  0025CA  DB49               	call	PL699	;call to abstracted procedure
 13653  0025CC                     u11240:
 13654  0025CC  DB22               	call	PL625	;call to abstracted procedure
 13655  0025CE  6FDC               	movwf	(TCP_Snd@txHeader+2)& (0+255),b
 13656  0025D0  51A6               	movf	(??_TCP_Snd+5)& (0+255),w,b
 13657  0025D2  11AA               	iorwf	(??_TCP_Snd+9)& (0+255),w,b
 13658  0025D4  6FDD               	movwf	(TCP_Snd@txHeader+3)& (0+255),b
 13659                           
 13660                           ;tcpv4.c: 212: txHeader.sequenceNumber = ((((uint32_t)tcbPtr->localSeqno&(uint32_t)0xff0
      +                          00000) >> 24) | (((uint32_t)tcbPtr->localSeqno&(uint32_t)0x00ff0000) >> 8) | (((uint32_t
      +                          )tcbPtr->localSeqno&(uint32_t)0x0000ff00) << 8) | (((uint32_t)tcbPtr->localSeqno&(uint32
      +                          _
 13661  0025D6  0E10               	movlw	16
 13662  0025D8  DA13               	call	PL391	;call to abstracted procedure
 13663  0025DA  64F7               	cpfsgt	tblptrh,c
 13664  0025DC  D003               	bra	u11257
 13665  0025DE  DA47               	call	PL445	;call to abstracted procedure
 13666  0025E0  DA5F               	call	PL525	;call to abstracted procedure
 13667  0025E2  D004               	bra	u11250
 13668  0025E4                     u11257:
 13669  0025E4  EC73  F011         	call	PL389	;call to abstracted procedure
 13670  0025E8  DA56               	call	PL499	;call to abstracted procedure
 13671  0025EA  DB0E               	call	PL623	;call to abstracted procedure
 13672  0025EC                     u11250:
 13673  0025EC  DAD7               	call	PL577	;call to abstracted procedure
 13674  0025EE  0E10               	movlw	16
 13675  0025F0  DA45               	call	PL483	;call to abstracted procedure
 13676  0025F2  64F7               	cpfsgt	tblptrh,c
 13677  0025F4  D002               	bra	u11267
 13678  0025F6  DA9E               	call	PL557	;call to abstracted procedure
 13679  0025F8  D003               	bra	u11260
 13680  0025FA                     u11267:
 13681  0025FA  EC73  F011         	call	PL389	;call to abstracted procedure
 13682  0025FE  DAE1               	call	PL609	;call to abstracted procedure
 13683  002600                     u11260:
 13684  002600  DA56               	call	PL529	;call to abstracted procedure
 13685  002602  0E10               	movlw	16
 13686  002604  DA8A               	call	PL555	;call to abstracted procedure
 13687  002606  64F7               	cpfsgt	tblptrh,c
 13688  002608  D002               	bra	u11277
 13689  00260A  DAA1               	call	PL559	;call to abstracted procedure
 13690  00260C  D003               	bra	u11270
 13691  00260E                     u11277:
 13692  00260E  EC73  F011         	call	PL389	;call to abstracted procedure
 13693  002612  DAE0               	call	PL611	;call to abstracted procedure
 13694  002614                     u11270:
 13695  002614  DA5A               	call	PL537	;call to abstracted procedure
 13696  002616  0E10               	movlw	16
 13697  002618  DAB4               	call	PL563	;call to abstracted procedure
 13698  00261A  64F7               	cpfsgt	tblptrh,c
 13699  00261C  D002               	bra	u11287
 13700  00261E  DAA4               	call	PL561	;call to abstracted procedure
 13701  002620  D003               	bra	u11280
 13702  002622                     u11287:
 13703  002622  EC73  F011         	call	PL389	;call to abstracted procedure
 13704  002626  DADF               	call	PL613	;call to abstracted procedure
 13705  002628                     u11280:
 13706  002628  D9F8               	call	PL437	;call to abstracted procedure
 13707  00262A  6FDE               	movwf	(TCP_Snd@txHeader+4)& (0+255),b
 13708  00262C  51A8               	movf	(??_TCP_Snd+7)& (0+255),w,b
 13709  00262E  11CE               	iorwf	(??_TCP_Snd+45)& (0+255),w,b
 13710  002630  6FDF               	movwf	(TCP_Snd@txHeader+5)& (0+255),b
 13711  002632  51A9               	movf	(??_TCP_Snd+8)& (0+255),w,b
 13712  002634  11CF               	iorwf	(??_TCP_Snd+46)& (0+255),w,b
 13713  002636  6FE0               	movwf	(TCP_Snd@txHeader+6)& (0+255),b
 13714  002638  51AA               	movf	(??_TCP_Snd+9)& (0+255),w,b
 13715  00263A  11D0               	iorwf	(??_TCP_Snd+47)& (0+255),w,b
 13716  00263C  6FE1               	movwf	(TCP_Snd@txHeader+7)& (0+255),b
 13717                           
 13718                           ;tcpv4.c: 214: txHeader.ackNumber = ((((uint32_t)tcbPtr->remoteAck&(uint32_t)0xff000000)
      +                           >> 24) | (((uint32_t)tcbPtr->remoteAck&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)tcbPtr
      +                          ->remoteAck&(uint32_t)0x0000ff00) << 8) | (((uint32_t)tcbPtr->remoteAck&(uint32_t)0x0000
      +                          0
 13719  00263E  0E0C               	movlw	12
 13720  002640  D9DF               	call	PL391	;call to abstracted procedure
 13721  002642  64F7               	cpfsgt	tblptrh,c
 13722  002644  D003               	bra	u11307
 13723  002646  DA13               	call	PL445	;call to abstracted procedure
 13724  002648  DA2B               	call	PL525	;call to abstracted procedure
 13725  00264A  D004               	bra	u11300
 13726  00264C                     u11307:
 13727  00264C  EC73  F011         	call	PL389	;call to abstracted procedure
 13728  002650  DA22               	call	PL499	;call to abstracted procedure
 13729  002652  DADA               	call	PL623	;call to abstracted procedure
 13730  002654                     u11300:
 13731  002654  DAA3               	call	PL577	;call to abstracted procedure
 13732  002656  0E0C               	movlw	12
 13733  002658  DA11               	call	PL483	;call to abstracted procedure
 13734  00265A  64F7               	cpfsgt	tblptrh,c
 13735  00265C  D002               	bra	u11317
 13736  00265E  DA6A               	call	PL557	;call to abstracted procedure
 13737  002660  D003               	bra	u11310
 13738  002662                     u11317:
 13739  002662  EC73  F011         	call	PL389	;call to abstracted procedure
 13740  002666  DAAD               	call	PL609	;call to abstracted procedure
 13741  002668                     u11310:
 13742  002668  DA22               	call	PL529	;call to abstracted procedure
 13743  00266A  0E0C               	movlw	12
 13744  00266C  DA56               	call	PL555	;call to abstracted procedure
 13745  00266E  64F7               	cpfsgt	tblptrh,c
 13746  002670  D002               	bra	u11327
 13747  002672  DA6D               	call	PL559	;call to abstracted procedure
 13748  002674  D003               	bra	u11320
 13749  002676                     u11327:
 13750  002676  EC73  F011         	call	PL389	;call to abstracted procedure
 13751  00267A  DAAC               	call	PL611	;call to abstracted procedure
 13752  00267C                     u11320:
 13753  00267C  DA26               	call	PL537	;call to abstracted procedure
 13754  00267E  0E0C               	movlw	12
 13755  002680  DA80               	call	PL563	;call to abstracted procedure
 13756  002682  64F7               	cpfsgt	tblptrh,c
 13757  002684  D002               	bra	u11337
 13758  002686  DA70               	call	PL561	;call to abstracted procedure
 13759  002688  D003               	bra	u11330
 13760  00268A                     u11337:
 13761  00268A  EC73  F011         	call	PL389	;call to abstracted procedure
 13762  00268E  DAAB               	call	PL613	;call to abstracted procedure
 13763  002690                     u11330:
 13764  002690  D9C4               	call	PL437	;call to abstracted procedure
 13765  002692  6FE2               	movwf	(TCP_Snd@txHeader+8)& (0+255),b
 13766  002694  51A8               	movf	(??_TCP_Snd+7)& (0+255),w,b
 13767  002696  11CE               	iorwf	(??_TCP_Snd+45)& (0+255),w,b
 13768  002698  6FE3               	movwf	(TCP_Snd@txHeader+9)& (0+255),b
 13769  00269A  51A9               	movf	(??_TCP_Snd+8)& (0+255),w,b
 13770  00269C  11CF               	iorwf	(??_TCP_Snd+46)& (0+255),w,b
 13771  00269E  6FE4               	movwf	(TCP_Snd@txHeader+10)& (0+255),b
 13772  0026A0  51AA               	movf	(??_TCP_Snd+9)& (0+255),w,b
 13773  0026A2  11D0               	iorwf	(??_TCP_Snd+47)& (0+255),w,b
 13774  0026A4  6FE5               	movwf	(TCP_Snd@txHeader+11)& (0+255),b
 13775                           
 13776                           ; BSR set to: 0
 13777                           ;tcpv4.c: 216: txHeader.ns = 0;
 13778  0026A6  91E6               	bcf	(TCP_Snd@txHeader+12)& (0+255),0,b
 13779                           
 13780                           ; BSR set to: 0
 13781                           ;tcpv4.c: 217: txHeader.reserved = 0;
 13782  0026A8  0EF1               	movlw	-15
 13783  0026AA  17E6               	andwf	(TCP_Snd@txHeader+12)& (0+255),f,b
 13784                           
 13785                           ; BSR set to: 0
 13786                           ;tcpv4.c: 218: txHeader.dataOffset = 5;
 13787  0026AC  51E6               	movf	(TCP_Snd@txHeader+12)& (0+255),w,b
 13788  0026AE  0B0F               	andlw	-241
 13789  0026B0  0950               	iorlw	80
 13790  0026B2  6FE6               	movwf	(TCP_Snd@txHeader+12)& (0+255),b
 13791                           
 13792                           ;tcpv4.c: 219: txHeader.windowSize = ((((uint16_t)tcbPtr->localWnd & (uint16_t)0xFF00) >
      +                          > 8) | (((uint16_t)tcbPtr->localWnd & (uint16_t)0x00FF) << 8));
 13793  0026B4  0E1A               	movlw	26
 13794  0026B6  D9A4               	call	PL391	;call to abstracted procedure
 13795  0026B8  64F7               	cpfsgt	tblptrh,c
 13796  0026BA  D002               	bra	u11357
 13797  0026BC  D9D8               	call	PL445	;call to abstracted procedure
 13798  0026BE  D003               	bra	u11350
 13799  0026C0                     u11357:
 13800  0026C0  EC73  F011         	call	PL389	;call to abstracted procedure
 13801  0026C4  D9E8               	call	PL499	;call to abstracted procedure
 13802  0026C6                     u11350:
 13803  0026C6  DAC6               	call	PL693	;call to abstracted procedure
 13804  0026C8  0E1A               	movlw	26
 13805  0026CA  DA1A               	call	PL553	;call to abstracted procedure
 13806  0026CC  64F7               	cpfsgt	tblptrh,c
 13807  0026CE  D002               	bra	u11367
 13808  0026D0  DAAF               	call	PL645	;call to abstracted procedure
 13809  0026D2  D003               	bra	u11360
 13810  0026D4                     u11367:
 13811  0026D4  EC73  F011         	call	PL389	;call to abstracted procedure
 13812  0026D8  DAC2               	call	PL699	;call to abstracted procedure
 13813  0026DA                     u11360:
 13814  0026DA  DA9B               	call	PL625	;call to abstracted procedure
 13815  0026DC  6FE8               	movwf	(TCP_Snd@txHeader+14)& (0+255),b
 13816  0026DE  51A6               	movf	(??_TCP_Snd+5)& (0+255),w,b
 13817  0026E0  11AA               	iorwf	(??_TCP_Snd+9)& (0+255),w,b
 13818  0026E2  6FE9               	movwf	(TCP_Snd@txHeader+15)& (0+255),b
 13819                           
 13820                           ; BSR set to: 0
 13821                           ;tcpv4.c: 220: txHeader.checksum = 0;
 13822  0026E4  6BEA               	clrf	(TCP_Snd@txHeader+16)& (0+255),b
 13823  0026E6  6BEB               	clrf	(TCP_Snd@txHeader+17)& (0+255),b
 13824                           
 13825                           ; BSR set to: 0
 13826                           ;tcpv4.c: 221: txHeader.urgentPtr = 0;
 13827  0026E8  6BEC               	clrf	(TCP_Snd@txHeader+18)& (0+255),b
 13828  0026EA  6BED               	clrf	(TCP_Snd@txHeader+19)& (0+255),b
 13829                           
 13830                           ;tcpv4.c: 223: if ((tcbPtr->flags) & (0x02U | 0x04U))
 13831  0026EC  0E35               	movlw	53
 13832  0026EE  D988               	call	PL391	;call to abstracted procedure
 13833  0026F0  64F7               	cpfsgt	tblptrh,c
 13834  0026F2  D003               	bra	u11377
 13835  0026F4  0008               	tblrd		*
 13836  0026F6  50F5               	movf	tablat,w,c
 13837  0026F8  D003               	bra	u11370
 13838  0026FA                     u11377:
 13839  0026FA  EC73  F011         	call	PL389	;call to abstracted procedure
 13840  0026FE  50EF               	movf	indf0,w,c
 13841  002700                     u11370:
 13842  002700  0100               	movlb	0	; () banked
 13843  002702  6FA3               	movwf	(??_TCP_Snd+2)& (0+255),b
 13844  002704  0E06               	movlw	6
 13845  002706  17A3               	andwf	(??_TCP_Snd+2)& (0+255),f,b
 13846  002708  E003               	bz	l8126
 13847                           
 13848                           ; BSR set to: 0
 13849                           ;tcpv4.c: 224: {
 13850                           ;tcpv4.c: 225: tcpDataLength = 0;
 13851  00270A  6BD8               	clrf	TCP_Snd@tcpDataLength& (0+255),b
 13852  00270C  6BD9               	clrf	(TCP_Snd@tcpDataLength+1)& (0+255),b
 13853                           
 13854                           ;tcpv4.c: 226: } else
 13855  00270E  D094               	goto	l1113
 13856  002710                     l8126:
 13857                           
 13858                           ; BSR set to: 0
 13859                           ;tcpv4.c: 227: {
 13860                           ;tcpv4.c: 228: tcpDataLength = tcbPtr->bytesToSend;
 13861  002710  0E27               	movlw	39
 13862  002712  D976               	call	PL391	;call to abstracted procedure
 13863  002714  64F7               	cpfsgt	tblptrh,c
 13864  002716  D002               	bra	u11397
 13865  002718  DA4D               	call	PL591	;call to abstracted procedure
 13866  00271A  D003               	bra	u11390
 13867  00271C                     u11397:
 13868  00271C  EC73  F011         	call	PL389	;call to abstracted procedure
 13869  002720  DA8E               	call	PL657	;call to abstracted procedure
 13870  002722                     u11390:
 13871                           
 13872                           ;tcpv4.c: 230: if (tcpDataLength != 0)
 13873  002722  0100               	movlb	0	; () banked
 13874  002724  51D8               	movf	TCP_Snd@tcpDataLength& (0+255),w,b
 13875  002726  11D9               	iorwf	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 13876  002728  E101 D086          	bz	l1113
 13877                           
 13878                           ; BSR set to: 0
 13879                           ;tcpv4.c: 231: {
 13880                           ;tcpv4.c: 232: if(tcpDataLength > tcbPtr->remoteWnd)
 13881  00272C  0E18               	movlw	24
 13882  00272E  D968               	call	PL391	;call to abstracted procedure
 13883  002730  64F7               	cpfsgt	tblptrh,c
 13884  002732  D002               	bra	u11417
 13885  002734  D99C               	call	PL445	;call to abstracted procedure
 13886  002736  D003               	bra	u11410
 13887  002738                     u11417:
 13888  002738  EC73  F011         	call	PL389	;call to abstracted procedure
 13889  00273C  D9AC               	call	PL499	;call to abstracted procedure
 13890  00273E                     u11410:
 13891  00273E  DA84               	call	PL667	;call to abstracted procedure
 13892  002740  E209               	bc	l1115
 13893                           
 13894                           ; BSR set to: 0
 13895                           ;tcpv4.c: 233: {
 13896                           ;tcpv4.c: 234: tcpDataLength = tcbPtr->remoteWnd;
 13897  002742  0E18               	movlw	24
 13898  002744  D95D               	call	PL391	;call to abstracted procedure
 13899  002746  64F7               	cpfsgt	tblptrh,c
 13900  002748  D002               	bra	u11437
 13901  00274A  DA34               	call	PL591	;call to abstracted procedure
 13902  00274C  D003               	bra	u11430
 13903  00274E                     u11437:
 13904  00274E  EC73  F011         	call	PL389	;call to abstracted procedure
 13905  002752  DA75               	call	PL657	;call to abstracted procedure
 13906  002754                     u11430:
 13907  002754                     l1115:
 13908                           
 13909                           ;tcpv4.c: 235: }
 13910                           ;tcpv4.c: 237: if(tcpDataLength > tcbPtr->mss)
 13911  002754  0E1C               	movlw	28
 13912  002756  0100               	movlb	0	; () banked
 13913  002758  D953               	call	PL391	;call to abstracted procedure
 13914  00275A  64F7               	cpfsgt	tblptrh,c
 13915  00275C  D002               	bra	u11447
 13916  00275E  D987               	call	PL445	;call to abstracted procedure
 13917  002760  D003               	bra	u11440
 13918  002762                     u11447:
 13919  002762  EC73  F011         	call	PL389	;call to abstracted procedure
 13920  002766  D997               	call	PL499	;call to abstracted procedure
 13921  002768                     u11440:
 13922  002768  DA6F               	call	PL667	;call to abstracted procedure
 13923  00276A  E209               	bc	l1116
 13924                           
 13925                           ; BSR set to: 0
 13926                           ;tcpv4.c: 238: {
 13927                           ;tcpv4.c: 239: tcpDataLength = tcbPtr->mss;
 13928  00276C  0E1C               	movlw	28
 13929  00276E  D948               	call	PL391	;call to abstracted procedure
 13930  002770  64F7               	cpfsgt	tblptrh,c
 13931  002772  D002               	bra	u11467
 13932  002774  DA1F               	call	PL591	;call to abstracted procedure
 13933  002776  D003               	bra	u11460
 13934  002778                     u11467:
 13935  002778  EC73  F011         	call	PL389	;call to abstracted procedure
 13936  00277C  DA60               	call	PL657	;call to abstracted procedure
 13937  00277E                     u11460:
 13938  00277E                     l1116:
 13939                           
 13940                           ;tcpv4.c: 240: }
 13941                           ;tcpv4.c: 241: data = tcbPtr->txBufferPtr;
 13942  00277E  0E25               	movlw	37
 13943  002780  0100               	movlb	0	; () banked
 13944  002782  D93E               	call	PL391	;call to abstracted procedure
 13945  002784  64F7               	cpfsgt	tblptrh,c
 13946  002786  D007               	bra	u11477
 13947  002788  0009               	tblrd		*+
 13948  00278A  CFF5 F0D1          	movff	tablat,TCP_Snd@data
 13949  00278E  0009               	tblrd		*+
 13950  002790  CFF5 F0D2          	movff	tablat,TCP_Snd@data+1
 13951  002794  D006               	bra	u11470
 13952  002796                     u11477:
 13953  002796  EC73  F011         	call	PL389	;call to abstracted procedure
 13954  00279A  CFEE F0D1          	movff	postinc0,TCP_Snd@data
 13955  00279E  CFEE F0D2          	movff	postinc0,TCP_Snd@data+1
 13956  0027A2                     u11470:
 13957                           
 13958                           ;tcpv4.c: 244: tcbPtr->txBufferPtr = tcbPtr->txBufferPtr + tcpDataLength;
 13959  0027A2  0E25               	movlw	37
 13960  0027A4  0100               	movlb	0	; () banked
 13961  0027A6  D92C               	call	PL391	;call to abstracted procedure
 13962  0027A8  64F7               	cpfsgt	tblptrh,c
 13963  0027AA  D002               	bra	u11487
 13964  0027AC  D960               	call	PL445	;call to abstracted procedure
 13965  0027AE  D003               	bra	u11480
 13966  0027B0                     u11487:
 13967  0027B0  EC73  F011         	call	PL389	;call to abstracted procedure
 13968  0027B4  D970               	call	PL499	;call to abstracted procedure
 13969  0027B6                     u11480:
 13970  0027B6  0100               	movlb	0	; () banked
 13971  0027B8  51D8               	movf	TCP_Snd@tcpDataLength& (0+255),w,b
 13972  0027BA  27A3               	addwf	(??_TCP_Snd+2)& (0+255),f,b
 13973  0027BC  51D9               	movf	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 13974  0027BE  23A4               	addwfc	(??_TCP_Snd+3)& (0+255),f,b
 13975  0027C0  0E25               	movlw	37
 13976  0027C2  D991               	call	PL549	;call to abstracted procedure
 13977  0027C4  64F7               	cpfsgt	tblptrh,c
 13978  0027C6  D002               	bra	u11497
 13979  0027C8  DA2C               	call	PL641	;call to abstracted procedure
 13980  0027CA  D003               	bra	u11490
 13981  0027CC                     u11497:
 13982  0027CC  EC73  F011         	call	PL389	;call to abstracted procedure
 13983  0027D0  DA4F               	call	PL723	;call to abstracted procedure
 13984  0027D2                     u11490:
 13985                           
 13986                           ;tcpv4.c: 245: tcbPtr->bytesToSend = tcbPtr->bytesToSend - tcpDataLength;
 13987  0027D2  0E27               	movlw	39
 13988  0027D4  0100               	movlb	0	; () banked
 13989  0027D6  D914               	call	PL391	;call to abstracted procedure
 13990  0027D8  64F7               	cpfsgt	tblptrh,c
 13991  0027DA  D002               	bra	u11507
 13992  0027DC  D948               	call	PL445	;call to abstracted procedure
 13993  0027DE  D003               	bra	u11500
 13994  0027E0                     u11507:
 13995  0027E0  EC73  F011         	call	PL389	;call to abstracted procedure
 13996  0027E4  D958               	call	PL499	;call to abstracted procedure
 13997  0027E6                     u11500:
 13998  0027E6  0100               	movlb	0	; () banked
 13999  0027E8  51D8               	movf	TCP_Snd@tcpDataLength& (0+255),w,b
 14000  0027EA  5FA3               	subwf	(??_TCP_Snd+2)& (0+255),f,b
 14001  0027EC  51D9               	movf	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 14002  0027EE  5BA4               	subwfb	(??_TCP_Snd+3)& (0+255),f,b
 14003  0027F0  0E27               	movlw	39
 14004  0027F2  D979               	call	PL549	;call to abstracted procedure
 14005  0027F4  64F7               	cpfsgt	tblptrh,c
 14006  0027F6  D002               	bra	u11517
 14007  0027F8  DA14               	call	PL641	;call to abstracted procedure
 14008  0027FA  D003               	bra	u11510
 14009  0027FC                     u11517:
 14010  0027FC  EC73  F011         	call	PL389	;call to abstracted procedure
 14011  002800  DA37               	call	PL723	;call to abstracted procedure
 14012  002802                     u11510:
 14013                           
 14014                           ;tcpv4.c: 247: if (tcbPtr->bytesToSend == 0)
 14015  002802  0E27               	movlw	39
 14016  002804  0100               	movlb	0	; () banked
 14017  002806  D8FC               	call	PL391	;call to abstracted procedure
 14018  002808  64F7               	cpfsgt	tblptrh,c
 14019  00280A  D002               	bra	u11527
 14020  00280C  D930               	call	PL445	;call to abstracted procedure
 14021  00280E  D003               	bra	u11520
 14022  002810                     u11527:
 14023  002810  EC73  F011         	call	PL389	;call to abstracted procedure
 14024  002814  D940               	call	PL499	;call to abstracted procedure
 14025  002816                     u11520:
 14026  002816  0100               	movlb	0	; () banked
 14027  002818  51A3               	movf	(??_TCP_Snd+2)& (0+255),w,b
 14028  00281A  11A4               	iorwf	(??_TCP_Snd+3)& (0+255),w,b
 14029  00281C  E10D               	bnz	l1113
 14030                           
 14031                           ; BSR set to: 0
 14032                           ;tcpv4.c: 248: {
 14033                           ;tcpv4.c: 249: tcbPtr->flags |= 0x08U;
 14034  00281E  0E35               	movlw	53
 14035  002820  D8EF               	call	PL391	;call to abstracted procedure
 14036  002822  64F7               	cpfsgt	tblptrh,c
 14037  002824  D005               	bra	u11547
 14038  002826  0E08               	movlw	8
 14039  002828  0008               	tblrd		*
 14040  00282A  12F5               	iorwf	tablat,f,c
 14041  00282C  000C               	tblwt		*
 14042  00282E  D004               	bra	u11540
 14043  002830                     u11547:
 14044  002830  EC73  F011         	call	PL389	;call to abstracted procedure
 14045  002834  0E08               	movlw	8
 14046  002836  12EF               	iorwf	indf0,f,c
 14047  002838                     u11540:
 14048  002838                     l1113:
 14049                           
 14050                           ;tcpv4.c: 250: }
 14051                           ;tcpv4.c: 251: }
 14052                           ;tcpv4.c: 252: }
 14053                           ;tcpv4.c: 254: txHeader.flags = tcbPtr->flags;
 14054  002838  0E35               	movlw	53
 14055  00283A  0100               	movlb	0	; () banked
 14056  00283C  D8E1               	call	PL391	;call to abstracted procedure
 14057  00283E  64F7               	cpfsgt	tblptrh,c
 14058  002840  D003               	bra	u11557
 14059  002842  0008               	tblrd		*
 14060  002844  50F5               	movf	tablat,w,c
 14061  002846  D003               	bra	u11550
 14062  002848                     u11557:
 14063  002848  EC73  F011         	call	PL389	;call to abstracted procedure
 14064  00284C  50EF               	movf	indf0,w,c
 14065  00284E                     u11550:
 14066  00284E  0100               	movlb	0	; () banked
 14067  002850  6FE7               	movwf	(TCP_Snd@txHeader+13)& (0+255),b
 14068                           
 14069                           ; BSR set to: 0
 14070                           ;tcpv4.c: 255: payloadLength = sizeof(tcpHeader_t) + tcpDataLength;
 14071  002852  0E14               	movlw	20
 14072  002854  25D8               	addwf	TCP_Snd@tcpDataLength& (0+255),w,b
 14073  002856  6FD5               	movwf	TCP_Snd@payloadLength& (0+255),b
 14074  002858  0E00               	movlw	0
 14075  00285A  21D9               	addwfc	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 14076  00285C  6FD6               	movwf	(TCP_Snd@payloadLength+1)& (0+255),b
 14077                           
 14078                           ; BSR set to: 0
 14079                           ;tcpv4.c: 257: ret = IPv4_Start(tcbPtr->destIP, TCP);
 14080  00285E  0E02               	movlw	2
 14081  002860  D8CF               	call	PL391	;call to abstracted procedure
 14082  002862  64F7               	cpfsgt	tblptrh,c
 14083  002864  D00D               	bra	u11567
 14084  002866  0009               	tblrd		*+
 14085  002868  CFF5 F022          	movff	tablat,IPv4_Start@destAddress
 14086  00286C  0009               	tblrd		*+
 14087  00286E  CFF5 F023          	movff	tablat,IPv4_Start@destAddress+1
 14088  002872  0009               	tblrd		*+
 14089  002874  CFF5 F024          	movff	tablat,IPv4_Start@destAddress+2
 14090  002878  0009               	tblrd		*+
 14091  00287A  CFF5 F025          	movff	tablat,IPv4_Start@destAddress+3
 14092  00287E  D00A               	bra	u11560
 14093  002880                     u11567:
 14094  002880  EC73  F011         	call	PL389	;call to abstracted procedure
 14095  002884  CFEE F022          	movff	postinc0,IPv4_Start@destAddress
 14096  002888  CFEE F023          	movff	postinc0,IPv4_Start@destAddress+1
 14097  00288C  CFEE F024          	movff	postinc0,IPv4_Start@destAddress+2
 14098  002890  CFEE F025          	movff	postinc0,IPv4_Start@destAddress+3
 14099  002894                     u11560:
 14100  002894  0E06               	movlw	6
 14101  002896  6E26               	movwf	IPv4_Start@protocol,c
 14102  002898  EC0D  F022         	call	_IPv4_Start	;wreg free
 14103  00289C  6FD7               	movwf	TCP_Snd@ret& (0+255),b
 14104                           
 14105                           ; BSR set to: 0
 14106                           ;tcpv4.c: 258: if (ret)
 14107  00289E  51D7               	movf	TCP_Snd@ret& (0+255),w,b
 14108  0028A0  E039               	bz	l8158
 14109                           
 14110                           ; BSR set to: 0
 14111                           ;tcpv4.c: 259: {
 14112                           ;tcpv4.c: 260: ETH_WriteBlock((uint8_t *) &txHeader, sizeof(tcpHeader_t));
 14113  0028A2  0EDA               	movlw	low TCP_Snd@txHeader
 14114  0028A4  6E17               	movwf	ETH_WriteBlock@buffer,c
 14115  0028A6  6A18               	clrf	ETH_WriteBlock@buffer+1,c
 14116  0028A8  D9E8               	call	PL751	;call to abstracted procedure
 14117  0028AA  EC85  F02E         	call	_ETH_WriteBlock	;wreg free
 14118                           
 14119                           ;tcpv4.c: 262: if (tcpDataLength > 0)
 14120  0028AE  0100               	movlb	0	; () banked
 14121  0028B0  51D8               	movf	TCP_Snd@tcpDataLength& (0+255),w,b
 14122  0028B2  11D9               	iorwf	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 14123  0028B4  E00A               	bz	l8150
 14124                           
 14125                           ; BSR set to: 0
 14126                           ;tcpv4.c: 263: {
 14127                           ;tcpv4.c: 264: ETH_WriteBlock( data, tcpDataLength);
 14128  0028B6  C0D1  F017         	movff	TCP_Snd@data,ETH_WriteBlock@buffer
 14129  0028BA  C0D2  F018         	movff	TCP_Snd@data+1,ETH_WriteBlock@buffer+1
 14130  0028BE  C0D8  F019         	movff	TCP_Snd@tcpDataLength,ETH_WriteBlock@length
 14131  0028C2  C0D9  F01A         	movff	TCP_Snd@tcpDataLength+1,ETH_WriteBlock@length+1
 14132  0028C6  EC85  F02E         	call	_ETH_WriteBlock	;wreg free
 14133  0028CA                     l8150:
 14134                           
 14135                           ;tcpv4.c: 265: }
 14136                           ;tcpv4.c: 267: cksm = payloadLength + TCP;
 14137  0028CA  0E06               	movlw	6
 14138  0028CC  0100               	movlb	0	; () banked
 14139  0028CE  25D5               	addwf	TCP_Snd@payloadLength& (0+255),w,b
 14140  0028D0  6FD3               	movwf	TCP_Snd@cksm& (0+255),b
 14141  0028D2  0E00               	movlw	0
 14142  0028D4  21D6               	addwfc	(TCP_Snd@payloadLength+1)& (0+255),w,b
 14143  0028D6  6FD4               	movwf	(TCP_Snd@cksm+1)& (0+255),b
 14144                           
 14145                           ; BSR set to: 0
 14146                           ;tcpv4.c: 269: cksm = ETH_TxComputeChecksum(sizeof(ethernetFrame_t) + sizeof(ipv4Header_
      +                          t) - 8, payloadLength + 8, cksm);
 14147  0028D8  D9C7               	call	PL717	;call to abstracted procedure
 14148  0028DA  25D5               	addwf	TCP_Snd@payloadLength& (0+255),w,b
 14149  0028DC  6E27               	movwf	ETH_TxComputeChecksum@len,c
 14150  0028DE  0E00               	movlw	0
 14151  0028E0  21D6               	addwfc	(TCP_Snd@payloadLength+1)& (0+255),w,b
 14152  0028E2  6E28               	movwf	ETH_TxComputeChecksum@len+1,c
 14153  0028E4  C0D3  F029         	movff	TCP_Snd@cksm,ETH_TxComputeChecksum@seed
 14154  0028E8  C0D4  F02A         	movff	TCP_Snd@cksm+1,ETH_TxComputeChecksum@seed+1
 14155  0028EC  EC97  F02A         	call	_ETH_TxComputeChecksum	;wreg free
 14156  0028F0  C025  F0D3         	movff	?_ETH_TxComputeChecksum,TCP_Snd@cksm
 14157  0028F4  C026  F0D4         	movff	?_ETH_TxComputeChecksum+1,TCP_Snd@cksm+1
 14158                           
 14159                           ; BSR set to: 0
 14160                           ;tcpv4.c: 270: ETH_Insert((char *)&cksm, 2, sizeof(ethernetFrame_t) + sizeof(ipv4Header_
      +                          t) + (size_t)(((char*)&((tcpHeader_t *)1)->checksum)-1));
 14161  0028F8  0ED3               	movlw	low TCP_Snd@cksm
 14162  0028FA  EC8C  F02C         	call	PL507	;call to abstracted procedure
 14163  0028FE  0E32               	movlw	50
 14164  002900  6E1A               	movwf	ETH_Insert@offset,c
 14165  002902  ECA1  F02F         	call	_ETH_Insert	;wreg free
 14166                           
 14167                           ;tcpv4.c: 272: ret = IPV4_Send(payloadLength);
 14168  002906  C0D5  F031         	movff	TCP_Snd@payloadLength,IPV4_Send@payloadLength
 14169  00290A  C0D6  F032         	movff	TCP_Snd@payloadLength+1,IPV4_Send@payloadLength+1
 14170  00290E  EC59  F02C         	call	_IPV4_Send	;wreg free
 14171  002912  6FD7               	movwf	TCP_Snd@ret& (0+255),b
 14172  002914                     l8158:
 14173                           
 14174                           ; BSR set to: 0
 14175                           ;tcpv4.c: 273: }
 14176                           ;tcpv4.c: 277: if (ret == 0)
 14177  002914  51D7               	movf	TCP_Snd@ret& (0+255),w,b
 14178  002916  E13E               	bnz	l8164
 14179                           
 14180                           ; BSR set to: 0
 14181                           ;tcpv4.c: 278: {
 14182                           ;tcpv4.c: 281: tcbPtr->timeoutsCount = tcbPtr->timeoutsCount + 1;
 14183  002918  0E34               	movlw	52
 14184  00291A  D872               	call	PL391	;call to abstracted procedure
 14185  00291C  64F7               	cpfsgt	tblptrh,c
 14186  00291E  D003               	bra	u11607
 14187  002920  0008               	tblrd		*
 14188  002922  50F5               	movf	tablat,w,c
 14189  002924  D003               	bra	u11600
 14190  002926                     u11607:
 14191  002926  EC73  F011         	call	PL389	;call to abstracted procedure
 14192  00292A  50EF               	movf	indf0,w,c
 14193  00292C                     u11600:
 14194  00292C  0100               	movlb	0	; () banked
 14195  00292E  6FA3               	movwf	(??_TCP_Snd+2)& (0+255),b
 14196  002930  2BA3               	incf	(??_TCP_Snd+2)& (0+255),f,b
 14197  002932  0E34               	movlw	52
 14198  002934  259F               	addwf	TCP_Snd@tcbPtr& (0+255),w,b
 14199  002936  6FA4               	movwf	(??_TCP_Snd+3)& (0+255),b
 14200  002938  0E00               	movlw	0
 14201  00293A  21A0               	addwfc	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 14202  00293C  6FA5               	movwf	(??_TCP_Snd+4)& (0+255),b
 14203  00293E  C0A4  FFF6         	movff	??_TCP_Snd+3,tblptrl
 14204  002942  C0A5  FFF7         	movff	??_TCP_Snd+4,tblptrh
 14205  002946  0E00               	movlw	low (__smallconst shr (0+16))
 14206  002948  6EF8               	movwf	tblptru,c
 14207  00294A  0E0F               	movlw	(high __ramtop+-1)
 14208  00294C  64F7               	cpfsgt	tblptrh,c
 14209  00294E  D004               	bra	u11617
 14210  002950  C0A3  FFF5         	movff	??_TCP_Snd+2,tablat
 14211  002954  000C               	tblwt		*
 14212  002956  D004               	bra	u11610
 14213  002958                     u11617:
 14214  002958  EC73  F011         	call	PL389	;call to abstracted procedure
 14215  00295C  C0A3  FFEF         	movff	??_TCP_Snd+2,indf0
 14216  002960                     u11610:
 14217                           
 14218                           ;tcpv4.c: 283: if (tcbPtr->timeout == 0)
 14219  002960  0E30               	movlw	48
 14220  002962  0100               	movlb	0	; () banked
 14221  002964  D84D               	call	PL391	;call to abstracted procedure
 14222  002966  64F7               	cpfsgt	tblptrh,c
 14223  002968  D002               	bra	u11627
 14224  00296A  D881               	call	PL445	;call to abstracted procedure
 14225  00296C  D003               	bra	u11620
 14226  00296E                     u11627:
 14227  00296E  EC73  F011         	call	PL389	;call to abstracted procedure
 14228  002972  D891               	call	PL499	;call to abstracted procedure
 14229  002974                     u11620:
 14230  002974  0100               	movlb	0	; () banked
 14231  002976  51A3               	movf	(??_TCP_Snd+2)& (0+255),w,b
 14232  002978  11A4               	iorwf	(??_TCP_Snd+3)& (0+255),w,b
 14233  00297A  E13F               	bnz	l8166
 14234                           
 14235                           ; BSR set to: 0
 14236                           ;tcpv4.c: 284: {
 14237                           ;tcpv4.c: 285: tcbPtr->timeout = ((unsigned long)1*2);
 14238  00297C  0E30               	movlw	48
 14239  00297E  D840               	call	PL391	;call to abstracted procedure
 14240  002980  64F7               	cpfsgt	tblptrh,c
 14241  002982  D003               	bra	u11647
 14242  002984  EC3B  F012         	call	PL459	;call to abstracted procedure
 14243  002988  D004               	bra	u11640
 14244  00298A                     u11647:
 14245  00298A  EC73  F011         	call	PL389	;call to abstracted procedure
 14246  00298E  EC8F  F012         	call	PL615	;call to abstracted procedure
 14247  002992                     u11640:
 14248  002992  D033               	goto	l8166
 14249  002994                     l8164:
 14250                           
 14251                           ; BSR set to: 0
 14252                           ;tcpv4.c: 288: else
 14253                           ;tcpv4.c: 289: {
 14254                           ;tcpv4.c: 291: tcbPtr->localSeqno = tcbPtr->localSeqno + tcpDataLength;
 14255  002994  0E10               	movlw	16
 14256  002996  D834               	call	PL391	;call to abstracted procedure
 14257  002998  64F7               	cpfsgt	tblptrh,c
 14258  00299A  D003               	bra	u11657
 14259  00299C  D868               	call	PL445	;call to abstracted procedure
 14260  00299E  D880               	call	PL525	;call to abstracted procedure
 14261  0029A0  D004               	bra	u11650
 14262  0029A2                     u11657:
 14263  0029A2  EC73  F011         	call	PL389	;call to abstracted procedure
 14264  0029A6  D877               	call	PL499	;call to abstracted procedure
 14265  0029A8  D92F               	call	PL623	;call to abstracted procedure
 14266  0029AA                     u11650:
 14267  0029AA  0100               	movlb	0	; () banked
 14268  0029AC  51D8               	movf	TCP_Snd@tcpDataLength& (0+255),w,b
 14269  0029AE  25A3               	addwf	(??_TCP_Snd+2)& (0+255),w,b
 14270  0029B0  6FA7               	movwf	(??_TCP_Snd+6)& (0+255),b
 14271  0029B2  51D9               	movf	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 14272  0029B4  21A4               	addwfc	(??_TCP_Snd+3)& (0+255),w,b
 14273  0029B6  6FA8               	movwf	(??_TCP_Snd+7)& (0+255),b
 14274  0029B8  0E00               	movlw	0
 14275  0029BA  21A5               	addwfc	(??_TCP_Snd+4)& (0+255),w,b
 14276  0029BC  6FA9               	movwf	(??_TCP_Snd+8)& (0+255),b
 14277  0029BE  0E00               	movlw	0
 14278  0029C0  21A6               	addwfc	(??_TCP_Snd+5)& (0+255),w,b
 14279  0029C2  6FAA               	movwf	(??_TCP_Snd+9)& (0+255),b
 14280  0029C4  0E10               	movlw	16
 14281  0029C6  D85A               	call	PL483	;call to abstracted procedure
 14282  0029C8  64F7               	cpfsgt	tblptrh,c
 14283  0029CA  D00D               	bra	u11667
 14284  0029CC  C0A7  FFF5         	movff	??_TCP_Snd+6,tablat
 14285  0029D0  000D               	tblwt		*+
 14286  0029D2  C0A8  FFF5         	movff	??_TCP_Snd+7,tablat
 14287  0029D6  000D               	tblwt		*+
 14288  0029D8  C0A9  FFF5         	movff	??_TCP_Snd+8,tablat
 14289  0029DC  000D               	tblwt		*+
 14290  0029DE  C0AA  FFF5         	movff	??_TCP_Snd+9,tablat
 14291  0029E2  000C               	tblwt		*
 14292  0029E4  D00A               	bra	u11660
 14293  0029E6                     u11667:
 14294  0029E6  EC73  F011         	call	PL389	;call to abstracted procedure
 14295  0029EA  C0A7  FFEE         	movff	??_TCP_Snd+6,postinc0
 14296  0029EE  C0A8  FFEE         	movff	??_TCP_Snd+7,postinc0
 14297  0029F2  C0A9  FFEE         	movff	??_TCP_Snd+8,postinc0
 14298  0029F6  C0AA  FFEF         	movff	??_TCP_Snd+9,indf0
 14299  0029FA                     u11660:
 14300  0029FA                     l8166:
 14301                           
 14302                           ;tcpv4.c: 293: }
 14303                           ;tcpv4.c: 295: return ret;
 14304  0029FA  0100               	movlb	0	; () banked
 14305  0029FC  51D7               	movf	TCP_Snd@ret& (0+255),w,b
 14306                           
 14307                           ; BSR set to: 0
 14308  0029FE  0012               	return		;funcret
 14309  002A00                     __end_of_TCP_Snd:
 14310                           	opt stack 0
 14311  002A00                     PL391:
 14312                           	opt stack 16
 14313  002A00  259F               	addwf	TCP_Snd@tcbPtr& (0+255),w,b
 14314  002A02  6FA1               	movwf	??_TCP_Snd& (0+255),b
 14315  002A04  0E00               	movlw	0
 14316  002A06  21A0               	addwfc	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 14317  002A08  6FA2               	movwf	(??_TCP_Snd+1)& (0+255),b
 14318  002A0A  C0A1  FFF6         	movff	??_TCP_Snd,tblptrl
 14319  002A0E  C0A2  FFF7         	movff	??_TCP_Snd+1,tblptrh
 14320  002A12  0E00               	movlw	low (__smallconst shr (0+16))
 14321  002A14  6EF8               	movwf	tblptru,c
 14322  002A16  0E0F               	movlw	(high __ramtop+-1)
 14323  002A18  0012               	return	
 14324  002A1A                     __end_ofPL391:
 14325                           	opt stack 0
 14326  002A1A                     PL437:
 14327                           	opt stack 16
 14328  002A1A  0100               	movlb	0	; () banked
 14329  002A1C  6BC5               	clrf	(??_TCP_Snd+36)& (0+255),b
 14330  002A1E  6BC6               	clrf	(??_TCP_Snd+37)& (0+255),b
 14331  002A20  6BC7               	clrf	(??_TCP_Snd+38)& (0+255),b
 14332  002A22  51C4               	movf	(??_TCP_Snd+35)& (0+255),w,b
 14333  002A24  6FC8               	movwf	(??_TCP_Snd+39)& (0+255),b
 14334  002A26  0E19               	movlw	25
 14335  002A28  D005               	goto	u11290
 14336  002A2A                     u11295:
 14337  002A2A  90D8               	bcf	status,0,c
 14338  002A2C  33C8               	rrcf	(??_TCP_Snd+39)& (0+255),f,b
 14339  002A2E  33C7               	rrcf	(??_TCP_Snd+38)& (0+255),f,b
 14340  002A30  33C6               	rrcf	(??_TCP_Snd+37)& (0+255),f,b
 14341  002A32  33C5               	rrcf	(??_TCP_Snd+36)& (0+255),f,b
 14342  002A34                     u11290:
 14343  002A34  2EE8               	decfsz	wreg,f,c
 14344  002A36  D7F9               	goto	u11295
 14345  002A38  51BB               	movf	(??_TCP_Snd+26)& (0+255),w,b
 14346  002A3A  11C5               	iorwf	(??_TCP_Snd+36)& (0+255),w,b
 14347  002A3C  6FC9               	movwf	(??_TCP_Snd+40)& (0+255),b
 14348  002A3E  51BC               	movf	(??_TCP_Snd+27)& (0+255),w,b
 14349  002A40  11C6               	iorwf	(??_TCP_Snd+37)& (0+255),w,b
 14350  002A42  6FCA               	movwf	(??_TCP_Snd+41)& (0+255),b
 14351  002A44  51BD               	movf	(??_TCP_Snd+28)& (0+255),w,b
 14352  002A46  11C7               	iorwf	(??_TCP_Snd+38)& (0+255),w,b
 14353  002A48  6FCB               	movwf	(??_TCP_Snd+42)& (0+255),b
 14354  002A4A  51BE               	movf	(??_TCP_Snd+29)& (0+255),w,b
 14355  002A4C  11C8               	iorwf	(??_TCP_Snd+39)& (0+255),w,b
 14356  002A4E  6FCC               	movwf	(??_TCP_Snd+43)& (0+255),b
 14357  002A50  51B1               	movf	(??_TCP_Snd+16)& (0+255),w,b
 14358  002A52  11C9               	iorwf	(??_TCP_Snd+40)& (0+255),w,b
 14359  002A54  6FCD               	movwf	(??_TCP_Snd+44)& (0+255),b
 14360  002A56  51B2               	movf	(??_TCP_Snd+17)& (0+255),w,b
 14361  002A58  11CA               	iorwf	(??_TCP_Snd+41)& (0+255),w,b
 14362  002A5A  6FCE               	movwf	(??_TCP_Snd+45)& (0+255),b
 14363  002A5C  51B3               	movf	(??_TCP_Snd+18)& (0+255),w,b
 14364  002A5E  11CB               	iorwf	(??_TCP_Snd+42)& (0+255),w,b
 14365  002A60  6FCF               	movwf	(??_TCP_Snd+46)& (0+255),b
 14366  002A62  51B4               	movf	(??_TCP_Snd+19)& (0+255),w,b
 14367  002A64  11CC               	iorwf	(??_TCP_Snd+43)& (0+255),w,b
 14368  002A66  6FD0               	movwf	(??_TCP_Snd+47)& (0+255),b
 14369  002A68  51A7               	movf	(??_TCP_Snd+6)& (0+255),w,b
 14370  002A6A  11CD               	iorwf	(??_TCP_Snd+44)& (0+255),w,b
 14371  002A6C  0012               	return	
 14372  002A6E                     __end_ofPL437:
 14373                           	opt stack 0
 14374  002A6E                     PL445:
 14375                           	opt stack 16
 14376  002A6E  0009               	tblrd		*+
 14377  002A70  CFF5 F0A3          	movff	tablat,??_TCP_Snd+2
 14378  002A74  0009               	tblrd		*+
 14379  002A76  CFF5 F0A4          	movff	tablat,??_TCP_Snd+3
 14380  002A7A  0012               	return	
 14381  002A7C                     __end_ofPL445:
 14382                           	opt stack 0
 14383  002A7C                     PL483:
 14384                           	opt stack 16
 14385  002A7C  259F               	addwf	TCP_Snd@tcbPtr& (0+255),w,b
 14386  002A7E  6FAB               	movwf	(??_TCP_Snd+10)& (0+255),b
 14387  002A80  0E00               	movlw	0
 14388  002A82  21A0               	addwfc	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 14389  002A84  6FAC               	movwf	(??_TCP_Snd+11)& (0+255),b
 14390  002A86  C0AB  FFF6         	movff	??_TCP_Snd+10,tblptrl
 14391  002A8A  C0AC  FFF7         	movff	??_TCP_Snd+11,tblptrh
 14392  002A8E  0E00               	movlw	low (__smallconst shr (0+16))
 14393  002A90  6EF8               	movwf	tblptru,c
 14394  002A92  0E0F               	movlw	(high __ramtop+-1)
 14395  002A94  0012               	return	
 14396  002A96                     __end_ofPL483:
 14397                           	opt stack 0
 14398  002A96                     PL499:
 14399                           	opt stack 16
 14400  002A96  CFEE F0A3          	movff	postinc0,??_TCP_Snd+2
 14401  002A9A  CFEE F0A4          	movff	postinc0,??_TCP_Snd+3
 14402  002A9E  0012               	return	
 14403  002AA0                     __end_ofPL499:
 14404                           	opt stack 0
 14405  002AA0                     PL525:
 14406                           	opt stack 16
 14407  002AA0  0009               	tblrd		*+
 14408  002AA2  CFF5 F0A5          	movff	tablat,??_TCP_Snd+4
 14409  002AA6  0009               	tblrd		*+
 14410  002AA8  CFF5 F0A6          	movff	tablat,??_TCP_Snd+5
 14411  002AAC  0012               	return	
 14412  002AAE                     __end_ofPL525:
 14413                           	opt stack 0
 14414  002AAE                     PL529:
 14415                           	opt stack 16
 14416  002AAE  0100               	movlb	0	; () banked
 14417  002AB0  6BB1               	clrf	(??_TCP_Snd+16)& (0+255),b
 14418  002AB2  51AE               	movf	(??_TCP_Snd+13)& (0+255),w,b
 14419  002AB4  6FB2               	movwf	(??_TCP_Snd+17)& (0+255),b
 14420  002AB6  6BB3               	clrf	(??_TCP_Snd+18)& (0+255),b
 14421  002AB8  6BB4               	clrf	(??_TCP_Snd+19)& (0+255),b
 14422  002ABA  C0B3  F0B4         	movff	??_TCP_Snd+18,??_TCP_Snd+19
 14423  002ABE  C0B2  F0B3         	movff	??_TCP_Snd+17,??_TCP_Snd+18
 14424  002AC2  C0B1  F0B2         	movff	??_TCP_Snd+16,??_TCP_Snd+17
 14425  002AC6  6BB1               	clrf	(??_TCP_Snd+16)& (0+255),b
 14426  002AC8  0012               	return	
 14427  002ACA                     __end_ofPL529:
 14428                           	opt stack 0
 14429  002ACA                     PL537:
 14430                           	opt stack 16
 14431  002ACA  C0B8  F0B7         	movff	??_TCP_Snd+23,??_TCP_Snd+22
 14432  002ACE  C0B9  F0B8         	movff	??_TCP_Snd+24,??_TCP_Snd+23
 14433  002AD2  C0BA  F0B9         	movff	??_TCP_Snd+25,??_TCP_Snd+24
 14434  002AD6  0100               	movlb	0	; () banked
 14435  002AD8  6BBA               	clrf	(??_TCP_Snd+25)& (0+255),b
 14436  002ADA  6BBB               	clrf	(??_TCP_Snd+26)& (0+255),b
 14437  002ADC  51B8               	movf	(??_TCP_Snd+23)& (0+255),w,b
 14438  002ADE  6FBC               	movwf	(??_TCP_Snd+27)& (0+255),b
 14439  002AE0  6BBD               	clrf	(??_TCP_Snd+28)& (0+255),b
 14440  002AE2  6BBE               	clrf	(??_TCP_Snd+29)& (0+255),b
 14441  002AE4  0012               	return	
 14442  002AE6                     __end_ofPL537:
 14443                           	opt stack 0
 14444  002AE6                     PL549:
 14445                           	opt stack 16
 14446  002AE6  259F               	addwf	TCP_Snd@tcbPtr& (0+255),w,b
 14447  002AE8  6FA5               	movwf	(??_TCP_Snd+4)& (0+255),b
 14448  002AEA  0E00               	movlw	0
 14449  002AEC  21A0               	addwfc	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 14450  002AEE  6FA6               	movwf	(??_TCP_Snd+5)& (0+255),b
 14451  002AF0  C0A5  FFF6         	movff	??_TCP_Snd+4,tblptrl
 14452  002AF4  C0A6  FFF7         	movff	??_TCP_Snd+5,tblptrh
 14453  002AF8  0E00               	movlw	low (__smallconst shr (0+16))
 14454  002AFA  6EF8               	movwf	tblptru,c
 14455  002AFC  0E0F               	movlw	(high __ramtop+-1)
 14456  002AFE  0012               	return	
 14457  002B00                     __end_ofPL549:
 14458                           	opt stack 0
 14459  002B00                     PL553:
 14460                           	opt stack 16
 14461  002B00  259F               	addwf	TCP_Snd@tcbPtr& (0+255),w,b
 14462  002B02  6FA7               	movwf	(??_TCP_Snd+6)& (0+255),b
 14463  002B04  0E00               	movlw	0
 14464  002B06  21A0               	addwfc	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 14465  002B08  6FA8               	movwf	(??_TCP_Snd+7)& (0+255),b
 14466  002B0A  C0A7  FFF6         	movff	??_TCP_Snd+6,tblptrl
 14467  002B0E  C0A8  FFF7         	movff	??_TCP_Snd+7,tblptrh
 14468  002B12  0E00               	movlw	low (__smallconst shr (0+16))
 14469  002B14  6EF8               	movwf	tblptru,c
 14470  002B16  0E0F               	movlw	(high __ramtop+-1)
 14471  002B18  0012               	return	
 14472  002B1A                     __end_ofPL553:
 14473                           	opt stack 0
 14474  002B1A                     PL555:
 14475                           	opt stack 16
 14476  002B1A  259F               	addwf	TCP_Snd@tcbPtr& (0+255),w,b
 14477  002B1C  6FB5               	movwf	(??_TCP_Snd+20)& (0+255),b
 14478  002B1E  0E00               	movlw	0
 14479  002B20  21A0               	addwfc	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 14480  002B22  6FB6               	movwf	(??_TCP_Snd+21)& (0+255),b
 14481  002B24  C0B5  FFF6         	movff	??_TCP_Snd+20,tblptrl
 14482  002B28  C0B6  FFF7         	movff	??_TCP_Snd+21,tblptrh
 14483  002B2C  0E00               	movlw	low (__smallconst shr (0+16))
 14484  002B2E  6EF8               	movwf	tblptru,c
 14485  002B30  0E0F               	movlw	(high __ramtop+-1)
 14486  002B32  0012               	return	
 14487  002B34                     __end_ofPL555:
 14488                           	opt stack 0
 14489  002B34                     PL557:
 14490                           	opt stack 16
 14491  002B34  0009               	tblrd		*+
 14492  002B36  CFF5 F0AD          	movff	tablat,??_TCP_Snd+12
 14493  002B3A  0009               	tblrd		*+
 14494  002B3C  CFF5 F0AE          	movff	tablat,??_TCP_Snd+13
 14495  002B40  0009               	tblrd		*+
 14496  002B42  CFF5 F0AF          	movff	tablat,??_TCP_Snd+14
 14497  002B46  0009               	tblrd		*+
 14498  002B48  CFF5 F0B0          	movff	tablat,??_TCP_Snd+15
 14499  002B4C  0012               	return	
 14500  002B4E                     __end_ofPL557:
 14501                           	opt stack 0
 14502  002B4E                     PL559:
 14503                           	opt stack 16
 14504  002B4E  0009               	tblrd		*+
 14505  002B50  CFF5 F0B7          	movff	tablat,??_TCP_Snd+22
 14506  002B54  0009               	tblrd		*+
 14507  002B56  CFF5 F0B8          	movff	tablat,??_TCP_Snd+23
 14508  002B5A  0009               	tblrd		*+
 14509  002B5C  CFF5 F0B9          	movff	tablat,??_TCP_Snd+24
 14510  002B60  0009               	tblrd		*+
 14511  002B62  CFF5 F0BA          	movff	tablat,??_TCP_Snd+25
 14512  002B66  0012               	return	
 14513  002B68                     __end_ofPL559:
 14514                           	opt stack 0
 14515  002B68                     PL561:
 14516                           	opt stack 16
 14517  002B68  0009               	tblrd		*+
 14518  002B6A  CFF5 F0C1          	movff	tablat,??_TCP_Snd+32
 14519  002B6E  0009               	tblrd		*+
 14520  002B70  CFF5 F0C2          	movff	tablat,??_TCP_Snd+33
 14521  002B74  0009               	tblrd		*+
 14522  002B76  CFF5 F0C3          	movff	tablat,??_TCP_Snd+34
 14523  002B7A  0009               	tblrd		*+
 14524  002B7C  CFF5 F0C4          	movff	tablat,??_TCP_Snd+35
 14525  002B80  0012               	return	
 14526  002B82                     __end_ofPL561:
 14527                           	opt stack 0
 14528  002B82                     PL563:
 14529                           	opt stack 16
 14530  002B82  259F               	addwf	TCP_Snd@tcbPtr& (0+255),w,b
 14531  002B84  6FBF               	movwf	(??_TCP_Snd+30)& (0+255),b
 14532  002B86  0E00               	movlw	0
 14533  002B88  21A0               	addwfc	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 14534  002B8A  6FC0               	movwf	(??_TCP_Snd+31)& (0+255),b
 14535  002B8C  C0BF  FFF6         	movff	??_TCP_Snd+30,tblptrl
 14536  002B90  C0C0  FFF7         	movff	??_TCP_Snd+31,tblptrh
 14537  002B94  0E00               	movlw	low (__smallconst shr (0+16))
 14538  002B96  6EF8               	movwf	tblptru,c
 14539  002B98  0E0F               	movlw	(high __ramtop+-1)
 14540  002B9A  0012               	return	
 14541  002B9C                     __end_ofPL563:
 14542                           	opt stack 0
 14543  002B9C                     PL577:
 14544                           	opt stack 16
 14545  002B9C  0100               	movlb	0	; () banked
 14546  002B9E  51A3               	movf	(??_TCP_Snd+2)& (0+255),w,b
 14547  002BA0  6FA7               	movwf	(??_TCP_Snd+6)& (0+255),b
 14548  002BA2  6BA8               	clrf	(??_TCP_Snd+7)& (0+255),b
 14549  002BA4  6BA9               	clrf	(??_TCP_Snd+8)& (0+255),b
 14550  002BA6  6BAA               	clrf	(??_TCP_Snd+9)& (0+255),b
 14551  002BA8  C0A7  F0AA         	movff	??_TCP_Snd+6,??_TCP_Snd+9
 14552  002BAC  6BA9               	clrf	(??_TCP_Snd+8)& (0+255),b
 14553  002BAE  6BA8               	clrf	(??_TCP_Snd+7)& (0+255),b
 14554  002BB0  6BA7               	clrf	(??_TCP_Snd+6)& (0+255),b
 14555  002BB2  0012               	return	
 14556  002BB4                     __end_ofPL577:
 14557                           	opt stack 0
 14558  002BB4                     PL591:
 14559                           	opt stack 16
 14560  002BB4  0009               	tblrd		*+
 14561  002BB6  CFF5 F0D8          	movff	tablat,TCP_Snd@tcpDataLength
 14562  002BBA  0009               	tblrd		*+
 14563  002BBC  CFF5 F0D9          	movff	tablat,TCP_Snd@tcpDataLength+1
 14564  002BC0  0012               	return	
 14565  002BC2                     __end_ofPL591:
 14566                           	opt stack 0
 14567  002BC2                     PL609:
 14568                           	opt stack 16
 14569  002BC2  CFEE F0AD          	movff	postinc0,??_TCP_Snd+12
 14570  002BC6  CFEE F0AE          	movff	postinc0,??_TCP_Snd+13
 14571  002BCA  CFEE F0AF          	movff	postinc0,??_TCP_Snd+14
 14572  002BCE  CFEE F0B0          	movff	postinc0,??_TCP_Snd+15
 14573  002BD2  0012               	return	
 14574  002BD4                     __end_ofPL609:
 14575                           	opt stack 0
 14576  002BD4                     PL611:
 14577                           	opt stack 16
 14578  002BD4  CFEE F0B7          	movff	postinc0,??_TCP_Snd+22
 14579  002BD8  CFEE F0B8          	movff	postinc0,??_TCP_Snd+23
 14580  002BDC  CFEE F0B9          	movff	postinc0,??_TCP_Snd+24
 14581  002BE0  CFEE F0BA          	movff	postinc0,??_TCP_Snd+25
 14582  002BE4  0012               	return	
 14583  002BE6                     __end_ofPL611:
 14584                           	opt stack 0
 14585  002BE6                     PL613:
 14586                           	opt stack 16
 14587  002BE6  CFEE F0C1          	movff	postinc0,??_TCP_Snd+32
 14588  002BEA  CFEE F0C2          	movff	postinc0,??_TCP_Snd+33
 14589  002BEE  CFEE F0C3          	movff	postinc0,??_TCP_Snd+34
 14590  002BF2  CFEE F0C4          	movff	postinc0,??_TCP_Snd+35
 14591  002BF6  0012               	return	
 14592  002BF8                     __end_ofPL613:
 14593                           	opt stack 0
 14594  002BF8                     PL617:
 14595                           	opt stack 16
 14596  002BF8  C09F  FFF6         	movff	TCP_Snd@tcbPtr,tblptrl
 14597  002BFC  C0A0  FFF7         	movff	TCP_Snd@tcbPtr+1,tblptrh
 14598  002C00  0E00               	movlw	low (__smallconst shr (0+16))
 14599  002C02  6EF8               	movwf	tblptru,c
 14600  002C04  0E0F               	movlw	(high __ramtop+-1)
 14601  002C06  0012               	return	
 14602  002C08                     __end_ofPL617:
 14603                           	opt stack 0
 14604  002C08                     PL623:
 14605                           	opt stack 16
 14606  002C08  CFEE F0A5          	movff	postinc0,??_TCP_Snd+4
 14607  002C0C  CFEE F0A6          	movff	postinc0,??_TCP_Snd+5
 14608  002C10  0012               	return	
 14609  002C12                     __end_ofPL623:
 14610                           	opt stack 0
 14611  002C12                     PL625:
 14612                           	opt stack 16
 14613  002C12  C0AA  F0A9         	movff	??_TCP_Snd+9,??_TCP_Snd+8
 14614  002C16  0100               	movlb	0	; () banked
 14615  002C18  6BAA               	clrf	(??_TCP_Snd+9)& (0+255),b
 14616  002C1A  6BAA               	clrf	(??_TCP_Snd+9)& (0+255),b
 14617  002C1C  51A5               	movf	(??_TCP_Snd+4)& (0+255),w,b
 14618  002C1E  11A9               	iorwf	(??_TCP_Snd+8)& (0+255),w,b
 14619  002C20  0012               	return	
 14620  002C22                     __end_ofPL625:
 14621                           	opt stack 0
 14622  002C22                     PL641:
 14623                           	opt stack 16
 14624  002C22  C0A3  FFF5         	movff	??_TCP_Snd+2,tablat
 14625  002C26  000D               	tblwt		*+
 14626  002C28  C0A4  FFF5         	movff	??_TCP_Snd+3,tablat
 14627  002C2C  000C               	tblwt		*
 14628  002C2E  0012               	return	
 14629  002C30                     __end_ofPL641:
 14630                           	opt stack 0
 14631  002C30                     PL645:
 14632                           	opt stack 16
 14633  002C30  0009               	tblrd		*+
 14634  002C32  CFF5 F0A9          	movff	tablat,??_TCP_Snd+8
 14635  002C36  0009               	tblrd		*+
 14636  002C38  CFF5 F0AA          	movff	tablat,??_TCP_Snd+9
 14637  002C3C  0012               	return	
 14638  002C3E                     __end_ofPL645:
 14639                           	opt stack 0
 14640  002C3E                     PL657:
 14641                           	opt stack 16
 14642  002C3E  CFEE F0D8          	movff	postinc0,TCP_Snd@tcpDataLength
 14643  002C42  CFEE F0D9          	movff	postinc0,TCP_Snd@tcpDataLength+1
 14644  002C46  0012               	return	
 14645  002C48                     __end_ofPL657:
 14646                           	opt stack 0
 14647  002C48                     PL667:
 14648                           	opt stack 16
 14649  002C48  0100               	movlb	0	; () banked
 14650  002C4A  51D8               	movf	TCP_Snd@tcpDataLength& (0+255),w,b
 14651  002C4C  5DA3               	subwf	(??_TCP_Snd+2)& (0+255),w,b
 14652  002C4E  51D9               	movf	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 14653  002C50  59A4               	subwfb	(??_TCP_Snd+3)& (0+255),w,b
 14654  002C52  0012               	return	
 14655  002C54                     __end_ofPL667:
 14656                           	opt stack 0
 14657  002C54                     PL693:
 14658                           	opt stack 16
 14659  002C54  0100               	movlb	0	; () banked
 14660  002C56  51A3               	movf	(??_TCP_Snd+2)& (0+255),w,b
 14661  002C58  6FA6               	movwf	(??_TCP_Snd+5)& (0+255),b
 14662  002C5A  6BA5               	clrf	(??_TCP_Snd+4)& (0+255),b
 14663  002C5C  0012               	return	
 14664  002C5E                     __end_ofPL693:
 14665                           	opt stack 0
 14666  002C5E                     PL699:
 14667                           	opt stack 16
 14668  002C5E  CFEE F0A9          	movff	postinc0,??_TCP_Snd+8
 14669  002C62  CFEE F0AA          	movff	postinc0,??_TCP_Snd+9
 14670  002C66  0012               	return	
 14671  002C68                     __end_ofPL699:
 14672                           	opt stack 0
 14673  002C68                     PL717:
 14674                           	opt stack 12
 14675  002C68  6A26               	clrf	ETH_TxComputeChecksum@position+1,c
 14676  002C6A  0E1A               	movlw	26
 14677  002C6C  6E25               	movwf	ETH_TxComputeChecksum@position,c
 14678  002C6E  0C08               	retlw	8
 14679  002C70                     __end_ofPL717:
 14680                           	opt stack 0
 14681  002C70                     PL723:
 14682                           	opt stack 16
 14683  002C70  C0A3  FFEE         	movff	??_TCP_Snd+2,postinc0
 14684  002C74  C0A4  FFEF         	movff	??_TCP_Snd+3,indf0
 14685  002C78  0012               	return	
 14686  002C7A                     __end_ofPL723:
 14687                           	opt stack 0
 14688  002C7A                     PL751:
 14689                           	opt stack 12
 14690  002C7A  6A1A               	clrf	ETH_WriteBlock@length+1,c
 14691  002C7C  0E14               	movlw	20
 14692  002C7E  6E19               	movwf	ETH_WriteBlock@length,c
 14693  002C80  0C14               	retlw	20
 14694  002C82                     __end_ofPL751:
 14695                           	opt stack 0
 14696                           tosu	equ	0xFFF
 14697                           tosh	equ	0xFFE
 14698                           tosl	equ	0xFFD
 14699                           pclath	equ	0xFFA
 14700                           tblptru	equ	0xFF8
 14701                           tblptrh	equ	0xFF7
 14702                           tblptrl	equ	0xFF6
 14703                           tablat	equ	0xFF5
 14704                           prodh	equ	0xFF4
 14705                           prodl	equ	0xFF3
 14706                           intcon	equ	0xFF2
 14707                           indf0	equ	0xFEF
 14708                           postinc0	equ	0xFEE
 14709                           fsr0h	equ	0xFEA
 14710                           fsr0l	equ	0xFE9
 14711                           wreg	equ	0xFE8
 14712                           indf1	equ	0xFE7
 14713                           postinc1	equ	0xFE6
 14714                           postdec1	equ	0xFE5
 14715                           plusw1	equ	0xFE3
 14716                           fsr1h	equ	0xFE2
 14717                           fsr1l	equ	0xFE1
 14718                           indf2	equ	0xFDF
 14719                           postinc2	equ	0xFDE
 14720                           postdec2	equ	0xFDD
 14721                           plusw2	equ	0xFDB
 14722                           fsr2h	equ	0xFDA
 14723                           fsr2l	equ	0xFD9
 14724                           status	equ	0xFD8
 14725                           
 14726 ;; *************** function _TCB_Reset *****************
 14727 ;; Defined at:
 14728 ;;		line 134 in file "../../TCPIP Library/source/tcpv4.c"
 14729 ;; Parameters:    Size  Location     Type
 14730 ;;  tcbPtr          2   22[COMRAM] PTR struct .
 14731 ;;		 -> ?_sprintf(2), ?_printf(2), main@str(32), STR_8(13), 
 14732 ;;		 -> STR_7(17), STR_6(7), STR_5(10), TCP_Server@port7TCB(55), 
 14733 ;;		 -> Network_Read@debug_str(80), STR_1(15), NULL(0), 
 14734 ;; Auto vars:     Size  Location     Type
 14735 ;;		None
 14736 ;; Return value:  Size  Location     Type
 14737 ;;                  1    wreg      void 
 14738 ;; Registers used:
 14739 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 14740 ;; Tracked objects:
 14741 ;;		On entry : 0/1
 14742 ;;		On exit  : 0/0
 14743 ;;		Unchanged: 0/0
 14744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14745 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14747 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14748 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14749 ;;Total ram usage:        4 bytes
 14750 ;; Hardware stack levels used:    1
 14751 ;; Hardware stack levels required when called:    8
 14752 ;; This function calls:
 14753 ;;		Nothing
 14754 ;; This function is called by:
 14755 ;;		_TCP_FiniteStateMachine
 14756 ;;		_TCP_SocketInit
 14757 ;; This function uses a non-reentrant model
 14758 ;;
 14759                           
 14760                           	psect	text46
 14761  00459C                     __ptext46:
 14762                           	opt stack 0
 14763  00459C                     _TCB_Reset:
 14764                           	opt stack 20
 14765                           
 14766                           ;tcpv4.c: 136: tcbPtr->destIP = 0;
 14767                           
 14768                           ; BSR set to: 0
 14769                           ;incstack = 0
 14770  00459C  0E02               	movlw	2
 14771  00459E  D8A6               	call	PL399	;call to abstracted procedure
 14772  0045A0  64F7               	cpfsgt	tblptrh,c
 14773  0045A2  D007               	bra	u11887
 14774  0045A4  6AF5               	clrf	tablat,c
 14775  0045A6  000D               	tblwt		*+
 14776  0045A8  6AF5               	clrf	tablat,c
 14777  0045AA  000D               	tblwt		*+
 14778  0045AC  ECD2  F011         	call	PL423	;call to abstracted procedure
 14779  0045B0  D004               	bra	u11880
 14780  0045B2                     u11887:
 14781  0045B2  EC73  F011         	call	PL389	;call to abstracted procedure
 14782  0045B6  EC46  F012         	call	PL467	;call to abstracted procedure
 14783  0045BA                     u11880:
 14784                           
 14785                           ;tcpv4.c: 137: tcbPtr->destPort = 0;
 14786  0045BA  0E06               	movlw	6
 14787  0045BC  D897               	call	PL399	;call to abstracted procedure
 14788  0045BE  64F7               	cpfsgt	tblptrh,c
 14789  0045C0  D003               	bra	u11897
 14790  0045C2  ECD2  F011         	call	PL423	;call to abstracted procedure
 14791  0045C6  D004               	bra	u11890
 14792  0045C8                     u11897:
 14793  0045C8  EC73  F011         	call	PL389	;call to abstracted procedure
 14794  0045CC  6AEE               	clrf	postinc0,c
 14795  0045CE  6AEF               	clrf	indf0,c
 14796  0045D0                     u11890:
 14797                           
 14798                           ;tcpv4.c: 138: tcbPtr->localSeqno = 0;
 14799  0045D0  0E10               	movlw	16
 14800  0045D2  D88C               	call	PL399	;call to abstracted procedure
 14801  0045D4  64F7               	cpfsgt	tblptrh,c
 14802  0045D6  D007               	bra	u11907
 14803  0045D8  6AF5               	clrf	tablat,c
 14804  0045DA  000D               	tblwt		*+
 14805  0045DC  6AF5               	clrf	tablat,c
 14806  0045DE  000D               	tblwt		*+
 14807  0045E0  ECD2  F011         	call	PL423	;call to abstracted procedure
 14808  0045E4  D004               	bra	u11900
 14809  0045E6                     u11907:
 14810  0045E6  EC73  F011         	call	PL389	;call to abstracted procedure
 14811  0045EA  EC46  F012         	call	PL467	;call to abstracted procedure
 14812  0045EE                     u11900:
 14813                           
 14814                           ;tcpv4.c: 139: tcbPtr->localLastAck = 0;
 14815  0045EE  0E14               	movlw	20
 14816  0045F0  D87D               	call	PL399	;call to abstracted procedure
 14817  0045F2  64F7               	cpfsgt	tblptrh,c
 14818  0045F4  D007               	bra	u11917
 14819  0045F6  6AF5               	clrf	tablat,c
 14820  0045F8  000D               	tblwt		*+
 14821  0045FA  6AF5               	clrf	tablat,c
 14822  0045FC  000D               	tblwt		*+
 14823  0045FE  ECD2  F011         	call	PL423	;call to abstracted procedure
 14824  004602  D004               	bra	u11910
 14825  004604                     u11917:
 14826  004604  EC73  F011         	call	PL389	;call to abstracted procedure
 14827  004608  EC46  F012         	call	PL467	;call to abstracted procedure
 14828  00460C                     u11910:
 14829                           
 14830                           ;tcpv4.c: 140: tcbPtr->remoteSeqno = 0;
 14831  00460C  0E08               	movlw	8
 14832  00460E  D86E               	call	PL399	;call to abstracted procedure
 14833  004610  64F7               	cpfsgt	tblptrh,c
 14834  004612  D007               	bra	u11927
 14835  004614  6AF5               	clrf	tablat,c
 14836  004616  000D               	tblwt		*+
 14837  004618  6AF5               	clrf	tablat,c
 14838  00461A  000D               	tblwt		*+
 14839  00461C  ECD2  F011         	call	PL423	;call to abstracted procedure
 14840  004620  D004               	bra	u11920
 14841  004622                     u11927:
 14842  004622  EC73  F011         	call	PL389	;call to abstracted procedure
 14843  004626  EC46  F012         	call	PL467	;call to abstracted procedure
 14844  00462A                     u11920:
 14845                           
 14846                           ;tcpv4.c: 141: tcbPtr->remoteAck = 0;
 14847  00462A  0E0C               	movlw	12
 14848  00462C  D85F               	call	PL399	;call to abstracted procedure
 14849  00462E  64F7               	cpfsgt	tblptrh,c
 14850  004630  D007               	bra	u11937
 14851  004632  6AF5               	clrf	tablat,c
 14852  004634  000D               	tblwt		*+
 14853  004636  6AF5               	clrf	tablat,c
 14854  004638  000D               	tblwt		*+
 14855  00463A  ECD2  F011         	call	PL423	;call to abstracted procedure
 14856  00463E  D004               	bra	u11930
 14857  004640                     u11937:
 14858  004640  EC73  F011         	call	PL389	;call to abstracted procedure
 14859  004644  EC46  F012         	call	PL467	;call to abstracted procedure
 14860  004648                     u11930:
 14861                           
 14862                           ;tcpv4.c: 142: tcbPtr->remoteWnd = 0;
 14863  004648  0E18               	movlw	24
 14864  00464A  D850               	call	PL399	;call to abstracted procedure
 14865  00464C  64F7               	cpfsgt	tblptrh,c
 14866  00464E  D003               	bra	u11947
 14867  004650  ECD2  F011         	call	PL423	;call to abstracted procedure
 14868  004654  D004               	bra	u11940
 14869  004656                     u11947:
 14870  004656  EC73  F011         	call	PL389	;call to abstracted procedure
 14871  00465A  6AEE               	clrf	postinc0,c
 14872  00465C  6AEF               	clrf	indf0,c
 14873  00465E                     u11940:
 14874                           
 14875                           ;tcpv4.c: 144: tcbPtr->timeout = 0;
 14876  00465E  0E30               	movlw	48
 14877  004660  D845               	call	PL399	;call to abstracted procedure
 14878  004662  64F7               	cpfsgt	tblptrh,c
 14879  004664  D003               	bra	u11957
 14880  004666  ECD2  F011         	call	PL423	;call to abstracted procedure
 14881  00466A  D004               	bra	u11950
 14882  00466C                     u11957:
 14883  00466C  EC73  F011         	call	PL389	;call to abstracted procedure
 14884  004670  6AEE               	clrf	postinc0,c
 14885  004672  6AEF               	clrf	indf0,c
 14886  004674                     u11950:
 14887                           
 14888                           ;tcpv4.c: 145: tcbPtr->timeoutReloadValue = 0;
 14889  004674  0E32               	movlw	50
 14890  004676  D83A               	call	PL399	;call to abstracted procedure
 14891  004678  64F7               	cpfsgt	tblptrh,c
 14892  00467A  D003               	bra	u11967
 14893  00467C  ECD2  F011         	call	PL423	;call to abstracted procedure
 14894  004680  D004               	bra	u11960
 14895  004682                     u11967:
 14896  004682  EC73  F011         	call	PL389	;call to abstracted procedure
 14897  004686  6AEE               	clrf	postinc0,c
 14898  004688  6AEF               	clrf	indf0,c
 14899  00468A                     u11960:
 14900                           
 14901                           ;tcpv4.c: 146: tcbPtr->timeoutsCount = 0;
 14902  00468A  0E34               	movlw	52
 14903  00468C  D82F               	call	PL399	;call to abstracted procedure
 14904  00468E  64F7               	cpfsgt	tblptrh,c
 14905  004690  D003               	bra	u11977
 14906  004692  6AF5               	clrf	tablat,c
 14907  004694  000C               	tblwt		*
 14908  004696  D003               	bra	u11970
 14909  004698                     u11977:
 14910  004698  EC73  F011         	call	PL389	;call to abstracted procedure
 14911  00469C  6AEF               	clrf	indf0,c
 14912  00469E                     u11970:
 14913                           
 14914                           ;tcpv4.c: 147: tcbPtr->flags = 0;
 14915  00469E  0E35               	movlw	53
 14916  0046A0  D825               	call	PL399	;call to abstracted procedure
 14917  0046A2  64F7               	cpfsgt	tblptrh,c
 14918  0046A4  D003               	bra	u11987
 14919  0046A6  6AF5               	clrf	tablat,c
 14920  0046A8  000C               	tblwt		*
 14921  0046AA  D003               	bra	u11980
 14922  0046AC                     u11987:
 14923  0046AC  EC73  F011         	call	PL389	;call to abstracted procedure
 14924  0046B0  6AEF               	clrf	indf0,c
 14925  0046B2                     u11980:
 14926                           
 14927                           ;tcpv4.c: 149: tcbPtr->localPort = 0;
 14928  0046B2  C017  FFF6         	movff	TCB_Reset@tcbPtr,tblptrl
 14929  0046B6  C018  FFF7         	movff	TCB_Reset@tcbPtr+1,tblptrh
 14930  0046BA  0E00               	movlw	low (__smallconst shr (0+16))
 14931  0046BC  6EF8               	movwf	tblptru,c
 14932  0046BE  0E0F               	movlw	(high __ramtop+-1)
 14933  0046C0  64F7               	cpfsgt	tblptrh,c
 14934  0046C2  D003               	bra	u11997
 14935  0046C4  ECD2  F011         	call	PL423	;call to abstracted procedure
 14936  0046C8  D004               	bra	u11990
 14937  0046CA                     u11997:
 14938  0046CA  EC73  F011         	call	PL389	;call to abstracted procedure
 14939  0046CE  6AEE               	clrf	postinc0,c
 14940  0046D0  6AEF               	clrf	indf0,c
 14941  0046D2                     u11990:
 14942                           
 14943                           ;tcpv4.c: 150: tcbPtr->socketState = SOCKET_CLOSED;
 14944  0046D2  0E36               	movlw	54
 14945  0046D4  D80B               	call	PL399	;call to abstracted procedure
 14946  0046D6  64F7               	cpfsgt	tblptrh,c
 14947  0046D8  D004               	bra	u12007
 14948  0046DA  0E01               	movlw	1
 14949  0046DC  6EF5               	movwf	tablat,c
 14950  0046DE  000C               	tblwt		*
 14951  0046E0  D004               	bra	u12000
 14952  0046E2                     u12007:
 14953  0046E2  EC73  F011         	call	PL389	;call to abstracted procedure
 14954  0046E6  0E01               	movlw	1
 14955  0046E8  6EEF               	movwf	indf0,c
 14956  0046EA                     u12000:
 14957  0046EA  0012               	return		;funcret
 14958  0046EC                     __end_of_TCB_Reset:
 14959                           	opt stack 0
 14960  0046EC                     PL399:
 14961                           	opt stack 20
 14962  0046EC  2417               	addwf	TCB_Reset@tcbPtr,w,c
 14963  0046EE  6E19               	movwf	??_TCB_Reset& (0+255),c
 14964  0046F0  0E00               	movlw	0
 14965  0046F2  2018               	addwfc	TCB_Reset@tcbPtr+1,w,c
 14966  0046F4  6E1A               	movwf	(??_TCB_Reset+1)& (0+255),c
 14967  0046F6  C019  FFF6         	movff	??_TCB_Reset,tblptrl
 14968  0046FA  C01A  FFF7         	movff	??_TCB_Reset+1,tblptrh
 14969  0046FE  0E00               	movlw	low (__smallconst shr (0+16))
 14970  004700  6EF8               	movwf	tblptru,c
 14971  004702  0E0F               	movlw	(high __ramtop+-1)
 14972  004704  0012               	return	
 14973  004706                     __end_ofPL399:
 14974                           	opt stack 0
 14975                           tosu	equ	0xFFF
 14976                           tosh	equ	0xFFE
 14977                           tosl	equ	0xFFD
 14978                           pclath	equ	0xFFA
 14979                           tblptru	equ	0xFF8
 14980                           tblptrh	equ	0xFF7
 14981                           tblptrl	equ	0xFF6
 14982                           tablat	equ	0xFF5
 14983                           prodh	equ	0xFF4
 14984                           prodl	equ	0xFF3
 14985                           intcon	equ	0xFF2
 14986                           indf0	equ	0xFEF
 14987                           postinc0	equ	0xFEE
 14988                           fsr0h	equ	0xFEA
 14989                           fsr0l	equ	0xFE9
 14990                           wreg	equ	0xFE8
 14991                           indf1	equ	0xFE7
 14992                           postinc1	equ	0xFE6
 14993                           postdec1	equ	0xFE5
 14994                           plusw1	equ	0xFE3
 14995                           fsr1h	equ	0xFE2
 14996                           fsr1l	equ	0xFE1
 14997                           indf2	equ	0xFDF
 14998                           postinc2	equ	0xFDE
 14999                           postdec2	equ	0xFDD
 15000                           plusw2	equ	0xFDB
 15001                           fsr2h	equ	0xFDA
 15002                           fsr2l	equ	0xFD9
 15003                           status	equ	0xFD8
 15004                           
 15005 ;; *************** function _IPV4_PseudoHeaderChecksum *****************
 15006 ;; Defined at:
 15007 ;;		line 83 in file "../../TCPIP Library/source/ipv4.c"
 15008 ;; Parameters:    Size  Location     Type
 15009 ;;  payloadLen      2   22[COMRAM] unsigned int 
 15010 ;; Auto vars:     Size  Location     Type
 15011 ;;  tmp            12   34[COMRAM] struct .
 15012 ;;  cksm            4   30[COMRAM] unsigned long 
 15013 ;;  len             1   29[COMRAM] unsigned char 
 15014 ;;  v               1   28[COMRAM] PTR unsigned int 
 15015 ;;		 -> IPV4_PseudoHeaderChecksum@tmp(12), 
 15016 ;; Return value:  Size  Location     Type
 15017 ;;                  2   22[COMRAM] unsigned int 
 15018 ;; Registers used:
 15019 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15020 ;; Tracked objects:
 15021 ;;		On entry : F/1
 15022 ;;		On exit  : F/1
 15023 ;;		Unchanged: F/0
 15024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15025 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15026 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15027 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15028 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15029 ;;Total ram usage:       24 bytes
 15030 ;; Hardware stack levels used:    1
 15031 ;; Hardware stack levels required when called:    8
 15032 ;; This function calls:
 15033 ;;		Nothing
 15034 ;; This function is called by:
 15035 ;;		_IPV4_Packet
 15036 ;; This function uses a non-reentrant model
 15037 ;;
 15038                           
 15039                           	psect	text47
 15040  005374                     __ptext47:
 15041                           	opt stack 0
 15042  005374                     _IPV4_PseudoHeaderChecksum:
 15043                           	opt stack 19
 15044                           
 15045                           ; BSR set to: 1
 15046                           ;ipv4.c: 85: ipv4_pseudo_header_t tmp;
 15047                           ;ipv4.c: 86: uint8_t len;
 15048                           ;ipv4.c: 87: uint32_t cksm = 0;
 15049                           
 15050                           ;incstack = 0
 15051  005374  6A1F               	clrf	IPV4_PseudoHeaderChecksum@cksm,c
 15052  005376  6A20               	clrf	IPV4_PseudoHeaderChecksum@cksm+1,c
 15053  005378  6A21               	clrf	IPV4_PseudoHeaderChecksum@cksm+2,c
 15054  00537A  6A22               	clrf	IPV4_PseudoHeaderChecksum@cksm+3,c
 15055                           
 15056                           ;ipv4.c: 88: uint16_t *v;
 15057                           ;ipv4.c: 90: tmp.srcIpAddress = ipv4Header.srcIpAddress;
 15058  00537C  C297  F023         	movff	_ipv4Header+12,IPV4_PseudoHeaderChecksum@tmp
 15059  005380  C298  F024         	movff	_ipv4Header+13,IPV4_PseudoHeaderChecksum@tmp+1
 15060  005384  C299  F025         	movff	_ipv4Header+14,IPV4_PseudoHeaderChecksum@tmp+2
 15061  005388  C29A  F026         	movff	_ipv4Header+15,IPV4_PseudoHeaderChecksum@tmp+3
 15062                           
 15063                           ;ipv4.c: 91: tmp.dstIpAddress = ipv4Header.dstIpAddress;
 15064  00538C  C29B  F027         	movff	_ipv4Header+16,IPV4_PseudoHeaderChecksum@tmp+4
 15065  005390  C29C  F028         	movff	_ipv4Header+17,IPV4_PseudoHeaderChecksum@tmp+5
 15066  005394  C29D  F029         	movff	_ipv4Header+18,IPV4_PseudoHeaderChecksum@tmp+6
 15067  005398  C29E  F02A         	movff	_ipv4Header+19,IPV4_PseudoHeaderChecksum@tmp+7
 15068                           
 15069                           ;ipv4.c: 92: tmp.protocol = ipv4Header.protocol;
 15070  00539C  C294  F02B         	movff	_ipv4Header+9,IPV4_PseudoHeaderChecksum@tmp+8
 15071                           
 15072                           ;ipv4.c: 93: tmp.z = 0;
 15073  0053A0  6A2C               	clrf	IPV4_PseudoHeaderChecksum@tmp+9,c
 15074                           
 15075                           ;ipv4.c: 94: tmp.length = payloadLen;
 15076  0053A2  C017  F02D         	movff	IPV4_PseudoHeaderChecksum@payloadLen,IPV4_PseudoHeaderChecksum@tmp+10
 15077  0053A6  C018  F02E         	movff	IPV4_PseudoHeaderChecksum@payloadLen+1,IPV4_PseudoHeaderChecksum@tmp+11
 15078                           
 15079                           ; BSR set to: 1
 15080                           ;ipv4.c: 96: len = sizeof(tmp);
 15081  0053AA  0E0C               	movlw	12
 15082  0053AC  6E1E               	movwf	IPV4_PseudoHeaderChecksum@len,c
 15083                           
 15084                           ; BSR set to: 1
 15085                           ;ipv4.c: 97: len = len >> 1;
 15086  0053AE  90D8               	bcf	status,0,c
 15087  0053B0  321E               	rrcf	IPV4_PseudoHeaderChecksum@len,f,c
 15088                           
 15089                           ; BSR set to: 1
 15090                           ;ipv4.c: 99: v = (uint16_t *) &tmp;
 15091  0053B2  0E23               	movlw	low IPV4_PseudoHeaderChecksum@tmp
 15092  0053B4  6E1D               	movwf	IPV4_PseudoHeaderChecksum@v,c
 15093                           
 15094                           ;ipv4.c: 101: while(len)
 15095  0053B6  D011               	goto	l8958
 15096  0053B8                     l8952:
 15097                           
 15098                           ; BSR set to: 1
 15099                           ;ipv4.c: 102: {
 15100                           ;ipv4.c: 103: cksm += *v;
 15101  0053B8  501D               	movf	IPV4_PseudoHeaderChecksum@v,w,c
 15102  0053BA  6ED9               	movwf	fsr2l,c
 15103  0053BC  6ADA               	clrf	fsr2h,c
 15104  0053BE  CFDE F019          	movff	postinc2,??_IPV4_PseudoHeaderChecksum
 15105  0053C2  CFDD F01A          	movff	postdec2,??_IPV4_PseudoHeaderChecksum+1
 15106  0053C6  5019               	movf	??_IPV4_PseudoHeaderChecksum,w,c
 15107  0053C8  261F               	addwf	IPV4_PseudoHeaderChecksum@cksm,f,c
 15108  0053CA  501A               	movf	??_IPV4_PseudoHeaderChecksum+1,w,c
 15109  0053CC  2220               	addwfc	IPV4_PseudoHeaderChecksum@cksm+1,f,c
 15110  0053CE  0E00               	movlw	0
 15111  0053D0  2221               	addwfc	IPV4_PseudoHeaderChecksum@cksm+2,f,c
 15112  0053D2  2222               	addwfc	IPV4_PseudoHeaderChecksum@cksm+3,f,c
 15113                           
 15114                           ; BSR set to: 1
 15115                           ;ipv4.c: 104: len--;
 15116  0053D4  061E               	decf	IPV4_PseudoHeaderChecksum@len,f,c
 15117                           
 15118                           ; BSR set to: 1
 15119                           ;ipv4.c: 105: v++;
 15120  0053D6  0E02               	movlw	2
 15121  0053D8  261D               	addwf	IPV4_PseudoHeaderChecksum@v,f,c
 15122  0053DA                     l8958:
 15123                           
 15124                           ; BSR set to: 1
 15125  0053DA  501E               	movf	IPV4_PseudoHeaderChecksum@len,w,c
 15126  0053DC  E1ED               	bnz	l8952
 15127                           
 15128                           ; BSR set to: 1
 15129                           ;ipv4.c: 106: }
 15130                           ;ipv4.c: 109: cksm = (cksm & 0x0FFFF) + (cksm>>16);
 15131  0053DE  501F               	movf	IPV4_PseudoHeaderChecksum@cksm,w,c
 15132  0053E0  6E19               	movwf	??_IPV4_PseudoHeaderChecksum& (0+255),c
 15133  0053E2  5020               	movf	IPV4_PseudoHeaderChecksum@cksm+1,w,c
 15134  0053E4  6E1A               	movwf	(??_IPV4_PseudoHeaderChecksum+1)& (0+255),c
 15135  0053E6  6A1B               	clrf	(??_IPV4_PseudoHeaderChecksum+2)& (0+255),c
 15136  0053E8  6A1C               	clrf	(??_IPV4_PseudoHeaderChecksum+3)& (0+255),c
 15137  0053EA  5021               	movf	IPV4_PseudoHeaderChecksum@cksm+2,w,c
 15138  0053EC  2419               	addwf	??_IPV4_PseudoHeaderChecksum,w,c
 15139  0053EE  6E1F               	movwf	IPV4_PseudoHeaderChecksum@cksm,c
 15140  0053F0  5022               	movf	IPV4_PseudoHeaderChecksum@cksm+3,w,c
 15141  0053F2  201A               	addwfc	??_IPV4_PseudoHeaderChecksum+1,w,c
 15142  0053F4  6E20               	movwf	IPV4_PseudoHeaderChecksum@cksm+1,c
 15143  0053F6  0E00               	movlw	0
 15144  0053F8  201B               	addwfc	??_IPV4_PseudoHeaderChecksum+2,w,c
 15145  0053FA  6E21               	movwf	IPV4_PseudoHeaderChecksum@cksm+2,c
 15146  0053FC  0E00               	movlw	0
 15147  0053FE  201C               	addwfc	??_IPV4_PseudoHeaderChecksum+3,w,c
 15148  005400  6E22               	movwf	IPV4_PseudoHeaderChecksum@cksm+3,c
 15149                           
 15150                           ; BSR set to: 1
 15151                           ;ipv4.c: 112: return cksm;
 15152  005402  C01F  F017         	movff	IPV4_PseudoHeaderChecksum@cksm,?_IPV4_PseudoHeaderChecksum
 15153  005406  C020  F018         	movff	IPV4_PseudoHeaderChecksum@cksm+1,?_IPV4_PseudoHeaderChecksum+1
 15154                           
 15155                           ; BSR set to: 1
 15156  00540A  0012               	return		;funcret
 15157  00540C                     __end_of_IPV4_PseudoHeaderChecksum:
 15158                           	opt stack 0
 15159                           tosu	equ	0xFFF
 15160                           tosh	equ	0xFFE
 15161                           tosl	equ	0xFFD
 15162                           pclath	equ	0xFFA
 15163                           tblptru	equ	0xFF8
 15164                           tblptrh	equ	0xFF7
 15165                           tblptrl	equ	0xFF6
 15166                           tablat	equ	0xFF5
 15167                           prodh	equ	0xFF4
 15168                           prodl	equ	0xFF3
 15169                           intcon	equ	0xFF2
 15170                           indf0	equ	0xFEF
 15171                           postinc0	equ	0xFEE
 15172                           fsr0h	equ	0xFEA
 15173                           fsr0l	equ	0xFE9
 15174                           wreg	equ	0xFE8
 15175                           indf1	equ	0xFE7
 15176                           postinc1	equ	0xFE6
 15177                           postdec1	equ	0xFE5
 15178                           plusw1	equ	0xFE3
 15179                           fsr1h	equ	0xFE2
 15180                           fsr1l	equ	0xFE1
 15181                           indf2	equ	0xFDF
 15182                           postinc2	equ	0xFDE
 15183                           postdec2	equ	0xFDD
 15184                           plusw2	equ	0xFDB
 15185                           fsr2h	equ	0xFDA
 15186                           fsr2l	equ	0xFD9
 15187                           status	equ	0xFD8
 15188                           
 15189 ;; *************** function _ICMP_Receive *****************
 15190 ;; Defined at:
 15191 ;;		line 56 in file "../../TCPIP Library/source/icmp.c"
 15192 ;; Parameters:    Size  Location     Type
 15193 ;;  ipv4Hdr         2   79[BANK0 ] PTR struct .
 15194 ;;		 -> ipv4Header(20), 
 15195 ;; Auto vars:     Size  Location     Type
 15196 ;;  icmpHdr         8   86[BANK0 ] struct .
 15197 ;;  ret             1    0        enum E366
 15198 ;; Return value:  Size  Location     Type
 15199 ;;                  1    wreg      enum E366
 15200 ;; Registers used:
 15201 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15202 ;; Tracked objects:
 15203 ;;		On entry : F/0
 15204 ;;		On exit  : F/0
 15205 ;;		Unchanged: 0/0
 15206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15207 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15208 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15209 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15210 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15211 ;;Total ram usage:       15 bytes
 15212 ;; Hardware stack levels used:    1
 15213 ;; Hardware stack levels required when called:   14
 15214 ;; This function calls:
 15215 ;;		_ETH_ReadBlock
 15216 ;;		_ETH_SaveRDPT
 15217 ;;		_ICMP_EchoReply
 15218 ;; This function is called by:
 15219 ;;		_IPV4_Packet
 15220 ;; This function uses a non-reentrant model
 15221 ;;
 15222                           
 15223                           	psect	text48
 15224  005B88                     __ptext48:
 15225                           	opt stack 0
 15226  005B88                     _ICMP_Receive:
 15227                           	opt stack 13
 15228                           
 15229                           ; BSR set to: 0
 15230                           ;icmp.c: 60: ETH_ReadBlock((char *)&icmpHdr, sizeof(icmpHeader_t));
 15231                           
 15232                           ; BSR set to: 0
 15233                           
 15234                           ; BSR set to: 1
 15235                           ;incstack = 0
 15236  005B88  0EB6               	movlw	low ICMP_Receive@icmpHdr
 15237  005B8A  6E17               	movwf	ETH_ReadBlock@buffer,c
 15238  005B8C  6A18               	clrf	ETH_ReadBlock@buffer+1,c
 15239  005B8E  D81F               	call	PL747	;call to abstracted procedure
 15240  005B90  EC92  F02C         	call	_ETH_ReadBlock	;wreg free
 15241                           
 15242                           ; BSR set to: 1
 15243                           ;icmp.c: 61: ETH_SaveRDPT();
 15244  005B94  EC4B  F032         	call	_ETH_SaveRDPT	;wreg free
 15245                           
 15246                           ;icmp.c: 63: switch(((((uint16_t)(icmpTypeCodes_t)icmpHdr.typeCode & (uint16_t)0xFF00) >
      +                          > 8) | (((uint16_t)(icmpTypeCodes_t)icmpHdr.typeCode & (uint16_t)0x00FF) << 8)))
 15247  005B98  D008               	goto	l8938
 15248  005B9A                     l8934:
 15249                           
 15250                           ; BSR set to: 0
 15251  005B9A  0EB6               	movlw	low ICMP_Receive@icmpHdr
 15252  005B9C  6F9F               	movwf	ICMP_EchoReply@icmpHdr& (0+255),b
 15253  005B9E  C0AF  F0A0         	movff	ICMP_Receive@ipv4Hdr,ICMP_EchoReply@ipv4Hdr
 15254  005BA2  C0B0  F0A1         	movff	ICMP_Receive@ipv4Hdr+1,ICMP_EchoReply@ipv4Hdr+1
 15255  005BA6  EF35  F024         	goto	_ICMP_EchoReply	;wreg free
 15256  005BAA                     l8938:
 15257  005BAA  0100               	movlb	0	; () banked
 15258  005BAC  51B6               	movf	ICMP_Receive@icmpHdr& (0+255),w,b
 15259  005BAE  6FB2               	movwf	(??_ICMP_Receive+1)& (0+255),b
 15260  005BB0  6BB1               	clrf	??_ICMP_Receive& (0+255),b
 15261  005BB2  51B7               	movf	(ICMP_Receive@icmpHdr+1)& (0+255),w,b
 15262  005BB4  6FB3               	movwf	(??_ICMP_Receive+2)& (0+255),b
 15263  005BB6  6BB4               	clrf	(??_ICMP_Receive+3)& (0+255),b
 15264  005BB8  51B1               	movf	??_ICMP_Receive& (0+255),w,b
 15265  005BBA  13B3               	iorwf	(??_ICMP_Receive+2)& (0+255),f,b
 15266  005BBC  51B2               	movf	(??_ICMP_Receive+1)& (0+255),w,b
 15267  005BBE  13B4               	iorwf	(??_ICMP_Receive+3)& (0+255),f,b
 15268                           
 15269                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15270                           ; Switch size 1, requested type "space"
 15271                           ; Number of cases is 1, Range of values is 8 to 8
 15272                           ; switch strategies available:
 15273                           ; Name         Instructions Cycles
 15274                           ; simple_byte            4     3 (average)
 15275                           ;	Chosen strategy is simple_byte
 15276  005BC0  51B4               	movf	(??_ICMP_Receive+3)& (0+255),w,b
 15277  005BC2  0A08               	xorlw	8	; case 8
 15278  005BC4  A4D8               	btfss	status,2,c
 15279  005BC6  0012               	return	
 15280                           
 15281                           ; BSR set to: 0
 15282                           ; Switch size 1, requested type "space"
 15283                           ; Number of cases is 1, Range of values is 0 to 0
 15284                           ; switch strategies available:
 15285                           ; Name         Instructions Cycles
 15286                           ; simple_byte            4     3 (average)
 15287                           ;	Chosen strategy is simple_byte
 15288  005BC8  51B3               	movf	(??_ICMP_Receive+2)& (0+255),w,b
 15289  005BCA  E0E7               	bz	l8934
 15290                           
 15291                           ; BSR set to: 0
 15292  005BCC  0012               	return		;funcret
 15293  005BCE                     __end_of_ICMP_Receive:
 15294                           	opt stack 0
 15295  005BCE                     PL747:
 15296                           	opt stack 12
 15297  005BCE  6A1A               	clrf	ETH_ReadBlock@length+1,c
 15298  005BD0  0E08               	movlw	8
 15299  005BD2  6E19               	movwf	ETH_ReadBlock@length,c
 15300  005BD4  0C08               	retlw	8
 15301  005BD6                     __end_ofPL747:
 15302                           	opt stack 0
 15303                           tosu	equ	0xFFF
 15304                           tosh	equ	0xFFE
 15305                           tosl	equ	0xFFD
 15306                           pclath	equ	0xFFA
 15307                           tblptru	equ	0xFF8
 15308                           tblptrh	equ	0xFF7
 15309                           tblptrl	equ	0xFF6
 15310                           tablat	equ	0xFF5
 15311                           prodh	equ	0xFF4
 15312                           prodl	equ	0xFF3
 15313                           intcon	equ	0xFF2
 15314                           indf0	equ	0xFEF
 15315                           postinc0	equ	0xFEE
 15316                           fsr0h	equ	0xFEA
 15317                           fsr0l	equ	0xFE9
 15318                           wreg	equ	0xFE8
 15319                           indf1	equ	0xFE7
 15320                           postinc1	equ	0xFE6
 15321                           postdec1	equ	0xFE5
 15322                           plusw1	equ	0xFE3
 15323                           fsr1h	equ	0xFE2
 15324                           fsr1l	equ	0xFE1
 15325                           indf2	equ	0xFDF
 15326                           postinc2	equ	0xFDE
 15327                           postdec2	equ	0xFDD
 15328                           plusw2	equ	0xFDB
 15329                           fsr2h	equ	0xFDA
 15330                           fsr2l	equ	0xFD9
 15331                           status	equ	0xFD8
 15332                           
 15333 ;; *************** function _ICMP_EchoReply *****************
 15334 ;; Defined at:
 15335 ;;		line 86 in file "../../TCPIP Library/source/icmp.c"
 15336 ;; Parameters:    Size  Location     Type
 15337 ;;  icmpHdr         1   63[BANK0 ] PTR struct .
 15338 ;;		 -> ICMP_Receive@icmpHdr(8), 
 15339 ;;  ipv4Hdr         2   64[BANK0 ] PTR struct .
 15340 ;;		 -> ipv4Header(20), 
 15341 ;; Auto vars:     Size  Location     Type
 15342 ;;  ipv4PayloadL    2   76[BANK0 ] unsigned int 
 15343 ;;  icmp_cksm_st    2    0        unsigned int 
 15344 ;;  cksm            2   74[BANK0 ] unsigned int 
 15345 ;;  ret             1   78[BANK0 ] enum E366
 15346 ;; Return value:  Size  Location     Type
 15347 ;;                  1    wreg      enum E366
 15348 ;; Registers used:
 15349 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15350 ;; Tracked objects:
 15351 ;;		On entry : F/0
 15352 ;;		On exit  : F/0
 15353 ;;		Unchanged: 0/0
 15354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15355 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15356 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15357 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15358 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15359 ;;Total ram usage:       16 bytes
 15360 ;; Hardware stack levels used:    1
 15361 ;; Hardware stack levels required when called:   13
 15362 ;; This function calls:
 15363 ;;		_ETH_Copy
 15364 ;;		_ETH_Insert
 15365 ;;		_ETH_SaveRDPT
 15366 ;;		_ETH_TxComputeChecksum
 15367 ;;		_ETH_Write16
 15368 ;;		_IPV4_Send
 15369 ;;		_IPv4_Start
 15370 ;; This function is called by:
 15371 ;;		_ICMP_Receive
 15372 ;; This function uses a non-reentrant model
 15373 ;;
 15374                           
 15375                           	psect	text49
 15376  00486A                     __ptext49:
 15377                           	opt stack 0
 15378  00486A                     _ICMP_EchoReply:
 15379                           	opt stack 13
 15380                           
 15381                           ; BSR set to: 0
 15382                           ;icmp.c: 89: error_msg ret = ERROR;
 15383                           
 15384                           ; BSR set to: 0
 15385                           ;incstack = 0
 15386  00486A  6BAE               	clrf	ICMP_EchoReply@ret& (0+255),b
 15387                           
 15388                           ; BSR set to: 0
 15389                           ;icmp.c: 91: ret = IPv4_Start(ipv4Hdr->srcIpAddress, ipv4Hdr->protocol);
 15390  00486C  EE20 F00C          	lfsr	2,12
 15391  004870  D89A               	call	PL619	;call to abstracted procedure
 15392  004872  CFDE F022          	movff	postinc2,IPv4_Start@destAddress
 15393  004876  CFDE F023          	movff	postinc2,IPv4_Start@destAddress+1
 15394  00487A  CFDE F024          	movff	postinc2,IPv4_Start@destAddress+2
 15395  00487E  CFDE F025          	movff	postinc2,IPv4_Start@destAddress+3
 15396  004882  EE20 F009          	lfsr	2,9
 15397  004886  D88F               	call	PL619	;call to abstracted procedure
 15398  004888  50DF               	movf	indf2,w,c
 15399  00488A  6E26               	movwf	IPv4_Start@protocol,c
 15400  00488C  EC0D  F022         	call	_IPv4_Start	;wreg free
 15401  004890  6FAE               	movwf	ICMP_EchoReply@ret& (0+255),b
 15402                           
 15403                           ; BSR set to: 0
 15404                           ;icmp.c: 92: if(ret == SUCCESS)
 15405  004892  05AE               	decf	ICMP_EchoReply@ret& (0+255),w,b
 15406  004894  E16A               	bnz	l8498
 15407                           
 15408                           ; BSR set to: 0
 15409                           ;icmp.c: 93: {
 15410                           ;icmp.c: 94: uint16_t icmp_cksm_start;
 15411                           ;icmp.c: 95: uint16_t ipv4PayloadLength = ipv4Hdr->length - sizeof(ipv4Header_t);
 15412  004896  EE20 F002          	lfsr	2,2
 15413  00489A  D885               	call	PL619	;call to abstracted procedure
 15414  00489C  CFDE F0A2          	movff	postinc2,??_ICMP_EchoReply
 15415  0048A0  CFDD F0A3          	movff	postdec2,??_ICMP_EchoReply+1
 15416  0048A4  0EEC               	movlw	236
 15417  0048A6  25A2               	addwf	??_ICMP_EchoReply& (0+255),w,b
 15418  0048A8  6FAC               	movwf	ICMP_EchoReply@ipv4PayloadLength& (0+255),b
 15419  0048AA  0EFF               	movlw	255
 15420  0048AC  21A3               	addwfc	(??_ICMP_EchoReply+1)& (0+255),w,b
 15421  0048AE  6FAD               	movwf	(ICMP_EchoReply@ipv4PayloadLength+1)& (0+255),b
 15422                           
 15423                           ;icmp.c: 97: ipv4PayloadLength = ipv4Hdr->length - (uint16_t)(ipv4Hdr->ihl << 2);
 15424  0048B0  C0A0  FFD9         	movff	ICMP_EchoReply@ipv4Hdr,fsr2l
 15425  0048B4  C0A1  FFDA         	movff	ICMP_EchoReply@ipv4Hdr+1,fsr2h
 15426  0048B8  50DF               	movf	223,w,c
 15427  0048BA  0B0F               	andlw	15
 15428  0048BC  6FA2               	movwf	??_ICMP_EchoReply& (0+255),b
 15429  0048BE  6BA3               	clrf	(??_ICMP_EchoReply+1)& (0+255),b
 15430  0048C0  90D8               	bcf	status,0,c
 15431  0048C2  37A2               	rlcf	??_ICMP_EchoReply& (0+255),f,b
 15432  0048C4  37A3               	rlcf	(??_ICMP_EchoReply+1)& (0+255),f,b
 15433  0048C6  90D8               	bcf	status,0,c
 15434  0048C8  37A2               	rlcf	??_ICMP_EchoReply& (0+255),f,b
 15435  0048CA  37A3               	rlcf	(??_ICMP_EchoReply+1)& (0+255),f,b
 15436  0048CC  EE20 F002          	lfsr	2,2
 15437  0048D0  D86A               	call	PL619	;call to abstracted procedure
 15438  0048D2  CFDE F0A4          	movff	postinc2,??_ICMP_EchoReply+2
 15439  0048D6  CFDD F0A5          	movff	postdec2,??_ICMP_EchoReply+3
 15440  0048DA  51A2               	movf	??_ICMP_EchoReply& (0+255),w,b
 15441  0048DC  5DA4               	subwf	(??_ICMP_EchoReply+2)& (0+255),w,b
 15442  0048DE  6FAC               	movwf	ICMP_EchoReply@ipv4PayloadLength& (0+255),b
 15443  0048E0  51A3               	movf	(??_ICMP_EchoReply+1)& (0+255),w,b
 15444  0048E2  59A5               	subwfb	(??_ICMP_EchoReply+3)& (0+255),w,b
 15445  0048E4  6FAD               	movwf	(ICMP_EchoReply@ipv4PayloadLength+1)& (0+255),b
 15446                           
 15447                           ; BSR set to: 0
 15448                           ;icmp.c: 99: ETH_Write16(ECHO_REPLY);
 15449  0048E6  6A18               	clrf	ETH_Write16@data+1,c
 15450  0048E8  6A17               	clrf	ETH_Write16@data,c
 15451  0048EA  EC34  F032         	call	_ETH_Write16	;wreg free
 15452                           
 15453                           ;icmp.c: 100: ETH_Write16(0);
 15454  0048EE  6A18               	clrf	ETH_Write16@data+1,c
 15455  0048F0  6A17               	clrf	ETH_Write16@data,c
 15456  0048F2  EC34  F032         	call	_ETH_Write16	;wreg free
 15457                           
 15458                           ;icmp.c: 101: ETH_Write16(((((uint16_t)icmpHdr->identifier & (uint16_t)0xFF00) >> 8) | (
      +                          ((uint16_t)icmpHdr->identifier & (uint16_t)0x00FF) << 8)));
 15459  0048F6  D85C               	call	PL727	;call to abstracted procedure
 15460  0048F8  0E04               	movlw	4
 15461  0048FA  D849               	call	PL575	;call to abstracted procedure
 15462  0048FC  0E04               	movlw	4
 15463  0048FE  D837               	call	PL509	;call to abstracted procedure
 15464  004900  EC34  F032         	call	_ETH_Write16	;wreg free
 15465                           
 15466                           ;icmp.c: 102: ETH_Write16(((((uint16_t)icmpHdr->sequence & (uint16_t)0xFF00) >> 8) | (((
      +                          uint16_t)icmpHdr->sequence & (uint16_t)0x00FF) << 8)));
 15467  004904  D855               	call	PL727	;call to abstracted procedure
 15468  004906  0E06               	movlw	6
 15469  004908  D842               	call	PL575	;call to abstracted procedure
 15470  00490A  0E06               	movlw	6
 15471  00490C  D830               	call	PL509	;call to abstracted procedure
 15472  00490E  EC34  F032         	call	_ETH_Write16	;wreg free
 15473                           
 15474                           ;icmp.c: 105: ret = ETH_Copy(ipv4PayloadLength - sizeof(icmpHeader_t));
 15475  004912  0EF8               	movlw	248
 15476  004914  0100               	movlb	0	; () banked
 15477  004916  25AC               	addwf	ICMP_EchoReply@ipv4PayloadLength& (0+255),w,b
 15478  004918  6F6D               	movwf	ETH_Copy@len& (0+255),b
 15479  00491A  0EFF               	movlw	255
 15480  00491C  21AD               	addwfc	(ICMP_EchoReply@ipv4PayloadLength+1)& (0+255),w,b
 15481  00491E  6F6E               	movwf	(ETH_Copy@len+1)& (0+255),b
 15482  004920  EC73  F027         	call	_ETH_Copy	;wreg free
 15483  004924  0100               	movlb	0	; () banked
 15484  004926  6FAE               	movwf	ICMP_EchoReply@ret& (0+255),b
 15485                           
 15486                           ; BSR set to: 0
 15487                           ;icmp.c: 106: if(ret==SUCCESS)
 15488  004928  05AE               	decf	ICMP_EchoReply@ret& (0+255),w,b
 15489  00492A  E11F               	bnz	l8498
 15490                           
 15491                           ; BSR set to: 0
 15492                           ;icmp.c: 107: {
 15493                           ;icmp.c: 108: ETH_SaveRDPT();
 15494  00492C  EC4B  F032         	call	_ETH_SaveRDPT	;wreg free
 15495                           
 15496                           ;icmp.c: 112: cksm = ETH_TxComputeChecksum(icmp_cksm_start, ipv4PayloadLength, 0);
 15497  004930  6A26               	clrf	ETH_TxComputeChecksum@position+1,c
 15498  004932  0E22               	movlw	34
 15499  004934  6E25               	movwf	ETH_TxComputeChecksum@position,c
 15500  004936  C0AC  F027         	movff	ICMP_EchoReply@ipv4PayloadLength,ETH_TxComputeChecksum@len
 15501  00493A  C0AD  F028         	movff	ICMP_EchoReply@ipv4PayloadLength+1,ETH_TxComputeChecksum@len+1
 15502  00493E  6A2A               	clrf	ETH_TxComputeChecksum@seed+1,c
 15503  004940  6A29               	clrf	ETH_TxComputeChecksum@seed,c
 15504  004942  EC97  F02A         	call	_ETH_TxComputeChecksum	;wreg free
 15505  004946  C025  F0AA         	movff	?_ETH_TxComputeChecksum,ICMP_EchoReply@cksm
 15506  00494A  C026  F0AB         	movff	?_ETH_TxComputeChecksum+1,ICMP_EchoReply@cksm+1
 15507                           
 15508                           ; BSR set to: 0
 15509                           ;icmp.c: 113: ETH_Insert((char *)&cksm,sizeof(cksm),sizeof(ethernetFrame_t) + sizeof(ipv
      +                          4Header_t) + (size_t)(((char*)&((icmpHeader_t *)1)->checksum)-1));
 15510  00494E  0EAA               	movlw	low ICMP_EchoReply@cksm
 15511  004950  EC8C  F02C         	call	PL507	;call to abstracted procedure
 15512  004954  0E24               	movlw	36
 15513  004956  6E1A               	movwf	ETH_Insert@offset,c
 15514  004958  ECA1  F02F         	call	_ETH_Insert	;wreg free
 15515                           
 15516                           ;icmp.c: 114: ret = IPV4_Send(ipv4PayloadLength);
 15517  00495C  C0AC  F031         	movff	ICMP_EchoReply@ipv4PayloadLength,IPV4_Send@payloadLength
 15518  004960  C0AD  F032         	movff	ICMP_EchoReply@ipv4PayloadLength+1,IPV4_Send@payloadLength+1
 15519  004964  EC59  F02C         	call	_IPV4_Send	;wreg free
 15520  004968  6FAE               	movwf	ICMP_EchoReply@ret& (0+255),b
 15521  00496A                     l8498:
 15522                           
 15523                           ; BSR set to: 0
 15524                           ;icmp.c: 115: }
 15525                           ;icmp.c: 116: }
 15526                           ;icmp.c: 117: return ret;
 15527  00496A  51AE               	movf	ICMP_EchoReply@ret& (0+255),w,b
 15528                           
 15529                           ; BSR set to: 0
 15530  00496C  0012               	return		;funcret
 15531  00496E                     __end_of_ICMP_EchoReply:
 15532                           	opt stack 0
 15533  00496E                     PL509:
 15534                           	opt stack 13
 15535  00496E  26D9               	addwf	fsr2l,f,c
 15536  004970  CFDE F0A6          	movff	postinc2,??_ICMP_EchoReply+4
 15537  004974  CFDD F0A7          	movff	postdec2,??_ICMP_EchoReply+5
 15538  004978  C0A7  F0A6         	movff	??_ICMP_EchoReply+5,??_ICMP_EchoReply+4
 15539  00497C  6BA7               	clrf	(??_ICMP_EchoReply+5)& (0+255),b
 15540  00497E  6BA7               	clrf	(??_ICMP_EchoReply+5)& (0+255),b
 15541  004980  51A4               	movf	(??_ICMP_EchoReply+2)& (0+255),w,b
 15542  004982  11A6               	iorwf	(??_ICMP_EchoReply+4)& (0+255),w,b
 15543  004984  6E17               	movwf	ETH_Write16@data,c
 15544  004986  51A5               	movf	(??_ICMP_EchoReply+3)& (0+255),w,b
 15545  004988  11A7               	iorwf	(??_ICMP_EchoReply+5)& (0+255),w,b
 15546  00498A  6E18               	movwf	ETH_Write16@data+1,c
 15547  00498C  0012               	return	
 15548  00498E                     __end_ofPL509:
 15549                           	opt stack 0
 15550  00498E                     PL575:
 15551                           	opt stack 13
 15552  00498E  26D9               	addwf	fsr2l,f,c
 15553  004990  CFDE F0A2          	movff	postinc2,??_ICMP_EchoReply
 15554  004994  CFDD F0A3          	movff	postdec2,??_ICMP_EchoReply+1
 15555  004998  51A2               	movf	??_ICMP_EchoReply& (0+255),w,b
 15556  00499A  6FA5               	movwf	(??_ICMP_EchoReply+3)& (0+255),b
 15557  00499C  6BA4               	clrf	(??_ICMP_EchoReply+2)& (0+255),b
 15558  00499E  519F               	movf	ICMP_EchoReply@icmpHdr& (0+255),w,b
 15559  0049A0  6ED9               	movwf	fsr2l,c
 15560  0049A2  6ADA               	clrf	fsr2h,c
 15561  0049A4  0012               	return	
 15562  0049A6                     __end_ofPL575:
 15563                           	opt stack 0
 15564  0049A6                     PL619:
 15565                           	opt stack 13
 15566  0049A6  51A0               	movf	ICMP_EchoReply@ipv4Hdr& (0+255),w,b
 15567  0049A8  26D9               	addwf	fsr2l,f,c
 15568  0049AA  51A1               	movf	(ICMP_EchoReply@ipv4Hdr+1)& (0+255),w,b
 15569  0049AC  22DA               	addwfc	fsr2h,f,c
 15570  0049AE  0012               	return	
 15571  0049B0                     __end_ofPL619:
 15572                           	opt stack 0
 15573  0049B0                     PL727:
 15574                           	opt stack 13
 15575  0049B0  0100               	movlb	0	; () banked
 15576  0049B2  519F               	movf	ICMP_EchoReply@icmpHdr& (0+255),w,b
 15577  0049B4  6ED9               	movwf	fsr2l,c
 15578  0049B6  6ADA               	clrf	fsr2h,c
 15579  0049B8  0012               	return	
 15580  0049BA                     __end_ofPL727:
 15581                           	opt stack 0
 15582                           tosu	equ	0xFFF
 15583                           tosh	equ	0xFFE
 15584                           tosl	equ	0xFFD
 15585                           pclath	equ	0xFFA
 15586                           tblptru	equ	0xFF8
 15587                           tblptrh	equ	0xFF7
 15588                           tblptrl	equ	0xFF6
 15589                           tablat	equ	0xFF5
 15590                           prodh	equ	0xFF4
 15591                           prodl	equ	0xFF3
 15592                           intcon	equ	0xFF2
 15593                           indf0	equ	0xFEF
 15594                           postinc0	equ	0xFEE
 15595                           fsr0h	equ	0xFEA
 15596                           fsr0l	equ	0xFE9
 15597                           wreg	equ	0xFE8
 15598                           indf1	equ	0xFE7
 15599                           postinc1	equ	0xFE6
 15600                           postdec1	equ	0xFE5
 15601                           plusw1	equ	0xFE3
 15602                           fsr1h	equ	0xFE2
 15603                           fsr1l	equ	0xFE1
 15604                           indf2	equ	0xFDF
 15605                           postinc2	equ	0xFDE
 15606                           postdec2	equ	0xFDD
 15607                           plusw2	equ	0xFDB
 15608                           fsr2h	equ	0xFDA
 15609                           fsr2l	equ	0xFD9
 15610                           status	equ	0xFD8
 15611                           
 15612 ;; *************** function _ETH_SaveRDPT *****************
 15613 ;; Defined at:
 15614 ;;		line 828 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 15615 ;; Parameters:    Size  Location     Type
 15616 ;;		None
 15617 ;; Auto vars:     Size  Location     Type
 15618 ;;		None
 15619 ;; Return value:  Size  Location     Type
 15620 ;;                  1    wreg      void 
 15621 ;; Registers used:
 15622 ;;		None
 15623 ;; Tracked objects:
 15624 ;;		On entry : E/1
 15625 ;;		On exit  : E/0
 15626 ;;		Unchanged: E/0
 15627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15632 ;;Total ram usage:        0 bytes
 15633 ;; Hardware stack levels used:    1
 15634 ;; Hardware stack levels required when called:    8
 15635 ;; This function calls:
 15636 ;;		Nothing
 15637 ;; This function is called by:
 15638 ;;		_ICMP_Receive
 15639 ;;		_ICMP_EchoReply
 15640 ;; This function uses a non-reentrant model
 15641 ;;
 15642                           
 15643                           	psect	text50
 15644  006496                     __ptext50:
 15645                           	opt stack 0
 15646  006496                     _ETH_SaveRDPT:
 15647                           	opt stack 17
 15648                           
 15649                           ;j60_driver.c: 830: ethData.saveRDPT = ERDPT;
 15650                           
 15651                           ; BSR set to: 0
 15652                           ;incstack = 0
 15653  006496  CF7A F1C0          	movff	3962,_ethData+3	;volatile
 15654  00649A  CF7B F1C1          	movff	3963,_ethData+4	;volatile
 15655  00649E  0012               	return		;funcret
 15656  0064A0                     __end_of_ETH_SaveRDPT:
 15657                           	opt stack 0
 15658                           tosu	equ	0xFFF
 15659                           tosh	equ	0xFFE
 15660                           tosl	equ	0xFFD
 15661                           pclath	equ	0xFFA
 15662                           tblptru	equ	0xFF8
 15663                           tblptrh	equ	0xFF7
 15664                           tblptrl	equ	0xFF6
 15665                           tablat	equ	0xFF5
 15666                           prodh	equ	0xFF4
 15667                           prodl	equ	0xFF3
 15668                           intcon	equ	0xFF2
 15669                           indf0	equ	0xFEF
 15670                           postinc0	equ	0xFEE
 15671                           fsr0h	equ	0xFEA
 15672                           fsr0l	equ	0xFE9
 15673                           wreg	equ	0xFE8
 15674                           indf1	equ	0xFE7
 15675                           postinc1	equ	0xFE6
 15676                           postdec1	equ	0xFE5
 15677                           plusw1	equ	0xFE3
 15678                           fsr1h	equ	0xFE2
 15679                           fsr1l	equ	0xFE1
 15680                           indf2	equ	0xFDF
 15681                           postinc2	equ	0xFDE
 15682                           postdec2	equ	0xFDD
 15683                           plusw2	equ	0xFDB
 15684                           fsr2h	equ	0xFDA
 15685                           fsr2l	equ	0xFD9
 15686                           status	equ	0xFD8
 15687                           
 15688 ;; *************** function _ETH_Copy *****************
 15689 ;; Defined at:
 15690 ;;		line 668 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 15691 ;; Parameters:    Size  Location     Type
 15692 ;;  len             2   13[BANK0 ] unsigned int 
 15693 ;; Auto vars:     Size  Location     Type
 15694 ;;  tmp_len         2   17[BANK0 ] unsigned int 
 15695 ;;  timer           2   15[BANK0 ] unsigned int 
 15696 ;; Return value:  Size  Location     Type
 15697 ;;                  1    wreg      enum E6890
 15698 ;; Registers used:
 15699 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15700 ;; Tracked objects:
 15701 ;;		On entry : F/0
 15702 ;;		On exit  : 0/0
 15703 ;;		Unchanged: 0/0
 15704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15705 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15706 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15708 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15709 ;;Total ram usage:        6 bytes
 15710 ;; Hardware stack levels used:    1
 15711 ;; Hardware stack levels required when called:   12
 15712 ;; This function calls:
 15713 ;;		_SYSLOG_Write
 15714 ;;		___wmul
 15715 ;; This function is called by:
 15716 ;;		_ICMP_EchoReply
 15717 ;; This function uses a non-reentrant model
 15718 ;;
 15719                           
 15720                           	psect	text51
 15721  004EE6                     __ptext51:
 15722                           	opt stack 0
 15723  004EE6                     _ETH_Copy:
 15724                           	opt stack 13
 15725                           
 15726                           ; BSR set to: 0
 15727                           ;j60_driver.c: 670: uint16_t timer;
 15728                           ;j60_driver.c: 671: uint16_t tmp_len;
 15729                           ;j60_driver.c: 673: timer = 2 * len;
 15730                           
 15731                           ;incstack = 0
 15732  004EE6  90D8               	bcf	status,0,c
 15733  004EE8  356D               	rlcf	ETH_Copy@len& (0+255),w,b
 15734  004EEA  6F6F               	movwf	ETH_Copy@timer& (0+255),b
 15735  004EEC  356E               	rlcf	(ETH_Copy@len+1)& (0+255),w,b
 15736  004EEE  6F70               	movwf	(ETH_Copy@timer+1)& (0+255),b
 15737                           
 15738                           ;j60_driver.c: 674: while(ECON1bits.DMAST!=0 && --timer) __nop();
 15739  004EF0  D001               	goto	l599
 15740  004EF2                     l600:
 15741                           
 15742                           ; BSR set to: 0
 15743  004EF2  F000               	nop	
 15744  004EF4                     l599:
 15745  004EF4  AAD2               	btfss	4050,5,c	;volatile
 15746  004EF6  D002               	goto	l603
 15747  004EF8  D84A               	call	PL639	;call to abstracted procedure
 15748  004EFA  E1FB               	bnz	l600
 15749  004EFC                     l603:
 15750                           
 15751                           ;j60_driver.c: 675: if(ECON1bits.DMAST==0)
 15752  004EFC  BAD2               	btfsc	4050,5,c	;volatile
 15753  004EFE  D040               	goto	l8262
 15754                           
 15755                           ;j60_driver.c: 676: {
 15756                           ;j60_driver.c: 677: EDMADST = EWRPT;
 15757  004F00  CEE2 FEF4          	movff	3810,3828	;volatile
 15758  004F04  CEE3 FEF5          	movff	3811,3829	;volatile
 15759                           
 15760                           ;j60_driver.c: 678: EDMAST = ethData.saveRDPT;
 15761  004F08  C1C0  FEF0         	movff	_ethData+3,3824	;volatile
 15762  004F0C  C1C1  FEF1         	movff	_ethData+4,3825	;volatile
 15763                           
 15764                           ;j60_driver.c: 680: tmp_len = ethData.saveRDPT + len;
 15765  004F10  0100               	movlb	0	; () banked
 15766  004F12  516D               	movf	ETH_Copy@len& (0+255),w,b
 15767  004F14  0101               	movlb	1	; () banked
 15768  004F16  25C0               	addwf	(_ethData+3)& (0+255),w,b	;volatile
 15769  004F18  0100               	movlb	0	; () banked
 15770  004F1A  6F71               	movwf	ETH_Copy@tmp_len& (0+255),b
 15771  004F1C  516E               	movf	(ETH_Copy@len+1)& (0+255),w,b
 15772  004F1E  0101               	movlb	1	; () banked
 15773  004F20  21C1               	addwfc	(_ethData+4)& (0+255),w,b	;volatile
 15774  004F22  0100               	movlb	0	; () banked
 15775  004F24  6F72               	movwf	(ETH_Copy@tmp_len+1)& (0+255),b
 15776                           
 15777                           ;j60_driver.c: 682: if (tmp_len > ((((8192) - (1518)) - 2)) )
 15778  004F26  0E11               	movlw	17
 15779  004F28  5D71               	subwf	ETH_Copy@tmp_len& (0+255),w,b
 15780  004F2A  0E1A               	movlw	26
 15781  004F2C  5972               	subwfb	(ETH_Copy@tmp_len+1)& (0+255),w,b
 15782  004F2E  E304               	bnc	l8250
 15783                           
 15784                           ; BSR set to: 0
 15785                           ;j60_driver.c: 683: {
 15786                           ;j60_driver.c: 684: tmp_len = tmp_len - ((((8192) - (1518)) - 2));
 15787  004F30  0EF0               	movlw	240
 15788  004F32  2771               	addwf	ETH_Copy@tmp_len& (0+255),f,b
 15789  004F34  0EE5               	movlw	229
 15790  004F36  2372               	addwfc	(ETH_Copy@tmp_len+1)& (0+255),f,b
 15791  004F38                     l8250:
 15792                           
 15793                           ; BSR set to: 0
 15794                           ;j60_driver.c: 685: EDMAND = (0) + tmp_len;
 15795  004F38  C071  FEF2         	movff	ETH_Copy@tmp_len,3826	;volatile
 15796  004F3C  C072  FEF3         	movff	ETH_Copy@tmp_len+1,3827	;volatile
 15797                           
 15798                           ; BSR set to: 0
 15799                           ;j60_driver.c: 690: }
 15800                           ;j60_driver.c: 692: ECON1bits.CSUMEN = 0;
 15801                           
 15802                           ;j60_driver.c: 687: }else
 15803  004F40  98D2               	bcf	4050,4,c	;volatile
 15804                           
 15805                           ;j60_driver.c: 693: ECON1bits.DMAST = 1;
 15806  004F42  8AD2               	bsf	4050,5,c	;volatile
 15807                           
 15808                           ; BSR set to: 0
 15809                           ;j60_driver.c: 695: timer = 40 * len;
 15810  004F44  C06D  F017         	movff	ETH_Copy@len,___wmul@multiplier
 15811  004F48  C06E  F018         	movff	ETH_Copy@len+1,___wmul@multiplier+1
 15812  004F4C  6A1A               	clrf	___wmul@multiplicand+1,c
 15813  004F4E  0E28               	movlw	40
 15814  004F50  6E19               	movwf	___wmul@multiplicand,c
 15815  004F52  EC2E  F031         	call	___wmul	;wreg free
 15816  004F56  C017  F06F         	movff	?___wmul,ETH_Copy@timer
 15817  004F5A  C018  F070         	movff	?___wmul+1,ETH_Copy@timer+1
 15818                           
 15819                           ;j60_driver.c: 696: while(ECON1bits.DMAST!=0 && --timer) __nop();
 15820  004F5E  D001               	goto	l607
 15821  004F60                     l608:
 15822                           
 15823                           ; BSR set to: 0
 15824  004F60  F000               	nop	
 15825  004F62                     l607:
 15826  004F62  AAD2               	btfss	4050,5,c	;volatile
 15827  004F64  D002               	goto	l611
 15828  004F66  D813               	call	PL639	;call to abstracted procedure
 15829  004F68  E1FB               	bnz	l608
 15830  004F6A                     l611:
 15831                           
 15832                           ;j60_driver.c: 697: if(ECON1bits.DMAST == 0)
 15833  004F6A  BAD2               	btfsc	4050,5,c	;volatile
 15834  004F6C  D009               	goto	l8262
 15835                           
 15836                           ;j60_driver.c: 698: {
 15837                           ;j60_driver.c: 699: EWRPT += len;
 15838  004F6E  0100               	movlb	0	; () banked
 15839  004F70  516D               	movf	ETH_Copy@len& (0+255),w,b
 15840  004F72  010E               	movlb	14	; () banked
 15841  004F74  27E2               	addwf	226,f,b	;volatile
 15842  004F76  0100               	movlb	0	; () banked
 15843  004F78  516E               	movf	(ETH_Copy@len+1)& (0+255),w,b
 15844  004F7A  010E               	movlb	14	; () banked
 15845  004F7C  23E3               	addwfc	227,f,b	;volatile
 15846                           
 15847                           ; BSR set to: 14
 15848                           ;j60_driver.c: 700: return SUCCESS;
 15849  004F7E  0C01               	retlw	1
 15850  004F80                     l8262:
 15851                           
 15852                           ;j60_driver.c: 701: }
 15853                           ;j60_driver.c: 702: }
 15854                           ;j60_driver.c: 704: SYSLOG_Write("DMA TIMEOUT!!!");
 15855  004F80  0E77               	movlw	low STR_1
 15856  004F82  EC21  F021         	call	PL547	;call to abstracted procedure
 15857  004F86  ECDD  F030         	call	_SYSLOG_Write	;wreg free
 15858  004F8A  00FF               	reset		;# 
 15859                           
 15860                           ;j60_driver.c: 706: return DMA_TIMEOUT;
 15861  004F8C  0C0C               	retlw	12	;funcret
 15862  004F8E                     __end_of_ETH_Copy:
 15863                           	opt stack 0
 15864  004F8E                     PL639:
 15865                           	opt stack 13
 15866  004F8E  0100               	movlb	0	; () banked
 15867  004F90  076F               	decf	ETH_Copy@timer& (0+255),f,b
 15868  004F92  A0D8               	btfss	status,0,c
 15869  004F94  0770               	decf	(ETH_Copy@timer+1)& (0+255),f,b
 15870  004F96  516F               	movf	ETH_Copy@timer& (0+255),w,b
 15871  004F98  1170               	iorwf	(ETH_Copy@timer+1)& (0+255),w,b
 15872  004F9A  0012               	return	
 15873  004F9C                     __end_ofPL639:
 15874                           	opt stack 0
 15875                           tosu	equ	0xFFF
 15876                           tosh	equ	0xFFE
 15877                           tosl	equ	0xFFD
 15878                           pclath	equ	0xFFA
 15879                           tblptru	equ	0xFF8
 15880                           tblptrh	equ	0xFF7
 15881                           tblptrl	equ	0xFF6
 15882                           tablat	equ	0xFF5
 15883                           prodh	equ	0xFF4
 15884                           prodl	equ	0xFF3
 15885                           intcon	equ	0xFF2
 15886                           indf0	equ	0xFEF
 15887                           postinc0	equ	0xFEE
 15888                           fsr0h	equ	0xFEA
 15889                           fsr0l	equ	0xFE9
 15890                           wreg	equ	0xFE8
 15891                           indf1	equ	0xFE7
 15892                           postinc1	equ	0xFE6
 15893                           postdec1	equ	0xFE5
 15894                           plusw1	equ	0xFE3
 15895                           fsr1h	equ	0xFE2
 15896                           fsr1l	equ	0xFE1
 15897                           indf2	equ	0xFDF
 15898                           postinc2	equ	0xFDE
 15899                           postdec2	equ	0xFDD
 15900                           plusw2	equ	0xFDB
 15901                           fsr2h	equ	0xFDA
 15902                           fsr2l	equ	0xFD9
 15903                           status	equ	0xFD8
 15904                           
 15905 ;; *************** function ___wmul *****************
 15906 ;; Defined at:
 15907 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
 15908 ;; Parameters:    Size  Location     Type
 15909 ;;  multiplier      2   22[COMRAM] unsigned int 
 15910 ;;  multiplicand    2   24[COMRAM] unsigned int 
 15911 ;; Auto vars:     Size  Location     Type
 15912 ;;  product         2   26[COMRAM] unsigned int 
 15913 ;; Return value:  Size  Location     Type
 15914 ;;                  2   22[COMRAM] unsigned int 
 15915 ;; Registers used:
 15916 ;;		wreg, status,2, status,0, prodl, prodh
 15917 ;; Tracked objects:
 15918 ;;		On entry : F/0
 15919 ;;		On exit  : F/0
 15920 ;;		Unchanged: F/0
 15921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15922 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15923 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15925 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15926 ;;Total ram usage:        6 bytes
 15927 ;; Hardware stack levels used:    1
 15928 ;; Hardware stack levels required when called:    8
 15929 ;; This function calls:
 15930 ;;		Nothing
 15931 ;; This function is called by:
 15932 ;;		_ETH_Copy
 15933 ;; This function uses a non-reentrant model
 15934 ;;
 15935                           
 15936                           	psect	text52
 15937  00625C                     __ptext52:
 15938                           	opt stack 0
 15939  00625C                     ___wmul:
 15940                           	opt stack 16
 15941                           
 15942                           ; BSR set to: 0
 15943                           
 15944                           ;incstack = 0
 15945  00625C  5017               	movf	___wmul@multiplier,w,c
 15946  00625E  0219               	mulwf	___wmul@multiplicand,c
 15947  006260  CFF3 F01B          	movff	prodl,___wmul@product
 15948  006264  CFF4 F01C          	movff	prodh,___wmul@product+1
 15949  006268  5017               	movf	___wmul@multiplier,w,c
 15950  00626A  021A               	mulwf	___wmul@multiplicand+1,c
 15951  00626C  50F3               	movf	prodl,w,c
 15952  00626E  261C               	addwf	___wmul@product+1,f,c
 15953  006270  5018               	movf	___wmul@multiplier+1,w,c
 15954  006272  0219               	mulwf	___wmul@multiplicand,c
 15955  006274  50F3               	movf	prodl,w,c
 15956  006276  261C               	addwf	___wmul@product+1,f,c
 15957                           
 15958                           ; BSR set to: 0
 15959  006278  C01B  F017         	movff	___wmul@product,?___wmul
 15960  00627C  C01C  F018         	movff	___wmul@product+1,?___wmul+1
 15961                           
 15962                           ; BSR set to: 0
 15963  006280  0012               	return		;funcret
 15964  006282                     __end_of___wmul:
 15965                           	opt stack 0
 15966                           tosu	equ	0xFFF
 15967                           tosh	equ	0xFFE
 15968                           tosl	equ	0xFFD
 15969                           pclath	equ	0xFFA
 15970                           tblptru	equ	0xFF8
 15971                           tblptrh	equ	0xFF7
 15972                           tblptrl	equ	0xFF6
 15973                           tablat	equ	0xFF5
 15974                           prodh	equ	0xFF4
 15975                           prodl	equ	0xFF3
 15976                           intcon	equ	0xFF2
 15977                           indf0	equ	0xFEF
 15978                           postinc0	equ	0xFEE
 15979                           fsr0h	equ	0xFEA
 15980                           fsr0l	equ	0xFE9
 15981                           wreg	equ	0xFE8
 15982                           indf1	equ	0xFE7
 15983                           postinc1	equ	0xFE6
 15984                           postdec1	equ	0xFE5
 15985                           plusw1	equ	0xFE3
 15986                           fsr1h	equ	0xFE2
 15987                           fsr1l	equ	0xFE1
 15988                           indf2	equ	0xFDF
 15989                           postinc2	equ	0xFDE
 15990                           postdec2	equ	0xFDD
 15991                           plusw2	equ	0xFDB
 15992                           fsr2h	equ	0xFDA
 15993                           fsr2l	equ	0xFD9
 15994                           status	equ	0xFD8
 15995                           
 15996 ;; *************** function _SYSLOG_Write *****************
 15997 ;; Defined at:
 15998 ;;		line 50 in file "../../TCPIP Library/source/syslog.c"
 15999 ;; Parameters:    Size  Location     Type
 16000 ;;  message         2   48[COMRAM] PTR const unsigned char 
 16001 ;;		 -> main@str(32), STR_8(13), STR_7(17), STR_6(7), 
 16002 ;;		 -> STR_5(10), STR_1(15), 
 16003 ;; Auto vars:     Size  Location     Type
 16004 ;;  t               2   11[BANK0 ] unsigned int 
 16005 ;; Return value:  Size  Location     Type
 16006 ;;                  1    wreg      void 
 16007 ;; Registers used:
 16008 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16009 ;; Tracked objects:
 16010 ;;		On entry : 0/1
 16011 ;;		On exit  : 0/0
 16012 ;;		Unchanged: 0/0
 16013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16014 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16015 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16017 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16018 ;;Total ram usage:        4 bytes
 16019 ;; Hardware stack levels used:    1
 16020 ;; Hardware stack levels required when called:   11
 16021 ;; This function calls:
 16022 ;;		_printf
 16023 ;;		_time
 16024 ;; This function is called by:
 16025 ;;		_ETH_Copy
 16026 ;;		_TCP_Server
 16027 ;;		_main
 16028 ;; This function uses a non-reentrant model
 16029 ;;
 16030                           
 16031                           	psect	text53
 16032  0061BA                     __ptext53:
 16033                           	opt stack 0
 16034  0061BA                     _SYSLOG_Write:
 16035                           	opt stack 18
 16036                           
 16037                           ;syslog.c: 52: unsigned int t = (unsigned int) time(0);
 16038                           
 16039                           ; BSR set to: 0
 16040                           ;incstack = 0
 16041  0061BA  6A17               	clrf	time@t,c
 16042  0061BC  6A18               	clrf	time@t+1,c
 16043  0061BE  EC72  F02D         	call	_time	;wreg free
 16044  0061C2  C017  F06B         	movff	?_time,SYSLOG_Write@t
 16045  0061C6  C018  F06C         	movff	?_time+1,SYSLOG_Write@t+1
 16046                           
 16047                           ;syslog.c: 53: printf("%u : %s\r\n",t,message);
 16048  0061CA  0EA9               	movlw	low STR_4
 16049  0061CC  0100               	movlb	0	; () banked
 16050  0061CE  6F60               	movwf	printf@f& (0+255),b
 16051  0061D0  C06B  F061         	movff	SYSLOG_Write@t,?_printf+1
 16052  0061D4  C06C  F062         	movff	SYSLOG_Write@t+1,?_printf+2
 16053  0061D8  C031  F063         	movff	SYSLOG_Write@message,?_printf+3
 16054  0061DC  C032  F064         	movff	SYSLOG_Write@message+1,?_printf+4
 16055  0061E0  EF53  F031         	goto	_printf	;wreg free
 16056  0061E4                     __end_of_SYSLOG_Write:
 16057                           	opt stack 0
 16058                           tosu	equ	0xFFF
 16059                           tosh	equ	0xFFE
 16060                           tosl	equ	0xFFD
 16061                           pclath	equ	0xFFA
 16062                           tblptru	equ	0xFF8
 16063                           tblptrh	equ	0xFF7
 16064                           tblptrl	equ	0xFF6
 16065                           tablat	equ	0xFF5
 16066                           prodh	equ	0xFF4
 16067                           prodl	equ	0xFF3
 16068                           intcon	equ	0xFF2
 16069                           indf0	equ	0xFEF
 16070                           postinc0	equ	0xFEE
 16071                           fsr0h	equ	0xFEA
 16072                           fsr0l	equ	0xFE9
 16073                           wreg	equ	0xFE8
 16074                           indf1	equ	0xFE7
 16075                           postinc1	equ	0xFE6
 16076                           postdec1	equ	0xFE5
 16077                           plusw1	equ	0xFE3
 16078                           fsr1h	equ	0xFE2
 16079                           fsr1l	equ	0xFE1
 16080                           indf2	equ	0xFDF
 16081                           postinc2	equ	0xFDE
 16082                           postdec2	equ	0xFDD
 16083                           plusw2	equ	0xFDB
 16084                           fsr2h	equ	0xFDA
 16085                           fsr2l	equ	0xFD9
 16086                           status	equ	0xFD8
 16087                           
 16088 ;; *************** function _printf *****************
 16089 ;; Defined at:
 16090 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\printf.c"
 16091 ;; Parameters:    Size  Location     Type
 16092 ;;  f               1    0[BANK0 ] PTR const unsigned char 
 16093 ;;		 -> STR_4(10), STR_3(28), 
 16094 ;; Auto vars:     Size  Location     Type
 16095 ;;  pb              5    6[BANK0 ] struct __prbuf
 16096 ;;  ap              1    5[BANK0 ] PTR void [1]
 16097 ;;		 -> ?_sprintf(2), ?_printf(2), 
 16098 ;; Return value:  Size  Location     Type
 16099 ;;                  2    0[BANK0 ] int 
 16100 ;; Registers used:
 16101 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16102 ;; Tracked objects:
 16103 ;;		On entry : F/0
 16104 ;;		On exit  : 0/0
 16105 ;;		Unchanged: 0/0
 16106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16107 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16108 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16110 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16111 ;;Total ram usage:       11 bytes
 16112 ;; Hardware stack levels used:    1
 16113 ;; Hardware stack levels required when called:   10
 16114 ;; This function calls:
 16115 ;;		__doprnt
 16116 ;; This function is called by:
 16117 ;;		_SYSLOG_Init
 16118 ;;		_SYSLOG_Write
 16119 ;; This function uses a non-reentrant model
 16120 ;;
 16121                           
 16122                           	psect	text54
 16123  0062A6                     __ptext54:
 16124                           	opt stack 0
 16125  0062A6                     _printf:
 16126                           	opt stack 18
 16127                           
 16128                           ; BSR set to: 0
 16129                           
 16130                           ;incstack = 0
 16131  0062A6  6B66               	clrf	printf@pb& (0+255),b
 16132  0062A8  6B67               	clrf	(printf@pb+1)& (0+255),b
 16133                           
 16134                           ; BSR set to: 0
 16135  0062AA  0EA4               	movlw	low _putch
 16136  0062AC  6F68               	movwf	(printf@pb+2)& (0+255),b
 16137  0062AE  0E63               	movlw	high _putch
 16138  0062B0  6F69               	movwf	(printf@pb+3)& (0+255),b
 16139  0062B2  0E00               	movlw	low (_putch shr (0+16))
 16140  0062B4  6F6A               	movwf	(printf@pb+4)& (0+255),b
 16141  0062B6  0E61               	movlw	low (?_printf+1)
 16142  0062B8  6F65               	movwf	printf@ap& (0+255),b
 16143                           
 16144                           ; BSR set to: 0
 16145                           ;	Return value of _printf is never used
 16146  0062BA  0E66               	movlw	low printf@pb
 16147  0062BC  6E23               	movwf	__doprnt@pb,c
 16148  0062BE  C060  F024         	movff	printf@f,__doprnt@f
 16149  0062C2  0E65               	movlw	low printf@ap
 16150  0062C4  6E25               	movwf	__doprnt@ap,c
 16151  0062C6  EF47  F01B         	goto	__doprnt	;wreg free
 16152  0062CA                     __end_of_printf:
 16153                           	opt stack 0
 16154                           tosu	equ	0xFFF
 16155                           tosh	equ	0xFFE
 16156                           tosl	equ	0xFFD
 16157                           pclath	equ	0xFFA
 16158                           tblptru	equ	0xFF8
 16159                           tblptrh	equ	0xFF7
 16160                           tblptrl	equ	0xFF6
 16161                           tablat	equ	0xFF5
 16162                           prodh	equ	0xFF4
 16163                           prodl	equ	0xFF3
 16164                           intcon	equ	0xFF2
 16165                           indf0	equ	0xFEF
 16166                           postinc0	equ	0xFEE
 16167                           fsr0h	equ	0xFEA
 16168                           fsr0l	equ	0xFE9
 16169                           wreg	equ	0xFE8
 16170                           indf1	equ	0xFE7
 16171                           postinc1	equ	0xFE6
 16172                           postdec1	equ	0xFE5
 16173                           plusw1	equ	0xFE3
 16174                           fsr1h	equ	0xFE2
 16175                           fsr1l	equ	0xFE1
 16176                           indf2	equ	0xFDF
 16177                           postinc2	equ	0xFDE
 16178                           postdec2	equ	0xFDD
 16179                           plusw2	equ	0xFDB
 16180                           fsr2h	equ	0xFDA
 16181                           fsr2l	equ	0xFD9
 16182                           status	equ	0xFD8
 16183                           
 16184 ;; *************** function __doprnt *****************
 16185 ;; Defined at:
 16186 ;;		line 458 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
 16187 ;; Parameters:    Size  Location     Type
 16188 ;;  pb              1   34[COMRAM] PTR struct __prbuf
 16189 ;;		 -> sprintf@pb(5), printf@pb(5), 
 16190 ;;  f               1   35[COMRAM] PTR const unsigned char 
 16191 ;;		 -> STR_9(12), STR_4(10), STR_3(28), STR_2(8), 
 16192 ;;  ap              1   36[COMRAM] PTR PTR void 
 16193 ;;		 -> sprintf@ap(1), printf@ap(1), 
 16194 ;; Auto vars:     Size  Location     Type
 16195 ;;  idx             1   40[COMRAM] unsigned char 
 16196 ;;  tmpval          4    0        struct .
 16197 ;;  val             2   45[COMRAM] unsigned int 
 16198 ;;  cp              2   42[COMRAM] PTR const unsigned char 
 16199 ;;		 -> ?_sprintf(2), ?_printf(2), STR_10(7), main@str(32), 
 16200 ;;		 -> STR_8(13), STR_7(17), STR_6(7), STR_5(10), 
 16201 ;;		 -> Network_Read@debug_str(80), STR_1(15), NULL(0), 
 16202 ;;  len             2    0        unsigned int 
 16203 ;;  c               1   47[COMRAM] char 
 16204 ;;  flag            1   44[COMRAM] unsigned char 
 16205 ;;  prec            1   41[COMRAM] char 
 16206 ;; Return value:  Size  Location     Type
 16207 ;;                  2   34[COMRAM] int 
 16208 ;; Registers used:
 16209 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16210 ;; Tracked objects:
 16211 ;;		On entry : F/0
 16212 ;;		On exit  : 0/0
 16213 ;;		Unchanged: 0/0
 16214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16215 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16216 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16217 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16218 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16219 ;;Total ram usage:       14 bytes
 16220 ;; Hardware stack levels used:    1
 16221 ;; Hardware stack levels required when called:    9
 16222 ;; This function calls:
 16223 ;;		Absolute function
 16224 ;;		___lwdiv
 16225 ;;		___lwmod
 16226 ;;		_putch
 16227 ;; This function is called by:
 16228 ;;		_printf
 16229 ;;		_sprintf
 16230 ;; This function uses a non-reentrant model
 16231 ;;
 16232                           
 16233                           	psect	text55
 16234  00368E                     __ptext55:
 16235                           	opt stack 0
 16236  00368E                     __doprnt:
 16237                           	opt stack 20
 16238                           
 16239                           ; BSR set to: 0
 16240                           ;doprnt.c: 499: signed char c;
 16241                           ;doprnt.c: 506: signed char prec;
 16242                           ;doprnt.c: 508: unsigned char flag;
 16243                           ;doprnt.c: 523: union {
 16244                           ;doprnt.c: 524: unsigned long vd;
 16245                           ;doprnt.c: 525: double integ;
 16246                           ;doprnt.c: 526: } tmpval;
 16247                           ;doprnt.c: 528: unsigned int val;
 16248                           ;doprnt.c: 529: unsigned len;
 16249                           ;doprnt.c: 530: const char * cp;
 16250                           ;doprnt.c: 536: while(c = *f++) {
 16251                           
 16252                           ;incstack = 0
 16253  00368E  D11E               	goto	l7950
 16254  003690                     l7836:
 16255                           
 16256                           ;doprnt.c: 538: if(c != '%')
 16257  003690  0E25               	movlw	37
 16258  003692  1830               	xorwf	__doprnt@c,w,c
 16259  003694  E018               	bz	l1624
 16260                           
 16261                           ;doprnt.c: 540: {
 16262                           ;doprnt.c: 541: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 16263  003696  D937               	call	PL485	;call to abstracted procedure
 16264  003698  50DE               	movf	postinc2,w,c
 16265  00369A  10DE               	iorwf	postinc2,w,c
 16266  00369C  10DE               	iorwf	postinc2,w,c
 16267  00369E  E00E               	bz	l7842
 16268  0036A0  D932               	call	PL485	;call to abstracted procedure
 16269  0036A2  D801               	call	u10848
 16270  0036A4  D113               	goto	l7950
 16271  0036A6                     u10848:
 16272  0036A6  0005               	push	
 16273  0036A8  6EFA               	movwf	pclath,c
 16274  0036AA  50DE               	movf	postinc2,w,c
 16275  0036AC  6EFD               	movwf	tosl,c
 16276  0036AE  50DE               	movf	postinc2,w,c
 16277  0036B0  6EFE               	movwf	tosh,c
 16278  0036B2  50DE               	movf	postinc2,w,c
 16279  0036B4  6EFF               	movwf	tosu,c
 16280  0036B6  50FA               	movf	pclath,w,c
 16281  0036B8  5030               	movf	__doprnt@c,w,c
 16282  0036BA  0012               	return		;indir
 16283  0036BC                     l7842:
 16284  0036BC  D918               	call	PL463	;call to abstracted procedure
 16285  0036BE  C030  FFDF         	movff	__doprnt@c,indf2
 16286  0036C2  D930               	call	PL541	;call to abstracted procedure
 16287  0036C4  D103               	goto	l7950
 16288  0036C6                     l1624:
 16289                           
 16290                           ;doprnt.c: 543: }
 16291                           ;doprnt.c: 548: flag = 0;
 16292  0036C6  6A2D               	clrf	__doprnt@flag,c
 16293                           
 16294                           ;doprnt.c: 635: switch(c = *f++) {
 16295  0036C8  D050               	goto	l7872
 16296  0036CA                     l7846:
 16297                           
 16298                           ;doprnt.c: 721: flag |= 0x80;
 16299  0036CA  8E2D               	bsf	__doprnt@flag,7,c
 16300                           
 16301                           ;doprnt.c: 723: break;
 16302  0036CC  D05F               	goto	l7874
 16303  0036CE                     l7848:
 16304                           
 16305                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 16306  0036CE  D921               	call	PL519	;call to abstracted procedure
 16307  0036D0  CFDE F02B          	movff	postinc2,__doprnt@cp
 16308  0036D4  CFDE F02C          	movff	postinc2,__doprnt@cp+1
 16309                           
 16310                           ;doprnt.c: 740: if(!cp)
 16311  0036D8  502B               	movf	__doprnt@cp,w,c
 16312  0036DA  102C               	iorwf	__doprnt@cp+1,w,c
 16313  0036DC  E135               	bnz	l7866
 16314                           
 16315                           ;doprnt.c: 741: cp = "(null)";
 16316  0036DE  0EBB               	movlw	low STR_10
 16317  0036E0  6E2B               	movwf	__doprnt@cp,c
 16318  0036E2  502B               	movf	__doprnt@cp,w,c
 16319  0036E4  A4D8               	btfss	status,2,c
 16320  0036E6  0E10               	movlw	high __smallconst
 16321  0036E8  6E2C               	movwf	__doprnt@cp+1,c
 16322  0036EA  D02E               	goto	l7866
 16323  0036EC                     l7854:
 16324                           
 16325                           ;doprnt.c: 778: if(pb->func) (pb->func(*cp++)); else ((*pb->ptr++ = *cp++));
 16326  0036EC  D90C               	call	PL485	;call to abstracted procedure
 16327  0036EE  50DE               	movf	postinc2,w,c
 16328  0036F0  10DE               	iorwf	postinc2,w,c
 16329  0036F2  10DE               	iorwf	postinc2,w,c
 16330  0036F4  E01A               	bz	l7860
 16331  0036F6  D907               	call	PL485	;call to abstracted procedure
 16332  0036F8  D801               	call	u10878
 16333  0036FA  D014               	goto	l7858
 16334  0036FC                     u10878:
 16335  0036FC  0005               	push	
 16336  0036FE  6EFA               	movwf	pclath,c
 16337  003700  50DE               	movf	postinc2,w,c
 16338  003702  6EFD               	movwf	tosl,c
 16339  003704  50DE               	movf	postinc2,w,c
 16340  003706  6EFE               	movwf	tosh,c
 16341  003708  50DE               	movf	postinc2,w,c
 16342  00370A  6EFF               	movwf	tosu,c
 16343  00370C  50FA               	movf	pclath,w,c
 16344  00370E  D919               	call	PL593	;call to abstracted procedure
 16345  003710  0E0F               	movlw	(high __ramtop+-1)
 16346  003712  64F7               	cpfsgt	tblptrh,c
 16347  003714  D003               	bra	u10887
 16348  003716  0008               	tblrd		*
 16349  003718  50F5               	movf	tablat,w,c
 16350  00371A  D003               	bra	u10880
 16351  00371C                     u10887:
 16352  00371C  EC73  F011         	call	PL389	;call to abstracted procedure
 16353  003720  50EF               	movf	indf0,w,c
 16354  003722                     u10880:
 16355  003722  0012               	return		;indir
 16356  003724                     l7858:
 16357  003724  4A2B               	infsnz	__doprnt@cp,f,c
 16358  003726  2A2C               	incf	__doprnt@cp+1,f,c
 16359  003728  D00F               	goto	l7866
 16360  00372A                     l7860:
 16361  00372A  D90B               	call	PL593	;call to abstracted procedure
 16362  00372C  D8E0               	call	PL463	;call to abstracted procedure
 16363  00372E  0E0F               	movlw	(high __ramtop+-1)
 16364  003730  64F7               	cpfsgt	tblptrh,c
 16365  003732  D003               	bra	u10897
 16366  003734  0008               	tblrd		*
 16367  003736  50F5               	movf	tablat,w,c
 16368  003738  D003               	bra	u10890
 16369  00373A                     u10897:
 16370  00373A  EC73  F011         	call	PL389	;call to abstracted procedure
 16371  00373E  50EF               	movf	indf0,w,c
 16372  003740                     u10890:
 16373  003740  6EDF               	movwf	indf2,c
 16374  003742  4A2B               	infsnz	__doprnt@cp,f,c
 16375  003744  2A2C               	incf	__doprnt@cp+1,f,c
 16376  003746  D8EE               	call	PL541	;call to abstracted procedure
 16377  003748                     l7866:
 16378  003748  D8FC               	call	PL593	;call to abstracted procedure
 16379  00374A  0E0F               	movlw	(high __ramtop+-1)
 16380  00374C  64F7               	cpfsgt	tblptrh,c
 16381  00374E  D003               	bra	u10907
 16382  003750  0008               	tblrd		*
 16383  003752  50F5               	movf	tablat,w,c
 16384  003754  D003               	bra	u10900
 16385  003756                     u10907:
 16386  003756  EC73  F011         	call	PL389	;call to abstracted procedure
 16387  00375A  50EF               	movf	indf0,w,c
 16388  00375C                     u10900:
 16389  00375C  0900               	iorlw	0
 16390  00375E  E101 D0B5          	bz	l7950
 16391  003762  D7C4               	goto	l7854
 16392  003764                     l7868:
 16393                           
 16394                           ;doprnt.c: 818: flag |= 0xC0;
 16395  003764  0EC0               	movlw	192
 16396  003766  122D               	iorwf	__doprnt@flag,f,c
 16397                           
 16398                           ;doprnt.c: 819: break;
 16399  003768  D011               	goto	l7874
 16400  00376A                     l7872:
 16401  00376A  2A24               	incf	__doprnt@f,f,c
 16402  00376C  0424               	decf	__doprnt@f,w,c
 16403  00376E  D8B7               	call	PL461	;call to abstracted procedure
 16404  003770  D8F6               	call	PL703	;call to abstracted procedure
 16405                           
 16406                           ; Switch size 1, requested type "space"
 16407                           ; Number of cases is 6, Range of values is 0 to 120
 16408                           ; switch strategies available:
 16409                           ; Name         Instructions Cycles
 16410                           ; simple_byte           19    10 (average)
 16411                           ;	Chosen strategy is simple_byte
 16412  003772  E101 D0B1          	bz	l1629
 16413  003776  0A64               	xorlw	100	; case 100
 16414  003778  E009               	bz	l7874
 16415  00377A  0A0D               	xorlw	13	; case 105
 16416  00377C  E007               	bz	l7874
 16417  00377E  0A1A               	xorlw	26	; case 115
 16418  003780  E0A6               	bz	l7848
 16419  003782  0A06               	xorlw	6	; case 117
 16420  003784  E0EF               	bz	l7868
 16421  003786  0A0D               	xorlw	13	; case 120
 16422  003788  E0A0               	bz	l7846
 16423  00378A  D0A0               	goto	l7950
 16424  00378C                     l7874:
 16425                           
 16426                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 16427  00378C  C02D  F026         	movff	__doprnt@flag,??__doprnt
 16428  003790  0EC0               	movlw	192
 16429  003792  1626               	andwf	??__doprnt,f,c
 16430  003794  E10B               	bnz	l7884
 16431                           
 16432                           ;doprnt.c: 1253: {
 16433                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
 16434  003796  D8BD               	call	PL519	;call to abstracted procedure
 16435  003798  D8EC               	call	PL733	;call to abstracted procedure
 16436                           
 16437                           ;doprnt.c: 1261: if((int)val < 0) {
 16438  00379A  AE2F               	btfss	__doprnt@val+1,7,c
 16439  00379C  D02C               	goto	l7916
 16440                           
 16441                           ;doprnt.c: 1262: flag |= 0x03;
 16442  00379E  0E03               	movlw	3
 16443  0037A0  122D               	iorwf	__doprnt@flag,f,c
 16444                           
 16445                           ;doprnt.c: 1263: val = -val;
 16446  0037A2  6C2E               	negf	__doprnt@val,c
 16447  0037A4  1E2F               	comf	__doprnt@val+1,f,c
 16448  0037A6  B0D8               	btfsc	status,0,c
 16449  0037A8  2A2F               	incf	__doprnt@val+1,f,c
 16450  0037AA  D025               	goto	l7916
 16451  0037AC                     l7884:
 16452                           
 16453                           ;doprnt.c: 1268: else
 16454                           ;doprnt.c: 1273: {
 16455                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 16456  0037AC  D8B2               	call	PL519	;call to abstracted procedure
 16457  0037AE  D8E1               	call	PL733	;call to abstracted procedure
 16458  0037B0  D022               	goto	l7916
 16459  0037B2                     l7886:
 16460                           
 16461                           ;doprnt.c: 1302: case 0xC0:
 16462                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 16463  0037B2  0E01               	movlw	1
 16464  0037B4  6E30               	movwf	__doprnt@c,c
 16465  0037B6                     l7892:
 16466                           
 16467                           ;doprnt.c: 1306: if(val < dpowers[c])
 16468  0037B6  5030               	movf	__doprnt@c,w,c
 16469  0037B8  D8BC               	call	PL573	;call to abstracted procedure
 16470  0037BA  D891               	call	PL461	;call to abstracted procedure
 16471  0037BC  0009               	tblrd		*+
 16472  0037BE  50F5               	movf	tablat,w,c
 16473  0037C0  5C2E               	subwf	__doprnt@val,w,c
 16474  0037C2  0009               	tblrd		*+
 16475  0037C4  50F5               	movf	tablat,w,c
 16476  0037C6  582F               	subwfb	__doprnt@val+1,w,c
 16477  0037C8  E31D               	bnc	l7918
 16478  0037CA  2A30               	incf	__doprnt@c,f,c
 16479  0037CC  0E05               	movlw	5
 16480  0037CE  1830               	xorwf	__doprnt@c,w,c
 16481  0037D0  E019               	bz	l7918
 16482  0037D2  D7F1               	goto	l7892
 16483  0037D4                     l7900:
 16484                           
 16485                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 16486  0037D4  0E01               	movlw	1
 16487  0037D6  6E30               	movwf	__doprnt@c,c
 16488  0037D8                     l7906:
 16489                           
 16490                           ;doprnt.c: 1317: if(val < hexpowers[c])
 16491  0037D8  5030               	movf	__doprnt@c,w,c
 16492  0037DA  D8AF               	call	PL579	;call to abstracted procedure
 16493  0037DC  D880               	call	PL461	;call to abstracted procedure
 16494  0037DE  0009               	tblrd		*+
 16495  0037E0  50F5               	movf	tablat,w,c
 16496  0037E2  5C2E               	subwf	__doprnt@val,w,c
 16497  0037E4  0009               	tblrd		*+
 16498  0037E6  50F5               	movf	tablat,w,c
 16499  0037E8  582F               	subwfb	__doprnt@val+1,w,c
 16500  0037EA  E30C               	bnc	l7918
 16501  0037EC  2A30               	incf	__doprnt@c,f,c
 16502  0037EE  0E04               	movlw	4
 16503  0037F0  1830               	xorwf	__doprnt@c,w,c
 16504  0037F2  E008               	bz	l7918
 16505  0037F4  D7F1               	goto	l7906
 16506  0037F6                     l7916:
 16507  0037F6  502D               	movf	__doprnt@flag,w,c
 16508  0037F8  0BC0               	andlw	192
 16509                           
 16510                           ; Switch size 1, requested type "space"
 16511                           ; Number of cases is 3, Range of values is 0 to 192
 16512                           ; switch strategies available:
 16513                           ; Name         Instructions Cycles
 16514                           ; simple_byte           10     6 (average)
 16515                           ;	Chosen strategy is simple_byte
 16516  0037FA  E0DB               	bz	l7886
 16517  0037FC  0A80               	xorlw	128	; case 128
 16518  0037FE  E0EA               	bz	l7900
 16519  003800  0A40               	xorlw	64	; case 192
 16520  003802  E0D7               	bz	l7886
 16521  003804                     l7918:
 16522                           
 16523                           ;doprnt.c: 1422: {
 16524                           ;doprnt.c: 1438: if(flag & 0x03)
 16525  003804  C02D  F026         	movff	__doprnt@flag,??__doprnt
 16526  003808  0E03               	movlw	3
 16527  00380A  1626               	andwf	??__doprnt,f,c
 16528  00380C  E016               	bz	l7928
 16529                           
 16530                           ;doprnt.c: 1439: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 16531  00380E  D87B               	call	PL485	;call to abstracted procedure
 16532  003810  50DE               	movf	postinc2,w,c
 16533  003812  10DE               	iorwf	postinc2,w,c
 16534  003814  10DE               	iorwf	postinc2,w,c
 16535  003816  E00D               	bz	l7924
 16536  003818  D876               	call	PL485	;call to abstracted procedure
 16537  00381A  D801               	call	u11008
 16538  00381C  D00E               	goto	l7928
 16539  00381E                     u11008:
 16540  00381E  0005               	push	
 16541  003820  6EFA               	movwf	pclath,c
 16542  003822  50DE               	movf	postinc2,w,c
 16543  003824  6EFD               	movwf	tosl,c
 16544  003826  50DE               	movf	postinc2,w,c
 16545  003828  6EFE               	movwf	tosh,c
 16546  00382A  50DE               	movf	postinc2,w,c
 16547  00382C  6EFF               	movwf	tosu,c
 16548  00382E  50FA               	movf	pclath,w,c
 16549  003830  0C2D               	retlw	45	;indir
 16550  003832                     l7924:
 16551  003832  D85D               	call	PL463	;call to abstracted procedure
 16552  003834  0E2D               	movlw	45
 16553  003836  6EDF               	movwf	indf2,c
 16554  003838  D875               	call	PL541	;call to abstracted procedure
 16555  00383A                     l7928:
 16556                           
 16557                           ;doprnt.c: 1469: }
 16558                           ;doprnt.c: 1472: prec = c;
 16559  00383A  C030  F02A         	movff	__doprnt@c,__doprnt@prec
 16560                           
 16561                           ;doprnt.c: 1474: while(prec--) {
 16562  00383E  D043               	goto	l7948
 16563  003840                     l7930:
 16564                           
 16565                           ;doprnt.c: 1486: case 0xC0:
 16566                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 16567  003840  502A               	movf	__doprnt@prec,w,c
 16568  003842  D877               	call	PL573	;call to abstracted procedure
 16569  003844  D84C               	call	PL461	;call to abstracted procedure
 16570  003846  D884               	call	PL651	;call to abstracted procedure
 16571  003848  D88F               	call	PL731	;call to abstracted procedure
 16572  00384A  ECD0  F02E         	call	___lwdiv
 16573  00384E  C017  F01E         	movff	?___lwdiv,___lwmod@dividend
 16574  003852  C018  F01F         	movff	?___lwdiv+1,___lwmod@dividend+1
 16575  003856  6A21               	clrf	___lwmod@divisor+1,c
 16576  003858  0E0A               	movlw	10
 16577  00385A  6E20               	movwf	___lwmod@divisor,c
 16578  00385C  EC82  F02F         	call	___lwmod	;wreg free
 16579  003860  501E               	movf	?___lwmod,w,c
 16580  003862  0F30               	addlw	48
 16581  003864  6E30               	movwf	__doprnt@c,c
 16582                           
 16583                           ;doprnt.c: 1491: break;
 16584  003866  D018               	goto	l7940
 16585  003868                     l7932:
 16586                           
 16587                           ;doprnt.c: 1499: {
 16588                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 16589  003868  D87F               	call	PL731	;call to abstracted procedure
 16590  00386A  502A               	movf	__doprnt@prec,w,c
 16591  00386C  D866               	call	PL579	;call to abstracted procedure
 16592  00386E  D837               	call	PL461	;call to abstracted procedure
 16593  003870  D86F               	call	PL651	;call to abstracted procedure
 16594  003872  ECD0  F02E         	call	___lwdiv	;wreg free
 16595  003876  5017               	movf	?___lwdiv,w,c
 16596  003878  0B0F               	andlw	15
 16597  00387A  6E29               	movwf	__doprnt@idx,c
 16598                           
 16599                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
 16600  00387C  5029               	movf	__doprnt@idx,w,c
 16601  00387E  0F55               	addlw	low STR_11
 16602  003880  D82E               	call	PL461	;call to abstracted procedure
 16603  003882  0008               	tblrd		*
 16604  003884  CFF5 F030          	movff	tablat,__doprnt@c
 16605                           
 16606                           ;doprnt.c: 1508: }
 16607                           ;doprnt.c: 1510: break;
 16608  003888  D007               	goto	l7940
 16609  00388A                     l7938:
 16610  00388A  502D               	movf	__doprnt@flag,w,c
 16611  00388C  0BC0               	andlw	192
 16612                           
 16613                           ; Switch size 1, requested type "space"
 16614                           ; Number of cases is 3, Range of values is 0 to 192
 16615                           ; switch strategies available:
 16616                           ; Name         Instructions Cycles
 16617                           ; simple_byte           10     6 (average)
 16618                           ;	Chosen strategy is simple_byte
 16619  00388E  E0D8               	bz	l7930
 16620  003890  0A80               	xorlw	128	; case 128
 16621  003892  E0EA               	bz	l7932
 16622  003894  0A40               	xorlw	64	; case 192
 16623  003896  E0D4               	bz	l7930
 16624  003898                     l7940:
 16625                           
 16626                           ;doprnt.c: 1524: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 16627  003898  D836               	call	PL485	;call to abstracted procedure
 16628  00389A  50DE               	movf	postinc2,w,c
 16629  00389C  10DE               	iorwf	postinc2,w,c
 16630  00389E  10DE               	iorwf	postinc2,w,c
 16631  0038A0  E00E               	bz	l7944
 16632  0038A2  D831               	call	PL485	;call to abstracted procedure
 16633  0038A4  D801               	call	u11028
 16634  0038A6  D00F               	goto	l7948
 16635  0038A8                     u11028:
 16636  0038A8  0005               	push	
 16637  0038AA  6EFA               	movwf	pclath,c
 16638  0038AC  50DE               	movf	postinc2,w,c
 16639  0038AE  6EFD               	movwf	tosl,c
 16640  0038B0  50DE               	movf	postinc2,w,c
 16641  0038B2  6EFE               	movwf	tosh,c
 16642  0038B4  50DE               	movf	postinc2,w,c
 16643  0038B6  6EFF               	movwf	tosu,c
 16644  0038B8  50FA               	movf	pclath,w,c
 16645  0038BA  5030               	movf	__doprnt@c,w,c
 16646  0038BC  0012               	return		;indir
 16647  0038BE                     l7944:
 16648  0038BE  D817               	call	PL463	;call to abstracted procedure
 16649  0038C0  C030  FFDF         	movff	__doprnt@c,indf2
 16650  0038C4  D82F               	call	PL541	;call to abstracted procedure
 16651  0038C6                     l7948:
 16652  0038C6  062A               	decf	__doprnt@prec,f,c
 16653  0038C8  282A               	incf	__doprnt@prec,w,c
 16654  0038CA  E1DF               	bnz	l7938
 16655  0038CC                     l7950:
 16656  0038CC  2A24               	incf	__doprnt@f,f,c
 16657  0038CE  0424               	decf	__doprnt@f,w,c
 16658  0038D0  D806               	call	PL461	;call to abstracted procedure
 16659  0038D2  D845               	call	PL703	;call to abstracted procedure
 16660  0038D4  E001 D6DC          	bnz	l7836
 16661  0038D8                     l1629:
 16662                           
 16663                           ;doprnt.c: 1540: return 0;
 16664  0038D8  6A23               	clrf	?__doprnt,c
 16665  0038DA  6A24               	clrf	?__doprnt+1,c
 16666  0038DC  0012               	return		;funcret
 16667  0038DE                     __end_of__doprnt:
 16668                           	opt stack 0
 16669  0038DE                     PL461:
 16670                           	opt stack 20
 16671  0038DE  6E26               	movwf	??__doprnt& (0+255),c
 16672  0038E0  C026  FFF6         	movff	??__doprnt,tblptrl
 16673  0038E4                     	if	1	;There is more than 1 active tblptr byte
 16674  0038E4  0E10               	movlw	high __smallconst
 16675  0038E6  6EF7               	movwf	tblptrh,c
 16676  0038E8                     	endif
 16677  0038E8                     	if	0	;tblptru may be non-zero
 16678  0038E8                     	endif
 16679  0038E8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16680  0038E8  0E00               	movlw	low (__smallconst shr (0+16))
 16681  0038EA  6EF8               	movwf	tblptru,c
 16682  0038EC                     	endif
 16683  0038EC  0012               	return	
 16684  0038EE                     __end_ofPL461:
 16685                           	opt stack 0
 16686  0038EE                     PL463:
 16687                           	opt stack 20
 16688  0038EE  5023               	movf	__doprnt@pb,w,c
 16689  0038F0  6ED9               	movwf	fsr2l,c
 16690  0038F2  6ADA               	clrf	fsr2h,c
 16691  0038F4  CFDE F026          	movff	postinc2,??__doprnt
 16692  0038F8  CFDD F027          	movff	postdec2,??__doprnt+1
 16693  0038FC  C026  FFD9         	movff	??__doprnt,fsr2l
 16694  003900  C027  FFDA         	movff	??__doprnt+1,fsr2h
 16695  003904  0012               	return	
 16696  003906                     __end_ofPL463:
 16697                           	opt stack 0
 16698  003906                     PL485:
 16699                           	opt stack 20
 16700  003906  5023               	movf	__doprnt@pb,w,c
 16701  003908  6ED9               	movwf	fsr2l,c
 16702  00390A  6ADA               	clrf	fsr2h,c
 16703  00390C  0E02               	movlw	2
 16704  00390E  26D9               	addwf	fsr2l,f,c
 16705  003910  0C02               	retlw	2
 16706  003912                     __end_ofPL485:
 16707                           	opt stack 0
 16708  003912                     PL519:
 16709                           	opt stack 20
 16710  003912  5025               	movf	__doprnt@ap,w,c
 16711  003914  6ED9               	movwf	fsr2l,c
 16712  003916  6ADA               	clrf	fsr2h,c
 16713  003918  0E02               	movlw	2
 16714  00391A  26DF               	addwf	indf2,f,c
 16715  00391C  5CDF               	subwf	indf2,w,c
 16716  00391E  6ED9               	movwf	fsr2l,c
 16717  003920  6ADA               	clrf	fsr2h,c
 16718  003922  0012               	return	
 16719  003924                     __end_ofPL519:
 16720                           	opt stack 0
 16721  003924                     PL541:
 16722                           	opt stack 20
 16723  003924  5023               	movf	__doprnt@pb,w,c
 16724  003926  6ED9               	movwf	fsr2l,c
 16725  003928  6ADA               	clrf	fsr2h,c
 16726  00392A  2ADE               	incf	postinc2,f,c
 16727  00392C  0E00               	movlw	0
 16728  00392E  22DD               	addwfc	postdec2,f,c
 16729  003930  0C00               	retlw	0
 16730  003932                     __end_ofPL541:
 16731                           	opt stack 0
 16732  003932                     PL573:
 16733                           	opt stack 20
 16734  003932  0D02               	mullw	2
 16735  003934  50F3               	movf	prodl,w,c
 16736  003936  0F01               	addlw	low _dpowers
 16737  003938  0012               	return	
 16738  00393A                     __end_ofPL573:
 16739                           	opt stack 0
 16740  00393A                     PL579:
 16741                           	opt stack 20
 16742  00393A  0D02               	mullw	2
 16743  00393C  50F3               	movf	prodl,w,c
 16744  00393E  0F0B               	addlw	low _hexpowers
 16745  003940  0012               	return	
 16746  003942                     __end_ofPL579:
 16747                           	opt stack 0
 16748  003942                     PL593:
 16749                           	opt stack 20
 16750  003942  C02B  FFF6         	movff	__doprnt@cp,tblptrl
 16751  003946  C02C  FFF7         	movff	__doprnt@cp+1,tblptrh
 16752  00394A  0E00               	movlw	low (__smallconst shr (0+16))
 16753  00394C  6EF8               	movwf	tblptru,c
 16754  00394E  0012               	return	
 16755  003950                     __end_ofPL593:
 16756                           	opt stack 0
 16757  003950                     PL651:
 16758                           	opt stack 20
 16759  003950  0009               	tblrd		*+
 16760  003952  CFF5 F019          	movff	tablat,___lwdiv@divisor
 16761  003956  000A               	tblrd		*-
 16762  003958  CFF5 F01A          	movff	tablat,___lwdiv@divisor+1
 16763  00395C  0012               	return	
 16764  00395E                     __end_ofPL651:
 16765                           	opt stack 0
 16766  00395E                     PL703:
 16767                           	opt stack 20
 16768  00395E  0008               	tblrd		*
 16769  003960  CFF5 F030          	movff	tablat,__doprnt@c
 16770  003964  5030               	movf	__doprnt@c,w,c
 16771  003966  0012               	return	
 16772  003968                     __end_ofPL703:
 16773                           	opt stack 0
 16774  003968                     PL731:
 16775                           	opt stack 20
 16776  003968  C02E  F017         	movff	__doprnt@val,___lwdiv@dividend
 16777  00396C  C02F  F018         	movff	__doprnt@val+1,___lwdiv@dividend+1
 16778  003970  0012               	return	
 16779  003972                     __end_ofPL731:
 16780                           	opt stack 0
 16781  003972                     PL733:
 16782                           	opt stack 20
 16783  003972  CFDE F02E          	movff	postinc2,__doprnt@val
 16784  003976  CFDE F02F          	movff	postinc2,__doprnt@val+1
 16785  00397A  0012               	return	
 16786  00397C                     __end_ofPL733:
 16787                           	opt stack 0
 16788                           tosu	equ	0xFFF
 16789                           tosh	equ	0xFFE
 16790                           tosl	equ	0xFFD
 16791                           pclath	equ	0xFFA
 16792                           tblptru	equ	0xFF8
 16793                           tblptrh	equ	0xFF7
 16794                           tblptrl	equ	0xFF6
 16795                           tablat	equ	0xFF5
 16796                           prodh	equ	0xFF4
 16797                           prodl	equ	0xFF3
 16798                           intcon	equ	0xFF2
 16799                           indf0	equ	0xFEF
 16800                           postinc0	equ	0xFEE
 16801                           fsr0h	equ	0xFEA
 16802                           fsr0l	equ	0xFE9
 16803                           wreg	equ	0xFE8
 16804                           indf1	equ	0xFE7
 16805                           postinc1	equ	0xFE6
 16806                           postdec1	equ	0xFE5
 16807                           plusw1	equ	0xFE3
 16808                           fsr1h	equ	0xFE2
 16809                           fsr1l	equ	0xFE1
 16810                           indf2	equ	0xFDF
 16811                           postinc2	equ	0xFDE
 16812                           postdec2	equ	0xFDD
 16813                           plusw2	equ	0xFDB
 16814                           fsr2h	equ	0xFDA
 16815                           fsr2l	equ	0xFD9
 16816                           status	equ	0xFD8
 16817                           
 16818 ;; *************** function _putch *****************
 16819 ;; Defined at:
 16820 ;;		line 77 in file "../board_support_package/picdem2_net/uart.c"
 16821 ;; Parameters:    Size  Location     Type
 16822 ;;  data            1    wreg     unsigned char 
 16823 ;; Auto vars:     Size  Location     Type
 16824 ;;  data            1   22[COMRAM] unsigned char 
 16825 ;; Return value:  Size  Location     Type
 16826 ;;                  1    wreg      void 
 16827 ;; Registers used:
 16828 ;;		wreg, status,2, status,0
 16829 ;; Tracked objects:
 16830 ;;		On entry : 0/0
 16831 ;;		On exit  : 0/0
 16832 ;;		Unchanged: 0/0
 16833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16835 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16837 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16838 ;;Total ram usage:        1 bytes
 16839 ;; Hardware stack levels used:    1
 16840 ;; Hardware stack levels required when called:    8
 16841 ;; This function calls:
 16842 ;;		Nothing
 16843 ;; This function is called by:
 16844 ;;		_printf
 16845 ;;		__doprnt
 16846 ;; This function uses a non-reentrant model
 16847 ;;
 16848                           
 16849                           	psect	text56
 16850  0063A4                     __ptext56:
 16851                           	opt stack 0
 16852  0063A4                     _putch:
 16853                           	opt stack 20
 16854                           
 16855                           ;incstack = 0
 16856                           ;putch@data stored from wreg
 16857  0063A4  6E17               	movwf	putch@data,c
 16858                           
 16859                           ;uart.c: 79: if(data == '\n')
 16860  0063A6  0E0A               	movlw	10
 16861  0063A8  1817               	xorwf	putch@data,w,c
 16862  0063AA  E104               	bnz	l350
 16863  0063AC                     l347:
 16864  0063AC  A89E               	btfss	3998,4,c	;volatile
 16865  0063AE  D7FE               	goto	l347
 16866                           
 16867                           ;uart.c: 83: TXREG1 = '\r';
 16868  0063B0  0E0D               	movlw	13
 16869  0063B2  6EAD               	movwf	4013,c	;volatile
 16870  0063B4                     l350:
 16871  0063B4  A89E               	btfss	3998,4,c	;volatile
 16872  0063B6  D7FE               	goto	l350
 16873                           
 16874                           ;uart.c: 87: TXREG1 = data;
 16875  0063B8  C017  FFAD         	movff	putch@data,4013	;volatile
 16876  0063BC  0012               	return		;funcret
 16877  0063BE                     __end_of_putch:
 16878                           	opt stack 0
 16879                           tosu	equ	0xFFF
 16880                           tosh	equ	0xFFE
 16881                           tosl	equ	0xFFD
 16882                           pclath	equ	0xFFA
 16883                           tblptru	equ	0xFF8
 16884                           tblptrh	equ	0xFF7
 16885                           tblptrl	equ	0xFF6
 16886                           tablat	equ	0xFF5
 16887                           prodh	equ	0xFF4
 16888                           prodl	equ	0xFF3
 16889                           intcon	equ	0xFF2
 16890                           indf0	equ	0xFEF
 16891                           postinc0	equ	0xFEE
 16892                           fsr0h	equ	0xFEA
 16893                           fsr0l	equ	0xFE9
 16894                           wreg	equ	0xFE8
 16895                           indf1	equ	0xFE7
 16896                           postinc1	equ	0xFE6
 16897                           postdec1	equ	0xFE5
 16898                           plusw1	equ	0xFE3
 16899                           fsr1h	equ	0xFE2
 16900                           fsr1l	equ	0xFE1
 16901                           indf2	equ	0xFDF
 16902                           postinc2	equ	0xFDE
 16903                           postdec2	equ	0xFDD
 16904                           plusw2	equ	0xFDB
 16905                           fsr2h	equ	0xFDA
 16906                           fsr2l	equ	0xFD9
 16907                           status	equ	0xFD8
 16908                           
 16909 ;; *************** function ___lwmod *****************
 16910 ;; Defined at:
 16911 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwmod.c"
 16912 ;; Parameters:    Size  Location     Type
 16913 ;;  dividend        2   29[COMRAM] unsigned int 
 16914 ;;  divisor         2   31[COMRAM] unsigned int 
 16915 ;; Auto vars:     Size  Location     Type
 16916 ;;  counter         1   33[COMRAM] unsigned char 
 16917 ;; Return value:  Size  Location     Type
 16918 ;;                  2   29[COMRAM] unsigned int 
 16919 ;; Registers used:
 16920 ;;		wreg, status,2, status,0
 16921 ;; Tracked objects:
 16922 ;;		On entry : 0/0
 16923 ;;		On exit  : 0/0
 16924 ;;		Unchanged: 0/0
 16925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16926 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16927 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16929 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16930 ;;Total ram usage:        5 bytes
 16931 ;; Hardware stack levels used:    1
 16932 ;; Hardware stack levels required when called:    8
 16933 ;; This function calls:
 16934 ;;		Nothing
 16935 ;; This function is called by:
 16936 ;;		__doprnt
 16937 ;; This function uses a non-reentrant model
 16938 ;;
 16939                           
 16940                           	psect	text57
 16941  005F04                     __ptext57:
 16942                           	opt stack 0
 16943  005F04                     ___lwmod:
 16944                           	opt stack 20
 16945                           
 16946                           ;incstack = 0
 16947  005F04  5020               	movf	___lwmod@divisor,w,c
 16948  005F06  1021               	iorwf	___lwmod@divisor+1,w,c
 16949  005F08  E017               	bz	l2084
 16950  005F0A  0E01               	movlw	1
 16951  005F0C  6E22               	movwf	___lwmod@counter,c
 16952  005F0E  D004               	goto	l7736
 16953  005F10                     l7734:
 16954  005F10  90D8               	bcf	status,0,c
 16955  005F12  3620               	rlcf	___lwmod@divisor,f,c
 16956  005F14  3621               	rlcf	___lwmod@divisor+1,f,c
 16957  005F16  2A22               	incf	___lwmod@counter,f,c
 16958  005F18                     l7736:
 16959  005F18  AE21               	btfss	___lwmod@divisor+1,7,c
 16960  005F1A  D7FA               	goto	l7734
 16961  005F1C                     l7738:
 16962  005F1C  5020               	movf	___lwmod@divisor,w,c
 16963  005F1E  5C1E               	subwf	___lwmod@dividend,w,c
 16964  005F20  5021               	movf	___lwmod@divisor+1,w,c
 16965  005F22  581F               	subwfb	___lwmod@dividend+1,w,c
 16966  005F24  E304               	bnc	l7742
 16967  005F26  5020               	movf	___lwmod@divisor,w,c
 16968  005F28  5E1E               	subwf	___lwmod@dividend,f,c
 16969  005F2A  5021               	movf	___lwmod@divisor+1,w,c
 16970  005F2C  5A1F               	subwfb	___lwmod@dividend+1,f,c
 16971  005F2E                     l7742:
 16972  005F2E  90D8               	bcf	status,0,c
 16973  005F30  3221               	rrcf	___lwmod@divisor+1,f,c
 16974  005F32  3220               	rrcf	___lwmod@divisor,f,c
 16975  005F34  2E22               	decfsz	___lwmod@counter,f,c
 16976  005F36  D7F2               	goto	l7738
 16977  005F38                     l2084:
 16978  005F38  C01E  F01E         	movff	___lwmod@dividend,?___lwmod
 16979  005F3C  C01F  F01F         	movff	___lwmod@dividend+1,?___lwmod+1
 16980  005F40  0012               	return		;funcret
 16981  005F42                     __end_of___lwmod:
 16982                           	opt stack 0
 16983                           tosu	equ	0xFFF
 16984                           tosh	equ	0xFFE
 16985                           tosl	equ	0xFFD
 16986                           pclath	equ	0xFFA
 16987                           tblptru	equ	0xFF8
 16988                           tblptrh	equ	0xFF7
 16989                           tblptrl	equ	0xFF6
 16990                           tablat	equ	0xFF5
 16991                           prodh	equ	0xFF4
 16992                           prodl	equ	0xFF3
 16993                           intcon	equ	0xFF2
 16994                           indf0	equ	0xFEF
 16995                           postinc0	equ	0xFEE
 16996                           fsr0h	equ	0xFEA
 16997                           fsr0l	equ	0xFE9
 16998                           wreg	equ	0xFE8
 16999                           indf1	equ	0xFE7
 17000                           postinc1	equ	0xFE6
 17001                           postdec1	equ	0xFE5
 17002                           plusw1	equ	0xFE3
 17003                           fsr1h	equ	0xFE2
 17004                           fsr1l	equ	0xFE1
 17005                           indf2	equ	0xFDF
 17006                           postinc2	equ	0xFDE
 17007                           postdec2	equ	0xFDD
 17008                           plusw2	equ	0xFDB
 17009                           fsr2h	equ	0xFDA
 17010                           fsr2l	equ	0xFD9
 17011                           status	equ	0xFD8
 17012                           
 17013 ;; *************** function ___lwdiv *****************
 17014 ;; Defined at:
 17015 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c"
 17016 ;; Parameters:    Size  Location     Type
 17017 ;;  dividend        2   22[COMRAM] unsigned int 
 17018 ;;  divisor         2   24[COMRAM] unsigned int 
 17019 ;; Auto vars:     Size  Location     Type
 17020 ;;  quotient        2   27[COMRAM] unsigned int 
 17021 ;;  counter         1   26[COMRAM] unsigned char 
 17022 ;; Return value:  Size  Location     Type
 17023 ;;                  2   22[COMRAM] unsigned int 
 17024 ;; Registers used:
 17025 ;;		wreg, status,2, status,0
 17026 ;; Tracked objects:
 17027 ;;		On entry : 0/0
 17028 ;;		On exit  : 0/0
 17029 ;;		Unchanged: 0/0
 17030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17031 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17032 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17034 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17035 ;;Total ram usage:        7 bytes
 17036 ;; Hardware stack levels used:    1
 17037 ;; Hardware stack levels required when called:    8
 17038 ;; This function calls:
 17039 ;;		Nothing
 17040 ;; This function is called by:
 17041 ;;		__doprnt
 17042 ;; This function uses a non-reentrant model
 17043 ;;
 17044                           
 17045                           	psect	text58
 17046  005DA0                     __ptext58:
 17047                           	opt stack 0
 17048  005DA0                     ___lwdiv:
 17049                           	opt stack 20
 17050                           
 17051                           ;incstack = 0
 17052  005DA0  6A1C               	clrf	___lwdiv@quotient,c
 17053  005DA2  6A1D               	clrf	___lwdiv@quotient+1,c
 17054  005DA4  5019               	movf	___lwdiv@divisor,w,c
 17055  005DA6  101A               	iorwf	___lwdiv@divisor+1,w,c
 17056  005DA8  E01B               	bz	l2074
 17057  005DAA  0E01               	movlw	1
 17058  005DAC  6E1B               	movwf	___lwdiv@counter,c
 17059  005DAE  D004               	goto	l7716
 17060  005DB0                     l7714:
 17061  005DB0  90D8               	bcf	status,0,c
 17062  005DB2  3619               	rlcf	___lwdiv@divisor,f,c
 17063  005DB4  361A               	rlcf	___lwdiv@divisor+1,f,c
 17064  005DB6  2A1B               	incf	___lwdiv@counter,f,c
 17065  005DB8                     l7716:
 17066  005DB8  AE1A               	btfss	___lwdiv@divisor+1,7,c
 17067  005DBA  D7FA               	goto	l7714
 17068  005DBC                     l7718:
 17069  005DBC  90D8               	bcf	status,0,c
 17070  005DBE  361C               	rlcf	___lwdiv@quotient,f,c
 17071  005DC0  361D               	rlcf	___lwdiv@quotient+1,f,c
 17072  005DC2  5019               	movf	___lwdiv@divisor,w,c
 17073  005DC4  5C17               	subwf	___lwdiv@dividend,w,c
 17074  005DC6  501A               	movf	___lwdiv@divisor+1,w,c
 17075  005DC8  5818               	subwfb	___lwdiv@dividend+1,w,c
 17076  005DCA  E305               	bnc	l7726
 17077  005DCC  5019               	movf	___lwdiv@divisor,w,c
 17078  005DCE  5E17               	subwf	___lwdiv@dividend,f,c
 17079  005DD0  501A               	movf	___lwdiv@divisor+1,w,c
 17080  005DD2  5A18               	subwfb	___lwdiv@dividend+1,f,c
 17081  005DD4  801C               	bsf	___lwdiv@quotient,0,c
 17082  005DD6                     l7726:
 17083  005DD6  90D8               	bcf	status,0,c
 17084  005DD8  321A               	rrcf	___lwdiv@divisor+1,f,c
 17085  005DDA  3219               	rrcf	___lwdiv@divisor,f,c
 17086  005DDC  2E1B               	decfsz	___lwdiv@counter,f,c
 17087  005DDE  D7EE               	goto	l7718
 17088  005DE0                     l2074:
 17089  005DE0  C01C  F017         	movff	___lwdiv@quotient,?___lwdiv
 17090  005DE4  C01D  F018         	movff	___lwdiv@quotient+1,?___lwdiv+1
 17091  005DE8  0012               	return		;funcret
 17092  005DEA                     __end_of___lwdiv:
 17093                           	opt stack 0
 17094                           tosu	equ	0xFFF
 17095                           tosh	equ	0xFFE
 17096                           tosl	equ	0xFFD
 17097                           pclath	equ	0xFFA
 17098                           tblptru	equ	0xFF8
 17099                           tblptrh	equ	0xFF7
 17100                           tblptrl	equ	0xFF6
 17101                           tablat	equ	0xFF5
 17102                           prodh	equ	0xFF4
 17103                           prodl	equ	0xFF3
 17104                           intcon	equ	0xFF2
 17105                           indf0	equ	0xFEF
 17106                           postinc0	equ	0xFEE
 17107                           fsr0h	equ	0xFEA
 17108                           fsr0l	equ	0xFE9
 17109                           wreg	equ	0xFE8
 17110                           indf1	equ	0xFE7
 17111                           postinc1	equ	0xFE6
 17112                           postdec1	equ	0xFE5
 17113                           plusw1	equ	0xFE3
 17114                           fsr1h	equ	0xFE2
 17115                           fsr1l	equ	0xFE1
 17116                           indf2	equ	0xFDF
 17117                           postinc2	equ	0xFDE
 17118                           postdec2	equ	0xFDD
 17119                           plusw2	equ	0xFDB
 17120                           fsr2h	equ	0xFDA
 17121                           fsr2l	equ	0xFD9
 17122                           status	equ	0xFD8
 17123                           
 17124 ;; *************** function _ETH_RxComputeChecksum *****************
 17125 ;; Defined at:
 17126 ;;		line 781 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 17127 ;; Parameters:    Size  Location     Type
 17128 ;;  len             2   36[COMRAM] unsigned int 
 17129 ;;  seed            2   38[COMRAM] unsigned int 
 17130 ;; Auto vars:     Size  Location     Type
 17131 ;;  cksm            4   46[COMRAM] unsigned long 
 17132 ;;  rxptr           2   44[COMRAM] unsigned int 
 17133 ;; Return value:  Size  Location     Type
 17134 ;;                  2   36[COMRAM] unsigned int 
 17135 ;; Registers used:
 17136 ;;		wreg, status,2, status,0, cstack
 17137 ;; Tracked objects:
 17138 ;;		On entry : F/1
 17139 ;;		On exit  : 0/0
 17140 ;;		Unchanged: 0/0
 17141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17142 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17143 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17144 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17145 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17146 ;;Total ram usage:       14 bytes
 17147 ;; Hardware stack levels used:    1
 17148 ;; Hardware stack levels required when called:   10
 17149 ;; This function calls:
 17150 ;;		_ETH_ComputeChecksum
 17151 ;; This function is called by:
 17152 ;;		_IPV4_Packet
 17153 ;; This function uses a non-reentrant model
 17154 ;;
 17155                           
 17156                           	psect	text59
 17157  005E7A                     __ptext59:
 17158                           	opt stack 0
 17159  005E7A                     _ETH_RxComputeChecksum:
 17160                           	opt stack 17
 17161                           
 17162                           ; BSR set to: 1
 17163                           ;j60_driver.c: 783: uint16_t rxptr;
 17164                           ;j60_driver.c: 784: uint32_t cksm;
 17165                           ;j60_driver.c: 787: rxptr = ERDPT;
 17166                           
 17167                           ;incstack = 0
 17168  005E7A  CF7A F02D          	movff	3962,ETH_RxComputeChecksum@rxptr	;volatile
 17169  005E7E  CF7B F02E          	movff	3963,ETH_RxComputeChecksum@rxptr+1	;volatile
 17170                           
 17171                           ; BSR set to: 1
 17172                           ;j60_driver.c: 789: cksm = ETH_ComputeChecksum( len, seed);
 17173  005E82  C025  F017         	movff	ETH_RxComputeChecksum@len,ETH_ComputeChecksum@len
 17174  005E86  C026  F018         	movff	ETH_RxComputeChecksum@len+1,ETH_ComputeChecksum@len+1
 17175  005E8A  C027  F019         	movff	ETH_RxComputeChecksum@seed,ETH_ComputeChecksum@seed
 17176  005E8E  C028  F01A         	movff	ETH_RxComputeChecksum@seed+1,ETH_ComputeChecksum@seed+1
 17177  005E92  ECCF  F028         	call	_ETH_ComputeChecksum
 17178  005E96  C017  F02F         	movff	?_ETH_ComputeChecksum,ETH_RxComputeChecksum@cksm
 17179  005E9A  C018  F030         	movff	?_ETH_ComputeChecksum+1,ETH_RxComputeChecksum@cksm+1
 17180  005E9E  6A31               	clrf	ETH_RxComputeChecksum@cksm+2,c
 17181  005EA0  6A32               	clrf	ETH_RxComputeChecksum@cksm+3,c
 17182                           
 17183                           ;j60_driver.c: 792: ERDPT = rxptr;
 17184  005EA2  C02D  FF7A         	movff	ETH_RxComputeChecksum@rxptr,3962	;volatile
 17185  005EA6  C02E  FF7B         	movff	ETH_RxComputeChecksum@rxptr+1,3963	;volatile
 17186                           
 17187                           ;j60_driver.c: 795: return ((cksm & 0xFF00) >> 8) | ((cksm & 0x00FF) << 8);
 17188  005EAA  502F               	movf	ETH_RxComputeChecksum@cksm,w,c
 17189  005EAC  6E2A               	movwf	(??_ETH_RxComputeChecksum+1)& (0+255),c
 17190  005EAE  6A29               	clrf	??_ETH_RxComputeChecksum& (0+255),c
 17191  005EB0  5030               	movf	ETH_RxComputeChecksum@cksm+1,w,c
 17192  005EB2  6E2B               	movwf	(??_ETH_RxComputeChecksum+2)& (0+255),c
 17193  005EB4  6A2C               	clrf	(??_ETH_RxComputeChecksum+3)& (0+255),c
 17194  005EB6  1029               	iorwf	??_ETH_RxComputeChecksum,w,c
 17195  005EB8  6E25               	movwf	?_ETH_RxComputeChecksum,c
 17196  005EBA  502A               	movf	??_ETH_RxComputeChecksum+1,w,c
 17197  005EBC  102C               	iorwf	??_ETH_RxComputeChecksum+3,w,c
 17198  005EBE  6E26               	movwf	?_ETH_RxComputeChecksum+1,c
 17199  005EC0  0012               	return		;funcret
 17200  005EC2                     __end_of_ETH_RxComputeChecksum:
 17201                           	opt stack 0
 17202                           tosu	equ	0xFFF
 17203                           tosh	equ	0xFFE
 17204                           tosl	equ	0xFFD
 17205                           pclath	equ	0xFFA
 17206                           tblptru	equ	0xFF8
 17207                           tblptrh	equ	0xFF7
 17208                           tblptrl	equ	0xFF6
 17209                           tablat	equ	0xFF5
 17210                           prodh	equ	0xFF4
 17211                           prodl	equ	0xFF3
 17212                           intcon	equ	0xFF2
 17213                           indf0	equ	0xFEF
 17214                           postinc0	equ	0xFEE
 17215                           fsr0h	equ	0xFEA
 17216                           fsr0l	equ	0xFE9
 17217                           wreg	equ	0xFE8
 17218                           indf1	equ	0xFE7
 17219                           postinc1	equ	0xFE6
 17220                           postdec1	equ	0xFE5
 17221                           plusw1	equ	0xFE3
 17222                           fsr1h	equ	0xFE2
 17223                           fsr1l	equ	0xFE1
 17224                           indf2	equ	0xFDF
 17225                           postinc2	equ	0xFDE
 17226                           postdec2	equ	0xFDD
 17227                           plusw2	equ	0xFDB
 17228                           fsr2h	equ	0xFDA
 17229                           fsr2l	equ	0xFD9
 17230                           status	equ	0xFD8
 17231                           
 17232 ;; *************** function _ETH_NextPacketUpdate *****************
 17233 ;; Defined at:
 17234 ;;		line 266 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 17235 ;; Parameters:    Size  Location     Type
 17236 ;;		None
 17237 ;; Auto vars:     Size  Location     Type
 17238 ;;		None
 17239 ;; Return value:  Size  Location     Type
 17240 ;;                  1    wreg      void 
 17241 ;; Registers used:
 17242 ;;		wreg, status,2, status,0, cstack
 17243 ;; Tracked objects:
 17244 ;;		On entry : F/1
 17245 ;;		On exit  : F/1
 17246 ;;		Unchanged: 0/0
 17247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17252 ;;Total ram usage:        0 bytes
 17253 ;; Hardware stack levels used:    1
 17254 ;; Hardware stack levels required when called:    9
 17255 ;; This function calls:
 17256 ;;		_ETH_EdataRead
 17257 ;; This function is called by:
 17258 ;;		_Network_Read
 17259 ;; This function uses a non-reentrant model
 17260 ;;
 17261                           
 17262                           	psect	text60
 17263  005A3A                     __ptext60:
 17264                           	opt stack 0
 17265  005A3A                     _ETH_NextPacketUpdate:
 17266                           	opt stack 19
 17267                           
 17268                           ; BSR set to: 1
 17269                           ;j60_driver.c: 269: ERDPT = nextPacketPointer;
 17270                           
 17271                           ;incstack = 0
 17272  005A3A  C03F  FF7A         	movff	_nextPacketPointer,3962	;volatile
 17273  005A3E  C040  FF7B         	movff	_nextPacketPointer+1,3963	;volatile
 17274  005A42                     i8L__ptext81:
 17275                           	opt stack 0
 17276  005A42                     i8L_ETH_EdataRead:
 17277                           	opt stack 0
 17278  005A42                     i8Ll7562:
 17279                           	opt stack 16
 17280  005A42  CF61 FE7E          	movff	3937,_errataTemp	;# 
 17281  005A46                     i8Ll7564:
 17282                           	opt stack 16
 17283                           
 17284                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
 17285  005A46  010E               	movlb	14	; () banked
 17286  005A48  517E               	movf	126,w,b
 17287  005A4A                     i8Ll460:
 17288                           	opt stack 19
 17289  005A4A  6E3F               	movwf	_nextPacketPointer,c
 17290  005A4C                     i9L__ptext81:
 17291                           	opt stack 0
 17292  005A4C                     i9L_ETH_EdataRead:
 17293                           	opt stack 0
 17294  005A4C                     i9Ll7562:
 17295                           	opt stack 16
 17296  005A4C  CF61 FE7E          	movff	3937,_errataTemp	;# 
 17297  005A50                     i9Ll7564:
 17298                           	opt stack 16
 17299                           
 17300                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
 17301  005A50  010E               	movlb	14	; () banked
 17302  005A52  517E               	movf	126,w,b
 17303  005A54                     i9Ll460:
 17304                           	opt stack 19
 17305  005A54  6E40               	movwf	_nextPacketPointer+1,c
 17306  005A56                     i10L__ptext81:
 17307                           	opt stack 0
 17308  005A56                     i10L_ETH_EdataRead:
 17309                           	opt stack 0
 17310  005A56                     i10Ll7562:
 17311                           	opt stack 16
 17312  005A56  CF61 FE7E          	movff	3937,_errataTemp	;# 
 17313  005A5A                     i10Ll7564:
 17314                           	opt stack 16
 17315                           
 17316                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
 17317  005A5A  010E               	movlb	14	; () banked
 17318  005A5C  517E               	movf	126,w,b
 17319  005A5E                     i10Ll460:
 17320                           	opt stack 19
 17321  005A5E  0101               	movlb	1	; () banked
 17322  005A60  6FCC               	movwf	_rxPacketStatusVector& (0+255),b
 17323  005A62                     i11L__ptext81:
 17324                           	opt stack 0
 17325  005A62                     i11L_ETH_EdataRead:
 17326                           	opt stack 0
 17327  005A62                     i11Ll7562:
 17328                           	opt stack 16
 17329  005A62  CF61 FE7E          	movff	3937,_errataTemp	;# 
 17330  005A66                     i11Ll7564:
 17331                           	opt stack 16
 17332                           
 17333                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
 17334  005A66  010E               	movlb	14	; () banked
 17335  005A68  517E               	movf	126,w,b
 17336  005A6A                     i11Ll460:
 17337                           	opt stack 19
 17338  005A6A  0101               	movlb	1	; () banked
 17339  005A6C  6FCD               	movwf	(_rxPacketStatusVector+1)& (0+255),b
 17340  005A6E                     i12L__ptext81:
 17341                           	opt stack 0
 17342  005A6E                     i12L_ETH_EdataRead:
 17343                           	opt stack 0
 17344  005A6E                     i12Ll7562:
 17345                           	opt stack 16
 17346  005A6E  CF61 FE7E          	movff	3937,_errataTemp	;# 
 17347  005A72                     i12Ll7564:
 17348                           	opt stack 16
 17349                           
 17350                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
 17351  005A72  010E               	movlb	14	; () banked
 17352  005A74  517E               	movf	126,w,b
 17353  005A76                     i12Ll460:
 17354                           	opt stack 19
 17355  005A76  0101               	movlb	1	; () banked
 17356  005A78  6FCE               	movwf	(_rxPacketStatusVector+2)& (0+255),b
 17357  005A7A                     i13L__ptext81:
 17358                           	opt stack 0
 17359  005A7A                     i13L_ETH_EdataRead:
 17360                           	opt stack 0
 17361  005A7A                     i13Ll7562:
 17362                           	opt stack 16
 17363  005A7A  CF61 FE7E          	movff	3937,_errataTemp	;# 
 17364  005A7E                     i13Ll7564:
 17365                           	opt stack 16
 17366                           
 17367                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
 17368  005A7E  010E               	movlb	14	; () banked
 17369  005A80  517E               	movf	126,w,b
 17370  005A82                     i13Ll460:
 17371                           	opt stack 19
 17372  005A82  0101               	movlb	1	; () banked
 17373  005A84  6FCF               	movwf	(_rxPacketStatusVector+3)& (0+255),b
 17374                           
 17375                           ; BSR set to: 1
 17376                           ;j60_driver.c: 281: rxPacketStatusVector.byteCount -= 4;
 17377  005A86  0E04               	movlw	4
 17378  005A88  5FCC               	subwf	_rxPacketStatusVector& (0+255),f,b
 17379  005A8A  0E00               	movlw	0
 17380  005A8C  5BCD               	subwfb	(_rxPacketStatusVector+1)& (0+255),f,b
 17381                           
 17382                           ; BSR set to: 1
 17383  005A8E  0C00               	retlw	0	;funcret
 17384  005A90                     __end_of_ETH_NextPacketUpdate:
 17385                           	opt stack 0
 17386                           tosu	equ	0xFFF
 17387                           tosh	equ	0xFFE
 17388                           tosl	equ	0xFFD
 17389                           pclath	equ	0xFFA
 17390                           tblptru	equ	0xFF8
 17391                           tblptrh	equ	0xFF7
 17392                           tblptrl	equ	0xFF6
 17393                           tablat	equ	0xFF5
 17394                           prodh	equ	0xFF4
 17395                           prodl	equ	0xFF3
 17396                           intcon	equ	0xFF2
 17397                           indf0	equ	0xFEF
 17398                           postinc0	equ	0xFEE
 17399                           fsr0h	equ	0xFEA
 17400                           fsr0l	equ	0xFE9
 17401                           wreg	equ	0xFE8
 17402                           indf1	equ	0xFE7
 17403                           postinc1	equ	0xFE6
 17404                           postdec1	equ	0xFE5
 17405                           plusw1	equ	0xFE3
 17406                           fsr1h	equ	0xFE2
 17407                           fsr1l	equ	0xFE1
 17408                           indf2	equ	0xFDF
 17409                           postinc2	equ	0xFDE
 17410                           postdec2	equ	0xFDD
 17411                           plusw2	equ	0xFDB
 17412                           fsr2h	equ	0xFDA
 17413                           fsr2l	equ	0xFD9
 17414                           status	equ	0xFD8
 17415                           
 17416 ;; *************** function _ETH_Flush *****************
 17417 ;; Defined at:
 17418 ;;		line 625 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 17419 ;; Parameters:    Size  Location     Type
 17420 ;;		None
 17421 ;; Auto vars:     Size  Location     Type
 17422 ;;		None
 17423 ;; Return value:  Size  Location     Type
 17424 ;;                  1    wreg      void 
 17425 ;; Registers used:
 17426 ;;		wreg, status,2, status,0
 17427 ;; Tracked objects:
 17428 ;;		On entry : 0/1
 17429 ;;		On exit  : F/E
 17430 ;;		Unchanged: 0/0
 17431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17434 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17435 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17436 ;;Total ram usage:        4 bytes
 17437 ;; Hardware stack levels used:    1
 17438 ;; Hardware stack levels required when called:    8
 17439 ;; This function calls:
 17440 ;;		Nothing
 17441 ;; This function is called by:
 17442 ;;		_Network_Read
 17443 ;; This function uses a non-reentrant model
 17444 ;;
 17445                           
 17446                           	psect	text61
 17447  005A90                     __ptext61:
 17448                           	opt stack 0
 17449  005A90                     _ETH_Flush:
 17450                           	opt stack 20
 17451                           
 17452                           ;j60_driver.c: 627: ethData.pktReady = 0;
 17453                           
 17454                           ; BSR set to: 1
 17455                           ;incstack = 0
 17456  005A90  0101               	movlb	1	; () banked
 17457  005A92  93BD               	bcf	_ethData& (0+255),1,b	;volatile
 17458                           
 17459                           ; BSR set to: 1
 17460                           ;j60_driver.c: 629: ECON2 = ECON2 | 0x40;
 17461  005A94  010E               	movlb	14	; () banked
 17462  005A96  51FE               	movf	254,w,b	;volatile
 17463  005A98  0940               	iorlw	64
 17464  005A9A  6FFE               	movwf	254,b	;volatile
 17465                           
 17466                           ;j60_driver.c: 635: if (((nextPacketPointer - 1) < ERXST) ||
 17467                           ;j60_driver.c: 636: ((nextPacketPointer - 1) > ERXND))
 17468  005A9C  D818               	call	PL583	;call to abstracted procedure
 17469  005A9E  51E8               	movf	232,w,b	;volatile
 17470  005AA0  5C19               	subwf	??_ETH_Flush+2,w,c
 17471  005AA2  51E9               	movf	233,w,b	;volatile
 17472  005AA4  581A               	subwfb	??_ETH_Flush+3,w,c
 17473  005AA6  E306               	bnc	l594
 17474                           
 17475                           ; BSR set to: 14
 17476  005AA8  D812               	call	PL583	;call to abstracted procedure
 17477  005AAA  5019               	movf	??_ETH_Flush+2,w,c
 17478  005AAC  5DEA               	subwf	234,w,b	;volatile
 17479  005AAE  501A               	movf	??_ETH_Flush+3,w,c
 17480  005AB0  59EB               	subwfb	235,w,b	;volatile
 17481  005AB2  E205               	bc	l9170
 17482  005AB4                     l594:
 17483                           
 17484                           ; BSR set to: 14
 17485                           ;j60_driver.c: 637: ERXRDPT = ERXND;
 17486  005AB4  CEEA FEEC          	movff	3818,3820	;volatile
 17487  005AB8  CEEB FEED          	movff	3819,3821	;volatile
 17488  005ABC  D006               	goto	l9172
 17489  005ABE                     l9170:
 17490                           
 17491                           ; BSR set to: 14
 17492                           ;j60_driver.c: 638: else
 17493                           ;j60_driver.c: 639: ERXRDPT = nextPacketPointer - 1;
 17494  005ABE  0EFF               	movlw	255
 17495  005AC0  243F               	addwf	_nextPacketPointer,w,c
 17496  005AC2  6FEC               	movwf	236,b	;volatile
 17497  005AC4  0EFF               	movlw	255
 17498  005AC6  2040               	addwfc	_nextPacketPointer+1,w,c
 17499  005AC8  6FED               	movwf	237,b	;volatile
 17500  005ACA                     l9172:
 17501                           
 17502                           ; BSR set to: 14
 17503                           ;j60_driver.c: 641: EIEbits.PKTIE = 1;
 17504  005ACA  8DFB               	bsf	251,6,b	;volatile
 17505                           
 17506                           ; BSR set to: 14
 17507  005ACC  0012               	return		;funcret
 17508  005ACE                     __end_of_ETH_Flush:
 17509                           	opt stack 0
 17510  005ACE                     PL583:
 17511                           	opt stack 20
 17512  005ACE  6817               	setf	??_ETH_Flush& (0+255),c
 17513  005AD0  6818               	setf	(??_ETH_Flush+1)& (0+255),c
 17514  005AD2  C03F  F019         	movff	_nextPacketPointer,??_ETH_Flush+2
 17515  005AD6  C040  F01A         	movff	_nextPacketPointer+1,??_ETH_Flush+3
 17516  005ADA  5017               	movf	??_ETH_Flush,w,c
 17517  005ADC  2619               	addwf	??_ETH_Flush+2,f,c
 17518  005ADE  5018               	movf	??_ETH_Flush+1,w,c
 17519  005AE0  221A               	addwfc	??_ETH_Flush+3,f,c
 17520  005AE2  0012               	return	
 17521  005AE4                     __end_ofPL583:
 17522                           	opt stack 0
 17523                           tosu	equ	0xFFF
 17524                           tosh	equ	0xFFE
 17525                           tosl	equ	0xFFD
 17526                           pclath	equ	0xFFA
 17527                           tblptru	equ	0xFF8
 17528                           tblptrh	equ	0xFF7
 17529                           tblptrl	equ	0xFF6
 17530                           tablat	equ	0xFF5
 17531                           prodh	equ	0xFF4
 17532                           prodl	equ	0xFF3
 17533                           intcon	equ	0xFF2
 17534                           indf0	equ	0xFEF
 17535                           postinc0	equ	0xFEE
 17536                           fsr0h	equ	0xFEA
 17537                           fsr0l	equ	0xFE9
 17538                           wreg	equ	0xFE8
 17539                           indf1	equ	0xFE7
 17540                           postinc1	equ	0xFE6
 17541                           postdec1	equ	0xFE5
 17542                           plusw1	equ	0xFE3
 17543                           fsr1h	equ	0xFE2
 17544                           fsr1l	equ	0xFE1
 17545                           indf2	equ	0xFDF
 17546                           postinc2	equ	0xFDE
 17547                           postdec2	equ	0xFDD
 17548                           plusw2	equ	0xFDB
 17549                           fsr2h	equ	0xFDA
 17550                           fsr2l	equ	0xFD9
 17551                           status	equ	0xFD8
 17552                           
 17553 ;; *************** function _ARPV4_Packet *****************
 17554 ;; Defined at:
 17555 ;;		line 97 in file "../../TCPIP Library/source/arpv4.c"
 17556 ;; Parameters:    Size  Location     Type
 17557 ;;		None
 17558 ;; Auto vars:     Size  Location     Type
 17559 ;;  x               1   39[BANK0 ] unsigned char 
 17560 ;;  arpPtr          2   36[BANK0 ] PTR struct .
 17561 ;;		 -> arpMap(104), 
 17562 ;;  x               1   38[BANK0 ] unsigned char 
 17563 ;;  header         28   42[BANK0 ] struct .
 17564 ;;  entryPointer    2   40[BANK0 ] PTR struct .
 17565 ;;		 -> arpMap(104), 
 17566 ;;  length          2   32[BANK0 ] unsigned int 
 17567 ;;  ret             1   35[BANK0 ] enum E450
 17568 ;;  mergeFlag       1   34[BANK0 ] unsigned char 
 17569 ;; Return value:  Size  Location     Type
 17570 ;;                  1    wreg      enum E450
 17571 ;; Registers used:
 17572 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17573 ;; Tracked objects:
 17574 ;;		On entry : 0/1
 17575 ;;		On exit  : 0/0
 17576 ;;		Unchanged: 0/0
 17577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17579 ;;      Locals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17580 ;;      Temps:          0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17581 ;;      Totals:         0      70       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17582 ;;Total ram usage:       70 bytes
 17583 ;; Hardware stack levels used:    1
 17584 ;; Hardware stack levels required when called:   10
 17585 ;; This function calls:
 17586 ;;		_ETH_GetMAC
 17587 ;;		_ETH_ReadBlock
 17588 ;;		_ETH_Send
 17589 ;;		_ETH_WriteBlock
 17590 ;;		_ETH_WriteStart
 17591 ;; This function is called by:
 17592 ;;		_Network_Read
 17593 ;; This function uses a non-reentrant model
 17594 ;;
 17595                           
 17596                           	psect	text62
 17597  003054                     __ptext62:
 17598                           	opt stack 0
 17599  003054                     _ARPV4_Packet:
 17600                           	opt stack 18
 17601                           
 17602                           ;arpv4.c: 107: length = ETH_ReadBlock((char*)&header,sizeof(arpHeader_t));
 17603                           
 17604                           ; BSR set to: 14
 17605                           ;incstack = 0
 17606  003054  0E8A               	movlw	low ARPV4_Packet@header
 17607  003056  6E17               	movwf	ETH_ReadBlock@buffer,c
 17608  003058  6A18               	clrf	ETH_ReadBlock@buffer+1,c
 17609  00305A  6A1A               	clrf	ETH_ReadBlock@length+1,c
 17610  00305C  0E1C               	movlw	28
 17611  00305E  6E19               	movwf	ETH_ReadBlock@length,c
 17612  003060  EC92  F02C         	call	_ETH_ReadBlock	;wreg free
 17613  003064  C017  F080         	movff	?_ETH_ReadBlock,ARPV4_Packet@length
 17614  003068  C018  F081         	movff	?_ETH_ReadBlock+1,ARPV4_Packet@length+1
 17615                           
 17616                           ; BSR set to: 1
 17617                           ;arpv4.c: 108: if(length == sizeof(arpHeader_t))
 17618  00306C  0E1C               	movlw	28
 17619  00306E  0100               	movlb	0	; () banked
 17620  003070  1980               	xorwf	ARPV4_Packet@length& (0+255),w,b
 17621  003072  1181               	iorwf	(ARPV4_Packet@length+1)& (0+255),w,b
 17622  003074  A4D8               	btfss	status,2,c
 17623  003076  0012               	return	
 17624                           
 17625                           ; BSR set to: 0
 17626                           ;arpv4.c: 109: {
 17627                           ;arpv4.c: 111: mergeFlag = 0;
 17628  003078  6B82               	clrf	ARPV4_Packet@mergeFlag& (0+255),b
 17629                           
 17630                           ; BSR set to: 0
 17631                           ;arpv4.c: 112: entryPointer = arpMap;
 17632  00307A  D988               	call	PL701	;call to abstracted procedure
 17633                           
 17634                           ; BSR set to: 0
 17635                           ;arpv4.c: 114: for(uint8_t x=8; x > 0; x--)
 17636  00307C  0E08               	movlw	8
 17637  00307E  6F86               	movwf	ARPV4_Packet@x& (0+255),b
 17638  003080                     l9190:
 17639                           
 17640                           ; BSR set to: 0
 17641                           ;arpv4.c: 115: {
 17642                           ;arpv4.c: 116: if( (header.spa == entryPointer->ipAddress) && (header.ptype == entryPoin
      +                          ter->protocolType) )
 17643  003080  EE20 F006          	lfsr	2,6
 17644  003084  D97E               	call	PL589	;call to abstracted procedure
 17645  003086  50DE               	movf	postinc2,w,c
 17646  003088  1998               	xorwf	(ARPV4_Packet@header+14)& (0+255),w,b
 17647  00308A  E11A               	bnz	l9200
 17648  00308C  50DE               	movf	postinc2,w,c
 17649  00308E  1999               	xorwf	(ARPV4_Packet@header+15)& (0+255),w,b
 17650  003090  E117               	bnz	l9200
 17651  003092  50DE               	movf	postinc2,w,c
 17652  003094  199A               	xorwf	(ARPV4_Packet@header+16)& (0+255),w,b
 17653  003096  E114               	bnz	l9200
 17654  003098  50DE               	movf	postinc2,w,c
 17655  00309A  199B               	xorwf	(ARPV4_Packet@header+17)& (0+255),w,b
 17656  00309C  E111               	bnz	l9200
 17657                           
 17658                           ; BSR set to: 0
 17659  00309E  EE20 F00A          	lfsr	2,10
 17660  0030A2  D96F               	call	PL589	;call to abstracted procedure
 17661  0030A4  50DE               	movf	postinc2,w,c
 17662  0030A6  198C               	xorwf	(ARPV4_Packet@header+2)& (0+255),w,b
 17663  0030A8  E10B               	bnz	l9200
 17664  0030AA  50DE               	movf	postinc2,w,c
 17665  0030AC  198D               	xorwf	(ARPV4_Packet@header+3)& (0+255),w,b
 17666  0030AE  E108               	bnz	l9200
 17667                           
 17668                           ; BSR set to: 0
 17669                           ;arpv4.c: 117: {
 17670                           ;arpv4.c: 118: entryPointer->age = 0;
 17671                           
 17672                           ; BSR set to: 0
 17673                           ;arpv4.c: 119: entryPointer->macAddress.s = header.sha.s;
 17674  0030B0  D94D               	call	PL513	;call to abstracted procedure
 17675  0030B2                     u14651:
 17676  0030B2  CFDB FFE3          	movff	plusw2,plusw1
 17677  0030B6  06E8               	decf	wreg,f,c
 17678  0030B8  E2FC               	bc	u14651
 17679                           
 17680                           ; BSR set to: 0
 17681                           ;arpv4.c: 120: mergeFlag = 1;
 17682  0030BA  0E01               	movlw	1
 17683  0030BC  6F82               	movwf	ARPV4_Packet@mergeFlag& (0+255),b
 17684                           
 17685                           ;arpv4.c: 121: break;
 17686  0030BE  D007               	goto	l9206
 17687  0030C0                     l9200:
 17688                           
 17689                           ; BSR set to: 0
 17690                           ;arpv4.c: 122: }
 17691                           ;arpv4.c: 123: entryPointer++;
 17692  0030C0  0E0D               	movlw	13
 17693  0030C2  2788               	addwf	ARPV4_Packet@entryPointer& (0+255),f,b
 17694  0030C4  0E00               	movlw	0
 17695  0030C6  2389               	addwfc	(ARPV4_Packet@entryPointer+1)& (0+255),f,b
 17696                           
 17697                           ; BSR set to: 0
 17698  0030C8  0786               	decf	ARPV4_Packet@x& (0+255),f,b
 17699                           
 17700                           ; BSR set to: 0
 17701  0030CA  5186               	movf	ARPV4_Packet@x& (0+255),w,b
 17702  0030CC  E1D9               	bnz	l9190
 17703  0030CE                     l9206:
 17704                           
 17705                           ; BSR set to: 0
 17706                           ;arpv4.c: 124: }
 17707                           ;arpv4.c: 126: if(ipv4Address && (ipv4Address == ((((uint32_t)header.tpa&(uint32_t)0xff0
      +                          00000) >> 24) | (((uint32_t)header.tpa&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)header.
      +                          tpa&(uint32_t)0x0000ff00) << 8) | (((uint32_t)header.tpa&(uint32_t)0x000000ff) << 24) ))
      +                          )
 17708  0030CE  ECC9  F022         	call	PL689	;call to abstracted procedure
 17709  0030D2  B4D8               	btfsc	status,2,c
 17710  0030D4  0012               	return	
 17711                           
 17712                           ; BSR set to: 0
 17713  0030D6  51A2               	movf	(ARPV4_Packet@header+24)& (0+255),w,b
 17714  0030D8  D92F               	call	PL505	;call to abstracted procedure
 17715  0030DA  EE20  F0A2         	lfsr	2,ARPV4_Packet@header+24
 17716  0030DE  D918               	call	PL491	;call to abstracted procedure
 17717  0030E0  C0A2  F068         	movff	ARPV4_Packet@header+24,??_ARPV4_Packet+8
 17718  0030E4  C0A3  F069         	movff	ARPV4_Packet@header+25,??_ARPV4_Packet+9
 17719  0030E8  C0A4  F06A         	movff	ARPV4_Packet@header+26,??_ARPV4_Packet+10
 17720  0030EC  C0A5  F06B         	movff	ARPV4_Packet@header+27,??_ARPV4_Packet+11
 17721  0030F0  D93B               	call	PL527	;call to abstracted procedure
 17722  0030F2  EE20  F0A2         	lfsr	2,ARPV4_Packet@header+24
 17723  0030F6  D8D3               	call	PL421	;call to abstracted procedure
 17724  0030F8  5033               	movf	_ipv4Address,w,c
 17725  0030FA  197C               	xorwf	(??_ARPV4_Packet+28)& (0+255),w,b
 17726  0030FC  E109               	bnz	u14691
 17727  0030FE  5034               	movf	_ipv4Address+1,w,c
 17728  003100  197D               	xorwf	(??_ARPV4_Packet+29)& (0+255),w,b
 17729  003102  E106               	bnz	u14691
 17730  003104  5035               	movf	_ipv4Address+2,w,c
 17731  003106  197E               	xorwf	(??_ARPV4_Packet+30)& (0+255),w,b
 17732  003108  E103               	bnz	u14691
 17733  00310A  5036               	movf	_ipv4Address+3,w,c
 17734  00310C  197F               	xorwf	(??_ARPV4_Packet+31)& (0+255),w,b
 17735  00310E  A4D8               	btfss	status,2,c
 17736  003110                     u14691:
 17737  003110  0012               	return	
 17738                           
 17739                           ; BSR set to: 0
 17740                           ;arpv4.c: 127: {
 17741                           ;arpv4.c: 128: if(!mergeFlag)
 17742  003112  5182               	movf	ARPV4_Packet@mergeFlag& (0+255),w,b
 17743  003114  E149               	bnz	l9236
 17744                           
 17745                           ; BSR set to: 0
 17746                           ;arpv4.c: 129: {
 17747                           ;arpv4.c: 131: entryPointer = arpMap;
 17748  003116  D93A               	call	PL701	;call to abstracted procedure
 17749                           
 17750                           ;arpv4.c: 132: arpMap_t *arpPtr = arpMap;
 17751  003118  0E00               	movlw	low _arpMap
 17752  00311A  6F84               	movwf	ARPV4_Packet@arpPtr& (0+255),b
 17753  00311C  0E03               	movlw	high _arpMap
 17754  00311E  6F85               	movwf	(ARPV4_Packet@arpPtr+1)& (0+255),b
 17755                           
 17756                           ; BSR set to: 0
 17757                           ;arpv4.c: 133: for(uint8_t x=8; x !=0; x--)
 17758  003120  0E08               	movlw	8
 17759  003122  6F87               	movwf	ARPV4_Packet@x_1670& (0+255),b
 17760  003124                     l9220:
 17761                           
 17762                           ; BSR set to: 0
 17763                           ;arpv4.c: 134: {
 17764                           ;arpv4.c: 135: if(entryPointer->age < arpPtr->age)
 17765  003124  EE20 F00C          	lfsr	2,12
 17766  003128  5184               	movf	ARPV4_Packet@arpPtr& (0+255),w,b
 17767  00312A  26D9               	addwf	fsr2l,f,c
 17768  00312C  5185               	movf	(ARPV4_Packet@arpPtr+1)& (0+255),w,b
 17769  00312E  22DA               	addwfc	fsr2h,f,c
 17770  003130  EE10 F00C          	lfsr	1,12
 17771  003134  5188               	movf	ARPV4_Packet@entryPointer& (0+255),w,b
 17772  003136  26E1               	addwf	fsr1l,f,c
 17773  003138  5189               	movf	(ARPV4_Packet@entryPointer+1)& (0+255),w,b
 17774  00313A  22E2               	addwfc	fsr1h,f,c
 17775  00313C  50DE               	movf	postinc2,w,c
 17776  00313E  5CE6               	subwf	postinc1,w,c
 17777  003140  E204               	bc	l680
 17778                           
 17779                           ; BSR set to: 0
 17780                           ;arpv4.c: 136: {
 17781                           ;arpv4.c: 137: entryPointer = arpPtr;
 17782  003142  C084  F088         	movff	ARPV4_Packet@arpPtr,ARPV4_Packet@entryPointer
 17783  003146  C085  F089         	movff	ARPV4_Packet@arpPtr+1,ARPV4_Packet@entryPointer+1
 17784  00314A                     l680:
 17785                           
 17786                           ; BSR set to: 0
 17787                           ;arpv4.c: 138: }
 17788                           ;arpv4.c: 140: arpPtr++;
 17789  00314A  0E0D               	movlw	13
 17790  00314C  2784               	addwf	ARPV4_Packet@arpPtr& (0+255),f,b
 17791  00314E  0E00               	movlw	0
 17792  003150  2385               	addwfc	(ARPV4_Packet@arpPtr+1)& (0+255),f,b
 17793                           
 17794                           ; BSR set to: 0
 17795  003152  0787               	decf	ARPV4_Packet@x_1670& (0+255),f,b
 17796                           
 17797                           ; BSR set to: 0
 17798  003154  5187               	movf	ARPV4_Packet@x_1670& (0+255),w,b
 17799  003156  E1E6               	bnz	l9220
 17800                           
 17801                           ; BSR set to: 0
 17802                           ;arpv4.c: 141: }
 17803                           ;arpv4.c: 144: entryPointer->age = 0;
 17804                           
 17805                           ; BSR set to: 0
 17806                           ;arpv4.c: 145: entryPointer->macAddress.s = header.sha.s;
 17807  003158  D8F9               	call	PL513	;call to abstracted procedure
 17808  00315A                     u14731:
 17809  00315A  CFDB FFE3          	movff	plusw2,plusw1
 17810  00315E  06E8               	decf	wreg,f,c
 17811  003160  E2FC               	bc	u14731
 17812                           
 17813                           ; BSR set to: 0
 17814                           ;arpv4.c: 146: entryPointer->ipAddress = ((((uint32_t)header.spa&(uint32_t)0xff000000) >
      +                          > 24) | (((uint32_t)header.spa&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)header.spa&(uin
      +                          t32_t)0x0000ff00) << 8) | (((uint32_t)header.spa&(uint32_t)0x000000ff) << 24) );
 17815  003162  5198               	movf	(ARPV4_Packet@header+14)& (0+255),w,b
 17816  003164  D8E9               	call	PL505	;call to abstracted procedure
 17817  003166  EE20  F098         	lfsr	2,ARPV4_Packet@header+14
 17818  00316A  D8D2               	call	PL491	;call to abstracted procedure
 17819  00316C  C098  F068         	movff	ARPV4_Packet@header+14,??_ARPV4_Packet+8
 17820  003170  C099  F069         	movff	ARPV4_Packet@header+15,??_ARPV4_Packet+9
 17821  003174  C09A  F06A         	movff	ARPV4_Packet@header+16,??_ARPV4_Packet+10
 17822  003178  C09B  F06B         	movff	ARPV4_Packet@header+17,??_ARPV4_Packet+11
 17823  00317C  D8F5               	call	PL527	;call to abstracted procedure
 17824  00317E  EE20  F098         	lfsr	2,ARPV4_Packet@header+14
 17825  003182  D88D               	call	PL421	;call to abstracted procedure
 17826  003184  EE20 F006          	lfsr	2,6
 17827  003188  D8FC               	call	PL589	;call to abstracted procedure
 17828  00318A  C07C  FFDE         	movff	??_ARPV4_Packet+28,postinc2
 17829  00318E  C07D  FFDE         	movff	??_ARPV4_Packet+29,postinc2
 17830  003192  C07E  FFDE         	movff	??_ARPV4_Packet+30,postinc2
 17831  003196  C07F  FFDE         	movff	??_ARPV4_Packet+31,postinc2
 17832                           
 17833                           ; BSR set to: 0
 17834                           ;arpv4.c: 147: entryPointer->protocolType = header.ptype;
 17835  00319A  EE20 F00A          	lfsr	2,10
 17836  00319E  D8F1               	call	PL589	;call to abstracted procedure
 17837  0031A0  C08C  FFDE         	movff	ARPV4_Packet@header+2,postinc2
 17838  0031A4  C08D  FFDD         	movff	ARPV4_Packet@header+3,postdec2
 17839  0031A8                     l9236:
 17840                           
 17841                           ; BSR set to: 0
 17842                           ;arpv4.c: 148: }
 17843                           ;arpv4.c: 149: if(header.oper == ((((uint16_t)1 & (uint16_t)0xFF00) >> 8) | (((uint16_t)
      +                          1 & (uint16_t)0x00FF) << 8)))
 17844  0031A8  0591               	decf	(ARPV4_Packet@header+7)& (0+255),w,b
 17845  0031AA  1190               	iorwf	(ARPV4_Packet@header+6)& (0+255),w,b
 17846  0031AC  A4D8               	btfss	status,2,c
 17847  0031AE  0012               	return	
 17848                           
 17849                           ; BSR set to: 0
 17850                           ;arpv4.c: 150: {
 17851                           ;arpv4.c: 151: ret = ETH_WriteStart(&header.sha ,0x0806);
 17852  0031B0  0E92               	movlw	low (ARPV4_Packet@header+8)
 17853  0031B2  6E17               	movwf	ETH_WriteStart@dest_mac,c
 17854  0031B4  6A18               	clrf	ETH_WriteStart@dest_mac+1,c
 17855  0031B6  EC30  F024         	call	PL729	;call to abstracted procedure
 17856  0031BA  EC73  F025         	call	_ETH_WriteStart	;wreg free
 17857  0031BE  0100               	movlb	0	; () banked
 17858  0031C0  6F83               	movwf	ARPV4_Packet@ret& (0+255),b
 17859                           
 17860                           ; BSR set to: 0
 17861                           ;arpv4.c: 152: if(ret == SUCCESS)
 17862  0031C2  0583               	decf	ARPV4_Packet@ret& (0+255),w,b
 17863  0031C4  A4D8               	btfss	status,2,c
 17864  0031C6  0012               	return	
 17865                           
 17866                           ; BSR set to: 0
 17867                           ;arpv4.c: 153: {
 17868                           ;arpv4.c: 155: header.tha.s = header.sha.s;
 17869  0031C8  EE20  F092         	lfsr	2,ARPV4_Packet@header+8
 17870  0031CC  EE10  F09C         	lfsr	1,ARPV4_Packet@header+18
 17871  0031D0  0E05               	movlw	5
 17872  0031D2                     u14771:
 17873  0031D2  CFDB FFE3          	movff	plusw2,plusw1
 17874  0031D6  06E8               	decf	wreg,f,c
 17875  0031D8  E2FC               	bc	u14771
 17876                           
 17877                           ; BSR set to: 0
 17878                           ;arpv4.c: 156: ETH_GetMAC((char*)&header.sha.s);
 17879  0031DA  0E92               	movlw	low (ARPV4_Packet@header+8)
 17880  0031DC  6E17               	movwf	ETH_GetMAC@mac,c
 17881  0031DE  ECF7  F02F         	call	_ETH_GetMAC	;wreg free
 17882                           
 17883                           ;arpv4.c: 157: header.tpa = header.spa;
 17884  0031E2  C098  F0A2         	movff	ARPV4_Packet@header+14,ARPV4_Packet@header+24
 17885  0031E6  C099  F0A3         	movff	ARPV4_Packet@header+15,ARPV4_Packet@header+25
 17886  0031EA  C09A  F0A4         	movff	ARPV4_Packet@header+16,ARPV4_Packet@header+26
 17887  0031EE  C09B  F0A5         	movff	ARPV4_Packet@header+17,ARPV4_Packet@header+27
 17888                           
 17889                           ;arpv4.c: 158: header.spa = ((((uint32_t)ipv4Address&(uint32_t)0xff000000) >> 24) | (((u
      +                          int32_t)ipv4Address&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)ipv4Address&(uint32_t)0x00
      +                          00ff00) << 8) | (((uint32_t)ipv4Address&(uint32_t)0x000000ff) << 24) );
 17890  0031F2  5033               	movf	_ipv4Address,w,c
 17891  0031F4  0100               	movlb	0	; () banked
 17892  0031F6  D8A0               	call	PL505	;call to abstracted procedure
 17893  0031F8  6B64               	clrf	(??_ARPV4_Packet+4)& (0+255),b
 17894  0031FA  5034               	movf	_ipv4Address+1,w,c
 17895  0031FC  6F65               	movwf	(??_ARPV4_Packet+5)& (0+255),b
 17896  0031FE  6B66               	clrf	(??_ARPV4_Packet+6)& (0+255),b
 17897  003200  6B67               	clrf	(??_ARPV4_Packet+7)& (0+255),b
 17898  003202  C066  F067         	movff	??_ARPV4_Packet+6,??_ARPV4_Packet+7
 17899  003206  C065  F066         	movff	??_ARPV4_Packet+5,??_ARPV4_Packet+6
 17900  00320A  C064  F065         	movff	??_ARPV4_Packet+4,??_ARPV4_Packet+5
 17901  00320E  6B64               	clrf	(??_ARPV4_Packet+4)& (0+255),b
 17902  003210  6B68               	clrf	(??_ARPV4_Packet+8)& (0+255),b
 17903  003212  5035               	movf	_ipv4Address+2,w,c
 17904  003214  6F69               	movwf	(??_ARPV4_Packet+9)& (0+255),b
 17905  003216  6B6A               	clrf	(??_ARPV4_Packet+10)& (0+255),b
 17906  003218  5168               	movf	(??_ARPV4_Packet+8)& (0+255),w,b
 17907  00321A  6F6B               	movwf	(??_ARPV4_Packet+11)& (0+255),b
 17908  00321C  5169               	movf	(??_ARPV4_Packet+9)& (0+255),w,b
 17909  00321E  6F6C               	movwf	(??_ARPV4_Packet+12)& (0+255),b
 17910  003220  516A               	movf	(??_ARPV4_Packet+10)& (0+255),w,b
 17911  003222  6F6D               	movwf	(??_ARPV4_Packet+13)& (0+255),b
 17912  003224  6B6E               	clrf	(??_ARPV4_Packet+14)& (0+255),b
 17913  003226  6B6F               	clrf	(??_ARPV4_Packet+15)& (0+255),b
 17914  003228  6B70               	clrf	(??_ARPV4_Packet+16)& (0+255),b
 17915  00322A  6B71               	clrf	(??_ARPV4_Packet+17)& (0+255),b
 17916  00322C  5036               	movf	_ipv4Address+3,w,c
 17917  00322E  6F72               	movwf	(??_ARPV4_Packet+18)& (0+255),b
 17918  003230  0E19               	movlw	25
 17919  003232  D005               	goto	u14780
 17920  003234                     u14785:
 17921  003234  90D8               	bcf	status,0,c
 17922  003236  3372               	rrcf	(??_ARPV4_Packet+18)& (0+255),f,b
 17923  003238  3371               	rrcf	(??_ARPV4_Packet+17)& (0+255),f,b
 17924  00323A  3370               	rrcf	(??_ARPV4_Packet+16)& (0+255),f,b
 17925  00323C  336F               	rrcf	(??_ARPV4_Packet+15)& (0+255),f,b
 17926  00323E                     u14780:
 17927  00323E  2EE8               	decfsz	wreg,f,c
 17928  003240  D7F9               	goto	u14785
 17929  003242  516B               	movf	(??_ARPV4_Packet+11)& (0+255),w,b
 17930  003244  116F               	iorwf	(??_ARPV4_Packet+15)& (0+255),w,b
 17931  003246  6F73               	movwf	(??_ARPV4_Packet+19)& (0+255),b
 17932  003248  516C               	movf	(??_ARPV4_Packet+12)& (0+255),w,b
 17933  00324A  1170               	iorwf	(??_ARPV4_Packet+16)& (0+255),w,b
 17934  00324C  6F74               	movwf	(??_ARPV4_Packet+20)& (0+255),b
 17935  00324E  516D               	movf	(??_ARPV4_Packet+13)& (0+255),w,b
 17936  003250  1171               	iorwf	(??_ARPV4_Packet+17)& (0+255),w,b
 17937  003252  6F75               	movwf	(??_ARPV4_Packet+21)& (0+255),b
 17938  003254  516E               	movf	(??_ARPV4_Packet+14)& (0+255),w,b
 17939  003256  1172               	iorwf	(??_ARPV4_Packet+18)& (0+255),w,b
 17940  003258  6F76               	movwf	(??_ARPV4_Packet+22)& (0+255),b
 17941  00325A  5164               	movf	(??_ARPV4_Packet+4)& (0+255),w,b
 17942  00325C  1173               	iorwf	(??_ARPV4_Packet+19)& (0+255),w,b
 17943  00325E  6F77               	movwf	(??_ARPV4_Packet+23)& (0+255),b
 17944  003260  5165               	movf	(??_ARPV4_Packet+5)& (0+255),w,b
 17945  003262  1174               	iorwf	(??_ARPV4_Packet+20)& (0+255),w,b
 17946  003264  6F78               	movwf	(??_ARPV4_Packet+24)& (0+255),b
 17947  003266  5166               	movf	(??_ARPV4_Packet+6)& (0+255),w,b
 17948  003268  1175               	iorwf	(??_ARPV4_Packet+21)& (0+255),w,b
 17949  00326A  6F79               	movwf	(??_ARPV4_Packet+25)& (0+255),b
 17950  00326C  5167               	movf	(??_ARPV4_Packet+7)& (0+255),w,b
 17951  00326E  1176               	iorwf	(??_ARPV4_Packet+22)& (0+255),w,b
 17952  003270  6F7A               	movwf	(??_ARPV4_Packet+26)& (0+255),b
 17953  003272  5160               	movf	??_ARPV4_Packet& (0+255),w,b
 17954  003274  1177               	iorwf	(??_ARPV4_Packet+23)& (0+255),w,b
 17955  003276  6F98               	movwf	(ARPV4_Packet@header+14)& (0+255),b
 17956  003278  5161               	movf	(??_ARPV4_Packet+1)& (0+255),w,b
 17957  00327A  1178               	iorwf	(??_ARPV4_Packet+24)& (0+255),w,b
 17958  00327C  6F99               	movwf	(ARPV4_Packet@header+15)& (0+255),b
 17959  00327E  5162               	movf	(??_ARPV4_Packet+2)& (0+255),w,b
 17960  003280  1179               	iorwf	(??_ARPV4_Packet+25)& (0+255),w,b
 17961  003282  6F9A               	movwf	(ARPV4_Packet@header+16)& (0+255),b
 17962  003284  5163               	movf	(??_ARPV4_Packet+3)& (0+255),w,b
 17963  003286  117A               	iorwf	(??_ARPV4_Packet+26)& (0+255),w,b
 17964  003288  6F9B               	movwf	(ARPV4_Packet@header+17)& (0+255),b
 17965                           
 17966                           ; BSR set to: 0
 17967                           ;arpv4.c: 159: header.oper = ((((uint16_t)2 & (uint16_t)0xFF00) >> 8) | (((uint16_t)2 & 
      +                          (uint16_t)0x00FF) << 8));
 17968  00328A  0E02               	movlw	2
 17969  00328C  6F91               	movwf	(ARPV4_Packet@header+7)& (0+255),b
 17970  00328E  6B90               	clrf	(ARPV4_Packet@header+6)& (0+255),b
 17971                           
 17972                           ; BSR set to: 0
 17973                           ;arpv4.c: 160: ETH_WriteBlock((char*)&header,sizeof(header));
 17974  003290  0E8A               	movlw	low ARPV4_Packet@header
 17975  003292  EC2A  F024         	call	PL675	;call to abstracted procedure
 17976  003296  EC85  F02E         	call	_ETH_WriteBlock	;wreg free
 17977  00329A  EF88  F030         	goto	_ETH_Send	;wreg free
 17978  00329E                     __end_of_ARPV4_Packet:
 17979                           	opt stack 0
 17980  00329E                     PL421:
 17981                           	opt stack 18
 17982  00329E  14DE               	andwf	postinc2,w,c
 17983  0032A0  6F70               	movwf	(??_ARPV4_Packet+16)& (0+255),b
 17984  0032A2  0E00               	movlw	0
 17985  0032A4  14DE               	andwf	postinc2,w,c
 17986  0032A6  6F71               	movwf	(??_ARPV4_Packet+17)& (0+255),b
 17987  0032A8  0E00               	movlw	0
 17988  0032AA  14DE               	andwf	postinc2,w,c
 17989  0032AC  6F72               	movwf	(??_ARPV4_Packet+18)& (0+255),b
 17990  0032AE  0EFF               	movlw	255
 17991  0032B0  14DE               	andwf	postinc2,w,c
 17992  0032B2  6F73               	movwf	(??_ARPV4_Packet+19)& (0+255),b
 17993  0032B4  0E19               	movlw	25
 17994  0032B6  D005               	goto	u14680
 17995  0032B8                     u14685:
 17996  0032B8  90D8               	bcf	status,0,c
 17997  0032BA  3373               	rrcf	(??_ARPV4_Packet+19)& (0+255),f,b
 17998  0032BC  3372               	rrcf	(??_ARPV4_Packet+18)& (0+255),f,b
 17999  0032BE  3371               	rrcf	(??_ARPV4_Packet+17)& (0+255),f,b
 18000  0032C0  3370               	rrcf	(??_ARPV4_Packet+16)& (0+255),f,b
 18001  0032C2                     u14680:
 18002  0032C2  2EE8               	decfsz	wreg,f,c
 18003  0032C4  D7F9               	goto	u14685
 18004  0032C6  516C               	movf	(??_ARPV4_Packet+12)& (0+255),w,b
 18005  0032C8  1170               	iorwf	(??_ARPV4_Packet+16)& (0+255),w,b
 18006  0032CA  6F74               	movwf	(??_ARPV4_Packet+20)& (0+255),b
 18007  0032CC  516D               	movf	(??_ARPV4_Packet+13)& (0+255),w,b
 18008  0032CE  1171               	iorwf	(??_ARPV4_Packet+17)& (0+255),w,b
 18009  0032D0  6F75               	movwf	(??_ARPV4_Packet+21)& (0+255),b
 18010  0032D2  516E               	movf	(??_ARPV4_Packet+14)& (0+255),w,b
 18011  0032D4  1172               	iorwf	(??_ARPV4_Packet+18)& (0+255),w,b
 18012  0032D6  6F76               	movwf	(??_ARPV4_Packet+22)& (0+255),b
 18013  0032D8  516F               	movf	(??_ARPV4_Packet+15)& (0+255),w,b
 18014  0032DA  1173               	iorwf	(??_ARPV4_Packet+19)& (0+255),w,b
 18015  0032DC  6F77               	movwf	(??_ARPV4_Packet+23)& (0+255),b
 18016  0032DE  5164               	movf	(??_ARPV4_Packet+4)& (0+255),w,b
 18017  0032E0  1174               	iorwf	(??_ARPV4_Packet+20)& (0+255),w,b
 18018  0032E2  6F78               	movwf	(??_ARPV4_Packet+24)& (0+255),b
 18019  0032E4  5165               	movf	(??_ARPV4_Packet+5)& (0+255),w,b
 18020  0032E6  1175               	iorwf	(??_ARPV4_Packet+21)& (0+255),w,b
 18021  0032E8  6F79               	movwf	(??_ARPV4_Packet+25)& (0+255),b
 18022  0032EA  5166               	movf	(??_ARPV4_Packet+6)& (0+255),w,b
 18023  0032EC  1176               	iorwf	(??_ARPV4_Packet+22)& (0+255),w,b
 18024  0032EE  6F7A               	movwf	(??_ARPV4_Packet+26)& (0+255),b
 18025  0032F0  5167               	movf	(??_ARPV4_Packet+7)& (0+255),w,b
 18026  0032F2  1177               	iorwf	(??_ARPV4_Packet+23)& (0+255),w,b
 18027  0032F4  6F7B               	movwf	(??_ARPV4_Packet+27)& (0+255),b
 18028  0032F6  5160               	movf	??_ARPV4_Packet& (0+255),w,b
 18029  0032F8  1178               	iorwf	(??_ARPV4_Packet+24)& (0+255),w,b
 18030  0032FA  6F7C               	movwf	(??_ARPV4_Packet+28)& (0+255),b
 18031  0032FC  5161               	movf	(??_ARPV4_Packet+1)& (0+255),w,b
 18032  0032FE  1179               	iorwf	(??_ARPV4_Packet+25)& (0+255),w,b
 18033  003300  6F7D               	movwf	(??_ARPV4_Packet+29)& (0+255),b
 18034  003302  5162               	movf	(??_ARPV4_Packet+2)& (0+255),w,b
 18035  003304  117A               	iorwf	(??_ARPV4_Packet+26)& (0+255),w,b
 18036  003306  6F7E               	movwf	(??_ARPV4_Packet+30)& (0+255),b
 18037  003308  5163               	movf	(??_ARPV4_Packet+3)& (0+255),w,b
 18038  00330A  117B               	iorwf	(??_ARPV4_Packet+27)& (0+255),w,b
 18039  00330C  6F7F               	movwf	(??_ARPV4_Packet+31)& (0+255),b
 18040  00330E  0012               	return	
 18041  003310                     __end_ofPL421:
 18042                           	opt stack 0
 18043  003310                     PL491:
 18044                           	opt stack 18
 18045  003310  0E00               	movlw	0
 18046  003312  14DE               	andwf	postinc2,w,c
 18047  003314  6F64               	movwf	(??_ARPV4_Packet+4)& (0+255),b
 18048  003316  0EFF               	movlw	255
 18049  003318  14DE               	andwf	postinc2,w,c
 18050  00331A  6F65               	movwf	(??_ARPV4_Packet+5)& (0+255),b
 18051  00331C  0E00               	movlw	0
 18052  00331E  14DE               	andwf	postinc2,w,c
 18053  003320  6F66               	movwf	(??_ARPV4_Packet+6)& (0+255),b
 18054  003322  0E00               	movlw	0
 18055  003324  14DE               	andwf	postinc2,w,c
 18056  003326  6F67               	movwf	(??_ARPV4_Packet+7)& (0+255),b
 18057  003328  C066  F067         	movff	??_ARPV4_Packet+6,??_ARPV4_Packet+7
 18058  00332C  C065  F066         	movff	??_ARPV4_Packet+5,??_ARPV4_Packet+6
 18059  003330  C064  F065         	movff	??_ARPV4_Packet+4,??_ARPV4_Packet+5
 18060  003334  6B64               	clrf	(??_ARPV4_Packet+4)& (0+255),b
 18061  003336  0012               	return	
 18062  003338                     __end_ofPL491:
 18063                           	opt stack 0
 18064  003338                     PL505:
 18065                           	opt stack 18
 18066  003338  6F60               	movwf	??_ARPV4_Packet& (0+255),b
 18067  00333A  6B61               	clrf	(??_ARPV4_Packet+1)& (0+255),b
 18068  00333C  6B62               	clrf	(??_ARPV4_Packet+2)& (0+255),b
 18069  00333E  6B63               	clrf	(??_ARPV4_Packet+3)& (0+255),b
 18070  003340  C060  F063         	movff	??_ARPV4_Packet,??_ARPV4_Packet+3
 18071  003344  6B62               	clrf	(??_ARPV4_Packet+2)& (0+255),b
 18072  003346  6B61               	clrf	(??_ARPV4_Packet+1)& (0+255),b
 18073  003348  6B60               	clrf	??_ARPV4_Packet& (0+255),b
 18074  00334A  0012               	return	
 18075  00334C                     __end_ofPL505:
 18076                           	opt stack 0
 18077  00334C                     PL513:
 18078                           	opt stack 18
 18079  00334C  EE20 F00C          	lfsr	2,12
 18080  003350  5188               	movf	ARPV4_Packet@entryPointer& (0+255),w,b
 18081  003352  26D9               	addwf	fsr2l,f,c
 18082  003354  5189               	movf	(ARPV4_Packet@entryPointer+1)& (0+255),w,b
 18083  003356  22DA               	addwfc	fsr2h,f,c
 18084  003358  6ADF               	clrf	indf2,c
 18085  00335A  EE20  F092         	lfsr	2,ARPV4_Packet@header+8
 18086  00335E  C088  FFE1         	movff	ARPV4_Packet@entryPointer,fsr1l
 18087  003362  C089  FFE2         	movff	ARPV4_Packet@entryPointer+1,fsr1h
 18088  003366  0C05               	retlw	5
 18089  003368                     __end_ofPL513:
 18090                           	opt stack 0
 18091  003368                     PL527:
 18092                           	opt stack 18
 18093  003368  C069  F068         	movff	??_ARPV4_Packet+9,??_ARPV4_Packet+8
 18094  00336C  C06A  F069         	movff	??_ARPV4_Packet+10,??_ARPV4_Packet+9
 18095  003370  C06B  F06A         	movff	??_ARPV4_Packet+11,??_ARPV4_Packet+10
 18096  003374  6B6B               	clrf	(??_ARPV4_Packet+11)& (0+255),b
 18097  003376  6B6C               	clrf	(??_ARPV4_Packet+12)& (0+255),b
 18098  003378  5169               	movf	(??_ARPV4_Packet+9)& (0+255),w,b
 18099  00337A  6F6D               	movwf	(??_ARPV4_Packet+13)& (0+255),b
 18100  00337C  6B6E               	clrf	(??_ARPV4_Packet+14)& (0+255),b
 18101  00337E  6B6F               	clrf	(??_ARPV4_Packet+15)& (0+255),b
 18102  003380  0C00               	retlw	0
 18103  003382                     __end_ofPL527:
 18104                           	opt stack 0
 18105  003382                     PL589:
 18106                           	opt stack 18
 18107  003382  5188               	movf	ARPV4_Packet@entryPointer& (0+255),w,b
 18108  003384  26D9               	addwf	fsr2l,f,c
 18109  003386  5189               	movf	(ARPV4_Packet@entryPointer+1)& (0+255),w,b
 18110  003388  22DA               	addwfc	fsr2h,f,c
 18111  00338A  0012               	return	
 18112  00338C                     __end_ofPL589:
 18113                           	opt stack 0
 18114  00338C                     PL701:
 18115                           	opt stack 18
 18116  00338C  0E00               	movlw	low _arpMap
 18117  00338E  6F88               	movwf	ARPV4_Packet@entryPointer& (0+255),b
 18118  003390  0E03               	movlw	high _arpMap
 18119  003392  6F89               	movwf	(ARPV4_Packet@entryPointer+1)& (0+255),b
 18120  003394  0012               	return	
 18121  003396                     __end_ofPL701:
 18122                           	opt stack 0
 18123                           tosu	equ	0xFFF
 18124                           tosh	equ	0xFFE
 18125                           tosl	equ	0xFFD
 18126                           pclath	equ	0xFFA
 18127                           tblptru	equ	0xFF8
 18128                           tblptrh	equ	0xFF7
 18129                           tblptrl	equ	0xFF6
 18130                           tablat	equ	0xFF5
 18131                           prodh	equ	0xFF4
 18132                           prodl	equ	0xFF3
 18133                           intcon	equ	0xFF2
 18134                           indf0	equ	0xFEF
 18135                           postinc0	equ	0xFEE
 18136                           fsr0h	equ	0xFEA
 18137                           fsr0l	equ	0xFE9
 18138                           wreg	equ	0xFE8
 18139                           indf1	equ	0xFE7
 18140                           postinc1	equ	0xFE6
 18141                           postdec1	equ	0xFE5
 18142                           plusw1	equ	0xFE3
 18143                           fsr1h	equ	0xFE2
 18144                           fsr1l	equ	0xFE1
 18145                           indf2	equ	0xFDF
 18146                           postinc2	equ	0xFDE
 18147                           postdec2	equ	0xFDD
 18148                           plusw2	equ	0xFDB
 18149                           fsr2h	equ	0xFDA
 18150                           fsr2l	equ	0xFD9
 18151                           status	equ	0xFD8
 18152                           
 18153 ;; *************** function _ETH_ReadBlock *****************
 18154 ;; Defined at:
 18155 ;;		line 445 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 18156 ;; Parameters:    Size  Location     Type
 18157 ;;  buffer          2   22[COMRAM] PTR void 
 18158 ;;		 -> ?_sprintf(2), ?_printf(2), main@str(32), STR_8(13), 
 18159 ;;		 -> STR_7(17), STR_6(7), TCP_Server@rxdataPort7(20), STR_5(10), 
 18160 ;;		 -> udpHeader(8), tcpHeader(20), Network_Read@debug_str(80), Network_Read@header(14), 
 18161 ;;		 -> ipv4Header(20), ICMP_Receive@icmpHdr(8), DHCP_Handler@ethPktMAC(6), ARPV4_Packet@header(28), 
 18162 ;;		 -> STR_1(15), NULL(0), 
 18163 ;;  length          2   24[COMRAM] unsigned int 
 18164 ;; Auto vars:     Size  Location     Type
 18165 ;;  p               2   29[COMRAM] PTR unsigned char 
 18166 ;;		 -> ?_sprintf(2), ?_printf(2), main@str(32), STR_8(13), 
 18167 ;;		 -> STR_7(17), STR_6(7), TCP_Server@rxdataPort7(20), STR_5(10), 
 18168 ;;		 -> udpHeader(8), tcpHeader(20), Network_Read@debug_str(80), Network_Read@header(14), 
 18169 ;;		 -> ipv4Header(20), ICMP_Receive@icmpHdr(8), DHCP_Handler@ethPktMAC(6), ARPV4_Packet@header(28), 
 18170 ;;		 -> STR_1(15), NULL(0), 
 18171 ;;  len             2   27[COMRAM] unsigned int 
 18172 ;; Return value:  Size  Location     Type
 18173 ;;                  2   22[COMRAM] unsigned int 
 18174 ;; Registers used:
 18175 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 18176 ;; Tracked objects:
 18177 ;;		On entry : 0/1
 18178 ;;		On exit  : F/1
 18179 ;;		Unchanged: 0/0
 18180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18181 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18182 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18183 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18184 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18185 ;;Total ram usage:        9 bytes
 18186 ;; Hardware stack levels used:    1
 18187 ;; Hardware stack levels required when called:    9
 18188 ;; This function calls:
 18189 ;;		_ETH_EdataRead
 18190 ;; This function is called by:
 18191 ;;		_ARPV4_Packet
 18192 ;;		_DHCP_Handler
 18193 ;;		_ICMP_Receive
 18194 ;;		_IPV4_Packet
 18195 ;;		_Network_Read
 18196 ;;		_TCP_PayloadSave
 18197 ;;		_TCP_Recv
 18198 ;;		_UDP_Receive
 18199 ;; This function uses a non-reentrant model
 18200 ;;
 18201                           
 18202                           	psect	text63
 18203  005924                     __ptext63:
 18204                           	opt stack 0
 18205  005924                     _ETH_ReadBlock:
 18206                           	opt stack 17
 18207                           
 18208                           ;j60_driver.c: 447: uint16_t len = 0;
 18209                           
 18210                           ;incstack = 0
 18211  005924  6A1C               	clrf	ETH_ReadBlock@len,c
 18212  005926  6A1D               	clrf	ETH_ReadBlock@len+1,c
 18213                           
 18214                           ;j60_driver.c: 448: char *p = buffer;
 18215  005928  C017  F01E         	movff	ETH_ReadBlock@buffer,ETH_ReadBlock@p
 18216  00592C  C018  F01F         	movff	ETH_ReadBlock@buffer+1,ETH_ReadBlock@p+1
 18217                           
 18218                           ;j60_driver.c: 449: while(rxPacketStatusVector.byteCount && length)
 18219  005930  D01F               	goto	l8054
 18220  005932                     l8042:
 18221                           
 18222                           ; BSR set to: 1
 18223                           ;j60_driver.c: 450: {
 18224                           ;j60_driver.c: 451: *p++ = ETH_EdataRead();
 18225  005932  C01E  FFF6         	movff	ETH_ReadBlock@p,tblptrl
 18226  005936  C01F  FFF7         	movff	ETH_ReadBlock@p+1,tblptrh
 18227  00593A  0E00               	movlw	low (__smallconst shr (0+16))
 18228  00593C  6EF8               	movwf	tblptru,c
 18229  00593E                     i14L__ptext81:
 18230                           	opt stack 0
 18231  00593E                     i14L_ETH_EdataRead:
 18232                           	opt stack 0
 18233  00593E                     i14Ll7562:
 18234                           	opt stack 16
 18235  00593E  CF61 FE7E          	movff	3937,_errataTemp	;# 
 18236  005942                     i14Ll7564:
 18237                           	opt stack 16
 18238                           
 18239                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
 18240  005942  010E               	movlb	14	; () banked
 18241  005944  517E               	movf	126,w,b
 18242  005946                     i14Ll460:
 18243                           	opt stack 17
 18244  005946  6E1B               	movwf	??_ETH_ReadBlock& (0+255),c
 18245  005948  0E0F               	movlw	(high __ramtop+-1)
 18246  00594A  64F7               	cpfsgt	tblptrh,c
 18247  00594C  D004               	bra	u11157
 18248  00594E  C01B  FFF5         	movff	??_ETH_ReadBlock,tablat
 18249  005952  000C               	tblwt		*
 18250  005954  D004               	bra	u11150
 18251  005956                     u11157:
 18252  005956  EC73  F011         	call	PL389	;call to abstracted procedure
 18253  00595A  C01B  FFEF         	movff	??_ETH_ReadBlock,indf0
 18254  00595E                     u11150:
 18255  00595E  4A1E               	infsnz	ETH_ReadBlock@p,f,c
 18256  005960  2A1F               	incf	ETH_ReadBlock@p+1,f,c
 18257                           
 18258                           ;j60_driver.c: 452: len ++;
 18259  005962  4A1C               	infsnz	ETH_ReadBlock@len,f,c
 18260  005964  2A1D               	incf	ETH_ReadBlock@len+1,f,c
 18261                           
 18262                           ;j60_driver.c: 453: length --;
 18263  005966  0619               	decf	ETH_ReadBlock@length,f,c
 18264  005968  A0D8               	btfss	status,0,c
 18265  00596A  061A               	decf	ETH_ReadBlock@length+1,f,c
 18266                           
 18267                           ;j60_driver.c: 454: rxPacketStatusVector.byteCount --;
 18268                           
 18269                           ; BSR set to: 1
 18270                           ;j60_driver.c: 455: ethData.error = 0;
 18271  00596C  ECD7  F030         	call	PL673	;call to abstracted procedure
 18272  005970                     l8054:
 18273  005970  0101               	movlb	1	; () banked
 18274  005972  51CC               	movf	_rxPacketStatusVector& (0+255),w,b
 18275  005974  11CD               	iorwf	(_rxPacketStatusVector+1)& (0+255),w,b
 18276  005976  E003               	bz	l544
 18277                           
 18278                           ; BSR set to: 1
 18279  005978  5019               	movf	ETH_ReadBlock@length,w,c
 18280  00597A  101A               	iorwf	ETH_ReadBlock@length+1,w,c
 18281  00597C  E1DA               	bnz	l8042
 18282  00597E                     l544:
 18283                           
 18284                           ; BSR set to: 1
 18285                           ;j60_driver.c: 456: }
 18286                           ;j60_driver.c: 457: return len;
 18287  00597E  C01C  F017         	movff	ETH_ReadBlock@len,?_ETH_ReadBlock
 18288  005982  C01D  F018         	movff	ETH_ReadBlock@len+1,?_ETH_ReadBlock+1
 18289                           
 18290                           ; BSR set to: 1
 18291  005986  0012               	return		;funcret
 18292  005988                     __end_of_ETH_ReadBlock:
 18293                           	opt stack 0
 18294                           tosu	equ	0xFFF
 18295                           tosh	equ	0xFFE
 18296                           tosl	equ	0xFFD
 18297                           pclath	equ	0xFFA
 18298                           tblptru	equ	0xFF8
 18299                           tblptrh	equ	0xFF7
 18300                           tblptrl	equ	0xFF6
 18301                           tablat	equ	0xFF5
 18302                           prodh	equ	0xFF4
 18303                           prodl	equ	0xFF3
 18304                           intcon	equ	0xFF2
 18305                           indf0	equ	0xFEF
 18306                           postinc0	equ	0xFEE
 18307                           fsr0h	equ	0xFEA
 18308                           fsr0l	equ	0xFE9
 18309                           wreg	equ	0xFE8
 18310                           indf1	equ	0xFE7
 18311                           postinc1	equ	0xFE6
 18312                           postdec1	equ	0xFE5
 18313                           plusw1	equ	0xFE3
 18314                           fsr1h	equ	0xFE2
 18315                           fsr1l	equ	0xFE1
 18316                           indf2	equ	0xFDF
 18317                           postinc2	equ	0xFDE
 18318                           postdec2	equ	0xFDD
 18319                           plusw2	equ	0xFDB
 18320                           fsr2h	equ	0xFDA
 18321                           fsr2l	equ	0xFD9
 18322                           status	equ	0xFD8
 18323                           
 18324 ;; *************** function _ETH_EventHandler *****************
 18325 ;; Defined at:
 18326 ;;		line 215 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 18327 ;; Parameters:    Size  Location     Type
 18328 ;;		None
 18329 ;; Auto vars:     Size  Location     Type
 18330 ;;		None
 18331 ;; Return value:  Size  Location     Type
 18332 ;;                  1    wreg      void 
 18333 ;; Registers used:
 18334 ;;		wreg, status,2, status,0, cstack
 18335 ;; Tracked objects:
 18336 ;;		On entry : 0/1
 18337 ;;		On exit  : 0/0
 18338 ;;		Unchanged: 0/0
 18339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18344 ;;Total ram usage:        0 bytes
 18345 ;; Hardware stack levels used:    1
 18346 ;; Hardware stack levels required when called:   12
 18347 ;; This function calls:
 18348 ;;		_ETH_CheckLinkUp
 18349 ;;		_PHY_Read
 18350 ;; This function is called by:
 18351 ;;		_Network_Manage
 18352 ;; This function uses a non-reentrant model
 18353 ;;
 18354                           
 18355                           	psect	text64
 18356  005CBE                     __ptext64:
 18357                           	opt stack 0
 18358  005CBE                     _ETH_EventHandler:
 18359                           	opt stack 0
 18360                           
 18361                           ;j60_driver.c: 218: PIR2bits.ETHIF = 0;
 18362                           
 18363                           ; BSR set to: 1
 18364                           ;incstack = 0
 18365                           
 18366                           ;j60_driver.c: 219: if(EPKTCNT >= 3)
 18367  005CBE  D81E               	call	PL739	;call to abstracted procedure
 18368  005CC0  65D9               	cpfsgt	217,b	;volatile
 18369  005CC2  D008               	goto	l484
 18370                           
 18371                           ; BSR set to: 14
 18372                           ;j60_driver.c: 222: if (EIRbits.LINKIF)
 18373  005CC4  A860               	btfss	3936,4,c	;volatile
 18374  005CC6  D006               	goto	l484
 18375                           
 18376                           ; BSR set to: 14
 18377                           ;j60_driver.c: 223: {
 18378                           ;j60_driver.c: 224: PHY_Read(PHIR);
 18379  005CC8  0E13               	movlw	19
 18380  005CCA  EC25  F028         	call	_PHY_Read
 18381                           
 18382                           ; BSR set to: 14
 18383                           ;j60_driver.c: 226: ethData.linkChange = 1;
 18384                           
 18385                           ; BSR set to: 1
 18386                           ;j60_driver.c: 227: ethData.up = 0;
 18387  005CCE  D819               	call	PL745	;call to abstracted procedure
 18388                           
 18389                           ;j60_driver.c: 230: if(ETH_CheckLinkUp())
 18390  005CD0  EC71  F030         	call	_ETH_CheckLinkUp	;wreg free
 18391  005CD4                     l484:
 18392                           
 18393                           ;j60_driver.c: 233: }
 18394                           ;j60_driver.c: 234: }
 18395                           ;j60_driver.c: 236: if(EIRbits.RXERIF)
 18396  005CD4  B060               	btfsc	3936,0,c	;volatile
 18397                           
 18398                           ;j60_driver.c: 237: {
 18399                           ;j60_driver.c: 239: EIRbits.RXERIF = 0;
 18400  005CD6  9060               	bcf	3936,0,c	;volatile
 18401                           
 18402                           ;j60_driver.c: 240: }
 18403                           ;j60_driver.c: 242: if (EIRbits.TXERIF)
 18404  005CD8  B260               	btfsc	3936,1,c	;volatile
 18405                           
 18406                           ;j60_driver.c: 243: {
 18407                           ;j60_driver.c: 245: EIRbits.TXERIF = 0;
 18408  005CDA  9260               	bcf	3936,1,c	;volatile
 18409                           
 18410                           ;j60_driver.c: 246: }
 18411                           ;j60_driver.c: 248: if(EIRbits.TXIF)
 18412  005CDC  B660               	btfsc	3936,3,c	;volatile
 18413                           
 18414                           ;j60_driver.c: 249: {
 18415                           ;j60_driver.c: 251: EIRbits.TXIF = 0;
 18416                           
 18417                           ;j60_driver.c: 252: ethData.bufferBusy = 0;
 18418  005CDE  D80A               	call	PL735	;call to abstracted procedure
 18419  005CE0                     l489:
 18420                           
 18421                           ;j60_driver.c: 253: }
 18422                           ;j60_driver.c: 255: if (EIRbits.PKTIF)
 18423  005CE0  AC60               	btfss	3936,6,c	;volatile
 18424  005CE2  0012               	return	
 18425                           
 18426                           ;j60_driver.c: 256: {
 18427                           ;j60_driver.c: 257: if(ethData.pktReady == 0)
 18428  005CE4  0101               	movlb	1	; () banked
 18429  005CE6  B3BD               	btfsc	_ethData& (0+255),1,b	;volatile
 18430  005CE8  0012               	return	
 18431                           
 18432                           ; BSR set to: 1
 18433                           ;j60_driver.c: 258: {
 18434                           ;j60_driver.c: 260: ethData.pktReady = 1;
 18435                           
 18436                           ;j60_driver.c: 261: EIEbits.PKTIE = 0;
 18437  005CEA  D000               	goto	PL709	;call to abstracted procedure
 18438  005CEC                     __end_of_ETH_EventHandler:
 18439                           	opt stack 0
 18440  005CEC                     PL709:
 18441                           	opt stack 12
 18442  005CEC  83BD               	bsf	_ethData& (0+255),1,b	;volatile
 18443  005CEE  010E               	movlb	14	; () banked
 18444  005CF0  9DFB               	bcf	251,6,b	;volatile
 18445  005CF2  0012               	return		;funcret
 18446  005CF4                     __end_ofPL709:
 18447                           	opt stack 0
 18448  005CF4                     PL735:
 18449                           	opt stack 12
 18450  005CF4  9660               	bcf	3936,3,c	;volatile
 18451  005CF6  0101               	movlb	1	; () banked
 18452  005CF8  9BBD               	bcf	_ethData& (0+255),5,b	;volatile
 18453  005CFA  0012               	return	
 18454  005CFC                     __end_ofPL735:
 18455                           	opt stack 0
 18456  005CFC                     PL739:
 18457                           	opt stack 12
 18458  005CFC  9AA1               	bcf	4001,5,c	;volatile
 18459  005CFE  010E               	movlb	14	; () banked
 18460  005D00  0C02               	retlw	2
 18461  005D02                     __end_ofPL739:
 18462                           	opt stack 0
 18463  005D02                     PL745:
 18464                           	opt stack 12
 18465  005D02  0101               	movlb	1	; () banked
 18466  005D04  89BD               	bsf	_ethData& (0+255),4,b	;volatile
 18467  005D06  95BD               	bcf	_ethData& (0+255),2,b	;volatile
 18468  005D08  0012               	return	
 18469  005D0A                     __end_ofPL745:
 18470                           	opt stack 0
 18471                           tosu	equ	0xFFF
 18472                           tosh	equ	0xFFE
 18473                           tosl	equ	0xFFD
 18474                           pclath	equ	0xFFA
 18475                           tblptru	equ	0xFF8
 18476                           tblptrh	equ	0xFF7
 18477                           tblptrl	equ	0xFF6
 18478                           tablat	equ	0xFF5
 18479                           prodh	equ	0xFF4
 18480                           prodl	equ	0xFF3
 18481                           intcon	equ	0xFF2
 18482                           indf0	equ	0xFEF
 18483                           postinc0	equ	0xFEE
 18484                           fsr0h	equ	0xFEA
 18485                           fsr0l	equ	0xFE9
 18486                           wreg	equ	0xFE8
 18487                           indf1	equ	0xFE7
 18488                           postinc1	equ	0xFE6
 18489                           postdec1	equ	0xFE5
 18490                           plusw1	equ	0xFE3
 18491                           fsr1h	equ	0xFE2
 18492                           fsr1l	equ	0xFE1
 18493                           indf2	equ	0xFDF
 18494                           postinc2	equ	0xFDE
 18495                           postdec2	equ	0xFDD
 18496                           plusw2	equ	0xFDB
 18497                           fsr2h	equ	0xFDA
 18498                           fsr2l	equ	0xFD9
 18499                           status	equ	0xFD8
 18500                           
 18501 ;; *************** function _DHCP_Manage *****************
 18502 ;; Defined at:
 18503 ;;		line 130 in file "../../TCPIP Library/source/dhcp_client.c"
 18504 ;; Parameters:    Size  Location     Type
 18505 ;;		None
 18506 ;; Auto vars:     Size  Location     Type
 18507 ;;		None
 18508 ;; Return value:  Size  Location     Type
 18509 ;;                  1    wreg      void 
 18510 ;; Registers used:
 18511 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 18512 ;; Tracked objects:
 18513 ;;		On entry : F/0
 18514 ;;		On exit  : E/0
 18515 ;;		Unchanged: 0/0
 18516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18521 ;;Total ram usage:        0 bytes
 18522 ;; Hardware stack levels used:    1
 18523 ;; Hardware stack levels required when called:   14
 18524 ;; This function calls:
 18525 ;;		_DHCP_Request
 18526 ;; This function is called by:
 18527 ;;		_Network_Manage
 18528 ;; This function uses a non-reentrant model
 18529 ;;
 18530                           
 18531                           	psect	text65
 18532  005648                     __ptext65:
 18533                           	opt stack 0
 18534  005648                     _DHCP_Manage:
 18535                           	opt stack 15
 18536                           
 18537                           ; BSR set to: 0
 18538                           ;dhcp_client.c: 132: if(ethData.linkChange)
 18539                           
 18540                           ;incstack = 0
 18541  005648  0101               	movlb	1	; () banked
 18542  00564A  A9BD               	btfss	_ethData& (0+255),4,b	;volatile
 18543  00564C  D015               	goto	l9542
 18544                           
 18545                           ; BSR set to: 1
 18546                           ;dhcp_client.c: 133: {
 18547                           ;dhcp_client.c: 134: if (clientState == BOUND && dhcpLeaseTime)
 18548  00564E  0E05               	movlw	5
 18549  005650  1848               	xorwf	_clientState,w,c
 18550  005652  E10B               	bnz	l9536
 18551                           
 18552                           ; BSR set to: 1
 18553  005654  D838               	call	PL653	;call to abstracted procedure
 18554  005656  E009               	bz	l9536
 18555                           
 18556                           ; BSR set to: 1
 18557                           ;dhcp_client.c: 135: {
 18558                           ;dhcp_client.c: 136: dhcpServerId = 0xFFFFFFFF;
 18559  005658  0102               	movlb	2	; () banked
 18560  00565A  691C               	setf	_dhcpServerId& (0+255),b
 18561  00565C  691D               	setf	(_dhcpServerId+1)& (0+255),b
 18562  00565E  691E               	setf	(_dhcpServerId+2)& (0+255),b
 18563  005660  691F               	setf	(_dhcpServerId+3)& (0+255),b
 18564                           
 18565                           ; BSR set to: 2
 18566                           ;dhcp_client.c: 137: DHCP_Request(DHCP_REQUEST);
 18567  005662  0E03               	movlw	3
 18568  005664  EC33  F021         	call	_DHCP_Request
 18569                           
 18570                           ;dhcp_client.c: 138: }
 18571  005668  D004               	goto	l9540
 18572  00566A                     l9536:
 18573                           
 18574                           ; BSR set to: 1
 18575                           ;dhcp_client.c: 139: else
 18576                           ;dhcp_client.c: 140: {
 18577                           ;dhcp_client.c: 141: clientState = INIT;
 18578  00566A  0E01               	movlw	1
 18579  00566C  6E48               	movwf	_clientState,c
 18580                           
 18581                           ; BSR set to: 1
 18582                           ;dhcp_client.c: 142: DHCP_Request(DHCP_DISCOVER);
 18583  00566E  EC33  F021         	call	_DHCP_Request
 18584  005672                     l9540:
 18585                           
 18586                           ; BSR set to: 0
 18587                           ;dhcp_client.c: 143: }
 18588                           ;dhcp_client.c: 144: ethData.linkChange=0;
 18589  005672  0101               	movlb	1	; () banked
 18590  005674  99BD               	bcf	_ethData& (0+255),4,b	;volatile
 18591                           
 18592                           ;dhcp_client.c: 145: }
 18593  005676  0012               	return	
 18594  005678                     l9542:
 18595                           
 18596                           ; BSR set to: 1
 18597                           ;dhcp_client.c: 146: else if (clientState == INIT || clientState == INIT_REBOOT)
 18598  005678  0448               	decf	_clientState,w,c
 18599  00567A  E003               	bz	l9546
 18600                           
 18601                           ; BSR set to: 1
 18602  00567C  0E02               	movlw	2
 18603  00567E  1848               	xorwf	_clientState,w,c
 18604  005680  E104               	bnz	l9550
 18605  005682                     l9546:
 18606                           
 18607                           ; BSR set to: 1
 18608                           ;dhcp_client.c: 147: {
 18609                           ;dhcp_client.c: 148: clientState = INIT;
 18610  005682  0E01               	movlw	1
 18611  005684  6E48               	movwf	_clientState,c
 18612                           
 18613                           ; BSR set to: 1
 18614                           ;dhcp_client.c: 149: DHCP_Request(DHCP_DISCOVER);
 18615  005686  EF33  F021         	goto	_DHCP_Request
 18616  00568A                     l9550:
 18617                           
 18618                           ; BSR set to: 1
 18619                           ;dhcp_client.c: 151: else if ((dhcpLeaseTime < 100)&& clientState == BOUND)
 18620  00568A  51C7               	movf	(_dhcpLeaseTime+3)& (0+255),w,b
 18621  00568C  11C6               	iorwf	(_dhcpLeaseTime+2)& (0+255),w,b
 18622  00568E  11C5               	iorwf	(_dhcpLeaseTime+1)& (0+255),w,b
 18623  005690  E109               	bnz	l9556
 18624  005692  0E64               	movlw	100
 18625  005694  5DC4               	subwf	_dhcpLeaseTime& (0+255),w,b
 18626  005696  E206               	bc	l9556
 18627                           
 18628                           ; BSR set to: 1
 18629  005698  0E05               	movlw	5
 18630  00569A  1848               	xorwf	_clientState,w,c
 18631  00569C  E103               	bnz	l9556
 18632                           
 18633                           ; BSR set to: 1
 18634                           ;dhcp_client.c: 152: {
 18635                           ;dhcp_client.c: 153: DHCP_Request(DHCP_REQUEST);
 18636  00569E  0E03               	movlw	3
 18637  0056A0  EF33  F021         	goto	_DHCP_Request
 18638  0056A4                     l9556:
 18639                           
 18640                           ; BSR set to: 1
 18641                           ;dhcp_client.c: 155: else
 18642                           ;dhcp_client.c: 156: {
 18643                           ;dhcp_client.c: 157: if(clientState == BOUND && dhcpLeaseTime) dhcpLeaseTime --;
 18644  0056A4  0E05               	movlw	5
 18645  0056A6  1848               	xorwf	_clientState,w,c
 18646  0056A8  E108               	bnz	l9562
 18647                           
 18648                           ; BSR set to: 1
 18649  0056AA  D80D               	call	PL653	;call to abstracted procedure
 18650  0056AC  E006               	bz	l9562
 18651                           
 18652                           ; BSR set to: 1
 18653  0056AE  07C4               	decf	_dhcpLeaseTime& (0+255),f,b
 18654  0056B0  0E00               	movlw	0
 18655  0056B2  5BC5               	subwfb	(_dhcpLeaseTime+1)& (0+255),f,b
 18656  0056B4  5BC6               	subwfb	(_dhcpLeaseTime+2)& (0+255),f,b
 18657  0056B6  5BC7               	subwfb	(_dhcpLeaseTime+3)& (0+255),f,b
 18658  0056B8  0C00               	retlw	0
 18659  0056BA                     l9562:
 18660                           
 18661                           ; BSR set to: 1
 18662                           ;dhcp_client.c: 158: else if (!dhcpLeaseTime) clientState = INIT_REBOOT;
 18663  0056BA  D805               	call	PL653	;call to abstracted procedure
 18664  0056BC  A4D8               	btfss	status,2,c
 18665  0056BE  0012               	return	
 18666                           
 18667                           ; BSR set to: 1
 18668  0056C0  0E02               	movlw	2
 18669  0056C2  6E48               	movwf	_clientState,c
 18670  0056C4  0C02               	retlw	2
 18671  0056C6                     __end_of_DHCP_Manage:
 18672                           	opt stack 0
 18673  0056C6                     PL653:
 18674                           	opt stack 15
 18675  0056C6  51C4               	movf	_dhcpLeaseTime& (0+255),w,b
 18676  0056C8  11C5               	iorwf	(_dhcpLeaseTime+1)& (0+255),w,b
 18677  0056CA  11C6               	iorwf	(_dhcpLeaseTime+2)& (0+255),w,b
 18678  0056CC  11C7               	iorwf	(_dhcpLeaseTime+3)& (0+255),w,b
 18679  0056CE  0012               	return	
 18680  0056D0                     __end_ofPL653:
 18681                           	opt stack 0
 18682                           tosu	equ	0xFFF
 18683                           tosh	equ	0xFFE
 18684                           tosl	equ	0xFFD
 18685                           pclath	equ	0xFFA
 18686                           tblptru	equ	0xFF8
 18687                           tblptrh	equ	0xFF7
 18688                           tblptrl	equ	0xFF6
 18689                           tablat	equ	0xFF5
 18690                           prodh	equ	0xFF4
 18691                           prodl	equ	0xFF3
 18692                           intcon	equ	0xFF2
 18693                           indf0	equ	0xFEF
 18694                           postinc0	equ	0xFEE
 18695                           fsr0h	equ	0xFEA
 18696                           fsr0l	equ	0xFE9
 18697                           wreg	equ	0xFE8
 18698                           indf1	equ	0xFE7
 18699                           postinc1	equ	0xFE6
 18700                           postdec1	equ	0xFE5
 18701                           plusw1	equ	0xFE3
 18702                           fsr1h	equ	0xFE2
 18703                           fsr1l	equ	0xFE1
 18704                           indf2	equ	0xFDF
 18705                           postinc2	equ	0xFDE
 18706                           postdec2	equ	0xFDD
 18707                           plusw2	equ	0xFDB
 18708                           fsr2h	equ	0xFDA
 18709                           fsr2l	equ	0xFD9
 18710                           status	equ	0xFD8
 18711                           
 18712 ;; *************** function _DHCP_Request *****************
 18713 ;; Defined at:
 18714 ;;		line 71 in file "../../TCPIP Library/source/dhcp_client.c"
 18715 ;; Parameters:    Size  Location     Type
 18716 ;;  type            1    wreg     enum E592
 18717 ;; Auto vars:     Size  Location     Type
 18718 ;;  type            1   72[BANK0 ] enum E592
 18719 ;;  ethMAC          6   73[BANK0 ] struct .
 18720 ;;  msglength       2    0        unsigned int 
 18721 ;;  started         1   71[BANK0 ] unsigned char 
 18722 ;; Return value:  Size  Location     Type
 18723 ;;                  1    wreg      void 
 18724 ;; Registers used:
 18725 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 18726 ;; Tracked objects:
 18727 ;;		On entry : C/0
 18728 ;;		On exit  : F/0
 18729 ;;		Unchanged: 0/0
 18730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18732 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18734 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18735 ;;Total ram usage:        8 bytes
 18736 ;; Hardware stack levels used:    1
 18737 ;; Hardware stack levels required when called:   13
 18738 ;; This function calls:
 18739 ;;		_DHCP_WriteZeros
 18740 ;;		_ETH_GetMAC
 18741 ;;		_ETH_Write16
 18742 ;;		_ETH_Write32
 18743 ;;		_ETH_Write8
 18744 ;;		_ETH_WriteBlock
 18745 ;;		_UDP_Send
 18746 ;;		_UDP_Start
 18747 ;; This function is called by:
 18748 ;;		_DHCP_Manage
 18749 ;;		_DHCP_Handler
 18750 ;; This function uses a non-reentrant model
 18751 ;;
 18752                           
 18753                           	psect	text66
 18754  004266                     __ptext66:
 18755                           	opt stack 0
 18756  004266                     _DHCP_Request:
 18757                           	opt stack 12
 18758                           
 18759                           ;incstack = 0
 18760                           ;DHCP_Request@type stored from wreg
 18761  004266  0100               	movlb	0	; () banked
 18762  004268  6FA8               	movwf	DHCP_Request@type& (0+255),b
 18763                           
 18764                           ;dhcp_client.c: 78: ETH_GetMAC((char*)&ethMAC);
 18765  00426A  0EA9               	movlw	low DHCP_Request@ethMAC
 18766  00426C  6E17               	movwf	ETH_GetMAC@mac,c
 18767  00426E  ECF7  F02F         	call	_ETH_GetMAC	;wreg free
 18768                           
 18769                           ;dhcp_client.c: 83: }
 18770                           ;dhcp_client.c: 85: started = UDP_Start(0xFFFFFFFF,68,67);
 18771  004272  0100               	movlb	0	; () banked
 18772  004274  699F               	setf	UDP_Start@destIP& (0+255),b
 18773  004276  69A0               	setf	(UDP_Start@destIP+1)& (0+255),b
 18774  004278  69A1               	setf	(UDP_Start@destIP+2)& (0+255),b
 18775  00427A  69A2               	setf	(UDP_Start@destIP+3)& (0+255),b
 18776  00427C  6BA4               	clrf	(UDP_Start@srcPort+1)& (0+255),b
 18777  00427E  0E44               	movlw	68
 18778  004280  6FA3               	movwf	UDP_Start@srcPort& (0+255),b
 18779  004282  6BA6               	clrf	(UDP_Start@dstPort+1)& (0+255),b
 18780  004284  0E43               	movlw	67
 18781  004286  6FA5               	movwf	UDP_Start@dstPort& (0+255),b
 18782  004288  ECEB  F02D         	call	_UDP_Start	;wreg free
 18783  00428C  0100               	movlb	0	; () banked
 18784  00428E  6FA7               	movwf	DHCP_Request@started& (0+255),b
 18785                           
 18786                           ; BSR set to: 0
 18787                           ;dhcp_client.c: 87: if(started==SUCCESS)
 18788  004290  05A7               	decf	DHCP_Request@started& (0+255),w,b
 18789  004292  A4D8               	btfss	status,2,c
 18790  004294  0012               	return	
 18791                           
 18792                           ; BSR set to: 0
 18793                           ;dhcp_client.c: 88: {
 18794                           ;dhcp_client.c: 89: ETH_Write32(0x01010600);
 18795  004296  6A17               	clrf	ETH_Write32@data,c
 18796  004298  0E06               	movlw	6
 18797  00429A  6E18               	movwf	ETH_Write32@data+1,c
 18798  00429C  0E01               	movlw	1
 18799  00429E  6E19               	movwf	ETH_Write32@data+2,c
 18800  0042A0  6E1A               	movwf	ETH_Write32@data+3,c
 18801  0042A2  ECDF  F031         	call	_ETH_Write32	;wreg free
 18802                           
 18803                           ;dhcp_client.c: 90: ETH_Write32(xidValue);
 18804  0042A6  0E50               	movlw	80
 18805  0042A8  6E17               	movwf	ETH_Write32@data,c
 18806  0042AA  0E48               	movlw	72
 18807  0042AC  6E18               	movwf	ETH_Write32@data+1,c
 18808  0042AE  0E43               	movlw	67
 18809  0042B0  6E19               	movwf	ETH_Write32@data+2,c
 18810  0042B2  0E4D               	movlw	77
 18811  0042B4  6E1A               	movwf	ETH_Write32@data+3,c
 18812  0042B6  ECDF  F031         	call	_ETH_Write32	;wreg free
 18813                           
 18814                           ;dhcp_client.c: 91: ETH_Write32(0x00008000);
 18815  0042BA  6A17               	clrf	ETH_Write32@data,c
 18816  0042BC  0E80               	movlw	128
 18817  0042BE  6E18               	movwf	ETH_Write32@data+1,c
 18818  0042C0  6A19               	clrf	ETH_Write32@data+2,c
 18819  0042C2  6A1A               	clrf	ETH_Write32@data+3,c
 18820  0042C4  ECDF  F031         	call	_ETH_Write32	;wreg free
 18821                           
 18822                           ;dhcp_client.c: 92: if (type == DHCP_REQUEST)
 18823  0042C8  0E03               	movlw	3
 18824  0042CA  0100               	movlb	0	; () banked
 18825  0042CC  19A8               	xorwf	DHCP_Request@type& (0+255),w,b
 18826  0042CE  E104               	bnz	l8286
 18827                           
 18828                           ; BSR set to: 0
 18829                           ;dhcp_client.c: 93: {
 18830                           ;dhcp_client.c: 94: ETH_Write32(0);
 18831  0042D0  D898               	call	PL627	;call to abstracted procedure
 18832  0042D2  ECDF  F031         	call	_ETH_Write32	;wreg free
 18833                           
 18834                           ;dhcp_client.c: 95: }
 18835  0042D6  D003               	goto	l760
 18836  0042D8                     l8286:
 18837                           
 18838                           ; BSR set to: 0
 18839                           ;dhcp_client.c: 96: else
 18840                           ;dhcp_client.c: 97: {
 18841                           ;dhcp_client.c: 98: ETH_Write32(ipv4Address);
 18842  0042D8  D88B               	call	PL523	;call to abstracted procedure
 18843  0042DA  ECDF  F031         	call	_ETH_Write32	;wreg free
 18844  0042DE                     l760:
 18845                           
 18846                           ;dhcp_client.c: 99: }
 18847                           ;dhcp_client.c: 100: ETH_Write32(0);
 18848  0042DE  D891               	call	PL627	;call to abstracted procedure
 18849  0042E0  ECDF  F031         	call	_ETH_Write32	;wreg free
 18850                           
 18851                           ;dhcp_client.c: 101: ETH_Write32(0);
 18852  0042E4  D88E               	call	PL627	;call to abstracted procedure
 18853  0042E6  ECDF  F031         	call	_ETH_Write32	;wreg free
 18854                           
 18855                           ;dhcp_client.c: 102: ETH_Write32(0);
 18856  0042EA  D88B               	call	PL627	;call to abstracted procedure
 18857  0042EC  ECDF  F031         	call	_ETH_Write32	;wreg free
 18858                           
 18859                           ;dhcp_client.c: 103: ETH_WriteBlock((char *)&ethMAC,6);
 18860  0042F0  D88D               	call	PL647	;call to abstracted procedure
 18861  0042F2  EC85  F02E         	call	_ETH_WriteBlock	;wreg free
 18862                           
 18863                           ;dhcp_client.c: 104: DHCP_WriteZeros(202);
 18864  0042F6  6A19               	clrf	DHCP_WriteZeros@length+1,c
 18865  0042F8  0ECA               	movlw	202
 18866  0042FA  6E18               	movwf	DHCP_WriteZeros@length,c
 18867  0042FC  EC06  F032         	call	_DHCP_WriteZeros	;wreg free
 18868                           
 18869                           ;dhcp_client.c: 105: ETH_Write32(0x63825363);
 18870  004300  0E63               	movlw	99
 18871  004302  6E17               	movwf	ETH_Write32@data,c
 18872  004304  0E53               	movlw	83
 18873  004306  6E18               	movwf	ETH_Write32@data+1,c
 18874  004308  0E82               	movlw	130
 18875  00430A  6E19               	movwf	ETH_Write32@data+2,c
 18876  00430C  0E63               	movlw	99
 18877  00430E  6E1A               	movwf	ETH_Write32@data+3,c
 18878  004310  ECDF  F031         	call	_ETH_Write32	;wreg free
 18879                           
 18880                           ;dhcp_client.c: 107: ETH_Write8(53);
 18881  004314  0E35               	movlw	53
 18882  004316  EC55  F032         	call	_ETH_Write8
 18883                           
 18884                           ;dhcp_client.c: 108: ETH_Write8(1);
 18885  00431A  0E01               	movlw	1
 18886  00431C  EC55  F032         	call	_ETH_Write8
 18887                           
 18888                           ;dhcp_client.c: 109: ETH_Write8(type);
 18889  004320  0100               	movlb	0	; () banked
 18890  004322  51A8               	movf	DHCP_Request@type& (0+255),w,b
 18891  004324  EC55  F032         	call	_ETH_Write8
 18892                           
 18893                           ;dhcp_client.c: 110: if(type == DHCP_REQUEST)
 18894  004328  0E03               	movlw	3
 18895  00432A  0100               	movlb	0	; () banked
 18896  00432C  19A8               	xorwf	DHCP_Request@type& (0+255),w,b
 18897  00432E  E119               	bnz	l761
 18898                           
 18899                           ; BSR set to: 0
 18900                           ;dhcp_client.c: 111: {
 18901                           ;dhcp_client.c: 112: ETH_Write8(54);ETH_Write8(4);ETH_Write32(dhcpServerId);
 18902  004330  0E36               	movlw	54
 18903  004332  EC55  F032         	call	_ETH_Write8
 18904  004336  0E04               	movlw	4
 18905  004338  EC55  F032         	call	_ETH_Write8
 18906  00433C  C21C  F017         	movff	_dhcpServerId,ETH_Write32@data
 18907  004340  C21D  F018         	movff	_dhcpServerId+1,ETH_Write32@data+1
 18908  004344  C21E  F019         	movff	_dhcpServerId+2,ETH_Write32@data+2
 18909  004348  C21F  F01A         	movff	_dhcpServerId+3,ETH_Write32@data+3
 18910  00434C  ECDF  F031         	call	_ETH_Write32	;wreg free
 18911                           
 18912                           ;dhcp_client.c: 113: ETH_Write8(50);ETH_Write8(4);ETH_Write32(ipv4Address);
 18913  004350  0E32               	movlw	50
 18914  004352  EC55  F032         	call	_ETH_Write8
 18915  004356  0E04               	movlw	4
 18916  004358  EC55  F032         	call	_ETH_Write8
 18917  00435C  D849               	call	PL523	;call to abstracted procedure
 18918  00435E  ECDF  F031         	call	_ETH_Write32	;wreg free
 18919  004362                     l761:
 18920                           
 18921                           ;dhcp_client.c: 114: }
 18922                           ;dhcp_client.c: 115: ETH_Write8(55); ETH_Write8(4); ETH_Write8(1); ETH_Write8(3); ETH_Wr
      +                          ite8(6); ETH_Write8(15);
 18923  004362  0E37               	movlw	55
 18924  004364  EC55  F032         	call	_ETH_Write8
 18925  004368  0E04               	movlw	4
 18926  00436A  EC55  F032         	call	_ETH_Write8
 18927  00436E  0E01               	movlw	1
 18928  004370  EC55  F032         	call	_ETH_Write8
 18929  004374  0E03               	movlw	3
 18930  004376  EC55  F032         	call	_ETH_Write8
 18931  00437A  0E06               	movlw	6
 18932  00437C  EC55  F032         	call	_ETH_Write8
 18933  004380  0E0F               	movlw	15
 18934  004382  EC55  F032         	call	_ETH_Write8
 18935                           
 18936                           ;dhcp_client.c: 116: ETH_Write8(57); ETH_Write8(2); ETH_Write16(512);
 18937  004386  0E39               	movlw	57
 18938  004388  EC55  F032         	call	_ETH_Write8
 18939  00438C  0E02               	movlw	2
 18940  00438E  EC55  F032         	call	_ETH_Write8
 18941  004392  0E02               	movlw	2
 18942  004394  6E18               	movwf	ETH_Write16@data+1,c
 18943  004396  6A17               	clrf	ETH_Write16@data,c
 18944  004398  EC34  F032         	call	_ETH_Write16	;wreg free
 18945                           
 18946                           ;dhcp_client.c: 117: ETH_Write8(12); ETH_Write8(20); ETH_WriteBlock((char *)dhcpName,20)
      +                          ;
 18947  00439C  0E0C               	movlw	12
 18948  00439E  EC55  F032         	call	_ETH_Write8
 18949  0043A2  0E14               	movlw	20
 18950  0043A4  EC55  F032         	call	_ETH_Write8
 18951  0043A8  0E13               	movlw	low _dhcpName
 18952  0043AA  6E17               	movwf	ETH_WriteBlock@buffer,c
 18953  0043AC  5017               	movf	ETH_WriteBlock@buffer,w,c
 18954  0043AE  A4D8               	btfss	status,2,c
 18955  0043B0  0E10               	movlw	high __smallconst
 18956  0043B2  6E18               	movwf	ETH_WriteBlock@buffer+1,c
 18957  0043B4  EC3D  F016         	call	PL751	;call to abstracted procedure
 18958  0043B8  EC85  F02E         	call	_ETH_WriteBlock	;wreg free
 18959                           
 18960                           ;dhcp_client.c: 119: ETH_Write8(61); ETH_Write8(7); ETH_Write8(1); ETH_WriteBlock((char 
      +                          *)&ethMAC,6);
 18961  0043BC  0E3D               	movlw	61
 18962  0043BE  EC55  F032         	call	_ETH_Write8
 18963  0043C2  0E07               	movlw	7
 18964  0043C4  EC55  F032         	call	_ETH_Write8
 18965  0043C8  0E01               	movlw	1
 18966  0043CA  EC55  F032         	call	_ETH_Write8
 18967  0043CE  D81E               	call	PL647	;call to abstracted procedure
 18968  0043D0  EC85  F02E         	call	_ETH_WriteBlock	;wreg free
 18969                           
 18970                           ;dhcp_client.c: 120: ETH_Write8(255);
 18971  0043D4  0EFF               	movlw	255
 18972  0043D6  EC55  F032         	call	_ETH_Write8
 18973                           
 18974                           ;dhcp_client.c: 122: ETH_Write8(0);
 18975  0043DA  0E00               	movlw	0
 18976  0043DC  EC55  F032         	call	_ETH_Write8
 18977                           
 18978                           ;dhcp_client.c: 124: UDP_Send();
 18979  0043E0  ECDE  F02A         	call	_UDP_Send	;wreg free
 18980                           
 18981                           ; BSR set to: 0
 18982                           ;dhcp_client.c: 125: if (type == DHCP_DISCOVER)
 18983  0043E4  05A8               	decf	DHCP_Request@type& (0+255),w,b
 18984  0043E6  A4D8               	btfss	status,2,c
 18985  0043E8  0012               	return	
 18986                           
 18987                           ; BSR set to: 0
 18988                           ;dhcp_client.c: 126: clientState=SELECTING;
 18989  0043EA  0E03               	movlw	3
 18990  0043EC  6E48               	movwf	_clientState,c
 18991                           
 18992                           ; BSR set to: 0
 18993  0043EE  0C03               	retlw	3	;funcret
 18994  0043F0                     __end_of_DHCP_Request:
 18995                           	opt stack 0
 18996  0043F0                     PL523:
 18997                           	opt stack 12
 18998  0043F0  C033  F017         	movff	_ipv4Address,ETH_Write32@data
 18999  0043F4  C034  F018         	movff	_ipv4Address+1,ETH_Write32@data+1
 19000  0043F8  C035  F019         	movff	_ipv4Address+2,ETH_Write32@data+2
 19001  0043FC  C036  F01A         	movff	_ipv4Address+3,ETH_Write32@data+3
 19002  004400  0012               	return	
 19003  004402                     __end_ofPL523:
 19004                           	opt stack 0
 19005  004402                     PL627:
 19006                           	opt stack 12
 19007  004402  6A17               	clrf	ETH_Write32@data,c
 19008  004404  6A18               	clrf	ETH_Write32@data+1,c
 19009  004406  6A19               	clrf	ETH_Write32@data+2,c
 19010  004408  6A1A               	clrf	ETH_Write32@data+3,c
 19011  00440A  0012               	return	
 19012  00440C                     __end_ofPL627:
 19013                           	opt stack 0
 19014  00440C                     PL647:
 19015                           	opt stack 12
 19016  00440C  0EA9               	movlw	low DHCP_Request@ethMAC
 19017  00440E  6E17               	movwf	ETH_WriteBlock@buffer,c
 19018  004410  6A18               	clrf	ETH_WriteBlock@buffer+1,c
 19019  004412  6A1A               	clrf	ETH_WriteBlock@length+1,c
 19020  004414  0E06               	movlw	6
 19021  004416  6E19               	movwf	ETH_WriteBlock@length,c
 19022  004418  0C06               	retlw	6
 19023  00441A                     __end_ofPL647:
 19024                           	opt stack 0
 19025                           tosu	equ	0xFFF
 19026                           tosh	equ	0xFFE
 19027                           tosl	equ	0xFFD
 19028                           pclath	equ	0xFFA
 19029                           tblptru	equ	0xFF8
 19030                           tblptrh	equ	0xFF7
 19031                           tblptrl	equ	0xFF6
 19032                           tablat	equ	0xFF5
 19033                           prodh	equ	0xFF4
 19034                           prodl	equ	0xFF3
 19035                           intcon	equ	0xFF2
 19036                           indf0	equ	0xFEF
 19037                           postinc0	equ	0xFEE
 19038                           fsr0h	equ	0xFEA
 19039                           fsr0l	equ	0xFE9
 19040                           wreg	equ	0xFE8
 19041                           indf1	equ	0xFE7
 19042                           postinc1	equ	0xFE6
 19043                           postdec1	equ	0xFE5
 19044                           plusw1	equ	0xFE3
 19045                           fsr1h	equ	0xFE2
 19046                           fsr1l	equ	0xFE1
 19047                           indf2	equ	0xFDF
 19048                           postinc2	equ	0xFDE
 19049                           postdec2	equ	0xFDD
 19050                           plusw2	equ	0xFDB
 19051                           fsr2h	equ	0xFDA
 19052                           fsr2l	equ	0xFD9
 19053                           status	equ	0xFD8
 19054                           
 19055 ;; *************** function _UDP_Start *****************
 19056 ;; Defined at:
 19057 ;;		line 71 in file "../../TCPIP Library/source/udpv4.c"
 19058 ;; Parameters:    Size  Location     Type
 19059 ;;  destIP          4   63[BANK0 ] unsigned long 
 19060 ;;  srcPort         2   67[BANK0 ] unsigned int 
 19061 ;;  dstPort         2   69[BANK0 ] unsigned int 
 19062 ;; Auto vars:     Size  Location     Type
 19063 ;;  ret             1   46[COMRAM] enum E367
 19064 ;; Return value:  Size  Location     Type
 19065 ;;                  1    wreg      enum E449
 19066 ;; Registers used:
 19067 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19068 ;; Tracked objects:
 19069 ;;		On entry : F/0
 19070 ;;		On exit  : 0/0
 19071 ;;		Unchanged: 0/0
 19072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19073 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19074 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19076 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19077 ;;Total ram usage:        9 bytes
 19078 ;; Hardware stack levels used:    1
 19079 ;; Hardware stack levels required when called:   12
 19080 ;; This function calls:
 19081 ;;		_ETH_ResetByteCount
 19082 ;;		_ETH_Write16
 19083 ;;		_IPv4_Start
 19084 ;; This function is called by:
 19085 ;;		_DHCP_Request
 19086 ;; This function uses a non-reentrant model
 19087 ;;
 19088                           
 19089                           	psect	text67
 19090  005BD6                     __ptext67:
 19091                           	opt stack 0
 19092  005BD6                     _UDP_Start:
 19093                           	opt stack 12
 19094                           
 19095                           ; BSR set to: 0
 19096                           ;udpv4.c: 77: ret = IPv4_Start(destIP,UDP);
 19097                           
 19098                           ; BSR set to: 0
 19099                           
 19100                           ; BSR set to: 0
 19101                           ;incstack = 0
 19102  005BD6  C09F  F022         	movff	UDP_Start@destIP,IPv4_Start@destAddress
 19103  005BDA  C0A0  F023         	movff	UDP_Start@destIP+1,IPv4_Start@destAddress+1
 19104  005BDE  C0A1  F024         	movff	UDP_Start@destIP+2,IPv4_Start@destAddress+2
 19105  005BE2  C0A2  F025         	movff	UDP_Start@destIP+3,IPv4_Start@destAddress+3
 19106  005BE6  0E11               	movlw	17
 19107  005BE8  6E26               	movwf	IPv4_Start@protocol,c
 19108  005BEA  EC0D  F022         	call	_IPv4_Start	;wreg free
 19109  005BEE  6E2F               	movwf	UDP_Start@ret,c
 19110                           
 19111                           ; BSR set to: 0
 19112                           ;udpv4.c: 78: if(ret == SUCCESS)
 19113  005BF0  042F               	decf	UDP_Start@ret,w,c
 19114  005BF2  E116               	bnz	l8078
 19115                           
 19116                           ; BSR set to: 0
 19117                           ;udpv4.c: 79: {
 19118                           ;udpv4.c: 81: ETH_ResetByteCount();
 19119  005BF4  EC50  F032         	call	_ETH_ResetByteCount	;wreg free
 19120                           
 19121                           ;udpv4.c: 84: ETH_Write16(srcPort);
 19122  005BF8  C0A3  F017         	movff	UDP_Start@srcPort,ETH_Write16@data
 19123  005BFC  C0A4  F018         	movff	UDP_Start@srcPort+1,ETH_Write16@data+1
 19124  005C00  EC34  F032         	call	_ETH_Write16	;wreg free
 19125                           
 19126                           ;udpv4.c: 87: ETH_Write16(dstPort);
 19127  005C04  C0A5  F017         	movff	UDP_Start@dstPort,ETH_Write16@data
 19128  005C08  C0A6  F018         	movff	UDP_Start@dstPort+1,ETH_Write16@data+1
 19129  005C0C  EC34  F032         	call	_ETH_Write16	;wreg free
 19130                           
 19131                           ;udpv4.c: 90: ETH_Write16(0);
 19132  005C10  6A18               	clrf	ETH_Write16@data+1,c
 19133  005C12  6A17               	clrf	ETH_Write16@data,c
 19134  005C14  EC34  F032         	call	_ETH_Write16	;wreg free
 19135                           
 19136                           ;udpv4.c: 93: ETH_Write16(0);
 19137  005C18  6A18               	clrf	ETH_Write16@data+1,c
 19138  005C1A  6A17               	clrf	ETH_Write16@data,c
 19139  005C1C  EC34  F032         	call	_ETH_Write16	;wreg free
 19140  005C20                     l8078:
 19141                           
 19142                           ;udpv4.c: 95: }
 19143                           ;udpv4.c: 96: return ret;
 19144  005C20  502F               	movf	UDP_Start@ret,w,c
 19145  005C22  0012               	return		;funcret
 19146  005C24                     __end_of_UDP_Start:
 19147                           	opt stack 0
 19148                           tosu	equ	0xFFF
 19149                           tosh	equ	0xFFE
 19150                           tosl	equ	0xFFD
 19151                           pclath	equ	0xFFA
 19152                           tblptru	equ	0xFF8
 19153                           tblptrh	equ	0xFF7
 19154                           tblptrl	equ	0xFF6
 19155                           tablat	equ	0xFF5
 19156                           prodh	equ	0xFF4
 19157                           prodl	equ	0xFF3
 19158                           intcon	equ	0xFF2
 19159                           indf0	equ	0xFEF
 19160                           postinc0	equ	0xFEE
 19161                           fsr0h	equ	0xFEA
 19162                           fsr0l	equ	0xFE9
 19163                           wreg	equ	0xFE8
 19164                           indf1	equ	0xFE7
 19165                           postinc1	equ	0xFE6
 19166                           postdec1	equ	0xFE5
 19167                           plusw1	equ	0xFE3
 19168                           fsr1h	equ	0xFE2
 19169                           fsr1l	equ	0xFE1
 19170                           indf2	equ	0xFDF
 19171                           postinc2	equ	0xFDE
 19172                           postdec2	equ	0xFDD
 19173                           plusw2	equ	0xFDB
 19174                           fsr2h	equ	0xFDA
 19175                           fsr2l	equ	0xFD9
 19176                           status	equ	0xFD8
 19177                           
 19178 ;; *************** function _IPv4_Start *****************
 19179 ;; Defined at:
 19180 ;;		line 213 in file "../../TCPIP Library/source/ipv4.c"
 19181 ;; Parameters:    Size  Location     Type
 19182 ;;  destAddress     4   33[COMRAM] unsigned long 
 19183 ;;  protocol        1   37[COMRAM] enum E6749
 19184 ;; Auto vars:     Size  Location     Type
 19185 ;;  targetAddres    4   56[BANK0 ] unsigned long 
 19186 ;;  macAddress      2   60[BANK0 ] PTR const struct .
 19187 ;;		 -> arpMap.macAddress(6), broadcastMAC(6), arpMap(104), NULL(0), 
 19188 ;;  ret             1   62[BANK0 ] enum E6890
 19189 ;; Return value:  Size  Location     Type
 19190 ;;                  1    wreg      enum E366
 19191 ;; Registers used:
 19192 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19193 ;; Tracked objects:
 19194 ;;		On entry : 0/0
 19195 ;;		On exit  : F/0
 19196 ;;		Unchanged: 0/0
 19197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19198 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19199 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19200 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19201 ;;      Totals:        13       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19202 ;;Total ram usage:       20 bytes
 19203 ;; Hardware stack levels used:    1
 19204 ;; Hardware stack levels required when called:   11
 19205 ;; This function calls:
 19206 ;;		_ARPV4_Lookup
 19207 ;;		_ARPV4_Request
 19208 ;;		_ETH_Write16
 19209 ;;		_ETH_Write32
 19210 ;;		_ETH_Write8
 19211 ;;		_ETH_WriteStart
 19212 ;; This function is called by:
 19213 ;;		_ICMP_EchoReply
 19214 ;;		_TCP_Snd
 19215 ;;		_UDP_Start
 19216 ;; This function uses a non-reentrant model
 19217 ;;
 19218                           
 19219                           	psect	text68
 19220  00441A                     __ptext68:
 19221                           	opt stack 0
 19222  00441A                     _IPv4_Start:
 19223                           	opt stack 16
 19224                           
 19225                           ;ipv4.c: 215: error_msg ret = ERROR;
 19226                           
 19227                           ;incstack = 0
 19228  00441A  0100               	movlb	0	; () banked
 19229  00441C  6B9E               	clrf	IPv4_Start@ret& (0+255),b
 19230                           
 19231                           ; BSR set to: 0
 19232                           ;ipv4.c: 217: const mac48Address_t *macAddress;
 19233                           ;ipv4.c: 218: uint32_t targetAddress;
 19234                           ;ipv4.c: 221: if(((ipv4Address != 0) || (protocol == UDP))
 19235                           ;ipv4.c: 222: && (ipv4Address != 0x7F000001))
 19236  00441E  D8B9               	call	PL689	;call to abstracted procedure
 19237  004420  E103               	bnz	l7980
 19238                           
 19239                           ; BSR set to: 0
 19240  004422  0E11               	movlw	17
 19241  004424  1826               	xorwf	IPv4_Start@protocol,w,c
 19242  004426  E162               	bnz	l7994
 19243  004428                     l7980:
 19244                           
 19245                           ; BSR set to: 0
 19246  004428  0433               	decf	_ipv4Address,w,c
 19247  00442A  E105               	bnz	u11100
 19248  00442C  0E7F               	movlw	127
 19249  00442E  1836               	xorwf	_ipv4Address+3,w,c
 19250  004430  1034               	iorwf	_ipv4Address+1,w,c
 19251  004432  1035               	iorwf	_ipv4Address+2,w,c
 19252  004434  E05B               	bz	l7994
 19253  004436                     u11100:
 19254                           
 19255                           ; BSR set to: 0
 19256                           ;ipv4.c: 223: {
 19257                           ;ipv4.c: 224: if(destAddress != 0xFFFFFFFF)
 19258  004436  2822               	incf	IPv4_Start@destAddress,w,c
 19259  004438  E106               	bnz	u11110
 19260  00443A  2823               	incf	IPv4_Start@destAddress+1,w,c
 19261  00443C  E104               	bnz	u11110
 19262  00443E  2824               	incf	IPv4_Start@destAddress+2,w,c
 19263  004440  E102               	bnz	u11110
 19264  004442  2825               	incf	IPv4_Start@destAddress+3,w,c
 19265  004444  E056               	bz	l7998
 19266  004446                     u11110:
 19267                           
 19268                           ; BSR set to: 0
 19269                           ;ipv4.c: 225: {
 19270                           ;ipv4.c: 226: if((ipv4SubnetMask & destAddress) == (ipv4SubnetMask & ipv4Address))
 19271  004446  5033               	movf	_ipv4Address,w,c
 19272  004448  0101               	movlb	1	; () banked
 19273  00444A  15C8               	andwf	_ipv4SubnetMask& (0+255),w,b
 19274  00444C  6E27               	movwf	??_IPv4_Start& (0+255),c
 19275  00444E  5034               	movf	_ipv4Address+1,w,c
 19276  004450  15C9               	andwf	(_ipv4SubnetMask+1)& (0+255),w,b
 19277  004452  6E28               	movwf	(??_IPv4_Start+1)& (0+255),c
 19278  004454  5035               	movf	_ipv4Address+2,w,c
 19279  004456  15CA               	andwf	(_ipv4SubnetMask+2)& (0+255),w,b
 19280  004458  6E29               	movwf	(??_IPv4_Start+2)& (0+255),c
 19281  00445A  5036               	movf	_ipv4Address+3,w,c
 19282  00445C  15CB               	andwf	(_ipv4SubnetMask+3)& (0+255),w,b
 19283  00445E  6E2A               	movwf	(??_IPv4_Start+3)& (0+255),c
 19284  004460  5022               	movf	IPv4_Start@destAddress,w,c
 19285  004462  15C8               	andwf	_ipv4SubnetMask& (0+255),w,b
 19286  004464  6E2B               	movwf	(??_IPv4_Start+4)& (0+255),c
 19287  004466  5023               	movf	IPv4_Start@destAddress+1,w,c
 19288  004468  15C9               	andwf	(_ipv4SubnetMask+1)& (0+255),w,b
 19289  00446A  6E2C               	movwf	(??_IPv4_Start+5)& (0+255),c
 19290  00446C  5024               	movf	IPv4_Start@destAddress+2,w,c
 19291  00446E  15CA               	andwf	(_ipv4SubnetMask+2)& (0+255),w,b
 19292  004470  6E2D               	movwf	(??_IPv4_Start+6)& (0+255),c
 19293  004472  5025               	movf	IPv4_Start@destAddress+3,w,c
 19294  004474  15CB               	andwf	(_ipv4SubnetMask+3)& (0+255),w,b
 19295  004476  6E2E               	movwf	(??_IPv4_Start+7)& (0+255),c
 19296  004478  5027               	movf	??_IPv4_Start,w,c
 19297  00447A  182B               	xorwf	??_IPv4_Start+4,w,c
 19298  00447C  E112               	bnz	l936
 19299  00447E  5028               	movf	??_IPv4_Start+1,w,c
 19300  004480  182C               	xorwf	??_IPv4_Start+5,w,c
 19301  004482  E10F               	bnz	l936
 19302  004484  5029               	movf	??_IPv4_Start+2,w,c
 19303  004486  182D               	xorwf	??_IPv4_Start+6,w,c
 19304  004488  E10C               	bnz	l936
 19305  00448A  502A               	movf	??_IPv4_Start+3,w,c
 19306  00448C  182E               	xorwf	??_IPv4_Start+7,w,c
 19307  00448E  E109               	bnz	l936
 19308                           
 19309                           ; BSR set to: 1
 19310                           ;ipv4.c: 227: {
 19311                           ;ipv4.c: 228: targetAddress = destAddress;
 19312  004490  C022  F098         	movff	IPv4_Start@destAddress,IPv4_Start@targetAddress
 19313  004494  C023  F099         	movff	IPv4_Start@destAddress+1,IPv4_Start@targetAddress+1
 19314  004498  C024  F09A         	movff	IPv4_Start@destAddress+2,IPv4_Start@targetAddress+2
 19315  00449C  C025  F09B         	movff	IPv4_Start@destAddress+3,IPv4_Start@targetAddress+3
 19316                           
 19317                           ;ipv4.c: 229: }
 19318  0044A0  D008               	goto	l7988
 19319  0044A2                     l936:
 19320                           
 19321                           ; BSR set to: 1
 19322                           ;ipv4.c: 230: else
 19323                           ;ipv4.c: 231: {
 19324                           ;ipv4.c: 232: targetAddress = ipv4Router;
 19325  0044A2  C220  F098         	movff	_ipv4Router,IPv4_Start@targetAddress
 19326  0044A6  C221  F099         	movff	_ipv4Router+1,IPv4_Start@targetAddress+1
 19327  0044AA  C222  F09A         	movff	_ipv4Router+2,IPv4_Start@targetAddress+2
 19328  0044AE  C223  F09B         	movff	_ipv4Router+3,IPv4_Start@targetAddress+3
 19329  0044B2                     l7988:
 19330                           
 19331                           ; BSR set to: 1
 19332                           ;ipv4.c: 233: }
 19333                           ;ipv4.c: 235: macAddress= ARPV4_Lookup(targetAddress);
 19334  0044B2  C098  F017         	movff	IPv4_Start@targetAddress,ARPV4_Lookup@ip_address
 19335  0044B6  C099  F018         	movff	IPv4_Start@targetAddress+1,ARPV4_Lookup@ip_address+1
 19336  0044BA  C09A  F019         	movff	IPv4_Start@targetAddress+2,ARPV4_Lookup@ip_address+2
 19337  0044BE  C09B  F01A         	movff	IPv4_Start@targetAddress+3,ARPV4_Lookup@ip_address+3
 19338  0044C2  EC12  F02E         	call	_ARPV4_Lookup	;wreg free
 19339  0044C6  C017  F09C         	movff	?_ARPV4_Lookup,IPv4_Start@macAddress
 19340  0044CA  C018  F09D         	movff	?_ARPV4_Lookup+1,IPv4_Start@macAddress+1
 19341                           
 19342                           ; BSR set to: 1
 19343                           ;ipv4.c: 236: if(macAddress == 0)
 19344  0044CE  0100               	movlb	0	; () banked
 19345  0044D0  519C               	movf	IPv4_Start@macAddress& (0+255),w,b
 19346  0044D2  119D               	iorwf	(IPv4_Start@macAddress+1)& (0+255),w,b
 19347  0044D4  E114               	bnz	l8000
 19348                           
 19349                           ; BSR set to: 0
 19350                           ;ipv4.c: 237: {
 19351                           ;ipv4.c: 238: ret = ARPV4_Request(targetAddress);
 19352  0044D6  C098  F01D         	movff	IPv4_Start@targetAddress,ARPV4_Request@destAddress
 19353  0044DA  C099  F01E         	movff	IPv4_Start@targetAddress+1,ARPV4_Request@destAddress+1
 19354  0044DE  C09A  F01F         	movff	IPv4_Start@targetAddress+2,ARPV4_Request@destAddress+2
 19355  0044E2  C09B  F020         	movff	IPv4_Start@targetAddress+3,ARPV4_Request@destAddress+3
 19356  0044E6  EC83  F023         	call	_ARPV4_Request	;wreg free
 19357  0044EA  6F9E               	movwf	IPv4_Start@ret& (0+255),b
 19358  0044EC                     l7994:
 19359                           
 19360                           ;ipv4.c: 239: return ret;
 19361  0044EC  0100               	movlb	0	; () banked
 19362  0044EE  519E               	movf	IPv4_Start@ret& (0+255),w,b
 19363  0044F0  0012               	return	
 19364  0044F2                     l7998:
 19365                           
 19366                           ; BSR set to: 0
 19367                           ;ipv4.c: 242: else
 19368                           ;ipv4.c: 243: {
 19369                           ;ipv4.c: 244: macAddress = &broadcastMAC;
 19370  0044F2  0E28               	movlw	low _broadcastMAC
 19371  0044F4  6F9C               	movwf	IPv4_Start@macAddress& (0+255),b
 19372  0044F6  519C               	movf	IPv4_Start@macAddress& (0+255),w,b
 19373  0044F8  A4D8               	btfss	status,2,c
 19374  0044FA  0E10               	movlw	high __smallconst
 19375  0044FC  6F9D               	movwf	(IPv4_Start@macAddress+1)& (0+255),b
 19376  0044FE                     l8000:
 19377                           
 19378                           ; BSR set to: 0
 19379                           ;ipv4.c: 245: }
 19380                           ;ipv4.c: 246: ret = ETH_WriteStart(macAddress, 0x0800);
 19381  0044FE  C09C  F017         	movff	IPv4_Start@macAddress,ETH_WriteStart@dest_mac
 19382  004502  C09D  F018         	movff	IPv4_Start@macAddress+1,ETH_WriteStart@dest_mac+1
 19383  004506  0E08               	movlw	8
 19384  004508  6E1A               	movwf	ETH_WriteStart@type+1,c
 19385  00450A  6A19               	clrf	ETH_WriteStart@type,c
 19386  00450C  EC73  F025         	call	_ETH_WriteStart	;wreg free
 19387  004510  0100               	movlb	0	; () banked
 19388  004512  6F9E               	movwf	IPv4_Start@ret& (0+255),b
 19389                           
 19390                           ; BSR set to: 0
 19391                           ;ipv4.c: 247: if(ret == SUCCESS)
 19392  004514  059E               	decf	IPv4_Start@ret& (0+255),w,b
 19393  004516  E1EA               	bnz	l7994
 19394                           
 19395                           ; BSR set to: 0
 19396                           ;ipv4.c: 248: {
 19397                           ;ipv4.c: 249: ETH_Write16(0x4500);
 19398  004518  0E45               	movlw	69
 19399  00451A  6E18               	movwf	ETH_Write16@data+1,c
 19400  00451C  6A17               	clrf	ETH_Write16@data,c
 19401  00451E  EC34  F032         	call	_ETH_Write16	;wreg free
 19402                           
 19403                           ;ipv4.c: 250: ETH_Write16(0);
 19404  004522  6A18               	clrf	ETH_Write16@data+1,c
 19405  004524  6A17               	clrf	ETH_Write16@data,c
 19406  004526  EC34  F032         	call	_ETH_Write16	;wreg free
 19407                           
 19408                           ;ipv4.c: 251: ETH_Write32(0xAA554000);
 19409  00452A  6A17               	clrf	ETH_Write32@data,c
 19410  00452C  0E40               	movlw	64
 19411  00452E  6E18               	movwf	ETH_Write32@data+1,c
 19412  004530  0E55               	movlw	85
 19413  004532  6E19               	movwf	ETH_Write32@data+2,c
 19414  004534  0EAA               	movlw	170
 19415  004536  6E1A               	movwf	ETH_Write32@data+3,c
 19416  004538  ECDF  F031         	call	_ETH_Write32	;wreg free
 19417                           
 19418                           ;ipv4.c: 252: ETH_Write8(64u);
 19419  00453C  0E40               	movlw	64
 19420  00453E  EC55  F032         	call	_ETH_Write8
 19421                           
 19422                           ;ipv4.c: 253: ETH_Write8(protocol);
 19423  004542  5026               	movf	IPv4_Start@protocol,w,c
 19424  004544  EC55  F032         	call	_ETH_Write8
 19425                           
 19426                           ;ipv4.c: 254: ETH_Write16(0);
 19427  004548  6A18               	clrf	ETH_Write16@data+1,c
 19428  00454A  6A17               	clrf	ETH_Write16@data,c
 19429  00454C  EC34  F032         	call	_ETH_Write16	;wreg free
 19430                           
 19431                           ;ipv4.c: 255: ETH_Write32(ipv4Address);
 19432  004550  ECF8  F021         	call	PL523	;call to abstracted procedure
 19433  004554  ECDF  F031         	call	_ETH_Write32	;wreg free
 19434                           
 19435                           ;ipv4.c: 256: ETH_Write32(destAddress);
 19436  004558  C022  F017         	movff	IPv4_Start@destAddress,ETH_Write32@data
 19437  00455C  C023  F018         	movff	IPv4_Start@destAddress+1,ETH_Write32@data+1
 19438  004560  C024  F019         	movff	IPv4_Start@destAddress+2,ETH_Write32@data+2
 19439  004564  C025  F01A         	movff	IPv4_Start@destAddress+3,ETH_Write32@data+3
 19440  004568  ECDF  F031         	call	_ETH_Write32	;wreg free
 19441                           
 19442                           ;ipv4.c: 259: ipv4Header.srcIpAddress = ipv4Address;
 19443  00456C  C033  F297         	movff	_ipv4Address,_ipv4Header+12
 19444  004570  C034  F298         	movff	_ipv4Address+1,_ipv4Header+13
 19445  004574  C035  F299         	movff	_ipv4Address+2,_ipv4Header+14
 19446  004578  C036  F29A         	movff	_ipv4Address+3,_ipv4Header+15
 19447                           
 19448                           ;ipv4.c: 260: ipv4Header.dstIpAddress = destAddress;
 19449  00457C  C022  F29B         	movff	IPv4_Start@destAddress,_ipv4Header+16
 19450  004580  C023  F29C         	movff	IPv4_Start@destAddress+1,_ipv4Header+17
 19451  004584  C024  F29D         	movff	IPv4_Start@destAddress+2,_ipv4Header+18
 19452  004588  C025  F29E         	movff	IPv4_Start@destAddress+3,_ipv4Header+19
 19453                           
 19454                           ;ipv4.c: 261: ipv4Header.protocol = protocol;
 19455  00458C  C026  F294         	movff	IPv4_Start@protocol,_ipv4Header+9
 19456  004590  D7AD               	goto	l7994
 19457  004592                     __end_of_IPv4_Start:
 19458                           	opt stack 0
 19459  004592                     PL689:
 19460                           	opt stack 18
 19461  004592  5033               	movf	_ipv4Address,w,c
 19462  004594  1034               	iorwf	_ipv4Address+1,w,c
 19463  004596  1035               	iorwf	_ipv4Address+2,w,c
 19464  004598  1036               	iorwf	_ipv4Address+3,w,c
 19465  00459A  0012               	return	
 19466  00459C                     __end_ofPL689:
 19467                           	opt stack 0
 19468                           tosu	equ	0xFFF
 19469                           tosh	equ	0xFFE
 19470                           tosl	equ	0xFFD
 19471                           pclath	equ	0xFFA
 19472                           tblptru	equ	0xFF8
 19473                           tblptrh	equ	0xFF7
 19474                           tblptrl	equ	0xFF6
 19475                           tablat	equ	0xFF5
 19476                           prodh	equ	0xFF4
 19477                           prodl	equ	0xFF3
 19478                           intcon	equ	0xFF2
 19479                           indf0	equ	0xFEF
 19480                           postinc0	equ	0xFEE
 19481                           fsr0h	equ	0xFEA
 19482                           fsr0l	equ	0xFE9
 19483                           wreg	equ	0xFE8
 19484                           indf1	equ	0xFE7
 19485                           postinc1	equ	0xFE6
 19486                           postdec1	equ	0xFE5
 19487                           plusw1	equ	0xFE3
 19488                           fsr1h	equ	0xFE2
 19489                           fsr1l	equ	0xFE1
 19490                           indf2	equ	0xFDF
 19491                           postinc2	equ	0xFDE
 19492                           postdec2	equ	0xFDD
 19493                           plusw2	equ	0xFDB
 19494                           fsr2h	equ	0xFDA
 19495                           fsr2l	equ	0xFD9
 19496                           status	equ	0xFD8
 19497                           
 19498 ;; *************** function _ETH_Write32 *****************
 19499 ;; Defined at:
 19500 ;;		line 495 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 19501 ;; Parameters:    Size  Location     Type
 19502 ;;  data            4   22[COMRAM] unsigned long 
 19503 ;; Auto vars:     Size  Location     Type
 19504 ;;		None
 19505 ;; Return value:  Size  Location     Type
 19506 ;;                  1    wreg      void 
 19507 ;; Registers used:
 19508 ;;		wreg, status,2, cstack
 19509 ;; Tracked objects:
 19510 ;;		On entry : 0/0
 19511 ;;		On exit  : 0/0
 19512 ;;		Unchanged: 0/0
 19513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19514 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19517 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19518 ;;Total ram usage:        4 bytes
 19519 ;; Hardware stack levels used:    1
 19520 ;; Hardware stack levels required when called:    9
 19521 ;; This function calls:
 19522 ;;		_ETH_EdataWrite
 19523 ;; This function is called by:
 19524 ;;		_DHCP_Request
 19525 ;;		_IPv4_Start
 19526 ;; This function uses a non-reentrant model
 19527 ;;
 19528                           
 19529                           	psect	text69
 19530  0063BE                     __ptext69:
 19531                           	opt stack 0
 19532  0063BE                     _ETH_Write32:
 19533                           	opt stack 17
 19534                           
 19535                           ;j60_driver.c: 497: ETH_EdataWrite(data >> 24);
 19536                           
 19537                           ; BSR set to: 0
 19538                           ;incstack = 0
 19539  0063BE  501A               	movf	ETH_Write32@data+3,w,c
 19540  0063C0                     i15L__ptext87:
 19541                           	opt stack 0
 19542  0063C0                     i15L_ETH_EdataWrite:
 19543                           	opt stack 0
 19544  0063C0                     i15Ll7568:
 19545                           	opt stack 17
 19546  0063C0  CFE8 FF61          	movff	wreg,3937	;# 
 19547  0063C4                     i15Ll463:
 19548                           	opt stack 17
 19549                           
 19550                           ;j60_driver.c: 498: ETH_EdataWrite(data >> 16);
 19551  0063C4  5019               	movf	ETH_Write32@data+2,w,c
 19552  0063C6                     i16L__ptext87:
 19553                           	opt stack 0
 19554  0063C6                     i16L_ETH_EdataWrite:
 19555                           	opt stack 0
 19556  0063C6                     i16Ll7568:
 19557                           	opt stack 17
 19558  0063C6  CFE8 FF61          	movff	wreg,3937	;# 
 19559  0063CA                     i16Ll463:
 19560                           	opt stack 17
 19561                           
 19562                           ;j60_driver.c: 499: ETH_EdataWrite(data >> 8);
 19563  0063CA  5018               	movf	ETH_Write32@data+1,w,c
 19564  0063CC                     i17L__ptext87:
 19565                           	opt stack 0
 19566  0063CC                     i17L_ETH_EdataWrite:
 19567                           	opt stack 0
 19568  0063CC                     i17Ll7568:
 19569                           	opt stack 17
 19570  0063CC  CFE8 FF61          	movff	wreg,3937	;# 
 19571  0063D0                     i17Ll463:
 19572                           	opt stack 17
 19573                           
 19574                           ;j60_driver.c: 500: ETH_EdataWrite(data);
 19575  0063D0  5017               	movf	ETH_Write32@data,w,c
 19576  0063D2                     i18L__ptext87:
 19577                           	opt stack 0
 19578  0063D2                     i18L_ETH_EdataWrite:
 19579                           	opt stack 0
 19580  0063D2                     i18Ll7568:
 19581                           	opt stack 17
 19582  0063D2  CFE8 FF61          	movff	wreg,3937	;# 
 19583  0063D6                     i18Ll463:
 19584                           	opt stack 0
 19585  0063D6  0012               	return	
 19586  0063D8                     __end_of_ETH_Write32:
 19587                           	opt stack 0
 19588                           tosu	equ	0xFFF
 19589                           tosh	equ	0xFFE
 19590                           tosl	equ	0xFFD
 19591                           pclath	equ	0xFFA
 19592                           tblptru	equ	0xFF8
 19593                           tblptrh	equ	0xFF7
 19594                           tblptrl	equ	0xFF6
 19595                           tablat	equ	0xFF5
 19596                           prodh	equ	0xFF4
 19597                           prodl	equ	0xFF3
 19598                           intcon	equ	0xFF2
 19599                           indf0	equ	0xFEF
 19600                           postinc0	equ	0xFEE
 19601                           fsr0h	equ	0xFEA
 19602                           fsr0l	equ	0xFE9
 19603                           wreg	equ	0xFE8
 19604                           indf1	equ	0xFE7
 19605                           postinc1	equ	0xFE6
 19606                           postdec1	equ	0xFE5
 19607                           plusw1	equ	0xFE3
 19608                           fsr1h	equ	0xFE2
 19609                           fsr1l	equ	0xFE1
 19610                           indf2	equ	0xFDF
 19611                           postinc2	equ	0xFDE
 19612                           postdec2	equ	0xFDD
 19613                           plusw2	equ	0xFDB
 19614                           fsr2h	equ	0xFDA
 19615                           fsr2l	equ	0xFD9
 19616                           status	equ	0xFD8
 19617                           
 19618 ;; *************** function _ETH_Write16 *****************
 19619 ;; Defined at:
 19620 ;;		line 474 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 19621 ;; Parameters:    Size  Location     Type
 19622 ;;  data            2   22[COMRAM] unsigned int 
 19623 ;; Auto vars:     Size  Location     Type
 19624 ;;		None
 19625 ;; Return value:  Size  Location     Type
 19626 ;;                  1    wreg      void 
 19627 ;; Registers used:
 19628 ;;		wreg, status,2, cstack
 19629 ;; Tracked objects:
 19630 ;;		On entry : 0/0
 19631 ;;		On exit  : 0/0
 19632 ;;		Unchanged: 0/0
 19633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19634 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19637 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19638 ;;Total ram usage:        2 bytes
 19639 ;; Hardware stack levels used:    1
 19640 ;; Hardware stack levels required when called:    9
 19641 ;; This function calls:
 19642 ;;		_ETH_EdataWrite
 19643 ;; This function is called by:
 19644 ;;		_DHCP_Request
 19645 ;;		_ICMP_EchoReply
 19646 ;;		_IPv4_Start
 19647 ;;		_UDP_Start
 19648 ;; This function uses a non-reentrant model
 19649 ;;
 19650                           
 19651                           	psect	text70
 19652  006468                     __ptext70:
 19653                           	opt stack 0
 19654  006468                     _ETH_Write16:
 19655                           	opt stack 17
 19656                           
 19657                           ;j60_driver.c: 476: ETH_EdataWrite(data >> 8);
 19658                           
 19659                           ;incstack = 0
 19660  006468  5018               	movf	ETH_Write16@data+1,w,c
 19661  00646A                     i19L__ptext87:
 19662                           	opt stack 0
 19663  00646A                     i19L_ETH_EdataWrite:
 19664                           	opt stack 0
 19665  00646A                     i19Ll7568:
 19666                           	opt stack 17
 19667  00646A  CFE8 FF61          	movff	wreg,3937	;# 
 19668  00646E                     i19Ll463:
 19669                           	opt stack 17
 19670                           
 19671                           ;j60_driver.c: 477: ETH_EdataWrite(data);
 19672  00646E  5017               	movf	ETH_Write16@data,w,c
 19673  006470                     i20L__ptext87:
 19674                           	opt stack 0
 19675  006470                     i20L_ETH_EdataWrite:
 19676                           	opt stack 0
 19677  006470                     i20Ll7568:
 19678                           	opt stack 17
 19679  006470  CFE8 FF61          	movff	wreg,3937	;# 
 19680  006474                     i20Ll463:
 19681                           	opt stack 0
 19682  006474  0012               	return	
 19683  006476                     __end_of_ETH_Write16:
 19684                           	opt stack 0
 19685                           tosu	equ	0xFFF
 19686                           tosh	equ	0xFFE
 19687                           tosl	equ	0xFFD
 19688                           pclath	equ	0xFFA
 19689                           tblptru	equ	0xFF8
 19690                           tblptrh	equ	0xFF7
 19691                           tblptrl	equ	0xFF6
 19692                           tablat	equ	0xFF5
 19693                           prodh	equ	0xFF4
 19694                           prodl	equ	0xFF3
 19695                           intcon	equ	0xFF2
 19696                           indf0	equ	0xFEF
 19697                           postinc0	equ	0xFEE
 19698                           fsr0h	equ	0xFEA
 19699                           fsr0l	equ	0xFE9
 19700                           wreg	equ	0xFE8
 19701                           indf1	equ	0xFE7
 19702                           postinc1	equ	0xFE6
 19703                           postdec1	equ	0xFE5
 19704                           plusw1	equ	0xFE3
 19705                           fsr1h	equ	0xFE2
 19706                           fsr1l	equ	0xFE1
 19707                           indf2	equ	0xFDF
 19708                           postinc2	equ	0xFDE
 19709                           postdec2	equ	0xFDD
 19710                           plusw2	equ	0xFDB
 19711                           fsr2h	equ	0xFDA
 19712                           fsr2l	equ	0xFD9
 19713                           status	equ	0xFD8
 19714                           
 19715 ;; *************** function _ARPV4_Request *****************
 19716 ;; Defined at:
 19717 ;;		line 194 in file "../../TCPIP Library/source/arpv4.c"
 19718 ;; Parameters:    Size  Location     Type
 19719 ;;  destAddress     4   28[COMRAM] unsigned long 
 19720 ;; Auto vars:     Size  Location     Type
 19721 ;;  header         28   28[BANK0 ] struct .
 19722 ;;  ret             1   27[BANK0 ] enum E450
 19723 ;; Return value:  Size  Location     Type
 19724 ;;                  1    wreg      enum E450
 19725 ;; Registers used:
 19726 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19727 ;; Tracked objects:
 19728 ;;		On entry : F/0
 19729 ;;		On exit  : F/0
 19730 ;;		Unchanged: 0/0
 19731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19732 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19733 ;;      Locals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19734 ;;      Temps:          0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19735 ;;      Totals:         4      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19736 ;;Total ram usage:       60 bytes
 19737 ;; Hardware stack levels used:    1
 19738 ;; Hardware stack levels required when called:   10
 19739 ;; This function calls:
 19740 ;;		_ETH_GetMAC
 19741 ;;		_ETH_Send
 19742 ;;		_ETH_WriteBlock
 19743 ;;		_ETH_WriteStart
 19744 ;; This function is called by:
 19745 ;;		_IPv4_Start
 19746 ;; This function uses a non-reentrant model
 19747 ;;
 19748                           
 19749                           	psect	text71
 19750  004706                     __ptext71:
 19751                           	opt stack 0
 19752  004706                     _ARPV4_Request:
 19753                           	opt stack 16
 19754                           
 19755                           ; BSR set to: 0
 19756                           ;arpv4.c: 200: arpHeader_t header;
 19757                           ;arpv4.c: 201: header.htype = ((((uint16_t)1 & (uint16_t)0xFF00) >> 8) | (((uint16_t)1 &
      +                           (uint16_t)0x00FF) << 8));
 19758                           
 19759                           ; BSR set to: 0
 19760                           
 19761                           ;incstack = 0
 19762  004706  0E01               	movlw	1
 19763  004708  6F7D               	movwf	(ARPV4_Request@header+1)& (0+255),b
 19764  00470A  6B7C               	clrf	ARPV4_Request@header& (0+255),b
 19765                           
 19766                           ;arpv4.c: 202: header.ptype = ((((uint16_t)0x0800 & (uint16_t)0xFF00) >> 8) | (((uint16_
      +                          t)0x0800 & (uint16_t)0x00FF) << 8));
 19767  00470C  6B7F               	clrf	(ARPV4_Request@header+3)& (0+255),b
 19768  00470E  0E08               	movlw	8
 19769  004710  6F7E               	movwf	(ARPV4_Request@header+2)& (0+255),b
 19770                           
 19771                           ;arpv4.c: 203: header.hlen = 6;
 19772  004712  0E06               	movlw	6
 19773  004714  6F80               	movwf	(ARPV4_Request@header+4)& (0+255),b
 19774                           
 19775                           ;arpv4.c: 204: header.plen = 4;
 19776  004716  0E04               	movlw	4
 19777  004718  6F81               	movwf	(ARPV4_Request@header+5)& (0+255),b
 19778                           
 19779                           ;arpv4.c: 205: header.oper = ((((uint16_t)1 & (uint16_t)0xFF00) >> 8) | (((uint16_t)1 & 
      +                          (uint16_t)0x00FF) << 8));
 19780  00471A  0E01               	movlw	1
 19781  00471C  6F83               	movwf	(ARPV4_Request@header+7)& (0+255),b
 19782  00471E  6B82               	clrf	(ARPV4_Request@header+6)& (0+255),b
 19783                           
 19784                           ; BSR set to: 0
 19785                           ;arpv4.c: 206: ETH_GetMAC((char*)&header.sha);
 19786  004720  0E84               	movlw	low (ARPV4_Request@header+8)
 19787  004722  6E17               	movwf	ETH_GetMAC@mac,c
 19788  004724  ECF7  F02F         	call	_ETH_GetMAC	;wreg free
 19789                           
 19790                           ;arpv4.c: 207: header.spa = ((((uint32_t)ipv4Address&(uint32_t)0xff000000) >> 24) | (((u
      +                          int32_t)ipv4Address&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)ipv4Address&(uint32_t)0x00
      +                          00ff00) << 8) | (((uint32_t)ipv4Address&(uint32_t)0x000000ff) << 24) );
 19791  004728  5033               	movf	_ipv4Address,w,c
 19792  00472A  0100               	movlb	0	; () banked
 19793  00472C  D882               	call	PL587	;call to abstracted procedure
 19794  00472E  5034               	movf	_ipv4Address+1,w,c
 19795  004730  D874               	call	PL571	;call to abstracted procedure
 19796  004732  5035               	movf	_ipv4Address+2,w,c
 19797  004734  D865               	call	PL565	;call to abstracted procedure
 19798  004736  5036               	movf	_ipv4Address+3,w,c
 19799  004738  6F72               	movwf	(??_ARPV4_Request+18)& (0+255),b
 19800  00473A  0E19               	movlw	25
 19801  00473C  D001               	goto	u10760
 19802  00473E                     u10765:
 19803  00473E  D884               	call	PL665	;call to abstracted procedure
 19804  004740                     u10760:
 19805  004740  2EE8               	decfsz	wreg,f,c
 19806  004742  D7FD               	goto	u10765
 19807  004744  D842               	call	PL469	;call to abstracted procedure
 19808  004746  6F8A               	movwf	(ARPV4_Request@header+14)& (0+255),b
 19809  004748  5161               	movf	(??_ARPV4_Request+1)& (0+255),w,b
 19810  00474A  1178               	iorwf	(??_ARPV4_Request+24)& (0+255),w,b
 19811  00474C  6F8B               	movwf	(ARPV4_Request@header+15)& (0+255),b
 19812  00474E  5162               	movf	(??_ARPV4_Request+2)& (0+255),w,b
 19813  004750  1179               	iorwf	(??_ARPV4_Request+25)& (0+255),w,b
 19814  004752  6F8C               	movwf	(ARPV4_Request@header+16)& (0+255),b
 19815  004754  5163               	movf	(??_ARPV4_Request+3)& (0+255),w,b
 19816  004756  117A               	iorwf	(??_ARPV4_Request+26)& (0+255),w,b
 19817  004758  6F8D               	movwf	(ARPV4_Request@header+17)& (0+255),b
 19818                           
 19819                           ; BSR set to: 0
 19820                           ;arpv4.c: 208: header.tpa= ((((uint32_t)destAddress&(uint32_t)0xff000000) >> 24) | (((ui
      +                          nt32_t)destAddress&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)destAddress&(uint32_t)0x000
      +                          0ff00) << 8) | (((uint32_t)destAddress&(uint32_t)0x000000ff) << 24) );
 19821  00475A  501D               	movf	ARPV4_Request@destAddress,w,c
 19822  00475C  D86A               	call	PL587	;call to abstracted procedure
 19823  00475E  501E               	movf	ARPV4_Request@destAddress+1,w,c
 19824  004760  D85C               	call	PL571	;call to abstracted procedure
 19825  004762  501F               	movf	ARPV4_Request@destAddress+2,w,c
 19826  004764  D84D               	call	PL565	;call to abstracted procedure
 19827  004766  5020               	movf	ARPV4_Request@destAddress+3,w,c
 19828  004768  6F72               	movwf	(??_ARPV4_Request+18)& (0+255),b
 19829  00476A  0E19               	movlw	25
 19830  00476C  D001               	goto	u10770
 19831  00476E                     u10775:
 19832  00476E  D86C               	call	PL665	;call to abstracted procedure
 19833  004770                     u10770:
 19834  004770  2EE8               	decfsz	wreg,f,c
 19835  004772  D7FD               	goto	u10775
 19836  004774  D82A               	call	PL469	;call to abstracted procedure
 19837  004776  6F94               	movwf	(ARPV4_Request@header+24)& (0+255),b
 19838  004778  5161               	movf	(??_ARPV4_Request+1)& (0+255),w,b
 19839  00477A  1178               	iorwf	(??_ARPV4_Request+24)& (0+255),w,b
 19840  00477C  6F95               	movwf	(ARPV4_Request@header+25)& (0+255),b
 19841  00477E  5162               	movf	(??_ARPV4_Request+2)& (0+255),w,b
 19842  004780  1179               	iorwf	(??_ARPV4_Request+25)& (0+255),w,b
 19843  004782  6F96               	movwf	(ARPV4_Request@header+26)& (0+255),b
 19844  004784  5163               	movf	(??_ARPV4_Request+3)& (0+255),w,b
 19845  004786  117A               	iorwf	(??_ARPV4_Request+26)& (0+255),w,b
 19846  004788  6F97               	movwf	(ARPV4_Request@header+27)& (0+255),b
 19847                           
 19848                           ; BSR set to: 0
 19849                           ;arpv4.c: 209: header.tha.s.byte1 = 0;
 19850  00478A  6B8E               	clrf	(ARPV4_Request@header+18)& (0+255),b
 19851                           
 19852                           ; BSR set to: 0
 19853                           ;arpv4.c: 210: header.tha.s.byte2 = 0;
 19854  00478C  6B8F               	clrf	(ARPV4_Request@header+19)& (0+255),b
 19855                           
 19856                           ; BSR set to: 0
 19857                           ;arpv4.c: 211: header.tha.s.byte3 = 0;
 19858  00478E  6B90               	clrf	(ARPV4_Request@header+20)& (0+255),b
 19859                           
 19860                           ; BSR set to: 0
 19861                           ;arpv4.c: 212: header.tha.s.byte4 = 0;
 19862  004790  6B91               	clrf	(ARPV4_Request@header+21)& (0+255),b
 19863                           
 19864                           ; BSR set to: 0
 19865                           ;arpv4.c: 213: header.tha.s.byte5 = 0;
 19866  004792  6B92               	clrf	(ARPV4_Request@header+22)& (0+255),b
 19867                           
 19868                           ; BSR set to: 0
 19869                           ;arpv4.c: 214: header.tha.s.byte6 = 0;
 19870  004794  6B93               	clrf	(ARPV4_Request@header+23)& (0+255),b
 19871                           
 19872                           ; BSR set to: 0
 19873                           ;arpv4.c: 216: ret = ETH_WriteStart(&broadcastMAC,0x0806);
 19874  004796  0E28               	movlw	low _broadcastMAC
 19875  004798  6E17               	movwf	ETH_WriteStart@dest_mac,c
 19876  00479A  5017               	movf	ETH_WriteStart@dest_mac,w,c
 19877  00479C  A4D8               	btfss	status,2,c
 19878  00479E  0E10               	movlw	high __smallconst
 19879  0047A0  6E18               	movwf	ETH_WriteStart@dest_mac+1,c
 19880  0047A2  D85E               	call	PL729	;call to abstracted procedure
 19881  0047A4  EC73  F025         	call	_ETH_WriteStart	;wreg free
 19882  0047A8  0100               	movlb	0	; () banked
 19883  0047AA  6F7B               	movwf	ARPV4_Request@ret& (0+255),b
 19884                           
 19885                           ; BSR set to: 0
 19886                           ;arpv4.c: 217: if(ret == SUCCESS)
 19887  0047AC  057B               	decf	ARPV4_Request@ret& (0+255),w,b
 19888  0047AE  E10B               	bnz	l7812
 19889                           
 19890                           ; BSR set to: 0
 19891                           ;arpv4.c: 218: {
 19892                           ;arpv4.c: 219: ETH_WriteBlock((char*)&header,sizeof(arpHeader_t));
 19893  0047B0  0E7C               	movlw	low ARPV4_Request@header
 19894  0047B2  D850               	call	PL675	;call to abstracted procedure
 19895  0047B4  EC85  F02E         	call	_ETH_WriteBlock	;wreg free
 19896                           
 19897                           ;arpv4.c: 220: ret = ETH_Send();
 19898  0047B8  EC88  F030         	call	_ETH_Send	;wreg free
 19899  0047BC  0100               	movlb	0	; () banked
 19900  0047BE  6F7B               	movwf	ARPV4_Request@ret& (0+255),b
 19901                           
 19902                           ; BSR set to: 0
 19903                           ;arpv4.c: 221: if(ret == SUCCESS)
 19904  0047C0  057B               	decf	ARPV4_Request@ret& (0+255),w,b
 19905  0047C2  E101               	bnz	l7812
 19906                           
 19907                           ; BSR set to: 0
 19908                           ;arpv4.c: 222: {
 19909                           ;arpv4.c: 223: return MAC_NOT_FOUND;
 19910  0047C4  0C05               	retlw	5
 19911  0047C6                     l7812:
 19912                           
 19913                           ; BSR set to: 0
 19914                           ;arpv4.c: 224: }
 19915                           ;arpv4.c: 225: }
 19916                           ;arpv4.c: 226: return ret;
 19917  0047C6  517B               	movf	ARPV4_Request@ret& (0+255),w,b
 19918                           
 19919                           ; BSR set to: 0
 19920  0047C8  0012               	return		;funcret
 19921  0047CA                     __end_of_ARPV4_Request:
 19922                           	opt stack 0
 19923  0047CA                     PL469:
 19924                           	opt stack 16
 19925  0047CA  516B               	movf	(??_ARPV4_Request+11)& (0+255),w,b
 19926  0047CC  116F               	iorwf	(??_ARPV4_Request+15)& (0+255),w,b
 19927  0047CE  6F73               	movwf	(??_ARPV4_Request+19)& (0+255),b
 19928  0047D0  516C               	movf	(??_ARPV4_Request+12)& (0+255),w,b
 19929  0047D2  1170               	iorwf	(??_ARPV4_Request+16)& (0+255),w,b
 19930  0047D4  6F74               	movwf	(??_ARPV4_Request+20)& (0+255),b
 19931  0047D6  516D               	movf	(??_ARPV4_Request+13)& (0+255),w,b
 19932  0047D8  1171               	iorwf	(??_ARPV4_Request+17)& (0+255),w,b
 19933  0047DA  6F75               	movwf	(??_ARPV4_Request+21)& (0+255),b
 19934  0047DC  516E               	movf	(??_ARPV4_Request+14)& (0+255),w,b
 19935  0047DE  1172               	iorwf	(??_ARPV4_Request+18)& (0+255),w,b
 19936  0047E0  6F76               	movwf	(??_ARPV4_Request+22)& (0+255),b
 19937  0047E2  5164               	movf	(??_ARPV4_Request+4)& (0+255),w,b
 19938  0047E4  1173               	iorwf	(??_ARPV4_Request+19)& (0+255),w,b
 19939  0047E6  6F77               	movwf	(??_ARPV4_Request+23)& (0+255),b
 19940  0047E8  5165               	movf	(??_ARPV4_Request+5)& (0+255),w,b
 19941  0047EA  1174               	iorwf	(??_ARPV4_Request+20)& (0+255),w,b
 19942  0047EC  6F78               	movwf	(??_ARPV4_Request+24)& (0+255),b
 19943  0047EE  5166               	movf	(??_ARPV4_Request+6)& (0+255),w,b
 19944  0047F0  1175               	iorwf	(??_ARPV4_Request+21)& (0+255),w,b
 19945  0047F2  6F79               	movwf	(??_ARPV4_Request+25)& (0+255),b
 19946  0047F4  5167               	movf	(??_ARPV4_Request+7)& (0+255),w,b
 19947  0047F6  1176               	iorwf	(??_ARPV4_Request+22)& (0+255),w,b
 19948  0047F8  6F7A               	movwf	(??_ARPV4_Request+26)& (0+255),b
 19949  0047FA  5160               	movf	??_ARPV4_Request& (0+255),w,b
 19950  0047FC  1177               	iorwf	(??_ARPV4_Request+23)& (0+255),w,b
 19951  0047FE  0012               	return	
 19952  004800                     __end_ofPL469:
 19953                           	opt stack 0
 19954  004800                     PL565:
 19955                           	opt stack 16
 19956  004800  6F69               	movwf	(??_ARPV4_Request+9)& (0+255),b
 19957  004802  6B6A               	clrf	(??_ARPV4_Request+10)& (0+255),b
 19958  004804  5168               	movf	(??_ARPV4_Request+8)& (0+255),w,b
 19959  004806  6F6B               	movwf	(??_ARPV4_Request+11)& (0+255),b
 19960  004808  5169               	movf	(??_ARPV4_Request+9)& (0+255),w,b
 19961  00480A  6F6C               	movwf	(??_ARPV4_Request+12)& (0+255),b
 19962  00480C  516A               	movf	(??_ARPV4_Request+10)& (0+255),w,b
 19963  00480E  6F6D               	movwf	(??_ARPV4_Request+13)& (0+255),b
 19964  004810  6B6E               	clrf	(??_ARPV4_Request+14)& (0+255),b
 19965  004812  6B6F               	clrf	(??_ARPV4_Request+15)& (0+255),b
 19966  004814  6B70               	clrf	(??_ARPV4_Request+16)& (0+255),b
 19967  004816  6B71               	clrf	(??_ARPV4_Request+17)& (0+255),b
 19968  004818  0012               	return	
 19969  00481A                     __end_ofPL565:
 19970                           	opt stack 0
 19971  00481A                     PL571:
 19972                           	opt stack 16
 19973  00481A  6F65               	movwf	(??_ARPV4_Request+5)& (0+255),b
 19974  00481C  6B66               	clrf	(??_ARPV4_Request+6)& (0+255),b
 19975  00481E  6B67               	clrf	(??_ARPV4_Request+7)& (0+255),b
 19976  004820  C066  F067         	movff	??_ARPV4_Request+6,??_ARPV4_Request+7
 19977  004824  C065  F066         	movff	??_ARPV4_Request+5,??_ARPV4_Request+6
 19978  004828  C064  F065         	movff	??_ARPV4_Request+4,??_ARPV4_Request+5
 19979  00482C  6B64               	clrf	(??_ARPV4_Request+4)& (0+255),b
 19980  00482E  6B68               	clrf	(??_ARPV4_Request+8)& (0+255),b
 19981  004830  0012               	return	
 19982  004832                     __end_ofPL571:
 19983                           	opt stack 0
 19984  004832                     PL587:
 19985                           	opt stack 16
 19986  004832  6F60               	movwf	??_ARPV4_Request& (0+255),b
 19987  004834  6B61               	clrf	(??_ARPV4_Request+1)& (0+255),b
 19988  004836  6B62               	clrf	(??_ARPV4_Request+2)& (0+255),b
 19989  004838  6B63               	clrf	(??_ARPV4_Request+3)& (0+255),b
 19990  00483A  C060  F063         	movff	??_ARPV4_Request,??_ARPV4_Request+3
 19991  00483E  6B62               	clrf	(??_ARPV4_Request+2)& (0+255),b
 19992  004840  6B61               	clrf	(??_ARPV4_Request+1)& (0+255),b
 19993  004842  6B60               	clrf	??_ARPV4_Request& (0+255),b
 19994  004844  6B64               	clrf	(??_ARPV4_Request+4)& (0+255),b
 19995  004846  0012               	return	
 19996  004848                     __end_ofPL587:
 19997                           	opt stack 0
 19998  004848                     PL665:
 19999                           	opt stack 16
 20000  004848  90D8               	bcf	status,0,c
 20001  00484A  3372               	rrcf	(??_ARPV4_Request+18)& (0+255),f,b
 20002  00484C  3371               	rrcf	(??_ARPV4_Request+17)& (0+255),f,b
 20003  00484E  3370               	rrcf	(??_ARPV4_Request+16)& (0+255),f,b
 20004  004850  336F               	rrcf	(??_ARPV4_Request+15)& (0+255),f,b
 20005  004852  0012               	return	
 20006  004854                     __end_ofPL665:
 20007                           	opt stack 0
 20008  004854                     PL675:
 20009                           	opt stack 18
 20010  004854  6E17               	movwf	ETH_WriteBlock@buffer,c
 20011  004856  6A18               	clrf	ETH_WriteBlock@buffer+1,c
 20012  004858  6A1A               	clrf	ETH_WriteBlock@length+1,c
 20013  00485A  0E1C               	movlw	28
 20014  00485C  6E19               	movwf	ETH_WriteBlock@length,c
 20015  00485E  0C1C               	retlw	28
 20016  004860                     __end_ofPL675:
 20017                           	opt stack 0
 20018  004860                     PL729:
 20019                           	opt stack 18
 20020  004860  0E08               	movlw	8
 20021  004862  6E1A               	movwf	ETH_WriteStart@type+1,c
 20022  004864  0E06               	movlw	6
 20023  004866  6E19               	movwf	ETH_WriteStart@type,c
 20024  004868  0C06               	retlw	6
 20025  00486A                     __end_ofPL729:
 20026                           	opt stack 0
 20027                           tosu	equ	0xFFF
 20028                           tosh	equ	0xFFE
 20029                           tosl	equ	0xFFD
 20030                           pclath	equ	0xFFA
 20031                           tblptru	equ	0xFF8
 20032                           tblptrh	equ	0xFF7
 20033                           tblptrl	equ	0xFF6
 20034                           tablat	equ	0xFF5
 20035                           prodh	equ	0xFF4
 20036                           prodl	equ	0xFF3
 20037                           intcon	equ	0xFF2
 20038                           indf0	equ	0xFEF
 20039                           postinc0	equ	0xFEE
 20040                           fsr0h	equ	0xFEA
 20041                           fsr0l	equ	0xFE9
 20042                           wreg	equ	0xFE8
 20043                           indf1	equ	0xFE7
 20044                           postinc1	equ	0xFE6
 20045                           postdec1	equ	0xFE5
 20046                           plusw1	equ	0xFE3
 20047                           fsr1h	equ	0xFE2
 20048                           fsr1l	equ	0xFE1
 20049                           indf2	equ	0xFDF
 20050                           postinc2	equ	0xFDE
 20051                           postdec2	equ	0xFDD
 20052                           plusw2	equ	0xFDB
 20053                           fsr2h	equ	0xFDA
 20054                           fsr2l	equ	0xFD9
 20055                           status	equ	0xFD8
 20056                           
 20057 ;; *************** function _ETH_WriteStart *****************
 20058 ;; Defined at:
 20059 ;;		line 526 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 20060 ;; Parameters:    Size  Location     Type
 20061 ;;  dest_mac        2   22[COMRAM] PTR const struct .
 20062 ;;		 -> arpMap.macAddress(6), broadcastMAC(6), header.sha(6), ARPV4_Packet@header(28), 
 20063 ;;		 -> arpMap(104), NULL(0), 
 20064 ;;  type            2   24[COMRAM] unsigned int 
 20065 ;; Auto vars:     Size  Location     Type
 20066 ;;		None
 20067 ;; Return value:  Size  Location     Type
 20068 ;;                  1    wreg      enum E6890
 20069 ;; Registers used:
 20070 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20071 ;; Tracked objects:
 20072 ;;		On entry : F/0
 20073 ;;		On exit  : F/1
 20074 ;;		Unchanged: 0/0
 20075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20076 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20078 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20079 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20080 ;;Total ram usage:        6 bytes
 20081 ;; Hardware stack levels used:    1
 20082 ;; Hardware stack levels required when called:    9
 20083 ;; This function calls:
 20084 ;;		_ETH_EdataWrite
 20085 ;;		_ETH_ResetByteCount
 20086 ;; This function is called by:
 20087 ;;		_ARPV4_Packet
 20088 ;;		_ARPV4_Request
 20089 ;;		_IPv4_Start
 20090 ;; This function uses a non-reentrant model
 20091 ;;
 20092                           
 20093                           	psect	text72
 20094  004AE6                     __ptext72:
 20095                           	opt stack 0
 20096  004AE6                     _ETH_WriteStart:
 20097                           	opt stack 17
 20098                           
 20099                           ; BSR set to: 0
 20100                           ;j60_driver.c: 528: if(ethData.bufferBusy)
 20101                           
 20102                           ; BSR set to: 0
 20103                           ;incstack = 0
 20104  004AE6  0101               	movlb	1	; () banked
 20105  004AE8  BBBD               	btfsc	_ethData& (0+255),5,b	;volatile
 20106                           
 20107                           ; BSR set to: 1
 20108                           ;j60_driver.c: 529: {
 20109                           ;j60_driver.c: 530: return BUFFER_BUSY;
 20110  004AEA  0C03               	retlw	3
 20111                           
 20112                           ; BSR set to: 1
 20113                           ;j60_driver.c: 531: }
 20114                           ;j60_driver.c: 533: if(ECON1bits.TXRTS)
 20115  004AEC  B6D2               	btfsc	4050,3,c	;volatile
 20116                           
 20117                           ; BSR set to: 1
 20118                           ;j60_driver.c: 534: {
 20119                           ;j60_driver.c: 535: return TX_LOGIC_NOT_IDLE;
 20120  004AEE  0C04               	retlw	4
 20121                           
 20122                           ; BSR set to: 1
 20123                           ;j60_driver.c: 536: }
 20124                           ;j60_driver.c: 537: ETXST = ((8192) - (1518));
 20125  004AF0  D884               	call	PL671	;call to abstracted procedure
 20126                           
 20127                           ;j60_driver.c: 538: EWRPT = ((8192) - (1518));
 20128  004AF2  D889               	call	PL715	;call to abstracted procedure
 20129                           
 20130                           ; BSR set to: 14
 20131                           ;j60_driver.c: 540: ETH_ResetByteCount();
 20132  004AF4  EC50  F032         	call	_ETH_ResetByteCount	;wreg free
 20133                           
 20134                           ;j60_driver.c: 542: ETH_EdataWrite(0x06);
 20135  004AF8  0E06               	movlw	6
 20136  004AFA                     i21L__ptext87:
 20137                           	opt stack 0
 20138  004AFA                     i21L_ETH_EdataWrite:
 20139                           	opt stack 0
 20140  004AFA                     i21Ll7568:
 20141                           	opt stack 17
 20142  004AFA  CFE8 FF61          	movff	wreg,3937	;# 
 20143  004AFE                     i21Ll463:
 20144                           	opt stack 17
 20145                           
 20146                           ;j60_driver.c: 543: ETH_EdataWrite(dest_mac->mac_array[0]);
 20147  004AFE  C017  FFF6         	movff	ETH_WriteStart@dest_mac,tblptrl
 20148  004B02  C018  FFF7         	movff	ETH_WriteStart@dest_mac+1,tblptrh
 20149  004B06  0E00               	movlw	low (__smallconst shr (0+16))
 20150  004B08  6EF8               	movwf	tblptru,c
 20151  004B0A  0E0F               	movlw	(high __ramtop+-1)
 20152  004B0C  64F7               	cpfsgt	tblptrh,c
 20153  004B0E  D003               	bra	u10587
 20154  004B10  0008               	tblrd		*
 20155  004B12  50F5               	movf	tablat,w,c
 20156  004B14  D003               	bra	u10580
 20157  004B16                     u10587:
 20158  004B16  EC73  F011         	call	PL389	;call to abstracted procedure
 20159  004B1A  50EF               	movf	indf0,w,c
 20160  004B1C                     u10580:
 20161  004B1C                     i22L__ptext87:
 20162                           	opt stack 0
 20163  004B1C                     i22L_ETH_EdataWrite:
 20164                           	opt stack 0
 20165  004B1C                     i22Ll7568:
 20166                           	opt stack 17
 20167  004B1C  CFE8 FF61          	movff	wreg,3937	;# 
 20168  004B20                     i22Ll463:
 20169                           	opt stack 17
 20170                           
 20171                           ;j60_driver.c: 544: ETH_EdataWrite(dest_mac->mac_array[1]);
 20172  004B20  2817               	incf	ETH_WriteStart@dest_mac,w,c
 20173  004B22  D85F               	call	PL451	;call to abstracted procedure
 20174  004B24  64F7               	cpfsgt	tblptrh,c
 20175  004B26  D003               	bra	u10597
 20176  004B28  0008               	tblrd		*
 20177  004B2A  50F5               	movf	tablat,w,c
 20178  004B2C  D003               	bra	u10590
 20179  004B2E                     u10597:
 20180  004B2E  EC73  F011         	call	PL389	;call to abstracted procedure
 20181  004B32  50EF               	movf	indf0,w,c
 20182  004B34                     u10590:
 20183  004B34                     i23L__ptext87:
 20184                           	opt stack 0
 20185  004B34                     i23L_ETH_EdataWrite:
 20186                           	opt stack 0
 20187  004B34                     i23Ll7568:
 20188                           	opt stack 17
 20189  004B34  CFE8 FF61          	movff	wreg,3937	;# 
 20190  004B38                     i23Ll463:
 20191                           	opt stack 17
 20192                           
 20193                           ;j60_driver.c: 545: ETH_EdataWrite(dest_mac->mac_array[2]);
 20194  004B38  0E02               	movlw	2
 20195  004B3A  2417               	addwf	ETH_WriteStart@dest_mac,w,c
 20196  004B3C  D852               	call	PL451	;call to abstracted procedure
 20197  004B3E  64F7               	cpfsgt	tblptrh,c
 20198  004B40  D003               	bra	u10607
 20199  004B42  0008               	tblrd		*
 20200  004B44  50F5               	movf	tablat,w,c
 20201  004B46  D003               	bra	u10600
 20202  004B48                     u10607:
 20203  004B48  EC73  F011         	call	PL389	;call to abstracted procedure
 20204  004B4C  50EF               	movf	indf0,w,c
 20205  004B4E                     u10600:
 20206  004B4E                     i24L__ptext87:
 20207                           	opt stack 0
 20208  004B4E                     i24L_ETH_EdataWrite:
 20209                           	opt stack 0
 20210  004B4E                     i24Ll7568:
 20211                           	opt stack 17
 20212  004B4E  CFE8 FF61          	movff	wreg,3937	;# 
 20213  004B52                     i24Ll463:
 20214                           	opt stack 17
 20215                           
 20216                           ;j60_driver.c: 546: ETH_EdataWrite(dest_mac->mac_array[3]);
 20217  004B52  0E03               	movlw	3
 20218  004B54  2417               	addwf	ETH_WriteStart@dest_mac,w,c
 20219  004B56  D845               	call	PL451	;call to abstracted procedure
 20220  004B58  64F7               	cpfsgt	tblptrh,c
 20221  004B5A  D003               	bra	u10617
 20222  004B5C  0008               	tblrd		*
 20223  004B5E  50F5               	movf	tablat,w,c
 20224  004B60  D003               	bra	u10610
 20225  004B62                     u10617:
 20226  004B62  EC73  F011         	call	PL389	;call to abstracted procedure
 20227  004B66  50EF               	movf	indf0,w,c
 20228  004B68                     u10610:
 20229  004B68                     i25L__ptext87:
 20230                           	opt stack 0
 20231  004B68                     i25L_ETH_EdataWrite:
 20232                           	opt stack 0
 20233  004B68                     i25Ll7568:
 20234                           	opt stack 17
 20235  004B68  CFE8 FF61          	movff	wreg,3937	;# 
 20236  004B6C                     i25Ll463:
 20237                           	opt stack 17
 20238                           
 20239                           ;j60_driver.c: 547: ETH_EdataWrite(dest_mac->mac_array[4]);
 20240  004B6C  0E04               	movlw	4
 20241  004B6E  2417               	addwf	ETH_WriteStart@dest_mac,w,c
 20242  004B70  D838               	call	PL451	;call to abstracted procedure
 20243  004B72  64F7               	cpfsgt	tblptrh,c
 20244  004B74  D003               	bra	u10627
 20245  004B76  0008               	tblrd		*
 20246  004B78  50F5               	movf	tablat,w,c
 20247  004B7A  D003               	bra	u10620
 20248  004B7C                     u10627:
 20249  004B7C  EC73  F011         	call	PL389	;call to abstracted procedure
 20250  004B80  50EF               	movf	indf0,w,c
 20251  004B82                     u10620:
 20252  004B82                     i26L__ptext87:
 20253                           	opt stack 0
 20254  004B82                     i26L_ETH_EdataWrite:
 20255                           	opt stack 0
 20256  004B82                     i26Ll7568:
 20257                           	opt stack 17
 20258  004B82  CFE8 FF61          	movff	wreg,3937	;# 
 20259  004B86                     i26Ll463:
 20260                           	opt stack 17
 20261                           
 20262                           ;j60_driver.c: 548: ETH_EdataWrite(dest_mac->mac_array[5]);
 20263  004B86  0E05               	movlw	5
 20264  004B88  2417               	addwf	ETH_WriteStart@dest_mac,w,c
 20265  004B8A  D82B               	call	PL451	;call to abstracted procedure
 20266  004B8C  64F7               	cpfsgt	tblptrh,c
 20267  004B8E  D003               	bra	u10637
 20268  004B90  0008               	tblrd		*
 20269  004B92  50F5               	movf	tablat,w,c
 20270  004B94  D003               	bra	u10630
 20271  004B96                     u10637:
 20272  004B96  EC73  F011         	call	PL389	;call to abstracted procedure
 20273  004B9A  50EF               	movf	indf0,w,c
 20274  004B9C                     u10630:
 20275  004B9C                     i27L__ptext87:
 20276                           	opt stack 0
 20277  004B9C                     i27L_ETH_EdataWrite:
 20278                           	opt stack 0
 20279  004B9C                     i27Ll7568:
 20280                           	opt stack 17
 20281  004B9C  CFE8 FF61          	movff	wreg,3937	;# 
 20282  004BA0                     i27Ll463:
 20283                           	opt stack 17
 20284                           
 20285                           ;j60_driver.c: 550: ETH_EdataWrite(MAADR1);
 20286  004BA0  010E               	movlb	14	; () banked
 20287  004BA2  5184               	movf	132,w,b	;volatile
 20288  004BA4                     i28L__ptext87:
 20289                           	opt stack 0
 20290  004BA4                     i28L_ETH_EdataWrite:
 20291                           	opt stack 0
 20292  004BA4                     i28Ll7568:
 20293                           	opt stack 17
 20294  004BA4  CFE8 FF61          	movff	wreg,3937	;# 
 20295  004BA8                     i28Ll463:
 20296                           	opt stack 17
 20297                           
 20298                           ;j60_driver.c: 551: ETH_EdataWrite(MAADR2);
 20299  004BA8  010E               	movlb	14	; () banked
 20300  004BAA  5185               	movf	133,w,b	;volatile
 20301  004BAC                     i29L__ptext87:
 20302                           	opt stack 0
 20303  004BAC                     i29L_ETH_EdataWrite:
 20304                           	opt stack 0
 20305  004BAC                     i29Ll7568:
 20306                           	opt stack 17
 20307  004BAC  CFE8 FF61          	movff	wreg,3937	;# 
 20308  004BB0                     i29Ll463:
 20309                           	opt stack 17
 20310                           
 20311                           ;j60_driver.c: 552: ETH_EdataWrite(MAADR3);
 20312  004BB0  010E               	movlb	14	; () banked
 20313  004BB2  5182               	movf	130,w,b	;volatile
 20314  004BB4                     i30L__ptext87:
 20315                           	opt stack 0
 20316  004BB4                     i30L_ETH_EdataWrite:
 20317                           	opt stack 0
 20318  004BB4                     i30Ll7568:
 20319                           	opt stack 17
 20320  004BB4  CFE8 FF61          	movff	wreg,3937	;# 
 20321  004BB8                     i30Ll463:
 20322                           	opt stack 17
 20323                           
 20324                           ;j60_driver.c: 553: ETH_EdataWrite(MAADR4);
 20325  004BB8  010E               	movlb	14	; () banked
 20326  004BBA  5183               	movf	131,w,b	;volatile
 20327  004BBC                     i31L__ptext87:
 20328                           	opt stack 0
 20329  004BBC                     i31L_ETH_EdataWrite:
 20330                           	opt stack 0
 20331  004BBC                     i31Ll7568:
 20332                           	opt stack 17
 20333  004BBC  CFE8 FF61          	movff	wreg,3937	;# 
 20334  004BC0                     i31Ll463:
 20335                           	opt stack 17
 20336                           
 20337                           ;j60_driver.c: 554: ETH_EdataWrite(MAADR5);
 20338  004BC0  010E               	movlb	14	; () banked
 20339  004BC2  5180               	movf	128,w,b	;volatile
 20340  004BC4                     i32L__ptext87:
 20341                           	opt stack 0
 20342  004BC4                     i32L_ETH_EdataWrite:
 20343                           	opt stack 0
 20344  004BC4                     i32Ll7568:
 20345                           	opt stack 17
 20346  004BC4  CFE8 FF61          	movff	wreg,3937	;# 
 20347  004BC8                     i32Ll463:
 20348                           	opt stack 17
 20349                           
 20350                           ;j60_driver.c: 555: ETH_EdataWrite(MAADR6);
 20351  004BC8  010E               	movlb	14	; () banked
 20352  004BCA  5181               	movf	129,w,b	;volatile
 20353  004BCC                     i33L__ptext87:
 20354                           	opt stack 0
 20355  004BCC                     i33L_ETH_EdataWrite:
 20356                           	opt stack 0
 20357  004BCC                     i33Ll7568:
 20358                           	opt stack 17
 20359  004BCC  CFE8 FF61          	movff	wreg,3937	;# 
 20360  004BD0                     i33Ll463:
 20361                           	opt stack 17
 20362                           
 20363                           ;j60_driver.c: 556: ETH_EdataWrite(((char *)&type)[1]);
 20364  004BD0  501A               	movf	ETH_WriteStart@type+1,w,c
 20365  004BD2                     i34L__ptext87:
 20366                           	opt stack 0
 20367  004BD2                     i34L_ETH_EdataWrite:
 20368                           	opt stack 0
 20369  004BD2                     i34Ll7568:
 20370                           	opt stack 17
 20371  004BD2  CFE8 FF61          	movff	wreg,3937	;# 
 20372  004BD6                     i34Ll463:
 20373                           	opt stack 17
 20374                           
 20375                           ;j60_driver.c: 557: ETH_EdataWrite(((char *)&type)[0]);
 20376  004BD6  5019               	movf	ETH_WriteStart@type,w,c
 20377  004BD8                     i35L__ptext87:
 20378                           	opt stack 0
 20379  004BD8                     i35L_ETH_EdataWrite:
 20380                           	opt stack 0
 20381  004BD8                     i35Ll7568:
 20382                           	opt stack 17
 20383  004BD8  CFE8 FF61          	movff	wreg,3937	;# 
 20384  004BDC                     i35Ll463:
 20385                           	opt stack 17
 20386                           
 20387                           ;j60_driver.c: 559: ethData.bufferBusy = 1;
 20388  004BDC  0101               	movlb	1	; () banked
 20389  004BDE  8BBD               	bsf	_ethData& (0+255),5,b	;volatile
 20390                           
 20391                           ; BSR set to: 1
 20392                           
 20393                           ; BSR set to: 1
 20394                           ;j60_driver.c: 560: return SUCCESS;
 20395  004BE0  0C01               	retlw	1	;funcret
 20396  004BE2                     __end_of_ETH_WriteStart:
 20397                           	opt stack 0
 20398  004BE2                     PL451:
 20399                           	opt stack 17
 20400  004BE2  6E1B               	movwf	??_ETH_WriteStart& (0+255),c
 20401  004BE4  0E00               	movlw	0
 20402  004BE6  2018               	addwfc	ETH_WriteStart@dest_mac+1,w,c
 20403  004BE8  6E1C               	movwf	(??_ETH_WriteStart+1)& (0+255),c
 20404  004BEA  C01B  FFF6         	movff	??_ETH_WriteStart,tblptrl
 20405  004BEE  C01C  FFF7         	movff	??_ETH_WriteStart+1,tblptrh
 20406  004BF2  0E00               	movlw	low (__smallconst shr (0+16))
 20407  004BF4  6EF8               	movwf	tblptru,c
 20408  004BF6  0E0F               	movlw	(high __ramtop+-1)
 20409  004BF8  0012               	return	
 20410  004BFA                     __end_ofPL451:
 20411                           	opt stack 0
 20412  004BFA                     PL671:
 20413                           	opt stack 17
 20414  004BFA  0E1A               	movlw	26
 20415  004BFC  010E               	movlb	14	; () banked
 20416  004BFE  6FE5               	movwf	229,b	;volatile
 20417  004C00  0E12               	movlw	18
 20418  004C02  6FE4               	movwf	228,b	;volatile
 20419  004C04  0C12               	retlw	18
 20420  004C06                     __end_ofPL671:
 20421                           	opt stack 0
 20422  004C06                     PL715:
 20423                           	opt stack 17
 20424  004C06  0E1A               	movlw	26
 20425  004C08  6FE3               	movwf	227,b	;volatile
 20426  004C0A  0E12               	movlw	18
 20427  004C0C  6FE2               	movwf	226,b	;volatile
 20428  004C0E  0C12               	retlw	18
 20429  004C10                     __end_ofPL715:
 20430                           	opt stack 0
 20431                           tosu	equ	0xFFF
 20432                           tosh	equ	0xFFE
 20433                           tosl	equ	0xFFD
 20434                           pclath	equ	0xFFA
 20435                           tblptru	equ	0xFF8
 20436                           tblptrh	equ	0xFF7
 20437                           tblptrl	equ	0xFF6
 20438                           tablat	equ	0xFF5
 20439                           prodh	equ	0xFF4
 20440                           prodl	equ	0xFF3
 20441                           intcon	equ	0xFF2
 20442                           indf0	equ	0xFEF
 20443                           postinc0	equ	0xFEE
 20444                           fsr0h	equ	0xFEA
 20445                           fsr0l	equ	0xFE9
 20446                           wreg	equ	0xFE8
 20447                           indf1	equ	0xFE7
 20448                           postinc1	equ	0xFE6
 20449                           postdec1	equ	0xFE5
 20450                           plusw1	equ	0xFE3
 20451                           fsr1h	equ	0xFE2
 20452                           fsr1l	equ	0xFE1
 20453                           indf2	equ	0xFDF
 20454                           postinc2	equ	0xFDE
 20455                           postdec2	equ	0xFDD
 20456                           plusw2	equ	0xFDB
 20457                           fsr2h	equ	0xFDA
 20458                           fsr2l	equ	0xFD9
 20459                           status	equ	0xFD8
 20460                           
 20461 ;; *************** function _ETH_ResetByteCount *****************
 20462 ;; Defined at:
 20463 ;;		line 833 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 20464 ;; Parameters:    Size  Location     Type
 20465 ;;		None
 20466 ;; Auto vars:     Size  Location     Type
 20467 ;;		None
 20468 ;; Return value:  Size  Location     Type
 20469 ;;                  1    wreg      void 
 20470 ;; Registers used:
 20471 ;;		None
 20472 ;; Tracked objects:
 20473 ;;		On entry : 1/0
 20474 ;;		On exit  : 1/0
 20475 ;;		Unchanged: 1/0
 20476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20481 ;;Total ram usage:        0 bytes
 20482 ;; Hardware stack levels used:    1
 20483 ;; Hardware stack levels required when called:    8
 20484 ;; This function calls:
 20485 ;;		Nothing
 20486 ;; This function is called by:
 20487 ;;		_ETH_WriteStart
 20488 ;;		_UDP_Start
 20489 ;; This function uses a non-reentrant model
 20490 ;;
 20491                           
 20492                           	psect	text73
 20493  0064A0                     __ptext73:
 20494                           	opt stack 0
 20495  0064A0                     _ETH_ResetByteCount:
 20496                           	opt stack 17
 20497                           
 20498                           ;j60_driver.c: 835: ethData.saveWRPT = EWRPT;
 20499                           
 20500                           ; BSR set to: 1
 20501                           ;incstack = 0
 20502  0064A0  CEE2 F1C2          	movff	3810,_ethData+5	;volatile
 20503  0064A4  CEE3 F1C3          	movff	3811,_ethData+6	;volatile
 20504  0064A8  0012               	return		;funcret
 20505  0064AA                     __end_of_ETH_ResetByteCount:
 20506                           	opt stack 0
 20507                           tosu	equ	0xFFF
 20508                           tosh	equ	0xFFE
 20509                           tosl	equ	0xFFD
 20510                           pclath	equ	0xFFA
 20511                           tblptru	equ	0xFF8
 20512                           tblptrh	equ	0xFF7
 20513                           tblptrl	equ	0xFF6
 20514                           tablat	equ	0xFF5
 20515                           prodh	equ	0xFF4
 20516                           prodl	equ	0xFF3
 20517                           intcon	equ	0xFF2
 20518                           indf0	equ	0xFEF
 20519                           postinc0	equ	0xFEE
 20520                           fsr0h	equ	0xFEA
 20521                           fsr0l	equ	0xFE9
 20522                           wreg	equ	0xFE8
 20523                           indf1	equ	0xFE7
 20524                           postinc1	equ	0xFE6
 20525                           postdec1	equ	0xFE5
 20526                           plusw1	equ	0xFE3
 20527                           fsr1h	equ	0xFE2
 20528                           fsr1l	equ	0xFE1
 20529                           indf2	equ	0xFDF
 20530                           postinc2	equ	0xFDE
 20531                           postdec2	equ	0xFDD
 20532                           plusw2	equ	0xFDB
 20533                           fsr2h	equ	0xFDA
 20534                           fsr2l	equ	0xFD9
 20535                           status	equ	0xFD8
 20536                           
 20537 ;; *************** function _ETH_WriteBlock *****************
 20538 ;; Defined at:
 20539 ;;		line 509 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 20540 ;; Parameters:    Size  Location     Type
 20541 ;;  buffer          2   22[COMRAM] PTR void 
 20542 ;;		 -> ?_sprintf(2), ?_printf(2), main@str(32), STR_8(13), 
 20543 ;;		 -> STR_7(17), TCP_Server@txdataPort7(20), STR_6(7), STR_5(10), 
 20544 ;;		 -> TCP_Snd@txHeader(20), Network_Read@debug_str(80), dhcpName(21), DHCP_Request@ethMAC(6), 
 20545 ;;		 -> ARPV4_Request@header(28), ARPV4_Packet@header(28), STR_1(15), NULL(0), 
 20546 ;;  length          2   24[COMRAM] unsigned int 
 20547 ;; Auto vars:     Size  Location     Type
 20548 ;;  p               2   26[COMRAM] PTR unsigned char 
 20549 ;;		 -> ?_sprintf(2), ?_printf(2), main@str(32), STR_8(13), 
 20550 ;;		 -> STR_7(17), TCP_Server@txdataPort7(20), STR_6(7), STR_5(10), 
 20551 ;;		 -> TCP_Snd@txHeader(20), Network_Read@debug_str(80), dhcpName(21), DHCP_Request@ethMAC(6), 
 20552 ;;		 -> ARPV4_Request@header(28), ARPV4_Packet@header(28), STR_1(15), NULL(0), 
 20553 ;; Return value:  Size  Location     Type
 20554 ;;                  2   22[COMRAM] unsigned int 
 20555 ;; Registers used:
 20556 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20557 ;; Tracked objects:
 20558 ;;		On entry : 0/0
 20559 ;;		On exit  : 0/0
 20560 ;;		Unchanged: 0/0
 20561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20562 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20563 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20565 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20566 ;;Total ram usage:        6 bytes
 20567 ;; Hardware stack levels used:    1
 20568 ;; Hardware stack levels required when called:    9
 20569 ;; This function calls:
 20570 ;;		_ETH_EdataWrite
 20571 ;; This function is called by:
 20572 ;;		_ARPV4_Packet
 20573 ;;		_ARPV4_Request
 20574 ;;		_DHCP_Request
 20575 ;;		_TCP_Snd
 20576 ;; This function uses a non-reentrant model
 20577 ;;
 20578                           
 20579                           	psect	text74
 20580  005D0A                     __ptext74:
 20581                           	opt stack 0
 20582  005D0A                     _ETH_WriteBlock:
 20583                           	opt stack 16
 20584                           
 20585                           ;j60_driver.c: 511: char *p = buffer;
 20586                           
 20587                           ;incstack = 0
 20588  005D0A  C017  F01B         	movff	ETH_WriteBlock@buffer,ETH_WriteBlock@p
 20589  005D0E  C018  F01C         	movff	ETH_WriteBlock@buffer+1,ETH_WriteBlock@p+1
 20590                           
 20591                           ;j60_driver.c: 512: while(length-- && (EWRPT < ((8192)-1)))
 20592  005D12  D013               	goto	l7584
 20593  005D14                     l7580:
 20594                           
 20595                           ; BSR set to: 14
 20596                           ;j60_driver.c: 513: {
 20597                           ;j60_driver.c: 514: ETH_EdataWrite(*p++);
 20598  005D14  C01B  FFF6         	movff	ETH_WriteBlock@p,tblptrl
 20599  005D18  C01C  FFF7         	movff	ETH_WriteBlock@p+1,tblptrh
 20600  005D1C  0E00               	movlw	low (__smallconst shr (0+16))
 20601  005D1E  6EF8               	movwf	tblptru,c
 20602  005D20  0E0F               	movlw	(high __ramtop+-1)
 20603  005D22  64F7               	cpfsgt	tblptrh,c
 20604  005D24  D003               	bra	u10537
 20605  005D26  0008               	tblrd		*
 20606  005D28  50F5               	movf	tablat,w,c
 20607  005D2A  D003               	bra	u10530
 20608  005D2C                     u10537:
 20609  005D2C  EC73  F011         	call	PL389	;call to abstracted procedure
 20610  005D30  50EF               	movf	indf0,w,c
 20611  005D32                     u10530:
 20612  005D32                     i36L__ptext87:
 20613                           	opt stack 0
 20614  005D32                     i36L_ETH_EdataWrite:
 20615                           	opt stack 0
 20616  005D32                     i36Ll7568:
 20617                           	opt stack 17
 20618  005D32  CFE8 FF61          	movff	wreg,3937	;# 
 20619  005D36                     i36Ll463:
 20620                           	opt stack 16
 20621  005D36  4A1B               	infsnz	ETH_WriteBlock@p,f,c
 20622  005D38  2A1C               	incf	ETH_WriteBlock@p+1,f,c
 20623  005D3A                     l7584:
 20624  005D3A  0619               	decf	ETH_WriteBlock@length,f,c
 20625  005D3C  A0D8               	btfss	status,0,c
 20626  005D3E  061A               	decf	ETH_WriteBlock@length+1,f,c
 20627  005D40  2819               	incf	ETH_WriteBlock@length,w,c
 20628  005D42  E103               	bnz	u10540
 20629  005D44  281A               	incf	ETH_WriteBlock@length+1,w,c
 20630  005D46  B4D8               	btfsc	status,2,c
 20631  005D48  0012               	return	
 20632  005D4A                     u10540:
 20633  005D4A  010E               	movlb	14	; () banked
 20634  005D4C  29E2               	incf	226,w,b	;volatile
 20635  005D4E  0E1F               	movlw	31
 20636  005D50  59E3               	subwfb	227,w,b	;volatile
 20637  005D52  E3E0               	bnc	l7580
 20638  005D54  0012               	return		;funcret
 20639  005D56                     __end_of_ETH_WriteBlock:
 20640                           	opt stack 0
 20641                           tosu	equ	0xFFF
 20642                           tosh	equ	0xFFE
 20643                           tosl	equ	0xFFD
 20644                           pclath	equ	0xFFA
 20645                           tblptru	equ	0xFF8
 20646                           tblptrh	equ	0xFF7
 20647                           tblptrl	equ	0xFF6
 20648                           tablat	equ	0xFF5
 20649                           prodh	equ	0xFF4
 20650                           prodl	equ	0xFF3
 20651                           intcon	equ	0xFF2
 20652                           indf0	equ	0xFEF
 20653                           postinc0	equ	0xFEE
 20654                           fsr0h	equ	0xFEA
 20655                           fsr0l	equ	0xFE9
 20656                           wreg	equ	0xFE8
 20657                           indf1	equ	0xFE7
 20658                           postinc1	equ	0xFE6
 20659                           postdec1	equ	0xFE5
 20660                           plusw1	equ	0xFE3
 20661                           fsr1h	equ	0xFE2
 20662                           fsr1l	equ	0xFE1
 20663                           indf2	equ	0xFDF
 20664                           postinc2	equ	0xFDE
 20665                           postdec2	equ	0xFDD
 20666                           plusw2	equ	0xFDB
 20667                           fsr2h	equ	0xFDA
 20668                           fsr2l	equ	0xFD9
 20669                           status	equ	0xFD8
 20670                           
 20671 ;; *************** function _ETH_GetMAC *****************
 20672 ;; Defined at:
 20673 ;;		line 802 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 20674 ;; Parameters:    Size  Location     Type
 20675 ;;  mac             1   22[COMRAM] PTR unsigned char 
 20676 ;;		 -> DHCP_Handler@ethMAC(6), DHCP_Request@ethMAC(6), ARPV4_Request@header(28), header.sha(6), 
 20677 ;;		 -> ARPV4_Packet@header(28), 
 20678 ;; Auto vars:     Size  Location     Type
 20679 ;;		None
 20680 ;; Return value:  Size  Location     Type
 20681 ;;                  1    wreg      void 
 20682 ;; Registers used:
 20683 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20684 ;; Tracked objects:
 20685 ;;		On entry : 0/0
 20686 ;;		On exit  : 0/0
 20687 ;;		Unchanged: 0/0
 20688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20689 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20692 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20693 ;;Total ram usage:        1 bytes
 20694 ;; Hardware stack levels used:    1
 20695 ;; Hardware stack levels required when called:    8
 20696 ;; This function calls:
 20697 ;;		Nothing
 20698 ;; This function is called by:
 20699 ;;		_ARPV4_Packet
 20700 ;;		_ARPV4_Request
 20701 ;;		_DHCP_Request
 20702 ;;		_DHCP_Handler
 20703 ;; This function uses a non-reentrant model
 20704 ;;
 20705                           
 20706                           	psect	text75
 20707  005FEE                     __ptext75:
 20708                           	opt stack 0
 20709  005FEE                     _ETH_GetMAC:
 20710                           	opt stack 17
 20711                           
 20712                           ;j60_driver.c: 804: *mac++ = MAADR1;
 20713                           
 20714                           ;incstack = 0
 20715  005FEE  5017               	movf	ETH_GetMAC@mac,w,c
 20716  005FF0  6ED9               	movwf	fsr2l,c
 20717  005FF2  6ADA               	clrf	fsr2h,c
 20718  005FF4  CE84 FFDF          	movff	3716,indf2	;volatile
 20719                           
 20720                           ;j60_driver.c: 805: *mac++ = MAADR2;
 20721  005FF8  D80F               	call	PL605	;call to abstracted procedure
 20722  005FFA  CE85 FFDF          	movff	3717,indf2	;volatile
 20723                           
 20724                           ;j60_driver.c: 806: *mac++ = MAADR3;
 20725  005FFE  D80C               	call	PL605	;call to abstracted procedure
 20726  006000  CE82 FFDF          	movff	3714,indf2	;volatile
 20727                           
 20728                           ;j60_driver.c: 807: *mac++ = MAADR4;
 20729  006004  D809               	call	PL605	;call to abstracted procedure
 20730  006006  CE83 FFDF          	movff	3715,indf2	;volatile
 20731                           
 20732                           ;j60_driver.c: 808: *mac++ = MAADR5;
 20733  00600A  D806               	call	PL605	;call to abstracted procedure
 20734  00600C  CE80 FFDF          	movff	3712,indf2	;volatile
 20735                           
 20736                           ;j60_driver.c: 809: *mac = MAADR6;
 20737  006010  D803               	call	PL605	;call to abstracted procedure
 20738  006012  CE81 FFDF          	movff	3713,indf2	;volatile
 20739  006016  0012               	return		;funcret
 20740  006018                     __end_of_ETH_GetMAC:
 20741                           	opt stack 0
 20742  006018                     PL605:
 20743                           	opt stack 17
 20744  006018  2A17               	incf	ETH_GetMAC@mac,f,c
 20745  00601A  5017               	movf	ETH_GetMAC@mac,w,c
 20746  00601C  6ED9               	movwf	fsr2l,c
 20747  00601E  6ADA               	clrf	fsr2h,c
 20748  006020  0012               	return	
 20749  006022                     __end_ofPL605:
 20750                           	opt stack 0
 20751                           tosu	equ	0xFFF
 20752                           tosh	equ	0xFFE
 20753                           tosl	equ	0xFFD
 20754                           pclath	equ	0xFFA
 20755                           tblptru	equ	0xFF8
 20756                           tblptrh	equ	0xFF7
 20757                           tblptrl	equ	0xFF6
 20758                           tablat	equ	0xFF5
 20759                           prodh	equ	0xFF4
 20760                           prodl	equ	0xFF3
 20761                           intcon	equ	0xFF2
 20762                           indf0	equ	0xFEF
 20763                           postinc0	equ	0xFEE
 20764                           fsr0h	equ	0xFEA
 20765                           fsr0l	equ	0xFE9
 20766                           wreg	equ	0xFE8
 20767                           indf1	equ	0xFE7
 20768                           postinc1	equ	0xFE6
 20769                           postdec1	equ	0xFE5
 20770                           plusw1	equ	0xFE3
 20771                           fsr1h	equ	0xFE2
 20772                           fsr1l	equ	0xFE1
 20773                           indf2	equ	0xFDF
 20774                           postinc2	equ	0xFDE
 20775                           postdec2	equ	0xFDD
 20776                           plusw2	equ	0xFDB
 20777                           fsr2h	equ	0xFDA
 20778                           fsr2l	equ	0xFD9
 20779                           status	equ	0xFD8
 20780                           
 20781 ;; *************** function _ARPV4_Lookup *****************
 20782 ;; Defined at:
 20783 ;;		line 234 in file "../../TCPIP Library/source/arpv4.c"
 20784 ;; Parameters:    Size  Location     Type
 20785 ;;  ip_address      4   22[COMRAM] unsigned long 
 20786 ;; Auto vars:     Size  Location     Type
 20787 ;;  entry_pointe    2   30[COMRAM] PTR struct .
 20788 ;;		 -> arpMap(104), 
 20789 ;;  x               1   32[COMRAM] unsigned char 
 20790 ;; Return value:  Size  Location     Type
 20791 ;;                  2   22[COMRAM] PTR struct .
 20792 ;; Registers used:
 20793 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20794 ;; Tracked objects:
 20795 ;;		On entry : F/1
 20796 ;;		On exit  : F/1
 20797 ;;		Unchanged: F/0
 20798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20799 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20800 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20801 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20802 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20803 ;;Total ram usage:       11 bytes
 20804 ;; Hardware stack levels used:    1
 20805 ;; Hardware stack levels required when called:    8
 20806 ;; This function calls:
 20807 ;;		Nothing
 20808 ;; This function is called by:
 20809 ;;		_IPv4_Start
 20810 ;; This function uses a non-reentrant model
 20811 ;;
 20812                           
 20813                           	psect	text76
 20814  005C24                     __ptext76:
 20815                           	opt stack 0
 20816  005C24                     _ARPV4_Lookup:
 20817                           	opt stack 18
 20818                           
 20819                           ; BSR set to: 1
 20820                           ;arpv4.c: 236: arpMap_t *entry_pointer = arpMap;
 20821                           
 20822                           ;incstack = 0
 20823  005C24  0E00               	movlw	low _arpMap
 20824  005C26  6E1F               	movwf	ARPV4_Lookup@entry_pointer,c
 20825  005C28  0E03               	movlw	high _arpMap
 20826  005C2A  6E20               	movwf	ARPV4_Lookup@entry_pointer+1,c
 20827                           
 20828                           ; BSR set to: 1
 20829                           ;arpv4.c: 237: uint8_t x;
 20830                           ;arpv4.c: 239: for(x = 0; x < 8; x++)
 20831  005C2C  6A21               	clrf	ARPV4_Lookup@x,c
 20832  005C2E                     l7822:
 20833                           
 20834                           ; BSR set to: 1
 20835                           ;arpv4.c: 240: {
 20836                           ;arpv4.c: 241: if(entry_pointer->ipAddress == ip_address)
 20837  005C2E  EE20 F006          	lfsr	2,6
 20838  005C32  501F               	movf	ARPV4_Lookup@entry_pointer,w,c
 20839  005C34  26D9               	addwf	fsr2l,f,c
 20840  005C36  5020               	movf	ARPV4_Lookup@entry_pointer+1,w,c
 20841  005C38  22DA               	addwfc	fsr2h,f,c
 20842  005C3A  5017               	movf	ARPV4_Lookup@ip_address,w,c
 20843  005C3C  18DE               	xorwf	postinc2,w,c
 20844  005C3E  E10E               	bnz	l7828
 20845  005C40  5018               	movf	ARPV4_Lookup@ip_address+1,w,c
 20846  005C42  18DE               	xorwf	postinc2,w,c
 20847  005C44  E10B               	bnz	l7828
 20848  005C46  5019               	movf	ARPV4_Lookup@ip_address+2,w,c
 20849  005C48  18DE               	xorwf	postinc2,w,c
 20850  005C4A  E108               	bnz	l7828
 20851  005C4C  501A               	movf	ARPV4_Lookup@ip_address+3,w,c
 20852  005C4E  18DE               	xorwf	postinc2,w,c
 20853  005C50  E105               	bnz	l7828
 20854                           
 20855                           ; BSR set to: 1
 20856                           ;arpv4.c: 242: return &entry_pointer->macAddress;
 20857  005C52  C01F  F017         	movff	ARPV4_Lookup@entry_pointer,?_ARPV4_Lookup
 20858  005C56  C020  F018         	movff	ARPV4_Lookup@entry_pointer+1,?_ARPV4_Lookup+1
 20859  005C5A  0012               	return	
 20860  005C5C                     l7828:
 20861                           
 20862                           ; BSR set to: 1
 20863                           ;arpv4.c: 243: entry_pointer ++;
 20864  005C5C  0E0D               	movlw	13
 20865  005C5E  261F               	addwf	ARPV4_Lookup@entry_pointer,f,c
 20866  005C60  0E00               	movlw	0
 20867  005C62  2220               	addwfc	ARPV4_Lookup@entry_pointer+1,f,c
 20868                           
 20869                           ; BSR set to: 1
 20870  005C64  2A21               	incf	ARPV4_Lookup@x,f,c
 20871                           
 20872                           ; BSR set to: 1
 20873  005C66  0E07               	movlw	7
 20874  005C68  6421               	cpfsgt	ARPV4_Lookup@x,c
 20875  005C6A  D7E1               	goto	l7822
 20876                           
 20877                           ; BSR set to: 1
 20878                           ;arpv4.c: 244: }
 20879                           ;arpv4.c: 245: return 0;
 20880  005C6C  6A17               	clrf	?_ARPV4_Lookup,c
 20881  005C6E  6A18               	clrf	?_ARPV4_Lookup+1,c
 20882                           
 20883                           ; BSR set to: 1
 20884  005C70  0012               	return		;funcret
 20885  005C72                     __end_of_ARPV4_Lookup:
 20886                           	opt stack 0
 20887                           tosu	equ	0xFFF
 20888                           tosh	equ	0xFFE
 20889                           tosl	equ	0xFFD
 20890                           pclath	equ	0xFFA
 20891                           tblptru	equ	0xFF8
 20892                           tblptrh	equ	0xFF7
 20893                           tblptrl	equ	0xFF6
 20894                           tablat	equ	0xFF5
 20895                           prodh	equ	0xFF4
 20896                           prodl	equ	0xFF3
 20897                           intcon	equ	0xFF2
 20898                           indf0	equ	0xFEF
 20899                           postinc0	equ	0xFEE
 20900                           fsr0h	equ	0xFEA
 20901                           fsr0l	equ	0xFE9
 20902                           wreg	equ	0xFE8
 20903                           indf1	equ	0xFE7
 20904                           postinc1	equ	0xFE6
 20905                           postdec1	equ	0xFE5
 20906                           plusw1	equ	0xFE3
 20907                           fsr1h	equ	0xFE2
 20908                           fsr1l	equ	0xFE1
 20909                           indf2	equ	0xFDF
 20910                           postinc2	equ	0xFDE
 20911                           postdec2	equ	0xFDD
 20912                           plusw2	equ	0xFDB
 20913                           fsr2h	equ	0xFDA
 20914                           fsr2l	equ	0xFD9
 20915                           status	equ	0xFD8
 20916                           
 20917 ;; *************** function _UDP_Send *****************
 20918 ;; Defined at:
 20919 ;;		line 99 in file "../../TCPIP Library/source/udpv4.c"
 20920 ;; Parameters:    Size  Location     Type
 20921 ;;		None
 20922 ;; Auto vars:     Size  Location     Type
 20923 ;;  udpLength       2   27[BANK0 ] unsigned int 
 20924 ;;  cksm            2   25[BANK0 ] unsigned int 
 20925 ;;  ret             1    0        enum E367
 20926 ;; Return value:  Size  Location     Type
 20927 ;;                  1    wreg      enum E449
 20928 ;; Registers used:
 20929 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20930 ;; Tracked objects:
 20931 ;;		On entry : 0/0
 20932 ;;		On exit  : F/0
 20933 ;;		Unchanged: 0/0
 20934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20936 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20937 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20938 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20939 ;;Total ram usage:        9 bytes
 20940 ;; Hardware stack levels used:    1
 20941 ;; Hardware stack levels required when called:   12
 20942 ;; This function calls:
 20943 ;;		_ETH_GetByteCount
 20944 ;;		_ETH_Insert
 20945 ;;		_ETH_TxComputeChecksum
 20946 ;;		_IPV4_Send
 20947 ;; This function is called by:
 20948 ;;		_DHCP_Request
 20949 ;; This function uses a non-reentrant model
 20950 ;;
 20951                           
 20952                           	psect	text77
 20953  0055BC                     __ptext77:
 20954                           	opt stack 0
 20955  0055BC                     _UDP_Send:
 20956                           	opt stack 12
 20957                           
 20958                           ;udpv4.c: 105: udpLength = ETH_GetByteCount();
 20959                           
 20960                           ; BSR set to: 1
 20961                           ;incstack = 0
 20962  0055BC  ECB5  F031         	call	_ETH_GetByteCount	;wreg free
 20963  0055C0  C017  F07B         	movff	?_ETH_GetByteCount,UDP_Send@udpLength
 20964  0055C4  C018  F07C         	movff	?_ETH_GetByteCount+1,UDP_Send@udpLength+1
 20965                           
 20966                           ; BSR set to: 14
 20967                           ;udpv4.c: 106: udpLength = ((((uint16_t)udpLength & (uint16_t)0xFF00) >> 8) | (((uint16_
      +                          t)udpLength & (uint16_t)0x00FF) << 8));
 20968  0055C8  D831               	call	PL531	;call to abstracted procedure
 20969                           
 20970                           ; BSR set to: 0
 20971                           ;udpv4.c: 107: ETH_Insert((char *)&udpLength, 2, sizeof(ethernetFrame_t) + sizeof(ipv4He
      +                          ader_t) + (size_t)(((char*)&((udpHeader_t *)1)->length)-1));
 20972  0055CA  0E7B               	movlw	low UDP_Send@udpLength
 20973  0055CC  EC8C  F02C         	call	PL507	;call to abstracted procedure
 20974  0055D0  0E26               	movlw	38
 20975  0055D2  6E1A               	movwf	ETH_Insert@offset,c
 20976  0055D4  ECA1  F02F         	call	_ETH_Insert	;wreg free
 20977                           
 20978                           ;udpv4.c: 108: udpLength = ((((uint16_t)udpLength & (uint16_t)0xFF00) >> 8) | (((uint16_
      +                          t)udpLength & (uint16_t)0x00FF) << 8));
 20979  0055D8  D829               	call	PL531	;call to abstracted procedure
 20980                           
 20981                           ; BSR set to: 0
 20982                           ;udpv4.c: 111: cksm = udpLength + UDP;
 20983  0055DA  0E11               	movlw	17
 20984  0055DC  257B               	addwf	UDP_Send@udpLength& (0+255),w,b
 20985  0055DE  6F79               	movwf	UDP_Send@cksm& (0+255),b
 20986  0055E0  0E00               	movlw	0
 20987  0055E2  217C               	addwfc	(UDP_Send@udpLength+1)& (0+255),w,b
 20988  0055E4  6F7A               	movwf	(UDP_Send@cksm+1)& (0+255),b
 20989                           
 20990                           ; BSR set to: 0
 20991                           ;udpv4.c: 112: cksm = ETH_TxComputeChecksum(sizeof(ethernetFrame_t) + sizeof(ipv4Header_
      +                          t) - 8, udpLength + 8, cksm);
 20992  0055E6  EC34  F016         	call	PL717	;call to abstracted procedure
 20993  0055EA  257B               	addwf	UDP_Send@udpLength& (0+255),w,b
 20994  0055EC  6E27               	movwf	ETH_TxComputeChecksum@len,c
 20995  0055EE  0E00               	movlw	0
 20996  0055F0  217C               	addwfc	(UDP_Send@udpLength+1)& (0+255),w,b
 20997  0055F2  6E28               	movwf	ETH_TxComputeChecksum@len+1,c
 20998  0055F4  C079  F029         	movff	UDP_Send@cksm,ETH_TxComputeChecksum@seed
 20999  0055F8  C07A  F02A         	movff	UDP_Send@cksm+1,ETH_TxComputeChecksum@seed+1
 21000  0055FC  EC97  F02A         	call	_ETH_TxComputeChecksum	;wreg free
 21001  005600  C025  F079         	movff	?_ETH_TxComputeChecksum,UDP_Send@cksm
 21002  005604  C026  F07A         	movff	?_ETH_TxComputeChecksum+1,UDP_Send@cksm+1
 21003                           
 21004                           ; BSR set to: 0
 21005                           ;udpv4.c: 115: if (cksm == 0){
 21006  005608  5179               	movf	UDP_Send@cksm& (0+255),w,b
 21007  00560A  117A               	iorwf	(UDP_Send@cksm+1)& (0+255),w,b
 21008  00560C  E102               	bnz	l8106
 21009                           
 21010                           ; BSR set to: 0
 21011                           ;udpv4.c: 116: cksm = 0xffff;
 21012  00560E  6979               	setf	UDP_Send@cksm& (0+255),b
 21013  005610  697A               	setf	(UDP_Send@cksm+1)& (0+255),b
 21014  005612                     l8106:
 21015                           
 21016                           ; BSR set to: 0
 21017                           ;udpv4.c: 117: }
 21018                           ;udpv4.c: 119: ETH_Insert((char *)&cksm, 2, sizeof(ethernetFrame_t) + sizeof(ipv4Header_
      +                          t) + (size_t)(((char*)&((udpHeader_t *)1)->checksum)-1));
 21019  005612  0E79               	movlw	low UDP_Send@cksm
 21020  005614  EC8C  F02C         	call	PL507	;call to abstracted procedure
 21021  005618  0E28               	movlw	40
 21022  00561A  6E1A               	movwf	ETH_Insert@offset,c
 21023  00561C  ECA1  F02F         	call	_ETH_Insert	;wreg free
 21024  005620  C07B  F031         	movff	UDP_Send@udpLength,IPV4_Send@payloadLength
 21025  005624  C07C  F032         	movff	UDP_Send@udpLength+1,IPV4_Send@payloadLength+1
 21026  005628  EF59  F02C         	goto	_IPV4_Send	;wreg free
 21027  00562C                     __end_of_UDP_Send:
 21028                           	opt stack 0
 21029  00562C                     PL531:
 21030                           	opt stack 12
 21031  00562C  0100               	movlb	0	; () banked
 21032  00562E  517B               	movf	UDP_Send@udpLength& (0+255),w,b
 21033  005630  6F75               	movwf	(??_UDP_Send+1)& (0+255),b
 21034  005632  6B74               	clrf	??_UDP_Send& (0+255),b
 21035  005634  517C               	movf	(UDP_Send@udpLength+1)& (0+255),w,b
 21036  005636  6F76               	movwf	(??_UDP_Send+2)& (0+255),b
 21037  005638  6B77               	clrf	(??_UDP_Send+3)& (0+255),b
 21038  00563A  5174               	movf	??_UDP_Send& (0+255),w,b
 21039  00563C  1176               	iorwf	(??_UDP_Send+2)& (0+255),w,b
 21040  00563E  6F7B               	movwf	UDP_Send@udpLength& (0+255),b
 21041  005640  5175               	movf	(??_UDP_Send+1)& (0+255),w,b
 21042  005642  1177               	iorwf	(??_UDP_Send+3)& (0+255),w,b
 21043  005644  6F7C               	movwf	(UDP_Send@udpLength+1)& (0+255),b
 21044  005646  0012               	return	
 21045  005648                     __end_ofPL531:
 21046                           	opt stack 0
 21047                           tosu	equ	0xFFF
 21048                           tosh	equ	0xFFE
 21049                           tosl	equ	0xFFD
 21050                           pclath	equ	0xFFA
 21051                           tblptru	equ	0xFF8
 21052                           tblptrh	equ	0xFF7
 21053                           tblptrl	equ	0xFF6
 21054                           tablat	equ	0xFF5
 21055                           prodh	equ	0xFF4
 21056                           prodl	equ	0xFF3
 21057                           intcon	equ	0xFF2
 21058                           indf0	equ	0xFEF
 21059                           postinc0	equ	0xFEE
 21060                           fsr0h	equ	0xFEA
 21061                           fsr0l	equ	0xFE9
 21062                           wreg	equ	0xFE8
 21063                           indf1	equ	0xFE7
 21064                           postinc1	equ	0xFE6
 21065                           postdec1	equ	0xFE5
 21066                           plusw1	equ	0xFE3
 21067                           fsr1h	equ	0xFE2
 21068                           fsr1l	equ	0xFE1
 21069                           indf2	equ	0xFDF
 21070                           postinc2	equ	0xFDE
 21071                           postdec2	equ	0xFDD
 21072                           plusw2	equ	0xFDB
 21073                           fsr2h	equ	0xFDA
 21074                           fsr2l	equ	0xFD9
 21075                           status	equ	0xFD8
 21076                           
 21077 ;; *************** function _IPV4_Send *****************
 21078 ;; Defined at:
 21079 ;;		line 267 in file "../../TCPIP Library/source/ipv4.c"
 21080 ;; Parameters:    Size  Location     Type
 21081 ;;  payloadLengt    2   48[COMRAM] unsigned int 
 21082 ;; Auto vars:     Size  Location     Type
 21083 ;;  totalLength     2   18[BANK0 ] unsigned int 
 21084 ;;  cksm            2   16[BANK0 ] unsigned int 
 21085 ;;  ret             1   15[BANK0 ] enum E6890
 21086 ;; Return value:  Size  Location     Type
 21087 ;;                  1    wreg      enum E366
 21088 ;; Registers used:
 21089 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21090 ;; Tracked objects:
 21091 ;;		On entry : 0/0
 21092 ;;		On exit  : F/0
 21093 ;;		Unchanged: 0/0
 21094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21095 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21096 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21097 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21098 ;;      Totals:         2       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21099 ;;Total ram usage:       11 bytes
 21100 ;; Hardware stack levels used:    1
 21101 ;; Hardware stack levels required when called:   11
 21102 ;; This function calls:
 21103 ;;		_ETH_Insert
 21104 ;;		_ETH_Send
 21105 ;;		_ETH_TxComputeChecksum
 21106 ;; This function is called by:
 21107 ;;		_ICMP_EchoReply
 21108 ;;		_TCP_Snd
 21109 ;;		_UDP_Send
 21110 ;; This function uses a non-reentrant model
 21111 ;;
 21112                           
 21113                           	psect	text78
 21114  0058B2                     __ptext78:
 21115                           	opt stack 0
 21116  0058B2                     _IPV4_Send:
 21117                           	opt stack 16
 21118                           
 21119                           ;ipv4.c: 269: uint16_t totalLength;
 21120                           ;ipv4.c: 270: uint16_t cksm;
 21121                           ;ipv4.c: 271: error_msg ret;
 21122                           ;ipv4.c: 273: totalLength = 20 + payloadLength;
 21123                           
 21124                           ; BSR set to: 0
 21125                           ;incstack = 0
 21126  0058B2  0E14               	movlw	20
 21127  0058B4  2431               	addwf	IPV4_Send@payloadLength,w,c
 21128  0058B6  0100               	movlb	0	; () banked
 21129  0058B8  6F72               	movwf	IPV4_Send@totalLength& (0+255),b
 21130  0058BA  0E00               	movlw	0
 21131  0058BC  2032               	addwfc	IPV4_Send@payloadLength+1,w,c
 21132  0058BE  6F73               	movwf	(IPV4_Send@totalLength+1)& (0+255),b
 21133                           
 21134                           ;ipv4.c: 274: totalLength = ((((uint16_t)totalLength & (uint16_t)0xFF00) >> 8) | (((uint
      +                          16_t)totalLength & (uint16_t)0x00FF) << 8));
 21135  0058C0  5172               	movf	IPV4_Send@totalLength& (0+255),w,b
 21136  0058C2  6F6C               	movwf	(??_IPV4_Send+1)& (0+255),b
 21137  0058C4  6B6B               	clrf	??_IPV4_Send& (0+255),b
 21138  0058C6  5173               	movf	(IPV4_Send@totalLength+1)& (0+255),w,b
 21139  0058C8  6F6D               	movwf	(??_IPV4_Send+2)& (0+255),b
 21140  0058CA  6B6E               	clrf	(??_IPV4_Send+3)& (0+255),b
 21141  0058CC  516B               	movf	??_IPV4_Send& (0+255),w,b
 21142  0058CE  116D               	iorwf	(??_IPV4_Send+2)& (0+255),w,b
 21143  0058D0  6F72               	movwf	IPV4_Send@totalLength& (0+255),b
 21144  0058D2  516C               	movf	(??_IPV4_Send+1)& (0+255),w,b
 21145  0058D4  116E               	iorwf	(??_IPV4_Send+3)& (0+255),w,b
 21146  0058D6  6F73               	movwf	(IPV4_Send@totalLength+1)& (0+255),b
 21147                           
 21148                           ; BSR set to: 0
 21149                           ;ipv4.c: 277: ETH_Insert((char *)&totalLength, 2, sizeof(ethernetFrame_t) + (size_t)(((c
      +                          har*)&((ipv4Header_t *)1)->length)-1));
 21150  0058D8  0E72               	movlw	low IPV4_Send@totalLength
 21151  0058DA  D81E               	call	PL507	;call to abstracted procedure
 21152  0058DC  0E10               	movlw	16
 21153  0058DE  6E1A               	movwf	ETH_Insert@offset,c
 21154  0058E0  ECA1  F02F         	call	_ETH_Insert	;wreg free
 21155                           
 21156                           ;ipv4.c: 279: cksm = ETH_TxComputeChecksum(sizeof(ethernetFrame_t),sizeof(ipv4Header_t),
      +                          0);
 21157  0058E4  6A26               	clrf	ETH_TxComputeChecksum@position+1,c
 21158  0058E6  0E0E               	movlw	14
 21159  0058E8  6E25               	movwf	ETH_TxComputeChecksum@position,c
 21160  0058EA  6A28               	clrf	ETH_TxComputeChecksum@len+1,c
 21161  0058EC  0E14               	movlw	20
 21162  0058EE  6E27               	movwf	ETH_TxComputeChecksum@len,c
 21163  0058F0  6A2A               	clrf	ETH_TxComputeChecksum@seed+1,c
 21164  0058F2  6A29               	clrf	ETH_TxComputeChecksum@seed,c
 21165  0058F4  EC97  F02A         	call	_ETH_TxComputeChecksum	;wreg free
 21166  0058F8  C025  F070         	movff	?_ETH_TxComputeChecksum,IPV4_Send@cksm
 21167  0058FC  C026  F071         	movff	?_ETH_TxComputeChecksum+1,IPV4_Send@cksm+1
 21168                           
 21169                           ; BSR set to: 0
 21170                           ;ipv4.c: 281: ETH_Insert((char *)&cksm, 2, sizeof(ethernetFrame_t) + (size_t)(((char*)&(
      +                          (ipv4Header_t *)1)->headerCksm)-1));
 21171  005900  0E70               	movlw	low IPV4_Send@cksm
 21172  005902  D80A               	call	PL507	;call to abstracted procedure
 21173  005904  0E18               	movlw	24
 21174  005906  6E1A               	movwf	ETH_Insert@offset,c
 21175  005908  ECA1  F02F         	call	_ETH_Insert	;wreg free
 21176                           
 21177                           ;ipv4.c: 282: ret = ETH_Send();
 21178  00590C  EC88  F030         	call	_ETH_Send	;wreg free
 21179  005910  0100               	movlb	0	; () banked
 21180  005912  6F6F               	movwf	IPV4_Send@ret& (0+255),b
 21181                           
 21182                           ; BSR set to: 0
 21183                           ;ipv4.c: 284: return ret;
 21184  005914  516F               	movf	IPV4_Send@ret& (0+255),w,b
 21185                           
 21186                           ; BSR set to: 0
 21187  005916  0012               	return		;funcret
 21188  005918                     __end_of_IPV4_Send:
 21189                           	opt stack 0
 21190  005918                     PL507:
 21191                           	opt stack 12
 21192  005918  6E17               	movwf	ETH_Insert@data,c
 21193  00591A  6A19               	clrf	ETH_Insert@len+1,c
 21194  00591C  0E02               	movlw	2
 21195  00591E  6E18               	movwf	ETH_Insert@len,c
 21196  005920  6A1B               	clrf	ETH_Insert@offset+1,c
 21197  005922  0C02               	retlw	2
 21198  005924                     __end_ofPL507:
 21199                           	opt stack 0
 21200                           tosu	equ	0xFFF
 21201                           tosh	equ	0xFFE
 21202                           tosl	equ	0xFFD
 21203                           pclath	equ	0xFFA
 21204                           tblptru	equ	0xFF8
 21205                           tblptrh	equ	0xFF7
 21206                           tblptrl	equ	0xFF6
 21207                           tablat	equ	0xFF5
 21208                           prodh	equ	0xFF4
 21209                           prodl	equ	0xFF3
 21210                           intcon	equ	0xFF2
 21211                           indf0	equ	0xFEF
 21212                           postinc0	equ	0xFEE
 21213                           fsr0h	equ	0xFEA
 21214                           fsr0l	equ	0xFE9
 21215                           wreg	equ	0xFE8
 21216                           indf1	equ	0xFE7
 21217                           postinc1	equ	0xFE6
 21218                           postdec1	equ	0xFE5
 21219                           plusw1	equ	0xFE3
 21220                           fsr1h	equ	0xFE2
 21221                           fsr1l	equ	0xFE1
 21222                           indf2	equ	0xFDF
 21223                           postinc2	equ	0xFDE
 21224                           postdec2	equ	0xFDD
 21225                           plusw2	equ	0xFDB
 21226                           fsr2h	equ	0xFDA
 21227                           fsr2l	equ	0xFD9
 21228                           status	equ	0xFD8
 21229                           
 21230 ;; *************** function _ETH_TxComputeChecksum *****************
 21231 ;; Defined at:
 21232 ;;		line 754 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 21233 ;; Parameters:    Size  Location     Type
 21234 ;;  position        2   36[COMRAM] unsigned int 
 21235 ;;  len             2   38[COMRAM] unsigned int 
 21236 ;;  seed            2   40[COMRAM] unsigned int 
 21237 ;; Auto vars:     Size  Location     Type
 21238 ;;  cksm            4   44[COMRAM] unsigned long 
 21239 ;;  rxptr           2   42[COMRAM] unsigned int 
 21240 ;; Return value:  Size  Location     Type
 21241 ;;                  2   36[COMRAM] unsigned int 
 21242 ;; Registers used:
 21243 ;;		wreg, status,2, status,0, cstack
 21244 ;; Tracked objects:
 21245 ;;		On entry : 0/0
 21246 ;;		On exit  : F/0
 21247 ;;		Unchanged: 0/0
 21248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21249 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21250 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21251 ;;      Temps:          0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21252 ;;      Totals:        12      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21253 ;;Total ram usage:       23 bytes
 21254 ;; Hardware stack levels used:    1
 21255 ;; Hardware stack levels required when called:   10
 21256 ;; This function calls:
 21257 ;;		_ETH_ComputeChecksum
 21258 ;; This function is called by:
 21259 ;;		_ICMP_EchoReply
 21260 ;;		_IPV4_Send
 21261 ;;		_TCP_Snd
 21262 ;;		_UDP_Send
 21263 ;; This function uses a non-reentrant model
 21264 ;;
 21265                           
 21266                           	psect	text79
 21267  00552E                     __ptext79:
 21268                           	opt stack 0
 21269  00552E                     _ETH_TxComputeChecksum:
 21270                           	opt stack 16
 21271                           
 21272                           ;j60_driver.c: 756: uint16_t rxptr;
 21273                           ;j60_driver.c: 757: uint32_t cksm;
 21274                           ;j60_driver.c: 760: rxptr = ERDPT;
 21275                           
 21276                           ; BSR set to: 0
 21277                           ;incstack = 0
 21278  00552E  CF7A F02B          	movff	3962,ETH_TxComputeChecksum@rxptr	;volatile
 21279  005532  CF7B F02C          	movff	3963,ETH_TxComputeChecksum@rxptr+1	;volatile
 21280                           
 21281                           ;j60_driver.c: 763: ERDPT = ((8192) - (1518)) + position + 1;
 21282  005536  0E13               	movlw	19
 21283  005538  2425               	addwf	ETH_TxComputeChecksum@position,w,c
 21284  00553A  6E7A               	movwf	3962,c	;volatile
 21285  00553C  0E1A               	movlw	26
 21286  00553E  2026               	addwfc	ETH_TxComputeChecksum@position+1,w,c
 21287  005540  6E7B               	movwf	3963,c	;volatile
 21288                           
 21289                           ;j60_driver.c: 765: cksm = ETH_ComputeChecksum( len, seed);
 21290  005542  C027  F017         	movff	ETH_TxComputeChecksum@len,ETH_ComputeChecksum@len
 21291  005546  C028  F018         	movff	ETH_TxComputeChecksum@len+1,ETH_ComputeChecksum@len+1
 21292  00554A  C029  F019         	movff	ETH_TxComputeChecksum@seed,ETH_ComputeChecksum@seed
 21293  00554E  C02A  F01A         	movff	ETH_TxComputeChecksum@seed+1,ETH_ComputeChecksum@seed+1
 21294  005552  ECCF  F028         	call	_ETH_ComputeChecksum	;wreg free
 21295  005556  C017  F02D         	movff	?_ETH_ComputeChecksum,ETH_TxComputeChecksum@cksm
 21296  00555A  C018  F02E         	movff	?_ETH_ComputeChecksum+1,ETH_TxComputeChecksum@cksm+1
 21297  00555E  6A2F               	clrf	ETH_TxComputeChecksum@cksm+2,c
 21298  005560  6A30               	clrf	ETH_TxComputeChecksum@cksm+3,c
 21299                           
 21300                           ;j60_driver.c: 768: ERDPT = rxptr;
 21301  005562  C02B  FF7A         	movff	ETH_TxComputeChecksum@rxptr,3962	;volatile
 21302  005566  C02C  FF7B         	movff	ETH_TxComputeChecksum@rxptr+1,3963	;volatile
 21303                           
 21304                           ;j60_driver.c: 770: cksm = ((cksm & 0xFF00) >> 8) | ((cksm & 0x00FF) << 8);
 21305  00556A  502D               	movf	ETH_TxComputeChecksum@cksm,w,c
 21306  00556C  0100               	movlb	0	; () banked
 21307  00556E  6F60               	movwf	??_ETH_TxComputeChecksum& (0+255),b
 21308  005570  6B61               	clrf	(??_ETH_TxComputeChecksum+1)& (0+255),b
 21309  005572  6B62               	clrf	(??_ETH_TxComputeChecksum+2)& (0+255),b
 21310  005574  6B63               	clrf	(??_ETH_TxComputeChecksum+3)& (0+255),b
 21311  005576  C062  F063         	movff	??_ETH_TxComputeChecksum+2,??_ETH_TxComputeChecksum+3
 21312  00557A  C061  F062         	movff	??_ETH_TxComputeChecksum+1,??_ETH_TxComputeChecksum+2
 21313  00557E  C060  F061         	movff	??_ETH_TxComputeChecksum,??_ETH_TxComputeChecksum+1
 21314  005582  6B60               	clrf	??_ETH_TxComputeChecksum& (0+255),b
 21315  005584  502E               	movf	ETH_TxComputeChecksum@cksm+1,w,c
 21316  005586  6F64               	movwf	(??_ETH_TxComputeChecksum+4)& (0+255),b
 21317  005588  6B65               	clrf	(??_ETH_TxComputeChecksum+5)& (0+255),b
 21318  00558A  6B66               	clrf	(??_ETH_TxComputeChecksum+6)& (0+255),b
 21319  00558C  5164               	movf	(??_ETH_TxComputeChecksum+4)& (0+255),w,b
 21320  00558E  6F67               	movwf	(??_ETH_TxComputeChecksum+7)& (0+255),b
 21321  005590  5165               	movf	(??_ETH_TxComputeChecksum+5)& (0+255),w,b
 21322  005592  6F68               	movwf	(??_ETH_TxComputeChecksum+8)& (0+255),b
 21323  005594  5166               	movf	(??_ETH_TxComputeChecksum+6)& (0+255),w,b
 21324  005596  6F69               	movwf	(??_ETH_TxComputeChecksum+9)& (0+255),b
 21325  005598  6B6A               	clrf	(??_ETH_TxComputeChecksum+10)& (0+255),b
 21326  00559A  5160               	movf	??_ETH_TxComputeChecksum& (0+255),w,b
 21327  00559C  1167               	iorwf	(??_ETH_TxComputeChecksum+7)& (0+255),w,b
 21328  00559E  6E2D               	movwf	ETH_TxComputeChecksum@cksm,c
 21329  0055A0  5161               	movf	(??_ETH_TxComputeChecksum+1)& (0+255),w,b
 21330  0055A2  1168               	iorwf	(??_ETH_TxComputeChecksum+8)& (0+255),w,b
 21331  0055A4  6E2E               	movwf	ETH_TxComputeChecksum@cksm+1,c
 21332  0055A6  5162               	movf	(??_ETH_TxComputeChecksum+2)& (0+255),w,b
 21333  0055A8  1169               	iorwf	(??_ETH_TxComputeChecksum+9)& (0+255),w,b
 21334  0055AA  6E2F               	movwf	ETH_TxComputeChecksum@cksm+2,c
 21335  0055AC  5163               	movf	(??_ETH_TxComputeChecksum+3)& (0+255),w,b
 21336  0055AE  116A               	iorwf	(??_ETH_TxComputeChecksum+10)& (0+255),w,b
 21337  0055B0  6E30               	movwf	ETH_TxComputeChecksum@cksm+3,c
 21338                           
 21339                           ; BSR set to: 0
 21340                           ;j60_driver.c: 772: return cksm;
 21341  0055B2  C02D  F025         	movff	ETH_TxComputeChecksum@cksm,?_ETH_TxComputeChecksum
 21342  0055B6  C02E  F026         	movff	ETH_TxComputeChecksum@cksm+1,?_ETH_TxComputeChecksum+1
 21343                           
 21344                           ; BSR set to: 0
 21345  0055BA  0012               	return		;funcret
 21346  0055BC                     __end_of_ETH_TxComputeChecksum:
 21347                           	opt stack 0
 21348                           tosu	equ	0xFFF
 21349                           tosh	equ	0xFFE
 21350                           tosl	equ	0xFFD
 21351                           pclath	equ	0xFFA
 21352                           tblptru	equ	0xFF8
 21353                           tblptrh	equ	0xFF7
 21354                           tblptrl	equ	0xFF6
 21355                           tablat	equ	0xFF5
 21356                           prodh	equ	0xFF4
 21357                           prodl	equ	0xFF3
 21358                           intcon	equ	0xFF2
 21359                           indf0	equ	0xFEF
 21360                           postinc0	equ	0xFEE
 21361                           fsr0h	equ	0xFEA
 21362                           fsr0l	equ	0xFE9
 21363                           wreg	equ	0xFE8
 21364                           indf1	equ	0xFE7
 21365                           postinc1	equ	0xFE6
 21366                           postdec1	equ	0xFE5
 21367                           plusw1	equ	0xFE3
 21368                           fsr1h	equ	0xFE2
 21369                           fsr1l	equ	0xFE1
 21370                           indf2	equ	0xFDF
 21371                           postinc2	equ	0xFDE
 21372                           postdec2	equ	0xFDD
 21373                           plusw2	equ	0xFDB
 21374                           fsr2h	equ	0xFDA
 21375                           fsr2l	equ	0xFD9
 21376                           status	equ	0xFD8
 21377                           
 21378 ;; *************** function _ETH_ComputeChecksum *****************
 21379 ;; Defined at:
 21380 ;;		line 710 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 21381 ;; Parameters:    Size  Location     Type
 21382 ;;  len             2   22[COMRAM] unsigned int 
 21383 ;;  seed            2   24[COMRAM] unsigned int 
 21384 ;; Auto vars:     Size  Location     Type
 21385 ;;  cksm            4   30[COMRAM] unsigned long 
 21386 ;;  v               2   34[COMRAM] unsigned int 
 21387 ;; Return value:  Size  Location     Type
 21388 ;;                  2   22[COMRAM] unsigned int 
 21389 ;; Registers used:
 21390 ;;		wreg, status,2, status,0, cstack
 21391 ;; Tracked objects:
 21392 ;;		On entry : 0/1
 21393 ;;		On exit  : 0/0
 21394 ;;		Unchanged: 0/0
 21395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21396 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21397 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21398 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21399 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21400 ;;Total ram usage:       14 bytes
 21401 ;; Hardware stack levels used:    1
 21402 ;; Hardware stack levels required when called:    9
 21403 ;; This function calls:
 21404 ;;		_ETH_EdataRead
 21405 ;; This function is called by:
 21406 ;;		_ETH_TxComputeChecksum
 21407 ;;		_ETH_RxComputeChecksum
 21408 ;; This function uses a non-reentrant model
 21409 ;;
 21410                           
 21411                           	psect	text80
 21412  00519E                     __ptext80:
 21413                           	opt stack 0
 21414  00519E                     _ETH_ComputeChecksum:
 21415                           	opt stack 16
 21416                           
 21417                           ;j60_driver.c: 712: uint32_t cksm;
 21418                           ;j60_driver.c: 713: uint16_t v;
 21419                           ;j60_driver.c: 715: cksm = seed;
 21420                           
 21421                           ; BSR set to: 0
 21422                           ;incstack = 0
 21423  00519E  C019  F01F         	movff	ETH_ComputeChecksum@seed,ETH_ComputeChecksum@cksm
 21424  0051A2  C01A  F020         	movff	ETH_ComputeChecksum@seed+1,ETH_ComputeChecksum@cksm+1
 21425  0051A6  6A21               	clrf	ETH_ComputeChecksum@cksm+2,c
 21426  0051A8  6A22               	clrf	ETH_ComputeChecksum@cksm+3,c
 21427                           
 21428                           ;j60_driver.c: 717: while(len > 1)
 21429  0051AA  D011               	goto	l7672
 21430  0051AC                     l617:
 21431                           
 21432                           ;j60_driver.c: 718: {
 21433                           ;j60_driver.c: 719: v = 0;
 21434  0051AC  6A23               	clrf	ETH_ComputeChecksum@v,c
 21435  0051AE  6A24               	clrf	ETH_ComputeChecksum@v+1,c
 21436  0051B0                     i37L__ptext81:
 21437                           	opt stack 0
 21438  0051B0                     i37L_ETH_EdataRead:
 21439                           	opt stack 0
 21440  0051B0                     i37Ll7562:
 21441                           	opt stack 16
 21442  0051B0  CF61 FE7E          	movff	3937,_errataTemp	;# 
 21443  0051B4                     i37Ll7564:
 21444                           	opt stack 16
 21445                           
 21446                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
 21447  0051B4  010E               	movlb	14	; () banked
 21448  0051B6  517E               	movf	126,w,b
 21449  0051B8                     i37Ll460:
 21450                           	opt stack 16
 21451  0051B8  6E24               	movwf	ETH_ComputeChecksum@v+1,c
 21452  0051BA                     i38L__ptext81:
 21453                           	opt stack 0
 21454  0051BA                     i38L_ETH_EdataRead:
 21455                           	opt stack 0
 21456  0051BA                     i38Ll7562:
 21457                           	opt stack 16
 21458  0051BA  CF61 FE7E          	movff	3937,_errataTemp	;# 
 21459  0051BE                     i38Ll7564:
 21460                           	opt stack 16
 21461                           
 21462                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
 21463  0051BE  010E               	movlb	14	; () banked
 21464  0051C0  517E               	movf	126,w,b
 21465  0051C2                     i38Ll460:
 21466                           	opt stack 16
 21467  0051C2  6E23               	movwf	ETH_ComputeChecksum@v,c
 21468                           
 21469                           ; BSR set to: 14
 21470                           ;j60_driver.c: 722: cksm += v;
 21471  0051C4  D834               	call	PL621	;call to abstracted procedure
 21472                           
 21473                           ; BSR set to: 14
 21474                           ;j60_driver.c: 723: len -= 2;
 21475  0051C6  0E02               	movlw	2
 21476  0051C8  5E17               	subwf	ETH_ComputeChecksum@len,f,c
 21477  0051CA  0E00               	movlw	0
 21478  0051CC  5A18               	subwfb	ETH_ComputeChecksum@len+1,f,c
 21479  0051CE                     l7672:
 21480  0051CE  5018               	movf	ETH_ComputeChecksum@len+1,w,c
 21481  0051D0  E1ED               	bnz	l617
 21482  0051D2  0E02               	movlw	2
 21483  0051D4  5C17               	subwf	ETH_ComputeChecksum@len,w,c
 21484  0051D6  E2EA               	bc	l617
 21485                           
 21486                           ;j60_driver.c: 724: }
 21487                           ;j60_driver.c: 726: if(len)
 21488  0051D8  5017               	movf	ETH_ComputeChecksum@len,w,c
 21489  0051DA  1018               	iorwf	ETH_ComputeChecksum@len+1,w,c
 21490  0051DC  E01C               	bz	l620
 21491                           
 21492                           ;j60_driver.c: 727: {
 21493                           ;j60_driver.c: 728: v = 0;
 21494  0051DE  6A23               	clrf	ETH_ComputeChecksum@v,c
 21495  0051E0  6A24               	clrf	ETH_ComputeChecksum@v+1,c
 21496  0051E2                     i39L__ptext81:
 21497                           	opt stack 0
 21498  0051E2                     i39L_ETH_EdataRead:
 21499                           	opt stack 0
 21500  0051E2                     i39Ll7562:
 21501                           	opt stack 16
 21502  0051E2  CF61 FE7E          	movff	3937,_errataTemp	;# 
 21503  0051E6                     i39Ll7564:
 21504                           	opt stack 16
 21505                           
 21506                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
 21507  0051E6  010E               	movlb	14	; () banked
 21508  0051E8  517E               	movf	126,w,b
 21509  0051EA                     i39Ll460:
 21510                           	opt stack 16
 21511  0051EA  6E24               	movwf	ETH_ComputeChecksum@v+1,c
 21512                           
 21513                           ; BSR set to: 14
 21514                           ;j60_driver.c: 730: ((char *)&v)[0] = 0;
 21515  0051EC  6A23               	clrf	ETH_ComputeChecksum@v,c
 21516                           
 21517                           ; BSR set to: 14
 21518                           ;j60_driver.c: 731: cksm += v;
 21519  0051EE  D81F               	call	PL621	;call to abstracted procedure
 21520  0051F0  D012               	goto	l620
 21521  0051F2                     l7684:
 21522                           
 21523                           ;j60_driver.c: 736: {
 21524                           ;j60_driver.c: 737: cksm = (cksm & 0x0FFFF) + (cksm>>16);
 21525  0051F2  501F               	movf	ETH_ComputeChecksum@cksm,w,c
 21526  0051F4  6E1B               	movwf	??_ETH_ComputeChecksum& (0+255),c
 21527  0051F6  5020               	movf	ETH_ComputeChecksum@cksm+1,w,c
 21528  0051F8  6E1C               	movwf	(??_ETH_ComputeChecksum+1)& (0+255),c
 21529  0051FA  6A1D               	clrf	(??_ETH_ComputeChecksum+2)& (0+255),c
 21530  0051FC  6A1E               	clrf	(??_ETH_ComputeChecksum+3)& (0+255),c
 21531  0051FE  5021               	movf	ETH_ComputeChecksum@cksm+2,w,c
 21532  005200  241B               	addwf	??_ETH_ComputeChecksum,w,c
 21533  005202  6E1F               	movwf	ETH_ComputeChecksum@cksm,c
 21534  005204  5022               	movf	ETH_ComputeChecksum@cksm+3,w,c
 21535  005206  201C               	addwfc	??_ETH_ComputeChecksum+1,w,c
 21536  005208  6E20               	movwf	ETH_ComputeChecksum@cksm+1,c
 21537  00520A  0E00               	movlw	0
 21538  00520C  201D               	addwfc	??_ETH_ComputeChecksum+2,w,c
 21539  00520E  6E21               	movwf	ETH_ComputeChecksum@cksm+2,c
 21540  005210  0E00               	movlw	0
 21541  005212  201E               	addwfc	??_ETH_ComputeChecksum+3,w,c
 21542  005214  6E22               	movwf	ETH_ComputeChecksum@cksm+3,c
 21543  005216                     l620:
 21544  005216  5021               	movf	ETH_ComputeChecksum@cksm+2,w,c
 21545  005218  1022               	iorwf	ETH_ComputeChecksum@cksm+3,w,c
 21546  00521A  E1EB               	bnz	l7684
 21547                           
 21548                           ;j60_driver.c: 738: }
 21549                           ;j60_driver.c: 741: cksm = ~cksm;
 21550  00521C  1E1F               	comf	ETH_ComputeChecksum@cksm,f,c
 21551  00521E  1E20               	comf	ETH_ComputeChecksum@cksm+1,f,c
 21552  005220  1E21               	comf	ETH_ComputeChecksum@cksm+2,f,c
 21553  005222  1E22               	comf	ETH_ComputeChecksum@cksm+3,f,c
 21554                           
 21555                           ;j60_driver.c: 744: return cksm;
 21556  005224  C01F  F017         	movff	ETH_ComputeChecksum@cksm,?_ETH_ComputeChecksum
 21557  005228  C020  F018         	movff	ETH_ComputeChecksum@cksm+1,?_ETH_ComputeChecksum+1
 21558  00522C  0CFF               	retlw	255	;funcret
 21559  00522E                     __end_of_ETH_ComputeChecksum:
 21560                           	opt stack 0
 21561  00522E                     PL621:
 21562                           	opt stack 16
 21563  00522E  5023               	movf	ETH_ComputeChecksum@v,w,c
 21564  005230  261F               	addwf	ETH_ComputeChecksum@cksm,f,c
 21565  005232  5024               	movf	ETH_ComputeChecksum@v+1,w,c
 21566  005234  2220               	addwfc	ETH_ComputeChecksum@cksm+1,f,c
 21567  005236  0E00               	movlw	0
 21568  005238  2221               	addwfc	ETH_ComputeChecksum@cksm+2,f,c
 21569  00523A  2222               	addwfc	ETH_ComputeChecksum@cksm+3,f,c
 21570  00523C  0C00               	retlw	0
 21571  00523E                     __end_ofPL621:
 21572                           	opt stack 0
 21573                           tosu	equ	0xFFF
 21574                           tosh	equ	0xFFE
 21575                           tosl	equ	0xFFD
 21576                           pclath	equ	0xFFA
 21577                           tblptru	equ	0xFF8
 21578                           tblptrh	equ	0xFF7
 21579                           tblptrl	equ	0xFF6
 21580                           tablat	equ	0xFF5
 21581                           prodh	equ	0xFF4
 21582                           prodl	equ	0xFF3
 21583                           intcon	equ	0xFF2
 21584                           indf0	equ	0xFEF
 21585                           postinc0	equ	0xFEE
 21586                           fsr0h	equ	0xFEA
 21587                           fsr0l	equ	0xFE9
 21588                           wreg	equ	0xFE8
 21589                           indf1	equ	0xFE7
 21590                           postinc1	equ	0xFE6
 21591                           postdec1	equ	0xFE5
 21592                           plusw1	equ	0xFE3
 21593                           fsr1h	equ	0xFE2
 21594                           fsr1l	equ	0xFE1
 21595                           indf2	equ	0xFDF
 21596                           postinc2	equ	0xFDE
 21597                           postdec2	equ	0xFDD
 21598                           plusw2	equ	0xFDB
 21599                           fsr2h	equ	0xFDA
 21600                           fsr2l	equ	0xFD9
 21601                           status	equ	0xFD8
 21602                           
 21603 ;; *************** function _ETH_EdataRead *****************
 21604 ;; Defined at:
 21605 ;;		line 76 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 21606 ;; Parameters:    Size  Location     Type
 21607 ;;		None
 21608 ;; Auto vars:     Size  Location     Type
 21609 ;;		None
 21610 ;; Return value:  Size  Location     Type
 21611 ;;                  1    wreg      unsigned char 
 21612 ;; Registers used:
 21613 ;;		wreg, status,2
 21614 ;; Tracked objects:
 21615 ;;		On entry : 0/1
 21616 ;;		On exit  : F/E
 21617 ;;		Unchanged: 0/0
 21618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21623 ;;Total ram usage:        0 bytes
 21624 ;; Hardware stack levels used:    1
 21625 ;; Hardware stack levels required when called:    8
 21626 ;; This function calls:
 21627 ;;		Nothing
 21628 ;; This function is called by:
 21629 ;;		_ETH_NextPacketUpdate
 21630 ;;		_ETH_Read8
 21631 ;;		_ETH_Read16
 21632 ;;		_ETH_Read32
 21633 ;;		_ETH_ReadBlock
 21634 ;;		_ETH_ComputeChecksum
 21635 ;; This function uses a non-reentrant model
 21636 ;;
 21637                           
 21638                           	psect	text81
 21639  000000                     __ptext81:
 21640                           	opt stack 0
 21641  000000                     _ETH_EdataRead:
 21642                           	opt stack 0
 21643  000000                     __end_of_ETH_EdataRead:
 21644                           	opt stack 0
 21645                           tosu	equ	0xFFF
 21646                           tosh	equ	0xFFE
 21647                           tosl	equ	0xFFD
 21648                           pclath	equ	0xFFA
 21649                           tblptru	equ	0xFF8
 21650                           tblptrh	equ	0xFF7
 21651                           tblptrl	equ	0xFF6
 21652                           tablat	equ	0xFF5
 21653                           prodh	equ	0xFF4
 21654                           prodl	equ	0xFF3
 21655                           intcon	equ	0xFF2
 21656                           indf0	equ	0xFEF
 21657                           postinc0	equ	0xFEE
 21658                           fsr0h	equ	0xFEA
 21659                           fsr0l	equ	0xFE9
 21660                           wreg	equ	0xFE8
 21661                           indf1	equ	0xFE7
 21662                           postinc1	equ	0xFE6
 21663                           postdec1	equ	0xFE5
 21664                           plusw1	equ	0xFE3
 21665                           fsr1h	equ	0xFE2
 21666                           fsr1l	equ	0xFE1
 21667                           indf2	equ	0xFDF
 21668                           postinc2	equ	0xFDE
 21669                           postdec2	equ	0xFDD
 21670                           plusw2	equ	0xFDB
 21671                           fsr2h	equ	0xFDA
 21672                           fsr2l	equ	0xFD9
 21673                           status	equ	0xFD8
 21674                           
 21675 ;; *************** function _ETH_Send *****************
 21676 ;; Defined at:
 21677 ;;		line 567 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 21678 ;; Parameters:    Size  Location     Type
 21679 ;;		None
 21680 ;; Auto vars:     Size  Location     Type
 21681 ;;  packetEnd       2   22[COMRAM] unsigned int 
 21682 ;; Return value:  Size  Location     Type
 21683 ;;                  1    wreg      enum E6890
 21684 ;; Registers used:
 21685 ;;		wreg, status,2, status,0
 21686 ;; Tracked objects:
 21687 ;;		On entry : 0/0
 21688 ;;		On exit  : 0/0
 21689 ;;		Unchanged: 0/0
 21690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21692 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21694 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21695 ;;Total ram usage:        2 bytes
 21696 ;; Hardware stack levels used:    1
 21697 ;; Hardware stack levels required when called:    8
 21698 ;; This function calls:
 21699 ;;		Nothing
 21700 ;; This function is called by:
 21701 ;;		_ARPV4_Packet
 21702 ;;		_ARPV4_Request
 21703 ;;		_IPV4_Send
 21704 ;; This function uses a non-reentrant model
 21705 ;;
 21706                           
 21707                           	psect	text82
 21708  006110                     __ptext82:
 21709                           	opt stack 0
 21710  006110                     _ETH_Send:
 21711                           	opt stack 17
 21712                           
 21713                           ;j60_driver.c: 569: uint16_t packetEnd;
 21714                           ;j60_driver.c: 571: packetEnd = EWRPT - 1;
 21715                           
 21716                           ; BSR set to: 14
 21717                           ;incstack = 0
 21718  006110  0EFF               	movlw	255
 21719  006112  010E               	movlb	14	; () banked
 21720  006114  25E2               	addwf	226,w,b	;volatile
 21721  006116  6E17               	movwf	ETH_Send@packetEnd,c
 21722  006118  0EFF               	movlw	255
 21723  00611A  21E3               	addwfc	227,w,b	;volatile
 21724  00611C  6E18               	movwf	ETH_Send@packetEnd+1,c
 21725                           
 21726                           ; BSR set to: 14
 21727                           ;j60_driver.c: 573: if(!ethData.up)
 21728  00611E  0101               	movlb	1	; () banked
 21729  006120  A5BD               	btfss	_ethData& (0+255),2,b	;volatile
 21730                           
 21731                           ; BSR set to: 1
 21732                           ;j60_driver.c: 574: {
 21733                           ;j60_driver.c: 575: return LINK_NOT_FOUND;
 21734  006122  0C02               	retlw	2
 21735                           
 21736                           ; BSR set to: 1
 21737                           ;j60_driver.c: 576: }
 21738                           ;j60_driver.c: 577: if(!ethData.bufferBusy)
 21739  006124  ABBD               	btfss	_ethData& (0+255),5,b	;volatile
 21740                           
 21741                           ; BSR set to: 1
 21742                           ;j60_driver.c: 578: {
 21743                           ;j60_driver.c: 579: return BUFFER_BUSY;
 21744  006126  0C03               	retlw	3
 21745                           
 21746                           ; BSR set to: 1
 21747                           ;j60_driver.c: 580: }
 21748                           ;j60_driver.c: 581: ETXST = ((8192) - (1518));
 21749  006128  ECFD  F025         	call	PL671	;call to abstracted procedure
 21750                           
 21751                           ; BSR set to: 14
 21752                           ;j60_driver.c: 582: ETXND = packetEnd;
 21753  00612C  C017  FEE6         	movff	ETH_Send@packetEnd,3814	;volatile
 21754  006130  C018  FEE7         	movff	ETH_Send@packetEnd+1,3815	;volatile
 21755                           
 21756                           ; BSR set to: 14
 21757                           ;j60_driver.c: 583: __nop(); __nop();
 21758  006134  F000               	nop	
 21759  006136  F000               	nop	
 21760                           
 21761                           ;j60_driver.c: 584: ECON1bits.TXRTS = 1;
 21762  006138  86D2               	bsf	4050,3,c	;volatile
 21763                           
 21764                           ;j60_driver.c: 586: return SUCCESS;
 21765  00613A  0C01               	retlw	1	;funcret
 21766  00613C                     __end_of_ETH_Send:
 21767                           	opt stack 0
 21768                           tosu	equ	0xFFF
 21769                           tosh	equ	0xFFE
 21770                           tosl	equ	0xFFD
 21771                           pclath	equ	0xFFA
 21772                           tblptru	equ	0xFF8
 21773                           tblptrh	equ	0xFF7
 21774                           tblptrl	equ	0xFF6
 21775                           tablat	equ	0xFF5
 21776                           prodh	equ	0xFF4
 21777                           prodl	equ	0xFF3
 21778                           intcon	equ	0xFF2
 21779                           indf0	equ	0xFEF
 21780                           postinc0	equ	0xFEE
 21781                           fsr0h	equ	0xFEA
 21782                           fsr0l	equ	0xFE9
 21783                           wreg	equ	0xFE8
 21784                           indf1	equ	0xFE7
 21785                           postinc1	equ	0xFE6
 21786                           postdec1	equ	0xFE5
 21787                           plusw1	equ	0xFE3
 21788                           fsr1h	equ	0xFE2
 21789                           fsr1l	equ	0xFE1
 21790                           indf2	equ	0xFDF
 21791                           postinc2	equ	0xFDE
 21792                           postdec2	equ	0xFDD
 21793                           plusw2	equ	0xFDB
 21794                           fsr2h	equ	0xFDA
 21795                           fsr2l	equ	0xFD9
 21796                           status	equ	0xFD8
 21797                           
 21798 ;; *************** function _ETH_Insert *****************
 21799 ;; Defined at:
 21800 ;;		line 596 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 21801 ;; Parameters:    Size  Location     Type
 21802 ;;  data            1   22[COMRAM] PTR unsigned char 
 21803 ;;		 -> UDP_Send@cksm(2), UDP_Send@udpLength(2), TCP_Snd@cksm(2), IPV4_Send@cksm(2), 
 21804 ;;		 -> IPV4_Send@totalLength(2), ICMP_EchoReply@cksm(2), 
 21805 ;;  len             2   23[COMRAM] unsigned int 
 21806 ;;  offset          2   25[COMRAM] unsigned int 
 21807 ;; Auto vars:     Size  Location     Type
 21808 ;;  current_tx_p    2   27[COMRAM] unsigned int 
 21809 ;; Return value:  Size  Location     Type
 21810 ;;                  1    wreg      void 
 21811 ;; Registers used:
 21812 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21813 ;; Tracked objects:
 21814 ;;		On entry : F/0
 21815 ;;		On exit  : 0/0
 21816 ;;		Unchanged: 0/0
 21817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21818 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21819 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21821 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21822 ;;Total ram usage:        7 bytes
 21823 ;; Hardware stack levels used:    1
 21824 ;; Hardware stack levels required when called:    9
 21825 ;; This function calls:
 21826 ;;		_ETH_EdataWrite
 21827 ;; This function is called by:
 21828 ;;		_ICMP_EchoReply
 21829 ;;		_IPV4_Send
 21830 ;;		_TCP_Snd
 21831 ;;		_UDP_Send
 21832 ;; This function uses a non-reentrant model
 21833 ;;
 21834                           
 21835                           	psect	text83
 21836  005F42                     __ptext83:
 21837                           	opt stack 0
 21838  005F42                     _ETH_Insert:
 21839                           	opt stack 17
 21840                           
 21841                           ; BSR set to: 0
 21842                           ;j60_driver.c: 598: uint16_t current_tx_ptr = EWRPT;
 21843                           
 21844                           ;incstack = 0
 21845  005F42  CEE2 F01C          	movff	3810,ETH_Insert@current_tx_ptr	;volatile
 21846  005F46  CEE3 F01D          	movff	3811,ETH_Insert@current_tx_ptr+1	;volatile
 21847                           
 21848                           ; BSR set to: 0
 21849                           ;j60_driver.c: 599: EWRPT = ((8192) - (1518)) + offset + 1;
 21850  005F4A  0E13               	movlw	19
 21851  005F4C  241A               	addwf	ETH_Insert@offset,w,c
 21852  005F4E  010E               	movlb	14	; () banked
 21853  005F50  6FE2               	movwf	226,b	;volatile
 21854  005F52  0E1A               	movlw	26
 21855  005F54  201B               	addwfc	ETH_Insert@offset+1,w,c
 21856  005F56  6FE3               	movwf	227,b	;volatile
 21857                           
 21858                           ;j60_driver.c: 600: while(len--)
 21859  005F58  D007               	goto	l7760
 21860  005F5A                     l7756:
 21861                           
 21862                           ;j60_driver.c: 601: {
 21863                           ;j60_driver.c: 602: ETH_EdataWrite(*data++);
 21864  005F5A  5017               	movf	ETH_Insert@data,w,c
 21865  005F5C  6ED9               	movwf	fsr2l,c
 21866  005F5E  6ADA               	clrf	fsr2h,c
 21867  005F60  50DF               	movf	indf2,w,c
 21868  005F62                     i40L__ptext87:
 21869                           	opt stack 0
 21870  005F62                     i40L_ETH_EdataWrite:
 21871                           	opt stack 0
 21872  005F62                     i40Ll7568:
 21873                           	opt stack 17
 21874  005F62  CFE8 FF61          	movff	wreg,3937	;# 
 21875  005F66                     i40Ll463:
 21876                           	opt stack 17
 21877  005F66  2A17               	incf	ETH_Insert@data,f,c
 21878  005F68                     l7760:
 21879  005F68  0618               	decf	ETH_Insert@len,f,c
 21880  005F6A  A0D8               	btfss	status,0,c
 21881  005F6C  0619               	decf	ETH_Insert@len+1,f,c
 21882  005F6E  2818               	incf	ETH_Insert@len,w,c
 21883  005F70  E1F4               	bnz	l7756
 21884  005F72  2819               	incf	ETH_Insert@len+1,w,c
 21885  005F74  E1F2               	bnz	l7756
 21886                           
 21887                           ;j60_driver.c: 603: }
 21888                           ;j60_driver.c: 604: EWRPT = current_tx_ptr;
 21889  005F76  C01C  FEE2         	movff	ETH_Insert@current_tx_ptr,3810	;volatile
 21890  005F7A  C01D  FEE3         	movff	ETH_Insert@current_tx_ptr+1,3811	;volatile
 21891  005F7E  0012               	return		;funcret
 21892  005F80                     __end_of_ETH_Insert:
 21893                           	opt stack 0
 21894                           tosu	equ	0xFFF
 21895                           tosh	equ	0xFFE
 21896                           tosl	equ	0xFFD
 21897                           pclath	equ	0xFFA
 21898                           tblptru	equ	0xFF8
 21899                           tblptrh	equ	0xFF7
 21900                           tblptrl	equ	0xFF6
 21901                           tablat	equ	0xFF5
 21902                           prodh	equ	0xFF4
 21903                           prodl	equ	0xFF3
 21904                           intcon	equ	0xFF2
 21905                           indf0	equ	0xFEF
 21906                           postinc0	equ	0xFEE
 21907                           fsr0h	equ	0xFEA
 21908                           fsr0l	equ	0xFE9
 21909                           wreg	equ	0xFE8
 21910                           indf1	equ	0xFE7
 21911                           postinc1	equ	0xFE6
 21912                           postdec1	equ	0xFE5
 21913                           plusw1	equ	0xFE3
 21914                           fsr1h	equ	0xFE2
 21915                           fsr1l	equ	0xFE1
 21916                           indf2	equ	0xFDF
 21917                           postinc2	equ	0xFDE
 21918                           postdec2	equ	0xFDD
 21919                           plusw2	equ	0xFDB
 21920                           fsr2h	equ	0xFDA
 21921                           fsr2l	equ	0xFD9
 21922                           status	equ	0xFD8
 21923                           
 21924 ;; *************** function _ETH_GetByteCount *****************
 21925 ;; Defined at:
 21926 ;;		line 843 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 21927 ;; Parameters:    Size  Location     Type
 21928 ;;		None
 21929 ;; Auto vars:     Size  Location     Type
 21930 ;;  val             2   24[COMRAM] unsigned int 
 21931 ;; Return value:  Size  Location     Type
 21932 ;;                  2   22[COMRAM] unsigned int 
 21933 ;; Registers used:
 21934 ;;		wreg, status,2, status,0
 21935 ;; Tracked objects:
 21936 ;;		On entry : 0/0
 21937 ;;		On exit  : F/E
 21938 ;;		Unchanged: 0/0
 21939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21940 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21941 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21943 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21944 ;;Total ram usage:        4 bytes
 21945 ;; Hardware stack levels used:    1
 21946 ;; Hardware stack levels required when called:    8
 21947 ;; This function calls:
 21948 ;;		Nothing
 21949 ;; This function is called by:
 21950 ;;		_UDP_Send
 21951 ;; This function uses a non-reentrant model
 21952 ;;
 21953                           
 21954                           	psect	text84
 21955  00636A                     __ptext84:
 21956                           	opt stack 0
 21957  00636A                     _ETH_GetByteCount:
 21958                           	opt stack 15
 21959                           
 21960                           ;j60_driver.c: 845: uint16_t val;
 21961                           ;j60_driver.c: 846: val = EWRPT - ethData.saveWRPT;
 21962                           
 21963                           ;incstack = 0
 21964  00636A  0101               	movlb	1	; () banked
 21965  00636C  51C2               	movf	(_ethData+5)& (0+255),w,b	;volatile
 21966  00636E  010E               	movlb	14	; () banked
 21967  006370  5DE2               	subwf	226,w,b	;volatile
 21968  006372  6E19               	movwf	ETH_GetByteCount@val,c
 21969  006374  0101               	movlb	1	; () banked
 21970  006376  51C3               	movf	(_ethData+6)& (0+255),w,b	;volatile
 21971  006378  010E               	movlb	14	; () banked
 21972  00637A  59E3               	subwfb	227,w,b	;volatile
 21973  00637C  6E1A               	movwf	ETH_GetByteCount@val+1,c
 21974                           
 21975                           ; BSR set to: 14
 21976                           ;j60_driver.c: 847: return val ;
 21977  00637E  C019  F017         	movff	ETH_GetByteCount@val,?_ETH_GetByteCount
 21978  006382  C01A  F018         	movff	ETH_GetByteCount@val+1,?_ETH_GetByteCount+1
 21979                           
 21980                           ; BSR set to: 14
 21981  006386  0012               	return		;funcret
 21982  006388                     __end_of_ETH_GetByteCount:
 21983                           	opt stack 0
 21984                           tosu	equ	0xFFF
 21985                           tosh	equ	0xFFE
 21986                           tosl	equ	0xFFD
 21987                           pclath	equ	0xFFA
 21988                           tblptru	equ	0xFF8
 21989                           tblptrh	equ	0xFF7
 21990                           tblptrl	equ	0xFF6
 21991                           tablat	equ	0xFF5
 21992                           prodh	equ	0xFF4
 21993                           prodl	equ	0xFF3
 21994                           intcon	equ	0xFF2
 21995                           indf0	equ	0xFEF
 21996                           postinc0	equ	0xFEE
 21997                           fsr0h	equ	0xFEA
 21998                           fsr0l	equ	0xFE9
 21999                           wreg	equ	0xFE8
 22000                           indf1	equ	0xFE7
 22001                           postinc1	equ	0xFE6
 22002                           postdec1	equ	0xFE5
 22003                           plusw1	equ	0xFE3
 22004                           fsr1h	equ	0xFE2
 22005                           fsr1l	equ	0xFE1
 22006                           indf2	equ	0xFDF
 22007                           postinc2	equ	0xFDE
 22008                           postdec2	equ	0xFDD
 22009                           plusw2	equ	0xFDB
 22010                           fsr2h	equ	0xFDA
 22011                           fsr2l	equ	0xFD9
 22012                           status	equ	0xFD8
 22013                           
 22014 ;; *************** function _DHCP_WriteZeros *****************
 22015 ;; Defined at:
 22016 ;;		line 277 in file "../../TCPIP Library/source/dhcp_client.c"
 22017 ;; Parameters:    Size  Location     Type
 22018 ;;  length          2   23[COMRAM] unsigned int 
 22019 ;; Auto vars:     Size  Location     Type
 22020 ;;		None
 22021 ;; Return value:  Size  Location     Type
 22022 ;;                  1    wreg      void 
 22023 ;; Registers used:
 22024 ;;		wreg, status,2, status,0, cstack
 22025 ;; Tracked objects:
 22026 ;;		On entry : 0/0
 22027 ;;		On exit  : 0/0
 22028 ;;		Unchanged: 0/0
 22029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22030 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22033 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22034 ;;Total ram usage:        2 bytes
 22035 ;; Hardware stack levels used:    1
 22036 ;; Hardware stack levels required when called:   10
 22037 ;; This function calls:
 22038 ;;		_ETH_Write8
 22039 ;; This function is called by:
 22040 ;;		_DHCP_Request
 22041 ;; This function uses a non-reentrant model
 22042 ;;
 22043                           
 22044                           	psect	text85
 22045  00640C                     __ptext85:
 22046                           	opt stack 0
 22047  00640C                     _DHCP_WriteZeros:
 22048                           	opt stack 14
 22049                           
 22050                           ;dhcp_client.c: 279: while(length--)
 22051                           
 22052                           ; BSR set to: 14
 22053                           ;incstack = 0
 22054  00640C  D003               	goto	l8086
 22055  00640E                     l8084:
 22056                           
 22057                           ;dhcp_client.c: 280: {
 22058                           ;dhcp_client.c: 281: ETH_Write8(0);
 22059  00640E  0E00               	movlw	0
 22060  006410  EC55  F032         	call	_ETH_Write8
 22061  006414                     l8086:
 22062  006414  0618               	decf	DHCP_WriteZeros@length,f,c
 22063  006416  A0D8               	btfss	status,0,c
 22064  006418  0619               	decf	DHCP_WriteZeros@length+1,f,c
 22065  00641A  2818               	incf	DHCP_WriteZeros@length,w,c
 22066  00641C  E1F8               	bnz	l8084
 22067  00641E  2819               	incf	DHCP_WriteZeros@length+1,w,c
 22068  006420  E1F6               	bnz	l8084
 22069  006422  0012               	return		;funcret
 22070  006424                     __end_of_DHCP_WriteZeros:
 22071                           	opt stack 0
 22072                           tosu	equ	0xFFF
 22073                           tosh	equ	0xFFE
 22074                           tosl	equ	0xFFD
 22075                           pclath	equ	0xFFA
 22076                           tblptru	equ	0xFF8
 22077                           tblptrh	equ	0xFF7
 22078                           tblptrl	equ	0xFF6
 22079                           tablat	equ	0xFF5
 22080                           prodh	equ	0xFF4
 22081                           prodl	equ	0xFF3
 22082                           intcon	equ	0xFF2
 22083                           indf0	equ	0xFEF
 22084                           postinc0	equ	0xFEE
 22085                           fsr0h	equ	0xFEA
 22086                           fsr0l	equ	0xFE9
 22087                           wreg	equ	0xFE8
 22088                           indf1	equ	0xFE7
 22089                           postinc1	equ	0xFE6
 22090                           postdec1	equ	0xFE5
 22091                           plusw1	equ	0xFE3
 22092                           fsr1h	equ	0xFE2
 22093                           fsr1l	equ	0xFE1
 22094                           indf2	equ	0xFDF
 22095                           postinc2	equ	0xFDE
 22096                           postdec2	equ	0xFDD
 22097                           plusw2	equ	0xFDB
 22098                           fsr2h	equ	0xFDA
 22099                           fsr2l	equ	0xFD9
 22100                           status	equ	0xFD8
 22101                           
 22102 ;; *************** function _ETH_Write8 *****************
 22103 ;; Defined at:
 22104 ;;		line 465 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 22105 ;; Parameters:    Size  Location     Type
 22106 ;;  data            1    wreg     unsigned char 
 22107 ;; Auto vars:     Size  Location     Type
 22108 ;;  data            1   22[COMRAM] unsigned char 
 22109 ;; Return value:  Size  Location     Type
 22110 ;;                  1    wreg      void 
 22111 ;; Registers used:
 22112 ;;		wreg, status,2, cstack
 22113 ;; Tracked objects:
 22114 ;;		On entry : 0/0
 22115 ;;		On exit  : 0/0
 22116 ;;		Unchanged: 0/0
 22117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22119 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22121 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22122 ;;Total ram usage:        1 bytes
 22123 ;; Hardware stack levels used:    1
 22124 ;; Hardware stack levels required when called:    9
 22125 ;; This function calls:
 22126 ;;		_ETH_EdataWrite
 22127 ;; This function is called by:
 22128 ;;		_DHCP_Request
 22129 ;;		_DHCP_WriteZeros
 22130 ;;		_IPv4_Start
 22131 ;; This function uses a non-reentrant model
 22132 ;;
 22133                           
 22134                           	psect	text86
 22135  0064AA                     __ptext86:
 22136                           	opt stack 0
 22137  0064AA                     _ETH_Write8:
 22138                           	opt stack 17
 22139                           
 22140                           ;incstack = 0
 22141                           ;ETH_Write8@data stored from wreg
 22142  0064AA  6E17               	movwf	ETH_Write8@data,c
 22143                           
 22144                           ;j60_driver.c: 467: ETH_EdataWrite(data);
 22145  0064AC  5017               	movf	ETH_Write8@data,w,c
 22146  0064AE                     i41L__ptext87:
 22147                           	opt stack 0
 22148  0064AE                     i41L_ETH_EdataWrite:
 22149                           	opt stack 0
 22150  0064AE                     i41Ll7568:
 22151                           	opt stack 17
 22152  0064AE  CFE8 FF61          	movff	wreg,3937	;# 
 22153  0064B2                     i41Ll463:
 22154                           	opt stack 0
 22155  0064B2  0012               	return	
 22156  0064B4                     __end_of_ETH_Write8:
 22157                           	opt stack 0
 22158                           tosu	equ	0xFFF
 22159                           tosh	equ	0xFFE
 22160                           tosl	equ	0xFFD
 22161                           pclath	equ	0xFFA
 22162                           tblptru	equ	0xFF8
 22163                           tblptrh	equ	0xFF7
 22164                           tblptrl	equ	0xFF6
 22165                           tablat	equ	0xFF5
 22166                           prodh	equ	0xFF4
 22167                           prodl	equ	0xFF3
 22168                           intcon	equ	0xFF2
 22169                           indf0	equ	0xFEF
 22170                           postinc0	equ	0xFEE
 22171                           fsr0h	equ	0xFEA
 22172                           fsr0l	equ	0xFE9
 22173                           wreg	equ	0xFE8
 22174                           indf1	equ	0xFE7
 22175                           postinc1	equ	0xFE6
 22176                           postdec1	equ	0xFE5
 22177                           plusw1	equ	0xFE3
 22178                           fsr1h	equ	0xFE2
 22179                           fsr1l	equ	0xFE1
 22180                           indf2	equ	0xFDF
 22181                           postinc2	equ	0xFDE
 22182                           postdec2	equ	0xFDD
 22183                           plusw2	equ	0xFDB
 22184                           fsr2h	equ	0xFDA
 22185                           fsr2l	equ	0xFD9
 22186                           status	equ	0xFD8
 22187                           
 22188 ;; *************** function _ETH_EdataWrite *****************
 22189 ;; Defined at:
 22190 ;;		line 82 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 22191 ;; Parameters:    Size  Location     Type
 22192 ;;  d               1    wreg     unsigned char 
 22193 ;; Auto vars:     Size  Location     Type
 22194 ;;  d               1    0[COMRAM] unsigned char 
 22195 ;; Return value:  Size  Location     Type
 22196 ;;                  1    wreg      void 
 22197 ;; Registers used:
 22198 ;;		wreg
 22199 ;; Tracked objects:
 22200 ;;		On entry : 0/0
 22201 ;;		On exit  : 0/0
 22202 ;;		Unchanged: 0/0
 22203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22208 ;;Total ram usage:        0 bytes
 22209 ;; Hardware stack levels used:    1
 22210 ;; Hardware stack levels required when called:    8
 22211 ;; This function calls:
 22212 ;;		Nothing
 22213 ;; This function is called by:
 22214 ;;		_ETH_Write8
 22215 ;;		_ETH_Write16
 22216 ;;		_ETH_Write32
 22217 ;;		_ETH_WriteBlock
 22218 ;;		_ETH_WriteStart
 22219 ;;		_ETH_Insert
 22220 ;; This function uses a non-reentrant model
 22221 ;;
 22222                           
 22223                           	psect	text87
 22224  000000                     __ptext87:
 22225                           	opt stack 0
 22226  000000                     _ETH_EdataWrite:
 22227                           	opt stack 0
 22228  000000                     __end_of_ETH_EdataWrite:
 22229                           	opt stack 0
 22230                           tosu	equ	0xFFF
 22231                           tosh	equ	0xFFE
 22232                           tosl	equ	0xFFD
 22233                           pclath	equ	0xFFA
 22234                           tblptru	equ	0xFF8
 22235                           tblptrh	equ	0xFF7
 22236                           tblptrl	equ	0xFF6
 22237                           tablat	equ	0xFF5
 22238                           prodh	equ	0xFF4
 22239                           prodl	equ	0xFF3
 22240                           intcon	equ	0xFF2
 22241                           indf0	equ	0xFEF
 22242                           postinc0	equ	0xFEE
 22243                           fsr0h	equ	0xFEA
 22244                           fsr0l	equ	0xFE9
 22245                           wreg	equ	0xFE8
 22246                           indf1	equ	0xFE7
 22247                           postinc1	equ	0xFE6
 22248                           postdec1	equ	0xFE5
 22249                           plusw1	equ	0xFE3
 22250                           fsr1h	equ	0xFE2
 22251                           fsr1l	equ	0xFE1
 22252                           indf2	equ	0xFDF
 22253                           postinc2	equ	0xFDE
 22254                           postdec2	equ	0xFDD
 22255                           plusw2	equ	0xFDB
 22256                           fsr2h	equ	0xFDA
 22257                           fsr2l	equ	0xFD9
 22258                           status	equ	0xFD8
 22259                           
 22260 ;; *************** function _ARPV4_Update *****************
 22261 ;; Defined at:
 22262 ;;		line 179 in file "../../TCPIP Library/source/arpv4.c"
 22263 ;; Parameters:    Size  Location     Type
 22264 ;;		None
 22265 ;; Auto vars:     Size  Location     Type
 22266 ;;  x               1   24[COMRAM] unsigned char 
 22267 ;;  entryPointer    2   22[COMRAM] PTR struct .
 22268 ;;		 -> arpMap(104), 
 22269 ;; Return value:  Size  Location     Type
 22270 ;;                  1    wreg      void 
 22271 ;; Registers used:
 22272 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22273 ;; Tracked objects:
 22274 ;;		On entry : F/0
 22275 ;;		On exit  : F/0
 22276 ;;		Unchanged: F/0
 22277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22279 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22281 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22282 ;;Total ram usage:        3 bytes
 22283 ;; Hardware stack levels used:    1
 22284 ;; Hardware stack levels required when called:    8
 22285 ;; This function calls:
 22286 ;;		Nothing
 22287 ;; This function is called by:
 22288 ;;		_Network_Manage
 22289 ;; This function uses a non-reentrant model
 22290 ;;
 22291                           
 22292                           	psect	text88
 22293  0061E4                     __ptext88:
 22294                           	opt stack 0
 22295  0061E4                     _ARPV4_Update:
 22296                           	opt stack 21
 22297                           
 22298                           ; BSR set to: 0
 22299                           ;arpv4.c: 181: arpMap_t *entryPointer = arpMap;
 22300                           
 22301                           ;incstack = 0
 22302  0061E4  0E00               	movlw	low _arpMap
 22303  0061E6  6E17               	movwf	ARPV4_Update@entryPointer,c
 22304  0061E8  0E03               	movlw	high _arpMap
 22305  0061EA  6E18               	movwf	ARPV4_Update@entryPointer+1,c
 22306                           
 22307                           ; BSR set to: 0
 22308                           ;arpv4.c: 182: for(uint8_t x=0; x < 8; x++)
 22309  0061EC  6A19               	clrf	ARPV4_Update@x,c
 22310  0061EE                     l9518:
 22311                           
 22312                           ; BSR set to: 0
 22313                           ;arpv4.c: 183: {
 22314                           ;arpv4.c: 184: entryPointer->age ++;
 22315  0061EE  EE20 F00C          	lfsr	2,12
 22316  0061F2  5017               	movf	ARPV4_Update@entryPointer,w,c
 22317  0061F4  26D9               	addwf	fsr2l,f,c
 22318  0061F6  5018               	movf	ARPV4_Update@entryPointer+1,w,c
 22319  0061F8  22DA               	addwfc	fsr2h,f,c
 22320  0061FA  2ADF               	incf	indf2,f,c
 22321                           
 22322                           ; BSR set to: 0
 22323                           ;arpv4.c: 185: entryPointer ++;
 22324  0061FC  0E0D               	movlw	13
 22325  0061FE  2617               	addwf	ARPV4_Update@entryPointer,f,c
 22326  006200  0E00               	movlw	0
 22327  006202  2218               	addwfc	ARPV4_Update@entryPointer+1,f,c
 22328                           
 22329                           ; BSR set to: 0
 22330  006204  2A19               	incf	ARPV4_Update@x,f,c
 22331                           
 22332                           ; BSR set to: 0
 22333  006206  0E07               	movlw	7
 22334  006208  6419               	cpfsgt	ARPV4_Update@x,c
 22335  00620A  D7F1               	goto	l9518
 22336  00620C  0C07               	retlw	7
 22337  00620E                     __end_of_ARPV4_Update:
 22338                           	opt stack 0
 22339                           tosu	equ	0xFFF
 22340                           tosh	equ	0xFFE
 22341                           tosl	equ	0xFFD
 22342                           pclath	equ	0xFFA
 22343                           tblptru	equ	0xFF8
 22344                           tblptrh	equ	0xFF7
 22345                           tblptrl	equ	0xFF6
 22346                           tablat	equ	0xFF5
 22347                           prodh	equ	0xFF4
 22348                           prodl	equ	0xFF3
 22349                           intcon	equ	0xFF2
 22350                           indf0	equ	0xFEF
 22351                           postinc0	equ	0xFEE
 22352                           fsr0h	equ	0xFEA
 22353                           fsr0l	equ	0xFE9
 22354                           wreg	equ	0xFE8
 22355                           indf1	equ	0xFE7
 22356                           postinc1	equ	0xFE6
 22357                           postdec1	equ	0xFE5
 22358                           plusw1	equ	0xFE3
 22359                           fsr1h	equ	0xFE2
 22360                           fsr1l	equ	0xFE1
 22361                           indf2	equ	0xFDF
 22362                           postinc2	equ	0xFDE
 22363                           postdec2	equ	0xFDD
 22364                           plusw2	equ	0xFDB
 22365                           fsr2h	equ	0xFDA
 22366                           fsr2l	equ	0xFD9
 22367                           status	equ	0xFD8
 22368                           
 22369 ;; *************** function _Network_Init *****************
 22370 ;; Defined at:
 22371 ;;		line 65 in file "../../TCPIP Library/source/network.c"
 22372 ;; Parameters:    Size  Location     Type
 22373 ;;		None
 22374 ;; Auto vars:     Size  Location     Type
 22375 ;;		None
 22376 ;; Return value:  Size  Location     Type
 22377 ;;                  1    wreg      void 
 22378 ;; Registers used:
 22379 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22380 ;; Tracked objects:
 22381 ;;		On entry : 0/2
 22382 ;;		On exit  : F/1
 22383 ;;		Unchanged: 0/0
 22384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22389 ;;Total ram usage:        0 bytes
 22390 ;; Hardware stack levels used:    1
 22391 ;; Hardware stack levels required when called:   13
 22392 ;; This function calls:
 22393 ;;		_ARPV4_Init
 22394 ;;		_ETH_Init
 22395 ;;		_IPV4_Init
 22396 ;;		_TCP_Init
 22397 ;;		_time
 22398 ;; This function is called by:
 22399 ;;		_main
 22400 ;; This function uses a non-reentrant model
 22401 ;;
 22402                           
 22403                           	psect	text89
 22404  0062CA                     __ptext89:
 22405                           	opt stack 0
 22406  0062CA                     _Network_Init:
 22407                           	opt stack 17
 22408                           
 22409                           ;network.c: 67: ETH_Init();
 22410                           
 22411                           ; BSR set to: 0
 22412                           ;incstack = 0
 22413  0062CA  ECDD  F024         	call	_ETH_Init	;wreg free
 22414                           
 22415                           ; BSR set to: 14
 22416                           ;network.c: 68: ARPV4_Init();
 22417  0062CE  ECF9  F031         	call	_ARPV4_Init	;wreg free
 22418                           
 22419                           ; BSR set to: 14
 22420                           ;network.c: 69: IPV4_Init();
 22421  0062D2  EC5A  F032         	call	_IPV4_Init	;wreg free
 22422                           
 22423                           ; BSR set to: 14
 22424                           ;network.c: 70: TCP_Init();
 22425  0062D6  ECEC  F031         	call	_TCP_Init	;wreg free
 22426                           
 22427                           ; BSR set to: 2
 22428                           ;network.c: 72: time(&arpTimer);
 22429  0062DA  0EE6               	movlw	low _arpTimer
 22430  0062DC  6E17               	movwf	time@t,c
 22431  0062DE  0E01               	movlw	high _arpTimer
 22432  0062E0  6E18               	movwf	time@t+1,c
 22433  0062E2  EC72  F02D         	call	_time	;wreg free
 22434                           
 22435                           ;network.c: 73: arpTimer += 10;
 22436  0062E6  EC8A  F02A         	call	PL633	;call to abstracted procedure
 22437                           
 22438                           ; BSR set to: 1
 22439  0062EA  0C00               	retlw	0	;funcret
 22440  0062EC                     __end_of_Network_Init:
 22441                           	opt stack 0
 22442                           tosu	equ	0xFFF
 22443                           tosh	equ	0xFFE
 22444                           tosl	equ	0xFFD
 22445                           pclath	equ	0xFFA
 22446                           tblptru	equ	0xFF8
 22447                           tblptrh	equ	0xFF7
 22448                           tblptrl	equ	0xFF6
 22449                           tablat	equ	0xFF5
 22450                           prodh	equ	0xFF4
 22451                           prodl	equ	0xFF3
 22452                           intcon	equ	0xFF2
 22453                           indf0	equ	0xFEF
 22454                           postinc0	equ	0xFEE
 22455                           fsr0h	equ	0xFEA
 22456                           fsr0l	equ	0xFE9
 22457                           wreg	equ	0xFE8
 22458                           indf1	equ	0xFE7
 22459                           postinc1	equ	0xFE6
 22460                           postdec1	equ	0xFE5
 22461                           plusw1	equ	0xFE3
 22462                           fsr1h	equ	0xFE2
 22463                           fsr1l	equ	0xFE1
 22464                           indf2	equ	0xFDF
 22465                           postinc2	equ	0xFDE
 22466                           postdec2	equ	0xFDD
 22467                           plusw2	equ	0xFDB
 22468                           fsr2h	equ	0xFDA
 22469                           fsr2l	equ	0xFD9
 22470                           status	equ	0xFD8
 22471                           
 22472 ;; *************** function _time *****************
 22473 ;; Defined at:
 22474 ;;		line 198 in file "../board_support_package/picdem2_net/rtcc.c"
 22475 ;; Parameters:    Size  Location     Type
 22476 ;;  t               2   22[COMRAM] PTR long 
 22477 ;;		 -> main@t(4), Network_Manage@now(4), arpTimer(4), NULL(0), 
 22478 ;; Auto vars:     Size  Location     Type
 22479 ;;  the_time        4   27[COMRAM] long 
 22480 ;;  gie_val         1   26[COMRAM] unsigned char 
 22481 ;; Return value:  Size  Location     Type
 22482 ;;                  4   22[COMRAM] long 
 22483 ;; Registers used:
 22484 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22485 ;; Tracked objects:
 22486 ;;		On entry : 0/1
 22487 ;;		On exit  : 0/0
 22488 ;;		Unchanged: 0/0
 22489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22490 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22491 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22493 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22494 ;;Total ram usage:        9 bytes
 22495 ;; Hardware stack levels used:    1
 22496 ;; Hardware stack levels required when called:    8
 22497 ;; This function calls:
 22498 ;;		Nothing
 22499 ;; This function is called by:
 22500 ;;		_Network_Init
 22501 ;;		_Network_Manage
 22502 ;;		_SYSLOG_Init
 22503 ;;		_SYSLOG_Write
 22504 ;;		_main
 22505 ;; This function uses a non-reentrant model
 22506 ;;
 22507                           
 22508                           	psect	text90
 22509  005AE4                     __ptext90:
 22510                           	opt stack 0
 22511  005AE4                     _time:
 22512                           	opt stack 22
 22513                           
 22514                           ;rtcc.c: 200: bool gie_val;
 22515                           ;rtcc.c: 201: time_t the_time;
 22516                           ;rtcc.c: 203: gie_val = GIE;
 22517                           
 22518                           ; BSR set to: 1
 22519                           ;incstack = 0
 22520  005AE4  0E00               	movlw	0
 22521  005AE6  BEF2               	btfsc	intcon,7,c	;volatile
 22522  005AE8  0E01               	movlw	1
 22523  005AEA  6E1B               	movwf	time@gie_val,c
 22524                           
 22525                           ;rtcc.c: 204: GIE = 0;
 22526  005AEC  9EF2               	bcf	intcon,7,c	;volatile
 22527                           
 22528                           ;rtcc.c: 205: the_time = deviceTime;
 22529  005AEE  C2D4  F01C         	movff	_deviceTime,time@the_time	;volatile
 22530  005AF2  C2D5  F01D         	movff	_deviceTime+1,time@the_time+1	;volatile
 22531  005AF6  C2D6  F01E         	movff	_deviceTime+2,time@the_time+2	;volatile
 22532  005AFA  C2D7  F01F         	movff	_deviceTime+3,time@the_time+3	;volatile
 22533                           
 22534                           ;rtcc.c: 206: GIE = gie_val;
 22535  005AFE  A01B               	btfss	time@gie_val,0,c
 22536  005B00  D002               	goto	u11050
 22537  005B02  8EF2               	bsf	intcon,7,c	;volatile
 22538  005B04  D001               	goto	l7960
 22539  005B06                     u11050:
 22540  005B06  9EF2               	bcf	intcon,7,c	;volatile
 22541  005B08                     l7960:
 22542                           
 22543                           ;rtcc.c: 208: if(t)
 22544  005B08  5017               	movf	time@t,w,c
 22545  005B0A  1018               	iorwf	time@t+1,w,c
 22546  005B0C  E00C               	bz	l7964
 22547                           
 22548                           ;rtcc.c: 209: {
 22549                           ;rtcc.c: 210: *t = the_time;
 22550  005B0E  C017  FFD9         	movff	time@t,fsr2l
 22551  005B12  C018  FFDA         	movff	time@t+1,fsr2h
 22552  005B16  C01C  FFDE         	movff	time@the_time,postinc2
 22553  005B1A  C01D  FFDE         	movff	time@the_time+1,postinc2
 22554  005B1E  C01E  FFDE         	movff	time@the_time+2,postinc2
 22555  005B22  C01F  FFDE         	movff	time@the_time+3,postinc2
 22556  005B26                     l7964:
 22557                           
 22558                           ;rtcc.c: 211: }
 22559                           ;rtcc.c: 213: return (the_time);
 22560  005B26  C01C  F017         	movff	time@the_time,?_time
 22561  005B2A  C01D  F018         	movff	time@the_time+1,?_time+1
 22562  005B2E  C01E  F019         	movff	time@the_time+2,?_time+2
 22563  005B32  C01F  F01A         	movff	time@the_time+3,?_time+3
 22564  005B36  0012               	return		;funcret
 22565  005B38                     __end_of_time:
 22566                           	opt stack 0
 22567                           tosu	equ	0xFFF
 22568                           tosh	equ	0xFFE
 22569                           tosl	equ	0xFFD
 22570                           pclath	equ	0xFFA
 22571                           tblptru	equ	0xFF8
 22572                           tblptrh	equ	0xFF7
 22573                           tblptrl	equ	0xFF6
 22574                           tablat	equ	0xFF5
 22575                           prodh	equ	0xFF4
 22576                           prodl	equ	0xFF3
 22577                           intcon	equ	0xFF2
 22578                           indf0	equ	0xFEF
 22579                           postinc0	equ	0xFEE
 22580                           fsr0h	equ	0xFEA
 22581                           fsr0l	equ	0xFE9
 22582                           wreg	equ	0xFE8
 22583                           indf1	equ	0xFE7
 22584                           postinc1	equ	0xFE6
 22585                           postdec1	equ	0xFE5
 22586                           plusw1	equ	0xFE3
 22587                           fsr1h	equ	0xFE2
 22588                           fsr1l	equ	0xFE1
 22589                           indf2	equ	0xFDF
 22590                           postinc2	equ	0xFDE
 22591                           postdec2	equ	0xFDD
 22592                           plusw2	equ	0xFDB
 22593                           fsr2h	equ	0xFDA
 22594                           fsr2l	equ	0xFD9
 22595                           status	equ	0xFD8
 22596                           
 22597 ;; *************** function _TCP_Init *****************
 22598 ;; Defined at:
 22599 ;;		line 1173 in file "../../TCPIP Library/source/tcpv4.c"
 22600 ;; Parameters:    Size  Location     Type
 22601 ;;		None
 22602 ;; Auto vars:     Size  Location     Type
 22603 ;;		None
 22604 ;; Return value:  Size  Location     Type
 22605 ;;                  1    wreg      void 
 22606 ;; Registers used:
 22607 ;;		wreg, status,2
 22608 ;; Tracked objects:
 22609 ;;		On entry : F/E
 22610 ;;		On exit  : F/2
 22611 ;;		Unchanged: 0/0
 22612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22617 ;;Total ram usage:        0 bytes
 22618 ;; Hardware stack levels used:    1
 22619 ;; Hardware stack levels required when called:    8
 22620 ;; This function calls:
 22621 ;;		Nothing
 22622 ;; This function is called by:
 22623 ;;		_Network_Init
 22624 ;; This function uses a non-reentrant model
 22625 ;;
 22626                           
 22627                           	psect	text91
 22628  0063D8                     __ptext91:
 22629                           	opt stack 0
 22630  0063D8                     _TCP_Init:
 22631                           	opt stack 21
 22632                           
 22633                           ; BSR set to: 14
 22634                           ;tcpv4.c: 1175: tcbList = (0);
 22635                           
 22636                           ;incstack = 0
 22637  0063D8  6A41               	clrf	_tcbList,c
 22638  0063DA  6A42               	clrf	_tcbList+1,c
 22639                           
 22640                           ;tcpv4.c: 1176: tcbListSize = 0;
 22641  0063DC  6A47               	clrf	_tcbListSize,c
 22642                           
 22643                           ; BSR set to: 14
 22644                           ;tcpv4.c: 1177: nextAvailablePort = (1024u);
 22645  0063DE  0E04               	movlw	4
 22646  0063E0  6E3E               	movwf	_nextAvailablePort+1,c
 22647  0063E2  0E00               	movlw	0
 22648  0063E4  6A3D               	clrf	_nextAvailablePort,c
 22649                           
 22650                           ; BSR set to: 14
 22651                           ;tcpv4.c: 1178: nextSequenceNumber = 0;
 22652  0063E6  0102               	movlb	2	; () banked
 22653  0063E8  6B24               	clrf	_nextSequenceNumber& (0+255),b
 22654  0063EA  6B25               	clrf	(_nextSequenceNumber+1)& (0+255),b
 22655  0063EC  6B26               	clrf	(_nextSequenceNumber+2)& (0+255),b
 22656  0063EE  6B27               	clrf	(_nextSequenceNumber+3)& (0+255),b
 22657                           
 22658                           ; BSR set to: 2
 22659  0063F0  0012               	return		;funcret
 22660  0063F2                     __end_of_TCP_Init:
 22661                           	opt stack 0
 22662                           tosu	equ	0xFFF
 22663                           tosh	equ	0xFFE
 22664                           tosl	equ	0xFFD
 22665                           pclath	equ	0xFFA
 22666                           tblptru	equ	0xFF8
 22667                           tblptrh	equ	0xFF7
 22668                           tblptrl	equ	0xFF6
 22669                           tablat	equ	0xFF5
 22670                           prodh	equ	0xFF4
 22671                           prodl	equ	0xFF3
 22672                           intcon	equ	0xFF2
 22673                           indf0	equ	0xFEF
 22674                           postinc0	equ	0xFEE
 22675                           fsr0h	equ	0xFEA
 22676                           fsr0l	equ	0xFE9
 22677                           wreg	equ	0xFE8
 22678                           indf1	equ	0xFE7
 22679                           postinc1	equ	0xFE6
 22680                           postdec1	equ	0xFE5
 22681                           plusw1	equ	0xFE3
 22682                           fsr1h	equ	0xFE2
 22683                           fsr1l	equ	0xFE1
 22684                           indf2	equ	0xFDF
 22685                           postinc2	equ	0xFDE
 22686                           postdec2	equ	0xFDD
 22687                           plusw2	equ	0xFDB
 22688                           fsr2h	equ	0xFDA
 22689                           fsr2l	equ	0xFD9
 22690                           status	equ	0xFD8
 22691                           
 22692 ;; *************** function _IPV4_Init *****************
 22693 ;; Defined at:
 22694 ;;		line 78 in file "../../TCPIP Library/source/ipv4.c"
 22695 ;; Parameters:    Size  Location     Type
 22696 ;;		None
 22697 ;; Auto vars:     Size  Location     Type
 22698 ;;		None
 22699 ;; Return value:  Size  Location     Type
 22700 ;;                  1    wreg      void 
 22701 ;; Registers used:
 22702 ;;		None
 22703 ;; Tracked objects:
 22704 ;;		On entry : F/E
 22705 ;;		On exit  : F/E
 22706 ;;		Unchanged: F/0
 22707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22712 ;;Total ram usage:        0 bytes
 22713 ;; Hardware stack levels used:    1
 22714 ;; Hardware stack levels required when called:    8
 22715 ;; This function calls:
 22716 ;;		Nothing
 22717 ;; This function is called by:
 22718 ;;		_Network_Init
 22719 ;; This function uses a non-reentrant model
 22720 ;;
 22721                           
 22722                           	psect	text92
 22723  0064B4                     __ptext92:
 22724                           	opt stack 0
 22725  0064B4                     _IPV4_Init:
 22726                           	opt stack 21
 22727                           
 22728                           ; BSR set to: 14
 22729                           ;ipv4.c: 80: ipv4Address = 0;
 22730                           
 22731                           ; BSR set to: 2
 22732                           ;incstack = 0
 22733  0064B4  6A33               	clrf	_ipv4Address,c
 22734  0064B6  6A34               	clrf	_ipv4Address+1,c
 22735  0064B8  6A35               	clrf	_ipv4Address+2,c
 22736  0064BA  6A36               	clrf	_ipv4Address+3,c
 22737                           
 22738                           ; BSR set to: 14
 22739  0064BC  0012               	return		;funcret
 22740  0064BE                     __end_of_IPV4_Init:
 22741                           	opt stack 0
 22742                           tosu	equ	0xFFF
 22743                           tosh	equ	0xFFE
 22744                           tosl	equ	0xFFD
 22745                           pclath	equ	0xFFA
 22746                           tblptru	equ	0xFF8
 22747                           tblptrh	equ	0xFF7
 22748                           tblptrl	equ	0xFF6
 22749                           tablat	equ	0xFF5
 22750                           prodh	equ	0xFF4
 22751                           prodl	equ	0xFF3
 22752                           intcon	equ	0xFF2
 22753                           indf0	equ	0xFEF
 22754                           postinc0	equ	0xFEE
 22755                           fsr0h	equ	0xFEA
 22756                           fsr0l	equ	0xFE9
 22757                           wreg	equ	0xFE8
 22758                           indf1	equ	0xFE7
 22759                           postinc1	equ	0xFE6
 22760                           postdec1	equ	0xFE5
 22761                           plusw1	equ	0xFE3
 22762                           fsr1h	equ	0xFE2
 22763                           fsr1l	equ	0xFE1
 22764                           indf2	equ	0xFDF
 22765                           postinc2	equ	0xFDE
 22766                           postdec2	equ	0xFDD
 22767                           plusw2	equ	0xFDB
 22768                           fsr2h	equ	0xFDA
 22769                           fsr2l	equ	0xFD9
 22770                           status	equ	0xFD8
 22771                           
 22772 ;; *************** function _ETH_Init *****************
 22773 ;; Defined at:
 22774 ;;		line 100 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 22775 ;; Parameters:    Size  Location     Type
 22776 ;;		None
 22777 ;; Auto vars:     Size  Location     Type
 22778 ;;  phycon1_valu    2    0        unsigned int 
 22779 ;;  mac             1   44[COMRAM] PTR const struct .
 22780 ;;		 -> macAddress(6), 
 22781 ;; Return value:  Size  Location     Type
 22782 ;;                  1    wreg      void 
 22783 ;; Registers used:
 22784 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22785 ;; Tracked objects:
 22786 ;;		On entry : 0/2
 22787 ;;		On exit  : F/E
 22788 ;;		Unchanged: 0/0
 22789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22791 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22792 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22793 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22794 ;;Total ram usage:        4 bytes
 22795 ;; Hardware stack levels used:    1
 22796 ;; Hardware stack levels required when called:   12
 22797 ;; This function calls:
 22798 ;;		_ETH_CheckLinkUp
 22799 ;;		_MAC_getAddress
 22800 ;;		_PHY_Write
 22801 ;; This function is called by:
 22802 ;;		_Network_Init
 22803 ;; This function uses a non-reentrant model
 22804 ;;
 22805                           
 22806                           	psect	text93
 22807  0049BA                     __ptext93:
 22808                           	opt stack 0
 22809  0049BA                     _ETH_Init:
 22810                           	opt stack 17
 22811                           
 22812                           ;j60_driver.c: 102: const mac48Address_t *mac;
 22813                           ;j60_driver.c: 103: uint16_t phycon1_value;
 22814                           ;j60_driver.c: 106: ethData.error = 0;
 22815                           
 22816                           ; BSR set to: 14
 22817                           ;incstack = 0
 22818  0049BA  0101               	movlb	1	; () banked
 22819  0049BC  91BD               	bcf	_ethData& (0+255),0,b	;volatile
 22820                           
 22821                           ;j60_driver.c: 107: ethData.up = 0;
 22822  0049BE  95BD               	bcf	_ethData& (0+255),2,b	;volatile
 22823                           
 22824                           ;j60_driver.c: 108: ethData.linkChange = 0;
 22825  0049C0  99BD               	bcf	_ethData& (0+255),4,b	;volatile
 22826                           
 22827                           ;j60_driver.c: 109: ethData.bufferBusy = 0;
 22828  0049C2  9BBD               	bcf	_ethData& (0+255),5,b	;volatile
 22829                           
 22830                           ;j60_driver.c: 110: ethData.saveRDPT = 0;
 22831  0049C4  6BC0               	clrf	(_ethData+3)& (0+255),b	;volatile
 22832  0049C6  6BC1               	clrf	(_ethData+4)& (0+255),b	;volatile
 22833                           
 22834                           ;j60_driver.c: 112: nextPacketPointer = (0);
 22835  0049C8  6A3F               	clrf	_nextPacketPointer,c
 22836  0049CA  6A40               	clrf	_nextPacketPointer+1,c
 22837                           
 22838                           ; BSR set to: 1
 22839                           ;j60_driver.c: 115: ECON2 = 0xA0;
 22840  0049CC  0EA0               	movlw	160
 22841  0049CE  010E               	movlb	14	; () banked
 22842  0049D0  6FFE               	movwf	254,b	;volatile
 22843  0049D2                     l470:
 22844                           
 22845                           ; BSR set to: 14
 22846  0049D2  A1FD               	btfss	253,0,b	;volatile
 22847  0049D4  D7FE               	goto	l470
 22848                           
 22849                           ; BSR set to: 14
 22850                           ;j60_driver.c: 122: MACON1 = 0b00001101; __nop();
 22851  0049D6  0E0D               	movlw	13
 22852  0049D8  6FA0               	movwf	160,b	;volatile
 22853                           
 22854                           ; BSR set to: 14
 22855  0049DA  F000               	nop	
 22856                           
 22857                           ;j60_driver.c: 123: MACON3 = 0b10110011; __nop();
 22858  0049DC  0EB3               	movlw	179
 22859  0049DE  010E               	movlb	14	; () banked
 22860  0049E0  6FA2               	movwf	162,b	;volatile
 22861                           
 22862                           ; BSR set to: 14
 22863  0049E2  F000               	nop	
 22864                           
 22865                           ;j60_driver.c: 124: MACON4 = 0b00000000; __nop();
 22866  0049E4  6BA3               	clrf	163,b	;volatile
 22867                           
 22868                           ; BSR set to: 14
 22869  0049E6  F000               	nop	
 22870                           
 22871                           ;j60_driver.c: 125: MABBIPG = 0x15; __nop();
 22872  0049E8  0E15               	movlw	21
 22873  0049EA  6FA4               	movwf	164,b	;volatile
 22874                           
 22875                           ; BSR set to: 14
 22876  0049EC  F000               	nop	
 22877                           
 22878                           ;j60_driver.c: 126: MAIPG = 0x0012; __nop();
 22879  0049EE  6BA7               	clrf	167,b	;volatile
 22880  0049F0  0E12               	movlw	18
 22881  0049F2  6FA6               	movwf	166,b	;volatile
 22882                           
 22883                           ; BSR set to: 14
 22884  0049F4  F000               	nop	
 22885                           
 22886                           ;j60_driver.c: 142: ETXST = ((8192) - (1518));
 22887  0049F6  0E1A               	movlw	26
 22888  0049F8  6FE5               	movwf	229,b	;volatile
 22889  0049FA  0E12               	movlw	18
 22890  0049FC  6FE4               	movwf	228,b	;volatile
 22891                           
 22892                           ;j60_driver.c: 143: ETXND = ((8192)-1);
 22893  0049FE  0E1F               	movlw	31
 22894  004A00  6FE7               	movwf	231,b	;volatile
 22895  004A02  69E6               	setf	230,b	;volatile
 22896                           
 22897                           ; BSR set to: 14
 22898                           ;j60_driver.c: 144: ERXST = (0);
 22899  004A04  6BE8               	clrf	232,b	;volatile
 22900  004A06  6BE9               	clrf	233,b	;volatile
 22901                           
 22902                           ;j60_driver.c: 145: ERXND = (((8192) - (1518)) - 2);
 22903  004A08  0E1A               	movlw	26
 22904  004A0A  6FEB               	movwf	235,b	;volatile
 22905  004A0C  0E10               	movlw	16
 22906  004A0E  6FEA               	movwf	234,b	;volatile
 22907                           
 22908                           ; BSR set to: 14
 22909                           ;j60_driver.c: 148: ERDPT = (0);
 22910  004A10  6A7A               	clrf	3962,c	;volatile
 22911  004A12  6A7B               	clrf	3963,c	;volatile
 22912                           
 22913                           ;j60_driver.c: 149: EWRPT = ((8192) - (1518));
 22914  004A14  EC03  F026         	call	PL715	;call to abstracted procedure
 22915                           
 22916                           ; BSR set to: 14
 22917                           ;j60_driver.c: 152: ERXRDPT = -1;
 22918  004A18  69EC               	setf	236,b	;volatile
 22919  004A1A  69ED               	setf	237,b	;volatile
 22920                           
 22921                           ;j60_driver.c: 154: MAMXFL = (1518);
 22922  004A1C  0E05               	movlw	5
 22923  004A1E  6FAB               	movwf	171,b	;volatile
 22924  004A20  0EEE               	movlw	238
 22925  004A22  6FAA               	movwf	170,b	;volatile
 22926                           
 22927                           ; BSR set to: 14
 22928                           ;j60_driver.c: 157: mac = MAC_getAddress();
 22929  004A24  EC63  F032         	call	_MAC_getAddress	;wreg free
 22930  004A28  6E2D               	movwf	ETH_Init@mac,c
 22931                           
 22932                           ; BSR set to: 14
 22933                           ;j60_driver.c: 158: MAADR1 = mac->mac_array[0]; __nop();
 22934  004A2A  C02D  FFF6         	movff	ETH_Init@mac,tblptrl
 22935  004A2E                     	if	1	;There is more than 1 active tblptr byte
 22936  004A2E  D851               	call	PL479	;call to abstracted procedure
 22937  004A30  CFF5 FE84          	movff	tablat,3716	;volatile
 22938                           
 22939                           ; BSR set to: 14
 22940  004A34  F000               	nop	
 22941                           
 22942                           ;j60_driver.c: 159: MAADR2 = mac->mac_array[1]; __nop();
 22943  004A36  C02D  F02A         	movff	ETH_Init@mac,??_ETH_Init
 22944  004A3A  2A2A               	incf	??_ETH_Init,f,c
 22945  004A3C  C02A  FFF6         	movff	??_ETH_Init,tblptrl
 22946  004A40                     	if	1	;There is more than 1 active tblptr byte
 22947  004A40  D848               	call	PL479	;call to abstracted procedure
 22948  004A42  CFF5 FE85          	movff	tablat,3717	;volatile
 22949  004A46  F000               	nop	
 22950                           
 22951                           ;j60_driver.c: 160: MAADR3 = mac->mac_array[2]; __nop();
 22952  004A48  C02D  F02A         	movff	ETH_Init@mac,??_ETH_Init
 22953  004A4C  0E02               	movlw	2
 22954  004A4E  D847               	call	PL495	;call to abstracted procedure
 22955  004A50  D840               	call	PL479	;call to abstracted procedure
 22956  004A52  CFF5 FE82          	movff	tablat,3714	;volatile
 22957  004A56  F000               	nop	
 22958                           
 22959                           ;j60_driver.c: 161: MAADR4 = mac->mac_array[3]; __nop();
 22960  004A58  C02D  F02A         	movff	ETH_Init@mac,??_ETH_Init
 22961  004A5C  0E03               	movlw	3
 22962  004A5E  D83F               	call	PL495	;call to abstracted procedure
 22963  004A60  D838               	call	PL479	;call to abstracted procedure
 22964  004A62  CFF5 FE83          	movff	tablat,3715	;volatile
 22965  004A66  F000               	nop	
 22966                           
 22967                           ;j60_driver.c: 162: MAADR5 = mac->mac_array[4]; __nop();
 22968  004A68  C02D  F02A         	movff	ETH_Init@mac,??_ETH_Init
 22969  004A6C  0E04               	movlw	4
 22970  004A6E  D837               	call	PL495	;call to abstracted procedure
 22971  004A70  D830               	call	PL479	;call to abstracted procedure
 22972  004A72  CFF5 FE80          	movff	tablat,3712	;volatile
 22973  004A76  F000               	nop	
 22974                           
 22975                           ;j60_driver.c: 163: MAADR6 = mac->mac_array[5]; __nop();
 22976  004A78  C02D  F02A         	movff	ETH_Init@mac,??_ETH_Init
 22977  004A7C  0E05               	movlw	5
 22978  004A7E  D82F               	call	PL495	;call to abstracted procedure
 22979  004A80  D828               	call	PL479	;call to abstracted procedure
 22980  004A82  CFF5 FE81          	movff	tablat,3713	;volatile
 22981  004A86  F000               	nop	
 22982                           
 22983                           ;j60_driver.c: 167: ERXFCON = 0b10101011;
 22984  004A88  0EAB               	movlw	171
 22985  004A8A  010E               	movlb	14	; () banked
 22986  004A8C  6FD8               	movwf	216,b	;volatile
 22987                           
 22988                           ; BSR set to: 14
 22989                           ;j60_driver.c: 170: ECON1=0x04;
 22990  004A8E  0E04               	movlw	4
 22991  004A90  6ED2               	movwf	4050,c	;volatile
 22992                           
 22993                           ;j60_driver.c: 173: PHY_Write(PHCON1, phycon1_value);
 22994  004A92  0E01               	movlw	1
 22995  004A94  6E1A               	movwf	PHY_Write@data+1,c
 22996  004A96  0E00               	movlw	0
 22997  004A98  6A19               	clrf	PHY_Write@data,c
 22998  004A9A  EC9C  F02D         	call	_PHY_Write
 22999                           
 23000                           ;j60_driver.c: 174: PHY_Write(PHCON2, 0x0110);
 23001  004A9E  0E01               	movlw	1
 23002  004AA0  6E1A               	movwf	PHY_Write@data+1,c
 23003  004AA2  0E10               	movlw	16
 23004  004AA4  6E19               	movwf	PHY_Write@data,c
 23005  004AA6  EC9C  F02D         	call	_PHY_Write
 23006                           
 23007                           ;j60_driver.c: 175: PHY_Write(PHLCON, 0b01110101001010);
 23008  004AAA  0E1D               	movlw	29
 23009  004AAC  6E1A               	movwf	PHY_Write@data+1,c
 23010  004AAE  0E4A               	movlw	74
 23011  004AB0  6E19               	movwf	PHY_Write@data,c
 23012  004AB2  0E14               	movlw	20
 23013  004AB4  EC9C  F02D         	call	_PHY_Write
 23014                           
 23015                           ;j60_driver.c: 178: ETH_CheckLinkUp();
 23016  004AB8  EC71  F030         	call	_ETH_CheckLinkUp	;wreg free
 23017                           
 23018                           ;j60_driver.c: 181: EIE = 0b01011001;
 23019  004ABC  0E59               	movlw	89
 23020  004ABE  010E               	movlb	14	; () banked
 23021  004AC0  6FFB               	movwf	251,b	;volatile
 23022                           
 23023                           ; BSR set to: 14
 23024                           ;j60_driver.c: 182: PHY_Write(PHIE,0x0012);
 23025  004AC2  6A1A               	clrf	PHY_Write@data+1,c
 23026  004AC4  0E12               	movlw	18
 23027  004AC6  6E19               	movwf	PHY_Write@data,c
 23028  004AC8  EC9C  F02D         	call	_PHY_Write
 23029                           
 23030                           ; BSR set to: 14
 23031                           ;j60_driver.c: 185: IPR2bits.ETHIP = 0;
 23032  004ACC  9AA2               	bcf	4002,5,c	;volatile
 23033                           
 23034                           ; BSR set to: 14
 23035                           ;j60_driver.c: 186: PIE2bits.ETHIE = 1;
 23036  004ACE  8AA0               	bsf	4000,5,c	;volatile
 23037                           
 23038                           ; BSR set to: 14
 23039  004AD0  0012               	return		;funcret
 23040  004AD2                     __end_of_ETH_Init:
 23041                           	opt stack 0
 23042  004AD2                     PL479:
 23043                           	opt stack 17
 23044  004AD2  0E10               	movlw	high __smallconst
 23045  004AD4  6EF7               	movwf	tblptrh,c
 23046  004AD6                     	endif
 23047  004AD6                     	if	0	;tblptru may be non-zero
 23048  004AD6                     	endif
 23049  004AD6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23050  004AD6  0E00               	movlw	low (__smallconst shr (0+16))
 23051  004AD8  6EF8               	movwf	tblptru,c
 23052  004ADA                     	endif
 23053  004ADA  0008               	tblrd		*
 23054  004ADC  0012               	return	
 23055  004ADE                     __end_ofPL479:
 23056                           	opt stack 0
 23057  004ADE                     PL495:
 23058                           	opt stack 17
 23059  004ADE  262A               	addwf	??_ETH_Init,f,c
 23060  004AE0  C02A  FFF6         	movff	??_ETH_Init,tblptrl
 23061  004AE4                     	if	1	;There is more than 1 active tblptr byte
 23062  004AE4  0012               	return	
 23063  004AE6                     __end_ofPL495:
 23064                           	opt stack 0
 23065                           tosu	equ	0xFFF
 23066                           tosh	equ	0xFFE
 23067                           tosl	equ	0xFFD
 23068                           pclath	equ	0xFFA
 23069                           tblptru	equ	0xFF8
 23070                           tblptrh	equ	0xFF7
 23071                           tblptrl	equ	0xFF6
 23072                           tablat	equ	0xFF5
 23073                           prodh	equ	0xFF4
 23074                           prodl	equ	0xFF3
 23075                           intcon	equ	0xFF2
 23076                           indf0	equ	0xFEF
 23077                           postinc0	equ	0xFEE
 23078                           fsr0h	equ	0xFEA
 23079                           fsr0l	equ	0xFE9
 23080                           wreg	equ	0xFE8
 23081                           indf1	equ	0xFE7
 23082                           postinc1	equ	0xFE6
 23083                           postdec1	equ	0xFE5
 23084                           plusw1	equ	0xFE3
 23085                           fsr1h	equ	0xFE2
 23086                           fsr1l	equ	0xFE1
 23087                           indf2	equ	0xFDF
 23088                           postinc2	equ	0xFDE
 23089                           postdec2	equ	0xFDD
 23090                           plusw2	equ	0xFDB
 23091                           fsr2h	equ	0xFDA
 23092                           fsr2l	equ	0xFD9
 23093                           status	equ	0xFD8
 23094                           
 23095 ;; *************** function _PHY_Write *****************
 23096 ;; Defined at:
 23097 ;;		line 317 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 23098 ;; Parameters:    Size  Location     Type
 23099 ;;  reg             1    wreg     enum E7044
 23100 ;;  data            2   24[COMRAM] unsigned int 
 23101 ;; Auto vars:     Size  Location     Type
 23102 ;;  reg             1   26[COMRAM] enum E7044
 23103 ;;  GIESave         1   27[COMRAM] unsigned char 
 23104 ;; Return value:  Size  Location     Type
 23105 ;;                  1    wreg      enum E7053
 23106 ;; Registers used:
 23107 ;;		wreg, status,2, status,0, cstack
 23108 ;; Tracked objects:
 23109 ;;		On entry : F/E
 23110 ;;		On exit  : F/E
 23111 ;;		Unchanged: 0/0
 23112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23113 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23114 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23116 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23117 ;;Total ram usage:        4 bytes
 23118 ;; Hardware stack levels used:    1
 23119 ;; Hardware stack levels required when called:    9
 23120 ;; This function calls:
 23121 ;;		_PHY_WaitForBusy
 23122 ;; This function is called by:
 23123 ;;		_ETH_Init
 23124 ;; This function uses a non-reentrant model
 23125 ;;
 23126                           
 23127                           	psect	text94
 23128  005B38                     __ptext94:
 23129                           	opt stack 0
 23130  005B38                     _PHY_Write:
 23131                           	opt stack 19
 23132                           
 23133                           ; BSR set to: 14
 23134                           ;incstack = 0
 23135                           ;PHY_Write@reg stored from wreg
 23136  005B38  6E1B               	movwf	PHY_Write@reg,c
 23137                           
 23138                           ;j60_driver.c: 319: uint8_t GIESave;
 23139                           ;j60_driver.c: 321: MIREGADR = reg;
 23140  005B3A  C01B  FEB4         	movff	PHY_Write@reg,3764	;volatile
 23141                           
 23142                           ;j60_driver.c: 333: errataTemp = data;
 23143  005B3E  C019  FE7E         	movff	PHY_Write@data,3710
 23144  005B42  C01A  FE7F         	movff	PHY_Write@data+1,3711
 23145                           
 23146                           ;j60_driver.c: 334: GIESave = INTCON;
 23147  005B46  CFF2 F01C          	movff	intcon,PHY_Write@GIESave	;volatile
 23148                           
 23149                           ;j60_driver.c: 335: INTCON = 0;
 23150  005B4A  6AF2               	clrf	intcon,c	;volatile
 23151                           
 23152                           ;j60_driver.c: 336: MIWR = errataTemp;
 23153  005B4C  CE7E FEB6          	movff	3710,3766	;volatile
 23154  005B50  CE7F FEB7          	movff	3711,3767	;volatile
 23155                           
 23156                           ;j60_driver.c: 337: INTCON = GIESave;
 23157  005B54  C01C  FFF2         	movff	PHY_Write@GIESave,intcon	;volatile
 23158  005B58                     i42L__ptext99:
 23159                           	opt stack 0
 23160  005B58                     i42L_PHY_WaitForBusy:
 23161                           	opt stack 0
 23162  005B58                     i42Ll8176:
 23163                           	opt stack 18
 23164                           
 23165                           ;j60_driver.c: 300: phyError_t ret = NOERROR;
 23166  005B58  6A17               	clrf	PHY_WaitForBusy@ret,c
 23167                           
 23168                           ;j60_driver.c: 301: uint8_t timeout;
 23169                           ;j60_driver.c: 303: for(timeout = 0; timeout < 10;timeout++) __nop();
 23170  005B5A  6A18               	clrf	PHY_WaitForBusy@timeout,c
 23171  005B5C                     i42Ll504:
 23172                           	opt stack 18
 23173  005B5C  F000               	nop	
 23174  005B5E                     i42Ll8182:
 23175                           	opt stack 18
 23176  005B5E  2A18               	incf	PHY_WaitForBusy@timeout,f,c
 23177  005B60                     i42Ll8184:
 23178                           	opt stack 18
 23179  005B60  0E09               	movlw	9
 23180  005B62  6418               	cpfsgt	PHY_WaitForBusy@timeout,c
 23181  005B64  D7FB               	goto	i42Ll504
 23182  005B66  D001               	goto	i42Lu11670
 23183  005B68                     i42Lu11671:
 23184                           	opt stack 0
 23185  005B68  D7F9               	goto	i42Ll504
 23186  005B6A                     i42Lu11670:
 23187                           	opt stack 0
 23188  005B6A                     i42Ll8186:
 23189                           	opt stack 18
 23190                           
 23191                           ;j60_driver.c: 304: timeout = 90;
 23192  005B6A  0E5A               	movlw	90
 23193  005B6C  6E18               	movwf	PHY_WaitForBusy@timeout,c
 23194  005B6E  D001               	goto	i42Ll506
 23195  005B70                     i42Ll507:
 23196                           	opt stack 18
 23197                           
 23198                           ; BSR set to: 14
 23199  005B70  F000               	nop	
 23200  005B72                     i42Ll506:
 23201                           	opt stack 18
 23202  005B72  010E               	movlb	14	; () banked
 23203  005B74  A18A               	btfss	138,0,b	;volatile
 23204  005B76                     i42Lu11681:
 23205                           	opt stack 0
 23206  005B76  D002               	goto	i42Ll8190
 23207  005B78                     i42Lu11680:
 23208                           	opt stack 0
 23209  005B78                     i42Ll8188:
 23210                           	opt stack 18
 23211                           
 23212                           ; BSR set to: 14
 23213  005B78  2E18               	decfsz	PHY_WaitForBusy@timeout,f,c
 23214  005B7A  D7FA               	goto	i42Ll507
 23215  005B7C                     i42Ll8190:
 23216                           	opt stack 18
 23217                           
 23218                           ; BSR set to: 14
 23219                           ;j60_driver.c: 307: if(timeout == 0) ret = BUSY_TIMEOUT;
 23220  005B7C  5018               	movf	PHY_WaitForBusy@timeout,w,c
 23221  005B7E  A4D8               	btfss	status,2,c
 23222  005B80                     i42Lu11691:
 23223                           	opt stack 0
 23224  005B80  D001               	goto	i42Ll8194
 23225  005B82                     i42Lu11690:
 23226                           	opt stack 0
 23227  005B82                     i42Ll8192:
 23228                           	opt stack 18
 23229                           
 23230                           ; BSR set to: 14
 23231  005B82  6817               	setf	PHY_WaitForBusy@ret,c
 23232  005B84                     i42Ll8194:
 23233                           	opt stack 18
 23234                           
 23235                           ; BSR set to: 14
 23236                           ;j60_driver.c: 308: return ret;
 23237  005B84  5017               	movf	PHY_WaitForBusy@ret,w,c
 23238  005B86                     i42Ll512:
 23239                           	opt stack 0
 23240  005B86  0012               	return	
 23241  005B88                     __end_of_PHY_Write:
 23242                           	opt stack 0
 23243                           tosu	equ	0xFFF
 23244                           tosh	equ	0xFFE
 23245                           tosl	equ	0xFFD
 23246                           pclath	equ	0xFFA
 23247                           tblptru	equ	0xFF8
 23248                           tblptrh	equ	0xFF7
 23249                           tblptrl	equ	0xFF6
 23250                           tablat	equ	0xFF5
 23251                           prodh	equ	0xFF4
 23252                           prodl	equ	0xFF3
 23253                           intcon	equ	0xFF2
 23254                           indf0	equ	0xFEF
 23255                           postinc0	equ	0xFEE
 23256                           fsr0h	equ	0xFEA
 23257                           fsr0l	equ	0xFE9
 23258                           wreg	equ	0xFE8
 23259                           indf1	equ	0xFE7
 23260                           postinc1	equ	0xFE6
 23261                           postdec1	equ	0xFE5
 23262                           plusw1	equ	0xFE3
 23263                           fsr1h	equ	0xFE2
 23264                           fsr1l	equ	0xFE1
 23265                           indf2	equ	0xFDF
 23266                           postinc2	equ	0xFDE
 23267                           postdec2	equ	0xFDD
 23268                           plusw2	equ	0xFDB
 23269                           fsr2h	equ	0xFDA
 23270                           fsr2l	equ	0xFD9
 23271                           status	equ	0xFD8
 23272                           
 23273 ;; *************** function _MAC_getAddress *****************
 23274 ;; Defined at:
 23275 ;;		line 46 in file "../../TCPIP Library/source/mac_address.c"
 23276 ;; Parameters:    Size  Location     Type
 23277 ;;		None
 23278 ;; Auto vars:     Size  Location     Type
 23279 ;;		None
 23280 ;; Return value:  Size  Location     Type
 23281 ;;                  1    wreg      PTR const struct .
 23282 ;; Registers used:
 23283 ;;		wreg
 23284 ;; Tracked objects:
 23285 ;;		On entry : F/E
 23286 ;;		On exit  : F/E
 23287 ;;		Unchanged: F/0
 23288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23289 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23292 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23293 ;;Total ram usage:        2 bytes
 23294 ;; Hardware stack levels used:    1
 23295 ;; Hardware stack levels required when called:    8
 23296 ;; This function calls:
 23297 ;;		Nothing
 23298 ;; This function is called by:
 23299 ;;		_ETH_Init
 23300 ;; This function uses a non-reentrant model
 23301 ;;
 23302                           
 23303                           	psect	text95
 23304  0064C6                     __ptext95:
 23305                           	opt stack 0
 23306  0064C6                     _MAC_getAddress:
 23307                           	opt stack 20
 23308                           
 23309                           ; BSR set to: 14
 23310                           ;mac_address.c: 48: return &macAddress;
 23311                           
 23312                           ; BSR set to: 14
 23313                           ;incstack = 0
 23314  0064C6  0E2E               	movlw	_macAddress& (0+255)
 23315                           
 23316                           ; BSR set to: 14
 23317  0064C8  0012               	return		;funcret
 23318  0064CA                     __end_of_MAC_getAddress:
 23319                           	opt stack 0
 23320                           tosu	equ	0xFFF
 23321                           tosh	equ	0xFFE
 23322                           tosl	equ	0xFFD
 23323                           pclath	equ	0xFFA
 23324                           tblptru	equ	0xFF8
 23325                           tblptrh	equ	0xFF7
 23326                           tblptrl	equ	0xFF6
 23327                           tablat	equ	0xFF5
 23328                           prodh	equ	0xFF4
 23329                           prodl	equ	0xFF3
 23330                           intcon	equ	0xFF2
 23331                           indf0	equ	0xFEF
 23332                           postinc0	equ	0xFEE
 23333                           fsr0h	equ	0xFEA
 23334                           fsr0l	equ	0xFE9
 23335                           wreg	equ	0xFE8
 23336                           indf1	equ	0xFE7
 23337                           postinc1	equ	0xFE6
 23338                           postdec1	equ	0xFE5
 23339                           plusw1	equ	0xFE3
 23340                           fsr1h	equ	0xFE2
 23341                           fsr1l	equ	0xFE1
 23342                           indf2	equ	0xFDF
 23343                           postinc2	equ	0xFDE
 23344                           postdec2	equ	0xFDD
 23345                           plusw2	equ	0xFDB
 23346                           fsr2h	equ	0xFDA
 23347                           fsr2l	equ	0xFD9
 23348                           status	equ	0xFD8
 23349                           
 23350 ;; *************** function _ETH_CheckLinkUp *****************
 23351 ;; Defined at:
 23352 ;;		line 198 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 23353 ;; Parameters:    Size  Location     Type
 23354 ;;		None
 23355 ;; Auto vars:     Size  Location     Type
 23356 ;;  value           4   37[COMRAM] unsigned long 
 23357 ;; Return value:  Size  Location     Type
 23358 ;;                  1    wreg      unsigned char 
 23359 ;; Registers used:
 23360 ;;		wreg, status,2, status,0, cstack
 23361 ;; Tracked objects:
 23362 ;;		On entry : 0/1
 23363 ;;		On exit  : 0/0
 23364 ;;		Unchanged: 0/0
 23365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23367 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23369 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23370 ;;Total ram usage:        4 bytes
 23371 ;; Hardware stack levels used:    1
 23372 ;; Hardware stack levels required when called:   11
 23373 ;; This function calls:
 23374 ;;		_ETH_readLinkStatus
 23375 ;; This function is called by:
 23376 ;;		_ETH_Init
 23377 ;;		_ETH_EventHandler
 23378 ;;		_Network_WaitForLink
 23379 ;; This function uses a non-reentrant model
 23380 ;;
 23381                           
 23382                           	psect	text96
 23383  0060E2                     __ptext96:
 23384                           	opt stack 0
 23385  0060E2                     _ETH_CheckLinkUp:
 23386                           	opt stack 0
 23387  0060E2                     i43L__ptext97:
 23388                           	opt stack 0
 23389  0060E2                     i43L_ETH_readLinkStatus:
 23390                           	opt stack 0
 23391  0060E2                     i43Ll8914:
 23392                           	opt stack 18
 23393                           
 23394                           ;j60_driver.c: 195: return (PHY_Read(PHSTAT2));
 23395  0060E2  0E11               	movlw	17
 23396  0060E4  EC25  F028         	call	_PHY_Read
 23397  0060E8  C019  F022         	movff	?_PHY_Read,?_ETH_readLinkStatus
 23398  0060EC  C01A  F023         	movff	?_PHY_Read+1,?_ETH_readLinkStatus+1
 23399  0060F0  C01B  F024         	movff	?_PHY_Read+2,?_ETH_readLinkStatus+2
 23400  0060F4  C01C  F025         	movff	?_PHY_Read+3,?_ETH_readLinkStatus+3
 23401  0060F8                     i43Ll476:
 23402                           	opt stack 18
 23403  0060F8  C022  F026         	movff	?_ETH_readLinkStatus,ETH_CheckLinkUp@value
 23404  0060FC  C023  F027         	movff	?_ETH_readLinkStatus+1,ETH_CheckLinkUp@value+1
 23405  006100  C024  F028         	movff	?_ETH_readLinkStatus+2,ETH_CheckLinkUp@value+2
 23406  006104  C025  F029         	movff	?_ETH_readLinkStatus+3,ETH_CheckLinkUp@value+3
 23407                           
 23408                           ; BSR set to: 14
 23409                           ;j60_driver.c: 203: if(value & 0x0400)
 23410  006108  A427               	btfss	ETH_CheckLinkUp@value+1,2,c
 23411  00610A  0C00               	retlw	0
 23412                           
 23413                           ; BSR set to: 14
 23414                           ;j60_driver.c: 204: {
 23415                           ;j60_driver.c: 205: ethData.up = 1;
 23416                           
 23417                           ; BSR set to: 1
 23418                           ;j60_driver.c: 206: return 1;
 23419  00610C  EF40  F030         	goto	PL753	;call to abstracted procedure
 23420  006110                     __end_of_ETH_CheckLinkUp:
 23421                           	opt stack 0
 23422                           tosu	equ	0xFFF
 23423                           tosh	equ	0xFFE
 23424                           tosl	equ	0xFFD
 23425                           pclath	equ	0xFFA
 23426                           tblptru	equ	0xFF8
 23427                           tblptrh	equ	0xFF7
 23428                           tblptrl	equ	0xFF6
 23429                           tablat	equ	0xFF5
 23430                           prodh	equ	0xFF4
 23431                           prodl	equ	0xFF3
 23432                           intcon	equ	0xFF2
 23433                           indf0	equ	0xFEF
 23434                           postinc0	equ	0xFEE
 23435                           fsr0h	equ	0xFEA
 23436                           fsr0l	equ	0xFE9
 23437                           wreg	equ	0xFE8
 23438                           indf1	equ	0xFE7
 23439                           postinc1	equ	0xFE6
 23440                           postdec1	equ	0xFE5
 23441                           plusw1	equ	0xFE3
 23442                           fsr1h	equ	0xFE2
 23443                           fsr1l	equ	0xFE1
 23444                           indf2	equ	0xFDF
 23445                           postinc2	equ	0xFDE
 23446                           postdec2	equ	0xFDD
 23447                           plusw2	equ	0xFDB
 23448                           fsr2h	equ	0xFDA
 23449                           fsr2l	equ	0xFD9
 23450                           status	equ	0xFD8
 23451                           
 23452 ;; *************** function _ETH_readLinkStatus *****************
 23453 ;; Defined at:
 23454 ;;		line 193 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 23455 ;; Parameters:    Size  Location     Type
 23456 ;;		None
 23457 ;; Auto vars:     Size  Location     Type
 23458 ;;		None
 23459 ;; Return value:  Size  Location     Type
 23460 ;;                  4   33[COMRAM] unsigned long 
 23461 ;; Registers used:
 23462 ;;		wreg, status,2, status,0, cstack
 23463 ;; Tracked objects:
 23464 ;;		On entry : 0/1
 23465 ;;		On exit  : F/E
 23466 ;;		Unchanged: 0/0
 23467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23468 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23471 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23472 ;;Total ram usage:        4 bytes
 23473 ;; Hardware stack levels used:    1
 23474 ;; Hardware stack levels required when called:   10
 23475 ;; This function calls:
 23476 ;;		_PHY_Read
 23477 ;; This function is called by:
 23478 ;;		_ETH_CheckLinkUp
 23479 ;; This function uses a non-reentrant model
 23480 ;;
 23481                           
 23482                           	psect	text97
 23483  000000                     __ptext97:
 23484                           	opt stack 0
 23485  000000                     _ETH_readLinkStatus:
 23486                           	opt stack 0
 23487  000000                     __end_of_ETH_readLinkStatus:
 23488                           	opt stack 0
 23489                           tosu	equ	0xFFF
 23490                           tosh	equ	0xFFE
 23491                           tosl	equ	0xFFD
 23492                           pclath	equ	0xFFA
 23493                           tblptru	equ	0xFF8
 23494                           tblptrh	equ	0xFF7
 23495                           tblptrl	equ	0xFF6
 23496                           tablat	equ	0xFF5
 23497                           prodh	equ	0xFF4
 23498                           prodl	equ	0xFF3
 23499                           intcon	equ	0xFF2
 23500                           indf0	equ	0xFEF
 23501                           postinc0	equ	0xFEE
 23502                           fsr0h	equ	0xFEA
 23503                           fsr0l	equ	0xFE9
 23504                           wreg	equ	0xFE8
 23505                           indf1	equ	0xFE7
 23506                           postinc1	equ	0xFE6
 23507                           postdec1	equ	0xFE5
 23508                           plusw1	equ	0xFE3
 23509                           fsr1h	equ	0xFE2
 23510                           fsr1l	equ	0xFE1
 23511                           indf2	equ	0xFDF
 23512                           postinc2	equ	0xFDE
 23513                           postdec2	equ	0xFDD
 23514                           plusw2	equ	0xFDB
 23515                           fsr2h	equ	0xFDA
 23516                           fsr2l	equ	0xFD9
 23517                           status	equ	0xFD8
 23518                           
 23519 ;; *************** function _PHY_Read *****************
 23520 ;; Defined at:
 23521 ;;		line 350 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 23522 ;; Parameters:    Size  Location     Type
 23523 ;;  reg             1    wreg     enum E7044
 23524 ;; Auto vars:     Size  Location     Type
 23525 ;;  reg             1   28[COMRAM] enum E7044
 23526 ;;  ret             4   29[COMRAM] long 
 23527 ;; Return value:  Size  Location     Type
 23528 ;;                  4   24[COMRAM] long 
 23529 ;; Registers used:
 23530 ;;		wreg, status,2, status,0, cstack
 23531 ;; Tracked objects:
 23532 ;;		On entry : 0/E
 23533 ;;		On exit  : F/E
 23534 ;;		Unchanged: 0/0
 23535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23536 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23537 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23539 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23540 ;;Total ram usage:        9 bytes
 23541 ;; Hardware stack levels used:    1
 23542 ;; Hardware stack levels required when called:    9
 23543 ;; This function calls:
 23544 ;;		_PHY_WaitForBusy
 23545 ;; This function is called by:
 23546 ;;		_ETH_readLinkStatus
 23547 ;;		_ETH_EventHandler
 23548 ;; This function uses a non-reentrant model
 23549 ;;
 23550                           
 23551                           	psect	text98
 23552  00504A                     __ptext98:
 23553                           	opt stack 0
 23554  00504A                     _PHY_Read:
 23555                           	opt stack 18
 23556                           
 23557                           ; BSR set to: 14
 23558                           ;incstack = 0
 23559                           ;PHY_Read@reg stored from wreg
 23560  00504A  6E1D               	movwf	PHY_Read@reg,c
 23561  00504C                     i44L__ptext99:
 23562                           	opt stack 0
 23563  00504C                     i44L_PHY_WaitForBusy:
 23564                           	opt stack 0
 23565  00504C                     i44Ll8176:
 23566                           	opt stack 18
 23567                           
 23568                           ;j60_driver.c: 300: phyError_t ret = NOERROR;
 23569  00504C  6A17               	clrf	PHY_WaitForBusy@ret,c
 23570                           
 23571                           ;j60_driver.c: 301: uint8_t timeout;
 23572                           ;j60_driver.c: 303: for(timeout = 0; timeout < 10;timeout++) __nop();
 23573  00504E  6A18               	clrf	PHY_WaitForBusy@timeout,c
 23574  005050                     i44Ll504:
 23575                           	opt stack 18
 23576  005050  F000               	nop	
 23577  005052                     i44Ll8182:
 23578                           	opt stack 18
 23579  005052  2A18               	incf	PHY_WaitForBusy@timeout,f,c
 23580  005054                     i44Ll8184:
 23581                           	opt stack 18
 23582  005054  0E09               	movlw	9
 23583  005056  6418               	cpfsgt	PHY_WaitForBusy@timeout,c
 23584  005058  D7FB               	goto	i44Ll504
 23585  00505A  D001               	goto	i44Lu11670
 23586  00505C                     i44Lu11671:
 23587                           	opt stack 0
 23588  00505C  D7F9               	goto	i44Ll504
 23589  00505E                     i44Lu11670:
 23590                           	opt stack 0
 23591  00505E                     i44Ll8186:
 23592                           	opt stack 18
 23593                           
 23594                           ;j60_driver.c: 304: timeout = 90;
 23595  00505E  0E5A               	movlw	90
 23596  005060  6E18               	movwf	PHY_WaitForBusy@timeout,c
 23597  005062  D001               	goto	i44Ll506
 23598  005064                     i44Ll507:
 23599                           	opt stack 18
 23600                           
 23601                           ; BSR set to: 14
 23602  005064  F000               	nop	
 23603  005066                     i44Ll506:
 23604                           	opt stack 18
 23605  005066  010E               	movlb	14	; () banked
 23606  005068  A18A               	btfss	138,0,b	;volatile
 23607  00506A                     i44Lu11681:
 23608                           	opt stack 0
 23609  00506A  D002               	goto	i44Ll8190
 23610  00506C                     i44Lu11680:
 23611                           	opt stack 0
 23612  00506C                     i44Ll8188:
 23613                           	opt stack 18
 23614                           
 23615                           ; BSR set to: 14
 23616  00506C  2E18               	decfsz	PHY_WaitForBusy@timeout,f,c
 23617  00506E  D7FA               	goto	i44Ll507
 23618  005070                     i44Ll8190:
 23619                           	opt stack 18
 23620                           
 23621                           ; BSR set to: 14
 23622                           ;j60_driver.c: 307: if(timeout == 0) ret = BUSY_TIMEOUT;
 23623  005070  5018               	movf	PHY_WaitForBusy@timeout,w,c
 23624  005072  A4D8               	btfss	status,2,c
 23625  005074                     i44Lu11691:
 23626                           	opt stack 0
 23627  005074  D001               	goto	i44Ll8194
 23628  005076                     i44Lu11690:
 23629                           	opt stack 0
 23630  005076                     i44Ll8192:
 23631                           	opt stack 18
 23632                           
 23633                           ; BSR set to: 14
 23634  005076  6817               	setf	PHY_WaitForBusy@ret,c
 23635  005078                     i44Ll8194:
 23636                           	opt stack 18
 23637                           
 23638                           ; BSR set to: 14
 23639                           ;j60_driver.c: 308: return ret;
 23640  005078  5017               	movf	PHY_WaitForBusy@ret,w,c
 23641  00507A                     i44Ll512:
 23642                           	opt stack 18
 23643  00507A  0900               	iorlw	0
 23644  00507C  E12C               	bnz	l518
 23645                           
 23646                           ; BSR set to: 14
 23647                           ;j60_driver.c: 354: {
 23648                           ;j60_driver.c: 355: MIREGADR = reg;
 23649  00507E  C01D  FEB4         	movff	PHY_Read@reg,3764	;volatile
 23650                           
 23651                           ;j60_driver.c: 356: MICMD = 0;
 23652  005082  6BB2               	clrf	178,b	;volatile
 23653                           
 23654                           ;j60_driver.c: 357: MICMDbits.MIIRD = 1;
 23655  005084  81B2               	bsf	178,0,b	;volatile
 23656                           
 23657                           ;j60_driver.c: 358: __nop(); __nop();
 23658  005086  F000               	nop	
 23659  005088  F000               	nop	
 23660  00508A                     i45L__ptext99:
 23661                           	opt stack 0
 23662  00508A                     i45L_PHY_WaitForBusy:
 23663                           	opt stack 0
 23664  00508A                     i45Ll8176:
 23665                           	opt stack 18
 23666                           
 23667                           ;j60_driver.c: 300: phyError_t ret = NOERROR;
 23668  00508A  6A17               	clrf	PHY_WaitForBusy@ret,c
 23669                           
 23670                           ;j60_driver.c: 301: uint8_t timeout;
 23671                           ;j60_driver.c: 303: for(timeout = 0; timeout < 10;timeout++) __nop();
 23672  00508C  6A18               	clrf	PHY_WaitForBusy@timeout,c
 23673  00508E                     i45Ll504:
 23674                           	opt stack 18
 23675  00508E  F000               	nop	
 23676  005090                     i45Ll8182:
 23677                           	opt stack 18
 23678  005090  2A18               	incf	PHY_WaitForBusy@timeout,f,c
 23679  005092                     i45Ll8184:
 23680                           	opt stack 18
 23681  005092  0E09               	movlw	9
 23682  005094  6418               	cpfsgt	PHY_WaitForBusy@timeout,c
 23683  005096  D7FB               	goto	i45Ll504
 23684  005098  D001               	goto	i45Lu11670
 23685  00509A                     i45Lu11671:
 23686                           	opt stack 0
 23687  00509A  D7F9               	goto	i45Ll504
 23688  00509C                     i45Lu11670:
 23689                           	opt stack 0
 23690  00509C                     i45Ll8186:
 23691                           	opt stack 18
 23692                           
 23693                           ;j60_driver.c: 304: timeout = 90;
 23694  00509C  0E5A               	movlw	90
 23695  00509E  6E18               	movwf	PHY_WaitForBusy@timeout,c
 23696  0050A0  D001               	goto	i45Ll506
 23697  0050A2                     i45Ll507:
 23698                           	opt stack 18
 23699                           
 23700                           ; BSR set to: 14
 23701  0050A2  F000               	nop	
 23702  0050A4                     i45Ll506:
 23703                           	opt stack 18
 23704  0050A4  010E               	movlb	14	; () banked
 23705  0050A6  A18A               	btfss	138,0,b	;volatile
 23706  0050A8                     i45Lu11681:
 23707                           	opt stack 0
 23708  0050A8  D002               	goto	i45Ll8190
 23709  0050AA                     i45Lu11680:
 23710                           	opt stack 0
 23711  0050AA                     i45Ll8188:
 23712                           	opt stack 18
 23713                           
 23714                           ; BSR set to: 14
 23715  0050AA  2E18               	decfsz	PHY_WaitForBusy@timeout,f,c
 23716  0050AC  D7FA               	goto	i45Ll507
 23717  0050AE                     i45Ll8190:
 23718                           	opt stack 18
 23719                           
 23720                           ; BSR set to: 14
 23721                           ;j60_driver.c: 307: if(timeout == 0) ret = BUSY_TIMEOUT;
 23722  0050AE  5018               	movf	PHY_WaitForBusy@timeout,w,c
 23723  0050B0  A4D8               	btfss	status,2,c
 23724  0050B2                     i45Lu11691:
 23725                           	opt stack 0
 23726  0050B2  D001               	goto	i45Ll8194
 23727  0050B4                     i45Lu11690:
 23728                           	opt stack 0
 23729  0050B4                     i45Ll8192:
 23730                           	opt stack 18
 23731                           
 23732                           ; BSR set to: 14
 23733  0050B4  6817               	setf	PHY_WaitForBusy@ret,c
 23734  0050B6                     i45Ll8194:
 23735                           	opt stack 18
 23736                           
 23737                           ; BSR set to: 14
 23738                           ;j60_driver.c: 308: return ret;
 23739  0050B6  5017               	movf	PHY_WaitForBusy@ret,w,c
 23740  0050B8                     i45Ll512:
 23741                           	opt stack 18
 23742  0050B8  0AFF               	xorlw	-1
 23743  0050BA  E105               	bnz	l519
 23744                           
 23745                           ; BSR set to: 14
 23746                           ;j60_driver.c: 360: {
 23747                           ;j60_driver.c: 361: ret = READ_FAIL;
 23748  0050BC  0EFD               	movlw	253
 23749  0050BE  6E1E               	movwf	PHY_Read@ret,c
 23750  0050C0  0EFF               	movlw	255
 23751  0050C2  D814               	call	PL743	;call to abstracted procedure
 23752                           
 23753                           ;j60_driver.c: 362: }
 23754  0050C4  D00A               	goto	l521
 23755  0050C6                     l519:
 23756                           
 23757                           ; BSR set to: 14
 23758                           ;j60_driver.c: 363: else
 23759                           ;j60_driver.c: 364: {
 23760                           ;j60_driver.c: 365: MICMDbits.MIIRD = 0;
 23761  0050C6  91B2               	bcf	178,0,b	;volatile
 23762                           
 23763                           ; BSR set to: 14
 23764                           ;j60_driver.c: 366: ret = MIRD;
 23765  0050C8  CEB8 F01E          	movff	3768,PHY_Read@ret	;volatile
 23766  0050CC  CEB9 F01F          	movff	3769,PHY_Read@ret+1	;volatile
 23767  0050D0  6A20               	clrf	PHY_Read@ret+2,c
 23768  0050D2  6A21               	clrf	PHY_Read@ret+3,c
 23769  0050D4  D002               	goto	l521
 23770  0050D6                     l518:
 23771                           
 23772                           ; BSR set to: 14
 23773                           ;j60_driver.c: 369: else
 23774                           ;j60_driver.c: 370: {
 23775                           ;j60_driver.c: 371: ret = BUSY_TIMEOUT;
 23776  0050D6  681E               	setf	PHY_Read@ret,c
 23777  0050D8  D809               	call	PL743	;call to abstracted procedure
 23778  0050DA                     l521:
 23779                           
 23780                           ; BSR set to: 14
 23781                           ;j60_driver.c: 372: }
 23782                           ;j60_driver.c: 373: return ret;
 23783  0050DA  C01E  F019         	movff	PHY_Read@ret,?_PHY_Read
 23784  0050DE  C01F  F01A         	movff	PHY_Read@ret+1,?_PHY_Read+1
 23785  0050E2  C020  F01B         	movff	PHY_Read@ret+2,?_PHY_Read+2
 23786  0050E6  C021  F01C         	movff	PHY_Read@ret+3,?_PHY_Read+3
 23787                           
 23788                           ; BSR set to: 14
 23789  0050EA  0012               	return		;funcret
 23790  0050EC                     __end_of_PHY_Read:
 23791                           	opt stack 0
 23792  0050EC                     PL743:
 23793                           	opt stack 18
 23794  0050EC  681F               	setf	PHY_Read@ret+1,c
 23795  0050EE  6820               	setf	PHY_Read@ret+2,c
 23796  0050F0  6821               	setf	PHY_Read@ret+3,c
 23797  0050F2  0012               	return	
 23798  0050F4                     __end_ofPL743:
 23799                           	opt stack 0
 23800                           tosu	equ	0xFFF
 23801                           tosh	equ	0xFFE
 23802                           tosl	equ	0xFFD
 23803                           pclath	equ	0xFFA
 23804                           tblptru	equ	0xFF8
 23805                           tblptrh	equ	0xFF7
 23806                           tblptrl	equ	0xFF6
 23807                           tablat	equ	0xFF5
 23808                           prodh	equ	0xFF4
 23809                           prodl	equ	0xFF3
 23810                           intcon	equ	0xFF2
 23811                           indf0	equ	0xFEF
 23812                           postinc0	equ	0xFEE
 23813                           fsr0h	equ	0xFEA
 23814                           fsr0l	equ	0xFE9
 23815                           wreg	equ	0xFE8
 23816                           indf1	equ	0xFE7
 23817                           postinc1	equ	0xFE6
 23818                           postdec1	equ	0xFE5
 23819                           plusw1	equ	0xFE3
 23820                           fsr1h	equ	0xFE2
 23821                           fsr1l	equ	0xFE1
 23822                           indf2	equ	0xFDF
 23823                           postinc2	equ	0xFDE
 23824                           postdec2	equ	0xFDD
 23825                           plusw2	equ	0xFDB
 23826                           fsr2h	equ	0xFDA
 23827                           fsr2l	equ	0xFD9
 23828                           status	equ	0xFD8
 23829                           
 23830 ;; *************** function _PHY_WaitForBusy *****************
 23831 ;; Defined at:
 23832 ;;		line 298 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 23833 ;; Parameters:    Size  Location     Type
 23834 ;;		None
 23835 ;; Auto vars:     Size  Location     Type
 23836 ;;  timeout         1   23[COMRAM] unsigned char 
 23837 ;;  ret             1   22[COMRAM] enum E7053
 23838 ;; Return value:  Size  Location     Type
 23839 ;;                  1    wreg      enum E7053
 23840 ;; Registers used:
 23841 ;;		wreg, status,2, status,0
 23842 ;; Tracked objects:
 23843 ;;		On entry : 0/E
 23844 ;;		On exit  : F/E
 23845 ;;		Unchanged: 0/0
 23846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23848 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23850 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23851 ;;Total ram usage:        2 bytes
 23852 ;; Hardware stack levels used:    1
 23853 ;; Hardware stack levels required when called:    8
 23854 ;; This function calls:
 23855 ;;		Nothing
 23856 ;; This function is called by:
 23857 ;;		_PHY_Write
 23858 ;;		_PHY_Read
 23859 ;; This function uses a non-reentrant model
 23860 ;;
 23861                           
 23862                           	psect	text99
 23863  000000                     __ptext99:
 23864                           	opt stack 0
 23865  000000                     _PHY_WaitForBusy:
 23866                           	opt stack 0
 23867  000000                     __end_of_PHY_WaitForBusy:
 23868                           	opt stack 0
 23869                           tosu	equ	0xFFF
 23870                           tosh	equ	0xFFE
 23871                           tosl	equ	0xFFD
 23872                           pclath	equ	0xFFA
 23873                           tblptru	equ	0xFF8
 23874                           tblptrh	equ	0xFF7
 23875                           tblptrl	equ	0xFF6
 23876                           tablat	equ	0xFF5
 23877                           prodh	equ	0xFF4
 23878                           prodl	equ	0xFF3
 23879                           intcon	equ	0xFF2
 23880                           indf0	equ	0xFEF
 23881                           postinc0	equ	0xFEE
 23882                           fsr0h	equ	0xFEA
 23883                           fsr0l	equ	0xFE9
 23884                           wreg	equ	0xFE8
 23885                           indf1	equ	0xFE7
 23886                           postinc1	equ	0xFE6
 23887                           postdec1	equ	0xFE5
 23888                           plusw1	equ	0xFE3
 23889                           fsr1h	equ	0xFE2
 23890                           fsr1l	equ	0xFE1
 23891                           indf2	equ	0xFDF
 23892                           postinc2	equ	0xFDE
 23893                           postdec2	equ	0xFDD
 23894                           plusw2	equ	0xFDB
 23895                           fsr2h	equ	0xFDA
 23896                           fsr2l	equ	0xFD9
 23897                           status	equ	0xFD8
 23898                           
 23899 ;; *************** function _ARPV4_Init *****************
 23900 ;; Defined at:
 23901 ;;		line 86 in file "../../TCPIP Library/source/arpv4.c"
 23902 ;; Parameters:    Size  Location     Type
 23903 ;;		None
 23904 ;; Auto vars:     Size  Location     Type
 23905 ;;  x               1   22[COMRAM] unsigned char 
 23906 ;; Return value:  Size  Location     Type
 23907 ;;                  1    wreg      void 
 23908 ;; Registers used:
 23909 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23910 ;; Tracked objects:
 23911 ;;		On entry : F/E
 23912 ;;		On exit  : F/E
 23913 ;;		Unchanged: F/0
 23914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23916 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23918 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23919 ;;Total ram usage:        1 bytes
 23920 ;; Hardware stack levels used:    1
 23921 ;; Hardware stack levels required when called:    8
 23922 ;; This function calls:
 23923 ;;		Nothing
 23924 ;; This function is called by:
 23925 ;;		_Network_Init
 23926 ;; This function uses a non-reentrant model
 23927 ;;
 23928                           
 23929                           	psect	text100
 23930  0063F2                     __ptext100:
 23931                           	opt stack 0
 23932  0063F2                     _ARPV4_Init:
 23933                           	opt stack 21
 23934                           
 23935                           ; BSR set to: 14
 23936                           ;arpv4.c: 88: for(uint8_t x= 0 ; x < sizeof(arpMap); x++)
 23937                           
 23938                           ; BSR set to: 14
 23939                           ;incstack = 0
 23940  0063F2  6A17               	clrf	ARPV4_Init@x,c
 23941  0063F4                     l9506:
 23942                           
 23943                           ; BSR set to: 14
 23944                           ;arpv4.c: 89: ((char *)arpMap)[x] = 0;
 23945  0063F4  0E00               	movlw	low _arpMap
 23946  0063F6  2417               	addwf	ARPV4_Init@x,w,c
 23947  0063F8  6ED9               	movwf	fsr2l,c
 23948  0063FA  6ADA               	clrf	fsr2h,c
 23949  0063FC  0E03               	movlw	high _arpMap
 23950  0063FE  22DA               	addwfc	fsr2h,f,c
 23951  006400  6ADF               	clrf	indf2,c
 23952                           
 23953                           ; BSR set to: 14
 23954  006402  2A17               	incf	ARPV4_Init@x,f,c
 23955                           
 23956                           ; BSR set to: 14
 23957  006404  0E67               	movlw	103
 23958  006406  6417               	cpfsgt	ARPV4_Init@x,c
 23959  006408  D7F5               	goto	l9506
 23960  00640A  0C67               	retlw	103
 23961  00640C                     __end_of_ARPV4_Init:
 23962                           	opt stack 0
 23963                           tosu	equ	0xFFF
 23964                           tosh	equ	0xFFE
 23965                           tosl	equ	0xFFD
 23966                           pclath	equ	0xFFA
 23967                           tblptru	equ	0xFF8
 23968                           tblptrh	equ	0xFF7
 23969                           tblptrl	equ	0xFF6
 23970                           tablat	equ	0xFF5
 23971                           prodh	equ	0xFF4
 23972                           prodl	equ	0xFF3
 23973                           intcon	equ	0xFF2
 23974                           indf0	equ	0xFEF
 23975                           postinc0	equ	0xFEE
 23976                           fsr0h	equ	0xFEA
 23977                           fsr0l	equ	0xFE9
 23978                           wreg	equ	0xFE8
 23979                           indf1	equ	0xFE7
 23980                           postinc1	equ	0xFE6
 23981                           postdec1	equ	0xFE5
 23982                           plusw1	equ	0xFE3
 23983                           fsr1h	equ	0xFE2
 23984                           fsr1l	equ	0xFE1
 23985                           indf2	equ	0xFDF
 23986                           postinc2	equ	0xFDE
 23987                           postdec2	equ	0xFDD
 23988                           plusw2	equ	0xFDB
 23989                           fsr2h	equ	0xFDA
 23990                           fsr2l	equ	0xFD9
 23991                           status	equ	0xFD8
 23992                           
 23993 ;; *************** function _IPV4_GetMyIP *****************
 23994 ;; Defined at:
 23995 ;;		line 288 in file "../../TCPIP Library/source/ipv4.c"
 23996 ;; Parameters:    Size  Location     Type
 23997 ;;		None
 23998 ;; Auto vars:     Size  Location     Type
 23999 ;;		None
 24000 ;; Return value:  Size  Location     Type
 24001 ;;                  4   22[COMRAM] unsigned long 
 24002 ;; Registers used:
 24003 ;;		None
 24004 ;; Tracked objects:
 24005 ;;		On entry : 0/1
 24006 ;;		On exit  : 0/0
 24007 ;;		Unchanged: 0/0
 24008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24009 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24012 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24013 ;;Total ram usage:        4 bytes
 24014 ;; Hardware stack levels used:    1
 24015 ;; Hardware stack levels required when called:    8
 24016 ;; This function calls:
 24017 ;;		Nothing
 24018 ;; This function is called by:
 24019 ;;		_main
 24020 ;; This function uses a non-reentrant model
 24021 ;;
 24022                           
 24023                           	psect	text101
 24024  00643A                     __ptext101:
 24025                           	opt stack 0
 24026  00643A                     _IPV4_GetMyIP:
 24027                           	opt stack 22
 24028                           
 24029                           ;ipv4.c: 290: return(ipv4Address);
 24030                           
 24031                           ; BSR set to: 14
 24032                           ;incstack = 0
 24033  00643A  C033  F017         	movff	_ipv4Address,?_IPV4_GetMyIP
 24034  00643E  C034  F018         	movff	_ipv4Address+1,?_IPV4_GetMyIP+1
 24035  006442  C035  F019         	movff	_ipv4Address+2,?_IPV4_GetMyIP+2
 24036  006446  C036  F01A         	movff	_ipv4Address+3,?_IPV4_GetMyIP+3
 24037  00644A  0012               	return		;funcret
 24038  00644C                     __end_of_IPV4_GetMyIP:
 24039                           	opt stack 0
 24040                           tosu	equ	0xFFF
 24041                           tosh	equ	0xFFE
 24042                           tosl	equ	0xFFD
 24043                           pclath	equ	0xFFA
 24044                           tblptru	equ	0xFF8
 24045                           tblptrh	equ	0xFF7
 24046                           tblptrl	equ	0xFF6
 24047                           tablat	equ	0xFF5
 24048                           prodh	equ	0xFF4
 24049                           prodl	equ	0xFF3
 24050                           intcon	equ	0xFF2
 24051                           indf0	equ	0xFEF
 24052                           postinc0	equ	0xFEE
 24053                           fsr0h	equ	0xFEA
 24054                           fsr0l	equ	0xFE9
 24055                           wreg	equ	0xFE8
 24056                           indf1	equ	0xFE7
 24057                           postinc1	equ	0xFE6
 24058                           postdec1	equ	0xFE5
 24059                           plusw1	equ	0xFE3
 24060                           fsr1h	equ	0xFE2
 24061                           fsr1l	equ	0xFE1
 24062                           indf2	equ	0xFDF
 24063                           postinc2	equ	0xFDE
 24064                           postdec2	equ	0xFDD
 24065                           plusw2	equ	0xFDB
 24066                           fsr2h	equ	0xFDA
 24067                           fsr2l	equ	0xFD9
 24068                           status	equ	0xFD8
 24069                           
 24070 ;; *************** function _low_isr *****************
 24071 ;; Defined at:
 24072 ;;		line 62 in file "main.c"
 24073 ;; Parameters:    Size  Location     Type
 24074 ;;		None
 24075 ;; Auto vars:     Size  Location     Type
 24076 ;;		None
 24077 ;; Return value:  Size  Location     Type
 24078 ;;                  1    wreg      void 
 24079 ;; Registers used:
 24080 ;;		wreg, status,2, status,0, cstack
 24081 ;; Tracked objects:
 24082 ;;		On entry : 0/0
 24083 ;;		On exit  : 0/0
 24084 ;;		Unchanged: 0/0
 24085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24088 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24089 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24090 ;;Total ram usage:        3 bytes
 24091 ;; Hardware stack levels used:    1
 24092 ;; Hardware stack levels required when called:    7
 24093 ;; This function calls:
 24094 ;;		i1_ETH_EventHandler
 24095 ;; This function is called by:
 24096 ;;		Interrupt level 1
 24097 ;; This function uses a non-reentrant model
 24098 ;;
 24099                           
 24100                           	psect	intcodelo
 24101  000018                     __pintcodelo:
 24102                           	opt stack 0
 24103  000018                     _low_isr:
 24104                           	opt stack 12
 24105                           
 24106                           ;incstack = 0
 24107  000018  8049               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 24108  00001A  CFD8 F014          	movff	status,??_low_isr
 24109  00001E  CFE8 F015          	movff	wreg,??_low_isr+1
 24110  000022  CFE0 F016          	movff	bsr,??_low_isr+2
 24111                           
 24112                           ;main.c: 65: ETH_EventHandler();
 24113  000026  ECDC  F02F         	call	i1_ETH_EventHandler	;wreg free
 24114  00002A  C016  FFE0         	movff	??_low_isr+2,bsr
 24115  00002E  C015  FFE8         	movff	??_low_isr+1,wreg
 24116  000032  C014  FFD8         	movff	??_low_isr,status
 24117  000036  9049               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 24118  000038  0010               	retfie	
 24119  00003A                     __end_of_low_isr:
 24120                           	opt stack 0
 24121                           tosu	equ	0xFFF
 24122                           tosh	equ	0xFFE
 24123                           tosl	equ	0xFFD
 24124                           pclath	equ	0xFFA
 24125                           tblptru	equ	0xFF8
 24126                           tblptrh	equ	0xFF7
 24127                           tblptrl	equ	0xFF6
 24128                           tablat	equ	0xFF5
 24129                           prodh	equ	0xFF4
 24130                           prodl	equ	0xFF3
 24131                           intcon	equ	0xFF2
 24132                           indf0	equ	0xFEF
 24133                           postinc0	equ	0xFEE
 24134                           fsr0h	equ	0xFEA
 24135                           fsr0l	equ	0xFE9
 24136                           wreg	equ	0xFE8
 24137                           indf1	equ	0xFE7
 24138                           postinc1	equ	0xFE6
 24139                           postdec1	equ	0xFE5
 24140                           plusw1	equ	0xFE3
 24141                           fsr1h	equ	0xFE2
 24142                           fsr1l	equ	0xFE1
 24143                           bsr	equ	0xFE0
 24144                           indf2	equ	0xFDF
 24145                           postinc2	equ	0xFDE
 24146                           postdec2	equ	0xFDD
 24147                           plusw2	equ	0xFDB
 24148                           fsr2h	equ	0xFDA
 24149                           fsr2l	equ	0xFD9
 24150                           status	equ	0xFD8
 24151                           
 24152 ;; *************** function i1_ETH_EventHandler *****************
 24153 ;; Defined at:
 24154 ;;		line 215 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 24155 ;; Parameters:    Size  Location     Type
 24156 ;;		None
 24157 ;; Auto vars:     Size  Location     Type
 24158 ;;		None
 24159 ;; Return value:  Size  Location     Type
 24160 ;;                  1    wreg      void 
 24161 ;; Registers used:
 24162 ;;		wreg, status,2, status,0, cstack
 24163 ;; Tracked objects:
 24164 ;;		On entry : 0/0
 24165 ;;		On exit  : 0/0
 24166 ;;		Unchanged: 0/0
 24167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24172 ;;Total ram usage:        0 bytes
 24173 ;; Hardware stack levels used:    1
 24174 ;; Hardware stack levels required when called:    6
 24175 ;; This function calls:
 24176 ;;		i1_ETH_CheckLinkUp
 24177 ;;		i1_PHY_Read
 24178 ;; This function is called by:
 24179 ;;		_low_isr
 24180 ;; This function uses a non-reentrant model
 24181 ;;
 24182                           
 24183                           	psect	text103
 24184  005FB8                     __ptext103:
 24185                           	opt stack 0
 24186  005FB8                     i1_ETH_EventHandler:
 24187                           	opt stack 0
 24188                           
 24189                           ;j60_driver.c: 218: PIR2bits.ETHIF = 0;
 24190                           
 24191                           ;incstack = 0
 24192                           
 24193                           ;j60_driver.c: 219: if(EPKTCNT >= 3)
 24194  005FB8  EC7E  F02E         	call	PL739	;call to abstracted procedure
 24195  005FBC  65D9               	cpfsgt	217,b	;volatile
 24196  005FBE  D009               	goto	i1l484
 24197                           
 24198                           ; BSR set to: 14
 24199                           ;j60_driver.c: 222: if (EIRbits.LINKIF)
 24200  005FC0  A860               	btfss	3936,4,c	;volatile
 24201  005FC2  D007               	goto	i1l484
 24202                           
 24203                           ; BSR set to: 14
 24204                           ;j60_driver.c: 223: {
 24205                           ;j60_driver.c: 224: PHY_Read(PHIR);
 24206  005FC4  0E13               	movlw	19
 24207  005FC6  EC7A  F028         	call	i1_PHY_Read
 24208                           
 24209                           ; BSR set to: 14
 24210                           ;j60_driver.c: 226: ethData.linkChange = 1;
 24211                           
 24212                           ; BSR set to: 1
 24213                           ;j60_driver.c: 227: ethData.up = 0;
 24214  005FCA  EC81  F02E         	call	PL745	;call to abstracted procedure
 24215                           
 24216                           ;j60_driver.c: 230: if(ETH_CheckLinkUp())
 24217  005FCE  EC2A  F030         	call	i1_ETH_CheckLinkUp	;wreg free
 24218  005FD2                     i1l484:
 24219                           
 24220                           ;j60_driver.c: 233: }
 24221                           ;j60_driver.c: 234: }
 24222                           ;j60_driver.c: 236: if(EIRbits.RXERIF)
 24223  005FD2  B060               	btfsc	3936,0,c	;volatile
 24224                           
 24225                           ;j60_driver.c: 237: {
 24226                           ;j60_driver.c: 239: EIRbits.RXERIF = 0;
 24227  005FD4  9060               	bcf	3936,0,c	;volatile
 24228                           
 24229                           ;j60_driver.c: 240: }
 24230                           ;j60_driver.c: 242: if (EIRbits.TXERIF)
 24231  005FD6  B260               	btfsc	3936,1,c	;volatile
 24232                           
 24233                           ;j60_driver.c: 243: {
 24234                           ;j60_driver.c: 245: EIRbits.TXERIF = 0;
 24235  005FD8  9260               	bcf	3936,1,c	;volatile
 24236                           
 24237                           ;j60_driver.c: 246: }
 24238                           ;j60_driver.c: 248: if(EIRbits.TXIF)
 24239  005FDA  B660               	btfsc	3936,3,c	;volatile
 24240                           
 24241                           ;j60_driver.c: 249: {
 24242                           ;j60_driver.c: 251: EIRbits.TXIF = 0;
 24243                           
 24244                           ;j60_driver.c: 252: ethData.bufferBusy = 0;
 24245  005FDC  EC7A  F02E         	call	PL735	;call to abstracted procedure
 24246  005FE0                     i1l489:
 24247                           
 24248                           ;j60_driver.c: 253: }
 24249                           ;j60_driver.c: 255: if (EIRbits.PKTIF)
 24250  005FE0  AC60               	btfss	3936,6,c	;volatile
 24251  005FE2  0012               	return	
 24252                           
 24253                           ;j60_driver.c: 256: {
 24254                           ;j60_driver.c: 257: if(ethData.pktReady == 0)
 24255  005FE4  0101               	movlb	1	; () banked
 24256  005FE6  B3BD               	btfsc	_ethData& (0+255),1,b	;volatile
 24257  005FE8  0012               	return	
 24258                           
 24259                           ; BSR set to: 1
 24260                           ;j60_driver.c: 258: {
 24261                           ;j60_driver.c: 260: ethData.pktReady = 1;
 24262                           
 24263                           ;j60_driver.c: 261: EIEbits.PKTIE = 0;
 24264  005FEA  EF76  F02E         	goto	PL709	;call to abstracted procedure
 24265  005FEE                     __end_ofi1_ETH_EventHandler:
 24266                           	opt stack 0
 24267                           tosu	equ	0xFFF
 24268                           tosh	equ	0xFFE
 24269                           tosl	equ	0xFFD
 24270                           pclath	equ	0xFFA
 24271                           tblptru	equ	0xFF8
 24272                           tblptrh	equ	0xFF7
 24273                           tblptrl	equ	0xFF6
 24274                           tablat	equ	0xFF5
 24275                           prodh	equ	0xFF4
 24276                           prodl	equ	0xFF3
 24277                           intcon	equ	0xFF2
 24278                           indf0	equ	0xFEF
 24279                           postinc0	equ	0xFEE
 24280                           fsr0h	equ	0xFEA
 24281                           fsr0l	equ	0xFE9
 24282                           wreg	equ	0xFE8
 24283                           indf1	equ	0xFE7
 24284                           postinc1	equ	0xFE6
 24285                           postdec1	equ	0xFE5
 24286                           plusw1	equ	0xFE3
 24287                           fsr1h	equ	0xFE2
 24288                           fsr1l	equ	0xFE1
 24289                           bsr	equ	0xFE0
 24290                           indf2	equ	0xFDF
 24291                           postinc2	equ	0xFDE
 24292                           postdec2	equ	0xFDD
 24293                           plusw2	equ	0xFDB
 24294                           fsr2h	equ	0xFDA
 24295                           fsr2l	equ	0xFD9
 24296                           status	equ	0xFD8
 24297                           
 24298 ;; *************** function i1_ETH_CheckLinkUp *****************
 24299 ;; Defined at:
 24300 ;;		line 198 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 24301 ;; Parameters:    Size  Location     Type
 24302 ;;		None
 24303 ;; Auto vars:     Size  Location     Type
 24304 ;;  ETH_CheckLin    4   15[COMRAM] unsigned long 
 24305 ;; Return value:  Size  Location     Type
 24306 ;;                  1    wreg      unsigned char 
 24307 ;; Registers used:
 24308 ;;		wreg, status,2, status,0, cstack
 24309 ;; Tracked objects:
 24310 ;;		On entry : F/1
 24311 ;;		On exit  : 0/0
 24312 ;;		Unchanged: 0/0
 24313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24315 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24317 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24318 ;;Total ram usage:        4 bytes
 24319 ;; Hardware stack levels used:    1
 24320 ;; Hardware stack levels required when called:    5
 24321 ;; This function calls:
 24322 ;;		i1_ETH_readLinkStatus
 24323 ;; This function is called by:
 24324 ;;		i1_ETH_EventHandler
 24325 ;; This function uses a non-reentrant model
 24326 ;;
 24327                           
 24328                           	psect	text104
 24329  006054                     __ptext104:
 24330                           	opt stack 0
 24331  006054                     i1_ETH_CheckLinkUp:
 24332                           	opt stack 0
 24333  006054                     i46L__ptext105:
 24334                           	opt stack 0
 24335  006054                     i46Li1_ETH_readLinkStatus:
 24336                           	opt stack 0
 24337  006054                     i46Li1l6776:
 24338                           	opt stack 12
 24339                           
 24340                           ; BSR set to: 1
 24341                           ;j60_driver.c: 195: return (PHY_Read(PHSTAT2));
 24342  006054  0E11               	movlw	17
 24343  006056  EC7A  F028         	call	i1_PHY_Read
 24344  00605A  C003  F00C         	movff	?i1_PHY_Read,?i1_ETH_readLinkStatus
 24345  00605E  C004  F00D         	movff	?i1_PHY_Read+1,?i1_ETH_readLinkStatus+1
 24346  006062  C005  F00E         	movff	?i1_PHY_Read+2,?i1_ETH_readLinkStatus+2
 24347  006066  C006  F00F         	movff	?i1_PHY_Read+3,?i1_ETH_readLinkStatus+3
 24348  00606A                     i46Li1l476:
 24349                           	opt stack 12
 24350  00606A  C00C  F010         	movff	?i1_ETH_readLinkStatus,i1ETH_CheckLinkUp@value
 24351  00606E  C00D  F011         	movff	?i1_ETH_readLinkStatus+1,i1ETH_CheckLinkUp@value+1
 24352  006072  C00E  F012         	movff	?i1_ETH_readLinkStatus+2,i1ETH_CheckLinkUp@value+2
 24353  006076  C00F  F013         	movff	?i1_ETH_readLinkStatus+3,i1ETH_CheckLinkUp@value+3
 24354                           
 24355                           ; BSR set to: 14
 24356                           ;j60_driver.c: 203: if(value & 0x0400)
 24357  00607A  A411               	btfss	i1ETH_CheckLinkUp@value+1,2,c
 24358  00607C  0C00               	retlw	0
 24359                           
 24360                           ; BSR set to: 14
 24361                           ;j60_driver.c: 204: {
 24362                           ;j60_driver.c: 205: ethData.up = 1;
 24363                           
 24364                           ; BSR set to: 1
 24365                           ;j60_driver.c: 206: return 1;
 24366  00607E  D000               	goto	PL753	;call to abstracted procedure
 24367  006080                     __end_ofi1_ETH_CheckLinkUp:
 24368                           	opt stack 0
 24369  006080                     PL753:
 24370                           	opt stack 18
 24371  006080  0101               	movlb	1	; () banked
 24372  006082  85BD               	bsf	_ethData& (0+255),2,b	;volatile
 24373  006084  0C01               	retlw	1
 24374  006086                     __end_ofPL753:
 24375                           	opt stack 0
 24376                           tosu	equ	0xFFF
 24377                           tosh	equ	0xFFE
 24378                           tosl	equ	0xFFD
 24379                           pclath	equ	0xFFA
 24380                           tblptru	equ	0xFF8
 24381                           tblptrh	equ	0xFF7
 24382                           tblptrl	equ	0xFF6
 24383                           tablat	equ	0xFF5
 24384                           prodh	equ	0xFF4
 24385                           prodl	equ	0xFF3
 24386                           intcon	equ	0xFF2
 24387                           indf0	equ	0xFEF
 24388                           postinc0	equ	0xFEE
 24389                           fsr0h	equ	0xFEA
 24390                           fsr0l	equ	0xFE9
 24391                           wreg	equ	0xFE8
 24392                           indf1	equ	0xFE7
 24393                           postinc1	equ	0xFE6
 24394                           postdec1	equ	0xFE5
 24395                           plusw1	equ	0xFE3
 24396                           fsr1h	equ	0xFE2
 24397                           fsr1l	equ	0xFE1
 24398                           bsr	equ	0xFE0
 24399                           indf2	equ	0xFDF
 24400                           postinc2	equ	0xFDE
 24401                           postdec2	equ	0xFDD
 24402                           plusw2	equ	0xFDB
 24403                           fsr2h	equ	0xFDA
 24404                           fsr2l	equ	0xFD9
 24405                           status	equ	0xFD8
 24406                           
 24407 ;; *************** function i1_ETH_readLinkStatus *****************
 24408 ;; Defined at:
 24409 ;;		line 193 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 24410 ;; Parameters:    Size  Location     Type
 24411 ;;		None
 24412 ;; Auto vars:     Size  Location     Type
 24413 ;;		None
 24414 ;; Return value:  Size  Location     Type
 24415 ;;                  4   11[COMRAM] unsigned long 
 24416 ;; Registers used:
 24417 ;;		wreg, status,2, status,0, cstack
 24418 ;; Tracked objects:
 24419 ;;		On entry : F/1
 24420 ;;		On exit  : F/E
 24421 ;;		Unchanged: 0/0
 24422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24423 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24426 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24427 ;;Total ram usage:        4 bytes
 24428 ;; Hardware stack levels used:    1
 24429 ;; Hardware stack levels required when called:    4
 24430 ;; This function calls:
 24431 ;;		i1_PHY_Read
 24432 ;; This function is called by:
 24433 ;;		i1_ETH_CheckLinkUp
 24434 ;; This function uses a non-reentrant model
 24435 ;;
 24436                           
 24437                           	psect	text105
 24438  000000                     __ptext105:
 24439                           	opt stack 0
 24440  000000                     __end_ofi1_ETH_readLinkStatus:
 24441                           	opt stack 0
 24442                           tosu	equ	0xFFF
 24443                           tosh	equ	0xFFE
 24444                           tosl	equ	0xFFD
 24445                           pclath	equ	0xFFA
 24446                           tblptru	equ	0xFF8
 24447                           tblptrh	equ	0xFF7
 24448                           tblptrl	equ	0xFF6
 24449                           tablat	equ	0xFF5
 24450                           prodh	equ	0xFF4
 24451                           prodl	equ	0xFF3
 24452                           intcon	equ	0xFF2
 24453                           indf0	equ	0xFEF
 24454                           postinc0	equ	0xFEE
 24455                           fsr0h	equ	0xFEA
 24456                           fsr0l	equ	0xFE9
 24457                           wreg	equ	0xFE8
 24458                           indf1	equ	0xFE7
 24459                           postinc1	equ	0xFE6
 24460                           postdec1	equ	0xFE5
 24461                           plusw1	equ	0xFE3
 24462                           fsr1h	equ	0xFE2
 24463                           fsr1l	equ	0xFE1
 24464                           bsr	equ	0xFE0
 24465                           indf2	equ	0xFDF
 24466                           postinc2	equ	0xFDE
 24467                           postdec2	equ	0xFDD
 24468                           plusw2	equ	0xFDB
 24469                           fsr2h	equ	0xFDA
 24470                           fsr2l	equ	0xFD9
 24471                           status	equ	0xFD8
 24472                           
 24473 ;; *************** function i1_PHY_Read *****************
 24474 ;; Defined at:
 24475 ;;		line 350 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 24476 ;; Parameters:    Size  Location     Type
 24477 ;;  reg             1    wreg     enum E7044
 24478 ;; Auto vars:     Size  Location     Type
 24479 ;;  reg             1    6[COMRAM] enum E7044
 24480 ;;  PHY_Read        4    7[COMRAM] long 
 24481 ;; Return value:  Size  Location     Type
 24482 ;;                  4    2[COMRAM] long 
 24483 ;; Registers used:
 24484 ;;		wreg, status,2, status,0, cstack
 24485 ;; Tracked objects:
 24486 ;;		On entry : 0/E
 24487 ;;		On exit  : F/E
 24488 ;;		Unchanged: 0/0
 24489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24490 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24491 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24493 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24494 ;;Total ram usage:        9 bytes
 24495 ;; Hardware stack levels used:    1
 24496 ;; Hardware stack levels required when called:    3
 24497 ;; This function calls:
 24498 ;;		i1_PHY_WaitForBusy
 24499 ;; This function is called by:
 24500 ;;		i1_ETH_readLinkStatus
 24501 ;;		i1_ETH_EventHandler
 24502 ;; This function uses a non-reentrant model
 24503 ;;
 24504                           
 24505                           	psect	text106
 24506  0050F4                     __ptext106:
 24507                           	opt stack 0
 24508  0050F4                     i1_PHY_Read:
 24509                           	opt stack 14
 24510                           
 24511                           ; BSR set to: 14
 24512                           ;incstack = 0
 24513                           ;i1PHY_Read@reg stored from wreg
 24514  0050F4  6E07               	movwf	i1PHY_Read@reg,c
 24515  0050F6                     i47L__ptext107:
 24516                           	opt stack 0
 24517  0050F6                     i47Li1_PHY_WaitForBusy:
 24518                           	opt stack 0
 24519  0050F6                     i47Li1l6302:
 24520                           	opt stack 14
 24521                           
 24522                           ;j60_driver.c: 300: phyError_t ret = NOERROR;
 24523  0050F6  6A01               	clrf	i1PHY_WaitForBusy@ret,c
 24524                           
 24525                           ;j60_driver.c: 301: uint8_t timeout;
 24526                           ;j60_driver.c: 303: for(timeout = 0; timeout < 10;timeout++) __nop();
 24527  0050F8  6A02               	clrf	i1PHY_WaitForBusy@timeout,c
 24528  0050FA                     i47Li1l504:
 24529                           	opt stack 14
 24530  0050FA  F000               	nop	
 24531  0050FC                     i47Li1l6308:
 24532                           	opt stack 14
 24533  0050FC  2A02               	incf	i1PHY_WaitForBusy@timeout,f,c
 24534  0050FE                     i47Li1l6310:
 24535                           	opt stack 14
 24536  0050FE  0E09               	movlw	9
 24537  005100  6402               	cpfsgt	i1PHY_WaitForBusy@timeout,c
 24538  005102  D7FB               	goto	i47Li1l504
 24539  005104  D001               	goto	i47Li1u893_20
 24540  005106                     i47Li1u893_21:
 24541                           	opt stack 0
 24542  005106  D7F9               	goto	i47Li1l504
 24543  005108                     i47Li1u893_20:
 24544                           	opt stack 0
 24545  005108                     i47Li1l6312:
 24546                           	opt stack 14
 24547                           
 24548                           ;j60_driver.c: 304: timeout = 90;
 24549  005108  0E5A               	movlw	90
 24550  00510A  6E02               	movwf	i1PHY_WaitForBusy@timeout,c
 24551  00510C  D001               	goto	i47Li1l506
 24552  00510E                     i47Li1l507:
 24553                           	opt stack 14
 24554                           
 24555                           ; BSR set to: 14
 24556  00510E  F000               	nop	
 24557  005110                     i47Li1l506:
 24558                           	opt stack 14
 24559  005110  010E               	movlb	14	; () banked
 24560  005112  A18A               	btfss	138,0,b	;volatile
 24561  005114                     i47Li1u894_21:
 24562                           	opt stack 0
 24563  005114  D002               	goto	i47Li1l6316
 24564  005116                     i47Li1u894_20:
 24565                           	opt stack 0
 24566  005116                     i47Li1l6314:
 24567                           	opt stack 14
 24568                           
 24569                           ; BSR set to: 14
 24570  005116  2E02               	decfsz	i1PHY_WaitForBusy@timeout,f,c
 24571  005118  D7FA               	goto	i47Li1l507
 24572  00511A                     i47Li1l6316:
 24573                           	opt stack 14
 24574                           
 24575                           ; BSR set to: 14
 24576                           ;j60_driver.c: 307: if(timeout == 0) ret = BUSY_TIMEOUT;
 24577  00511A  5002               	movf	i1PHY_WaitForBusy@timeout,w,c
 24578  00511C  A4D8               	btfss	status,2,c
 24579  00511E                     i47Li1u895_21:
 24580                           	opt stack 0
 24581  00511E  D001               	goto	i47Li1l6320
 24582  005120                     i47Li1u895_20:
 24583                           	opt stack 0
 24584  005120                     i47Li1l6318:
 24585                           	opt stack 14
 24586                           
 24587                           ; BSR set to: 14
 24588  005120  6801               	setf	i1PHY_WaitForBusy@ret,c
 24589  005122                     i47Li1l6320:
 24590                           	opt stack 14
 24591                           
 24592                           ; BSR set to: 14
 24593                           ;j60_driver.c: 308: return ret;
 24594  005122  5001               	movf	i1PHY_WaitForBusy@ret,w,c
 24595  005124                     i47Li1l512:
 24596                           	opt stack 14
 24597  005124  0900               	iorlw	0
 24598  005126  E12C               	bnz	i1l518
 24599                           
 24600                           ; BSR set to: 14
 24601                           ;j60_driver.c: 354: {
 24602                           ;j60_driver.c: 355: MIREGADR = reg;
 24603  005128  C007  FEB4         	movff	i1PHY_Read@reg,3764	;volatile
 24604                           
 24605                           ;j60_driver.c: 356: MICMD = 0;
 24606  00512C  6BB2               	clrf	178,b	;volatile
 24607                           
 24608                           ;j60_driver.c: 357: MICMDbits.MIIRD = 1;
 24609  00512E  81B2               	bsf	178,0,b	;volatile
 24610                           
 24611                           ;j60_driver.c: 358: __nop(); __nop();
 24612  005130  F000               	nop	
 24613  005132  F000               	nop	
 24614  005134                     i48L__ptext107:
 24615                           	opt stack 0
 24616  005134                     i48Li1_PHY_WaitForBusy:
 24617                           	opt stack 0
 24618  005134                     i48Li1l6302:
 24619                           	opt stack 14
 24620                           
 24621                           ;j60_driver.c: 300: phyError_t ret = NOERROR;
 24622  005134  6A01               	clrf	i1PHY_WaitForBusy@ret,c
 24623                           
 24624                           ;j60_driver.c: 301: uint8_t timeout;
 24625                           ;j60_driver.c: 303: for(timeout = 0; timeout < 10;timeout++) __nop();
 24626  005136  6A02               	clrf	i1PHY_WaitForBusy@timeout,c
 24627  005138                     i48Li1l504:
 24628                           	opt stack 14
 24629  005138  F000               	nop	
 24630  00513A                     i48Li1l6308:
 24631                           	opt stack 14
 24632  00513A  2A02               	incf	i1PHY_WaitForBusy@timeout,f,c
 24633  00513C                     i48Li1l6310:
 24634                           	opt stack 14
 24635  00513C  0E09               	movlw	9
 24636  00513E  6402               	cpfsgt	i1PHY_WaitForBusy@timeout,c
 24637  005140  D7FB               	goto	i48Li1l504
 24638  005142  D001               	goto	i48Li1u893_20
 24639  005144                     i48Li1u893_21:
 24640                           	opt stack 0
 24641  005144  D7F9               	goto	i48Li1l504
 24642  005146                     i48Li1u893_20:
 24643                           	opt stack 0
 24644  005146                     i48Li1l6312:
 24645                           	opt stack 14
 24646                           
 24647                           ;j60_driver.c: 304: timeout = 90;
 24648  005146  0E5A               	movlw	90
 24649  005148  6E02               	movwf	i1PHY_WaitForBusy@timeout,c
 24650  00514A  D001               	goto	i48Li1l506
 24651  00514C                     i48Li1l507:
 24652                           	opt stack 14
 24653                           
 24654                           ; BSR set to: 14
 24655  00514C  F000               	nop	
 24656  00514E                     i48Li1l506:
 24657                           	opt stack 14
 24658  00514E  010E               	movlb	14	; () banked
 24659  005150  A18A               	btfss	138,0,b	;volatile
 24660  005152                     i48Li1u894_21:
 24661                           	opt stack 0
 24662  005152  D002               	goto	i48Li1l6316
 24663  005154                     i48Li1u894_20:
 24664                           	opt stack 0
 24665  005154                     i48Li1l6314:
 24666                           	opt stack 14
 24667                           
 24668                           ; BSR set to: 14
 24669  005154  2E02               	decfsz	i1PHY_WaitForBusy@timeout,f,c
 24670  005156  D7FA               	goto	i48Li1l507
 24671  005158                     i48Li1l6316:
 24672                           	opt stack 14
 24673                           
 24674                           ; BSR set to: 14
 24675                           ;j60_driver.c: 307: if(timeout == 0) ret = BUSY_TIMEOUT;
 24676  005158  5002               	movf	i1PHY_WaitForBusy@timeout,w,c
 24677  00515A  A4D8               	btfss	status,2,c
 24678  00515C                     i48Li1u895_21:
 24679                           	opt stack 0
 24680  00515C  D001               	goto	i48Li1l6320
 24681  00515E                     i48Li1u895_20:
 24682                           	opt stack 0
 24683  00515E                     i48Li1l6318:
 24684                           	opt stack 14
 24685                           
 24686                           ; BSR set to: 14
 24687  00515E  6801               	setf	i1PHY_WaitForBusy@ret,c
 24688  005160                     i48Li1l6320:
 24689                           	opt stack 14
 24690                           
 24691                           ; BSR set to: 14
 24692                           ;j60_driver.c: 308: return ret;
 24693  005160  5001               	movf	i1PHY_WaitForBusy@ret,w,c
 24694  005162                     i48Li1l512:
 24695                           	opt stack 14
 24696  005162  0AFF               	xorlw	-1
 24697  005164  E105               	bnz	i1l519
 24698                           
 24699                           ; BSR set to: 14
 24700                           ;j60_driver.c: 360: {
 24701                           ;j60_driver.c: 361: ret = READ_FAIL;
 24702  005166  0EFD               	movlw	253
 24703  005168  6E08               	movwf	i1PHY_Read@ret,c
 24704  00516A  0EFF               	movlw	255
 24705  00516C  D814               	call	PL749	;call to abstracted procedure
 24706                           
 24707                           ;j60_driver.c: 362: }
 24708  00516E  D00A               	goto	i1l521
 24709  005170                     i1l519:
 24710                           
 24711                           ; BSR set to: 14
 24712                           ;j60_driver.c: 363: else
 24713                           ;j60_driver.c: 364: {
 24714                           ;j60_driver.c: 365: MICMDbits.MIIRD = 0;
 24715  005170  91B2               	bcf	178,0,b	;volatile
 24716                           
 24717                           ; BSR set to: 14
 24718                           ;j60_driver.c: 366: ret = MIRD;
 24719  005172  CEB8 F008          	movff	3768,i1PHY_Read@ret	;volatile
 24720  005176  CEB9 F009          	movff	3769,i1PHY_Read@ret+1	;volatile
 24721  00517A  6A0A               	clrf	i1PHY_Read@ret+2,c
 24722  00517C  6A0B               	clrf	i1PHY_Read@ret+3,c
 24723  00517E  D002               	goto	i1l521
 24724  005180                     i1l518:
 24725                           
 24726                           ; BSR set to: 14
 24727                           ;j60_driver.c: 369: else
 24728                           ;j60_driver.c: 370: {
 24729                           ;j60_driver.c: 371: ret = BUSY_TIMEOUT;
 24730  005180  6808               	setf	i1PHY_Read@ret,c
 24731  005182  D809               	call	PL749	;call to abstracted procedure
 24732  005184                     i1l521:
 24733                           
 24734                           ; BSR set to: 14
 24735                           ;j60_driver.c: 372: }
 24736                           ;j60_driver.c: 373: return ret;
 24737  005184  C008  F003         	movff	i1PHY_Read@ret,?i1_PHY_Read
 24738  005188  C009  F004         	movff	i1PHY_Read@ret+1,?i1_PHY_Read+1
 24739  00518C  C00A  F005         	movff	i1PHY_Read@ret+2,?i1_PHY_Read+2
 24740  005190  C00B  F006         	movff	i1PHY_Read@ret+3,?i1_PHY_Read+3
 24741                           
 24742                           ; BSR set to: 14
 24743  005194  0012               	return		;funcret
 24744  005196                     __end_ofi1_PHY_Read:
 24745                           	opt stack 0
 24746  005196                     PL749:
 24747                           	opt stack 14
 24748  005196  6809               	setf	i1PHY_Read@ret+1,c
 24749  005198  680A               	setf	i1PHY_Read@ret+2,c
 24750  00519A  680B               	setf	i1PHY_Read@ret+3,c
 24751  00519C  0012               	return	
 24752  00519E                     __end_ofPL749:
 24753                           	opt stack 0
 24754                           tosu	equ	0xFFF
 24755                           tosh	equ	0xFFE
 24756                           tosl	equ	0xFFD
 24757                           pclath	equ	0xFFA
 24758                           tblptru	equ	0xFF8
 24759                           tblptrh	equ	0xFF7
 24760                           tblptrl	equ	0xFF6
 24761                           tablat	equ	0xFF5
 24762                           prodh	equ	0xFF4
 24763                           prodl	equ	0xFF3
 24764                           intcon	equ	0xFF2
 24765                           indf0	equ	0xFEF
 24766                           postinc0	equ	0xFEE
 24767                           fsr0h	equ	0xFEA
 24768                           fsr0l	equ	0xFE9
 24769                           wreg	equ	0xFE8
 24770                           indf1	equ	0xFE7
 24771                           postinc1	equ	0xFE6
 24772                           postdec1	equ	0xFE5
 24773                           plusw1	equ	0xFE3
 24774                           fsr1h	equ	0xFE2
 24775                           fsr1l	equ	0xFE1
 24776                           bsr	equ	0xFE0
 24777                           indf2	equ	0xFDF
 24778                           postinc2	equ	0xFDE
 24779                           postdec2	equ	0xFDD
 24780                           plusw2	equ	0xFDB
 24781                           fsr2h	equ	0xFDA
 24782                           fsr2l	equ	0xFD9
 24783                           status	equ	0xFD8
 24784                           
 24785 ;; *************** function i1_PHY_WaitForBusy *****************
 24786 ;; Defined at:
 24787 ;;		line 298 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 24788 ;; Parameters:    Size  Location     Type
 24789 ;;		None
 24790 ;; Auto vars:     Size  Location     Type
 24791 ;;  PHY_WaitForB    1    1[COMRAM] unsigned char 
 24792 ;;  PHY_WaitForB    1    0[COMRAM] enum E7053
 24793 ;; Return value:  Size  Location     Type
 24794 ;;                  1    wreg      enum E7053
 24795 ;; Registers used:
 24796 ;;		wreg, status,2, status,0
 24797 ;; Tracked objects:
 24798 ;;		On entry : 0/E
 24799 ;;		On exit  : F/E
 24800 ;;		Unchanged: 0/0
 24801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24803 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24805 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24806 ;;Total ram usage:        2 bytes
 24807 ;; Hardware stack levels used:    1
 24808 ;; Hardware stack levels required when called:    2
 24809 ;; This function calls:
 24810 ;;		Nothing
 24811 ;; This function is called by:
 24812 ;;		i1_PHY_Read
 24813 ;; This function uses a non-reentrant model
 24814 ;;
 24815                           
 24816                           	psect	text107
 24817  000000                     __ptext107:
 24818                           	opt stack 0
 24819  000000                     __end_ofi1_PHY_WaitForBusy:
 24820                           	opt stack 0
 24821                           tosu	equ	0xFFF
 24822                           tosh	equ	0xFFE
 24823                           tosl	equ	0xFFD
 24824                           pclath	equ	0xFFA
 24825                           tblptru	equ	0xFF8
 24826                           tblptrh	equ	0xFF7
 24827                           tblptrl	equ	0xFF6
 24828                           tablat	equ	0xFF5
 24829                           prodh	equ	0xFF4
 24830                           prodl	equ	0xFF3
 24831                           intcon	equ	0xFF2
 24832                           indf0	equ	0xFEF
 24833                           postinc0	equ	0xFEE
 24834                           fsr0h	equ	0xFEA
 24835                           fsr0l	equ	0xFE9
 24836                           wreg	equ	0xFE8
 24837                           indf1	equ	0xFE7
 24838                           postinc1	equ	0xFE6
 24839                           postdec1	equ	0xFE5
 24840                           plusw1	equ	0xFE3
 24841                           fsr1h	equ	0xFE2
 24842                           fsr1l	equ	0xFE1
 24843                           bsr	equ	0xFE0
 24844                           indf2	equ	0xFDF
 24845                           postinc2	equ	0xFDE
 24846                           postdec2	equ	0xFDD
 24847                           plusw2	equ	0xFDB
 24848                           fsr2h	equ	0xFDA
 24849                           fsr2l	equ	0xFD9
 24850                           status	equ	0xFD8
 24851                           
 24852 ;; *************** function _high_isr *****************
 24853 ;; Defined at:
 24854 ;;		line 57 in file "main.c"
 24855 ;; Parameters:    Size  Location     Type
 24856 ;;		None
 24857 ;; Auto vars:     Size  Location     Type
 24858 ;;		None
 24859 ;; Return value:  Size  Location     Type
 24860 ;;                  1    wreg      void 
 24861 ;; Registers used:
 24862 ;;		wreg, status,2, status,0, cstack
 24863 ;; Tracked objects:
 24864 ;;		On entry : 0/0
 24865 ;;		On exit  : 0/0
 24866 ;;		Unchanged: 0/0
 24867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24872 ;;Total ram usage:        0 bytes
 24873 ;; Hardware stack levels used:    1
 24874 ;; Hardware stack levels required when called:    1
 24875 ;; This function calls:
 24876 ;;		_rtcc_handler
 24877 ;; This function is called by:
 24878 ;;		Interrupt level 2
 24879 ;; This function uses a non-reentrant model
 24880 ;;
 24881                           
 24882                           	psect	intcode
 24883  000008                     __pintcode:
 24884                           	opt stack 0
 24885  000008                     _high_isr:
 24886                           	opt stack 12
 24887                           
 24888                           ; BSR set to: 14
 24889                           ;incstack = 0
 24890  000008  8249               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 24891  00000A  EF5F  F032         	goto	int_func
 24892                           tosu	equ	0xFFF
 24893                           tosh	equ	0xFFE
 24894                           tosl	equ	0xFFD
 24895                           pclath	equ	0xFFA
 24896                           tblptru	equ	0xFF8
 24897                           tblptrh	equ	0xFF7
 24898                           tblptrl	equ	0xFF6
 24899                           tablat	equ	0xFF5
 24900                           prodh	equ	0xFF4
 24901                           prodl	equ	0xFF3
 24902                           intcon	equ	0xFF2
 24903                           indf0	equ	0xFEF
 24904                           postinc0	equ	0xFEE
 24905                           fsr0h	equ	0xFEA
 24906                           fsr0l	equ	0xFE9
 24907                           wreg	equ	0xFE8
 24908                           indf1	equ	0xFE7
 24909                           postinc1	equ	0xFE6
 24910                           postdec1	equ	0xFE5
 24911                           plusw1	equ	0xFE3
 24912                           fsr1h	equ	0xFE2
 24913                           fsr1l	equ	0xFE1
 24914                           bsr	equ	0xFE0
 24915                           indf2	equ	0xFDF
 24916                           postinc2	equ	0xFDE
 24917                           postdec2	equ	0xFDD
 24918                           plusw2	equ	0xFDB
 24919                           fsr2h	equ	0xFDA
 24920                           fsr2l	equ	0xFD9
 24921                           status	equ	0xFD8
 24922                           
 24923                           	psect	intcode_body
 24924  0064BE                     __pintcode_body:
 24925                           	opt stack 12
 24926  0064BE                     int_func:
 24927                           	opt stack 12
 24928                           
 24929                           ;main.c: 59: rtcc_handler();
 24930  0064BE  EC07  F031         	call	_rtcc_handler	;wreg free
 24931  0064C2  9249               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 24932  0064C4  0011               	retfie		f
 24933  0064C6                     __end_of_high_isr:
 24934                           	opt stack 0
 24935                           tosu	equ	0xFFF
 24936                           tosh	equ	0xFFE
 24937                           tosl	equ	0xFFD
 24938                           pclath	equ	0xFFA
 24939                           tblptru	equ	0xFF8
 24940                           tblptrh	equ	0xFF7
 24941                           tblptrl	equ	0xFF6
 24942                           tablat	equ	0xFF5
 24943                           prodh	equ	0xFF4
 24944                           prodl	equ	0xFF3
 24945                           intcon	equ	0xFF2
 24946                           indf0	equ	0xFEF
 24947                           postinc0	equ	0xFEE
 24948                           fsr0h	equ	0xFEA
 24949                           fsr0l	equ	0xFE9
 24950                           wreg	equ	0xFE8
 24951                           indf1	equ	0xFE7
 24952                           postinc1	equ	0xFE6
 24953                           postdec1	equ	0xFE5
 24954                           plusw1	equ	0xFE3
 24955                           fsr1h	equ	0xFE2
 24956                           fsr1l	equ	0xFE1
 24957                           bsr	equ	0xFE0
 24958                           indf2	equ	0xFDF
 24959                           postinc2	equ	0xFDE
 24960                           postdec2	equ	0xFDD
 24961                           plusw2	equ	0xFDB
 24962                           fsr2h	equ	0xFDA
 24963                           fsr2l	equ	0xFD9
 24964                           status	equ	0xFD8
 24965                           
 24966 ;; *************** function _rtcc_handler *****************
 24967 ;; Defined at:
 24968 ;;		line 122 in file "../board_support_package/picdem2_net/rtcc.c"
 24969 ;; Parameters:    Size  Location     Type
 24970 ;;		None
 24971 ;; Auto vars:     Size  Location     Type
 24972 ;;		None
 24973 ;; Return value:  Size  Location     Type
 24974 ;;                  1    wreg      void 
 24975 ;; Registers used:
 24976 ;;		wreg, status,2, status,0
 24977 ;; Tracked objects:
 24978 ;;		On entry : 0/0
 24979 ;;		On exit  : 0/0
 24980 ;;		Unchanged: 0/0
 24981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24986 ;;Total ram usage:        0 bytes
 24987 ;; Hardware stack levels used:    1
 24988 ;; This function calls:
 24989 ;;		Nothing
 24990 ;; This function is called by:
 24991 ;;		_high_isr
 24992 ;; This function uses a non-reentrant model
 24993 ;;
 24994                           
 24995                           	psect	text109
 24996  00620E                     __ptext109:
 24997                           	opt stack 0
 24998  00620E                     _rtcc_handler:
 24999                           	opt stack 12
 25000                           
 25001                           ;rtcc.c: 124: if(TMR1IE && TMR1IF)
 25002                           
 25003                           ;incstack = 0
 25004  00620E  B09D               	btfsc	3997,0,c	;volatile
 25005  006210  A09E               	btfss	3998,0,c	;volatile
 25006  006212  0012               	return	
 25007                           
 25008                           ;rtcc.c: 125: {
 25009                           ;rtcc.c: 126: TMR1IF = 0;
 25010  006214  909E               	bcf	3998,0,c	;volatile
 25011                           
 25012                           ;rtcc.c: 127: TMR1ON = 0;
 25013  006216  90CD               	bcf	4045,0,c	;volatile
 25014                           
 25015                           ;rtcc.c: 128: TMR1 = 32768UL;
 25016  006218  0E80               	movlw	128
 25017  00621A  6ECF               	movwf	4047,c	;volatile
 25018  00621C  6ACE               	clrf	4046,c	;volatile
 25019                           
 25020                           ;rtcc.c: 129: TMR1ON = 1;
 25021  00621E  80CD               	bsf	4045,0,c	;volatile
 25022                           
 25023                           ;rtcc.c: 130: deviceTime++;
 25024  006220  0102               	movlb	2	; () banked
 25025  006222  2BD4               	incf	_deviceTime& (0+255),f,b	;volatile
 25026  006224  0E00               	movlw	0
 25027  006226  23D5               	addwfc	(_deviceTime+1)& (0+255),f,b	;volatile
 25028  006228  23D6               	addwfc	(_deviceTime+2)& (0+255),f,b	;volatile
 25029  00622A  23D7               	addwfc	(_deviceTime+3)& (0+255),f,b	;volatile
 25030                           
 25031                           ; BSR set to: 2
 25032                           ;rtcc.c: 131: localTime++;
 25033  00622C  2BD8               	incf	_localTime& (0+255),f,b	;volatile
 25034  00622E  23D9               	addwfc	(_localTime+1)& (0+255),f,b	;volatile
 25035  006230  23DA               	addwfc	(_localTime+2)& (0+255),f,b	;volatile
 25036  006232  23DB               	addwfc	(_localTime+3)& (0+255),f,b	;volatile
 25037  006234  0C00               	retlw	0	;funcret
 25038  006236                     __end_of_rtcc_handler:
 25039                           	opt stack 0
 25040                           tosu	equ	0xFFF
 25041                           tosh	equ	0xFFE
 25042                           tosl	equ	0xFFD
 25043                           pclath	equ	0xFFA
 25044                           tblptru	equ	0xFF8
 25045                           tblptrh	equ	0xFF7
 25046                           tblptrl	equ	0xFF6
 25047                           tablat	equ	0xFF5
 25048                           prodh	equ	0xFF4
 25049                           prodl	equ	0xFF3
 25050                           intcon	equ	0xFF2
 25051                           indf0	equ	0xFEF
 25052                           postinc0	equ	0xFEE
 25053                           fsr0h	equ	0xFEA
 25054                           fsr0l	equ	0xFE9
 25055                           wreg	equ	0xFE8
 25056                           indf1	equ	0xFE7
 25057                           postinc1	equ	0xFE6
 25058                           postdec1	equ	0xFE5
 25059                           plusw1	equ	0xFE3
 25060                           fsr1h	equ	0xFE2
 25061                           fsr1l	equ	0xFE1
 25062                           bsr	equ	0xFE0
 25063                           indf2	equ	0xFDF
 25064                           postinc2	equ	0xFDE
 25065                           postdec2	equ	0xFDD
 25066                           plusw2	equ	0xFDB
 25067                           fsr2h	equ	0xFDA
 25068                           fsr2l	equ	0xFD9
 25069                           status	equ	0xFD8
 25070                           tosu	equ	0xFFF
 25071                           tosh	equ	0xFFE
 25072                           tosl	equ	0xFFD
 25073                           pclath	equ	0xFFA
 25074                           tblptru	equ	0xFF8
 25075                           tblptrh	equ	0xFF7
 25076                           tblptrl	equ	0xFF6
 25077                           tablat	equ	0xFF5
 25078                           prodh	equ	0xFF4
 25079                           prodl	equ	0xFF3
 25080                           intcon	equ	0xFF2
 25081                           indf0	equ	0xFEF
 25082                           postinc0	equ	0xFEE
 25083                           fsr0h	equ	0xFEA
 25084                           fsr0l	equ	0xFE9
 25085                           wreg	equ	0xFE8
 25086                           indf1	equ	0xFE7
 25087                           postinc1	equ	0xFE6
 25088                           postdec1	equ	0xFE5
 25089                           plusw1	equ	0xFE3
 25090                           fsr1h	equ	0xFE2
 25091                           fsr1l	equ	0xFE1
 25092                           bsr	equ	0xFE0
 25093                           indf2	equ	0xFDF
 25094                           postinc2	equ	0xFDE
 25095                           postdec2	equ	0xFDD
 25096                           plusw2	equ	0xFDB
 25097                           fsr2h	equ	0xFDA
 25098                           fsr2l	equ	0xFD9
 25099                           status	equ	0xFD8
 25100                           
 25101                           	psect	text110
 25102  000000                     __ptext110:
 25103                           	opt stack 0
 25104                           tosu	equ	0xFFF
 25105                           tosh	equ	0xFFE
 25106                           tosl	equ	0xFFD
 25107                           pclath	equ	0xFFA
 25108                           tblptru	equ	0xFF8
 25109                           tblptrh	equ	0xFF7
 25110                           tblptrl	equ	0xFF6
 25111                           tablat	equ	0xFF5
 25112                           prodh	equ	0xFF4
 25113                           prodl	equ	0xFF3
 25114                           intcon	equ	0xFF2
 25115                           indf0	equ	0xFEF
 25116                           postinc0	equ	0xFEE
 25117                           fsr0h	equ	0xFEA
 25118                           fsr0l	equ	0xFE9
 25119                           wreg	equ	0xFE8
 25120                           indf1	equ	0xFE7
 25121                           postinc1	equ	0xFE6
 25122                           postdec1	equ	0xFE5
 25123                           plusw1	equ	0xFE3
 25124                           fsr1h	equ	0xFE2
 25125                           fsr1l	equ	0xFE1
 25126                           bsr	equ	0xFE0
 25127                           indf2	equ	0xFDF
 25128                           postinc2	equ	0xFDE
 25129                           postdec2	equ	0xFDD
 25130                           plusw2	equ	0xFDB
 25131                           fsr2h	equ	0xFDA
 25132                           fsr2l	equ	0xFD9
 25133                           status	equ	0xFD8
 25134                           
 25135                           	psect	rparam
 25136  0000                     tosu	equ	0xFFF
 25137                           tosh	equ	0xFFE
 25138                           tosl	equ	0xFFD
 25139                           pclath	equ	0xFFA
 25140                           tblptru	equ	0xFF8
 25141                           tblptrh	equ	0xFF7
 25142                           tblptrl	equ	0xFF6
 25143                           tablat	equ	0xFF5
 25144                           prodh	equ	0xFF4
 25145                           prodl	equ	0xFF3
 25146                           intcon	equ	0xFF2
 25147                           indf0	equ	0xFEF
 25148                           postinc0	equ	0xFEE
 25149                           fsr0h	equ	0xFEA
 25150                           fsr0l	equ	0xFE9
 25151                           wreg	equ	0xFE8
 25152                           indf1	equ	0xFE7
 25153                           postinc1	equ	0xFE6
 25154                           postdec1	equ	0xFE5
 25155                           plusw1	equ	0xFE3
 25156                           fsr1h	equ	0xFE2
 25157                           fsr1l	equ	0xFE1
 25158                           bsr	equ	0xFE0
 25159                           indf2	equ	0xFDF
 25160                           postinc2	equ	0xFDE
 25161                           postdec2	equ	0xFDD
 25162                           plusw2	equ	0xFDB
 25163                           fsr2h	equ	0xFDA
 25164                           fsr2l	equ	0xFD9
 25165                           status	equ	0xFD8
 25166                           
 25167                           	psect	temp
 25168  000049                     btemp:
 25169                           	opt stack 0
 25170  000049                     	ds	1
 25171  0000                     int$flags	set	btemp
 25172                           tosu	equ	0xFFF
 25173                           tosh	equ	0xFFE
 25174                           tosl	equ	0xFFD
 25175                           pclath	equ	0xFFA
 25176                           tblptru	equ	0xFF8
 25177                           tblptrh	equ	0xFF7
 25178                           tblptrl	equ	0xFF6
 25179                           tablat	equ	0xFF5
 25180                           prodh	equ	0xFF4
 25181                           prodl	equ	0xFF3
 25182                           intcon	equ	0xFF2
 25183                           indf0	equ	0xFEF
 25184                           postinc0	equ	0xFEE
 25185                           fsr0h	equ	0xFEA
 25186                           fsr0l	equ	0xFE9
 25187                           wreg	equ	0xFE8
 25188                           indf1	equ	0xFE7
 25189                           postinc1	equ	0xFE6
 25190                           postdec1	equ	0xFE5
 25191                           plusw1	equ	0xFE3
 25192                           fsr1h	equ	0xFE2
 25193                           fsr1l	equ	0xFE1
 25194                           bsr	equ	0xFE0
 25195                           indf2	equ	0xFDF
 25196                           postinc2	equ	0xFDE
 25197                           postdec2	equ	0xFDD
 25198                           plusw2	equ	0xFDB
 25199                           fsr2h	equ	0xFDA
 25200                           fsr2l	equ	0xFD9
 25201                           status	equ	0xFD8
 25202                           tosu	equ	0xFFF
 25203                           tosh	equ	0xFFE
 25204                           tosl	equ	0xFFD
 25205                           pclath	equ	0xFFA
 25206                           tblptru	equ	0xFF8
 25207                           tblptrh	equ	0xFF7
 25208                           tblptrl	equ	0xFF6
 25209                           tablat	equ	0xFF5
 25210                           prodh	equ	0xFF4
 25211                           prodl	equ	0xFF3
 25212                           intcon	equ	0xFF2
 25213                           indf0	equ	0xFEF
 25214                           postinc0	equ	0xFEE
 25215                           fsr0h	equ	0xFEA
 25216                           fsr0l	equ	0xFE9
 25217                           wreg	equ	0xFE8
 25218                           indf1	equ	0xFE7
 25219                           postinc1	equ	0xFE6
 25220                           postdec1	equ	0xFE5
 25221                           plusw1	equ	0xFE3
 25222                           fsr1h	equ	0xFE2
 25223                           fsr1l	equ	0xFE1
 25224                           bsr	equ	0xFE0
 25225                           indf2	equ	0xFDF
 25226                           postinc2	equ	0xFDE
 25227                           postdec2	equ	0xFDD
 25228                           plusw2	equ	0xFDB
 25229                           fsr2h	equ	0xFDA
 25230                           fsr2l	equ	0xFD9
 25231                           status	equ	0xFD8


Data Sizes:
    Strings     137
    Constant    56
    Data        1
    BSS         337
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     50      72
    BANK0           160    160     160
    BANK1           256    189     234
    BANK2           256     45     220
    BANK3           256      0     104
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          126      0       0
    BANK15           96      0       0

Pointer List with Targets:

    F7391.nextTCB.prevTCB	PTR void  size(2) Largest target is 0
		 -> TCP_Server@port7TCB(BANK2[55]), NULL(NULL[0]), 

    F7391.nextTCB.nextTCB	PTR void  size(2) Largest target is 0
		 -> TCP_Server@port7TCB(BANK2[55]), NULL(NULL[0]), 

    F7391.nextTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> TCP_Server@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    F7391.nextTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> TCP_Server@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    F7391.nextTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> TCP_Server@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    F7391.nextTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> TCP_Server@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    F7391.prevTCB.prevTCB	PTR void  size(2) Largest target is 0
		 -> TCP_Server@port7TCB(BANK2[55]), NULL(NULL[0]), 

    F7391.prevTCB.nextTCB	PTR void  size(2) Largest target is 0
		 -> TCP_Server@port7TCB(BANK2[55]), NULL(NULL[0]), 

    F7391.prevTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> TCP_Server@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    F7391.prevTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> TCP_Server@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    F7391.prevTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> TCP_Server@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    F7391.prevTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> TCP_Server@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_9(CODE[12]), STR_2(CODE[8]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    sprintf@wh	PTR unsigned char  size(2) Largest target is 80
		 -> main@str(BANK2[32]), Network_Read@debug_str(BANK1[80]), 

    pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 80
		 -> main@str(BANK2[32]), Network_Read@debug_str(BANK1[80]), NULL(NULL[0]), 

    printf@f	PTR const unsigned char  size(1) Largest target is 28
		 -> STR_4(CODE[10]), STR_3(CODE[28]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 80
		 -> main@str(BANK2[32]), Network_Read@debug_str(BANK1[80]), NULL(NULL[0]), 

    memset@p1	PTR void  size(2) Largest target is 32
		 -> main@str(BANK2[32]), 

    memset@p	PTR unsigned char  size(2) Largest target is 32
		 -> main@str(BANK2[32]), 

    memcmp@s2	PTR const void  size(1) Largest target is 6
		 -> DHCP_Handler@ethMAC(BANK0[6]), 

    memcmp@s1	PTR const void  size(1) Largest target is 6
		 -> DHCP_Handler@ethPktMAC(BANK0[6]), 

    _doprnt@f	PTR const unsigned char  size(1) Largest target is 28
		 -> STR_9(CODE[12]), STR_4(CODE[10]), STR_3(CODE[28]), STR_2(CODE[8]), 

    _doprnt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), printf@ap(BANK0[1]), 

    _doprnt@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), STR_10(CODE[7]), main@str(BANK2[32]), 
		 -> STR_8(CODE[13]), STR_7(CODE[17]), STR_6(CODE[7]), STR_5(CODE[10]), 
		 -> Network_Read@debug_str(BANK1[80]), STR_1(CODE[15]), NULL(NULL[0]), 

    S4292__prbuf$func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> Absolute function(), putch(), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> Absolute function(), putch(), 

    S4292__prbuf$ptr	PTR unsigned char  size(2) Largest target is 80
		 -> main@str(BANK2[32]), Network_Read@debug_str(BANK1[80]), NULL(NULL[0]), 

    _doprnt@pb.ptr	PTR unsigned char  size(2) Largest target is 80
		 -> main@str(BANK2[32]), Network_Read@debug_str(BANK1[80]), NULL(NULL[0]), 

    _doprnt@pb	PTR struct __prbuf size(1) Largest target is 6
		 -> sprintf@pb(BANK0[5]), printf@pb(BANK0[5]), 

    sp__memset	PTR void  size(2) Largest target is 32
		 -> main@str(BANK2[32]), 

    F7391.prevTCB	PTR void  size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), NULL(NULL[0]), 

    F7391.nextTCB	PTR void  size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), NULL(NULL[0]), 

    F7391.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    F7391.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    F7391.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    F7391.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    UDP_Receive@hptr.callBack	PTR FTN(int ,)void  size(3) Largest target is 1
		 -> DHCP_Handler(), 

    UDP_Receive@hptr	PTR const struct . size(1) Largest target is 5
		 -> UDP_CallBackTable(CODE[5]), 

    TCP_Update@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Update@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Update@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Update@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Update@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Update@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Update@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), main@str(BANK2[32]), STR_8(CODE[13]), 
		 -> STR_7(CODE[17]), STR_6(CODE[7]), STR_5(CODE[10]), TCP_Server@port7TCB(BANK2[55]), 
		 -> Network_Read@debug_str(BANK1[80]), STR_1(CODE[15]), NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), 

    TCP_GetReceivedData@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), 

    TCP_InsertRxBuffer@data	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@rxdataPort7(BANK2[20]), 

    TCP_InsertRxBuffer@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), 

    TCP_SendDone@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_SendDone@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_SendDone@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_SendDone@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_SendDone@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_SendDone@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_SendDone@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), 

    TCP_Send@data	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@txdataPort7(BANK2[20]), 

    TCP_Send@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Send@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Send@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Send@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Send@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Send@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Send@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), 

    TCP_Close@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Close@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Close@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Close@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Close@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Close@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Connect@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Connect@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Connect@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Connect@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Connect@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Connect@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Listen@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Listen@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Listen@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Listen@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Listen@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Listen@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Listen@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), 

    TCP_Bind@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Bind@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Bind@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Bind@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Bind@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Bind@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Bind@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), 

    TCP_SocketPoll@socket_ptr.prevTCB	PTR void  size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr.nextTCB	PTR void  size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr	PTR struct . size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), 

    TCP_SocketInit@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), 

    TCP_Recv@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Recv@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Recv@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Recv@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Recv@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Recv@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Recv@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), main@str(BANK2[32]), STR_8(CODE[13]), 
		 -> STR_7(CODE[17]), STR_6(CODE[7]), STR_5(CODE[10]), TCP_Server@port7TCB(BANK2[55]), 
		 -> Network_Read@debug_str(BANK1[80]), STR_1(CODE[15]), NULL(NULL[0]), 

    currentTCB.prevTCB	PTR void  size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), NULL(NULL[0]), 

    currentTCB.nextTCB	PTR void  size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), NULL(NULL[0]), 

    currentTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    currentTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    currentTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    currentTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    currentTCB	PTR struct . size(2) Largest target is 61
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), main@str(BANK2[32]), STR_8(CODE[13]), 
		 -> STR_7(CODE[17]), STR_6(CODE[7]), STR_5(CODE[10]), TCP_Server@port7TCB(BANK2[55]), 
		 -> Network_Read@debug_str(BANK1[80]), STR_1(CODE[15]), NULL(NULL[0]), 

    TCP_Snd@data	PTR unsigned char  size(2) Largest target is 20
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), main@str(BANK2[32]), STR_8(CODE[13]), 
		 -> STR_7(CODE[17]), TCP_Server@txdataPort7(BANK2[20]), STR_6(CODE[7]), STR_5(CODE[10]), 
		 -> Network_Read@debug_str(BANK1[80]), STR_1(CODE[15]), NULL(NULL[0]), 

    TCP_Snd@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Snd@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Snd@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Snd@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Snd@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Snd@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Snd@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), main@str(BANK2[32]), STR_8(CODE[13]), 
		 -> STR_7(CODE[17]), STR_6(CODE[7]), STR_5(CODE[10]), TCP_Server@port7TCB(BANK2[55]), 
		 -> Network_Read@debug_str(BANK1[80]), STR_1(CODE[15]), NULL(NULL[0]), 

    TCB_Check@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Check@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Check@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Check@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Check@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Check@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Check@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), main@str(BANK2[32]), STR_8(CODE[13]), 
		 -> STR_7(CODE[17]), STR_6(CODE[7]), STR_5(CODE[10]), TCP_Server@port7TCB(BANK2[55]), 
		 -> Network_Read@debug_str(BANK1[80]), STR_1(CODE[15]), NULL(NULL[0]), 

    TCB_Check@ptr	PTR struct . size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), 

    TCB_Reset@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Reset@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Reset@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Reset@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Reset@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Reset@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Reset@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), main@str(BANK2[32]), STR_8(CODE[13]), 
		 -> STR_7(CODE[17]), STR_6(CODE[7]), STR_5(CODE[10]), TCP_Server@port7TCB(BANK2[55]), 
		 -> Network_Read@debug_str(BANK1[80]), STR_1(CODE[15]), NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB.prevTCB	PTR void  size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB.nextTCB	PTR void  size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB.prevTCB	PTR void  size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB.nextTCB	PTR void  size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB	PTR void  size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB	PTR void  size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Remove@ptr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Remove@ptr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Remove@ptr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Remove@ptr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB.prevTCB	PTR void  size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB.nextTCB	PTR void  size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Insert@ptr.prevTCB	PTR void  size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB	PTR void  size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Insert@ptr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Insert@ptr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Insert@ptr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Insert@ptr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    tcbList.prevTCB.prevTCB	PTR void  size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), NULL(NULL[0]), 

    tcbList.prevTCB.nextTCB	PTR void  size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), NULL(NULL[0]), 

    tcbList.prevTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    tcbList.prevTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    tcbList.prevTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    tcbList.prevTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    S2664$prevTCB	PTR void  size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), NULL(NULL[0]), 

    tcbList.prevTCB	PTR void  size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), NULL(NULL[0]), 

    S2664$nextTCB	PTR void  size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), NULL(NULL[0]), 

    tcbList.nextTCB	PTR void  size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), NULL(NULL[0]), 

    S2664$txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    tcbList.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    S2664$txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    tcbList.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    S2664$rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    tcbList.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    S2664$rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    tcbList.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> TCP_Server@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Insert@ptr	PTR struct . size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), 

    tcbList	PTR struct . size(2) Largest target is 61
		 -> TCP_Server@port7TCB(BANK2[55]), NULL(NULL[0]), 

    SYSLOG_Write@message	PTR const unsigned char  size(2) Largest target is 32
		 -> main@str(BANK2[32]), STR_8(CODE[13]), STR_7(CODE[17]), STR_6(CODE[7]), 
		 -> STR_5(CODE[10]), STR_1(CODE[15]), 

    IPv4_Start@macAddress	PTR const struct . size(2) Largest target is 104
		 -> arpMap.macAddress(BANK3[6]), broadcastMAC(CODE[6]), arpMap(BANK3[104]), NULL(NULL[0]), 

    IPV4_PseudoHeaderChecksum@v	PTR unsigned int  size(1) Largest target is 12
		 -> IPV4_PseudoHeaderChecksum@tmp(COMRAM[12]), 

    ICMP_EchoReply@icmpHdr	PTR struct . size(1) Largest target is 8
		 -> ICMP_Receive@icmpHdr(BANK0[8]), 

    ICMP_EchoReply@ipv4Hdr	PTR struct . size(2) Largest target is 20
		 -> ipv4Header(BANK2[20]), 

    ICMP_Receive@ipv4Hdr	PTR struct . size(2) Largest target is 20
		 -> ipv4Header(BANK2[20]), 

    S1755$callBack	PTR FTN(int ,)void  size(3) Largest target is 1
		 -> DHCP_Handler(), 

    UDP_CallBackTable.callBack	PTR FTN(int ,)void  size(3) Largest target is 1
		 -> DHCP_Handler(), 

    sp__ARPV4_Lookup	PTR struct . size(2) Largest target is 104
		 -> arpMap.macAddress(BANK3[6]), arpMap(BANK3[104]), NULL(NULL[0]), 

    ARPV4_Lookup@entry_pointer	PTR struct . size(2) Largest target is 104
		 -> arpMap(BANK3[104]), 

    ARPV4_Update@entryPointer	PTR struct . size(2) Largest target is 104
		 -> arpMap(BANK3[104]), 

    ARPV4_Packet@arpPtr	PTR struct . size(2) Largest target is 104
		 -> arpMap(BANK3[104]), 

    ARPV4_Packet@entryPointer	PTR struct . size(2) Largest target is 104
		 -> arpMap(BANK3[104]), 

    ETH_GetMAC@mac	PTR unsigned char  size(1) Largest target is 28
		 -> DHCP_Handler@ethMAC(BANK0[6]), DHCP_Request@ethMAC(BANK0[6]), ARPV4_Request@header(BANK0[28]), header.sha(COMRAM[6]), 
		 -> ARPV4_Packet@header(BANK0[28]), 

    ETH_Insert@data	PTR unsigned char  size(1) Largest target is 2
		 -> UDP_Send@cksm(BANK0[2]), UDP_Send@udpLength(BANK0[2]), TCP_Snd@cksm(BANK0[2]), IPV4_Send@cksm(BANK0[2]), 
		 -> IPV4_Send@totalLength(BANK0[2]), ICMP_EchoReply@cksm(BANK0[2]), 

    ETH_WriteStart@dest_mac	PTR const struct . size(2) Largest target is 104
		 -> arpMap.macAddress(BANK3[6]), broadcastMAC(CODE[6]), header.sha(COMRAM[6]), ARPV4_Packet@header(BANK0[28]), 
		 -> arpMap(BANK3[104]), NULL(NULL[0]), 

    ETH_WriteBlock@buffer	PTR void  size(2) Largest target is 28
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), main@str(BANK2[32]), STR_8(CODE[13]), 
		 -> STR_7(CODE[17]), TCP_Server@txdataPort7(BANK2[20]), STR_6(CODE[7]), STR_5(CODE[10]), 
		 -> TCP_Snd@txHeader(BANK0[20]), Network_Read@debug_str(BANK1[80]), dhcpName(CODE[21]), DHCP_Request@ethMAC(BANK0[6]), 
		 -> ARPV4_Request@header(BANK0[28]), ARPV4_Packet@header(BANK0[28]), STR_1(CODE[15]), NULL(NULL[0]), 

    ETH_WriteBlock@p	PTR unsigned char  size(2) Largest target is 28
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), main@str(BANK2[32]), STR_8(CODE[13]), 
		 -> STR_7(CODE[17]), TCP_Server@txdataPort7(BANK2[20]), STR_6(CODE[7]), STR_5(CODE[10]), 
		 -> TCP_Snd@txHeader(BANK0[20]), Network_Read@debug_str(BANK1[80]), dhcpName(CODE[21]), DHCP_Request@ethMAC(BANK0[6]), 
		 -> ARPV4_Request@header(BANK0[28]), ARPV4_Packet@header(BANK0[28]), STR_1(CODE[15]), NULL(NULL[0]), 

    ETH_ReadBlock@buffer	PTR void  size(2) Largest target is 28
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), main@str(BANK2[32]), STR_8(CODE[13]), 
		 -> STR_7(CODE[17]), STR_6(CODE[7]), TCP_Server@rxdataPort7(BANK2[20]), STR_5(CODE[10]), 
		 -> udpHeader(BANK2[8]), tcpHeader(BANK1[20]), Network_Read@debug_str(BANK1[80]), Network_Read@header(BANK1[14]), 
		 -> ipv4Header(BANK2[20]), ICMP_Receive@icmpHdr(BANK0[8]), DHCP_Handler@ethPktMAC(BANK0[6]), ARPV4_Packet@header(BANK0[28]), 
		 -> STR_1(CODE[15]), NULL(NULL[0]), 

    ETH_ReadBlock@p	PTR unsigned char  size(2) Largest target is 28
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), main@str(BANK2[32]), STR_8(CODE[13]), 
		 -> STR_7(CODE[17]), STR_6(CODE[7]), TCP_Server@rxdataPort7(BANK2[20]), STR_5(CODE[10]), 
		 -> udpHeader(BANK2[8]), tcpHeader(BANK1[20]), Network_Read@debug_str(BANK1[80]), Network_Read@header(BANK1[14]), 
		 -> ipv4Header(BANK2[20]), ICMP_Receive@icmpHdr(BANK0[8]), DHCP_Handler@ethPktMAC(BANK0[6]), ARPV4_Packet@header(BANK0[28]), 
		 -> STR_1(CODE[15]), NULL(NULL[0]), 

    sp__MAC_getAddress	PTR const struct . size(1) Largest target is 6
		 -> macAddress(CODE[6]), 

    ETH_Init@mac	PTR const struct . size(1) Largest target is 6
		 -> macAddress(CODE[6]), 

    time@t	PTR long  size(2) Largest target is 4
		 -> main@t(BANK2[4]), Network_Manage@now(BANK1[4]), arpTimer(BANK1[4]), NULL(NULL[0]), 

    lcd_puts@s	PTR const unsigned char  size(2) Largest target is 32
		 -> main@str(BANK2[32]), 


Critical Paths under _main in COMRAM

    _main->_SYSLOG_Write
    _lcd_puts->_lcd_putch
    _lcd_putch->_lcd_write_data
    _lcd_goto1->_lcd_write_ctrl
    _initHW->_lcd_init
    _lcd_init->_lcd_write_ctrl
    _TCP_Server->_SYSLOG_Write
    _TCP_SocketInit->_TCB_Check
    _TCP_SendDone->_TCB_Check
    _TCP_SocketPoll->_TCB_Check
    _TCP_InsertRxBuffer->_TCB_Check
    _TCP_GetRxLength->_TCB_Check
    _TCP_GetReceivedData->_TCB_Check
    _TCP_Bind->_TCB_Check
    _Network_WaitForLink->_ETH_CheckLinkUp
    _sprintf->__doprnt
    _IPV4_Packet->_ETH_RxComputeChecksum
    _TCP_ParseTCPOptions->_ETH_Read16
    _TCP_Snd->_IPV4_Send
    _ICMP_EchoReply->_IPV4_Send
    _ETH_Copy->_SYSLOG_Write
    _printf->__doprnt
    __doprnt->___lwmod
    ___lwmod->___lwdiv
    _ETH_RxComputeChecksum->_ETH_ComputeChecksum
    _ARPV4_Packet->_ETH_ReadBlock
    _ETH_EventHandler->_ETH_CheckLinkUp
    _UDP_Start->_IPv4_Start
    _IPv4_Start->_ARPV4_Lookup
    _ARPV4_Request->_ETH_WriteBlock
    _ARPV4_Request->_ETH_WriteStart
    _UDP_Send->_IPV4_Send
    _IPV4_Send->_ETH_TxComputeChecksum
    _ETH_TxComputeChecksum->_ETH_ComputeChecksum
    _DHCP_WriteZeros->_ETH_Write8
    _Network_Init->_ETH_Init
    _ETH_Init->_ETH_CheckLinkUp
    _PHY_Write->_PHY_WaitForBusy
    _ETH_CheckLinkUp->_ETH_readLinkStatus
    _ETH_readLinkStatus->_PHY_Read
    _PHY_Read->_PHY_WaitForBusy

Critical Paths under _low_isr in COMRAM

    i1_ETH_EventHandler->i1_ETH_CheckLinkUp
    i1_ETH_CheckLinkUp->i1_ETH_readLinkStatus
    i1_ETH_readLinkStatus->i1_PHY_Read
    i1_PHY_Read->i1_PHY_WaitForBusy

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_Network_Manage
    _TCP_Server->_TCP_Listen
    _TCP_Send->_TCP_Snd
    _SYSLOG_Init->_printf
    _UDP_Receive->_DHCP_Handler
    _DHCP_Handler->_DHCP_Request
    _TCP_FiniteStateMachine->_TCP_PayloadSave
    _TCP_PayloadSave->_TCP_Snd
    _TCP_Snd->_IPv4_Start
    _ICMP_Receive->_ICMP_EchoReply
    _ICMP_EchoReply->_IPv4_Start
    _ETH_Copy->_SYSLOG_Write
    _SYSLOG_Write->_printf
    _DHCP_Manage->_DHCP_Request
    _DHCP_Request->_UDP_Start
    _UDP_Start->_IPv4_Start
    _IPv4_Start->_ARPV4_Request
    _UDP_Send->_IPV4_Send
    _IPV4_Send->_ETH_TxComputeChecksum

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Network_Manage
    _TCP_Server->_TCP_Listen
    _TCP_Listen->_TCP_FiniteStateMachine
    _Network_Manage->_Network_Read
    _TCP_Update->_TCP_FiniteStateMachine
    _Network_Read->_IPV4_Packet
    _IPV4_Packet->_TCP_Recv
    _TCP_Recv->_TCP_FiniteStateMachine

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _low_isr in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _low_isr in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _low_isr in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                45    45      0  316559
                                              0 BANK2     45    45      0
                       _IPV4_GetMyIP
                       _Network_Init
                     _Network_Manage
                _Network_WaitForLink
                        _SYSLOG_Init
                       _SYSLOG_Write
                         _TCP_Server
                             _initHW
                          _lcd_goto1
                           _lcd_puts
                             _memset
                            _sprintf
                               _time
 ---------------------------------------------------------------------------------
 (1) _memset                                               8     2      6     407
                                             22 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             2     0      2     279
                                             24 COMRAM     2     0      2
                          _lcd_putch
 ---------------------------------------------------------------------------------
 (2) _lcd_putch                                            1     1      0     124
                                             23 COMRAM     1     1      0
                           _lcd_busy
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (3) _lcd_write_data                                       1     1      0      31
                                             22 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _lcd_goto1                                            1     1      0      62
                                             23 COMRAM     1     1      0
                           _lcd_busy
                     _lcd_write_ctrl
 ---------------------------------------------------------------------------------
 (1) _initHW                                               0     0      0     133
                           _LED_Init
                           _lcd_init
                          _rtcc_init
                           _spi_init
                          _uart_init
 ---------------------------------------------------------------------------------
 (2) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _spi_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _rtcc_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             5     5      0      31
                                             23 COMRAM     1     1      0
                           _lcd_busy
                      _lcd_init_pins
                     _lcd_write_ctrl
 ---------------------------------------------------------------------------------
 (2) _lcd_write_ctrl                                       1     1      0      31
                                             22 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _lcd_init_pins                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _lcd_busy                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_Init                                             1     1      0     102
                                             22 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TCP_Server                                           9     9      0   93157
                                             21 BANK1      7     7      0
                       _SYSLOG_Write
                           _TCP_Bind
                _TCP_GetReceivedData
                    _TCP_GetRxLength
                 _TCP_InsertRxBuffer
                         _TCP_Listen
                           _TCP_Send
                       _TCP_SendDone
                     _TCP_SocketInit
                     _TCP_SocketPoll
 ---------------------------------------------------------------------------------
 (2) _TCP_SocketInit                                       3     1      2    3588
                                             30 COMRAM     3     1      2
                          _TCB_Check
                         _TCB_Insert
                          _TCB_Reset
 ---------------------------------------------------------------------------------
 (3) _TCB_Insert                                           2     0      2     214
                                             22 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TCP_SendDone                                         3     1      2    1214
                                             30 COMRAM     3     1      2
                          _TCB_Check
 ---------------------------------------------------------------------------------
 (2) _TCP_Send                                             7     1      6   24843
                                            142 BANK0      7     1      6
                            _TCP_Snd
                     _TCP_SocketPoll
 ---------------------------------------------------------------------------------
 (2) _TCP_SocketPoll                                       3     1      2    1444
                                             30 COMRAM     3     1      2
                          _TCB_Check
 ---------------------------------------------------------------------------------
 (2) _TCP_Listen                                           5     3      2   51089
                                            159 BANK0      1     1      0
                                             17 BANK1      4     2      2
                          _TCB_Check
             _TCP_FiniteStateMachine
 ---------------------------------------------------------------------------------
 (2) _TCP_InsertRxBuffer                                   7     1      6    1888
                                             30 COMRAM     7     1      6
                          _TCB_Check
 ---------------------------------------------------------------------------------
 (2) _TCP_GetRxLength                                      8     6      2    1276
                                             30 COMRAM     8     6      2
                          _TCB_Check
 ---------------------------------------------------------------------------------
 (2) _TCP_GetReceivedData                                  8     6      2    1369
                                             30 COMRAM     8     6      2
                          _TCB_Check
 ---------------------------------------------------------------------------------
 (2) _TCP_Bind                                             5     1      4    1311
                                             30 COMRAM     5     1      4
                          _TCB_Check
 ---------------------------------------------------------------------------------
 (3) _TCB_Check                                            8     6      2    1025
                                             22 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _SYSLOG_Init                                          4     4      0    4298
                                             11 BANK0      4     4      0
                             _printf
                               _time
 ---------------------------------------------------------------------------------
 (1) _Network_WaitForLink                                  0     0      0     278
                    _ETH_CheckLinkUp
 ---------------------------------------------------------------------------------
 (1) _Network_Manage                                       5     5      0  205164
                                            159 BANK0      1     1      0
                                            185 BANK1      4     4      0
                       _ARPV4_Update
                        _DHCP_Manage
                   _ETH_EventHandler
                       _Network_Read
                         _TCP_Update
                               _time
 ---------------------------------------------------------------------------------
 (2) _TCP_Update                                          12    12      0   50224
                                             17 BANK1     12    12      0
             _TCP_FiniteStateMachine
 ---------------------------------------------------------------------------------
 (2) _Network_Read                                        98    98      0  129587
                                             87 BANK1     98    98      0
                       _ARPV4_Packet
                          _ETH_Flush
               _ETH_NextPacketUpdate
                      _ETH_ReadBlock
                        _IPV4_Packet
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             17     6     11    3909
                                              0 BANK0     17     6     11
                            __doprnt
 ---------------------------------------------------------------------------------
 (3) _IPV4_Packet                                         73    73      0  116462
                                             54 BANK1     33    33      0
                           _ETH_Dump
                      _ETH_ReadBlock
              _ETH_RxComputeChecksum
                       _ICMP_Receive
          _IPV4_PseudoHeaderChecksum
                           _TCP_Recv
                        _UDP_Receive
 ---------------------------------------------------------------------------------
 (4) _UDP_Receive                                         11     9      2   30996
                                            115 BANK0     11     9      2
                       _DHCP_Handler *
                      _ETH_ReadBlock
 ---------------------------------------------------------------------------------
 (5) _DHCP_Handler                                        36    34      2   29001
                                             79 BANK0     36    34      2
                       _DHCP_Request
                           _ETH_Dump
                         _ETH_GetMAC
                         _ETH_Read16
                         _ETH_Read32
                          _ETH_Read8
                      _ETH_ReadBlock
                             _memcmp
 ---------------------------------------------------------------------------------
 (6) _memcmp                                               6     2      4     431
                                             22 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _ETH_Read32                                           8     4      4     148
                                             22 COMRAM     8     4      4
                      _ETH_EdataRead
 ---------------------------------------------------------------------------------
 (4) _TCP_Recv                                            37    31      6   53603
                                             17 BANK1     37    31      6
                      _ETH_ReadBlock
             _TCP_FiniteStateMachine
                _TCP_ParseTCPOptions
 ---------------------------------------------------------------------------------
 (5) _TCP_ParseTCPOptions                                  6     6      0    1728
                                             26 COMRAM     6     6      0
                           _ETH_Dump
                         _ETH_Read16
                          _ETH_Read8
 ---------------------------------------------------------------------------------
 (6) _ETH_Read8                                            1     1      0      37
                                             22 COMRAM     1     1      0
                      _ETH_EdataRead
 ---------------------------------------------------------------------------------
 (6) _ETH_Read16                                           4     2      2      74
                                             22 COMRAM     4     2      2
                      _ETH_EdataRead
 ---------------------------------------------------------------------------------
 (6) _ETH_Dump                                             2     0      2    1117
                                             22 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _TCP_FiniteStateMachine                              17    17      0   49744
                                              0 BANK1     17    17      0
                          _TCB_Reset
                    _TCP_PayloadSave
                            _TCP_Snd
 ---------------------------------------------------------------------------------
 (4) _TCP_PayloadSave                                     17    15      2   24696
                                            142 BANK0     17    15      2
                      _ETH_ReadBlock
                            _TCP_Snd
 ---------------------------------------------------------------------------------
 (3) _TCP_Snd                                             79    77      2   22682
                                             63 BANK0     79    77      2
                         _ETH_Insert
              _ETH_TxComputeChecksum
                     _ETH_WriteBlock
                          _IPV4_Send
                         _IPv4_Start
 ---------------------------------------------------------------------------------
 (3) _TCB_Reset                                            4     2      2    1843
                                             22 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _IPV4_PseudoHeaderChecksum                           24    22      2     578
                                             22 COMRAM    24    22      2
 ---------------------------------------------------------------------------------
 (4) _ICMP_Receive                                        15    13      2   26284
                                             79 BANK0     15    13      2
                      _ETH_ReadBlock
                       _ETH_SaveRDPT
                     _ICMP_EchoReply
 ---------------------------------------------------------------------------------
 (5) _ICMP_EchoReply                                      16    13      3   24286
                                             63 BANK0     16    13      3
                           _ETH_Copy
                         _ETH_Insert
                       _ETH_SaveRDPT
              _ETH_TxComputeChecksum
                        _ETH_Write16
                          _IPV4_Send
                         _IPv4_Start
 ---------------------------------------------------------------------------------
 (6) _ETH_SaveRDPT                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ETH_Copy                                             6     4      2    5662
                                             13 BANK0      6     4      2
                       _SYSLOG_Write
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     412
                                             22 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _SYSLOG_Write                                         4     2      2    4869
                                             48 COMRAM     2     0      2
                                             11 BANK0      2     2      0
                             _printf
                               _time
 ---------------------------------------------------------------------------------
 (3) _printf                                              11     6      5    3653
                                              0 BANK0     11     6      5
                            __doprnt
 ---------------------------------------------------------------------------------
 (2) __doprnt                                             20    17      3    3259
                                             34 COMRAM    14    11      3
                   Absolute function *
                            ___lwdiv
                            ___lwmod
                              _putch *
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      62
                                             22 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     412
                                             29 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     601
                                             22 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ETH_RxComputeChecksum                               14    10      4    1633
                                             36 COMRAM    14    10      4
                _ETH_ComputeChecksum
 ---------------------------------------------------------------------------------
 (3) _ETH_NextPacketUpdate                                 0     0      0       0
                      _ETH_EdataRead
 ---------------------------------------------------------------------------------
 (3) _ETH_Flush                                            4     4      0       0
                                             22 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (3) _ARPV4_Packet                                        70    70      0    6106
                                              0 BANK0     70    70      0
                         _ETH_GetMAC
                      _ETH_ReadBlock
                           _ETH_Send
                     _ETH_WriteBlock
                     _ETH_WriteStart
 ---------------------------------------------------------------------------------
 (5) _ETH_ReadBlock                                        9     5      4    1719
                                             22 COMRAM     9     5      4
                      _ETH_EdataRead
 ---------------------------------------------------------------------------------
 (2) _ETH_EventHandler                                     0     0      0     522
                    _ETH_CheckLinkUp
                           _PHY_Read
 ---------------------------------------------------------------------------------
 (2) _DHCP_Manage                                          0     0      0   23985
                       _DHCP_Request
 ---------------------------------------------------------------------------------
 (6) _DHCP_Request                                        10    10      0   23985
                                             71 BANK0      8     8      0
                    _DHCP_WriteZeros
                         _ETH_GetMAC
                        _ETH_Write16
                        _ETH_Write32
                         _ETH_Write8
                     _ETH_WriteBlock
                           _UDP_Send
                          _UDP_Start
 ---------------------------------------------------------------------------------
 (7) _UDP_Start                                            9     1      8   10188
                                             46 COMRAM     1     1      0
                                             63 BANK0      8     0      8
                 _ETH_ResetByteCount
                        _ETH_Write16
                         _IPv4_Start
 ---------------------------------------------------------------------------------
 (4) _IPv4_Start                                          20    15      5    8542
                                             33 COMRAM    13     8      5
                                             56 BANK0      7     7      0
                       _ARPV4_Lookup
                      _ARPV4_Request
                        _ETH_Write16
                        _ETH_Write32
                         _ETH_Write8
                     _ETH_WriteStart
 ---------------------------------------------------------------------------------
 (5) _ETH_Write32                                          4     0      4    1463
                                             22 COMRAM     4     0      4
                     _ETH_EdataWrite
 ---------------------------------------------------------------------------------
 (5) _ETH_Write16                                          2     0      2    1215
                                             22 COMRAM     2     0      2
                     _ETH_EdataWrite
 ---------------------------------------------------------------------------------
 (5) _ARPV4_Request                                       60    56      4    3759
                                             28 COMRAM     4     0      4
                                              0 BANK0     56    56      0
                         _ETH_GetMAC
                           _ETH_Send
                     _ETH_WriteBlock
                     _ETH_WriteStart
 ---------------------------------------------------------------------------------
 (5) _ETH_WriteStart                                       6     2      4     791
                                             22 COMRAM     6     2      4
                     _ETH_EdataWrite
                 _ETH_ResetByteCount
 ---------------------------------------------------------------------------------
 (6) _ETH_ResetByteCount                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ETH_WriteBlock                                       6     2      4    1506
                                             22 COMRAM     6     2      4
                     _ETH_EdataWrite
 ---------------------------------------------------------------------------------
 (6) _ETH_GetMAC                                           1     0      1     561
                                             22 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (5) _ARPV4_Lookup                                        11     7      4     257
                                             22 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (7) _UDP_Send                                             9     9      0    8545
                                             20 BANK0      9     9      0
                   _ETH_GetByteCount
                         _ETH_Insert
              _ETH_TxComputeChecksum
                          _IPV4_Send
 ---------------------------------------------------------------------------------
 (4) _IPV4_Send                                           11     9      2    4319
                                             48 COMRAM     2     0      2
                                             11 BANK0      9     9      0
                         _ETH_Insert
                           _ETH_Send
              _ETH_TxComputeChecksum
 ---------------------------------------------------------------------------------
 (5) _ETH_TxComputeChecksum                               23    17      6    2058
                                             36 COMRAM    12     6      6
                                              0 BANK0     11    11      0
                _ETH_ComputeChecksum
 ---------------------------------------------------------------------------------
 (6) _ETH_ComputeChecksum                                 14    10      4     749
                                             22 COMRAM    14    10      4
                      _ETH_EdataRead
 ---------------------------------------------------------------------------------
 (7) _ETH_EdataRead                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ETH_Send                                             2     2      0      34
                                             22 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _ETH_Insert                                           7     2      5    1750
                                             22 COMRAM     7     2      5
                     _ETH_EdataWrite
 ---------------------------------------------------------------------------------
 (8) _ETH_GetByteCount                                     4     2      2      34
                                             22 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _DHCP_WriteZeros                                      2     0      2     152
                                             23 COMRAM     2     0      2
                         _ETH_Write8
 ---------------------------------------------------------------------------------
 (5) _ETH_Write8                                           1     1      0      31
                                             22 COMRAM     1     1      0
                     _ETH_EdataWrite
 ---------------------------------------------------------------------------------
 (6) _ETH_EdataWrite                                       1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _ARPV4_Update                                         3     3      0     105
                                             22 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Network_Init                                         0     0      0    1837
                         _ARPV4_Init
                           _ETH_Init
                          _IPV4_Init
                           _TCP_Init
                               _time
 ---------------------------------------------------------------------------------
 (1) _time                                                 9     5      4     611
                                             22 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (2) _TCP_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IPV4_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ETH_Init                                             4     4      0    1127
                                             41 COMRAM     4     4      0
                    _ETH_CheckLinkUp
                     _MAC_getAddress
                          _PHY_Write
 ---------------------------------------------------------------------------------
 (3) _PHY_Write                                            4     2      2     626
                                             24 COMRAM     4     2      2
                    _PHY_WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _MAC_getAddress                                       2     0      2       0
                                             22 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ETH_CheckLinkUp                                      4     4      0     278
                                             37 COMRAM     4     4      0
                 _ETH_readLinkStatus
 ---------------------------------------------------------------------------------
 (3) _ETH_readLinkStatus                                   4     0      4     244
                                             33 COMRAM     4     0      4
                           _PHY_Read
 ---------------------------------------------------------------------------------
 (4) _PHY_Read                                             9     5      4     244
                                             24 COMRAM     9     5      4
                    _PHY_WaitForBusy
 ---------------------------------------------------------------------------------
 (5) _PHY_WaitForBusy                                      2     2      0     170
                                             22 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ARPV4_Init                                           1     1      0      99
                                             22 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _IPV4_GetMyIP                                         4     0      4       0
                                             22 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _low_isr                                             3     3      0     349
                                             19 COMRAM     3     3      0
                 i1_ETH_EventHandler
 ---------------------------------------------------------------------------------
 (13) i1_ETH_EventHandler                                  0     0      0     349
                  i1_ETH_CheckLinkUp
                         i1_PHY_Read
 ---------------------------------------------------------------------------------
 (14) i1_ETH_CheckLinkUp                                   4     4      0     186
                                             15 COMRAM     4     4      0
               i1_ETH_readLinkStatus
 ---------------------------------------------------------------------------------
 (15) i1_ETH_readLinkStatus                                4     0      4     163
                                             11 COMRAM     4     0      4
                         i1_PHY_Read
 ---------------------------------------------------------------------------------
 (14) i1_PHY_Read                                          9     5      4     163
                                              2 COMRAM     9     5      4
                  i1_PHY_WaitForBusy
 ---------------------------------------------------------------------------------
 (15) i1_PHY_WaitForBusy                                   2     2      0     115
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _high_isr                                            0     0      0       0
                       _rtcc_handler
 ---------------------------------------------------------------------------------
 (19) _rtcc_handler                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _IPV4_GetMyIP
   _Network_Init
     _ARPV4_Init
     _ETH_Init
       _ETH_CheckLinkUp
         _ETH_readLinkStatus
           _PHY_Read
             _PHY_WaitForBusy
       _MAC_getAddress
       _PHY_Write
         _PHY_WaitForBusy
     _IPV4_Init
     _TCP_Init
     _time
   _Network_Manage
     _ARPV4_Update
     _DHCP_Manage
       _DHCP_Request
         _DHCP_WriteZeros
           _ETH_Write8
             _ETH_EdataWrite
         _ETH_GetMAC
         _ETH_Write16
           _ETH_EdataWrite
         _ETH_Write32
           _ETH_EdataWrite
         _ETH_Write8
           _ETH_EdataWrite
         _ETH_WriteBlock
           _ETH_EdataWrite
         _UDP_Send
           _ETH_GetByteCount
           _ETH_Insert
             _ETH_EdataWrite
           _ETH_TxComputeChecksum
             _ETH_ComputeChecksum
               _ETH_EdataRead
           _IPV4_Send
             _ETH_Insert
               _ETH_EdataWrite
             _ETH_Send
             _ETH_TxComputeChecksum
               _ETH_ComputeChecksum
                 _ETH_EdataRead
         _UDP_Start
           _ETH_ResetByteCount
           _ETH_Write16
             _ETH_EdataWrite
           _IPv4_Start
             _ARPV4_Lookup
             _ARPV4_Request
               _ETH_GetMAC
               _ETH_Send
               _ETH_WriteBlock
                 _ETH_EdataWrite
               _ETH_WriteStart
                 _ETH_EdataWrite
                 _ETH_ResetByteCount
             _ETH_Write16
               _ETH_EdataWrite
             _ETH_Write32
               _ETH_EdataWrite
             _ETH_Write8
               _ETH_EdataWrite
             _ETH_WriteStart
               _ETH_EdataWrite
               _ETH_ResetByteCount
     _ETH_EventHandler
       _ETH_CheckLinkUp
         _ETH_readLinkStatus
           _PHY_Read
             _PHY_WaitForBusy
       _PHY_Read
         _PHY_WaitForBusy
     _Network_Read
       _ARPV4_Packet
         _ETH_GetMAC
         _ETH_ReadBlock
           _ETH_EdataRead
         _ETH_Send
         _ETH_WriteBlock
           _ETH_EdataWrite
         _ETH_WriteStart
           _ETH_EdataWrite
           _ETH_ResetByteCount
       _ETH_Flush
       _ETH_NextPacketUpdate
         _ETH_EdataRead
       _ETH_ReadBlock
         _ETH_EdataRead
       _IPV4_Packet
         _ETH_Dump
         _ETH_ReadBlock
           _ETH_EdataRead
         _ETH_RxComputeChecksum
           _ETH_ComputeChecksum
             _ETH_EdataRead
         _ICMP_Receive
           _ETH_ReadBlock
             _ETH_EdataRead
           _ETH_SaveRDPT
           _ICMP_EchoReply
             _ETH_Copy
               _SYSLOG_Write
                 _printf
                   __doprnt
                     Absolute function(Fake) *
                     ___lwdiv *
                     ___lwmod *
                       ___lwdiv (ARG)
                     _putch *
                 _time
               ___wmul
             _ETH_Insert
               _ETH_EdataWrite
             _ETH_SaveRDPT
             _ETH_TxComputeChecksum
               _ETH_ComputeChecksum
                 _ETH_EdataRead
             _ETH_Write16
               _ETH_EdataWrite
             _IPV4_Send
               _ETH_Insert
                 _ETH_EdataWrite
               _ETH_Send
               _ETH_TxComputeChecksum
                 _ETH_ComputeChecksum
                   _ETH_EdataRead
             _IPv4_Start
               _ARPV4_Lookup
               _ARPV4_Request
                 _ETH_GetMAC
                 _ETH_Send
                 _ETH_WriteBlock
                   _ETH_EdataWrite
                 _ETH_WriteStart
                   _ETH_EdataWrite
                   _ETH_ResetByteCount
               _ETH_Write16
                 _ETH_EdataWrite
               _ETH_Write32
                 _ETH_EdataWrite
               _ETH_Write8
                 _ETH_EdataWrite
               _ETH_WriteStart
                 _ETH_EdataWrite
                 _ETH_ResetByteCount
         _IPV4_PseudoHeaderChecksum
         _TCP_Recv
           _ETH_ReadBlock
             _ETH_EdataRead
           _TCP_FiniteStateMachine
             _TCB_Reset
             _TCP_PayloadSave
               _ETH_ReadBlock
                 _ETH_EdataRead
               _TCP_Snd
                 _ETH_Insert
                   _ETH_EdataWrite
                 _ETH_TxComputeChecksum
                   _ETH_ComputeChecksum
                     _ETH_EdataRead
                 _ETH_WriteBlock
                   _ETH_EdataWrite
                 _IPV4_Send
                   _ETH_Insert
                     _ETH_EdataWrite
                   _ETH_Send
                   _ETH_TxComputeChecksum
                     _ETH_ComputeChecksum
                       _ETH_EdataRead
                 _IPv4_Start
                   _ARPV4_Lookup
                   _ARPV4_Request
                     _ETH_GetMAC
                     _ETH_Send
                     _ETH_WriteBlock
                       _ETH_EdataWrite
                     _ETH_WriteStart
                       _ETH_EdataWrite
                       _ETH_ResetByteCount
                   _ETH_Write16
                     _ETH_EdataWrite
                   _ETH_Write32
                     _ETH_EdataWrite
                   _ETH_Write8
                     _ETH_EdataWrite
                   _ETH_WriteStart
                     _ETH_EdataWrite
                     _ETH_ResetByteCount
             _TCP_Snd
               _ETH_Insert
                 _ETH_EdataWrite
               _ETH_TxComputeChecksum
                 _ETH_ComputeChecksum
                   _ETH_EdataRead
               _ETH_WriteBlock
                 _ETH_EdataWrite
               _IPV4_Send
                 _ETH_Insert
                   _ETH_EdataWrite
                 _ETH_Send
                 _ETH_TxComputeChecksum
                   _ETH_ComputeChecksum
                     _ETH_EdataRead
               _IPv4_Start
                 _ARPV4_Lookup
                 _ARPV4_Request
                   _ETH_GetMAC
                   _ETH_Send
                   _ETH_WriteBlock
                     _ETH_EdataWrite
                   _ETH_WriteStart
                     _ETH_EdataWrite
                     _ETH_ResetByteCount
                 _ETH_Write16
                   _ETH_EdataWrite
                 _ETH_Write32
                   _ETH_EdataWrite
                 _ETH_Write8
                   _ETH_EdataWrite
                 _ETH_WriteStart
                   _ETH_EdataWrite
                   _ETH_ResetByteCount
           _TCP_ParseTCPOptions
             _ETH_Dump
             _ETH_Read16
               _ETH_EdataRead
             _ETH_Read8
               _ETH_EdataRead
         _UDP_Receive
           _DHCP_Handler *
             _DHCP_Request
               _DHCP_WriteZeros
                 _ETH_Write8
                   _ETH_EdataWrite
               _ETH_GetMAC
               _ETH_Write16
                 _ETH_EdataWrite
               _ETH_Write32
                 _ETH_EdataWrite
               _ETH_Write8
                 _ETH_EdataWrite
               _ETH_WriteBlock
                 _ETH_EdataWrite
               _UDP_Send
                 _ETH_GetByteCount
                 _ETH_Insert
                   _ETH_EdataWrite
                 _ETH_TxComputeChecksum
                   _ETH_ComputeChecksum
                     _ETH_EdataRead
                 _IPV4_Send
                   _ETH_Insert
                     _ETH_EdataWrite
                   _ETH_Send
                   _ETH_TxComputeChecksum
                     _ETH_ComputeChecksum
                       _ETH_EdataRead
               _UDP_Start
                 _ETH_ResetByteCount
                 _ETH_Write16
                   _ETH_EdataWrite
                 _IPv4_Start
                   _ARPV4_Lookup
                   _ARPV4_Request
                     _ETH_GetMAC
                     _ETH_Send
                     _ETH_WriteBlock
                       _ETH_EdataWrite
                     _ETH_WriteStart
                       _ETH_EdataWrite
                       _ETH_ResetByteCount
                   _ETH_Write16
                     _ETH_EdataWrite
                   _ETH_Write32
                     _ETH_EdataWrite
                   _ETH_Write8
                     _ETH_EdataWrite
                   _ETH_WriteStart
                     _ETH_EdataWrite
                     _ETH_ResetByteCount
             _ETH_Dump
             _ETH_GetMAC
             _ETH_Read16
               _ETH_EdataRead
             _ETH_Read32
               _ETH_EdataRead
             _ETH_Read8
               _ETH_EdataRead
             _ETH_ReadBlock
               _ETH_EdataRead
             _memcmp
           _ETH_ReadBlock *
             _ETH_EdataRead
       _sprintf
         __doprnt
           Absolute function(Fake) *
           ___lwdiv *
           ___lwmod *
             ___lwdiv (ARG)
           _putch *
     _TCP_Update
       _TCP_FiniteStateMachine
         _TCB_Reset
         _TCP_PayloadSave
           _ETH_ReadBlock
             _ETH_EdataRead
           _TCP_Snd
             _ETH_Insert
               _ETH_EdataWrite
             _ETH_TxComputeChecksum
               _ETH_ComputeChecksum
                 _ETH_EdataRead
             _ETH_WriteBlock
               _ETH_EdataWrite
             _IPV4_Send
               _ETH_Insert
                 _ETH_EdataWrite
               _ETH_Send
               _ETH_TxComputeChecksum
                 _ETH_ComputeChecksum
                   _ETH_EdataRead
             _IPv4_Start
               _ARPV4_Lookup
               _ARPV4_Request
                 _ETH_GetMAC
                 _ETH_Send
                 _ETH_WriteBlock
                   _ETH_EdataWrite
                 _ETH_WriteStart
                   _ETH_EdataWrite
                   _ETH_ResetByteCount
               _ETH_Write16
                 _ETH_EdataWrite
               _ETH_Write32
                 _ETH_EdataWrite
               _ETH_Write8
                 _ETH_EdataWrite
               _ETH_WriteStart
                 _ETH_EdataWrite
                 _ETH_ResetByteCount
         _TCP_Snd
           _ETH_Insert
             _ETH_EdataWrite
           _ETH_TxComputeChecksum
             _ETH_ComputeChecksum
               _ETH_EdataRead
           _ETH_WriteBlock
             _ETH_EdataWrite
           _IPV4_Send
             _ETH_Insert
               _ETH_EdataWrite
             _ETH_Send
             _ETH_TxComputeChecksum
               _ETH_ComputeChecksum
                 _ETH_EdataRead
           _IPv4_Start
             _ARPV4_Lookup
             _ARPV4_Request
               _ETH_GetMAC
               _ETH_Send
               _ETH_WriteBlock
                 _ETH_EdataWrite
               _ETH_WriteStart
                 _ETH_EdataWrite
                 _ETH_ResetByteCount
             _ETH_Write16
               _ETH_EdataWrite
             _ETH_Write32
               _ETH_EdataWrite
             _ETH_Write8
               _ETH_EdataWrite
             _ETH_WriteStart
               _ETH_EdataWrite
               _ETH_ResetByteCount
     _time
   _Network_WaitForLink
     _ETH_CheckLinkUp
       _ETH_readLinkStatus
         _PHY_Read
           _PHY_WaitForBusy
   _SYSLOG_Init
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         _putch *
     _time
   _SYSLOG_Write
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         _putch *
     _time
   _TCP_Server
     _SYSLOG_Write
       _printf
         __doprnt
           Absolute function(Fake) *
           ___lwdiv *
           ___lwmod *
             ___lwdiv (ARG)
           _putch *
       _time
     _TCP_Bind
       _TCB_Check
     _TCP_GetReceivedData
       _TCB_Check
     _TCP_GetRxLength
       _TCB_Check
     _TCP_InsertRxBuffer
       _TCB_Check
     _TCP_Listen
       _TCB_Check
       _TCP_FiniteStateMachine
         _TCB_Reset
         _TCP_PayloadSave
           _ETH_ReadBlock
             _ETH_EdataRead
           _TCP_Snd
             _ETH_Insert
               _ETH_EdataWrite
             _ETH_TxComputeChecksum
               _ETH_ComputeChecksum
                 _ETH_EdataRead
             _ETH_WriteBlock
               _ETH_EdataWrite
             _IPV4_Send
               _ETH_Insert
                 _ETH_EdataWrite
               _ETH_Send
               _ETH_TxComputeChecksum
                 _ETH_ComputeChecksum
                   _ETH_EdataRead
             _IPv4_Start
               _ARPV4_Lookup
               _ARPV4_Request
                 _ETH_GetMAC
                 _ETH_Send
                 _ETH_WriteBlock
                   _ETH_EdataWrite
                 _ETH_WriteStart
                   _ETH_EdataWrite
                   _ETH_ResetByteCount
               _ETH_Write16
                 _ETH_EdataWrite
               _ETH_Write32
                 _ETH_EdataWrite
               _ETH_Write8
                 _ETH_EdataWrite
               _ETH_WriteStart
                 _ETH_EdataWrite
                 _ETH_ResetByteCount
         _TCP_Snd
           _ETH_Insert
             _ETH_EdataWrite
           _ETH_TxComputeChecksum
             _ETH_ComputeChecksum
               _ETH_EdataRead
           _ETH_WriteBlock
             _ETH_EdataWrite
           _IPV4_Send
             _ETH_Insert
               _ETH_EdataWrite
             _ETH_Send
             _ETH_TxComputeChecksum
               _ETH_ComputeChecksum
                 _ETH_EdataRead
           _IPv4_Start
             _ARPV4_Lookup
             _ARPV4_Request
               _ETH_GetMAC
               _ETH_Send
               _ETH_WriteBlock
                 _ETH_EdataWrite
               _ETH_WriteStart
                 _ETH_EdataWrite
                 _ETH_ResetByteCount
             _ETH_Write16
               _ETH_EdataWrite
             _ETH_Write32
               _ETH_EdataWrite
             _ETH_Write8
               _ETH_EdataWrite
             _ETH_WriteStart
               _ETH_EdataWrite
               _ETH_ResetByteCount
     _TCP_Send
       _TCP_Snd
         _ETH_Insert
           _ETH_EdataWrite
         _ETH_TxComputeChecksum
           _ETH_ComputeChecksum
             _ETH_EdataRead
         _ETH_WriteBlock
           _ETH_EdataWrite
         _IPV4_Send
           _ETH_Insert
             _ETH_EdataWrite
           _ETH_Send
           _ETH_TxComputeChecksum
             _ETH_ComputeChecksum
               _ETH_EdataRead
         _IPv4_Start
           _ARPV4_Lookup
           _ARPV4_Request
             _ETH_GetMAC
             _ETH_Send
             _ETH_WriteBlock
               _ETH_EdataWrite
             _ETH_WriteStart
               _ETH_EdataWrite
               _ETH_ResetByteCount
           _ETH_Write16
             _ETH_EdataWrite
           _ETH_Write32
             _ETH_EdataWrite
           _ETH_Write8
             _ETH_EdataWrite
           _ETH_WriteStart
             _ETH_EdataWrite
             _ETH_ResetByteCount
       _TCP_SocketPoll
         _TCB_Check
     _TCP_SendDone
       _TCB_Check
     _TCP_SocketInit
       _TCB_Check
       _TCB_Insert
       _TCB_Reset
     _TCP_SocketPoll
       _TCB_Check
   _initHW
     _LED_Init
     _lcd_init
       _lcd_busy
       _lcd_init_pins
       _lcd_write_ctrl
     _rtcc_init
     _spi_init
     _uart_init
   _lcd_goto1
     _lcd_busy
     _lcd_write_ctrl
   _lcd_puts
     _lcd_putch
       _lcd_busy
       _lcd_write_data
   _memset
   _sprintf
     __doprnt
       Absolute function(Fake) *
       ___lwdiv *
       ___lwmod *
         ___lwdiv (ARG)
       _putch *
   _time

 _low_isr (ROOT)
   i1_ETH_EventHandler
     i1_ETH_CheckLinkUp
       i1_ETH_readLinkStatus
         i1_PHY_Read
           i1_PHY_WaitForBusy
     i1_PHY_Read
       i1_PHY_WaitForBusy

 _high_isr (ROOT)
   _rtcc_handler

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E7D      0       0      38        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      30        0.0%
BANK12             100      0       0      28        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      68      11       40.6%
BITBANK2           100      0       0       8        0.0%
BANK2              100     2D      DC       9       85.9%
BITBANK1           100      0       0       6        0.0%
BANK1              100     BD      EA       7       91.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     A0      A0       5      100.0%
BITBANK14           7E      0       0      33        0.0%
BANK14              7E      0       0      34        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BIGRAM_1            60      0       0      37        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     32      48       1       76.6%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     316      29        0.0%
DATA                 0      0     316       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Sun Sep 04 20:25:44 2016

                         __CFG_BW$16 000000                 __end_of_DHCP_Handler 3BCA  
                                 bsr 000FE0                  ___wmul@multiplicand 0019  
               i1PHY_WaitForBusy@ret 0001                     ??_ICMP_EchoReply 00A2  
         TCP_InsertRxBuffer@data_len 0023          ??_IPV4_PseudoHeaderChecksum 0019  
                     ??_ICMP_Receive 00B1                         __CFG_CP0$OFF 000000  
                                l350 63B4                                  l512 0036  
                                l504 0004                                  l600 4EF2  
                                l521 50DA                                  l506 001A  
                                l530 5EEC                                  l507 0018  
                                l347 63AC                                  l611 4F6A  
                                l603 4EFC                                  l531 5EEE  
                                l460 0008                                  l620 5216  
                                l525 61A8                                  l518 50D6  
                                l470 49D2                                  l519 50C6  
                                l463 0004                                  l607 4F62  
                                l535 5A26                                  l544 597E  
                                l608 4F60                                  l536 5A28  
                                l617 51AC                                  l801 3B4A  
                                WREG 000FE8                                  l803 3B50  
                                l476 0016                                  l484 5CD4  
                                l760 42DE                                  l680 314A  
                                l761 4362                                  l489 5CE0  
                                l594 5AB4               __size_of_ETH_EdataRead 0000  
                                l599 4EF4                                  l936 44A2  
                                _EIE 000EFB                                  _GIE 007F97  
                        ?_ETH_GetMAC 0017                 __end_of_DHCP_Request 43F0  
                 ICMP_EchoReply@cksm 00AA              IPv4_Start@targetAddress 0098  
                        ?_ETH_Read32 0017                          ?_ETH_Read16 0017  
                       UDP_Start@ret 002F                                  prod 000FF3  
               TCP_Snd@tcpDataLength 00D8                ??_ETH_ComputeChecksum 001B  
                                tosl 000FFD                                  wreg 000FE8  
                        ?_ETH_Insert 0017                         __CFG_IESO$ON 000000  
                       __CFG_MODE$MM 000000                          ?_ETH_Write8 0001  
                               EDATA 000F61                       _ipv4SubnetMask 01C8  
                               PL401 231E                                 PL411 3E0A  
                               PL403 233A                                 PL501 5494  
                               PL421 329E                                 PL413 3FEC  
                               PL405 234C                                 PL511 24F8  
                               PL503 24EE                                 PL431 23DA  
                               PL423 23A4                                 PL415 238C  
                               PL407 2366                                 PL601 589E  
                               PL521 35F0                                 PL513 334C  
                               PL505 3338                                 PL441 23FC  
                               PL433 3568                                 PL425 23AE  
                               PL417 2394                                 PL409 2F64  
                               PL611 2BD4                                 PL603 5826  
                               PL531 562C                                 PL523 43F0  
                               PL515 2500                                 PL507 5918  
                               PL451 4BE2                                 PL443 2416  
                               PL435 2F7E                                 PL427 23CA  
                               PL419 239C                                 PL701 338C  
                               PL621 522E                                 PL613 2BE6  
                               PL605 6018                                 PL541 3924  
                               PL533 3004                                 PL525 2AA0  
                               PL517 2508                                 PL509 496E  
                               PL461 38DE                                 PL453 2440  
                               PL445 2A6E                                 PL437 2A1A  
                               PL429 23D2                                 PL711 5E70  
                               PL703 395E                                 PL631 2526  
                               PL623 2C08                                 PL615 251E  
                               PL607 3BCA                                 PL551 4016  
                               PL543 4008                                 PL535 536A  
                               PL527 3368                                 PL519 3912  
                               PL471 2496                                 PL463 38EE  
                               PL455 244E                                 PL447 2430  
                               PL439 23E2                                 PL391 2A00  
                               PL721 52D0                                 PL713 57BC  
                               PL705 367A                                 PL641 2C22  
                               PL633 5514                                 PL625 2C12  
                               PL617 2BF8                                 PL609 2BC2  
                               PL561 2B68                                 PL553 2B00  
                               PL545 2510                                 PL537 2ACA  
                               PL529 2AAE                                 PL481 4EC8  
                               PL473 249E                                 PL465 2482  
                               PL457 245C                                 PL449 2438  
                               PL393 22F0                                 PL731 3968  
                               PL723 2C70                                 PL715 4C06  
                               PL707 58A8                                 PL651 3950  
                               PL643 403A                                 PL635 2530  
                               PL627 4402                                 PL619 49A6  
                               PL571 481A                                 PL563 2B82  
                               PL555 2B1A                                 PL547 4242  
                               PL539 3602                                 PL491 3310  
                               PL483 2A7C                                 PL475 24A6  
                               PL467 248C                                 PL459 2476  
                               PL395 22F8                                 PL387 22CE  
                               PL741 52D6                                 PL733 3972  
                               PL725 5524                                 PL717 2C68  
                               PL709 5CEC                                 PL661 3E32  
                               PL653 56C6                                 PL645 2C30  
                               PL637 2540                                 PL629 4030  
                               PL581 424E                                 PL573 3932  
                               PL565 4800                                 PL557 2B34  
                               PL549 2AE6                                 PL493 24DC  
                               PL485 3906                                 PL477 24B8  
                               PL469 47CA                                 PL397 2312  
                               PL389 22E6                                 PL751 2C7A  
                               PL743 50EC                                 PL735 5CF4  
                               PL727 49B0                                 PL719 3684  
                               PL671 4BFA                                 PL663 5EF8  
                               PL655 59D8                                 PL647 440C  
                               PL639 4F8E                                 PL591 2BB4  
                               PL583 5ACE                                 PL575 498E  
                               PL567 361C                                 PL559 2B4E  
                               PL495 4ADE                                 PL487 24CA  
                               PL479 4AD2                                 PL399 46EC  
                               PL753 6080                                 PL745 5D02  
                               PL737 3BDC                                 PL729 4860  
                               PL681 4048                                 PL673 61AE  
                               PL665 4848                                 PL657 2C3E  
                               PL649 3032                                 PL593 3942  
                               PL585 3646                                 PL577 2B9C  
                               PL569 3636                                 PL497 35C8  
                               PL489 2FDC                                 PL747 5BCE  
                               PL739 5CFC                                 PL691 4D14  
                               PL683 254E                                 PL675 4854  
                               PL667 2C48                                 PL659 57B2  
                               PL595 3E24                                 PL587 4832  
                               PL579 393A                                 PL499 2A96  
                               PL749 5196                                 PL693 2C54  
                               PL685 3666                                 PL677 5830  
                               PL669 635E                                 PL597 301E  
                               PL589 3382                                 PL695 3040  
                               PL687 3670                                 PL679 365C  
                               PL599 4ED2                                 PL697 304A  
                               PL689 4592                                 PL699 2C5E  
          TCP_FiniteStateMachine@ret 010C                      ?_Network_Manage 0001  
                       __CFG_WDT$OFF 000000                                 l1113 2838  
                               l1009 645C                                 l1115 2754  
                               l1116 277E                                 l1142 4CA6  
                               l1143 4CA0                                 l1154 4D10  
                               l1171 2E5E                                 l1086 5E4C  
                               l1175 2E9A                                 l1169 2DE8  
                               l2074 5DE0                                 l1194 1284  
                               l1610 4D90                                 l1179 2ED6  
                               l2084 5F38                                 l1356 618C  
                               l1624 36C6                                 l1629 38D8  
                               l1581 40FC                                 l1590 4158  
                               l1582 4102                                 l1591 41CE  
                               l1583 410A                                 l1592 4162  
                               l1584 4110                                 l1593 416C  
                               l1585 4114                                 l1594 4176  
                               l1586 411A                                 l1595 4180  
                               l1587 4122                                 l1579 40F8  
                               l1596 418A                                 l1588 4128  
                               l1597 4194                                 l1598 419E  
                               l1599 41A8                                 l8000 44FE  
                               l8106 5612                                 l8042 5932  
                               l8054 5970                                 l8150 28CA  
                               l8126 2710                                 l9200 30C0  
                               l8208 61AA                                 l9032 2D8C  
                               l9024 2D3C                                 l8250 4F38  
                               l9018 2CF8                                 l8330 5D88  
                               l8410 3A82                                 l8084 640E  
                               l9220 3124                                 l8164 2994  
                               l8236 60C8                                 l9060 2EBC  
                               l9028 2D78                                 l8324 5D58  
                               l8332 5D8C                                 l8190 0028  
                               l8182 0006                                 l8086 6414  
                               l8078 5C20                                 l9206 30CE  
                               l8262 4F80                                 l8166 29FA  
                               l8158 2914                                 l8350 3EB6  
                               l9054 2E80                                 l8430 3B18  
                               l8414 3AAA                                 l8192 0032  
                               l8184 0008                                 l8176 0000  
                               l8520 4C5C                                 l8512 4C44  
                               l9064 2EF2                                 l9048 2E44  
                               l8416 3AC0                                 l9304 3502  
                               l9320 3556                                 l8194 0034  
                               l8186 0012                                 l7562 0000  
                               l9170 5ABE                                 l7714 5DB0  
                               l8610 1382                                 l8522 4C62  
                               l8514 4C4C                                 l8450 3B6C  
                               l8418 3AD6                                 l9082 56FC  
                               l9090 574A                                 l9402 6330  
                               l8188 0024                                 l7564 0004  
                               l7580 5D14                                 l7812 47C6  
                               l9236 31A8                                 l9172 5ACA  
                               l7716 5DB8                                 l7900 37D4  
                               l8348 3E7E                                 l8460 3BAA  
                               l8452 3B72                                 l8444 3B56  
                               l8436 3B34                                 l8428 3B10  
                               l9316 354A                                 l9076 56EA  
                               l7822 5C2E                                 l8286 42D8  
                               l9190 3080                                 l7726 5DD6  
                               l7718 5DBC                                 l7742 5F2E  
                               l7734 5F10                                 l8710 199C  
                               l9086 5736                                 l9350 6258  
                               l7568 0000                                 l7760 5F68  
                               l7672 51CE                                 l7584 5D3A  
                               l7736 5F18                                 l8800 1FA8  
                               l8712 1A22                                 l8632 1508  
                               l8624 14C0                                 l8536 4CAE  
                               l8552 4CE8                                 l8448 3B5C  
                               l8456 3B7E                                 l8464 3BB8  
                               l9280 3454                                 l9506 63F4  
                               l7738 5F1C                                 l7930 3840  
                               l7906 37D8                                 l7842 36BC  
                               l8802 1FD2                                 l8722 1B74  
                               l8714 1A28                                 l8554 4CF6  
                               l8458 3B9A                                 l9274 33CA  
                               l7756 5F5A                                 l7684 51F2  
                               l7828 5C5C                                 l9540 5672  
                               l7932 3868                                 l7940 3898  
                               l7924 3832                                 l7916 37F6  
                               l7860 372A                                 l7836 3690  
                               l8812 2026                                 l8740 1CA2  
                               l8724 1B78                                 l8716 1A34  
                               l8644 1636                                 l8556 4D06  
                               l9268 33B0                                 l9518 61EE  
                               l9550 568A                                 l9542 5678  
                               l7918 3804                                 l7854 36EC  
                               l7846 36CA                                 l7950 38CC  
                               l8902 2230                                 l8670 1700  
                               l8654 1676                                 l8590 1298  
                               l8582 1276                                 l8558 4D0C  
                               l7960 5B08                                 l9536 566A  
                               l7944 38BE                                 l7928 383A  
                               l7848 36CE                                 l7872 376A  
                               l8832 208C                                 l8816 204A  
                               l8808 1FFA                                 l8592 12A8  
                               l8568 1104                                 l9296 34D8  
                               l9288 34AA                                 l9632 3DB6  
                               l9616 3C06                                 l8914 0000  
                               l9562 56BA                                 l9546 5682  
                               l7938 388A                                 l7858 3724  
                               l7866 3748                                 l7874 378C  
                               l8498 496A                                 l8834 20A2  
                               l8818 2052                                 l8754 1E2A  
                               l8738 1C7A                                 l8682 1726  
                               l8906 223E                                 l9618 3C10  
                               l7964 5B26                                 l7980 4428  
                               l9556 56A4                                 l7948 38C6  
                               l7892 37B6                                 l7884 37AC  
                               l7868 3764                                 l8860 20FC  
                               l8852 20E4                                 l8772 1EB6  
                               l8764 1E94                                 l8684 1754  
                               l8908 2294                                 l9636 3DE0  
                               l7886 37B2                                 l8934 5B9A  
                               l8838 20AA                                 l8694 1832  
                               l9582 4FE0                                 l9590 5016  
                               l9902 409E                                 l8952 53B8  
                               l8696 184C                                 l9584 4FE8  
                               l9920 41AC                                 l9840 634E  
                               l7994 44EC                                 l8938 5BAA  
                               l8882 218E                                 l8858 20F2  
                               l8786 1F6E                                 l8778 1ED0  
                               l9586 4FF0                                 l9770 5894  
                               l9922 41D6                                 l7988 44B2  
                               l8868 2154                                 l9916 412C  
                               l9844 6358                                 l7998 44F2  
                               l8958 53DA                                 l8894 2200  
                               l8886 21A0                                 l9782 59CE  
                               l9926 41F6                                 l9918 4150  
                               l9934 422C                                 l9942 6156  
                               STR_1 1077                                 l8992 4EB6  
                               l8976 4E30                                 l9880 54D4  
                               STR_2 10B3                                 STR_3 1039  
                               l8986 4E56                                 l9866 645E  
                               l9938 6146                                 STR_4 10A9  
                               STR_5 109F                                 l9884 5502  
                               l9964 4D4E                                 STR_6 10A2  
                               STR_7 1066                                 l9894 406C  
                               STR_8 1086                                 STR_9 1093  
                               l9896 4078                                 l9986 4E02  
                               _GIEH 007F97                                 _GIEL 007F96  
        __end_of_TCP_GetReceivedData 589E                                 _LATE 000F8D  
                               _LATH 000F90                                 _LATJ 000F91  
                               _IPEN 007E87                                 _MIRD 000EB8  
                               _MIWR 000EB6                    ??_PHY_WaitForBusy 0017  
                               _TMR1 000FCE                      lcd_write_data@d 0017  
            __size_of_ETH_EdataWrite 0000                         lcd_goto1@pos 0018  
                      __CFG_FCMEN$ON 000000                         __CFG_STVR$ON 000000  
             __end_of_lcd_write_data 630C                      __end_of_TCP_Snd 2A00  
             __end_of_lcd_write_ctrl 632C                      _TCP_PayloadSave 3E3C  
                    lcd_write_ctrl@c 0017                                 _main 4D1E  
                               _time 5AE4                                 fsr0h 000FEA  
                               fsr1h 000FE2                                 indf0 000FEF  
                               fsr0l 000FE9                                 fsr2h 000FDA  
                               indf1 000FE7                                 fsr1l 000FE1  
                               indf2 000FDF                                 fsr2l 000FD9  
                               btemp 0049                          _SYSLOG_Init 6022  
                               prodh 000FF4                                 prodl 000FF3  
                               start 003A                        __CFG_FOSC2$ON 000000  
                    ETH_EdataWrite@d 0001                         ?_IPV4_Packet 0001  
                 __size_of_ETH_Read8 001E                    i1_ETH_CheckLinkUp 6054  
                 __size_of_ETH_Flush 003E               __size_of_ETH_ReadBlock 0064  
                       ___param_bank 000010                __size_of_SYSLOG_Write 002A  
                 __size_of_IPV4_Init 000A                          ?i1_PHY_Read 0003  
                 __size_of_IPV4_Send 0066                          ?_TCB_Insert 0017  
                       ?_ETH_Write32 0017                         ?_ETH_Write16 0017  
         __size_ofi1_PHY_WaitForBusy 0000                   ?i1_ETH_CheckLinkUp 0001  
                   ARPV4_Request@ret 007B                  __size_of_ARPV4_Init 001A  
           __size_of_ETH_CheckLinkUp 002E              ?_TCP_FiniteStateMachine 0001  
                   __end_of_LED_Init 634C                         _BAUDCON1bits 000F7E  
                      __CFG_WAIT$OFF 000000                     _ETH_GetByteCount 636A  
                     __CFG_CCP2MX$ON 000000                                l10070 503C  
                              l10072 5040                     __end_of_ETH_Copy 4F8E  
                              l10068 5032                     __end_of_ETH_Dump 60E2  
                   __end_of_ETH_Init 4AD2                    _nextPacketPointer 003F  
                   __end_of_ETH_Send 613C                   __size_of_TCB_Check 007E  
                              ?_main 0001                                STR_10 10BB  
                              STR_11 1055                                _ECON1 000FD2  
                              _ECON2 000EFE                                ?_time 0017  
IPV4_PseudoHeaderChecksum@payloadLen 0017                                _CREN1 007D5C  
                              u11100 4436                                u11110 4446  
                              u11008 381E                                u12000 46EA  
                              u11050 5B06                                u11210 2578  
                              u12010 3E50                                u11028 38A8  
                              u11300 2654                                u11220 2590  
                              u12100 3F40                                u11150 595E  
                              u11310 2668                                u11230 25B8  
                              u12110 3F66                                u12030 3E68  
                              u12007 46E2                                u10600 4B4E  
                              u11320 267C                                u11240 25CC  
                              u12120 3FCC                                u13000 1796  
                              u11217 256C                                u12017 3E4A  
                              u12201 3A74                                u10530 5D32  
                              u10610 4B68                                u11410 273E  
                              u11330 2690                                u11250 25EC  
                              u12130 3FE4                                u12050 3EB6  
                              u13010 17B0                                u11307 264C  
                              u11227 258A                                u12107 3F3A  
                              u10540 5D4A                                u10620 4B82  
                              u11500 27E6                                u11260 2600  
                              u12060 3ED8                                u13100 18A4  
                              u11157 5956                                u11317 2662  
                              u11237 25B2                                u12117 3F58  
                              u12037 3E62                                u10630 4B9C  
                              u11510 2802                                u11430 2754  
                              u11350 26C6                                u11270 2614  
                              u12070 3EF6                                u13030 17EA  
                              u12310 4C6C                                u10607 4B48  
                              u11327 2676                                u11247 25C6  
                              u12127 3FB8                                u13111 18B2  
                              u13007 178E                                u11600 292C  
                              u11520 2816                                u11440 2768  
                              u11360 26DA                                u11280 2628  
                              u12080 3F12                                u13200 19B6  
                              u13120 18D0                                u12400 1164  
                              u12160 3996                                u10537 5D2C  
                              u10617 4B62                                u11417 2738  
                              u11337 268A                                u11257 25E4  
                              u12137 3FDC                                u12057 3EAA  
                              u13017 17A8                                u12241 3BA8  
                              u11610 2960                                u11370 2700  
                              u11290 2A34                                u12090 3F24  
                              u14010 210E                                u13210 19D2  
                              u13050 1812                                u12410 1186  
                              u10627 4B7C                                u11507 27E0  
                              u11267 25FA                                u12067 3ECC  
                              u13131 18EA                                u13107 1898  
                              u12171 39AE                                u10580 4B1C  
                              u10900 375C                                u11620 2974  
                              u11540 2838                                u11460 277E  
                              u14100 21C2                                u13300 1AD0  
                              u13220 19EC                                u13140 1908  
                              u12500 1276                                u12420 11A0  
                              u10637 4B96                                u11517 27FC  
                              u11437 274E                                u11357 26C0  
                              u11277 260E                                u12077 3EF0  
                              u14021 2128                                u13037 17DE  
                              u12181 39E8                                u10590 4B34  
                              u11550 284E                                u11470 27A2  
                              u11390 2722                                u14110 21D8  
                              u14030 2144                                u13310 1AEE  
                              u13230 1A06                                u13070 1848  
                              u12510 12C2                                u12430 11BA  
                              u11710 5ED2                                u11607 2926  
                              u11527 2810                                u11447 2762  
                              u11367 26D4                                u11295 2A2A  
                              u11287 2622                                u12087 3F0C  
                              u13207 19AE                                u13151 1924  
                              u13127 18C8                                u12407 1158  
                              u10760 4740                                u11640 2992  
                              u11560 2894                                u11480 27B6  
                              u14120 21EE                                u13320 1B0C  
                              u13240 1A22                                u13160 1942  
                              u13080 1866                                u12600 13B6  
                              u12520 12E0                                u12440 11D6  
                              u11720 59F6                                u11617 2958  
                              u11377 26FA                                u12097 3F1E  
                              u14041 2152                                u14017 210A  
                              u13217 19CA                                u13057 180A  
                              u12417 117E                                u10770 4770  
                              u11650 29AA                                u11490 27D2  
                              u14130 221A                                u14050 2168  
                              u13410 1BD2                                u13330 1B2A  
                              u13250 1A4A                                u13170 195E  
                              u12530 12FA                                u12450 11F0  
                              u12370 10E0                                u10587 4B16  
                              u10907 3756                                u11627 296E  
                              u11547 2830                                u11467 2778  
                              u14107 21BE                                u13307 1AC8  
                              u13227 19E4                                u13147 1900  
                              u13091 1880                                u12611 13D2  
                              u12507 126E                                u12427 1198  
                              u11900 45EE                                u11660 29FA  
                              u14140 222C                                u13420 1BE6  
                              u13340 1B48                                u13180 1978  
                              u12700 14BC                                u12620 13EE  
                              u12540 1314                                u12460 120A  
                              u12380 10FC                                u10597 4B2E  
                              u10765 473E                                u11557 2848  
                              u11477 2796                                u11397 271C  
                              u14117 21D2                                u14037 213A  
                              u13501 1CCE                                u13317 1AE8  
                              u13261 1A58                                u13237 19FE  
                              u13077 1846                                u12517 12BA  
                              u12437 11B2                                u11670 0012  
                              u11910 460C                                u14150 2252  
                              u14070 2184                                u13510 1CE2  
                              u13430 1C00                                u13350 1B5E  
                              u13270 1A76                                u13190 1998  
                              u12710 14DA                                u12630 140A  
                              u12550 132E                                u12470 1226  
                              u12390 113E                                u11671 0010  
                              u10775 476E                                u11647 298A  
                              u11567 2880                                u11487 27B0  
                              u14127 21E8                                u13327 1B06  
                              u13247 1A1A                                u13167 193A  
                              u13087 185E                                u12607 13AE  
                              u12527 12D8                                u12447 11CE  
                              u11680 0024                                u10880 3722  
                              u10848 36A6                                u11920 462A  
                              u14160 22AE                                u13600 1DC2  
                              u13440 1C1C                                u13360 1B74  
                              u12800 15C6                                u12720 14F6  
                              u12640 1426                                u12560 1348  
                              u12480 1240                                u14400 2E5C  
                              u14320 2DA6                                u11681 0022  
                              u11657 29A2                                u11497 27CC  
                              u14137 2216                                u14057 2164  
                              u13521 1CFC                                u13417 1BCC  
                              u13337 1B24                                u13281 1A90  
                              u13257 1A42                                u13177 1956  
                              u12537 12F2                                u12457 11E8  
                              u12377 10DA                                u11690 0032  
                              u10890 3740                                u11930 4648  
                              u14170 22C8                                u14090 21B2  
                              u13610 1DDC                                u13530 1D10  
                              u13450 1C36                                u13370 1B8C  
                              u13290 1AB6                                u12810 15E4  
                              u12650 1440                                u12570 1364  
                              u12490 125A                                u14330 2DB4  
                              u15210 3CDA                                u11691 0030  
                              u11907 45E6                                u11667 29E6  
                              u14147 2226                                u13427 1BE0  
                              u13347 1B42                                u13187 1970  
                              u12707 14BA                                u12627 13E6  
                              u12547 130C                                u12467 1202  
                              u12387 10F6                                u11940 465E  
                              u13700 1E86                                u13620 1DF4  
                              u13460 1C52                                u12820 15FE  
                              u12740 1522                                u12660 145E  
                              u12580 1380                                u14500 2EF2  
                              u14340 2DDA                                u14260 2D24  
                              u15300 3DDA                                u11917 4604  
                              u14157 224E                                u14077 217E  
                              u13517 1CDE                                u13437 1BFA  
                              u13357 1B58                                u13277 1A6E  
                              u13197 1990                                u12717 14D2  
                              u12637 1402                                u12557 1326  
                              u12477 121E                                u12397 112A  
                              u10878 36FC                                u11950 4674  
                              u13710 1EAC                                u13550 1D38  
                              u13470 1C66                                u13390 1BA8  
                              u12910 16BA                                u12830 1618  
                              u12750 153C                                u12670 1478  
                              u12590 139C                                u14510 2FA2  
                              u14430 2E7E                                u15230 3CF4  
                              u15150 3C22                                u10887 371C  
                              u11927 4622                                u14167 22A8  
                              u13607 1DB8                                u13447 1C16  
                              u13367 1B6E                                u12807 15BE  
                              u12727 14EE                                u12647 141E  
                              u12567 1340                                u12487 1238  
                              u14407 2E54                                u14327 2DA0  
                              u11960 468A                                u11880 45BA  
                              u13800 1F54                                u13640 1E10  
                              u13480 1C78                                u12840 1632  
                              u12680 1492                                u14440 2E98  
                              u14280 2D74                                _LATH0 007C80  
                              u10897 373A                                u11937 4640  
                              u14177 22C2                                u14097 21AE  
                              u13617 1DD8                                u13537 1D0C  
                              u13457 1C30                                u13377 1B88  
                              u13297 1AAE                                u12817 15DC  
                              u12761 1558                                u12657 1438  
                              u12577 135C                                u12497 1252  
                              u15217 3CD4                                _LATH1 007C81  
                              u11970 469E                                u11890 45D0  
                              u13810 1F6A                                u13730 1ECE  
                              u13570 1D68                                u13490 1CB4  
                              u12930 16DA                                u12850 1650  
                              u12770 1574                                u15250 3D0C  
                              u15170 3C68                                _LATH2 007C82  
                              u11947 4656                                u13707 1E82  
                              u13627 1DEA                                u13467 1C4C  
                              u12827 15F6                                u12747 151A  
                              u12667 1456                                u12587 1378  
                              u14515 2F98                                u14507 2EEA  
                              u14347 2DCC                                u14267 2D18  
                              u15307 3DCE                                u11980 46B2  
                              u13900 203E                                u13820 1F82  
                              u13740 1EE2                                u13660 1E2A  
                              u13580 1D90                                u12860 166C  
                              u12780 1590                                u15260 3D46  
                              u15180 3CAA                                u11957 466C  
                              u13717 1EA6                                u13557 1D34  
                              u13477 1C60                                u13397 1BA2  
                              u12917 16B4                                u12837 1610  
                              u12757 1534                                u12677 1470  
                              u12597 1394                                u14437 2E76  
                              u15237 3CEE                                u15157 3C1C  
                              u11990 46D2                                u13750 1EF2  
                              u13670 1E5A                                u13590 1DAA  
                              u12950 16FC                                u12790 15AC  
                              u14470 2EBA                                u14390 2E42  
                              u15270 3D5C                                u15190 3CBE  
                              u11967 4682                                u11887 45B2  
                              u13807 1F4E                                u13647 1E0C  
                              u13487 1C72                                u12847 1630  
                              u12687 148A                                u14447 2E90  
                              u14287 2D68                                u13920 2066  
                              u13840 1F9E                                u13760 1F04  
                              u13680 1E6A                                u12960 171C  
                              u12880 168E                                u14480 2ED4  
                              u15280 3D90                                u14560 5734  
                              u11977 4698                                u11897 45C8  
                              u13817 1F64                                u13737 1EC8  
                              u13577 1D5E                                u13497 1CB0  
                              u12937 16D4                                u12857 1648  
                              u12777 156C                                u15257 3D06  
                              u15177 3C5C                                u13770 1F1E  
                              u14810 358C                                u15290 3DAA  
        __size_of_ETH_readLinkStatus 0000                                u14731 315A  
                              u14651 30B2                                u11987 46AC  
                              u13907 2038                                u13827 1F7E  
                              u13747 1EDE                                u13667 1E26  
                              u13587 1D86                                u12867 1664  
                              u12787 1588                                u15267 3D3A  
                              u15187 3C9E                                _MAIPG 000EA6  
                              u13940 2082                                u13860 1FEA  
                              u13780 1F2E                                u12980 176A  
                              _ERDPT 000F7A                                u11997 46CA  
                              u13757 1EEE                                u13677 1E56  
                              u13597 1DA6                                u12957 16FA  
                              u12797 15A4                                u14477 2EB2  
                              u14397 2E3A                                u15277 3D56  
                              u15197 3CB8                                u13790 1F3E  
                              u14830 3442                                u13927 2062  
                              u13847 1F98                                u13767 1F00  
                              u13687 1E66                                u12991 1778  
                              u12967 1714                                u12887 1688  
                              u14487 2ECC                                u14815 3582  
                              u15287 3D88                                u14567 5728  
                              u15607 62F8                                u14680 32C2  
                              u13880 200C                                u13777 1F18  
                              u14841 3452                                u15297 3DA2  
                              u15617 6302                                u13970 20BE  
                              u13890 2022                                u14771 31D2  
                              u14691 3110                                u13947 207C  
                              u13867 1FE4                                u13787 1F2A  
                              u12987 1762                                u15707 6322  
                              u15627 5244                                u14780 323E  
                              u14685 32B8                                u13797 1F3A  
                              u15717 648E                                u15637 5250  
                              u13990 20DA                                u15590 4D90  
                              u13887 2008                                u15647 525C  
                              u14785 3234                                u13977 20BA  
                              u13897 201C                                u15657 5268  
                 __size_of_TCB_Reset 0150                                u15667 527A  
                              u13997 20D4                                u15677 528C  
                              u15687 52C6                                u15697 6314  
                    __end_of___lwdiv 5DEA                                _MICMD 000EB2  
                              i1l512 0036                                i1l504 0004  
                              i1l521 5184                      __end_of___lwmod 5F42  
                              i1l506 001A                                i1l507 0018  
                              i1l518 5180                  ??i1_ETH_CheckLinkUp 0010  
                              i1l519 5170                                _ERXND 000EEA  
                              i1l476 0016                                i1l484 5FD2  
                              i1l489 5FE0                                _ETXND 000EE6  
                              _ERXST 000EE8                                _EWRPT 000EE2  
                              _ETXST 000EE4                                _SPEN1 007D5F  
                              _TX1IF 007CF4                                _PORTJ 000F88  
                    __end_of__doprnt 38DE                                _TRISA 000F92  
                              _TRISB 000F93                                _TRISD 000F95  
                              _TRISE 000F96                                _TRISH 000F99  
                              _TRISJ 000F9A                       __CFG_ECCPMX$ON 000000  
     __size_of_ETH_TxComputeChecksum 008E        __end_of_ETH_TxComputeChecksum 55BC  
               __size_of_DHCP_Manage 007E                     __end_of_TCP_Bind 62A6  
                   __end_of_TCP_Init 63F2                     __end_of_TCP_Recv 2F64  
                        ?_TCP_Listen 0111                     __end_of_TCP_Send 536A  
                        ?_IPv4_Start 0022                     __end_of_PHY_Read 50EC  
                    __end_of_dpowers 100B                          ?_TCP_Server 0001  
                   __end_of_UDP_Send 562C                          ?_TCP_Update 0001  
                              _putch 63A4                                main@t 02AB  
                 __size_of_PHY_Write 0050                     ?_TCP_GetRxLength 001F  
                 __size_of_UDP_Start 004E                      __end_of_low_isr 003A  
          __size_of_ETH_EventHandler 002E            _IPV4_PseudoHeaderChecksum 5374  
                              pclath 000FFA      TCP_FiniteStateMachine@nextState 0110  
                              tablat 000FF5               TCP_InsertRxBuffer@data 0021  
                              time@t 0017                                plusw1 000FE3  
                              plusw2 000FDB                         _SYSLOG_Write 61BA  
                    ?_lcd_write_data 0001                      ??_lcd_init_pins 0017  
                    ?_lcd_write_ctrl 0001                                status 000FD8  
                 _TCP_InsertRxBuffer 57C6                      __end_of_sprintf 60B4  
                      _ETH_EdataRead 0000                        ?_IPV4_GetMyIP 0017  
                      ?_ETH_SaveRDPT 0001                         __end_ofPL401 233A  
                       __end_ofPL411 3E24                         __end_ofPL403 234C  
                       __end_ofPL501 549E                         __end_ofPL421 3310  
                       __end_ofPL413 4008                         __end_ofPL405 2366  
                       __end_ofPL511 2500                         __end_ofPL503 24F8  
                       __end_ofPL431 23E2                         __end_ofPL423 23AE  
                       __end_ofPL415 2394                         __end_ofPL407 238C  
                       __end_ofPL601 58A8                         __end_ofPL521 3602  
                       __end_ofPL513 3368                         __end_ofPL505 334C  
                       __end_ofPL441 2416                         __end_ofPL433 35C8  
                       __end_ofPL425 23CA                         __end_ofPL417 239C  
                       __end_ofPL409 2F7E                         __end_ofPL611 2BE6  
                       __end_ofPL603 5830                         __end_ofPL531 5648  
                       __end_ofPL523 4402                         __end_ofPL515 2508  
                       __end_ofPL507 5924                         __end_ofPL451 4BFA  
                       __end_ofPL443 2430                         __end_ofPL435 2FDC  
                       __end_ofPL427 23D2                         __end_ofPL419 23A4  
                       __end_ofPL701 3396                         __end_ofPL621 523E  
                       __end_ofPL613 2BF8                         __end_ofPL605 6022  
                       __end_ofPL541 3932                         __end_ofPL533 301E  
                       __end_ofPL525 2AAE                         __end_ofPL517 2510  
                       __end_ofPL509 498E                         __end_ofPL461 38EE  
                       __end_ofPL453 244E                         __end_ofPL445 2A7C  
                       __end_ofPL437 2A6E                         __end_ofPL429 23DA  
                       __end_ofPL711 5E7A                         __end_ofPL703 3968  
                       __end_ofPL631 2530                         __end_ofPL623 2C12  
                       __end_ofPL615 2526                         __end_ofPL607 3BDC  
                       __end_ofPL551 4030                         __end_ofPL543 4016  
                       __end_ofPL535 5374                         __end_ofPL527 3382  
                       __end_ofPL519 3924                         __end_ofPL471 249E  
                       __end_ofPL463 3906                         __end_ofPL455 245C  
                       __end_ofPL447 2438                         __end_ofPL439 23FC  
                       __end_ofPL391 2A1A                         __end_ofPL721 52D6  
                       __end_ofPL713 57C6                         __end_ofPL705 3684  
                       __end_ofPL641 2C30                         __end_ofPL633 5524  
                       __end_ofPL625 2C22                         __end_ofPL617 2C08  
                       __end_ofPL609 2BD4                         __end_ofPL561 2B82  
                       __end_ofPL553 2B1A                         __end_ofPL545 251E  
                       __end_ofPL537 2AE6                         __end_ofPL529 2ACA  
                       __end_ofPL481 4ED2                         __end_ofPL473 24A6  
                       __end_ofPL465 248C                         __end_ofPL457 2476  
                       __end_ofPL449 2440                         __end_ofPL393 22F8  
                       __end_ofPL731 3972                         __end_ofPL723 2C7A  
                       __end_ofPL715 4C10                         __end_ofPL707 58B2  
                       __end_ofPL651 395E                         __end_ofPL643 4048  
                       __end_ofPL635 2540                         __end_ofPL627 440C  
                       __end_ofPL619 49B0                         __end_ofPL571 4832  
                       __end_ofPL563 2B9C                         __end_ofPL555 2B34  
                       __end_ofPL547 424E                         __end_ofPL539 361C  
                       __end_ofPL491 3338                         __end_ofPL483 2A96  
                       __end_ofPL475 24B8                         __end_ofPL467 2496  
                       __end_ofPL459 2482                         __end_ofPL395 2312  
                       __end_ofPL387 22E6                         __end_ofPL741 52DC  
                       __end_ofPL733 397C                         __end_ofPL725 552E  
                       __end_ofPL717 2C70                         __end_ofPL709 5CF4  
                       __end_ofPL661 3E3C                         __end_ofPL653 56D0  
                       __end_ofPL645 2C3E                         __end_ofPL637 254E  
                       __end_ofPL629 403A                         __end_ofPL581 4266  
                       __end_ofPL573 393A                         __end_ofPL565 481A  
                       __end_ofPL557 2B4E                         __end_ofPL549 2B00  
                       __end_ofPL493 24EE                         __end_ofPL485 3912  
                       __end_ofPL477 24CA                         __end_ofPL469 4800  
                       __end_ofPL397 231E                         __end_ofPL389 22F0  
                       __end_ofPL751 2C82                         __end_ofPL743 50F4  
                       __end_ofPL735 5CFC                         __end_ofPL727 49BA  
                       __end_ofPL719 368E                         __end_ofPL671 4C06  
                       __end_ofPL663 5F04                         __end_ofPL655 59E2  
                       __end_ofPL647 441A                         __end_ofPL639 4F9C  
                       __end_ofPL591 2BC2                         __end_ofPL583 5AE4  
                       __end_ofPL575 49A6                         __end_ofPL567 3636  
                       __end_ofPL559 2B68                         __end_ofPL495 4AE6  
                       __end_ofPL487 24DC                         __end_ofPL479 4ADE  
                       __end_ofPL399 4706                         __end_ofPL753 6086  
                       __end_ofPL745 5D0A                         __end_ofPL737 3BE4  
                       __end_ofPL729 486A                         __end_ofPL681 4052  
                       __end_ofPL673 61BA                         __end_ofPL665 4854  
                       __end_ofPL657 2C48                         __end_ofPL649 3040  
                       __end_ofPL593 3950                         __end_ofPL585 365C  
                       __end_ofPL577 2BB4                         __end_ofPL569 3646  
                       __end_ofPL497 35F0                         __end_ofPL489 3004  
                       __end_ofPL747 5BD6                         __end_ofPL739 5D02  
                       __end_ofPL691 4D1E                         __end_ofPL683 2558  
                       __end_ofPL675 4860                         __end_ofPL667 2C54  
                       __end_ofPL659 57BC                         __end_ofPL595 3E32  
                       __end_ofPL587 4848                         __end_ofPL579 3942  
                       __end_ofPL499 2AA0                         __end_ofPL749 519E  
                       __end_ofPL693 2C5E                         __end_ofPL685 3670  
                       __end_ofPL677 583C                         __end_ofPL669 636A  
                       __end_ofPL597 3032                         __end_ofPL589 338C  
                       __end_ofPL695 304A                         __end_ofPL687 367A  
                       __end_ofPL679 3666                         __end_ofPL599 4EE6  
                       __end_ofPL697 3054                         __end_ofPL689 459C  
                       __end_ofPL699 2C68            __end_ofi1_ETH_CheckLinkUp 6080  
         ETH_RxComputeChecksum@rxptr 002D                  __size_of_ETH_GetMAC 002A  
      ETH_TxComputeChecksum@position 0025                  __size_of_ETH_Read16 0036  
                __size_of_ETH_Read32 0058                 __end_of_ARPV4_Packet 329E  
                    __initialization 5C72                  __size_of_ETH_Insert 003E  
                    TCP_Send@dataLen 00F2                 __end_of_ARPV4_Lookup 5C72  
                ?_TCP_InsertRxBuffer 001F                         __end_of_main 4E08  
               __end_of_ARPV4_Update 620E                         __end_of_time 5B38  
     __end_of_TCP_FiniteStateMachine 22CE                  __size_of_ETH_Write8 000A  
                        ETH_Copy@len 006D                          ETH_Init@mac 002D  
                    _DHCP_WriteZeros 640C             ETH_TxComputeChecksum@len 0027  
                             ??_main 0033                               ??_time 001B  
                      __activetblptr 000003                       _MAC_getAddress 64C6  
                    TCP_SendDone@ret 0021                  _TCP_ParseTCPOptions 4C10  
                      _ETH_ReadBlock 5924                      TCP_Snd@txHeader 00DA  
               ??_TCP_InsertRxBuffer 0025                    __end_of_ETH_Read8 61AE  
                  __end_of_ETH_Flush 5ACE                    ETH_Send@packetEnd 0017  
            __end_of_TCP_PayloadSave 3FEC                    __end_of_IPV4_Init 64BE  
                  __end_of_IPV4_Send 5918                            ??_TCP_Snd 00A1  
                __size_ofi1_PHY_Read 00A2                       ETH_Dump@length 0017  
                             _EDMAND 000EF2                               _EDMAST 000EF0  
                             ?_putch 0001                               _MAADR1 000E84  
                             _MAADR2 000E85                               _MAADR3 000E82  
                             _MAADR4 000E83                               _MAADR5 000E80  
                             _MAADR6 000E81                  __size_of_TCB_Insert 003E  
                             _MACON1 000EA0                               _MACON3 000EA2  
                             _MACON4 000EA3                               _MAMXFL 000EAA  
                             _T1SYNC 007E6A                               i1l6310 0008  
                             i1l6302 0000                               i1l6320 0034  
                             i1l6312 0012                               i1l6314 0024  
                             i1l6316 0028                               i1l6308 0006  
                             i1l6318 0032                               i1l6776 0000  
                             _INTCON 000FF2                               _OSCCON 000FD3  
                     ?_ETH_EdataRead 0001                       ??_IPV4_GetMyIP 001B  
                             _SPBRG1 000FAF                               _TMR1IE 007CE8  
                             _TMR1IF 007CF0                               _TMR1CS 007E69  
                     ??_ETH_SaveRDPT 0017                               _TMR1IP 007CF8  
                             _TMR1ON 007E68                    __end_of_TCB_Check 574E  
               __end_of_ICMP_Receive 5BCE                               _TXREG1 000FAD  
                             _TXSTA1 000FAC                     __end_of_dhcpName 1028  
               ?_TCP_ParseTCPOptions 0001                    __end_of_TCB_Reset 46EC  
              __size_of_DHCP_Handler 024E                    main@no_ip_display 02AF  
                     __CFG_XINST$OFF 000000                      __CFG_EASHFT$OFF 000000  
                   __end_of_lcd_busy 6496                     __end_of_lcd_init 52D0  
                     ETH_ReadBlock@p 001E                     __end_of_high_isr 64C6  
         __end_ofi1_ETH_EventHandler 5FEE                ICMP_EchoReply@icmpHdr 009F  
                   __end_of_lcd_puts 635E                   _ETH_ResetByteCount 64A0  
               TCP_Snd@payloadLength 00D5                ICMP_EchoReply@ipv4Hdr 00A0  
                             ___wmul 625C                  __size_of_TCP_Listen 0064  
                __size_of_IPv4_Start 0178                               _arpMap 0300  
                          ??___lwdiv 001B                            ??___lwmod 0022  
              __size_of_DHCP_Request 018A                  __size_of_TCP_Server 01F0  
                __size_of_TCP_Update 0226                    __end_of_PHY_Write 5B88  
                             _initHW 5DEA                               _memcmp 5D56  
                          ??__doprnt 0026                               _memset 613C  
                  __end_of_UDP_Start 5C24                               clear_0 5C8A  
                             clear_1 5C96                               clear_2 5CA2  
                             clear_3 5CAE               __end_of_MAC_getAddress 64CA  
                             _tcpMss 0043                         __doprnt@flag 002D  
               __end_of_broadcastMAC 102E                               _printf 62A6  
                ?_ETH_ResetByteCount 0001                         __doprnt@prec 002A  
                             main@ip 02D0               ETH_ComputeChecksum@len 0017  
                    UDP_Start@destIP 009F                         __pdataCOMRAM 0048  
              TCP_GetRxLength@tcbPtr 001F                       ?_ETH_ReadBlock 0017  
                       ?_UDP_Receive 00D3                         __mediumconst 0000  
                  ??_ETH_CheckLinkUp 0026                            ??_low_isr 0014  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8                     __end_of_spi_init 6482  
       __size_of_Network_WaitForLink 000E                            ??_sprintf 0031  
                       ??_ARPV4_Init 0017             i1PHY_WaitForBusy@timeout 0002  
              DHCP_WriteZeros@length 0018                         _DHCP_Handler 397C  
                      DHCP_Handler@v 00BB                       _ETH_EdataWrite 0000  
                     ETH_Insert@data 0017                      __CFG_FOSC$HSPLL 000000  
                         __accesstop 0060              __end_of__initialization 5CB4  
               ??_ETH_ResetByteCount 0017                   TCP_SendDone@tcbPtr 001F  
                          ?_LED_Init 0001                ??_TCP_ParseTCPOptions 001B  
                    __CFG_ETHLED$OFF 000000                            ?_ETH_Copy 006D  
                          ?_ETH_Dump 0017                            ?_ETH_Init 0001  
                          ?_ETH_Send 0001           __size_ofi1_ETH_CheckLinkUp 002C  
                      ___rparam_used 000001                         _DHCP_Request 4266  
                      ?_Network_Init 0001                        ?_Network_Read 0001  
             IPV4_Send@payloadLength 0031                IPv4_Start@destAddress 0022  
            __end_of_DHCP_WriteZeros 6424         __end_ofi1_ETH_readLinkStatus 0000  
                     __pcstackCOMRAM 0001                _ETH_RxComputeChecksum 5E7A  
            __size_of_ETH_WriteBlock 004C                 __size_of_IPV4_Packet 01D2  
                          ?_TCP_Bind 001F                __end_of_ARPV4_Request 47CA  
                          LED_Init@x 0017                            ?_TCP_Init 0001  
                          ?_TCP_Recv 0111                            ?_TCP_Send 00EE  
                          ?_PHY_Read 0019              __size_of_ETH_WriteStart 00FC  
                          ?_UDP_Send 0001                        __end_of_putch 63BE  
                 PHY_WaitForBusy@ret 0017                 __size_of_ETH_Write16 000E  
               __size_of_ETH_Write32 001A                      ?_MAC_getAddress 0017  
                 __end_of_ARPV4_Init 640C    TCP_ParseTCPOptions@tcpOptionsSize 001F  
       __end_of_ETH_NextPacketUpdate 5A90                         ??_ETH_GetMAC 0018  
                    ETH_Copy@tmp_len 0071                      _PHY_WaitForBusy 0000  
                       _dhcpServerId 021C                         ETH_Read8@ret 0017  
                       ??_ETH_Read32 001B                         ??_ETH_Read16 0019  
                   ??_Network_Manage 00FF                         ??_ETH_Insert 001C  
                   TCP_Listen@tcbPtr 0111                   __size_of_lcd_goto1 000E  
                      TCB_Insert@ptr 0017                         ??_ETH_Write8 0017  
           DHCP_Handler@optionLength 00CE                     ?_TCP_PayloadSave 00EE  
                         __doprnt@ap 0025                           __doprnt@cp 002B  
             __end_of_ETH_EdataWrite 0000                           __doprnt@pb 0023  
                 __size_of_lcd_putch 001C                 ETH_ComputeChecksum@v 0023  
                            ??_putch 0017                      ??_ETH_EdataRead 0017  
                         __pbssBANK1 01BD                           __pbssBANK2 0200  
                         __pbssBANK3 0300                     _ETH_EventHandler 5CBE  
           __end_of_ETH_GetByteCount 6388                __size_of_ARPV4_Packet 024A  
                         ??_LED_Init 0017                       TCP_Bind@tcbPtr 001F  
              __size_of_ARPV4_Lookup 004E                         ?_SYSLOG_Init 0001  
                         ??_ETH_Copy 0033                           ??_ETH_Dump 0019  
                         ??_ETH_Init 002A                      TCP_Server@rxLen 0118  
                     ??_Network_Init 002E                       ??_Network_Read 0157  
                    TCP_Server@txLen 0115                           ??_ETH_Send 0017  
              __size_of_ARPV4_Update 002A                           _macAddress 102E  
                    TCB_Reset@tcbPtr 0017                   __end_of_ETH_GetMAC 6018  
                       ??i1_PHY_Read 0007                   __end_of_ETH_Read16 5EF8  
                 __end_of_ETH_Read32 5A3A                         ??_TCB_Insert 0019  
                 __end_of_ETH_Insert 5F80                         IPV4_Send@ret 006F  
                            ?___wmul 0017                           ??_TCP_Bind 0023  
                         ??_TCP_Init 0017                           ??_TCP_Recv 0117  
                         ??_TCP_Send 0033                           ??_PHY_Read 001D  
                 __end_of_ETH_Write8 64B4                              ?_initHW 0001  
                         ??_UDP_Send 0074                              ?_memcmp 0017  
                         _deviceTime 02D4                              ?_memset 0017  
        __end_of_ETH_ComputeChecksum 522E                              _EDMADST 000EF4  
           TCP_SocketPoll@socket_ptr 001F                              ?_printf 0060  
                            _MABBIPG 000EA4                              _T1CKPS0 007E6C  
                            _T1CKPS1 007E6D                 __end_of_IPV4_GetMyIP 644C  
                    ??_ETH_ReadBlock 001B                 __end_of_ETH_SaveRDPT 64A0  
                            _T1OSCEN 007E6B                              _EPKTCNT 000ED9  
                            _EIEbits 000EFB                   __size_of_uart_init 0016  
                            _ERXFCON 000ED8               TCP_GetReceivedData@ret 0025  
                 __size_of_rtcc_init 0038                         SYSLOG_Init@t 006B  
                            _EIRbits 000F60                              _ERXRDPT 000EEC  
                     TCB_Check@count 001C              __size_of_TCP_SocketInit 0088  
            __size_of_TCP_SocketPoll 0026                           _ipv4Header 028B  
                       _ARPV4_Packet 3054                              _OSCTUNE 000F9B  
                       ??_TCP_Listen 0113                         ??_IPv4_Start 0027  
                   ??_lcd_write_data 0017                     ??_lcd_write_ctrl 0017  
                       ??_TCP_Server 0033                         _ARPV4_Lookup 5C24  
                            _TCP_Snd 2558                      ?_ETH_EdataWrite 0001  
                       ??_TCP_Update 0111                __size_of_ICMP_Receive 0046  
                       _ARPV4_Update 61E4                            ?_lcd_busy 0001  
                          ?_lcd_init 0001                            ?_high_isr 0001  
                          ?_lcd_puts 0019                   __end_ofi1_PHY_Read 5196  
             ARPV4_Lookup@ip_address 0017                           _ipv4Router 0220  
                         _led_values 0200                   __end_of_TCB_Insert 5E70  
                    TCP_Update@count 0119                   UDP_Receive@udpcksm 00D3  
                SYSLOG_Write@message 0031                 TCP_SocketInit@tcbPtr 001F  
                            __Hparam 0000         __size_of_TCP_GetReceivedData 0062  
                            __Lparam 0000               ?_ETH_RxComputeChecksum 0025  
                         _errataTemp 000E7E                     ?_DHCP_WriteZeros 0018  
                          _ECON1bits 000FD2                    __end_of_lcd_goto1 645A  
                 TCP_GetRxLength@ret 0025                            ?_spi_init 0001  
                  __end_of_lcd_putch 63A4              __end_of_PHY_WaitForBusy 0000  
                        time@gie_val 001B                      __size_of___wmul 0026  
                            ___lwdiv 5DA0                              ___lwmod 5F04  
                 __end_of_TCP_Listen 57B2                           _currentTCB 003B  
                       __psmallconst 1000                        ?_TCP_SendDone 001F  
                 __end_of_IPv4_Start 4592                              __doprnt 368E  
         __end_of_ETH_readLinkStatus 0000                   __end_of_TCP_Server 4242  
                    __size_of_initHW 0048                   __end_of_TCP_Update 3E0A  
                            __pcinit 5C72                      __size_of_memcmp 004A  
                    __size_of_memset 002A                              __ramtop 1000  
                            __ptext0 4D1E                              __ptext1 613C  
                            __ptext2 634C                              __ptext3 6388  
                            __ptext4 62EC                              __ptext5 644C  
                            __ptext6 5DEA                              __ptext7 6424  
                            __ptext8 6476                              __ptext9 5F80  
                            _ethData 01BD                              _ipv4DNS 0210  
                    __size_of_printf 0024    TCP_FiniteStateMachine@notAckBytes 010D  
                      ??_DHCP_Manage 0033                         _ICMP_Receive 5B88  
                  __end_of_hexpowers 1013                              _dpowers 1001  
                            _tcbList 0041                              _low_isr 0018  
               i1_ETH_readLinkStatus 0000                 __size_of_UDP_Receive 00C0  
              _ETH_TxComputeChecksum 552E              __size_of_ICMP_EchoReply 0104  
                            _sprintf 6086                           ??_lcd_busy 0017  
                         ??_lcd_init 0018                            _MICMDbits 000EB2  
                            main@str 02B0                           ??_high_isr 0001  
                     __pintcode_body 64BE                           ??_lcd_puts 001B  
               end_of_initialization 5CB4                            _ESTATbits 000EFD  
            ETH_ComputeChecksum@cksm 001F                          TCP_Snd@data 00D1  
            ETH_ComputeChecksum@seed 0019                          TCP_Snd@cksm 00D3  
                          _ETH_Read8 6190                            _ETH_Flush 5A90  
                            memcmp@n 0019                            _IPV4_Init 64B4  
                          _IPV4_Send 58B2                   IPv4_Start@protocol 0026  
                            memset@c 0019                              memset@n 001B  
                            memset@p 001D                              int_func 64BE  
                       _broadcastMAC 1028                     UDP_Start@dstPort 00A5  
                ETH_ReadBlock@buffer 0017                 _ETH_NextPacketUpdate 5A3A  
                        TCP_Server@i 011A                __end_of_lcd_init_pins 648C  
                ETH_ReadBlock@length 0019                    __end_of_uart_init 643A  
                     ETH_Write8@data 0017                        ?_rtcc_handler 0001  
                  __end_of_rtcc_init 5FB8                          PHY_Read@reg 001D  
                        PHY_Read@ret 001E                     DHCP_Request@type 00A8  
           TCP_InsertRxBuffer@tcbPtr 001F             __size_of_TCP_GetRxLength 0050  
                          _TCB_Check 56D0                     UDP_Start@srcPort 00A3  
                            printf@f 0060                       _ETH_WriteBlock 5D0A  
          TCP_GetReceivedData@tcbPtr 001F                  _Network_WaitForLink 645A  
                          _TCB_Reset 459C                              postdec1 000FE5  
                            postdec2 000FDD                           ??_spi_init 0017  
                            postinc0 000FEE                              postinc1 000FE6  
                            postinc2 000FDE                       ??_TCP_SendDone 0021  
                    _ETH_CheckLinkUp 60E2                       _ETH_WriteStart 4AE6  
                 TCP_PayloadSave@len 00EE                ARPV4_Packet@mergeFlag 0082  
                 _nextSequenceNumber 0224             ETH_RxComputeChecksum@len 0025  
                          _PORTBbits 000F81                            _PORTJbits 000F88  
                     DHCP_Handler@ip 00B3                            _PHY_Write 5B38  
                          _UDP_Start 5BD6                 __end_of_Network_Init 62EC  
               __end_of_Network_Read 504A                   i1_ETH_EventHandler 5FB8  
                          _TRISBbits 000F93                            _TRISCbits 000F94  
                      _rcvPayloadLen 01D0                ?i1_ETH_readLinkStatus 000C  
               ?_Network_WaitForLink 0001          __size_of_TCP_InsertRxBuffer 0060  
                  IPV4_Packet@hdrLen 0152                  __end_of_DHCP_Manage 56C6  
                      ETH_GetMAC@mac 0017                    IPV4_Packet@length 0153  
                ?i1_ETH_EventHandler 0001                    ICMP_EchoReply@ret 00AE  
                         ?_ETH_Read8 0001                           ?_ETH_Flush 0001  
                         ?_IPV4_Init 0001                           ?_IPV4_Send 0031  
              ?_ETH_NextPacketUpdate 0001               PHY_WaitForBusy@timeout 0018  
                         main@old_ip 02A7                       ??_rtcc_handler 0001  
                         lcd_putch@c 0018               __end_of_ETH_WriteBlock 5D56  
                  __size_of_LED_Init 0020                        _dhcpLeaseTime 01C4  
               __size_of_SYSLOG_Init 0032                           ?_TCB_Check 0017  
                  __size_of_ETH_Copy 00A8                    __size_of_ETH_Dump 002E  
                  __size_of_ETH_Init 0118               __end_of_ETH_WriteStart 4BE2  
                  __size_of_ETH_Send 002C                     ??_MAC_getAddress 0019  
                         ?_TCB_Reset 0017                __size_of_IPV4_GetMyIP 0012  
              __size_of_ETH_SaveRDPT 000A                     ?_PHY_WaitForBusy 0001  
               ??i1_ETH_EventHandler 0014               TCP_Server@socket_state 0117  
                     __end_of___wmul 6282             __end_of_ETH_EventHandler 5CEC  
           ARPV4_Request@destAddress 001D                       TCP_Recv@length 0115  
                      __pidataCOMRAM 64CA                    _UDP_CallBackTable 1034  
                     TCP_Recv@tcbPtr 0134                    __size_of_TCP_Bind 0024  
                  __size_of_TCP_Init 001A                    __size_of_TCP_Recv 02E2  
                  __size_of_TCP_Send 008E                       __end_of_initHW 5E32  
                     __end_of_memcmp 5DA0                    __size_of_PHY_Read 00A2  
                     __end_of_memset 6166                    __size_of_UDP_Send 0070  
                         ?_PHY_Write 0019                       __end_of_printf 62CA  
          ETH_RxComputeChecksum@cksm 002F                           ?_UDP_Start 009F  
                ICMP_Receive@icmpHdr 00B6            ETH_RxComputeChecksum@seed 0027  
                     _TCP_SocketInit 540C                       _TCP_SocketPoll 6236  
                ICMP_Receive@ipv4Hdr 00AF                  start_initialization 5C72  
              ??_Network_WaitForLink 002A               ?_ETH_TxComputeChecksum 0025  
                      ETH_Copy@timer 006F                        ETH_Read32@ret 001B  
                      ETH_Read16@ret 0019          __end_of_TCP_ParseTCPOptions 4D14  
                     TCP_Send@tcbPtr 00EE               ETH_WriteStart@dest_mac 0017  
       TCP_SocketPoll@tmpSocketState 0021          __size_of_ETH_ResetByteCount 000A  
                  ?_ETH_GetByteCount 0017                         _IPV4_GetMyIP 643A  
                       _ETH_SaveRDPT 6496                   TCP_Server@port7TCB 022C  
                       TCB_Check@ret 001B                         TCB_Check@ptr 0017  
           ??_TCP_FiniteStateMachine 0100              __end_of_ETH_CheckLinkUp 6110  
                 ??_ETH_GetByteCount 0019                        ??_IPV4_Packet 0136  
                    ?_ETH_WriteBlock 0017                DHCP_Handler@ethPktMAC 00C2  
                    ?_ETH_WriteStart 0017                        ??_ETH_Write32 001B  
                      ??_ETH_Write16 0019                             ??___wmul 001B  
          __end_of_UDP_CallBackTable 1039                          __doprnt@idx 0029  
                        __doprnt@val 002E                  ARPV4_Request@header 007C  
                           ??_initHW 0019                             ??_memcmp 001B  
                ETH_GetByteCount@val 0019                             ??_memset 001D  
                  ??_TCP_GetRxLength 0021                             ??_printf 0031  
             __end_of_TCP_SocketInit 5494               __end_of_TCP_SocketPoll 625C  
                   ??_ETH_EdataWrite 0017                          _DHCP_Manage 5648  
               IPv4_Start@macAddress 009C                        ETH_Insert@len 0018  
                    IPV4_Packet@cksm 0155                          __pbssCOMRAM 0033  
                _TCP_GetReceivedData 583C               ??i1_ETH_readLinkStatus 0010  
                      __pcstackBANK0 0060                        __pcstackBANK1 0100  
                      __pcstackBANK2 02A7                TCP_Recv@remoteAddress 0111  
                     _ICMP_EchoReply 486A                             ?_TCP_Snd 009F  
               __end_of_TCP_SendDone 6190               __size_of_ARPV4_Request 00C4  
                        ??_ETH_Read8 0017                          ??_ETH_Flush 0017  
             ??_ETH_NextPacketUpdate 0017                          ??_IPV4_Init 0017  
                      ?_SYSLOG_Write 0031                          ??_IPV4_Send 006B  
              __end_of_ETH_EdataRead 0000                    __size_of_lcd_busy 000A  
                  __size_of_lcd_init 0092                    __size_of_high_isr 64BE  
                          __doprnt@c 0030                            __doprnt@f 0024  
                  __size_of_lcd_puts 0012              ??_ETH_RxComputeChecksum 0029  
           __size_of_TCP_PayloadSave 01B0                            __pnvBANK2 02D4  
               ?_TCP_GetReceivedData 001F      ICMP_EchoReply@ipv4PayloadLength 00AC  
                   ___lwdiv@dividend 0017                          ??_TCB_Check 0019  
                          __pintcode 0008                          ??_TCB_Reset 0019  
                          __ptext100 63F2                            __ptext101 643A  
                          __ptext110 0000                            __ptext103 5FB8  
                          __ptext104 6054                            __ptext105 0000  
                          __ptext106 50F4                            __ptext107 0000  
                          __ptext109 620E                   ARPV4_Packet@x_1670 0087  
                           ?___lwdiv 0017                             ?___lwmod 001E  
                      IPV4_Send@cksm 0070                             ?__doprnt 0023  
              __size_of_Network_Init 0022                __size_of_Network_Read 00AE  
                 ARPV4_Packet@header 008A                          __pintcodelo 0018  
                __end_of_IPV4_Packet 3568                   ARPV4_Packet@arpPtr 0084  
                  __size_of_spi_init 000C                            _lcd_goto1 644C  
                 ARPV4_Packet@length 0080         IPV4_PseudoHeaderChecksum@len 001E  
                          _lcd_putch 6388         IPV4_PseudoHeaderChecksum@tmp 0023  
                    ?_TCP_SocketInit 001F             ARPV4_Update@entryPointer 0017  
                    ?_TCP_SocketPoll 001F                  __end_of_ETH_Write16 6476  
                __end_of_ETH_Write32 63D8                          ??_PHY_Write 001B  
                        __smallconst 1000                             _BAUDCON1 000F7E  
                        _clientState 0048                          ??_UDP_Start 002F  
              __end_of_ETH_ReadBlock 5988                 __end_of_rtcc_handler 6236  
             __end_of_ICMP_EchoReply 496E                             ?_low_isr 0001  
       __size_of_ETH_ComputeChecksum 0090                            _hexpowers 100B  
                   ___lwdiv@quotient 001C                            _localTime 02D8  
                DHCP_Request@started 00A7                   _ETH_readLinkStatus 0000  
                           ?_sprintf 0060                       __size_of_putch 001A  
                     ??_SYSLOG_Write 0033                            _tcpHeader 01D2  
            __size_of_Network_Manage 0076                       ___wmul@product 001B  
               ETH_WriteBlock@buffer 0017                            _udpHeader 029F  
                           _LED_Init 632C                  ?_ETH_readLinkStatus 0022  
               ETH_WriteBlock@length 0019                             _MIREGADR 000EB4  
                           _ETH_Copy 4EE6                           TCP_Snd@ret 00D7  
                           _ETH_Dump 60B4                             _ETH_Init 49BA  
                           _ETH_Send 6110                             _IPR2bits 000FA2  
                           _PIE2bits 000FA0                ??_TCP_GetReceivedData 0021  
                   ?_ETH_CheckLinkUp 0001                      TCB_Check@tcbPtr 001D  
    __size_of_TCP_FiniteStateMachine 120A                          _ipv4Address 0033  
                       _Network_Init 62CA                         _Network_Read 4F9C  
                  _nextAvailablePort 003D                             _PIR2bits 000FA1  
                           i1u893_20 0012                             i1u893_21 0010  
                           i1u894_20 0024                             i1u894_21 0022  
                           i1u895_20 0032                             i1u895_21 0030  
                   __CFG_WDTPS$32768 000000                            _uart_init 6424  
                           _SSP1CON1 000FC6                        ARPV4_Packet@x 0086  
                      SYSLOG_Write@t 006B                             _TCP_Bind 6282  
                           _TCP_Init 63D8                            _rtcc_init 5F80  
                           _TCP_Recv 2C82                             _TCP_Send 52DC  
                           _PHY_Read 504A   __size_of_IPV4_PseudoHeaderChecksum 0098  
                      _ARPV4_Request 4706                             _UDP_Send 55BC  
         ?_IPV4_PseudoHeaderChecksum 0017                           ?_lcd_goto1 0001  
                         ?_lcd_putch 0001                    ___wmul@multiplier 0017  
               ??_ETH_readLinkStatus 0026             __size_of_DHCP_WriteZeros 0018  
                      ARPV4_Lookup@x 0021          TCP_FiniteStateMachine@event 010F  
                      ??_UDP_Receive 00D5                      ?_ICMP_EchoReply 009F  
                          lcd_puts@s 0019                        ARPV4_Update@x 0019  
                 __end_of_macAddress 1034           IPV4_PseudoHeaderChecksum@v 001D  
                      TCP_Recv@count 0133                     TCP_Update@tcbPtr 011B  
                      ?_DHCP_Handler 00AF                     __size_of_TCP_Snd 04A8  
                      TCP_Snd@tcbPtr 009F                        ?_DHCP_Request 0001  
            __size_of_lcd_write_data 0020                        IPv4_Start@ret 009E  
            __size_of_lcd_write_ctrl 0020                             __Hrparam 0000  
         ETH_TxComputeChecksum@rxptr 002B                          _IPV4_Packet 3396  
                           __Lrparam 0000                           ?_uart_init 0001  
                        _ETH_Write32 63BE                          _ETH_Write16 6468  
                   ETH_ReadBlock@len 001C                       ?_ARPV4_Request 001D  
                  ??_TCP_PayloadSave 00F0                           ?_rtcc_init 0001  
                   __size_of___lwdiv 004A                     __size_of___lwmod 003E  
              TCP_Server@rxdataPort7 0263                    ?_ETH_EventHandler 0001  
                   __size_of__doprnt 0250    __end_of_IPV4_PseudoHeaderChecksum 540C  
             TCP_ParseTCPOptions@ret 001D               TCP_ParseTCPOptions@opt 001E  
                        _tcbListSize 0047             ARPV4_Packet@entryPointer 0088  
            ??_ETH_TxComputeChecksum 0060                   DHCP_Handler@ethMAC 00C8  
                 ??_ETH_EventHandler 002A               _TCP_FiniteStateMachine 10C4  
         __end_of_TCP_InsertRxBuffer 5826                   DHCP_Handler@length 00AF  
                           _dhcpName 1013                __size_of_TCP_SendDone 002A  
             __size_of_lcd_init_pins 000A                         TCP_Bind@port 0021  
                 DHCP_Handler@option 00C1                      ___lwdiv@divisor 0019  
                    ___lwdiv@counter 001B                     __size_of_low_isr 0022  
                           __ptext10 523E                             __ptext11 630C  
                           __ptext20 6236                             __ptext12 6482  
                           __ptext21 574E                             __ptext13 648C  
                           __ptext30 3BE4                             __ptext22 57C6  
                           __ptext14 632C                             __ptext31 4F9C  
                           __ptext23 5988                             __ptext15 4052  
                           __ptext40 6190                             __ptext32 6086  
                           __ptext24 583C                             __ptext16 540C  
                           _arpTimer 01E6                             __ptext41 5EC2  
                           __ptext33 3396                             __ptext25 6282  
                           __ptext17 5E32                             __ptext50 6496  
                           __ptext42 60B4                             __ptext34 4E08  
                           __ptext26 56D0                             __ptext18 6166  
                           __ptext51 4EE6                             __ptext43 10C4  
                           __ptext35 397C                             __ptext27 6022  
                           __ptext19 52DC                             __ptext60 5A3A  
                           __ptext52 625C                             __ptext44 3E3C  
                           __ptext36 5D56                             __ptext28 645A  
                           __ptext61 5A90                             __ptext53 61BA  
                           __ptext45 2558                             __ptext37 59E2  
                           __ptext29 549E                             __ptext70 6468  
                           __ptext62 3054                             __ptext54 62A6  
                           __ptext46 459C                             __ptext38 2C82  
                           __ptext71 4706                             __ptext63 5924  
                           __ptext55 368E                             __ptext47 5374  
                           __ptext39 4C10                             __ptext80 519E  
                           __ptext72 4AE6                             __ptext64 5CBE  
                           __ptext56 63A4                             __ptext48 5B88  
                           __ptext81 0000                             __ptext73 64A0  
                           __ptext65 5648                             __ptext57 5F04  
                           __ptext49 486A                             __ptext90 5AE4  
                           __ptext82 6110                             __ptext74 5D0A  
                           __ptext66 4266                             __ptext58 5DA0  
                           __ptext91 63D8                             __ptext83 5F42  
                           __ptext75 5FEE                             __ptext67 5BD6  
                           __ptext59 5E7A                             __ptext92 64B4  
                           __ptext84 636A                             __ptext76 5C24  
                           __ptext68 441A                             __ptext93 49BA  
                           __ptext85 640C                             __ptext77 55BC  
                           __ptext69 63BE                             __ptext94 5B38  
                           __ptext86 64AA                             __ptext78 58B2  
                           __ptext95 64C6                             __ptext87 0000  
                           __ptext79 552E                             __ptext96 60E2  
                           __ptext88 61E4                             __ptext97 0000  
                           __ptext89 62CA                             __ptext98 504A  
                           __ptext99 0000                       ??_DHCP_Handler 00B1  
                       _SSP1CON1bits 000FC6                             _lcd_busy 648C  
                           _lcd_init 523E                   DHCP_Request@ethMAC 00A9  
                           _high_isr 0008                           _ARPV4_Init 63F2  
                       time@the_time 001C                             _lcd_puts 634C  
                   __size_of_sprintf 002E                  __end_of_UDP_Receive 4EC8  
                   ??_ETH_WriteBlock 001B                TCP_Server@txdataPort7 0277  
                  _remoteIpv4Address 0228                   ETH_WriteStart@type 0019  
          ARPV4_Lookup@entry_pointer 001F                     ??_ETH_WriteStart 001B  
                      __size_of_main 00EA                        ??_SYSLOG_Init 0031  
                     ??_DHCP_Request 0033                        __size_of_time 0054  
                    _TCP_GetRxLength 5988                Network_Read@debug_str 015B  
                  UDP_Send@udpLength 007B                     PHY_Write@GIESave 001C  
                           _spi_init 6476                             int$flags 0049  
               _rxPacketStatusVector 01CC          __size_ofi1_ETH_EventHandler 0036  
                       _TCP_SendDone 6166                         _SSP1STATbits 000FC7  
                        ??_lcd_goto1 0018                    i1_PHY_WaitForBusy 0000  
              __size_of_rtcc_handler 0028                 __end_of_SYSLOG_Write 61E4  
          __size_of_ETH_GetByteCount 001E          __end_of_Network_WaitForLink 6468  
                        ??_lcd_putch 0018               i1ETH_CheckLinkUp@value 0010  
                 ?i1_PHY_WaitForBusy 0001                         ?_DHCP_Manage 0001  
                         _ETH_GetMAC 5FEE                            putch@data 0017  
                       TCP_Send@data 00F0                  Network_Manage@nowPv 0218  
                         _ETH_Read32 59E2                           _ETH_Read16 5EC2  
          ETH_TxComputeChecksum@cksm 002D             __size_of_PHY_WaitForBusy 0000  
          ETH_TxComputeChecksum@seed 0029                             memcmp@s1 0017  
                           memcmp@s2 0018                           _ETH_Insert 5F42  
                      ?_ARPV4_Packet 0001                      ETH_Write32@data 0017  
                    ETH_Write16@data 0017                        ?_ARPV4_Lookup 0017  
                           memset@p1 0017                           _ETH_Write8 64AA  
                  ??_DHCP_WriteZeros 001A                        ?_ARPV4_Update 0001  
              _receivedRemoteAddress 0037                  ??i1_PHY_WaitForBusy 0001  
         __end_of_ETH_ResetByteCount 64AA                             intlevel1 0000  
                           intlevel2 0000                            sprintf@ap 006B  
                          sprintf@pb 006C                            sprintf@wh 0060  
                       TCP_Server@U1 0045                         TCP_Server@U2 0046  
                     _Network_Manage 549E                           _MISTATbits 000E8A  
                   ___lwmod@dividend 001E                      UDP_Receive@hptr 00DD  
       __size_of_TCP_ParseTCPOptions 0104       __size_of_ETH_RxComputeChecksum 0048  
                      _lcd_init_pins 6482        __end_of_ETH_RxComputeChecksum 5EC2  
                       _rtcc_handler 620E                      ??_ARPV4_Request 0060  
                _ETH_ComputeChecksum 519E                          ARPV4_Init@x 0017  
                         i1_PHY_Read 50F4                          ??_uart_init 0017  
                __end_of_SYSLOG_Init 6054                     ??_TCP_SocketInit 0021  
                           printf@ap 0065                           _TCB_Insert 5E32  
                           printf@pb 0066            __end_ofi1_PHY_WaitForBusy 0000  
                   ??_TCP_SocketPoll 0021                          ??_rtcc_init 0017  
               IPV4_Send@totalLength 0072                        ?_ICMP_Receive 00AF  
                           sprintf@f 0062                 ETH_CheckLinkUp@value 0026  
                   DHCP_Handler@myip 00CF              __size_of_MAC_getAddress 0004  
                    ETH_WriteBlock@p 001B        IPV4_PseudoHeaderChecksum@cksm 001F  
                    ___lwmod@divisor 0020                      ARPV4_Packet@ret 0083  
                     ??_ARPV4_Packet 0060                      ___lwmod@counter 0022  
                        _UDP_Receive 4E08                       ??_ARPV4_Lookup 001B  
               ?_ETH_ComputeChecksum 0017           TCP_PayloadSave@buffer_size 00FD  
                     ??_ARPV4_Update 0017                           _TCP_Listen 574E  
                         _IPv4_Start 441A        __size_ofi1_ETH_readLinkStatus 0000  
           ETH_Insert@current_tx_ptr 001C                           _TCP_Server 4052  
                  Network_Manage@now 01B9                           _TCP_Update 3BE4  
             __end_of_Network_Manage 5514                          ?_ARPV4_Init 0001  
                    DHCP_Handler@v16 00BF              __end_of_TCP_GetRxLength 59D8  
                 Network_Read@header 01AB        __size_of_ETH_NextPacketUpdate 0056  
                       UDP_Receive@x 00DB                        PHY_Write@data 0019  
                     _lcd_write_data 62EC                       ?_lcd_init_pins 0001  
                     _lcd_write_ctrl 630C                         UDP_Send@cksm 0079  
                       PHY_Write@reg 001B                     ETH_Insert@offset 001A  
                      i1PHY_Read@reg 0007                        i1PHY_Read@ret 0008  

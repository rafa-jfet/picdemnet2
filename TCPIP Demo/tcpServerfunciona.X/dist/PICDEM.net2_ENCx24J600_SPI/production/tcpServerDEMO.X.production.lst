

Microchip Technology PIC18 PRO Macro Assembler V1.38 build -256452561 
                                                                                               Sat Sep 03 13:18:35 2016

Microchip Technology Omniscient Code Generator v1.38 (PRO mode) build 201607010351
     1                           	processor	18F97J60
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1
    85                           	psect	text67,global,reloc=2,class=CODE,delta=1
    86                           	psect	text68,global,reloc=2,class=CODE,delta=1
    87                           	psect	text69,global,reloc=2,class=CODE,delta=1
    88                           	psect	text70,global,reloc=2,class=CODE,delta=1
    89                           	psect	text71,global,reloc=2,class=CODE,delta=1
    90                           	psect	text72,global,reloc=2,class=CODE,delta=1
    91                           	psect	text73,global,reloc=2,class=CODE,delta=1
    92                           	psect	text74,global,reloc=2,class=CODE,delta=1
    93                           	psect	text75,global,reloc=2,class=CODE,delta=1
    94                           	psect	text76,global,reloc=2,class=CODE,delta=1
    95                           	psect	text77,global,reloc=2,class=CODE,delta=1
    96                           	psect	text78,global,reloc=2,class=CODE,delta=1
    97                           	psect	text79,global,reloc=2,class=CODE,delta=1
    98                           	psect	text80,global,reloc=2,class=CODE,delta=1
    99                           	psect	text81,global,reloc=2,class=CODE,delta=1
   100                           	psect	text82,global,reloc=2,class=CODE,delta=1
   101                           	psect	text83,global,reloc=2,class=CODE,delta=1
   102                           	psect	text84,global,reloc=2,class=CODE,delta=1
   103                           	psect	text85,global,reloc=2,class=CODE,delta=1
   104                           	psect	text86,global,reloc=2,class=CODE,delta=1
   105                           	psect	text87,global,reloc=2,class=CODE,delta=1
   106                           	psect	text88,global,reloc=2,class=CODE,delta=1
   107                           	psect	text89,global,reloc=2,class=CODE,delta=1
   108                           	psect	text90,global,reloc=2,class=CODE,delta=1
   109                           	psect	text91,global,reloc=2,class=CODE,delta=1
   110                           	psect	text92,global,reloc=2,class=CODE,delta=1
   111                           	psect	text93,global,reloc=2,class=CODE,delta=1
   112                           	psect	text94,global,reloc=2,class=CODE,delta=1
   113                           	psect	text95,global,reloc=2,class=CODE,delta=1
   114                           	psect	text96,global,reloc=2,class=CODE,delta=1
   115                           	psect	text97,global,reloc=2,class=CODE,delta=1
   116                           	psect	text98,global,reloc=2,class=CODE,delta=1
   117                           	psect	text99,global,reloc=2,class=CODE,delta=1
   118                           	psect	text100,global,reloc=2,class=CODE,delta=1
   119                           	psect	text101,global,reloc=2,class=CODE,delta=1
   120                           	psect	text102,global,reloc=2,class=CODE,delta=1
   121                           	psect	text103,global,reloc=2,class=CODE,delta=1
   122                           	psect	text104,global,reloc=2,class=CODE,delta=1
   123                           	psect	text105,global,reloc=2,class=CODE,delta=1
   124                           	psect	text106,global,reloc=2,class=CODE,delta=1
   125                           	psect	text107,global,reloc=2,class=CODE,delta=1
   126                           	psect	text108,global,reloc=2,class=CODE,delta=1
   127                           	psect	text109,global,reloc=2,class=CODE,delta=1
   128                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   129                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   130                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   131                           	psect	text112,global,reloc=2,class=CODE,delta=1
   132                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   133                           	psect	text113,global,reloc=2,class=CODE,delta=1
   134                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   135                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   136  0000                     
   137                           	psect	idataCOMRAM
   138  0087FE                     __pidataCOMRAM:
   139                           	opt stack 0
   140                           
   141                           ;initializer for _clientState
   142  0087FE  01                 	db	1
   143                           
   144                           	psect	smallconst
   145  001000                     __psmallconst:
   146                           	opt stack 0
   147  001000  00                 	db	0
   148  001001                     _dpowers:
   149                           	opt stack 0
   150  001001  0001               	dw	1
   151  001003  000A               	dw	10
   152  001005  0064               	dw	100
   153  001007  03E8               	dw	1000
   154  001009  2710               	dw	10000
   155  00100B                     __end_of_dpowers:
   156                           	opt stack 0
   157  00100B                     _hexpowers:
   158                           	opt stack 0
   159  00100B  0001               	dw	1
   160  00100D  0010               	dw	16
   161  00100F  0100               	dw	256
   162  001011  1000               	dw	4096
   163  001013                     __end_of_hexpowers:
   164                           	opt stack 0
   165  001013                     _dhcpName:
   166                           	opt stack 0
   167  001013  50                 	db	80
   168  001014  49                 	db	73
   169  001015  43                 	db	67
   170  001016  31                 	db	49
   171  001017  38                 	db	56
   172  001018  46                 	db	70
   173  001019  39                 	db	57
   174  00101A  37                 	db	55
   175  00101B  4A                 	db	74
   176  00101C  36                 	db	54
   177  00101D  30                 	db	48
   178  00101E  20                 	db	32
   179  00101F  45                 	db	69
   180  001020  54                 	db	84
   181  001021  48                 	db	72
   182  001022  45                 	db	69
   183  001023  52                 	db	82
   184  001024  4E                 	db	78
   185  001025  45                 	db	69
   186  001026  54                 	db	84
   187  001027  00                 	db	0
   188  001028                     __end_of_dhcpName:
   189                           	opt stack 0
   190  001028                     _broadcastMAC:
   191                           	opt stack 0
   192  001028  FF                 	db	255
   193  001029  FF                 	db	255
   194  00102A  FF                 	db	255
   195  00102B  FF                 	db	255
   196  00102C  FF                 	db	255
   197  00102D  FF                 	db	255
   198  00102E                     __end_of_broadcastMAC:
   199                           	opt stack 0
   200  00102E  00                 	db	0
   201  00102F  DE                 	db	222
   202  001030  AD                 	db	173
   203  001031  00                 	db	0
   204  001032  BE                 	db	190
   205  001033  EF                 	db	239
   206  001034                     __end_of_macAddress:
   207                           	opt stack 0
   208  001034                     _UDP_CallBackTable:
   209                           	opt stack 0
   210  001034  0044               	dw	68
   211  001036  8C                 	db	low _DHCP_Handler
   212  001037  60                 	db	high _DHCP_Handler
   213  001038  00                 	db	low (_DHCP_Handler shr (0+16))
   214  001039                     __end_of_UDP_CallBackTable:
   215                           	opt stack 0
   216  001039                     STR_2:
   217  001039  0D                 	db	13
   218  00103A  0A                 	db	10
   219  00103B  0D                 	db	13
   220  00103C  0A                 	db	10
   221  00103D  53                 	db	83	;'S'
   222  00103E  74                 	db	116	;'t'
   223  00103F  61                 	db	97	;'a'
   224  001040  72                 	db	114	;'r'
   225  001041  74                 	db	116	;'t'
   226  001042  69                 	db	105	;'i'
   227  001043  6E                 	db	110	;'n'
   228  001044  67                 	db	103	;'g'
   229  001045  20                 	db	32
   230  001046  53                 	db	83	;'S'
   231  001047  79                 	db	121	;'y'
   232  001048  73                 	db	115	;'s'
   233  001049  6C                 	db	108	;'l'
   234  00104A  6F                 	db	111	;'o'
   235  00104B  67                 	db	103	;'g'
   236  00104C  20                 	db	32
   237  00104D  61                 	db	97	;'a'
   238  00104E  74                 	db	116	;'t'
   239  00104F  20                 	db	32
   240  001050  25                 	db	37
   241  001051  75                 	db	117	;'u'
   242  001052  0D                 	db	13
   243  001053  0A                 	db	10
   244  001054  00                 	db	0
   245  001055                     STR_8:
   246  001055  30                 	db	48	;'0'
   247  001056  31                 	db	49	;'1'
   248  001057  32                 	db	50	;'2'
   249  001058  33                 	db	51	;'3'
   250  001059  34                 	db	52	;'4'
   251  00105A  35                 	db	53	;'5'
   252  00105B  36                 	db	54	;'6'
   253  00105C  37                 	db	55	;'7'
   254  00105D  38                 	db	56	;'8'
   255  00105E  39                 	db	57	;'9'
   256  00105F  61                 	db	97	;'a'
   257  001060  62                 	db	98	;'b'
   258  001061  63                 	db	99	;'c'
   259  001062  64                 	db	100	;'d'
   260  001063  65                 	db	101	;'e'
   261  001064  66                 	db	102	;'f'
   262  001065  00                 	db	0
   263  001066                     STR_4:
   264  001066  57                 	db	87	;'W'
   265  001067  61                 	db	97	;'a'
   266  001068  69                 	db	105	;'i'
   267  001069  74                 	db	116	;'t'
   268  00106A  69                 	db	105	;'i'
   269  00106B  6E                 	db	110	;'n'
   270  00106C  67                 	db	103	;'g'
   271  00106D  20                 	db	32
   272  00106E  66                 	db	102	;'f'
   273  00106F  6F                 	db	111	;'o'
   274  001070  72                 	db	114	;'r'
   275  001071  20                 	db	32
   276  001072  4C                 	db	76	;'L'
   277  001073  69                 	db	105	;'i'
   278  001074  6E                 	db	110	;'n'
   279  001075  6B                 	db	107	;'k'
   280  001076  00                 	db	0
   281  001077                     STR_5:
   282  001077  4C                 	db	76	;'L'
   283  001078  69                 	db	105	;'i'
   284  001079  6E                 	db	110	;'n'
   285  00107A  6B                 	db	107	;'k'
   286  00107B  20                 	db	32
   287  00107C  73                 	db	115	;'s'
   288  00107D  74                 	db	116	;'t'
   289  00107E  61                 	db	97	;'a'
   290  00107F  72                 	db	114	;'r'
   291  001080  74                 	db	116	;'t'
   292  001081  65                 	db	101	;'e'
   293  001082  64                 	db	100	;'d'
   294  001083  00                 	db	0
   295  001084                     STR_6:
   296  001084  25                 	db	37
   297  001085  64                 	db	100	;'d'
   298  001086  2E                 	db	46
   299  001087  25                 	db	37
   300  001088  64                 	db	100	;'d'
   301  001089  2E                 	db	46
   302  00108A  25                 	db	37
   303  00108B  64                 	db	100	;'d'
   304  00108C  2E                 	db	46
   305  00108D  25                 	db	37
   306  00108E  64                 	db	100	;'d'
   307  00108F  00                 	db	0
   308  001090                     STR_3:
   309  001090  25                 	db	37
   310  001091  75                 	db	117	;'u'
   311  001092  20                 	db	32
   312  001093  3A                 	db	58	;':'
   313  001094  20                 	db	32
   314  001095  25                 	db	37
   315  001096  73                 	db	115	;'s'
   316  001097  0D                 	db	13
   317  001098  0A                 	db	10
   318  001099  00                 	db	0
   319  00109A                     STR_1:
   320  00109A  25                 	db	37
   321  00109B  78                 	db	120	;'x'
   322  00109C  20                 	db	32
   323  00109D  3A                 	db	58	;':'
   324  00109E  20                 	db	32
   325  00109F  25                 	db	37
   326  0010A0  64                 	db	100	;'d'
   327  0010A1  00                 	db	0
   328  0010A2                     STR_7:
   329  0010A2  28                 	db	40
   330  0010A3  6E                 	db	110	;'n'
   331  0010A4  75                 	db	117	;'u'
   332  0010A5  6C                 	db	108	;'l'
   333  0010A6  6C                 	db	108	;'l'
   334  0010A7  29                 	db	41
   335  0010A8  00                 	db	0
   336                           
   337                           ; #config settings
   338  0010A9  00                 	db	0	; dummy byte at the end
   339  0000                     
   340                           	psect	nvBANK2
   341  0002CC                     __pnvBANK2:
   342                           	opt stack 0
   343  0002CC                     _deviceTime:
   344                           	opt stack 0
   345  0002CC                     	ds	4
   346  0002D0                     _localTime:
   347                           	opt stack 0
   348  0002D0                     	ds	4
   349  0000                     _TMR1	set	4046
   350  0000                     _ADCON0	set	4034
   351  0000                     _ADCON1	set	4033
   352  0000                     _ADCON2	set	4032
   353  0000                     _ADRESH	set	4036
   354  0000                     _ADRESL	set	4035
   355  0000                     _BAUDCON1	set	3966
   356  0000                     _BAUDCON1bits	set	3966
   357  0000                     _LATBbits	set	3978
   358  0000                     _LATDbits	set	3980
   359  0000                     _LATE	set	3981
   360  0000                     _LATH	set	3984
   361  0000                     _LATJ	set	3985
   362  0000                     _OSCCON	set	4051
   363  0000                     _OSCTUNE	set	3995
   364  0000                     _PORTBbits	set	3969
   365  0000                     _SPBRG1	set	4015
   366  0000                     _SSP1BUF	set	4041
   367  0000                     _SSP1CON1	set	4038
   368  0000                     _SSP1CON1bits	set	4038
   369  0000                     _SSP1STATbits	set	4039
   370  0000                     _SSPBUF	set	4041
   371  0000                     _TRISA	set	3986
   372  0000                     _TRISAbits	set	3986
   373  0000                     _TRISBbits	set	3987
   374  0000                     _TRISCbits	set	3988
   375  0000                     _TRISDbits	set	3989
   376  0000                     _TRISE	set	3990
   377  0000                     _TRISH	set	3993
   378  0000                     _TRISJ	set	3994
   379  0000                     _TXREG1	set	4013
   380  0000                     _TXSTA1	set	4012
   381  0000                     _CREN1	set	32092
   382  0000                     _GIE	set	32663
   383  0000                     _GIEH	set	32663
   384  0000                     _GIEL	set	32662
   385  0000                     _IPEN	set	32391
   386  0000                     _LATB3	set	31827
   387  0000                     _LATH0	set	31872
   388  0000                     _LATH1	set	31873
   389  0000                     _LATH2	set	31874
   390  0000                     _RBPU	set	32655
   391  0000                     _SPEN1	set	32095
   392  0000                     _T1CKPS0	set	32364
   393  0000                     _T1CKPS1	set	32365
   394  0000                     _T1OSCEN	set	32363
   395  0000                     _T1SYNC	set	32362
   396  0000                     _TMR1CS	set	32361
   397  0000                     _TMR1IE	set	31976
   398  0000                     _TMR1IF	set	31984
   399  0000                     _TMR1IP	set	31992
   400  0000                     _TMR1ON	set	32360
   401  0000                     _TX1IF	set	31988
   402                           
   403                           	psect	cinit
   404  00809E                     __pcinit:
   405                           	opt stack 0
   406  00809E                     start_initialization:
   407                           	opt stack 0
   408  00809E                     __initialization:
   409                           	opt stack 0
   410                           
   411                           ; Initialize objects allocated to COMRAM (1 bytes)
   412                           ; load TBLPTR registers with __pidataCOMRAM
   413  00809E  0EFE               	movlw	low __pidataCOMRAM
   414  0080A0  6EF6               	movwf	tblptrl,c
   415  0080A2  0E87               	movlw	high __pidataCOMRAM
   416  0080A4  6EF7               	movwf	tblptrh,c
   417  0080A6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   418  0080A8  6EF8               	movwf	tblptru,c
   419  0080AA  0009               	tblrd		*+	;fetch initializer
   420  0080AC  CFF5 F05D          	movff	tablat,__pdataCOMRAM
   421                           
   422                           ; Clear objects allocated to BANK3 (104 bytes)
   423  0080B0  EE03  F000         	lfsr	0,__pbssBANK3
   424  0080B4  0E68               	movlw	104
   425  0080B6                     clear_0:
   426  0080B6  6AEE               	clrf	postinc0,c
   427  0080B8  06E8               	decf	wreg,f,c
   428  0080BA  E1FD               	bnz	clear_0
   429                           
   430                           ; Clear objects allocated to BANK2 (159 bytes)
   431  0080BC  EE02  F000         	lfsr	0,__pbssBANK2
   432  0080C0  0E9F               	movlw	159
   433  0080C2                     clear_1:
   434  0080C2  6AEE               	clrf	postinc0,c
   435  0080C4  06E8               	decf	wreg,f,c
   436  0080C6  E1FD               	bnz	clear_1
   437                           
   438                           ; Clear objects allocated to BANK1 (81 bytes)
   439  0080C8  EE01  F083         	lfsr	0,__pbssBANK1
   440  0080CC  0E51               	movlw	81
   441  0080CE                     clear_2:
   442  0080CE  6AEE               	clrf	postinc0,c
   443  0080D0  06E8               	decf	wreg,f,c
   444  0080D2  E1FD               	bnz	clear_2
   445                           
   446                           ; Clear objects allocated to BANK0 (2 bytes)
   447  0080D4  0100               	movlb	0
   448  0080D6  6BFF               	clrf	(__pbssBANK0+1)& (0+255),b
   449  0080D8  6BFE               	clrf	__pbssBANK0& (0+255),b
   450  0080DA                     end_of_initialization:
   451                           	opt stack 0
   452  0080DA                     __end_of__initialization:
   453                           	opt stack 0
   454  0080DA  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   455  0080DC  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   456  0080DE  0100               	movlb	0
   457  0080E0  EF78  F036         	goto	_main	;jump to C main() function
   458                           tblptru	equ	0xFF8
   459                           tblptrh	equ	0xFF7
   460                           tblptrl	equ	0xFF6
   461                           tablat	equ	0xFF5
   462                           postinc0	equ	0xFEE
   463                           wreg	equ	0xFE8
   464                           
   465                           	psect	dataCOMRAM
   466  00005D                     __pdataCOMRAM:
   467                           	opt stack 0
   468  00005D                     _clientState:
   469                           	opt stack 0
   470  00005D                     	ds	1
   471                           tblptru	equ	0xFF8
   472                           tblptrh	equ	0xFF7
   473                           tblptrl	equ	0xFF6
   474                           tablat	equ	0xFF5
   475                           postinc0	equ	0xFEE
   476                           wreg	equ	0xFE8
   477                           
   478                           	psect	bssBANK0
   479  0000FE                     __pbssBANK0:
   480                           	opt stack 0
   481  0000FE                     _currentTCB:
   482                           	opt stack 0
   483  0000FE                     	ds	2
   484                           tblptru	equ	0xFF8
   485                           tblptrh	equ	0xFF7
   486                           tblptrl	equ	0xFF6
   487                           tablat	equ	0xFF5
   488                           postinc0	equ	0xFEE
   489                           wreg	equ	0xFE8
   490                           
   491                           	psect	bssBANK1
   492  000183                     __pbssBANK1:
   493                           	opt stack 0
   494  000183                     _ethData:
   495                           	opt stack 0
   496  000183                     	ds	7
   497  00018A                     _dhcpLeaseTime:
   498                           	opt stack 0
   499  00018A                     	ds	4
   500  00018E                     _ipv4Address:
   501                           	opt stack 0
   502  00018E                     	ds	4
   503  000192                     _ipv4SubnetMask:
   504                           	opt stack 0
   505  000192                     	ds	4
   506  000196                     _receivedRemoteAddress:
   507                           	opt stack 0
   508  000196                     	ds	4
   509  00019A                     _TXPacketSize:
   510                           	opt stack 0
   511  00019A                     	ds	2
   512  00019C                     _nextAvailablePort:
   513                           	opt stack 0
   514  00019C                     	ds	2
   515  00019E                     _nextPacketPointer:
   516                           	opt stack 0
   517  00019E                     	ds	2
   518  0001A0                     _rcvPayloadLen:
   519                           	opt stack 0
   520  0001A0                     	ds	2
   521  0001A2                     _tcbList:
   522                           	opt stack 0
   523  0001A2                     	ds	2
   524  0001A4                     _tcpMss:
   525                           	opt stack 0
   526  0001A4                     	ds	2
   527  0001A6                     _last_bank:
   528                           	opt stack 0
   529  0001A6                     	ds	1
   530  0001A7                     _tcbListSize:
   531                           	opt stack 0
   532  0001A7                     	ds	1
   533  0001A8                     _ipv4Header:
   534                           	opt stack 0
   535  0001A8                     	ds	20
   536  0001BC                     _tcpHeader:
   537                           	opt stack 0
   538  0001BC                     	ds	20
   539  0001D0                     _arpTimer:
   540                           	opt stack 0
   541  0001D0                     	ds	4
   542                           tblptru	equ	0xFF8
   543                           tblptrh	equ	0xFF7
   544                           tblptrl	equ	0xFF6
   545                           tablat	equ	0xFF5
   546                           postinc0	equ	0xFEE
   547                           wreg	equ	0xFE8
   548                           
   549                           	psect	bssBANK2
   550  000200                     __pbssBANK2:
   551                           	opt stack 0
   552  000200                     _led_values:
   553                           	opt stack 0
   554  000200                     	ds	16
   555  000210                     _ipv4DNS:
   556                           	opt stack 0
   557  000210                     	ds	8
   558  000218                     _rxPacketStatusVector:
   559                           	opt stack 0
   560  000218                     	ds	6
   561  00021E                     Network_Manage@nowPv:
   562                           	opt stack 0
   563  00021E                     	ds	4
   564  000222                     _dhcpServerId:
   565                           	opt stack 0
   566  000222                     	ds	4
   567  000226                     _ipv4Router:
   568                           	opt stack 0
   569  000226                     	ds	4
   570  00022A                     _nextSequenceNumber:
   571                           	opt stack 0
   572  00022A                     	ds	4
   573  00022E                     _remoteIpv4Address:
   574                           	opt stack 0
   575  00022E                     	ds	4
   576  000232                     DEMO_TCP_EchoServer@port7TCB:
   577                           	opt stack 0
   578  000232                     	ds	55
   579  000269                     DEMO_TCP_EchoServer@rxdataPort7:
   580                           	opt stack 0
   581  000269                     	ds	20
   582  00027D                     DEMO_TCP_EchoServer@txdataPort7:
   583                           	opt stack 0
   584  00027D                     	ds	20
   585  000291                     _udpHeader:
   586                           	opt stack 0
   587  000291                     	ds	8
   588  000299                     _ethMAC:
   589                           	opt stack 0
   590  000299                     	ds	6
   591                           tblptru	equ	0xFF8
   592                           tblptrh	equ	0xFF7
   593                           tblptrl	equ	0xFF6
   594                           tablat	equ	0xFF5
   595                           postinc0	equ	0xFEE
   596                           wreg	equ	0xFE8
   597                           
   598                           	psect	bssBANK3
   599  000300                     __pbssBANK3:
   600                           	opt stack 0
   601  000300                     _arpMap:
   602                           	opt stack 0
   603  000300                     	ds	104
   604                           tblptru	equ	0xFF8
   605                           tblptrh	equ	0xFF7
   606                           tblptrl	equ	0xFF6
   607                           tablat	equ	0xFF5
   608                           postinc0	equ	0xFEE
   609                           wreg	equ	0xFE8
   610                           
   611                           	psect	cstackBANK2
   612  00029F                     __pcstackBANK2:
   613                           	opt stack 0
   614  00029F                     main@old_ip:
   615                           	opt stack 0
   616                           
   617                           ; 4 bytes @ 0x0
   618  00029F                     	ds	4
   619  0002A3                     main@t:
   620                           	opt stack 0
   621                           
   622                           ; 4 bytes @ 0x4
   623  0002A3                     	ds	4
   624  0002A7                     main@no_ip_display:
   625                           	opt stack 0
   626                           
   627                           ; 1 bytes @ 0x8
   628  0002A7                     	ds	1
   629  0002A8                     main@str:
   630                           	opt stack 0
   631                           
   632                           ; 32 bytes @ 0x9
   633  0002A8                     	ds	32
   634  0002C8                     main@ip:
   635                           	opt stack 0
   636                           
   637                           ; 4 bytes @ 0x29
   638  0002C8                     	ds	4
   639                           tblptru	equ	0xFF8
   640                           tblptrh	equ	0xFF7
   641                           tblptrl	equ	0xFF6
   642                           tablat	equ	0xFF5
   643                           postinc0	equ	0xFEE
   644                           wreg	equ	0xFE8
   645                           
   646                           	psect	cstackBANK1
   647  000100                     __pcstackBANK1:
   648                           	opt stack 0
   649  000100                     ??_IPV4_Packet:
   650                           
   651                           ; 1 bytes @ 0x0
   652  000100                     	ds	28
   653  00011C                     ??_Network_Read:
   654                           
   655                           ; 1 bytes @ 0x1C
   656  00011C                     	ds	4
   657  000120                     Network_Read@debug_str:
   658                           	opt stack 0
   659                           
   660                           ; 80 bytes @ 0x20
   661  000120                     	ds	80
   662  000170                     Network_Read@header:
   663                           	opt stack 0
   664                           
   665                           ; 14 bytes @ 0x70
   666  000170                     	ds	14
   667  00017E                     ??_Network_Manage:
   668                           
   669                           ; 1 bytes @ 0x7E
   670  00017E                     	ds	1
   671  00017F                     Network_Manage@now:
   672                           	opt stack 0
   673                           
   674                           ; 4 bytes @ 0x7F
   675  00017F                     	ds	4
   676                           tblptru	equ	0xFF8
   677                           tblptrh	equ	0xFF7
   678                           tblptrl	equ	0xFF6
   679                           tablat	equ	0xFF5
   680                           postinc0	equ	0xFEE
   681                           wreg	equ	0xFE8
   682                           
   683                           	psect	cstackBANK0
   684  000060                     __pcstackBANK0:
   685                           	opt stack 0
   686  000060                     IPv4_Start@targetAddress:
   687                           	opt stack 0
   688                           
   689                           ; 4 bytes @ 0x0
   690  000060                     	ds	4
   691  000064                     IPv4_Start@macAddress:
   692                           	opt stack 0
   693                           
   694                           ; 2 bytes @ 0x4
   695  000064                     	ds	2
   696  000066                     IPv4_Start@ret:
   697                           	opt stack 0
   698                           
   699                           ; 1 bytes @ 0x6
   700  000066                     	ds	1
   701  000067                     ??_ICMP_EchoReply:
   702  000067                     ??_TCP_Snd:
   703  000067                     UDP_Start@destIP:
   704                           	opt stack 0
   705                           
   706                           ; 4 bytes @ 0x7
   707  000067                     	ds	4
   708  00006B                     UDP_Start@srcPort:
   709                           	opt stack 0
   710                           
   711                           ; 2 bytes @ 0xB
   712  00006B                     	ds	2
   713  00006D                     UDP_Start@dstPort:
   714                           	opt stack 0
   715                           
   716                           ; 2 bytes @ 0xD
   717  00006D                     	ds	2
   718  00006F                     DHCP_Request@started:
   719                           	opt stack 0
   720  00006F                     ICMP_EchoReply@cksm:
   721                           	opt stack 0
   722                           
   723                           ; 2 bytes @ 0xF
   724  00006F                     	ds	1
   725  000070                     DHCP_Request@type:
   726                           	opt stack 0
   727                           
   728                           ; 1 bytes @ 0x10
   729  000070                     	ds	1
   730  000071                     ICMP_EchoReply@ipv4PayloadLength:
   731                           	opt stack 0
   732  000071                     DHCP_Request@ethMAC:
   733                           	opt stack 0
   734                           
   735                           ; 6 bytes @ 0x11
   736  000071                     	ds	2
   737  000073                     ICMP_EchoReply@ret:
   738                           	opt stack 0
   739                           
   740                           ; 1 bytes @ 0x13
   741  000073                     	ds	1
   742  000074                     ??_ICMP_Receive:
   743                           
   744                           ; 1 bytes @ 0x14
   745  000074                     	ds	3
   746  000077                     DHCP_Handler@ip:
   747                           	opt stack 0
   748                           
   749                           ; 8 bytes @ 0x17
   750  000077                     	ds	2
   751  000079                     ICMP_Receive@icmpHdr:
   752                           	opt stack 0
   753                           
   754                           ; 8 bytes @ 0x19
   755  000079                     	ds	6
   756  00007F                     DHCP_Handler@v:
   757                           	opt stack 0
   758                           
   759                           ; 4 bytes @ 0x1F
   760  00007F                     	ds	4
   761  000083                     DHCP_Handler@v16:
   762                           	opt stack 0
   763                           
   764                           ; 2 bytes @ 0x23
   765  000083                     	ds	2
   766  000085                     DHCP_Handler@option:
   767                           	opt stack 0
   768                           
   769                           ; 1 bytes @ 0x25
   770  000085                     	ds	1
   771  000086                     DHCP_Handler@ethPktMAC:
   772                           	opt stack 0
   773                           
   774                           ; 6 bytes @ 0x26
   775  000086                     	ds	6
   776  00008C                     DHCP_Handler@ethMAC:
   777                           	opt stack 0
   778                           
   779                           ; 6 bytes @ 0x2C
   780  00008C                     	ds	6
   781  000092                     DHCP_Handler@optionLength:
   782                           	opt stack 0
   783                           
   784                           ; 1 bytes @ 0x32
   785  000092                     	ds	1
   786  000093                     DHCP_Handler@myip:
   787                           	opt stack 0
   788                           
   789                           ; 4 bytes @ 0x33
   790  000093                     	ds	4
   791  000097                     TCP_Snd@data:
   792                           	opt stack 0
   793  000097                     UDP_Receive@udpcksm:
   794                           	opt stack 0
   795                           
   796                           ; 2 bytes @ 0x37
   797  000097                     	ds	2
   798  000099                     ??_UDP_Receive:
   799  000099                     TCP_Snd@cksm:
   800                           	opt stack 0
   801                           
   802                           ; 2 bytes @ 0x39
   803  000099                     	ds	2
   804  00009B                     TCP_Snd@payloadLength:
   805                           	opt stack 0
   806                           
   807                           ; 2 bytes @ 0x3B
   808  00009B                     	ds	2
   809  00009D                     TCP_Snd@ret:
   810                           	opt stack 0
   811                           
   812                           ; 1 bytes @ 0x3D
   813  00009D                     	ds	1
   814  00009E                     TCP_Snd@tcpDataLength:
   815                           	opt stack 0
   816                           
   817                           ; 2 bytes @ 0x3E
   818  00009E                     	ds	1
   819  00009F                     UDP_Receive@x:
   820                           	opt stack 0
   821                           
   822                           ; 2 bytes @ 0x3F
   823  00009F                     	ds	1
   824  0000A0                     TCP_Snd@txHeader:
   825                           	opt stack 0
   826                           
   827                           ; 20 bytes @ 0x40
   828  0000A0                     	ds	1
   829  0000A1                     UDP_Receive@hptr:
   830                           	opt stack 0
   831                           
   832                           ; 1 bytes @ 0x41
   833  0000A1                     	ds	19
   834  0000B4                     ??_TCP_PayloadSave:
   835  0000B4                     TCP_Send@tcbPtr:
   836                           	opt stack 0
   837                           
   838                           ; 2 bytes @ 0x54
   839  0000B4                     	ds	2
   840  0000B6                     TCP_Send@data:
   841                           	opt stack 0
   842                           
   843                           ; 2 bytes @ 0x56
   844  0000B6                     	ds	2
   845  0000B8                     TCP_Send@dataLen:
   846                           	opt stack 0
   847                           
   848                           ; 2 bytes @ 0x58
   849  0000B8                     	ds	9
   850  0000C1                     TCP_PayloadSave@buffer_size:
   851                           	opt stack 0
   852                           
   853                           ; 2 bytes @ 0x61
   854  0000C1                     	ds	2
   855  0000C3                     ??_TCP_FiniteStateMachine:
   856                           
   857                           ; 1 bytes @ 0x63
   858  0000C3                     	ds	12
   859  0000CF                     TCP_FiniteStateMachine@ret:
   860                           	opt stack 0
   861                           
   862                           ; 1 bytes @ 0x6F
   863  0000CF                     	ds	1
   864  0000D0                     TCP_FiniteStateMachine@notAckBytes:
   865                           	opt stack 0
   866                           
   867                           ; 2 bytes @ 0x70
   868  0000D0                     	ds	2
   869  0000D2                     TCP_FiniteStateMachine@event:
   870                           	opt stack 0
   871                           
   872                           ; 1 bytes @ 0x72
   873  0000D2                     	ds	1
   874  0000D3                     TCP_FiniteStateMachine@nextState:
   875                           	opt stack 0
   876                           
   877                           ; 1 bytes @ 0x73
   878  0000D3                     	ds	1
   879  0000D4                     ??_TCP_Update:
   880  0000D4                     TCP_Listen@tcbPtr:
   881                           	opt stack 0
   882  0000D4                     TCP_Recv@remoteAddress:
   883                           	opt stack 0
   884                           
   885                           ; 4 bytes @ 0x74
   886  0000D4                     	ds	2
   887  0000D6                     
   888                           ; 1 bytes @ 0x76
   889  0000D6                     	ds	2
   890  0000D8                     TCP_Recv@length:
   891                           	opt stack 0
   892  0000D8                     DEMO_TCP_EchoServer@txLen:
   893                           	opt stack 0
   894                           
   895                           ; 2 bytes @ 0x78
   896  0000D8                     	ds	2
   897  0000DA                     ??_TCP_Recv:
   898  0000DA                     DEMO_TCP_EchoServer@socket_state:
   899                           	opt stack 0
   900                           
   901                           ; 1 bytes @ 0x7A
   902  0000DA                     	ds	1
   903  0000DB                     DEMO_TCP_EchoServer@rxLen:
   904                           	opt stack 0
   905                           
   906                           ; 2 bytes @ 0x7B
   907  0000DB                     	ds	1
   908  0000DC                     TCP_Update@count:
   909                           	opt stack 0
   910                           
   911                           ; 2 bytes @ 0x7C
   912  0000DC                     	ds	1
   913  0000DD                     DEMO_TCP_EchoServer@i:
   914                           	opt stack 0
   915                           
   916                           ; 2 bytes @ 0x7D
   917  0000DD                     	ds	1
   918  0000DE                     TCP_Update@tcbPtr:
   919                           	opt stack 0
   920                           
   921                           ; 2 bytes @ 0x7E
   922  0000DE                     	ds	24
   923  0000F6                     TCP_Recv@count:
   924                           	opt stack 0
   925                           
   926                           ; 1 bytes @ 0x96
   927  0000F6                     	ds	1
   928  0000F7                     TCP_Recv@tcbPtr:
   929                           	opt stack 0
   930                           
   931                           ; 2 bytes @ 0x97
   932  0000F7                     	ds	2
   933  0000F9                     IPV4_Packet@hdrLen:
   934                           	opt stack 0
   935                           
   936                           ; 1 bytes @ 0x99
   937  0000F9                     	ds	1
   938  0000FA                     IPV4_Packet@length:
   939                           	opt stack 0
   940                           
   941                           ; 2 bytes @ 0x9A
   942  0000FA                     	ds	2
   943  0000FC                     IPV4_Packet@cksm:
   944                           	opt stack 0
   945                           
   946                           ; 2 bytes @ 0x9C
   947  0000FC                     	ds	2
   948                           tblptru	equ	0xFF8
   949                           tblptrh	equ	0xFF7
   950                           tblptrl	equ	0xFF6
   951                           tablat	equ	0xFF5
   952                           postinc0	equ	0xFEE
   953                           wreg	equ	0xFE8
   954                           
   955                           	psect	cstackCOMRAM
   956  000001                     __pcstackCOMRAM:
   957                           	opt stack 0
   958  000001                     ??_low_isr:
   959  000001                     
   960                           ; 1 bytes @ 0x0
   961  000001                     	ds	1
   962  000002                     ?_memcmp:
   963                           	opt stack 0
   964  000002                     ?_ARPV4_Lookup:
   965                           	opt stack 0
   966  000002                     ?_IPV4_PseudoHeaderChecksum:
   967                           	opt stack 0
   968  000002                     ?___lwdiv:
   969                           	opt stack 0
   970  000002                     ?_time:
   971                           	opt stack 0
   972  000002                     ?_IPV4_GetMyIP:
   973                           	opt stack 0
   974  000002                     lcd_write_ctrl@c:
   975                           	opt stack 0
   976  000002                     lcd_write_data@d:
   977                           	opt stack 0
   978  000002                     LED_Init@x:
   979                           	opt stack 0
   980  000002                     SPI_ExchangeByte@v:
   981                           	opt stack 0
   982  000002                     putch@data:
   983                           	opt stack 0
   984  000002                     ARPV4_Init@x:
   985                           	opt stack 0
   986  000002                     memcmp@s1:
   987                           	opt stack 0
   988  000002                     time@t:
   989                           	opt stack 0
   990  000002                     ARPV4_Update@entryPointer:
   991                           	opt stack 0
   992  000002                     IPV4_PseudoHeaderChecksum@payloadLen:
   993                           	opt stack 0
   994  000002                     TCB_Insert@ptr:
   995                           	opt stack 0
   996  000002                     TCB_Reset@tcbPtr:
   997                           	opt stack 0
   998  000002                     TCB_Check@ptr:
   999                           	opt stack 0
  1000  000002                     ___lwdiv@dividend:
  1001                           	opt stack 0
  1002  000002                     memset@p1:
  1003                           	opt stack 0
  1004  000002                     ARPV4_Lookup@ip_address:
  1005                           	opt stack 0
  1006                           
  1007                           ; 4 bytes @ 0x1
  1008  000002                     	ds	1
  1009  000003                     ??_lcd_init:
  1010  000003                     ?_ETH_Read16:
  1011                           	opt stack 0
  1012  000003                     ?_ETH_ReadBlock:
  1013                           	opt stack 0
  1014  000003                     ?_ETH_Read32:
  1015                           	opt stack 0
  1016  000003                     lcd_putch@c:
  1017                           	opt stack 0
  1018  000003                     lcd_goto1@pos:
  1019                           	opt stack 0
  1020  000003                     ENCx24_BankselSPI@a:
  1021                           	opt stack 0
  1022  000003                     ETH_Read8@ret:
  1023                           	opt stack 0
  1024  000003                     ETH_Write8@data:
  1025                           	opt stack 0
  1026  000003                     memcmp@s2:
  1027                           	opt stack 0
  1028  000003                     ETH_ReadBlock@data:
  1029                           	opt stack 0
  1030  000003                     ETH_Write16@data:
  1031                           	opt stack 0
  1032  000003                     ETH_WriteBlock@data:
  1033                           	opt stack 0
  1034  000003                     ETH_SetRXptr@address:
  1035                           	opt stack 0
  1036  000003                     ETH_Write32@data:
  1037                           	opt stack 0
  1038                           
  1039                           ; 4 bytes @ 0x2
  1040  000003                     	ds	1
  1041  000004                     ??_IPV4_PseudoHeaderChecksum:
  1042  000004                     ??_TCB_Reset:
  1043  000004                     ??_TCB_Check:
  1044  000004                     ENCx24_BankselSPI@bank:
  1045                           	opt stack 0
  1046  000004                     ARPV4_Update@x:
  1047                           	opt stack 0
  1048  000004                     lcd_puts@s:
  1049                           	opt stack 0
  1050  000004                     DHCP_WriteZeros@length:
  1051                           	opt stack 0
  1052  000004                     ___lwdiv@divisor:
  1053                           	opt stack 0
  1054  000004                     memcmp@n:
  1055                           	opt stack 0
  1056  000004                     memset@c:
  1057                           	opt stack 0
  1058                           
  1059                           ; 2 bytes @ 0x3
  1060  000004                     	ds	1
  1061  000005                     ?_ENCx24_Read:
  1062                           	opt stack 0
  1063  000005                     ETH_MACRead8@v:
  1064                           	opt stack 0
  1065  000005                     ENCx24_Write@data:
  1066                           	opt stack 0
  1067  000005                     ENCx24_BFS@bitMask:
  1068                           	opt stack 0
  1069  000005                     ENCx24_BFC@bitMask:
  1070                           	opt stack 0
  1071  000005                     ETH_Read16@ret:
  1072                           	opt stack 0
  1073  000005                     ETH_ReadBlock@length:
  1074                           	opt stack 0
  1075  000005                     ETH_WriteBlock@len:
  1076                           	opt stack 0
  1077                           
  1078                           ; 2 bytes @ 0x4
  1079  000005                     	ds	1
  1080  000006                     ??_memcmp:
  1081  000006                     time@gie_val:
  1082                           	opt stack 0
  1083  000006                     ETH_MACRead8@bank:
  1084                           	opt stack 0
  1085  000006                     TCB_Check@ret:
  1086                           	opt stack 0
  1087  000006                     ___lwdiv@counter:
  1088                           	opt stack 0
  1089  000006                     memset@n:
  1090                           	opt stack 0
  1091                           
  1092                           ; 2 bytes @ 0x5
  1093  000006                     	ds	1
  1094  000007                     ??_ETH_ReadBlock:
  1095  000007                     ENCx24_Read@bank:
  1096                           	opt stack 0
  1097  000007                     ENCx24_Write@bank:
  1098                           	opt stack 0
  1099  000007                     ENCx24_BFS@bank:
  1100                           	opt stack 0
  1101  000007                     ENCx24_BFC@bank:
  1102                           	opt stack 0
  1103  000007                     ETH_MACRead8@a:
  1104                           	opt stack 0
  1105  000007                     TCB_Check@count:
  1106                           	opt stack 0
  1107  000007                     ETH_WriteBlock@p:
  1108                           	opt stack 0
  1109  000007                     ___lwdiv@quotient:
  1110                           	opt stack 0
  1111  000007                     time@the_time:
  1112                           	opt stack 0
  1113  000007                     ETH_Read32@ret:
  1114                           	opt stack 0
  1115                           
  1116                           ; 4 bytes @ 0x6
  1117  000007                     	ds	1
  1118  000008                     ENCx24_Write@a:
  1119                           	opt stack 0
  1120  000008                     ENCx24_BFS@a:
  1121                           	opt stack 0
  1122  000008                     ENCx24_BFC@a:
  1123                           	opt stack 0
  1124  000008                     IPV4_PseudoHeaderChecksum@v:
  1125                           	opt stack 0
  1126  000008                     ETH_GetMAC@macAddr:
  1127                           	opt stack 0
  1128  000008                     ENCx24_Read@v:
  1129                           	opt stack 0
  1130  000008                     ETH_ReadBlock@p:
  1131                           	opt stack 0
  1132  000008                     TCB_Check@tcbPtr:
  1133                           	opt stack 0
  1134  000008                     memset@p:
  1135                           	opt stack 0
  1136                           
  1137                           ; 2 bytes @ 0x7
  1138  000008                     	ds	1
  1139  000009                     ?___lwmod:
  1140                           	opt stack 0
  1141  000009                     IPV4_PseudoHeaderChecksum@len:
  1142                           	opt stack 0
  1143  000009                     ETH_Flush@newRXTail:
  1144                           	opt stack 0
  1145  000009                     ___lwmod@dividend:
  1146                           	opt stack 0
  1147                           
  1148                           ; 2 bytes @ 0x8
  1149  000009                     	ds	1
  1150  00000A                     ?_TCP_GetReceivedData:
  1151                           	opt stack 0
  1152  00000A                     ?_TCP_GetRxLength:
  1153                           	opt stack 0
  1154  00000A                     ENCx24_Read@a:
  1155                           	opt stack 0
  1156  00000A                     ETH_ReadBlock@len:
  1157                           	opt stack 0
  1158  00000A                     ARPV4_Lookup@entry_pointer:
  1159                           	opt stack 0
  1160  00000A                     TCP_SocketInit@tcbPtr:
  1161                           	opt stack 0
  1162  00000A                     TCP_SocketPoll@socket_ptr:
  1163                           	opt stack 0
  1164  00000A                     TCP_Bind@tcbPtr:
  1165                           	opt stack 0
  1166  00000A                     TCP_SendDone@tcbPtr:
  1167                           	opt stack 0
  1168  00000A                     TCP_InsertRxBuffer@tcbPtr:
  1169                           	opt stack 0
  1170  00000A                     TCP_GetReceivedData@tcbPtr:
  1171                           	opt stack 0
  1172  00000A                     TCP_GetRxLength@tcbPtr:
  1173                           	opt stack 0
  1174  00000A                     IPV4_PseudoHeaderChecksum@cksm:
  1175                           	opt stack 0
  1176                           
  1177                           ; 4 bytes @ 0x9
  1178  00000A                     	ds	1
  1179  00000B                     ??_ETH_SendSystemReset:
  1180  00000B                     ?_ENCx24_PhyRead:
  1181                           	opt stack 0
  1182  00000B                     ?_ETH_GetByteCount:
  1183                           	opt stack 0
  1184  00000B                     ?_ETH_readLinkStatus:
  1185                           	opt stack 0
  1186  00000B                     ETH_Insert@data:
  1187                           	opt stack 0
  1188  00000B                     ETH_EventHandler@mabbipgVal:
  1189                           	opt stack 0
  1190  00000B                     ETH_Dump@length:
  1191                           	opt stack 0
  1192  00000B                     ETH_WriteStart@destMAC:
  1193                           	opt stack 0
  1194  00000B                     waitForDMA@econ1_val:
  1195                           	opt stack 0
  1196  00000B                     ENCx24_PHYWrite@data:
  1197                           	opt stack 0
  1198  00000B                     ___lwmod@divisor:
  1199                           	opt stack 0
  1200                           
  1201                           ; 2 bytes @ 0xA
  1202  00000B                     	ds	1
  1203  00000C                     ??_TCP_GetReceivedData:
  1204  00000C                     ??_TCP_GetRxLength:
  1205  00000C                     ARPV4_Lookup@x:
  1206                           	opt stack 0
  1207  00000C                     TCP_SocketPoll@tmpSocketState:
  1208                           	opt stack 0
  1209  00000C                     TCP_SendDone@ret:
  1210                           	opt stack 0
  1211  00000C                     ETH_Insert@len:
  1212                           	opt stack 0
  1213  00000C                     TCP_Bind@port:
  1214                           	opt stack 0
  1215  00000C                     TCP_InsertRxBuffer@data:
  1216                           	opt stack 0
  1217                           
  1218                           ; 2 bytes @ 0xB
  1219  00000C                     	ds	1
  1220  00000D                     ?_ETH_TxComputeChecksum:
  1221                           	opt stack 0
  1222  00000D                     ?_ETH_RxComputeChecksum:
  1223                           	opt stack 0
  1224  00000D                     ENCx24_PhyRead@a:
  1225                           	opt stack 0
  1226  00000D                     ENCx24_PHYWrite@a:
  1227                           	opt stack 0
  1228  00000D                     ___lwmod@counter:
  1229                           	opt stack 0
  1230  00000D                     ETH_EventHandler@macon2Val:
  1231                           	opt stack 0
  1232  00000D                     ETH_Dump@newRXTail:
  1233                           	opt stack 0
  1234  00000D                     ETH_WriteStart@type:
  1235                           	opt stack 0
  1236  00000D                     ETH_Copy@len:
  1237                           	opt stack 0
  1238  00000D                     ETH_TxComputeChecksum@position:
  1239                           	opt stack 0
  1240  00000D                     ETH_RxComputeChecksum@len:
  1241                           	opt stack 0
  1242  00000D                     ETH_GetByteCount@wPtr:
  1243                           	opt stack 0
  1244                           
  1245                           ; 2 bytes @ 0xC
  1246  00000D                     	ds	1
  1247  00000E                     ?__doprnt:
  1248                           	opt stack 0
  1249  00000E                     __doprnt@pb:
  1250                           	opt stack 0
  1251  00000E                     ETH_Insert@offset:
  1252                           	opt stack 0
  1253  00000E                     TCP_InsertRxBuffer@data_len:
  1254                           	opt stack 0
  1255  00000E                     IPV4_PseudoHeaderChecksum@tmp:
  1256                           	opt stack 0
  1257                           
  1258                           ; 12 bytes @ 0xD
  1259  00000E                     	ds	1
  1260  00000F                     ??_ARPV4_Packet:
  1261  00000F                     ??_TCP_ParseTCPOptions:
  1262  00000F                     __doprnt@f:
  1263                           	opt stack 0
  1264  00000F                     ETH_EventHandler@estatVal:
  1265                           	opt stack 0
  1266  00000F                     ETH_Copy@txBufferAddress:
  1267                           	opt stack 0
  1268  00000F                     ETH_TxComputeChecksum@length:
  1269                           	opt stack 0
  1270  00000F                     ETH_RxComputeChecksum@seed:
  1271                           	opt stack 0
  1272  00000F                     ETH_CheckLinkUp@value:
  1273                           	opt stack 0
  1274  00000F                     ARPV4_Request@destAddress:
  1275                           	opt stack 0
  1276                           
  1277                           ; 4 bytes @ 0xE
  1278  00000F                     	ds	1
  1279  000010                     __doprnt@ap:
  1280                           	opt stack 0
  1281  000010                     ETH_Insert@current_tx_pointer:
  1282                           	opt stack 0
  1283  000010                     TCP_GetReceivedData@ret:
  1284                           	opt stack 0
  1285  000010                     TCP_GetRxLength@ret:
  1286                           	opt stack 0
  1287                           
  1288                           ; 2 bytes @ 0xF
  1289  000010                     	ds	1
  1290  000011                     ??_ETH_RxComputeChecksum:
  1291  000011                     ??__doprnt:
  1292  000011                     TCP_ParseTCPOptions@ret:
  1293                           	opt stack 0
  1294  000011                     ETH_EventHandler@eirVal:
  1295                           	opt stack 0
  1296  000011                     ETH_TxComputeChecksum@seed:
  1297                           	opt stack 0
  1298                           
  1299                           ; 2 bytes @ 0x10
  1300  000011                     	ds	1
  1301  000012                     TCP_ParseTCPOptions@opt:
  1302                           	opt stack 0
  1303                           
  1304                           ; 1 bytes @ 0x11
  1305  000012                     	ds	1
  1306  000013                     ??_ETH_TxComputeChecksum:
  1307  000013                     ??_ARPV4_Request:
  1308  000013                     ETH_CheckLinkUp@ret:
  1309                           	opt stack 0
  1310  000013                     TCP_ParseTCPOptions@tcpOptionsSize:
  1311                           	opt stack 0
  1312                           
  1313                           ; 2 bytes @ 0x12
  1314  000013                     	ds	1
  1315  000014                     ??_ETH_Init:
  1316  000014                     __doprnt@idx:
  1317                           	opt stack 0
  1318                           
  1319                           ; 1 bytes @ 0x13
  1320  000014                     	ds	1
  1321  000015                     __doprnt@prec:
  1322                           	opt stack 0
  1323  000015                     ETH_RxComputeChecksum@cksm:
  1324                           	opt stack 0
  1325                           
  1326                           ; 2 bytes @ 0x14
  1327  000015                     	ds	1
  1328  000016                     ETH_Init@phcon1_val:
  1329                           	opt stack 0
  1330  000016                     __doprnt@cp:
  1331                           	opt stack 0
  1332                           
  1333                           ; 2 bytes @ 0x15
  1334  000016                     	ds	1
  1335  000017                     ETH_RxComputeChecksum@rxPtr:
  1336                           	opt stack 0
  1337  000017                     ETH_TxComputeChecksum@cksm:
  1338                           	opt stack 0
  1339                           
  1340                           ; 4 bytes @ 0x16
  1341  000017                     	ds	1
  1342  000018                     __doprnt@flag:
  1343                           	opt stack 0
  1344                           
  1345                           ; 1 bytes @ 0x17
  1346  000018                     	ds	1
  1347  000019                     ETH_RxComputeChecksum@econ1Val:
  1348                           	opt stack 0
  1349  000019                     __doprnt@val:
  1350                           	opt stack 0
  1351                           
  1352                           ; 2 bytes @ 0x18
  1353  000019                     	ds	2
  1354  00001B                     __doprnt@c:
  1355                           	opt stack 0
  1356  00001B                     ETH_TxComputeChecksum@econ1Val:
  1357                           	opt stack 0
  1358                           
  1359                           ; 2 bytes @ 0x1A
  1360  00001B                     	ds	1
  1361  00001C                     ?_sprintf:
  1362                           	opt stack 0
  1363  00001C                     ?_printf:
  1364                           	opt stack 0
  1365  00001C                     printf@f:
  1366                           	opt stack 0
  1367  00001C                     sprintf@wh:
  1368                           	opt stack 0
  1369                           
  1370                           ; 2 bytes @ 0x1B
  1371  00001C                     	ds	1
  1372  00001D                     IPV4_Send@payloadLength:
  1373                           	opt stack 0
  1374                           
  1375                           ; 2 bytes @ 0x1C
  1376  00001D                     	ds	1
  1377  00001E                     sprintf@f:
  1378                           	opt stack 0
  1379                           
  1380                           ; 1 bytes @ 0x1D
  1381  00001E                     	ds	1
  1382  00001F                     ??_IPV4_Send:
  1383                           
  1384                           ; 1 bytes @ 0x1E
  1385  00001F                     	ds	2
  1386  000021                     printf@ap:
  1387                           	opt stack 0
  1388                           
  1389                           ; 1 bytes @ 0x20
  1390  000021                     	ds	1
  1391  000022                     printf@pb:
  1392                           	opt stack 0
  1393                           
  1394                           ; 5 bytes @ 0x21
  1395  000022                     	ds	1
  1396  000023                     IPV4_Send@ret:
  1397                           	opt stack 0
  1398                           
  1399                           ; 1 bytes @ 0x22
  1400  000023                     	ds	1
  1401  000024                     IPV4_Send@cksm:
  1402                           	opt stack 0
  1403                           
  1404                           ; 2 bytes @ 0x23
  1405  000024                     	ds	2
  1406  000026                     IPV4_Send@totalLength:
  1407                           	opt stack 0
  1408                           
  1409                           ; 2 bytes @ 0x25
  1410  000026                     	ds	1
  1411  000027                     sprintf@ap:
  1412                           	opt stack 0
  1413  000027                     SYSLOG_Write@message:
  1414                           	opt stack 0
  1415  000027                     SYSLOG_Init@t:
  1416                           	opt stack 0
  1417                           
  1418                           ; 4 bytes @ 0x26
  1419  000027                     	ds	1
  1420  000028                     ??_UDP_Send:
  1421  000028                     sprintf@pb:
  1422                           	opt stack 0
  1423                           
  1424                           ; 5 bytes @ 0x27
  1425  000028                     	ds	1
  1426  000029                     SYSLOG_Write@t:
  1427                           	opt stack 0
  1428                           
  1429                           ; 2 bytes @ 0x28
  1430  000029                     	ds	4
  1431  00002D                     UDP_Send@cksm:
  1432                           	opt stack 0
  1433                           
  1434                           ; 2 bytes @ 0x2C
  1435  00002D                     	ds	1
  1436  00002E                     ARPV4_Request@ret:
  1437                           	opt stack 0
  1438                           
  1439                           ; 1 bytes @ 0x2D
  1440  00002E                     	ds	1
  1441  00002F                     ARPV4_Packet@length:
  1442                           	opt stack 0
  1443  00002F                     UDP_Send@udpLength:
  1444                           	opt stack 0
  1445  00002F                     ARPV4_Request@header:
  1446                           	opt stack 0
  1447                           
  1448                           ; 28 bytes @ 0x2E
  1449  00002F                     	ds	2
  1450  000031                     ARPV4_Packet@mergeFlag:
  1451                           	opt stack 0
  1452                           
  1453                           ; 1 bytes @ 0x30
  1454  000031                     	ds	1
  1455  000032                     ARPV4_Packet@ret:
  1456                           	opt stack 0
  1457                           
  1458                           ; 1 bytes @ 0x31
  1459  000032                     	ds	1
  1460  000033                     ARPV4_Packet@arpPtr:
  1461                           	opt stack 0
  1462                           
  1463                           ; 2 bytes @ 0x32
  1464  000033                     	ds	2
  1465  000035                     ARPV4_Packet@x:
  1466                           	opt stack 0
  1467                           
  1468                           ; 1 bytes @ 0x34
  1469  000035                     	ds	1
  1470  000036                     ARPV4_Packet@x_2039:
  1471                           	opt stack 0
  1472                           
  1473                           ; 1 bytes @ 0x35
  1474  000036                     	ds	1
  1475  000037                     ARPV4_Packet@entryPointer:
  1476                           	opt stack 0
  1477                           
  1478                           ; 2 bytes @ 0x36
  1479  000037                     	ds	2
  1480  000039                     ARPV4_Packet@header:
  1481                           	opt stack 0
  1482                           
  1483                           ; 28 bytes @ 0x38
  1484  000039                     	ds	18
  1485  00004B                     IPv4_Start@destAddress:
  1486                           	opt stack 0
  1487                           
  1488                           ; 4 bytes @ 0x4A
  1489  00004B                     	ds	4
  1490  00004F                     IPv4_Start@protocol:
  1491                           	opt stack 0
  1492                           
  1493                           ; 1 bytes @ 0x4E
  1494  00004F                     	ds	1
  1495  000050                     ??_IPv4_Start:
  1496                           
  1497                           ; 1 bytes @ 0x4F
  1498  000050                     	ds	8
  1499  000058                     ICMP_EchoReply@icmpHdr:
  1500                           	opt stack 0
  1501  000058                     UDP_Start@ret:
  1502                           	opt stack 0
  1503  000058                     TCP_Snd@tcbPtr:
  1504                           	opt stack 0
  1505                           
  1506                           ; 2 bytes @ 0x57
  1507  000058                     	ds	1
  1508  000059                     DHCP_Handler@length:
  1509                           	opt stack 0
  1510  000059                     ICMP_EchoReply@ipv4Hdr:
  1511                           	opt stack 0
  1512                           
  1513                           ; 2 bytes @ 0x58
  1514  000059                     	ds	1
  1515  00005A                     TCP_PayloadSave@len:
  1516                           	opt stack 0
  1517                           
  1518                           ; 2 bytes @ 0x59
  1519  00005A                     	ds	1
  1520  00005B                     ??_DHCP_Handler:
  1521  00005B                     ICMP_Receive@ipv4Hdr:
  1522                           	opt stack 0
  1523                           
  1524                           ; 2 bytes @ 0x5A
  1525  00005B                     	ds	2
  1526  00005D                     tblptru	equ	0xFF8
  1527                           tblptrh	equ	0xFF7
  1528                           tblptrl	equ	0xFF6
  1529                           tablat	equ	0xFF5
  1530                           postinc0	equ	0xFEE
  1531                           wreg	equ	0xFE8
  1532                           
  1533                           ; 1 bytes @ 0x5C
  1534 ;;
  1535 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1536 ;;
  1537 ;; *************** function _main *****************
  1538 ;; Defined at:
  1539 ;;		line 134 in file "main.c"
  1540 ;; Parameters:    Size  Location     Type
  1541 ;;		None
  1542 ;; Auto vars:     Size  Location     Type
  1543 ;;  str            32    9[BANK2 ] unsigned char [32]
  1544 ;;  ip              4   41[BANK2 ] unsigned long 
  1545 ;;  t               4    4[BANK2 ] long 
  1546 ;;  old_ip          4    0[BANK2 ] unsigned long 
  1547 ;;  no_ip_displa    1    8[BANK2 ] unsigned char 
  1548 ;; Return value:  Size  Location     Type
  1549 ;;                  1    wreg      void 
  1550 ;; Registers used:
  1551 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  1552 ;; Tracked objects:
  1553 ;;		On entry : 0/0
  1554 ;;		On exit  : 0/0
  1555 ;;		Unchanged: 0/0
  1556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1558 ;;      Locals:         0       0       0      45       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1560 ;;      Totals:         0       0       0      45       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1561 ;;Total ram usage:       45 bytes
  1562 ;; Hardware stack levels required when called:   16
  1563 ;; This function calls:
  1564 ;;		_DEMO_TCP_EchoServer
  1565 ;;		_IPV4_GetMyIP
  1566 ;;		_Network_Init
  1567 ;;		_Network_Manage
  1568 ;;		_Network_WaitForLink
  1569 ;;		_SYSLOG_Init
  1570 ;;		_SYSLOG_Write
  1571 ;;		_initHW
  1572 ;;		_lcd_goto1
  1573 ;;		_lcd_puts
  1574 ;;		_memset
  1575 ;;		_sprintf
  1576 ;;		_time
  1577 ;; This function is called by:
  1578 ;;		Startup code after reset
  1579 ;; This function uses a non-reentrant model
  1580 ;;
  1581                           
  1582                           	psect	text0
  1583  006CF0                     __ptext0:
  1584                           	opt stack 0
  1585  006CF0                     _main:
  1586                           	opt stack 15
  1587                           
  1588                           ;main.c: 136: time_t t;
  1589                           ;main.c: 137: unsigned long ip, old_ip;
  1590                           ;main.c: 138: char str[32];
  1591                           ;main.c: 139: bool no_ip_display = 1;
  1592                           
  1593                           ;incstack = 0
  1594  006CF0  0E01               	movlw	1
  1595  006CF2  0102               	movlb	2	; () banked
  1596  006CF4  6FA7               	movwf	main@no_ip_display& (0+255),b
  1597                           
  1598                           ; BSR set to: 2
  1599                           ;main.c: 141: initHW();
  1600  006CF6  ECF5  F040         	call	_initHW	;wreg free
  1601                           
  1602                           ;main.c: 142: Network_Init();
  1603  006CFA  ECFF  F041         	call	_Network_Init	;wreg free
  1604                           
  1605                           ; BSR set to: 1
  1606                           ;main.c: 143: SYSLOG_Init();
  1607  006CFE  ECA1  F041         	call	_SYSLOG_Init	;wreg free
  1608                           
  1609                           ;main.c: 146: IPEN = 1;
  1610  006D02  8ED0               	bsf	4048,7,c	;volatile
  1611                           
  1612                           ;main.c: 147: GIEH = 1;
  1613  006D04  8EF2               	bsf	intcon,7,c	;volatile
  1614                           
  1615                           ;main.c: 148: GIEL = 1;
  1616  006D06  8CF2               	bsf	intcon,6,c	;volatile
  1617                           
  1618                           ;main.c: 150: SYSLOG_Write("Waiting for Link");
  1619  006D08  0E66               	movlw	low STR_4
  1620  006D0A  6E27               	movwf	SYSLOG_Write@message,c
  1621  006D0C  5027               	movf	SYSLOG_Write@message,w,c
  1622  006D0E  A4D8               	btfss	status,2,c
  1623  006D10  0E10               	movlw	high __smallconst
  1624  006D12  6E28               	movwf	SYSLOG_Write@message+1,c
  1625  006D14  EC6A  F042         	call	_SYSLOG_Write	;wreg free
  1626                           
  1627                           ;main.c: 151: Network_WaitForLink();
  1628  006D18  ECCB  F043         	call	_Network_WaitForLink	;wreg free
  1629                           
  1630                           ;main.c: 152: SYSLOG_Write("Link started");
  1631  006D1C  0E77               	movlw	low STR_5
  1632  006D1E  6E27               	movwf	SYSLOG_Write@message,c
  1633  006D20  5027               	movf	SYSLOG_Write@message,w,c
  1634  006D22  A4D8               	btfss	status,2,c
  1635  006D24  0E10               	movlw	high __smallconst
  1636  006D26  6E28               	movwf	SYSLOG_Write@message+1,c
  1637  006D28  EC6A  F042         	call	_SYSLOG_Write	;wreg free
  1638  006D2C                     l10109:
  1639                           
  1640                           ;main.c: 155: {
  1641                           ;main.c: 156: Network_Manage();
  1642  006D2C  EC78  F03C         	call	_Network_Manage	;wreg free
  1643                           
  1644                           ;main.c: 157: time(&t);
  1645  006D30  0EA3               	movlw	low main@t
  1646  006D32  6E02               	movwf	time@t,c
  1647  006D34  0E02               	movlw	high main@t
  1648  006D36  6E03               	movwf	time@t+1,c
  1649  006D38  EC59  F03E         	call	_time	;wreg free
  1650                           
  1651                           ;main.c: 159: ip = IPV4_GetMyIP();
  1652  006D3C  ECAB  F043         	call	_IPV4_GetMyIP	;wreg free
  1653  006D40  C002  F2C8         	movff	?_IPV4_GetMyIP,main@ip
  1654  006D44  C003  F2C9         	movff	?_IPV4_GetMyIP+1,main@ip+1
  1655  006D48  C004  F2CA         	movff	?_IPV4_GetMyIP+2,main@ip+2
  1656  006D4C  C005  F2CB         	movff	?_IPV4_GetMyIP+3,main@ip+3
  1657                           
  1658                           ;main.c: 161: if((no_ip_display) || (old_ip != ip))
  1659  006D50  0102               	movlb	2	; () banked
  1660  006D52  51A7               	movf	main@no_ip_display& (0+255),w,b
  1661  006D54  E10C               	bnz	l1675
  1662                           
  1663                           ; BSR set to: 2
  1664  006D56  51C8               	movf	main@ip& (0+255),w,b
  1665  006D58  199F               	xorwf	main@old_ip& (0+255),w,b
  1666  006D5A  E109               	bnz	u15270
  1667  006D5C  51C9               	movf	(main@ip+1)& (0+255),w,b
  1668  006D5E  19A0               	xorwf	(main@old_ip+1)& (0+255),w,b
  1669  006D60  E106               	bnz	u15270
  1670  006D62  51CA               	movf	(main@ip+2)& (0+255),w,b
  1671  006D64  19A1               	xorwf	(main@old_ip+2)& (0+255),w,b
  1672  006D66  E103               	bnz	u15270
  1673  006D68  51CB               	movf	(main@ip+3)& (0+255),w,b
  1674  006D6A  19A2               	xorwf	(main@old_ip+3)& (0+255),w,b
  1675  006D6C  E038               	bz	l10131
  1676  006D6E                     u15270:
  1677  006D6E                     l1675:
  1678                           
  1679                           ; BSR set to: 2
  1680                           ;main.c: 162: {
  1681                           ;main.c: 163: old_ip = ip;
  1682  006D6E  C2C8  F29F         	movff	main@ip,main@old_ip
  1683  006D72  C2C9  F2A0         	movff	main@ip+1,main@old_ip+1
  1684  006D76  C2CA  F2A1         	movff	main@ip+2,main@old_ip+2
  1685  006D7A  C2CB  F2A2         	movff	main@ip+3,main@old_ip+3
  1686                           
  1687                           ; BSR set to: 2
  1688                           ;main.c: 164: memset(str,0,sizeof(str));
  1689  006D7E  0EA8               	movlw	low main@str
  1690  006D80  6E02               	movwf	memset@p1,c
  1691  006D82  0E02               	movlw	high main@str
  1692  006D84  6E03               	movwf	memset@p1+1,c
  1693  006D86  6A05               	clrf	memset@c+1,c
  1694  006D88  6A04               	clrf	memset@c,c
  1695  006D8A  6A07               	clrf	memset@n+1,c
  1696  006D8C  0E20               	movlw	32
  1697  006D8E  6E06               	movwf	memset@n,c
  1698  006D90  EC2B  F042         	call	_memset	;wreg free
  1699                           
  1700                           ; BSR set to: 2
  1701                           ;main.c: 165: sprintf(str,"%d.%d.%d.%d",((char*)&ip)[3],((char*)&ip)[2],((char*)&ip)[1],
      +                          ((char*)&ip)[0]);
  1702  006D94  0EA8               	movlw	low main@str
  1703  006D96  6E1C               	movwf	sprintf@wh,c
  1704  006D98  0E02               	movlw	high main@str
  1705  006D9A  6E1D               	movwf	sprintf@wh+1,c
  1706  006D9C  0E84               	movlw	low STR_6
  1707  006D9E  6E1E               	movwf	sprintf@f,c
  1708  006DA0  C2CB  F01F         	movff	main@ip+3,?_sprintf+3
  1709  006DA4  6A20               	clrf	?_sprintf+4,c
  1710  006DA6  C2CA  F021         	movff	main@ip+2,?_sprintf+5
  1711  006DAA  6A22               	clrf	?_sprintf+6,c
  1712  006DAC  C2C9  F023         	movff	main@ip+1,?_sprintf+7
  1713  006DB0  6A24               	clrf	?_sprintf+8,c
  1714  006DB2  C2C8  F025         	movff	main@ip,?_sprintf+9
  1715  006DB6  6A26               	clrf	?_sprintf+10,c
  1716  006DB8  ECD1  F041         	call	_sprintf	;wreg free
  1717                           
  1718                           ;main.c: 166: lcd_goto1(0);
  1719  006DBC  0E00               	movlw	0
  1720  006DBE  ECC4  F043         	call	_lcd_goto1
  1721                           
  1722                           ;main.c: 167: lcd_puts(str);
  1723  006DC2  0EA8               	movlw	low main@str
  1724  006DC4  6E04               	movwf	lcd_puts@s,c
  1725  006DC6  0E02               	movlw	high main@str
  1726  006DC8  6E05               	movwf	lcd_puts@s+1,c
  1727  006DCA  ECC9  F042         	call	_lcd_puts	;wreg free
  1728                           
  1729                           ;main.c: 168: SYSLOG_Write(str);
  1730  006DCE  0EA8               	movlw	low main@str
  1731  006DD0  6E27               	movwf	SYSLOG_Write@message,c
  1732  006DD2  0E02               	movlw	high main@str
  1733  006DD4  6E28               	movwf	SYSLOG_Write@message+1,c
  1734  006DD6  EC6A  F042         	call	_SYSLOG_Write	;wreg free
  1735                           
  1736                           ;main.c: 169: no_ip_display = 0;
  1737  006DDA  0102               	movlb	2	; () banked
  1738  006DDC  6BA7               	clrf	main@no_ip_display& (0+255),b
  1739  006DDE                     l10131:
  1740                           
  1741                           ; BSR set to: 2
  1742                           ;main.c: 170: }
  1743                           ;main.c: 171: DEMO_TCP_EchoServer();
  1744  006DDE  ECD6  F034         	call	_DEMO_TCP_EchoServer	;wreg free
  1745  006DE2  D7A4               	goto	l10109
  1746  006DE4                     __end_of_main:
  1747                           	opt stack 0
  1748                           tblptru	equ	0xFF8
  1749                           tblptrh	equ	0xFF7
  1750                           tblptrl	equ	0xFF6
  1751                           tablat	equ	0xFF5
  1752                           intcon	equ	0xFF2
  1753                           postinc0	equ	0xFEE
  1754                           wreg	equ	0xFE8
  1755                           status	equ	0xFD8
  1756                           
  1757 ;; *************** function _memset *****************
  1758 ;; Defined at:
  1759 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\memset.c"
  1760 ;; Parameters:    Size  Location     Type
  1761 ;;  p1              2    1[COMRAM] PTR void 
  1762 ;;		 -> main@str(32), 
  1763 ;;  c               2    3[COMRAM] int 
  1764 ;;  n               2    5[COMRAM] unsigned int 
  1765 ;; Auto vars:     Size  Location     Type
  1766 ;;  p               2    7[COMRAM] PTR unsigned char 
  1767 ;;		 -> main@str(32), 
  1768 ;; Return value:  Size  Location     Type
  1769 ;;                  2    1[COMRAM] PTR void 
  1770 ;; Registers used:
  1771 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1772 ;; Tracked objects:
  1773 ;;		On entry : F/2
  1774 ;;		On exit  : F/2
  1775 ;;		Unchanged: F/0
  1776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1777 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1778 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1780 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1781 ;;Total ram usage:        8 bytes
  1782 ;; Hardware stack levels used:    1
  1783 ;; Hardware stack levels required when called:    3
  1784 ;; This function calls:
  1785 ;;		Nothing
  1786 ;; This function is called by:
  1787 ;;		_main
  1788 ;; This function uses a non-reentrant model
  1789 ;;
  1790                           
  1791                           	psect	text1
  1792  008456                     __ptext1:
  1793                           	opt stack 0
  1794  008456                     _memset:
  1795                           	opt stack 27
  1796                           
  1797                           ; BSR set to: 2
  1798                           
  1799                           ;incstack = 0
  1800  008456  C002  F008         	movff	memset@p1,memset@p
  1801  00845A  C003  F009         	movff	memset@p1+1,memset@p+1
  1802  00845E  D008               	goto	l10087
  1803  008460                     l10083:
  1804                           
  1805                           ; BSR set to: 2
  1806  008460  C008  FFD9         	movff	memset@p,fsr2l
  1807  008464  C009  FFDA         	movff	memset@p+1,fsr2h
  1808  008468  C004  FFDF         	movff	memset@c,indf2
  1809                           
  1810                           ; BSR set to: 2
  1811  00846C  4A08               	infsnz	memset@p,f,c
  1812  00846E  2A09               	incf	memset@p+1,f,c
  1813  008470                     l10087:
  1814                           
  1815                           ; BSR set to: 2
  1816  008470  0606               	decf	memset@n,f,c
  1817  008472  A0D8               	btfss	status,0,c
  1818  008474  0607               	decf	memset@n+1,f,c
  1819  008476  2806               	incf	memset@n,w,c
  1820  008478  E1F3               	bnz	l10083
  1821  00847A  2807               	incf	memset@n+1,w,c
  1822  00847C  E1F1               	bnz	l10083
  1823                           
  1824                           ; BSR set to: 2
  1825  00847E  0012               	return		;funcret
  1826  008480                     __end_of_memset:
  1827                           	opt stack 0
  1828                           tblptru	equ	0xFF8
  1829                           tblptrh	equ	0xFF7
  1830                           tblptrl	equ	0xFF6
  1831                           tablat	equ	0xFF5
  1832                           intcon	equ	0xFF2
  1833                           postinc0	equ	0xFEE
  1834                           wreg	equ	0xFE8
  1835                           indf2	equ	0xFDF
  1836                           fsr2h	equ	0xFDA
  1837                           fsr2l	equ	0xFD9
  1838                           status	equ	0xFD8
  1839                           
  1840 ;; *************** function _lcd_puts *****************
  1841 ;; Defined at:
  1842 ;;		line 86 in file "../board_support_package/picdem2_net/lcd.c"
  1843 ;; Parameters:    Size  Location     Type
  1844 ;;  s               2    3[COMRAM] PTR const unsigned char 
  1845 ;;		 -> main@str(32), 
  1846 ;; Auto vars:     Size  Location     Type
  1847 ;;		None
  1848 ;; Return value:  Size  Location     Type
  1849 ;;                  1    wreg      void 
  1850 ;; Registers used:
  1851 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1852 ;; Tracked objects:
  1853 ;;		On entry : 0/2
  1854 ;;		On exit  : 0/0
  1855 ;;		Unchanged: 0/0
  1856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1857 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1860 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1861 ;;Total ram usage:        2 bytes
  1862 ;; Hardware stack levels used:    1
  1863 ;; Hardware stack levels required when called:    5
  1864 ;; This function calls:
  1865 ;;		_lcd_putch
  1866 ;; This function is called by:
  1867 ;;		_main
  1868 ;; This function uses a non-reentrant model
  1869 ;;
  1870                           
  1871                           	psect	text2
  1872  008592                     __ptext2:
  1873                           	opt stack 0
  1874  008592                     _lcd_puts:
  1875                           	opt stack 25
  1876                           
  1877                           ;lcd.c: 88: while(*s)
  1878                           
  1879                           ; BSR set to: 2
  1880                           ;incstack = 0
  1881  008592  D009               	goto	l9999
  1882  008594                     l9995:
  1883                           
  1884                           ;lcd.c: 89: lcd_putch(*s++);
  1885  008594  C004  FFD9         	movff	lcd_puts@s,fsr2l
  1886  008598  C005  FFDA         	movff	lcd_puts@s+1,fsr2h
  1887  00859C  50DF               	movf	indf2,w,c
  1888  00859E  EC3B  F043         	call	_lcd_putch
  1889  0085A2  4A04               	infsnz	lcd_puts@s,f,c
  1890  0085A4  2A05               	incf	lcd_puts@s+1,f,c
  1891  0085A6                     l9999:
  1892  0085A6  C004  FFD9         	movff	lcd_puts@s,fsr2l
  1893  0085AA  C005  FFDA         	movff	lcd_puts@s+1,fsr2h
  1894  0085AE  50DF               	movf	indf2,w,c
  1895  0085B0  E1F1               	bnz	l9995
  1896  0085B2  0012               	return		;funcret
  1897  0085B4                     __end_of_lcd_puts:
  1898                           	opt stack 0
  1899                           tblptru	equ	0xFF8
  1900                           tblptrh	equ	0xFF7
  1901                           tblptrl	equ	0xFF6
  1902                           tablat	equ	0xFF5
  1903                           intcon	equ	0xFF2
  1904                           postinc0	equ	0xFEE
  1905                           wreg	equ	0xFE8
  1906                           indf2	equ	0xFDF
  1907                           fsr2h	equ	0xFDA
  1908                           fsr2l	equ	0xFD9
  1909                           status	equ	0xFD8
  1910                           
  1911 ;; *************** function _lcd_putch *****************
  1912 ;; Defined at:
  1913 ;;		line 76 in file "../board_support_package/picdem2_net/lcd.c"
  1914 ;; Parameters:    Size  Location     Type
  1915 ;;  c               1    wreg     unsigned char 
  1916 ;; Auto vars:     Size  Location     Type
  1917 ;;  c               1    2[COMRAM] unsigned char 
  1918 ;; Return value:  Size  Location     Type
  1919 ;;                  1    wreg      void 
  1920 ;; Registers used:
  1921 ;;		wreg, status,2, status,0, cstack
  1922 ;; Tracked objects:
  1923 ;;		On entry : 0/2
  1924 ;;		On exit  : 0/0
  1925 ;;		Unchanged: 0/0
  1926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1928 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1930 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1931 ;;Total ram usage:        1 bytes
  1932 ;; Hardware stack levels used:    1
  1933 ;; Hardware stack levels required when called:    4
  1934 ;; This function calls:
  1935 ;;		_lcd_busy
  1936 ;;		_lcd_write_data
  1937 ;; This function is called by:
  1938 ;;		_lcd_puts
  1939 ;; This function uses a non-reentrant model
  1940 ;;
  1941                           
  1942                           	psect	text3
  1943  008676                     __ptext3:
  1944                           	opt stack 0
  1945  008676                     _lcd_putch:
  1946                           	opt stack 25
  1947                           
  1948                           ;incstack = 0
  1949                           ;lcd_putch@c stored from wreg
  1950  008676  6E03               	movwf	lcd_putch@c,c
  1951                           
  1952                           ;lcd.c: 78: if(c >= ' ' && c < 127)
  1953  008678  0E1F               	movlw	31
  1954  00867A  6403               	cpfsgt	lcd_putch@c,c
  1955  00867C  EFF6  F043         	goto	_lcd_busy
  1956  008680  0E7F               	movlw	127
  1957  008682  6003               	cpfslt	lcd_putch@c,c
  1958  008684  EFF6  F043         	goto	_lcd_busy
  1959                           
  1960                           ;lcd.c: 79: {
  1961                           ;lcd.c: 80: lcd_write_data(c);
  1962  008688  5003               	movf	lcd_putch@c,w,c
  1963  00868A  ECFC  F042         	call	_lcd_write_data
  1964                           
  1965                           ;lcd.c: 81: }
  1966                           ;lcd.c: 82: lcd_busy();
  1967  00868E  EFF6  F043         	goto	_lcd_busy	;wreg free
  1968  008692                     __end_of_lcd_putch:
  1969                           	opt stack 0
  1970                           tblptru	equ	0xFF8
  1971                           tblptrh	equ	0xFF7
  1972                           tblptrl	equ	0xFF6
  1973                           tablat	equ	0xFF5
  1974                           intcon	equ	0xFF2
  1975                           postinc0	equ	0xFEE
  1976                           wreg	equ	0xFE8
  1977                           indf2	equ	0xFDF
  1978                           fsr2h	equ	0xFDA
  1979                           fsr2l	equ	0xFD9
  1980                           status	equ	0xFD8
  1981                           
  1982 ;; *************** function _lcd_write_data *****************
  1983 ;; Defined at:
  1984 ;;		line 71 in file "../board_support_package/picdem2_net/lcd_hw.c"
  1985 ;; Parameters:    Size  Location     Type
  1986 ;;  d               1    wreg     unsigned char 
  1987 ;; Auto vars:     Size  Location     Type
  1988 ;;  d               1    1[COMRAM] unsigned char 
  1989 ;; Return value:  Size  Location     Type
  1990 ;;                  1    wreg      void 
  1991 ;; Registers used:
  1992 ;;		wreg
  1993 ;; Tracked objects:
  1994 ;;		On entry : 0/2
  1995 ;;		On exit  : 0/0
  1996 ;;		Unchanged: 0/0
  1997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1999 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2001 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2002 ;;Total ram usage:        1 bytes
  2003 ;; Hardware stack levels used:    1
  2004 ;; Hardware stack levels required when called:    3
  2005 ;; This function calls:
  2006 ;;		Nothing
  2007 ;; This function is called by:
  2008 ;;		_lcd_putch
  2009 ;; This function uses a non-reentrant model
  2010 ;;
  2011                           
  2012                           	psect	text4
  2013  0085F8                     __ptext4:
  2014                           	opt stack 0
  2015  0085F8                     _lcd_write_data:
  2016                           	opt stack 25
  2017                           
  2018                           ;incstack = 0
  2019                           ;lcd_write_data@d stored from wreg
  2020  0085F8  6E02               	movwf	lcd_write_data@d,c
  2021                           
  2022                           ;lcd_hw.c: 73: LATH1 = 0;
  2023  0085FA  9290               	bcf	3984,1,c	;volatile
  2024                           
  2025                           ;lcd_hw.c: 74: LATH2 = 1;
  2026  0085FC  8490               	bsf	3984,2,c	;volatile
  2027                           
  2028                           ;lcd_hw.c: 75: LATE = d;
  2029  0085FE  C002  FF8D         	movff	lcd_write_data@d,3981	;volatile
  2030                           
  2031                           ;lcd_hw.c: 76: _delay((unsigned long)((1)*(41666667UL/4000000.0)));
  2032  008602  0E03               	movlw	3
  2033  008604                     u15287:
  2034  008604  2EE8               	decfsz	wreg,f,c
  2035  008606  D7FE               	goto	u15287
  2036  008608  F000               	nop	
  2037                           
  2038                           ;lcd_hw.c: 77: LATH0 = 1;
  2039  00860A  8090               	bsf	3984,0,c	;volatile
  2040                           
  2041                           ;lcd_hw.c: 78: _delay((unsigned long)((1)*(41666667UL/4000000.0)));
  2042  00860C  0E03               	movlw	3
  2043  00860E                     u15297:
  2044  00860E  2EE8               	decfsz	wreg,f,c
  2045  008610  D7FE               	goto	u15297
  2046  008612  F000               	nop	
  2047                           
  2048                           ;lcd_hw.c: 79: LATH0 = 0;
  2049  008614  9090               	bcf	3984,0,c	;volatile
  2050  008616  0012               	return		;funcret
  2051  008618                     __end_of_lcd_write_data:
  2052                           	opt stack 0
  2053                           tblptru	equ	0xFF8
  2054                           tblptrh	equ	0xFF7
  2055                           tblptrl	equ	0xFF6
  2056                           tablat	equ	0xFF5
  2057                           intcon	equ	0xFF2
  2058                           postinc0	equ	0xFEE
  2059                           wreg	equ	0xFE8
  2060                           indf2	equ	0xFDF
  2061                           fsr2h	equ	0xFDA
  2062                           fsr2l	equ	0xFD9
  2063                           status	equ	0xFD8
  2064                           
  2065 ;; *************** function _lcd_goto1 *****************
  2066 ;; Defined at:
  2067 ;;		line 96 in file "../board_support_package/picdem2_net/lcd.c"
  2068 ;; Parameters:    Size  Location     Type
  2069 ;;  pos             1    wreg     unsigned char 
  2070 ;; Auto vars:     Size  Location     Type
  2071 ;;  pos             1    2[COMRAM] unsigned char 
  2072 ;; Return value:  Size  Location     Type
  2073 ;;                  1    wreg      void 
  2074 ;; Registers used:
  2075 ;;		wreg, status,2, status,0, cstack
  2076 ;; Tracked objects:
  2077 ;;		On entry : 0/2
  2078 ;;		On exit  : 0/0
  2079 ;;		Unchanged: 0/0
  2080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2082 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2084 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2085 ;;Total ram usage:        1 bytes
  2086 ;; Hardware stack levels used:    1
  2087 ;; Hardware stack levels required when called:    4
  2088 ;; This function calls:
  2089 ;;		_lcd_busy
  2090 ;;		_lcd_write_ctrl
  2091 ;; This function is called by:
  2092 ;;		_main
  2093 ;; This function uses a non-reentrant model
  2094 ;;
  2095                           
  2096                           	psect	text5
  2097  008788                     __ptext5:
  2098                           	opt stack 0
  2099  008788                     _lcd_goto1:
  2100                           	opt stack 26
  2101                           
  2102                           ;incstack = 0
  2103                           ;lcd_goto1@pos stored from wreg
  2104  008788  6E03               	movwf	lcd_goto1@pos,c
  2105                           
  2106                           ;lcd.c: 98: lcd_write_ctrl(0x80+pos);
  2107  00878A  5003               	movf	lcd_goto1@pos,w,c
  2108  00878C  0F80               	addlw	128
  2109  00878E  EC0C  F043         	call	_lcd_write_ctrl
  2110                           
  2111                           ;lcd.c: 99: lcd_busy();
  2112  008792  EFF6  F043         	goto	_lcd_busy	;wreg free
  2113  008796                     __end_of_lcd_goto1:
  2114                           	opt stack 0
  2115                           tblptru	equ	0xFF8
  2116                           tblptrh	equ	0xFF7
  2117                           tblptrl	equ	0xFF6
  2118                           tablat	equ	0xFF5
  2119                           intcon	equ	0xFF2
  2120                           postinc0	equ	0xFEE
  2121                           wreg	equ	0xFE8
  2122                           indf2	equ	0xFDF
  2123                           fsr2h	equ	0xFDA
  2124                           fsr2l	equ	0xFD9
  2125                           status	equ	0xFD8
  2126                           
  2127 ;; *************** function _initHW *****************
  2128 ;; Defined at:
  2129 ;;		line 50 in file "../board_support_package/picdem2_net/hardware.c"
  2130 ;; Parameters:    Size  Location     Type
  2131 ;;		None
  2132 ;; Auto vars:     Size  Location     Type
  2133 ;;		None
  2134 ;; Return value:  Size  Location     Type
  2135 ;;                  1    wreg      void 
  2136 ;; Registers used:
  2137 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2138 ;; Tracked objects:
  2139 ;;		On entry : F/2
  2140 ;;		On exit  : 0/0
  2141 ;;		Unchanged: 0/0
  2142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2147 ;;Total ram usage:        0 bytes
  2148 ;; Hardware stack levels used:    1
  2149 ;; Hardware stack levels required when called:    5
  2150 ;; This function calls:
  2151 ;;		_ADC_Initialize
  2152 ;;		_LED_Init
  2153 ;;		_lcd_init
  2154 ;;		_rtcc_init
  2155 ;;		_spi_init
  2156 ;;		_uart_init
  2157 ;; This function is called by:
  2158 ;;		_main
  2159 ;; This function uses a non-reentrant model
  2160 ;;
  2161                           
  2162                           	psect	text6
  2163  0081EA                     __ptext6:
  2164                           	opt stack 0
  2165  0081EA                     _initHW:
  2166                           	opt stack 25
  2167                           
  2168                           ; BSR set to: 2
  2169                           ;hardware.c: 53: OSCCON = 0x02;
  2170                           
  2171                           ;incstack = 0
  2172  0081EA  0E02               	movlw	2
  2173  0081EC  6ED3               	movwf	4051,c	;volatile
  2174                           
  2175                           ;hardware.c: 56: OSCTUNE = 0x40;
  2176  0081EE  0E40               	movlw	64
  2177  0081F0  6E9B               	movwf	3995,c	;volatile
  2178                           
  2179                           ; BSR set to: 2
  2180                           ;hardware.c: 59: TRISJ = 0;
  2181  0081F2  6A9A               	clrf	3994,c	;volatile
  2182                           
  2183                           ; BSR set to: 2
  2184                           ;hardware.c: 60: LATJ = 0;
  2185  0081F4  6A91               	clrf	3985,c	;volatile
  2186                           
  2187                           ; BSR set to: 2
  2188                           ;hardware.c: 62: TRISDbits.TRISD3 = 0;
  2189  0081F6  9695               	bcf	3989,3,c	;volatile
  2190                           
  2191                           ; BSR set to: 2
  2192                           ;hardware.c: 63: LATDbits.LATD3 = 1;
  2193  0081F8  868C               	bsf	3980,3,c	;volatile
  2194                           
  2195                           ; BSR set to: 2
  2196                           ;hardware.c: 65: TRISCbits.TRISC3 = 0;
  2197  0081FA  9694               	bcf	3988,3,c	;volatile
  2198                           
  2199                           ; BSR set to: 2
  2200                           ;hardware.c: 66: TRISCbits.TRISC4 = 1;
  2201  0081FC  8894               	bsf	3988,4,c	;volatile
  2202                           
  2203                           ; BSR set to: 2
  2204                           ;hardware.c: 67: TRISCbits.TRISC5 = 0;
  2205  0081FE  9A94               	bcf	3988,5,c	;volatile
  2206                           
  2207                           ;hardware.c: 69: TRISA = 0b11111100;
  2208  008200  0EFC               	movlw	252
  2209  008202  6E92               	movwf	3986,c	;volatile
  2210                           
  2211                           ; BSR set to: 2
  2212                           ;hardware.c: 76: RBPU = 0;
  2213  008204  9EF1               	bcf	intcon2,7,c	;volatile
  2214                           
  2215                           ; BSR set to: 2
  2216                           ;hardware.c: 78: TRISBbits.TRISB2 = 1;
  2217  008206  8493               	bsf	3987,2,c	;volatile
  2218                           
  2219                           ; BSR set to: 2
  2220                           ;hardware.c: 81: TRISBbits.TRISB4 = 0;
  2221  008208  9893               	bcf	3987,4,c	;volatile
  2222                           
  2223                           ; BSR set to: 2
  2224                           ;hardware.c: 82: LATBbits.LATB4 = 0;
  2225  00820A  988A               	bcf	3978,4,c	;volatile
  2226                           
  2227                           ; BSR set to: 2
  2228                           ;hardware.c: 85: TRISBbits.TRISB3 = 0;
  2229  00820C  9693               	bcf	3987,3,c	;volatile
  2230                           
  2231                           ; BSR set to: 2
  2232                           ;hardware.c: 86: LATBbits.LATB3 = 0;
  2233  00820E  968A               	bcf	3978,3,c	;volatile
  2234                           
  2235                           ; BSR set to: 2
  2236                           ;hardware.c: 104: rtcc_init();
  2237  008210  EC51  F041         	call	_rtcc_init	;wreg free
  2238                           
  2239                           ; BSR set to: 2
  2240                           ;hardware.c: 107: spi_init();
  2241  008214  ECD9  F043         	call	_spi_init	;wreg free
  2242                           
  2243                           ; BSR set to: 2
  2244                           ;hardware.c: 110: uart_init();
  2245  008218  EC95  F043         	call	_uart_init	;wreg free
  2246                           
  2247                           ; BSR set to: 2
  2248                           ;hardware.c: 113: lcd_init();
  2249  00821C  EC95  F039         	call	_lcd_init	;wreg free
  2250                           
  2251                           ;hardware.c: 119: ADC_Initialize();
  2252  008220  ECA0  F043         	call	_ADC_Initialize	;wreg free
  2253                           
  2254                           ;hardware.c: 121: LED_Init();
  2255  008224  EF1C  F043         	goto	_LED_Init	;wreg free
  2256  008228                     __end_of_initHW:
  2257                           	opt stack 0
  2258                           tblptru	equ	0xFF8
  2259                           tblptrh	equ	0xFF7
  2260                           tblptrl	equ	0xFF6
  2261                           tablat	equ	0xFF5
  2262                           intcon	equ	0xFF2
  2263                           intcon2	equ	0xFF1
  2264                           postinc0	equ	0xFEE
  2265                           wreg	equ	0xFE8
  2266                           indf2	equ	0xFDF
  2267                           fsr2h	equ	0xFDA
  2268                           fsr2l	equ	0xFD9
  2269                           status	equ	0xFD8
  2270                           
  2271 ;; *************** function _uart_init *****************
  2272 ;; Defined at:
  2273 ;;		line 55 in file "../board_support_package/picdem2_net/uart.c"
  2274 ;; Parameters:    Size  Location     Type
  2275 ;;		None
  2276 ;; Auto vars:     Size  Location     Type
  2277 ;;		None
  2278 ;; Return value:  Size  Location     Type
  2279 ;;                  1    wreg      void 
  2280 ;; Registers used:
  2281 ;;		wreg, status,2
  2282 ;; Tracked objects:
  2283 ;;		On entry : F/2
  2284 ;;		On exit  : F/2
  2285 ;;		Unchanged: F/0
  2286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2291 ;;Total ram usage:        0 bytes
  2292 ;; Hardware stack levels used:    1
  2293 ;; Hardware stack levels required when called:    3
  2294 ;; This function calls:
  2295 ;;		Nothing
  2296 ;; This function is called by:
  2297 ;;		_initHW
  2298 ;; This function uses a non-reentrant model
  2299 ;;
  2300                           
  2301                           	psect	text7
  2302  00872A                     __ptext7:
  2303                           	opt stack 0
  2304  00872A                     _uart_init:
  2305                           	opt stack 26
  2306                           
  2307                           ; BSR set to: 2
  2308                           ;uart.c: 58: TRISCbits.TRISC7 = 1;
  2309                           
  2310                           ;incstack = 0
  2311  00872A  8E94               	bsf	3988,7,c	;volatile
  2312                           
  2313                           ;uart.c: 59: TRISCbits.TRISC6 = 0;
  2314  00872C  9C94               	bcf	3988,6,c	;volatile
  2315                           
  2316                           ;uart.c: 62: BAUDCON1 = 0x00;
  2317  00872E  6A7E               	clrf	3966,c	;volatile
  2318                           
  2319                           ; BSR set to: 2
  2320                           ;uart.c: 69: SPBRG1 = 89;
  2321  008730  0E59               	movlw	89
  2322  008732  6EAF               	movwf	4015,c	;volatile
  2323                           
  2324                           ; BSR set to: 2
  2325                           ;uart.c: 70: BAUDCON1bits.BRG16 = 1;
  2326  008734  867E               	bsf	3966,3,c	;volatile
  2327                           
  2328                           ;uart.c: 71: TXSTA1 = 0x26;
  2329  008736  0E26               	movlw	38
  2330  008738  6EAC               	movwf	4012,c	;volatile
  2331                           
  2332                           ; BSR set to: 2
  2333                           ;uart.c: 73: CREN1 = 1;
  2334  00873A  88AB               	bsf	4011,4,c	;volatile
  2335                           
  2336                           ; BSR set to: 2
  2337                           ;uart.c: 74: SPEN1 = 1;
  2338  00873C  8EAB               	bsf	4011,7,c	;volatile
  2339                           
  2340                           ; BSR set to: 2
  2341  00873E  0C26               	retlw	38	;funcret
  2342  008740                     __end_of_uart_init:
  2343                           	opt stack 0
  2344                           tblptru	equ	0xFF8
  2345                           tblptrh	equ	0xFF7
  2346                           tblptrl	equ	0xFF6
  2347                           tablat	equ	0xFF5
  2348                           intcon	equ	0xFF2
  2349                           intcon2	equ	0xFF1
  2350                           postinc0	equ	0xFEE
  2351                           wreg	equ	0xFE8
  2352                           indf2	equ	0xFDF
  2353                           fsr2h	equ	0xFDA
  2354                           fsr2l	equ	0xFD9
  2355                           status	equ	0xFD8
  2356                           
  2357 ;; *************** function _spi_init *****************
  2358 ;; Defined at:
  2359 ;;		line 46 in file "../board_support_package/picdem2_net/mssp_spi_master.c"
  2360 ;; Parameters:    Size  Location     Type
  2361 ;;		None
  2362 ;; Auto vars:     Size  Location     Type
  2363 ;;		None
  2364 ;; Return value:  Size  Location     Type
  2365 ;;                  1    wreg      void 
  2366 ;; Registers used:
  2367 ;;		wreg, status,2
  2368 ;; Tracked objects:
  2369 ;;		On entry : F/2
  2370 ;;		On exit  : F/2
  2371 ;;		Unchanged: F/0
  2372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2377 ;;Total ram usage:        0 bytes
  2378 ;; Hardware stack levels used:    1
  2379 ;; Hardware stack levels required when called:    3
  2380 ;; This function calls:
  2381 ;;		Nothing
  2382 ;; This function is called by:
  2383 ;;		_initHW
  2384 ;; This function uses a non-reentrant model
  2385 ;;
  2386                           
  2387                           	psect	text8
  2388  0087B2                     __ptext8:
  2389                           	opt stack 0
  2390  0087B2                     _spi_init:
  2391                           	opt stack 26
  2392                           
  2393                           ; BSR set to: 2
  2394                           ;mssp_spi_master.c: 48: SSP1STATbits.CKE = 1;
  2395                           
  2396                           ; BSR set to: 2
  2397                           ;incstack = 0
  2398  0087B2  8CC7               	bsf	4039,6,c	;volatile
  2399                           
  2400                           ;mssp_spi_master.c: 49: SSP1STATbits.SMP = 0;
  2401  0087B4  9EC7               	bcf	4039,7,c	;volatile
  2402                           
  2403                           ; BSR set to: 2
  2404                           ;mssp_spi_master.c: 51: SSP1CON1 = 0x01;
  2405  0087B6  0E01               	movlw	1
  2406  0087B8  6EC6               	movwf	4038,c	;volatile
  2407                           
  2408                           ; BSR set to: 2
  2409                           ;mssp_spi_master.c: 52: SSP1CON1bits.SSPEN = 1;
  2410  0087BA  8AC6               	bsf	4038,5,c	;volatile
  2411                           
  2412                           ; BSR set to: 2
  2413  0087BC  0C01               	retlw	1	;funcret
  2414  0087BE                     __end_of_spi_init:
  2415                           	opt stack 0
  2416                           tblptru	equ	0xFF8
  2417                           tblptrh	equ	0xFF7
  2418                           tblptrl	equ	0xFF6
  2419                           tablat	equ	0xFF5
  2420                           intcon	equ	0xFF2
  2421                           intcon2	equ	0xFF1
  2422                           postinc0	equ	0xFEE
  2423                           wreg	equ	0xFE8
  2424                           indf2	equ	0xFDF
  2425                           fsr2h	equ	0xFDA
  2426                           fsr2l	equ	0xFD9
  2427                           status	equ	0xFD8
  2428                           
  2429 ;; *************** function _rtcc_init *****************
  2430 ;; Defined at:
  2431 ;;		line 77 in file "../board_support_package/picdem2_net/rtcc.c"
  2432 ;; Parameters:    Size  Location     Type
  2433 ;;		None
  2434 ;; Auto vars:     Size  Location     Type
  2435 ;;		None
  2436 ;; Return value:  Size  Location     Type
  2437 ;;                  1    wreg      void 
  2438 ;; Registers used:
  2439 ;;		wreg, status,2
  2440 ;; Tracked objects:
  2441 ;;		On entry : F/2
  2442 ;;		On exit  : F/2
  2443 ;;		Unchanged: 0/0
  2444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2449 ;;Total ram usage:        0 bytes
  2450 ;; Hardware stack levels used:    1
  2451 ;; Hardware stack levels required when called:    3
  2452 ;; This function calls:
  2453 ;;		Nothing
  2454 ;; This function is called by:
  2455 ;;		_initHW
  2456 ;; This function uses a non-reentrant model
  2457 ;;
  2458                           
  2459                           	psect	text9
  2460  0082A2                     __ptext9:
  2461                           	opt stack 0
  2462  0082A2                     _rtcc_init:
  2463                           	opt stack 26
  2464                           
  2465                           ; BSR set to: 2
  2466                           ;rtcc.c: 79: TMR1CS = 1;
  2467                           
  2468                           ; BSR set to: 2
  2469                           ;incstack = 0
  2470  0082A2  82CD               	bsf	4045,1,c	;volatile
  2471                           
  2472                           ;rtcc.c: 80: T1OSCEN = 1;
  2473  0082A4  86CD               	bsf	4045,3,c	;volatile
  2474                           
  2475                           ;rtcc.c: 81: T1CKPS0 = 0;
  2476  0082A6  98CD               	bcf	4045,4,c	;volatile
  2477                           
  2478                           ;rtcc.c: 82: T1CKPS1 = 0;
  2479  0082A8  9ACD               	bcf	4045,5,c	;volatile
  2480                           
  2481                           ;rtcc.c: 83: T1SYNC = 1;
  2482  0082AA  84CD               	bsf	4045,2,c	;volatile
  2483                           
  2484                           ;rtcc.c: 84: TMR1ON = 1;
  2485  0082AC  80CD               	bsf	4045,0,c	;volatile
  2486                           
  2487                           ; BSR set to: 2
  2488                           ;rtcc.c: 86: TMR1 = 32768UL;
  2489  0082AE  0E80               	movlw	128
  2490  0082B0  6ECF               	movwf	4047,c	;volatile
  2491  0082B2  6ACE               	clrf	4046,c	;volatile
  2492                           
  2493                           ;rtcc.c: 87: deviceTime = 1293861600;
  2494  0082B4  0EE0               	movlw	224
  2495  0082B6  6FCC               	movwf	_deviceTime& (0+255),b	;volatile
  2496  0082B8  0EC2               	movlw	194
  2497  0082BA  6FCD               	movwf	(_deviceTime+1)& (0+255),b	;volatile
  2498  0082BC  0E1E               	movlw	30
  2499  0082BE  6FCE               	movwf	(_deviceTime+2)& (0+255),b	;volatile
  2500  0082C0  0E4D               	movlw	77
  2501  0082C2  6FCF               	movwf	(_deviceTime+3)& (0+255),b	;volatile
  2502                           
  2503                           ;rtcc.c: 88: localTime = 1293861600 + 2208988800;
  2504  0082C4  0E60               	movlw	96
  2505  0082C6  6FD0               	movwf	_localTime& (0+255),b	;volatile
  2506  0082C8  0E41               	movlw	65
  2507  0082CA  6FD1               	movwf	(_localTime+1)& (0+255),b	;volatile
  2508  0082CC  0EC9               	movlw	201
  2509  0082CE  6FD2               	movwf	(_localTime+2)& (0+255),b	;volatile
  2510  0082D0  0ED0               	movlw	208
  2511  0082D2  6FD3               	movwf	(_localTime+3)& (0+255),b	;volatile
  2512                           
  2513                           ; BSR set to: 2
  2514                           ;rtcc.c: 90: TMR1IP = 1;
  2515  0082D4  809F               	bsf	3999,0,c	;volatile
  2516                           
  2517                           ; BSR set to: 2
  2518                           ;rtcc.c: 91: TMR1IE = 1;
  2519  0082D6  809D               	bsf	3997,0,c	;volatile
  2520                           
  2521                           ; BSR set to: 2
  2522  0082D8  0CD0               	retlw	208	;funcret
  2523  0082DA                     __end_of_rtcc_init:
  2524                           	opt stack 0
  2525                           tblptru	equ	0xFF8
  2526                           tblptrh	equ	0xFF7
  2527                           tblptrl	equ	0xFF6
  2528                           tablat	equ	0xFF5
  2529                           intcon	equ	0xFF2
  2530                           intcon2	equ	0xFF1
  2531                           postinc0	equ	0xFEE
  2532                           wreg	equ	0xFE8
  2533                           indf2	equ	0xFDF
  2534                           fsr2h	equ	0xFDA
  2535                           fsr2l	equ	0xFD9
  2536                           status	equ	0xFD8
  2537                           
  2538 ;; *************** function _lcd_init *****************
  2539 ;; Defined at:
  2540 ;;		line 110 in file "../board_support_package/picdem2_net/lcd.c"
  2541 ;; Parameters:    Size  Location     Type
  2542 ;;		None
  2543 ;; Auto vars:     Size  Location     Type
  2544 ;;  y               2    0        volatile int 
  2545 ;;  x               2    0        volatile int 
  2546 ;; Return value:  Size  Location     Type
  2547 ;;                  1    wreg      void 
  2548 ;; Registers used:
  2549 ;;		wreg, cstack
  2550 ;; Tracked objects:
  2551 ;;		On entry : F/2
  2552 ;;		On exit  : 0/0
  2553 ;;		Unchanged: 0/0
  2554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2557 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2558 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2559 ;;Total ram usage:        1 bytes
  2560 ;; Hardware stack levels used:    1
  2561 ;; Hardware stack levels required when called:    4
  2562 ;; This function calls:
  2563 ;;		_lcd_busy
  2564 ;;		_lcd_init_pins
  2565 ;;		_lcd_write_ctrl
  2566 ;; This function is called by:
  2567 ;;		_initHW
  2568 ;; This function uses a non-reentrant model
  2569 ;;
  2570                           
  2571                           	psect	text10
  2572  00732A                     __ptext10:
  2573                           	opt stack 0
  2574  00732A                     _lcd_init:
  2575                           	opt stack 25
  2576                           
  2577                           ; BSR set to: 2
  2578                           ;lcd.c: 112: volatile int x,y;
  2579                           ;lcd.c: 114: lcd_init_pins();
  2580                           
  2581                           ; BSR set to: 2
  2582                           ;incstack = 0
  2583  00732A  ECF1  F043         	call	_lcd_init_pins	;wreg free
  2584                           
  2585                           ; BSR set to: 2
  2586                           ;lcd.c: 116: _delay((unsigned long)((10)*(41666667UL/4000.0)));
  2587  00732E  0E88               	movlw	136
  2588  007330  6E03               	movwf	??_lcd_init& (0+255),c
  2589  007332  0E46               	movlw	70
  2590  007334                     u15307:
  2591  007334  2EE8               	decfsz	wreg,f,c
  2592  007336  D7FE               	goto	u15307
  2593  007338  2E03               	decfsz	??_lcd_init& (0+255),f,c
  2594  00733A  D7FC               	goto	u15307
  2595  00733C  D000               	nop2	
  2596                           
  2597                           ;lcd.c: 117: _delay((unsigned long)((10)*(41666667UL/4000.0)));
  2598  00733E  0E88               	movlw	136
  2599  007340  6E03               	movwf	??_lcd_init& (0+255),c
  2600  007342  0E46               	movlw	70
  2601  007344                     u15317:
  2602  007344  2EE8               	decfsz	wreg,f,c
  2603  007346  D7FE               	goto	u15317
  2604  007348  2E03               	decfsz	??_lcd_init& (0+255),f,c
  2605  00734A  D7FC               	goto	u15317
  2606  00734C  D000               	nop2	
  2607                           
  2608                           ;lcd.c: 118: _delay((unsigned long)((10)*(41666667UL/4000.0)));
  2609  00734E  0E88               	movlw	136
  2610  007350  6E03               	movwf	??_lcd_init& (0+255),c
  2611  007352  0E46               	movlw	70
  2612  007354                     u15327:
  2613  007354  2EE8               	decfsz	wreg,f,c
  2614  007356  D7FE               	goto	u15327
  2615  007358  2E03               	decfsz	??_lcd_init& (0+255),f,c
  2616  00735A  D7FC               	goto	u15327
  2617  00735C  D000               	nop2	
  2618                           
  2619                           ;lcd.c: 119: _delay((unsigned long)((10)*(41666667UL/4000.0)));
  2620  00735E  0E88               	movlw	136
  2621  007360  6E03               	movwf	??_lcd_init& (0+255),c
  2622  007362  0E46               	movlw	70
  2623  007364                     u15337:
  2624  007364  2EE8               	decfsz	wreg,f,c
  2625  007366  D7FE               	goto	u15337
  2626  007368  2E03               	decfsz	??_lcd_init& (0+255),f,c
  2627  00736A  D7FC               	goto	u15337
  2628  00736C  D000               	nop2	
  2629                           
  2630                           ;lcd.c: 122: lcd_write_ctrl(0x03);
  2631  00736E  0E03               	movlw	3
  2632  007370  EC0C  F043         	call	_lcd_write_ctrl
  2633                           
  2634                           ;lcd.c: 123: _delay((unsigned long)((4)*(41666667UL/4000.0)));
  2635  007374  0E37               	movlw	55
  2636  007376  6E03               	movwf	??_lcd_init& (0+255),c
  2637  007378  0E1B               	movlw	27
  2638  00737A                     u15347:
  2639  00737A  2EE8               	decfsz	wreg,f,c
  2640  00737C  D7FE               	goto	u15347
  2641  00737E  2E03               	decfsz	??_lcd_init& (0+255),f,c
  2642  007380  D7FC               	goto	u15347
  2643  007382  F000               	nop	
  2644                           
  2645                           ;lcd.c: 124: lcd_write_ctrl(0x03);
  2646  007384  0E03               	movlw	3
  2647  007386  EC0C  F043         	call	_lcd_write_ctrl
  2648                           
  2649                           ;lcd.c: 125: _delay((unsigned long)((4)*(41666667UL/4000.0)));
  2650  00738A  0E37               	movlw	55
  2651  00738C  6E03               	movwf	??_lcd_init& (0+255),c
  2652  00738E  0E1B               	movlw	27
  2653  007390                     u15357:
  2654  007390  2EE8               	decfsz	wreg,f,c
  2655  007392  D7FE               	goto	u15357
  2656  007394  2E03               	decfsz	??_lcd_init& (0+255),f,c
  2657  007396  D7FC               	goto	u15357
  2658  007398  F000               	nop	
  2659                           
  2660                           ;lcd.c: 126: lcd_write_ctrl(0x03);
  2661  00739A  0E03               	movlw	3
  2662  00739C  EC0C  F043         	call	_lcd_write_ctrl
  2663                           
  2664                           ;lcd.c: 129: lcd_write_ctrl(0x38);
  2665  0073A0  0E38               	movlw	56
  2666  0073A2  EC0C  F043         	call	_lcd_write_ctrl
  2667                           
  2668                           ;lcd.c: 131: lcd_busy();
  2669  0073A6  ECF6  F043         	call	_lcd_busy	;wreg free
  2670                           
  2671                           ;lcd.c: 132: lcd_write_ctrl(0x0C);
  2672  0073AA  0E0C               	movlw	12
  2673  0073AC  EC0C  F043         	call	_lcd_write_ctrl
  2674                           
  2675                           ;lcd.c: 133: lcd_busy();
  2676  0073B0  ECF6  F043         	call	_lcd_busy	;wreg free
  2677                           
  2678                           ;lcd.c: 134: lcd_write_ctrl(0x01);
  2679  0073B4  0E01               	movlw	1
  2680  0073B6  EC0C  F043         	call	_lcd_write_ctrl
  2681                           
  2682                           ;lcd.c: 135: lcd_busy();
  2683  0073BA  ECF6  F043         	call	_lcd_busy	;wreg free
  2684                           
  2685                           ;lcd.c: 138: lcd_write_ctrl(0x01);
  2686  0073BE  0E01               	movlw	1
  2687  0073C0  EC0C  F043         	call	_lcd_write_ctrl
  2688                           
  2689                           ;lcd.c: 139: _delay((unsigned long)((2)*(41666667UL/4000.0)));
  2690  0073C4  0E1C               	movlw	28
  2691  0073C6  6E03               	movwf	??_lcd_init& (0+255),c
  2692  0073C8  0E0D               	movlw	13
  2693  0073CA                     u15367:
  2694  0073CA  2EE8               	decfsz	wreg,f,c
  2695  0073CC  D7FE               	goto	u15367
  2696  0073CE  2E03               	decfsz	??_lcd_init& (0+255),f,c
  2697  0073D0  D7FC               	goto	u15367
  2698  0073D2  0012               	return		;funcret
  2699  0073D4                     __end_of_lcd_init:
  2700                           	opt stack 0
  2701                           tblptru	equ	0xFF8
  2702                           tblptrh	equ	0xFF7
  2703                           tblptrl	equ	0xFF6
  2704                           tablat	equ	0xFF5
  2705                           intcon	equ	0xFF2
  2706                           intcon2	equ	0xFF1
  2707                           postinc0	equ	0xFEE
  2708                           wreg	equ	0xFE8
  2709                           indf2	equ	0xFDF
  2710                           fsr2h	equ	0xFDA
  2711                           fsr2l	equ	0xFD9
  2712                           status	equ	0xFD8
  2713                           
  2714 ;; *************** function _lcd_write_ctrl *****************
  2715 ;; Defined at:
  2716 ;;		line 59 in file "../board_support_package/picdem2_net/lcd_hw.c"
  2717 ;; Parameters:    Size  Location     Type
  2718 ;;  c               1    wreg     unsigned char 
  2719 ;; Auto vars:     Size  Location     Type
  2720 ;;  c               1    1[COMRAM] unsigned char 
  2721 ;; Return value:  Size  Location     Type
  2722 ;;                  1    wreg      void 
  2723 ;; Registers used:
  2724 ;;		wreg
  2725 ;; Tracked objects:
  2726 ;;		On entry : 0/2
  2727 ;;		On exit  : 0/0
  2728 ;;		Unchanged: 0/0
  2729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2731 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2733 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2734 ;;Total ram usage:        1 bytes
  2735 ;; Hardware stack levels used:    1
  2736 ;; Hardware stack levels required when called:    3
  2737 ;; This function calls:
  2738 ;;		Nothing
  2739 ;; This function is called by:
  2740 ;;		_lcd_goto1
  2741 ;;		_lcd_init
  2742 ;; This function uses a non-reentrant model
  2743 ;;
  2744                           
  2745                           	psect	text11
  2746  008618                     __ptext11:
  2747                           	opt stack 0
  2748  008618                     _lcd_write_ctrl:
  2749                           	opt stack 26
  2750                           
  2751                           ;incstack = 0
  2752                           ;lcd_write_ctrl@c stored from wreg
  2753  008618  6E02               	movwf	lcd_write_ctrl@c,c
  2754                           
  2755                           ;lcd_hw.c: 61: LATH1 = 0;
  2756  00861A  9290               	bcf	3984,1,c	;volatile
  2757                           
  2758                           ;lcd_hw.c: 62: LATH2 = 0;
  2759  00861C  9490               	bcf	3984,2,c	;volatile
  2760                           
  2761                           ;lcd_hw.c: 64: _delay((unsigned long)((50)*(41666667UL/4000000.0)));
  2762  00861E  0EAD               	movlw	173
  2763  008620                     u15377:
  2764  008620  2EE8               	decfsz	wreg,f,c
  2765  008622  D7FE               	goto	u15377
  2766  008624  F000               	nop	
  2767                           
  2768                           ;lcd_hw.c: 65: LATE = c;
  2769  008626  C002  FF8D         	movff	lcd_write_ctrl@c,3981	;volatile
  2770                           
  2771                           ;lcd_hw.c: 66: LATH0 = 1;
  2772  00862A  8090               	bsf	3984,0,c	;volatile
  2773                           
  2774                           ;lcd_hw.c: 67: _delay((unsigned long)((50)*(41666667UL/4000000.0)));
  2775  00862C  0EAD               	movlw	173
  2776  00862E                     u15387:
  2777  00862E  2EE8               	decfsz	wreg,f,c
  2778  008630  D7FE               	goto	u15387
  2779  008632  F000               	nop	
  2780                           
  2781                           ;lcd_hw.c: 68: LATH0 = 0;
  2782  008634  9090               	bcf	3984,0,c	;volatile
  2783  008636  0012               	return		;funcret
  2784  008638                     __end_of_lcd_write_ctrl:
  2785                           	opt stack 0
  2786                           tblptru	equ	0xFF8
  2787                           tblptrh	equ	0xFF7
  2788                           tblptrl	equ	0xFF6
  2789                           tablat	equ	0xFF5
  2790                           intcon	equ	0xFF2
  2791                           intcon2	equ	0xFF1
  2792                           postinc0	equ	0xFEE
  2793                           wreg	equ	0xFE8
  2794                           indf2	equ	0xFDF
  2795                           fsr2h	equ	0xFDA
  2796                           fsr2l	equ	0xFD9
  2797                           status	equ	0xFD8
  2798                           
  2799 ;; *************** function _lcd_init_pins *****************
  2800 ;; Defined at:
  2801 ;;		line 50 in file "../board_support_package/picdem2_net/lcd_hw.c"
  2802 ;; Parameters:    Size  Location     Type
  2803 ;;		None
  2804 ;; Auto vars:     Size  Location     Type
  2805 ;;		None
  2806 ;; Return value:  Size  Location     Type
  2807 ;;                  1    wreg      void 
  2808 ;; Registers used:
  2809 ;;		None
  2810 ;; Tracked objects:
  2811 ;;		On entry : F/2
  2812 ;;		On exit  : F/2
  2813 ;;		Unchanged: F/0
  2814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2819 ;;Total ram usage:        0 bytes
  2820 ;; Hardware stack levels used:    1
  2821 ;; Hardware stack levels required when called:    3
  2822 ;; This function calls:
  2823 ;;		Nothing
  2824 ;; This function is called by:
  2825 ;;		_lcd_init
  2826 ;; This function uses a non-reentrant model
  2827 ;;
  2828                           
  2829                           	psect	text12
  2830  0087E2                     __ptext12:
  2831                           	opt stack 0
  2832  0087E2                     _lcd_init_pins:
  2833                           	opt stack 25
  2834                           
  2835                           ; BSR set to: 2
  2836                           ;lcd_hw.c: 52: TRISE = 0;
  2837                           
  2838                           ;incstack = 0
  2839  0087E2  6A96               	clrf	3990,c	;volatile
  2840                           
  2841                           ;lcd_hw.c: 53: TRISH = 0x00;
  2842  0087E4  6A99               	clrf	3993,c	;volatile
  2843                           
  2844                           ;lcd_hw.c: 54: LATE = 0;
  2845  0087E6  6A8D               	clrf	3981,c	;volatile
  2846                           
  2847                           ;lcd_hw.c: 55: LATH = 0;
  2848  0087E8  6A90               	clrf	3984,c	;volatile
  2849                           
  2850                           ; BSR set to: 2
  2851  0087EA  0012               	return		;funcret
  2852  0087EC                     __end_of_lcd_init_pins:
  2853                           	opt stack 0
  2854                           tblptru	equ	0xFF8
  2855                           tblptrh	equ	0xFF7
  2856                           tblptrl	equ	0xFF6
  2857                           tablat	equ	0xFF5
  2858                           intcon	equ	0xFF2
  2859                           intcon2	equ	0xFF1
  2860                           postinc0	equ	0xFEE
  2861                           wreg	equ	0xFE8
  2862                           indf2	equ	0xFDF
  2863                           fsr2h	equ	0xFDA
  2864                           fsr2l	equ	0xFD9
  2865                           status	equ	0xFD8
  2866                           
  2867 ;; *************** function _lcd_busy *****************
  2868 ;; Defined at:
  2869 ;;		line 82 in file "../board_support_package/picdem2_net/lcd_hw.c"
  2870 ;; Parameters:    Size  Location     Type
  2871 ;;		None
  2872 ;; Auto vars:     Size  Location     Type
  2873 ;;		None
  2874 ;; Return value:  Size  Location     Type
  2875 ;;                  1    wreg      void 
  2876 ;; Registers used:
  2877 ;;		wreg
  2878 ;; Tracked objects:
  2879 ;;		On entry : 0/2
  2880 ;;		On exit  : 0/0
  2881 ;;		Unchanged: 0/0
  2882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2887 ;;Total ram usage:        0 bytes
  2888 ;; Hardware stack levels used:    1
  2889 ;; Hardware stack levels required when called:    3
  2890 ;; This function calls:
  2891 ;;		Nothing
  2892 ;; This function is called by:
  2893 ;;		_lcd_putch
  2894 ;;		_lcd_goto1
  2895 ;;		_lcd_init
  2896 ;; This function uses a non-reentrant model
  2897 ;;
  2898                           
  2899                           	psect	text13
  2900  0087EC                     __ptext13:
  2901                           	opt stack 0
  2902  0087EC                     _lcd_busy:
  2903                           	opt stack 25
  2904                           
  2905                           ;lcd_hw.c: 84: _delay((unsigned long)((50)*(41666667UL/4000000.0)));
  2906                           
  2907                           ; BSR set to: 2
  2908                           ;incstack = 0
  2909  0087EC  0EAD               	movlw	173
  2910  0087EE                     u15397:
  2911  0087EE  2EE8               	decfsz	wreg,f,c
  2912  0087F0  D7FE               	goto	u15397
  2913  0087F2  F000               	nop	
  2914  0087F4  0012               	return		;funcret
  2915  0087F6                     __end_of_lcd_busy:
  2916                           	opt stack 0
  2917                           tblptru	equ	0xFF8
  2918                           tblptrh	equ	0xFF7
  2919                           tblptrl	equ	0xFF6
  2920                           tablat	equ	0xFF5
  2921                           intcon	equ	0xFF2
  2922                           intcon2	equ	0xFF1
  2923                           postinc0	equ	0xFEE
  2924                           wreg	equ	0xFE8
  2925                           indf2	equ	0xFDF
  2926                           fsr2h	equ	0xFDA
  2927                           fsr2l	equ	0xFD9
  2928                           status	equ	0xFD8
  2929                           
  2930 ;; *************** function _LED_Init *****************
  2931 ;; Defined at:
  2932 ;;		line 55 in file "../board_support_package/picdem2_net/led_driver.c"
  2933 ;; Parameters:    Size  Location     Type
  2934 ;;		None
  2935 ;; Auto vars:     Size  Location     Type
  2936 ;;  x               1    1[COMRAM] unsigned char 
  2937 ;; Return value:  Size  Location     Type
  2938 ;;                  1    wreg      void 
  2939 ;; Registers used:
  2940 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2941 ;; Tracked objects:
  2942 ;;		On entry : 0/2
  2943 ;;		On exit  : 0/0
  2944 ;;		Unchanged: 0/0
  2945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2947 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2949 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2950 ;;Total ram usage:        1 bytes
  2951 ;; Hardware stack levels used:    1
  2952 ;; Hardware stack levels required when called:    3
  2953 ;; This function calls:
  2954 ;;		Nothing
  2955 ;; This function is called by:
  2956 ;;		_initHW
  2957 ;; This function uses a non-reentrant model
  2958 ;;
  2959                           
  2960                           	psect	text14
  2961  008638                     __ptext14:
  2962                           	opt stack 0
  2963  008638                     _LED_Init:
  2964                           	opt stack 26
  2965                           
  2966                           ;led_driver.c: 57: uint8_t x = 0;
  2967                           
  2968                           ;incstack = 0
  2969  008638  6A02               	clrf	LED_Init@x,c
  2970                           
  2971                           ;led_driver.c: 58: for(x = 0; x < 8; x++)
  2972  00863A  6A02               	clrf	LED_Init@x,c
  2973  00863C                     l9527:
  2974                           
  2975                           ;led_driver.c: 59: {
  2976                           ;led_driver.c: 60: led_values[x].value = 0;
  2977  00863C  5002               	movf	LED_Init@x,w,c
  2978  00863E  0D02               	mullw	2
  2979  008640  0E00               	movlw	low _led_values
  2980  008642  24F3               	addwf	prodl,w,c
  2981  008644  6ED9               	movwf	fsr2l,c
  2982  008646  0E02               	movlw	high _led_values
  2983  008648  20F4               	addwfc	prodh,w,c
  2984  00864A  6EDA               	movwf	fsr2h,c
  2985  00864C  6ADF               	clrf	indf2,c
  2986  00864E  2A02               	incf	LED_Init@x,f,c
  2987  008650  0E07               	movlw	7
  2988  008652  6402               	cpfsgt	LED_Init@x,c
  2989  008654  D7F3               	goto	l9527
  2990  008656  0C07               	retlw	7
  2991  008658                     __end_of_LED_Init:
  2992                           	opt stack 0
  2993                           tblptru	equ	0xFF8
  2994                           tblptrh	equ	0xFF7
  2995                           tblptrl	equ	0xFF6
  2996                           tablat	equ	0xFF5
  2997                           prodh	equ	0xFF4
  2998                           prodl	equ	0xFF3
  2999                           intcon	equ	0xFF2
  3000                           intcon2	equ	0xFF1
  3001                           postinc0	equ	0xFEE
  3002                           wreg	equ	0xFE8
  3003                           indf2	equ	0xFDF
  3004                           fsr2h	equ	0xFDA
  3005                           fsr2l	equ	0xFD9
  3006                           status	equ	0xFD8
  3007                           
  3008 ;; *************** function _ADC_Initialize *****************
  3009 ;; Defined at:
  3010 ;;		line 55 in file "../board_support_package/picdem2_net/adc.c"
  3011 ;; Parameters:    Size  Location     Type
  3012 ;;		None
  3013 ;; Auto vars:     Size  Location     Type
  3014 ;;		None
  3015 ;; Return value:  Size  Location     Type
  3016 ;;                  1    wreg      void 
  3017 ;; Registers used:
  3018 ;;		wreg, status,2
  3019 ;; Tracked objects:
  3020 ;;		On entry : 0/2
  3021 ;;		On exit  : 0/0
  3022 ;;		Unchanged: 0/0
  3023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3028 ;;Total ram usage:        0 bytes
  3029 ;; Hardware stack levels used:    1
  3030 ;; Hardware stack levels required when called:    3
  3031 ;; This function calls:
  3032 ;;		Nothing
  3033 ;; This function is called by:
  3034 ;;		_initHW
  3035 ;; This function uses a non-reentrant model
  3036 ;;
  3037                           
  3038                           	psect	text15
  3039  008740                     __ptext15:
  3040                           	opt stack 0
  3041  008740                     _ADC_Initialize:
  3042                           	opt stack 26
  3043                           
  3044                           ;adc.c: 59: TRISAbits.RA2 = 1;
  3045                           
  3046                           ;incstack = 0
  3047  008740  8492               	bsf	3986,2,c	;volatile
  3048                           
  3049                           ;adc.c: 60: TRISAbits.RA3 = 1;
  3050  008742  8692               	bsf	3986,3,c	;volatile
  3051                           
  3052                           ;adc.c: 63: ADCON0 = 0x0D;
  3053  008744  0E0D               	movlw	13
  3054  008746  6EC2               	movwf	4034,c	;volatile
  3055                           
  3056                           ;adc.c: 66: ADCON1 = 0x06;
  3057  008748  0E06               	movlw	6
  3058  00874A  6EC1               	movwf	4033,c	;volatile
  3059                           
  3060                           ;adc.c: 69: ADCON2 = 0xBE;
  3061  00874C  0EBE               	movlw	190
  3062  00874E  6EC0               	movwf	4032,c	;volatile
  3063                           
  3064                           ;adc.c: 72: ADRESL = 0x00;
  3065  008750  6AC3               	clrf	4035,c	;volatile
  3066                           
  3067                           ;adc.c: 75: ADRESH = 0x00;
  3068  008752  6AC4               	clrf	4036,c	;volatile
  3069  008754  0012               	return		;funcret
  3070  008756                     __end_of_ADC_Initialize:
  3071                           	opt stack 0
  3072                           tblptru	equ	0xFF8
  3073                           tblptrh	equ	0xFF7
  3074                           tblptrl	equ	0xFF6
  3075                           tablat	equ	0xFF5
  3076                           prodh	equ	0xFF4
  3077                           prodl	equ	0xFF3
  3078                           intcon	equ	0xFF2
  3079                           intcon2	equ	0xFF1
  3080                           postinc0	equ	0xFEE
  3081                           wreg	equ	0xFE8
  3082                           indf2	equ	0xFDF
  3083                           fsr2h	equ	0xFDA
  3084                           fsr2l	equ	0xFD9
  3085                           status	equ	0xFD8
  3086                           
  3087 ;; *************** function _SYSLOG_Write *****************
  3088 ;; Defined at:
  3089 ;;		line 50 in file "../../TCPIP Library/source/syslog.c"
  3090 ;; Parameters:    Size  Location     Type
  3091 ;;  message         2   38[COMRAM] PTR const unsigned char 
  3092 ;;		 -> main@str(32), STR_5(13), STR_4(17), 
  3093 ;; Auto vars:     Size  Location     Type
  3094 ;;  t               2   40[COMRAM] unsigned int 
  3095 ;; Return value:  Size  Location     Type
  3096 ;;                  1    wreg      void 
  3097 ;; Registers used:
  3098 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3099 ;; Tracked objects:
  3100 ;;		On entry : 0/1
  3101 ;;		On exit  : 0/0
  3102 ;;		Unchanged: 0/0
  3103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3104 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3105 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3107 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3108 ;;Total ram usage:        4 bytes
  3109 ;; Hardware stack levels used:    1
  3110 ;; Hardware stack levels required when called:    6
  3111 ;; This function calls:
  3112 ;;		_printf
  3113 ;;		_time
  3114 ;; This function is called by:
  3115 ;;		_main
  3116 ;; This function uses a non-reentrant model
  3117 ;;
  3118                           
  3119                           	psect	text16
  3120  0084D4                     __ptext16:
  3121                           	opt stack 0
  3122  0084D4                     _SYSLOG_Write:
  3123                           	opt stack 24
  3124                           
  3125                           ;syslog.c: 52: unsigned int t = (unsigned int) time(0);
  3126                           
  3127                           ;incstack = 0
  3128  0084D4  6A02               	clrf	time@t,c
  3129  0084D6  6A03               	clrf	time@t+1,c
  3130  0084D8  EC59  F03E         	call	_time	;wreg free
  3131  0084DC  C002  F029         	movff	?_time,SYSLOG_Write@t
  3132  0084E0  C003  F02A         	movff	?_time+1,SYSLOG_Write@t+1
  3133                           
  3134                           ;syslog.c: 53: printf("%u : %s\r\n",t,message);
  3135  0084E4  0E90               	movlw	low STR_3
  3136  0084E6  6E1C               	movwf	printf@f,c
  3137  0084E8  C029  F01D         	movff	SYSLOG_Write@t,?_printf+1
  3138  0084EC  C02A  F01E         	movff	SYSLOG_Write@t+1,?_printf+2
  3139  0084F0  C027  F01F         	movff	SYSLOG_Write@message,?_printf+3
  3140  0084F4  C028  F020         	movff	SYSLOG_Write@message+1,?_printf+4
  3141  0084F8  EFA5  F042         	goto	_printf	;wreg free
  3142  0084FC                     __end_of_SYSLOG_Write:
  3143                           	opt stack 0
  3144                           tblptru	equ	0xFF8
  3145                           tblptrh	equ	0xFF7
  3146                           tblptrl	equ	0xFF6
  3147                           tablat	equ	0xFF5
  3148                           prodh	equ	0xFF4
  3149                           prodl	equ	0xFF3
  3150                           intcon	equ	0xFF2
  3151                           intcon2	equ	0xFF1
  3152                           postinc0	equ	0xFEE
  3153                           wreg	equ	0xFE8
  3154                           indf2	equ	0xFDF
  3155                           fsr2h	equ	0xFDA
  3156                           fsr2l	equ	0xFD9
  3157                           status	equ	0xFD8
  3158                           
  3159 ;; *************** function _SYSLOG_Init *****************
  3160 ;; Defined at:
  3161 ;;		line 43 in file "../../TCPIP Library/source/syslog.c"
  3162 ;; Parameters:    Size  Location     Type
  3163 ;;		None
  3164 ;; Auto vars:     Size  Location     Type
  3165 ;;  t               4   38[COMRAM] unsigned long 
  3166 ;; Return value:  Size  Location     Type
  3167 ;;                  1    wreg      void 
  3168 ;; Registers used:
  3169 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3170 ;; Tracked objects:
  3171 ;;		On entry : F/1
  3172 ;;		On exit  : 0/0
  3173 ;;		Unchanged: 0/0
  3174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3176 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3178 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3179 ;;Total ram usage:        4 bytes
  3180 ;; Hardware stack levels used:    1
  3181 ;; Hardware stack levels required when called:    6
  3182 ;; This function calls:
  3183 ;;		_printf
  3184 ;;		_time
  3185 ;; This function is called by:
  3186 ;;		_main
  3187 ;; This function uses a non-reentrant model
  3188 ;;
  3189                           
  3190                           	psect	text17
  3191  008342                     __ptext17:
  3192                           	opt stack 0
  3193  008342                     _SYSLOG_Init:
  3194                           	opt stack 24
  3195                           
  3196                           ; BSR set to: 1
  3197                           ;syslog.c: 45: unsigned long t = time(0);
  3198                           
  3199                           ;incstack = 0
  3200  008342  6A02               	clrf	time@t,c
  3201  008344  6A03               	clrf	time@t+1,c
  3202  008346  EC59  F03E         	call	_time	;wreg free
  3203  00834A  C002  F027         	movff	?_time,SYSLOG_Init@t
  3204  00834E  C003  F028         	movff	?_time+1,SYSLOG_Init@t+1
  3205  008352  C004  F029         	movff	?_time+2,SYSLOG_Init@t+2
  3206  008356  C005  F02A         	movff	?_time+3,SYSLOG_Init@t+3
  3207                           
  3208                           ;syslog.c: 47: printf("\r\n\r\nStarting Syslog at %u\r\n",t);
  3209  00835A  0E39               	movlw	low STR_2
  3210  00835C  6E1C               	movwf	printf@f,c
  3211  00835E  C027  F01D         	movff	SYSLOG_Init@t,?_printf+1
  3212  008362  C028  F01E         	movff	SYSLOG_Init@t+1,?_printf+2
  3213  008366  C029  F01F         	movff	SYSLOG_Init@t+2,?_printf+3
  3214  00836A  C02A  F020         	movff	SYSLOG_Init@t+3,?_printf+4
  3215  00836E  EFA5  F042         	goto	_printf	;wreg free
  3216  008372                     __end_of_SYSLOG_Init:
  3217                           	opt stack 0
  3218                           tblptru	equ	0xFF8
  3219                           tblptrh	equ	0xFF7
  3220                           tblptrl	equ	0xFF6
  3221                           tablat	equ	0xFF5
  3222                           prodh	equ	0xFF4
  3223                           prodl	equ	0xFF3
  3224                           intcon	equ	0xFF2
  3225                           intcon2	equ	0xFF1
  3226                           postinc0	equ	0xFEE
  3227                           wreg	equ	0xFE8
  3228                           indf2	equ	0xFDF
  3229                           fsr2h	equ	0xFDA
  3230                           fsr2l	equ	0xFD9
  3231                           status	equ	0xFD8
  3232                           
  3233 ;; *************** function _printf *****************
  3234 ;; Defined at:
  3235 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\printf.c"
  3236 ;; Parameters:    Size  Location     Type
  3237 ;;  f               1   27[COMRAM] PTR const unsigned char 
  3238 ;;		 -> STR_3(10), STR_2(28), 
  3239 ;; Auto vars:     Size  Location     Type
  3240 ;;  pb              5   33[COMRAM] struct __prbuf
  3241 ;;  ap              1   32[COMRAM] PTR void [1]
  3242 ;;		 -> ?_sprintf(2), ?_printf(2), 
  3243 ;; Return value:  Size  Location     Type
  3244 ;;                  2   27[COMRAM] int 
  3245 ;; Registers used:
  3246 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3247 ;; Tracked objects:
  3248 ;;		On entry : 0/1
  3249 ;;		On exit  : 0/0
  3250 ;;		Unchanged: 0/0
  3251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3252 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3253 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3255 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3256 ;;Total ram usage:       11 bytes
  3257 ;; Hardware stack levels used:    1
  3258 ;; Hardware stack levels required when called:    5
  3259 ;; This function calls:
  3260 ;;		__doprnt
  3261 ;; This function is called by:
  3262 ;;		_SYSLOG_Init
  3263 ;;		_SYSLOG_Write
  3264 ;; This function uses a non-reentrant model
  3265 ;;
  3266                           
  3267                           	psect	text18
  3268  00854A                     __ptext18:
  3269                           	opt stack 0
  3270  00854A                     _printf:
  3271                           	opt stack 24
  3272                           
  3273                           ;incstack = 0
  3274  00854A  6A22               	clrf	printf@pb,c
  3275  00854C  6A23               	clrf	printf@pb+1,c
  3276  00854E  0E92               	movlw	low _putch
  3277  008550  6E24               	movwf	printf@pb+2,c
  3278  008552  0E86               	movlw	high _putch
  3279  008554  6E25               	movwf	printf@pb+3,c
  3280  008556  0E00               	movlw	low (_putch shr (0+16))
  3281  008558  6E26               	movwf	printf@pb+4,c
  3282  00855A  0E1D               	movlw	low (?_printf+1)
  3283  00855C  6E21               	movwf	printf@ap,c
  3284                           
  3285                           ;	Return value of _printf is never used
  3286  00855E  0E22               	movlw	low printf@pb
  3287  008560  6E0E               	movwf	__doprnt@pb,c
  3288  008562  C01C  F00F         	movff	printf@f,__doprnt@f
  3289  008566  0E21               	movlw	low printf@ap
  3290  008568  6E10               	movwf	__doprnt@ap,c
  3291  00856A  EFE0  F027         	goto	__doprnt	;wreg free
  3292  00856E                     __end_of_printf:
  3293                           	opt stack 0
  3294                           tblptru	equ	0xFF8
  3295                           tblptrh	equ	0xFF7
  3296                           tblptrl	equ	0xFF6
  3297                           tablat	equ	0xFF5
  3298                           prodh	equ	0xFF4
  3299                           prodl	equ	0xFF3
  3300                           intcon	equ	0xFF2
  3301                           intcon2	equ	0xFF1
  3302                           postinc0	equ	0xFEE
  3303                           wreg	equ	0xFE8
  3304                           indf2	equ	0xFDF
  3305                           fsr2h	equ	0xFDA
  3306                           fsr2l	equ	0xFD9
  3307                           status	equ	0xFD8
  3308                           
  3309 ;; *************** function _Network_WaitForLink *****************
  3310 ;; Defined at:
  3311 ;;		line 76 in file "../../TCPIP Library/source/network.c"
  3312 ;; Parameters:    Size  Location     Type
  3313 ;;		None
  3314 ;; Auto vars:     Size  Location     Type
  3315 ;;		None
  3316 ;; Return value:  Size  Location     Type
  3317 ;;                  1    wreg      void 
  3318 ;; Registers used:
  3319 ;;		wreg, status,2, status,0, cstack
  3320 ;; Tracked objects:
  3321 ;;		On entry : 0/1
  3322 ;;		On exit  : 0/0
  3323 ;;		Unchanged: 0/0
  3324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3329 ;;Total ram usage:        0 bytes
  3330 ;; Hardware stack levels used:    1
  3331 ;; Hardware stack levels required when called:    8
  3332 ;; This function calls:
  3333 ;;		_ETH_CheckLinkUp
  3334 ;; This function is called by:
  3335 ;;		_main
  3336 ;; This function uses a non-reentrant model
  3337 ;;
  3338                           
  3339                           	psect	text19
  3340  008796                     __ptext19:
  3341                           	opt stack 0
  3342  008796                     _Network_WaitForLink:
  3343                           	opt stack 22
  3344                           
  3345                           ;network.c: 78: while(!ETH_CheckLinkUp()) __nop();
  3346                           
  3347                           ;incstack = 0
  3348  008796  D001               	goto	l10019
  3349  008798                     l1108:
  3350  008798  F000               	nop	
  3351  00879A                     l10019:
  3352  00879A  EC87  F041         	call	_ETH_CheckLinkUp	;wreg free
  3353  00879E  0900               	iorlw	0
  3354  0087A0  E0FB               	bz	l1108
  3355  0087A2  0012               	return		;funcret
  3356  0087A4                     __end_of_Network_WaitForLink:
  3357                           	opt stack 0
  3358                           tblptru	equ	0xFF8
  3359                           tblptrh	equ	0xFF7
  3360                           tblptrl	equ	0xFF6
  3361                           tablat	equ	0xFF5
  3362                           prodh	equ	0xFF4
  3363                           prodl	equ	0xFF3
  3364                           intcon	equ	0xFF2
  3365                           intcon2	equ	0xFF1
  3366                           postinc0	equ	0xFEE
  3367                           wreg	equ	0xFE8
  3368                           indf2	equ	0xFDF
  3369                           fsr2h	equ	0xFDA
  3370                           fsr2l	equ	0xFD9
  3371                           status	equ	0xFD8
  3372                           
  3373 ;; *************** function _Network_Manage *****************
  3374 ;; Defined at:
  3375 ;;		line 81 in file "../../TCPIP Library/source/network.c"
  3376 ;; Parameters:    Size  Location     Type
  3377 ;;		None
  3378 ;; Auto vars:     Size  Location     Type
  3379 ;;  now             4  127[BANK1 ] long 
  3380 ;; Return value:  Size  Location     Type
  3381 ;;                  1    wreg      void 
  3382 ;; Registers used:
  3383 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  3384 ;; Tracked objects:
  3385 ;;		On entry : 0/1
  3386 ;;		On exit  : E/0
  3387 ;;		Unchanged: 0/0
  3388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3390 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3391 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3392 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3393 ;;Total ram usage:        5 bytes
  3394 ;; Hardware stack levels used:    1
  3395 ;; Hardware stack levels required when called:   15
  3396 ;; This function calls:
  3397 ;;		_ARPV4_Update
  3398 ;;		_DHCP_Manage
  3399 ;;		_ETH_EventHandler
  3400 ;;		_Network_Read
  3401 ;;		_TCP_Update
  3402 ;;		_time
  3403 ;; This function is called by:
  3404 ;;		_main
  3405 ;; This function uses a non-reentrant model
  3406 ;;
  3407                           
  3408                           	psect	text20
  3409  0078F0                     __ptext20:
  3410                           	opt stack 0
  3411  0078F0                     _Network_Manage:
  3412                           	opt stack 15
  3413                           
  3414                           ;network.c: 83: time_t now;
  3415                           ;network.c: 84: static time_t nowPv = 0;
  3416                           ;network.c: 86: ETH_EventHandler();
  3417                           
  3418                           ;incstack = 0
  3419  0078F0  ECEA  F039         	call	_ETH_EventHandler	;wreg free
  3420                           
  3421                           ;network.c: 87: Network_Read();
  3422  0078F4  ECE9  F038         	call	_Network_Read	;wreg free
  3423                           
  3424                           ;network.c: 90: time(&now);
  3425  0078F8  0E7F               	movlw	low Network_Manage@now
  3426  0078FA  6E02               	movwf	time@t,c
  3427  0078FC  0E01               	movlw	high Network_Manage@now
  3428  0078FE  6E03               	movwf	time@t+1,c
  3429  007900  EC59  F03E         	call	_time	;wreg free
  3430                           
  3431                           ;network.c: 91: if(now >= arpTimer)
  3432  007904  0101               	movlb	1	; () banked
  3433  007906  51D0               	movf	_arpTimer& (0+255),w,b
  3434  007908  5D7F               	subwf	Network_Manage@now& (0+255),w,b
  3435  00790A  51D1               	movf	(_arpTimer+1)& (0+255),w,b
  3436  00790C  5980               	subwfb	(Network_Manage@now+1)& (0+255),w,b
  3437  00790E  51D2               	movf	(_arpTimer+2)& (0+255),w,b
  3438  007910  5981               	subwfb	(Network_Manage@now+2)& (0+255),w,b
  3439  007912  5182               	movf	(Network_Manage@now+3)& (0+255),w,b
  3440  007914  0A80               	xorlw	128
  3441  007916  6F7E               	movwf	??_Network_Manage& (0+255),b
  3442  007918  51D3               	movf	(_arpTimer+3)& (0+255),w,b
  3443  00791A  0A80               	xorlw	128
  3444  00791C  597E               	subwfb	??_Network_Manage& (0+255),w,b
  3445  00791E  E308               	bnc	l10033
  3446                           
  3447                           ; BSR set to: 1
  3448                           ;network.c: 92: {
  3449                           ;network.c: 93: ARPV4_Update();
  3450  007920  EC40  F042         	call	_ARPV4_Update	;wreg free
  3451                           
  3452                           ; BSR set to: 1
  3453                           ;network.c: 94: arpTimer += 10;
  3454  007924  0E0A               	movlw	10
  3455  007926  27D0               	addwf	_arpTimer& (0+255),f,b
  3456  007928  0E00               	movlw	0
  3457  00792A  23D1               	addwfc	(_arpTimer+1)& (0+255),f,b
  3458  00792C  23D2               	addwfc	(_arpTimer+2)& (0+255),f,b
  3459  00792E  23D3               	addwfc	(_arpTimer+3)& (0+255),f,b
  3460  007930                     l10033:
  3461                           
  3462                           ; BSR set to: 1
  3463                           ;network.c: 95: }
  3464                           ;network.c: 96: if(now > nowPv)
  3465  007930  517F               	movf	Network_Manage@now& (0+255),w,b
  3466  007932  0102               	movlb	2	; () banked
  3467  007934  5D1E               	subwf	Network_Manage@nowPv& (0+255),w,b
  3468  007936  0101               	movlb	1	; () banked
  3469  007938  5180               	movf	(Network_Manage@now+1)& (0+255),w,b
  3470  00793A  0102               	movlb	2	; () banked
  3471  00793C  591F               	subwfb	(Network_Manage@nowPv+1)& (0+255),w,b
  3472  00793E  0101               	movlb	1	; () banked
  3473  007940  5181               	movf	(Network_Manage@now+2)& (0+255),w,b
  3474  007942  0102               	movlb	2	; () banked
  3475  007944  5920               	subwfb	(Network_Manage@nowPv+2)& (0+255),w,b
  3476  007946  5121               	movf	(Network_Manage@nowPv+3)& (0+255),w,b
  3477  007948  0A80               	xorlw	128
  3478  00794A  0101               	movlb	1	; () banked
  3479  00794C  6F7E               	movwf	??_Network_Manage& (0+255),b
  3480  00794E  5182               	movf	(Network_Manage@now+3)& (0+255),w,b
  3481  007950  0A80               	xorlw	128
  3482  007952  597E               	subwfb	??_Network_Manage& (0+255),w,b
  3483  007954  E204               	bc	l10037
  3484                           
  3485                           ; BSR set to: 1
  3486                           ;network.c: 97: {
  3487                           ;network.c: 98: DHCP_Manage();
  3488  007956  EC26  F03B         	call	_DHCP_Manage	;wreg free
  3489                           
  3490                           ;network.c: 100: TCP_Update();
  3491  00795A  ECB9  F02B         	call	_TCP_Update	;wreg free
  3492  00795E                     l10037:
  3493                           
  3494                           ;network.c: 101: }
  3495                           ;network.c: 102: nowPv = now;
  3496  00795E  C17F  F21E         	movff	Network_Manage@now,Network_Manage@nowPv
  3497  007962  C180  F21F         	movff	Network_Manage@now+1,Network_Manage@nowPv+1
  3498  007966  C181  F220         	movff	Network_Manage@now+2,Network_Manage@nowPv+2
  3499  00796A  C182  F221         	movff	Network_Manage@now+3,Network_Manage@nowPv+3
  3500  00796E  0012               	return		;funcret
  3501  007970                     __end_of_Network_Manage:
  3502                           	opt stack 0
  3503                           tblptru	equ	0xFF8
  3504                           tblptrh	equ	0xFF7
  3505                           tblptrl	equ	0xFF6
  3506                           tablat	equ	0xFF5
  3507                           prodh	equ	0xFF4
  3508                           prodl	equ	0xFF3
  3509                           intcon	equ	0xFF2
  3510                           intcon2	equ	0xFF1
  3511                           postinc0	equ	0xFEE
  3512                           wreg	equ	0xFE8
  3513                           indf2	equ	0xFDF
  3514                           fsr2h	equ	0xFDA
  3515                           fsr2l	equ	0xFD9
  3516                           status	equ	0xFD8
  3517                           
  3518 ;; *************** function _TCP_Update *****************
  3519 ;; Defined at:
  3520 ;;		line 1417 in file "../../TCPIP Library/source/tcpv4.c"
  3521 ;; Parameters:    Size  Location     Type
  3522 ;;		None
  3523 ;; Auto vars:     Size  Location     Type
  3524 ;;  tcbPtr          2  126[BANK0 ] PTR struct .
  3525 ;;		 -> ?_sprintf(2), ?_printf(2), main@str(32), STR_5(13), 
  3526 ;;		 -> STR_4(17), DEMO_TCP_EchoServer@port7TCB(55), Network_Read@debug_str(80), NULL(0), 
  3527 ;;  count           2  124[BANK0 ] int 
  3528 ;; Return value:  Size  Location     Type
  3529 ;;                  1    wreg      void 
  3530 ;; Registers used:
  3531 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3532 ;; Tracked objects:
  3533 ;;		On entry : E/1
  3534 ;;		On exit  : F/0
  3535 ;;		Unchanged: 0/0
  3536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3538 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3539 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3540 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3541 ;;Total ram usage:       12 bytes
  3542 ;; Hardware stack levels used:    1
  3543 ;; Hardware stack levels required when called:   12
  3544 ;; This function calls:
  3545 ;;		_TCP_FiniteStateMachine
  3546 ;; This function is called by:
  3547 ;;		_Network_Manage
  3548 ;; This function uses a non-reentrant model
  3549 ;;
  3550                           
  3551                           	psect	text21
  3552  005772                     __ptext21:
  3553                           	opt stack 0
  3554  005772                     _TCP_Update:
  3555                           	opt stack 17
  3556                           
  3557                           ;tcpv4.c: 1421: int count = 0;
  3558                           
  3559                           ;incstack = 0
  3560  005772  0100               	movlb	0	; () banked
  3561  005774  6BDC               	clrf	TCP_Update@count& (0+255),b
  3562  005776  6BDD               	clrf	(TCP_Update@count+1)& (0+255),b
  3563                           
  3564                           ; BSR set to: 0
  3565                           ;tcpv4.c: 1425: nextSequenceNumber++;
  3566  005778  0102               	movlb	2	; () banked
  3567  00577A  2B2A               	incf	_nextSequenceNumber& (0+255),f,b
  3568  00577C  0E00               	movlw	0
  3569  00577E  232B               	addwfc	(_nextSequenceNumber+1)& (0+255),f,b
  3570  005780  232C               	addwfc	(_nextSequenceNumber+2)& (0+255),f,b
  3571  005782  232D               	addwfc	(_nextSequenceNumber+3)& (0+255),f,b
  3572                           
  3573                           ; BSR set to: 2
  3574                           ;tcpv4.c: 1428: nextAvailablePort = nextAvailablePort + 1;
  3575  005784  0101               	movlb	1	; () banked
  3576  005786  4B9C               	infsnz	_nextAvailablePort& (0+255),f,b
  3577  005788  2B9D               	incf	(_nextAvailablePort+1)& (0+255),f,b
  3578                           
  3579                           ; BSR set to: 1
  3580                           ;tcpv4.c: 1429: if (nextAvailablePort < (1024u))
  3581  00578A  0E04               	movlw	4
  3582  00578C  5D9D               	subwf	(_nextAvailablePort+1)& (0+255),w,b
  3583  00578E  E203               	bc	l9775
  3584                           
  3585                           ; BSR set to: 1
  3586                           ;tcpv4.c: 1430: {
  3587                           ;tcpv4.c: 1431: nextAvailablePort = (1024u);
  3588  005790  0E04               	movlw	4
  3589  005792  6F9D               	movwf	(_nextAvailablePort+1)& (0+255),b
  3590  005794  6B9C               	clrf	_nextAvailablePort& (0+255),b
  3591  005796                     l9775:
  3592                           
  3593                           ; BSR set to: 1
  3594                           ;tcpv4.c: 1432: }
  3595                           ;tcpv4.c: 1435: tcbPtr = tcbList;
  3596  005796  C1A2  F0DE         	movff	_tcbList,TCP_Update@tcbPtr
  3597  00579A  C1A3  F0DF         	movff	_tcbList+1,TCP_Update@tcbPtr+1
  3598                           
  3599                           ;tcpv4.c: 1436: while((tcbPtr != (0)) && (count < tcbListSize))
  3600  00579E  D173               	goto	l9795
  3601  0057A0                     l9777:
  3602                           
  3603                           ; BSR set to: 0
  3604                           ;tcpv4.c: 1437: {
  3605                           ;tcpv4.c: 1438: if (tcbPtr->timeout > 0)
  3606  0057A0  0E30               	movlw	48
  3607  0057A2  25DE               	addwf	TCP_Update@tcbPtr& (0+255),w,b
  3608  0057A4  6FD4               	movwf	??_TCP_Update& (0+255),b
  3609  0057A6  0E00               	movlw	0
  3610  0057A8  21DF               	addwfc	(TCP_Update@tcbPtr+1)& (0+255),w,b
  3611  0057AA  6FD5               	movwf	(??_TCP_Update+1)& (0+255),b
  3612  0057AC  C0D4  FFF6         	movff	??_TCP_Update,tblptrl
  3613  0057B0  C0D5  FFF7         	movff	??_TCP_Update+1,tblptrh
  3614  0057B4  0E00               	movlw	low (__smallconst shr (0+16))
  3615  0057B6  6EF8               	movwf	tblptru,c
  3616  0057B8  0E0F               	movlw	(high __ramtop+-1)
  3617  0057BA  64F7               	cpfsgt	tblptrh,c
  3618  0057BC  D007               	bra	u14837
  3619  0057BE  0009               	tblrd		*+
  3620  0057C0  CFF5 F0D6          	movff	tablat,??_TCP_Update+2
  3621  0057C4  0009               	tblrd		*+
  3622  0057C6  CFF5 F0D7          	movff	tablat,??_TCP_Update+3
  3623  0057CA  D008               	bra	u14830
  3624  0057CC                     u14837:
  3625  0057CC  CFF6 FFE9          	movff	tblptrl,fsr0l
  3626  0057D0  CFF7 FFEA          	movff	tblptrh,fsr0h
  3627  0057D4  CFEE F0D6          	movff	postinc0,??_TCP_Update+2
  3628  0057D8  CFEE F0D7          	movff	postinc0,??_TCP_Update+3
  3629  0057DC                     u14830:
  3630  0057DC  0100               	movlb	0	; () banked
  3631  0057DE  51D6               	movf	(??_TCP_Update+2)& (0+255),w,b
  3632  0057E0  11D7               	iorwf	(??_TCP_Update+3)& (0+255),w,b
  3633  0057E2  E101 D12E          	bz	l9791
  3634                           
  3635                           ; BSR set to: 0
  3636                           ;tcpv4.c: 1439: {
  3637                           ;tcpv4.c: 1440: ;
  3638                           ;tcpv4.c: 1441: tcbPtr->timeout = tcbPtr->timeout - 1;
  3639  0057E6  69D4               	setf	??_TCP_Update& (0+255),b
  3640  0057E8  69D5               	setf	(??_TCP_Update+1)& (0+255),b
  3641  0057EA  0E30               	movlw	48
  3642  0057EC  25DE               	addwf	TCP_Update@tcbPtr& (0+255),w,b
  3643  0057EE  6FD6               	movwf	(??_TCP_Update+2)& (0+255),b
  3644  0057F0  0E00               	movlw	0
  3645  0057F2  21DF               	addwfc	(TCP_Update@tcbPtr+1)& (0+255),w,b
  3646  0057F4  6FD7               	movwf	(??_TCP_Update+3)& (0+255),b
  3647  0057F6  C0D6  FFF6         	movff	??_TCP_Update+2,tblptrl
  3648  0057FA  C0D7  FFF7         	movff	??_TCP_Update+3,tblptrh
  3649  0057FE  0E00               	movlw	low (__smallconst shr (0+16))
  3650  005800  6EF8               	movwf	tblptru,c
  3651  005802  0E0F               	movlw	(high __ramtop+-1)
  3652  005804  64F7               	cpfsgt	tblptrh,c
  3653  005806  D007               	bra	u14857
  3654  005808  0009               	tblrd		*+
  3655  00580A  CFF5 F0D8          	movff	tablat,??_TCP_Update+4
  3656  00580E  0009               	tblrd		*+
  3657  005810  CFF5 F0D9          	movff	tablat,??_TCP_Update+5
  3658  005814  D008               	bra	u14850
  3659  005816                     u14857:
  3660  005816  CFF6 FFE9          	movff	tblptrl,fsr0l
  3661  00581A  CFF7 FFEA          	movff	tblptrh,fsr0h
  3662  00581E  CFEE F0D8          	movff	postinc0,??_TCP_Update+4
  3663  005822  CFEE F0D9          	movff	postinc0,??_TCP_Update+5
  3664  005826                     u14850:
  3665  005826  0100               	movlb	0	; () banked
  3666  005828  51D4               	movf	??_TCP_Update& (0+255),w,b
  3667  00582A  27D8               	addwf	(??_TCP_Update+4)& (0+255),f,b
  3668  00582C  51D5               	movf	(??_TCP_Update+1)& (0+255),w,b
  3669  00582E  23D9               	addwfc	(??_TCP_Update+5)& (0+255),f,b
  3670  005830  0E30               	movlw	48
  3671  005832  25DE               	addwf	TCP_Update@tcbPtr& (0+255),w,b
  3672  005834  6FDA               	movwf	(??_TCP_Update+6)& (0+255),b
  3673  005836  0E00               	movlw	0
  3674  005838  21DF               	addwfc	(TCP_Update@tcbPtr+1)& (0+255),w,b
  3675  00583A  6FDB               	movwf	(??_TCP_Update+7)& (0+255),b
  3676  00583C  C0DA  FFF6         	movff	??_TCP_Update+6,tblptrl
  3677  005840  C0DB  FFF7         	movff	??_TCP_Update+7,tblptrh
  3678  005844  0E00               	movlw	low (__smallconst shr (0+16))
  3679  005846  6EF8               	movwf	tblptru,c
  3680  005848  0E0F               	movlw	(high __ramtop+-1)
  3681  00584A  64F7               	cpfsgt	tblptrh,c
  3682  00584C  D007               	bra	u14867
  3683  00584E  C0D8  FFF5         	movff	??_TCP_Update+4,tablat
  3684  005852  000D               	tblwt		*+
  3685  005854  C0D9  FFF5         	movff	??_TCP_Update+5,tablat
  3686  005858  000C               	tblwt		*
  3687  00585A  D008               	bra	u14860
  3688  00585C                     u14867:
  3689  00585C  CFF6 FFE9          	movff	tblptrl,fsr0l
  3690  005860  CFF7 FFEA          	movff	tblptrh,fsr0h
  3691  005864  C0D8  FFEE         	movff	??_TCP_Update+4,postinc0
  3692  005868  C0D9  FFEF         	movff	??_TCP_Update+5,indf0
  3693  00586C                     u14860:
  3694                           
  3695                           ;tcpv4.c: 1443: if (tcbPtr->timeout == 0)
  3696  00586C  0E30               	movlw	48
  3697  00586E  0100               	movlb	0	; () banked
  3698  005870  25DE               	addwf	TCP_Update@tcbPtr& (0+255),w,b
  3699  005872  6FD4               	movwf	??_TCP_Update& (0+255),b
  3700  005874  0E00               	movlw	0
  3701  005876  21DF               	addwfc	(TCP_Update@tcbPtr+1)& (0+255),w,b
  3702  005878  6FD5               	movwf	(??_TCP_Update+1)& (0+255),b
  3703  00587A  C0D4  FFF6         	movff	??_TCP_Update,tblptrl
  3704  00587E  C0D5  FFF7         	movff	??_TCP_Update+1,tblptrh
  3705  005882  0E00               	movlw	low (__smallconst shr (0+16))
  3706  005884  6EF8               	movwf	tblptru,c
  3707  005886  0E0F               	movlw	(high __ramtop+-1)
  3708  005888  64F7               	cpfsgt	tblptrh,c
  3709  00588A  D007               	bra	u14877
  3710  00588C  0009               	tblrd		*+
  3711  00588E  CFF5 F0D6          	movff	tablat,??_TCP_Update+2
  3712  005892  0009               	tblrd		*+
  3713  005894  CFF5 F0D7          	movff	tablat,??_TCP_Update+3
  3714  005898  D008               	bra	u14870
  3715  00589A                     u14877:
  3716  00589A  CFF6 FFE9          	movff	tblptrl,fsr0l
  3717  00589E  CFF7 FFEA          	movff	tblptrh,fsr0h
  3718  0058A2  CFEE F0D6          	movff	postinc0,??_TCP_Update+2
  3719  0058A6  CFEE F0D7          	movff	postinc0,??_TCP_Update+3
  3720  0058AA                     u14870:
  3721  0058AA  0100               	movlb	0	; () banked
  3722  0058AC  51D6               	movf	(??_TCP_Update+2)& (0+255),w,b
  3723  0058AE  11D7               	iorwf	(??_TCP_Update+3)& (0+255),w,b
  3724  0058B0  E001 D0C7          	bnz	l9791
  3725                           
  3726                           ; BSR set to: 0
  3727                           ;tcpv4.c: 1444: {
  3728                           ;tcpv4.c: 1445: if (tcbPtr->timeoutsCount > 0)
  3729  0058B4  0E34               	movlw	52
  3730  0058B6  25DE               	addwf	TCP_Update@tcbPtr& (0+255),w,b
  3731  0058B8  6FD4               	movwf	??_TCP_Update& (0+255),b
  3732  0058BA  0E00               	movlw	0
  3733  0058BC  21DF               	addwfc	(TCP_Update@tcbPtr+1)& (0+255),w,b
  3734  0058BE  6FD5               	movwf	(??_TCP_Update+1)& (0+255),b
  3735  0058C0  C0D4  FFF6         	movff	??_TCP_Update,tblptrl
  3736  0058C4  C0D5  FFF7         	movff	??_TCP_Update+1,tblptrh
  3737  0058C8  0E00               	movlw	low (__smallconst shr (0+16))
  3738  0058CA  6EF8               	movwf	tblptru,c
  3739  0058CC  0E0F               	movlw	(high __ramtop+-1)
  3740  0058CE  64F7               	cpfsgt	tblptrh,c
  3741  0058D0  D003               	bra	u14897
  3742  0058D2  0008               	tblrd		*
  3743  0058D4  50F5               	movf	tablat,w,c
  3744  0058D6  D005               	bra	u14890
  3745  0058D8                     u14897:
  3746  0058D8  CFF6 FFE9          	movff	tblptrl,fsr0l
  3747  0058DC  CFF7 FFEA          	movff	tblptrh,fsr0h
  3748  0058E0  50EF               	movf	indf0,w,c
  3749  0058E2                     u14890:
  3750  0058E2  0900               	iorlw	0
  3751  0058E4  E101 D0AD          	bz	l9791
  3752                           
  3753                           ;tcpv4.c: 1446: {
  3754                           ;tcpv4.c: 1448: if (tcbPtr->connectionEvent == NOP)
  3755  0058E8  0E2B               	movlw	43
  3756  0058EA  0100               	movlb	0	; () banked
  3757  0058EC  25DE               	addwf	TCP_Update@tcbPtr& (0+255),w,b
  3758  0058EE  6FD4               	movwf	??_TCP_Update& (0+255),b
  3759  0058F0  0E00               	movlw	0
  3760  0058F2  21DF               	addwfc	(TCP_Update@tcbPtr+1)& (0+255),w,b
  3761  0058F4  6FD5               	movwf	(??_TCP_Update+1)& (0+255),b
  3762  0058F6  C0D4  FFF6         	movff	??_TCP_Update,tblptrl
  3763  0058FA  C0D5  FFF7         	movff	??_TCP_Update+1,tblptrh
  3764  0058FE  0E00               	movlw	low (__smallconst shr (0+16))
  3765  005900  6EF8               	movwf	tblptru,c
  3766  005902  0E0F               	movlw	(high __ramtop+-1)
  3767  005904  64F7               	cpfsgt	tblptrh,c
  3768  005906  D003               	bra	u14917
  3769  005908  0008               	tblrd		*
  3770  00590A  50F5               	movf	tablat,w,c
  3771  00590C  D005               	bra	u14910
  3772  00590E                     u14917:
  3773  00590E  CFF6 FFE9          	movff	tblptrl,fsr0l
  3774  005912  CFF7 FFEA          	movff	tblptrh,fsr0h
  3775  005916  50EF               	movf	indf0,w,c
  3776  005918                     u14910:
  3777  005918  0A0D               	xorlw	13
  3778  00591A  E001 D092          	bnz	l9791
  3779                           
  3780                           ;tcpv4.c: 1449: {
  3781                           ;tcpv4.c: 1450: tcbPtr->timeout = tcbPtr->timeoutReloadValue;
  3782  00591E  0E32               	movlw	50
  3783  005920  0100               	movlb	0	; () banked
  3784  005922  25DE               	addwf	TCP_Update@tcbPtr& (0+255),w,b
  3785  005924  6FD4               	movwf	??_TCP_Update& (0+255),b
  3786  005926  0E00               	movlw	0
  3787  005928  21DF               	addwfc	(TCP_Update@tcbPtr+1)& (0+255),w,b
  3788  00592A  6FD5               	movwf	(??_TCP_Update+1)& (0+255),b
  3789  00592C  C0D4  FFF6         	movff	??_TCP_Update,tblptrl
  3790  005930  C0D5  FFF7         	movff	??_TCP_Update+1,tblptrh
  3791  005934  0E00               	movlw	low (__smallconst shr (0+16))
  3792  005936  6EF8               	movwf	tblptru,c
  3793  005938  0E0F               	movlw	(high __ramtop+-1)
  3794  00593A  64F7               	cpfsgt	tblptrh,c
  3795  00593C  D007               	bra	u14937
  3796  00593E  0009               	tblrd		*+
  3797  005940  CFF5 F0D6          	movff	tablat,??_TCP_Update+2
  3798  005944  0009               	tblrd		*+
  3799  005946  CFF5 F0D7          	movff	tablat,??_TCP_Update+3
  3800  00594A  D008               	bra	u14930
  3801  00594C                     u14937:
  3802  00594C  CFF6 FFE9          	movff	tblptrl,fsr0l
  3803  005950  CFF7 FFEA          	movff	tblptrh,fsr0h
  3804  005954  CFEE F0D6          	movff	postinc0,??_TCP_Update+2
  3805  005958  CFEE F0D7          	movff	postinc0,??_TCP_Update+3
  3806  00595C                     u14930:
  3807  00595C  0E30               	movlw	48
  3808  00595E  0100               	movlb	0	; () banked
  3809  005960  25DE               	addwf	TCP_Update@tcbPtr& (0+255),w,b
  3810  005962  6FD8               	movwf	(??_TCP_Update+4)& (0+255),b
  3811  005964  0E00               	movlw	0
  3812  005966  21DF               	addwfc	(TCP_Update@tcbPtr+1)& (0+255),w,b
  3813  005968  6FD9               	movwf	(??_TCP_Update+5)& (0+255),b
  3814  00596A  C0D8  FFF6         	movff	??_TCP_Update+4,tblptrl
  3815  00596E  C0D9  FFF7         	movff	??_TCP_Update+5,tblptrh
  3816  005972  0E00               	movlw	low (__smallconst shr (0+16))
  3817  005974  6EF8               	movwf	tblptru,c
  3818  005976  0E0F               	movlw	(high __ramtop+-1)
  3819  005978  64F7               	cpfsgt	tblptrh,c
  3820  00597A  D007               	bra	u14947
  3821  00597C  C0D6  FFF5         	movff	??_TCP_Update+2,tablat
  3822  005980  000D               	tblwt		*+
  3823  005982  C0D7  FFF5         	movff	??_TCP_Update+3,tablat
  3824  005986  000C               	tblwt		*
  3825  005988  D008               	bra	u14940
  3826  00598A                     u14947:
  3827  00598A  CFF6 FFE9          	movff	tblptrl,fsr0l
  3828  00598E  CFF7 FFEA          	movff	tblptrh,fsr0h
  3829  005992  C0D6  FFEE         	movff	??_TCP_Update+2,postinc0
  3830  005996  C0D7  FFEF         	movff	??_TCP_Update+3,indf0
  3831  00599A                     u14940:
  3832                           
  3833                           ;tcpv4.c: 1451: tcbPtr->timeoutsCount = tcbPtr->timeoutsCount - 1;
  3834  00599A  0E34               	movlw	52
  3835  00599C  0100               	movlb	0	; () banked
  3836  00599E  25DE               	addwf	TCP_Update@tcbPtr& (0+255),w,b
  3837  0059A0  6FD4               	movwf	??_TCP_Update& (0+255),b
  3838  0059A2  0E00               	movlw	0
  3839  0059A4  21DF               	addwfc	(TCP_Update@tcbPtr+1)& (0+255),w,b
  3840  0059A6  6FD5               	movwf	(??_TCP_Update+1)& (0+255),b
  3841  0059A8  C0D4  FFF6         	movff	??_TCP_Update,tblptrl
  3842  0059AC  C0D5  FFF7         	movff	??_TCP_Update+1,tblptrh
  3843  0059B0  0E00               	movlw	low (__smallconst shr (0+16))
  3844  0059B2  6EF8               	movwf	tblptru,c
  3845  0059B4  0E0F               	movlw	(high __ramtop+-1)
  3846  0059B6  64F7               	cpfsgt	tblptrh,c
  3847  0059B8  D003               	bra	u14957
  3848  0059BA  0008               	tblrd		*
  3849  0059BC  50F5               	movf	tablat,w,c
  3850  0059BE  D005               	bra	u14950
  3851  0059C0                     u14957:
  3852  0059C0  CFF6 FFE9          	movff	tblptrl,fsr0l
  3853  0059C4  CFF7 FFEA          	movff	tblptrh,fsr0h
  3854  0059C8  50EF               	movf	indf0,w,c
  3855  0059CA                     u14950:
  3856  0059CA  0100               	movlb	0	; () banked
  3857  0059CC  6FD6               	movwf	(??_TCP_Update+2)& (0+255),b
  3858  0059CE  07D6               	decf	(??_TCP_Update+2)& (0+255),f,b
  3859  0059D0  0E34               	movlw	52
  3860  0059D2  25DE               	addwf	TCP_Update@tcbPtr& (0+255),w,b
  3861  0059D4  6FD7               	movwf	(??_TCP_Update+3)& (0+255),b
  3862  0059D6  0E00               	movlw	0
  3863  0059D8  21DF               	addwfc	(TCP_Update@tcbPtr+1)& (0+255),w,b
  3864  0059DA  6FD8               	movwf	(??_TCP_Update+4)& (0+255),b
  3865  0059DC  C0D7  FFF6         	movff	??_TCP_Update+3,tblptrl
  3866  0059E0  C0D8  FFF7         	movff	??_TCP_Update+4,tblptrh
  3867  0059E4  0E00               	movlw	low (__smallconst shr (0+16))
  3868  0059E6  6EF8               	movwf	tblptru,c
  3869  0059E8  0E0F               	movlw	(high __ramtop+-1)
  3870  0059EA  64F7               	cpfsgt	tblptrh,c
  3871  0059EC  D004               	bra	u14967
  3872  0059EE  C0D6  FFF5         	movff	??_TCP_Update+2,tablat
  3873  0059F2  000C               	tblwt		*
  3874  0059F4  D006               	bra	u14960
  3875  0059F6                     u14967:
  3876  0059F6  CFF6 FFE9          	movff	tblptrl,fsr0l
  3877  0059FA  CFF7 FFEA          	movff	tblptrh,fsr0h
  3878  0059FE  C0D6  FFEF         	movff	??_TCP_Update+2,indf0
  3879  005A02                     u14960:
  3880                           
  3881                           ;tcpv4.c: 1452: tcbPtr->connectionEvent = TIMEOUT;
  3882  005A02  0E2B               	movlw	43
  3883  005A04  0100               	movlb	0	; () banked
  3884  005A06  25DE               	addwf	TCP_Update@tcbPtr& (0+255),w,b
  3885  005A08  6FD4               	movwf	??_TCP_Update& (0+255),b
  3886  005A0A  0E00               	movlw	0
  3887  005A0C  21DF               	addwfc	(TCP_Update@tcbPtr+1)& (0+255),w,b
  3888  005A0E  6FD5               	movwf	(??_TCP_Update+1)& (0+255),b
  3889  005A10  C0D4  FFF6         	movff	??_TCP_Update,tblptrl
  3890  005A14  C0D5  FFF7         	movff	??_TCP_Update+1,tblptrh
  3891  005A18  0E00               	movlw	low (__smallconst shr (0+16))
  3892  005A1A  6EF8               	movwf	tblptru,c
  3893  005A1C  0E0F               	movlw	(high __ramtop+-1)
  3894  005A1E  64F7               	cpfsgt	tblptrh,c
  3895  005A20  D004               	bra	u14977
  3896  005A22  0E0C               	movlw	12
  3897  005A24  6EF5               	movwf	tablat,c
  3898  005A26  000C               	tblwt		*
  3899  005A28  D006               	bra	u14970
  3900  005A2A                     u14977:
  3901  005A2A  CFF6 FFE9          	movff	tblptrl,fsr0l
  3902  005A2E  CFF7 FFEA          	movff	tblptrh,fsr0h
  3903  005A32  0E0C               	movlw	12
  3904  005A34  6EEF               	movwf	indf0,c
  3905  005A36                     u14970:
  3906                           
  3907                           ;tcpv4.c: 1453: currentTCB = tcbPtr;
  3908  005A36  C0DE  F0FE         	movff	TCP_Update@tcbPtr,_currentTCB
  3909  005A3A  C0DF  F0FF         	movff	TCP_Update@tcbPtr+1,_currentTCB+1
  3910                           
  3911                           ;tcpv4.c: 1454: TCP_FiniteStateMachine();
  3912  005A3E  EC55  F008         	call	_TCP_FiniteStateMachine	;wreg free
  3913  005A42                     l9791:
  3914                           
  3915                           ;tcpv4.c: 1455: }
  3916                           ;tcpv4.c: 1456: }
  3917                           ;tcpv4.c: 1457: }
  3918                           ;tcpv4.c: 1458: }
  3919                           ;tcpv4.c: 1459: tcbPtr = tcbPtr->nextTCB;
  3920  005A42  0E2C               	movlw	44
  3921  005A44  0100               	movlb	0	; () banked
  3922  005A46  25DE               	addwf	TCP_Update@tcbPtr& (0+255),w,b
  3923  005A48  6FD4               	movwf	??_TCP_Update& (0+255),b
  3924  005A4A  0E00               	movlw	0
  3925  005A4C  21DF               	addwfc	(TCP_Update@tcbPtr+1)& (0+255),w,b
  3926  005A4E  6FD5               	movwf	(??_TCP_Update+1)& (0+255),b
  3927  005A50  C0D4  FFF6         	movff	??_TCP_Update,tblptrl
  3928  005A54  C0D5  FFF7         	movff	??_TCP_Update+1,tblptrh
  3929  005A58  0E00               	movlw	low (__smallconst shr (0+16))
  3930  005A5A  6EF8               	movwf	tblptru,c
  3931  005A5C  0E0F               	movlw	(high __ramtop+-1)
  3932  005A5E  64F7               	cpfsgt	tblptrh,c
  3933  005A60  D007               	bra	u14987
  3934  005A62  0009               	tblrd		*+
  3935  005A64  CFF5 F0DE          	movff	tablat,TCP_Update@tcbPtr
  3936  005A68  0009               	tblrd		*+
  3937  005A6A  CFF5 F0DF          	movff	tablat,TCP_Update@tcbPtr+1
  3938  005A6E  D008               	bra	u14980
  3939  005A70                     u14987:
  3940  005A70  CFF6 FFE9          	movff	tblptrl,fsr0l
  3941  005A74  CFF7 FFEA          	movff	tblptrh,fsr0h
  3942  005A78  CFEE F0DE          	movff	postinc0,TCP_Update@tcbPtr
  3943  005A7C  CFEE F0DF          	movff	postinc0,TCP_Update@tcbPtr+1
  3944  005A80                     u14980:
  3945                           
  3946                           ;tcpv4.c: 1460: count ++;
  3947  005A80  0100               	movlb	0	; () banked
  3948  005A82  4BDC               	infsnz	TCP_Update@count& (0+255),f,b
  3949  005A84  2BDD               	incf	(TCP_Update@count+1)& (0+255),f,b
  3950  005A86                     l9795:
  3951  005A86  0100               	movlb	0	; () banked
  3952  005A88  51DE               	movf	TCP_Update@tcbPtr& (0+255),w,b
  3953  005A8A  11DF               	iorwf	(TCP_Update@tcbPtr+1)& (0+255),w,b
  3954  005A8C  B4D8               	btfsc	status,2,c
  3955  005A8E  0012               	return	
  3956                           
  3957                           ; BSR set to: 0
  3958  005A90  C1A7  F0D4         	movff	_tcbListSize,??_TCP_Update
  3959  005A94  6BD5               	clrf	(??_TCP_Update+1)& (0+255),b
  3960  005A96  BFD4               	btfsc	??_TCP_Update& (0+255),7,b
  3961  005A98  07D5               	decf	(??_TCP_Update+1)& (0+255),f,b
  3962  005A9A  51D4               	movf	??_TCP_Update& (0+255),w,b
  3963  005A9C  5DDC               	subwf	TCP_Update@count& (0+255),w,b
  3964  005A9E  51DD               	movf	(TCP_Update@count+1)& (0+255),w,b
  3965  005AA0  0A80               	xorlw	128
  3966  005AA2  6FD6               	movwf	(??_TCP_Update+2)& (0+255),b
  3967  005AA4  51D5               	movf	(??_TCP_Update+1)& (0+255),w,b
  3968  005AA6  0A80               	xorlw	128
  3969  005AA8  59D6               	subwfb	(??_TCP_Update+2)& (0+255),w,b
  3970  005AAA  E201 D679          	bnc	l9777
  3971                           
  3972                           ; BSR set to: 0
  3973  005AAE  0012               	return		;funcret
  3974  005AB0                     __end_of_TCP_Update:
  3975                           	opt stack 0
  3976                           tblptru	equ	0xFF8
  3977                           tblptrh	equ	0xFF7
  3978                           tblptrl	equ	0xFF6
  3979                           tablat	equ	0xFF5
  3980                           prodh	equ	0xFF4
  3981                           prodl	equ	0xFF3
  3982                           intcon	equ	0xFF2
  3983                           intcon2	equ	0xFF1
  3984                           indf0	equ	0xFEF
  3985                           postinc0	equ	0xFEE
  3986                           fsr0h	equ	0xFEA
  3987                           fsr0l	equ	0xFE9
  3988                           wreg	equ	0xFE8
  3989                           indf2	equ	0xFDF
  3990                           fsr2h	equ	0xFDA
  3991                           fsr2l	equ	0xFD9
  3992                           status	equ	0xFD8
  3993                           
  3994 ;; *************** function _Network_Read *****************
  3995 ;; Defined at:
  3996 ;;		line 105 in file "../../TCPIP Library/source/network.c"
  3997 ;; Parameters:    Size  Location     Type
  3998 ;;		None
  3999 ;; Auto vars:     Size  Location     Type
  4000 ;;  debug_str      80   32[BANK1 ] unsigned char [80]
  4001 ;;  header         14  112[BANK1 ] struct .
  4002 ;; Return value:  Size  Location     Type
  4003 ;;                  1    wreg      void 
  4004 ;; Registers used:
  4005 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  4006 ;; Tracked objects:
  4007 ;;		On entry : 0/1
  4008 ;;		On exit  : 0/0
  4009 ;;		Unchanged: 0/0
  4010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4012 ;;      Locals:         0       0      94       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4013 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4014 ;;      Totals:         0       0      98       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4015 ;;Total ram usage:       98 bytes
  4016 ;; Hardware stack levels used:    1
  4017 ;; Hardware stack levels required when called:   14
  4018 ;; This function calls:
  4019 ;;		_ARPV4_Packet
  4020 ;;		_ETH_Flush
  4021 ;;		_ETH_NextPacketUpdate
  4022 ;;		_ETH_ReadBlock
  4023 ;;		_IPV4_Packet
  4024 ;;		_sprintf
  4025 ;; This function is called by:
  4026 ;;		_Network_Manage
  4027 ;; This function uses a non-reentrant model
  4028 ;;
  4029                           
  4030                           	psect	text22
  4031  0071D2                     __ptext22:
  4032                           	opt stack 0
  4033  0071D2                     _Network_Read:
  4034                           	opt stack 15
  4035                           
  4036                           ;network.c: 107: ethernetFrame_t header;
  4037                           ;network.c: 108: char debug_str[80];
  4038                           ;network.c: 110: if(ethData.pktReady)
  4039                           
  4040                           ; BSR set to: 0
  4041                           ;incstack = 0
  4042  0071D2  0101               	movlb	1	; () banked
  4043  0071D4  A383               	btfss	_ethData& (0+255),1,b	;volatile
  4044  0071D6  0012               	return	
  4045                           
  4046                           ; BSR set to: 1
  4047                           ;network.c: 111: {
  4048                           ;network.c: 112: ETH_NextPacketUpdate();
  4049  0071D8  EC67  F03D         	call	_ETH_NextPacketUpdate	;wreg free
  4050                           
  4051                           ; BSR set to: 2
  4052                           ;network.c: 113: ETH_ReadBlock((char *)&header, sizeof(header));
  4053  0071DC  0E70               	movlw	low Network_Read@header
  4054  0071DE  6E03               	movwf	ETH_ReadBlock@data,c
  4055  0071E0  0E01               	movlw	high Network_Read@header
  4056  0071E2  6E04               	movwf	ETH_ReadBlock@data+1,c
  4057  0071E4  6A06               	clrf	ETH_ReadBlock@length+1,c
  4058  0071E6  0E0E               	movlw	14
  4059  0071E8  6E05               	movwf	ETH_ReadBlock@length,c
  4060  0071EA  ECDB  F03A         	call	_ETH_ReadBlock	;wreg free
  4061                           
  4062                           ; BSR set to: 1
  4063                           ;network.c: 114: header.id.type = ((((uint16_t)header.id.type & (uint16_t)0xFF00) >> 8) 
      +                          | (((uint16_t)header.id.type & (uint16_t)0x00FF) << 8));
  4064  0071EE  517C               	movf	(Network_Read@header+12)& (0+255),w,b
  4065  0071F0  6F1D               	movwf	(??_Network_Read+1)& (0+255),b
  4066  0071F2  6B1C               	clrf	??_Network_Read& (0+255),b
  4067  0071F4  EE21  F07C         	lfsr	2,Network_Read@header+12
  4068  0071F8  CFDE F11E          	movff	postinc2,??_Network_Read+2
  4069  0071FC  CFDD F11F          	movff	postdec2,??_Network_Read+3
  4070  007200  C11F  F11E         	movff	??_Network_Read+3,??_Network_Read+2
  4071  007204  6B1F               	clrf	(??_Network_Read+3)& (0+255),b
  4072  007206  6B1F               	clrf	(??_Network_Read+3)& (0+255),b
  4073  007208  511C               	movf	??_Network_Read& (0+255),w,b
  4074  00720A  111E               	iorwf	(??_Network_Read+2)& (0+255),w,b
  4075  00720C  6F7C               	movwf	(Network_Read@header+12)& (0+255),b
  4076  00720E  511D               	movf	(??_Network_Read+1)& (0+255),w,b
  4077  007210  111F               	iorwf	(??_Network_Read+3)& (0+255),w,b
  4078  007212  6F7D               	movwf	(Network_Read@header+13)& (0+255),b
  4079                           
  4080                           ;network.c: 115: switch (header.id.type)
  4081  007214  D01A               	goto	l9749
  4082  007216                     l9741:
  4083                           
  4084                           ; BSR set to: 1
  4085                           ;network.c: 121: ;
  4086                           ;network.c: 122: ARPV4_Packet();
  4087  007216  ECC6  F025         	call	_ARPV4_Packet	;wreg free
  4088                           
  4089                           ;network.c: 123: break;
  4090  00721A  EF6D  F041         	goto	_ETH_Flush
  4091  00721E                     l9743:
  4092                           
  4093                           ; BSR set to: 1
  4094                           ;network.c: 125: ;
  4095                           ;network.c: 126: IPV4_Packet();
  4096  00721E  ECDE  F029         	call	_IPV4_Packet	;wreg free
  4097                           
  4098                           ;network.c: 127: break;
  4099  007222  EF6D  F041         	goto	_ETH_Flush
  4100  007226                     l9745:
  4101                           
  4102                           ; BSR set to: 1
  4103                           ;network.c: 132: sprintf(debug_str,"%x : %d",header.id.type,header.id.length);
  4104  007226  0E20               	movlw	low Network_Read@debug_str
  4105  007228  6E1C               	movwf	sprintf@wh,c
  4106  00722A  0E01               	movlw	high Network_Read@debug_str
  4107  00722C  6E1D               	movwf	sprintf@wh+1,c
  4108  00722E  0E9A               	movlw	low STR_1
  4109  007230  6E1E               	movwf	sprintf@f,c
  4110  007232  C17C  F01F         	movff	Network_Read@header+12,?_sprintf+3
  4111  007236  C17D  F020         	movff	Network_Read@header+13,?_sprintf+4
  4112  00723A  C17C  F021         	movff	Network_Read@header+12,?_sprintf+5
  4113  00723E  C17D  F022         	movff	Network_Read@header+13,?_sprintf+6
  4114  007242  ECD1  F041         	call	_sprintf	;wreg free
  4115                           
  4116                           ;network.c: 133: ;
  4117                           ;network.c: 134: break;
  4118  007246  EF6D  F041         	goto	_ETH_Flush
  4119  00724A                     l9749:
  4120                           
  4121                           ; BSR set to: 1
  4122  00724A  EE21  F07C         	lfsr	2,Network_Read@header+12
  4123  00724E  CFDE F11C          	movff	postinc2,??_Network_Read
  4124  007252  CFDD F11D          	movff	postdec2,??_Network_Read+1
  4125                           
  4126                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 3 sub-sw
      +                          itches
  4127                           ; Switch size 1, requested type "speed"
  4128                           ; Number of cases is 3, Range of values is 8 to 134
  4129                           ; switch strategies available:
  4130                           ; Name         Instructions Cycles
  4131                           ; simple_byte           10     6 (average)
  4132                           ;	Chosen strategy is simple_byte
  4133  007256  511D               	movf	(??_Network_Read+1)& (0+255),w,b
  4134  007258  0A08               	xorlw	8	; case 8
  4135  00725A  E005               	bz	l10213
  4136  00725C  0A89               	xorlw	137	; case 129
  4137  00725E  E008               	bz	l10215
  4138  007260  0A07               	xorlw	7	; case 134
  4139  007262  E008               	bz	l10217
  4140  007264  D7E0               	goto	l9745
  4141  007266                     l10213:
  4142                           
  4143                           ; BSR set to: 1
  4144                           ; Switch size 1, requested type "speed"
  4145                           ; Number of cases is 2, Range of values is 0 to 6
  4146                           ; switch strategies available:
  4147                           ; Name         Instructions Cycles
  4148                           ; simple_byte            7     4 (average)
  4149                           ;	Chosen strategy is simple_byte
  4150  007266  511C               	movf	??_Network_Read& (0+255),w,b
  4151  007268  E0DA               	bz	l9743
  4152  00726A  0A06               	xorlw	6	; case 6
  4153  00726C  E0D4               	bz	l9741
  4154  00726E  D7DB               	goto	l9745
  4155  007270                     l10215:
  4156                           
  4157                           ; BSR set to: 1
  4158                           ; Switch size 1, requested type "speed"
  4159                           ; Number of cases is 1, Range of values is 0 to 0
  4160                           ; switch strategies available:
  4161                           ; Name         Instructions Cycles
  4162                           ; simple_byte            4     3 (average)
  4163                           ;	Chosen strategy is simple_byte
  4164  007270  511C               	movf	??_Network_Read& (0+255),w,b
  4165  007272  D002               	goto	L1
  4166  007274                     l10217:
  4167                           
  4168                           ; BSR set to: 1
  4169                           ; Switch size 1, requested type "speed"
  4170                           ; Number of cases is 1, Range of values is 221 to 221
  4171                           ; switch strategies available:
  4172                           ; Name         Instructions Cycles
  4173                           ; simple_byte            4     3 (average)
  4174                           ;	Chosen strategy is simple_byte
  4175  007274  511C               	movf	??_Network_Read& (0+255),w,b
  4176  007276  0ADD               	xorlw	221	; case 221
  4177  007278                     L1:
  4178  007278  E1D6               	bnz	l9745
  4179                           
  4180                           ;network.c: 136: ETH_Flush();
  4181  00727A  EF6D  F041         	goto	_ETH_Flush	;wreg free
  4182  00727E                     __end_of_Network_Read:
  4183                           	opt stack 0
  4184                           tblptru	equ	0xFF8
  4185                           tblptrh	equ	0xFF7
  4186                           tblptrl	equ	0xFF6
  4187                           tablat	equ	0xFF5
  4188                           prodh	equ	0xFF4
  4189                           prodl	equ	0xFF3
  4190                           intcon	equ	0xFF2
  4191                           intcon2	equ	0xFF1
  4192                           indf0	equ	0xFEF
  4193                           postinc0	equ	0xFEE
  4194                           fsr0h	equ	0xFEA
  4195                           fsr0l	equ	0xFE9
  4196                           wreg	equ	0xFE8
  4197                           indf2	equ	0xFDF
  4198                           postinc2	equ	0xFDE
  4199                           postdec2	equ	0xFDD
  4200                           fsr2h	equ	0xFDA
  4201                           fsr2l	equ	0xFD9
  4202                           status	equ	0xFD8
  4203                           
  4204 ;; *************** function _sprintf *****************
  4205 ;; Defined at:
  4206 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\sprintf.c"
  4207 ;; Parameters:    Size  Location     Type
  4208 ;;  wh              2   27[COMRAM] PTR unsigned char 
  4209 ;;		 -> main@str(32), Network_Read@debug_str(80), 
  4210 ;;  f               1   29[COMRAM] PTR const unsigned char 
  4211 ;;		 -> STR_6(12), STR_1(8), 
  4212 ;; Auto vars:     Size  Location     Type
  4213 ;;  pb              5   39[COMRAM] struct __prbuf
  4214 ;;  ap              1   38[COMRAM] PTR void [1]
  4215 ;;		 -> ?_sprintf(2), ?_printf(2), 
  4216 ;; Return value:  Size  Location     Type
  4217 ;;                  2   27[COMRAM] int 
  4218 ;; Registers used:
  4219 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4220 ;; Tracked objects:
  4221 ;;		On entry : 0/2
  4222 ;;		On exit  : 0/0
  4223 ;;		Unchanged: 0/0
  4224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4225 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4226 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4228 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4229 ;;Total ram usage:       17 bytes
  4230 ;; Hardware stack levels used:    1
  4231 ;; Hardware stack levels required when called:    5
  4232 ;; This function calls:
  4233 ;;		__doprnt
  4234 ;; This function is called by:
  4235 ;;		_Network_Read
  4236 ;;		_main
  4237 ;; This function uses a non-reentrant model
  4238 ;;
  4239                           
  4240                           	psect	text23
  4241  0083A2                     __ptext23:
  4242                           	opt stack 0
  4243  0083A2                     _sprintf:
  4244                           	opt stack 25
  4245                           
  4246                           ;incstack = 0
  4247  0083A2  C01C  F028         	movff	sprintf@wh,sprintf@pb
  4248  0083A6  C01D  F029         	movff	sprintf@wh+1,sprintf@pb+1
  4249  0083AA  6A2A               	clrf	sprintf@pb+2,c
  4250  0083AC  6A2B               	clrf	sprintf@pb+3,c
  4251  0083AE  6A2C               	clrf	sprintf@pb+4,c
  4252  0083B0  0E1F               	movlw	low (?_sprintf+3)
  4253  0083B2  6E27               	movwf	sprintf@ap,c
  4254  0083B4  0E28               	movlw	low sprintf@pb
  4255  0083B6  6E0E               	movwf	__doprnt@pb,c
  4256  0083B8  C01E  F00F         	movff	sprintf@f,__doprnt@f
  4257  0083BC  0E27               	movlw	low sprintf@ap
  4258  0083BE  6E10               	movwf	__doprnt@ap,c
  4259  0083C0  ECE0  F027         	call	__doprnt	;wreg free
  4260  0083C4  C028  FFD9         	movff	sprintf@pb,fsr2l
  4261  0083C8  C029  FFDA         	movff	sprintf@pb+1,fsr2h
  4262  0083CC  6ADF               	clrf	indf2,c
  4263  0083CE  0C00               	retlw	0	;funcret
  4264  0083D0                     __end_of_sprintf:
  4265                           	opt stack 0
  4266                           tblptru	equ	0xFF8
  4267                           tblptrh	equ	0xFF7
  4268                           tblptrl	equ	0xFF6
  4269                           tablat	equ	0xFF5
  4270                           prodh	equ	0xFF4
  4271                           prodl	equ	0xFF3
  4272                           intcon	equ	0xFF2
  4273                           intcon2	equ	0xFF1
  4274                           indf0	equ	0xFEF
  4275                           postinc0	equ	0xFEE
  4276                           fsr0h	equ	0xFEA
  4277                           fsr0l	equ	0xFE9
  4278                           wreg	equ	0xFE8
  4279                           indf2	equ	0xFDF
  4280                           postinc2	equ	0xFDE
  4281                           postdec2	equ	0xFDD
  4282                           fsr2h	equ	0xFDA
  4283                           fsr2l	equ	0xFD9
  4284                           status	equ	0xFD8
  4285                           
  4286 ;; *************** function __doprnt *****************
  4287 ;; Defined at:
  4288 ;;		line 458 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
  4289 ;; Parameters:    Size  Location     Type
  4290 ;;  pb              1   13[COMRAM] PTR struct __prbuf
  4291 ;;		 -> sprintf@pb(5), printf@pb(5), 
  4292 ;;  f               1   14[COMRAM] PTR const unsigned char 
  4293 ;;		 -> STR_6(12), STR_3(10), STR_2(28), STR_1(8), 
  4294 ;;  ap              1   15[COMRAM] PTR PTR void 
  4295 ;;		 -> sprintf@ap(1), printf@ap(1), 
  4296 ;; Auto vars:     Size  Location     Type
  4297 ;;  idx             1   19[COMRAM] unsigned char 
  4298 ;;  tmpval          4    0        struct .
  4299 ;;  val             2   24[COMRAM] unsigned int 
  4300 ;;  cp              2   21[COMRAM] PTR const unsigned char 
  4301 ;;		 -> ?_sprintf(2), ?_printf(2), STR_7(7), main@str(32), 
  4302 ;;		 -> STR_5(13), STR_4(17), Network_Read@debug_str(80), NULL(0), 
  4303 ;;  len             2    0        unsigned int 
  4304 ;;  c               1   26[COMRAM] char 
  4305 ;;  flag            1   23[COMRAM] unsigned char 
  4306 ;;  prec            1   20[COMRAM] char 
  4307 ;; Return value:  Size  Location     Type
  4308 ;;                  2   13[COMRAM] int 
  4309 ;; Registers used:
  4310 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4311 ;; Tracked objects:
  4312 ;;		On entry : 0/1
  4313 ;;		On exit  : 0/0
  4314 ;;		Unchanged: 0/0
  4315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4316 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4317 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4318 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4319 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4320 ;;Total ram usage:       14 bytes
  4321 ;; Hardware stack levels used:    1
  4322 ;; Hardware stack levels required when called:    4
  4323 ;; This function calls:
  4324 ;;		Absolute function
  4325 ;;		___lwdiv
  4326 ;;		___lwmod
  4327 ;;		_putch
  4328 ;; This function is called by:
  4329 ;;		_printf
  4330 ;;		_sprintf
  4331 ;; This function uses a non-reentrant model
  4332 ;;
  4333                           
  4334                           	psect	text24
  4335  004FC0                     __ptext24:
  4336                           	opt stack 0
  4337  004FC0                     __doprnt:
  4338                           	opt stack 25
  4339                           
  4340                           ;doprnt.c: 499: signed char c;
  4341                           ;doprnt.c: 506: signed char prec;
  4342                           ;doprnt.c: 508: unsigned char flag;
  4343                           ;doprnt.c: 523: union {
  4344                           ;doprnt.c: 524: unsigned long vd;
  4345                           ;doprnt.c: 525: double integ;
  4346                           ;doprnt.c: 526: } tmpval;
  4347                           ;doprnt.c: 528: unsigned int val;
  4348                           ;doprnt.c: 529: unsigned len;
  4349                           ;doprnt.c: 530: const char * cp;
  4350                           ;doprnt.c: 536: while(c = *f++) {
  4351                           
  4352                           ;incstack = 0
  4353  004FC0  D1EB               	goto	l9197
  4354  004FC2                     l9083:
  4355                           
  4356                           ;doprnt.c: 538: if(c != '%')
  4357  004FC2  0E25               	movlw	37
  4358  004FC4  181B               	xorwf	__doprnt@c,w,c
  4359  004FC6  E02F               	bz	l1689
  4360                           
  4361                           ;doprnt.c: 540: {
  4362                           ;doprnt.c: 541: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
  4363  004FC8  500E               	movf	__doprnt@pb,w,c
  4364  004FCA  6ED9               	movwf	fsr2l,c
  4365  004FCC  6ADA               	clrf	fsr2h,c
  4366  004FCE  0E02               	movlw	2
  4367  004FD0  26D9               	addwf	fsr2l,f,c
  4368  004FD2  50DE               	movf	postinc2,w,c
  4369  004FD4  10DE               	iorwf	postinc2,w,c
  4370  004FD6  10DE               	iorwf	postinc2,w,c
  4371  004FD8  E012               	bz	l9089
  4372  004FDA  500E               	movf	__doprnt@pb,w,c
  4373  004FDC  6ED9               	movwf	fsr2l,c
  4374  004FDE  6ADA               	clrf	fsr2h,c
  4375  004FE0  0E02               	movlw	2
  4376  004FE2  26D9               	addwf	fsr2l,f,c
  4377  004FE4  D801               	call	u13968
  4378  004FE6  D1D8               	goto	l9197
  4379  004FE8                     u13968:
  4380  004FE8  0005               	push	
  4381  004FEA  6EFA               	movwf	pclath,c
  4382  004FEC  50DE               	movf	postinc2,w,c
  4383  004FEE  6EFD               	movwf	tosl,c
  4384  004FF0  50DE               	movf	postinc2,w,c
  4385  004FF2  6EFE               	movwf	tosh,c
  4386  004FF4  50DE               	movf	postinc2,w,c
  4387  004FF6  6EFF               	movwf	tosu,c
  4388  004FF8  50FA               	movf	pclath,w,c
  4389  004FFA  501B               	movf	__doprnt@c,w,c
  4390  004FFC  0012               	return		;indir
  4391  004FFE                     l9089:
  4392  004FFE  500E               	movf	__doprnt@pb,w,c
  4393  005000  6ED9               	movwf	fsr2l,c
  4394  005002  6ADA               	clrf	fsr2h,c
  4395  005004  CFDE F011          	movff	postinc2,??__doprnt
  4396  005008  CFDD F012          	movff	postdec2,??__doprnt+1
  4397  00500C  C011  FFD9         	movff	??__doprnt,fsr2l
  4398  005010  C012  FFDA         	movff	??__doprnt+1,fsr2h
  4399  005014  C01B  FFDF         	movff	__doprnt@c,indf2
  4400  005018  500E               	movf	__doprnt@pb,w,c
  4401  00501A  6ED9               	movwf	fsr2l,c
  4402  00501C  6ADA               	clrf	fsr2h,c
  4403  00501E  2ADE               	incf	postinc2,f,c
  4404  005020  0E00               	movlw	0
  4405  005022  22DD               	addwfc	postdec2,f,c
  4406  005024  D1B9               	goto	l9197
  4407  005026                     l1689:
  4408                           
  4409                           ;doprnt.c: 543: }
  4410                           ;doprnt.c: 548: flag = 0;
  4411  005026  6A18               	clrf	__doprnt@flag,c
  4412                           
  4413                           ;doprnt.c: 635: switch(c = *f++) {
  4414  005028  D083               	goto	l9119
  4415  00502A                     l9093:
  4416                           
  4417                           ;doprnt.c: 721: flag |= 0x80;
  4418  00502A  8E18               	bsf	__doprnt@flag,7,c
  4419                           
  4420                           ;doprnt.c: 723: break;
  4421  00502C  D09D               	goto	l9121
  4422  00502E                     l9095:
  4423                           
  4424                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  4425  00502E  5010               	movf	__doprnt@ap,w,c
  4426  005030  6ED9               	movwf	fsr2l,c
  4427  005032  6ADA               	clrf	fsr2h,c
  4428  005034  0E02               	movlw	2
  4429  005036  26DF               	addwf	indf2,f,c
  4430  005038  5CDF               	subwf	indf2,w,c
  4431  00503A  6ED9               	movwf	fsr2l,c
  4432  00503C  6ADA               	clrf	fsr2h,c
  4433  00503E  CFDE F016          	movff	postinc2,__doprnt@cp
  4434  005042  CFDE F017          	movff	postinc2,__doprnt@cp+1
  4435                           
  4436                           ;doprnt.c: 740: if(!cp)
  4437  005046  5016               	movf	__doprnt@cp,w,c
  4438  005048  1017               	iorwf	__doprnt@cp+1,w,c
  4439  00504A  E15A               	bnz	l9113
  4440                           
  4441                           ;doprnt.c: 741: cp = "(null)";
  4442  00504C  0EA2               	movlw	low STR_7
  4443  00504E  6E16               	movwf	__doprnt@cp,c
  4444  005050  5016               	movf	__doprnt@cp,w,c
  4445  005052  A4D8               	btfss	status,2,c
  4446  005054  0E10               	movlw	high __smallconst
  4447  005056  6E17               	movwf	__doprnt@cp+1,c
  4448  005058  D053               	goto	l9113
  4449  00505A                     l9101:
  4450                           
  4451                           ;doprnt.c: 778: if(pb->func) (pb->func(*cp++)); else ((*pb->ptr++ = *cp++));
  4452  00505A  500E               	movf	__doprnt@pb,w,c
  4453  00505C  6ED9               	movwf	fsr2l,c
  4454  00505E  6ADA               	clrf	fsr2h,c
  4455  005060  0E02               	movlw	2
  4456  005062  26D9               	addwf	fsr2l,f,c
  4457  005064  50DE               	movf	postinc2,w,c
  4458  005066  10DE               	iorwf	postinc2,w,c
  4459  005068  10DE               	iorwf	postinc2,w,c
  4460  00506A  E025               	bz	l9107
  4461  00506C  500E               	movf	__doprnt@pb,w,c
  4462  00506E  6ED9               	movwf	fsr2l,c
  4463  005070  6ADA               	clrf	fsr2h,c
  4464  005072  0E02               	movlw	2
  4465  005074  26D9               	addwf	fsr2l,f,c
  4466  005076  D801               	call	u13998
  4467  005078  D01B               	goto	l9105
  4468  00507A                     u13998:
  4469  00507A  0005               	push	
  4470  00507C  6EFA               	movwf	pclath,c
  4471  00507E  50DE               	movf	postinc2,w,c
  4472  005080  6EFD               	movwf	tosl,c
  4473  005082  50DE               	movf	postinc2,w,c
  4474  005084  6EFE               	movwf	tosh,c
  4475  005086  50DE               	movf	postinc2,w,c
  4476  005088  6EFF               	movwf	tosu,c
  4477  00508A  50FA               	movf	pclath,w,c
  4478  00508C  C016  FFF6         	movff	__doprnt@cp,tblptrl
  4479  005090  C017  FFF7         	movff	__doprnt@cp+1,tblptrh
  4480  005094  0E00               	movlw	low (__smallconst shr (0+16))
  4481  005096  6EF8               	movwf	tblptru,c
  4482  005098  0E0F               	movlw	(high __ramtop+-1)
  4483  00509A  64F7               	cpfsgt	tblptrh,c
  4484  00509C  D003               	bra	u14007
  4485  00509E  0008               	tblrd		*
  4486  0050A0  50F5               	movf	tablat,w,c
  4487  0050A2  D005               	bra	u14000
  4488  0050A4                     u14007:
  4489  0050A4  CFF6 FFE9          	movff	tblptrl,fsr0l
  4490  0050A8  CFF7 FFEA          	movff	tblptrh,fsr0h
  4491  0050AC  50EF               	movf	indf0,w,c
  4492  0050AE                     u14000:
  4493  0050AE  0012               	return		;indir
  4494  0050B0                     l9105:
  4495  0050B0  4A16               	infsnz	__doprnt@cp,f,c
  4496  0050B2  2A17               	incf	__doprnt@cp+1,f,c
  4497  0050B4  D025               	goto	l9113
  4498  0050B6                     l9107:
  4499  0050B6  C016  FFF6         	movff	__doprnt@cp,tblptrl
  4500  0050BA  C017  FFF7         	movff	__doprnt@cp+1,tblptrh
  4501  0050BE  0E00               	movlw	low (__smallconst shr (0+16))
  4502  0050C0  6EF8               	movwf	tblptru,c
  4503  0050C2  500E               	movf	__doprnt@pb,w,c
  4504  0050C4  6ED9               	movwf	fsr2l,c
  4505  0050C6  6ADA               	clrf	fsr2h,c
  4506  0050C8  CFDE F011          	movff	postinc2,??__doprnt
  4507  0050CC  CFDD F012          	movff	postdec2,??__doprnt+1
  4508  0050D0  C011  FFD9         	movff	??__doprnt,fsr2l
  4509  0050D4  C012  FFDA         	movff	??__doprnt+1,fsr2h
  4510  0050D8  0E0F               	movlw	(high __ramtop+-1)
  4511  0050DA  64F7               	cpfsgt	tblptrh,c
  4512  0050DC  D003               	bra	u14017
  4513  0050DE  0008               	tblrd		*
  4514  0050E0  50F5               	movf	tablat,w,c
  4515  0050E2  D005               	bra	u14010
  4516  0050E4                     u14017:
  4517  0050E4  CFF6 FFE9          	movff	tblptrl,fsr0l
  4518  0050E8  CFF7 FFEA          	movff	tblptrh,fsr0h
  4519  0050EC  50EF               	movf	indf0,w,c
  4520  0050EE                     u14010:
  4521  0050EE  6EDF               	movwf	indf2,c
  4522  0050F0  4A16               	infsnz	__doprnt@cp,f,c
  4523  0050F2  2A17               	incf	__doprnt@cp+1,f,c
  4524  0050F4  500E               	movf	__doprnt@pb,w,c
  4525  0050F6  6ED9               	movwf	fsr2l,c
  4526  0050F8  6ADA               	clrf	fsr2h,c
  4527  0050FA  2ADE               	incf	postinc2,f,c
  4528  0050FC  0E00               	movlw	0
  4529  0050FE  22DD               	addwfc	postdec2,f,c
  4530  005100                     l9113:
  4531  005100  C016  FFF6         	movff	__doprnt@cp,tblptrl
  4532  005104  C017  FFF7         	movff	__doprnt@cp+1,tblptrh
  4533  005108  0E00               	movlw	low (__smallconst shr (0+16))
  4534  00510A  6EF8               	movwf	tblptru,c
  4535  00510C  0E0F               	movlw	(high __ramtop+-1)
  4536  00510E  64F7               	cpfsgt	tblptrh,c
  4537  005110  D003               	bra	u14027
  4538  005112  0008               	tblrd		*
  4539  005114  50F5               	movf	tablat,w,c
  4540  005116  D005               	bra	u14020
  4541  005118                     u14027:
  4542  005118  CFF6 FFE9          	movff	tblptrl,fsr0l
  4543  00511C  CFF7 FFEA          	movff	tblptrh,fsr0h
  4544  005120  50EF               	movf	indf0,w,c
  4545  005122                     u14020:
  4546  005122  0900               	iorlw	0
  4547  005124  E101 D138          	bz	l9197
  4548  005128  D798               	goto	l9101
  4549  00512A                     l9115:
  4550                           
  4551                           ;doprnt.c: 818: flag |= 0xC0;
  4552  00512A  0EC0               	movlw	192
  4553  00512C  1218               	iorwf	__doprnt@flag,f,c
  4554                           
  4555                           ;doprnt.c: 819: break;
  4556  00512E  D01C               	goto	l9121
  4557  005130                     l9119:
  4558  005130  2A0F               	incf	__doprnt@f,f,c
  4559  005132  040F               	decf	__doprnt@f,w,c
  4560  005134  6E11               	movwf	??__doprnt& (0+255),c
  4561  005136  C011  FFF6         	movff	??__doprnt,tblptrl
  4562  00513A                     	if	1	;There is more than 1 active tblptr byte
  4563  00513A  0E10               	movlw	high __smallconst
  4564  00513C  6EF7               	movwf	tblptrh,c
  4565  00513E                     	endif
  4566  00513E                     	if	0	;tblptru may be non-zero
  4567  00513E                     	endif
  4568  00513E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4569  00513E  0E00               	movlw	low (__smallconst shr (0+16))
  4570  005140  6EF8               	movwf	tblptru,c
  4571  005142                     	endif
  4572  005142  0008               	tblrd		*
  4573  005144  CFF5 F01B          	movff	tablat,__doprnt@c
  4574  005148  501B               	movf	__doprnt@c,w,c
  4575                           
  4576                           ; Switch size 1, requested type "speed"
  4577                           ; Number of cases is 6, Range of values is 0 to 120
  4578                           ; switch strategies available:
  4579                           ; Name         Instructions Cycles
  4580                           ; simple_byte           19    10 (average)
  4581                           ;	Chosen strategy is simple_byte
  4582  00514A  E101 D134          	bz	l1694
  4583  00514E  0A64               	xorlw	100	; case 100
  4584  005150  E00B               	bz	l9121
  4585  005152  0A0D               	xorlw	13	; case 105
  4586  005154  E009               	bz	l9121
  4587  005156  0A1A               	xorlw	26	; case 115
  4588  005158  E101 D769          	bz	l9095
  4589  00515C  0A06               	xorlw	6	; case 117
  4590  00515E  E0E5               	bz	l9115
  4591  005160  0A0D               	xorlw	13	; case 120
  4592  005162  E101 D762          	bz	l9093
  4593  005166  D118               	goto	l9197
  4594  005168                     l9121:
  4595                           
  4596                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
  4597  005168  C018  F011         	movff	__doprnt@flag,??__doprnt
  4598  00516C  0EC0               	movlw	192
  4599  00516E  1611               	andwf	??__doprnt,f,c
  4600  005170  E115               	bnz	l9131
  4601                           
  4602                           ;doprnt.c: 1253: {
  4603                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4604  005172  5010               	movf	__doprnt@ap,w,c
  4605  005174  6ED9               	movwf	fsr2l,c
  4606  005176  6ADA               	clrf	fsr2h,c
  4607  005178  0E02               	movlw	2
  4608  00517A  26DF               	addwf	indf2,f,c
  4609  00517C  5CDF               	subwf	indf2,w,c
  4610  00517E  6ED9               	movwf	fsr2l,c
  4611  005180  6ADA               	clrf	fsr2h,c
  4612  005182  CFDE F019          	movff	postinc2,__doprnt@val
  4613  005186  CFDE F01A          	movff	postinc2,__doprnt@val+1
  4614                           
  4615                           ;doprnt.c: 1261: if((int)val < 0) {
  4616  00518A  AE1A               	btfss	__doprnt@val+1,7,c
  4617  00518C  D046               	goto	l9163
  4618                           
  4619                           ;doprnt.c: 1262: flag |= 0x03;
  4620  00518E  0E03               	movlw	3
  4621  005190  1218               	iorwf	__doprnt@flag,f,c
  4622                           
  4623                           ;doprnt.c: 1263: val = -val;
  4624  005192  6C19               	negf	__doprnt@val,c
  4625  005194  1E1A               	comf	__doprnt@val+1,f,c
  4626  005196  B0D8               	btfsc	status,0,c
  4627  005198  2A1A               	incf	__doprnt@val+1,f,c
  4628  00519A  D03F               	goto	l9163
  4629  00519C                     l9131:
  4630                           
  4631                           ;doprnt.c: 1268: else
  4632                           ;doprnt.c: 1273: {
  4633                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  4634  00519C  5010               	movf	__doprnt@ap,w,c
  4635  00519E  6ED9               	movwf	fsr2l,c
  4636  0051A0  6ADA               	clrf	fsr2h,c
  4637  0051A2  0E02               	movlw	2
  4638  0051A4  26DF               	addwf	indf2,f,c
  4639  0051A6  5CDF               	subwf	indf2,w,c
  4640  0051A8  6ED9               	movwf	fsr2l,c
  4641  0051AA  6ADA               	clrf	fsr2h,c
  4642  0051AC  CFDE F019          	movff	postinc2,__doprnt@val
  4643  0051B0  CFDE F01A          	movff	postinc2,__doprnt@val+1
  4644  0051B4  D032               	goto	l9163
  4645  0051B6                     l9133:
  4646                           
  4647                           ;doprnt.c: 1302: case 0xC0:
  4648                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4649  0051B6  0E01               	movlw	1
  4650  0051B8  6E1B               	movwf	__doprnt@c,c
  4651  0051BA                     l9139:
  4652                           
  4653                           ;doprnt.c: 1306: if(val < dpowers[c])
  4654  0051BA  501B               	movf	__doprnt@c,w,c
  4655  0051BC  0D02               	mullw	2
  4656  0051BE  50F3               	movf	prodl,w,c
  4657  0051C0  0F01               	addlw	low _dpowers
  4658  0051C2  6E11               	movwf	??__doprnt& (0+255),c
  4659  0051C4  C011  FFF6         	movff	??__doprnt,tblptrl
  4660  0051C8                     	if	1	;There is more than 1 active tblptr byte
  4661  0051C8  0E10               	movlw	high __smallconst
  4662  0051CA  6EF7               	movwf	tblptrh,c
  4663  0051CC                     	endif
  4664  0051CC                     	if	0	;tblptru may be non-zero
  4665  0051CC                     	endif
  4666  0051CC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4667  0051CC  0E00               	movlw	low (__smallconst shr (0+16))
  4668  0051CE  6EF8               	movwf	tblptru,c
  4669  0051D0                     	endif
  4670  0051D0  0009               	tblrd		*+
  4671  0051D2  50F5               	movf	tablat,w,c
  4672  0051D4  5C19               	subwf	__doprnt@val,w,c
  4673  0051D6  0009               	tblrd		*+
  4674  0051D8  50F5               	movf	tablat,w,c
  4675  0051DA  581A               	subwfb	__doprnt@val+1,w,c
  4676  0051DC  E325               	bnc	l9165
  4677  0051DE  2A1B               	incf	__doprnt@c,f,c
  4678  0051E0  0E05               	movlw	5
  4679  0051E2  181B               	xorwf	__doprnt@c,w,c
  4680  0051E4  E021               	bz	l9165
  4681  0051E6  D7E9               	goto	l9139
  4682  0051E8                     l9147:
  4683                           
  4684                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  4685  0051E8  0E01               	movlw	1
  4686  0051EA  6E1B               	movwf	__doprnt@c,c
  4687  0051EC                     l9153:
  4688                           
  4689                           ;doprnt.c: 1317: if(val < hexpowers[c])
  4690  0051EC  501B               	movf	__doprnt@c,w,c
  4691  0051EE  0D02               	mullw	2
  4692  0051F0  50F3               	movf	prodl,w,c
  4693  0051F2  0F0B               	addlw	low _hexpowers
  4694  0051F4  6E11               	movwf	??__doprnt& (0+255),c
  4695  0051F6  C011  FFF6         	movff	??__doprnt,tblptrl
  4696  0051FA                     	if	1	;There is more than 1 active tblptr byte
  4697  0051FA  0E10               	movlw	high __smallconst
  4698  0051FC  6EF7               	movwf	tblptrh,c
  4699  0051FE                     	endif
  4700  0051FE                     	if	0	;tblptru may be non-zero
  4701  0051FE                     	endif
  4702  0051FE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4703  0051FE  0E00               	movlw	low (__smallconst shr (0+16))
  4704  005200  6EF8               	movwf	tblptru,c
  4705  005202                     	endif
  4706  005202  0009               	tblrd		*+
  4707  005204  50F5               	movf	tablat,w,c
  4708  005206  5C19               	subwf	__doprnt@val,w,c
  4709  005208  0009               	tblrd		*+
  4710  00520A  50F5               	movf	tablat,w,c
  4711  00520C  581A               	subwfb	__doprnt@val+1,w,c
  4712  00520E  E30C               	bnc	l9165
  4713  005210  2A1B               	incf	__doprnt@c,f,c
  4714  005212  0E04               	movlw	4
  4715  005214  181B               	xorwf	__doprnt@c,w,c
  4716  005216  E008               	bz	l9165
  4717  005218  D7E9               	goto	l9153
  4718  00521A                     l9163:
  4719  00521A  5018               	movf	__doprnt@flag,w,c
  4720  00521C  0BC0               	andlw	192
  4721                           
  4722                           ; Switch size 1, requested type "speed"
  4723                           ; Number of cases is 3, Range of values is 0 to 192
  4724                           ; switch strategies available:
  4725                           ; Name         Instructions Cycles
  4726                           ; simple_byte           10     6 (average)
  4727                           ;	Chosen strategy is simple_byte
  4728  00521E  E0CB               	bz	l9133
  4729  005220  0A80               	xorlw	128	; case 128
  4730  005222  E0E2               	bz	l9147
  4731  005224  0A40               	xorlw	64	; case 192
  4732  005226  E0C7               	bz	l9133
  4733  005228                     l9165:
  4734                           
  4735                           ;doprnt.c: 1422: {
  4736                           ;doprnt.c: 1438: if(flag & 0x03)
  4737  005228  C018  F011         	movff	__doprnt@flag,??__doprnt
  4738  00522C  0E03               	movlw	3
  4739  00522E  1611               	andwf	??__doprnt,f,c
  4740  005230  E02D               	bz	l9175
  4741                           
  4742                           ;doprnt.c: 1439: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
  4743  005232  500E               	movf	__doprnt@pb,w,c
  4744  005234  6ED9               	movwf	fsr2l,c
  4745  005236  6ADA               	clrf	fsr2h,c
  4746  005238  0E02               	movlw	2
  4747  00523A  26D9               	addwf	fsr2l,f,c
  4748  00523C  50DE               	movf	postinc2,w,c
  4749  00523E  10DE               	iorwf	postinc2,w,c
  4750  005240  10DE               	iorwf	postinc2,w,c
  4751  005242  E011               	bz	l9171
  4752  005244  500E               	movf	__doprnt@pb,w,c
  4753  005246  6ED9               	movwf	fsr2l,c
  4754  005248  6ADA               	clrf	fsr2h,c
  4755  00524A  0E02               	movlw	2
  4756  00524C  26D9               	addwf	fsr2l,f,c
  4757  00524E  D801               	call	u14128
  4758  005250  D01D               	goto	l9175
  4759  005252                     u14128:
  4760  005252  0005               	push	
  4761  005254  6EFA               	movwf	pclath,c
  4762  005256  50DE               	movf	postinc2,w,c
  4763  005258  6EFD               	movwf	tosl,c
  4764  00525A  50DE               	movf	postinc2,w,c
  4765  00525C  6EFE               	movwf	tosh,c
  4766  00525E  50DE               	movf	postinc2,w,c
  4767  005260  6EFF               	movwf	tosu,c
  4768  005262  50FA               	movf	pclath,w,c
  4769  005264  0C2D               	retlw	45	;indir
  4770  005266                     l9171:
  4771  005266  500E               	movf	__doprnt@pb,w,c
  4772  005268  6ED9               	movwf	fsr2l,c
  4773  00526A  6ADA               	clrf	fsr2h,c
  4774  00526C  CFDE F011          	movff	postinc2,??__doprnt
  4775  005270  CFDD F012          	movff	postdec2,??__doprnt+1
  4776  005274  C011  FFD9         	movff	??__doprnt,fsr2l
  4777  005278  C012  FFDA         	movff	??__doprnt+1,fsr2h
  4778  00527C  0E2D               	movlw	45
  4779  00527E  6EDF               	movwf	indf2,c
  4780  005280  500E               	movf	__doprnt@pb,w,c
  4781  005282  6ED9               	movwf	fsr2l,c
  4782  005284  6ADA               	clrf	fsr2h,c
  4783  005286  2ADE               	incf	postinc2,f,c
  4784  005288  0E00               	movlw	0
  4785  00528A  22DD               	addwfc	postdec2,f,c
  4786  00528C                     l9175:
  4787                           
  4788                           ;doprnt.c: 1469: }
  4789                           ;doprnt.c: 1472: prec = c;
  4790  00528C  C01B  F015         	movff	__doprnt@c,__doprnt@prec
  4791                           
  4792                           ;doprnt.c: 1474: while(prec--) {
  4793  005290  D080               	goto	l9195
  4794  005292                     l9177:
  4795                           
  4796                           ;doprnt.c: 1486: case 0xC0:
  4797                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  4798  005292  5015               	movf	__doprnt@prec,w,c
  4799  005294  0D02               	mullw	2
  4800  005296  50F3               	movf	prodl,w,c
  4801  005298  0F01               	addlw	low _dpowers
  4802  00529A  6E11               	movwf	??__doprnt& (0+255),c
  4803  00529C  C011  FFF6         	movff	??__doprnt,tblptrl
  4804  0052A0                     	if	1	;There is more than 1 active tblptr byte
  4805  0052A0  0E10               	movlw	high __smallconst
  4806  0052A2  6EF7               	movwf	tblptrh,c
  4807  0052A4                     	endif
  4808  0052A4                     	if	0	;tblptru may be non-zero
  4809  0052A4                     	endif
  4810  0052A4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4811  0052A4  0E00               	movlw	low (__smallconst shr (0+16))
  4812  0052A6  6EF8               	movwf	tblptru,c
  4813  0052A8                     	endif
  4814  0052A8  0009               	tblrd		*+
  4815  0052AA  CFF5 F004          	movff	tablat,___lwdiv@divisor
  4816  0052AE  000A               	tblrd		*-
  4817  0052B0  CFF5 F005          	movff	tablat,___lwdiv@divisor+1
  4818  0052B4  C019  F002         	movff	__doprnt@val,___lwdiv@dividend
  4819  0052B8  C01A  F003         	movff	__doprnt@val+1,___lwdiv@dividend+1
  4820  0052BC  EC72  F03F         	call	___lwdiv
  4821  0052C0  C002  F009         	movff	?___lwdiv,___lwmod@dividend
  4822  0052C4  C003  F00A         	movff	?___lwdiv+1,___lwmod@dividend+1
  4823  0052C8  6A0C               	clrf	___lwmod@divisor+1,c
  4824  0052CA  0E0A               	movlw	10
  4825  0052CC  6E0B               	movwf	___lwmod@divisor,c
  4826  0052CE  EC14  F041         	call	___lwmod	;wreg free
  4827  0052D2  5009               	movf	?___lwmod,w,c
  4828  0052D4  0F30               	addlw	48
  4829  0052D6  6E1B               	movwf	__doprnt@c,c
  4830                           
  4831                           ;doprnt.c: 1491: break;
  4832  0052D8  D02E               	goto	l9187
  4833  0052DA                     l9179:
  4834                           
  4835                           ;doprnt.c: 1499: {
  4836                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  4837  0052DA  C019  F002         	movff	__doprnt@val,___lwdiv@dividend
  4838  0052DE  C01A  F003         	movff	__doprnt@val+1,___lwdiv@dividend+1
  4839  0052E2  5015               	movf	__doprnt@prec,w,c
  4840  0052E4  0D02               	mullw	2
  4841  0052E6  50F3               	movf	prodl,w,c
  4842  0052E8  0F0B               	addlw	low _hexpowers
  4843  0052EA  6E11               	movwf	??__doprnt& (0+255),c
  4844  0052EC  C011  FFF6         	movff	??__doprnt,tblptrl
  4845  0052F0                     	if	1	;There is more than 1 active tblptr byte
  4846  0052F0  0E10               	movlw	high __smallconst
  4847  0052F2  6EF7               	movwf	tblptrh,c
  4848  0052F4                     	endif
  4849  0052F4                     	if	0	;tblptru may be non-zero
  4850  0052F4                     	endif
  4851  0052F4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4852  0052F4  0E00               	movlw	low (__smallconst shr (0+16))
  4853  0052F6  6EF8               	movwf	tblptru,c
  4854  0052F8                     	endif
  4855  0052F8  0009               	tblrd		*+
  4856  0052FA  CFF5 F004          	movff	tablat,___lwdiv@divisor
  4857  0052FE  000A               	tblrd		*-
  4858  005300  CFF5 F005          	movff	tablat,___lwdiv@divisor+1
  4859  005304  EC72  F03F         	call	___lwdiv	;wreg free
  4860  005308  5002               	movf	?___lwdiv,w,c
  4861  00530A  0B0F               	andlw	15
  4862  00530C  6E14               	movwf	__doprnt@idx,c
  4863                           
  4864                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
  4865  00530E  5014               	movf	__doprnt@idx,w,c
  4866  005310  0F55               	addlw	low STR_8
  4867  005312  6E11               	movwf	??__doprnt& (0+255),c
  4868  005314  C011  FFF6         	movff	??__doprnt,tblptrl
  4869  005318                     	if	1	;There is more than 1 active tblptr byte
  4870  005318  0E10               	movlw	high __smallconst
  4871  00531A  6EF7               	movwf	tblptrh,c
  4872  00531C                     	endif
  4873  00531C                     	if	0	;tblptru may be non-zero
  4874  00531C                     	endif
  4875  00531C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4876  00531C  0E00               	movlw	low (__smallconst shr (0+16))
  4877  00531E  6EF8               	movwf	tblptru,c
  4878  005320                     	endif
  4879  005320  0008               	tblrd		*
  4880  005322  CFF5 F01B          	movff	tablat,__doprnt@c
  4881                           
  4882                           ;doprnt.c: 1508: }
  4883                           ;doprnt.c: 1510: break;
  4884  005326  D007               	goto	l9187
  4885  005328                     l9185:
  4886  005328  5018               	movf	__doprnt@flag,w,c
  4887  00532A  0BC0               	andlw	192
  4888                           
  4889                           ; Switch size 1, requested type "speed"
  4890                           ; Number of cases is 3, Range of values is 0 to 192
  4891                           ; switch strategies available:
  4892                           ; Name         Instructions Cycles
  4893                           ; simple_byte           10     6 (average)
  4894                           ;	Chosen strategy is simple_byte
  4895  00532C  E0B2               	bz	l9177
  4896  00532E  0A80               	xorlw	128	; case 128
  4897  005330  E0D4               	bz	l9179
  4898  005332  0A40               	xorlw	64	; case 192
  4899  005334  E0AE               	bz	l9177
  4900  005336                     l9187:
  4901                           
  4902                           ;doprnt.c: 1524: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
  4903  005336  500E               	movf	__doprnt@pb,w,c
  4904  005338  6ED9               	movwf	fsr2l,c
  4905  00533A  6ADA               	clrf	fsr2h,c
  4906  00533C  0E02               	movlw	2
  4907  00533E  26D9               	addwf	fsr2l,f,c
  4908  005340  50DE               	movf	postinc2,w,c
  4909  005342  10DE               	iorwf	postinc2,w,c
  4910  005344  10DE               	iorwf	postinc2,w,c
  4911  005346  E012               	bz	l9191
  4912  005348  500E               	movf	__doprnt@pb,w,c
  4913  00534A  6ED9               	movwf	fsr2l,c
  4914  00534C  6ADA               	clrf	fsr2h,c
  4915  00534E  0E02               	movlw	2
  4916  005350  26D9               	addwf	fsr2l,f,c
  4917  005352  D801               	call	u14148
  4918  005354  D01E               	goto	l9195
  4919  005356                     u14148:
  4920  005356  0005               	push	
  4921  005358  6EFA               	movwf	pclath,c
  4922  00535A  50DE               	movf	postinc2,w,c
  4923  00535C  6EFD               	movwf	tosl,c
  4924  00535E  50DE               	movf	postinc2,w,c
  4925  005360  6EFE               	movwf	tosh,c
  4926  005362  50DE               	movf	postinc2,w,c
  4927  005364  6EFF               	movwf	tosu,c
  4928  005366  50FA               	movf	pclath,w,c
  4929  005368  501B               	movf	__doprnt@c,w,c
  4930  00536A  0012               	return		;indir
  4931  00536C                     l9191:
  4932  00536C  500E               	movf	__doprnt@pb,w,c
  4933  00536E  6ED9               	movwf	fsr2l,c
  4934  005370  6ADA               	clrf	fsr2h,c
  4935  005372  CFDE F011          	movff	postinc2,??__doprnt
  4936  005376  CFDD F012          	movff	postdec2,??__doprnt+1
  4937  00537A  C011  FFD9         	movff	??__doprnt,fsr2l
  4938  00537E  C012  FFDA         	movff	??__doprnt+1,fsr2h
  4939  005382  C01B  FFDF         	movff	__doprnt@c,indf2
  4940  005386  500E               	movf	__doprnt@pb,w,c
  4941  005388  6ED9               	movwf	fsr2l,c
  4942  00538A  6ADA               	clrf	fsr2h,c
  4943  00538C  2ADE               	incf	postinc2,f,c
  4944  00538E  0E00               	movlw	0
  4945  005390  22DD               	addwfc	postdec2,f,c
  4946  005392                     l9195:
  4947  005392  0615               	decf	__doprnt@prec,f,c
  4948  005394  2815               	incf	__doprnt@prec,w,c
  4949  005396  E1C8               	bnz	l9185
  4950  005398                     l9197:
  4951  005398  2A0F               	incf	__doprnt@f,f,c
  4952  00539A  040F               	decf	__doprnt@f,w,c
  4953  00539C  6E11               	movwf	??__doprnt& (0+255),c
  4954  00539E  C011  FFF6         	movff	??__doprnt,tblptrl
  4955  0053A2                     	if	1	;There is more than 1 active tblptr byte
  4956  0053A2  0E10               	movlw	high __smallconst
  4957  0053A4  6EF7               	movwf	tblptrh,c
  4958  0053A6                     	endif
  4959  0053A6                     	if	0	;tblptru may be non-zero
  4960  0053A6                     	endif
  4961  0053A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4962  0053A6  0E00               	movlw	low (__smallconst shr (0+16))
  4963  0053A8  6EF8               	movwf	tblptru,c
  4964  0053AA                     	endif
  4965  0053AA  0008               	tblrd		*
  4966  0053AC  CFF5 F01B          	movff	tablat,__doprnt@c
  4967  0053B0  501B               	movf	__doprnt@c,w,c
  4968  0053B2  E001 D606          	bnz	l9083
  4969  0053B6                     l1694:
  4970                           
  4971                           ;doprnt.c: 1540: return 0;
  4972  0053B6  6A0E               	clrf	?__doprnt,c
  4973  0053B8  6A0F               	clrf	?__doprnt+1,c
  4974  0053BA  0012               	return		;funcret
  4975  0053BC                     __end_of__doprnt:
  4976                           	opt stack 0
  4977                           tosu	equ	0xFFF
  4978                           tosh	equ	0xFFE
  4979                           tosl	equ	0xFFD
  4980                           pclath	equ	0xFFA
  4981                           tblptru	equ	0xFF8
  4982                           tblptrh	equ	0xFF7
  4983                           tblptrl	equ	0xFF6
  4984                           tablat	equ	0xFF5
  4985                           prodh	equ	0xFF4
  4986                           prodl	equ	0xFF3
  4987                           intcon	equ	0xFF2
  4988                           intcon2	equ	0xFF1
  4989                           indf0	equ	0xFEF
  4990                           postinc0	equ	0xFEE
  4991                           fsr0h	equ	0xFEA
  4992                           fsr0l	equ	0xFE9
  4993                           wreg	equ	0xFE8
  4994                           indf2	equ	0xFDF
  4995                           postinc2	equ	0xFDE
  4996                           postdec2	equ	0xFDD
  4997                           fsr2h	equ	0xFDA
  4998                           fsr2l	equ	0xFD9
  4999                           status	equ	0xFD8
  5000                           
  5001 ;; *************** function _putch *****************
  5002 ;; Defined at:
  5003 ;;		line 77 in file "../board_support_package/picdem2_net/uart.c"
  5004 ;; Parameters:    Size  Location     Type
  5005 ;;  data            1    wreg     unsigned char 
  5006 ;; Auto vars:     Size  Location     Type
  5007 ;;  data            1    1[COMRAM] unsigned char 
  5008 ;; Return value:  Size  Location     Type
  5009 ;;                  1    wreg      void 
  5010 ;; Registers used:
  5011 ;;		wreg, status,2, status,0
  5012 ;; Tracked objects:
  5013 ;;		On entry : 0/1
  5014 ;;		On exit  : 0/0
  5015 ;;		Unchanged: 0/0
  5016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5018 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5020 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5021 ;;Total ram usage:        1 bytes
  5022 ;; Hardware stack levels used:    1
  5023 ;; Hardware stack levels required when called:    3
  5024 ;; This function calls:
  5025 ;;		Nothing
  5026 ;; This function is called by:
  5027 ;;		_printf
  5028 ;;		__doprnt
  5029 ;; This function uses a non-reentrant model
  5030 ;;
  5031                           
  5032                           	psect	text25
  5033  008692                     __ptext25:
  5034                           	opt stack 0
  5035  008692                     _putch:
  5036                           	opt stack 25
  5037                           
  5038                           ;incstack = 0
  5039                           ;putch@data stored from wreg
  5040  008692  6E02               	movwf	putch@data,c
  5041                           
  5042                           ;uart.c: 79: if(data == '\n')
  5043  008694  0E0A               	movlw	10
  5044  008696  1802               	xorwf	putch@data,w,c
  5045  008698  E104               	bnz	l354
  5046  00869A                     l351:
  5047  00869A  A89E               	btfss	3998,4,c	;volatile
  5048  00869C  D7FE               	goto	l351
  5049                           
  5050                           ;uart.c: 83: TXREG1 = '\r';
  5051  00869E  0E0D               	movlw	13
  5052  0086A0  6EAD               	movwf	4013,c	;volatile
  5053  0086A2                     l354:
  5054  0086A2  A89E               	btfss	3998,4,c	;volatile
  5055  0086A4  D7FE               	goto	l354
  5056                           
  5057                           ;uart.c: 87: TXREG1 = data;
  5058  0086A6  C002  FFAD         	movff	putch@data,4013	;volatile
  5059  0086AA  0012               	return		;funcret
  5060  0086AC                     __end_of_putch:
  5061                           	opt stack 0
  5062                           tosu	equ	0xFFF
  5063                           tosh	equ	0xFFE
  5064                           tosl	equ	0xFFD
  5065                           pclath	equ	0xFFA
  5066                           tblptru	equ	0xFF8
  5067                           tblptrh	equ	0xFF7
  5068                           tblptrl	equ	0xFF6
  5069                           tablat	equ	0xFF5
  5070                           prodh	equ	0xFF4
  5071                           prodl	equ	0xFF3
  5072                           intcon	equ	0xFF2
  5073                           intcon2	equ	0xFF1
  5074                           indf0	equ	0xFEF
  5075                           postinc0	equ	0xFEE
  5076                           fsr0h	equ	0xFEA
  5077                           fsr0l	equ	0xFE9
  5078                           wreg	equ	0xFE8
  5079                           indf2	equ	0xFDF
  5080                           postinc2	equ	0xFDE
  5081                           postdec2	equ	0xFDD
  5082                           fsr2h	equ	0xFDA
  5083                           fsr2l	equ	0xFD9
  5084                           status	equ	0xFD8
  5085                           
  5086 ;; *************** function ___lwmod *****************
  5087 ;; Defined at:
  5088 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwmod.c"
  5089 ;; Parameters:    Size  Location     Type
  5090 ;;  dividend        2    8[COMRAM] unsigned int 
  5091 ;;  divisor         2   10[COMRAM] unsigned int 
  5092 ;; Auto vars:     Size  Location     Type
  5093 ;;  counter         1   12[COMRAM] unsigned char 
  5094 ;; Return value:  Size  Location     Type
  5095 ;;                  2    8[COMRAM] unsigned int 
  5096 ;; Registers used:
  5097 ;;		wreg, status,2, status,0
  5098 ;; Tracked objects:
  5099 ;;		On entry : 0/1
  5100 ;;		On exit  : 0/0
  5101 ;;		Unchanged: 0/0
  5102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5103 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5104 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5106 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5107 ;;Total ram usage:        5 bytes
  5108 ;; Hardware stack levels used:    1
  5109 ;; Hardware stack levels required when called:    3
  5110 ;; This function calls:
  5111 ;;		Nothing
  5112 ;; This function is called by:
  5113 ;;		__doprnt
  5114 ;; This function uses a non-reentrant model
  5115 ;;
  5116                           
  5117                           	psect	text26
  5118  008228                     __ptext26:
  5119                           	opt stack 0
  5120  008228                     ___lwmod:
  5121                           	opt stack 25
  5122                           
  5123                           ;incstack = 0
  5124  008228  500B               	movf	___lwmod@divisor,w,c
  5125  00822A  100C               	iorwf	___lwmod@divisor+1,w,c
  5126  00822C  E017               	bz	l2143
  5127  00822E  0E01               	movlw	1
  5128  008230  6E0D               	movwf	___lwmod@counter,c
  5129  008232  D004               	goto	l8855
  5130  008234                     l8853:
  5131  008234  90D8               	bcf	status,0,c
  5132  008236  360B               	rlcf	___lwmod@divisor,f,c
  5133  008238  360C               	rlcf	___lwmod@divisor+1,f,c
  5134  00823A  2A0D               	incf	___lwmod@counter,f,c
  5135  00823C                     l8855:
  5136  00823C  AE0C               	btfss	___lwmod@divisor+1,7,c
  5137  00823E  D7FA               	goto	l8853
  5138  008240                     l8857:
  5139  008240  500B               	movf	___lwmod@divisor,w,c
  5140  008242  5C09               	subwf	___lwmod@dividend,w,c
  5141  008244  500C               	movf	___lwmod@divisor+1,w,c
  5142  008246  580A               	subwfb	___lwmod@dividend+1,w,c
  5143  008248  E304               	bnc	l8861
  5144  00824A  500B               	movf	___lwmod@divisor,w,c
  5145  00824C  5E09               	subwf	___lwmod@dividend,f,c
  5146  00824E  500C               	movf	___lwmod@divisor+1,w,c
  5147  008250  5A0A               	subwfb	___lwmod@dividend+1,f,c
  5148  008252                     l8861:
  5149  008252  90D8               	bcf	status,0,c
  5150  008254  320C               	rrcf	___lwmod@divisor+1,f,c
  5151  008256  320B               	rrcf	___lwmod@divisor,f,c
  5152  008258  2E0D               	decfsz	___lwmod@counter,f,c
  5153  00825A  D7F2               	goto	l8857
  5154  00825C                     l2143:
  5155  00825C  C009  F009         	movff	___lwmod@dividend,?___lwmod
  5156  008260  C00A  F00A         	movff	___lwmod@dividend+1,?___lwmod+1
  5157  008264  0012               	return		;funcret
  5158  008266                     __end_of___lwmod:
  5159                           	opt stack 0
  5160                           tosu	equ	0xFFF
  5161                           tosh	equ	0xFFE
  5162                           tosl	equ	0xFFD
  5163                           pclath	equ	0xFFA
  5164                           tblptru	equ	0xFF8
  5165                           tblptrh	equ	0xFF7
  5166                           tblptrl	equ	0xFF6
  5167                           tablat	equ	0xFF5
  5168                           prodh	equ	0xFF4
  5169                           prodl	equ	0xFF3
  5170                           intcon	equ	0xFF2
  5171                           intcon2	equ	0xFF1
  5172                           indf0	equ	0xFEF
  5173                           postinc0	equ	0xFEE
  5174                           fsr0h	equ	0xFEA
  5175                           fsr0l	equ	0xFE9
  5176                           wreg	equ	0xFE8
  5177                           indf2	equ	0xFDF
  5178                           postinc2	equ	0xFDE
  5179                           postdec2	equ	0xFDD
  5180                           fsr2h	equ	0xFDA
  5181                           fsr2l	equ	0xFD9
  5182                           status	equ	0xFD8
  5183                           
  5184 ;; *************** function ___lwdiv *****************
  5185 ;; Defined at:
  5186 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c"
  5187 ;; Parameters:    Size  Location     Type
  5188 ;;  dividend        2    1[COMRAM] unsigned int 
  5189 ;;  divisor         2    3[COMRAM] unsigned int 
  5190 ;; Auto vars:     Size  Location     Type
  5191 ;;  quotient        2    6[COMRAM] unsigned int 
  5192 ;;  counter         1    5[COMRAM] unsigned char 
  5193 ;; Return value:  Size  Location     Type
  5194 ;;                  2    1[COMRAM] unsigned int 
  5195 ;; Registers used:
  5196 ;;		wreg, status,2, status,0
  5197 ;; Tracked objects:
  5198 ;;		On entry : 0/1
  5199 ;;		On exit  : 0/0
  5200 ;;		Unchanged: 0/0
  5201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5202 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5203 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5205 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5206 ;;Total ram usage:        7 bytes
  5207 ;; Hardware stack levels used:    1
  5208 ;; Hardware stack levels required when called:    3
  5209 ;; This function calls:
  5210 ;;		Nothing
  5211 ;; This function is called by:
  5212 ;;		__doprnt
  5213 ;; This function uses a non-reentrant model
  5214 ;;
  5215                           
  5216                           	psect	text27
  5217  007EE4                     __ptext27:
  5218                           	opt stack 0
  5219  007EE4                     ___lwdiv:
  5220                           	opt stack 25
  5221                           
  5222                           ;incstack = 0
  5223  007EE4  6A07               	clrf	___lwdiv@quotient,c
  5224  007EE6  6A08               	clrf	___lwdiv@quotient+1,c
  5225  007EE8  5004               	movf	___lwdiv@divisor,w,c
  5226  007EEA  1005               	iorwf	___lwdiv@divisor+1,w,c
  5227  007EEC  E01B               	bz	l2133
  5228  007EEE  0E01               	movlw	1
  5229  007EF0  6E06               	movwf	___lwdiv@counter,c
  5230  007EF2  D004               	goto	l8835
  5231  007EF4                     l8833:
  5232  007EF4  90D8               	bcf	status,0,c
  5233  007EF6  3604               	rlcf	___lwdiv@divisor,f,c
  5234  007EF8  3605               	rlcf	___lwdiv@divisor+1,f,c
  5235  007EFA  2A06               	incf	___lwdiv@counter,f,c
  5236  007EFC                     l8835:
  5237  007EFC  AE05               	btfss	___lwdiv@divisor+1,7,c
  5238  007EFE  D7FA               	goto	l8833
  5239  007F00                     l8837:
  5240  007F00  90D8               	bcf	status,0,c
  5241  007F02  3607               	rlcf	___lwdiv@quotient,f,c
  5242  007F04  3608               	rlcf	___lwdiv@quotient+1,f,c
  5243  007F06  5004               	movf	___lwdiv@divisor,w,c
  5244  007F08  5C02               	subwf	___lwdiv@dividend,w,c
  5245  007F0A  5005               	movf	___lwdiv@divisor+1,w,c
  5246  007F0C  5803               	subwfb	___lwdiv@dividend+1,w,c
  5247  007F0E  E305               	bnc	l8845
  5248  007F10  5004               	movf	___lwdiv@divisor,w,c
  5249  007F12  5E02               	subwf	___lwdiv@dividend,f,c
  5250  007F14  5005               	movf	___lwdiv@divisor+1,w,c
  5251  007F16  5A03               	subwfb	___lwdiv@dividend+1,f,c
  5252  007F18  8007               	bsf	___lwdiv@quotient,0,c
  5253  007F1A                     l8845:
  5254  007F1A  90D8               	bcf	status,0,c
  5255  007F1C  3205               	rrcf	___lwdiv@divisor+1,f,c
  5256  007F1E  3204               	rrcf	___lwdiv@divisor,f,c
  5257  007F20  2E06               	decfsz	___lwdiv@counter,f,c
  5258  007F22  D7EE               	goto	l8837
  5259  007F24                     l2133:
  5260  007F24  C007  F002         	movff	___lwdiv@quotient,?___lwdiv
  5261  007F28  C008  F003         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5262  007F2C  0012               	return		;funcret
  5263  007F2E                     __end_of___lwdiv:
  5264                           	opt stack 0
  5265                           tosu	equ	0xFFF
  5266                           tosh	equ	0xFFE
  5267                           tosl	equ	0xFFD
  5268                           pclath	equ	0xFFA
  5269                           tblptru	equ	0xFF8
  5270                           tblptrh	equ	0xFF7
  5271                           tblptrl	equ	0xFF6
  5272                           tablat	equ	0xFF5
  5273                           prodh	equ	0xFF4
  5274                           prodl	equ	0xFF3
  5275                           intcon	equ	0xFF2
  5276                           intcon2	equ	0xFF1
  5277                           indf0	equ	0xFEF
  5278                           postinc0	equ	0xFEE
  5279                           fsr0h	equ	0xFEA
  5280                           fsr0l	equ	0xFE9
  5281                           wreg	equ	0xFE8
  5282                           indf2	equ	0xFDF
  5283                           postinc2	equ	0xFDE
  5284                           postdec2	equ	0xFDD
  5285                           fsr2h	equ	0xFDA
  5286                           fsr2l	equ	0xFD9
  5287                           status	equ	0xFD8
  5288                           
  5289 ;; *************** function _IPV4_Packet *****************
  5290 ;; Defined at:
  5291 ;;		line 115 in file "../../TCPIP Library/source/ipv4.c"
  5292 ;; Parameters:    Size  Location     Type
  5293 ;;		None
  5294 ;; Auto vars:     Size  Location     Type
  5295 ;;  msg            40    0        unsigned char [40]
  5296 ;;  cksm            2  156[BANK0 ] unsigned int 
  5297 ;;  length          2  154[BANK0 ] unsigned int 
  5298 ;;  hdrLen          1  153[BANK0 ] unsigned char 
  5299 ;; Return value:  Size  Location     Type
  5300 ;;                  1    wreg      enum E6890
  5301 ;; Registers used:
  5302 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
  5303 ;; Tracked objects:
  5304 ;;		On entry : 0/1
  5305 ;;		On exit  : 0/0
  5306 ;;		Unchanged: 0/0
  5307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5309 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5310 ;;      Temps:          0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5311 ;;      Totals:         0       5      28       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5312 ;;Total ram usage:       33 bytes
  5313 ;; Hardware stack levels used:    1
  5314 ;; Hardware stack levels required when called:   13
  5315 ;; This function calls:
  5316 ;;		_ETH_Dump
  5317 ;;		_ETH_ReadBlock
  5318 ;;		_ETH_RxComputeChecksum
  5319 ;;		_ICMP_Receive
  5320 ;;		_IPV4_PseudoHeaderChecksum
  5321 ;;		_TCP_Recv
  5322 ;;		_UDP_Receive
  5323 ;; This function is called by:
  5324 ;;		_Network_Read
  5325 ;; This function uses a non-reentrant model
  5326 ;;
  5327                           
  5328                           	psect	text28
  5329  0053BC                     __ptext28:
  5330                           	opt stack 0
  5331  0053BC                     _IPV4_Packet:
  5332                           	opt stack 15
  5333                           
  5334                           ;ipv4.c: 118: uint16_t length = 0;
  5335                           
  5336                           ;incstack = 0
  5337  0053BC  0100               	movlb	0	; () banked
  5338  0053BE  6BFA               	clrf	IPV4_Packet@length& (0+255),b
  5339  0053C0  6BFB               	clrf	(IPV4_Packet@length+1)& (0+255),b
  5340                           
  5341                           ; BSR set to: 0
  5342                           ;ipv4.c: 119: char msg[40];
  5343                           ;ipv4.c: 120: uint8_t hdrLen;
  5344                           ;ipv4.c: 123: cksm = ETH_RxComputeChecksum(sizeof(ipv4Header_t), 0);
  5345  0053C2  6A0E               	clrf	ETH_RxComputeChecksum@len+1,c
  5346  0053C4  0E14               	movlw	20
  5347  0053C6  6E0D               	movwf	ETH_RxComputeChecksum@len,c
  5348  0053C8  6A10               	clrf	ETH_RxComputeChecksum@seed+1,c
  5349  0053CA  6A0F               	clrf	ETH_RxComputeChecksum@seed,c
  5350  0053CC  ECCD  F037         	call	_ETH_RxComputeChecksum
  5351  0053D0  C00D  F0FC         	movff	?_ETH_RxComputeChecksum,IPV4_Packet@cksm
  5352  0053D4  C00E  F0FD         	movff	?_ETH_RxComputeChecksum+1,IPV4_Packet@cksm+1
  5353                           
  5354                           ;ipv4.c: 124: if (cksm != 0)
  5355  0053D8  0100               	movlb	0	; () banked
  5356  0053DA  51FC               	movf	IPV4_Packet@cksm& (0+255),w,b
  5357  0053DC  11FD               	iorwf	(IPV4_Packet@cksm+1)& (0+255),w,b
  5358  0053DE  E001               	bz	l9385
  5359  0053E0  0012               	return	
  5360  0053E2                     l9385:
  5361                           
  5362                           ; BSR set to: 0
  5363                           ;ipv4.c: 128: }
  5364                           ;ipv4.c: 130: ETH_ReadBlock((char *)&ipv4Header, sizeof(ipv4Header_t));
  5365  0053E2  0EA8               	movlw	low _ipv4Header
  5366  0053E4  6E03               	movwf	ETH_ReadBlock@data,c
  5367  0053E6  0E01               	movlw	high _ipv4Header
  5368  0053E8  6E04               	movwf	ETH_ReadBlock@data+1,c
  5369  0053EA  6A06               	clrf	ETH_ReadBlock@length+1,c
  5370  0053EC  0E14               	movlw	20
  5371  0053EE  6E05               	movwf	ETH_ReadBlock@length,c
  5372  0053F0  ECDB  F03A         	call	_ETH_ReadBlock	;wreg free
  5373                           
  5374                           ; BSR set to: 1
  5375                           ;ipv4.c: 131: if(ipv4Header.version != 4)
  5376  0053F4  39A8               	swapf	_ipv4Header& (0+255),w,b
  5377  0053F6  0B0F               	andlw	15
  5378  0053F8  0A04               	xorlw	4
  5379  0053FA  E001               	bz	l9391
  5380  0053FC  0012               	return	
  5381  0053FE                     l9391:
  5382                           
  5383                           ; BSR set to: 1
  5384                           ;ipv4.c: 134: }
  5385                           ;ipv4.c: 136: ipv4Header.dstIpAddress = ((((uint32_t)ipv4Header.dstIpAddress&(uint32_t)0
      +                          xff000000) >> 24) | (((uint32_t)ipv4Header.dstIpAddress&(uint32_t)0x00ff0000) >> 8) | ((
      +                          (uint32_t)ipv4Header.dstIpAddress&(uint32_t)0x0000ff00) << 8) | (((uint32_t)ipv4Header.d
  5386  0053FE  51B8               	movf	(_ipv4Header+16)& (0+255),w,b
  5387  005400  6F00               	movwf	??_IPV4_Packet& (0+255),b
  5388  005402  6B01               	clrf	(??_IPV4_Packet+1)& (0+255),b
  5389  005404  6B02               	clrf	(??_IPV4_Packet+2)& (0+255),b
  5390  005406  6B03               	clrf	(??_IPV4_Packet+3)& (0+255),b
  5391  005408  C100  F103         	movff	??_IPV4_Packet,??_IPV4_Packet+3
  5392  00540C  6B02               	clrf	(??_IPV4_Packet+2)& (0+255),b
  5393  00540E  6B01               	clrf	(??_IPV4_Packet+1)& (0+255),b
  5394  005410  6B00               	clrf	??_IPV4_Packet& (0+255),b
  5395  005412  EE21  F0B8         	lfsr	2,_ipv4Header+16
  5396  005416  0E00               	movlw	0
  5397  005418  14DE               	andwf	postinc2,w,c
  5398  00541A  6F04               	movwf	(??_IPV4_Packet+4)& (0+255),b
  5399  00541C  0EFF               	movlw	255
  5400  00541E  14DE               	andwf	postinc2,w,c
  5401  005420  6F05               	movwf	(??_IPV4_Packet+5)& (0+255),b
  5402  005422  0E00               	movlw	0
  5403  005424  14DE               	andwf	postinc2,w,c
  5404  005426  6F06               	movwf	(??_IPV4_Packet+6)& (0+255),b
  5405  005428  0E00               	movlw	0
  5406  00542A  14DE               	andwf	postinc2,w,c
  5407  00542C  6F07               	movwf	(??_IPV4_Packet+7)& (0+255),b
  5408  00542E  C106  F107         	movff	??_IPV4_Packet+6,??_IPV4_Packet+7
  5409  005432  C105  F106         	movff	??_IPV4_Packet+5,??_IPV4_Packet+6
  5410  005436  C104  F105         	movff	??_IPV4_Packet+4,??_IPV4_Packet+5
  5411  00543A  6B04               	clrf	(??_IPV4_Packet+4)& (0+255),b
  5412  00543C  C1B8  F108         	movff	_ipv4Header+16,??_IPV4_Packet+8
  5413  005440  C1B9  F109         	movff	_ipv4Header+17,??_IPV4_Packet+9
  5414  005444  C1BA  F10A         	movff	_ipv4Header+18,??_IPV4_Packet+10
  5415  005448  C1BB  F10B         	movff	_ipv4Header+19,??_IPV4_Packet+11
  5416  00544C  C109  F108         	movff	??_IPV4_Packet+9,??_IPV4_Packet+8
  5417  005450  C10A  F109         	movff	??_IPV4_Packet+10,??_IPV4_Packet+9
  5418  005454  C10B  F10A         	movff	??_IPV4_Packet+11,??_IPV4_Packet+10
  5419  005458  6B0B               	clrf	(??_IPV4_Packet+11)& (0+255),b
  5420  00545A  6B0C               	clrf	(??_IPV4_Packet+12)& (0+255),b
  5421  00545C  5109               	movf	(??_IPV4_Packet+9)& (0+255),w,b
  5422  00545E  6F0D               	movwf	(??_IPV4_Packet+13)& (0+255),b
  5423  005460  0E00               	movlw	0
  5424  005462  6B0E               	clrf	(??_IPV4_Packet+14)& (0+255),b
  5425  005464  6B0F               	clrf	(??_IPV4_Packet+15)& (0+255),b
  5426  005466  EE21  F0B8         	lfsr	2,_ipv4Header+16
  5427  00546A  14DE               	andwf	postinc2,w,c
  5428  00546C  6F10               	movwf	(??_IPV4_Packet+16)& (0+255),b
  5429  00546E  0E00               	movlw	0
  5430  005470  14DE               	andwf	postinc2,w,c
  5431  005472  6F11               	movwf	(??_IPV4_Packet+17)& (0+255),b
  5432  005474  0E00               	movlw	0
  5433  005476  14DE               	andwf	postinc2,w,c
  5434  005478  6F12               	movwf	(??_IPV4_Packet+18)& (0+255),b
  5435  00547A  0EFF               	movlw	255
  5436  00547C  14DE               	andwf	postinc2,w,c
  5437  00547E  6F13               	movwf	(??_IPV4_Packet+19)& (0+255),b
  5438  005480  0E19               	movlw	25
  5439  005482  D005               	goto	u14430
  5440  005484                     u14435:
  5441  005484  90D8               	bcf	status,0,c
  5442  005486  3313               	rrcf	(??_IPV4_Packet+19)& (0+255),f,b
  5443  005488  3312               	rrcf	(??_IPV4_Packet+18)& (0+255),f,b
  5444  00548A  3311               	rrcf	(??_IPV4_Packet+17)& (0+255),f,b
  5445  00548C  3310               	rrcf	(??_IPV4_Packet+16)& (0+255),f,b
  5446  00548E                     u14430:
  5447  00548E  2EE8               	decfsz	wreg,f,c
  5448  005490  D7F9               	goto	u14435
  5449  005492  510C               	movf	(??_IPV4_Packet+12)& (0+255),w,b
  5450  005494  1110               	iorwf	(??_IPV4_Packet+16)& (0+255),w,b
  5451  005496  6F14               	movwf	(??_IPV4_Packet+20)& (0+255),b
  5452  005498  510D               	movf	(??_IPV4_Packet+13)& (0+255),w,b
  5453  00549A  1111               	iorwf	(??_IPV4_Packet+17)& (0+255),w,b
  5454  00549C  6F15               	movwf	(??_IPV4_Packet+21)& (0+255),b
  5455  00549E  510E               	movf	(??_IPV4_Packet+14)& (0+255),w,b
  5456  0054A0  1112               	iorwf	(??_IPV4_Packet+18)& (0+255),w,b
  5457  0054A2  6F16               	movwf	(??_IPV4_Packet+22)& (0+255),b
  5458  0054A4  510F               	movf	(??_IPV4_Packet+15)& (0+255),w,b
  5459  0054A6  1113               	iorwf	(??_IPV4_Packet+19)& (0+255),w,b
  5460  0054A8  6F17               	movwf	(??_IPV4_Packet+23)& (0+255),b
  5461  0054AA  5104               	movf	(??_IPV4_Packet+4)& (0+255),w,b
  5462  0054AC  1114               	iorwf	(??_IPV4_Packet+20)& (0+255),w,b
  5463  0054AE  6F18               	movwf	(??_IPV4_Packet+24)& (0+255),b
  5464  0054B0  5105               	movf	(??_IPV4_Packet+5)& (0+255),w,b
  5465  0054B2  1115               	iorwf	(??_IPV4_Packet+21)& (0+255),w,b
  5466  0054B4  6F19               	movwf	(??_IPV4_Packet+25)& (0+255),b
  5467  0054B6  5106               	movf	(??_IPV4_Packet+6)& (0+255),w,b
  5468  0054B8  1116               	iorwf	(??_IPV4_Packet+22)& (0+255),w,b
  5469  0054BA  6F1A               	movwf	(??_IPV4_Packet+26)& (0+255),b
  5470  0054BC  5107               	movf	(??_IPV4_Packet+7)& (0+255),w,b
  5471  0054BE  1117               	iorwf	(??_IPV4_Packet+23)& (0+255),w,b
  5472  0054C0  6F1B               	movwf	(??_IPV4_Packet+27)& (0+255),b
  5473  0054C2  5100               	movf	??_IPV4_Packet& (0+255),w,b
  5474  0054C4  1118               	iorwf	(??_IPV4_Packet+24)& (0+255),w,b
  5475  0054C6  6FB8               	movwf	(_ipv4Header+16)& (0+255),b
  5476  0054C8  5101               	movf	(??_IPV4_Packet+1)& (0+255),w,b
  5477  0054CA  1119               	iorwf	(??_IPV4_Packet+25)& (0+255),w,b
  5478  0054CC  6FB9               	movwf	(_ipv4Header+17)& (0+255),b
  5479  0054CE  5102               	movf	(??_IPV4_Packet+2)& (0+255),w,b
  5480  0054D0  111A               	iorwf	(??_IPV4_Packet+26)& (0+255),w,b
  5481  0054D2  6FBA               	movwf	(_ipv4Header+18)& (0+255),b
  5482  0054D4  5103               	movf	(??_IPV4_Packet+3)& (0+255),w,b
  5483  0054D6  111B               	iorwf	(??_IPV4_Packet+27)& (0+255),w,b
  5484  0054D8  6FBB               	movwf	(_ipv4Header+19)& (0+255),b
  5485                           
  5486                           ;ipv4.c: 137: ipv4Header.srcIpAddress = ((((uint32_t)ipv4Header.srcIpAddress&(uint32_t)0
      +                          xff000000) >> 24) | (((uint32_t)ipv4Header.srcIpAddress&(uint32_t)0x00ff0000) >> 8) | ((
      +                          (uint32_t)ipv4Header.srcIpAddress&(uint32_t)0x0000ff00) << 8) | (((uint32_t)ipv4Header.s
  5487  0054DA  51B4               	movf	(_ipv4Header+12)& (0+255),w,b
  5488  0054DC  6F00               	movwf	??_IPV4_Packet& (0+255),b
  5489  0054DE  6B01               	clrf	(??_IPV4_Packet+1)& (0+255),b
  5490  0054E0  6B02               	clrf	(??_IPV4_Packet+2)& (0+255),b
  5491  0054E2  6B03               	clrf	(??_IPV4_Packet+3)& (0+255),b
  5492  0054E4  C100  F103         	movff	??_IPV4_Packet,??_IPV4_Packet+3
  5493  0054E8  6B02               	clrf	(??_IPV4_Packet+2)& (0+255),b
  5494  0054EA  6B01               	clrf	(??_IPV4_Packet+1)& (0+255),b
  5495  0054EC  6B00               	clrf	??_IPV4_Packet& (0+255),b
  5496  0054EE  EE21  F0B4         	lfsr	2,_ipv4Header+12
  5497  0054F2  0E00               	movlw	0
  5498  0054F4  14DE               	andwf	postinc2,w,c
  5499  0054F6  6F04               	movwf	(??_IPV4_Packet+4)& (0+255),b
  5500  0054F8  0EFF               	movlw	255
  5501  0054FA  14DE               	andwf	postinc2,w,c
  5502  0054FC  6F05               	movwf	(??_IPV4_Packet+5)& (0+255),b
  5503  0054FE  0E00               	movlw	0
  5504  005500  14DE               	andwf	postinc2,w,c
  5505  005502  6F06               	movwf	(??_IPV4_Packet+6)& (0+255),b
  5506  005504  0E00               	movlw	0
  5507  005506  14DE               	andwf	postinc2,w,c
  5508  005508  6F07               	movwf	(??_IPV4_Packet+7)& (0+255),b
  5509  00550A  C106  F107         	movff	??_IPV4_Packet+6,??_IPV4_Packet+7
  5510  00550E  C105  F106         	movff	??_IPV4_Packet+5,??_IPV4_Packet+6
  5511  005512  C104  F105         	movff	??_IPV4_Packet+4,??_IPV4_Packet+5
  5512  005516  6B04               	clrf	(??_IPV4_Packet+4)& (0+255),b
  5513  005518  C1B4  F108         	movff	_ipv4Header+12,??_IPV4_Packet+8
  5514  00551C  C1B5  F109         	movff	_ipv4Header+13,??_IPV4_Packet+9
  5515  005520  C1B6  F10A         	movff	_ipv4Header+14,??_IPV4_Packet+10
  5516  005524  C1B7  F10B         	movff	_ipv4Header+15,??_IPV4_Packet+11
  5517  005528  C109  F108         	movff	??_IPV4_Packet+9,??_IPV4_Packet+8
  5518  00552C  C10A  F109         	movff	??_IPV4_Packet+10,??_IPV4_Packet+9
  5519  005530  C10B  F10A         	movff	??_IPV4_Packet+11,??_IPV4_Packet+10
  5520  005534  6B0B               	clrf	(??_IPV4_Packet+11)& (0+255),b
  5521  005536  6B0C               	clrf	(??_IPV4_Packet+12)& (0+255),b
  5522  005538  5109               	movf	(??_IPV4_Packet+9)& (0+255),w,b
  5523  00553A  6F0D               	movwf	(??_IPV4_Packet+13)& (0+255),b
  5524  00553C  0E00               	movlw	0
  5525  00553E  6B0E               	clrf	(??_IPV4_Packet+14)& (0+255),b
  5526  005540  6B0F               	clrf	(??_IPV4_Packet+15)& (0+255),b
  5527  005542  EE21  F0B4         	lfsr	2,_ipv4Header+12
  5528  005546  14DE               	andwf	postinc2,w,c
  5529  005548  6F10               	movwf	(??_IPV4_Packet+16)& (0+255),b
  5530  00554A  0E00               	movlw	0
  5531  00554C  14DE               	andwf	postinc2,w,c
  5532  00554E  6F11               	movwf	(??_IPV4_Packet+17)& (0+255),b
  5533  005550  0E00               	movlw	0
  5534  005552  14DE               	andwf	postinc2,w,c
  5535  005554  6F12               	movwf	(??_IPV4_Packet+18)& (0+255),b
  5536  005556  0EFF               	movlw	255
  5537  005558  14DE               	andwf	postinc2,w,c
  5538  00555A  6F13               	movwf	(??_IPV4_Packet+19)& (0+255),b
  5539  00555C  0E19               	movlw	25
  5540  00555E  D005               	goto	u14440
  5541  005560                     u14445:
  5542  005560  90D8               	bcf	status,0,c
  5543  005562  3313               	rrcf	(??_IPV4_Packet+19)& (0+255),f,b
  5544  005564  3312               	rrcf	(??_IPV4_Packet+18)& (0+255),f,b
  5545  005566  3311               	rrcf	(??_IPV4_Packet+17)& (0+255),f,b
  5546  005568  3310               	rrcf	(??_IPV4_Packet+16)& (0+255),f,b
  5547  00556A                     u14440:
  5548  00556A  2EE8               	decfsz	wreg,f,c
  5549  00556C  D7F9               	goto	u14445
  5550  00556E  510C               	movf	(??_IPV4_Packet+12)& (0+255),w,b
  5551  005570  1110               	iorwf	(??_IPV4_Packet+16)& (0+255),w,b
  5552  005572  6F14               	movwf	(??_IPV4_Packet+20)& (0+255),b
  5553  005574  510D               	movf	(??_IPV4_Packet+13)& (0+255),w,b
  5554  005576  1111               	iorwf	(??_IPV4_Packet+17)& (0+255),w,b
  5555  005578  6F15               	movwf	(??_IPV4_Packet+21)& (0+255),b
  5556  00557A  510E               	movf	(??_IPV4_Packet+14)& (0+255),w,b
  5557  00557C  1112               	iorwf	(??_IPV4_Packet+18)& (0+255),w,b
  5558  00557E  6F16               	movwf	(??_IPV4_Packet+22)& (0+255),b
  5559  005580  510F               	movf	(??_IPV4_Packet+15)& (0+255),w,b
  5560  005582  1113               	iorwf	(??_IPV4_Packet+19)& (0+255),w,b
  5561  005584  6F17               	movwf	(??_IPV4_Packet+23)& (0+255),b
  5562  005586  5104               	movf	(??_IPV4_Packet+4)& (0+255),w,b
  5563  005588  1114               	iorwf	(??_IPV4_Packet+20)& (0+255),w,b
  5564  00558A  6F18               	movwf	(??_IPV4_Packet+24)& (0+255),b
  5565  00558C  5105               	movf	(??_IPV4_Packet+5)& (0+255),w,b
  5566  00558E  1115               	iorwf	(??_IPV4_Packet+21)& (0+255),w,b
  5567  005590  6F19               	movwf	(??_IPV4_Packet+25)& (0+255),b
  5568  005592  5106               	movf	(??_IPV4_Packet+6)& (0+255),w,b
  5569  005594  1116               	iorwf	(??_IPV4_Packet+22)& (0+255),w,b
  5570  005596  6F1A               	movwf	(??_IPV4_Packet+26)& (0+255),b
  5571  005598  5107               	movf	(??_IPV4_Packet+7)& (0+255),w,b
  5572  00559A  1117               	iorwf	(??_IPV4_Packet+23)& (0+255),w,b
  5573  00559C  6F1B               	movwf	(??_IPV4_Packet+27)& (0+255),b
  5574  00559E  5100               	movf	??_IPV4_Packet& (0+255),w,b
  5575  0055A0  1118               	iorwf	(??_IPV4_Packet+24)& (0+255),w,b
  5576  0055A2  6FB4               	movwf	(_ipv4Header+12)& (0+255),b
  5577  0055A4  5101               	movf	(??_IPV4_Packet+1)& (0+255),w,b
  5578  0055A6  1119               	iorwf	(??_IPV4_Packet+25)& (0+255),w,b
  5579  0055A8  6FB5               	movwf	(_ipv4Header+13)& (0+255),b
  5580  0055AA  5102               	movf	(??_IPV4_Packet+2)& (0+255),w,b
  5581  0055AC  111A               	iorwf	(??_IPV4_Packet+26)& (0+255),w,b
  5582  0055AE  6FB6               	movwf	(_ipv4Header+14)& (0+255),b
  5583  0055B0  5103               	movf	(??_IPV4_Packet+3)& (0+255),w,b
  5584  0055B2  111B               	iorwf	(??_IPV4_Packet+27)& (0+255),w,b
  5585  0055B4  6FB7               	movwf	(_ipv4Header+15)& (0+255),b
  5586                           
  5587                           ; BSR set to: 1
  5588                           ;ipv4.c: 139: if((ipv4Header.dstIpAddress == ipv4Address) ||( ipv4Header.dstIpAddress ==
      +                           0xFFFFFFFF))
  5589  0055B6  518E               	movf	_ipv4Address& (0+255),w,b
  5590  0055B8  19B8               	xorwf	(_ipv4Header+16)& (0+255),w,b
  5591  0055BA  E109               	bnz	u14450
  5592  0055BC  518F               	movf	(_ipv4Address+1)& (0+255),w,b
  5593  0055BE  19B9               	xorwf	(_ipv4Header+17)& (0+255),w,b
  5594  0055C0  E106               	bnz	u14450
  5595  0055C2  5190               	movf	(_ipv4Address+2)& (0+255),w,b
  5596  0055C4  19BA               	xorwf	(_ipv4Header+18)& (0+255),w,b
  5597  0055C6  E103               	bnz	u14450
  5598  0055C8  5191               	movf	(_ipv4Address+3)& (0+255),w,b
  5599  0055CA  19BB               	xorwf	(_ipv4Header+19)& (0+255),w,b
  5600  0055CC  E009               	bz	l9397
  5601  0055CE                     u14450:
  5602                           
  5603                           ; BSR set to: 1
  5604  0055CE  29B8               	incf	(_ipv4Header+16)& (0+255),w,b
  5605  0055D0  E106               	bnz	u14461
  5606  0055D2  29B9               	incf	(_ipv4Header+17)& (0+255),w,b
  5607  0055D4  E104               	bnz	u14461
  5608  0055D6  29BA               	incf	(_ipv4Header+18)& (0+255),w,b
  5609  0055D8  E102               	bnz	u14461
  5610  0055DA  29BB               	incf	(_ipv4Header+19)& (0+255),w,b
  5611  0055DC  A4D8               	btfss	status,2,c
  5612  0055DE                     u14461:
  5613  0055DE  0012               	return	
  5614  0055E0                     l9397:
  5615                           
  5616                           ; BSR set to: 1
  5617                           ;ipv4.c: 140: {
  5618                           ;ipv4.c: 141: ipv4Header.length = ((((uint16_t)ipv4Header.length & (uint16_t)0xFF00) >> 
      +                          8) | (((uint16_t)ipv4Header.length & (uint16_t)0x00FF) << 8));
  5619  0055E0  51AA               	movf	(_ipv4Header+2)& (0+255),w,b
  5620  0055E2  6F01               	movwf	(??_IPV4_Packet+1)& (0+255),b
  5621  0055E4  6B00               	clrf	??_IPV4_Packet& (0+255),b
  5622  0055E6  EE21  F0AA         	lfsr	2,_ipv4Header+2
  5623  0055EA  CFDE F102          	movff	postinc2,??_IPV4_Packet+2
  5624  0055EE  CFDD F103          	movff	postdec2,??_IPV4_Packet+3
  5625  0055F2  C103  F102         	movff	??_IPV4_Packet+3,??_IPV4_Packet+2
  5626  0055F6  6B03               	clrf	(??_IPV4_Packet+3)& (0+255),b
  5627  0055F8  6B03               	clrf	(??_IPV4_Packet+3)& (0+255),b
  5628  0055FA  5100               	movf	??_IPV4_Packet& (0+255),w,b
  5629  0055FC  1102               	iorwf	(??_IPV4_Packet+2)& (0+255),w,b
  5630  0055FE  6FAA               	movwf	(_ipv4Header+2)& (0+255),b
  5631  005600  5101               	movf	(??_IPV4_Packet+1)& (0+255),w,b
  5632  005602  1103               	iorwf	(??_IPV4_Packet+3)& (0+255),w,b
  5633  005604  6FAB               	movwf	(_ipv4Header+3)& (0+255),b
  5634                           
  5635                           ; BSR set to: 1
  5636                           ;ipv4.c: 143: hdrLen = (uint8_t)(ipv4Header.ihl << 2);
  5637  005606  51A8               	movf	_ipv4Header& (0+255),w,b
  5638  005608  0B0F               	andlw	15
  5639  00560A  6F00               	movwf	??_IPV4_Packet& (0+255),b
  5640  00560C  90D8               	bcf	status,0,c
  5641  00560E  3700               	rlcf	??_IPV4_Packet& (0+255),f,b
  5642  005610  90D8               	bcf	status,0,c
  5643  005612  3500               	rlcf	??_IPV4_Packet& (0+255),w,b
  5644  005614  0100               	movlb	0	; () banked
  5645  005616  6FF9               	movwf	IPV4_Packet@hdrLen& (0+255),b
  5646                           
  5647                           ; BSR set to: 0
  5648                           ;ipv4.c: 145: if (ipv4Header.ihl > 5)
  5649  005618  0101               	movlb	1	; () banked
  5650  00561A  51A8               	movf	_ipv4Header& (0+255),w,b
  5651  00561C  0B0F               	andlw	15
  5652  00561E  6F00               	movwf	??_IPV4_Packet& (0+255),b
  5653  005620  0E05               	movlw	5
  5654  005622  6500               	cpfsgt	??_IPV4_Packet& (0+255),b
  5655  005624  D09C               	goto	l9437
  5656                           
  5657                           ; BSR set to: 1
  5658                           ;ipv4.c: 146: {
  5659                           ;ipv4.c: 148: ETH_Dump((uint16_t)(hdrLen - sizeof(ipv4Header_t)));
  5660  005626  0EEC               	movlw	236
  5661  005628  0100               	movlb	0	; () banked
  5662  00562A  25F9               	addwf	IPV4_Packet@hdrLen& (0+255),w,b
  5663  00562C  6E0B               	movwf	ETH_Dump@length,c
  5664  00562E  6A0C               	clrf	ETH_Dump@length+1,c
  5665  005630  0EFF               	movlw	255
  5666  005632  220C               	addwfc	ETH_Dump@length+1,f,c
  5667  005634  ECBC  F03F         	call	_ETH_Dump	;wreg free
  5668  005638  D092               	goto	l9437
  5669  00563A                     l9405:
  5670                           
  5671                           ; BSR set to: 1
  5672                           ;ipv4.c: 154: {
  5673                           ;ipv4.c: 156: ;
  5674                           ;ipv4.c: 157: length = ipv4Header.length - hdrLen;
  5675  00563A  0100               	movlb	0	; () banked
  5676  00563C  51F9               	movf	IPV4_Packet@hdrLen& (0+255),w,b
  5677  00563E  0101               	movlb	1	; () banked
  5678  005640  5DAA               	subwf	(_ipv4Header+2)& (0+255),w,b
  5679  005642  0100               	movlb	0	; () banked
  5680  005644  6FFA               	movwf	IPV4_Packet@length& (0+255),b
  5681  005646  0101               	movlb	1	; () banked
  5682  005648  51AB               	movf	(_ipv4Header+3)& (0+255),w,b
  5683  00564A  A0D8               	btfss	status,0,c
  5684  00564C  05AB               	decf	(_ipv4Header+3)& (0+255),w,b
  5685  00564E  0100               	movlb	0	; () banked
  5686  005650  6FFB               	movwf	(IPV4_Packet@length+1)& (0+255),b
  5687                           
  5688                           ; BSR set to: 0
  5689                           ;ipv4.c: 158: cksm = ETH_RxComputeChecksum(length, 0);
  5690  005652  C0FA  F00D         	movff	IPV4_Packet@length,ETH_RxComputeChecksum@len
  5691  005656  C0FB  F00E         	movff	IPV4_Packet@length+1,ETH_RxComputeChecksum@len+1
  5692  00565A  6A10               	clrf	ETH_RxComputeChecksum@seed+1,c
  5693  00565C  6A0F               	clrf	ETH_RxComputeChecksum@seed,c
  5694  00565E  ECCD  F037         	call	_ETH_RxComputeChecksum	;wreg free
  5695  005662  C00D  F0FC         	movff	?_ETH_RxComputeChecksum,IPV4_Packet@cksm
  5696  005666  C00E  F0FD         	movff	?_ETH_RxComputeChecksum+1,IPV4_Packet@cksm+1
  5697                           
  5698                           ;ipv4.c: 160: if (cksm == 0)
  5699  00566A  0100               	movlb	0	; () banked
  5700  00566C  51FC               	movf	IPV4_Packet@cksm& (0+255),w,b
  5701  00566E  11FD               	iorwf	(IPV4_Packet@cksm+1)& (0+255),w,b
  5702  005670  A4D8               	btfss	status,2,c
  5703  005672  0012               	return	
  5704                           
  5705                           ; BSR set to: 0
  5706                           ;ipv4.c: 161: {
  5707                           ;ipv4.c: 162: ICMP_Receive(&ipv4Header);
  5708  005674  0EA8               	movlw	low _ipv4Header
  5709  005676  6E5B               	movwf	ICMP_Receive@ipv4Hdr,c
  5710  005678  0E01               	movlw	high _ipv4Header
  5711  00567A  6E5C               	movwf	ICMP_Receive@ipv4Hdr+1,c
  5712  00567C  EFE1  F03F         	goto	_ICMP_Receive	;wreg free
  5713  005680                     l9413:
  5714                           
  5715                           ; BSR set to: 1
  5716                           ;ipv4.c: 174: ;
  5717                           ;ipv4.c: 175: length = ipv4Header.length - hdrLen;
  5718  005680  0100               	movlb	0	; () banked
  5719  005682  51F9               	movf	IPV4_Packet@hdrLen& (0+255),w,b
  5720  005684  0101               	movlb	1	; () banked
  5721  005686  5DAA               	subwf	(_ipv4Header+2)& (0+255),w,b
  5722  005688  0100               	movlb	0	; () banked
  5723  00568A  6FFA               	movwf	IPV4_Packet@length& (0+255),b
  5724  00568C  0101               	movlb	1	; () banked
  5725  00568E  51AB               	movf	(_ipv4Header+3)& (0+255),w,b
  5726  005690  A0D8               	btfss	status,0,c
  5727  005692  05AB               	decf	(_ipv4Header+3)& (0+255),w,b
  5728  005694  0100               	movlb	0	; () banked
  5729  005696  6FFB               	movwf	(IPV4_Packet@length+1)& (0+255),b
  5730                           
  5731                           ; BSR set to: 0
  5732                           ;ipv4.c: 176: cksm = IPV4_PseudoHeaderChecksum(length);
  5733  005698  C0FA  F002         	movff	IPV4_Packet@length,IPV4_PseudoHeaderChecksum@payloadLen
  5734  00569C  C0FB  F003         	movff	IPV4_Packet@length+1,IPV4_PseudoHeaderChecksum@payloadLen+1
  5735  0056A0  EC8F  F03A         	call	_IPV4_PseudoHeaderChecksum	;wreg free
  5736  0056A4  C002  F0FC         	movff	?_IPV4_PseudoHeaderChecksum,IPV4_Packet@cksm
  5737  0056A8  C003  F0FD         	movff	?_IPV4_PseudoHeaderChecksum+1,IPV4_Packet@cksm+1
  5738                           
  5739                           ; BSR set to: 0
  5740                           ;ipv4.c: 177: cksm = ETH_RxComputeChecksum(length, cksm);
  5741  0056AC  C0FA  F00D         	movff	IPV4_Packet@length,ETH_RxComputeChecksum@len
  5742  0056B0  C0FB  F00E         	movff	IPV4_Packet@length+1,ETH_RxComputeChecksum@len+1
  5743  0056B4  C0FC  F00F         	movff	IPV4_Packet@cksm,ETH_RxComputeChecksum@seed
  5744  0056B8  C0FD  F010         	movff	IPV4_Packet@cksm+1,ETH_RxComputeChecksum@seed+1
  5745  0056BC  ECCD  F037         	call	_ETH_RxComputeChecksum	;wreg free
  5746  0056C0  C00D  F0FC         	movff	?_ETH_RxComputeChecksum,IPV4_Packet@cksm
  5747  0056C4  C00E  F0FD         	movff	?_ETH_RxComputeChecksum+1,IPV4_Packet@cksm+1
  5748                           
  5749                           ;ipv4.c: 178: UDP_Receive(cksm);
  5750  0056C8  C0FC  F097         	movff	IPV4_Packet@cksm,UDP_Receive@udpcksm
  5751  0056CC  C0FD  F098         	movff	IPV4_Packet@cksm+1,UDP_Receive@udpcksm+1
  5752  0056D0  EFF2  F036         	goto	_UDP_Receive	;wreg free
  5753  0056D4                     l9421:
  5754                           
  5755                           ; BSR set to: 1
  5756                           ;ipv4.c: 183: ;
  5757                           ;ipv4.c: 184: length = ipv4Header.length - hdrLen;
  5758  0056D4  0100               	movlb	0	; () banked
  5759  0056D6  51F9               	movf	IPV4_Packet@hdrLen& (0+255),w,b
  5760  0056D8  0101               	movlb	1	; () banked
  5761  0056DA  5DAA               	subwf	(_ipv4Header+2)& (0+255),w,b
  5762  0056DC  0100               	movlb	0	; () banked
  5763  0056DE  6FFA               	movwf	IPV4_Packet@length& (0+255),b
  5764  0056E0  0101               	movlb	1	; () banked
  5765  0056E2  51AB               	movf	(_ipv4Header+3)& (0+255),w,b
  5766  0056E4  A0D8               	btfss	status,0,c
  5767  0056E6  05AB               	decf	(_ipv4Header+3)& (0+255),w,b
  5768  0056E8  0100               	movlb	0	; () banked
  5769  0056EA  6FFB               	movwf	(IPV4_Packet@length+1)& (0+255),b
  5770                           
  5771                           ; BSR set to: 0
  5772                           ;ipv4.c: 185: cksm = IPV4_PseudoHeaderChecksum(length);
  5773  0056EC  C0FA  F002         	movff	IPV4_Packet@length,IPV4_PseudoHeaderChecksum@payloadLen
  5774  0056F0  C0FB  F003         	movff	IPV4_Packet@length+1,IPV4_PseudoHeaderChecksum@payloadLen+1
  5775  0056F4  EC8F  F03A         	call	_IPV4_PseudoHeaderChecksum	;wreg free
  5776  0056F8  C002  F0FC         	movff	?_IPV4_PseudoHeaderChecksum,IPV4_Packet@cksm
  5777  0056FC  C003  F0FD         	movff	?_IPV4_PseudoHeaderChecksum+1,IPV4_Packet@cksm+1
  5778                           
  5779                           ; BSR set to: 0
  5780                           ;ipv4.c: 186: cksm = ETH_RxComputeChecksum(length, cksm);
  5781  005700  C0FA  F00D         	movff	IPV4_Packet@length,ETH_RxComputeChecksum@len
  5782  005704  C0FB  F00E         	movff	IPV4_Packet@length+1,ETH_RxComputeChecksum@len+1
  5783  005708  C0FC  F00F         	movff	IPV4_Packet@cksm,ETH_RxComputeChecksum@seed
  5784  00570C  C0FD  F010         	movff	IPV4_Packet@cksm+1,ETH_RxComputeChecksum@seed+1
  5785  005710  ECCD  F037         	call	_ETH_RxComputeChecksum	;wreg free
  5786  005714  C00D  F0FC         	movff	?_ETH_RxComputeChecksum,IPV4_Packet@cksm
  5787  005718  C00E  F0FD         	movff	?_ETH_RxComputeChecksum+1,IPV4_Packet@cksm+1
  5788                           
  5789                           ;ipv4.c: 189: if (cksm == 0)
  5790  00571C  0100               	movlb	0	; () banked
  5791  00571E  51FC               	movf	IPV4_Packet@cksm& (0+255),w,b
  5792  005720  11FD               	iorwf	(IPV4_Packet@cksm+1)& (0+255),w,b
  5793  005722  A4D8               	btfss	status,2,c
  5794  005724  0012               	return	
  5795                           
  5796                           ; BSR set to: 0
  5797                           ;ipv4.c: 190: {
  5798                           ;ipv4.c: 191: remoteIpv4Address = ipv4Header.srcIpAddress;
  5799  005726  C1B4  F22E         	movff	_ipv4Header+12,_remoteIpv4Address
  5800  00572A  C1B5  F22F         	movff	_ipv4Header+13,_remoteIpv4Address+1
  5801  00572E  C1B6  F230         	movff	_ipv4Header+14,_remoteIpv4Address+2
  5802  005732  C1B7  F231         	movff	_ipv4Header+15,_remoteIpv4Address+3
  5803                           
  5804                           ; BSR set to: 0
  5805                           ;ipv4.c: 192: TCP_Recv(remoteIpv4Address, length);
  5806  005736  C22E  F0D4         	movff	_remoteIpv4Address,TCP_Recv@remoteAddress
  5807  00573A  C22F  F0D5         	movff	_remoteIpv4Address+1,TCP_Recv@remoteAddress+1
  5808  00573E  C230  F0D6         	movff	_remoteIpv4Address+2,TCP_Recv@remoteAddress+2
  5809  005742  C231  F0D7         	movff	_remoteIpv4Address+3,TCP_Recv@remoteAddress+3
  5810  005746  C0FA  F0D8         	movff	IPV4_Packet@length,TCP_Recv@length
  5811  00574A  C0FB  F0D9         	movff	IPV4_Packet@length+1,TCP_Recv@length+1
  5812  00574E  EFEE  F022         	goto	_TCP_Recv	;wreg free
  5813  005752                     l9433:
  5814                           
  5815                           ; BSR set to: 1
  5816                           ;ipv4.c: 199: ETH_Dump(ipv4Header.length);
  5817  005752  C1AA  F00B         	movff	_ipv4Header+2,ETH_Dump@length
  5818  005756  C1AB  F00C         	movff	_ipv4Header+3,ETH_Dump@length+1
  5819  00575A  EFBC  F03F         	goto	_ETH_Dump	;wreg free
  5820  00575E                     l9437:
  5821  00575E  0101               	movlb	1	; () banked
  5822  005760  51B1               	movf	(_ipv4Header+9)& (0+255),w,b
  5823                           
  5824                           ; Switch size 1, requested type "speed"
  5825                           ; Number of cases is 3, Range of values is 1 to 17
  5826                           ; switch strategies available:
  5827                           ; Name         Instructions Cycles
  5828                           ; simple_byte           10     6 (average)
  5829                           ;	Chosen strategy is simple_byte
  5830  005762  0A01               	xorlw	1	; case 1
  5831  005764  E101 D769          	bz	l9405
  5832  005768  0A07               	xorlw	7	; case 6
  5833  00576A  E0B4               	bz	l9421
  5834  00576C  0A17               	xorlw	23	; case 17
  5835  00576E  E088               	bz	l9413
  5836  005770  D7F0               	goto	l9433
  5837  005772                     __end_of_IPV4_Packet:
  5838                           	opt stack 0
  5839                           tosu	equ	0xFFF
  5840                           tosh	equ	0xFFE
  5841                           tosl	equ	0xFFD
  5842                           pclath	equ	0xFFA
  5843                           tblptru	equ	0xFF8
  5844                           tblptrh	equ	0xFF7
  5845                           tblptrl	equ	0xFF6
  5846                           tablat	equ	0xFF5
  5847                           prodh	equ	0xFF4
  5848                           prodl	equ	0xFF3
  5849                           intcon	equ	0xFF2
  5850                           intcon2	equ	0xFF1
  5851                           indf0	equ	0xFEF
  5852                           postinc0	equ	0xFEE
  5853                           fsr0h	equ	0xFEA
  5854                           fsr0l	equ	0xFE9
  5855                           wreg	equ	0xFE8
  5856                           indf2	equ	0xFDF
  5857                           postinc2	equ	0xFDE
  5858                           postdec2	equ	0xFDD
  5859                           fsr2h	equ	0xFDA
  5860                           fsr2l	equ	0xFD9
  5861                           status	equ	0xFD8
  5862                           
  5863 ;; *************** function _UDP_Receive *****************
  5864 ;; Defined at:
  5865 ;;		line 126 in file "../../TCPIP Library/source/udpv4.c"
  5866 ;; Parameters:    Size  Location     Type
  5867 ;;  udpcksm         2   55[BANK0 ] unsigned int 
  5868 ;; Auto vars:     Size  Location     Type
  5869 ;;  x               2   63[BANK0 ] unsigned int 
  5870 ;;  hptr            1   65[BANK0 ] PTR const struct .
  5871 ;;		 -> UDP_CallBackTable(5), 
  5872 ;;  ret             1    0        enum E367
  5873 ;; Return value:  Size  Location     Type
  5874 ;;                  1    wreg      enum E6890
  5875 ;; Registers used:
  5876 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
  5877 ;; Tracked objects:
  5878 ;;		On entry : 0/0
  5879 ;;		On exit  : 0/0
  5880 ;;		Unchanged: 0/0
  5881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5882 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5883 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5884 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5885 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5886 ;;Total ram usage:       11 bytes
  5887 ;; Hardware stack levels used:    1
  5888 ;; Hardware stack levels required when called:   12
  5889 ;; This function calls:
  5890 ;;		_DHCP_Handler
  5891 ;;		_ETH_ReadBlock
  5892 ;; This function is called by:
  5893 ;;		_IPV4_Packet
  5894 ;; This function uses a non-reentrant model
  5895 ;;
  5896                           
  5897                           	psect	text29
  5898  006DE4                     __ptext29:
  5899                           	opt stack 0
  5900  006DE4                     _UDP_Receive:
  5901                           	opt stack 15
  5902                           
  5903                           ;udpv4.c: 129: const udp_handler_t *hptr;
  5904                           ;udpv4.c: 130: uint16_t x;
  5905                           ;udpv4.c: 132: hptr = UDP_CallBackTable;
  5906                           
  5907                           ;incstack = 0
  5908  006DE4  0E34               	movlw	low _UDP_CallBackTable
  5909  006DE6  0100               	movlb	0	; () banked
  5910  006DE8  6FA1               	movwf	UDP_Receive@hptr& (0+255),b
  5911                           
  5912                           ; BSR set to: 0
  5913                           ;udpv4.c: 133: ETH_ReadBlock((char *)&udpHeader,sizeof(udpHeader));
  5914  006DEA  0E91               	movlw	low _udpHeader
  5915  006DEC  6E03               	movwf	ETH_ReadBlock@data,c
  5916  006DEE  0E02               	movlw	high _udpHeader
  5917  006DF0  6E04               	movwf	ETH_ReadBlock@data+1,c
  5918  006DF2  6A06               	clrf	ETH_ReadBlock@length+1,c
  5919  006DF4  0E08               	movlw	8
  5920  006DF6  6E05               	movwf	ETH_ReadBlock@length,c
  5921  006DF8  ECDB  F03A         	call	_ETH_ReadBlock	;wreg free
  5922                           
  5923                           ; BSR set to: 1
  5924                           ;udpv4.c: 135: if((udpHeader.checksum == 0) || (udpcksm == 0))
  5925  006DFC  0102               	movlb	2	; () banked
  5926  006DFE  5197               	movf	(_udpHeader+6)& (0+255),w,b
  5927  006E00  1198               	iorwf	(_udpHeader+7)& (0+255),w,b
  5928  006E02  E005               	bz	l8963
  5929                           
  5930                           ; BSR set to: 2
  5931  006E04  0100               	movlb	0	; () banked
  5932  006E06  5197               	movf	UDP_Receive@udpcksm& (0+255),w,b
  5933  006E08  1198               	iorwf	(UDP_Receive@udpcksm+1)& (0+255),w,b
  5934  006E0A  A4D8               	btfss	status,2,c
  5935  006E0C  0012               	return	
  5936  006E0E                     l8963:
  5937                           
  5938                           ;udpv4.c: 138: destPort = ((((uint16_t)udpHeader.srcPort & (uint16_t)0xFF00) >> 8) | (((
      +                          uint16_t)udpHeader.srcPort & (uint16_t)0x00FF) << 8));
  5939  006E0E  0102               	movlb	2	; () banked
  5940  006E10  5193               	movf	(_udpHeader+2)& (0+255),w,b
  5941  006E12  0100               	movlb	0	; () banked
  5942  006E14  6F9A               	movwf	(??_UDP_Receive+1)& (0+255),b
  5943  006E16  6B99               	clrf	??_UDP_Receive& (0+255),b
  5944  006E18  EE22  F093         	lfsr	2,_udpHeader+2
  5945  006E1C  CFDE F09B          	movff	postinc2,??_UDP_Receive+2
  5946  006E20  CFDD F09C          	movff	postdec2,??_UDP_Receive+3
  5947  006E24  C09C  F09B         	movff	??_UDP_Receive+3,??_UDP_Receive+2
  5948  006E28  6B9C               	clrf	(??_UDP_Receive+3)& (0+255),b
  5949  006E2A  6B9C               	clrf	(??_UDP_Receive+3)& (0+255),b
  5950  006E2C  5199               	movf	??_UDP_Receive& (0+255),w,b
  5951  006E2E  119B               	iorwf	(??_UDP_Receive+2)& (0+255),w,b
  5952  006E30  0102               	movlb	2	; () banked
  5953  006E32  6F93               	movwf	(_udpHeader+2)& (0+255),b
  5954  006E34  0100               	movlb	0	; () banked
  5955  006E36  519A               	movf	(??_UDP_Receive+1)& (0+255),w,b
  5956  006E38  119C               	iorwf	(??_UDP_Receive+3)& (0+255),w,b
  5957  006E3A  0102               	movlb	2	; () banked
  5958  006E3C  6F94               	movwf	(_udpHeader+3)& (0+255),b
  5959                           
  5960                           ; BSR set to: 2
  5961                           ;udpv4.c: 142: for(x = 0; x < (sizeof(UDP_CallBackTable) / sizeof(*(UDP_CallBackTable)))
      +                          ;x++)
  5962                           
  5963                           ; BSR set to: 2
  5964  006E3E  0100               	movlb	0	; () banked
  5965  006E40  6B9F               	clrf	UDP_Receive@x& (0+255),b
  5966  006E42  6BA0               	clrf	(UDP_Receive@x+1)& (0+255),b
  5967  006E44                     l8973:
  5968                           
  5969                           ; BSR set to: 0
  5970                           ;udpv4.c: 143: {
  5971                           ;udpv4.c: 144: if(hptr->portNumber == udpHeader.dstPort)
  5972  006E44  C0A1  FFF6         	movff	UDP_Receive@hptr,tblptrl
  5973  006E48                     	if	1	;There is more than 1 active tblptr byte
  5974  006E48  0E10               	movlw	high __smallconst
  5975  006E4A  6EF7               	movwf	tblptrh,c
  5976  006E4C                     	endif
  5977  006E4C                     	if	0	;tblptru may be non-zero
  5978  006E4C                     	endif
  5979  006E4C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5980  006E4C  0E00               	movlw	low (__smallconst shr (0+16))
  5981  006E4E  6EF8               	movwf	tblptru,c
  5982  006E50                     	endif
  5983  006E50  0102               	movlb	2	; () banked
  5984  006E52  5193               	movf	(_udpHeader+2)& (0+255),w,b
  5985  006E54  0009               	tblrd		*+
  5986  006E56  18F5               	xorwf	tablat,w,c
  5987  006E58  E133               	bnz	l8979
  5988  006E5A  5194               	movf	(_udpHeader+3)& (0+255),w,b
  5989  006E5C  0009               	tblrd		*+
  5990  006E5E  18F5               	xorwf	tablat,w,c
  5991  006E60  E12F               	bnz	l8979
  5992                           
  5993                           ; BSR set to: 2
  5994                           ;udpv4.c: 145: {
  5995                           ;udpv4.c: 146: hptr->callBack(((((uint16_t)udpHeader.length & (uint16_t)0xFF00) >> 8) | 
      +                          (((uint16_t)udpHeader.length & (uint16_t)0x00FF) << 8)) - sizeof(udpHeader));
  5996  006E62  5195               	movf	(_udpHeader+4)& (0+255),w,b
  5997  006E64  0100               	movlb	0	; () banked
  5998  006E66  6F9A               	movwf	(??_UDP_Receive+1)& (0+255),b
  5999  006E68  6B99               	clrf	??_UDP_Receive& (0+255),b
  6000  006E6A  EE22  F095         	lfsr	2,_udpHeader+4
  6001  006E6E  CFDE F09B          	movff	postinc2,??_UDP_Receive+2
  6002  006E72  CFDD F09C          	movff	postdec2,??_UDP_Receive+3
  6003  006E76  C09C  F09B         	movff	??_UDP_Receive+3,??_UDP_Receive+2
  6004  006E7A  6B9C               	clrf	(??_UDP_Receive+3)& (0+255),b
  6005  006E7C  6B9C               	clrf	(??_UDP_Receive+3)& (0+255),b
  6006  006E7E  5199               	movf	??_UDP_Receive& (0+255),w,b
  6007  006E80  139B               	iorwf	(??_UDP_Receive+2)& (0+255),f,b
  6008  006E82  519A               	movf	(??_UDP_Receive+1)& (0+255),w,b
  6009  006E84  139C               	iorwf	(??_UDP_Receive+3)& (0+255),f,b
  6010  006E86  0EF8               	movlw	248
  6011  006E88  259B               	addwf	(??_UDP_Receive+2)& (0+255),w,b
  6012  006E8A  6E59               	movwf	DHCP_Handler@length,c
  6013  006E8C  0EFF               	movlw	255
  6014  006E8E  219C               	addwfc	(??_UDP_Receive+3)& (0+255),w,b
  6015  006E90  6E5A               	movwf	DHCP_Handler@length+1,c
  6016  006E92  C0A1  F09D         	movff	UDP_Receive@hptr,??_UDP_Receive+4
  6017  006E96  0E02               	movlw	2
  6018  006E98  279D               	addwf	(??_UDP_Receive+4)& (0+255),f,b
  6019  006E9A  C09D  FFF6         	movff	??_UDP_Receive+4,tblptrl
  6020  006E9E                     	if	1	;There is more than 1 active tblptr byte
  6021  006E9E  0E10               	movlw	high __smallconst
  6022  006EA0  6EF7               	movwf	tblptrh,c
  6023  006EA2                     	endif
  6024  006EA2                     	if	0	;tblptru may be non-zero
  6025  006EA2                     	endif
  6026  006EA2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6027  006EA2  0E00               	movlw	low (__smallconst shr (0+16))
  6028  006EA4  6EF8               	movwf	tblptru,c
  6029  006EA6                     	endif
  6030  006EA6  0005               	push	
  6031  006EA8  6EFA               	movwf	pclath,c
  6032  006EAA  0009               	tblrd		*+
  6033  006EAC  50F5               	movf	tablat,w,c
  6034  006EAE  6EFD               	movwf	tosl,c
  6035  006EB0  0009               	tblrd		*+
  6036  006EB2  50F5               	movf	tablat,w,c
  6037  006EB4  6EFE               	movwf	tosh,c
  6038  006EB6  0009               	tblrd		*+
  6039  006EB8  50F5               	movf	tablat,w,c
  6040  006EBA  6EFF               	movwf	tosu,c
  6041  006EBC  50FA               	movf	pclath,w,c
  6042  006EBE  0012               	return		;indir
  6043  006EC0                     l8979:
  6044                           
  6045                           ; BSR set to: 2
  6046                           ;udpv4.c: 149: }
  6047                           ;udpv4.c: 150: hptr ++;
  6048  006EC0  0E05               	movlw	5
  6049  006EC2  0100               	movlb	0	; () banked
  6050  006EC4  27A1               	addwf	UDP_Receive@hptr& (0+255),f,b
  6051                           
  6052                           ; BSR set to: 0
  6053  006EC6  4B9F               	infsnz	UDP_Receive@x& (0+255),f,b
  6054  006EC8  2BA0               	incf	(UDP_Receive@x+1)& (0+255),f,b
  6055                           
  6056                           ; BSR set to: 0
  6057  006ECA  519F               	movf	UDP_Receive@x& (0+255),w,b
  6058  006ECC  11A0               	iorwf	(UDP_Receive@x+1)& (0+255),w,b
  6059  006ECE  E0BA               	bz	l8973
  6060  006ED0  0012               	return	
  6061  006ED2                     __end_of_UDP_Receive:
  6062                           	opt stack 0
  6063                           tosu	equ	0xFFF
  6064                           tosh	equ	0xFFE
  6065                           tosl	equ	0xFFD
  6066                           pclath	equ	0xFFA
  6067                           tblptru	equ	0xFF8
  6068                           tblptrh	equ	0xFF7
  6069                           tblptrl	equ	0xFF6
  6070                           tablat	equ	0xFF5
  6071                           prodh	equ	0xFF4
  6072                           prodl	equ	0xFF3
  6073                           intcon	equ	0xFF2
  6074                           intcon2	equ	0xFF1
  6075                           indf0	equ	0xFEF
  6076                           postinc0	equ	0xFEE
  6077                           fsr0h	equ	0xFEA
  6078                           fsr0l	equ	0xFE9
  6079                           wreg	equ	0xFE8
  6080                           indf2	equ	0xFDF
  6081                           postinc2	equ	0xFDE
  6082                           postdec2	equ	0xFDD
  6083                           fsr2h	equ	0xFDA
  6084                           fsr2l	equ	0xFD9
  6085                           status	equ	0xFD8
  6086                           
  6087 ;; *************** function _DHCP_Handler *****************
  6088 ;; Defined at:
  6089 ;;		line 162 in file "../../TCPIP Library/source/dhcp_client.c"
  6090 ;; Parameters:    Size  Location     Type
  6091 ;;  length          2   88[COMRAM] int 
  6092 ;; Auto vars:     Size  Location     Type
  6093 ;;  optionLength    1   50[BANK0 ] unsigned char 
  6094 ;;  option          1   37[BANK0 ] unsigned char 
  6095 ;;  ip              8   23[BANK0 ] unsigned int [4]
  6096 ;;  ethMAC          6   44[BANK0 ] struct .
  6097 ;;  ethPktMAC       6   38[BANK0 ] struct .
  6098 ;;  myip            4   51[BANK0 ] unsigned long 
  6099 ;;  v               4   31[BANK0 ] unsigned long 
  6100 ;;  v16             2   35[BANK0 ] unsigned int 
  6101 ;; Return value:  Size  Location     Type
  6102 ;;                  1    wreg      void 
  6103 ;; Registers used:
  6104 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6105 ;; Tracked objects:
  6106 ;;		On entry : F/0
  6107 ;;		On exit  : 0/0
  6108 ;;		Unchanged: 0/0
  6109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6110 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6111 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6112 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6113 ;;      Totals:         4      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6114 ;;Total ram usage:       36 bytes
  6115 ;; Hardware stack levels used:    1
  6116 ;; Hardware stack levels required when called:   11
  6117 ;; This function calls:
  6118 ;;		_DHCP_Request
  6119 ;;		_ETH_Dump
  6120 ;;		_ETH_GetMAC
  6121 ;;		_ETH_Read16
  6122 ;;		_ETH_Read32
  6123 ;;		_ETH_Read8
  6124 ;;		_ETH_ReadBlock
  6125 ;;		_memcmp
  6126 ;; This function is called by:
  6127 ;;		_UDP_Receive
  6128 ;; This function uses a non-reentrant model
  6129 ;;
  6130                           
  6131                           	psect	text30
  6132  00608C                     __ptext30:
  6133                           	opt stack 0
  6134  00608C                     _DHCP_Handler:
  6135                           	opt stack 15
  6136                           
  6137                           ; BSR set to: 0
  6138                           ;dhcp_client.c: 165: uint32_t myip,v;
  6139                           ;dhcp_client.c: 166: uint16_t v16;
  6140                           ;dhcp_client.c: 167: uint16_t ip[4];
  6141                           ;dhcp_client.c: 169: mac48Address_t ethPktMAC;
  6142                           ;dhcp_client.c: 170: mac48Address_t ethMAC;
  6143                           ;dhcp_client.c: 172: ETH_GetMAC((char*)&ethMAC);
  6144                           
  6145                           ;incstack = 0
  6146  00608C  0E8C               	movlw	low DHCP_Handler@ethMAC
  6147  00608E  6E08               	movwf	ETH_GetMAC@macAddr,c
  6148  006090  6A09               	clrf	ETH_GetMAC@macAddr+1,c
  6149  006092  ECB8  F03C         	call	_ETH_GetMAC	;wreg free
  6150                           
  6151                           ;dhcp_client.c: 178: if(length > 240)
  6152  006096  BE5A               	btfsc	DHCP_Handler@length+1,7,c
  6153  006098  0012               	return	
  6154  00609A  505A               	movf	DHCP_Handler@length+1,w,c
  6155  00609C  E104               	bnz	u11440
  6156  00609E  0EF1               	movlw	241
  6157  0060A0  5C59               	subwf	DHCP_Handler@length,w,c
  6158  0060A2  A0D8               	btfss	status,0,c
  6159  0060A4  0012               	return	
  6160  0060A6                     u11440:
  6161                           
  6162                           ;dhcp_client.c: 179: {
  6163                           ;dhcp_client.c: 180: v16 = ETH_Read16();
  6164  0060A6  EC2B  F040         	call	_ETH_Read16	;wreg free
  6165  0060AA  C003  F083         	movff	?_ETH_Read16,DHCP_Handler@v16
  6166  0060AE  C004  F084         	movff	?_ETH_Read16+1,DHCP_Handler@v16+1
  6167                           
  6168                           ; BSR set to: 1
  6169                           ;dhcp_client.c: 181: if(v16 == 0x0201)
  6170  0060B2  0100               	movlb	0	; () banked
  6171  0060B4  0583               	decf	DHCP_Handler@v16& (0+255),w,b
  6172  0060B6  E103               	bnz	u11451
  6173  0060B8  0E02               	movlw	2
  6174  0060BA  1984               	xorwf	(DHCP_Handler@v16+1)& (0+255),w,b
  6175  0060BC  A4D8               	btfss	status,2,c
  6176  0060BE                     u11451:
  6177  0060BE  0012               	return	
  6178                           
  6179                           ; BSR set to: 0
  6180                           ;dhcp_client.c: 182: {
  6181                           ;dhcp_client.c: 183: ETH_Dump(2);
  6182  0060C0  6A0C               	clrf	ETH_Dump@length+1,c
  6183  0060C2  0E02               	movlw	2
  6184  0060C4  6E0B               	movwf	ETH_Dump@length,c
  6185  0060C6  ECBC  F03F         	call	_ETH_Dump	;wreg free
  6186                           
  6187                           ;dhcp_client.c: 184: v = ETH_Read32();
  6188  0060CA  EC9F  F03D         	call	_ETH_Read32	;wreg free
  6189  0060CE  C003  F07F         	movff	?_ETH_Read32,DHCP_Handler@v
  6190  0060D2  C004  F080         	movff	?_ETH_Read32+1,DHCP_Handler@v+1
  6191  0060D6  C005  F081         	movff	?_ETH_Read32+2,DHCP_Handler@v+2
  6192  0060DA  C006  F082         	movff	?_ETH_Read32+3,DHCP_Handler@v+3
  6193                           
  6194                           ; BSR set to: 1
  6195                           ;dhcp_client.c: 185: if(v == xidValue)
  6196  0060DE  0E50               	movlw	80
  6197  0060E0  0100               	movlb	0	; () banked
  6198  0060E2  197F               	xorwf	DHCP_Handler@v& (0+255),w,b
  6199  0060E4  E109               	bnz	u11461
  6200  0060E6  0E48               	movlw	72
  6201  0060E8  1980               	xorwf	(DHCP_Handler@v+1)& (0+255),w,b
  6202  0060EA  E106               	bnz	u11461
  6203  0060EC  0E43               	movlw	67
  6204  0060EE  1981               	xorwf	(DHCP_Handler@v+2)& (0+255),w,b
  6205  0060F0  E103               	bnz	u11461
  6206  0060F2  0E4D               	movlw	77
  6207  0060F4  1982               	xorwf	(DHCP_Handler@v+3)& (0+255),w,b
  6208  0060F6  A4D8               	btfss	status,2,c
  6209  0060F8                     u11461:
  6210  0060F8  0012               	return	
  6211                           
  6212                           ; BSR set to: 0
  6213                           ;dhcp_client.c: 186: {
  6214                           ;dhcp_client.c: 187: ETH_Dump(8);
  6215  0060FA  6A0C               	clrf	ETH_Dump@length+1,c
  6216  0060FC  0E08               	movlw	8
  6217  0060FE  6E0B               	movwf	ETH_Dump@length,c
  6218  006100  ECBC  F03F         	call	_ETH_Dump	;wreg free
  6219                           
  6220                           ;dhcp_client.c: 188: myip = ETH_Read32();
  6221  006104  EC9F  F03D         	call	_ETH_Read32	;wreg free
  6222  006108  C003  F093         	movff	?_ETH_Read32,DHCP_Handler@myip
  6223  00610C  C004  F094         	movff	?_ETH_Read32+1,DHCP_Handler@myip+1
  6224  006110  C005  F095         	movff	?_ETH_Read32+2,DHCP_Handler@myip+2
  6225  006114  C006  F096         	movff	?_ETH_Read32+3,DHCP_Handler@myip+3
  6226                           
  6227                           ; BSR set to: 1
  6228                           ;dhcp_client.c: 189: ip[0] = myip & 0x00FF;
  6229  006118  0100               	movlb	0	; () banked
  6230  00611A  5193               	movf	DHCP_Handler@myip& (0+255),w,b
  6231  00611C  6F77               	movwf	DHCP_Handler@ip& (0+255),b
  6232  00611E  6B78               	clrf	(DHCP_Handler@ip+1)& (0+255),b
  6233                           
  6234                           ; BSR set to: 0
  6235                           ;dhcp_client.c: 190: ip[1] = (myip >> 8) & 0x00FF;
  6236  006120  5194               	movf	(DHCP_Handler@myip+1)& (0+255),w,b
  6237  006122  6F79               	movwf	(DHCP_Handler@ip+2)& (0+255),b
  6238  006124  6B7A               	clrf	(DHCP_Handler@ip+3)& (0+255),b
  6239                           
  6240                           ; BSR set to: 0
  6241                           ;dhcp_client.c: 191: ip[2] = (myip >> 16) & 0x00FF;
  6242  006126  5195               	movf	(DHCP_Handler@myip+2)& (0+255),w,b
  6243  006128  6F7B               	movwf	(DHCP_Handler@ip+4)& (0+255),b
  6244  00612A  6B7C               	clrf	(DHCP_Handler@ip+5)& (0+255),b
  6245                           
  6246                           ; BSR set to: 0
  6247                           ;dhcp_client.c: 192: ip[3] = (myip >> 24) & 0x00FF;
  6248  00612C  C096  F07D         	movff	DHCP_Handler@myip+3,DHCP_Handler@ip+6
  6249  006130  6B7E               	clrf	(DHCP_Handler@ip+7)& (0+255),b
  6250                           
  6251                           ; BSR set to: 0
  6252                           ;dhcp_client.c: 193: ETH_Dump(8);
  6253  006132  6A0C               	clrf	ETH_Dump@length+1,c
  6254  006134  0E08               	movlw	8
  6255  006136  6E0B               	movwf	ETH_Dump@length,c
  6256  006138  ECBC  F03F         	call	_ETH_Dump	;wreg free
  6257                           
  6258                           ; BSR set to: 2
  6259                           ;dhcp_client.c: 194: ETH_ReadBlock((char *)&ethPktMAC, sizeof(ethPktMAC.s));
  6260  00613C  0E86               	movlw	low DHCP_Handler@ethPktMAC
  6261  00613E  6E03               	movwf	ETH_ReadBlock@data,c
  6262  006140  6A04               	clrf	ETH_ReadBlock@data+1,c
  6263  006142  6A06               	clrf	ETH_ReadBlock@length+1,c
  6264  006144  0E06               	movlw	6
  6265  006146  6E05               	movwf	ETH_ReadBlock@length,c
  6266  006148  ECDB  F03A         	call	_ETH_ReadBlock	;wreg free
  6267                           
  6268                           ; BSR set to: 1
  6269                           ;dhcp_client.c: 196: if(memcmp(&ethPktMAC.s, &ethMAC.s, 6)== 0)
  6270  00614C  0E86               	movlw	low DHCP_Handler@ethPktMAC
  6271  00614E  6E02               	movwf	memcmp@s1,c
  6272  006150  0E8C               	movlw	low DHCP_Handler@ethMAC
  6273  006152  6E03               	movwf	memcmp@s2,c
  6274  006154  6A05               	clrf	memcmp@n+1,c
  6275  006156  0E06               	movlw	6
  6276  006158  6E04               	movwf	memcmp@n,c
  6277  00615A  EC97  F03F         	call	_memcmp	;wreg free
  6278  00615E  5002               	movf	?_memcmp,w,c
  6279  006160  1003               	iorwf	?_memcmp+1,w,c
  6280  006162  E001 D0C1          	bnz	l8379
  6281                           
  6282                           ; BSR set to: 1
  6283                           ;dhcp_client.c: 197: {
  6284                           ;dhcp_client.c: 198: ETH_Dump(202);
  6285  006166  6A0C               	clrf	ETH_Dump@length+1,c
  6286  006168  0ECA               	movlw	202
  6287  00616A  6E0B               	movwf	ETH_Dump@length,c
  6288  00616C  ECBC  F03F         	call	_ETH_Dump	;wreg free
  6289                           
  6290                           ;dhcp_client.c: 199: if(ETH_Read32() == 0x63825363)
  6291  006170  EC9F  F03D         	call	_ETH_Read32	;wreg free
  6292  006174  0E63               	movlw	99
  6293  006176  1803               	xorwf	?_ETH_Read32,w,c
  6294  006178  E109               	bnz	u11481
  6295  00617A  0E53               	movlw	83
  6296  00617C  1804               	xorwf	?_ETH_Read32+1,w,c
  6297  00617E  E106               	bnz	u11481
  6298  006180  0E82               	movlw	130
  6299  006182  1805               	xorwf	?_ETH_Read32+2,w,c
  6300  006184  E103               	bnz	u11481
  6301  006186  0E63               	movlw	99
  6302  006188  1806               	xorwf	?_ETH_Read32+3,w,c
  6303  00618A  A4D8               	btfss	status,2,c
  6304  00618C                     u11481:
  6305  00618C  0012               	return	
  6306                           
  6307                           ; BSR set to: 1
  6308                           ;dhcp_client.c: 200: {
  6309                           ;dhcp_client.c: 201: length -= 240;
  6310  00618E  0E10               	movlw	16
  6311  006190  2659               	addwf	DHCP_Handler@length,f,c
  6312  006192  0EFF               	movlw	255
  6313  006194  225A               	addwfc	DHCP_Handler@length+1,f,c
  6314                           
  6315                           ;dhcp_client.c: 202: while(length>0)
  6316  006196  D09A               	goto	l8373
  6317  006198                     l8325:
  6318                           
  6319                           ;dhcp_client.c: 203: {
  6320                           ;dhcp_client.c: 205: uint8_t option, optionLength;
  6321                           ;dhcp_client.c: 206: option = ETH_Read8();
  6322  006198  ECB9  F041         	call	_ETH_Read8	;wreg free
  6323  00619C  0100               	movlb	0	; () banked
  6324  00619E  6F85               	movwf	DHCP_Handler@option& (0+255),b
  6325                           
  6326                           ;dhcp_client.c: 207: optionLength = ETH_Read8();
  6327  0061A0  ECB9  F041         	call	_ETH_Read8	;wreg free
  6328  0061A4  0100               	movlb	0	; () banked
  6329  0061A6  6F92               	movwf	DHCP_Handler@optionLength& (0+255),b
  6330                           
  6331                           ; BSR set to: 0
  6332                           ;dhcp_client.c: 208: length -= 2 + optionLength;
  6333  0061A8  5192               	movf	DHCP_Handler@optionLength& (0+255),w,b
  6334  0061AA  6E5B               	movwf	??_DHCP_Handler& (0+255),c
  6335  0061AC  6A5C               	clrf	(??_DHCP_Handler+1)& (0+255),c
  6336  0061AE  0E02               	movlw	2
  6337  0061B0  265B               	addwf	??_DHCP_Handler,f,c
  6338  0061B2  0E00               	movlw	0
  6339  0061B4  225C               	addwfc	??_DHCP_Handler+1,f,c
  6340  0061B6  505B               	movf	??_DHCP_Handler,w,c
  6341  0061B8  5E59               	subwf	DHCP_Handler@length,f,c
  6342  0061BA  505C               	movf	??_DHCP_Handler+1,w,c
  6343  0061BC  5A5A               	subwfb	DHCP_Handler@length+1,f,c
  6344                           
  6345                           ;dhcp_client.c: 209: switch(option)
  6346  0061BE  D078               	goto	l8371
  6347  0061C0                     l8329:
  6348                           
  6349                           ; BSR set to: 0
  6350                           ;dhcp_client.c: 212: ipv4SubnetMask = ETH_Read32();
  6351  0061C0  EC9F  F03D         	call	_ETH_Read32	;wreg free
  6352  0061C4  C003  F192         	movff	?_ETH_Read32,_ipv4SubnetMask
  6353  0061C8  C004  F193         	movff	?_ETH_Read32+1,_ipv4SubnetMask+1
  6354  0061CC  C005  F194         	movff	?_ETH_Read32+2,_ipv4SubnetMask+2
  6355  0061D0  C006  F195         	movff	?_ETH_Read32+3,_ipv4SubnetMask+3
  6356                           
  6357                           ;dhcp_client.c: 213: break;
  6358  0061D4  D07B               	goto	l8373
  6359  0061D6                     l8331:
  6360                           
  6361                           ; BSR set to: 0
  6362                           ;dhcp_client.c: 215: ipv4Router = ETH_Read32();
  6363  0061D6  EC9F  F03D         	call	_ETH_Read32	;wreg free
  6364  0061DA  C003  F226         	movff	?_ETH_Read32,_ipv4Router
  6365  0061DE  C004  F227         	movff	?_ETH_Read32+1,_ipv4Router+1
  6366  0061E2  C005  F228         	movff	?_ETH_Read32+2,_ipv4Router+2
  6367  0061E6  C006  F229         	movff	?_ETH_Read32+3,_ipv4Router+3
  6368                           
  6369                           ;dhcp_client.c: 216: break;
  6370  0061EA  D070               	goto	l8373
  6371  0061EC                     l8333:
  6372                           
  6373                           ; BSR set to: 0
  6374                           ;dhcp_client.c: 219: if(optionLength >= 4)
  6375  0061EC  0E03               	movlw	3
  6376  0061EE  6592               	cpfsgt	DHCP_Handler@optionLength& (0+255),b
  6377  0061F0  D06D               	goto	l8373
  6378                           
  6379                           ; BSR set to: 0
  6380                           ;dhcp_client.c: 220: {
  6381                           ;dhcp_client.c: 221: ipv4DNS[0] = ETH_Read32();
  6382  0061F2  EC9F  F03D         	call	_ETH_Read32	;wreg free
  6383  0061F6  C003  F210         	movff	?_ETH_Read32,_ipv4DNS
  6384  0061FA  C004  F211         	movff	?_ETH_Read32+1,_ipv4DNS+1
  6385  0061FE  C005  F212         	movff	?_ETH_Read32+2,_ipv4DNS+2
  6386  006202  C006  F213         	movff	?_ETH_Read32+3,_ipv4DNS+3
  6387                           
  6388                           ; BSR set to: 1
  6389                           ;dhcp_client.c: 222: optionLength -= 4;
  6390  006206  0E04               	movlw	4
  6391  006208  0100               	movlb	0	; () banked
  6392  00620A  5F92               	subwf	DHCP_Handler@optionLength& (0+255),f,b
  6393                           
  6394                           ; BSR set to: 0
  6395                           ;dhcp_client.c: 223: if(optionLength >= 4)
  6396  00620C  0E03               	movlw	3
  6397  00620E  6592               	cpfsgt	DHCP_Handler@optionLength& (0+255),b
  6398  006210  D05D               	goto	l8373
  6399                           
  6400                           ; BSR set to: 0
  6401                           ;dhcp_client.c: 224: {
  6402                           ;dhcp_client.c: 225: ipv4DNS[1] = ETH_Read32();
  6403  006212  EC9F  F03D         	call	_ETH_Read32	;wreg free
  6404  006216  C003  F214         	movff	?_ETH_Read32,_ipv4DNS+4
  6405  00621A  C004  F215         	movff	?_ETH_Read32+1,_ipv4DNS+5
  6406  00621E  C005  F216         	movff	?_ETH_Read32+2,_ipv4DNS+6
  6407  006222  C006  F217         	movff	?_ETH_Read32+3,_ipv4DNS+7
  6408  006226                     l8343:
  6409                           
  6410                           ; BSR set to: 1
  6411                           ;dhcp_client.c: 226: optionLength -= 4;
  6412  006226  0E04               	movlw	4
  6413  006228  0100               	movlb	0	; () banked
  6414  00622A  5F92               	subwf	DHCP_Handler@optionLength& (0+255),f,b
  6415  00622C  D04F               	goto	l8373
  6416  00622E                     l8345:
  6417                           
  6418                           ; BSR set to: 0
  6419                           ;dhcp_client.c: 231: if(optionLength >= 4)
  6420  00622E  0E03               	movlw	3
  6421  006230  6592               	cpfsgt	DHCP_Handler@optionLength& (0+255),b
  6422  006232  D04C               	goto	l8373
  6423                           
  6424                           ; BSR set to: 0
  6425                           ;dhcp_client.c: 232: {
  6426                           ;dhcp_client.c: 233: dhcpLeaseTime = ETH_Read32();
  6427  006234  EC9F  F03D         	call	_ETH_Read32	;wreg free
  6428  006238  C003  F18A         	movff	?_ETH_Read32,_dhcpLeaseTime
  6429  00623C  C004  F18B         	movff	?_ETH_Read32+1,_dhcpLeaseTime+1
  6430  006240  C005  F18C         	movff	?_ETH_Read32+2,_dhcpLeaseTime+2
  6431  006244  C006  F18D         	movff	?_ETH_Read32+3,_dhcpLeaseTime+3
  6432  006248  D7EE               	goto	l8343
  6433  00624A                     l8351:
  6434                           
  6435                           ; BSR set to: 0
  6436                           ;dhcp_client.c: 238: dhcpServerId = ETH_Read32();
  6437  00624A  EC9F  F03D         	call	_ETH_Read32	;wreg free
  6438  00624E  C003  F222         	movff	?_ETH_Read32,_dhcpServerId
  6439  006252  C004  F223         	movff	?_ETH_Read32+1,_dhcpServerId+1
  6440  006256  C005  F224         	movff	?_ETH_Read32+2,_dhcpServerId+2
  6441  00625A  C006  F225         	movff	?_ETH_Read32+3,_dhcpServerId+3
  6442  00625E  D7E3               	goto	l8343
  6443  006260                     l900:
  6444                           
  6445                           ; BSR set to: 1
  6446                           ;dhcp_client.c: 245: ipv4Address = myip;
  6447  006260  C093  F18E         	movff	DHCP_Handler@myip,_ipv4Address
  6448  006264  C094  F18F         	movff	DHCP_Handler@myip+1,_ipv4Address+1
  6449  006268  C095  F190         	movff	DHCP_Handler@myip+2,_ipv4Address+2
  6450  00626C  C096  F191         	movff	DHCP_Handler@myip+3,_ipv4Address+3
  6451                           
  6452                           ; BSR set to: 1
  6453                           ;dhcp_client.c: 246: clientState = REQUESTING;
  6454  006270  0E04               	movlw	4
  6455  006272  D00B               	goto	L3
  6456  006274                     l902:
  6457                           
  6458                           ; BSR set to: 1
  6459                           ;dhcp_client.c: 249: ipv4Address = myip;
  6460  006274  C093  F18E         	movff	DHCP_Handler@myip,_ipv4Address
  6461  006278  C094  F18F         	movff	DHCP_Handler@myip+1,_ipv4Address+1
  6462  00627C  C095  F190         	movff	DHCP_Handler@myip+2,_ipv4Address+2
  6463  006280  C096  F191         	movff	DHCP_Handler@myip+3,_ipv4Address+3
  6464                           
  6465                           ; BSR set to: 1
  6466                           ;dhcp_client.c: 250: clientState = BOUND;
  6467  006284  0E05               	movlw	5
  6468  006286  D001               	goto	L3
  6469  006288                     l8359:
  6470                           
  6471                           ; BSR set to: 1
  6472                           ;dhcp_client.c: 254: clientState = INIT;
  6473  006288  0E01               	movlw	1
  6474  00628A                     L3:
  6475  00628A  6E5D               	movwf	_clientState,c
  6476                           
  6477                           ;dhcp_client.c: 255: break;
  6478  00628C  D008               	goto	l8365
  6479  00628E                     l8363:
  6480                           
  6481                           ; BSR set to: 0
  6482  00628E  ECB9  F041         	call	_ETH_Read8	;wreg free
  6483                           
  6484                           ; Switch size 1, requested type "speed"
  6485                           ; Number of cases is 3, Range of values is 2 to 6
  6486                           ; switch strategies available:
  6487                           ; Name         Instructions Cycles
  6488                           ; simple_byte           10     6 (average)
  6489                           ;	Chosen strategy is simple_byte
  6490  006292  0A02               	xorlw	2	; case 2
  6491  006294  E0E5               	bz	l900
  6492  006296  0A07               	xorlw	7	; case 5
  6493  006298  E0ED               	bz	l902
  6494  00629A  0A03               	xorlw	3	; case 6
  6495  00629C  E0F5               	bz	l8359
  6496  00629E                     l8365:
  6497                           
  6498                           ; BSR set to: 1
  6499                           ;dhcp_client.c: 259: optionLength -=1;
  6500  00629E  0100               	movlb	0	; () banked
  6501  0062A0  0792               	decf	DHCP_Handler@optionLength& (0+255),f,b
  6502                           
  6503                           ;dhcp_client.c: 260: break;
  6504  0062A2  D014               	goto	l8373
  6505  0062A4                     l8367:
  6506                           
  6507                           ; BSR set to: 0
  6508                           ;dhcp_client.c: 262: ETH_Dump(optionLength);
  6509  0062A4  C092  F00B         	movff	DHCP_Handler@optionLength,ETH_Dump@length
  6510  0062A8  6A0C               	clrf	ETH_Dump@length+1,c
  6511  0062AA  ECBC  F03F         	call	_ETH_Dump	;wreg free
  6512                           
  6513                           ;dhcp_client.c: 263: break;
  6514  0062AE  D00E               	goto	l8373
  6515  0062B0                     l8371:
  6516                           
  6517                           ; BSR set to: 0
  6518  0062B0  5185               	movf	DHCP_Handler@option& (0+255),w,b
  6519                           
  6520                           ; Switch size 1, requested type "speed"
  6521                           ; Number of cases is 6, Range of values is 1 to 54
  6522                           ; switch strategies available:
  6523                           ; Name         Instructions Cycles
  6524                           ; simple_byte           19    10 (average)
  6525                           ;	Chosen strategy is simple_byte
  6526  0062B2  0A01               	xorlw	1	; case 1
  6527  0062B4  E085               	bz	l8329
  6528  0062B6  0A02               	xorlw	2	; case 3
  6529  0062B8  E08E               	bz	l8331
  6530  0062BA  0A05               	xorlw	5	; case 6
  6531  0062BC  E097               	bz	l8333
  6532  0062BE  0A35               	xorlw	53	; case 51
  6533  0062C0  E0B6               	bz	l8345
  6534  0062C2  0A06               	xorlw	6	; case 53
  6535  0062C4  E0E4               	bz	l8363
  6536  0062C6  0A03               	xorlw	3	; case 54
  6537  0062C8  E0C0               	bz	l8351
  6538  0062CA  D7EC               	goto	l8367
  6539  0062CC                     l8373:
  6540  0062CC  BE5A               	btfsc	DHCP_Handler@length+1,7,c
  6541  0062CE  D005               	goto	l8375
  6542  0062D0  505A               	movf	DHCP_Handler@length+1,w,c
  6543  0062D2  E102               	bnz	u11521
  6544  0062D4  0459               	decf	DHCP_Handler@length,w,c
  6545  0062D6  B0D8               	btfsc	status,0,c
  6546  0062D8                     u11521:
  6547  0062D8  D75F               	goto	l8325
  6548  0062DA                     l8375:
  6549                           
  6550                           ;dhcp_client.c: 265: }
  6551                           ;dhcp_client.c: 266: if (clientState == REQUESTING)
  6552  0062DA  0E04               	movlw	4
  6553  0062DC  185D               	xorwf	_clientState,w,c
  6554  0062DE  A4D8               	btfss	status,2,c
  6555  0062E0  0012               	return	
  6556                           
  6557                           ;dhcp_client.c: 267: DHCP_Request( DHCP_REQUEST );
  6558  0062E2  0E03               	movlw	3
  6559  0062E4  EF7C  F031         	goto	_DHCP_Request
  6560  0062E8                     l8379:
  6561                           
  6562                           ; BSR set to: 1
  6563                           ;dhcp_client.c: 270: else
  6564                           ;dhcp_client.c: 271: ETH_Dump(length - 34);
  6565  0062E8  0EDE               	movlw	222
  6566  0062EA  2459               	addwf	DHCP_Handler@length,w,c
  6567  0062EC  6E0B               	movwf	ETH_Dump@length,c
  6568  0062EE  0EFF               	movlw	255
  6569  0062F0  205A               	addwfc	DHCP_Handler@length+1,w,c
  6570  0062F2  6E0C               	movwf	ETH_Dump@length+1,c
  6571  0062F4  EFBC  F03F         	goto	_ETH_Dump	;wreg free
  6572  0062F8                     __end_of_DHCP_Handler:
  6573                           	opt stack 0
  6574                           tosu	equ	0xFFF
  6575                           tosh	equ	0xFFE
  6576                           tosl	equ	0xFFD
  6577                           pclath	equ	0xFFA
  6578                           tblptru	equ	0xFF8
  6579                           tblptrh	equ	0xFF7
  6580                           tblptrl	equ	0xFF6
  6581                           tablat	equ	0xFF5
  6582                           prodh	equ	0xFF4
  6583                           prodl	equ	0xFF3
  6584                           intcon	equ	0xFF2
  6585                           intcon2	equ	0xFF1
  6586                           indf0	equ	0xFEF
  6587                           postinc0	equ	0xFEE
  6588                           fsr0h	equ	0xFEA
  6589                           fsr0l	equ	0xFE9
  6590                           wreg	equ	0xFE8
  6591                           indf2	equ	0xFDF
  6592                           postinc2	equ	0xFDE
  6593                           postdec2	equ	0xFDD
  6594                           fsr2h	equ	0xFDA
  6595                           fsr2l	equ	0xFD9
  6596                           status	equ	0xFD8
  6597                           
  6598 ;; *************** function _memcmp *****************
  6599 ;; Defined at:
  6600 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\memcmp.c"
  6601 ;; Parameters:    Size  Location     Type
  6602 ;;  s1              1    1[COMRAM] PTR const void 
  6603 ;;		 -> DHCP_Handler@ethPktMAC(6), 
  6604 ;;  s2              1    2[COMRAM] PTR const void 
  6605 ;;		 -> DHCP_Handler@ethMAC(6), 
  6606 ;;  n               2    3[COMRAM] unsigned int 
  6607 ;; Auto vars:     Size  Location     Type
  6608 ;;		None
  6609 ;; Return value:  Size  Location     Type
  6610 ;;                  2    1[COMRAM] int 
  6611 ;; Registers used:
  6612 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6613 ;; Tracked objects:
  6614 ;;		On entry : F/1
  6615 ;;		On exit  : F/1
  6616 ;;		Unchanged: F/0
  6617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6618 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6620 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6621 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6622 ;;Total ram usage:        6 bytes
  6623 ;; Hardware stack levels used:    1
  6624 ;; Hardware stack levels required when called:    3
  6625 ;; This function calls:
  6626 ;;		Nothing
  6627 ;; This function is called by:
  6628 ;;		_DHCP_Handler
  6629 ;; This function uses a non-reentrant model
  6630 ;;
  6631                           
  6632                           	psect	text31
  6633  007F2E                     __ptext31:
  6634                           	opt stack 0
  6635  007F2E                     _memcmp:
  6636                           	opt stack 22
  6637                           
  6638                           ; BSR set to: 1
  6639                           
  6640                           ;incstack = 0
  6641  007F2E  D01A               	goto	l8253
  6642  007F30                     l8245:
  6643                           
  6644                           ; BSR set to: 1
  6645  007F30  5003               	movf	memcmp@s2,w,c
  6646  007F32  6ED9               	movwf	fsr2l,c
  6647  007F34  6ADA               	clrf	fsr2h,c
  6648  007F36  5002               	movf	memcmp@s1,w,c
  6649  007F38  6EE1               	movwf	fsr1l,c
  6650  007F3A  6AE2               	clrf	fsr1h,c
  6651  007F3C  50DE               	movf	postinc2,w,c
  6652  007F3E  18E6               	xorwf	postinc1,w,c
  6653  007F40  E00F               	bz	l8251
  6654                           
  6655                           ; BSR set to: 1
  6656  007F42  5002               	movf	memcmp@s1,w,c
  6657  007F44  6ED9               	movwf	fsr2l,c
  6658  007F46  6ADA               	clrf	fsr2h,c
  6659  007F48  50DF               	movf	indf2,w,c
  6660  007F4A  6E06               	movwf	??_memcmp& (0+255),c
  6661  007F4C  5003               	movf	memcmp@s2,w,c
  6662  007F4E  6ED9               	movwf	fsr2l,c
  6663  007F50  6ADA               	clrf	fsr2h,c
  6664  007F52  50DF               	movf	indf2,w,c
  6665  007F54  5C06               	subwf	??_memcmp,w,c
  6666  007F56  6E02               	movwf	?_memcmp,c
  6667  007F58  6A03               	clrf	?_memcmp+1,c
  6668  007F5A  A0D8               	btfss	status,0,c
  6669  007F5C  0603               	decf	?_memcmp+1,f,c
  6670  007F5E  0012               	return	
  6671  007F60                     l8251:
  6672                           
  6673                           ; BSR set to: 1
  6674  007F60  2A02               	incf	memcmp@s1,f,c
  6675  007F62  2A03               	incf	memcmp@s2,f,c
  6676  007F64                     l8253:
  6677                           
  6678                           ; BSR set to: 1
  6679  007F64  0604               	decf	memcmp@n,f,c
  6680  007F66  A0D8               	btfss	status,0,c
  6681  007F68  0605               	decf	memcmp@n+1,f,c
  6682  007F6A  2804               	incf	memcmp@n,w,c
  6683  007F6C  E1E1               	bnz	l8245
  6684  007F6E  2805               	incf	memcmp@n+1,w,c
  6685  007F70  E1DF               	bnz	l8245
  6686                           
  6687                           ; BSR set to: 1
  6688  007F72  6A02               	clrf	?_memcmp,c
  6689  007F74  6A03               	clrf	?_memcmp+1,c
  6690                           
  6691                           ; BSR set to: 1
  6692  007F76  0012               	return		;funcret
  6693  007F78                     __end_of_memcmp:
  6694                           	opt stack 0
  6695                           tosu	equ	0xFFF
  6696                           tosh	equ	0xFFE
  6697                           tosl	equ	0xFFD
  6698                           pclath	equ	0xFFA
  6699                           tblptru	equ	0xFF8
  6700                           tblptrh	equ	0xFF7
  6701                           tblptrl	equ	0xFF6
  6702                           tablat	equ	0xFF5
  6703                           prodh	equ	0xFF4
  6704                           prodl	equ	0xFF3
  6705                           intcon	equ	0xFF2
  6706                           intcon2	equ	0xFF1
  6707                           indf0	equ	0xFEF
  6708                           postinc0	equ	0xFEE
  6709                           fsr0h	equ	0xFEA
  6710                           fsr0l	equ	0xFE9
  6711                           wreg	equ	0xFE8
  6712                           postinc1	equ	0xFE6
  6713                           fsr1h	equ	0xFE2
  6714                           fsr1l	equ	0xFE1
  6715                           indf2	equ	0xFDF
  6716                           postinc2	equ	0xFDE
  6717                           postdec2	equ	0xFDD
  6718                           fsr2h	equ	0xFDA
  6719                           fsr2l	equ	0xFD9
  6720                           status	equ	0xFD8
  6721                           
  6722 ;; *************** function _ETH_Read32 *****************
  6723 ;; Defined at:
  6724 ;;		line 277 in file "../../TCPIP Library/ethernet_drivers/encX24j600_spi.c"
  6725 ;; Parameters:    Size  Location     Type
  6726 ;;		None
  6727 ;; Auto vars:     Size  Location     Type
  6728 ;;  ret             4    6[COMRAM] unsigned long 
  6729 ;; Return value:  Size  Location     Type
  6730 ;;                  4    2[COMRAM] unsigned long 
  6731 ;; Registers used:
  6732 ;;		wreg, status,2, status,0, cstack
  6733 ;; Tracked objects:
  6734 ;;		On entry : D/2
  6735 ;;		On exit  : F/1
  6736 ;;		Unchanged: 0/0
  6737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6738 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6739 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6741 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6742 ;;Total ram usage:        8 bytes
  6743 ;; Hardware stack levels used:    1
  6744 ;; Hardware stack levels required when called:    4
  6745 ;; This function calls:
  6746 ;;		_SPI_ExchangeByte
  6747 ;; This function is called by:
  6748 ;;		_DHCP_Handler
  6749 ;; This function uses a non-reentrant model
  6750 ;;
  6751                           
  6752                           	psect	text32
  6753  007B3E                     __ptext32:
  6754                           	opt stack 0
  6755  007B3E                     _ETH_Read32:
  6756                           	opt stack 21
  6757                           
  6758                           ;encX24j600_spi.c: 279: uint32_t ret;
  6759                           ;encX24j600_spi.c: 280: if(rxPacketStatusVector.ByteCount >= sizeof(ret))
  6760                           
  6761                           ; BSR set to: 1
  6762                           ;incstack = 0
  6763  007B3E  0102               	movlb	2	; () banked
  6764  007B40  5119               	movf	(_rxPacketStatusVector+1)& (0+255),w,b
  6765  007B42  E103               	bnz	u11080
  6766  007B44  0E04               	movlw	4
  6767  007B46  5D18               	subwf	_rxPacketStatusVector& (0+255),w,b
  6768  007B48  E325               	bnc	l626
  6769  007B4A                     u11080:
  6770                           
  6771                           ; BSR set to: 2
  6772                           
  6773                           ;encX24j600_spi.c: 281: {
  6774                           ;encX24j600_spi.c: 282: do{LATB3 = 0;} while(0);
  6775  007B4A  968A               	bcf	3978,3,c	;volatile
  6776                           
  6777                           ; BSR set to: 2
  6778                           ;encX24j600_spi.c: 283: SPI_ExchangeByte(rrxdata_inst);
  6779  007B4C  0E2C               	movlw	44
  6780  007B4E  ECD2  F043         	call	_SPI_ExchangeByte
  6781                           
  6782                           ;encX24j600_spi.c: 284: ((uint8_t *)&ret)[3] = SPI_ExchangeByte(0);
  6783  007B52  0E00               	movlw	0
  6784  007B54  ECD2  F043         	call	_SPI_ExchangeByte
  6785  007B58  6E0A               	movwf	ETH_Read32@ret+3,c
  6786                           
  6787                           ;encX24j600_spi.c: 285: ((uint8_t *)&ret)[2] = SPI_ExchangeByte(0);
  6788  007B5A  0E00               	movlw	0
  6789  007B5C  ECD2  F043         	call	_SPI_ExchangeByte
  6790  007B60  6E09               	movwf	ETH_Read32@ret+2,c
  6791                           
  6792                           ;encX24j600_spi.c: 286: ((uint8_t *)&ret)[1] = SPI_ExchangeByte(0);
  6793  007B62  0E00               	movlw	0
  6794  007B64  ECD2  F043         	call	_SPI_ExchangeByte
  6795  007B68  6E08               	movwf	ETH_Read32@ret+1,c
  6796                           
  6797                           ;encX24j600_spi.c: 287: ((uint8_t *)&ret)[0] = SPI_ExchangeByte(0);
  6798  007B6A  0E00               	movlw	0
  6799  007B6C  ECD2  F043         	call	_SPI_ExchangeByte
  6800  007B70  6E07               	movwf	ETH_Read32@ret,c
  6801  007B72  868A               	bsf	3978,3,c	;volatile
  6802                           
  6803                           ;encX24j600_spi.c: 289: rxPacketStatusVector.ByteCount -= sizeof(ret);
  6804  007B74  0E04               	movlw	4
  6805  007B76  0102               	movlb	2	; () banked
  6806  007B78  5F18               	subwf	_rxPacketStatusVector& (0+255),f,b
  6807  007B7A  0E00               	movlw	0
  6808  007B7C  5B19               	subwfb	(_rxPacketStatusVector+1)& (0+255),f,b
  6809                           
  6810                           ; BSR set to: 2
  6811                           ;encX24j600_spi.c: 290: ethData.error = 0;
  6812  007B7E  0101               	movlb	1	; () banked
  6813  007B80  9183               	bcf	_ethData& (0+255),0,b	;volatile
  6814                           
  6815                           ; BSR set to: 1
  6816                           ;encX24j600_spi.c: 291: return ret;
  6817  007B82  C007  F003         	movff	ETH_Read32@ret,?_ETH_Read32
  6818  007B86  C008  F004         	movff	ETH_Read32@ret+1,?_ETH_Read32+1
  6819  007B8A  C009  F005         	movff	ETH_Read32@ret+2,?_ETH_Read32+2
  6820  007B8E  C00A  F006         	movff	ETH_Read32@ret+3,?_ETH_Read32+3
  6821  007B92  0C00               	retlw	0
  6822  007B94                     l626:
  6823                           
  6824                           ; BSR set to: 2
  6825                           ;encX24j600_spi.c: 293: else
  6826                           ;encX24j600_spi.c: 294: {
  6827                           ;encX24j600_spi.c: 295: ethData.error = 1;
  6828  007B94  0101               	movlb	1	; () banked
  6829  007B96  8183               	bsf	_ethData& (0+255),0,b	;volatile
  6830                           
  6831                           ;encX24j600_spi.c: 296: return 0;
  6832  007B98  6A03               	clrf	?_ETH_Read32,c
  6833  007B9A  6A04               	clrf	?_ETH_Read32+1,c
  6834  007B9C  6A05               	clrf	?_ETH_Read32+2,c
  6835  007B9E  6A06               	clrf	?_ETH_Read32+3,c
  6836                           
  6837                           ; BSR set to: 1
  6838  007BA0  0012               	return		;funcret
  6839  007BA2                     __end_of_ETH_Read32:
  6840                           	opt stack 0
  6841                           tosu	equ	0xFFF
  6842                           tosh	equ	0xFFE
  6843                           tosl	equ	0xFFD
  6844                           pclath	equ	0xFFA
  6845                           tblptru	equ	0xFF8
  6846                           tblptrh	equ	0xFF7
  6847                           tblptrl	equ	0xFF6
  6848                           tablat	equ	0xFF5
  6849                           prodh	equ	0xFF4
  6850                           prodl	equ	0xFF3
  6851                           intcon	equ	0xFF2
  6852                           intcon2	equ	0xFF1
  6853                           indf0	equ	0xFEF
  6854                           postinc0	equ	0xFEE
  6855                           fsr0h	equ	0xFEA
  6856                           fsr0l	equ	0xFE9
  6857                           wreg	equ	0xFE8
  6858                           postinc1	equ	0xFE6
  6859                           fsr1h	equ	0xFE2
  6860                           fsr1l	equ	0xFE1
  6861                           indf2	equ	0xFDF
  6862                           postinc2	equ	0xFDE
  6863                           postdec2	equ	0xFDD
  6864                           fsr2h	equ	0xFDA
  6865                           fsr2l	equ	0xFD9
  6866                           status	equ	0xFD8
  6867                           
  6868 ;; *************** function _TCP_Recv *****************
  6869 ;; Defined at:
  6870 ;;		line 483 in file "../../TCPIP Library/source/tcpv4.c"
  6871 ;; Parameters:    Size  Location     Type
  6872 ;;  remoteAddres    4  116[BANK0 ] unsigned long 
  6873 ;;  length          2  120[BANK0 ] unsigned int 
  6874 ;; Auto vars:     Size  Location     Type
  6875 ;;  tcbPtr          2  151[BANK0 ] PTR struct .
  6876 ;;		 -> ?_sprintf(2), ?_printf(2), main@str(32), STR_5(13), 
  6877 ;;		 -> STR_4(17), DEMO_TCP_EchoServer@port7TCB(55), Network_Read@debug_str(80), NULL(0), 
  6878 ;;  count           1  150[BANK0 ] char 
  6879 ;; Return value:  Size  Location     Type
  6880 ;;                  1    wreg      void 
  6881 ;; Registers used:
  6882 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6883 ;; Tracked objects:
  6884 ;;		On entry : F/0
  6885 ;;		On exit  : C/0
  6886 ;;		Unchanged: 0/0
  6887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6888 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6889 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6890 ;;      Temps:          0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6891 ;;      Totals:         0      37       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6892 ;;Total ram usage:       37 bytes
  6893 ;; Hardware stack levels used:    1
  6894 ;; Hardware stack levels required when called:   12
  6895 ;; This function calls:
  6896 ;;		_ETH_ReadBlock
  6897 ;;		_TCP_FiniteStateMachine
  6898 ;;		_TCP_ParseTCPOptions
  6899 ;; This function is called by:
  6900 ;;		_IPV4_Packet
  6901 ;; This function uses a non-reentrant model
  6902 ;;
  6903                           
  6904                           	psect	text33
  6905  0045DC                     __ptext33:
  6906                           	opt stack 0
  6907  0045DC                     _TCP_Recv:
  6908                           	opt stack 15
  6909                           
  6910                           ; BSR set to: 0
  6911                           ;tcpv4.c: 485: tcpTCB_t *tcbPtr;
  6912                           ;tcpv4.c: 486: socklistsize_t count = 0;
  6913                           
  6914                           ; BSR set to: 1
  6915                           ;incstack = 0
  6916  0045DC  6BF6               	clrf	TCP_Recv@count& (0+255),b
  6917                           
  6918                           ;tcpv4.c: 490: receivedRemoteAddress = 0;
  6919  0045DE  0101               	movlb	1	; () banked
  6920  0045E0  6B96               	clrf	_receivedRemoteAddress& (0+255),b
  6921  0045E2  6B97               	clrf	(_receivedRemoteAddress+1)& (0+255),b
  6922  0045E4  6B98               	clrf	(_receivedRemoteAddress+2)& (0+255),b
  6923  0045E6  6B99               	clrf	(_receivedRemoteAddress+3)& (0+255),b
  6924                           
  6925                           ;tcpv4.c: 491: rcvPayloadLen = 0;
  6926  0045E8  6BA0               	clrf	_rcvPayloadLen& (0+255),b
  6927  0045EA  6BA1               	clrf	(_rcvPayloadLen+1)& (0+255),b
  6928                           
  6929                           ; BSR set to: 1
  6930                           ;tcpv4.c: 493: ETH_ReadBlock((char *)&tcpHeader,sizeof(tcpHeader_t));
  6931  0045EC  0EBC               	movlw	low _tcpHeader
  6932  0045EE  6E03               	movwf	ETH_ReadBlock@data,c
  6933  0045F0  0E01               	movlw	high _tcpHeader
  6934  0045F2  6E04               	movwf	ETH_ReadBlock@data+1,c
  6935  0045F4  6A06               	clrf	ETH_ReadBlock@length+1,c
  6936  0045F6  0E14               	movlw	20
  6937  0045F8  6E05               	movwf	ETH_ReadBlock@length,c
  6938  0045FA  ECDB  F03A         	call	_ETH_ReadBlock	;wreg free
  6939                           
  6940                           ; BSR set to: 1
  6941                           ;tcpv4.c: 495: currentTCB = (0);
  6942  0045FE  0100               	movlb	0	; () banked
  6943  004600  6BFE               	clrf	_currentTCB& (0+255),b
  6944  004602  6BFF               	clrf	(_currentTCB+1)& (0+255),b
  6945                           
  6946                           ; BSR set to: 0
  6947                           ;tcpv4.c: 498: if ((tcpHeader.destPort != 0) && (tcpHeader.sourcePort != 0))
  6948  004604  0101               	movlb	1	; () banked
  6949  004606  51BE               	movf	(_tcpHeader+2)& (0+255),w,b
  6950  004608  11BF               	iorwf	(_tcpHeader+3)& (0+255),w,b
  6951  00460A  B4D8               	btfsc	status,2,c
  6952  00460C  0012               	return	
  6953                           
  6954                           ; BSR set to: 1
  6955  00460E  51BC               	movf	_tcpHeader& (0+255),w,b
  6956  004610  11BD               	iorwf	(_tcpHeader+1)& (0+255),w,b
  6957  004612  B4D8               	btfsc	status,2,c
  6958  004614  0012               	return	
  6959                           
  6960                           ; BSR set to: 1
  6961                           ;tcpv4.c: 499: {
  6962                           ;tcpv4.c: 500: tcpHeader.sourcePort = ((((uint16_t)tcpHeader.sourcePort & (uint16_t)0xFF
      +                          00) >> 8) | (((uint16_t)tcpHeader.sourcePort & (uint16_t)0x00FF) << 8));
  6963  004616  51BC               	movf	_tcpHeader& (0+255),w,b
  6964  004618  0100               	movlb	0	; () banked
  6965  00461A  6FDB               	movwf	(??_TCP_Recv+1)& (0+255),b
  6966  00461C  6BDA               	clrf	??_TCP_Recv& (0+255),b
  6967  00461E  0101               	movlb	1	; () banked
  6968  004620  51BD               	movf	(_tcpHeader+1)& (0+255),w,b
  6969  004622  0100               	movlb	0	; () banked
  6970  004624  6FDC               	movwf	(??_TCP_Recv+2)& (0+255),b
  6971  004626  6BDD               	clrf	(??_TCP_Recv+3)& (0+255),b
  6972  004628  51DA               	movf	??_TCP_Recv& (0+255),w,b
  6973  00462A  11DC               	iorwf	(??_TCP_Recv+2)& (0+255),w,b
  6974  00462C  0101               	movlb	1	; () banked
  6975  00462E  6FBC               	movwf	_tcpHeader& (0+255),b
  6976  004630  0100               	movlb	0	; () banked
  6977  004632  51DB               	movf	(??_TCP_Recv+1)& (0+255),w,b
  6978  004634  11DD               	iorwf	(??_TCP_Recv+3)& (0+255),w,b
  6979  004636  0101               	movlb	1	; () banked
  6980  004638  6FBD               	movwf	(_tcpHeader+1)& (0+255),b
  6981                           
  6982                           ; BSR set to: 1
  6983                           ;tcpv4.c: 501: tcpHeader.destPort = ((((uint16_t)tcpHeader.destPort & (uint16_t)0xFF00) 
      +                          >> 8) | (((uint16_t)tcpHeader.destPort & (uint16_t)0x00FF) << 8));
  6984  00463A  51BE               	movf	(_tcpHeader+2)& (0+255),w,b
  6985  00463C  0100               	movlb	0	; () banked
  6986  00463E  6FDB               	movwf	(??_TCP_Recv+1)& (0+255),b
  6987  004640  6BDA               	clrf	??_TCP_Recv& (0+255),b
  6988  004642  EE21  F0BE         	lfsr	2,_tcpHeader+2
  6989  004646  CFDE F0DC          	movff	postinc2,??_TCP_Recv+2
  6990  00464A  CFDD F0DD          	movff	postdec2,??_TCP_Recv+3
  6991  00464E  C0DD  F0DC         	movff	??_TCP_Recv+3,??_TCP_Recv+2
  6992  004652  6BDD               	clrf	(??_TCP_Recv+3)& (0+255),b
  6993  004654  6BDD               	clrf	(??_TCP_Recv+3)& (0+255),b
  6994  004656  51DA               	movf	??_TCP_Recv& (0+255),w,b
  6995  004658  11DC               	iorwf	(??_TCP_Recv+2)& (0+255),w,b
  6996  00465A  0101               	movlb	1	; () banked
  6997  00465C  6FBE               	movwf	(_tcpHeader+2)& (0+255),b
  6998  00465E  0100               	movlb	0	; () banked
  6999  004660  51DB               	movf	(??_TCP_Recv+1)& (0+255),w,b
  7000  004662  11DD               	iorwf	(??_TCP_Recv+3)& (0+255),w,b
  7001  004664  0101               	movlb	1	; () banked
  7002  004666  6FBF               	movwf	(_tcpHeader+3)& (0+255),b
  7003                           
  7004                           ; BSR set to: 1
  7005                           ;tcpv4.c: 504: tcbPtr = tcbList;
  7006  004668  C1A2  F0F7         	movff	_tcbList,TCP_Recv@tcbPtr
  7007  00466C  C1A3  F0F8         	movff	_tcbList+1,TCP_Recv@tcbPtr+1
  7008                           
  7009                           ;tcpv4.c: 505: while((tcbPtr != (0)) && (count < tcbListSize))
  7010  004670  D048               	goto	l9015
  7011  004672                     l9005:
  7012                           
  7013                           ; BSR set to: 0
  7014                           ;tcpv4.c: 506: {
  7015                           ;tcpv4.c: 507: if (tcpHeader.destPort == tcbPtr->localPort)
  7016  004672  C0F7  FFF6         	movff	TCP_Recv@tcbPtr,tblptrl
  7017  004676  C0F8  FFF7         	movff	TCP_Recv@tcbPtr+1,tblptrh
  7018  00467A  0E00               	movlw	low (__smallconst shr (0+16))
  7019  00467C  6EF8               	movwf	tblptru,c
  7020  00467E  0E0F               	movlw	(high __ramtop+-1)
  7021  004680  64F7               	cpfsgt	tblptrh,c
  7022  004682  D007               	bra	u13617
  7023  004684  0009               	tblrd		*+
  7024  004686  CFF5 F0DA          	movff	tablat,??_TCP_Recv
  7025  00468A  0009               	tblrd		*+
  7026  00468C  CFF5 F0DB          	movff	tablat,??_TCP_Recv+1
  7027  004690  D008               	bra	u13610
  7028  004692                     u13617:
  7029  004692  CFF6 FFE9          	movff	tblptrl,fsr0l
  7030  004696  CFF7 FFEA          	movff	tblptrh,fsr0h
  7031  00469A  CFEE F0DA          	movff	postinc0,??_TCP_Recv
  7032  00469E  CFEE F0DB          	movff	postinc0,??_TCP_Recv+1
  7033  0046A2                     u13610:
  7034  0046A2  0100               	movlb	0	; () banked
  7035  0046A4  51DA               	movf	??_TCP_Recv& (0+255),w,b
  7036  0046A6  0101               	movlb	1	; () banked
  7037  0046A8  19BE               	xorwf	(_tcpHeader+2)& (0+255),w,b
  7038  0046AA  E10A               	bnz	l9011
  7039  0046AC  0100               	movlb	0	; () banked
  7040  0046AE  51DB               	movf	(??_TCP_Recv+1)& (0+255),w,b
  7041  0046B0  0101               	movlb	1	; () banked
  7042  0046B2  19BF               	xorwf	(_tcpHeader+3)& (0+255),w,b
  7043  0046B4  E105               	bnz	l9011
  7044                           
  7045                           ; BSR set to: 1
  7046                           ;tcpv4.c: 508: {
  7047                           ;tcpv4.c: 509: currentTCB = tcbPtr;
  7048  0046B6  C0F7  F0FE         	movff	TCP_Recv@tcbPtr,_currentTCB
  7049  0046BA  C0F8  F0FF         	movff	TCP_Recv@tcbPtr+1,_currentTCB+1
  7050                           
  7051                           ;tcpv4.c: 510: break;
  7052  0046BE  D02E               	goto	l9019
  7053  0046C0                     l9011:
  7054                           
  7055                           ; BSR set to: 1
  7056                           ;tcpv4.c: 512: else
  7057                           ;tcpv4.c: 513: {
  7058                           ;tcpv4.c: 514: tcbPtr = tcbPtr->nextTCB;
  7059  0046C0  0E2C               	movlw	44
  7060  0046C2  0100               	movlb	0	; () banked
  7061  0046C4  25F7               	addwf	TCP_Recv@tcbPtr& (0+255),w,b
  7062  0046C6  6FDA               	movwf	??_TCP_Recv& (0+255),b
  7063  0046C8  0E00               	movlw	0
  7064  0046CA  21F8               	addwfc	(TCP_Recv@tcbPtr+1)& (0+255),w,b
  7065  0046CC  6FDB               	movwf	(??_TCP_Recv+1)& (0+255),b
  7066  0046CE  C0DA  FFF6         	movff	??_TCP_Recv,tblptrl
  7067  0046D2  C0DB  FFF7         	movff	??_TCP_Recv+1,tblptrh
  7068  0046D6  0E00               	movlw	low (__smallconst shr (0+16))
  7069  0046D8  6EF8               	movwf	tblptru,c
  7070  0046DA  0E0F               	movlw	(high __ramtop+-1)
  7071  0046DC  64F7               	cpfsgt	tblptrh,c
  7072  0046DE  D007               	bra	u13637
  7073  0046E0  0009               	tblrd		*+
  7074  0046E2  CFF5 F0F7          	movff	tablat,TCP_Recv@tcbPtr
  7075  0046E6  0009               	tblrd		*+
  7076  0046E8  CFF5 F0F8          	movff	tablat,TCP_Recv@tcbPtr+1
  7077  0046EC  D008               	bra	u13630
  7078  0046EE                     u13637:
  7079  0046EE  CFF6 FFE9          	movff	tblptrl,fsr0l
  7080  0046F2  CFF7 FFEA          	movff	tblptrh,fsr0h
  7081  0046F6  CFEE F0F7          	movff	postinc0,TCP_Recv@tcbPtr
  7082  0046FA  CFEE F0F8          	movff	postinc0,TCP_Recv@tcbPtr+1
  7083  0046FE                     u13630:
  7084                           
  7085                           ;tcpv4.c: 515: count ++;
  7086  0046FE  0100               	movlb	0	; () banked
  7087  004700  2BF6               	incf	TCP_Recv@count& (0+255),f,b
  7088  004702                     l9015:
  7089  004702  0100               	movlb	0	; () banked
  7090  004704  51F7               	movf	TCP_Recv@tcbPtr& (0+255),w,b
  7091  004706  11F8               	iorwf	(TCP_Recv@tcbPtr+1)& (0+255),w,b
  7092  004708  E009               	bz	l9019
  7093                           
  7094                           ; BSR set to: 0
  7095  00470A  51F6               	movf	TCP_Recv@count& (0+255),w,b
  7096  00470C  0A80               	xorlw	128
  7097  00470E  6FDA               	movwf	??_TCP_Recv& (0+255),b
  7098  004710  0101               	movlb	1	; () banked
  7099  004712  51A7               	movf	_tcbListSize& (0+255),w,b
  7100  004714  0A80               	xorlw	128
  7101  004716  0100               	movlb	0	; () banked
  7102  004718  5DDA               	subwf	??_TCP_Recv& (0+255),w,b
  7103  00471A  E3AB               	bnc	l9005
  7104  00471C                     l9019:
  7105                           
  7106                           ;tcpv4.c: 516: }
  7107                           ;tcpv4.c: 517: }
  7108                           ;tcpv4.c: 519: if (currentTCB != (0))
  7109  00471C  0100               	movlb	0	; () banked
  7110  00471E  51FE               	movf	_currentTCB& (0+255),w,b
  7111  004720  11FF               	iorwf	(_currentTCB+1)& (0+255),w,b
  7112  004722  B4D8               	btfsc	status,2,c
  7113  004724  0012               	return	
  7114                           
  7115                           ; BSR set to: 0
  7116                           ;tcpv4.c: 520: {
  7117                           ;tcpv4.c: 521: if((tcpHeader.sourcePort == currentTCB->destPort) ||
  7118                           ;tcpv4.c: 522: (currentTCB->destIP == 0))
  7119  004726  0E06               	movlw	6
  7120  004728  25FE               	addwf	_currentTCB& (0+255),w,b
  7121  00472A  6FDA               	movwf	??_TCP_Recv& (0+255),b
  7122  00472C  0E00               	movlw	0
  7123  00472E  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
  7124  004730  6FDB               	movwf	(??_TCP_Recv+1)& (0+255),b
  7125  004732  C0DA  FFF6         	movff	??_TCP_Recv,tblptrl
  7126  004736  C0DB  FFF7         	movff	??_TCP_Recv+1,tblptrh
  7127  00473A  0E00               	movlw	low (__smallconst shr (0+16))
  7128  00473C  6EF8               	movwf	tblptru,c
  7129  00473E  0E0F               	movlw	(high __ramtop+-1)
  7130  004740  64F7               	cpfsgt	tblptrh,c
  7131  004742  D007               	bra	u13677
  7132  004744  0009               	tblrd		*+
  7133  004746  CFF5 F0DC          	movff	tablat,??_TCP_Recv+2
  7134  00474A  0009               	tblrd		*+
  7135  00474C  CFF5 F0DD          	movff	tablat,??_TCP_Recv+3
  7136  004750  D008               	bra	u13670
  7137  004752                     u13677:
  7138  004752  CFF6 FFE9          	movff	tblptrl,fsr0l
  7139  004756  CFF7 FFEA          	movff	tblptrh,fsr0h
  7140  00475A  CFEE F0DC          	movff	postinc0,??_TCP_Recv+2
  7141  00475E  CFEE F0DD          	movff	postinc0,??_TCP_Recv+3
  7142  004762                     u13670:
  7143  004762  0101               	movlb	1	; () banked
  7144  004764  51BC               	movf	_tcpHeader& (0+255),w,b
  7145  004766  0100               	movlb	0	; () banked
  7146  004768  19DC               	xorwf	(??_TCP_Recv+2)& (0+255),w,b
  7147  00476A  E105               	bnz	u13680
  7148  00476C  0101               	movlb	1	; () banked
  7149  00476E  51BD               	movf	(_tcpHeader+1)& (0+255),w,b
  7150  004770  0100               	movlb	0	; () banked
  7151  004772  19DD               	xorwf	(??_TCP_Recv+3)& (0+255),w,b
  7152  004774  E02F               	bz	l1268
  7153  004776                     u13680:
  7154                           
  7155                           ; BSR set to: 0
  7156  004776  0E02               	movlw	2
  7157  004778  25FE               	addwf	_currentTCB& (0+255),w,b
  7158  00477A  6FDA               	movwf	??_TCP_Recv& (0+255),b
  7159  00477C  0E00               	movlw	0
  7160  00477E  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
  7161  004780  6FDB               	movwf	(??_TCP_Recv+1)& (0+255),b
  7162  004782  C0DA  FFF6         	movff	??_TCP_Recv,tblptrl
  7163  004786  C0DB  FFF7         	movff	??_TCP_Recv+1,tblptrh
  7164  00478A  0E00               	movlw	low (__smallconst shr (0+16))
  7165  00478C  6EF8               	movwf	tblptru,c
  7166  00478E  0E0F               	movlw	(high __ramtop+-1)
  7167  004790  64F7               	cpfsgt	tblptrh,c
  7168  004792  D00D               	bra	u13697
  7169  004794  0009               	tblrd		*+
  7170  004796  CFF5 F0DC          	movff	tablat,??_TCP_Recv+2
  7171  00479A  0009               	tblrd		*+
  7172  00479C  CFF5 F0DD          	movff	tablat,??_TCP_Recv+3
  7173  0047A0  0009               	tblrd		*+
  7174  0047A2  CFF5 F0DE          	movff	tablat,??_TCP_Recv+4
  7175  0047A6  0009               	tblrd		*+
  7176  0047A8  CFF5 F0DF          	movff	tablat,??_TCP_Recv+5
  7177  0047AC  D00C               	bra	u13690
  7178  0047AE                     u13697:
  7179  0047AE  CFF6 FFE9          	movff	tblptrl,fsr0l
  7180  0047B2  CFF7 FFEA          	movff	tblptrh,fsr0h
  7181  0047B6  CFEE F0DC          	movff	postinc0,??_TCP_Recv+2
  7182  0047BA  CFEE F0DD          	movff	postinc0,??_TCP_Recv+3
  7183  0047BE  CFEE F0DE          	movff	postinc0,??_TCP_Recv+4
  7184  0047C2  CFEE F0DF          	movff	postinc0,??_TCP_Recv+5
  7185  0047C6                     u13690:
  7186  0047C6  0100               	movlb	0	; () banked
  7187  0047C8  51DC               	movf	(??_TCP_Recv+2)& (0+255),w,b
  7188  0047CA  11DD               	iorwf	(??_TCP_Recv+3)& (0+255),w,b
  7189  0047CC  11DE               	iorwf	(??_TCP_Recv+4)& (0+255),w,b
  7190  0047CE  11DF               	iorwf	(??_TCP_Recv+5)& (0+255),w,b
  7191  0047D0  A4D8               	btfss	status,2,c
  7192  0047D2  0012               	return	
  7193  0047D4                     l1268:
  7194                           
  7195                           ; BSR set to: 0
  7196                           ;tcpv4.c: 523: {
  7197                           ;tcpv4.c: 526: receivedRemoteAddress = remoteAddress;
  7198  0047D4  C0D4  F196         	movff	TCP_Recv@remoteAddress,_receivedRemoteAddress
  7199  0047D8  C0D5  F197         	movff	TCP_Recv@remoteAddress+1,_receivedRemoteAddress+1
  7200  0047DC  C0D6  F198         	movff	TCP_Recv@remoteAddress+2,_receivedRemoteAddress+2
  7201  0047E0  C0D7  F199         	movff	TCP_Recv@remoteAddress+3,_receivedRemoteAddress+3
  7202                           
  7203                           ; BSR set to: 0
  7204                           ;tcpv4.c: 527: rcvPayloadLen = length - (uint16_t)(tcpHeader.dataOffset << 2);
  7205  0047E4  0101               	movlb	1	; () banked
  7206  0047E6  39C8               	swapf	(_tcpHeader+12)& (0+255),w,b
  7207  0047E8  0B0F               	andlw	15
  7208  0047EA  0100               	movlb	0	; () banked
  7209  0047EC  6FDA               	movwf	??_TCP_Recv& (0+255),b
  7210  0047EE  6BDB               	clrf	(??_TCP_Recv+1)& (0+255),b
  7211  0047F0  90D8               	bcf	status,0,c
  7212  0047F2  37DA               	rlcf	??_TCP_Recv& (0+255),f,b
  7213  0047F4  37DB               	rlcf	(??_TCP_Recv+1)& (0+255),f,b
  7214  0047F6  90D8               	bcf	status,0,c
  7215  0047F8  37DA               	rlcf	??_TCP_Recv& (0+255),f,b
  7216  0047FA  37DB               	rlcf	(??_TCP_Recv+1)& (0+255),f,b
  7217  0047FC  51DA               	movf	??_TCP_Recv& (0+255),w,b
  7218  0047FE  5DD8               	subwf	TCP_Recv@length& (0+255),w,b
  7219  004800  0101               	movlb	1	; () banked
  7220  004802  6FA0               	movwf	_rcvPayloadLen& (0+255),b
  7221  004804  0100               	movlb	0	; () banked
  7222  004806  51DB               	movf	(??_TCP_Recv+1)& (0+255),w,b
  7223  004808  59D9               	subwfb	(TCP_Recv@length+1)& (0+255),w,b
  7224  00480A  0101               	movlb	1	; () banked
  7225  00480C  6FA1               	movwf	(_rcvPayloadLen+1)& (0+255),b
  7226                           
  7227                           ; BSR set to: 1
  7228                           ;tcpv4.c: 530: if (TCP_ParseTCPOptions() == 1)
  7229  00480E  ECF0  F035         	call	_TCP_ParseTCPOptions	;wreg free
  7230  004812  06E8               	decf	wreg,f,c
  7231  004814  A4D8               	btfss	status,2,c
  7232  004816  0012               	return	
  7233                           
  7234                           ;tcpv4.c: 531: {
  7235                           ;tcpv4.c: 534: if(tcpHeader.syn)
  7236  004818  0101               	movlb	1	; () banked
  7237  00481A  A3C9               	btfss	(_tcpHeader+13)& (0+255),1,b
  7238  00481C  D038               	goto	l1270
  7239                           
  7240                           ; BSR set to: 1
  7241                           ;tcpv4.c: 535: {
  7242                           ;tcpv4.c: 536: if(tcpHeader.ack)
  7243  00481E  A9C9               	btfss	(_tcpHeader+13)& (0+255),4,b
  7244  004820  D01B               	goto	l9035
  7245                           
  7246                           ; BSR set to: 1
  7247                           ;tcpv4.c: 537: {
  7248                           ;tcpv4.c: 538: ;
  7249                           ;tcpv4.c: 539: currentTCB->connectionEvent = RCV_SYNACK;
  7250  004822  0E2B               	movlw	43
  7251  004824  0100               	movlb	0	; () banked
  7252  004826  25FE               	addwf	_currentTCB& (0+255),w,b
  7253  004828  6FDA               	movwf	??_TCP_Recv& (0+255),b
  7254  00482A  0E00               	movlw	0
  7255  00482C  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
  7256  00482E  6FDB               	movwf	(??_TCP_Recv+1)& (0+255),b
  7257  004830  C0DA  FFF6         	movff	??_TCP_Recv,tblptrl
  7258  004834  C0DB  FFF7         	movff	??_TCP_Recv+1,tblptrh
  7259  004838  0E00               	movlw	low (__smallconst shr (0+16))
  7260  00483A  6EF8               	movwf	tblptru,c
  7261  00483C  0E0F               	movlw	(high __ramtop+-1)
  7262  00483E  64F7               	cpfsgt	tblptrh,c
  7263  004840  D004               	bra	u13747
  7264  004842  0E05               	movlw	5
  7265  004844  6EF5               	movwf	tablat,c
  7266  004846  000C               	tblwt		*
  7267  004848  D006               	bra	u13740
  7268  00484A                     u13747:
  7269  00484A  CFF6 FFE9          	movff	tblptrl,fsr0l
  7270  00484E  CFF7 FFEA          	movff	tblptrh,fsr0h
  7271  004852  0E05               	movlw	5
  7272  004854  D08E               	goto	L8
  7273  004856                     u13740:
  7274                           
  7275                           ;tcpv4.c: 540: } else
  7276  004856  D0AB               	goto	l9051
  7277  004858                     l9035:
  7278                           
  7279                           ; BSR set to: 1
  7280                           ;tcpv4.c: 541: {
  7281                           ;tcpv4.c: 542: ;
  7282                           ;tcpv4.c: 543: currentTCB->connectionEvent = RCV_SYN;
  7283  004858  0E2B               	movlw	43
  7284  00485A  0100               	movlb	0	; () banked
  7285  00485C  25FE               	addwf	_currentTCB& (0+255),w,b
  7286  00485E  6FDA               	movwf	??_TCP_Recv& (0+255),b
  7287  004860  0E00               	movlw	0
  7288  004862  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
  7289  004864  6FDB               	movwf	(??_TCP_Recv+1)& (0+255),b
  7290  004866  C0DA  FFF6         	movff	??_TCP_Recv,tblptrl
  7291  00486A  C0DB  FFF7         	movff	??_TCP_Recv+1,tblptrh
  7292  00486E  0E00               	movlw	low (__smallconst shr (0+16))
  7293  004870  6EF8               	movwf	tblptru,c
  7294  004872  0E0F               	movlw	(high __ramtop+-1)
  7295  004874  64F7               	cpfsgt	tblptrh,c
  7296  004876  D004               	bra	u13757
  7297  004878  0E03               	movlw	3
  7298  00487A  6EF5               	movwf	tablat,c
  7299  00487C  000C               	tblwt		*
  7300  00487E  D006               	bra	u13750
  7301  004880                     u13757:
  7302  004880  CFF6 FFE9          	movff	tblptrl,fsr0l
  7303  004884  CFF7 FFEA          	movff	tblptrh,fsr0h
  7304  004888  0E03               	movlw	3
  7305  00488A  D073               	goto	L8
  7306  00488C                     u13750:
  7307  00488C  D090               	goto	l9051
  7308  00488E                     l1270:
  7309                           
  7310                           ; BSR set to: 1
  7311  00488E  A1C9               	btfss	(_tcpHeader+13)& (0+255),0,b
  7312  004890  D038               	goto	l1274
  7313                           
  7314                           ; BSR set to: 1
  7315                           ;tcpv4.c: 546: {
  7316                           ;tcpv4.c: 547: if(tcpHeader.ack)
  7317  004892  A9C9               	btfss	(_tcpHeader+13)& (0+255),4,b
  7318  004894  D01B               	goto	l9041
  7319                           
  7320                           ; BSR set to: 1
  7321                           ;tcpv4.c: 548: {
  7322                           ;tcpv4.c: 549: ;
  7323                           ;tcpv4.c: 550: currentTCB->connectionEvent = RCV_FINACK;
  7324  004896  0E2B               	movlw	43
  7325  004898  0100               	movlb	0	; () banked
  7326  00489A  25FE               	addwf	_currentTCB& (0+255),w,b
  7327  00489C  6FDA               	movwf	??_TCP_Recv& (0+255),b
  7328  00489E  0E00               	movlw	0
  7329  0048A0  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
  7330  0048A2  6FDB               	movwf	(??_TCP_Recv+1)& (0+255),b
  7331  0048A4  C0DA  FFF6         	movff	??_TCP_Recv,tblptrl
  7332  0048A8  C0DB  FFF7         	movff	??_TCP_Recv+1,tblptrh
  7333  0048AC  0E00               	movlw	low (__smallconst shr (0+16))
  7334  0048AE  6EF8               	movwf	tblptru,c
  7335  0048B0  0E0F               	movlw	(high __ramtop+-1)
  7336  0048B2  64F7               	cpfsgt	tblptrh,c
  7337  0048B4  D004               	bra	u13787
  7338  0048B6  0E07               	movlw	7
  7339  0048B8  6EF5               	movwf	tablat,c
  7340  0048BA  000C               	tblwt		*
  7341  0048BC  D006               	bra	u13780
  7342  0048BE                     u13787:
  7343  0048BE  CFF6 FFE9          	movff	tblptrl,fsr0l
  7344  0048C2  CFF7 FFEA          	movff	tblptrh,fsr0h
  7345  0048C6  0E07               	movlw	7
  7346  0048C8  D054               	goto	L8
  7347  0048CA                     u13780:
  7348                           
  7349                           ;tcpv4.c: 551: } else
  7350  0048CA  D071               	goto	l9051
  7351  0048CC                     l9041:
  7352                           
  7353                           ; BSR set to: 1
  7354                           ;tcpv4.c: 552: {
  7355                           ;tcpv4.c: 553: ;
  7356                           ;tcpv4.c: 554: currentTCB->connectionEvent = RCV_FIN;
  7357  0048CC  0E2B               	movlw	43
  7358  0048CE  0100               	movlb	0	; () banked
  7359  0048D0  25FE               	addwf	_currentTCB& (0+255),w,b
  7360  0048D2  6FDA               	movwf	??_TCP_Recv& (0+255),b
  7361  0048D4  0E00               	movlw	0
  7362  0048D6  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
  7363  0048D8  6FDB               	movwf	(??_TCP_Recv+1)& (0+255),b
  7364  0048DA  C0DA  FFF6         	movff	??_TCP_Recv,tblptrl
  7365  0048DE  C0DB  FFF7         	movff	??_TCP_Recv+1,tblptrh
  7366  0048E2  0E00               	movlw	low (__smallconst shr (0+16))
  7367  0048E4  6EF8               	movwf	tblptru,c
  7368  0048E6  0E0F               	movlw	(high __ramtop+-1)
  7369  0048E8  64F7               	cpfsgt	tblptrh,c
  7370  0048EA  D004               	bra	u13797
  7371  0048EC  0E06               	movlw	6
  7372  0048EE  6EF5               	movwf	tablat,c
  7373  0048F0  000C               	tblwt		*
  7374  0048F2  D006               	bra	u13790
  7375  0048F4                     u13797:
  7376  0048F4  CFF6 FFE9          	movff	tblptrl,fsr0l
  7377  0048F8  CFF7 FFEA          	movff	tblptrh,fsr0h
  7378  0048FC  0E06               	movlw	6
  7379  0048FE  D039               	goto	L8
  7380  004900                     u13790:
  7381  004900  D056               	goto	l9051
  7382  004902                     l1274:
  7383                           
  7384                           ; BSR set to: 1
  7385  004902  A5C9               	btfss	(_tcpHeader+13)& (0+255),2,b
  7386  004904  D038               	goto	l1278
  7387                           
  7388                           ; BSR set to: 1
  7389                           ;tcpv4.c: 557: {
  7390                           ;tcpv4.c: 558: if(tcpHeader.ack)
  7391  004906  A9C9               	btfss	(_tcpHeader+13)& (0+255),4,b
  7392  004908  D01B               	goto	l9047
  7393                           
  7394                           ; BSR set to: 1
  7395                           ;tcpv4.c: 559: {
  7396                           ;tcpv4.c: 560: ;
  7397                           ;tcpv4.c: 561: currentTCB->connectionEvent = RCV_RSTACK;
  7398  00490A  0E2B               	movlw	43
  7399  00490C  0100               	movlb	0	; () banked
  7400  00490E  25FE               	addwf	_currentTCB& (0+255),w,b
  7401  004910  6FDA               	movwf	??_TCP_Recv& (0+255),b
  7402  004912  0E00               	movlw	0
  7403  004914  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
  7404  004916  6FDB               	movwf	(??_TCP_Recv+1)& (0+255),b
  7405  004918  C0DA  FFF6         	movff	??_TCP_Recv,tblptrl
  7406  00491C  C0DB  FFF7         	movff	??_TCP_Recv+1,tblptrh
  7407  004920  0E00               	movlw	low (__smallconst shr (0+16))
  7408  004922  6EF8               	movwf	tblptru,c
  7409  004924  0E0F               	movlw	(high __ramtop+-1)
  7410  004926  64F7               	cpfsgt	tblptrh,c
  7411  004928  D004               	bra	u13827
  7412  00492A  0E0A               	movlw	10
  7413  00492C  6EF5               	movwf	tablat,c
  7414  00492E  000C               	tblwt		*
  7415  004930  D006               	bra	u13820
  7416  004932                     u13827:
  7417  004932  CFF6 FFE9          	movff	tblptrl,fsr0l
  7418  004936  CFF7 FFEA          	movff	tblptrh,fsr0h
  7419  00493A  0E0A               	movlw	10
  7420  00493C  D01A               	goto	L8
  7421  00493E                     u13820:
  7422                           
  7423                           ;tcpv4.c: 562: } else
  7424  00493E  D037               	goto	l9051
  7425  004940                     l9047:
  7426                           
  7427                           ; BSR set to: 1
  7428                           ;tcpv4.c: 563: {
  7429                           ;tcpv4.c: 564: ;
  7430                           ;tcpv4.c: 565: currentTCB->connectionEvent = RCV_RST;
  7431  004940  0E2B               	movlw	43
  7432  004942  0100               	movlb	0	; () banked
  7433  004944  25FE               	addwf	_currentTCB& (0+255),w,b
  7434  004946  6FDA               	movwf	??_TCP_Recv& (0+255),b
  7435  004948  0E00               	movlw	0
  7436  00494A  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
  7437  00494C  6FDB               	movwf	(??_TCP_Recv+1)& (0+255),b
  7438  00494E  C0DA  FFF6         	movff	??_TCP_Recv,tblptrl
  7439  004952  C0DB  FFF7         	movff	??_TCP_Recv+1,tblptrh
  7440  004956  0E00               	movlw	low (__smallconst shr (0+16))
  7441  004958  6EF8               	movwf	tblptru,c
  7442  00495A  0E0F               	movlw	(high __ramtop+-1)
  7443  00495C  64F7               	cpfsgt	tblptrh,c
  7444  00495E  D004               	bra	u13837
  7445  004960  0E09               	movlw	9
  7446  004962  6EF5               	movwf	tablat,c
  7447  004964  000C               	tblwt		*
  7448  004966  D006               	bra	u13830
  7449  004968                     u13837:
  7450  004968  CFF6 FFE9          	movff	tblptrl,fsr0l
  7451  00496C  CFF7 FFEA          	movff	tblptrh,fsr0h
  7452  004970  0E09               	movlw	9
  7453  004972                     L8:
  7454  004972  6EEF               	movwf	indf0,c
  7455  004974                     u13830:
  7456  004974  D01C               	goto	l9051
  7457  004976                     l1278:
  7458                           
  7459                           ; BSR set to: 1
  7460  004976  A9C9               	btfss	(_tcpHeader+13)& (0+255),4,b
  7461  004978  D01A               	goto	l9051
  7462                           
  7463                           ; BSR set to: 1
  7464                           ;tcpv4.c: 568: {
  7465                           ;tcpv4.c: 569: ;
  7466                           ;tcpv4.c: 570: currentTCB->connectionEvent = RCV_ACK;
  7467  00497A  0E2B               	movlw	43
  7468  00497C  0100               	movlb	0	; () banked
  7469  00497E  25FE               	addwf	_currentTCB& (0+255),w,b
  7470  004980  6FDA               	movwf	??_TCP_Recv& (0+255),b
  7471  004982  0E00               	movlw	0
  7472  004984  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
  7473  004986  6FDB               	movwf	(??_TCP_Recv+1)& (0+255),b
  7474  004988  C0DA  FFF6         	movff	??_TCP_Recv,tblptrl
  7475  00498C  C0DB  FFF7         	movff	??_TCP_Recv+1,tblptrh
  7476  004990  0E00               	movlw	low (__smallconst shr (0+16))
  7477  004992  6EF8               	movwf	tblptru,c
  7478  004994  0E0F               	movlw	(high __ramtop+-1)
  7479  004996  64F7               	cpfsgt	tblptrh,c
  7480  004998  D004               	bra	u13857
  7481  00499A  0E04               	movlw	4
  7482  00499C  6EF5               	movwf	tablat,c
  7483  00499E  000C               	tblwt		*
  7484  0049A0  D006               	bra	u13850
  7485  0049A2                     u13857:
  7486  0049A2  CFF6 FFE9          	movff	tblptrl,fsr0l
  7487  0049A6  CFF7 FFEA          	movff	tblptrh,fsr0h
  7488  0049AA  0E04               	movlw	4
  7489  0049AC  6EEF               	movwf	indf0,c
  7490  0049AE                     u13850:
  7491  0049AE                     l9051:
  7492                           
  7493                           ;tcpv4.c: 575: }
  7494                           ;tcpv4.c: 577: tcpHeader.ackNumber = ((((uint32_t)tcpHeader.ackNumber&(uint32_t)0xff0000
      +                          00) >> 24) | (((uint32_t)tcpHeader.ackNumber&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)t
      +                          cpHeader.ackNumber&(uint32_t)0x0000ff00) << 8) | (((uint32_t)tcpHeader.ackNumber&(uint32
      +                          _
  7495  0049AE  0101               	movlb	1	; () banked
  7496  0049B0  51C4               	movf	(_tcpHeader+8)& (0+255),w,b
  7497  0049B2  0100               	movlb	0	; () banked
  7498  0049B4  6FDA               	movwf	??_TCP_Recv& (0+255),b
  7499  0049B6  6BDB               	clrf	(??_TCP_Recv+1)& (0+255),b
  7500  0049B8  6BDC               	clrf	(??_TCP_Recv+2)& (0+255),b
  7501  0049BA  6BDD               	clrf	(??_TCP_Recv+3)& (0+255),b
  7502  0049BC  C0DA  F0DD         	movff	??_TCP_Recv,??_TCP_Recv+3
  7503  0049C0  6BDC               	clrf	(??_TCP_Recv+2)& (0+255),b
  7504  0049C2  6BDB               	clrf	(??_TCP_Recv+1)& (0+255),b
  7505  0049C4  6BDA               	clrf	??_TCP_Recv& (0+255),b
  7506  0049C6  EE21  F0C4         	lfsr	2,_tcpHeader+8
  7507  0049CA  0E00               	movlw	0
  7508  0049CC  14DE               	andwf	postinc2,w,c
  7509  0049CE  6FDE               	movwf	(??_TCP_Recv+4)& (0+255),b
  7510  0049D0  0EFF               	movlw	255
  7511  0049D2  14DE               	andwf	postinc2,w,c
  7512  0049D4  6FDF               	movwf	(??_TCP_Recv+5)& (0+255),b
  7513  0049D6  0E00               	movlw	0
  7514  0049D8  14DE               	andwf	postinc2,w,c
  7515  0049DA  6FE0               	movwf	(??_TCP_Recv+6)& (0+255),b
  7516  0049DC  0E00               	movlw	0
  7517  0049DE  14DE               	andwf	postinc2,w,c
  7518  0049E0  6FE1               	movwf	(??_TCP_Recv+7)& (0+255),b
  7519  0049E2  C0E0  F0E1         	movff	??_TCP_Recv+6,??_TCP_Recv+7
  7520  0049E6  C0DF  F0E0         	movff	??_TCP_Recv+5,??_TCP_Recv+6
  7521  0049EA  C0DE  F0DF         	movff	??_TCP_Recv+4,??_TCP_Recv+5
  7522  0049EE  6BDE               	clrf	(??_TCP_Recv+4)& (0+255),b
  7523  0049F0  C1C4  F0E2         	movff	_tcpHeader+8,??_TCP_Recv+8
  7524  0049F4  C1C5  F0E3         	movff	_tcpHeader+9,??_TCP_Recv+9
  7525  0049F8  C1C6  F0E4         	movff	_tcpHeader+10,??_TCP_Recv+10
  7526  0049FC  C1C7  F0E5         	movff	_tcpHeader+11,??_TCP_Recv+11
  7527  004A00  C0E3  F0E2         	movff	??_TCP_Recv+9,??_TCP_Recv+8
  7528  004A04  C0E4  F0E3         	movff	??_TCP_Recv+10,??_TCP_Recv+9
  7529  004A08  C0E5  F0E4         	movff	??_TCP_Recv+11,??_TCP_Recv+10
  7530  004A0C  6BE5               	clrf	(??_TCP_Recv+11)& (0+255),b
  7531  004A0E  6BE6               	clrf	(??_TCP_Recv+12)& (0+255),b
  7532  004A10  51E3               	movf	(??_TCP_Recv+9)& (0+255),w,b
  7533  004A12  6FE7               	movwf	(??_TCP_Recv+13)& (0+255),b
  7534  004A14  0E00               	movlw	0
  7535  004A16  6BE8               	clrf	(??_TCP_Recv+14)& (0+255),b
  7536  004A18  6BE9               	clrf	(??_TCP_Recv+15)& (0+255),b
  7537  004A1A  EE21  F0C4         	lfsr	2,_tcpHeader+8
  7538  004A1E  14DE               	andwf	postinc2,w,c
  7539  004A20  6FEA               	movwf	(??_TCP_Recv+16)& (0+255),b
  7540  004A22  0E00               	movlw	0
  7541  004A24  14DE               	andwf	postinc2,w,c
  7542  004A26  6FEB               	movwf	(??_TCP_Recv+17)& (0+255),b
  7543  004A28  0E00               	movlw	0
  7544  004A2A  14DE               	andwf	postinc2,w,c
  7545  004A2C  6FEC               	movwf	(??_TCP_Recv+18)& (0+255),b
  7546  004A2E  0EFF               	movlw	255
  7547  004A30  14DE               	andwf	postinc2,w,c
  7548  004A32  6FED               	movwf	(??_TCP_Recv+19)& (0+255),b
  7549  004A34  0E19               	movlw	25
  7550  004A36  D005               	goto	u13860
  7551  004A38                     u13865:
  7552  004A38  90D8               	bcf	status,0,c
  7553  004A3A  33ED               	rrcf	(??_TCP_Recv+19)& (0+255),f,b
  7554  004A3C  33EC               	rrcf	(??_TCP_Recv+18)& (0+255),f,b
  7555  004A3E  33EB               	rrcf	(??_TCP_Recv+17)& (0+255),f,b
  7556  004A40  33EA               	rrcf	(??_TCP_Recv+16)& (0+255),f,b
  7557  004A42                     u13860:
  7558  004A42  2EE8               	decfsz	wreg,f,c
  7559  004A44  D7F9               	goto	u13865
  7560  004A46  51E6               	movf	(??_TCP_Recv+12)& (0+255),w,b
  7561  004A48  11EA               	iorwf	(??_TCP_Recv+16)& (0+255),w,b
  7562  004A4A  6FEE               	movwf	(??_TCP_Recv+20)& (0+255),b
  7563  004A4C  51E7               	movf	(??_TCP_Recv+13)& (0+255),w,b
  7564  004A4E  11EB               	iorwf	(??_TCP_Recv+17)& (0+255),w,b
  7565  004A50  6FEF               	movwf	(??_TCP_Recv+21)& (0+255),b
  7566  004A52  51E8               	movf	(??_TCP_Recv+14)& (0+255),w,b
  7567  004A54  11EC               	iorwf	(??_TCP_Recv+18)& (0+255),w,b
  7568  004A56  6FF0               	movwf	(??_TCP_Recv+22)& (0+255),b
  7569  004A58  51E9               	movf	(??_TCP_Recv+15)& (0+255),w,b
  7570  004A5A  11ED               	iorwf	(??_TCP_Recv+19)& (0+255),w,b
  7571  004A5C  6FF1               	movwf	(??_TCP_Recv+23)& (0+255),b
  7572  004A5E  51DE               	movf	(??_TCP_Recv+4)& (0+255),w,b
  7573  004A60  11EE               	iorwf	(??_TCP_Recv+20)& (0+255),w,b
  7574  004A62  6FF2               	movwf	(??_TCP_Recv+24)& (0+255),b
  7575  004A64  51DF               	movf	(??_TCP_Recv+5)& (0+255),w,b
  7576  004A66  11EF               	iorwf	(??_TCP_Recv+21)& (0+255),w,b
  7577  004A68  6FF3               	movwf	(??_TCP_Recv+25)& (0+255),b
  7578  004A6A  51E0               	movf	(??_TCP_Recv+6)& (0+255),w,b
  7579  004A6C  11F0               	iorwf	(??_TCP_Recv+22)& (0+255),w,b
  7580  004A6E  6FF4               	movwf	(??_TCP_Recv+26)& (0+255),b
  7581  004A70  51E1               	movf	(??_TCP_Recv+7)& (0+255),w,b
  7582  004A72  11F1               	iorwf	(??_TCP_Recv+23)& (0+255),w,b
  7583  004A74  6FF5               	movwf	(??_TCP_Recv+27)& (0+255),b
  7584  004A76  51DA               	movf	??_TCP_Recv& (0+255),w,b
  7585  004A78  11F2               	iorwf	(??_TCP_Recv+24)& (0+255),w,b
  7586  004A7A  0101               	movlb	1	; () banked
  7587  004A7C  6FC4               	movwf	(_tcpHeader+8)& (0+255),b
  7588  004A7E  0100               	movlb	0	; () banked
  7589  004A80  51DB               	movf	(??_TCP_Recv+1)& (0+255),w,b
  7590  004A82  11F3               	iorwf	(??_TCP_Recv+25)& (0+255),w,b
  7591  004A84  0101               	movlb	1	; () banked
  7592  004A86  6FC5               	movwf	(_tcpHeader+9)& (0+255),b
  7593  004A88  0100               	movlb	0	; () banked
  7594  004A8A  51DC               	movf	(??_TCP_Recv+2)& (0+255),w,b
  7595  004A8C  11F4               	iorwf	(??_TCP_Recv+26)& (0+255),w,b
  7596  004A8E  0101               	movlb	1	; () banked
  7597  004A90  6FC6               	movwf	(_tcpHeader+10)& (0+255),b
  7598  004A92  0100               	movlb	0	; () banked
  7599  004A94  51DD               	movf	(??_TCP_Recv+3)& (0+255),w,b
  7600  004A96  11F5               	iorwf	(??_TCP_Recv+27)& (0+255),w,b
  7601  004A98  0101               	movlb	1	; () banked
  7602  004A9A  6FC7               	movwf	(_tcpHeader+11)& (0+255),b
  7603                           
  7604                           ;tcpv4.c: 578: tcpHeader.sequenceNumber = ((((uint32_t)tcpHeader.sequenceNumber&(uint32_
      +                          t)0xff000000) >> 24) | (((uint32_t)tcpHeader.sequenceNumber&(uint32_t)0x00ff0000) >> 8) 
      +                          | (((uint32_t)tcpHeader.sequenceNumber&(uint32_t)0x0000ff00) << 8) | (((uint32_t)tcpHead
      +                          e
  7605  004A9C  51C0               	movf	(_tcpHeader+4)& (0+255),w,b
  7606  004A9E  0100               	movlb	0	; () banked
  7607  004AA0  6FDA               	movwf	??_TCP_Recv& (0+255),b
  7608  004AA2  6BDB               	clrf	(??_TCP_Recv+1)& (0+255),b
  7609  004AA4  6BDC               	clrf	(??_TCP_Recv+2)& (0+255),b
  7610  004AA6  6BDD               	clrf	(??_TCP_Recv+3)& (0+255),b
  7611  004AA8  C0DA  F0DD         	movff	??_TCP_Recv,??_TCP_Recv+3
  7612  004AAC  6BDC               	clrf	(??_TCP_Recv+2)& (0+255),b
  7613  004AAE  6BDB               	clrf	(??_TCP_Recv+1)& (0+255),b
  7614  004AB0  6BDA               	clrf	??_TCP_Recv& (0+255),b
  7615  004AB2  EE21  F0C0         	lfsr	2,_tcpHeader+4
  7616  004AB6  0E00               	movlw	0
  7617  004AB8  14DE               	andwf	postinc2,w,c
  7618  004ABA  6FDE               	movwf	(??_TCP_Recv+4)& (0+255),b
  7619  004ABC  0EFF               	movlw	255
  7620  004ABE  14DE               	andwf	postinc2,w,c
  7621  004AC0  6FDF               	movwf	(??_TCP_Recv+5)& (0+255),b
  7622  004AC2  0E00               	movlw	0
  7623  004AC4  14DE               	andwf	postinc2,w,c
  7624  004AC6  6FE0               	movwf	(??_TCP_Recv+6)& (0+255),b
  7625  004AC8  0E00               	movlw	0
  7626  004ACA  14DE               	andwf	postinc2,w,c
  7627  004ACC  6FE1               	movwf	(??_TCP_Recv+7)& (0+255),b
  7628  004ACE  C0E0  F0E1         	movff	??_TCP_Recv+6,??_TCP_Recv+7
  7629  004AD2  C0DF  F0E0         	movff	??_TCP_Recv+5,??_TCP_Recv+6
  7630  004AD6  C0DE  F0DF         	movff	??_TCP_Recv+4,??_TCP_Recv+5
  7631  004ADA  6BDE               	clrf	(??_TCP_Recv+4)& (0+255),b
  7632  004ADC  C1C0  F0E2         	movff	_tcpHeader+4,??_TCP_Recv+8
  7633  004AE0  C1C1  F0E3         	movff	_tcpHeader+5,??_TCP_Recv+9
  7634  004AE4  C1C2  F0E4         	movff	_tcpHeader+6,??_TCP_Recv+10
  7635  004AE8  C1C3  F0E5         	movff	_tcpHeader+7,??_TCP_Recv+11
  7636  004AEC  C0E3  F0E2         	movff	??_TCP_Recv+9,??_TCP_Recv+8
  7637  004AF0  C0E4  F0E3         	movff	??_TCP_Recv+10,??_TCP_Recv+9
  7638  004AF4  C0E5  F0E4         	movff	??_TCP_Recv+11,??_TCP_Recv+10
  7639  004AF8  6BE5               	clrf	(??_TCP_Recv+11)& (0+255),b
  7640  004AFA  6BE6               	clrf	(??_TCP_Recv+12)& (0+255),b
  7641  004AFC  51E3               	movf	(??_TCP_Recv+9)& (0+255),w,b
  7642  004AFE  6FE7               	movwf	(??_TCP_Recv+13)& (0+255),b
  7643  004B00  0E00               	movlw	0
  7644  004B02  6BE8               	clrf	(??_TCP_Recv+14)& (0+255),b
  7645  004B04  6BE9               	clrf	(??_TCP_Recv+15)& (0+255),b
  7646  004B06  EE21  F0C0         	lfsr	2,_tcpHeader+4
  7647  004B0A  14DE               	andwf	postinc2,w,c
  7648  004B0C  6FEA               	movwf	(??_TCP_Recv+16)& (0+255),b
  7649  004B0E  0E00               	movlw	0
  7650  004B10  14DE               	andwf	postinc2,w,c
  7651  004B12  6FEB               	movwf	(??_TCP_Recv+17)& (0+255),b
  7652  004B14  0E00               	movlw	0
  7653  004B16  14DE               	andwf	postinc2,w,c
  7654  004B18  6FEC               	movwf	(??_TCP_Recv+18)& (0+255),b
  7655  004B1A  0EFF               	movlw	255
  7656  004B1C  14DE               	andwf	postinc2,w,c
  7657  004B1E  6FED               	movwf	(??_TCP_Recv+19)& (0+255),b
  7658  004B20  0E19               	movlw	25
  7659  004B22  D005               	goto	u13870
  7660  004B24                     u13875:
  7661  004B24  90D8               	bcf	status,0,c
  7662  004B26  33ED               	rrcf	(??_TCP_Recv+19)& (0+255),f,b
  7663  004B28  33EC               	rrcf	(??_TCP_Recv+18)& (0+255),f,b
  7664  004B2A  33EB               	rrcf	(??_TCP_Recv+17)& (0+255),f,b
  7665  004B2C  33EA               	rrcf	(??_TCP_Recv+16)& (0+255),f,b
  7666  004B2E                     u13870:
  7667  004B2E  2EE8               	decfsz	wreg,f,c
  7668  004B30  D7F9               	goto	u13875
  7669  004B32  51E6               	movf	(??_TCP_Recv+12)& (0+255),w,b
  7670  004B34  11EA               	iorwf	(??_TCP_Recv+16)& (0+255),w,b
  7671  004B36  6FEE               	movwf	(??_TCP_Recv+20)& (0+255),b
  7672  004B38  51E7               	movf	(??_TCP_Recv+13)& (0+255),w,b
  7673  004B3A  11EB               	iorwf	(??_TCP_Recv+17)& (0+255),w,b
  7674  004B3C  6FEF               	movwf	(??_TCP_Recv+21)& (0+255),b
  7675  004B3E  51E8               	movf	(??_TCP_Recv+14)& (0+255),w,b
  7676  004B40  11EC               	iorwf	(??_TCP_Recv+18)& (0+255),w,b
  7677  004B42  6FF0               	movwf	(??_TCP_Recv+22)& (0+255),b
  7678  004B44  51E9               	movf	(??_TCP_Recv+15)& (0+255),w,b
  7679  004B46  11ED               	iorwf	(??_TCP_Recv+19)& (0+255),w,b
  7680  004B48  6FF1               	movwf	(??_TCP_Recv+23)& (0+255),b
  7681  004B4A  51DE               	movf	(??_TCP_Recv+4)& (0+255),w,b
  7682  004B4C  11EE               	iorwf	(??_TCP_Recv+20)& (0+255),w,b
  7683  004B4E  6FF2               	movwf	(??_TCP_Recv+24)& (0+255),b
  7684  004B50  51DF               	movf	(??_TCP_Recv+5)& (0+255),w,b
  7685  004B52  11EF               	iorwf	(??_TCP_Recv+21)& (0+255),w,b
  7686  004B54  6FF3               	movwf	(??_TCP_Recv+25)& (0+255),b
  7687  004B56  51E0               	movf	(??_TCP_Recv+6)& (0+255),w,b
  7688  004B58  11F0               	iorwf	(??_TCP_Recv+22)& (0+255),w,b
  7689  004B5A  6FF4               	movwf	(??_TCP_Recv+26)& (0+255),b
  7690  004B5C  51E1               	movf	(??_TCP_Recv+7)& (0+255),w,b
  7691  004B5E  11F1               	iorwf	(??_TCP_Recv+23)& (0+255),w,b
  7692  004B60  6FF5               	movwf	(??_TCP_Recv+27)& (0+255),b
  7693  004B62  51DA               	movf	??_TCP_Recv& (0+255),w,b
  7694  004B64  11F2               	iorwf	(??_TCP_Recv+24)& (0+255),w,b
  7695  004B66  0101               	movlb	1	; () banked
  7696  004B68  6FC0               	movwf	(_tcpHeader+4)& (0+255),b
  7697  004B6A  0100               	movlb	0	; () banked
  7698  004B6C  51DB               	movf	(??_TCP_Recv+1)& (0+255),w,b
  7699  004B6E  11F3               	iorwf	(??_TCP_Recv+25)& (0+255),w,b
  7700  004B70  0101               	movlb	1	; () banked
  7701  004B72  6FC1               	movwf	(_tcpHeader+5)& (0+255),b
  7702  004B74  0100               	movlb	0	; () banked
  7703  004B76  51DC               	movf	(??_TCP_Recv+2)& (0+255),w,b
  7704  004B78  11F4               	iorwf	(??_TCP_Recv+26)& (0+255),w,b
  7705  004B7A  0101               	movlb	1	; () banked
  7706  004B7C  6FC2               	movwf	(_tcpHeader+6)& (0+255),b
  7707  004B7E  0100               	movlb	0	; () banked
  7708  004B80  51DD               	movf	(??_TCP_Recv+3)& (0+255),w,b
  7709  004B82  11F5               	iorwf	(??_TCP_Recv+27)& (0+255),w,b
  7710  004B84  0101               	movlb	1	; () banked
  7711  004B86  6FC3               	movwf	(_tcpHeader+7)& (0+255),b
  7712                           
  7713                           ; BSR set to: 1
  7714                           ;tcpv4.c: 580: TCP_FiniteStateMachine();
  7715  004B88  EF55  F008         	goto	_TCP_FiniteStateMachine	;wreg free
  7716  004B8C                     __end_of_TCP_Recv:
  7717                           	opt stack 0
  7718                           tosu	equ	0xFFF
  7719                           tosh	equ	0xFFE
  7720                           tosl	equ	0xFFD
  7721                           pclath	equ	0xFFA
  7722                           tblptru	equ	0xFF8
  7723                           tblptrh	equ	0xFF7
  7724                           tblptrl	equ	0xFF6
  7725                           tablat	equ	0xFF5
  7726                           prodh	equ	0xFF4
  7727                           prodl	equ	0xFF3
  7728                           intcon	equ	0xFF2
  7729                           intcon2	equ	0xFF1
  7730                           indf0	equ	0xFEF
  7731                           postinc0	equ	0xFEE
  7732                           fsr0h	equ	0xFEA
  7733                           fsr0l	equ	0xFE9
  7734                           wreg	equ	0xFE8
  7735                           postinc1	equ	0xFE6
  7736                           fsr1h	equ	0xFE2
  7737                           fsr1l	equ	0xFE1
  7738                           indf2	equ	0xFDF
  7739                           postinc2	equ	0xFDE
  7740                           postdec2	equ	0xFDD
  7741                           fsr2h	equ	0xFDA
  7742                           fsr2l	equ	0xFD9
  7743                           status	equ	0xFD8
  7744                           
  7745 ;; *************** function _TCP_ParseTCPOptions *****************
  7746 ;; Defined at:
  7747 ;;		line 356 in file "../../TCPIP Library/source/tcpv4.c"
  7748 ;; Parameters:    Size  Location     Type
  7749 ;;		None
  7750 ;; Auto vars:     Size  Location     Type
  7751 ;;  tcpOptionsSi    2   18[COMRAM] unsigned int 
  7752 ;;  opt             1   17[COMRAM] unsigned char 
  7753 ;;  ret             1   16[COMRAM] unsigned char 
  7754 ;; Return value:  Size  Location     Type
  7755 ;;                  1    wreg      unsigned char 
  7756 ;; Registers used:
  7757 ;;		wreg, status,2, status,0, cstack
  7758 ;; Tracked objects:
  7759 ;;		On entry : F/1
  7760 ;;		On exit  : C/0
  7761 ;;		Unchanged: 0/0
  7762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7764 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7765 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7766 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7767 ;;Total ram usage:        6 bytes
  7768 ;; Hardware stack levels used:    1
  7769 ;; Hardware stack levels required when called:    7
  7770 ;; This function calls:
  7771 ;;		_ETH_Dump
  7772 ;;		_ETH_Read16
  7773 ;;		_ETH_Read8
  7774 ;; This function is called by:
  7775 ;;		_TCP_Recv
  7776 ;; This function uses a non-reentrant model
  7777 ;;
  7778                           
  7779                           	psect	text34
  7780  006BE0                     __ptext34:
  7781                           	opt stack 0
  7782  006BE0                     _TCP_ParseTCPOptions:
  7783                           	opt stack 19
  7784                           
  7785                           ; BSR set to: 1
  7786                           ;tcpv4.c: 358: uint8_t opt;
  7787                           ;tcpv4.c: 359: uint16_t tcpOptionsSize;
  7788                           ;tcpv4.c: 360: bool ret;
  7789                           ;tcpv4.c: 362: ret = 0;
  7790                           
  7791                           ;incstack = 0
  7792  006BE0  6A11               	clrf	TCP_ParseTCPOptions@ret,c
  7793                           
  7794                           ; BSR set to: 1
  7795                           ;tcpv4.c: 364: tcpOptionsSize = (uint16_t)((tcpHeader.dataOffset << 2) - sizeof(tcpHeade
      +                          r_t));
  7796  006BE2  39C8               	swapf	(_tcpHeader+12)& (0+255),w,b
  7797  006BE4  0B0F               	andlw	15
  7798  006BE6  6E0F               	movwf	??_TCP_ParseTCPOptions& (0+255),c
  7799  006BE8  6A10               	clrf	(??_TCP_ParseTCPOptions+1)& (0+255),c
  7800  006BEA  90D8               	bcf	status,0,c
  7801  006BEC  360F               	rlcf	??_TCP_ParseTCPOptions,f,c
  7802  006BEE  3610               	rlcf	??_TCP_ParseTCPOptions+1,f,c
  7803  006BF0  90D8               	bcf	status,0,c
  7804  006BF2  360F               	rlcf	??_TCP_ParseTCPOptions,f,c
  7805  006BF4  3610               	rlcf	??_TCP_ParseTCPOptions+1,f,c
  7806  006BF6  0EEC               	movlw	236
  7807  006BF8  240F               	addwf	??_TCP_ParseTCPOptions,w,c
  7808  006BFA  6E13               	movwf	TCP_ParseTCPOptions@tcpOptionsSize,c
  7809  006BFC  0EFF               	movlw	255
  7810  006BFE  2010               	addwfc	??_TCP_ParseTCPOptions+1,w,c
  7811  006C00  6E14               	movwf	TCP_ParseTCPOptions@tcpOptionsSize+1,c
  7812                           
  7813                           ;tcpv4.c: 366: if (tcpOptionsSize > 0)
  7814  006C02  1013               	iorwf	TCP_ParseTCPOptions@tcpOptionsSize,w,c
  7815  006C04  E071               	bz	l8471
  7816                           
  7817                           ; BSR set to: 1
  7818                           ;tcpv4.c: 367: {
  7819                           ;tcpv4.c: 370: tcpMss = 536;
  7820  006C06  0E02               	movlw	2
  7821  006C08  6FA5               	movwf	(_tcpMss+1)& (0+255),b
  7822  006C0A  0E18               	movlw	24
  7823  006C0C  6FA4               	movwf	_tcpMss& (0+255),b
  7824                           
  7825                           ; BSR set to: 1
  7826                           ;tcpv4.c: 372: if(tcpHeader.syn)
  7827  006C0E  A3C9               	btfss	(_tcpHeader+13)& (0+255),1,b
  7828  006C10  D065               	goto	l8469
  7829  006C12  D05C               	goto	l8467
  7830  006C14                     l8425:
  7831                           
  7832                           ;tcpv4.c: 376: {
  7833                           ;tcpv4.c: 377: opt = ETH_Read8();
  7834  006C14  ECB9  F041         	call	_ETH_Read8	;wreg free
  7835  006C18  6E12               	movwf	TCP_ParseTCPOptions@opt,c
  7836                           
  7837                           ;tcpv4.c: 378: switch (opt)
  7838  006C1A  D051               	goto	l8465
  7839  006C1C                     l8427:
  7840                           
  7841                           ; BSR set to: 1
  7842                           ;tcpv4.c: 382: if (tcpOptionsSize)
  7843  006C1C  5013               	movf	TCP_ParseTCPOptions@tcpOptionsSize,w,c
  7844  006C1E  1014               	iorwf	TCP_ParseTCPOptions@tcpOptionsSize+1,w,c
  7845  006C20  E008               	bz	l8433
  7846                           
  7847                           ; BSR set to: 1
  7848                           ;tcpv4.c: 383: {
  7849                           ;tcpv4.c: 385: ETH_Dump(tcpOptionsSize);
  7850  006C22  C013  F00B         	movff	TCP_ParseTCPOptions@tcpOptionsSize,ETH_Dump@length
  7851  006C26  C014  F00C         	movff	TCP_ParseTCPOptions@tcpOptionsSize+1,ETH_Dump@length+1
  7852  006C2A  ECBC  F03F         	call	_ETH_Dump	;wreg free
  7853                           
  7854                           ; BSR set to: 2
  7855                           ;tcpv4.c: 386: tcpOptionsSize = 0;
  7856  006C2E  6A13               	clrf	TCP_ParseTCPOptions@tcpOptionsSize,c
  7857  006C30  6A14               	clrf	TCP_ParseTCPOptions@tcpOptionsSize+1,c
  7858  006C32                     l8433:
  7859                           
  7860                           ;tcpv4.c: 387: }
  7861                           ;tcpv4.c: 388: ret = 1;
  7862  006C32  0E01               	movlw	1
  7863  006C34  6E11               	movwf	TCP_ParseTCPOptions@ret,c
  7864                           
  7865                           ;tcpv4.c: 389: break;
  7866  006C36  D04A               	goto	l8467
  7867  006C38                     l8435:
  7868                           
  7869                           ; BSR set to: 1
  7870                           ;tcpv4.c: 394: if (tcpOptionsSize >= 3)
  7871  006C38  5014               	movf	TCP_ParseTCPOptions@tcpOptionsSize+1,w,c
  7872  006C3A  E103               	bnz	u11590
  7873  006C3C  0E03               	movlw	3
  7874  006C3E  5C13               	subwf	TCP_ParseTCPOptions@tcpOptionsSize,w,c
  7875  006C40  E31D               	bnc	l1241
  7876  006C42                     u11590:
  7877                           
  7878                           ; BSR set to: 1
  7879                           ;tcpv4.c: 395: {
  7880                           ;tcpv4.c: 396: opt = ETH_Read8();
  7881  006C42  ECB9  F041         	call	_ETH_Read8	;wreg free
  7882  006C46  6E12               	movwf	TCP_ParseTCPOptions@opt,c
  7883                           
  7884                           ; BSR set to: 1
  7885                           ;tcpv4.c: 397: if (opt == 0x04)
  7886  006C48  0E04               	movlw	4
  7887  006C4A  1812               	xorwf	TCP_ParseTCPOptions@opt,w,c
  7888  006C4C  E114               	bnz	l1242
  7889                           
  7890                           ; BSR set to: 1
  7891                           ;tcpv4.c: 398: {
  7892                           ;tcpv4.c: 400: tcpMss = ETH_Read16();
  7893  006C4E  EC2B  F040         	call	_ETH_Read16	;wreg free
  7894  006C52  C003  F1A4         	movff	?_ETH_Read16,_tcpMss
  7895  006C56  C004  F1A5         	movff	?_ETH_Read16+1,_tcpMss+1
  7896                           
  7897                           ; BSR set to: 1
  7898                           ;tcpv4.c: 402: tcpOptionsSize = tcpOptionsSize - 3;
  7899  006C5A  0EFD               	movlw	253
  7900  006C5C  2613               	addwf	TCP_ParseTCPOptions@tcpOptionsSize,f,c
  7901  006C5E  0EFF               	movlw	255
  7902  006C60  2214               	addwfc	TCP_ParseTCPOptions@tcpOptionsSize+1,f,c
  7903                           
  7904                           ; BSR set to: 1
  7905                           ;tcpv4.c: 405: if (tcpMss > 1460u)
  7906  006C62  0EB5               	movlw	181
  7907  006C64  5DA4               	subwf	_tcpMss& (0+255),w,b
  7908  006C66  0E05               	movlw	5
  7909  006C68  59A5               	subwfb	(_tcpMss+1)& (0+255),w,b
  7910  006C6A  E3E3               	bnc	l8433
  7911                           
  7912                           ; BSR set to: 1
  7913                           ;tcpv4.c: 406: {
  7914                           ;tcpv4.c: 407: tcpMss = 1460u;
  7915  006C6C  0E05               	movlw	5
  7916  006C6E  6FA5               	movwf	(_tcpMss+1)& (0+255),b
  7917  006C70  0EB4               	movlw	180
  7918  006C72  6FA4               	movwf	_tcpMss& (0+255),b
  7919  006C74  D7DE               	goto	l8433
  7920  006C76                     l1242:
  7921                           
  7922                           ; BSR set to: 1
  7923                           ;tcpv4.c: 412: {
  7924                           ;tcpv4.c: 414: ;
  7925                           ;tcpv4.c: 416: tcpOptionsSize = 0;
  7926  006C76  6A13               	clrf	TCP_ParseTCPOptions@tcpOptionsSize,c
  7927  006C78  6A14               	clrf	TCP_ParseTCPOptions@tcpOptionsSize+1,c
  7928  006C7A  D028               	goto	l8467
  7929  006C7C                     l1241:
  7930                           
  7931                           ; BSR set to: 1
  7932                           ;tcpv4.c: 419: {
  7933                           ;tcpv4.c: 421: tcpOptionsSize = 0;
  7934  006C7C  6A13               	clrf	TCP_ParseTCPOptions@tcpOptionsSize,c
  7935  006C7E  6A14               	clrf	TCP_ParseTCPOptions@tcpOptionsSize+1,c
  7936                           
  7937                           ;tcpv4.c: 422: ret = 0;
  7938  006C80  6A11               	clrf	TCP_ParseTCPOptions@ret,c
  7939  006C82  D024               	goto	l8467
  7940  006C84                     l8449:
  7941                           
  7942                           ; BSR set to: 1
  7943                           ;tcpv4.c: 426: ;
  7944                           ;tcpv4.c: 427: opt = ETH_Read8();
  7945  006C84  ECB9  F041         	call	_ETH_Read8	;wreg free
  7946  006C88  6E12               	movwf	TCP_ParseTCPOptions@opt,c
  7947                           
  7948                           ; BSR set to: 1
  7949                           ;tcpv4.c: 428: tcpOptionsSize--;
  7950  006C8A  0613               	decf	TCP_ParseTCPOptions@tcpOptionsSize,f,c
  7951  006C8C  A0D8               	btfss	status,0,c
  7952  006C8E  0614               	decf	TCP_ParseTCPOptions@tcpOptionsSize+1,f,c
  7953                           
  7954                           ; BSR set to: 1
  7955                           ;tcpv4.c: 430: if (opt > 1)
  7956  006C90  0E01               	movlw	1
  7957  006C92  6412               	cpfsgt	TCP_ParseTCPOptions@opt,c
  7958  006C94  D7F3               	goto	l1241
  7959                           
  7960                           ; BSR set to: 1
  7961                           ;tcpv4.c: 431: {
  7962                           ;tcpv4.c: 433: opt = opt - 2;
  7963  006C96  0EFE               	movlw	254
  7964  006C98  2612               	addwf	TCP_ParseTCPOptions@opt,f,c
  7965                           
  7966                           ;tcpv4.c: 434: if (opt <= tcpOptionsSize)
  7967  006C9A  5012               	movf	TCP_ParseTCPOptions@opt,w,c
  7968  006C9C  6E0F               	movwf	??_TCP_ParseTCPOptions& (0+255),c
  7969  006C9E  6A10               	clrf	(??_TCP_ParseTCPOptions+1)& (0+255),c
  7970  006CA0  500F               	movf	??_TCP_ParseTCPOptions,w,c
  7971  006CA2  5C13               	subwf	TCP_ParseTCPOptions@tcpOptionsSize,w,c
  7972  006CA4  5010               	movf	??_TCP_ParseTCPOptions+1,w,c
  7973  006CA6  5814               	subwfb	TCP_ParseTCPOptions@tcpOptionsSize+1,w,c
  7974  006CA8  E3E9               	bnc	l1241
  7975                           
  7976                           ; BSR set to: 1
  7977                           ;tcpv4.c: 435: {
  7978                           ;tcpv4.c: 437: ETH_Dump(opt);
  7979  006CAA  C012  F00B         	movff	TCP_ParseTCPOptions@opt,ETH_Dump@length
  7980  006CAE  6A0C               	clrf	ETH_Dump@length+1,c
  7981  006CB0  ECBC  F03F         	call	_ETH_Dump	;wreg free
  7982                           
  7983                           ; BSR set to: 2
  7984                           ;tcpv4.c: 438: tcpOptionsSize = tcpOptionsSize - opt;
  7985  006CB4  5012               	movf	TCP_ParseTCPOptions@opt,w,c
  7986  006CB6  5E13               	subwf	TCP_ParseTCPOptions@tcpOptionsSize,f,c
  7987  006CB8  0E00               	movlw	0
  7988  006CBA  5A14               	subwfb	TCP_ParseTCPOptions@tcpOptionsSize+1,f,c
  7989  006CBC  D7BA               	goto	l8433
  7990  006CBE                     l8465:
  7991                           
  7992                           ; BSR set to: 1
  7993  006CBE  5012               	movf	TCP_ParseTCPOptions@opt,w,c
  7994                           
  7995                           ; Switch size 1, requested type "speed"
  7996                           ; Number of cases is 3, Range of values is 0 to 2
  7997                           ; switch strategies available:
  7998                           ; Name         Instructions Cycles
  7999                           ; simple_byte           10     6 (average)
  8000                           ;	Chosen strategy is simple_byte
  8001  006CC0  E0AD               	bz	l8427
  8002  006CC2  0A01               	xorlw	1	; case 1
  8003  006CC4  E003               	bz	l8467
  8004  006CC6  0A03               	xorlw	3	; case 2
  8005  006CC8  E0B7               	bz	l8435
  8006  006CCA  D7DC               	goto	l8449
  8007  006CCC                     l8467:
  8008  006CCC  0613               	decf	TCP_ParseTCPOptions@tcpOptionsSize,f,c
  8009  006CCE  A0D8               	btfss	status,0,c
  8010  006CD0  0614               	decf	TCP_ParseTCPOptions@tcpOptionsSize+1,f,c
  8011  006CD2  2813               	incf	TCP_ParseTCPOptions@tcpOptionsSize,w,c
  8012  006CD4  E19F               	bnz	l8425
  8013  006CD6  2814               	incf	TCP_ParseTCPOptions@tcpOptionsSize+1,w,c
  8014  006CD8  E009               	bz	l1253
  8015  006CDA  D79C               	goto	l8425
  8016  006CDC                     l8469:
  8017                           
  8018                           ; BSR set to: 1
  8019                           ;tcpv4.c: 459: {
  8020                           ;tcpv4.c: 460: ETH_Dump(tcpOptionsSize);
  8021  006CDC  C013  F00B         	movff	TCP_ParseTCPOptions@tcpOptionsSize,ETH_Dump@length
  8022  006CE0  C014  F00C         	movff	TCP_ParseTCPOptions@tcpOptionsSize+1,ETH_Dump@length+1
  8023  006CE4  ECBC  F03F         	call	_ETH_Dump	;wreg free
  8024  006CE8                     l8471:
  8025                           
  8026                           ;tcpv4.c: 461: ret = 1;
  8027  006CE8  0E01               	movlw	1
  8028  006CEA  6E11               	movwf	TCP_ParseTCPOptions@ret,c
  8029  006CEC                     l1253:
  8030                           
  8031                           ;tcpv4.c: 466: }
  8032                           ;tcpv4.c: 468: return ret;
  8033  006CEC  5011               	movf	TCP_ParseTCPOptions@ret,w,c
  8034  006CEE  0012               	return		;funcret
  8035  006CF0                     __end_of_TCP_ParseTCPOptions:
  8036                           	opt stack 0
  8037                           tosu	equ	0xFFF
  8038                           tosh	equ	0xFFE
  8039                           tosl	equ	0xFFD
  8040                           pclath	equ	0xFFA
  8041                           tblptru	equ	0xFF8
  8042                           tblptrh	equ	0xFF7
  8043                           tblptrl	equ	0xFF6
  8044                           tablat	equ	0xFF5
  8045                           prodh	equ	0xFF4
  8046                           prodl	equ	0xFF3
  8047                           intcon	equ	0xFF2
  8048                           intcon2	equ	0xFF1
  8049                           indf0	equ	0xFEF
  8050                           postinc0	equ	0xFEE
  8051                           fsr0h	equ	0xFEA
  8052                           fsr0l	equ	0xFE9
  8053                           wreg	equ	0xFE8
  8054                           postinc1	equ	0xFE6
  8055                           fsr1h	equ	0xFE2
  8056                           fsr1l	equ	0xFE1
  8057                           indf2	equ	0xFDF
  8058                           postinc2	equ	0xFDE
  8059                           postdec2	equ	0xFDD
  8060                           fsr2h	equ	0xFDA
  8061                           fsr2l	equ	0xFD9
  8062                           status	equ	0xFD8
  8063                           
  8064 ;; *************** function _ETH_Read8 *****************
  8065 ;; Defined at:
  8066 ;;		line 228 in file "../../TCPIP Library/ethernet_drivers/encX24j600_spi.c"
  8067 ;; Parameters:    Size  Location     Type
  8068 ;;		None
  8069 ;; Auto vars:     Size  Location     Type
  8070 ;;  ret             1    2[COMRAM] unsigned char 
  8071 ;; Return value:  Size  Location     Type
  8072 ;;                  1    wreg      unsigned char 
  8073 ;; Registers used:
  8074 ;;		wreg, status,2, status,0, cstack
  8075 ;; Tracked objects:
  8076 ;;		On entry : C/1
  8077 ;;		On exit  : F/1
  8078 ;;		Unchanged: 0/0
  8079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8081 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8083 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8084 ;;Total ram usage:        1 bytes
  8085 ;; Hardware stack levels used:    1
  8086 ;; Hardware stack levels required when called:    4
  8087 ;; This function calls:
  8088 ;;		_SPI_ExchangeByte
  8089 ;; This function is called by:
  8090 ;;		_DHCP_Handler
  8091 ;;		_TCP_ParseTCPOptions
  8092 ;; This function uses a non-reentrant model
  8093 ;;
  8094                           
  8095                           	psect	text35
  8096  008372                     __ptext35:
  8097                           	opt stack 0
  8098  008372                     _ETH_Read8:
  8099                           	opt stack 21
  8100                           
  8101                           ;encX24j600_spi.c: 230: uint8_t ret;
  8102                           ;encX24j600_spi.c: 231: if(rxPacketStatusVector.ByteCount >= sizeof(ret))
  8103                           
  8104                           ;incstack = 0
  8105  008372  0102               	movlb	2	; () banked
  8106  008374  5118               	movf	_rxPacketStatusVector& (0+255),w,b
  8107  008376  1119               	iorwf	(_rxPacketStatusVector+1)& (0+255),w,b
  8108  008378  E011               	bz	l608
  8109                           
  8110                           ; BSR set to: 2
  8111                           
  8112                           ;encX24j600_spi.c: 232: {
  8113                           ;encX24j600_spi.c: 233: do{LATB3 = 0;} while(0);
  8114  00837A  968A               	bcf	3978,3,c	;volatile
  8115                           
  8116                           ; BSR set to: 2
  8117                           ;encX24j600_spi.c: 234: SPI_ExchangeByte(rrxdata_inst);
  8118  00837C  0E2C               	movlw	44
  8119  00837E  ECD2  F043         	call	_SPI_ExchangeByte
  8120                           
  8121                           ;encX24j600_spi.c: 235: ret = SPI_ExchangeByte(0);
  8122  008382  0E00               	movlw	0
  8123  008384  ECD2  F043         	call	_SPI_ExchangeByte
  8124  008388  6E03               	movwf	ETH_Read8@ret,c
  8125  00838A  868A               	bsf	3978,3,c	;volatile
  8126                           
  8127                           ;encX24j600_spi.c: 237: rxPacketStatusVector.ByteCount -= sizeof(ret);
  8128  00838C  0102               	movlb	2	; () banked
  8129  00838E  0718               	decf	_rxPacketStatusVector& (0+255),f,b
  8130  008390  A0D8               	btfss	status,0,c
  8131  008392  0719               	decf	(_rxPacketStatusVector+1)& (0+255),f,b
  8132                           
  8133                           ; BSR set to: 2
  8134                           ;encX24j600_spi.c: 238: ethData.error = 0;
  8135  008394  0101               	movlb	1	; () banked
  8136  008396  9183               	bcf	_ethData& (0+255),0,b	;volatile
  8137                           
  8138                           ; BSR set to: 1
  8139                           ;encX24j600_spi.c: 239: return ret;
  8140  008398  5003               	movf	ETH_Read8@ret,w,c
  8141  00839A  0012               	return	
  8142  00839C                     l608:
  8143                           
  8144                           ; BSR set to: 2
  8145                           ;encX24j600_spi.c: 241: else
  8146                           ;encX24j600_spi.c: 242: {
  8147                           ;encX24j600_spi.c: 243: ethData.error = 1;
  8148  00839C  0101               	movlb	1	; () banked
  8149  00839E  8183               	bsf	_ethData& (0+255),0,b	;volatile
  8150                           
  8151                           ; BSR set to: 1
  8152                           
  8153                           ; BSR set to: 1
  8154                           ;encX24j600_spi.c: 244: return 0;
  8155  0083A0  0C00               	retlw	0	;funcret
  8156  0083A2                     __end_of_ETH_Read8:
  8157                           	opt stack 0
  8158                           tosu	equ	0xFFF
  8159                           tosh	equ	0xFFE
  8160                           tosl	equ	0xFFD
  8161                           pclath	equ	0xFFA
  8162                           tblptru	equ	0xFF8
  8163                           tblptrh	equ	0xFF7
  8164                           tblptrl	equ	0xFF6
  8165                           tablat	equ	0xFF5
  8166                           prodh	equ	0xFF4
  8167                           prodl	equ	0xFF3
  8168                           intcon	equ	0xFF2
  8169                           intcon2	equ	0xFF1
  8170                           indf0	equ	0xFEF
  8171                           postinc0	equ	0xFEE
  8172                           fsr0h	equ	0xFEA
  8173                           fsr0l	equ	0xFE9
  8174                           wreg	equ	0xFE8
  8175                           postinc1	equ	0xFE6
  8176                           fsr1h	equ	0xFE2
  8177                           fsr1l	equ	0xFE1
  8178                           indf2	equ	0xFDF
  8179                           postinc2	equ	0xFDE
  8180                           postdec2	equ	0xFDD
  8181                           fsr2h	equ	0xFDA
  8182                           fsr2l	equ	0xFD9
  8183                           status	equ	0xFD8
  8184                           
  8185 ;; *************** function _ETH_Read16 *****************
  8186 ;; Defined at:
  8187 ;;		line 252 in file "../../TCPIP Library/ethernet_drivers/encX24j600_spi.c"
  8188 ;; Parameters:    Size  Location     Type
  8189 ;;		None
  8190 ;; Auto vars:     Size  Location     Type
  8191 ;;  ret             2    4[COMRAM] unsigned int 
  8192 ;; Return value:  Size  Location     Type
  8193 ;;                  2    2[COMRAM] unsigned int 
  8194 ;; Registers used:
  8195 ;;		wreg, status,2, status,0, cstack
  8196 ;; Tracked objects:
  8197 ;;		On entry : 0/0
  8198 ;;		On exit  : F/1
  8199 ;;		Unchanged: 0/0
  8200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8201 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8202 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8204 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8205 ;;Total ram usage:        4 bytes
  8206 ;; Hardware stack levels used:    1
  8207 ;; Hardware stack levels required when called:    4
  8208 ;; This function calls:
  8209 ;;		_SPI_ExchangeByte
  8210 ;; This function is called by:
  8211 ;;		_DHCP_Handler
  8212 ;;		_TCP_ParseTCPOptions
  8213 ;; This function uses a non-reentrant model
  8214 ;;
  8215                           
  8216                           	psect	text36
  8217  008056                     __ptext36:
  8218                           	opt stack 0
  8219  008056                     _ETH_Read16:
  8220                           	opt stack 21
  8221                           
  8222                           ;encX24j600_spi.c: 254: uint16_t ret;
  8223                           ;encX24j600_spi.c: 255: if(rxPacketStatusVector.ByteCount >= sizeof(ret))
  8224                           
  8225                           ; BSR set to: 1
  8226                           ;incstack = 0
  8227  008056  0102               	movlb	2	; () banked
  8228  008058  5119               	movf	(_rxPacketStatusVector+1)& (0+255),w,b
  8229  00805A  E103               	bnz	u11070
  8230  00805C  0E02               	movlw	2
  8231  00805E  5D18               	subwf	_rxPacketStatusVector& (0+255),w,b
  8232  008060  E319               	bnc	l617
  8233  008062                     u11070:
  8234                           
  8235                           ; BSR set to: 2
  8236                           
  8237                           ;encX24j600_spi.c: 256: {
  8238                           ;encX24j600_spi.c: 257: do{LATB3 = 0;} while(0);
  8239  008062  968A               	bcf	3978,3,c	;volatile
  8240                           
  8241                           ; BSR set to: 2
  8242                           ;encX24j600_spi.c: 258: SPI_ExchangeByte(rrxdata_inst);
  8243  008064  0E2C               	movlw	44
  8244  008066  ECD2  F043         	call	_SPI_ExchangeByte
  8245                           
  8246                           ;encX24j600_spi.c: 259: ((uint8_t *)&ret)[1] = SPI_ExchangeByte(0);
  8247  00806A  0E00               	movlw	0
  8248  00806C  ECD2  F043         	call	_SPI_ExchangeByte
  8249  008070  6E06               	movwf	ETH_Read16@ret+1,c
  8250                           
  8251                           ;encX24j600_spi.c: 260: ((uint8_t *)&ret)[0] = SPI_ExchangeByte(0);
  8252  008072  0E00               	movlw	0
  8253  008074  ECD2  F043         	call	_SPI_ExchangeByte
  8254  008078  6E05               	movwf	ETH_Read16@ret,c
  8255  00807A  868A               	bsf	3978,3,c	;volatile
  8256                           
  8257                           ;encX24j600_spi.c: 262: rxPacketStatusVector.ByteCount -= sizeof(ret);
  8258  00807C  0E02               	movlw	2
  8259  00807E  0102               	movlb	2	; () banked
  8260  008080  5F18               	subwf	_rxPacketStatusVector& (0+255),f,b
  8261  008082  0E00               	movlw	0
  8262  008084  5B19               	subwfb	(_rxPacketStatusVector+1)& (0+255),f,b
  8263                           
  8264                           ; BSR set to: 2
  8265                           ;encX24j600_spi.c: 263: ethData.error = 0;
  8266  008086  0101               	movlb	1	; () banked
  8267  008088  9183               	bcf	_ethData& (0+255),0,b	;volatile
  8268                           
  8269                           ; BSR set to: 1
  8270                           ;encX24j600_spi.c: 264: return ret;
  8271  00808A  C005  F003         	movff	ETH_Read16@ret,?_ETH_Read16
  8272  00808E  C006  F004         	movff	ETH_Read16@ret+1,?_ETH_Read16+1
  8273  008092  0C00               	retlw	0
  8274  008094                     l617:
  8275                           
  8276                           ; BSR set to: 2
  8277                           ;encX24j600_spi.c: 266: else
  8278                           ;encX24j600_spi.c: 267: {
  8279                           ;encX24j600_spi.c: 268: ethData.error = 1;
  8280  008094  0101               	movlb	1	; () banked
  8281  008096  8183               	bsf	_ethData& (0+255),0,b	;volatile
  8282                           
  8283                           ;encX24j600_spi.c: 269: return 0;
  8284  008098  6A03               	clrf	?_ETH_Read16,c
  8285  00809A  6A04               	clrf	?_ETH_Read16+1,c
  8286                           
  8287                           ; BSR set to: 1
  8288  00809C  0012               	return		;funcret
  8289  00809E                     __end_of_ETH_Read16:
  8290                           	opt stack 0
  8291                           tosu	equ	0xFFF
  8292                           tosh	equ	0xFFE
  8293                           tosl	equ	0xFFD
  8294                           pclath	equ	0xFFA
  8295                           tblptru	equ	0xFF8
  8296                           tblptrh	equ	0xFF7
  8297                           tblptrl	equ	0xFF6
  8298                           tablat	equ	0xFF5
  8299                           prodh	equ	0xFF4
  8300                           prodl	equ	0xFF3
  8301                           intcon	equ	0xFF2
  8302                           intcon2	equ	0xFF1
  8303                           indf0	equ	0xFEF
  8304                           postinc0	equ	0xFEE
  8305                           fsr0h	equ	0xFEA
  8306                           fsr0l	equ	0xFE9
  8307                           wreg	equ	0xFE8
  8308                           postinc1	equ	0xFE6
  8309                           fsr1h	equ	0xFE2
  8310                           fsr1l	equ	0xFE1
  8311                           indf2	equ	0xFDF
  8312                           postinc2	equ	0xFDE
  8313                           postdec2	equ	0xFDD
  8314                           fsr2h	equ	0xFDA
  8315                           fsr2l	equ	0xFD9
  8316                           status	equ	0xFD8
  8317                           
  8318 ;; *************** function _ETH_Dump *****************
  8319 ;; Defined at:
  8320 ;;		line 324 in file "../../TCPIP Library/ethernet_drivers/encX24J600_driver.c"
  8321 ;; Parameters:    Size  Location     Type
  8322 ;;  length          2   10[COMRAM] unsigned int 
  8323 ;; Auto vars:     Size  Location     Type
  8324 ;;  newRXTail       2   12[COMRAM] unsigned int 
  8325 ;; Return value:  Size  Location     Type
  8326 ;;                  1    wreg      void 
  8327 ;; Registers used:
  8328 ;;		wreg, status,2, status,0, cstack
  8329 ;; Tracked objects:
  8330 ;;		On entry : E/0
  8331 ;;		On exit  : F/2
  8332 ;;		Unchanged: 0/0
  8333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8334 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8335 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8337 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8338 ;;Total ram usage:        4 bytes
  8339 ;; Hardware stack levels used:    1
  8340 ;; Hardware stack levels required when called:    6
  8341 ;; This function calls:
  8342 ;;		_ENCx24_Read
  8343 ;;		_ENCx24_Write
  8344 ;; This function is called by:
  8345 ;;		_DHCP_Handler
  8346 ;;		_IPV4_Packet
  8347 ;;		_TCP_ParseTCPOptions
  8348 ;; This function uses a non-reentrant model
  8349 ;;
  8350                           
  8351                           	psect	text37
  8352  007F78                     __ptext37:
  8353                           	opt stack 0
  8354  007F78                     _ETH_Dump:
  8355                           	opt stack 19
  8356                           
  8357                           ;encX24J600_driver.c: 326: uint16_t newRXTail;
  8358                           ;encX24J600_driver.c: 327: length = (rxPacketStatusVector.ByteCount <= length) ? rxPacke
      +                          tStatusVector.ByteCount : length;
  8359                           
  8360                           ; BSR set to: 1
  8361                           ;incstack = 0
  8362  007F78  0102               	movlb	2	; () banked
  8363  007F7A  5118               	movf	_rxPacketStatusVector& (0+255),w,b
  8364  007F7C  5C0B               	subwf	ETH_Dump@length,w,c
  8365  007F7E  5119               	movf	(_rxPacketStatusVector+1)& (0+255),w,b
  8366  007F80  580C               	subwfb	ETH_Dump@length+1,w,c
  8367  007F82  E304               	bnc	l8113
  8368                           
  8369                           ; BSR set to: 2
  8370  007F84  C218  F00B         	movff	_rxPacketStatusVector,ETH_Dump@length
  8371  007F88  C219  F00C         	movff	_rxPacketStatusVector+1,ETH_Dump@length+1
  8372  007F8C                     l8113:
  8373                           
  8374                           ; BSR set to: 2
  8375                           ;encX24J600_driver.c: 328: if(length)
  8376  007F8C  500B               	movf	ETH_Dump@length,w,c
  8377  007F8E  100C               	iorwf	ETH_Dump@length+1,w,c
  8378  007F90  E012               	bz	l473
  8379                           
  8380                           ; BSR set to: 2
  8381                           ;encX24J600_driver.c: 329: {
  8382                           ;encX24J600_driver.c: 330: newRXTail = ENCx24_Read(XJ600_ERXRDPTL);
  8383  007F92  0E8A               	movlw	138
  8384  007F94  EC06  F040         	call	_ENCx24_Read
  8385  007F98  C005  F00D         	movff	?_ENCx24_Read,ETH_Dump@newRXTail
  8386  007F9C  C006  F00E         	movff	?_ENCx24_Read+1,ETH_Dump@newRXTail+1
  8387                           
  8388                           ;encX24J600_driver.c: 331: newRXTail += length;
  8389  007FA0  500B               	movf	ETH_Dump@length,w,c
  8390  007FA2  260D               	addwf	ETH_Dump@newRXTail,f,c
  8391  007FA4  500C               	movf	ETH_Dump@length+1,w,c
  8392  007FA6  220E               	addwfc	ETH_Dump@newRXTail+1,f,c
  8393                           
  8394                           ;encX24J600_driver.c: 333: ENCx24_Write(XJ600_ERXRDPTL, newRXTail);
  8395  007FA8  C00D  F005         	movff	ETH_Dump@newRXTail,ENCx24_Write@data
  8396  007FAC  C00E  F006         	movff	ETH_Dump@newRXTail+1,ENCx24_Write@data+1
  8397  007FB0  0E8A               	movlw	138
  8398  007FB2  EC94  F040         	call	_ENCx24_Write
  8399  007FB6                     l473:
  8400                           
  8401                           ;encX24J600_driver.c: 334: }
  8402                           ;encX24J600_driver.c: 335: rxPacketStatusVector.ByteCount -= length;
  8403  007FB6  500B               	movf	ETH_Dump@length,w,c
  8404  007FB8  0102               	movlb	2	; () banked
  8405  007FBA  5F18               	subwf	_rxPacketStatusVector& (0+255),f,b
  8406  007FBC  500C               	movf	ETH_Dump@length+1,w,c
  8407  007FBE  5B19               	subwfb	(_rxPacketStatusVector+1)& (0+255),f,b
  8408                           
  8409                           ; BSR set to: 2
  8410  007FC0  0012               	return		;funcret
  8411  007FC2                     __end_of_ETH_Dump:
  8412                           	opt stack 0
  8413                           tosu	equ	0xFFF
  8414                           tosh	equ	0xFFE
  8415                           tosl	equ	0xFFD
  8416                           pclath	equ	0xFFA
  8417                           tblptru	equ	0xFF8
  8418                           tblptrh	equ	0xFF7
  8419                           tblptrl	equ	0xFF6
  8420                           tablat	equ	0xFF5
  8421                           prodh	equ	0xFF4
  8422                           prodl	equ	0xFF3
  8423                           intcon	equ	0xFF2
  8424                           intcon2	equ	0xFF1
  8425                           indf0	equ	0xFEF
  8426                           postinc0	equ	0xFEE
  8427                           fsr0h	equ	0xFEA
  8428                           fsr0l	equ	0xFE9
  8429                           wreg	equ	0xFE8
  8430                           postinc1	equ	0xFE6
  8431                           fsr1h	equ	0xFE2
  8432                           fsr1l	equ	0xFE1
  8433                           indf2	equ	0xFDF
  8434                           postinc2	equ	0xFDE
  8435                           postdec2	equ	0xFDD
  8436                           fsr2h	equ	0xFDA
  8437                           fsr2l	equ	0xFD9
  8438                           status	equ	0xFD8
  8439                           
  8440 ;; *************** function _IPV4_PseudoHeaderChecksum *****************
  8441 ;; Defined at:
  8442 ;;		line 83 in file "../../TCPIP Library/source/ipv4.c"
  8443 ;; Parameters:    Size  Location     Type
  8444 ;;  payloadLen      2    1[COMRAM] unsigned int 
  8445 ;; Auto vars:     Size  Location     Type
  8446 ;;  tmp            12   13[COMRAM] struct .
  8447 ;;  cksm            4    9[COMRAM] unsigned long 
  8448 ;;  len             1    8[COMRAM] unsigned char 
  8449 ;;  v               1    7[COMRAM] PTR unsigned int 
  8450 ;;		 -> IPV4_PseudoHeaderChecksum@tmp(12), 
  8451 ;; Return value:  Size  Location     Type
  8452 ;;                  2    1[COMRAM] unsigned int 
  8453 ;; Registers used:
  8454 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8455 ;; Tracked objects:
  8456 ;;		On entry : F/0
  8457 ;;		On exit  : F/0
  8458 ;;		Unchanged: F/0
  8459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8460 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8461 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8462 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8463 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8464 ;;Total ram usage:       24 bytes
  8465 ;; Hardware stack levels used:    1
  8466 ;; Hardware stack levels required when called:    3
  8467 ;; This function calls:
  8468 ;;		Nothing
  8469 ;; This function is called by:
  8470 ;;		_IPV4_Packet
  8471 ;; This function uses a non-reentrant model
  8472 ;;
  8473                           
  8474                           	psect	text38
  8475  00751E                     __ptext38:
  8476                           	opt stack 0
  8477  00751E                     _IPV4_PseudoHeaderChecksum:
  8478                           	opt stack 24
  8479                           
  8480                           ; BSR set to: 0
  8481                           ;ipv4.c: 85: ipv4_pseudo_header_t tmp;
  8482                           ;ipv4.c: 86: uint8_t len;
  8483                           ;ipv4.c: 87: uint32_t cksm = 0;
  8484                           
  8485                           ; BSR set to: 2
  8486                           ;incstack = 0
  8487  00751E  6A0A               	clrf	IPV4_PseudoHeaderChecksum@cksm,c
  8488  007520  6A0B               	clrf	IPV4_PseudoHeaderChecksum@cksm+1,c
  8489  007522  6A0C               	clrf	IPV4_PseudoHeaderChecksum@cksm+2,c
  8490  007524  6A0D               	clrf	IPV4_PseudoHeaderChecksum@cksm+3,c
  8491                           
  8492                           ;ipv4.c: 88: uint16_t *v;
  8493                           ;ipv4.c: 90: tmp.srcIpAddress = ipv4Header.srcIpAddress;
  8494  007526  C1B4  F00E         	movff	_ipv4Header+12,IPV4_PseudoHeaderChecksum@tmp
  8495  00752A  C1B5  F00F         	movff	_ipv4Header+13,IPV4_PseudoHeaderChecksum@tmp+1
  8496  00752E  C1B6  F010         	movff	_ipv4Header+14,IPV4_PseudoHeaderChecksum@tmp+2
  8497  007532  C1B7  F011         	movff	_ipv4Header+15,IPV4_PseudoHeaderChecksum@tmp+3
  8498                           
  8499                           ;ipv4.c: 91: tmp.dstIpAddress = ipv4Header.dstIpAddress;
  8500  007536  C1B8  F012         	movff	_ipv4Header+16,IPV4_PseudoHeaderChecksum@tmp+4
  8501  00753A  C1B9  F013         	movff	_ipv4Header+17,IPV4_PseudoHeaderChecksum@tmp+5
  8502  00753E  C1BA  F014         	movff	_ipv4Header+18,IPV4_PseudoHeaderChecksum@tmp+6
  8503  007542  C1BB  F015         	movff	_ipv4Header+19,IPV4_PseudoHeaderChecksum@tmp+7
  8504                           
  8505                           ;ipv4.c: 92: tmp.protocol = ipv4Header.protocol;
  8506  007546  C1B1  F016         	movff	_ipv4Header+9,IPV4_PseudoHeaderChecksum@tmp+8
  8507                           
  8508                           ;ipv4.c: 93: tmp.z = 0;
  8509  00754A  6A17               	clrf	IPV4_PseudoHeaderChecksum@tmp+9,c
  8510                           
  8511                           ;ipv4.c: 94: tmp.length = payloadLen;
  8512  00754C  C002  F018         	movff	IPV4_PseudoHeaderChecksum@payloadLen,IPV4_PseudoHeaderChecksum@tmp+10
  8513  007550  C003  F019         	movff	IPV4_PseudoHeaderChecksum@payloadLen+1,IPV4_PseudoHeaderChecksum@tmp+11
  8514                           
  8515                           ; BSR set to: 0
  8516                           ;ipv4.c: 96: len = sizeof(tmp);
  8517  007554  0E0C               	movlw	12
  8518  007556  6E09               	movwf	IPV4_PseudoHeaderChecksum@len,c
  8519                           
  8520                           ; BSR set to: 0
  8521                           ;ipv4.c: 97: len = len >> 1;
  8522  007558  90D8               	bcf	status,0,c
  8523  00755A  3209               	rrcf	IPV4_PseudoHeaderChecksum@len,f,c
  8524                           
  8525                           ; BSR set to: 0
  8526                           ;ipv4.c: 99: v = (uint16_t *) &tmp;
  8527  00755C  0E0E               	movlw	low IPV4_PseudoHeaderChecksum@tmp
  8528  00755E  6E08               	movwf	IPV4_PseudoHeaderChecksum@v,c
  8529                           
  8530                           ;ipv4.c: 101: while(len)
  8531  007560  D011               	goto	l8945
  8532  007562                     l8939:
  8533                           
  8534                           ; BSR set to: 0
  8535                           ;ipv4.c: 102: {
  8536                           ;ipv4.c: 103: cksm += *v;
  8537  007562  5008               	movf	IPV4_PseudoHeaderChecksum@v,w,c
  8538  007564  6ED9               	movwf	fsr2l,c
  8539  007566  6ADA               	clrf	fsr2h,c
  8540  007568  CFDE F004          	movff	postinc2,??_IPV4_PseudoHeaderChecksum
  8541  00756C  CFDD F005          	movff	postdec2,??_IPV4_PseudoHeaderChecksum+1
  8542  007570  5004               	movf	??_IPV4_PseudoHeaderChecksum,w,c
  8543  007572  260A               	addwf	IPV4_PseudoHeaderChecksum@cksm,f,c
  8544  007574  5005               	movf	??_IPV4_PseudoHeaderChecksum+1,w,c
  8545  007576  220B               	addwfc	IPV4_PseudoHeaderChecksum@cksm+1,f,c
  8546  007578  0E00               	movlw	0
  8547  00757A  220C               	addwfc	IPV4_PseudoHeaderChecksum@cksm+2,f,c
  8548  00757C  220D               	addwfc	IPV4_PseudoHeaderChecksum@cksm+3,f,c
  8549                           
  8550                           ; BSR set to: 0
  8551                           ;ipv4.c: 104: len--;
  8552  00757E  0609               	decf	IPV4_PseudoHeaderChecksum@len,f,c
  8553                           
  8554                           ; BSR set to: 0
  8555                           ;ipv4.c: 105: v++;
  8556  007580  0E02               	movlw	2
  8557  007582  2608               	addwf	IPV4_PseudoHeaderChecksum@v,f,c
  8558  007584                     l8945:
  8559                           
  8560                           ; BSR set to: 0
  8561  007584  5009               	movf	IPV4_PseudoHeaderChecksum@len,w,c
  8562  007586  E1ED               	bnz	l8939
  8563                           
  8564                           ; BSR set to: 0
  8565                           ;ipv4.c: 106: }
  8566                           ;ipv4.c: 109: cksm = (cksm & 0x0FFFF) + (cksm>>16);
  8567  007588  500A               	movf	IPV4_PseudoHeaderChecksum@cksm,w,c
  8568  00758A  6E04               	movwf	??_IPV4_PseudoHeaderChecksum& (0+255),c
  8569  00758C  500B               	movf	IPV4_PseudoHeaderChecksum@cksm+1,w,c
  8570  00758E  6E05               	movwf	(??_IPV4_PseudoHeaderChecksum+1)& (0+255),c
  8571  007590  6A06               	clrf	(??_IPV4_PseudoHeaderChecksum+2)& (0+255),c
  8572  007592  6A07               	clrf	(??_IPV4_PseudoHeaderChecksum+3)& (0+255),c
  8573  007594  500C               	movf	IPV4_PseudoHeaderChecksum@cksm+2,w,c
  8574  007596  2404               	addwf	??_IPV4_PseudoHeaderChecksum,w,c
  8575  007598  6E0A               	movwf	IPV4_PseudoHeaderChecksum@cksm,c
  8576  00759A  500D               	movf	IPV4_PseudoHeaderChecksum@cksm+3,w,c
  8577  00759C  2005               	addwfc	??_IPV4_PseudoHeaderChecksum+1,w,c
  8578  00759E  6E0B               	movwf	IPV4_PseudoHeaderChecksum@cksm+1,c
  8579  0075A0  0E00               	movlw	0
  8580  0075A2  2006               	addwfc	??_IPV4_PseudoHeaderChecksum+2,w,c
  8581  0075A4  6E0C               	movwf	IPV4_PseudoHeaderChecksum@cksm+2,c
  8582  0075A6  0E00               	movlw	0
  8583  0075A8  2007               	addwfc	??_IPV4_PseudoHeaderChecksum+3,w,c
  8584  0075AA  6E0D               	movwf	IPV4_PseudoHeaderChecksum@cksm+3,c
  8585                           
  8586                           ; BSR set to: 0
  8587                           ;ipv4.c: 112: return cksm;
  8588  0075AC  C00A  F002         	movff	IPV4_PseudoHeaderChecksum@cksm,?_IPV4_PseudoHeaderChecksum
  8589  0075B0  C00B  F003         	movff	IPV4_PseudoHeaderChecksum@cksm+1,?_IPV4_PseudoHeaderChecksum+1
  8590                           
  8591                           ; BSR set to: 0
  8592  0075B4  0012               	return		;funcret
  8593  0075B6                     __end_of_IPV4_PseudoHeaderChecksum:
  8594                           	opt stack 0
  8595                           tosu	equ	0xFFF
  8596                           tosh	equ	0xFFE
  8597                           tosl	equ	0xFFD
  8598                           pclath	equ	0xFFA
  8599                           tblptru	equ	0xFF8
  8600                           tblptrh	equ	0xFF7
  8601                           tblptrl	equ	0xFF6
  8602                           tablat	equ	0xFF5
  8603                           prodh	equ	0xFF4
  8604                           prodl	equ	0xFF3
  8605                           intcon	equ	0xFF2
  8606                           intcon2	equ	0xFF1
  8607                           indf0	equ	0xFEF
  8608                           postinc0	equ	0xFEE
  8609                           fsr0h	equ	0xFEA
  8610                           fsr0l	equ	0xFE9
  8611                           wreg	equ	0xFE8
  8612                           postinc1	equ	0xFE6
  8613                           fsr1h	equ	0xFE2
  8614                           fsr1l	equ	0xFE1
  8615                           indf2	equ	0xFDF
  8616                           postinc2	equ	0xFDE
  8617                           postdec2	equ	0xFDD
  8618                           fsr2h	equ	0xFDA
  8619                           fsr2l	equ	0xFD9
  8620                           status	equ	0xFD8
  8621                           
  8622 ;; *************** function _ICMP_Receive *****************
  8623 ;; Defined at:
  8624 ;;		line 56 in file "../../TCPIP Library/source/icmp.c"
  8625 ;; Parameters:    Size  Location     Type
  8626 ;;  ipv4Hdr         2   90[COMRAM] PTR struct .
  8627 ;;		 -> ipv4Header(20), 
  8628 ;; Auto vars:     Size  Location     Type
  8629 ;;  icmpHdr         8   25[BANK0 ] struct .
  8630 ;;  ret             1    0        enum E366
  8631 ;; Return value:  Size  Location     Type
  8632 ;;                  1    wreg      enum E366
  8633 ;; Registers used:
  8634 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8635 ;; Tracked objects:
  8636 ;;		On entry : F/0
  8637 ;;		On exit  : F/0
  8638 ;;		Unchanged: 0/0
  8639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8640 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8641 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8642 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8643 ;;      Totals:         2      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8644 ;;Total ram usage:       15 bytes
  8645 ;; Hardware stack levels used:    1
  8646 ;; Hardware stack levels required when called:   10
  8647 ;; This function calls:
  8648 ;;		_ETH_ReadBlock
  8649 ;;		_ETH_SaveRDPT
  8650 ;;		_ICMP_EchoReply
  8651 ;; This function is called by:
  8652 ;;		_IPV4_Packet
  8653 ;; This function uses a non-reentrant model
  8654 ;;
  8655                           
  8656                           	psect	text39
  8657  007FC2                     __ptext39:
  8658                           	opt stack 0
  8659  007FC2                     _ICMP_Receive:
  8660                           	opt stack 17
  8661                           
  8662                           ; BSR set to: 0
  8663                           ;icmp.c: 60: ETH_ReadBlock((char *)&icmpHdr, sizeof(icmpHeader_t));
  8664                           
  8665                           ; BSR set to: 0
  8666                           
  8667                           ; BSR set to: 0
  8668                           ;incstack = 0
  8669  007FC2  0E79               	movlw	low ICMP_Receive@icmpHdr
  8670  007FC4  6E03               	movwf	ETH_ReadBlock@data,c
  8671  007FC6  6A04               	clrf	ETH_ReadBlock@data+1,c
  8672  007FC8  6A06               	clrf	ETH_ReadBlock@length+1,c
  8673  007FCA  0E08               	movlw	8
  8674  007FCC  6E05               	movwf	ETH_ReadBlock@length,c
  8675  007FCE  ECDB  F03A         	call	_ETH_ReadBlock	;wreg free
  8676                           
  8677                           ; BSR set to: 1
  8678                           ;icmp.c: 61: ETH_SaveRDPT();
  8679  007FD2  ECB4  F043         	call	_ETH_SaveRDPT	;wreg free
  8680                           
  8681                           ;icmp.c: 63: switch(((((uint16_t)(icmpTypeCodes_t)icmpHdr.typeCode & (uint16_t)0xFF00) >
      +                          > 8) | (((uint16_t)(icmpTypeCodes_t)icmpHdr.typeCode & (uint16_t)0x00FF) << 8)))
  8682  007FD6  D008               	goto	l8925
  8683  007FD8                     l8921:
  8684                           
  8685                           ; BSR set to: 0
  8686  007FD8  0E79               	movlw	low ICMP_Receive@icmpHdr
  8687  007FDA  6E58               	movwf	ICMP_EchoReply@icmpHdr,c
  8688  007FDC  C05B  F059         	movff	ICMP_Receive@ipv4Hdr,ICMP_EchoReply@ipv4Hdr
  8689  007FE0  C05C  F05A         	movff	ICMP_Receive@ipv4Hdr+1,ICMP_EchoReply@ipv4Hdr+1
  8690  007FE4  EF46  F033         	goto	_ICMP_EchoReply	;wreg free
  8691  007FE8                     l8925:
  8692  007FE8  0100               	movlb	0	; () banked
  8693  007FEA  5179               	movf	ICMP_Receive@icmpHdr& (0+255),w,b
  8694  007FEC  6F75               	movwf	(??_ICMP_Receive+1)& (0+255),b
  8695  007FEE  6B74               	clrf	??_ICMP_Receive& (0+255),b
  8696  007FF0  517A               	movf	(ICMP_Receive@icmpHdr+1)& (0+255),w,b
  8697  007FF2  6F76               	movwf	(??_ICMP_Receive+2)& (0+255),b
  8698  007FF4  6B77               	clrf	(??_ICMP_Receive+3)& (0+255),b
  8699  007FF6  5174               	movf	??_ICMP_Receive& (0+255),w,b
  8700  007FF8  1376               	iorwf	(??_ICMP_Receive+2)& (0+255),f,b
  8701  007FFA  5175               	movf	(??_ICMP_Receive+1)& (0+255),w,b
  8702  007FFC  1377               	iorwf	(??_ICMP_Receive+3)& (0+255),f,b
  8703                           
  8704                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8705                           ; Switch size 1, requested type "speed"
  8706                           ; Number of cases is 1, Range of values is 8 to 8
  8707                           ; switch strategies available:
  8708                           ; Name         Instructions Cycles
  8709                           ; simple_byte            4     3 (average)
  8710                           ;	Chosen strategy is simple_byte
  8711  007FFE  5177               	movf	(??_ICMP_Receive+3)& (0+255),w,b
  8712  008000  0A08               	xorlw	8	; case 8
  8713  008002  A4D8               	btfss	status,2,c
  8714  008004  0012               	return	
  8715                           
  8716                           ; BSR set to: 0
  8717                           ; Switch size 1, requested type "speed"
  8718                           ; Number of cases is 1, Range of values is 0 to 0
  8719                           ; switch strategies available:
  8720                           ; Name         Instructions Cycles
  8721                           ; simple_byte            4     3 (average)
  8722                           ;	Chosen strategy is simple_byte
  8723  008006  5176               	movf	(??_ICMP_Receive+2)& (0+255),w,b
  8724  008008  E0E7               	bz	l8921
  8725                           
  8726                           ; BSR set to: 0
  8727  00800A  0012               	return		;funcret
  8728  00800C                     __end_of_ICMP_Receive:
  8729                           	opt stack 0
  8730                           tosu	equ	0xFFF
  8731                           tosh	equ	0xFFE
  8732                           tosl	equ	0xFFD
  8733                           pclath	equ	0xFFA
  8734                           tblptru	equ	0xFF8
  8735                           tblptrh	equ	0xFF7
  8736                           tblptrl	equ	0xFF6
  8737                           tablat	equ	0xFF5
  8738                           prodh	equ	0xFF4
  8739                           prodl	equ	0xFF3
  8740                           intcon	equ	0xFF2
  8741                           intcon2	equ	0xFF1
  8742                           indf0	equ	0xFEF
  8743                           postinc0	equ	0xFEE
  8744                           fsr0h	equ	0xFEA
  8745                           fsr0l	equ	0xFE9
  8746                           wreg	equ	0xFE8
  8747                           postinc1	equ	0xFE6
  8748                           fsr1h	equ	0xFE2
  8749                           fsr1l	equ	0xFE1
  8750                           indf2	equ	0xFDF
  8751                           postinc2	equ	0xFDE
  8752                           postdec2	equ	0xFDD
  8753                           fsr2h	equ	0xFDA
  8754                           fsr2l	equ	0xFD9
  8755                           status	equ	0xFD8
  8756                           
  8757 ;; *************** function _ICMP_EchoReply *****************
  8758 ;; Defined at:
  8759 ;;		line 86 in file "../../TCPIP Library/source/icmp.c"
  8760 ;; Parameters:    Size  Location     Type
  8761 ;;  icmpHdr         1   87[COMRAM] PTR struct .
  8762 ;;		 -> ICMP_Receive@icmpHdr(8), 
  8763 ;;  ipv4Hdr         2   88[COMRAM] PTR struct .
  8764 ;;		 -> ipv4Header(20), 
  8765 ;; Auto vars:     Size  Location     Type
  8766 ;;  ipv4PayloadL    2   17[BANK0 ] unsigned int 
  8767 ;;  icmp_cksm_st    2    0        unsigned int 
  8768 ;;  cksm            2   15[BANK0 ] unsigned int 
  8769 ;;  ret             1   19[BANK0 ] enum E366
  8770 ;; Return value:  Size  Location     Type
  8771 ;;                  1    wreg      enum E366
  8772 ;; Registers used:
  8773 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8774 ;; Tracked objects:
  8775 ;;		On entry : F/0
  8776 ;;		On exit  : F/0
  8777 ;;		Unchanged: 0/0
  8778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8779 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8780 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8781 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8782 ;;      Totals:         3      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8783 ;;Total ram usage:       16 bytes
  8784 ;; Hardware stack levels used:    1
  8785 ;; Hardware stack levels required when called:    9
  8786 ;; This function calls:
  8787 ;;		_ETH_Copy
  8788 ;;		_ETH_Insert
  8789 ;;		_ETH_SaveRDPT
  8790 ;;		_ETH_TxComputeChecksum
  8791 ;;		_ETH_Write16
  8792 ;;		_IPV4_Send
  8793 ;;		_IPv4_Start
  8794 ;; This function is called by:
  8795 ;;		_ICMP_Receive
  8796 ;; This function uses a non-reentrant model
  8797 ;;
  8798                           
  8799                           	psect	text40
  8800  00668C                     __ptext40:
  8801                           	opt stack 0
  8802  00668C                     _ICMP_EchoReply:
  8803                           	opt stack 17
  8804                           
  8805                           ; BSR set to: 0
  8806                           ;icmp.c: 89: error_msg ret = ERROR;
  8807                           
  8808                           ; BSR set to: 0
  8809                           ;incstack = 0
  8810  00668C  6B73               	clrf	ICMP_EchoReply@ret& (0+255),b
  8811                           
  8812                           ; BSR set to: 0
  8813                           ;icmp.c: 91: ret = IPv4_Start(ipv4Hdr->srcIpAddress, ipv4Hdr->protocol);
  8814  00668E  EE20 F00C          	lfsr	2,12
  8815  006692  5059               	movf	ICMP_EchoReply@ipv4Hdr,w,c
  8816  006694  26D9               	addwf	fsr2l,f,c
  8817  006696  505A               	movf	ICMP_EchoReply@ipv4Hdr+1,w,c
  8818  006698  22DA               	addwfc	fsr2h,f,c
  8819  00669A  CFDE F04B          	movff	postinc2,IPv4_Start@destAddress
  8820  00669E  CFDE F04C          	movff	postinc2,IPv4_Start@destAddress+1
  8821  0066A2  CFDE F04D          	movff	postinc2,IPv4_Start@destAddress+2
  8822  0066A6  CFDE F04E          	movff	postinc2,IPv4_Start@destAddress+3
  8823  0066AA  EE20 F009          	lfsr	2,9
  8824  0066AE  5059               	movf	ICMP_EchoReply@ipv4Hdr,w,c
  8825  0066B0  26D9               	addwf	fsr2l,f,c
  8826  0066B2  505A               	movf	ICMP_EchoReply@ipv4Hdr+1,w,c
  8827  0066B4  22DA               	addwfc	fsr2h,f,c
  8828  0066B6  50DF               	movf	indf2,w,c
  8829  0066B8  6E4F               	movwf	IPv4_Start@protocol,c
  8830  0066BA  EC0F  F034         	call	_IPv4_Start	;wreg free
  8831  0066BE  6F73               	movwf	ICMP_EchoReply@ret& (0+255),b
  8832                           
  8833                           ; BSR set to: 0
  8834                           ;icmp.c: 92: if(ret == SUCCESS)
  8835  0066C0  0573               	decf	ICMP_EchoReply@ret& (0+255),w,b
  8836  0066C2  E001 D0AA          	bnz	l8411
  8837                           
  8838                           ; BSR set to: 0
  8839                           ;icmp.c: 93: {
  8840                           ;icmp.c: 94: uint16_t icmp_cksm_start;
  8841                           ;icmp.c: 95: uint16_t ipv4PayloadLength = ipv4Hdr->length - sizeof(ipv4Header_t);
  8842  0066C6  EE20 F002          	lfsr	2,2
  8843  0066CA  5059               	movf	ICMP_EchoReply@ipv4Hdr,w,c
  8844  0066CC  26D9               	addwf	fsr2l,f,c
  8845  0066CE  505A               	movf	ICMP_EchoReply@ipv4Hdr+1,w,c
  8846  0066D0  22DA               	addwfc	fsr2h,f,c
  8847  0066D2  CFDE F067          	movff	postinc2,??_ICMP_EchoReply
  8848  0066D6  CFDD F068          	movff	postdec2,??_ICMP_EchoReply+1
  8849  0066DA  0EEC               	movlw	236
  8850  0066DC  2567               	addwf	??_ICMP_EchoReply& (0+255),w,b
  8851  0066DE  6F71               	movwf	ICMP_EchoReply@ipv4PayloadLength& (0+255),b
  8852  0066E0  0EFF               	movlw	255
  8853  0066E2  2168               	addwfc	(??_ICMP_EchoReply+1)& (0+255),w,b
  8854  0066E4  6F72               	movwf	(ICMP_EchoReply@ipv4PayloadLength+1)& (0+255),b
  8855                           
  8856                           ;icmp.c: 97: ipv4PayloadLength = ipv4Hdr->length - (uint16_t)(ipv4Hdr->ihl << 2);
  8857  0066E6  C059  FFD9         	movff	ICMP_EchoReply@ipv4Hdr,fsr2l
  8858  0066EA  C05A  FFDA         	movff	ICMP_EchoReply@ipv4Hdr+1,fsr2h
  8859  0066EE  50DF               	movf	indf2,w,c
  8860  0066F0  0B0F               	andlw	15
  8861  0066F2  6F67               	movwf	??_ICMP_EchoReply& (0+255),b
  8862  0066F4  6B68               	clrf	(??_ICMP_EchoReply+1)& (0+255),b
  8863  0066F6  90D8               	bcf	status,0,c
  8864  0066F8  3767               	rlcf	??_ICMP_EchoReply& (0+255),f,b
  8865  0066FA  3768               	rlcf	(??_ICMP_EchoReply+1)& (0+255),f,b
  8866  0066FC  90D8               	bcf	status,0,c
  8867  0066FE  3767               	rlcf	??_ICMP_EchoReply& (0+255),f,b
  8868  006700  3768               	rlcf	(??_ICMP_EchoReply+1)& (0+255),f,b
  8869  006702  EE20 F002          	lfsr	2,2
  8870  006706  5059               	movf	ICMP_EchoReply@ipv4Hdr,w,c
  8871  006708  26D9               	addwf	fsr2l,f,c
  8872  00670A  505A               	movf	ICMP_EchoReply@ipv4Hdr+1,w,c
  8873  00670C  22DA               	addwfc	fsr2h,f,c
  8874  00670E  CFDE F069          	movff	postinc2,??_ICMP_EchoReply+2
  8875  006712  CFDD F06A          	movff	postdec2,??_ICMP_EchoReply+3
  8876  006716  5167               	movf	??_ICMP_EchoReply& (0+255),w,b
  8877  006718  5D69               	subwf	(??_ICMP_EchoReply+2)& (0+255),w,b
  8878  00671A  6F71               	movwf	ICMP_EchoReply@ipv4PayloadLength& (0+255),b
  8879  00671C  5168               	movf	(??_ICMP_EchoReply+1)& (0+255),w,b
  8880  00671E  596A               	subwfb	(??_ICMP_EchoReply+3)& (0+255),w,b
  8881  006720  6F72               	movwf	(ICMP_EchoReply@ipv4PayloadLength+1)& (0+255),b
  8882                           
  8883                           ; BSR set to: 0
  8884                           ;icmp.c: 99: ETH_Write16(ECHO_REPLY);
  8885  006722  6A04               	clrf	ETH_Write16@data+1,c
  8886  006724  6A03               	clrf	ETH_Write16@data,c
  8887  006726  ECDA  F042         	call	_ETH_Write16	;wreg free
  8888                           
  8889                           ;icmp.c: 100: ETH_Write16(0);
  8890  00672A  6A04               	clrf	ETH_Write16@data+1,c
  8891  00672C  6A03               	clrf	ETH_Write16@data,c
  8892  00672E  ECDA  F042         	call	_ETH_Write16	;wreg free
  8893                           
  8894                           ;icmp.c: 101: ETH_Write16(((((uint16_t)icmpHdr->identifier & (uint16_t)0xFF00) >> 8) | (
      +                          ((uint16_t)icmpHdr->identifier & (uint16_t)0x00FF) << 8)));
  8895  006732  5058               	movf	ICMP_EchoReply@icmpHdr,w,c
  8896  006734  6ED9               	movwf	fsr2l,c
  8897  006736  6ADA               	clrf	fsr2h,c
  8898  006738  0E04               	movlw	4
  8899  00673A  26D9               	addwf	fsr2l,f,c
  8900  00673C  CFDE F067          	movff	postinc2,??_ICMP_EchoReply
  8901  006740  CFDD F068          	movff	postdec2,??_ICMP_EchoReply+1
  8902  006744  0100               	movlb	0	; () banked
  8903  006746  5167               	movf	??_ICMP_EchoReply& (0+255),w,b
  8904  006748  6F6A               	movwf	(??_ICMP_EchoReply+3)& (0+255),b
  8905  00674A  6B69               	clrf	(??_ICMP_EchoReply+2)& (0+255),b
  8906  00674C  5058               	movf	ICMP_EchoReply@icmpHdr,w,c
  8907  00674E  6ED9               	movwf	fsr2l,c
  8908  006750  6ADA               	clrf	fsr2h,c
  8909  006752  0E04               	movlw	4
  8910  006754  26D9               	addwf	fsr2l,f,c
  8911  006756  CFDE F06B          	movff	postinc2,??_ICMP_EchoReply+4
  8912  00675A  CFDD F06C          	movff	postdec2,??_ICMP_EchoReply+5
  8913  00675E  C06C  F06B         	movff	??_ICMP_EchoReply+5,??_ICMP_EchoReply+4
  8914  006762  6B6C               	clrf	(??_ICMP_EchoReply+5)& (0+255),b
  8915  006764  6B6C               	clrf	(??_ICMP_EchoReply+5)& (0+255),b
  8916  006766  5169               	movf	(??_ICMP_EchoReply+2)& (0+255),w,b
  8917  006768  116B               	iorwf	(??_ICMP_EchoReply+4)& (0+255),w,b
  8918  00676A  6E03               	movwf	ETH_Write16@data,c
  8919  00676C  516A               	movf	(??_ICMP_EchoReply+3)& (0+255),w,b
  8920  00676E  116C               	iorwf	(??_ICMP_EchoReply+5)& (0+255),w,b
  8921  006770  6E04               	movwf	ETH_Write16@data+1,c
  8922  006772  ECDA  F042         	call	_ETH_Write16	;wreg free
  8923                           
  8924                           ;icmp.c: 102: ETH_Write16(((((uint16_t)icmpHdr->sequence & (uint16_t)0xFF00) >> 8) | (((
      +                          uint16_t)icmpHdr->sequence & (uint16_t)0x00FF) << 8)));
  8925  006776  5058               	movf	ICMP_EchoReply@icmpHdr,w,c
  8926  006778  6ED9               	movwf	fsr2l,c
  8927  00677A  6ADA               	clrf	fsr2h,c
  8928  00677C  0E06               	movlw	6
  8929  00677E  26D9               	addwf	fsr2l,f,c
  8930  006780  CFDE F067          	movff	postinc2,??_ICMP_EchoReply
  8931  006784  CFDD F068          	movff	postdec2,??_ICMP_EchoReply+1
  8932  006788  0100               	movlb	0	; () banked
  8933  00678A  5167               	movf	??_ICMP_EchoReply& (0+255),w,b
  8934  00678C  6F6A               	movwf	(??_ICMP_EchoReply+3)& (0+255),b
  8935  00678E  6B69               	clrf	(??_ICMP_EchoReply+2)& (0+255),b
  8936  006790  5058               	movf	ICMP_EchoReply@icmpHdr,w,c
  8937  006792  6ED9               	movwf	fsr2l,c
  8938  006794  6ADA               	clrf	fsr2h,c
  8939  006796  0E06               	movlw	6
  8940  006798  26D9               	addwf	fsr2l,f,c
  8941  00679A  CFDE F06B          	movff	postinc2,??_ICMP_EchoReply+4
  8942  00679E  CFDD F06C          	movff	postdec2,??_ICMP_EchoReply+5
  8943  0067A2  C06C  F06B         	movff	??_ICMP_EchoReply+5,??_ICMP_EchoReply+4
  8944  0067A6  6B6C               	clrf	(??_ICMP_EchoReply+5)& (0+255),b
  8945  0067A8  6B6C               	clrf	(??_ICMP_EchoReply+5)& (0+255),b
  8946  0067AA  5169               	movf	(??_ICMP_EchoReply+2)& (0+255),w,b
  8947  0067AC  116B               	iorwf	(??_ICMP_EchoReply+4)& (0+255),w,b
  8948  0067AE  6E03               	movwf	ETH_Write16@data,c
  8949  0067B0  516A               	movf	(??_ICMP_EchoReply+3)& (0+255),w,b
  8950  0067B2  116C               	iorwf	(??_ICMP_EchoReply+5)& (0+255),w,b
  8951  0067B4  6E04               	movwf	ETH_Write16@data+1,c
  8952  0067B6  ECDA  F042         	call	_ETH_Write16	;wreg free
  8953                           
  8954                           ;icmp.c: 105: ret = ETH_Copy(ipv4PayloadLength - sizeof(icmpHeader_t));
  8955  0067BA  0EF8               	movlw	248
  8956  0067BC  0100               	movlb	0	; () banked
  8957  0067BE  2571               	addwf	ICMP_EchoReply@ipv4PayloadLength& (0+255),w,b
  8958  0067C0  6E0D               	movwf	ETH_Copy@len,c
  8959  0067C2  0EFF               	movlw	255
  8960  0067C4  2172               	addwfc	(ICMP_EchoReply@ipv4PayloadLength+1)& (0+255),w,b
  8961  0067C6  6E0E               	movwf	ETH_Copy@len+1,c
  8962  0067C8  EC3D  F03A         	call	_ETH_Copy	;wreg free
  8963  0067CC  0100               	movlb	0	; () banked
  8964  0067CE  6F73               	movwf	ICMP_EchoReply@ret& (0+255),b
  8965                           
  8966                           ; BSR set to: 0
  8967                           ;icmp.c: 106: if(ret==SUCCESS)
  8968  0067D0  0573               	decf	ICMP_EchoReply@ret& (0+255),w,b
  8969  0067D2  E123               	bnz	l8411
  8970                           
  8971                           ; BSR set to: 0
  8972                           ;icmp.c: 107: {
  8973                           ;icmp.c: 108: ETH_SaveRDPT();
  8974  0067D4  ECB4  F043         	call	_ETH_SaveRDPT	;wreg free
  8975                           
  8976                           ;icmp.c: 112: cksm = ETH_TxComputeChecksum(icmp_cksm_start, ipv4PayloadLength, 0);
  8977  0067D8  6A0E               	clrf	ETH_TxComputeChecksum@position+1,c
  8978  0067DA  0E22               	movlw	34
  8979  0067DC  6E0D               	movwf	ETH_TxComputeChecksum@position,c
  8980  0067DE  C071  F00F         	movff	ICMP_EchoReply@ipv4PayloadLength,ETH_TxComputeChecksum@length
  8981  0067E2  C072  F010         	movff	ICMP_EchoReply@ipv4PayloadLength+1,ETH_TxComputeChecksum@length+1
  8982  0067E6  6A12               	clrf	ETH_TxComputeChecksum@seed+1,c
  8983  0067E8  6A11               	clrf	ETH_TxComputeChecksum@seed,c
  8984  0067EA  EC92  F038         	call	_ETH_TxComputeChecksum	;wreg free
  8985  0067EE  C00D  F06F         	movff	?_ETH_TxComputeChecksum,ICMP_EchoReply@cksm
  8986  0067F2  C00E  F070         	movff	?_ETH_TxComputeChecksum+1,ICMP_EchoReply@cksm+1
  8987                           
  8988                           ;icmp.c: 113: ETH_Insert((char *)&cksm,sizeof(cksm),sizeof(ethernetFrame_t) + sizeof(ipv
      +                          4Header_t) + (size_t)(((char*)&((icmpHeader_t *)1)->checksum)-1));
  8989  0067F6  0E6F               	movlw	low ICMP_EchoReply@cksm
  8990  0067F8  6E0B               	movwf	ETH_Insert@data,c
  8991  0067FA  6A0D               	clrf	ETH_Insert@len+1,c
  8992  0067FC  0E02               	movlw	2
  8993  0067FE  6E0C               	movwf	ETH_Insert@len,c
  8994  006800  6A0F               	clrf	ETH_Insert@offset+1,c
  8995  006802  0E24               	movlw	36
  8996  006804  6E0E               	movwf	ETH_Insert@offset,c
  8997  006806  ECAD  F03E         	call	_ETH_Insert	;wreg free
  8998                           
  8999                           ;icmp.c: 114: ret = IPV4_Send(ipv4PayloadLength);
  9000  00680A  C071  F01D         	movff	ICMP_EchoReply@ipv4PayloadLength,IPV4_Send@payloadLength
  9001  00680E  C072  F01E         	movff	ICMP_EchoReply@ipv4PayloadLength+1,IPV4_Send@payloadLength+1
  9002  006812  EC2E  F03D         	call	_IPV4_Send	;wreg free
  9003  006816  0100               	movlb	0	; () banked
  9004  006818  6F73               	movwf	ICMP_EchoReply@ret& (0+255),b
  9005  00681A                     l8411:
  9006                           
  9007                           ; BSR set to: 0
  9008                           ;icmp.c: 115: }
  9009                           ;icmp.c: 116: }
  9010                           ;icmp.c: 117: return ret;
  9011  00681A  5173               	movf	ICMP_EchoReply@ret& (0+255),w,b
  9012                           
  9013                           ; BSR set to: 0
  9014  00681C  0012               	return		;funcret
  9015  00681E                     __end_of_ICMP_EchoReply:
  9016                           	opt stack 0
  9017                           tosu	equ	0xFFF
  9018                           tosh	equ	0xFFE
  9019                           tosl	equ	0xFFD
  9020                           pclath	equ	0xFFA
  9021                           tblptru	equ	0xFF8
  9022                           tblptrh	equ	0xFF7
  9023                           tblptrl	equ	0xFF6
  9024                           tablat	equ	0xFF5
  9025                           prodh	equ	0xFF4
  9026                           prodl	equ	0xFF3
  9027                           intcon	equ	0xFF2
  9028                           intcon2	equ	0xFF1
  9029                           indf0	equ	0xFEF
  9030                           postinc0	equ	0xFEE
  9031                           fsr0h	equ	0xFEA
  9032                           fsr0l	equ	0xFE9
  9033                           wreg	equ	0xFE8
  9034                           postinc1	equ	0xFE6
  9035                           fsr1h	equ	0xFE2
  9036                           fsr1l	equ	0xFE1
  9037                           indf2	equ	0xFDF
  9038                           postinc2	equ	0xFDE
  9039                           postdec2	equ	0xFDD
  9040                           fsr2h	equ	0xFDA
  9041                           fsr2l	equ	0xFD9
  9042                           status	equ	0xFD8
  9043                           
  9044 ;; *************** function _ETH_SaveRDPT *****************
  9045 ;; Defined at:
  9046 ;;		line 592 in file "../../TCPIP Library/ethernet_drivers/encX24J600_driver.c"
  9047 ;; Parameters:    Size  Location     Type
  9048 ;;		None
  9049 ;; Auto vars:     Size  Location     Type
  9050 ;;		None
  9051 ;; Return value:  Size  Location     Type
  9052 ;;                  1    wreg      void 
  9053 ;; Registers used:
  9054 ;;		wreg, status,2, status,0, cstack
  9055 ;; Tracked objects:
  9056 ;;		On entry : E/1
  9057 ;;		On exit  : 0/0
  9058 ;;		Unchanged: 0/0
  9059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9064 ;;Total ram usage:        0 bytes
  9065 ;; Hardware stack levels used:    1
  9066 ;; Hardware stack levels required when called:    6
  9067 ;; This function calls:
  9068 ;;		_ENCx24_Read
  9069 ;; This function is called by:
  9070 ;;		_ICMP_Receive
  9071 ;;		_ICMP_EchoReply
  9072 ;; This function uses a non-reentrant model
  9073 ;;
  9074                           
  9075                           	psect	text41
  9076  008768                     __ptext41:
  9077                           	opt stack 0
  9078  008768                     _ETH_SaveRDPT:
  9079                           	opt stack 19
  9080                           
  9081                           ;encX24J600_driver.c: 594: ethData.saveRDPT = ENCx24_Read(XJ600_ERXRDPTL);
  9082                           
  9083                           ; BSR set to: 0
  9084                           ;incstack = 0
  9085  008768  0E8A               	movlw	138
  9086  00876A  EC06  F040         	call	_ENCx24_Read
  9087  00876E  C005  F186         	movff	?_ENCx24_Read,_ethData+3	;volatile
  9088  008772  C006  F187         	movff	?_ENCx24_Read+1,_ethData+4	;volatile
  9089  008776  0012               	return		;funcret
  9090  008778                     __end_of_ETH_SaveRDPT:
  9091                           	opt stack 0
  9092                           tosu	equ	0xFFF
  9093                           tosh	equ	0xFFE
  9094                           tosl	equ	0xFFD
  9095                           pclath	equ	0xFFA
  9096                           tblptru	equ	0xFF8
  9097                           tblptrh	equ	0xFF7
  9098                           tblptrl	equ	0xFF6
  9099                           tablat	equ	0xFF5
  9100                           prodh	equ	0xFF4
  9101                           prodl	equ	0xFF3
  9102                           intcon	equ	0xFF2
  9103                           intcon2	equ	0xFF1
  9104                           indf0	equ	0xFEF
  9105                           postinc0	equ	0xFEE
  9106                           fsr0h	equ	0xFEA
  9107                           fsr0l	equ	0xFE9
  9108                           wreg	equ	0xFE8
  9109                           postinc1	equ	0xFE6
  9110                           fsr1h	equ	0xFE2
  9111                           fsr1l	equ	0xFE1
  9112                           indf2	equ	0xFDF
  9113                           postinc2	equ	0xFDE
  9114                           postdec2	equ	0xFDD
  9115                           fsr2h	equ	0xFDA
  9116                           fsr2l	equ	0xFD9
  9117                           status	equ	0xFD8
  9118                           
  9119 ;; *************** function _ETH_Copy *****************
  9120 ;; Defined at:
  9121 ;;		line 416 in file "../../TCPIP Library/ethernet_drivers/encX24J600_driver.c"
  9122 ;; Parameters:    Size  Location     Type
  9123 ;;  len             2   12[COMRAM] unsigned int 
  9124 ;; Auto vars:     Size  Location     Type
  9125 ;;  txBufferAddr    2   14[COMRAM] unsigned int 
  9126 ;; Return value:  Size  Location     Type
  9127 ;;                  1    wreg      enum E6934
  9128 ;; Registers used:
  9129 ;;		wreg, status,2, status,0, cstack
  9130 ;; Tracked objects:
  9131 ;;		On entry : F/0
  9132 ;;		On exit  : 0/0
  9133 ;;		Unchanged: 0/0
  9134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9135 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9136 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9138 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9139 ;;Total ram usage:        4 bytes
  9140 ;; Hardware stack levels used:    1
  9141 ;; Hardware stack levels required when called:    7
  9142 ;; This function calls:
  9143 ;;		_ENCx24_BFC
  9144 ;;		_ENCx24_BFS
  9145 ;;		_ENCx24_Read
  9146 ;;		_ENCx24_Write
  9147 ;;		_waitForDMA
  9148 ;; This function is called by:
  9149 ;;		_ICMP_EchoReply
  9150 ;; This function uses a non-reentrant model
  9151 ;;
  9152                           
  9153                           	psect	text42
  9154  00747A                     __ptext42:
  9155                           	opt stack 0
  9156  00747A                     _ETH_Copy:
  9157                           	opt stack 0
  9158  00747A                     i1L__ptext93:
  9159                           	opt stack 0
  9160  00747A                     i1L_waitForDMA:
  9161                           	opt stack 0
  9162  00747A                     i1Ll501:
  9163                           	opt stack 0
  9164  00747A                     i1Ll7791:
  9165                           	opt stack 18
  9166                           
  9167                           ;encX24J600_driver.c: 487: {
  9168                           ;encX24J600_driver.c: 488: econ1_val = ENCx24_Read(XJ600_ECON1L);
  9169  00747A  0EFE               	movlw	254
  9170  00747C  EC06  F040         	call	_ENCx24_Read
  9171  007480  C005  F00B         	movff	?_ENCx24_Read,waitForDMA@econ1_val
  9172  007484  C006  F00C         	movff	?_ENCx24_Read+1,waitForDMA@econ1_val+1
  9173  007488                     i1Ll7793:
  9174                           	opt stack 18
  9175                           
  9176                           ;encX24J600_driver.c: 489: } while ( econ1_val & 0x0020 );
  9177  007488  BA0B               	btfsc	waitForDMA@econ1_val,5,c
  9178  00748A                     i1Lu10341:
  9179                           	opt stack 0
  9180  00748A  D7F7               	goto	i1Ll501
  9181  00748C                     i1Lu10340:
  9182                           	opt stack 0
  9183  00748C                     i1Ll503:
  9184                           	opt stack 18
  9185                           
  9186                           ;encX24J600_driver.c: 425: if((ENCx24_Read(XJ600_ECON1L) & 0x20) == 0)
  9187  00748C  0EFE               	movlw	254
  9188  00748E  EC06  F040         	call	_ENCx24_Read
  9189  007492  BA05               	btfsc	?_ENCx24_Read,5,c
  9190  007494  D042               	goto	l491
  9191                           
  9192                           ;encX24J600_driver.c: 426: {
  9193                           ;encX24J600_driver.c: 427: txBufferAddress = ENCx24_Read(XJ600_EGPWRPTL);
  9194  007496  0E88               	movlw	136
  9195  007498  EC06  F040         	call	_ENCx24_Read
  9196  00749C  C005  F00F         	movff	?_ENCx24_Read,ETH_Copy@txBufferAddress
  9197  0074A0  C006  F010         	movff	?_ENCx24_Read+1,ETH_Copy@txBufferAddress+1
  9198                           
  9199                           ;encX24J600_driver.c: 428: ENCx24_Write(XJ600_EDMASTL, ethData.saveRDPT);
  9200  0074A4  C186  F005         	movff	_ethData+3,ENCx24_Write@data	;volatile
  9201  0074A8  C187  F006         	movff	_ethData+4,ENCx24_Write@data+1	;volatile
  9202  0074AC  0E0A               	movlw	10
  9203  0074AE  EC94  F040         	call	_ENCx24_Write
  9204                           
  9205                           ;encX24J600_driver.c: 429: ENCx24_Write(XJ600_EDMALENL,len);
  9206  0074B2  C00D  F005         	movff	ETH_Copy@len,ENCx24_Write@data
  9207  0074B6  C00E  F006         	movff	ETH_Copy@len+1,ENCx24_Write@data+1
  9208  0074BA  0E0C               	movlw	12
  9209  0074BC  EC94  F040         	call	_ENCx24_Write
  9210                           
  9211                           ;encX24J600_driver.c: 430: ENCx24_Write(XJ600_EDMADSTL, txBufferAddress);
  9212  0074C0  C00F  F005         	movff	ETH_Copy@txBufferAddress,ENCx24_Write@data
  9213  0074C4  C010  F006         	movff	ETH_Copy@txBufferAddress+1,ENCx24_Write@data+1
  9214  0074C8  0E0E               	movlw	14
  9215  0074CA  EC94  F040         	call	_ENCx24_Write
  9216                           
  9217                           ;encX24J600_driver.c: 433: ENCx24_BFC(XJ600_ECON1L, 0x0004);
  9218  0074CE  6A06               	clrf	ENCx24_BFC@bitMask+1,c
  9219  0074D0  0E04               	movlw	4
  9220  0074D2  6E05               	movwf	ENCx24_BFC@bitMask,c
  9221  0074D4  0EFE               	movlw	254
  9222  0074D6  ECD5  F040         	call	_ENCx24_BFC
  9223                           
  9224                           ;encX24J600_driver.c: 437: ENCx24_BFS(XJ600_ECON1L, 0b0000000000111000);
  9225  0074DA  6A06               	clrf	ENCx24_BFS@bitMask+1,c
  9226  0074DC  0E38               	movlw	56
  9227  0074DE  6E05               	movwf	ENCx24_BFS@bitMask,c
  9228  0074E0  0EFE               	movlw	254
  9229  0074E2  ECB5  F040         	call	_ENCx24_BFS
  9230  0074E6                     i2L__ptext93:
  9231                           	opt stack 0
  9232  0074E6                     i2L_waitForDMA:
  9233                           	opt stack 0
  9234  0074E6                     i2Ll501:
  9235                           	opt stack 0
  9236  0074E6                     i2Ll7791:
  9237                           	opt stack 18
  9238                           
  9239                           ;encX24J600_driver.c: 487: {
  9240                           ;encX24J600_driver.c: 488: econ1_val = ENCx24_Read(XJ600_ECON1L);
  9241  0074E6  0EFE               	movlw	254
  9242  0074E8  EC06  F040         	call	_ENCx24_Read
  9243  0074EC  C005  F00B         	movff	?_ENCx24_Read,waitForDMA@econ1_val
  9244  0074F0  C006  F00C         	movff	?_ENCx24_Read+1,waitForDMA@econ1_val+1
  9245  0074F4                     i2Ll7793:
  9246                           	opt stack 18
  9247                           
  9248                           ;encX24J600_driver.c: 489: } while ( econ1_val & 0x0020 );
  9249  0074F4  BA0B               	btfsc	waitForDMA@econ1_val,5,c
  9250  0074F6                     i2Lu10341:
  9251                           	opt stack 0
  9252  0074F6  D7F7               	goto	i2Ll501
  9253  0074F8                     i2Lu10340:
  9254                           	opt stack 0
  9255  0074F8                     i2Ll503:
  9256                           	opt stack 18
  9257                           
  9258                           ;encX24J600_driver.c: 441: txBufferAddress += len;
  9259  0074F8  500D               	movf	ETH_Copy@len,w,c
  9260  0074FA  260F               	addwf	ETH_Copy@txBufferAddress,f,c
  9261  0074FC  500E               	movf	ETH_Copy@len+1,w,c
  9262  0074FE  2210               	addwfc	ETH_Copy@txBufferAddress+1,f,c
  9263                           
  9264                           ;encX24J600_driver.c: 443: ENCx24_Write(XJ600_EGPWRPTL, txBufferAddress);
  9265  007500  C00F  F005         	movff	ETH_Copy@txBufferAddress,ENCx24_Write@data
  9266  007504  C010  F006         	movff	ETH_Copy@txBufferAddress+1,ENCx24_Write@data+1
  9267  007508  0E88               	movlw	136
  9268  00750A  EC94  F040         	call	_ENCx24_Write
  9269                           
  9270                           ;encX24J600_driver.c: 445: TXPacketSize += len;
  9271  00750E  500D               	movf	ETH_Copy@len,w,c
  9272  007510  0101               	movlb	1	; () banked
  9273  007512  279A               	addwf	_TXPacketSize& (0+255),f,b
  9274  007514  500E               	movf	ETH_Copy@len+1,w,c
  9275  007516  239B               	addwfc	(_TXPacketSize+1)& (0+255),f,b
  9276                           
  9277                           ; BSR set to: 1
  9278                           ;encX24J600_driver.c: 447: return SUCCESS;
  9279  007518  0C01               	retlw	1
  9280  00751A                     l491:
  9281  00751A  00FF               	reset		;# 
  9282                           
  9283                           ;encX24J600_driver.c: 450: return DMA_TIMEOUT;
  9284  00751C  0C0C               	retlw	12	;funcret
  9285  00751E                     __end_of_ETH_Copy:
  9286                           	opt stack 0
  9287                           tosu	equ	0xFFF
  9288                           tosh	equ	0xFFE
  9289                           tosl	equ	0xFFD
  9290                           pclath	equ	0xFFA
  9291                           tblptru	equ	0xFF8
  9292                           tblptrh	equ	0xFF7
  9293                           tblptrl	equ	0xFF6
  9294                           tablat	equ	0xFF5
  9295                           prodh	equ	0xFF4
  9296                           prodl	equ	0xFF3
  9297                           intcon	equ	0xFF2
  9298                           intcon2	equ	0xFF1
  9299                           indf0	equ	0xFEF
  9300                           postinc0	equ	0xFEE
  9301                           fsr0h	equ	0xFEA
  9302                           fsr0l	equ	0xFE9
  9303                           wreg	equ	0xFE8
  9304                           postinc1	equ	0xFE6
  9305                           fsr1h	equ	0xFE2
  9306                           fsr1l	equ	0xFE1
  9307                           indf2	equ	0xFDF
  9308                           postinc2	equ	0xFDE
  9309                           postdec2	equ	0xFDD
  9310                           fsr2h	equ	0xFDA
  9311                           fsr2l	equ	0xFD9
  9312                           status	equ	0xFD8
  9313                           
  9314 ;; *************** function _ETH_RxComputeChecksum *****************
  9315 ;; Defined at:
  9316 ;;		line 545 in file "../../TCPIP Library/ethernet_drivers/encX24J600_driver.c"
  9317 ;; Parameters:    Size  Location     Type
  9318 ;;  len             2   12[COMRAM] unsigned int 
  9319 ;;  seed            2   14[COMRAM] unsigned int 
  9320 ;; Auto vars:     Size  Location     Type
  9321 ;;  econ1Val        2   24[COMRAM] unsigned int 
  9322 ;;  rxPtr           2   22[COMRAM] unsigned int 
  9323 ;;  cksm            2   20[COMRAM] unsigned int 
  9324 ;; Return value:  Size  Location     Type
  9325 ;;                  2   12[COMRAM] unsigned int 
  9326 ;; Registers used:
  9327 ;;		wreg, status,2, status,0, cstack
  9328 ;; Tracked objects:
  9329 ;;		On entry : F/0
  9330 ;;		On exit  : 0/0
  9331 ;;		Unchanged: 0/0
  9332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9333 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9334 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9335 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9336 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9337 ;;Total ram usage:       14 bytes
  9338 ;; Hardware stack levels used:    1
  9339 ;; Hardware stack levels required when called:    7
  9340 ;; This function calls:
  9341 ;;		_ENCx24_BFC
  9342 ;;		_ENCx24_BFS
  9343 ;;		_ENCx24_Read
  9344 ;;		_ENCx24_Write
  9345 ;;		_waitForDMA
  9346 ;; This function is called by:
  9347 ;;		_IPV4_Packet
  9348 ;; This function uses a non-reentrant model
  9349 ;;
  9350                           
  9351                           	psect	text43
  9352  006F9A                     __ptext43:
  9353                           	opt stack 0
  9354  006F9A                     _ETH_RxComputeChecksum:
  9355                           	opt stack 0
  9356  006F9A                     i3L__ptext93:
  9357                           	opt stack 0
  9358  006F9A                     i3L_waitForDMA:
  9359                           	opt stack 0
  9360  006F9A                     i3Ll501:
  9361                           	opt stack 0
  9362  006F9A                     i3Ll7791:
  9363                           	opt stack 18
  9364                           
  9365                           ;encX24J600_driver.c: 487: {
  9366                           ;encX24J600_driver.c: 488: econ1_val = ENCx24_Read(XJ600_ECON1L);
  9367  006F9A  0EFE               	movlw	254
  9368  006F9C  EC06  F040         	call	_ENCx24_Read
  9369  006FA0  C005  F00B         	movff	?_ENCx24_Read,waitForDMA@econ1_val
  9370  006FA4  C006  F00C         	movff	?_ENCx24_Read+1,waitForDMA@econ1_val+1
  9371  006FA8                     i3Ll7793:
  9372                           	opt stack 18
  9373                           
  9374                           ;encX24J600_driver.c: 489: } while ( econ1_val & 0x0020 );
  9375  006FA8  BA0B               	btfsc	waitForDMA@econ1_val,5,c
  9376  006FAA                     i3Lu10341:
  9377                           	opt stack 0
  9378  006FAA  D7F7               	goto	i3Ll501
  9379  006FAC                     i3Lu10340:
  9380                           	opt stack 0
  9381  006FAC                     i3Ll503:
  9382                           	opt stack 20
  9383                           
  9384                           ;encX24J600_driver.c: 560: ENCx24_BFC(XJ600_ECON1L, econ1Val);
  9385  006FAC  6A06               	clrf	ENCx24_BFC@bitMask+1,c
  9386  006FAE  0E1C               	movlw	28
  9387  006FB0  6E05               	movwf	ENCx24_BFC@bitMask,c
  9388  006FB2  0EFE               	movlw	254
  9389  006FB4  ECD5  F040         	call	_ENCx24_BFC
  9390                           
  9391                           ;encX24J600_driver.c: 562: rxPtr = ENCx24_Read(XJ600_ERXRDPTL);
  9392  006FB8  0E8A               	movlw	138
  9393  006FBA  EC06  F040         	call	_ENCx24_Read
  9394  006FBE  C005  F017         	movff	?_ENCx24_Read,ETH_RxComputeChecksum@rxPtr
  9395  006FC2  C006  F018         	movff	?_ENCx24_Read+1,ETH_RxComputeChecksum@rxPtr+1
  9396                           
  9397                           ;encX24J600_driver.c: 565: ENCx24_Write(XJ600_EDMASTL, rxPtr);
  9398  006FC6  C017  F005         	movff	ETH_RxComputeChecksum@rxPtr,ENCx24_Write@data
  9399  006FCA  C018  F006         	movff	ETH_RxComputeChecksum@rxPtr+1,ENCx24_Write@data+1
  9400  006FCE  0E0A               	movlw	10
  9401  006FD0  EC94  F040         	call	_ENCx24_Write
  9402                           
  9403                           ;encX24J600_driver.c: 567: ENCx24_Write(XJ600_EDMALENL, len);
  9404  006FD4  C00D  F005         	movff	ETH_RxComputeChecksum@len,ENCx24_Write@data
  9405  006FD8  C00E  F006         	movff	ETH_RxComputeChecksum@len+1,ENCx24_Write@data+1
  9406  006FDC  0E0C               	movlw	12
  9407  006FDE  EC94  F040         	call	_ENCx24_Write
  9408                           
  9409                           ;encX24J600_driver.c: 569: econ1Val = 0x0020;
  9410  006FE2  6A1A               	clrf	ETH_RxComputeChecksum@econ1Val+1,c
  9411  006FE4  0E20               	movlw	32
  9412  006FE6  6E19               	movwf	ETH_RxComputeChecksum@econ1Val,c
  9413                           
  9414                           ;encX24J600_driver.c: 570: if (seed)
  9415  006FE8  500F               	movf	ETH_RxComputeChecksum@seed,w,c
  9416  006FEA  1010               	iorwf	ETH_RxComputeChecksum@seed+1,w,c
  9417  006FEC  E016               	bz	l8903
  9418                           
  9419                           ;encX24J600_driver.c: 571: {
  9420                           ;encX24J600_driver.c: 572: econ1Val |= 0x0008;
  9421  006FEE  8619               	bsf	ETH_RxComputeChecksum@econ1Val,3,c
  9422                           
  9423                           ;encX24J600_driver.c: 573: seed=~(seed);
  9424  006FF0  1E0F               	comf	ETH_RxComputeChecksum@seed,f,c
  9425  006FF2  1E10               	comf	ETH_RxComputeChecksum@seed+1,f,c
  9426                           
  9427                           ;encX24J600_driver.c: 574: seed = ((((uint16_t)seed & (uint16_t)0xFF00) >> 8) | (((uint1
      +                          6_t)seed & (uint16_t)0x00FF) << 8));
  9428  006FF4  500F               	movf	ETH_RxComputeChecksum@seed,w,c
  9429  006FF6  6E12               	movwf	(??_ETH_RxComputeChecksum+1)& (0+255),c
  9430  006FF8  6A11               	clrf	??_ETH_RxComputeChecksum& (0+255),c
  9431  006FFA  5010               	movf	ETH_RxComputeChecksum@seed+1,w,c
  9432  006FFC  6E13               	movwf	(??_ETH_RxComputeChecksum+2)& (0+255),c
  9433  006FFE  6A14               	clrf	(??_ETH_RxComputeChecksum+3)& (0+255),c
  9434  007000  5011               	movf	??_ETH_RxComputeChecksum,w,c
  9435  007002  1013               	iorwf	??_ETH_RxComputeChecksum+2,w,c
  9436  007004  6E0F               	movwf	ETH_RxComputeChecksum@seed,c
  9437  007006  5012               	movf	??_ETH_RxComputeChecksum+1,w,c
  9438  007008  1014               	iorwf	??_ETH_RxComputeChecksum+3,w,c
  9439  00700A  6E10               	movwf	ETH_RxComputeChecksum@seed+1,c
  9440                           
  9441                           ;encX24J600_driver.c: 575: ENCx24_Write(XJ600_EDMACSL, seed);
  9442  00700C  C00F  F005         	movff	ETH_RxComputeChecksum@seed,ENCx24_Write@data
  9443  007010  C010  F006         	movff	ETH_RxComputeChecksum@seed+1,ENCx24_Write@data+1
  9444  007014  0E10               	movlw	16
  9445  007016  EC94  F040         	call	_ENCx24_Write
  9446  00701A                     l8903:
  9447                           
  9448                           ;encX24J600_driver.c: 576: }
  9449                           ;encX24J600_driver.c: 579: ENCx24_BFS(XJ600_ECON1L, econ1Val);
  9450  00701A  C019  F005         	movff	ETH_RxComputeChecksum@econ1Val,ENCx24_BFS@bitMask
  9451  00701E  C01A  F006         	movff	ETH_RxComputeChecksum@econ1Val+1,ENCx24_BFS@bitMask+1
  9452  007022  0EFE               	movlw	254
  9453  007024  ECB5  F040         	call	_ENCx24_BFS
  9454  007028                     i4L__ptext93:
  9455                           	opt stack 0
  9456  007028                     i4L_waitForDMA:
  9457                           	opt stack 0
  9458  007028                     i4Ll501:
  9459                           	opt stack 0
  9460  007028                     i4Ll7791:
  9461                           	opt stack 18
  9462                           
  9463                           ;encX24J600_driver.c: 487: {
  9464                           ;encX24J600_driver.c: 488: econ1_val = ENCx24_Read(XJ600_ECON1L);
  9465  007028  0EFE               	movlw	254
  9466  00702A  EC06  F040         	call	_ENCx24_Read
  9467  00702E  C005  F00B         	movff	?_ENCx24_Read,waitForDMA@econ1_val
  9468  007032  C006  F00C         	movff	?_ENCx24_Read+1,waitForDMA@econ1_val+1
  9469  007036                     i4Ll7793:
  9470                           	opt stack 18
  9471                           
  9472                           ;encX24J600_driver.c: 489: } while ( econ1_val & 0x0020 );
  9473  007036  BA0B               	btfsc	waitForDMA@econ1_val,5,c
  9474  007038                     i4Lu10341:
  9475                           	opt stack 0
  9476  007038  D7F7               	goto	i4Ll501
  9477  00703A                     i4Lu10340:
  9478                           	opt stack 0
  9479  00703A                     i4Ll503:
  9480                           	opt stack 20
  9481                           
  9482                           ;encX24J600_driver.c: 582: cksm = ENCx24_Read(XJ600_EDMACSL);
  9483  00703A  0E10               	movlw	16
  9484  00703C  EC06  F040         	call	_ENCx24_Read
  9485  007040  C005  F015         	movff	?_ENCx24_Read,ETH_RxComputeChecksum@cksm
  9486  007044  C006  F016         	movff	?_ENCx24_Read+1,ETH_RxComputeChecksum@cksm+1
  9487                           
  9488                           ;encX24J600_driver.c: 584: ENCx24_Write(XJ600_ERXRDPTL, rxPtr);
  9489  007048  C017  F005         	movff	ETH_RxComputeChecksum@rxPtr,ENCx24_Write@data
  9490  00704C  C018  F006         	movff	ETH_RxComputeChecksum@rxPtr+1,ENCx24_Write@data+1
  9491  007050  0E8A               	movlw	138
  9492  007052  EC94  F040         	call	_ENCx24_Write
  9493                           
  9494                           ;encX24J600_driver.c: 586: return cksm;
  9495  007056  C015  F00D         	movff	ETH_RxComputeChecksum@cksm,?_ETH_RxComputeChecksum
  9496  00705A  C016  F00E         	movff	ETH_RxComputeChecksum@cksm+1,?_ETH_RxComputeChecksum+1
  9497  00705E  0012               	return		;funcret
  9498  007060                     __end_of_ETH_RxComputeChecksum:
  9499                           	opt stack 0
  9500                           tosu	equ	0xFFF
  9501                           tosh	equ	0xFFE
  9502                           tosl	equ	0xFFD
  9503                           pclath	equ	0xFFA
  9504                           tblptru	equ	0xFF8
  9505                           tblptrh	equ	0xFF7
  9506                           tblptrl	equ	0xFF6
  9507                           tablat	equ	0xFF5
  9508                           prodh	equ	0xFF4
  9509                           prodl	equ	0xFF3
  9510                           intcon	equ	0xFF2
  9511                           intcon2	equ	0xFF1
  9512                           indf0	equ	0xFEF
  9513                           postinc0	equ	0xFEE
  9514                           fsr0h	equ	0xFEA
  9515                           fsr0l	equ	0xFE9
  9516                           wreg	equ	0xFE8
  9517                           postinc1	equ	0xFE6
  9518                           fsr1h	equ	0xFE2
  9519                           fsr1l	equ	0xFE1
  9520                           indf2	equ	0xFDF
  9521                           postinc2	equ	0xFDE
  9522                           postdec2	equ	0xFDD
  9523                           fsr2h	equ	0xFDA
  9524                           fsr2l	equ	0xFD9
  9525                           status	equ	0xFD8
  9526                           
  9527 ;; *************** function _ETH_NextPacketUpdate *****************
  9528 ;; Defined at:
  9529 ;;		line 278 in file "../../TCPIP Library/ethernet_drivers/encX24J600_driver.c"
  9530 ;; Parameters:    Size  Location     Type
  9531 ;;		None
  9532 ;; Auto vars:     Size  Location     Type
  9533 ;;		None
  9534 ;; Return value:  Size  Location     Type
  9535 ;;                  1    wreg      void 
  9536 ;; Registers used:
  9537 ;;		wreg, status,2, status,0, cstack
  9538 ;; Tracked objects:
  9539 ;;		On entry : F/1
  9540 ;;		On exit  : F/2
  9541 ;;		Unchanged: 0/0
  9542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9547 ;;Total ram usage:        0 bytes
  9548 ;; Hardware stack levels used:    1
  9549 ;; Hardware stack levels required when called:    5
  9550 ;; This function calls:
  9551 ;;		_ETH_SetRXptr
  9552 ;;		_SPI_ExchangeByte
  9553 ;; This function is called by:
  9554 ;;		_Network_Read
  9555 ;; This function uses a non-reentrant model
  9556 ;;
  9557                           
  9558                           	psect	text44
  9559  007ACE                     __ptext44:
  9560                           	opt stack 0
  9561  007ACE                     _ETH_NextPacketUpdate:
  9562                           	opt stack 23
  9563                           
  9564                           ; BSR set to: 1
  9565                           ;encX24J600_driver.c: 280: ETH_SetRXptr(nextPacketPointer);
  9566                           
  9567                           ;incstack = 0
  9568  007ACE  C19E  F003         	movff	_nextPacketPointer,ETH_SetRXptr@address
  9569  007AD2  C19F  F004         	movff	_nextPacketPointer+1,ETH_SetRXptr@address+1
  9570  007AD6  EC7D  F043         	call	_ETH_SetRXptr	;wreg free
  9571  007ADA  968A               	bcf	3978,3,c	;volatile
  9572                           
  9573                           ;encX24J600_driver.c: 283: SPI_ExchangeByte(rrxdata_inst);
  9574  007ADC  0E2C               	movlw	44
  9575  007ADE  ECD2  F043         	call	_SPI_ExchangeByte
  9576                           
  9577                           ;encX24J600_driver.c: 284: ((char *) &nextPacketPointer)[0] = SPI_ExchangeByte(0);
  9578  007AE2  0E00               	movlw	0
  9579  007AE4  ECD2  F043         	call	_SPI_ExchangeByte
  9580  007AE8  0101               	movlb	1	; () banked
  9581  007AEA  6F9E               	movwf	_nextPacketPointer& (0+255),b
  9582                           
  9583                           ;encX24J600_driver.c: 285: ((char *) &nextPacketPointer)[1] = SPI_ExchangeByte(0);
  9584  007AEC  0E00               	movlw	0
  9585  007AEE  ECD2  F043         	call	_SPI_ExchangeByte
  9586  007AF2  0101               	movlb	1	; () banked
  9587  007AF4  6F9F               	movwf	(_nextPacketPointer+1)& (0+255),b
  9588                           
  9589                           ;encX24J600_driver.c: 286: ((char *) &rxPacketStatusVector)[0] = SPI_ExchangeByte(0);
  9590  007AF6  0E00               	movlw	0
  9591  007AF8  ECD2  F043         	call	_SPI_ExchangeByte
  9592  007AFC  0102               	movlb	2	; () banked
  9593  007AFE  6F18               	movwf	_rxPacketStatusVector& (0+255),b
  9594                           
  9595                           ;encX24J600_driver.c: 287: ((char *) &rxPacketStatusVector)[1] = SPI_ExchangeByte(0);
  9596  007B00  0E00               	movlw	0
  9597  007B02  ECD2  F043         	call	_SPI_ExchangeByte
  9598  007B06  0102               	movlb	2	; () banked
  9599  007B08  6F19               	movwf	(_rxPacketStatusVector+1)& (0+255),b
  9600                           
  9601                           ;encX24J600_driver.c: 288: ((char *) &rxPacketStatusVector)[2] = SPI_ExchangeByte(0);
  9602  007B0A  0E00               	movlw	0
  9603  007B0C  ECD2  F043         	call	_SPI_ExchangeByte
  9604  007B10  0102               	movlb	2	; () banked
  9605  007B12  6F1A               	movwf	(_rxPacketStatusVector+2)& (0+255),b
  9606                           
  9607                           ;encX24J600_driver.c: 289: ((char *) &rxPacketStatusVector)[3] = SPI_ExchangeByte(0);
  9608  007B14  0E00               	movlw	0
  9609  007B16  ECD2  F043         	call	_SPI_ExchangeByte
  9610  007B1A  0102               	movlb	2	; () banked
  9611  007B1C  6F1B               	movwf	(_rxPacketStatusVector+3)& (0+255),b
  9612                           
  9613                           ;encX24J600_driver.c: 290: ((char *) &rxPacketStatusVector)[4] = SPI_ExchangeByte(0);
  9614  007B1E  0E00               	movlw	0
  9615  007B20  ECD2  F043         	call	_SPI_ExchangeByte
  9616  007B24  0102               	movlb	2	; () banked
  9617  007B26  6F1C               	movwf	(_rxPacketStatusVector+4)& (0+255),b
  9618                           
  9619                           ;encX24J600_driver.c: 291: ((char *) &rxPacketStatusVector)[5] = SPI_ExchangeByte(0);
  9620  007B28  0E00               	movlw	0
  9621  007B2A  ECD2  F043         	call	_SPI_ExchangeByte
  9622  007B2E  0102               	movlb	2	; () banked
  9623  007B30  6F1D               	movwf	(_rxPacketStatusVector+5)& (0+255),b
  9624                           
  9625                           ; BSR set to: 2
  9626  007B32  868A               	bsf	3978,3,c	;volatile
  9627                           
  9628                           ; BSR set to: 2
  9629                           ;encX24J600_driver.c: 295: rxPacketStatusVector.ByteCount -= 4;
  9630  007B34  0E04               	movlw	4
  9631  007B36  5F18               	subwf	_rxPacketStatusVector& (0+255),f,b
  9632  007B38  0E00               	movlw	0
  9633  007B3A  5B19               	subwfb	(_rxPacketStatusVector+1)& (0+255),f,b
  9634                           
  9635                           ; BSR set to: 2
  9636  007B3C  0C00               	retlw	0	;funcret
  9637  007B3E                     __end_of_ETH_NextPacketUpdate:
  9638                           	opt stack 0
  9639                           tosu	equ	0xFFF
  9640                           tosh	equ	0xFFE
  9641                           tosl	equ	0xFFD
  9642                           pclath	equ	0xFFA
  9643                           tblptru	equ	0xFF8
  9644                           tblptrh	equ	0xFF7
  9645                           tblptrl	equ	0xFF6
  9646                           tablat	equ	0xFF5
  9647                           prodh	equ	0xFF4
  9648                           prodl	equ	0xFF3
  9649                           intcon	equ	0xFF2
  9650                           intcon2	equ	0xFF1
  9651                           indf0	equ	0xFEF
  9652                           postinc0	equ	0xFEE
  9653                           fsr0h	equ	0xFEA
  9654                           fsr0l	equ	0xFE9
  9655                           wreg	equ	0xFE8
  9656                           postinc1	equ	0xFE6
  9657                           fsr1h	equ	0xFE2
  9658                           fsr1l	equ	0xFE1
  9659                           indf2	equ	0xFDF
  9660                           postinc2	equ	0xFDE
  9661                           postdec2	equ	0xFDD
  9662                           fsr2h	equ	0xFDA
  9663                           fsr2l	equ	0xFD9
  9664                           status	equ	0xFD8
  9665                           
  9666 ;; *************** function _ETH_SetRXptr *****************
  9667 ;; Defined at:
  9668 ;;		line 456 in file "../../TCPIP Library/ethernet_drivers/encX24j600_spi.c"
  9669 ;; Parameters:    Size  Location     Type
  9670 ;;  address         2    2[COMRAM] unsigned int 
  9671 ;; Auto vars:     Size  Location     Type
  9672 ;;		None
  9673 ;; Return value:  Size  Location     Type
  9674 ;;                  1    wreg      void 
  9675 ;; Registers used:
  9676 ;;		wreg, status,2, cstack
  9677 ;; Tracked objects:
  9678 ;;		On entry : F/1
  9679 ;;		On exit  : 0/0
  9680 ;;		Unchanged: 0/0
  9681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9682 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9685 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9686 ;;Total ram usage:        2 bytes
  9687 ;; Hardware stack levels used:    1
  9688 ;; Hardware stack levels required when called:    4
  9689 ;; This function calls:
  9690 ;;		_SPI_ExchangeByte
  9691 ;; This function is called by:
  9692 ;;		_ETH_NextPacketUpdate
  9693 ;; This function uses a non-reentrant model
  9694 ;;
  9695                           
  9696                           	psect	text45
  9697  0086FA                     __ptext45:
  9698                           	opt stack 0
  9699  0086FA                     _ETH_SetRXptr:
  9700                           	opt stack 23
  9701                           
  9702                           ; BSR set to: 1
  9703                           
  9704                           ; BSR set to: 2
  9705                           ;incstack = 0
  9706                           ;encX24j600_spi.c: 459: do{LATB3 = 0;} while(0);
  9707  0086FA  968A               	bcf	3978,3,c	;volatile
  9708                           
  9709                           ; BSR set to: 1
  9710                           ;encX24j600_spi.c: 460: SPI_ExchangeByte(wrxrdpt_inst);
  9711  0086FC  0E64               	movlw	100
  9712  0086FE  ECD2  F043         	call	_SPI_ExchangeByte
  9713                           
  9714                           ;encX24j600_spi.c: 461: SPI_ExchangeByte(((uint8_t*) &address)[0]);
  9715  008702  5003               	movf	ETH_SetRXptr@address,w,c
  9716  008704  ECD2  F043         	call	_SPI_ExchangeByte
  9717                           
  9718                           ;encX24j600_spi.c: 462: SPI_ExchangeByte(((uint8_t*) &address)[1]);
  9719  008708  5004               	movf	ETH_SetRXptr@address+1,w,c
  9720  00870A  ECD2  F043         	call	_SPI_ExchangeByte
  9721  00870E  868A               	bsf	3978,3,c	;volatile
  9722  008710  0012               	return		;funcret
  9723  008712                     __end_of_ETH_SetRXptr:
  9724                           	opt stack 0
  9725                           tosu	equ	0xFFF
  9726                           tosh	equ	0xFFE
  9727                           tosl	equ	0xFFD
  9728                           pclath	equ	0xFFA
  9729                           tblptru	equ	0xFF8
  9730                           tblptrh	equ	0xFF7
  9731                           tblptrl	equ	0xFF6
  9732                           tablat	equ	0xFF5
  9733                           prodh	equ	0xFF4
  9734                           prodl	equ	0xFF3
  9735                           intcon	equ	0xFF2
  9736                           intcon2	equ	0xFF1
  9737                           indf0	equ	0xFEF
  9738                           postinc0	equ	0xFEE
  9739                           fsr0h	equ	0xFEA
  9740                           fsr0l	equ	0xFE9
  9741                           wreg	equ	0xFE8
  9742                           postinc1	equ	0xFE6
  9743                           fsr1h	equ	0xFE2
  9744                           fsr1l	equ	0xFE1
  9745                           indf2	equ	0xFDF
  9746                           postinc2	equ	0xFDE
  9747                           postdec2	equ	0xFDD
  9748                           fsr2h	equ	0xFDA
  9749                           fsr2l	equ	0xFD9
  9750                           status	equ	0xFD8
  9751                           
  9752 ;; *************** function _ETH_Flush *****************
  9753 ;; Defined at:
  9754 ;;		line 341 in file "../../TCPIP Library/ethernet_drivers/encX24J600_driver.c"
  9755 ;; Parameters:    Size  Location     Type
  9756 ;;		None
  9757 ;; Auto vars:     Size  Location     Type
  9758 ;;  newRXTail       2    8[COMRAM] unsigned int 
  9759 ;; Return value:  Size  Location     Type
  9760 ;;                  1    wreg      void 
  9761 ;; Registers used:
  9762 ;;		wreg, status,2, status,0, cstack
  9763 ;; Tracked objects:
  9764 ;;		On entry : 0/1
  9765 ;;		On exit  : 0/0
  9766 ;;		Unchanged: 0/0
  9767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9769 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9771 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9772 ;;Total ram usage:        2 bytes
  9773 ;; Hardware stack levels used:    1
  9774 ;; Hardware stack levels required when called:    6
  9775 ;; This function calls:
  9776 ;;		_ENCx24_Write
  9777 ;;		_ETH_SetPktDec
  9778 ;; This function is called by:
  9779 ;;		_Network_Read
  9780 ;; This function uses a non-reentrant model
  9781 ;;
  9782                           
  9783                           	psect	text46
  9784  0082DA                     __ptext46:
  9785                           	opt stack 0
  9786  0082DA                     _ETH_Flush:
  9787                           	opt stack 22
  9788                           
  9789                           ;encX24J600_driver.c: 343: uint16_t newRXTail = nextPacketPointer - 2;
  9790                           
  9791                           ;incstack = 0
  9792  0082DA  0EFE               	movlw	254
  9793  0082DC  0101               	movlb	1	; () banked
  9794  0082DE  259E               	addwf	_nextPacketPointer& (0+255),w,b
  9795  0082E0  6E09               	movwf	ETH_Flush@newRXTail,c
  9796  0082E2  0EFF               	movlw	255
  9797  0082E4  219F               	addwfc	(_nextPacketPointer+1)& (0+255),w,b
  9798  0082E6  6E0A               	movwf	ETH_Flush@newRXTail+1,c
  9799                           
  9800                           ;encX24J600_driver.c: 346: if (nextPacketPointer == 0x1600ul)
  9801  0082E8  0E16               	movlw	22
  9802  0082EA  199F               	xorwf	(_nextPacketPointer+1)& (0+255),w,b
  9803  0082EC  119E               	iorwf	_nextPacketPointer& (0+255),w,b
  9804  0082EE  E104               	bnz	l9285
  9805                           
  9806                           ; BSR set to: 1
  9807                           ;encX24J600_driver.c: 347: newRXTail = 0x6000ul - 2;
  9808  0082F0  0E5F               	movlw	95
  9809  0082F2  6E0A               	movwf	ETH_Flush@newRXTail+1,c
  9810  0082F4  0EFE               	movlw	254
  9811  0082F6  6E09               	movwf	ETH_Flush@newRXTail,c
  9812  0082F8                     l9285:
  9813                           
  9814                           ; BSR set to: 1
  9815                           ;encX24J600_driver.c: 350: ETH_SetPktDec();
  9816  0082F8  ECDF  F043         	call	_ETH_SetPktDec	;wreg free
  9817                           
  9818                           ;encX24J600_driver.c: 351: ethData.pktReady = 0;
  9819  0082FC  0101               	movlb	1	; () banked
  9820  0082FE  9383               	bcf	_ethData& (0+255),1,b	;volatile
  9821                           
  9822                           ; BSR set to: 1
  9823                           ;encX24J600_driver.c: 354: ENCx24_Write(XJ600_ERXTAILL, newRXTail);
  9824  008300  C009  F005         	movff	ETH_Flush@newRXTail,ENCx24_Write@data
  9825  008304  C00A  F006         	movff	ETH_Flush@newRXTail+1,ENCx24_Write@data+1
  9826  008308  0E06               	movlw	6
  9827  00830A  EF94  F040         	goto	_ENCx24_Write
  9828  00830E                     __end_of_ETH_Flush:
  9829                           	opt stack 0
  9830                           tosu	equ	0xFFF
  9831                           tosh	equ	0xFFE
  9832                           tosl	equ	0xFFD
  9833                           pclath	equ	0xFFA
  9834                           tblptru	equ	0xFF8
  9835                           tblptrh	equ	0xFF7
  9836                           tblptrl	equ	0xFF6
  9837                           tablat	equ	0xFF5
  9838                           prodh	equ	0xFF4
  9839                           prodl	equ	0xFF3
  9840                           intcon	equ	0xFF2
  9841                           intcon2	equ	0xFF1
  9842                           indf0	equ	0xFEF
  9843                           postinc0	equ	0xFEE
  9844                           fsr0h	equ	0xFEA
  9845                           fsr0l	equ	0xFE9
  9846                           wreg	equ	0xFE8
  9847                           postinc1	equ	0xFE6
  9848                           fsr1h	equ	0xFE2
  9849                           fsr1l	equ	0xFE1
  9850                           indf2	equ	0xFDF
  9851                           postinc2	equ	0xFDE
  9852                           postdec2	equ	0xFDD
  9853                           fsr2h	equ	0xFDA
  9854                           fsr2l	equ	0xFD9
  9855                           status	equ	0xFD8
  9856                           
  9857 ;; *************** function _ETH_SetPktDec *****************
  9858 ;; Defined at:
  9859 ;;		line 445 in file "../../TCPIP Library/ethernet_drivers/encX24j600_spi.c"
  9860 ;; Parameters:    Size  Location     Type
  9861 ;;		None
  9862 ;; Auto vars:     Size  Location     Type
  9863 ;;		None
  9864 ;; Return value:  Size  Location     Type
  9865 ;;                  1    wreg      void 
  9866 ;; Registers used:
  9867 ;;		wreg, status,2, cstack
  9868 ;; Tracked objects:
  9869 ;;		On entry : F/1
  9870 ;;		On exit  : 0/0
  9871 ;;		Unchanged: 0/0
  9872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9877 ;;Total ram usage:        0 bytes
  9878 ;; Hardware stack levels used:    1
  9879 ;; Hardware stack levels required when called:    4
  9880 ;; This function calls:
  9881 ;;		_SPI_ExchangeByte
  9882 ;; This function is called by:
  9883 ;;		_ETH_Flush
  9884 ;; This function uses a non-reentrant model
  9885 ;;
  9886                           
  9887                           	psect	text47
  9888  0087BE                     __ptext47:
  9889                           	opt stack 0
  9890  0087BE                     _ETH_SetPktDec:
  9891                           	opt stack 23
  9892                           
  9893                           ; BSR set to: 1
  9894                           
  9895                           ;incstack = 0
  9896                           ;encX24j600_spi.c: 448: do{LATB3 = 0;} while(0);
  9897  0087BE  968A               	bcf	3978,3,c	;volatile
  9898                           
  9899                           ; BSR set to: 1
  9900                           ;encX24j600_spi.c: 449: SPI_ExchangeByte(setpktdec_inst);
  9901  0087C0  0ECC               	movlw	204
  9902  0087C2  ECD2  F043         	call	_SPI_ExchangeByte
  9903  0087C6  868A               	bsf	3978,3,c	;volatile
  9904  0087C8  0012               	return		;funcret
  9905  0087CA                     __end_of_ETH_SetPktDec:
  9906                           	opt stack 0
  9907                           tosu	equ	0xFFF
  9908                           tosh	equ	0xFFE
  9909                           tosl	equ	0xFFD
  9910                           pclath	equ	0xFFA
  9911                           tblptru	equ	0xFF8
  9912                           tblptrh	equ	0xFF7
  9913                           tblptrl	equ	0xFF6
  9914                           tablat	equ	0xFF5
  9915                           prodh	equ	0xFF4
  9916                           prodl	equ	0xFF3
  9917                           intcon	equ	0xFF2
  9918                           intcon2	equ	0xFF1
  9919                           indf0	equ	0xFEF
  9920                           postinc0	equ	0xFEE
  9921                           fsr0h	equ	0xFEA
  9922                           fsr0l	equ	0xFE9
  9923                           wreg	equ	0xFE8
  9924                           postinc1	equ	0xFE6
  9925                           fsr1h	equ	0xFE2
  9926                           fsr1l	equ	0xFE1
  9927                           indf2	equ	0xFDF
  9928                           postinc2	equ	0xFDE
  9929                           postdec2	equ	0xFDD
  9930                           fsr2h	equ	0xFDA
  9931                           fsr2l	equ	0xFD9
  9932                           status	equ	0xFD8
  9933                           
  9934 ;; *************** function _ARPV4_Packet *****************
  9935 ;; Defined at:
  9936 ;;		line 97 in file "../../TCPIP Library/source/arpv4.c"
  9937 ;; Parameters:    Size  Location     Type
  9938 ;;		None
  9939 ;; Auto vars:     Size  Location     Type
  9940 ;;  x               1   53[COMRAM] unsigned char 
  9941 ;;  arpPtr          2   50[COMRAM] PTR struct .
  9942 ;;		 -> arpMap(104), 
  9943 ;;  x               1   52[COMRAM] unsigned char 
  9944 ;;  header         28   56[COMRAM] struct .
  9945 ;;  entryPointer    2   54[COMRAM] PTR struct .
  9946 ;;		 -> arpMap(104), 
  9947 ;;  length          2   46[COMRAM] unsigned int 
  9948 ;;  ret             1   49[COMRAM] enum E450
  9949 ;;  mergeFlag       1   48[COMRAM] unsigned char 
  9950 ;; Return value:  Size  Location     Type
  9951 ;;                  1    wreg      enum E450
  9952 ;; Registers used:
  9953 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9954 ;; Tracked objects:
  9955 ;;		On entry : 0/1
  9956 ;;		On exit  : 0/0
  9957 ;;		Unchanged: 0/0
  9958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9960 ;;      Locals:        38       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9961 ;;      Temps:         32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9962 ;;      Totals:        70       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9963 ;;Total ram usage:       70 bytes
  9964 ;; Hardware stack levels used:    1
  9965 ;; Hardware stack levels required when called:    7
  9966 ;; This function calls:
  9967 ;;		_ETH_GetMAC
  9968 ;;		_ETH_ReadBlock
  9969 ;;		_ETH_Send
  9970 ;;		_ETH_WriteBlock
  9971 ;;		_ETH_WriteStart
  9972 ;; This function is called by:
  9973 ;;		_Network_Read
  9974 ;; This function uses a non-reentrant model
  9975 ;;
  9976                           
  9977                           	psect	text48
  9978  004B8C                     __ptext48:
  9979                           	opt stack 0
  9980  004B8C                     _ARPV4_Packet:
  9981                           	opt stack 21
  9982                           
  9983                           ;arpv4.c: 107: length = ETH_ReadBlock((char*)&header,sizeof(arpHeader_t));
  9984                           
  9985                           ;incstack = 0
  9986  004B8C  0E39               	movlw	low ARPV4_Packet@header
  9987  004B8E  6E03               	movwf	ETH_ReadBlock@data,c
  9988  004B90  6A04               	clrf	ETH_ReadBlock@data+1,c
  9989  004B92  6A06               	clrf	ETH_ReadBlock@length+1,c
  9990  004B94  0E1C               	movlw	28
  9991  004B96  6E05               	movwf	ETH_ReadBlock@length,c
  9992  004B98  ECDB  F03A         	call	_ETH_ReadBlock	;wreg free
  9993  004B9C  C003  F02F         	movff	?_ETH_ReadBlock,ARPV4_Packet@length
  9994  004BA0  C004  F030         	movff	?_ETH_ReadBlock+1,ARPV4_Packet@length+1
  9995                           
  9996                           ; BSR set to: 1
  9997                           ;arpv4.c: 108: if(length == sizeof(arpHeader_t))
  9998  004BA4  0E1C               	movlw	28
  9999  004BA6  182F               	xorwf	ARPV4_Packet@length,w,c
 10000  004BA8  1030               	iorwf	ARPV4_Packet@length+1,w,c
 10001  004BAA  A4D8               	btfss	status,2,c
 10002  004BAC  0012               	return	
 10003                           
 10004                           ; BSR set to: 1
 10005                           ;arpv4.c: 109: {
 10006                           ;arpv4.c: 111: mergeFlag = 0;
 10007  004BAE  6A31               	clrf	ARPV4_Packet@mergeFlag,c
 10008                           
 10009                           ; BSR set to: 1
 10010                           ;arpv4.c: 112: entryPointer = arpMap;
 10011  004BB0  0E00               	movlw	low _arpMap
 10012  004BB2  6E37               	movwf	ARPV4_Packet@entryPointer,c
 10013  004BB4  0E03               	movlw	high _arpMap
 10014  004BB6  6E38               	movwf	ARPV4_Packet@entryPointer+1,c
 10015                           
 10016                           ; BSR set to: 1
 10017                           ;arpv4.c: 114: for(uint8_t x=8; x > 0; x--)
 10018  004BB8  0E08               	movlw	8
 10019  004BBA  6E35               	movwf	ARPV4_Packet@x,c
 10020  004BBC                     l9307:
 10021                           
 10022                           ; BSR set to: 1
 10023                           ;arpv4.c: 115: {
 10024                           ;arpv4.c: 116: if( (header.spa == entryPointer->ipAddress) && (header.ptype == entryPoin
      +                          ter->protocolType) )
 10025  004BBC  EE20 F006          	lfsr	2,6
 10026  004BC0  5037               	movf	ARPV4_Packet@entryPointer,w,c
 10027  004BC2  26D9               	addwf	fsr2l,f,c
 10028  004BC4  5038               	movf	ARPV4_Packet@entryPointer+1,w,c
 10029  004BC6  22DA               	addwfc	fsr2h,f,c
 10030  004BC8  50DE               	movf	postinc2,w,c
 10031  004BCA  1847               	xorwf	ARPV4_Packet@header+14,w,c
 10032  004BCC  E12A               	bnz	l9317
 10033  004BCE  50DE               	movf	postinc2,w,c
 10034  004BD0  1848               	xorwf	ARPV4_Packet@header+15,w,c
 10035  004BD2  E127               	bnz	l9317
 10036  004BD4  50DE               	movf	postinc2,w,c
 10037  004BD6  1849               	xorwf	ARPV4_Packet@header+16,w,c
 10038  004BD8  E124               	bnz	l9317
 10039  004BDA  50DE               	movf	postinc2,w,c
 10040  004BDC  184A               	xorwf	ARPV4_Packet@header+17,w,c
 10041  004BDE  E121               	bnz	l9317
 10042                           
 10043                           ; BSR set to: 1
 10044  004BE0  EE20 F00A          	lfsr	2,10
 10045  004BE4  5037               	movf	ARPV4_Packet@entryPointer,w,c
 10046  004BE6  26D9               	addwf	fsr2l,f,c
 10047  004BE8  5038               	movf	ARPV4_Packet@entryPointer+1,w,c
 10048  004BEA  22DA               	addwfc	fsr2h,f,c
 10049  004BEC  50DE               	movf	postinc2,w,c
 10050  004BEE  183B               	xorwf	ARPV4_Packet@header+2,w,c
 10051  004BF0  E118               	bnz	l9317
 10052  004BF2  50DE               	movf	postinc2,w,c
 10053  004BF4  183C               	xorwf	ARPV4_Packet@header+3,w,c
 10054  004BF6  E115               	bnz	l9317
 10055                           
 10056                           ; BSR set to: 1
 10057                           ;arpv4.c: 117: {
 10058                           ;arpv4.c: 118: entryPointer->age = 0;
 10059  004BF8  EE20 F00C          	lfsr	2,12
 10060  004BFC  5037               	movf	ARPV4_Packet@entryPointer,w,c
 10061  004BFE  26D9               	addwf	fsr2l,f,c
 10062  004C00  5038               	movf	ARPV4_Packet@entryPointer+1,w,c
 10063  004C02  22DA               	addwfc	fsr2h,f,c
 10064  004C04  6ADF               	clrf	indf2,c
 10065                           
 10066                           ; BSR set to: 1
 10067                           ;arpv4.c: 119: entryPointer->macAddress.s = header.sha.s;
 10068  004C06  EE20  F041         	lfsr	2,ARPV4_Packet@header+8
 10069  004C0A  C037  FFE1         	movff	ARPV4_Packet@entryPointer,fsr1l
 10070  004C0E  C038  FFE2         	movff	ARPV4_Packet@entryPointer+1,fsr1h
 10071  004C12  0E05               	movlw	5
 10072  004C14                     u14271:
 10073  004C14  CFDB FFE3          	movff	plusw2,plusw1
 10074  004C18  06E8               	decf	wreg,f,c
 10075  004C1A  E2FC               	bc	u14271
 10076                           
 10077                           ; BSR set to: 1
 10078                           ;arpv4.c: 120: mergeFlag = 1;
 10079  004C1C  0E01               	movlw	1
 10080  004C1E  6E31               	movwf	ARPV4_Packet@mergeFlag,c
 10081                           
 10082                           ;arpv4.c: 121: break;
 10083  004C20  D007               	goto	l9323
 10084  004C22                     l9317:
 10085                           
 10086                           ; BSR set to: 1
 10087                           ;arpv4.c: 122: }
 10088                           ;arpv4.c: 123: entryPointer++;
 10089  004C22  0E0D               	movlw	13
 10090  004C24  2637               	addwf	ARPV4_Packet@entryPointer,f,c
 10091  004C26  0E00               	movlw	0
 10092  004C28  2238               	addwfc	ARPV4_Packet@entryPointer+1,f,c
 10093                           
 10094                           ; BSR set to: 1
 10095  004C2A  0635               	decf	ARPV4_Packet@x,f,c
 10096                           
 10097                           ; BSR set to: 1
 10098  004C2C  5035               	movf	ARPV4_Packet@x,w,c
 10099  004C2E  E1C6               	bnz	l9307
 10100  004C30                     l9323:
 10101                           
 10102                           ; BSR set to: 1
 10103                           ;arpv4.c: 124: }
 10104                           ;arpv4.c: 126: if(ipv4Address && (ipv4Address == ((((uint32_t)header.tpa&(uint32_t)0xff0
      +                          00000) >> 24) | (((uint32_t)header.tpa&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)header.
      +                          tpa&(uint32_t)0x0000ff00) << 8) | (((uint32_t)header.tpa&(uint32_t)0x000000ff) << 24) ))
      +                          )
 10105  004C30  518E               	movf	_ipv4Address& (0+255),w,b
 10106  004C32  118F               	iorwf	(_ipv4Address+1)& (0+255),w,b
 10107  004C34  1190               	iorwf	(_ipv4Address+2)& (0+255),w,b
 10108  004C36  1191               	iorwf	(_ipv4Address+3)& (0+255),w,b
 10109  004C38  B4D8               	btfsc	status,2,c
 10110  004C3A  0012               	return	
 10111                           
 10112                           ; BSR set to: 1
 10113  004C3C  5051               	movf	ARPV4_Packet@header+24,w,c
 10114  004C3E  6E0F               	movwf	??_ARPV4_Packet& (0+255),c
 10115  004C40  6A10               	clrf	(??_ARPV4_Packet+1)& (0+255),c
 10116  004C42  6A11               	clrf	(??_ARPV4_Packet+2)& (0+255),c
 10117  004C44  6A12               	clrf	(??_ARPV4_Packet+3)& (0+255),c
 10118  004C46  C00F  F012         	movff	??_ARPV4_Packet,??_ARPV4_Packet+3
 10119  004C4A  6A11               	clrf	??_ARPV4_Packet+2,c
 10120  004C4C  6A10               	clrf	??_ARPV4_Packet+1,c
 10121  004C4E  6A0F               	clrf	??_ARPV4_Packet,c
 10122  004C50  EE20  F051         	lfsr	2,ARPV4_Packet@header+24
 10123  004C54  0E00               	movlw	0
 10124  004C56  14DE               	andwf	postinc2,w,c
 10125  004C58  6E13               	movwf	(??_ARPV4_Packet+4)& (0+255),c
 10126  004C5A  0EFF               	movlw	255
 10127  004C5C  14DE               	andwf	postinc2,w,c
 10128  004C5E  6E14               	movwf	(??_ARPV4_Packet+5)& (0+255),c
 10129  004C60  0E00               	movlw	0
 10130  004C62  14DE               	andwf	postinc2,w,c
 10131  004C64  6E15               	movwf	(??_ARPV4_Packet+6)& (0+255),c
 10132  004C66  0E00               	movlw	0
 10133  004C68  14DE               	andwf	postinc2,w,c
 10134  004C6A  6E16               	movwf	(??_ARPV4_Packet+7)& (0+255),c
 10135  004C6C  C015  F016         	movff	??_ARPV4_Packet+6,??_ARPV4_Packet+7
 10136  004C70  C014  F015         	movff	??_ARPV4_Packet+5,??_ARPV4_Packet+6
 10137  004C74  C013  F014         	movff	??_ARPV4_Packet+4,??_ARPV4_Packet+5
 10138  004C78  6A13               	clrf	??_ARPV4_Packet+4,c
 10139  004C7A  C051  F017         	movff	ARPV4_Packet@header+24,??_ARPV4_Packet+8
 10140  004C7E  C052  F018         	movff	ARPV4_Packet@header+25,??_ARPV4_Packet+9
 10141  004C82  C053  F019         	movff	ARPV4_Packet@header+26,??_ARPV4_Packet+10
 10142  004C86  C054  F01A         	movff	ARPV4_Packet@header+27,??_ARPV4_Packet+11
 10143  004C8A  C018  F017         	movff	??_ARPV4_Packet+9,??_ARPV4_Packet+8
 10144  004C8E  C019  F018         	movff	??_ARPV4_Packet+10,??_ARPV4_Packet+9
 10145  004C92  C01A  F019         	movff	??_ARPV4_Packet+11,??_ARPV4_Packet+10
 10146  004C96  6A1A               	clrf	??_ARPV4_Packet+11,c
 10147  004C98  6A1B               	clrf	(??_ARPV4_Packet+12)& (0+255),c
 10148  004C9A  5018               	movf	??_ARPV4_Packet+9,w,c
 10149  004C9C  6E1C               	movwf	(??_ARPV4_Packet+13)& (0+255),c
 10150  004C9E  0E00               	movlw	0
 10151  004CA0  6A1D               	clrf	(??_ARPV4_Packet+14)& (0+255),c
 10152  004CA2  6A1E               	clrf	(??_ARPV4_Packet+15)& (0+255),c
 10153  004CA4  EE20  F051         	lfsr	2,ARPV4_Packet@header+24
 10154  004CA8  14DE               	andwf	postinc2,w,c
 10155  004CAA  6E1F               	movwf	(??_ARPV4_Packet+16)& (0+255),c
 10156  004CAC  0E00               	movlw	0
 10157  004CAE  14DE               	andwf	postinc2,w,c
 10158  004CB0  6E20               	movwf	(??_ARPV4_Packet+17)& (0+255),c
 10159  004CB2  0E00               	movlw	0
 10160  004CB4  14DE               	andwf	postinc2,w,c
 10161  004CB6  6E21               	movwf	(??_ARPV4_Packet+18)& (0+255),c
 10162  004CB8  0EFF               	movlw	255
 10163  004CBA  14DE               	andwf	postinc2,w,c
 10164  004CBC  6E22               	movwf	(??_ARPV4_Packet+19)& (0+255),c
 10165  004CBE  0E19               	movlw	25
 10166  004CC0  D005               	goto	u14300
 10167  004CC2                     u14305:
 10168  004CC2  90D8               	bcf	status,0,c
 10169  004CC4  3222               	rrcf	??_ARPV4_Packet+19,f,c
 10170  004CC6  3221               	rrcf	??_ARPV4_Packet+18,f,c
 10171  004CC8  3220               	rrcf	??_ARPV4_Packet+17,f,c
 10172  004CCA  321F               	rrcf	??_ARPV4_Packet+16,f,c
 10173  004CCC                     u14300:
 10174  004CCC  2EE8               	decfsz	wreg,f,c
 10175  004CCE  D7F9               	goto	u14305
 10176  004CD0  501B               	movf	??_ARPV4_Packet+12,w,c
 10177  004CD2  101F               	iorwf	??_ARPV4_Packet+16,w,c
 10178  004CD4  6E23               	movwf	(??_ARPV4_Packet+20)& (0+255),c
 10179  004CD6  501C               	movf	??_ARPV4_Packet+13,w,c
 10180  004CD8  1020               	iorwf	??_ARPV4_Packet+17,w,c
 10181  004CDA  6E24               	movwf	(??_ARPV4_Packet+21)& (0+255),c
 10182  004CDC  501D               	movf	??_ARPV4_Packet+14,w,c
 10183  004CDE  1021               	iorwf	??_ARPV4_Packet+18,w,c
 10184  004CE0  6E25               	movwf	(??_ARPV4_Packet+22)& (0+255),c
 10185  004CE2  501E               	movf	??_ARPV4_Packet+15,w,c
 10186  004CE4  1022               	iorwf	??_ARPV4_Packet+19,w,c
 10187  004CE6  6E26               	movwf	(??_ARPV4_Packet+23)& (0+255),c
 10188  004CE8  5013               	movf	??_ARPV4_Packet+4,w,c
 10189  004CEA  1023               	iorwf	??_ARPV4_Packet+20,w,c
 10190  004CEC  6E27               	movwf	(??_ARPV4_Packet+24)& (0+255),c
 10191  004CEE  5014               	movf	??_ARPV4_Packet+5,w,c
 10192  004CF0  1024               	iorwf	??_ARPV4_Packet+21,w,c
 10193  004CF2  6E28               	movwf	(??_ARPV4_Packet+25)& (0+255),c
 10194  004CF4  5015               	movf	??_ARPV4_Packet+6,w,c
 10195  004CF6  1025               	iorwf	??_ARPV4_Packet+22,w,c
 10196  004CF8  6E29               	movwf	(??_ARPV4_Packet+26)& (0+255),c
 10197  004CFA  5016               	movf	??_ARPV4_Packet+7,w,c
 10198  004CFC  1026               	iorwf	??_ARPV4_Packet+23,w,c
 10199  004CFE  6E2A               	movwf	(??_ARPV4_Packet+27)& (0+255),c
 10200  004D00  500F               	movf	??_ARPV4_Packet,w,c
 10201  004D02  1027               	iorwf	??_ARPV4_Packet+24,w,c
 10202  004D04  6E2B               	movwf	(??_ARPV4_Packet+28)& (0+255),c
 10203  004D06  5010               	movf	??_ARPV4_Packet+1,w,c
 10204  004D08  1028               	iorwf	??_ARPV4_Packet+25,w,c
 10205  004D0A  6E2C               	movwf	(??_ARPV4_Packet+29)& (0+255),c
 10206  004D0C  5011               	movf	??_ARPV4_Packet+2,w,c
 10207  004D0E  1029               	iorwf	??_ARPV4_Packet+26,w,c
 10208  004D10  6E2D               	movwf	(??_ARPV4_Packet+30)& (0+255),c
 10209  004D12  5012               	movf	??_ARPV4_Packet+3,w,c
 10210  004D14  102A               	iorwf	??_ARPV4_Packet+27,w,c
 10211  004D16  6E2E               	movwf	(??_ARPV4_Packet+31)& (0+255),c
 10212  004D18  518E               	movf	_ipv4Address& (0+255),w,b
 10213  004D1A  182B               	xorwf	??_ARPV4_Packet+28,w,c
 10214  004D1C  E109               	bnz	u14311
 10215  004D1E  518F               	movf	(_ipv4Address+1)& (0+255),w,b
 10216  004D20  182C               	xorwf	??_ARPV4_Packet+29,w,c
 10217  004D22  E106               	bnz	u14311
 10218  004D24  5190               	movf	(_ipv4Address+2)& (0+255),w,b
 10219  004D26  182D               	xorwf	??_ARPV4_Packet+30,w,c
 10220  004D28  E103               	bnz	u14311
 10221  004D2A  5191               	movf	(_ipv4Address+3)& (0+255),w,b
 10222  004D2C  182E               	xorwf	??_ARPV4_Packet+31,w,c
 10223  004D2E  A4D8               	btfss	status,2,c
 10224  004D30                     u14311:
 10225  004D30  0012               	return	
 10226                           
 10227                           ; BSR set to: 1
 10228                           ;arpv4.c: 127: {
 10229                           ;arpv4.c: 128: if(!mergeFlag)
 10230  004D32  5031               	movf	ARPV4_Packet@mergeFlag,w,c
 10231  004D34  E001 D0BC          	bnz	l9353
 10232                           
 10233                           ; BSR set to: 1
 10234                           ;arpv4.c: 129: {
 10235                           ;arpv4.c: 131: entryPointer = arpMap;
 10236  004D38  0E00               	movlw	low _arpMap
 10237  004D3A  6E37               	movwf	ARPV4_Packet@entryPointer,c
 10238  004D3C  0E03               	movlw	high _arpMap
 10239  004D3E  6E38               	movwf	ARPV4_Packet@entryPointer+1,c
 10240                           
 10241                           ;arpv4.c: 132: arpMap_t *arpPtr = arpMap;
 10242  004D40  0E00               	movlw	low _arpMap
 10243  004D42  6E33               	movwf	ARPV4_Packet@arpPtr,c
 10244  004D44  0E03               	movlw	high _arpMap
 10245  004D46  6E34               	movwf	ARPV4_Packet@arpPtr+1,c
 10246                           
 10247                           ; BSR set to: 1
 10248                           ;arpv4.c: 133: for(uint8_t x=8; x !=0; x--)
 10249  004D48  0E08               	movlw	8
 10250  004D4A  6E36               	movwf	ARPV4_Packet@x_2039,c
 10251  004D4C                     l9337:
 10252                           
 10253                           ; BSR set to: 1
 10254                           ;arpv4.c: 134: {
 10255                           ;arpv4.c: 135: if(entryPointer->age < arpPtr->age)
 10256  004D4C  EE20 F00C          	lfsr	2,12
 10257  004D50  5033               	movf	ARPV4_Packet@arpPtr,w,c
 10258  004D52  26D9               	addwf	fsr2l,f,c
 10259  004D54  5034               	movf	ARPV4_Packet@arpPtr+1,w,c
 10260  004D56  22DA               	addwfc	fsr2h,f,c
 10261  004D58  EE10 F00C          	lfsr	1,12
 10262  004D5C  5037               	movf	ARPV4_Packet@entryPointer,w,c
 10263  004D5E  26E1               	addwf	fsr1l,f,c
 10264  004D60  5038               	movf	ARPV4_Packet@entryPointer+1,w,c
 10265  004D62  22E2               	addwfc	fsr1h,f,c
 10266  004D64  50DE               	movf	postinc2,w,c
 10267  004D66  5CE6               	subwf	postinc1,w,c
 10268  004D68  E204               	bc	l779
 10269                           
 10270                           ; BSR set to: 1
 10271                           ;arpv4.c: 136: {
 10272                           ;arpv4.c: 137: entryPointer = arpPtr;
 10273  004D6A  C033  F037         	movff	ARPV4_Packet@arpPtr,ARPV4_Packet@entryPointer
 10274  004D6E  C034  F038         	movff	ARPV4_Packet@arpPtr+1,ARPV4_Packet@entryPointer+1
 10275  004D72                     l779:
 10276                           
 10277                           ; BSR set to: 1
 10278                           ;arpv4.c: 138: }
 10279                           ;arpv4.c: 140: arpPtr++;
 10280  004D72  0E0D               	movlw	13
 10281  004D74  2633               	addwf	ARPV4_Packet@arpPtr,f,c
 10282  004D76  0E00               	movlw	0
 10283  004D78  2234               	addwfc	ARPV4_Packet@arpPtr+1,f,c
 10284                           
 10285                           ; BSR set to: 1
 10286  004D7A  0636               	decf	ARPV4_Packet@x_2039,f,c
 10287                           
 10288                           ; BSR set to: 1
 10289  004D7C  5036               	movf	ARPV4_Packet@x_2039,w,c
 10290  004D7E  E1E6               	bnz	l9337
 10291                           
 10292                           ; BSR set to: 1
 10293                           ;arpv4.c: 141: }
 10294                           ;arpv4.c: 144: entryPointer->age = 0;
 10295  004D80  EE20 F00C          	lfsr	2,12
 10296  004D84  5037               	movf	ARPV4_Packet@entryPointer,w,c
 10297  004D86  26D9               	addwf	fsr2l,f,c
 10298  004D88  5038               	movf	ARPV4_Packet@entryPointer+1,w,c
 10299  004D8A  22DA               	addwfc	fsr2h,f,c
 10300  004D8C  6ADF               	clrf	indf2,c
 10301                           
 10302                           ; BSR set to: 1
 10303                           ;arpv4.c: 145: entryPointer->macAddress.s = header.sha.s;
 10304  004D8E  EE20  F041         	lfsr	2,ARPV4_Packet@header+8
 10305  004D92  C037  FFE1         	movff	ARPV4_Packet@entryPointer,fsr1l
 10306  004D96  C038  FFE2         	movff	ARPV4_Packet@entryPointer+1,fsr1h
 10307  004D9A  0E05               	movlw	5
 10308  004D9C                     u14351:
 10309  004D9C  CFDB FFE3          	movff	plusw2,plusw1
 10310  004DA0  06E8               	decf	wreg,f,c
 10311  004DA2  E2FC               	bc	u14351
 10312                           
 10313                           ; BSR set to: 1
 10314                           ;arpv4.c: 146: entryPointer->ipAddress = ((((uint32_t)header.spa&(uint32_t)0xff000000) >
      +                          > 24) | (((uint32_t)header.spa&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)header.spa&(uin
      +                          t32_t)0x0000ff00) << 8) | (((uint32_t)header.spa&(uint32_t)0x000000ff) << 24) );
 10315  004DA4  5047               	movf	ARPV4_Packet@header+14,w,c
 10316  004DA6  6E0F               	movwf	??_ARPV4_Packet& (0+255),c
 10317  004DA8  6A10               	clrf	(??_ARPV4_Packet+1)& (0+255),c
 10318  004DAA  6A11               	clrf	(??_ARPV4_Packet+2)& (0+255),c
 10319  004DAC  6A12               	clrf	(??_ARPV4_Packet+3)& (0+255),c
 10320  004DAE  C00F  F012         	movff	??_ARPV4_Packet,??_ARPV4_Packet+3
 10321  004DB2  6A11               	clrf	??_ARPV4_Packet+2,c
 10322  004DB4  6A10               	clrf	??_ARPV4_Packet+1,c
 10323  004DB6  6A0F               	clrf	??_ARPV4_Packet,c
 10324  004DB8  EE20  F047         	lfsr	2,ARPV4_Packet@header+14
 10325  004DBC  0E00               	movlw	0
 10326  004DBE  14DE               	andwf	postinc2,w,c
 10327  004DC0  6E13               	movwf	(??_ARPV4_Packet+4)& (0+255),c
 10328  004DC2  0EFF               	movlw	255
 10329  004DC4  14DE               	andwf	postinc2,w,c
 10330  004DC6  6E14               	movwf	(??_ARPV4_Packet+5)& (0+255),c
 10331  004DC8  0E00               	movlw	0
 10332  004DCA  14DE               	andwf	postinc2,w,c
 10333  004DCC  6E15               	movwf	(??_ARPV4_Packet+6)& (0+255),c
 10334  004DCE  0E00               	movlw	0
 10335  004DD0  14DE               	andwf	postinc2,w,c
 10336  004DD2  6E16               	movwf	(??_ARPV4_Packet+7)& (0+255),c
 10337  004DD4  C015  F016         	movff	??_ARPV4_Packet+6,??_ARPV4_Packet+7
 10338  004DD8  C014  F015         	movff	??_ARPV4_Packet+5,??_ARPV4_Packet+6
 10339  004DDC  C013  F014         	movff	??_ARPV4_Packet+4,??_ARPV4_Packet+5
 10340  004DE0  6A13               	clrf	??_ARPV4_Packet+4,c
 10341  004DE2  C047  F017         	movff	ARPV4_Packet@header+14,??_ARPV4_Packet+8
 10342  004DE6  C048  F018         	movff	ARPV4_Packet@header+15,??_ARPV4_Packet+9
 10343  004DEA  C049  F019         	movff	ARPV4_Packet@header+16,??_ARPV4_Packet+10
 10344  004DEE  C04A  F01A         	movff	ARPV4_Packet@header+17,??_ARPV4_Packet+11
 10345  004DF2  C018  F017         	movff	??_ARPV4_Packet+9,??_ARPV4_Packet+8
 10346  004DF6  C019  F018         	movff	??_ARPV4_Packet+10,??_ARPV4_Packet+9
 10347  004DFA  C01A  F019         	movff	??_ARPV4_Packet+11,??_ARPV4_Packet+10
 10348  004DFE  6A1A               	clrf	??_ARPV4_Packet+11,c
 10349  004E00  6A1B               	clrf	(??_ARPV4_Packet+12)& (0+255),c
 10350  004E02  5018               	movf	??_ARPV4_Packet+9,w,c
 10351  004E04  6E1C               	movwf	(??_ARPV4_Packet+13)& (0+255),c
 10352  004E06  0E00               	movlw	0
 10353  004E08  6A1D               	clrf	(??_ARPV4_Packet+14)& (0+255),c
 10354  004E0A  6A1E               	clrf	(??_ARPV4_Packet+15)& (0+255),c
 10355  004E0C  EE20  F047         	lfsr	2,ARPV4_Packet@header+14
 10356  004E10  14DE               	andwf	postinc2,w,c
 10357  004E12  6E1F               	movwf	(??_ARPV4_Packet+16)& (0+255),c
 10358  004E14  0E00               	movlw	0
 10359  004E16  14DE               	andwf	postinc2,w,c
 10360  004E18  6E20               	movwf	(??_ARPV4_Packet+17)& (0+255),c
 10361  004E1A  0E00               	movlw	0
 10362  004E1C  14DE               	andwf	postinc2,w,c
 10363  004E1E  6E21               	movwf	(??_ARPV4_Packet+18)& (0+255),c
 10364  004E20  0EFF               	movlw	255
 10365  004E22  14DE               	andwf	postinc2,w,c
 10366  004E24  6E22               	movwf	(??_ARPV4_Packet+19)& (0+255),c
 10367  004E26  0E19               	movlw	25
 10368  004E28  D005               	goto	u14360
 10369  004E2A                     u14365:
 10370  004E2A  90D8               	bcf	status,0,c
 10371  004E2C  3222               	rrcf	??_ARPV4_Packet+19,f,c
 10372  004E2E  3221               	rrcf	??_ARPV4_Packet+18,f,c
 10373  004E30  3220               	rrcf	??_ARPV4_Packet+17,f,c
 10374  004E32  321F               	rrcf	??_ARPV4_Packet+16,f,c
 10375  004E34                     u14360:
 10376  004E34  2EE8               	decfsz	wreg,f,c
 10377  004E36  D7F9               	goto	u14365
 10378  004E38  501B               	movf	??_ARPV4_Packet+12,w,c
 10379  004E3A  101F               	iorwf	??_ARPV4_Packet+16,w,c
 10380  004E3C  6E23               	movwf	(??_ARPV4_Packet+20)& (0+255),c
 10381  004E3E  501C               	movf	??_ARPV4_Packet+13,w,c
 10382  004E40  1020               	iorwf	??_ARPV4_Packet+17,w,c
 10383  004E42  6E24               	movwf	(??_ARPV4_Packet+21)& (0+255),c
 10384  004E44  501D               	movf	??_ARPV4_Packet+14,w,c
 10385  004E46  1021               	iorwf	??_ARPV4_Packet+18,w,c
 10386  004E48  6E25               	movwf	(??_ARPV4_Packet+22)& (0+255),c
 10387  004E4A  501E               	movf	??_ARPV4_Packet+15,w,c
 10388  004E4C  1022               	iorwf	??_ARPV4_Packet+19,w,c
 10389  004E4E  6E26               	movwf	(??_ARPV4_Packet+23)& (0+255),c
 10390  004E50  5013               	movf	??_ARPV4_Packet+4,w,c
 10391  004E52  1023               	iorwf	??_ARPV4_Packet+20,w,c
 10392  004E54  6E27               	movwf	(??_ARPV4_Packet+24)& (0+255),c
 10393  004E56  5014               	movf	??_ARPV4_Packet+5,w,c
 10394  004E58  1024               	iorwf	??_ARPV4_Packet+21,w,c
 10395  004E5A  6E28               	movwf	(??_ARPV4_Packet+25)& (0+255),c
 10396  004E5C  5015               	movf	??_ARPV4_Packet+6,w,c
 10397  004E5E  1025               	iorwf	??_ARPV4_Packet+22,w,c
 10398  004E60  6E29               	movwf	(??_ARPV4_Packet+26)& (0+255),c
 10399  004E62  5016               	movf	??_ARPV4_Packet+7,w,c
 10400  004E64  1026               	iorwf	??_ARPV4_Packet+23,w,c
 10401  004E66  6E2A               	movwf	(??_ARPV4_Packet+27)& (0+255),c
 10402  004E68  500F               	movf	??_ARPV4_Packet,w,c
 10403  004E6A  1027               	iorwf	??_ARPV4_Packet+24,w,c
 10404  004E6C  6E2B               	movwf	(??_ARPV4_Packet+28)& (0+255),c
 10405  004E6E  5010               	movf	??_ARPV4_Packet+1,w,c
 10406  004E70  1028               	iorwf	??_ARPV4_Packet+25,w,c
 10407  004E72  6E2C               	movwf	(??_ARPV4_Packet+29)& (0+255),c
 10408  004E74  5011               	movf	??_ARPV4_Packet+2,w,c
 10409  004E76  1029               	iorwf	??_ARPV4_Packet+26,w,c
 10410  004E78  6E2D               	movwf	(??_ARPV4_Packet+30)& (0+255),c
 10411  004E7A  5012               	movf	??_ARPV4_Packet+3,w,c
 10412  004E7C  102A               	iorwf	??_ARPV4_Packet+27,w,c
 10413  004E7E  6E2E               	movwf	(??_ARPV4_Packet+31)& (0+255),c
 10414  004E80  EE20 F006          	lfsr	2,6
 10415  004E84  5037               	movf	ARPV4_Packet@entryPointer,w,c
 10416  004E86  26D9               	addwf	fsr2l,f,c
 10417  004E88  5038               	movf	ARPV4_Packet@entryPointer+1,w,c
 10418  004E8A  22DA               	addwfc	fsr2h,f,c
 10419  004E8C  C02B  FFDE         	movff	??_ARPV4_Packet+28,postinc2
 10420  004E90  C02C  FFDE         	movff	??_ARPV4_Packet+29,postinc2
 10421  004E94  C02D  FFDE         	movff	??_ARPV4_Packet+30,postinc2
 10422  004E98  C02E  FFDE         	movff	??_ARPV4_Packet+31,postinc2
 10423                           
 10424                           ; BSR set to: 1
 10425                           ;arpv4.c: 147: entryPointer->protocolType = header.ptype;
 10426  004E9C  EE20 F00A          	lfsr	2,10
 10427  004EA0  5037               	movf	ARPV4_Packet@entryPointer,w,c
 10428  004EA2  26D9               	addwf	fsr2l,f,c
 10429  004EA4  5038               	movf	ARPV4_Packet@entryPointer+1,w,c
 10430  004EA6  22DA               	addwfc	fsr2h,f,c
 10431  004EA8  C03B  FFDE         	movff	ARPV4_Packet@header+2,postinc2
 10432  004EAC  C03C  FFDD         	movff	ARPV4_Packet@header+3,postdec2
 10433  004EB0                     l9353:
 10434                           
 10435                           ; BSR set to: 1
 10436                           ;arpv4.c: 148: }
 10437                           ;arpv4.c: 149: if(header.oper == ((((uint16_t)1 & (uint16_t)0xFF00) >> 8) | (((uint16_t)
      +                          1 & (uint16_t)0x00FF) << 8)))
 10438  004EB0  0440               	decf	ARPV4_Packet@header+7,w,c
 10439  004EB2  103F               	iorwf	ARPV4_Packet@header+6,w,c
 10440  004EB4  A4D8               	btfss	status,2,c
 10441  004EB6  0012               	return	
 10442                           
 10443                           ; BSR set to: 1
 10444                           ;arpv4.c: 150: {
 10445                           ;arpv4.c: 151: ret = ETH_WriteStart(&header.sha ,0x0806);
 10446  004EB8  0E41               	movlw	low (ARPV4_Packet@header+8)
 10447  004EBA  6E0B               	movwf	ETH_WriteStart@destMAC,c
 10448  004EBC  6A0C               	clrf	ETH_WriteStart@destMAC+1,c
 10449  004EBE  0E08               	movlw	8
 10450  004EC0  6E0E               	movwf	ETH_WriteStart@type+1,c
 10451  004EC2  0E06               	movlw	6
 10452  004EC4  6E0D               	movwf	ETH_WriteStart@type,c
 10453  004EC6  EC83  F03E         	call	_ETH_WriteStart	;wreg free
 10454  004ECA  6E32               	movwf	ARPV4_Packet@ret,c
 10455                           
 10456                           ;arpv4.c: 152: if(ret == SUCCESS)
 10457  004ECC  0432               	decf	ARPV4_Packet@ret,w,c
 10458  004ECE  A4D8               	btfss	status,2,c
 10459  004ED0  0012               	return	
 10460                           
 10461                           ;arpv4.c: 153: {
 10462                           ;arpv4.c: 155: header.tha.s = header.sha.s;
 10463  004ED2  EE20  F041         	lfsr	2,ARPV4_Packet@header+8
 10464  004ED6  EE10  F04B         	lfsr	1,ARPV4_Packet@header+18
 10465  004EDA  0E05               	movlw	5
 10466  004EDC                     u14391:
 10467  004EDC  CFDB FFE3          	movff	plusw2,plusw1
 10468  004EE0  06E8               	decf	wreg,f,c
 10469  004EE2  E2FC               	bc	u14391
 10470                           
 10471                           ;arpv4.c: 156: ETH_GetMAC((char*)&header.sha.s);
 10472  004EE4  0E41               	movlw	low (ARPV4_Packet@header+8)
 10473  004EE6  6E08               	movwf	ETH_GetMAC@macAddr,c
 10474  004EE8  6A09               	clrf	ETH_GetMAC@macAddr+1,c
 10475  004EEA  ECB8  F03C         	call	_ETH_GetMAC	;wreg free
 10476                           
 10477                           ;arpv4.c: 157: header.tpa = header.spa;
 10478  004EEE  C047  F051         	movff	ARPV4_Packet@header+14,ARPV4_Packet@header+24
 10479  004EF2  C048  F052         	movff	ARPV4_Packet@header+15,ARPV4_Packet@header+25
 10480  004EF6  C049  F053         	movff	ARPV4_Packet@header+16,ARPV4_Packet@header+26
 10481  004EFA  C04A  F054         	movff	ARPV4_Packet@header+17,ARPV4_Packet@header+27
 10482                           
 10483                           ;arpv4.c: 158: header.spa = ((((uint32_t)ipv4Address&(uint32_t)0xff000000) >> 24) | (((u
      +                          int32_t)ipv4Address&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)ipv4Address&(uint32_t)0x00
      +                          00ff00) << 8) | (((uint32_t)ipv4Address&(uint32_t)0x000000ff) << 24) );
 10484  004EFE  0101               	movlb	1	; () banked
 10485  004F00  518E               	movf	_ipv4Address& (0+255),w,b
 10486  004F02  6E0F               	movwf	??_ARPV4_Packet& (0+255),c
 10487  004F04  6A10               	clrf	(??_ARPV4_Packet+1)& (0+255),c
 10488  004F06  6A11               	clrf	(??_ARPV4_Packet+2)& (0+255),c
 10489  004F08  6A12               	clrf	(??_ARPV4_Packet+3)& (0+255),c
 10490  004F0A  C00F  F012         	movff	??_ARPV4_Packet,??_ARPV4_Packet+3
 10491  004F0E  6A11               	clrf	??_ARPV4_Packet+2,c
 10492  004F10  6A10               	clrf	??_ARPV4_Packet+1,c
 10493  004F12  6A0F               	clrf	??_ARPV4_Packet,c
 10494  004F14  6A13               	clrf	(??_ARPV4_Packet+4)& (0+255),c
 10495  004F16  518F               	movf	(_ipv4Address+1)& (0+255),w,b
 10496  004F18  6E14               	movwf	(??_ARPV4_Packet+5)& (0+255),c
 10497  004F1A  6A15               	clrf	(??_ARPV4_Packet+6)& (0+255),c
 10498  004F1C  6A16               	clrf	(??_ARPV4_Packet+7)& (0+255),c
 10499  004F1E  C015  F016         	movff	??_ARPV4_Packet+6,??_ARPV4_Packet+7
 10500  004F22  C014  F015         	movff	??_ARPV4_Packet+5,??_ARPV4_Packet+6
 10501  004F26  C013  F014         	movff	??_ARPV4_Packet+4,??_ARPV4_Packet+5
 10502  004F2A  6A13               	clrf	??_ARPV4_Packet+4,c
 10503  004F2C  6A17               	clrf	(??_ARPV4_Packet+8)& (0+255),c
 10504  004F2E  5190               	movf	(_ipv4Address+2)& (0+255),w,b
 10505  004F30  6E18               	movwf	(??_ARPV4_Packet+9)& (0+255),c
 10506  004F32  6A19               	clrf	(??_ARPV4_Packet+10)& (0+255),c
 10507  004F34  5017               	movf	??_ARPV4_Packet+8,w,c
 10508  004F36  6E1A               	movwf	(??_ARPV4_Packet+11)& (0+255),c
 10509  004F38  5018               	movf	??_ARPV4_Packet+9,w,c
 10510  004F3A  6E1B               	movwf	(??_ARPV4_Packet+12)& (0+255),c
 10511  004F3C  5019               	movf	??_ARPV4_Packet+10,w,c
 10512  004F3E  6E1C               	movwf	(??_ARPV4_Packet+13)& (0+255),c
 10513  004F40  6A1D               	clrf	(??_ARPV4_Packet+14)& (0+255),c
 10514  004F42  6A1E               	clrf	(??_ARPV4_Packet+15)& (0+255),c
 10515  004F44  6A1F               	clrf	(??_ARPV4_Packet+16)& (0+255),c
 10516  004F46  6A20               	clrf	(??_ARPV4_Packet+17)& (0+255),c
 10517  004F48  5191               	movf	(_ipv4Address+3)& (0+255),w,b
 10518  004F4A  6E21               	movwf	(??_ARPV4_Packet+18)& (0+255),c
 10519  004F4C  0E19               	movlw	25
 10520  004F4E  D005               	goto	u14400
 10521  004F50                     u14405:
 10522  004F50  90D8               	bcf	status,0,c
 10523  004F52  3221               	rrcf	??_ARPV4_Packet+18,f,c
 10524  004F54  3220               	rrcf	??_ARPV4_Packet+17,f,c
 10525  004F56  321F               	rrcf	??_ARPV4_Packet+16,f,c
 10526  004F58  321E               	rrcf	??_ARPV4_Packet+15,f,c
 10527  004F5A                     u14400:
 10528  004F5A  2EE8               	decfsz	wreg,f,c
 10529  004F5C  D7F9               	goto	u14405
 10530  004F5E  501A               	movf	??_ARPV4_Packet+11,w,c
 10531  004F60  101E               	iorwf	??_ARPV4_Packet+15,w,c
 10532  004F62  6E22               	movwf	(??_ARPV4_Packet+19)& (0+255),c
 10533  004F64  501B               	movf	??_ARPV4_Packet+12,w,c
 10534  004F66  101F               	iorwf	??_ARPV4_Packet+16,w,c
 10535  004F68  6E23               	movwf	(??_ARPV4_Packet+20)& (0+255),c
 10536  004F6A  501C               	movf	??_ARPV4_Packet+13,w,c
 10537  004F6C  1020               	iorwf	??_ARPV4_Packet+17,w,c
 10538  004F6E  6E24               	movwf	(??_ARPV4_Packet+21)& (0+255),c
 10539  004F70  501D               	movf	??_ARPV4_Packet+14,w,c
 10540  004F72  1021               	iorwf	??_ARPV4_Packet+18,w,c
 10541  004F74  6E25               	movwf	(??_ARPV4_Packet+22)& (0+255),c
 10542  004F76  5013               	movf	??_ARPV4_Packet+4,w,c
 10543  004F78  1022               	iorwf	??_ARPV4_Packet+19,w,c
 10544  004F7A  6E26               	movwf	(??_ARPV4_Packet+23)& (0+255),c
 10545  004F7C  5014               	movf	??_ARPV4_Packet+5,w,c
 10546  004F7E  1023               	iorwf	??_ARPV4_Packet+20,w,c
 10547  004F80  6E27               	movwf	(??_ARPV4_Packet+24)& (0+255),c
 10548  004F82  5015               	movf	??_ARPV4_Packet+6,w,c
 10549  004F84  1024               	iorwf	??_ARPV4_Packet+21,w,c
 10550  004F86  6E28               	movwf	(??_ARPV4_Packet+25)& (0+255),c
 10551  004F88  5016               	movf	??_ARPV4_Packet+7,w,c
 10552  004F8A  1025               	iorwf	??_ARPV4_Packet+22,w,c
 10553  004F8C  6E29               	movwf	(??_ARPV4_Packet+26)& (0+255),c
 10554  004F8E  500F               	movf	??_ARPV4_Packet,w,c
 10555  004F90  1026               	iorwf	??_ARPV4_Packet+23,w,c
 10556  004F92  6E47               	movwf	ARPV4_Packet@header+14,c
 10557  004F94  5010               	movf	??_ARPV4_Packet+1,w,c
 10558  004F96  1027               	iorwf	??_ARPV4_Packet+24,w,c
 10559  004F98  6E48               	movwf	ARPV4_Packet@header+15,c
 10560  004F9A  5011               	movf	??_ARPV4_Packet+2,w,c
 10561  004F9C  1028               	iorwf	??_ARPV4_Packet+25,w,c
 10562  004F9E  6E49               	movwf	ARPV4_Packet@header+16,c
 10563  004FA0  5012               	movf	??_ARPV4_Packet+3,w,c
 10564  004FA2  1029               	iorwf	??_ARPV4_Packet+26,w,c
 10565  004FA4  6E4A               	movwf	ARPV4_Packet@header+17,c
 10566                           
 10567                           ; BSR set to: 1
 10568                           ;arpv4.c: 159: header.oper = ((((uint16_t)2 & (uint16_t)0xFF00) >> 8) | (((uint16_t)2 & 
      +                          (uint16_t)0x00FF) << 8));
 10569  004FA6  0E02               	movlw	2
 10570  004FA8  6E40               	movwf	ARPV4_Packet@header+7,c
 10571  004FAA  6A3F               	clrf	ARPV4_Packet@header+6,c
 10572                           
 10573                           ; BSR set to: 1
 10574                           ;arpv4.c: 160: ETH_WriteBlock((char*)&header,sizeof(header));
 10575  004FAC  0E39               	movlw	low ARPV4_Packet@header
 10576  004FAE  6E03               	movwf	ETH_WriteBlock@data,c
 10577  004FB0  6A04               	clrf	ETH_WriteBlock@data+1,c
 10578  004FB2  6A06               	clrf	ETH_WriteBlock@len+1,c
 10579  004FB4  0E1C               	movlw	28
 10580  004FB6  6E05               	movwf	ETH_WriteBlock@len,c
 10581  004FB8  EC02  F03E         	call	_ETH_WriteBlock	;wreg free
 10582  004FBC  EFEB  F042         	goto	_ETH_Send	;wreg free
 10583  004FC0                     __end_of_ARPV4_Packet:
 10584                           	opt stack 0
 10585                           tosu	equ	0xFFF
 10586                           tosh	equ	0xFFE
 10587                           tosl	equ	0xFFD
 10588                           pclath	equ	0xFFA
 10589                           tblptru	equ	0xFF8
 10590                           tblptrh	equ	0xFF7
 10591                           tblptrl	equ	0xFF6
 10592                           tablat	equ	0xFF5
 10593                           prodh	equ	0xFF4
 10594                           prodl	equ	0xFF3
 10595                           intcon	equ	0xFF2
 10596                           intcon2	equ	0xFF1
 10597                           indf0	equ	0xFEF
 10598                           postinc0	equ	0xFEE
 10599                           fsr0h	equ	0xFEA
 10600                           fsr0l	equ	0xFE9
 10601                           wreg	equ	0xFE8
 10602                           postinc1	equ	0xFE6
 10603                           plusw1	equ	0xFE3
 10604                           fsr1h	equ	0xFE2
 10605                           fsr1l	equ	0xFE1
 10606                           indf2	equ	0xFDF
 10607                           postinc2	equ	0xFDE
 10608                           postdec2	equ	0xFDD
 10609                           plusw2	equ	0xFDB
 10610                           fsr2h	equ	0xFDA
 10611                           fsr2l	equ	0xFD9
 10612                           status	equ	0xFD8
 10613                           
 10614 ;; *************** function _ETH_EventHandler *****************
 10615 ;; Defined at:
 10616 ;;		line 215 in file "../../TCPIP Library/ethernet_drivers/encX24J600_driver.c"
 10617 ;; Parameters:    Size  Location     Type
 10618 ;;		None
 10619 ;; Auto vars:     Size  Location     Type
 10620 ;;  eirVal          2   16[COMRAM] unsigned int 
 10621 ;;  estatVal        2   14[COMRAM] unsigned int 
 10622 ;;  macon2Val       2   12[COMRAM] unsigned int 
 10623 ;;  mabbipgVal      2   10[COMRAM] unsigned int 
 10624 ;; Return value:  Size  Location     Type
 10625 ;;                  1    wreg      void 
 10626 ;; Registers used:
 10627 ;;		wreg, status,2, status,0, cstack
 10628 ;; Tracked objects:
 10629 ;;		On entry : 0/1
 10630 ;;		On exit  : 0/0
 10631 ;;		Unchanged: 0/0
 10632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10634 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10636 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10637 ;;Total ram usage:        8 bytes
 10638 ;; Hardware stack levels used:    1
 10639 ;; Hardware stack levels required when called:    7
 10640 ;; This function calls:
 10641 ;;		_ENCx24_BFC
 10642 ;;		_ENCx24_Read
 10643 ;;		_ENCx24_Write
 10644 ;;		_ETH_ResetReceiver
 10645 ;; This function is called by:
 10646 ;;		_Network_Manage
 10647 ;; This function uses a non-reentrant model
 10648 ;;
 10649                           
 10650                           	psect	text49
 10651  0073D4                     __ptext49:
 10652                           	opt stack 0
 10653  0073D4                     _ETH_EventHandler:
 10654                           	opt stack 22
 10655                           
 10656                           ;encX24J600_driver.c: 217: uint16_t eirVal,estatVal,mabbipgVal,macon2Val;
 10657                           ;encX24J600_driver.c: 219: estatVal = ENCx24_Read(XJ600_ESTATL);
 10658                           
 10659                           ;incstack = 0
 10660  0073D4  0EFA               	movlw	250
 10661  0073D6  EC06  F040         	call	_ENCx24_Read
 10662  0073DA  C005  F00F         	movff	?_ENCx24_Read,ETH_EventHandler@estatVal
 10663  0073DE  C006  F010         	movff	?_ENCx24_Read+1,ETH_EventHandler@estatVal+1
 10664                           
 10665                           ;encX24J600_driver.c: 222: eirVal = ENCx24_Read(XJ600_EIRL);
 10666  0073E2  0EFC               	movlw	252
 10667  0073E4  EC06  F040         	call	_ENCx24_Read
 10668  0073E8  C005  F011         	movff	?_ENCx24_Read,ETH_EventHandler@eirVal
 10669  0073EC  C006  F012         	movff	?_ENCx24_Read+1,ETH_EventHandler@eirVal+1
 10670                           
 10671                           ;encX24J600_driver.c: 224: if (eirVal !=0 )
 10672  0073F0  5011               	movf	ETH_EventHandler@eirVal,w,c
 10673  0073F2  1012               	iorwf	ETH_EventHandler@eirVal+1,w,c
 10674  0073F4  B4D8               	btfsc	status,2,c
 10675  0073F6  0012               	return	
 10676                           
 10677                           ;encX24J600_driver.c: 225: {
 10678                           ;encX24J600_driver.c: 226: if (eirVal & 0x0800)
 10679  0073F8  A612               	btfss	ETH_EventHandler@eirVal+1,3,c
 10680  0073FA  D029               	goto	l9643
 10681                           
 10682                           ;encX24J600_driver.c: 227: {
 10683                           ;encX24J600_driver.c: 228: ethData.linkChange = 1;
 10684  0073FC  0101               	movlb	1	; () banked
 10685  0073FE  8983               	bsf	_ethData& (0+255),4,b	;volatile
 10686                           
 10687                           ; BSR set to: 1
 10688                           ;encX24J600_driver.c: 229: macon2Val = ENCx24_Read(XJ600_MACON2L);
 10689  007400  0E42               	movlw	66
 10690  007402  EC06  F040         	call	_ENCx24_Read
 10691  007406  C005  F00D         	movff	?_ENCx24_Read,ETH_EventHandler@macon2Val
 10692  00740A  C006  F00E         	movff	?_ENCx24_Read+1,ETH_EventHandler@macon2Val+1
 10693                           
 10694                           ;encX24J600_driver.c: 231: ethData.up = 0;
 10695  00740E  0101               	movlb	1	; () banked
 10696  007410  9583               	bcf	_ethData& (0+255),2,b	;volatile
 10697                           
 10698                           ; BSR set to: 1
 10699                           ;encX24J600_driver.c: 232: if(estatVal & 0x0100)
 10700  007412  B010               	btfsc	ETH_EventHandler@estatVal+1,0,c
 10701                           
 10702                           ; BSR set to: 1
 10703                           ;encX24J600_driver.c: 233: {
 10704                           ;encX24J600_driver.c: 234: ethData.up = 1;
 10705  007414  8583               	bsf	_ethData& (0+255),2,b	;volatile
 10706                           
 10707                           ; BSR set to: 1
 10708                           ;encX24J600_driver.c: 235: }
 10709                           ;encX24J600_driver.c: 238: if (estatVal & 0x0400)
 10710  007416  A410               	btfss	ETH_EventHandler@estatVal+1,2,c
 10711  007418  D005               	goto	l9635
 10712                           
 10713                           ; BSR set to: 1
 10714                           ;encX24J600_driver.c: 239: {
 10715                           ;encX24J600_driver.c: 241: mabbipgVal = 0x15;
 10716  00741A  6A0C               	clrf	ETH_EventHandler@mabbipgVal+1,c
 10717  00741C  0E15               	movlw	21
 10718  00741E  6E0B               	movwf	ETH_EventHandler@mabbipgVal,c
 10719                           
 10720                           ; BSR set to: 1
 10721                           ;encX24J600_driver.c: 242: macon2Val |= 0x0001;
 10722  007420  800D               	bsf	ETH_EventHandler@macon2Val,0,c
 10723                           
 10724                           ;encX24J600_driver.c: 243: }
 10725  007422  D007               	goto	l9639
 10726  007424                     l9635:
 10727                           
 10728                           ; BSR set to: 1
 10729                           ;encX24J600_driver.c: 244: else
 10730                           ;encX24J600_driver.c: 245: {
 10731                           ;encX24J600_driver.c: 247: mabbipgVal = 0x12;
 10732  007424  6A0C               	clrf	ETH_EventHandler@mabbipgVal+1,c
 10733  007426  0E12               	movlw	18
 10734  007428  6E0B               	movwf	ETH_EventHandler@mabbipgVal,c
 10735                           
 10736                           ; BSR set to: 1
 10737                           ;encX24J600_driver.c: 248: macon2Val |= 0xFFFE;
 10738  00742A  0EFE               	movlw	254
 10739  00742C  120D               	iorwf	ETH_EventHandler@macon2Val,f,c
 10740  00742E  0EFF               	movlw	255
 10741  007430  120E               	iorwf	ETH_EventHandler@macon2Val+1,f,c
 10742  007432                     l9639:
 10743                           
 10744                           ; BSR set to: 1
 10745                           ;encX24J600_driver.c: 249: }
 10746                           ;encX24J600_driver.c: 250: ENCx24_Write(XJ600_MABBIPGL,mabbipgVal);
 10747  007432  C00B  F005         	movff	ETH_EventHandler@mabbipgVal,ENCx24_Write@data
 10748  007436  C00C  F006         	movff	ETH_EventHandler@mabbipgVal+1,ENCx24_Write@data+1
 10749  00743A  0E44               	movlw	68
 10750  00743C  EC94  F040         	call	_ENCx24_Write
 10751                           
 10752                           ;encX24J600_driver.c: 251: ENCx24_Write(XJ600_MACON2L, macon2Val);
 10753  007440  C00D  F005         	movff	ETH_EventHandler@macon2Val,ENCx24_Write@data
 10754  007444  C00E  F006         	movff	ETH_EventHandler@macon2Val+1,ENCx24_Write@data+1
 10755  007448  0E42               	movlw	66
 10756  00744A  EC94  F040         	call	_ENCx24_Write
 10757  00744E                     l9643:
 10758                           
 10759                           ;encX24J600_driver.c: 252: }
 10760                           ;encX24J600_driver.c: 253: if(eirVal & 0x0008)
 10761  00744E  A611               	btfss	ETH_EventHandler@eirVal,3,c
 10762  007450  D002               	goto	l448
 10763                           
 10764                           ;encX24J600_driver.c: 254: {
 10765                           ;encX24J600_driver.c: 255: ethData.bufferBusy = 0;
 10766  007452  0101               	movlb	1	; () banked
 10767  007454  9B83               	bcf	_ethData& (0+255),5,b	;volatile
 10768  007456                     l448:
 10769                           
 10770                           ;encX24J600_driver.c: 256: }
 10771                           ;encX24J600_driver.c: 257: if((eirVal & 0x0002 )|| (eirVal & 0x0001))
 10772  007456  A211               	btfss	ETH_EventHandler@eirVal,1,c
 10773  007458  B011               	btfsc	ETH_EventHandler@eirVal,0,c
 10774                           
 10775                           ;encX24J600_driver.c: 258: {
 10776                           ;encX24J600_driver.c: 259: ETH_ResetReceiver();
 10777  00745A  ECD6  F03E         	call	_ETH_ResetReceiver	;wreg free
 10778                           
 10779                           ;encX24J600_driver.c: 260: }
 10780                           ;encX24J600_driver.c: 262: if(estatVal & 0x00FF || eirVal & 0x0040)
 10781  00745E  500F               	movf	ETH_EventHandler@estatVal,w,c
 10782  007460  E102               	bnz	l454
 10783  007462  AC11               	btfss	ETH_EventHandler@eirVal,6,c
 10784  007464  D003               	goto	l9657
 10785  007466                     l454:
 10786                           
 10787                           ;encX24J600_driver.c: 263: {
 10788                           ;encX24J600_driver.c: 264: if(ethData.pktReady == 0)
 10789  007466  0101               	movlb	1	; () banked
 10790  007468  A383               	btfss	_ethData& (0+255),1,b	;volatile
 10791                           
 10792                           ; BSR set to: 1
 10793                           ;encX24J600_driver.c: 265: {
 10794                           ;encX24J600_driver.c: 266: ethData.pktReady = 1;
 10795  00746A  8383               	bsf	_ethData& (0+255),1,b	;volatile
 10796  00746C                     l9657:
 10797                           
 10798                           ;encX24J600_driver.c: 267: }
 10799                           ;encX24J600_driver.c: 268: }
 10800                           ;encX24J600_driver.c: 269: ENCx24_BFC(XJ600_EIRL,eirVal);
 10801  00746C  C011  F005         	movff	ETH_EventHandler@eirVal,ENCx24_BFC@bitMask
 10802  007470  C012  F006         	movff	ETH_EventHandler@eirVal+1,ENCx24_BFC@bitMask+1
 10803  007474  0EFC               	movlw	252
 10804  007476  EFD5  F040         	goto	_ENCx24_BFC
 10805  00747A                     __end_of_ETH_EventHandler:
 10806                           	opt stack 0
 10807                           tosu	equ	0xFFF
 10808                           tosh	equ	0xFFE
 10809                           tosl	equ	0xFFD
 10810                           pclath	equ	0xFFA
 10811                           tblptru	equ	0xFF8
 10812                           tblptrh	equ	0xFF7
 10813                           tblptrl	equ	0xFF6
 10814                           tablat	equ	0xFF5
 10815                           prodh	equ	0xFF4
 10816                           prodl	equ	0xFF3
 10817                           intcon	equ	0xFF2
 10818                           intcon2	equ	0xFF1
 10819                           indf0	equ	0xFEF
 10820                           postinc0	equ	0xFEE
 10821                           fsr0h	equ	0xFEA
 10822                           fsr0l	equ	0xFE9
 10823                           wreg	equ	0xFE8
 10824                           postinc1	equ	0xFE6
 10825                           plusw1	equ	0xFE3
 10826                           fsr1h	equ	0xFE2
 10827                           fsr1l	equ	0xFE1
 10828                           indf2	equ	0xFDF
 10829                           postinc2	equ	0xFDE
 10830                           postdec2	equ	0xFDD
 10831                           plusw2	equ	0xFDB
 10832                           fsr2h	equ	0xFDA
 10833                           fsr2l	equ	0xFD9
 10834                           status	equ	0xFD8
 10835                           
 10836 ;; *************** function _ETH_ResetReceiver *****************
 10837 ;; Defined at:
 10838 ;;		line 302 in file "../../TCPIP Library/ethernet_drivers/encX24J600_driver.c"
 10839 ;; Parameters:    Size  Location     Type
 10840 ;;		None
 10841 ;; Auto vars:     Size  Location     Type
 10842 ;;		None
 10843 ;; Return value:  Size  Location     Type
 10844 ;;                  1    wreg      void 
 10845 ;; Registers used:
 10846 ;;		wreg, status,2, status,0, cstack
 10847 ;; Tracked objects:
 10848 ;;		On entry : 0/1
 10849 ;;		On exit  : 0/0
 10850 ;;		Unchanged: 0/0
 10851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10856 ;;Total ram usage:        0 bytes
 10857 ;; Hardware stack levels used:    1
 10858 ;; Hardware stack levels required when called:    6
 10859 ;; This function calls:
 10860 ;;		_ENCx24_BFC
 10861 ;;		_ENCx24_BFS
 10862 ;;		_ENCx24_Write
 10863 ;; This function is called by:
 10864 ;;		_ETH_EventHandler
 10865 ;; This function uses a non-reentrant model
 10866 ;;
 10867                           
 10868                           	psect	text50
 10869  007DAC                     __ptext50:
 10870                           	opt stack 0
 10871  007DAC                     _ETH_ResetReceiver:
 10872                           	opt stack 22
 10873                           
 10874                           ;encX24J600_driver.c: 304: ENCx24_BFS(XJ600_ECON2L, 0x0020);
 10875                           
 10876                           ;incstack = 0
 10877  007DAC  6A06               	clrf	ENCx24_BFS@bitMask+1,c
 10878  007DAE  0E20               	movlw	32
 10879  007DB0  6E05               	movwf	ENCx24_BFS@bitMask,c
 10880  007DB2  0E6E               	movlw	110
 10881  007DB4  ECB5  F040         	call	_ENCx24_BFS
 10882                           
 10883                           ;encX24J600_driver.c: 305: ENCx24_BFC(XJ600_ECON2L, 0x0020);
 10884  007DB8  6A06               	clrf	ENCx24_BFC@bitMask+1,c
 10885  007DBA  0E20               	movlw	32
 10886  007DBC  6E05               	movwf	ENCx24_BFC@bitMask,c
 10887  007DBE  0E6E               	movlw	110
 10888  007DC0  ECD5  F040         	call	_ENCx24_BFC
 10889                           
 10890                           ;encX24J600_driver.c: 307: ENCx24_BFC(XJ600_ECON1L, 0x0001);
 10891  007DC4  6A06               	clrf	ENCx24_BFC@bitMask+1,c
 10892  007DC6  0E01               	movlw	1
 10893  007DC8  6E05               	movwf	ENCx24_BFC@bitMask,c
 10894  007DCA  0EFE               	movlw	254
 10895  007DCC  ECD5  F040         	call	_ENCx24_BFC
 10896                           
 10897                           ;encX24J600_driver.c: 310: nextPacketPointer = 0x1600ul;
 10898  007DD0  0E16               	movlw	22
 10899  007DD2  0101               	movlb	1	; () banked
 10900  007DD4  6F9F               	movwf	(_nextPacketPointer+1)& (0+255),b
 10901  007DD6  6B9E               	clrf	_nextPacketPointer& (0+255),b
 10902                           
 10903                           ; BSR set to: 1
 10904                           ;encX24J600_driver.c: 313: ENCx24_Write(XJ600_ERXSTL, 0x1600ul);
 10905  007DD8  6E06               	movwf	ENCx24_Write@data+1,c
 10906  007DDA  6A05               	clrf	ENCx24_Write@data,c
 10907  007DDC  0E04               	movlw	4
 10908  007DDE  EC94  F040         	call	_ENCx24_Write
 10909                           
 10910                           ;encX24J600_driver.c: 314: ENCx24_Write(XJ600_ERXTAILL, 0x6000ul - 2);
 10911  007DE2  0E5F               	movlw	95
 10912  007DE4  6E06               	movwf	ENCx24_Write@data+1,c
 10913  007DE6  0EFE               	movlw	254
 10914  007DE8  6E05               	movwf	ENCx24_Write@data,c
 10915  007DEA  0E06               	movlw	6
 10916  007DEC  EC94  F040         	call	_ENCx24_Write
 10917                           
 10918                           ;encX24J600_driver.c: 317: ENCx24_BFS(XJ600_ECON1L, 0x0001);
 10919  007DF0  6A06               	clrf	ENCx24_BFS@bitMask+1,c
 10920  007DF2  0E01               	movlw	1
 10921  007DF4  6E05               	movwf	ENCx24_BFS@bitMask,c
 10922  007DF6  0EFE               	movlw	254
 10923  007DF8  EFB5  F040         	goto	_ENCx24_BFS
 10924  007DFC                     __end_of_ETH_ResetReceiver:
 10925                           	opt stack 0
 10926                           tosu	equ	0xFFF
 10927                           tosh	equ	0xFFE
 10928                           tosl	equ	0xFFD
 10929                           pclath	equ	0xFFA
 10930                           tblptru	equ	0xFF8
 10931                           tblptrh	equ	0xFF7
 10932                           tblptrl	equ	0xFF6
 10933                           tablat	equ	0xFF5
 10934                           prodh	equ	0xFF4
 10935                           prodl	equ	0xFF3
 10936                           intcon	equ	0xFF2
 10937                           intcon2	equ	0xFF1
 10938                           indf0	equ	0xFEF
 10939                           postinc0	equ	0xFEE
 10940                           fsr0h	equ	0xFEA
 10941                           fsr0l	equ	0xFE9
 10942                           wreg	equ	0xFE8
 10943                           postinc1	equ	0xFE6
 10944                           plusw1	equ	0xFE3
 10945                           fsr1h	equ	0xFE2
 10946                           fsr1l	equ	0xFE1
 10947                           indf2	equ	0xFDF
 10948                           postinc2	equ	0xFDE
 10949                           postdec2	equ	0xFDD
 10950                           plusw2	equ	0xFDB
 10951                           fsr2h	equ	0xFDA
 10952                           fsr2l	equ	0xFD9
 10953                           status	equ	0xFD8
 10954                           
 10955 ;; *************** function _DHCP_Manage *****************
 10956 ;; Defined at:
 10957 ;;		line 130 in file "../../TCPIP Library/source/dhcp_client.c"
 10958 ;; Parameters:    Size  Location     Type
 10959 ;;		None
 10960 ;; Auto vars:     Size  Location     Type
 10961 ;;		None
 10962 ;; Return value:  Size  Location     Type
 10963 ;;                  1    wreg      void 
 10964 ;; Registers used:
 10965 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10966 ;; Tracked objects:
 10967 ;;		On entry : F/1
 10968 ;;		On exit  : E/0
 10969 ;;		Unchanged: 0/0
 10970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10975 ;;Total ram usage:        0 bytes
 10976 ;; Hardware stack levels used:    1
 10977 ;; Hardware stack levels required when called:   11
 10978 ;; This function calls:
 10979 ;;		_DHCP_Request
 10980 ;; This function is called by:
 10981 ;;		_Network_Manage
 10982 ;; This function uses a non-reentrant model
 10983 ;;
 10984                           
 10985                           	psect	text51
 10986  00764C                     __ptext51:
 10987                           	opt stack 0
 10988  00764C                     _DHCP_Manage:
 10989                           	opt stack 18
 10990                           
 10991                           ; BSR set to: 1
 10992                           ;dhcp_client.c: 132: if(ethData.linkChange)
 10993                           
 10994                           ;incstack = 0
 10995  00764C  A983               	btfss	_ethData& (0+255),4,b	;volatile
 10996  00764E  D018               	goto	l9701
 10997                           
 10998                           ; BSR set to: 1
 10999                           ;dhcp_client.c: 133: {
 11000                           ;dhcp_client.c: 134: if (clientState == BOUND && dhcpLeaseTime)
 11001  007650  0E05               	movlw	5
 11002  007652  185D               	xorwf	_clientState,w,c
 11003  007654  E10E               	bnz	l9695
 11004                           
 11005                           ; BSR set to: 1
 11006  007656  518A               	movf	_dhcpLeaseTime& (0+255),w,b
 11007  007658  118B               	iorwf	(_dhcpLeaseTime+1)& (0+255),w,b
 11008  00765A  118C               	iorwf	(_dhcpLeaseTime+2)& (0+255),w,b
 11009  00765C  118D               	iorwf	(_dhcpLeaseTime+3)& (0+255),w,b
 11010  00765E  E009               	bz	l9695
 11011                           
 11012                           ; BSR set to: 1
 11013                           ;dhcp_client.c: 135: {
 11014                           ;dhcp_client.c: 136: dhcpServerId = 0xFFFFFFFF;
 11015  007660  0102               	movlb	2	; () banked
 11016  007662  6922               	setf	_dhcpServerId& (0+255),b
 11017  007664  6923               	setf	(_dhcpServerId+1)& (0+255),b
 11018  007666  6924               	setf	(_dhcpServerId+2)& (0+255),b
 11019  007668  6925               	setf	(_dhcpServerId+3)& (0+255),b
 11020                           
 11021                           ; BSR set to: 2
 11022                           ;dhcp_client.c: 137: DHCP_Request(DHCP_REQUEST);
 11023  00766A  0E03               	movlw	3
 11024  00766C  EC7C  F031         	call	_DHCP_Request
 11025                           
 11026                           ;dhcp_client.c: 138: }
 11027  007670  D004               	goto	l9699
 11028  007672                     l9695:
 11029                           
 11030                           ; BSR set to: 1
 11031                           ;dhcp_client.c: 139: else
 11032                           ;dhcp_client.c: 140: {
 11033                           ;dhcp_client.c: 141: clientState = INIT;
 11034  007672  0E01               	movlw	1
 11035  007674  6E5D               	movwf	_clientState,c
 11036                           
 11037                           ; BSR set to: 1
 11038                           ;dhcp_client.c: 142: DHCP_Request(DHCP_DISCOVER);
 11039  007676  EC7C  F031         	call	_DHCP_Request
 11040  00767A                     l9699:
 11041                           
 11042                           ; BSR set to: 0
 11043                           ;dhcp_client.c: 143: }
 11044                           ;dhcp_client.c: 144: ethData.linkChange=0;
 11045  00767A  0101               	movlb	1	; () banked
 11046  00767C  9983               	bcf	_ethData& (0+255),4,b	;volatile
 11047                           
 11048                           ;dhcp_client.c: 145: }
 11049  00767E  0012               	return	
 11050  007680                     l9701:
 11051                           
 11052                           ; BSR set to: 1
 11053                           ;dhcp_client.c: 146: else if (clientState == INIT || clientState == INIT_REBOOT)
 11054  007680  045D               	decf	_clientState,w,c
 11055  007682  E003               	bz	l9705
 11056                           
 11057                           ; BSR set to: 1
 11058  007684  0E02               	movlw	2
 11059  007686  185D               	xorwf	_clientState,w,c
 11060  007688  E104               	bnz	l9709
 11061  00768A                     l9705:
 11062                           
 11063                           ; BSR set to: 1
 11064                           ;dhcp_client.c: 147: {
 11065                           ;dhcp_client.c: 148: clientState = INIT;
 11066  00768A  0E01               	movlw	1
 11067  00768C  6E5D               	movwf	_clientState,c
 11068                           
 11069                           ; BSR set to: 1
 11070                           ;dhcp_client.c: 149: DHCP_Request(DHCP_DISCOVER);
 11071  00768E  EF7C  F031         	goto	_DHCP_Request
 11072  007692                     l9709:
 11073                           
 11074                           ; BSR set to: 1
 11075                           ;dhcp_client.c: 151: else if ((dhcpLeaseTime < 100)&& clientState == BOUND)
 11076  007692  518D               	movf	(_dhcpLeaseTime+3)& (0+255),w,b
 11077  007694  118C               	iorwf	(_dhcpLeaseTime+2)& (0+255),w,b
 11078  007696  118B               	iorwf	(_dhcpLeaseTime+1)& (0+255),w,b
 11079  007698  E109               	bnz	l9715
 11080  00769A  0E64               	movlw	100
 11081  00769C  5D8A               	subwf	_dhcpLeaseTime& (0+255),w,b
 11082  00769E  E206               	bc	l9715
 11083                           
 11084                           ; BSR set to: 1
 11085  0076A0  0E05               	movlw	5
 11086  0076A2  185D               	xorwf	_clientState,w,c
 11087  0076A4  E103               	bnz	l9715
 11088                           
 11089                           ; BSR set to: 1
 11090                           ;dhcp_client.c: 152: {
 11091                           ;dhcp_client.c: 153: DHCP_Request(DHCP_REQUEST);
 11092  0076A6  0E03               	movlw	3
 11093  0076A8  EF7C  F031         	goto	_DHCP_Request
 11094  0076AC                     l9715:
 11095                           
 11096                           ; BSR set to: 1
 11097                           ;dhcp_client.c: 155: else
 11098                           ;dhcp_client.c: 156: {
 11099                           ;dhcp_client.c: 157: if(clientState == BOUND && dhcpLeaseTime) dhcpLeaseTime --;
 11100  0076AC  0E05               	movlw	5
 11101  0076AE  185D               	xorwf	_clientState,w,c
 11102  0076B0  E10B               	bnz	l9721
 11103                           
 11104                           ; BSR set to: 1
 11105  0076B2  518A               	movf	_dhcpLeaseTime& (0+255),w,b
 11106  0076B4  118B               	iorwf	(_dhcpLeaseTime+1)& (0+255),w,b
 11107  0076B6  118C               	iorwf	(_dhcpLeaseTime+2)& (0+255),w,b
 11108  0076B8  118D               	iorwf	(_dhcpLeaseTime+3)& (0+255),w,b
 11109  0076BA  E006               	bz	l9721
 11110                           
 11111                           ; BSR set to: 1
 11112  0076BC  078A               	decf	_dhcpLeaseTime& (0+255),f,b
 11113  0076BE  0E00               	movlw	0
 11114  0076C0  5B8B               	subwfb	(_dhcpLeaseTime+1)& (0+255),f,b
 11115  0076C2  5B8C               	subwfb	(_dhcpLeaseTime+2)& (0+255),f,b
 11116  0076C4  5B8D               	subwfb	(_dhcpLeaseTime+3)& (0+255),f,b
 11117  0076C6  0C00               	retlw	0
 11118  0076C8                     l9721:
 11119                           
 11120                           ; BSR set to: 1
 11121                           ;dhcp_client.c: 158: else if (!dhcpLeaseTime) clientState = INIT_REBOOT;
 11122  0076C8  518A               	movf	_dhcpLeaseTime& (0+255),w,b
 11123  0076CA  118B               	iorwf	(_dhcpLeaseTime+1)& (0+255),w,b
 11124  0076CC  118C               	iorwf	(_dhcpLeaseTime+2)& (0+255),w,b
 11125  0076CE  118D               	iorwf	(_dhcpLeaseTime+3)& (0+255),w,b
 11126  0076D0  A4D8               	btfss	status,2,c
 11127  0076D2  0012               	return	
 11128                           
 11129                           ; BSR set to: 1
 11130  0076D4  0E02               	movlw	2
 11131  0076D6  6E5D               	movwf	_clientState,c
 11132  0076D8  0C02               	retlw	2
 11133  0076DA                     __end_of_DHCP_Manage:
 11134                           	opt stack 0
 11135                           tosu	equ	0xFFF
 11136                           tosh	equ	0xFFE
 11137                           tosl	equ	0xFFD
 11138                           pclath	equ	0xFFA
 11139                           tblptru	equ	0xFF8
 11140                           tblptrh	equ	0xFF7
 11141                           tblptrl	equ	0xFF6
 11142                           tablat	equ	0xFF5
 11143                           prodh	equ	0xFF4
 11144                           prodl	equ	0xFF3
 11145                           intcon	equ	0xFF2
 11146                           intcon2	equ	0xFF1
 11147                           indf0	equ	0xFEF
 11148                           postinc0	equ	0xFEE
 11149                           fsr0h	equ	0xFEA
 11150                           fsr0l	equ	0xFE9
 11151                           wreg	equ	0xFE8
 11152                           postinc1	equ	0xFE6
 11153                           plusw1	equ	0xFE3
 11154                           fsr1h	equ	0xFE2
 11155                           fsr1l	equ	0xFE1
 11156                           indf2	equ	0xFDF
 11157                           postinc2	equ	0xFDE
 11158                           postdec2	equ	0xFDD
 11159                           plusw2	equ	0xFDB
 11160                           fsr2h	equ	0xFDA
 11161                           fsr2l	equ	0xFD9
 11162                           status	equ	0xFD8
 11163                           
 11164 ;; *************** function _DHCP_Request *****************
 11165 ;; Defined at:
 11166 ;;		line 71 in file "../../TCPIP Library/source/dhcp_client.c"
 11167 ;; Parameters:    Size  Location     Type
 11168 ;;  type            1    wreg     enum E592
 11169 ;; Auto vars:     Size  Location     Type
 11170 ;;  type            1   16[BANK0 ] enum E592
 11171 ;;  ethMAC          6   17[BANK0 ] struct .
 11172 ;;  msglength       2    0        unsigned int 
 11173 ;;  started         1   15[BANK0 ] unsigned char 
 11174 ;; Return value:  Size  Location     Type
 11175 ;;                  1    wreg      void 
 11176 ;; Registers used:
 11177 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11178 ;; Tracked objects:
 11179 ;;		On entry : C/1
 11180 ;;		On exit  : F/0
 11181 ;;		Unchanged: 0/0
 11182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11184 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11186 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11187 ;;Total ram usage:        8 bytes
 11188 ;; Hardware stack levels used:    1
 11189 ;; Hardware stack levels required when called:   10
 11190 ;; This function calls:
 11191 ;;		_DHCP_WriteZeros
 11192 ;;		_ETH_GetMAC
 11193 ;;		_ETH_Write16
 11194 ;;		_ETH_Write32
 11195 ;;		_ETH_Write8
 11196 ;;		_ETH_WriteBlock
 11197 ;;		_UDP_Send
 11198 ;;		_UDP_Start
 11199 ;; This function is called by:
 11200 ;;		_DHCP_Manage
 11201 ;;		_DHCP_Handler
 11202 ;; This function uses a non-reentrant model
 11203 ;;
 11204                           
 11205                           	psect	text52
 11206  0062F8                     __ptext52:
 11207                           	opt stack 0
 11208  0062F8                     _DHCP_Request:
 11209                           	opt stack 15
 11210                           
 11211                           ;incstack = 0
 11212                           ;DHCP_Request@type stored from wreg
 11213  0062F8  0100               	movlb	0	; () banked
 11214  0062FA  6F70               	movwf	DHCP_Request@type& (0+255),b
 11215                           
 11216                           ;dhcp_client.c: 78: ETH_GetMAC((char*)&ethMAC);
 11217  0062FC  0E71               	movlw	low DHCP_Request@ethMAC
 11218  0062FE  6E08               	movwf	ETH_GetMAC@macAddr,c
 11219  006300  6A09               	clrf	ETH_GetMAC@macAddr+1,c
 11220  006302  ECB8  F03C         	call	_ETH_GetMAC	;wreg free
 11221                           
 11222                           ;dhcp_client.c: 83: }
 11223                           ;dhcp_client.c: 85: started = UDP_Start(0xFFFFFFFF,68,67);
 11224  006306  0100               	movlb	0	; () banked
 11225  006308  6967               	setf	UDP_Start@destIP& (0+255),b
 11226  00630A  6968               	setf	(UDP_Start@destIP+1)& (0+255),b
 11227  00630C  6969               	setf	(UDP_Start@destIP+2)& (0+255),b
 11228  00630E  696A               	setf	(UDP_Start@destIP+3)& (0+255),b
 11229  006310  6B6C               	clrf	(UDP_Start@srcPort+1)& (0+255),b
 11230  006312  0E44               	movlw	68
 11231  006314  6F6B               	movwf	UDP_Start@srcPort& (0+255),b
 11232  006316  6B6E               	clrf	(UDP_Start@dstPort+1)& (0+255),b
 11233  006318  0E43               	movlw	67
 11234  00631A  6F6D               	movwf	UDP_Start@dstPort& (0+255),b
 11235  00631C  ECFE  F03E         	call	_UDP_Start	;wreg free
 11236  006320  0100               	movlb	0	; () banked
 11237  006322  6F6F               	movwf	DHCP_Request@started& (0+255),b
 11238                           
 11239                           ; BSR set to: 0
 11240                           ;dhcp_client.c: 87: if(started==SUCCESS)
 11241  006324  056F               	decf	DHCP_Request@started& (0+255),w,b
 11242  006326  A4D8               	btfss	status,2,c
 11243  006328  0012               	return	
 11244                           
 11245                           ; BSR set to: 0
 11246                           ;dhcp_client.c: 88: {
 11247                           ;dhcp_client.c: 89: ETH_Write32(0x01010600);
 11248  00632A  6A03               	clrf	ETH_Write32@data,c
 11249  00632C  0E06               	movlw	6
 11250  00632E  6E04               	movwf	ETH_Write32@data+1,c
 11251  006330  0E01               	movlw	1
 11252  006332  6E05               	movwf	ETH_Write32@data+2,c
 11253  006334  6E06               	movwf	ETH_Write32@data+3,c
 11254  006336  ECE8  F041         	call	_ETH_Write32	;wreg free
 11255                           
 11256                           ;dhcp_client.c: 90: ETH_Write32(xidValue);
 11257  00633A  0E50               	movlw	80
 11258  00633C  6E03               	movwf	ETH_Write32@data,c
 11259  00633E  0E48               	movlw	72
 11260  006340  6E04               	movwf	ETH_Write32@data+1,c
 11261  006342  0E43               	movlw	67
 11262  006344  6E05               	movwf	ETH_Write32@data+2,c
 11263  006346  0E4D               	movlw	77
 11264  006348  6E06               	movwf	ETH_Write32@data+3,c
 11265  00634A  ECE8  F041         	call	_ETH_Write32	;wreg free
 11266                           
 11267                           ;dhcp_client.c: 91: ETH_Write32(0x00008000);
 11268  00634E  6A03               	clrf	ETH_Write32@data,c
 11269  006350  0E80               	movlw	128
 11270  006352  6E04               	movwf	ETH_Write32@data+1,c
 11271  006354  6A05               	clrf	ETH_Write32@data+2,c
 11272  006356  6A06               	clrf	ETH_Write32@data+3,c
 11273  006358  ECE8  F041         	call	_ETH_Write32	;wreg free
 11274                           
 11275                           ;dhcp_client.c: 92: if (type == DHCP_REQUEST)
 11276  00635C  0E03               	movlw	3
 11277  00635E  0100               	movlb	0	; () banked
 11278  006360  1970               	xorwf	DHCP_Request@type& (0+255),w,b
 11279  006362  E107               	bnz	l8207
 11280                           
 11281                           ; BSR set to: 0
 11282                           ;dhcp_client.c: 93: {
 11283                           ;dhcp_client.c: 94: ETH_Write32(0);
 11284  006364  6A03               	clrf	ETH_Write32@data,c
 11285  006366  6A04               	clrf	ETH_Write32@data+1,c
 11286  006368  6A05               	clrf	ETH_Write32@data+2,c
 11287  00636A  6A06               	clrf	ETH_Write32@data+3,c
 11288  00636C  ECE8  F041         	call	_ETH_Write32	;wreg free
 11289                           
 11290                           ;dhcp_client.c: 95: }
 11291  006370  D00A               	goto	l859
 11292  006372                     l8207:
 11293                           
 11294                           ; BSR set to: 0
 11295                           ;dhcp_client.c: 96: else
 11296                           ;dhcp_client.c: 97: {
 11297                           ;dhcp_client.c: 98: ETH_Write32(ipv4Address);
 11298  006372  C18E  F003         	movff	_ipv4Address,ETH_Write32@data
 11299  006376  C18F  F004         	movff	_ipv4Address+1,ETH_Write32@data+1
 11300  00637A  C190  F005         	movff	_ipv4Address+2,ETH_Write32@data+2
 11301  00637E  C191  F006         	movff	_ipv4Address+3,ETH_Write32@data+3
 11302  006382  ECE8  F041         	call	_ETH_Write32	;wreg free
 11303  006386                     l859:
 11304                           
 11305                           ;dhcp_client.c: 99: }
 11306                           ;dhcp_client.c: 100: ETH_Write32(0);
 11307  006386  6A03               	clrf	ETH_Write32@data,c
 11308  006388  6A04               	clrf	ETH_Write32@data+1,c
 11309  00638A  6A05               	clrf	ETH_Write32@data+2,c
 11310  00638C  6A06               	clrf	ETH_Write32@data+3,c
 11311  00638E  ECE8  F041         	call	_ETH_Write32	;wreg free
 11312                           
 11313                           ;dhcp_client.c: 101: ETH_Write32(0);
 11314  006392  6A03               	clrf	ETH_Write32@data,c
 11315  006394  6A04               	clrf	ETH_Write32@data+1,c
 11316  006396  6A05               	clrf	ETH_Write32@data+2,c
 11317  006398  6A06               	clrf	ETH_Write32@data+3,c
 11318  00639A  ECE8  F041         	call	_ETH_Write32	;wreg free
 11319                           
 11320                           ;dhcp_client.c: 102: ETH_Write32(0);
 11321  00639E  6A03               	clrf	ETH_Write32@data,c
 11322  0063A0  6A04               	clrf	ETH_Write32@data+1,c
 11323  0063A2  6A05               	clrf	ETH_Write32@data+2,c
 11324  0063A4  6A06               	clrf	ETH_Write32@data+3,c
 11325  0063A6  ECE8  F041         	call	_ETH_Write32	;wreg free
 11326                           
 11327                           ;dhcp_client.c: 103: ETH_WriteBlock((char *)&ethMAC,6);
 11328  0063AA  0E71               	movlw	low DHCP_Request@ethMAC
 11329  0063AC  6E03               	movwf	ETH_WriteBlock@data,c
 11330  0063AE  6A04               	clrf	ETH_WriteBlock@data+1,c
 11331  0063B0  6A06               	clrf	ETH_WriteBlock@len+1,c
 11332  0063B2  0E06               	movlw	6
 11333  0063B4  6E05               	movwf	ETH_WriteBlock@len,c
 11334  0063B6  EC02  F03E         	call	_ETH_WriteBlock	;wreg free
 11335                           
 11336                           ;dhcp_client.c: 104: DHCP_WriteZeros(202);
 11337  0063BA  6A05               	clrf	DHCP_WriteZeros@length+1,c
 11338  0063BC  0ECA               	movlw	202
 11339  0063BE  6E04               	movwf	DHCP_WriteZeros@length,c
 11340  0063C0  EC89  F043         	call	_DHCP_WriteZeros	;wreg free
 11341                           
 11342                           ;dhcp_client.c: 105: ETH_Write32(0x63825363);
 11343  0063C4  0E63               	movlw	99
 11344  0063C6  6E03               	movwf	ETH_Write32@data,c
 11345  0063C8  0E53               	movlw	83
 11346  0063CA  6E04               	movwf	ETH_Write32@data+1,c
 11347  0063CC  0E82               	movlw	130
 11348  0063CE  6E05               	movwf	ETH_Write32@data+2,c
 11349  0063D0  0E63               	movlw	99
 11350  0063D2  6E06               	movwf	ETH_Write32@data+3,c
 11351  0063D4  ECE8  F041         	call	_ETH_Write32	;wreg free
 11352                           
 11353                           ;dhcp_client.c: 107: ETH_Write8(53);
 11354  0063D8  0E35               	movlw	53
 11355  0063DA  EC70  F043         	call	_ETH_Write8
 11356                           
 11357                           ;dhcp_client.c: 108: ETH_Write8(1);
 11358  0063DE  0E01               	movlw	1
 11359  0063E0  EC70  F043         	call	_ETH_Write8
 11360                           
 11361                           ;dhcp_client.c: 109: ETH_Write8(type);
 11362  0063E4  0100               	movlb	0	; () banked
 11363  0063E6  5170               	movf	DHCP_Request@type& (0+255),w,b
 11364  0063E8  EC70  F043         	call	_ETH_Write8
 11365                           
 11366                           ;dhcp_client.c: 110: if(type == DHCP_REQUEST)
 11367  0063EC  0E03               	movlw	3
 11368  0063EE  0100               	movlb	0	; () banked
 11369  0063F0  1970               	xorwf	DHCP_Request@type& (0+255),w,b
 11370  0063F2  E120               	bnz	l860
 11371                           
 11372                           ; BSR set to: 0
 11373                           ;dhcp_client.c: 111: {
 11374                           ;dhcp_client.c: 112: ETH_Write8(54);ETH_Write8(4);ETH_Write32(dhcpServerId);
 11375  0063F4  0E36               	movlw	54
 11376  0063F6  EC70  F043         	call	_ETH_Write8
 11377  0063FA  0E04               	movlw	4
 11378  0063FC  EC70  F043         	call	_ETH_Write8
 11379  006400  C222  F003         	movff	_dhcpServerId,ETH_Write32@data
 11380  006404  C223  F004         	movff	_dhcpServerId+1,ETH_Write32@data+1
 11381  006408  C224  F005         	movff	_dhcpServerId+2,ETH_Write32@data+2
 11382  00640C  C225  F006         	movff	_dhcpServerId+3,ETH_Write32@data+3
 11383  006410  ECE8  F041         	call	_ETH_Write32	;wreg free
 11384                           
 11385                           ;dhcp_client.c: 113: ETH_Write8(50);ETH_Write8(4);ETH_Write32(ipv4Address);
 11386  006414  0E32               	movlw	50
 11387  006416  EC70  F043         	call	_ETH_Write8
 11388  00641A  0E04               	movlw	4
 11389  00641C  EC70  F043         	call	_ETH_Write8
 11390  006420  C18E  F003         	movff	_ipv4Address,ETH_Write32@data
 11391  006424  C18F  F004         	movff	_ipv4Address+1,ETH_Write32@data+1
 11392  006428  C190  F005         	movff	_ipv4Address+2,ETH_Write32@data+2
 11393  00642C  C191  F006         	movff	_ipv4Address+3,ETH_Write32@data+3
 11394  006430  ECE8  F041         	call	_ETH_Write32	;wreg free
 11395  006434                     l860:
 11396                           
 11397                           ;dhcp_client.c: 114: }
 11398                           ;dhcp_client.c: 115: ETH_Write8(55); ETH_Write8(4); ETH_Write8(1); ETH_Write8(3); ETH_Wr
      +                          ite8(6); ETH_Write8(15);
 11399  006434  0E37               	movlw	55
 11400  006436  EC70  F043         	call	_ETH_Write8
 11401  00643A  0E04               	movlw	4
 11402  00643C  EC70  F043         	call	_ETH_Write8
 11403  006440  0E01               	movlw	1
 11404  006442  EC70  F043         	call	_ETH_Write8
 11405  006446  0E03               	movlw	3
 11406  006448  EC70  F043         	call	_ETH_Write8
 11407  00644C  0E06               	movlw	6
 11408  00644E  EC70  F043         	call	_ETH_Write8
 11409  006452  0E0F               	movlw	15
 11410  006454  EC70  F043         	call	_ETH_Write8
 11411                           
 11412                           ;dhcp_client.c: 116: ETH_Write8(57); ETH_Write8(2); ETH_Write16(512);
 11413  006458  0E39               	movlw	57
 11414  00645A  EC70  F043         	call	_ETH_Write8
 11415  00645E  0E02               	movlw	2
 11416  006460  EC70  F043         	call	_ETH_Write8
 11417  006464  0E02               	movlw	2
 11418  006466  6E04               	movwf	ETH_Write16@data+1,c
 11419  006468  6A03               	clrf	ETH_Write16@data,c
 11420  00646A  ECDA  F042         	call	_ETH_Write16	;wreg free
 11421                           
 11422                           ;dhcp_client.c: 117: ETH_Write8(12); ETH_Write8(20); ETH_WriteBlock((char *)dhcpName,20)
      +                          ;
 11423  00646E  0E0C               	movlw	12
 11424  006470  EC70  F043         	call	_ETH_Write8
 11425  006474  0E14               	movlw	20
 11426  006476  EC70  F043         	call	_ETH_Write8
 11427  00647A  0E13               	movlw	low _dhcpName
 11428  00647C  6E03               	movwf	ETH_WriteBlock@data,c
 11429  00647E  5003               	movf	ETH_WriteBlock@data,w,c
 11430  006480  A4D8               	btfss	status,2,c
 11431  006482  0E10               	movlw	high __smallconst
 11432  006484  6E04               	movwf	ETH_WriteBlock@data+1,c
 11433  006486  6A06               	clrf	ETH_WriteBlock@len+1,c
 11434  006488  0E14               	movlw	20
 11435  00648A  6E05               	movwf	ETH_WriteBlock@len,c
 11436  00648C  EC02  F03E         	call	_ETH_WriteBlock	;wreg free
 11437                           
 11438                           ;dhcp_client.c: 119: ETH_Write8(61); ETH_Write8(7); ETH_Write8(1); ETH_WriteBlock((char 
      +                          *)&ethMAC,6);
 11439  006490  0E3D               	movlw	61
 11440  006492  EC70  F043         	call	_ETH_Write8
 11441  006496  0E07               	movlw	7
 11442  006498  EC70  F043         	call	_ETH_Write8
 11443  00649C  0E01               	movlw	1
 11444  00649E  EC70  F043         	call	_ETH_Write8
 11445  0064A2  0E71               	movlw	low DHCP_Request@ethMAC
 11446  0064A4  6E03               	movwf	ETH_WriteBlock@data,c
 11447  0064A6  6A04               	clrf	ETH_WriteBlock@data+1,c
 11448  0064A8  6A06               	clrf	ETH_WriteBlock@len+1,c
 11449  0064AA  0E06               	movlw	6
 11450  0064AC  6E05               	movwf	ETH_WriteBlock@len,c
 11451  0064AE  EC02  F03E         	call	_ETH_WriteBlock	;wreg free
 11452                           
 11453                           ;dhcp_client.c: 120: ETH_Write8(255);
 11454  0064B2  0EFF               	movlw	255
 11455  0064B4  EC70  F043         	call	_ETH_Write8
 11456                           
 11457                           ;dhcp_client.c: 122: ETH_Write8(0);
 11458  0064B8  0E00               	movlw	0
 11459  0064BA  EC70  F043         	call	_ETH_Write8
 11460                           
 11461                           ;dhcp_client.c: 124: UDP_Send();
 11462  0064BE  EC3F  F039         	call	_UDP_Send	;wreg free
 11463                           
 11464                           ; BSR set to: 1
 11465                           ;dhcp_client.c: 125: if (type == DHCP_DISCOVER)
 11466  0064C2  0100               	movlb	0	; () banked
 11467  0064C4  0570               	decf	DHCP_Request@type& (0+255),w,b
 11468  0064C6  A4D8               	btfss	status,2,c
 11469  0064C8  0012               	return	
 11470                           
 11471                           ; BSR set to: 0
 11472                           ;dhcp_client.c: 126: clientState=SELECTING;
 11473  0064CA  0E03               	movlw	3
 11474  0064CC  6E5D               	movwf	_clientState,c
 11475                           
 11476                           ; BSR set to: 0
 11477  0064CE  0C03               	retlw	3	;funcret
 11478  0064D0                     __end_of_DHCP_Request:
 11479                           	opt stack 0
 11480                           tosu	equ	0xFFF
 11481                           tosh	equ	0xFFE
 11482                           tosl	equ	0xFFD
 11483                           pclath	equ	0xFFA
 11484                           tblptru	equ	0xFF8
 11485                           tblptrh	equ	0xFF7
 11486                           tblptrl	equ	0xFF6
 11487                           tablat	equ	0xFF5
 11488                           prodh	equ	0xFF4
 11489                           prodl	equ	0xFF3
 11490                           intcon	equ	0xFF2
 11491                           intcon2	equ	0xFF1
 11492                           indf0	equ	0xFEF
 11493                           postinc0	equ	0xFEE
 11494                           fsr0h	equ	0xFEA
 11495                           fsr0l	equ	0xFE9
 11496                           wreg	equ	0xFE8
 11497                           postinc1	equ	0xFE6
 11498                           plusw1	equ	0xFE3
 11499                           fsr1h	equ	0xFE2
 11500                           fsr1l	equ	0xFE1
 11501                           indf2	equ	0xFDF
 11502                           postinc2	equ	0xFDE
 11503                           postdec2	equ	0xFDD
 11504                           plusw2	equ	0xFDB
 11505                           fsr2h	equ	0xFDA
 11506                           fsr2l	equ	0xFD9
 11507                           status	equ	0xFD8
 11508                           
 11509 ;; *************** function _UDP_Start *****************
 11510 ;; Defined at:
 11511 ;;		line 71 in file "../../TCPIP Library/source/udpv4.c"
 11512 ;; Parameters:    Size  Location     Type
 11513 ;;  destIP          4    7[BANK0 ] unsigned long 
 11514 ;;  srcPort         2   11[BANK0 ] unsigned int 
 11515 ;;  dstPort         2   13[BANK0 ] unsigned int 
 11516 ;; Auto vars:     Size  Location     Type
 11517 ;;  ret             1   87[COMRAM] enum E367
 11518 ;; Return value:  Size  Location     Type
 11519 ;;                  1    wreg      enum E449
 11520 ;; Registers used:
 11521 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11522 ;; Tracked objects:
 11523 ;;		On entry : F/0
 11524 ;;		On exit  : 0/0
 11525 ;;		Unchanged: 0/0
 11526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11527 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11528 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11530 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11531 ;;Total ram usage:        9 bytes
 11532 ;; Hardware stack levels used:    1
 11533 ;; Hardware stack levels required when called:    9
 11534 ;; This function calls:
 11535 ;;		_ETH_ResetByteCount
 11536 ;;		_ETH_Write16
 11537 ;;		_IPv4_Start
 11538 ;; This function is called by:
 11539 ;;		_DHCP_Request
 11540 ;; This function uses a non-reentrant model
 11541 ;;
 11542                           
 11543                           	psect	text53
 11544  007DFC                     __ptext53:
 11545                           	opt stack 0
 11546  007DFC                     _UDP_Start:
 11547                           	opt stack 15
 11548                           
 11549                           ; BSR set to: 0
 11550                           ;udpv4.c: 77: ret = IPv4_Start(destIP,UDP);
 11551                           
 11552                           ; BSR set to: 0
 11553                           
 11554                           ; BSR set to: 0
 11555                           ;incstack = 0
 11556  007DFC  C067  F04B         	movff	UDP_Start@destIP,IPv4_Start@destAddress
 11557  007E00  C068  F04C         	movff	UDP_Start@destIP+1,IPv4_Start@destAddress+1
 11558  007E04  C069  F04D         	movff	UDP_Start@destIP+2,IPv4_Start@destAddress+2
 11559  007E08  C06A  F04E         	movff	UDP_Start@destIP+3,IPv4_Start@destAddress+3
 11560  007E0C  0E11               	movlw	17
 11561  007E0E  6E4F               	movwf	IPv4_Start@protocol,c
 11562  007E10  EC0F  F034         	call	_IPv4_Start	;wreg free
 11563  007E14  6E58               	movwf	UDP_Start@ret,c
 11564                           
 11565                           ; BSR set to: 0
 11566                           ;udpv4.c: 78: if(ret == SUCCESS)
 11567  007E16  0458               	decf	UDP_Start@ret,w,c
 11568  007E18  E116               	bnz	l8017
 11569                           
 11570                           ; BSR set to: 0
 11571                           ;udpv4.c: 79: {
 11572                           ;udpv4.c: 81: ETH_ResetByteCount();
 11573  007E1A  ECBC  F043         	call	_ETH_ResetByteCount	;wreg free
 11574                           
 11575                           ;udpv4.c: 84: ETH_Write16(srcPort);
 11576  007E1E  C06B  F003         	movff	UDP_Start@srcPort,ETH_Write16@data
 11577  007E22  C06C  F004         	movff	UDP_Start@srcPort+1,ETH_Write16@data+1
 11578  007E26  ECDA  F042         	call	_ETH_Write16	;wreg free
 11579                           
 11580                           ;udpv4.c: 87: ETH_Write16(dstPort);
 11581  007E2A  C06D  F003         	movff	UDP_Start@dstPort,ETH_Write16@data
 11582  007E2E  C06E  F004         	movff	UDP_Start@dstPort+1,ETH_Write16@data+1
 11583  007E32  ECDA  F042         	call	_ETH_Write16	;wreg free
 11584                           
 11585                           ;udpv4.c: 90: ETH_Write16(0);
 11586  007E36  6A04               	clrf	ETH_Write16@data+1,c
 11587  007E38  6A03               	clrf	ETH_Write16@data,c
 11588  007E3A  ECDA  F042         	call	_ETH_Write16	;wreg free
 11589                           
 11590                           ;udpv4.c: 93: ETH_Write16(0);
 11591  007E3E  6A04               	clrf	ETH_Write16@data+1,c
 11592  007E40  6A03               	clrf	ETH_Write16@data,c
 11593  007E42  ECDA  F042         	call	_ETH_Write16	;wreg free
 11594  007E46                     l8017:
 11595                           
 11596                           ;udpv4.c: 95: }
 11597                           ;udpv4.c: 96: return ret;
 11598  007E46  5058               	movf	UDP_Start@ret,w,c
 11599  007E48  0012               	return		;funcret
 11600  007E4A                     __end_of_UDP_Start:
 11601                           	opt stack 0
 11602                           tosu	equ	0xFFF
 11603                           tosh	equ	0xFFE
 11604                           tosl	equ	0xFFD
 11605                           pclath	equ	0xFFA
 11606                           tblptru	equ	0xFF8
 11607                           tblptrh	equ	0xFF7
 11608                           tblptrl	equ	0xFF6
 11609                           tablat	equ	0xFF5
 11610                           prodh	equ	0xFF4
 11611                           prodl	equ	0xFF3
 11612                           intcon	equ	0xFF2
 11613                           intcon2	equ	0xFF1
 11614                           indf0	equ	0xFEF
 11615                           postinc0	equ	0xFEE
 11616                           fsr0h	equ	0xFEA
 11617                           fsr0l	equ	0xFE9
 11618                           wreg	equ	0xFE8
 11619                           postinc1	equ	0xFE6
 11620                           plusw1	equ	0xFE3
 11621                           fsr1h	equ	0xFE2
 11622                           fsr1l	equ	0xFE1
 11623                           indf2	equ	0xFDF
 11624                           postinc2	equ	0xFDE
 11625                           postdec2	equ	0xFDD
 11626                           plusw2	equ	0xFDB
 11627                           fsr2h	equ	0xFDA
 11628                           fsr2l	equ	0xFD9
 11629                           status	equ	0xFD8
 11630                           
 11631 ;; *************** function _ETH_ResetByteCount *****************
 11632 ;; Defined at:
 11633 ;;		line 597 in file "../../TCPIP Library/ethernet_drivers/encX24J600_driver.c"
 11634 ;; Parameters:    Size  Location     Type
 11635 ;;		None
 11636 ;; Auto vars:     Size  Location     Type
 11637 ;;		None
 11638 ;; Return value:  Size  Location     Type
 11639 ;;                  1    wreg      void 
 11640 ;; Registers used:
 11641 ;;		wreg, status,2, status,0, cstack
 11642 ;; Tracked objects:
 11643 ;;		On entry : F/0
 11644 ;;		On exit  : 0/0
 11645 ;;		Unchanged: 0/0
 11646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11651 ;;Total ram usage:        0 bytes
 11652 ;; Hardware stack levels used:    1
 11653 ;; Hardware stack levels required when called:    6
 11654 ;; This function calls:
 11655 ;;		_ENCx24_Read
 11656 ;; This function is called by:
 11657 ;;		_UDP_Start
 11658 ;; This function uses a non-reentrant model
 11659 ;;
 11660                           
 11661                           	psect	text54
 11662  008778                     __ptext54:
 11663                           	opt stack 0
 11664  008778                     _ETH_ResetByteCount:
 11665                           	opt stack 17
 11666                           
 11667                           ; BSR set to: 0
 11668                           ;encX24J600_driver.c: 599: ethData.saveWRPT = ENCx24_Read(XJ600_EGPWRPTL);
 11669                           
 11670                           ;incstack = 0
 11671  008778  0E88               	movlw	136
 11672  00877A  EC06  F040         	call	_ENCx24_Read
 11673  00877E  C005  F188         	movff	?_ENCx24_Read,_ethData+5	;volatile
 11674  008782  C006  F189         	movff	?_ENCx24_Read+1,_ethData+6	;volatile
 11675  008786  0012               	return		;funcret
 11676  008788                     __end_of_ETH_ResetByteCount:
 11677                           	opt stack 0
 11678                           tosu	equ	0xFFF
 11679                           tosh	equ	0xFFE
 11680                           tosl	equ	0xFFD
 11681                           pclath	equ	0xFFA
 11682                           tblptru	equ	0xFF8
 11683                           tblptrh	equ	0xFF7
 11684                           tblptrl	equ	0xFF6
 11685                           tablat	equ	0xFF5
 11686                           prodh	equ	0xFF4
 11687                           prodl	equ	0xFF3
 11688                           intcon	equ	0xFF2
 11689                           intcon2	equ	0xFF1
 11690                           indf0	equ	0xFEF
 11691                           postinc0	equ	0xFEE
 11692                           fsr0h	equ	0xFEA
 11693                           fsr0l	equ	0xFE9
 11694                           wreg	equ	0xFE8
 11695                           postinc1	equ	0xFE6
 11696                           plusw1	equ	0xFE3
 11697                           fsr1h	equ	0xFE2
 11698                           fsr1l	equ	0xFE1
 11699                           indf2	equ	0xFDF
 11700                           postinc2	equ	0xFDE
 11701                           postdec2	equ	0xFDD
 11702                           plusw2	equ	0xFDB
 11703                           fsr2h	equ	0xFDA
 11704                           fsr2l	equ	0xFD9
 11705                           status	equ	0xFD8
 11706                           
 11707 ;; *************** function _UDP_Send *****************
 11708 ;; Defined at:
 11709 ;;		line 99 in file "../../TCPIP Library/source/udpv4.c"
 11710 ;; Parameters:    Size  Location     Type
 11711 ;;		None
 11712 ;; Auto vars:     Size  Location     Type
 11713 ;;  udpLength       2   46[COMRAM] unsigned int 
 11714 ;;  cksm            2   44[COMRAM] unsigned int 
 11715 ;;  ret             1    0        enum E367
 11716 ;; Return value:  Size  Location     Type
 11717 ;;                  1    wreg      enum E449
 11718 ;; Registers used:
 11719 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11720 ;; Tracked objects:
 11721 ;;		On entry : 0/0
 11722 ;;		On exit  : F/1
 11723 ;;		Unchanged: 0/0
 11724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11726 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11727 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11728 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11729 ;;Total ram usage:        9 bytes
 11730 ;; Hardware stack levels used:    1
 11731 ;; Hardware stack levels required when called:    9
 11732 ;; This function calls:
 11733 ;;		_ETH_GetByteCount
 11734 ;;		_ETH_Insert
 11735 ;;		_ETH_TxComputeChecksum
 11736 ;;		_IPV4_Send
 11737 ;; This function is called by:
 11738 ;;		_DHCP_Request
 11739 ;; This function uses a non-reentrant model
 11740 ;;
 11741                           
 11742                           	psect	text55
 11743  00727E                     __ptext55:
 11744                           	opt stack 0
 11745  00727E                     _UDP_Send:
 11746                           	opt stack 15
 11747                           
 11748                           ;udpv4.c: 105: udpLength = ETH_GetByteCount();
 11749                           
 11750                           ;incstack = 0
 11751  00727E  EC2C  F043         	call	_ETH_GetByteCount	;wreg free
 11752  007282  C00B  F02F         	movff	?_ETH_GetByteCount,UDP_Send@udpLength
 11753  007286  C00C  F030         	movff	?_ETH_GetByteCount+1,UDP_Send@udpLength+1
 11754                           
 11755                           ; BSR set to: 1
 11756                           ;udpv4.c: 106: udpLength = ((((uint16_t)udpLength & (uint16_t)0xFF00) >> 8) | (((uint16_
      +                          t)udpLength & (uint16_t)0x00FF) << 8));
 11757  00728A  502F               	movf	UDP_Send@udpLength,w,c
 11758  00728C  6E29               	movwf	(??_UDP_Send+1)& (0+255),c
 11759  00728E  6A28               	clrf	??_UDP_Send& (0+255),c
 11760  007290  5030               	movf	UDP_Send@udpLength+1,w,c
 11761  007292  6E2A               	movwf	(??_UDP_Send+2)& (0+255),c
 11762  007294  6A2B               	clrf	(??_UDP_Send+3)& (0+255),c
 11763  007296  5028               	movf	??_UDP_Send,w,c
 11764  007298  102A               	iorwf	??_UDP_Send+2,w,c
 11765  00729A  6E2F               	movwf	UDP_Send@udpLength,c
 11766  00729C  5029               	movf	??_UDP_Send+1,w,c
 11767  00729E  102B               	iorwf	??_UDP_Send+3,w,c
 11768  0072A0  6E30               	movwf	UDP_Send@udpLength+1,c
 11769                           
 11770                           ; BSR set to: 1
 11771                           ;udpv4.c: 107: ETH_Insert((char *)&udpLength, 2, sizeof(ethernetFrame_t) + sizeof(ipv4He
      +                          ader_t) + (size_t)(((char*)&((udpHeader_t *)1)->length)-1));
 11772  0072A2  0E2F               	movlw	low UDP_Send@udpLength
 11773  0072A4  6E0B               	movwf	ETH_Insert@data,c
 11774  0072A6  6A0D               	clrf	ETH_Insert@len+1,c
 11775  0072A8  0E02               	movlw	2
 11776  0072AA  6E0C               	movwf	ETH_Insert@len,c
 11777  0072AC  6A0F               	clrf	ETH_Insert@offset+1,c
 11778  0072AE  0E26               	movlw	38
 11779  0072B0  6E0E               	movwf	ETH_Insert@offset,c
 11780  0072B2  ECAD  F03E         	call	_ETH_Insert	;wreg free
 11781                           
 11782                           ;udpv4.c: 108: udpLength = ((((uint16_t)udpLength & (uint16_t)0xFF00) >> 8) | (((uint16_
      +                          t)udpLength & (uint16_t)0x00FF) << 8));
 11783  0072B6  502F               	movf	UDP_Send@udpLength,w,c
 11784  0072B8  6E29               	movwf	(??_UDP_Send+1)& (0+255),c
 11785  0072BA  6A28               	clrf	??_UDP_Send& (0+255),c
 11786  0072BC  5030               	movf	UDP_Send@udpLength+1,w,c
 11787  0072BE  6E2A               	movwf	(??_UDP_Send+2)& (0+255),c
 11788  0072C0  6A2B               	clrf	(??_UDP_Send+3)& (0+255),c
 11789  0072C2  5028               	movf	??_UDP_Send,w,c
 11790  0072C4  102A               	iorwf	??_UDP_Send+2,w,c
 11791  0072C6  6E2F               	movwf	UDP_Send@udpLength,c
 11792  0072C8  5029               	movf	??_UDP_Send+1,w,c
 11793  0072CA  102B               	iorwf	??_UDP_Send+3,w,c
 11794  0072CC  6E30               	movwf	UDP_Send@udpLength+1,c
 11795                           
 11796                           ;udpv4.c: 111: cksm = udpLength + UDP;
 11797  0072CE  0E11               	movlw	17
 11798  0072D0  242F               	addwf	UDP_Send@udpLength,w,c
 11799  0072D2  6E2D               	movwf	UDP_Send@cksm,c
 11800  0072D4  0E00               	movlw	0
 11801  0072D6  2030               	addwfc	UDP_Send@udpLength+1,w,c
 11802  0072D8  6E2E               	movwf	UDP_Send@cksm+1,c
 11803                           
 11804                           ;udpv4.c: 112: cksm = ETH_TxComputeChecksum(sizeof(ethernetFrame_t) + sizeof(ipv4Header_
      +                          t) - 8, udpLength + 8, cksm);
 11805  0072DA  6A0E               	clrf	ETH_TxComputeChecksum@position+1,c
 11806  0072DC  0E1A               	movlw	26
 11807  0072DE  6E0D               	movwf	ETH_TxComputeChecksum@position,c
 11808  0072E0  0E08               	movlw	8
 11809  0072E2  242F               	addwf	UDP_Send@udpLength,w,c
 11810  0072E4  6E0F               	movwf	ETH_TxComputeChecksum@length,c
 11811  0072E6  0E00               	movlw	0
 11812  0072E8  2030               	addwfc	UDP_Send@udpLength+1,w,c
 11813  0072EA  6E10               	movwf	ETH_TxComputeChecksum@length+1,c
 11814  0072EC  C02D  F011         	movff	UDP_Send@cksm,ETH_TxComputeChecksum@seed
 11815  0072F0  C02E  F012         	movff	UDP_Send@cksm+1,ETH_TxComputeChecksum@seed+1
 11816  0072F4  EC92  F038         	call	_ETH_TxComputeChecksum	;wreg free
 11817  0072F8  C00D  F02D         	movff	?_ETH_TxComputeChecksum,UDP_Send@cksm
 11818  0072FC  C00E  F02E         	movff	?_ETH_TxComputeChecksum+1,UDP_Send@cksm+1
 11819                           
 11820                           ;udpv4.c: 115: if (cksm == 0){
 11821  007300  502D               	movf	UDP_Send@cksm,w,c
 11822  007302  102E               	iorwf	UDP_Send@cksm+1,w,c
 11823  007304  E102               	bnz	l8045
 11824                           
 11825                           ;udpv4.c: 116: cksm = 0xffff;
 11826  007306  682D               	setf	UDP_Send@cksm,c
 11827  007308  682E               	setf	UDP_Send@cksm+1,c
 11828  00730A                     l8045:
 11829                           
 11830                           ;udpv4.c: 117: }
 11831                           ;udpv4.c: 119: ETH_Insert((char *)&cksm, 2, sizeof(ethernetFrame_t) + sizeof(ipv4Header_
      +                          t) + (size_t)(((char*)&((udpHeader_t *)1)->checksum)-1));
 11832  00730A  0E2D               	movlw	low UDP_Send@cksm
 11833  00730C  6E0B               	movwf	ETH_Insert@data,c
 11834  00730E  6A0D               	clrf	ETH_Insert@len+1,c
 11835  007310  0E02               	movlw	2
 11836  007312  6E0C               	movwf	ETH_Insert@len,c
 11837  007314  6A0F               	clrf	ETH_Insert@offset+1,c
 11838  007316  0E28               	movlw	40
 11839  007318  6E0E               	movwf	ETH_Insert@offset,c
 11840  00731A  ECAD  F03E         	call	_ETH_Insert	;wreg free
 11841  00731E  C02F  F01D         	movff	UDP_Send@udpLength,IPV4_Send@payloadLength
 11842  007322  C030  F01E         	movff	UDP_Send@udpLength+1,IPV4_Send@payloadLength+1
 11843  007326  EF2E  F03D         	goto	_IPV4_Send	;wreg free
 11844  00732A                     __end_of_UDP_Send:
 11845                           	opt stack 0
 11846                           tosu	equ	0xFFF
 11847                           tosh	equ	0xFFE
 11848                           tosl	equ	0xFFD
 11849                           pclath	equ	0xFFA
 11850                           tblptru	equ	0xFF8
 11851                           tblptrh	equ	0xFF7
 11852                           tblptrl	equ	0xFF6
 11853                           tablat	equ	0xFF5
 11854                           prodh	equ	0xFF4
 11855                           prodl	equ	0xFF3
 11856                           intcon	equ	0xFF2
 11857                           intcon2	equ	0xFF1
 11858                           indf0	equ	0xFEF
 11859                           postinc0	equ	0xFEE
 11860                           fsr0h	equ	0xFEA
 11861                           fsr0l	equ	0xFE9
 11862                           wreg	equ	0xFE8
 11863                           postinc1	equ	0xFE6
 11864                           plusw1	equ	0xFE3
 11865                           fsr1h	equ	0xFE2
 11866                           fsr1l	equ	0xFE1
 11867                           indf2	equ	0xFDF
 11868                           postinc2	equ	0xFDE
 11869                           postdec2	equ	0xFDD
 11870                           plusw2	equ	0xFDB
 11871                           fsr2h	equ	0xFDA
 11872                           fsr2l	equ	0xFD9
 11873                           status	equ	0xFD8
 11874                           
 11875 ;; *************** function _ETH_GetByteCount *****************
 11876 ;; Defined at:
 11877 ;;		line 602 in file "../../TCPIP Library/ethernet_drivers/encX24J600_driver.c"
 11878 ;; Parameters:    Size  Location     Type
 11879 ;;		None
 11880 ;; Auto vars:     Size  Location     Type
 11881 ;;  wPtr            2   12[COMRAM] unsigned int 
 11882 ;; Return value:  Size  Location     Type
 11883 ;;                  2   10[COMRAM] unsigned int 
 11884 ;; Registers used:
 11885 ;;		wreg, status,2, status,0, cstack
 11886 ;; Tracked objects:
 11887 ;;		On entry : 0/0
 11888 ;;		On exit  : F/1
 11889 ;;		Unchanged: 0/0
 11890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11891 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11892 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11894 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11895 ;;Total ram usage:        4 bytes
 11896 ;; Hardware stack levels used:    1
 11897 ;; Hardware stack levels required when called:    6
 11898 ;; This function calls:
 11899 ;;		_ENCx24_Read
 11900 ;; This function is called by:
 11901 ;;		_UDP_Send
 11902 ;; This function uses a non-reentrant model
 11903 ;;
 11904                           
 11905                           	psect	text56
 11906  008658                     __ptext56:
 11907                           	opt stack 0
 11908  008658                     _ETH_GetByteCount:
 11909                           	opt stack 17
 11910                           
 11911                           ;encX24J600_driver.c: 604: uint16_t wPtr;
 11912                           ;encX24J600_driver.c: 606: wPtr = ENCx24_Read(XJ600_EGPWRPTL);
 11913                           
 11914                           ; BSR set to: 1
 11915                           ;incstack = 0
 11916  008658  0E88               	movlw	136
 11917  00865A  EC06  F040         	call	_ENCx24_Read
 11918  00865E  C005  F00D         	movff	?_ENCx24_Read,ETH_GetByteCount@wPtr
 11919  008662  C006  F00E         	movff	?_ENCx24_Read+1,ETH_GetByteCount@wPtr+1
 11920                           
 11921                           ;encX24J600_driver.c: 608: return (wPtr - ethData.saveWRPT);
 11922  008666  0101               	movlb	1	; () banked
 11923  008668  5188               	movf	(_ethData+5)& (0+255),w,b	;volatile
 11924  00866A  5C0D               	subwf	ETH_GetByteCount@wPtr,w,c
 11925  00866C  6E0B               	movwf	?_ETH_GetByteCount,c
 11926  00866E  5189               	movf	(_ethData+6)& (0+255),w,b	;volatile
 11927  008670  580E               	subwfb	ETH_GetByteCount@wPtr+1,w,c
 11928  008672  6E0C               	movwf	?_ETH_GetByteCount+1,c
 11929                           
 11930                           ; BSR set to: 1
 11931  008674  0012               	return		;funcret
 11932  008676                     __end_of_ETH_GetByteCount:
 11933                           	opt stack 0
 11934                           tosu	equ	0xFFF
 11935                           tosh	equ	0xFFE
 11936                           tosl	equ	0xFFD
 11937                           pclath	equ	0xFFA
 11938                           tblptru	equ	0xFF8
 11939                           tblptrh	equ	0xFF7
 11940                           tblptrl	equ	0xFF6
 11941                           tablat	equ	0xFF5
 11942                           prodh	equ	0xFF4
 11943                           prodl	equ	0xFF3
 11944                           intcon	equ	0xFF2
 11945                           intcon2	equ	0xFF1
 11946                           indf0	equ	0xFEF
 11947                           postinc0	equ	0xFEE
 11948                           fsr0h	equ	0xFEA
 11949                           fsr0l	equ	0xFE9
 11950                           wreg	equ	0xFE8
 11951                           postinc1	equ	0xFE6
 11952                           plusw1	equ	0xFE3
 11953                           fsr1h	equ	0xFE2
 11954                           fsr1l	equ	0xFE1
 11955                           indf2	equ	0xFDF
 11956                           postinc2	equ	0xFDE
 11957                           postdec2	equ	0xFDD
 11958                           plusw2	equ	0xFDB
 11959                           fsr2h	equ	0xFDA
 11960                           fsr2l	equ	0xFD9
 11961                           status	equ	0xFD8
 11962                           
 11963 ;; *************** function _DHCP_WriteZeros *****************
 11964 ;; Defined at:
 11965 ;;		line 277 in file "../../TCPIP Library/source/dhcp_client.c"
 11966 ;; Parameters:    Size  Location     Type
 11967 ;;  length          2    3[COMRAM] unsigned int 
 11968 ;; Auto vars:     Size  Location     Type
 11969 ;;		None
 11970 ;; Return value:  Size  Location     Type
 11971 ;;                  1    wreg      void 
 11972 ;; Registers used:
 11973 ;;		wreg, status,2, status,0, cstack
 11974 ;; Tracked objects:
 11975 ;;		On entry : 0/0
 11976 ;;		On exit  : 0/0
 11977 ;;		Unchanged: 0/0
 11978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11979 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11982 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11983 ;;Total ram usage:        2 bytes
 11984 ;; Hardware stack levels used:    1
 11985 ;; Hardware stack levels required when called:    5
 11986 ;; This function calls:
 11987 ;;		_ETH_Write8
 11988 ;; This function is called by:
 11989 ;;		_DHCP_Request
 11990 ;; This function uses a non-reentrant model
 11991 ;;
 11992                           
 11993                           	psect	text57
 11994  008712                     __ptext57:
 11995                           	opt stack 0
 11996  008712                     _DHCP_WriteZeros:
 11997                           	opt stack 19
 11998                           
 11999                           ;dhcp_client.c: 279: while(length--)
 12000                           
 12001                           ; BSR set to: 1
 12002                           ;incstack = 0
 12003  008712  D003               	goto	l8025
 12004  008714                     l8023:
 12005                           
 12006                           ;dhcp_client.c: 280: {
 12007                           ;dhcp_client.c: 281: ETH_Write8(0);
 12008  008714  0E00               	movlw	0
 12009  008716  EC70  F043         	call	_ETH_Write8
 12010  00871A                     l8025:
 12011  00871A  0604               	decf	DHCP_WriteZeros@length,f,c
 12012  00871C  A0D8               	btfss	status,0,c
 12013  00871E  0605               	decf	DHCP_WriteZeros@length+1,f,c
 12014  008720  2804               	incf	DHCP_WriteZeros@length,w,c
 12015  008722  E1F8               	bnz	l8023
 12016  008724  2805               	incf	DHCP_WriteZeros@length+1,w,c
 12017  008726  E1F6               	bnz	l8023
 12018  008728  0012               	return		;funcret
 12019  00872A                     __end_of_DHCP_WriteZeros:
 12020                           	opt stack 0
 12021                           tosu	equ	0xFFF
 12022                           tosh	equ	0xFFE
 12023                           tosl	equ	0xFFD
 12024                           pclath	equ	0xFFA
 12025                           tblptru	equ	0xFF8
 12026                           tblptrh	equ	0xFF7
 12027                           tblptrl	equ	0xFF6
 12028                           tablat	equ	0xFF5
 12029                           prodh	equ	0xFF4
 12030                           prodl	equ	0xFF3
 12031                           intcon	equ	0xFF2
 12032                           intcon2	equ	0xFF1
 12033                           indf0	equ	0xFEF
 12034                           postinc0	equ	0xFEE
 12035                           fsr0h	equ	0xFEA
 12036                           fsr0l	equ	0xFE9
 12037                           wreg	equ	0xFE8
 12038                           postinc1	equ	0xFE6
 12039                           plusw1	equ	0xFE3
 12040                           fsr1h	equ	0xFE2
 12041                           fsr1l	equ	0xFE1
 12042                           indf2	equ	0xFDF
 12043                           postinc2	equ	0xFDE
 12044                           postdec2	equ	0xFDD
 12045                           plusw2	equ	0xFDB
 12046                           fsr2h	equ	0xFDA
 12047                           fsr2l	equ	0xFD9
 12048                           status	equ	0xFD8
 12049                           
 12050 ;; *************** function _ARPV4_Update *****************
 12051 ;; Defined at:
 12052 ;;		line 179 in file "../../TCPIP Library/source/arpv4.c"
 12053 ;; Parameters:    Size  Location     Type
 12054 ;;		None
 12055 ;; Auto vars:     Size  Location     Type
 12056 ;;  x               1    3[COMRAM] unsigned char 
 12057 ;;  entryPointer    2    1[COMRAM] PTR struct .
 12058 ;;		 -> arpMap(104), 
 12059 ;; Return value:  Size  Location     Type
 12060 ;;                  1    wreg      void 
 12061 ;; Registers used:
 12062 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12063 ;; Tracked objects:
 12064 ;;		On entry : F/1
 12065 ;;		On exit  : F/1
 12066 ;;		Unchanged: F/0
 12067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12069 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12071 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12072 ;;Total ram usage:        3 bytes
 12073 ;; Hardware stack levels used:    1
 12074 ;; Hardware stack levels required when called:    3
 12075 ;; This function calls:
 12076 ;;		Nothing
 12077 ;; This function is called by:
 12078 ;;		_Network_Manage
 12079 ;; This function uses a non-reentrant model
 12080 ;;
 12081                           
 12082                           	psect	text58
 12083  008480                     __ptext58:
 12084                           	opt stack 0
 12085  008480                     _ARPV4_Update:
 12086                           	opt stack 26
 12087                           
 12088                           ; BSR set to: 1
 12089                           ;arpv4.c: 181: arpMap_t *entryPointer = arpMap;
 12090                           
 12091                           ;incstack = 0
 12092  008480  0E00               	movlw	low _arpMap
 12093  008482  6E02               	movwf	ARPV4_Update@entryPointer,c
 12094  008484  0E03               	movlw	high _arpMap
 12095  008486  6E03               	movwf	ARPV4_Update@entryPointer+1,c
 12096                           
 12097                           ; BSR set to: 1
 12098                           ;arpv4.c: 182: for(uint8_t x=0; x < 8; x++)
 12099  008488  6A04               	clrf	ARPV4_Update@x,c
 12100  00848A                     l9677:
 12101                           
 12102                           ; BSR set to: 1
 12103                           ;arpv4.c: 183: {
 12104                           ;arpv4.c: 184: entryPointer->age ++;
 12105  00848A  EE20 F00C          	lfsr	2,12
 12106  00848E  5002               	movf	ARPV4_Update@entryPointer,w,c
 12107  008490  26D9               	addwf	fsr2l,f,c
 12108  008492  5003               	movf	ARPV4_Update@entryPointer+1,w,c
 12109  008494  22DA               	addwfc	fsr2h,f,c
 12110  008496  2ADF               	incf	indf2,f,c
 12111                           
 12112                           ; BSR set to: 1
 12113                           ;arpv4.c: 185: entryPointer ++;
 12114  008498  0E0D               	movlw	13
 12115  00849A  2602               	addwf	ARPV4_Update@entryPointer,f,c
 12116  00849C  0E00               	movlw	0
 12117  00849E  2203               	addwfc	ARPV4_Update@entryPointer+1,f,c
 12118                           
 12119                           ; BSR set to: 1
 12120  0084A0  2A04               	incf	ARPV4_Update@x,f,c
 12121                           
 12122                           ; BSR set to: 1
 12123  0084A2  0E07               	movlw	7
 12124  0084A4  6404               	cpfsgt	ARPV4_Update@x,c
 12125  0084A6  D7F1               	goto	l9677
 12126  0084A8  0C07               	retlw	7
 12127  0084AA                     __end_of_ARPV4_Update:
 12128                           	opt stack 0
 12129                           tosu	equ	0xFFF
 12130                           tosh	equ	0xFFE
 12131                           tosl	equ	0xFFD
 12132                           pclath	equ	0xFFA
 12133                           tblptru	equ	0xFF8
 12134                           tblptrh	equ	0xFF7
 12135                           tblptrl	equ	0xFF6
 12136                           tablat	equ	0xFF5
 12137                           prodh	equ	0xFF4
 12138                           prodl	equ	0xFF3
 12139                           intcon	equ	0xFF2
 12140                           intcon2	equ	0xFF1
 12141                           indf0	equ	0xFEF
 12142                           postinc0	equ	0xFEE
 12143                           fsr0h	equ	0xFEA
 12144                           fsr0l	equ	0xFE9
 12145                           wreg	equ	0xFE8
 12146                           postinc1	equ	0xFE6
 12147                           plusw1	equ	0xFE3
 12148                           fsr1h	equ	0xFE2
 12149                           fsr1l	equ	0xFE1
 12150                           indf2	equ	0xFDF
 12151                           postinc2	equ	0xFDE
 12152                           postdec2	equ	0xFDD
 12153                           plusw2	equ	0xFDB
 12154                           fsr2h	equ	0xFDA
 12155                           fsr2l	equ	0xFD9
 12156                           status	equ	0xFD8
 12157                           
 12158 ;; *************** function _Network_Init *****************
 12159 ;; Defined at:
 12160 ;;		line 65 in file "../../TCPIP Library/source/network.c"
 12161 ;; Parameters:    Size  Location     Type
 12162 ;;		None
 12163 ;; Auto vars:     Size  Location     Type
 12164 ;;		None
 12165 ;; Return value:  Size  Location     Type
 12166 ;;                  1    wreg      void 
 12167 ;; Registers used:
 12168 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12169 ;; Tracked objects:
 12170 ;;		On entry : 0/2
 12171 ;;		On exit  : F/1
 12172 ;;		Unchanged: 0/0
 12173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12178 ;;Total ram usage:        0 bytes
 12179 ;; Hardware stack levels used:    1
 12180 ;; Hardware stack levels required when called:    9
 12181 ;; This function calls:
 12182 ;;		_ARPV4_Init
 12183 ;;		_ETH_Init
 12184 ;;		_IPV4_Init
 12185 ;;		_TCP_Init
 12186 ;;		_time
 12187 ;; This function is called by:
 12188 ;;		_main
 12189 ;; This function uses a non-reentrant model
 12190 ;;
 12191                           
 12192                           	psect	text59
 12193  0083FE                     __ptext59:
 12194                           	opt stack 0
 12195  0083FE                     _Network_Init:
 12196                           	opt stack 21
 12197                           
 12198                           ;network.c: 67: ETH_Init();
 12199                           
 12200                           ; BSR set to: 1
 12201                           ;incstack = 0
 12202  0083FE  EC64  F035         	call	_ETH_Init	;wreg free
 12203                           
 12204                           ;network.c: 68: ARPV4_Init();
 12205  008402  EC63  F043         	call	_ARPV4_Init	;wreg free
 12206                           
 12207                           ;network.c: 69: IPV4_Init();
 12208  008406  ECE5  F043         	call	_IPV4_Init	;wreg free
 12209                           
 12210                           ; BSR set to: 1
 12211                           ;network.c: 70: TCP_Init();
 12212  00840A  EC56  F043         	call	_TCP_Init	;wreg free
 12213                           
 12214                           ; BSR set to: 2
 12215                           ;network.c: 72: time(&arpTimer);
 12216  00840E  0ED0               	movlw	low _arpTimer
 12217  008410  6E02               	movwf	time@t,c
 12218  008412  0E01               	movlw	high _arpTimer
 12219  008414  6E03               	movwf	time@t+1,c
 12220  008416  EC59  F03E         	call	_time	;wreg free
 12221                           
 12222                           ;network.c: 73: arpTimer += 10;
 12223  00841A  0E0A               	movlw	10
 12224  00841C  0101               	movlb	1	; () banked
 12225  00841E  27D0               	addwf	_arpTimer& (0+255),f,b
 12226  008420  0E00               	movlw	0
 12227  008422  23D1               	addwfc	(_arpTimer+1)& (0+255),f,b
 12228  008424  23D2               	addwfc	(_arpTimer+2)& (0+255),f,b
 12229  008426  23D3               	addwfc	(_arpTimer+3)& (0+255),f,b
 12230                           
 12231                           ; BSR set to: 1
 12232  008428  0C00               	retlw	0	;funcret
 12233  00842A                     __end_of_Network_Init:
 12234                           	opt stack 0
 12235                           tosu	equ	0xFFF
 12236                           tosh	equ	0xFFE
 12237                           tosl	equ	0xFFD
 12238                           pclath	equ	0xFFA
 12239                           tblptru	equ	0xFF8
 12240                           tblptrh	equ	0xFF7
 12241                           tblptrl	equ	0xFF6
 12242                           tablat	equ	0xFF5
 12243                           prodh	equ	0xFF4
 12244                           prodl	equ	0xFF3
 12245                           intcon	equ	0xFF2
 12246                           intcon2	equ	0xFF1
 12247                           indf0	equ	0xFEF
 12248                           postinc0	equ	0xFEE
 12249                           fsr0h	equ	0xFEA
 12250                           fsr0l	equ	0xFE9
 12251                           wreg	equ	0xFE8
 12252                           postinc1	equ	0xFE6
 12253                           plusw1	equ	0xFE3
 12254                           fsr1h	equ	0xFE2
 12255                           fsr1l	equ	0xFE1
 12256                           indf2	equ	0xFDF
 12257                           postinc2	equ	0xFDE
 12258                           postdec2	equ	0xFDD
 12259                           plusw2	equ	0xFDB
 12260                           fsr2h	equ	0xFDA
 12261                           fsr2l	equ	0xFD9
 12262                           status	equ	0xFD8
 12263                           
 12264 ;; *************** function _time *****************
 12265 ;; Defined at:
 12266 ;;		line 198 in file "../board_support_package/picdem2_net/rtcc.c"
 12267 ;; Parameters:    Size  Location     Type
 12268 ;;  t               2    1[COMRAM] PTR long 
 12269 ;;		 -> main@t(4), Network_Manage@now(4), arpTimer(4), NULL(0), 
 12270 ;; Auto vars:     Size  Location     Type
 12271 ;;  the_time        4    6[COMRAM] long 
 12272 ;;  gie_val         1    5[COMRAM] unsigned char 
 12273 ;; Return value:  Size  Location     Type
 12274 ;;                  4    1[COMRAM] long 
 12275 ;; Registers used:
 12276 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12277 ;; Tracked objects:
 12278 ;;		On entry : 0/1
 12279 ;;		On exit  : 0/0
 12280 ;;		Unchanged: 0/0
 12281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12282 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12283 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12285 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12286 ;;Total ram usage:        9 bytes
 12287 ;; Hardware stack levels used:    1
 12288 ;; Hardware stack levels required when called:    3
 12289 ;; This function calls:
 12290 ;;		Nothing
 12291 ;; This function is called by:
 12292 ;;		_Network_Init
 12293 ;;		_Network_Manage
 12294 ;;		_SYSLOG_Init
 12295 ;;		_SYSLOG_Write
 12296 ;;		_main
 12297 ;; This function uses a non-reentrant model
 12298 ;;
 12299                           
 12300                           	psect	text60
 12301  007CB2                     __ptext60:
 12302                           	opt stack 0
 12303  007CB2                     _time:
 12304                           	opt stack 27
 12305                           
 12306                           ;rtcc.c: 200: bool gie_val;
 12307                           ;rtcc.c: 201: time_t the_time;
 12308                           ;rtcc.c: 203: gie_val = GIE;
 12309                           
 12310                           ; BSR set to: 1
 12311                           ;incstack = 0
 12312  007CB2  0E00               	movlw	0
 12313  007CB4  BEF2               	btfsc	intcon,7,c	;volatile
 12314  007CB6  0E01               	movlw	1
 12315  007CB8  6E06               	movwf	time@gie_val,c
 12316                           
 12317                           ;rtcc.c: 204: GIE = 0;
 12318  007CBA  9EF2               	bcf	intcon,7,c	;volatile
 12319                           
 12320                           ;rtcc.c: 205: the_time = deviceTime;
 12321  007CBC  C2CC  F007         	movff	_deviceTime,time@the_time	;volatile
 12322  007CC0  C2CD  F008         	movff	_deviceTime+1,time@the_time+1	;volatile
 12323  007CC4  C2CE  F009         	movff	_deviceTime+2,time@the_time+2	;volatile
 12324  007CC8  C2CF  F00A         	movff	_deviceTime+3,time@the_time+3	;volatile
 12325                           
 12326                           ;rtcc.c: 206: GIE = gie_val;
 12327  007CCC  A006               	btfss	time@gie_val,0,c
 12328  007CCE  D002               	goto	u14550
 12329  007CD0  8EF2               	bsf	intcon,7,c	;volatile
 12330  007CD2  D001               	goto	l9549
 12331  007CD4                     u14550:
 12332  007CD4  9EF2               	bcf	intcon,7,c	;volatile
 12333  007CD6                     l9549:
 12334                           
 12335                           ;rtcc.c: 208: if(t)
 12336  007CD6  5002               	movf	time@t,w,c
 12337  007CD8  1003               	iorwf	time@t+1,w,c
 12338  007CDA  E00C               	bz	l9553
 12339                           
 12340                           ;rtcc.c: 209: {
 12341                           ;rtcc.c: 210: *t = the_time;
 12342  007CDC  C002  FFD9         	movff	time@t,fsr2l
 12343  007CE0  C003  FFDA         	movff	time@t+1,fsr2h
 12344  007CE4  C007  FFDE         	movff	time@the_time,postinc2
 12345  007CE8  C008  FFDE         	movff	time@the_time+1,postinc2
 12346  007CEC  C009  FFDE         	movff	time@the_time+2,postinc2
 12347  007CF0  C00A  FFDE         	movff	time@the_time+3,postinc2
 12348  007CF4                     l9553:
 12349                           
 12350                           ;rtcc.c: 211: }
 12351                           ;rtcc.c: 213: return (the_time);
 12352  007CF4  C007  F002         	movff	time@the_time,?_time
 12353  007CF8  C008  F003         	movff	time@the_time+1,?_time+1
 12354  007CFC  C009  F004         	movff	time@the_time+2,?_time+2
 12355  007D00  C00A  F005         	movff	time@the_time+3,?_time+3
 12356  007D04  0012               	return		;funcret
 12357  007D06                     __end_of_time:
 12358                           	opt stack 0
 12359                           tosu	equ	0xFFF
 12360                           tosh	equ	0xFFE
 12361                           tosl	equ	0xFFD
 12362                           pclath	equ	0xFFA
 12363                           tblptru	equ	0xFF8
 12364                           tblptrh	equ	0xFF7
 12365                           tblptrl	equ	0xFF6
 12366                           tablat	equ	0xFF5
 12367                           prodh	equ	0xFF4
 12368                           prodl	equ	0xFF3
 12369                           intcon	equ	0xFF2
 12370                           intcon2	equ	0xFF1
 12371                           indf0	equ	0xFEF
 12372                           postinc0	equ	0xFEE
 12373                           fsr0h	equ	0xFEA
 12374                           fsr0l	equ	0xFE9
 12375                           wreg	equ	0xFE8
 12376                           postinc1	equ	0xFE6
 12377                           plusw1	equ	0xFE3
 12378                           fsr1h	equ	0xFE2
 12379                           fsr1l	equ	0xFE1
 12380                           indf2	equ	0xFDF
 12381                           postinc2	equ	0xFDE
 12382                           postdec2	equ	0xFDD
 12383                           plusw2	equ	0xFDB
 12384                           fsr2h	equ	0xFDA
 12385                           fsr2l	equ	0xFD9
 12386                           status	equ	0xFD8
 12387                           
 12388 ;; *************** function _TCP_Init *****************
 12389 ;; Defined at:
 12390 ;;		line 1173 in file "../../TCPIP Library/source/tcpv4.c"
 12391 ;; Parameters:    Size  Location     Type
 12392 ;;		None
 12393 ;; Auto vars:     Size  Location     Type
 12394 ;;		None
 12395 ;; Return value:  Size  Location     Type
 12396 ;;                  1    wreg      void 
 12397 ;; Registers used:
 12398 ;;		wreg, status,2
 12399 ;; Tracked objects:
 12400 ;;		On entry : F/1
 12401 ;;		On exit  : F/2
 12402 ;;		Unchanged: 0/0
 12403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12408 ;;Total ram usage:        0 bytes
 12409 ;; Hardware stack levels used:    1
 12410 ;; Hardware stack levels required when called:    3
 12411 ;; This function calls:
 12412 ;;		Nothing
 12413 ;; This function is called by:
 12414 ;;		_Network_Init
 12415 ;; This function uses a non-reentrant model
 12416 ;;
 12417                           
 12418                           	psect	text61
 12419  0086AC                     __ptext61:
 12420                           	opt stack 0
 12421  0086AC                     _TCP_Init:
 12422                           	opt stack 26
 12423                           
 12424                           ; BSR set to: 1
 12425                           ;tcpv4.c: 1175: tcbList = (0);
 12426                           
 12427                           ;incstack = 0
 12428  0086AC  6BA2               	clrf	_tcbList& (0+255),b
 12429  0086AE  6BA3               	clrf	(_tcbList+1)& (0+255),b
 12430                           
 12431                           ;tcpv4.c: 1176: tcbListSize = 0;
 12432  0086B0  6BA7               	clrf	_tcbListSize& (0+255),b
 12433                           
 12434                           ; BSR set to: 1
 12435                           ;tcpv4.c: 1177: nextAvailablePort = (1024u);
 12436  0086B2  0E04               	movlw	4
 12437  0086B4  6F9D               	movwf	(_nextAvailablePort+1)& (0+255),b
 12438  0086B6  0E00               	movlw	0
 12439  0086B8  6B9C               	clrf	_nextAvailablePort& (0+255),b
 12440                           
 12441                           ; BSR set to: 1
 12442                           ;tcpv4.c: 1178: nextSequenceNumber = 0;
 12443  0086BA  0102               	movlb	2	; () banked
 12444  0086BC  6B2A               	clrf	_nextSequenceNumber& (0+255),b
 12445  0086BE  6B2B               	clrf	(_nextSequenceNumber+1)& (0+255),b
 12446  0086C0  6B2C               	clrf	(_nextSequenceNumber+2)& (0+255),b
 12447  0086C2  6B2D               	clrf	(_nextSequenceNumber+3)& (0+255),b
 12448                           
 12449                           ; BSR set to: 2
 12450  0086C4  0012               	return		;funcret
 12451  0086C6                     __end_of_TCP_Init:
 12452                           	opt stack 0
 12453                           tosu	equ	0xFFF
 12454                           tosh	equ	0xFFE
 12455                           tosl	equ	0xFFD
 12456                           pclath	equ	0xFFA
 12457                           tblptru	equ	0xFF8
 12458                           tblptrh	equ	0xFF7
 12459                           tblptrl	equ	0xFF6
 12460                           tablat	equ	0xFF5
 12461                           prodh	equ	0xFF4
 12462                           prodl	equ	0xFF3
 12463                           intcon	equ	0xFF2
 12464                           intcon2	equ	0xFF1
 12465                           indf0	equ	0xFEF
 12466                           postinc0	equ	0xFEE
 12467                           fsr0h	equ	0xFEA
 12468                           fsr0l	equ	0xFE9
 12469                           wreg	equ	0xFE8
 12470                           postinc1	equ	0xFE6
 12471                           plusw1	equ	0xFE3
 12472                           fsr1h	equ	0xFE2
 12473                           fsr1l	equ	0xFE1
 12474                           indf2	equ	0xFDF
 12475                           postinc2	equ	0xFDE
 12476                           postdec2	equ	0xFDD
 12477                           plusw2	equ	0xFDB
 12478                           fsr2h	equ	0xFDA
 12479                           fsr2l	equ	0xFD9
 12480                           status	equ	0xFD8
 12481                           
 12482 ;; *************** function _IPV4_Init *****************
 12483 ;; Defined at:
 12484 ;;		line 78 in file "../../TCPIP Library/source/ipv4.c"
 12485 ;; Parameters:    Size  Location     Type
 12486 ;;		None
 12487 ;; Auto vars:     Size  Location     Type
 12488 ;;		None
 12489 ;; Return value:  Size  Location     Type
 12490 ;;                  1    wreg      void 
 12491 ;; Registers used:
 12492 ;;		None
 12493 ;; Tracked objects:
 12494 ;;		On entry : 0/2
 12495 ;;		On exit  : F/1
 12496 ;;		Unchanged: 0/0
 12497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12502 ;;Total ram usage:        0 bytes
 12503 ;; Hardware stack levels used:    1
 12504 ;; Hardware stack levels required when called:    3
 12505 ;; This function calls:
 12506 ;;		Nothing
 12507 ;; This function is called by:
 12508 ;;		_Network_Init
 12509 ;; This function uses a non-reentrant model
 12510 ;;
 12511                           
 12512                           	psect	text62
 12513  0087CA                     __ptext62:
 12514                           	opt stack 0
 12515  0087CA                     _IPV4_Init:
 12516                           	opt stack 26
 12517                           
 12518                           ;ipv4.c: 80: ipv4Address = 0;
 12519                           
 12520                           ; BSR set to: 2
 12521                           ;incstack = 0
 12522  0087CA  0101               	movlb	1	; () banked
 12523  0087CC  6B8E               	clrf	_ipv4Address& (0+255),b
 12524  0087CE  6B8F               	clrf	(_ipv4Address+1)& (0+255),b
 12525  0087D0  6B90               	clrf	(_ipv4Address+2)& (0+255),b
 12526  0087D2  6B91               	clrf	(_ipv4Address+3)& (0+255),b
 12527                           
 12528                           ; BSR set to: 1
 12529  0087D4  0012               	return		;funcret
 12530  0087D6                     __end_of_IPV4_Init:
 12531                           	opt stack 0
 12532                           tosu	equ	0xFFF
 12533                           tosh	equ	0xFFE
 12534                           tosl	equ	0xFFD
 12535                           pclath	equ	0xFFA
 12536                           tblptru	equ	0xFF8
 12537                           tblptrh	equ	0xFF7
 12538                           tblptrl	equ	0xFF6
 12539                           tablat	equ	0xFF5
 12540                           prodh	equ	0xFF4
 12541                           prodl	equ	0xFF3
 12542                           intcon	equ	0xFF2
 12543                           intcon2	equ	0xFF1
 12544                           indf0	equ	0xFEF
 12545                           postinc0	equ	0xFEE
 12546                           fsr0h	equ	0xFEA
 12547                           fsr0l	equ	0xFE9
 12548                           wreg	equ	0xFE8
 12549                           postinc1	equ	0xFE6
 12550                           plusw1	equ	0xFE3
 12551                           fsr1h	equ	0xFE2
 12552                           fsr1l	equ	0xFE1
 12553                           indf2	equ	0xFDF
 12554                           postinc2	equ	0xFDE
 12555                           postdec2	equ	0xFDD
 12556                           plusw2	equ	0xFDB
 12557                           fsr2h	equ	0xFDA
 12558                           fsr2l	equ	0xFD9
 12559                           status	equ	0xFD8
 12560                           
 12561 ;; *************** function _ETH_Init *****************
 12562 ;; Defined at:
 12563 ;;		line 94 in file "../../TCPIP Library/ethernet_drivers/encX24J600_driver.c"
 12564 ;; Parameters:    Size  Location     Type
 12565 ;;		None
 12566 ;; Auto vars:     Size  Location     Type
 12567 ;;  phcon1_val      2   21[COMRAM] unsigned int 
 12568 ;; Return value:  Size  Location     Type
 12569 ;;                  1    wreg      void 
 12570 ;; Registers used:
 12571 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12572 ;; Tracked objects:
 12573 ;;		On entry : 0/2
 12574 ;;		On exit  : 0/0
 12575 ;;		Unchanged: 0/0
 12576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12578 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12579 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12580 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12581 ;;Total ram usage:        4 bytes
 12582 ;; Hardware stack levels used:    1
 12583 ;; Hardware stack levels required when called:    8
 12584 ;; This function calls:
 12585 ;;		_ENCx24_BFS
 12586 ;;		_ENCx24_PHYWrite
 12587 ;;		_ENCx24_PhyRead
 12588 ;;		_ENCx24_Read
 12589 ;;		_ENCx24_Write
 12590 ;;		_ETH_CheckLinkUp
 12591 ;;		_ETH_GetMAC
 12592 ;;		_ETH_SendSystemReset
 12593 ;;		_SPI_ExchangeByte
 12594 ;; This function is called by:
 12595 ;;		_Network_Init
 12596 ;; This function uses a non-reentrant model
 12597 ;;
 12598                           
 12599                           	psect	text63
 12600  006AC8                     __ptext63:
 12601                           	opt stack 0
 12602  006AC8                     _ETH_Init:
 12603                           	opt stack 21
 12604                           
 12605                           ;encX24J600_driver.c: 96: uint16_t phcon1_val;
 12606                           ;encX24J600_driver.c: 99: LATBbits.LATB5 = 0;
 12607                           
 12608                           ; BSR set to: 1
 12609                           ;incstack = 0
 12610  006AC8  9A8A               	bcf	3978,5,c	;volatile
 12611                           
 12612                           ;encX24J600_driver.c: 100: TRISBbits.TRISB5 = 0;
 12613  006ACA  9A93               	bcf	3987,5,c	;volatile
 12614                           
 12615                           ;encX24J600_driver.c: 101: _delay((unsigned long)((10)*(41666667UL/4000.0)));
 12616  006ACC  0E88               	movlw	136
 12617  006ACE  6E14               	movwf	??_ETH_Init& (0+255),c
 12618  006AD0  0E46               	movlw	70
 12619  006AD2                     u15407:
 12620  006AD2  2EE8               	decfsz	wreg,f,c
 12621  006AD4  D7FE               	goto	u15407
 12622  006AD6  2E14               	decfsz	??_ETH_Init& (0+255),f,c
 12623  006AD8  D7FC               	goto	u15407
 12624  006ADA  D000               	nop2	
 12625                           
 12626                           ;encX24J600_driver.c: 105: PORTBbits.RB2 = 1;
 12627  006ADC  8481               	bsf	3969,2,c	;volatile
 12628                           
 12629                           ;encX24J600_driver.c: 106: TRISBbits.TRISB2 = 0;
 12630  006ADE  9493               	bcf	3987,2,c	;volatile
 12631                           
 12632                           ;encX24J600_driver.c: 109: LATBbits.LATB5 = 1;
 12633  006AE0  8A8A               	bsf	3978,5,c	;volatile
 12634                           
 12635                           ;encX24J600_driver.c: 110: _delay((unsigned long)((400)*(41666667UL/4000000.0)));
 12636  006AE2  0E06               	movlw	6
 12637  006AE4  6E14               	movwf	??_ETH_Init& (0+255),c
 12638  006AE6  0E68               	movlw	104
 12639  006AE8                     u15417:
 12640  006AE8  2EE8               	decfsz	wreg,f,c
 12641  006AEA  D7FE               	goto	u15417
 12642  006AEC  2E14               	decfsz	??_ETH_Init& (0+255),f,c
 12643  006AEE  D7FC               	goto	u15417
 12644                           
 12645                           ;encX24J600_driver.c: 113: TRISBbits.TRISB2 = 1;
 12646  006AF0  8493               	bsf	3987,2,c	;volatile
 12647  006AF2  868A               	bsf	3978,3,c	;volatile
 12648                           
 12649                           ;encX24J600_driver.c: 117: ethData.error = 0;
 12650  006AF4  0101               	movlb	1	; () banked
 12651  006AF6  9183               	bcf	_ethData& (0+255),0,b	;volatile
 12652                           
 12653                           ; BSR set to: 1
 12654                           ;encX24J600_driver.c: 118: ethData.up = 0;
 12655  006AF8  9583               	bcf	_ethData& (0+255),2,b	;volatile
 12656                           
 12657                           ; BSR set to: 1
 12658                           ;encX24J600_driver.c: 119: ethData.linkChange = 0;
 12659  006AFA  9983               	bcf	_ethData& (0+255),4,b	;volatile
 12660                           
 12661                           ; BSR set to: 1
 12662                           ;encX24J600_driver.c: 120: ethData.bufferBusy = 0;
 12663  006AFC  9B83               	bcf	_ethData& (0+255),5,b	;volatile
 12664                           
 12665                           ; BSR set to: 1
 12666                           ;encX24J600_driver.c: 121: ethData.saveRDPT = 0;
 12667  006AFE  6B86               	clrf	(_ethData+3)& (0+255),b	;volatile
 12668  006B00  6B87               	clrf	(_ethData+4)& (0+255),b	;volatile
 12669                           
 12670                           ; BSR set to: 1
 12671                           ;encX24J600_driver.c: 123: ETH_SendSystemReset();
 12672  006B02  ECF5  F03C         	call	_ETH_SendSystemReset	;wreg free
 12673                           
 12674                           ;encX24J600_driver.c: 126: nextPacketPointer = 0x1600ul;
 12675  006B06  0E16               	movlw	22
 12676  006B08  0101               	movlb	1	; () banked
 12677  006B0A  6F9F               	movwf	(_nextPacketPointer+1)& (0+255),b
 12678  006B0C  6B9E               	clrf	_nextPacketPointer& (0+255),b
 12679                           
 12680                           ; BSR set to: 1
 12681                           ;encX24J600_driver.c: 129: ENCx24_Write(XJ600_ETXSTL, 0x0000ul);
 12682  006B0E  0E00               	movlw	0
 12683  006B10  6A06               	clrf	ENCx24_Write@data+1,c
 12684  006B12  6A05               	clrf	ENCx24_Write@data,c
 12685  006B14  EC94  F040         	call	_ENCx24_Write
 12686                           
 12687                           ;encX24J600_driver.c: 130: ENCx24_Write(XJ600_ERXSTL, 0x1600ul);
 12688  006B18  0E16               	movlw	22
 12689  006B1A  6E06               	movwf	ENCx24_Write@data+1,c
 12690  006B1C  6A05               	clrf	ENCx24_Write@data,c
 12691  006B1E  0E04               	movlw	4
 12692  006B20  EC94  F040         	call	_ENCx24_Write
 12693                           
 12694                           ;encX24J600_driver.c: 131: ENCx24_Write(XJ600_ERXTAILL, 0x6000ul - 2);
 12695  006B24  0E5F               	movlw	95
 12696  006B26  6E06               	movwf	ENCx24_Write@data+1,c
 12697  006B28  0EFE               	movlw	254
 12698  006B2A  6E05               	movwf	ENCx24_Write@data,c
 12699  006B2C  0E06               	movlw	6
 12700  006B2E  EC94  F040         	call	_ENCx24_Write
 12701                           
 12702                           ;encX24J600_driver.c: 132: ENCx24_Write(XJ600_EUDASTL,0x15FFul + 1);
 12703  006B32  0E16               	movlw	22
 12704  006B34  6E06               	movwf	ENCx24_Write@data+1,c
 12705  006B36  6A05               	clrf	ENCx24_Write@data,c
 12706  006B38  0EF6               	movlw	246
 12707  006B3A  EC94  F040         	call	_ENCx24_Write
 12708                           
 12709                           ;encX24J600_driver.c: 133: ENCx24_Write(XJ600_EUDANDL,0x15FFul + 1);
 12710  006B3E  0E16               	movlw	22
 12711  006B40  6E06               	movwf	ENCx24_Write@data+1,c
 12712  006B42  6A05               	clrf	ENCx24_Write@data,c
 12713  006B44  0EF8               	movlw	248
 12714  006B46  EC94  F040         	call	_ENCx24_Write
 12715                           
 12716                           ;encX24J600_driver.c: 135: phcon1_val = ENCx24_PhyRead(PHCON1);
 12717  006B4A  0E00               	movlw	0
 12718  006B4C  EC72  F040         	call	_ENCx24_PhyRead
 12719  006B50  C00B  F016         	movff	?_ENCx24_PhyRead,ETH_Init@phcon1_val
 12720  006B54  C00C  F017         	movff	?_ENCx24_PhyRead+1,ETH_Init@phcon1_val+1
 12721                           
 12722                           ;encX24J600_driver.c: 136: phcon1_val &= 0xF7FF;
 12723  006B58  9617               	bcf	ETH_Init@phcon1_val+1,3,c
 12724                           
 12725                           ;encX24J600_driver.c: 137: ENCx24_PHYWrite(PHCON1, phcon1_val);
 12726  006B5A  C016  F00B         	movff	ETH_Init@phcon1_val,ENCx24_PHYWrite@data
 12727  006B5E  C017  F00C         	movff	ETH_Init@phcon1_val+1,ENCx24_PHYWrite@data+1
 12728  006B62  0E00               	movlw	0
 12729  006B64  EC15  F042         	call	_ENCx24_PHYWrite
 12730                           
 12731                           ;encX24J600_driver.c: 144: ENCx24_PHYWrite(PHANA,0x05E1);
 12732  006B68  0E05               	movlw	5
 12733  006B6A  6E0C               	movwf	ENCx24_PHYWrite@data+1,c
 12734  006B6C  0EE1               	movlw	225
 12735  006B6E  6E0B               	movwf	ENCx24_PHYWrite@data,c
 12736  006B70  0E04               	movlw	4
 12737  006B72  EC15  F042         	call	_ENCx24_PHYWrite
 12738                           
 12739                           ;encX24J600_driver.c: 147: while((ENCx24_Read(XJ600_ESTATL)&0X1100)!=0x1100)
 12740  006B76  D008               	goto	l9605
 12741  006B78                     l9603:
 12742                           
 12743                           ;encX24J600_driver.c: 148: {
 12744                           ;encX24J600_driver.c: 149: _delay((unsigned long)((256)*(41666667UL/4000000.0)));
 12745  006B78  0E04               	movlw	4
 12746  006B7A  6E14               	movwf	??_ETH_Init& (0+255),c
 12747  006B7C  0E75               	movlw	117
 12748  006B7E                     u15427:
 12749  006B7E  2EE8               	decfsz	wreg,f,c
 12750  006B80  D7FE               	goto	u15427
 12751  006B82  2E14               	decfsz	??_ETH_Init& (0+255),f,c
 12752  006B84  D7FC               	goto	u15427
 12753  006B86  F000               	nop	
 12754  006B88                     l9605:
 12755  006B88  6A14               	clrf	??_ETH_Init& (0+255),c
 12756  006B8A  0E11               	movlw	17
 12757  006B8C  6E15               	movwf	(??_ETH_Init+1)& (0+255),c
 12758  006B8E  0EFA               	movlw	250
 12759  006B90  EC06  F040         	call	_ENCx24_Read
 12760  006B94  5014               	movf	??_ETH_Init,w,c
 12761  006B96  1605               	andwf	?_ENCx24_Read,f,c
 12762  006B98  5015               	movf	??_ETH_Init+1,w,c
 12763  006B9A  1606               	andwf	?_ENCx24_Read+1,f,c
 12764  006B9C  0E11               	movlw	17
 12765  006B9E  1806               	xorwf	?_ENCx24_Read+1,w,c
 12766  006BA0  1005               	iorwf	?_ENCx24_Read,w,c
 12767  006BA2  E1EA               	bnz	l9603
 12768                           
 12769                           ;encX24J600_driver.c: 150: }
 12770                           ;encX24J600_driver.c: 163: ENCx24_Write(XJ600_ERXFCONL, 0x0059);
 12771  006BA4  6A06               	clrf	ENCx24_Write@data+1,c
 12772  006BA6  0E59               	movlw	89
 12773  006BA8  6E05               	movwf	ENCx24_Write@data,c
 12774  006BAA  0E34               	movlw	52
 12775  006BAC  EC94  F040         	call	_ENCx24_Write
 12776                           
 12777                           ;encX24J600_driver.c: 173: ENCx24_Write(XJ600_EIEL,0x884B);
 12778  006BB0  0E88               	movlw	136
 12779  006BB2  6E06               	movwf	ENCx24_Write@data+1,c
 12780  006BB4  0E4B               	movlw	75
 12781  006BB6  6E05               	movwf	ENCx24_Write@data,c
 12782  006BB8  0E72               	movlw	114
 12783  006BBA  EC94  F040         	call	_ENCx24_Write
 12784                           
 12785                           ;encX24J600_driver.c: 176: ENCx24_BFS(XJ600_ECON1L,0x0001);
 12786  006BBE  6A06               	clrf	ENCx24_BFS@bitMask+1,c
 12787  006BC0  0E01               	movlw	1
 12788  006BC2  6E05               	movwf	ENCx24_BFS@bitMask,c
 12789  006BC4  0EFE               	movlw	254
 12790  006BC6  ECB5  F040         	call	_ENCx24_BFS
 12791                           
 12792                           ;encX24J600_driver.c: 180: SPI_ExchangeByte(b0sel_inst);
 12793  006BCA  0EC0               	movlw	192
 12794  006BCC  ECD2  F043         	call	_SPI_ExchangeByte
 12795                           
 12796                           ;encX24J600_driver.c: 182: ETH_GetMAC((uint8_t *)&ethMAC);
 12797  006BD0  0E99               	movlw	low _ethMAC
 12798  006BD2  6E08               	movwf	ETH_GetMAC@macAddr,c
 12799  006BD4  0E02               	movlw	high _ethMAC
 12800  006BD6  6E09               	movwf	ETH_GetMAC@macAddr+1,c
 12801  006BD8  ECB8  F03C         	call	_ETH_GetMAC	;wreg free
 12802                           
 12803                           ;encX24J600_driver.c: 185: ETH_CheckLinkUp();
 12804  006BDC  EF87  F041         	goto	_ETH_CheckLinkUp	;wreg free
 12805  006BE0                     __end_of_ETH_Init:
 12806                           	opt stack 0
 12807                           tosu	equ	0xFFF
 12808                           tosh	equ	0xFFE
 12809                           tosl	equ	0xFFD
 12810                           pclath	equ	0xFFA
 12811                           tblptru	equ	0xFF8
 12812                           tblptrh	equ	0xFF7
 12813                           tblptrl	equ	0xFF6
 12814                           tablat	equ	0xFF5
 12815                           prodh	equ	0xFF4
 12816                           prodl	equ	0xFF3
 12817                           intcon	equ	0xFF2
 12818                           intcon2	equ	0xFF1
 12819                           indf0	equ	0xFEF
 12820                           postinc0	equ	0xFEE
 12821                           fsr0h	equ	0xFEA
 12822                           fsr0l	equ	0xFE9
 12823                           wreg	equ	0xFE8
 12824                           postinc1	equ	0xFE6
 12825                           plusw1	equ	0xFE3
 12826                           fsr1h	equ	0xFE2
 12827                           fsr1l	equ	0xFE1
 12828                           indf2	equ	0xFDF
 12829                           postinc2	equ	0xFDE
 12830                           postdec2	equ	0xFDD
 12831                           plusw2	equ	0xFDB
 12832                           fsr2h	equ	0xFDA
 12833                           fsr2l	equ	0xFD9
 12834                           status	equ	0xFD8
 12835                           
 12836 ;; *************** function _ETH_SendSystemReset *****************
 12837 ;; Defined at:
 12838 ;;		line 67 in file "../../TCPIP Library/ethernet_drivers/encX24J600_driver.c"
 12839 ;; Parameters:    Size  Location     Type
 12840 ;;		None
 12841 ;; Auto vars:     Size  Location     Type
 12842 ;;		None
 12843 ;; Return value:  Size  Location     Type
 12844 ;;                  1    wreg      void 
 12845 ;; Registers used:
 12846 ;;		wreg, status,2, status,0, cstack
 12847 ;; Tracked objects:
 12848 ;;		On entry : F/1
 12849 ;;		On exit  : 0/0
 12850 ;;		Unchanged: 0/0
 12851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12854 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12855 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12856 ;;Total ram usage:        2 bytes
 12857 ;; Hardware stack levels used:    1
 12858 ;; Hardware stack levels required when called:    6
 12859 ;; This function calls:
 12860 ;;		_ENCx24_BFS
 12861 ;;		_ENCx24_Read
 12862 ;;		_ENCx24_Write
 12863 ;; This function is called by:
 12864 ;;		_ETH_Init
 12865 ;; This function uses a non-reentrant model
 12866 ;;
 12867                           
 12868                           	psect	text64
 12869  0079EA                     __ptext64:
 12870                           	opt stack 0
 12871  0079EA                     _ETH_SendSystemReset:
 12872                           	opt stack 22
 12873  0079EA                     l9227:
 12874                           
 12875                           ;encX24J600_driver.c: 73: {
 12876                           ;encX24J600_driver.c: 74: ENCx24_Write( XJ600_EUDASTL , 0x1234 );
 12877  0079EA  0E12               	movlw	18
 12878  0079EC  6E06               	movwf	ENCx24_Write@data+1,c
 12879  0079EE  0E34               	movlw	52
 12880  0079F0  6E05               	movwf	ENCx24_Write@data,c
 12881  0079F2  0EF6               	movlw	246
 12882  0079F4  EC94  F040         	call	_ENCx24_Write
 12883                           
 12884                           ;encX24J600_driver.c: 75: } while(0x1234 != ENCx24_Read(XJ600_EUDASTL));
 12885  0079F8  0EF6               	movlw	246
 12886  0079FA  EC06  F040         	call	_ENCx24_Read
 12887  0079FE  0E34               	movlw	52
 12888  007A00  1805               	xorwf	?_ENCx24_Read,w,c
 12889  007A02  E1F3               	bnz	l9227
 12890  007A04  0E12               	movlw	18
 12891  007A06  1806               	xorwf	?_ENCx24_Read+1,w,c
 12892  007A08  E1F0               	bnz	l9227
 12893                           
 12894                           ;encX24J600_driver.c: 78: ENCx24_BFS(XJ600_ECON2L, 0x0010);
 12895  007A0A  6A06               	clrf	ENCx24_BFS@bitMask+1,c
 12896  007A0C  0E10               	movlw	16
 12897  007A0E  6E05               	movwf	ENCx24_BFS@bitMask,c
 12898  007A10  0E6E               	movlw	110
 12899  007A12  ECB5  F040         	call	_ENCx24_BFS
 12900  007A16                     l9231:
 12901  007A16  6A0B               	clrf	??_ETH_SendSystemReset& (0+255),c
 12902  007A18  0E1A               	movlw	26
 12903  007A1A  6E0C               	movwf	(??_ETH_SendSystemReset+1)& (0+255),c
 12904  007A1C  0EFA               	movlw	250
 12905  007A1E  EC06  F040         	call	_ENCx24_Read
 12906  007A22  500B               	movf	??_ETH_SendSystemReset,w,c
 12907  007A24  1605               	andwf	?_ENCx24_Read,f,c
 12908  007A26  500C               	movf	??_ETH_SendSystemReset+1,w,c
 12909  007A28  1606               	andwf	?_ENCx24_Read+1,f,c
 12910  007A2A  0E1A               	movlw	26
 12911  007A2C  1806               	xorwf	?_ENCx24_Read+1,w,c
 12912  007A2E  1005               	iorwf	?_ENCx24_Read,w,c
 12913  007A30  E1F2               	bnz	l9231
 12914                           
 12915                           ;encX24J600_driver.c: 81: _delay((unsigned long)((1)*(41666667UL/4000.0)));
 12916  007A32  0E0E               	movlw	14
 12917  007A34  6E0B               	movwf	??_ETH_SendSystemReset& (0+255),c
 12918  007A36  0E86               	movlw	134
 12919  007A38                     u15437:
 12920  007A38  2EE8               	decfsz	wreg,f,c
 12921  007A3A  D7FE               	goto	u15437
 12922  007A3C  2E0B               	decfsz	??_ETH_SendSystemReset& (0+255),f,c
 12923  007A3E  D7FC               	goto	u15437
 12924                           
 12925                           ;encX24J600_driver.c: 83: }while(0x0 != ENCx24_Read(XJ600_EUDASTL));
 12926  007A40  0EF6               	movlw	246
 12927  007A42  EC06  F040         	call	_ENCx24_Read
 12928  007A46  5005               	movf	?_ENCx24_Read,w,c
 12929  007A48  1006               	iorwf	?_ENCx24_Read+1,w,c
 12930  007A4A  E1CF               	bnz	l9227
 12931                           
 12932                           ;encX24J600_driver.c: 85: _delay((unsigned long)((1)*(41666667UL/4000.0)));
 12933  007A4C  0E0E               	movlw	14
 12934  007A4E  6E0B               	movwf	??_ETH_SendSystemReset& (0+255),c
 12935  007A50  0E86               	movlw	134
 12936  007A52                     u15447:
 12937  007A52  2EE8               	decfsz	wreg,f,c
 12938  007A54  D7FE               	goto	u15447
 12939  007A56  2E0B               	decfsz	??_ETH_SendSystemReset& (0+255),f,c
 12940  007A58  D7FC               	goto	u15447
 12941  007A5A  0012               	return		;funcret
 12942  007A5C                     __end_of_ETH_SendSystemReset:
 12943                           	opt stack 0
 12944                           tosu	equ	0xFFF
 12945                           tosh	equ	0xFFE
 12946                           tosl	equ	0xFFD
 12947                           pclath	equ	0xFFA
 12948                           tblptru	equ	0xFF8
 12949                           tblptrh	equ	0xFF7
 12950                           tblptrl	equ	0xFF6
 12951                           tablat	equ	0xFF5
 12952                           prodh	equ	0xFF4
 12953                           prodl	equ	0xFF3
 12954                           intcon	equ	0xFF2
 12955                           intcon2	equ	0xFF1
 12956                           indf0	equ	0xFEF
 12957                           postinc0	equ	0xFEE
 12958                           fsr0h	equ	0xFEA
 12959                           fsr0l	equ	0xFE9
 12960                           wreg	equ	0xFE8
 12961                           postinc1	equ	0xFE6
 12962                           plusw1	equ	0xFE3
 12963                           fsr1h	equ	0xFE2
 12964                           fsr1l	equ	0xFE1
 12965                           indf2	equ	0xFDF
 12966                           postinc2	equ	0xFDE
 12967                           postdec2	equ	0xFDD
 12968                           plusw2	equ	0xFDB
 12969                           fsr2h	equ	0xFDA
 12970                           fsr2l	equ	0xFD9
 12971                           status	equ	0xFD8
 12972                           
 12973 ;; *************** function _ETH_CheckLinkUp *****************
 12974 ;; Defined at:
 12975 ;;		line 198 in file "../../TCPIP Library/ethernet_drivers/encX24J600_driver.c"
 12976 ;; Parameters:    Size  Location     Type
 12977 ;;		None
 12978 ;; Auto vars:     Size  Location     Type
 12979 ;;  value           4   14[COMRAM] unsigned long 
 12980 ;;  ret             1   18[COMRAM] unsigned char 
 12981 ;; Return value:  Size  Location     Type
 12982 ;;                  1    wreg      unsigned char 
 12983 ;; Registers used:
 12984 ;;		wreg, status,2, status,0, cstack
 12985 ;; Tracked objects:
 12986 ;;		On entry : 0/1
 12987 ;;		On exit  : 0/0
 12988 ;;		Unchanged: 0/0
 12989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12991 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12993 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12994 ;;Total ram usage:        5 bytes
 12995 ;; Hardware stack levels used:    1
 12996 ;; Hardware stack levels required when called:    7
 12997 ;; This function calls:
 12998 ;;		_ETH_readLinkStatus
 12999 ;; This function is called by:
 13000 ;;		_ETH_Init
 13001 ;;		_Network_WaitForLink
 13002 ;; This function uses a non-reentrant model
 13003 ;;
 13004                           
 13005                           	psect	text65
 13006  00830E                     __ptext65:
 13007                           	opt stack 0
 13008  00830E                     _ETH_CheckLinkUp:
 13009                           	opt stack 22
 13010                           
 13011                           ;encX24J600_driver.c: 200: uint32_t value;
 13012                           ;encX24J600_driver.c: 201: bool ret = 0;
 13013                           
 13014                           ;incstack = 0
 13015  00830E  6A13               	clrf	ETH_CheckLinkUp@ret,c
 13016  008310                     i5L__ptext66:
 13017                           	opt stack 0
 13018  008310                     i5L_ETH_readLinkStatus:
 13019                           	opt stack 0
 13020  008310                     i5Ll8865:
 13021                           	opt stack 22
 13022                           
 13023                           ;encX24J600_driver.c: 195: return (ENCx24_Read(XJ600_ESTATL));
 13024  008310  0EFA               	movlw	250
 13025  008312  EC06  F040         	call	_ENCx24_Read
 13026  008316  C005  F00B         	movff	?_ENCx24_Read,?_ETH_readLinkStatus
 13027  00831A  C006  F00C         	movff	?_ENCx24_Read+1,?_ETH_readLinkStatus+1
 13028  00831E  6A0D               	clrf	?_ETH_readLinkStatus+2,c
 13029  008320  6A0E               	clrf	?_ETH_readLinkStatus+3,c
 13030  008322                     i5Ll436:
 13031                           	opt stack 22
 13032  008322  C00B  F00F         	movff	?_ETH_readLinkStatus,ETH_CheckLinkUp@value
 13033  008326  C00C  F010         	movff	?_ETH_readLinkStatus+1,ETH_CheckLinkUp@value+1
 13034  00832A  C00D  F011         	movff	?_ETH_readLinkStatus+2,ETH_CheckLinkUp@value+2
 13035  00832E  C00E  F012         	movff	?_ETH_readLinkStatus+3,ETH_CheckLinkUp@value+3
 13036                           
 13037                           ;encX24J600_driver.c: 204: if(value & 0x0100)
 13038  008332  A010               	btfss	ETH_CheckLinkUp@value+1,0,c
 13039  008334  D004               	goto	l439
 13040                           
 13041                           ;encX24J600_driver.c: 205: {
 13042                           ;encX24J600_driver.c: 206: ethData.up = 1;
 13043  008336  0101               	movlb	1	; () banked
 13044  008338  8583               	bsf	_ethData& (0+255),2,b	;volatile
 13045                           
 13046                           ; BSR set to: 1
 13047                           ;encX24J600_driver.c: 207: ret = 1;
 13048  00833A  0E01               	movlw	1
 13049  00833C  6E13               	movwf	ETH_CheckLinkUp@ret,c
 13050  00833E                     l439:
 13051                           
 13052                           ;encX24J600_driver.c: 208: }
 13053                           ;encX24J600_driver.c: 209: return ret;
 13054  00833E  5013               	movf	ETH_CheckLinkUp@ret,w,c
 13055  008340  0012               	return		;funcret
 13056  008342                     __end_of_ETH_CheckLinkUp:
 13057                           	opt stack 0
 13058                           tosu	equ	0xFFF
 13059                           tosh	equ	0xFFE
 13060                           tosl	equ	0xFFD
 13061                           pclath	equ	0xFFA
 13062                           tblptru	equ	0xFF8
 13063                           tblptrh	equ	0xFF7
 13064                           tblptrl	equ	0xFF6
 13065                           tablat	equ	0xFF5
 13066                           prodh	equ	0xFF4
 13067                           prodl	equ	0xFF3
 13068                           intcon	equ	0xFF2
 13069                           intcon2	equ	0xFF1
 13070                           indf0	equ	0xFEF
 13071                           postinc0	equ	0xFEE
 13072                           fsr0h	equ	0xFEA
 13073                           fsr0l	equ	0xFE9
 13074                           wreg	equ	0xFE8
 13075                           postinc1	equ	0xFE6
 13076                           plusw1	equ	0xFE3
 13077                           fsr1h	equ	0xFE2
 13078                           fsr1l	equ	0xFE1
 13079                           indf2	equ	0xFDF
 13080                           postinc2	equ	0xFDE
 13081                           postdec2	equ	0xFDD
 13082                           plusw2	equ	0xFDB
 13083                           fsr2h	equ	0xFDA
 13084                           fsr2l	equ	0xFD9
 13085                           status	equ	0xFD8
 13086                           
 13087 ;; *************** function _ETH_readLinkStatus *****************
 13088 ;; Defined at:
 13089 ;;		line 193 in file "../../TCPIP Library/ethernet_drivers/encX24J600_driver.c"
 13090 ;; Parameters:    Size  Location     Type
 13091 ;;		None
 13092 ;; Auto vars:     Size  Location     Type
 13093 ;;		None
 13094 ;; Return value:  Size  Location     Type
 13095 ;;                  4   10[COMRAM] unsigned long 
 13096 ;; Registers used:
 13097 ;;		wreg, status,2, status,0, cstack
 13098 ;; Tracked objects:
 13099 ;;		On entry : 0/1
 13100 ;;		On exit  : 0/0
 13101 ;;		Unchanged: 0/0
 13102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13103 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13106 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13107 ;;Total ram usage:        4 bytes
 13108 ;; Hardware stack levels used:    1
 13109 ;; Hardware stack levels required when called:    6
 13110 ;; This function calls:
 13111 ;;		_ENCx24_Read
 13112 ;; This function is called by:
 13113 ;;		_ETH_CheckLinkUp
 13114 ;; This function uses a non-reentrant model
 13115 ;;
 13116                           
 13117                           	psect	text66
 13118  000000                     __ptext66:
 13119                           	opt stack 0
 13120  000000                     _ETH_readLinkStatus:
 13121                           	opt stack 0
 13122  000000                     __end_of_ETH_readLinkStatus:
 13123                           	opt stack 0
 13124                           tosu	equ	0xFFF
 13125                           tosh	equ	0xFFE
 13126                           tosl	equ	0xFFD
 13127                           pclath	equ	0xFFA
 13128                           tblptru	equ	0xFF8
 13129                           tblptrh	equ	0xFF7
 13130                           tblptrl	equ	0xFF6
 13131                           tablat	equ	0xFF5
 13132                           prodh	equ	0xFF4
 13133                           prodl	equ	0xFF3
 13134                           intcon	equ	0xFF2
 13135                           intcon2	equ	0xFF1
 13136                           indf0	equ	0xFEF
 13137                           postinc0	equ	0xFEE
 13138                           fsr0h	equ	0xFEA
 13139                           fsr0l	equ	0xFE9
 13140                           wreg	equ	0xFE8
 13141                           postinc1	equ	0xFE6
 13142                           plusw1	equ	0xFE3
 13143                           fsr1h	equ	0xFE2
 13144                           fsr1l	equ	0xFE1
 13145                           indf2	equ	0xFDF
 13146                           postinc2	equ	0xFDE
 13147                           postdec2	equ	0xFDD
 13148                           plusw2	equ	0xFDB
 13149                           fsr2h	equ	0xFDA
 13150                           fsr2l	equ	0xFD9
 13151                           status	equ	0xFD8
 13152                           
 13153 ;; *************** function _ENCx24_PhyRead *****************
 13154 ;; Defined at:
 13155 ;;		line 203 in file "../../TCPIP Library/ethernet_drivers/encX24j600_spi.c"
 13156 ;; Parameters:    Size  Location     Type
 13157 ;;  a               1    wreg     enum E6622
 13158 ;; Auto vars:     Size  Location     Type
 13159 ;;  a               1   12[COMRAM] enum E6622
 13160 ;; Return value:  Size  Location     Type
 13161 ;;                  2   10[COMRAM] unsigned int 
 13162 ;; Registers used:
 13163 ;;		wreg, status,2, status,0, cstack
 13164 ;; Tracked objects:
 13165 ;;		On entry : 0/1
 13166 ;;		On exit  : 0/0
 13167 ;;		Unchanged: 0/0
 13168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13169 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13170 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13172 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13173 ;;Total ram usage:        3 bytes
 13174 ;; Hardware stack levels used:    1
 13175 ;; Hardware stack levels required when called:    6
 13176 ;; This function calls:
 13177 ;;		_ENCx24_BFC
 13178 ;;		_ENCx24_BFS
 13179 ;;		_ENCx24_Read
 13180 ;;		_ENCx24_Write
 13181 ;; This function is called by:
 13182 ;;		_ETH_Init
 13183 ;; This function uses a non-reentrant model
 13184 ;;
 13185                           
 13186                           	psect	text67
 13187  0080E4                     __ptext67:
 13188                           	opt stack 0
 13189  0080E4                     _ENCx24_PhyRead:
 13190                           	opt stack 22
 13191                           
 13192                           ;incstack = 0
 13193                           ;ENCx24_PhyRead@a stored from wreg
 13194  0080E4  6E0D               	movwf	ENCx24_PhyRead@a,c
 13195                           
 13196                           ;encX24j600_spi.c: 205: ENCx24_Write(XJ600_MIREGADRL,0x0100|a);
 13197  0080E6  0E00               	movlw	0
 13198  0080E8  100D               	iorwf	ENCx24_PhyRead@a,w,c
 13199  0080EA  6E05               	movwf	ENCx24_Write@data,c
 13200  0080EC  0E01               	movlw	1
 13201  0080EE  6E06               	movwf	ENCx24_Write@data+1,c
 13202  0080F0  0E54               	movlw	84
 13203  0080F2  EC94  F040         	call	_ENCx24_Write
 13204                           
 13205                           ;encX24j600_spi.c: 206: ENCx24_BFS(XJ600_MICMDL,0x0001);
 13206  0080F6  6A06               	clrf	ENCx24_BFS@bitMask+1,c
 13207  0080F8  0E01               	movlw	1
 13208  0080FA  6E05               	movwf	ENCx24_BFS@bitMask,c
 13209  0080FC  0E52               	movlw	82
 13210  0080FE  ECB5  F040         	call	_ENCx24_BFS
 13211  008102                     l9241:
 13212  008102  0E6A               	movlw	106
 13213  008104  EC06  F040         	call	_ENCx24_Read
 13214  008108  B005               	btfsc	?_ENCx24_Read,0,c
 13215  00810A  D7FB               	goto	l9241
 13216                           
 13217                           ;encX24j600_spi.c: 208: ENCx24_BFC(XJ600_MICMDL,0x0001);
 13218  00810C  6A06               	clrf	ENCx24_BFC@bitMask+1,c
 13219  00810E  0E01               	movlw	1
 13220  008110  6E05               	movwf	ENCx24_BFC@bitMask,c
 13221  008112  0E52               	movlw	82
 13222  008114  ECD5  F040         	call	_ENCx24_BFC
 13223                           
 13224                           ;encX24j600_spi.c: 209: return ENCx24_Read(XJ600_MIRDL);
 13225  008118  0E68               	movlw	104
 13226  00811A  EC06  F040         	call	_ENCx24_Read
 13227  00811E  C005  F00B         	movff	?_ENCx24_Read,?_ENCx24_PhyRead
 13228  008122  C006  F00C         	movff	?_ENCx24_Read+1,?_ENCx24_PhyRead+1
 13229  008126  0012               	return		;funcret
 13230  008128                     __end_of_ENCx24_PhyRead:
 13231                           	opt stack 0
 13232                           tosu	equ	0xFFF
 13233                           tosh	equ	0xFFE
 13234                           tosl	equ	0xFFD
 13235                           pclath	equ	0xFFA
 13236                           tblptru	equ	0xFF8
 13237                           tblptrh	equ	0xFF7
 13238                           tblptrl	equ	0xFF6
 13239                           tablat	equ	0xFF5
 13240                           prodh	equ	0xFF4
 13241                           prodl	equ	0xFF3
 13242                           intcon	equ	0xFF2
 13243                           intcon2	equ	0xFF1
 13244                           indf0	equ	0xFEF
 13245                           postinc0	equ	0xFEE
 13246                           fsr0h	equ	0xFEA
 13247                           fsr0l	equ	0xFE9
 13248                           wreg	equ	0xFE8
 13249                           postinc1	equ	0xFE6
 13250                           plusw1	equ	0xFE3
 13251                           fsr1h	equ	0xFE2
 13252                           fsr1l	equ	0xFE1
 13253                           indf2	equ	0xFDF
 13254                           postinc2	equ	0xFDE
 13255                           postdec2	equ	0xFDD
 13256                           plusw2	equ	0xFDB
 13257                           fsr2h	equ	0xFDA
 13258                           fsr2l	equ	0xFD9
 13259                           status	equ	0xFD8
 13260                           
 13261 ;; *************** function _ENCx24_PHYWrite *****************
 13262 ;; Defined at:
 13263 ;;		line 217 in file "../../TCPIP Library/ethernet_drivers/encX24j600_spi.c"
 13264 ;; Parameters:    Size  Location     Type
 13265 ;;  a               1    wreg     enum E6622
 13266 ;;  data            2   10[COMRAM] unsigned int 
 13267 ;; Auto vars:     Size  Location     Type
 13268 ;;  a               1   12[COMRAM] enum E6622
 13269 ;; Return value:  Size  Location     Type
 13270 ;;                  1    wreg      void 
 13271 ;; Registers used:
 13272 ;;		wreg, status,2, status,0, cstack
 13273 ;; Tracked objects:
 13274 ;;		On entry : 0/1
 13275 ;;		On exit  : 0/0
 13276 ;;		Unchanged: 0/0
 13277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13278 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13279 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13281 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13282 ;;Total ram usage:        3 bytes
 13283 ;; Hardware stack levels used:    1
 13284 ;; Hardware stack levels required when called:    6
 13285 ;; This function calls:
 13286 ;;		_ENCx24_Read
 13287 ;;		_ENCx24_Write
 13288 ;; This function is called by:
 13289 ;;		_ETH_Init
 13290 ;; This function uses a non-reentrant model
 13291 ;;
 13292                           
 13293                           	psect	text68
 13294  00842A                     __ptext68:
 13295                           	opt stack 0
 13296  00842A                     _ENCx24_PHYWrite:
 13297                           	opt stack 22
 13298                           
 13299                           ;incstack = 0
 13300                           ;ENCx24_PHYWrite@a stored from wreg
 13301  00842A  6E0D               	movwf	ENCx24_PHYWrite@a,c
 13302                           
 13303                           ;encX24j600_spi.c: 219: ENCx24_Write(XJ600_MIREGADRL, 0x0100|a);
 13304  00842C  0E00               	movlw	0
 13305  00842E  100D               	iorwf	ENCx24_PHYWrite@a,w,c
 13306  008430  6E05               	movwf	ENCx24_Write@data,c
 13307  008432  0E01               	movlw	1
 13308  008434  6E06               	movwf	ENCx24_Write@data+1,c
 13309  008436  0E54               	movlw	84
 13310  008438  EC94  F040         	call	_ENCx24_Write
 13311                           
 13312                           ;encX24j600_spi.c: 220: ENCx24_Write(XJ600_MIWRL, data);
 13313  00843C  C00B  F005         	movff	ENCx24_PHYWrite@data,ENCx24_Write@data
 13314  008440  C00C  F006         	movff	ENCx24_PHYWrite@data+1,ENCx24_Write@data+1
 13315  008444  0E66               	movlw	102
 13316  008446  EC94  F040         	call	_ENCx24_Write
 13317  00844A                     l9249:
 13318  00844A  0E6A               	movlw	106
 13319  00844C  EC06  F040         	call	_ENCx24_Read
 13320  008450  A005               	btfss	?_ENCx24_Read,0,c
 13321  008452  0012               	return		;funcret
 13322  008454  D7FA               	goto	l9249
 13323  008456                     __end_of_ENCx24_PHYWrite:
 13324                           	opt stack 0
 13325                           tosu	equ	0xFFF
 13326                           tosh	equ	0xFFE
 13327                           tosl	equ	0xFFD
 13328                           pclath	equ	0xFFA
 13329                           tblptru	equ	0xFF8
 13330                           tblptrh	equ	0xFF7
 13331                           tblptrl	equ	0xFF6
 13332                           tablat	equ	0xFF5
 13333                           prodh	equ	0xFF4
 13334                           prodl	equ	0xFF3
 13335                           intcon	equ	0xFF2
 13336                           intcon2	equ	0xFF1
 13337                           indf0	equ	0xFEF
 13338                           postinc0	equ	0xFEE
 13339                           fsr0h	equ	0xFEA
 13340                           fsr0l	equ	0xFE9
 13341                           wreg	equ	0xFE8
 13342                           postinc1	equ	0xFE6
 13343                           plusw1	equ	0xFE3
 13344                           fsr1h	equ	0xFE2
 13345                           fsr1l	equ	0xFE1
 13346                           indf2	equ	0xFDF
 13347                           postinc2	equ	0xFDE
 13348                           postdec2	equ	0xFDD
 13349                           plusw2	equ	0xFDB
 13350                           fsr2h	equ	0xFDA
 13351                           fsr2l	equ	0xFD9
 13352                           status	equ	0xFD8
 13353                           
 13354 ;; *************** function _ARPV4_Init *****************
 13355 ;; Defined at:
 13356 ;;		line 86 in file "../../TCPIP Library/source/arpv4.c"
 13357 ;; Parameters:    Size  Location     Type
 13358 ;;		None
 13359 ;; Auto vars:     Size  Location     Type
 13360 ;;  x               1    1[COMRAM] unsigned char 
 13361 ;; Return value:  Size  Location     Type
 13362 ;;                  1    wreg      void 
 13363 ;; Registers used:
 13364 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13365 ;; Tracked objects:
 13366 ;;		On entry : 0/2
 13367 ;;		On exit  : 0/0
 13368 ;;		Unchanged: 0/0
 13369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13371 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13373 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13374 ;;Total ram usage:        1 bytes
 13375 ;; Hardware stack levels used:    1
 13376 ;; Hardware stack levels required when called:    3
 13377 ;; This function calls:
 13378 ;;		Nothing
 13379 ;; This function is called by:
 13380 ;;		_Network_Init
 13381 ;; This function uses a non-reentrant model
 13382 ;;
 13383                           
 13384                           	psect	text69
 13385  0086C6                     __ptext69:
 13386                           	opt stack 0
 13387  0086C6                     _ARPV4_Init:
 13388                           	opt stack 26
 13389                           
 13390                           ;arpv4.c: 88: for(uint8_t x= 0 ; x < sizeof(arpMap); x++)
 13391                           
 13392                           ;incstack = 0
 13393  0086C6  6A02               	clrf	ARPV4_Init@x,c
 13394  0086C8                     l9665:
 13395                           
 13396                           ;arpv4.c: 89: ((char *)arpMap)[x] = 0;
 13397  0086C8  0E00               	movlw	low _arpMap
 13398  0086CA  2402               	addwf	ARPV4_Init@x,w,c
 13399  0086CC  6ED9               	movwf	fsr2l,c
 13400  0086CE  6ADA               	clrf	fsr2h,c
 13401  0086D0  0E03               	movlw	high _arpMap
 13402  0086D2  22DA               	addwfc	fsr2h,f,c
 13403  0086D4  6ADF               	clrf	indf2,c
 13404  0086D6  2A02               	incf	ARPV4_Init@x,f,c
 13405  0086D8  0E67               	movlw	103
 13406  0086DA  6402               	cpfsgt	ARPV4_Init@x,c
 13407  0086DC  D7F5               	goto	l9665
 13408  0086DE  0C67               	retlw	103
 13409  0086E0                     __end_of_ARPV4_Init:
 13410                           	opt stack 0
 13411                           tosu	equ	0xFFF
 13412                           tosh	equ	0xFFE
 13413                           tosl	equ	0xFFD
 13414                           pclath	equ	0xFFA
 13415                           tblptru	equ	0xFF8
 13416                           tblptrh	equ	0xFF7
 13417                           tblptrl	equ	0xFF6
 13418                           tablat	equ	0xFF5
 13419                           prodh	equ	0xFF4
 13420                           prodl	equ	0xFF3
 13421                           intcon	equ	0xFF2
 13422                           intcon2	equ	0xFF1
 13423                           indf0	equ	0xFEF
 13424                           postinc0	equ	0xFEE
 13425                           fsr0h	equ	0xFEA
 13426                           fsr0l	equ	0xFE9
 13427                           wreg	equ	0xFE8
 13428                           postinc1	equ	0xFE6
 13429                           plusw1	equ	0xFE3
 13430                           fsr1h	equ	0xFE2
 13431                           fsr1l	equ	0xFE1
 13432                           indf2	equ	0xFDF
 13433                           postinc2	equ	0xFDE
 13434                           postdec2	equ	0xFDD
 13435                           plusw2	equ	0xFDB
 13436                           fsr2h	equ	0xFDA
 13437                           fsr2l	equ	0xFD9
 13438                           status	equ	0xFD8
 13439                           
 13440 ;; *************** function _IPV4_GetMyIP *****************
 13441 ;; Defined at:
 13442 ;;		line 288 in file "../../TCPIP Library/source/ipv4.c"
 13443 ;; Parameters:    Size  Location     Type
 13444 ;;		None
 13445 ;; Auto vars:     Size  Location     Type
 13446 ;;		None
 13447 ;; Return value:  Size  Location     Type
 13448 ;;                  4    1[COMRAM] unsigned long 
 13449 ;; Registers used:
 13450 ;;		None
 13451 ;; Tracked objects:
 13452 ;;		On entry : 0/1
 13453 ;;		On exit  : 0/0
 13454 ;;		Unchanged: 0/0
 13455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13456 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13459 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13460 ;;Total ram usage:        4 bytes
 13461 ;; Hardware stack levels used:    1
 13462 ;; Hardware stack levels required when called:    3
 13463 ;; This function calls:
 13464 ;;		Nothing
 13465 ;; This function is called by:
 13466 ;;		_main
 13467 ;; This function uses a non-reentrant model
 13468 ;;
 13469                           
 13470                           	psect	text70
 13471  008756                     __ptext70:
 13472                           	opt stack 0
 13473  008756                     _IPV4_GetMyIP:
 13474                           	opt stack 27
 13475                           
 13476                           ;ipv4.c: 290: return(ipv4Address);
 13477                           
 13478                           ;incstack = 0
 13479  008756  C18E  F002         	movff	_ipv4Address,?_IPV4_GetMyIP
 13480  00875A  C18F  F003         	movff	_ipv4Address+1,?_IPV4_GetMyIP+1
 13481  00875E  C190  F004         	movff	_ipv4Address+2,?_IPV4_GetMyIP+2
 13482  008762  C191  F005         	movff	_ipv4Address+3,?_IPV4_GetMyIP+3
 13483  008766  0012               	return		;funcret
 13484  008768                     __end_of_IPV4_GetMyIP:
 13485                           	opt stack 0
 13486                           tosu	equ	0xFFF
 13487                           tosh	equ	0xFFE
 13488                           tosl	equ	0xFFD
 13489                           pclath	equ	0xFFA
 13490                           tblptru	equ	0xFF8
 13491                           tblptrh	equ	0xFF7
 13492                           tblptrl	equ	0xFF6
 13493                           tablat	equ	0xFF5
 13494                           prodh	equ	0xFF4
 13495                           prodl	equ	0xFF3
 13496                           intcon	equ	0xFF2
 13497                           intcon2	equ	0xFF1
 13498                           indf0	equ	0xFEF
 13499                           postinc0	equ	0xFEE
 13500                           fsr0h	equ	0xFEA
 13501                           fsr0l	equ	0xFE9
 13502                           wreg	equ	0xFE8
 13503                           postinc1	equ	0xFE6
 13504                           plusw1	equ	0xFE3
 13505                           fsr1h	equ	0xFE2
 13506                           fsr1l	equ	0xFE1
 13507                           indf2	equ	0xFDF
 13508                           postinc2	equ	0xFDE
 13509                           postdec2	equ	0xFDD
 13510                           plusw2	equ	0xFDB
 13511                           fsr2h	equ	0xFDA
 13512                           fsr2l	equ	0xFD9
 13513                           status	equ	0xFD8
 13514                           
 13515 ;; *************** function _DEMO_TCP_EchoServer *****************
 13516 ;; Defined at:
 13517 ;;		line 76 in file "main.c"
 13518 ;; Parameters:    Size  Location     Type
 13519 ;;		None
 13520 ;; Auto vars:     Size  Location     Type
 13521 ;;  i               2  125[BANK0 ] unsigned int 
 13522 ;;  rxLen           2  123[BANK0 ] unsigned int 
 13523 ;;  txLen           2  120[BANK0 ] unsigned int 
 13524 ;;  socket_state    1  122[BANK0 ] enum E7289
 13525 ;; Return value:  Size  Location     Type
 13526 ;;                  1    wreg      void 
 13527 ;; Registers used:
 13528 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13529 ;; Tracked objects:
 13530 ;;		On entry : F/2
 13531 ;;		On exit  : 0/0
 13532 ;;		Unchanged: 0/0
 13533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13535 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13537 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13538 ;;Total ram usage:        7 bytes
 13539 ;; Hardware stack levels used:    1
 13540 ;; Hardware stack levels required when called:   13
 13541 ;; This function calls:
 13542 ;;		_TCP_Bind
 13543 ;;		_TCP_GetReceivedData
 13544 ;;		_TCP_GetRxLength
 13545 ;;		_TCP_InsertRxBuffer
 13546 ;;		_TCP_Listen
 13547 ;;		_TCP_Send
 13548 ;;		_TCP_SendDone
 13549 ;;		_TCP_SocketInit
 13550 ;;		_TCP_SocketPoll
 13551 ;; This function is called by:
 13552 ;;		_main
 13553 ;; This function uses a non-reentrant model
 13554 ;;
 13555                           
 13556                           	psect	text71
 13557  0069AC                     __ptext71:
 13558                           	opt stack 0
 13559  0069AC                     _DEMO_TCP_EchoServer:
 13560                           	opt stack 17
 13561                           
 13562                           ; BSR set to: 2
 13563                           ;main.c: 79: static tcpTCB_t port7TCB;
 13564                           ;main.c: 82: static uint8_t rxdataPort7[20];
 13565                           ;main.c: 83: static uint8_t txdataPort7[20];
 13566                           ;main.c: 85: uint16_t rxLen, txLen, i;
 13567                           ;main.c: 86: socketState_t socket_state;
 13568                           ;main.c: 88: socket_state = TCP_SocketPoll(&port7TCB);
 13569                           
 13570                           ;incstack = 0
 13571  0069AC  0E32               	movlw	low DEMO_TCP_EchoServer@port7TCB
 13572  0069AE  6E0A               	movwf	TCP_SocketPoll@socket_ptr,c
 13573  0069B0  0E02               	movlw	high DEMO_TCP_EchoServer@port7TCB
 13574  0069B2  6E0B               	movwf	TCP_SocketPoll@socket_ptr+1,c
 13575  0069B4  EC92  F042         	call	_TCP_SocketPoll	;wreg free
 13576  0069B8  0100               	movlb	0	; () banked
 13577  0069BA  6FDA               	movwf	DEMO_TCP_EchoServer@socket_state& (0+255),b
 13578                           
 13579                           ;main.c: 90: switch(socket_state)
 13580  0069BC  D07E               	goto	l10079
 13581  0069BE                     l10049:
 13582                           
 13583                           ; BSR set to: 0
 13584                           ;main.c: 94: TCP_SocketInit(&port7TCB);
 13585  0069BE  0E32               	movlw	low DEMO_TCP_EchoServer@port7TCB
 13586  0069C0  6E0A               	movwf	TCP_SocketInit@tcbPtr,c
 13587  0069C2  0E02               	movlw	high DEMO_TCP_EchoServer@port7TCB
 13588  0069C4  6E0B               	movwf	TCP_SocketInit@tcbPtr+1,c
 13589  0069C6  EF69  F037         	goto	_TCP_SocketInit	;wreg free
 13590  0069CA                     l10051:
 13591                           
 13592                           ; BSR set to: 0
 13593                           ;main.c: 98: TCP_Bind(&port7TCB, 7);
 13594  0069CA  0E32               	movlw	low DEMO_TCP_EchoServer@port7TCB
 13595  0069CC  6E0A               	movwf	TCP_Bind@tcbPtr,c
 13596  0069CE  0E02               	movlw	high DEMO_TCP_EchoServer@port7TCB
 13597  0069D0  6E0B               	movwf	TCP_Bind@tcbPtr+1,c
 13598  0069D2  6A0D               	clrf	TCP_Bind@port+1,c
 13599  0069D4  0E07               	movlw	7
 13600  0069D6  6E0C               	movwf	TCP_Bind@port,c
 13601  0069D8  ECB7  F042         	call	_TCP_Bind	;wreg free
 13602                           
 13603                           ;main.c: 100: TCP_InsertRxBuffer(&port7TCB, rxdataPort7, sizeof(rxdataPort7));
 13604  0069DC  0E32               	movlw	low DEMO_TCP_EchoServer@port7TCB
 13605  0069DE  6E0A               	movwf	TCP_InsertRxBuffer@tcbPtr,c
 13606  0069E0  0E02               	movlw	high DEMO_TCP_EchoServer@port7TCB
 13607  0069E2  6E0B               	movwf	TCP_InsertRxBuffer@tcbPtr+1,c
 13608  0069E4  0E69               	movlw	low DEMO_TCP_EchoServer@rxdataPort7
 13609  0069E6  6E0C               	movwf	TCP_InsertRxBuffer@data,c
 13610  0069E8  0E02               	movlw	high DEMO_TCP_EchoServer@rxdataPort7
 13611  0069EA  6E0D               	movwf	TCP_InsertRxBuffer@data+1,c
 13612  0069EC  6A0F               	clrf	TCP_InsertRxBuffer@data_len+1,c
 13613  0069EE  0E14               	movlw	20
 13614  0069F0  6E0E               	movwf	TCP_InsertRxBuffer@data_len,c
 13615  0069F2  EC6D  F03B         	call	_TCP_InsertRxBuffer	;wreg free
 13616                           
 13617                           ;main.c: 102: TCP_Listen(&port7TCB);
 13618  0069F6  0E32               	movlw	low DEMO_TCP_EchoServer@port7TCB
 13619  0069F8  0100               	movlb	0	; () banked
 13620  0069FA  6FD4               	movwf	TCP_Listen@tcbPtr& (0+255),b
 13621  0069FC  0E02               	movlw	high DEMO_TCP_EchoServer@port7TCB
 13622  0069FE  6FD5               	movwf	(TCP_Listen@tcbPtr+1)& (0+255),b
 13623  006A00  EF36  F03C         	goto	_TCP_Listen	;wreg free
 13624  006A04                     l10057:
 13625                           
 13626                           ; BSR set to: 0
 13627                           ;main.c: 106: if(TCP_SendDone(&port7TCB))
 13628  006A04  0E32               	movlw	low DEMO_TCP_EchoServer@port7TCB
 13629  006A06  6E0A               	movwf	TCP_SendDone@tcbPtr,c
 13630  006A08  0E02               	movlw	high DEMO_TCP_EchoServer@port7TCB
 13631  006A0A  6E0B               	movwf	TCP_SendDone@tcbPtr+1,c
 13632  006A0C  EC55  F042         	call	_TCP_SendDone	;wreg free
 13633  006A10  0900               	iorlw	0
 13634  006A12  B4D8               	btfsc	status,2,c
 13635  006A14  0012               	return	
 13636                           
 13637                           ;main.c: 107: {
 13638                           ;main.c: 109: rxLen = TCP_GetRxLength(&port7TCB);
 13639  006A16  0E32               	movlw	low DEMO_TCP_EchoServer@port7TCB
 13640  006A18  6E0A               	movwf	TCP_GetRxLength@tcbPtr,c
 13641  006A1A  0E02               	movlw	high DEMO_TCP_EchoServer@port7TCB
 13642  006A1C  6E0B               	movwf	TCP_GetRxLength@tcbPtr+1,c
 13643  006A1E  ECD1  F03D         	call	_TCP_GetRxLength	;wreg free
 13644  006A22  C00A  F0DB         	movff	?_TCP_GetRxLength,DEMO_TCP_EchoServer@rxLen
 13645  006A26  C00B  F0DC         	movff	?_TCP_GetRxLength+1,DEMO_TCP_EchoServer@rxLen+1
 13646                           
 13647                           ;main.c: 110: if(rxLen > 0)
 13648  006A2A  0100               	movlb	0	; () banked
 13649  006A2C  51DB               	movf	DEMO_TCP_EchoServer@rxLen& (0+255),w,b
 13650  006A2E  11DC               	iorwf	(DEMO_TCP_EchoServer@rxLen+1)& (0+255),w,b
 13651  006A30  B4D8               	btfsc	status,2,c
 13652  006A32  0012               	return	
 13653                           
 13654                           ; BSR set to: 0
 13655                           ;main.c: 111: {
 13656                           ;main.c: 112: rxLen = TCP_GetReceivedData(&port7TCB);
 13657  006A34  0E32               	movlw	low DEMO_TCP_EchoServer@port7TCB
 13658  006A36  6E0A               	movwf	TCP_GetReceivedData@tcbPtr,c
 13659  006A38  0E02               	movlw	high DEMO_TCP_EchoServer@port7TCB
 13660  006A3A  6E0B               	movwf	TCP_GetReceivedData@tcbPtr+1,c
 13661  006A3C  ECB0  F03B         	call	_TCP_GetReceivedData	;wreg free
 13662  006A40  C00A  F0DB         	movff	?_TCP_GetReceivedData,DEMO_TCP_EchoServer@rxLen
 13663  006A44  C00B  F0DC         	movff	?_TCP_GetReceivedData+1,DEMO_TCP_EchoServer@rxLen+1
 13664                           
 13665                           ;main.c: 115: for(i = 0; i < rxLen; i++)
 13666  006A48  0100               	movlb	0	; () banked
 13667  006A4A  6BDD               	clrf	DEMO_TCP_EchoServer@i& (0+255),b
 13668  006A4C  6BDE               	clrf	(DEMO_TCP_EchoServer@i+1)& (0+255),b
 13669  006A4E  D010               	goto	l10071
 13670  006A50                     l10067:
 13671                           
 13672                           ; BSR set to: 0
 13673                           ;main.c: 116: {
 13674                           ;main.c: 117: txdataPort7[i] = rxdataPort7[i];
 13675  006A50  0E69               	movlw	low DEMO_TCP_EchoServer@rxdataPort7
 13676  006A52  25DD               	addwf	DEMO_TCP_EchoServer@i& (0+255),w,b
 13677  006A54  6ED9               	movwf	fsr2l,c
 13678  006A56  0E02               	movlw	high DEMO_TCP_EchoServer@rxdataPort7
 13679  006A58  21DE               	addwfc	(DEMO_TCP_EchoServer@i+1)& (0+255),w,b
 13680  006A5A  6EDA               	movwf	fsr2h,c
 13681  006A5C  0E7D               	movlw	low DEMO_TCP_EchoServer@txdataPort7
 13682  006A5E  25DD               	addwf	DEMO_TCP_EchoServer@i& (0+255),w,b
 13683  006A60  6EE1               	movwf	fsr1l,c
 13684  006A62  0E02               	movlw	high DEMO_TCP_EchoServer@txdataPort7
 13685  006A64  21DE               	addwfc	(DEMO_TCP_EchoServer@i+1)& (0+255),w,b
 13686  006A66  6EE2               	movwf	fsr1h,c
 13687  006A68  CFDF FFE7          	movff	indf2,indf1
 13688                           
 13689                           ; BSR set to: 0
 13690  006A6C  4BDD               	infsnz	DEMO_TCP_EchoServer@i& (0+255),f,b
 13691  006A6E  2BDE               	incf	(DEMO_TCP_EchoServer@i+1)& (0+255),f,b
 13692  006A70                     l10071:
 13693                           
 13694                           ; BSR set to: 0
 13695  006A70  51DB               	movf	DEMO_TCP_EchoServer@rxLen& (0+255),w,b
 13696  006A72  5DDD               	subwf	DEMO_TCP_EchoServer@i& (0+255),w,b
 13697  006A74  51DC               	movf	(DEMO_TCP_EchoServer@rxLen+1)& (0+255),w,b
 13698  006A76  59DE               	subwfb	(DEMO_TCP_EchoServer@i+1)& (0+255),w,b
 13699  006A78  E3EB               	bnc	l10067
 13700                           
 13701                           ; BSR set to: 0
 13702                           ;main.c: 118: }
 13703                           ;main.c: 121: TCP_InsertRxBuffer(&port7TCB, rxdataPort7, sizeof(rxdataPort7));
 13704  006A7A  0E32               	movlw	low DEMO_TCP_EchoServer@port7TCB
 13705  006A7C  6E0A               	movwf	TCP_InsertRxBuffer@tcbPtr,c
 13706  006A7E  0E02               	movlw	high DEMO_TCP_EchoServer@port7TCB
 13707  006A80  6E0B               	movwf	TCP_InsertRxBuffer@tcbPtr+1,c
 13708  006A82  0E69               	movlw	low DEMO_TCP_EchoServer@rxdataPort7
 13709  006A84  6E0C               	movwf	TCP_InsertRxBuffer@data,c
 13710  006A86  0E02               	movlw	high DEMO_TCP_EchoServer@rxdataPort7
 13711  006A88  6E0D               	movwf	TCP_InsertRxBuffer@data+1,c
 13712  006A8A  6A0F               	clrf	TCP_InsertRxBuffer@data_len+1,c
 13713  006A8C  0E14               	movlw	20
 13714  006A8E  6E0E               	movwf	TCP_InsertRxBuffer@data_len,c
 13715  006A90  EC6D  F03B         	call	_TCP_InsertRxBuffer	;wreg free
 13716                           
 13717                           ;main.c: 122: txLen = rxLen;
 13718  006A94  C0DB  F0D8         	movff	DEMO_TCP_EchoServer@rxLen,DEMO_TCP_EchoServer@txLen
 13719  006A98  C0DC  F0D9         	movff	DEMO_TCP_EchoServer@rxLen+1,DEMO_TCP_EchoServer@txLen+1
 13720                           
 13721                           ;main.c: 124: TCP_Send(&port7TCB, txdataPort7, txLen);
 13722  006A9C  0E32               	movlw	low DEMO_TCP_EchoServer@port7TCB
 13723  006A9E  0100               	movlb	0	; () banked
 13724  006AA0  6FB4               	movwf	TCP_Send@tcbPtr& (0+255),b
 13725  006AA2  0E02               	movlw	high DEMO_TCP_EchoServer@port7TCB
 13726  006AA4  6FB5               	movwf	(TCP_Send@tcbPtr+1)& (0+255),b
 13727  006AA6  0E7D               	movlw	low DEMO_TCP_EchoServer@txdataPort7
 13728  006AA8  6FB6               	movwf	TCP_Send@data& (0+255),b
 13729  006AAA  0E02               	movlw	high DEMO_TCP_EchoServer@txdataPort7
 13730  006AAC  6FB7               	movwf	(TCP_Send@data+1)& (0+255),b
 13731  006AAE  C0D8  F0B8         	movff	DEMO_TCP_EchoServer@txLen,TCP_Send@dataLen
 13732  006AB2  C0D9  F0B9         	movff	DEMO_TCP_EchoServer@txLen+1,TCP_Send@dataLen+1
 13733  006AB6  EF30  F038         	goto	_TCP_Send	;wreg free
 13734  006ABA                     l10079:
 13735                           
 13736                           ; BSR set to: 0
 13737  006ABA  51DA               	movf	DEMO_TCP_EchoServer@socket_state& (0+255),w,b
 13738                           
 13739                           ; Switch size 1, requested type "speed"
 13740                           ; Number of cases is 3, Range of values is 0 to 3
 13741                           ; switch strategies available:
 13742                           ; Name         Instructions Cycles
 13743                           ; simple_byte           10     6 (average)
 13744                           ;	Chosen strategy is simple_byte
 13745  006ABC  E080               	bz	l10049
 13746  006ABE  0A01               	xorlw	1	; case 1
 13747  006AC0  E084               	bz	l10051
 13748  006AC2  0A02               	xorlw	2	; case 3
 13749  006AC4  E09F               	bz	l10057
 13750  006AC6  0012               	return		;funcret
 13751  006AC8                     __end_of_DEMO_TCP_EchoServer:
 13752                           	opt stack 0
 13753                           tosu	equ	0xFFF
 13754                           tosh	equ	0xFFE
 13755                           tosl	equ	0xFFD
 13756                           pclath	equ	0xFFA
 13757                           tblptru	equ	0xFF8
 13758                           tblptrh	equ	0xFF7
 13759                           tblptrl	equ	0xFF6
 13760                           tablat	equ	0xFF5
 13761                           prodh	equ	0xFF4
 13762                           prodl	equ	0xFF3
 13763                           intcon	equ	0xFF2
 13764                           intcon2	equ	0xFF1
 13765                           indf0	equ	0xFEF
 13766                           postinc0	equ	0xFEE
 13767                           fsr0h	equ	0xFEA
 13768                           fsr0l	equ	0xFE9
 13769                           wreg	equ	0xFE8
 13770                           indf1	equ	0xFE7
 13771                           postinc1	equ	0xFE6
 13772                           plusw1	equ	0xFE3
 13773                           fsr1h	equ	0xFE2
 13774                           fsr1l	equ	0xFE1
 13775                           indf2	equ	0xFDF
 13776                           postinc2	equ	0xFDE
 13777                           postdec2	equ	0xFDD
 13778                           plusw2	equ	0xFDB
 13779                           fsr2h	equ	0xFDA
 13780                           fsr2l	equ	0xFD9
 13781                           status	equ	0xFD8
 13782                           
 13783 ;; *************** function _TCP_SocketInit *****************
 13784 ;; Defined at:
 13785 ;;		line 1181 in file "../../TCPIP Library/source/tcpv4.c"
 13786 ;; Parameters:    Size  Location     Type
 13787 ;;  tcbPtr          2    9[COMRAM] PTR struct .
 13788 ;;		 -> DEMO_TCP_EchoServer@port7TCB(55), 
 13789 ;; Auto vars:     Size  Location     Type
 13790 ;;  ret             1    0        enum E177
 13791 ;; Return value:  Size  Location     Type
 13792 ;;                  1    wreg      enum E177
 13793 ;; Registers used:
 13794 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13795 ;; Tracked objects:
 13796 ;;		On entry : D/0
 13797 ;;		On exit  : 0/0
 13798 ;;		Unchanged: 0/0
 13799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13800 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13801 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13803 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13804 ;;Total ram usage:        3 bytes
 13805 ;; Hardware stack levels used:    1
 13806 ;; Hardware stack levels required when called:    4
 13807 ;; This function calls:
 13808 ;;		_TCB_Check
 13809 ;;		_TCB_Insert
 13810 ;;		_TCB_Reset
 13811 ;; This function is called by:
 13812 ;;		_DEMO_TCP_EchoServer
 13813 ;; This function uses a non-reentrant model
 13814 ;;
 13815                           
 13816                           	psect	text72
 13817  006ED2                     __ptext72:
 13818                           	opt stack 0
 13819  006ED2                     _TCP_SocketInit:
 13820                           	opt stack 25
 13821                           
 13822                           ;tcpv4.c: 1186: if(TCB_Check(tcbPtr) == 0)
 13823                           
 13824                           ;incstack = 0
 13825  006ED2  C00A  F002         	movff	TCP_SocketInit@tcbPtr,TCB_Check@ptr
 13826  006ED6  C00B  F003         	movff	TCP_SocketInit@tcbPtr+1,TCB_Check@ptr+1
 13827  006EDA  ECF3  F03B         	call	_TCB_Check	;wreg free
 13828  006EDE  0900               	iorlw	0
 13829  006EE0  A4D8               	btfss	status,2,c
 13830  006EE2  0012               	return	
 13831                           
 13832                           ;tcpv4.c: 1187: {
 13833                           ;tcpv4.c: 1188: TCB_Reset(tcbPtr);
 13834  006EE4  C00A  F002         	movff	TCP_SocketInit@tcbPtr,TCB_Reset@tcbPtr
 13835  006EE8  C00B  F003         	movff	TCP_SocketInit@tcbPtr+1,TCB_Reset@tcbPtr+1
 13836  006EEC  ECE2  F02E         	call	_TCB_Reset	;wreg free
 13837                           
 13838                           ;tcpv4.c: 1190: tcbPtr->localWnd = 0;
 13839  006EF0  EE20 F01A          	lfsr	2,26
 13840  006EF4  500A               	movf	TCP_SocketInit@tcbPtr,w,c
 13841  006EF6  26D9               	addwf	fsr2l,f,c
 13842  006EF8  500B               	movf	TCP_SocketInit@tcbPtr+1,w,c
 13843  006EFA  22DA               	addwfc	fsr2h,f,c
 13844  006EFC  6ADE               	clrf	postinc2,c
 13845  006EFE  6ADD               	clrf	postdec2,c
 13846                           
 13847                           ;tcpv4.c: 1191: tcbPtr->mss = 1460u;
 13848  006F00  EE20 F01C          	lfsr	2,28
 13849  006F04  500A               	movf	TCP_SocketInit@tcbPtr,w,c
 13850  006F06  26D9               	addwf	fsr2l,f,c
 13851  006F08  500B               	movf	TCP_SocketInit@tcbPtr+1,w,c
 13852  006F0A  22DA               	addwfc	fsr2h,f,c
 13853  006F0C  0EB4               	movlw	180
 13854  006F0E  6EDE               	movwf	postinc2,c
 13855  006F10  0E05               	movlw	5
 13856  006F12  6EDD               	movwf	postdec2,c
 13857                           
 13858                           ;tcpv4.c: 1192: tcbPtr->fsmState = CLOSED;
 13859  006F14  EE20 F02A          	lfsr	2,42
 13860  006F18  500A               	movf	TCP_SocketInit@tcbPtr,w,c
 13861  006F1A  26D9               	addwf	fsr2l,f,c
 13862  006F1C  500B               	movf	TCP_SocketInit@tcbPtr+1,w,c
 13863  006F1E  22DA               	addwfc	fsr2h,f,c
 13864  006F20  6ADF               	clrf	indf2,c
 13865                           
 13866                           ;tcpv4.c: 1193: tcbPtr->connectionEvent = NOP;
 13867  006F22  EE20 F02B          	lfsr	2,43
 13868  006F26  500A               	movf	TCP_SocketInit@tcbPtr,w,c
 13869  006F28  26D9               	addwf	fsr2l,f,c
 13870  006F2A  500B               	movf	TCP_SocketInit@tcbPtr+1,w,c
 13871  006F2C  22DA               	addwfc	fsr2h,f,c
 13872  006F2E  0E0D               	movlw	13
 13873  006F30  6EDF               	movwf	indf2,c
 13874                           
 13875                           ;tcpv4.c: 1194: tcbPtr->rxBufferStart = (0);
 13876  006F32  EE20 F01E          	lfsr	2,30
 13877  006F36  500A               	movf	TCP_SocketInit@tcbPtr,w,c
 13878  006F38  26D9               	addwf	fsr2l,f,c
 13879  006F3A  500B               	movf	TCP_SocketInit@tcbPtr+1,w,c
 13880  006F3C  22DA               	addwfc	fsr2h,f,c
 13881  006F3E  6ADE               	clrf	postinc2,c
 13882  006F40  6ADD               	clrf	postdec2,c
 13883                           
 13884                           ;tcpv4.c: 1195: tcbPtr->rxBufState = NO_BUFF;
 13885  006F42  EE20 F022          	lfsr	2,34
 13886  006F46  500A               	movf	TCP_SocketInit@tcbPtr,w,c
 13887  006F48  26D9               	addwf	fsr2l,f,c
 13888  006F4A  500B               	movf	TCP_SocketInit@tcbPtr+1,w,c
 13889  006F4C  22DA               	addwfc	fsr2h,f,c
 13890  006F4E  6ADF               	clrf	indf2,c
 13891                           
 13892                           ;tcpv4.c: 1196: tcbPtr->txBufferStart = (0);
 13893  006F50  EE20 F023          	lfsr	2,35
 13894  006F54  500A               	movf	TCP_SocketInit@tcbPtr,w,c
 13895  006F56  26D9               	addwf	fsr2l,f,c
 13896  006F58  500B               	movf	TCP_SocketInit@tcbPtr+1,w,c
 13897  006F5A  22DA               	addwfc	fsr2h,f,c
 13898  006F5C  6ADE               	clrf	postinc2,c
 13899  006F5E  6ADD               	clrf	postdec2,c
 13900                           
 13901                           ;tcpv4.c: 1197: tcbPtr->txBufferPtr = (0);
 13902  006F60  EE20 F025          	lfsr	2,37
 13903  006F64  500A               	movf	TCP_SocketInit@tcbPtr,w,c
 13904  006F66  26D9               	addwf	fsr2l,f,c
 13905  006F68  500B               	movf	TCP_SocketInit@tcbPtr+1,w,c
 13906  006F6A  22DA               	addwfc	fsr2h,f,c
 13907  006F6C  6ADE               	clrf	postinc2,c
 13908  006F6E  6ADD               	clrf	postdec2,c
 13909                           
 13910                           ;tcpv4.c: 1198: tcbPtr->bytesToSend = 0;
 13911  006F70  EE20 F027          	lfsr	2,39
 13912  006F74  500A               	movf	TCP_SocketInit@tcbPtr,w,c
 13913  006F76  26D9               	addwf	fsr2l,f,c
 13914  006F78  500B               	movf	TCP_SocketInit@tcbPtr+1,w,c
 13915  006F7A  22DA               	addwfc	fsr2h,f,c
 13916  006F7C  6ADE               	clrf	postinc2,c
 13917  006F7E  6ADD               	clrf	postdec2,c
 13918                           
 13919                           ;tcpv4.c: 1199: tcbPtr->txBufState = NO_BUFF;
 13920  006F80  EE20 F029          	lfsr	2,41
 13921  006F84  500A               	movf	TCP_SocketInit@tcbPtr,w,c
 13922  006F86  26D9               	addwf	fsr2l,f,c
 13923  006F88  500B               	movf	TCP_SocketInit@tcbPtr+1,w,c
 13924  006F8A  22DA               	addwfc	fsr2h,f,c
 13925  006F8C  6ADF               	clrf	indf2,c
 13926                           
 13927                           ;tcpv4.c: 1201: TCB_Insert(tcbPtr);
 13928  006F8E  C00A  F002         	movff	TCP_SocketInit@tcbPtr,TCB_Insert@ptr
 13929  006F92  C00B  F003         	movff	TCP_SocketInit@tcbPtr+1,TCB_Insert@ptr+1
 13930  006F96  EF4C  F03F         	goto	_TCB_Insert	;wreg free
 13931  006F9A                     __end_of_TCP_SocketInit:
 13932                           	opt stack 0
 13933                           tosu	equ	0xFFF
 13934                           tosh	equ	0xFFE
 13935                           tosl	equ	0xFFD
 13936                           pclath	equ	0xFFA
 13937                           tblptru	equ	0xFF8
 13938                           tblptrh	equ	0xFF7
 13939                           tblptrl	equ	0xFF6
 13940                           tablat	equ	0xFF5
 13941                           prodh	equ	0xFF4
 13942                           prodl	equ	0xFF3
 13943                           intcon	equ	0xFF2
 13944                           intcon2	equ	0xFF1
 13945                           indf0	equ	0xFEF
 13946                           postinc0	equ	0xFEE
 13947                           fsr0h	equ	0xFEA
 13948                           fsr0l	equ	0xFE9
 13949                           wreg	equ	0xFE8
 13950                           indf1	equ	0xFE7
 13951                           postinc1	equ	0xFE6
 13952                           plusw1	equ	0xFE3
 13953                           fsr1h	equ	0xFE2
 13954                           fsr1l	equ	0xFE1
 13955                           indf2	equ	0xFDF
 13956                           postinc2	equ	0xFDE
 13957                           postdec2	equ	0xFDD
 13958                           plusw2	equ	0xFDB
 13959                           fsr2h	equ	0xFDA
 13960                           fsr2l	equ	0xFD9
 13961                           status	equ	0xFD8
 13962                           
 13963 ;; *************** function _TCB_Insert *****************
 13964 ;; Defined at:
 13965 ;;		line 80 in file "../../TCPIP Library/source/tcpv4.c"
 13966 ;; Parameters:    Size  Location     Type
 13967 ;;  ptr             2    1[COMRAM] PTR struct .
 13968 ;;		 -> DEMO_TCP_EchoServer@port7TCB(55), 
 13969 ;; Auto vars:     Size  Location     Type
 13970 ;;		None
 13971 ;; Return value:  Size  Location     Type
 13972 ;;                  1    wreg      void 
 13973 ;; Registers used:
 13974 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13975 ;; Tracked objects:
 13976 ;;		On entry : 0/0
 13977 ;;		On exit  : F/1
 13978 ;;		Unchanged: 0/0
 13979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13980 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13983 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13984 ;;Total ram usage:        2 bytes
 13985 ;; Hardware stack levels used:    1
 13986 ;; Hardware stack levels required when called:    3
 13987 ;; This function calls:
 13988 ;;		Nothing
 13989 ;; This function is called by:
 13990 ;;		_TCP_SocketInit
 13991 ;; This function uses a non-reentrant model
 13992 ;;
 13993                           
 13994                           	psect	text73
 13995  007E98                     __ptext73:
 13996                           	opt stack 0
 13997  007E98                     _TCB_Insert:
 13998                           	opt stack 25
 13999                           
 14000                           ;tcpv4.c: 84: if(tcbList != (0))
 14001                           
 14002                           ;incstack = 0
 14003  007E98  0101               	movlb	1	; () banked
 14004  007E9A  51A2               	movf	_tcbList& (0+255),w,b
 14005  007E9C  11A3               	iorwf	(_tcbList+1)& (0+255),w,b
 14006  007E9E  E00A               	bz	l1185
 14007                           
 14008                           ; BSR set to: 1
 14009                           ;tcpv4.c: 85: {
 14010                           ;tcpv4.c: 87: tcbList->prevTCB = ptr;
 14011  007EA0  EE20 F02E          	lfsr	2,46
 14012  007EA4  51A2               	movf	_tcbList& (0+255),w,b
 14013  007EA6  26D9               	addwf	fsr2l,f,c
 14014  007EA8  51A3               	movf	(_tcbList+1)& (0+255),w,b
 14015  007EAA  22DA               	addwfc	fsr2h,f,c
 14016  007EAC  C002  FFDE         	movff	TCB_Insert@ptr,postinc2
 14017  007EB0  C003  FFDD         	movff	TCB_Insert@ptr+1,postdec2
 14018  007EB4                     l1185:
 14019                           
 14020                           ; BSR set to: 1
 14021                           ;tcpv4.c: 88: }
 14022                           ;tcpv4.c: 89: ptr->nextTCB = tcbList;
 14023  007EB4  EE20 F02C          	lfsr	2,44
 14024  007EB8  5002               	movf	TCB_Insert@ptr,w,c
 14025  007EBA  26D9               	addwf	fsr2l,f,c
 14026  007EBC  5003               	movf	TCB_Insert@ptr+1,w,c
 14027  007EBE  22DA               	addwfc	fsr2h,f,c
 14028  007EC0  C1A2  FFDE         	movff	_tcbList,postinc2
 14029  007EC4  C1A3  FFDD         	movff	_tcbList+1,postdec2
 14030                           
 14031                           ; BSR set to: 1
 14032                           ;tcpv4.c: 90: tcbList = ptr;
 14033  007EC8  C002  F1A2         	movff	TCB_Insert@ptr,_tcbList
 14034  007ECC  C003  F1A3         	movff	TCB_Insert@ptr+1,_tcbList+1
 14035                           
 14036                           ; BSR set to: 1
 14037                           ;tcpv4.c: 91: ptr->prevTCB = (0);
 14038  007ED0  EE20 F02E          	lfsr	2,46
 14039  007ED4  5002               	movf	TCB_Insert@ptr,w,c
 14040  007ED6  26D9               	addwf	fsr2l,f,c
 14041  007ED8  5003               	movf	TCB_Insert@ptr+1,w,c
 14042  007EDA  22DA               	addwfc	fsr2h,f,c
 14043  007EDC  6ADE               	clrf	postinc2,c
 14044  007EDE  6ADD               	clrf	postdec2,c
 14045                           
 14046                           ; BSR set to: 1
 14047                           ;tcpv4.c: 92: tcbListSize ++;
 14048  007EE0  2BA7               	incf	_tcbListSize& (0+255),f,b
 14049                           
 14050                           ; BSR set to: 1
 14051  007EE2  0C00               	retlw	0	;funcret
 14052  007EE4                     __end_of_TCB_Insert:
 14053                           	opt stack 0
 14054                           tosu	equ	0xFFF
 14055                           tosh	equ	0xFFE
 14056                           tosl	equ	0xFFD
 14057                           pclath	equ	0xFFA
 14058                           tblptru	equ	0xFF8
 14059                           tblptrh	equ	0xFF7
 14060                           tblptrl	equ	0xFF6
 14061                           tablat	equ	0xFF5
 14062                           prodh	equ	0xFF4
 14063                           prodl	equ	0xFF3
 14064                           intcon	equ	0xFF2
 14065                           intcon2	equ	0xFF1
 14066                           indf0	equ	0xFEF
 14067                           postinc0	equ	0xFEE
 14068                           fsr0h	equ	0xFEA
 14069                           fsr0l	equ	0xFE9
 14070                           wreg	equ	0xFE8
 14071                           indf1	equ	0xFE7
 14072                           postinc1	equ	0xFE6
 14073                           plusw1	equ	0xFE3
 14074                           fsr1h	equ	0xFE2
 14075                           fsr1l	equ	0xFE1
 14076                           indf2	equ	0xFDF
 14077                           postinc2	equ	0xFDE
 14078                           postdec2	equ	0xFDD
 14079                           plusw2	equ	0xFDB
 14080                           fsr2h	equ	0xFDA
 14081                           fsr2l	equ	0xFD9
 14082                           status	equ	0xFD8
 14083                           
 14084 ;; *************** function _TCP_SendDone *****************
 14085 ;; Defined at:
 14086 ;;		line 1347 in file "../../TCPIP Library/source/tcpv4.c"
 14087 ;; Parameters:    Size  Location     Type
 14088 ;;  tcbPtr          2    9[COMRAM] PTR struct .
 14089 ;;		 -> DEMO_TCP_EchoServer@port7TCB(55), 
 14090 ;; Auto vars:     Size  Location     Type
 14091 ;;  ret             1   11[COMRAM] unsigned char 
 14092 ;; Return value:  Size  Location     Type
 14093 ;;                  1    wreg      unsigned char 
 14094 ;; Registers used:
 14095 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14096 ;; Tracked objects:
 14097 ;;		On entry : D/0
 14098 ;;		On exit  : 0/0
 14099 ;;		Unchanged: 0/0
 14100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14101 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14102 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14104 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14105 ;;Total ram usage:        3 bytes
 14106 ;; Hardware stack levels used:    1
 14107 ;; Hardware stack levels required when called:    4
 14108 ;; This function calls:
 14109 ;;		_TCB_Check
 14110 ;; This function is called by:
 14111 ;;		_DEMO_TCP_EchoServer
 14112 ;; This function uses a non-reentrant model
 14113 ;;
 14114                           
 14115                           	psect	text74
 14116  0084AA                     __ptext74:
 14117                           	opt stack 0
 14118  0084AA                     _TCP_SendDone:
 14119                           	opt stack 25
 14120                           
 14121                           ;tcpv4.c: 1349: bool ret = 0;
 14122                           
 14123                           ; BSR set to: 1
 14124                           ;incstack = 0
 14125  0084AA  6A0C               	clrf	TCP_SendDone@ret,c
 14126                           
 14127                           ;tcpv4.c: 1351: if(TCB_Check(tcbPtr))
 14128  0084AC  C00A  F002         	movff	TCP_SendDone@tcbPtr,TCB_Check@ptr
 14129  0084B0  C00B  F003         	movff	TCP_SendDone@tcbPtr+1,TCB_Check@ptr+1
 14130  0084B4  ECF3  F03B         	call	_TCB_Check	;wreg free
 14131  0084B8  0900               	iorlw	0
 14132  0084BA  E00A               	bz	l1455
 14133                           
 14134                           ;tcpv4.c: 1352: {
 14135                           ;tcpv4.c: 1353: if (tcbPtr->txBufState == NO_BUFF)
 14136  0084BC  EE20 F029          	lfsr	2,41
 14137  0084C0  500A               	movf	TCP_SendDone@tcbPtr,w,c
 14138  0084C2  26D9               	addwf	fsr2l,f,c
 14139  0084C4  500B               	movf	TCP_SendDone@tcbPtr+1,w,c
 14140  0084C6  22DA               	addwfc	fsr2h,f,c
 14141  0084C8  50DF               	movf	indf2,w,c
 14142  0084CA  E102               	bnz	l1455
 14143                           
 14144                           ;tcpv4.c: 1354: {
 14145                           ;tcpv4.c: 1355: ret = 1;
 14146  0084CC  0E01               	movlw	1
 14147  0084CE  6E0C               	movwf	TCP_SendDone@ret,c
 14148  0084D0                     l1455:
 14149                           
 14150                           ;tcpv4.c: 1356: }
 14151                           ;tcpv4.c: 1357: }
 14152                           ;tcpv4.c: 1358: return ret;
 14153  0084D0  500C               	movf	TCP_SendDone@ret,w,c
 14154  0084D2  0012               	return		;funcret
 14155  0084D4                     __end_of_TCP_SendDone:
 14156                           	opt stack 0
 14157                           tosu	equ	0xFFF
 14158                           tosh	equ	0xFFE
 14159                           tosl	equ	0xFFD
 14160                           pclath	equ	0xFFA
 14161                           tblptru	equ	0xFF8
 14162                           tblptrh	equ	0xFF7
 14163                           tblptrl	equ	0xFF6
 14164                           tablat	equ	0xFF5
 14165                           prodh	equ	0xFF4
 14166                           prodl	equ	0xFF3
 14167                           intcon	equ	0xFF2
 14168                           intcon2	equ	0xFF1
 14169                           indf0	equ	0xFEF
 14170                           postinc0	equ	0xFEE
 14171                           fsr0h	equ	0xFEA
 14172                           fsr0l	equ	0xFE9
 14173                           wreg	equ	0xFE8
 14174                           indf1	equ	0xFE7
 14175                           postinc1	equ	0xFE6
 14176                           plusw1	equ	0xFE3
 14177                           fsr1h	equ	0xFE2
 14178                           fsr1l	equ	0xFE1
 14179                           indf2	equ	0xFDF
 14180                           postinc2	equ	0xFDE
 14181                           postdec2	equ	0xFDD
 14182                           plusw2	equ	0xFDB
 14183                           fsr2h	equ	0xFDA
 14184                           fsr2l	equ	0xFD9
 14185                           status	equ	0xFD8
 14186                           
 14187 ;; *************** function _TCP_Send *****************
 14188 ;; Defined at:
 14189 ;;		line 1318 in file "../../TCPIP Library/source/tcpv4.c"
 14190 ;; Parameters:    Size  Location     Type
 14191 ;;  tcbPtr          2   84[BANK0 ] PTR struct .
 14192 ;;		 -> DEMO_TCP_EchoServer@port7TCB(55), 
 14193 ;;  data            2   86[BANK0 ] PTR unsigned char 
 14194 ;;		 -> DEMO_TCP_EchoServer@txdataPort7(20), 
 14195 ;;  dataLen         2   88[BANK0 ] unsigned int 
 14196 ;; Auto vars:     Size  Location     Type
 14197 ;;  ret             1    0        unsigned char 
 14198 ;; Return value:  Size  Location     Type
 14199 ;;                  1    wreg      unsigned char 
 14200 ;; Registers used:
 14201 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14202 ;; Tracked objects:
 14203 ;;		On entry : F/0
 14204 ;;		On exit  : 0/0
 14205 ;;		Unchanged: 0/0
 14206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14207 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14208 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14210 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14211 ;;Total ram usage:        7 bytes
 14212 ;; Hardware stack levels used:    1
 14213 ;; Hardware stack levels required when called:   10
 14214 ;; This function calls:
 14215 ;;		_TCP_Snd
 14216 ;;		_TCP_SocketPoll
 14217 ;; This function is called by:
 14218 ;;		_DEMO_TCP_EchoServer
 14219 ;; This function uses a non-reentrant model
 14220 ;;
 14221                           
 14222                           	psect	text75
 14223  007060                     __ptext75:
 14224                           	opt stack 0
 14225  007060                     _TCP_Send:
 14226                           	opt stack 19
 14227                           
 14228                           ; BSR set to: 0
 14229                           ;tcpv4.c: 1322: if (TCP_SocketPoll(tcbPtr) == SOCKET_CONNECTED)
 14230                           
 14231                           ; BSR set to: 0
 14232                           
 14233                           ;incstack = 0
 14234  007060  C0B4  F00A         	movff	TCP_Send@tcbPtr,TCP_SocketPoll@socket_ptr
 14235  007064  C0B5  F00B         	movff	TCP_Send@tcbPtr+1,TCP_SocketPoll@socket_ptr+1
 14236  007068  EC92  F042         	call	_TCP_SocketPoll	;wreg free
 14237  00706C  0A03               	xorlw	3
 14238  00706E  A4D8               	btfss	status,2,c
 14239  007070  0012               	return	
 14240                           
 14241                           ;tcpv4.c: 1323: {
 14242                           ;tcpv4.c: 1324: if (tcbPtr->txBufState == NO_BUFF)
 14243  007072  0100               	movlb	0	; () banked
 14244  007074  EE20 F029          	lfsr	2,41
 14245  007078  51B4               	movf	TCP_Send@tcbPtr& (0+255),w,b
 14246  00707A  26D9               	addwf	fsr2l,f,c
 14247  00707C  51B5               	movf	(TCP_Send@tcbPtr+1)& (0+255),w,b
 14248  00707E  22DA               	addwfc	fsr2h,f,c
 14249  007080  50DF               	movf	indf2,w,c
 14250  007082  A4D8               	btfss	status,2,c
 14251  007084  0012               	return	
 14252                           
 14253                           ; BSR set to: 0
 14254                           ;tcpv4.c: 1325: {
 14255                           ;tcpv4.c: 1326: if (data != (0))
 14256  007086  51B6               	movf	TCP_Send@data& (0+255),w,b
 14257  007088  11B7               	iorwf	(TCP_Send@data+1)& (0+255),w,b
 14258  00708A  B4D8               	btfsc	status,2,c
 14259  00708C  0012               	return	
 14260                           
 14261                           ; BSR set to: 0
 14262                           ;tcpv4.c: 1327: {
 14263                           ;tcpv4.c: 1328: tcbPtr->txBufferStart = data;
 14264  00708E  EE20 F023          	lfsr	2,35
 14265  007092  51B4               	movf	TCP_Send@tcbPtr& (0+255),w,b
 14266  007094  26D9               	addwf	fsr2l,f,c
 14267  007096  51B5               	movf	(TCP_Send@tcbPtr+1)& (0+255),w,b
 14268  007098  22DA               	addwfc	fsr2h,f,c
 14269  00709A  C0B6  FFDE         	movff	TCP_Send@data,postinc2
 14270  00709E  C0B7  FFDD         	movff	TCP_Send@data+1,postdec2
 14271                           
 14272                           ; BSR set to: 0
 14273                           ;tcpv4.c: 1329: tcbPtr->txBufferPtr = tcbPtr->txBufferStart;
 14274  0070A2  EE20 F023          	lfsr	2,35
 14275  0070A6  51B4               	movf	TCP_Send@tcbPtr& (0+255),w,b
 14276  0070A8  26D9               	addwf	fsr2l,f,c
 14277  0070AA  51B5               	movf	(TCP_Send@tcbPtr+1)& (0+255),w,b
 14278  0070AC  22DA               	addwfc	fsr2h,f,c
 14279  0070AE  EE10 F025          	lfsr	1,37
 14280  0070B2  51B4               	movf	TCP_Send@tcbPtr& (0+255),w,b
 14281  0070B4  26E1               	addwf	fsr1l,f,c
 14282  0070B6  51B5               	movf	(TCP_Send@tcbPtr+1)& (0+255),w,b
 14283  0070B8  22E2               	addwfc	fsr1h,f,c
 14284  0070BA  CFDE FFE6          	movff	postinc2,postinc1
 14285  0070BE  CFDD FFE5          	movff	postdec2,postdec1
 14286                           
 14287                           ; BSR set to: 0
 14288                           ;tcpv4.c: 1330: tcbPtr->bytesToSend = dataLen;
 14289  0070C2  EE20 F027          	lfsr	2,39
 14290  0070C6  51B4               	movf	TCP_Send@tcbPtr& (0+255),w,b
 14291  0070C8  26D9               	addwf	fsr2l,f,c
 14292  0070CA  51B5               	movf	(TCP_Send@tcbPtr+1)& (0+255),w,b
 14293  0070CC  22DA               	addwfc	fsr2h,f,c
 14294  0070CE  C0B8  FFDE         	movff	TCP_Send@dataLen,postinc2
 14295  0070D2  C0B9  FFDD         	movff	TCP_Send@dataLen+1,postdec2
 14296                           
 14297                           ; BSR set to: 0
 14298                           ;tcpv4.c: 1331: tcbPtr->txBufState = TX_BUFF_IN_USE;
 14299  0070D6  EE20 F029          	lfsr	2,41
 14300  0070DA  51B4               	movf	TCP_Send@tcbPtr& (0+255),w,b
 14301  0070DC  26D9               	addwf	fsr2l,f,c
 14302  0070DE  51B5               	movf	(TCP_Send@tcbPtr+1)& (0+255),w,b
 14303  0070E0  22DA               	addwfc	fsr2h,f,c
 14304  0070E2  0E02               	movlw	2
 14305  0070E4  6EDF               	movwf	indf2,c
 14306                           
 14307                           ; BSR set to: 0
 14308                           ;tcpv4.c: 1333: tcbPtr->timeoutReloadValue = ((unsigned long)1*2);
 14309  0070E6  EE20 F032          	lfsr	2,50
 14310  0070EA  51B4               	movf	TCP_Send@tcbPtr& (0+255),w,b
 14311  0070EC  26D9               	addwf	fsr2l,f,c
 14312  0070EE  51B5               	movf	(TCP_Send@tcbPtr+1)& (0+255),w,b
 14313  0070F0  22DA               	addwfc	fsr2h,f,c
 14314  0070F2  0E02               	movlw	2
 14315  0070F4  6EDE               	movwf	postinc2,c
 14316  0070F6  6ADD               	clrf	postdec2,c
 14317                           
 14318                           ; BSR set to: 0
 14319                           ;tcpv4.c: 1334: tcbPtr->timeoutsCount = (5u);
 14320  0070F8  EE20 F034          	lfsr	2,52
 14321  0070FC  51B4               	movf	TCP_Send@tcbPtr& (0+255),w,b
 14322  0070FE  26D9               	addwf	fsr2l,f,c
 14323  007100  51B5               	movf	(TCP_Send@tcbPtr+1)& (0+255),w,b
 14324  007102  22DA               	addwfc	fsr2h,f,c
 14325  007104  0E05               	movlw	5
 14326  007106  6EDF               	movwf	indf2,c
 14327                           
 14328                           ; BSR set to: 0
 14329                           ;tcpv4.c: 1336: tcbPtr->flags = 0x10U;
 14330  007108  EE20 F035          	lfsr	2,53
 14331  00710C  51B4               	movf	TCP_Send@tcbPtr& (0+255),w,b
 14332  00710E  26D9               	addwf	fsr2l,f,c
 14333  007110  51B5               	movf	(TCP_Send@tcbPtr+1)& (0+255),w,b
 14334  007112  22DA               	addwfc	fsr2h,f,c
 14335  007114  0E10               	movlw	16
 14336  007116  6EDF               	movwf	indf2,c
 14337                           
 14338                           ; BSR set to: 0
 14339                           ;tcpv4.c: 1338: TCP_Snd(tcbPtr);
 14340  007118  C0B4  F058         	movff	TCP_Send@tcbPtr,TCP_Snd@tcbPtr
 14341  00711C  C0B5  F059         	movff	TCP_Send@tcbPtr+1,TCP_Snd@tcbPtr+1
 14342  007120  EF11  F01D         	goto	_TCP_Snd	;wreg free
 14343  007124                     __end_of_TCP_Send:
 14344                           	opt stack 0
 14345                           tosu	equ	0xFFF
 14346                           tosh	equ	0xFFE
 14347                           tosl	equ	0xFFD
 14348                           pclath	equ	0xFFA
 14349                           tblptru	equ	0xFF8
 14350                           tblptrh	equ	0xFF7
 14351                           tblptrl	equ	0xFF6
 14352                           tablat	equ	0xFF5
 14353                           prodh	equ	0xFF4
 14354                           prodl	equ	0xFF3
 14355                           intcon	equ	0xFF2
 14356                           intcon2	equ	0xFF1
 14357                           indf0	equ	0xFEF
 14358                           postinc0	equ	0xFEE
 14359                           fsr0h	equ	0xFEA
 14360                           fsr0l	equ	0xFE9
 14361                           wreg	equ	0xFE8
 14362                           indf1	equ	0xFE7
 14363                           postinc1	equ	0xFE6
 14364                           postdec1	equ	0xFE5
 14365                           plusw1	equ	0xFE3
 14366                           fsr1h	equ	0xFE2
 14367                           fsr1l	equ	0xFE1
 14368                           indf2	equ	0xFDF
 14369                           postinc2	equ	0xFDE
 14370                           postdec2	equ	0xFDD
 14371                           plusw2	equ	0xFDB
 14372                           fsr2h	equ	0xFDA
 14373                           fsr2l	equ	0xFD9
 14374                           status	equ	0xFD8
 14375                           
 14376 ;; *************** function _TCP_SocketPoll *****************
 14377 ;; Defined at:
 14378 ;;		line 1220 in file "../../TCPIP Library/source/tcpv4.c"
 14379 ;; Parameters:    Size  Location     Type
 14380 ;;  socket_ptr      2    9[COMRAM] PTR struct .
 14381 ;;		 -> DEMO_TCP_EchoServer@port7TCB(55), 
 14382 ;; Auto vars:     Size  Location     Type
 14383 ;;  tmpSocketSta    1   11[COMRAM] enum E667
 14384 ;; Return value:  Size  Location     Type
 14385 ;;                  1    wreg      enum E667
 14386 ;; Registers used:
 14387 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14388 ;; Tracked objects:
 14389 ;;		On entry : D/2
 14390 ;;		On exit  : 0/0
 14391 ;;		Unchanged: 0/0
 14392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14393 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14394 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14396 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14397 ;;Total ram usage:        3 bytes
 14398 ;; Hardware stack levels used:    1
 14399 ;; Hardware stack levels required when called:    4
 14400 ;; This function calls:
 14401 ;;		_TCB_Check
 14402 ;; This function is called by:
 14403 ;;		_TCP_Send
 14404 ;;		_DEMO_TCP_EchoServer
 14405 ;; This function uses a non-reentrant model
 14406 ;;
 14407                           
 14408                           	psect	text76
 14409  008524                     __ptext76:
 14410                           	opt stack 0
 14411  008524                     _TCP_SocketPoll:
 14412                           	opt stack 25
 14413                           
 14414                           ;tcpv4.c: 1222: socketState_t tmpSocketState;
 14415                           ;tcpv4.c: 1224: tmpSocketState = NOT_A_SOCKET;
 14416                           
 14417                           ;incstack = 0
 14418  008524  6A0C               	clrf	TCP_SocketPoll@tmpSocketState,c
 14419                           
 14420                           ;tcpv4.c: 1226: if(TCB_Check(socket_ptr))
 14421  008526  C00A  F002         	movff	TCP_SocketPoll@socket_ptr,TCB_Check@ptr
 14422  00852A  C00B  F003         	movff	TCP_SocketPoll@socket_ptr+1,TCB_Check@ptr+1
 14423  00852E  ECF3  F03B         	call	_TCB_Check	;wreg free
 14424  008532  0900               	iorlw	0
 14425  008534  E008               	bz	l9467
 14426                           
 14427                           ;tcpv4.c: 1227: {
 14428                           ;tcpv4.c: 1228: tmpSocketState = socket_ptr->socketState;
 14429  008536  EE20 F036          	lfsr	2,54
 14430  00853A  500A               	movf	TCP_SocketPoll@socket_ptr,w,c
 14431  00853C  26D9               	addwf	fsr2l,f,c
 14432  00853E  500B               	movf	TCP_SocketPoll@socket_ptr+1,w,c
 14433  008540  22DA               	addwfc	fsr2h,f,c
 14434  008542  50DF               	movf	indf2,w,c
 14435  008544  6E0C               	movwf	TCP_SocketPoll@tmpSocketState,c
 14436  008546                     l9467:
 14437                           
 14438                           ;tcpv4.c: 1229: }
 14439                           ;tcpv4.c: 1231: return tmpSocketState;
 14440  008546  500C               	movf	TCP_SocketPoll@tmpSocketState,w,c
 14441  008548  0012               	return		;funcret
 14442  00854A                     __end_of_TCP_SocketPoll:
 14443                           	opt stack 0
 14444                           tosu	equ	0xFFF
 14445                           tosh	equ	0xFFE
 14446                           tosl	equ	0xFFD
 14447                           pclath	equ	0xFFA
 14448                           tblptru	equ	0xFF8
 14449                           tblptrh	equ	0xFF7
 14450                           tblptrl	equ	0xFF6
 14451                           tablat	equ	0xFF5
 14452                           prodh	equ	0xFF4
 14453                           prodl	equ	0xFF3
 14454                           intcon	equ	0xFF2
 14455                           intcon2	equ	0xFF1
 14456                           indf0	equ	0xFEF
 14457                           postinc0	equ	0xFEE
 14458                           fsr0h	equ	0xFEA
 14459                           fsr0l	equ	0xFE9
 14460                           wreg	equ	0xFE8
 14461                           indf1	equ	0xFE7
 14462                           postinc1	equ	0xFE6
 14463                           postdec1	equ	0xFE5
 14464                           plusw1	equ	0xFE3
 14465                           fsr1h	equ	0xFE2
 14466                           fsr1l	equ	0xFE1
 14467                           indf2	equ	0xFDF
 14468                           postinc2	equ	0xFDE
 14469                           postdec2	equ	0xFDD
 14470                           plusw2	equ	0xFDB
 14471                           fsr2h	equ	0xFDA
 14472                           fsr2l	equ	0xFD9
 14473                           status	equ	0xFD8
 14474                           
 14475 ;; *************** function _TCP_Listen *****************
 14476 ;; Defined at:
 14477 ;;		line 1250 in file "../../TCPIP Library/source/tcpv4.c"
 14478 ;; Parameters:    Size  Location     Type
 14479 ;;  tcbPtr          2  116[BANK0 ] PTR struct .
 14480 ;;		 -> DEMO_TCP_EchoServer@port7TCB(55), 
 14481 ;; Auto vars:     Size  Location     Type
 14482 ;;  ret             1    0        unsigned char 
 14483 ;; Return value:  Size  Location     Type
 14484 ;;                  1    wreg      unsigned char 
 14485 ;; Registers used:
 14486 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14487 ;; Tracked objects:
 14488 ;;		On entry : F/0
 14489 ;;		On exit  : 0/0
 14490 ;;		Unchanged: 0/0
 14491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14492 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14493 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14494 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14495 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14496 ;;Total ram usage:        5 bytes
 14497 ;; Hardware stack levels used:    1
 14498 ;; Hardware stack levels required when called:   12
 14499 ;; This function calls:
 14500 ;;		_TCB_Check
 14501 ;;		_TCP_FiniteStateMachine
 14502 ;; This function is called by:
 14503 ;;		_DEMO_TCP_EchoServer
 14504 ;; This function uses a non-reentrant model
 14505 ;;
 14506                           
 14507                           	psect	text77
 14508  00786C                     __ptext77:
 14509                           	opt stack 0
 14510  00786C                     _TCP_Listen:
 14511                           	opt stack 17
 14512                           
 14513                           ; BSR set to: 0
 14514                           ;tcpv4.c: 1254: ;
 14515                           ;tcpv4.c: 1256: if (TCB_Check(tcbPtr))
 14516                           
 14517                           ; BSR set to: 0
 14518                           
 14519                           ;incstack = 0
 14520  00786C  C0D4  F002         	movff	TCP_Listen@tcbPtr,TCB_Check@ptr
 14521  007870  C0D5  F003         	movff	TCP_Listen@tcbPtr+1,TCB_Check@ptr+1
 14522  007874  ECF3  F03B         	call	_TCB_Check	;wreg free
 14523  007878  0900               	iorlw	0
 14524  00787A  B4D8               	btfsc	status,2,c
 14525  00787C  0012               	return	
 14526                           
 14527                           ;tcpv4.c: 1257: {
 14528                           ;tcpv4.c: 1258: tcbPtr->connectionEvent = PASIVE_OPEN;
 14529  00787E  0100               	movlb	0	; () banked
 14530  007880  EE20 F02B          	lfsr	2,43
 14531  007884  51D4               	movf	TCP_Listen@tcbPtr& (0+255),w,b
 14532  007886  26D9               	addwf	fsr2l,f,c
 14533  007888  51D5               	movf	(TCP_Listen@tcbPtr+1)& (0+255),w,b
 14534  00788A  22DA               	addwfc	fsr2h,f,c
 14535  00788C  0E02               	movlw	2
 14536  00788E  6EDF               	movwf	indf2,c
 14537                           
 14538                           ;tcpv4.c: 1259: tcbPtr->socketState = SOCKET_IN_PROGRESS;
 14539  007890  EE20 F036          	lfsr	2,54
 14540  007894  51D4               	movf	TCP_Listen@tcbPtr& (0+255),w,b
 14541  007896  26D9               	addwf	fsr2l,f,c
 14542  007898  51D5               	movf	(TCP_Listen@tcbPtr+1)& (0+255),w,b
 14543  00789A  22DA               	addwfc	fsr2h,f,c
 14544  00789C  0E02               	movlw	2
 14545  00789E  6EDF               	movwf	indf2,c
 14546                           
 14547                           ;tcpv4.c: 1260: tcbPtr->localSeqno = nextSequenceNumber;
 14548  0078A0  EE20 F010          	lfsr	2,16
 14549  0078A4  51D4               	movf	TCP_Listen@tcbPtr& (0+255),w,b
 14550  0078A6  26D9               	addwf	fsr2l,f,c
 14551  0078A8  51D5               	movf	(TCP_Listen@tcbPtr+1)& (0+255),w,b
 14552  0078AA  22DA               	addwfc	fsr2h,f,c
 14553  0078AC  C22A  FFDE         	movff	_nextSequenceNumber,postinc2
 14554  0078B0  C22B  FFDE         	movff	_nextSequenceNumber+1,postinc2
 14555  0078B4  C22C  FFDE         	movff	_nextSequenceNumber+2,postinc2
 14556  0078B8  C22D  FFDE         	movff	_nextSequenceNumber+3,postinc2
 14557                           
 14558                           ; BSR set to: 0
 14559                           ;tcpv4.c: 1261: currentTCB = tcbPtr;
 14560  0078BC  C0D4  F0FE         	movff	TCP_Listen@tcbPtr,_currentTCB
 14561  0078C0  C0D5  F0FF         	movff	TCP_Listen@tcbPtr+1,_currentTCB+1
 14562                           
 14563                           ; BSR set to: 0
 14564                           ;tcpv4.c: 1262: if (tcbPtr->localPort == 0)
 14565  0078C4  C0D4  FFD9         	movff	TCP_Listen@tcbPtr,fsr2l
 14566  0078C8  C0D5  FFDA         	movff	TCP_Listen@tcbPtr+1,fsr2h
 14567  0078CC  50DE               	movf	postinc2,w,c
 14568  0078CE  10DE               	iorwf	postinc2,w,c
 14569  0078D0  E002 EF55  F008    	bnz	_TCP_FiniteStateMachine
 14570                           
 14571                           ; BSR set to: 0
 14572                           ;tcpv4.c: 1263: {
 14573                           ;tcpv4.c: 1264: tcbPtr->localPort = nextAvailablePort++;
 14574  0078D6  C0D4  FFD9         	movff	TCP_Listen@tcbPtr,fsr2l
 14575  0078DA  C0D5  FFDA         	movff	TCP_Listen@tcbPtr+1,fsr2h
 14576  0078DE  C19C  FFDE         	movff	_nextAvailablePort,postinc2
 14577  0078E2  C19D  FFDD         	movff	_nextAvailablePort+1,postdec2
 14578                           
 14579                           ; BSR set to: 0
 14580  0078E6  0101               	movlb	1	; () banked
 14581  0078E8  4B9C               	infsnz	_nextAvailablePort& (0+255),f,b
 14582  0078EA  2B9D               	incf	(_nextAvailablePort+1)& (0+255),f,b
 14583  0078EC  EF55  F008         	goto	_TCP_FiniteStateMachine	;wreg free
 14584  0078F0                     __end_of_TCP_Listen:
 14585                           	opt stack 0
 14586                           tosu	equ	0xFFF
 14587                           tosh	equ	0xFFE
 14588                           tosl	equ	0xFFD
 14589                           pclath	equ	0xFFA
 14590                           tblptru	equ	0xFF8
 14591                           tblptrh	equ	0xFF7
 14592                           tblptrl	equ	0xFF6
 14593                           tablat	equ	0xFF5
 14594                           prodh	equ	0xFF4
 14595                           prodl	equ	0xFF3
 14596                           intcon	equ	0xFF2
 14597                           intcon2	equ	0xFF1
 14598                           indf0	equ	0xFEF
 14599                           postinc0	equ	0xFEE
 14600                           fsr0h	equ	0xFEA
 14601                           fsr0l	equ	0xFE9
 14602                           wreg	equ	0xFE8
 14603                           indf1	equ	0xFE7
 14604                           postinc1	equ	0xFE6
 14605                           postdec1	equ	0xFE5
 14606                           plusw1	equ	0xFE3
 14607                           fsr1h	equ	0xFE2
 14608                           fsr1l	equ	0xFE1
 14609                           indf2	equ	0xFDF
 14610                           postinc2	equ	0xFDE
 14611                           postdec2	equ	0xFDD
 14612                           plusw2	equ	0xFDB
 14613                           fsr2h	equ	0xFDA
 14614                           fsr2l	equ	0xFD9
 14615                           status	equ	0xFD8
 14616                           
 14617 ;; *************** function _TCP_FiniteStateMachine *****************
 14618 ;; Defined at:
 14619 ;;		line 602 in file "../../TCPIP Library/source/tcpv4.c"
 14620 ;; Parameters:    Size  Location     Type
 14621 ;;		None
 14622 ;; Auto vars:     Size  Location     Type
 14623 ;;  notAckBytes     2  112[BANK0 ] unsigned int 
 14624 ;;  nextState       1  115[BANK0 ] enum E638
 14625 ;;  event           1  114[BANK0 ] enum E651
 14626 ;;  ret             1  111[BANK0 ] unsigned char 
 14627 ;; Return value:  Size  Location     Type
 14628 ;;                  1    wreg      unsigned char 
 14629 ;; Registers used:
 14630 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14631 ;; Tracked objects:
 14632 ;;		On entry : 0/0
 14633 ;;		On exit  : F/0
 14634 ;;		Unchanged: 0/0
 14635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14637 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14638 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14639 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14640 ;;Total ram usage:       17 bytes
 14641 ;; Hardware stack levels used:    1
 14642 ;; Hardware stack levels required when called:   11
 14643 ;; This function calls:
 14644 ;;		_TCB_Reset
 14645 ;;		_TCP_PayloadSave
 14646 ;;		_TCP_Snd
 14647 ;; This function is called by:
 14648 ;;		_TCP_Recv
 14649 ;;		_TCP_Listen
 14650 ;;		_TCP_Update
 14651 ;; This function uses a non-reentrant model
 14652 ;;
 14653                           
 14654                           	psect	text78
 14655  0010AA                     __ptext78:
 14656                           	opt stack 0
 14657  0010AA                     _TCP_FiniteStateMachine:
 14658                           	opt stack 17
 14659                           
 14660                           ;tcpv4.c: 604: uint16_t notAckBytes;
 14661                           ;tcpv4.c: 605: bool ret = 0;
 14662                           
 14663                           ;incstack = 0
 14664  0010AA  0100               	movlb	0	; () banked
 14665  0010AC  6BCF               	clrf	TCP_FiniteStateMachine@ret& (0+255),b
 14666                           
 14667                           ; BSR set to: 0
 14668                           ;tcpv4.c: 607: tcp_fsm_states_t nextState = currentTCB->fsmState;
 14669  0010AE  0E2A               	movlw	42
 14670  0010B0  25FE               	addwf	_currentTCB& (0+255),w,b
 14671  0010B2  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 14672  0010B4  0E00               	movlw	0
 14673  0010B6  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 14674  0010B8  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 14675  0010BA  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 14676  0010BE  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 14677  0010C2  0E00               	movlw	low (__smallconst shr (0+16))
 14678  0010C4  6EF8               	movwf	tblptru,c
 14679  0010C6  0E0F               	movlw	(high __ramtop+-1)
 14680  0010C8  64F7               	cpfsgt	tblptrh,c
 14681  0010CA  D003               	bra	u11657
 14682  0010CC  0008               	tblrd		*
 14683  0010CE  50F5               	movf	tablat,w,c
 14684  0010D0  D005               	bra	u11650
 14685  0010D2                     u11657:
 14686  0010D2  CFF6 FFE9          	movff	tblptrl,fsr0l
 14687  0010D6  CFF7 FFEA          	movff	tblptrh,fsr0h
 14688  0010DA  50EF               	movf	indf0,w,c
 14689  0010DC                     u11650:
 14690  0010DC  0100               	movlb	0	; () banked
 14691  0010DE  6FD3               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 14692                           
 14693                           ;tcpv4.c: 608: tcpEvent_t event = currentTCB->connectionEvent;
 14694  0010E0  0E2B               	movlw	43
 14695  0010E2  25FE               	addwf	_currentTCB& (0+255),w,b
 14696  0010E4  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 14697  0010E6  0E00               	movlw	0
 14698  0010E8  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 14699  0010EA  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 14700  0010EC  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 14701  0010F0  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 14702  0010F4  0E00               	movlw	low (__smallconst shr (0+16))
 14703  0010F6  6EF8               	movwf	tblptru,c
 14704  0010F8  0E0F               	movlw	(high __ramtop+-1)
 14705  0010FA  64F7               	cpfsgt	tblptrh,c
 14706  0010FC  D003               	bra	u11667
 14707  0010FE  0008               	tblrd		*
 14708  001100  50F5               	movf	tablat,w,c
 14709  001102  D005               	bra	u11660
 14710  001104                     u11667:
 14711  001104  CFF6 FFE9          	movff	tblptrl,fsr0l
 14712  001108  CFF7 FFEA          	movff	tblptrh,fsr0h
 14713  00110C  50EF               	movf	indf0,w,c
 14714  00110E                     u11660:
 14715  00110E  0100               	movlb	0	; () banked
 14716  001110  6FD2               	movwf	TCP_FiniteStateMachine@event& (0+255),b
 14717                           
 14718                           ;tcpv4.c: 610: switch (currentTCB->fsmState)
 14719  001112  EFA0  F01C         	goto	l8819
 14720  001116                     l8481:
 14721                           
 14722                           ; BSR set to: 0
 14723                           ;tcpv4.c: 616: ;
 14724                           ;tcpv4.c: 619: currentTCB->destIP = receivedRemoteAddress;
 14725  001116  0E02               	movlw	2
 14726  001118  25FE               	addwf	_currentTCB& (0+255),w,b
 14727  00111A  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 14728  00111C  0E00               	movlw	0
 14729  00111E  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 14730  001120  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 14731  001122  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 14732  001126  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 14733  00112A  0E00               	movlw	low (__smallconst shr (0+16))
 14734  00112C  6EF8               	movwf	tblptru,c
 14735  00112E  0E0F               	movlw	(high __ramtop+-1)
 14736  001130  64F7               	cpfsgt	tblptrh,c
 14737  001132  D00D               	bra	u11677
 14738  001134  C196  FFF5         	movff	_receivedRemoteAddress,tablat
 14739  001138  000D               	tblwt		*+
 14740  00113A  C197  FFF5         	movff	_receivedRemoteAddress+1,tablat
 14741  00113E  000D               	tblwt		*+
 14742  001140  C198  FFF5         	movff	_receivedRemoteAddress+2,tablat
 14743  001144  000D               	tblwt		*+
 14744  001146  C199  FFF5         	movff	_receivedRemoteAddress+3,tablat
 14745  00114A  000C               	tblwt		*
 14746  00114C  D00C               	bra	u11670
 14747  00114E                     u11677:
 14748  00114E  CFF6 FFE9          	movff	tblptrl,fsr0l
 14749  001152  CFF7 FFEA          	movff	tblptrh,fsr0h
 14750  001156  C196  FFEE         	movff	_receivedRemoteAddress,postinc0
 14751  00115A  C197  FFEE         	movff	_receivedRemoteAddress+1,postinc0
 14752  00115E  C198  FFEE         	movff	_receivedRemoteAddress+2,postinc0
 14753  001162  C199  FFEF         	movff	_receivedRemoteAddress+3,indf0
 14754  001166                     u11670:
 14755                           
 14756                           ;tcpv4.c: 620: currentTCB->destPort = tcpHeader.sourcePort;
 14757  001166  0E06               	movlw	6
 14758  001168  0100               	movlb	0	; () banked
 14759  00116A  25FE               	addwf	_currentTCB& (0+255),w,b
 14760  00116C  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 14761  00116E  0E00               	movlw	0
 14762  001170  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 14763  001172  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 14764  001174  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 14765  001178  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 14766  00117C  0E00               	movlw	low (__smallconst shr (0+16))
 14767  00117E  6EF8               	movwf	tblptru,c
 14768  001180  0E0F               	movlw	(high __ramtop+-1)
 14769  001182  64F7               	cpfsgt	tblptrh,c
 14770  001184  D007               	bra	u11687
 14771  001186  C1BC  FFF5         	movff	_tcpHeader,tablat
 14772  00118A  000D               	tblwt		*+
 14773  00118C  C1BD  FFF5         	movff	_tcpHeader+1,tablat
 14774  001190  000C               	tblwt		*
 14775  001192  D008               	bra	u11680
 14776  001194                     u11687:
 14777  001194  CFF6 FFE9          	movff	tblptrl,fsr0l
 14778  001198  CFF7 FFEA          	movff	tblptrh,fsr0h
 14779  00119C  C1BC  FFEE         	movff	_tcpHeader,postinc0
 14780  0011A0  C1BD  FFEF         	movff	_tcpHeader+1,indf0
 14781  0011A4                     u11680:
 14782                           
 14783                           ;tcpv4.c: 623: currentTCB->localLastAck = 0;
 14784  0011A4  0E14               	movlw	20
 14785  0011A6  0100               	movlb	0	; () banked
 14786  0011A8  25FE               	addwf	_currentTCB& (0+255),w,b
 14787  0011AA  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 14788  0011AC  0E00               	movlw	0
 14789  0011AE  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 14790  0011B0  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 14791  0011B2  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 14792  0011B6  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 14793  0011BA  0E00               	movlw	low (__smallconst shr (0+16))
 14794  0011BC  6EF8               	movwf	tblptru,c
 14795  0011BE  0E0F               	movlw	(high __ramtop+-1)
 14796  0011C0  64F7               	cpfsgt	tblptrh,c
 14797  0011C2  D009               	bra	u11697
 14798  0011C4  6AF5               	clrf	tablat,c
 14799  0011C6  000D               	tblwt		*+
 14800  0011C8  6AF5               	clrf	tablat,c
 14801  0011CA  000D               	tblwt		*+
 14802  0011CC  6AF5               	clrf	tablat,c
 14803  0011CE  000D               	tblwt		*+
 14804  0011D0  6AF5               	clrf	tablat,c
 14805  0011D2  000C               	tblwt		*
 14806  0011D4  D008               	bra	u11690
 14807  0011D6                     u11697:
 14808  0011D6  CFF6 FFE9          	movff	tblptrl,fsr0l
 14809  0011DA  CFF7 FFEA          	movff	tblptrh,fsr0h
 14810  0011DE  6AEE               	clrf	postinc0,c
 14811  0011E0  6AEE               	clrf	postinc0,c
 14812  0011E2  6AEE               	clrf	postinc0,c
 14813  0011E4  6AEF               	clrf	indf0,c
 14814  0011E6                     u11690:
 14815                           
 14816                           ;tcpv4.c: 625: currentTCB->remoteSeqno = tcpHeader.sequenceNumber;
 14817  0011E6  0E08               	movlw	8
 14818  0011E8  0100               	movlb	0	; () banked
 14819  0011EA  25FE               	addwf	_currentTCB& (0+255),w,b
 14820  0011EC  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 14821  0011EE  0E00               	movlw	0
 14822  0011F0  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 14823  0011F2  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 14824  0011F4  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 14825  0011F8  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 14826  0011FC  0E00               	movlw	low (__smallconst shr (0+16))
 14827  0011FE  6EF8               	movwf	tblptru,c
 14828  001200  0E0F               	movlw	(high __ramtop+-1)
 14829  001202  64F7               	cpfsgt	tblptrh,c
 14830  001204  D00D               	bra	u11707
 14831  001206  C1C0  FFF5         	movff	_tcpHeader+4,tablat
 14832  00120A  000D               	tblwt		*+
 14833  00120C  C1C1  FFF5         	movff	_tcpHeader+5,tablat
 14834  001210  000D               	tblwt		*+
 14835  001212  C1C2  FFF5         	movff	_tcpHeader+6,tablat
 14836  001216  000D               	tblwt		*+
 14837  001218  C1C3  FFF5         	movff	_tcpHeader+7,tablat
 14838  00121C  000C               	tblwt		*
 14839  00121E  D00C               	bra	u11700
 14840  001220                     u11707:
 14841  001220  CFF6 FFE9          	movff	tblptrl,fsr0l
 14842  001224  CFF7 FFEA          	movff	tblptrh,fsr0h
 14843  001228  C1C0  FFEE         	movff	_tcpHeader+4,postinc0
 14844  00122C  C1C1  FFEE         	movff	_tcpHeader+5,postinc0
 14845  001230  C1C2  FFEE         	movff	_tcpHeader+6,postinc0
 14846  001234  C1C3  FFEF         	movff	_tcpHeader+7,indf0
 14847  001238                     u11700:
 14848                           
 14849                           ;tcpv4.c: 626: currentTCB->remoteAck = currentTCB->remoteSeqno + 1;
 14850  001238  0E08               	movlw	8
 14851  00123A  0100               	movlb	0	; () banked
 14852  00123C  25FE               	addwf	_currentTCB& (0+255),w,b
 14853  00123E  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 14854  001240  0E00               	movlw	0
 14855  001242  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 14856  001244  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 14857  001246  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 14858  00124A  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 14859  00124E  0E00               	movlw	low (__smallconst shr (0+16))
 14860  001250  6EF8               	movwf	tblptru,c
 14861  001252  0E0F               	movlw	(high __ramtop+-1)
 14862  001254  64F7               	cpfsgt	tblptrh,c
 14863  001256  D00D               	bra	u11717
 14864  001258  0009               	tblrd		*+
 14865  00125A  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 14866  00125E  0009               	tblrd		*+
 14867  001260  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 14868  001264  0009               	tblrd		*+
 14869  001266  CFF5 F0C7          	movff	tablat,??_TCP_FiniteStateMachine+4
 14870  00126A  0009               	tblrd		*+
 14871  00126C  CFF5 F0C8          	movff	tablat,??_TCP_FiniteStateMachine+5
 14872  001270  D00C               	bra	u11710
 14873  001272                     u11717:
 14874  001272  CFF6 FFE9          	movff	tblptrl,fsr0l
 14875  001276  CFF7 FFEA          	movff	tblptrh,fsr0h
 14876  00127A  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 14877  00127E  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 14878  001282  CFEE F0C7          	movff	postinc0,??_TCP_FiniteStateMachine+4
 14879  001286  CFEE F0C8          	movff	postinc0,??_TCP_FiniteStateMachine+5
 14880  00128A                     u11710:
 14881  00128A  0E01               	movlw	1
 14882  00128C  0100               	movlb	0	; () banked
 14883  00128E  25C5               	addwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 14884  001290  6FC9               	movwf	(??_TCP_FiniteStateMachine+6)& (0+255),b
 14885  001292  0E00               	movlw	0
 14886  001294  21C6               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 14887  001296  6FCA               	movwf	(??_TCP_FiniteStateMachine+7)& (0+255),b
 14888  001298  0E00               	movlw	0
 14889  00129A  21C7               	addwfc	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 14890  00129C  6FCB               	movwf	(??_TCP_FiniteStateMachine+8)& (0+255),b
 14891  00129E  0E00               	movlw	0
 14892  0012A0  21C8               	addwfc	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 14893  0012A2  6FCC               	movwf	(??_TCP_FiniteStateMachine+9)& (0+255),b
 14894  0012A4  0E0C               	movlw	12
 14895  0012A6  25FE               	addwf	_currentTCB& (0+255),w,b
 14896  0012A8  6FCD               	movwf	(??_TCP_FiniteStateMachine+10)& (0+255),b
 14897  0012AA  0E00               	movlw	0
 14898  0012AC  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 14899  0012AE  6FCE               	movwf	(??_TCP_FiniteStateMachine+11)& (0+255),b
 14900  0012B0  C0CD  FFF6         	movff	??_TCP_FiniteStateMachine+10,tblptrl
 14901  0012B4  C0CE  FFF7         	movff	??_TCP_FiniteStateMachine+11,tblptrh
 14902  0012B8  0E00               	movlw	low (__smallconst shr (0+16))
 14903  0012BA  6EF8               	movwf	tblptru,c
 14904  0012BC  0E0F               	movlw	(high __ramtop+-1)
 14905  0012BE  64F7               	cpfsgt	tblptrh,c
 14906  0012C0  D00D               	bra	u11727
 14907  0012C2  C0C9  FFF5         	movff	??_TCP_FiniteStateMachine+6,tablat
 14908  0012C6  000D               	tblwt		*+
 14909  0012C8  C0CA  FFF5         	movff	??_TCP_FiniteStateMachine+7,tablat
 14910  0012CC  000D               	tblwt		*+
 14911  0012CE  C0CB  FFF5         	movff	??_TCP_FiniteStateMachine+8,tablat
 14912  0012D2  000D               	tblwt		*+
 14913  0012D4  C0CC  FFF5         	movff	??_TCP_FiniteStateMachine+9,tablat
 14914  0012D8  000C               	tblwt		*
 14915  0012DA  D00C               	bra	u11720
 14916  0012DC                     u11727:
 14917  0012DC  CFF6 FFE9          	movff	tblptrl,fsr0l
 14918  0012E0  CFF7 FFEA          	movff	tblptrh,fsr0h
 14919  0012E4  C0C9  FFEE         	movff	??_TCP_FiniteStateMachine+6,postinc0
 14920  0012E8  C0CA  FFEE         	movff	??_TCP_FiniteStateMachine+7,postinc0
 14921  0012EC  C0CB  FFEE         	movff	??_TCP_FiniteStateMachine+8,postinc0
 14922  0012F0  C0CC  FFEF         	movff	??_TCP_FiniteStateMachine+9,indf0
 14923  0012F4                     u11720:
 14924                           
 14925                           ;tcpv4.c: 629: currentTCB->remoteWnd = ((((uint16_t)tcpHeader.windowSize & (uint16_t)0xF
      +                          F00) >> 8) | (((uint16_t)tcpHeader.windowSize & (uint16_t)0x00FF) << 8));
 14926  0012F4  0101               	movlb	1	; () banked
 14927  0012F6  51CA               	movf	(_tcpHeader+14)& (0+255),w,b
 14928  0012F8  0100               	movlb	0	; () banked
 14929  0012FA  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 14930  0012FC  6BC3               	clrf	??_TCP_FiniteStateMachine& (0+255),b
 14931  0012FE  EE21  F0CA         	lfsr	2,_tcpHeader+14
 14932  001302  CFDE F0C5          	movff	postinc2,??_TCP_FiniteStateMachine+2
 14933  001306  CFDD F0C6          	movff	postdec2,??_TCP_FiniteStateMachine+3
 14934  00130A  C0C6  F0C5         	movff	??_TCP_FiniteStateMachine+3,??_TCP_FiniteStateMachine+2
 14935  00130E  6BC6               	clrf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 14936  001310  6BC6               	clrf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 14937  001312  51C3               	movf	??_TCP_FiniteStateMachine& (0+255),w,b
 14938  001314  13C5               	iorwf	(??_TCP_FiniteStateMachine+2)& (0+255),f,b
 14939  001316  51C4               	movf	(??_TCP_FiniteStateMachine+1)& (0+255),w,b
 14940  001318  13C6               	iorwf	(??_TCP_FiniteStateMachine+3)& (0+255),f,b
 14941  00131A  0E18               	movlw	24
 14942  00131C  25FE               	addwf	_currentTCB& (0+255),w,b
 14943  00131E  6FC7               	movwf	(??_TCP_FiniteStateMachine+4)& (0+255),b
 14944  001320  0E00               	movlw	0
 14945  001322  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 14946  001324  6FC8               	movwf	(??_TCP_FiniteStateMachine+5)& (0+255),b
 14947  001326  C0C7  FFF6         	movff	??_TCP_FiniteStateMachine+4,tblptrl
 14948  00132A  C0C8  FFF7         	movff	??_TCP_FiniteStateMachine+5,tblptrh
 14949  00132E  0E00               	movlw	low (__smallconst shr (0+16))
 14950  001330  6EF8               	movwf	tblptru,c
 14951  001332  0E0F               	movlw	(high __ramtop+-1)
 14952  001334  64F7               	cpfsgt	tblptrh,c
 14953  001336  D007               	bra	u11737
 14954  001338  C0C5  FFF5         	movff	??_TCP_FiniteStateMachine+2,tablat
 14955  00133C  000D               	tblwt		*+
 14956  00133E  C0C6  FFF5         	movff	??_TCP_FiniteStateMachine+3,tablat
 14957  001342  000C               	tblwt		*
 14958  001344  D008               	bra	u11730
 14959  001346                     u11737:
 14960  001346  CFF6 FFE9          	movff	tblptrl,fsr0l
 14961  00134A  CFF7 FFEA          	movff	tblptrh,fsr0h
 14962  00134E  C0C5  FFEE         	movff	??_TCP_FiniteStateMachine+2,postinc0
 14963  001352  C0C6  FFEF         	movff	??_TCP_FiniteStateMachine+3,indf0
 14964  001356                     u11730:
 14965                           
 14966                           ;tcpv4.c: 630: currentTCB->mss = tcpMss;
 14967  001356  0E1C               	movlw	28
 14968  001358  0100               	movlb	0	; () banked
 14969  00135A  25FE               	addwf	_currentTCB& (0+255),w,b
 14970  00135C  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 14971  00135E  0E00               	movlw	0
 14972  001360  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 14973  001362  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 14974  001364  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 14975  001368  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 14976  00136C  0E00               	movlw	low (__smallconst shr (0+16))
 14977  00136E  6EF8               	movwf	tblptru,c
 14978  001370  0E0F               	movlw	(high __ramtop+-1)
 14979  001372  64F7               	cpfsgt	tblptrh,c
 14980  001374  D007               	bra	u11747
 14981  001376  C1A4  FFF5         	movff	_tcpMss,tablat
 14982  00137A  000D               	tblwt		*+
 14983  00137C  C1A5  FFF5         	movff	_tcpMss+1,tablat
 14984  001380  000C               	tblwt		*
 14985  001382  D008               	bra	u11740
 14986  001384                     u11747:
 14987  001384  CFF6 FFE9          	movff	tblptrl,fsr0l
 14988  001388  CFF7 FFEA          	movff	tblptrh,fsr0h
 14989  00138C  C1A4  FFEE         	movff	_tcpMss,postinc0
 14990  001390  C1A5  FFEF         	movff	_tcpMss+1,indf0
 14991  001394                     u11740:
 14992                           
 14993                           ;tcpv4.c: 633: currentTCB->flags = 0x02U | 0x10U;
 14994  001394  0E35               	movlw	53
 14995  001396  0100               	movlb	0	; () banked
 14996  001398  25FE               	addwf	_currentTCB& (0+255),w,b
 14997  00139A  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 14998  00139C  0E00               	movlw	0
 14999  00139E  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 15000  0013A0  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 15001  0013A2  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 15002  0013A6  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 15003  0013AA  0E00               	movlw	low (__smallconst shr (0+16))
 15004  0013AC  6EF8               	movwf	tblptru,c
 15005  0013AE  0E0F               	movlw	(high __ramtop+-1)
 15006  0013B0  64F7               	cpfsgt	tblptrh,c
 15007  0013B2  D004               	bra	u11757
 15008  0013B4  0E12               	movlw	18
 15009  0013B6  6EF5               	movwf	tablat,c
 15010  0013B8  000C               	tblwt		*
 15011  0013BA  D006               	bra	u11750
 15012  0013BC                     u11757:
 15013  0013BC  CFF6 FFE9          	movff	tblptrl,fsr0l
 15014  0013C0  CFF7 FFEA          	movff	tblptrh,fsr0h
 15015  0013C4  0E12               	movlw	18
 15016  0013C6  6EEF               	movwf	indf0,c
 15017  0013C8                     u11750:
 15018                           
 15019                           ;tcpv4.c: 634: currentTCB->timeout = ((unsigned long)1*2);
 15020  0013C8  0E30               	movlw	48
 15021  0013CA  0100               	movlb	0	; () banked
 15022  0013CC  25FE               	addwf	_currentTCB& (0+255),w,b
 15023  0013CE  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 15024  0013D0  0E00               	movlw	0
 15025  0013D2  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 15026  0013D4  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 15027  0013D6  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 15028  0013DA  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 15029  0013DE  0E00               	movlw	low (__smallconst shr (0+16))
 15030  0013E0  6EF8               	movwf	tblptru,c
 15031  0013E2  0E0F               	movlw	(high __ramtop+-1)
 15032  0013E4  64F7               	cpfsgt	tblptrh,c
 15033  0013E6  D006               	bra	u11767
 15034  0013E8  0E02               	movlw	2
 15035  0013EA  6EF5               	movwf	tablat,c
 15036  0013EC  000D               	tblwt		*+
 15037  0013EE  6AF5               	clrf	tablat,c
 15038  0013F0  000C               	tblwt		*
 15039  0013F2  D007               	bra	u11760
 15040  0013F4                     u11767:
 15041  0013F4  CFF6 FFE9          	movff	tblptrl,fsr0l
 15042  0013F8  CFF7 FFEA          	movff	tblptrh,fsr0h
 15043  0013FC  0E02               	movlw	2
 15044  0013FE  6EEE               	movwf	postinc0,c
 15045  001400  6AEF               	clrf	indf0,c
 15046  001402                     u11760:
 15047                           
 15048                           ;tcpv4.c: 635: currentTCB->timeoutReloadValue = ((unsigned long)1*2);
 15049  001402  0E32               	movlw	50
 15050  001404  0100               	movlb	0	; () banked
 15051  001406  25FE               	addwf	_currentTCB& (0+255),w,b
 15052  001408  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 15053  00140A  0E00               	movlw	0
 15054  00140C  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 15055  00140E  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 15056  001410  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 15057  001414  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 15058  001418  0E00               	movlw	low (__smallconst shr (0+16))
 15059  00141A  6EF8               	movwf	tblptru,c
 15060  00141C  0E0F               	movlw	(high __ramtop+-1)
 15061  00141E  64F7               	cpfsgt	tblptrh,c
 15062  001420  D006               	bra	u11777
 15063  001422  0E02               	movlw	2
 15064  001424  6EF5               	movwf	tablat,c
 15065  001426  000D               	tblwt		*+
 15066  001428  6AF5               	clrf	tablat,c
 15067  00142A  000C               	tblwt		*
 15068  00142C  D007               	bra	u11770
 15069  00142E                     u11777:
 15070  00142E  CFF6 FFE9          	movff	tblptrl,fsr0l
 15071  001432  CFF7 FFEA          	movff	tblptrh,fsr0h
 15072  001436  0E02               	movlw	2
 15073  001438  6EEE               	movwf	postinc0,c
 15074  00143A  6AEF               	clrf	indf0,c
 15075  00143C                     u11770:
 15076                           
 15077                           ;tcpv4.c: 636: currentTCB->timeoutsCount = (3u);
 15078  00143C  0E34               	movlw	52
 15079  00143E  0100               	movlb	0	; () banked
 15080  001440  25FE               	addwf	_currentTCB& (0+255),w,b
 15081  001442  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 15082  001444  0E00               	movlw	0
 15083  001446  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 15084  001448  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 15085  00144A  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 15086  00144E  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 15087  001452  0E00               	movlw	low (__smallconst shr (0+16))
 15088  001454  6EF8               	movwf	tblptru,c
 15089  001456  0E0F               	movlw	(high __ramtop+-1)
 15090  001458  64F7               	cpfsgt	tblptrh,c
 15091  00145A  D004               	bra	u11787
 15092  00145C  0E03               	movlw	3
 15093  00145E  6EF5               	movwf	tablat,c
 15094  001460  000C               	tblwt		*
 15095  001462  D006               	bra	u11780
 15096  001464                     u11787:
 15097  001464  CFF6 FFE9          	movff	tblptrl,fsr0l
 15098  001468  CFF7 FFEA          	movff	tblptrh,fsr0h
 15099  00146C  0E03               	movlw	3
 15100  00146E  6EEF               	movwf	indf0,c
 15101  001470                     u11780:
 15102  001470                     l8495:
 15103                           
 15104                           ;tcpv4.c: 638: TCP_Snd(currentTCB);
 15105  001470  C0FE  F058         	movff	_currentTCB,TCP_Snd@tcbPtr
 15106  001474  C0FF  F059         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 15107  001478  EC11  F01D         	call	_TCP_Snd	;wreg free
 15108                           
 15109                           ; BSR set to: 0
 15110                           ;tcpv4.c: 639: nextState = SYN_RECEIVED;
 15111  00147C  0E03               	movlw	3
 15112  00147E  EF97  F01A         	goto	L14
 15113  001482                     l1293:
 15114                           
 15115                           ;tcpv4.c: 642: ;
 15116                           ;tcpv4.c: 643: nextState = CLOSE;
 15117  001482  0100               	movlb	0	; () banked
 15118  001484  6BD3               	clrf	TCP_FiniteStateMachine@nextState& (0+255),b
 15119                           
 15120                           ; BSR set to: 0
 15121                           ;tcpv4.c: 644: TCB_Reset(currentTCB);
 15122  001486  C0FE  F002         	movff	_currentTCB,TCB_Reset@tcbPtr
 15123  00148A  C0FF  F003         	movff	_currentTCB+1,TCB_Reset@tcbPtr+1
 15124  00148E  ECE2  F02E         	call	_TCB_Reset	;wreg free
 15125                           
 15126                           ;tcpv4.c: 645: break;
 15127  001492  EFDA  F01C         	goto	l8821
 15128  001496                     l8503:
 15129  001496  0100               	movlb	0	; () banked
 15130  001498  51D2               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 15131                           
 15132                           ; Switch size 1, requested type "speed"
 15133                           ; Number of cases is 2, Range of values is 0 to 3
 15134                           ; switch strategies available:
 15135                           ; Name         Instructions Cycles
 15136                           ; simple_byte            7     4 (average)
 15137                           ;	Chosen strategy is simple_byte
 15138  00149A  E0F3               	bz	l1293
 15139  00149C  0A03               	xorlw	3	; case 3
 15140  00149E  E101 D63A          	bz	l8481
 15141                           
 15142                           ;tcpv4.c: 650: break;
 15143  0014A2  EFDA  F01C         	goto	l8821
 15144  0014A6                     l8505:
 15145                           
 15146                           ; BSR set to: 0
 15147                           ;tcpv4.c: 655: ;
 15148                           ;tcpv4.c: 657: currentTCB->remoteSeqno = tcpHeader.sequenceNumber;
 15149  0014A6  0E08               	movlw	8
 15150  0014A8  25FE               	addwf	_currentTCB& (0+255),w,b
 15151  0014AA  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 15152  0014AC  0E00               	movlw	0
 15153  0014AE  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 15154  0014B0  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 15155  0014B2  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 15156  0014B6  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 15157  0014BA  0E00               	movlw	low (__smallconst shr (0+16))
 15158  0014BC  6EF8               	movwf	tblptru,c
 15159  0014BE  0E0F               	movlw	(high __ramtop+-1)
 15160  0014C0  64F7               	cpfsgt	tblptrh,c
 15161  0014C2  D00D               	bra	u11797
 15162  0014C4  C1C0  FFF5         	movff	_tcpHeader+4,tablat
 15163  0014C8  000D               	tblwt		*+
 15164  0014CA  C1C1  FFF5         	movff	_tcpHeader+5,tablat
 15165  0014CE  000D               	tblwt		*+
 15166  0014D0  C1C2  FFF5         	movff	_tcpHeader+6,tablat
 15167  0014D4  000D               	tblwt		*+
 15168  0014D6  C1C3  FFF5         	movff	_tcpHeader+7,tablat
 15169  0014DA  000C               	tblwt		*
 15170  0014DC  D00C               	bra	u11790
 15171  0014DE                     u11797:
 15172  0014DE  CFF6 FFE9          	movff	tblptrl,fsr0l
 15173  0014E2  CFF7 FFEA          	movff	tblptrh,fsr0h
 15174  0014E6  C1C0  FFEE         	movff	_tcpHeader+4,postinc0
 15175  0014EA  C1C1  FFEE         	movff	_tcpHeader+5,postinc0
 15176  0014EE  C1C2  FFEE         	movff	_tcpHeader+6,postinc0
 15177  0014F2  C1C3  FFEF         	movff	_tcpHeader+7,indf0
 15178  0014F6                     u11790:
 15179                           
 15180                           ;tcpv4.c: 658: currentTCB->remoteAck = tcpHeader.sequenceNumber + 1;
 15181  0014F6  0E01               	movlw	1
 15182  0014F8  0101               	movlb	1	; () banked
 15183  0014FA  25C0               	addwf	(_tcpHeader+4)& (0+255),w,b
 15184  0014FC  0100               	movlb	0	; () banked
 15185  0014FE  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 15186  001500  0E00               	movlw	0
 15187  001502  0101               	movlb	1	; () banked
 15188  001504  21C1               	addwfc	(_tcpHeader+5)& (0+255),w,b
 15189  001506  0100               	movlb	0	; () banked
 15190  001508  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 15191  00150A  0E00               	movlw	0
 15192  00150C  0101               	movlb	1	; () banked
 15193  00150E  21C2               	addwfc	(_tcpHeader+6)& (0+255),w,b
 15194  001510  0100               	movlb	0	; () banked
 15195  001512  6FC5               	movwf	(??_TCP_FiniteStateMachine+2)& (0+255),b
 15196  001514  0E00               	movlw	0
 15197  001516  0101               	movlb	1	; () banked
 15198  001518  21C3               	addwfc	(_tcpHeader+7)& (0+255),w,b
 15199  00151A  0100               	movlb	0	; () banked
 15200  00151C  6FC6               	movwf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 15201  00151E  0E0C               	movlw	12
 15202  001520  25FE               	addwf	_currentTCB& (0+255),w,b
 15203  001522  6FC7               	movwf	(??_TCP_FiniteStateMachine+4)& (0+255),b
 15204  001524  0E00               	movlw	0
 15205  001526  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 15206  001528  6FC8               	movwf	(??_TCP_FiniteStateMachine+5)& (0+255),b
 15207  00152A  C0C7  FFF6         	movff	??_TCP_FiniteStateMachine+4,tblptrl
 15208  00152E  C0C8  FFF7         	movff	??_TCP_FiniteStateMachine+5,tblptrh
 15209  001532  0E00               	movlw	low (__smallconst shr (0+16))
 15210  001534  6EF8               	movwf	tblptru,c
 15211  001536  0E0F               	movlw	(high __ramtop+-1)
 15212  001538  64F7               	cpfsgt	tblptrh,c
 15213  00153A  D00D               	bra	u11807
 15214  00153C  C0C3  FFF5         	movff	??_TCP_FiniteStateMachine,tablat
 15215  001540  000D               	tblwt		*+
 15216  001542  C0C4  FFF5         	movff	??_TCP_FiniteStateMachine+1,tablat
 15217  001546  000D               	tblwt		*+
 15218  001548  C0C5  FFF5         	movff	??_TCP_FiniteStateMachine+2,tablat
 15219  00154C  000D               	tblwt		*+
 15220  00154E  C0C6  FFF5         	movff	??_TCP_FiniteStateMachine+3,tablat
 15221  001552  000C               	tblwt		*
 15222  001554  D00C               	bra	u11800
 15223  001556                     u11807:
 15224  001556  CFF6 FFE9          	movff	tblptrl,fsr0l
 15225  00155A  CFF7 FFEA          	movff	tblptrh,fsr0h
 15226  00155E  C0C3  FFEE         	movff	??_TCP_FiniteStateMachine,postinc0
 15227  001562  C0C4  FFEE         	movff	??_TCP_FiniteStateMachine+1,postinc0
 15228  001566  C0C5  FFEE         	movff	??_TCP_FiniteStateMachine+2,postinc0
 15229  00156A  C0C6  FFEF         	movff	??_TCP_FiniteStateMachine+3,indf0
 15230  00156E                     u11800:
 15231                           
 15232                           ;tcpv4.c: 661: currentTCB->remoteWnd = ((((uint16_t)tcpHeader.windowSize & (uint16_t)0xF
      +                          F00) >> 8) | (((uint16_t)tcpHeader.windowSize & (uint16_t)0x00FF) << 8));
 15233  00156E  0101               	movlb	1	; () banked
 15234  001570  51CA               	movf	(_tcpHeader+14)& (0+255),w,b
 15235  001572  0100               	movlb	0	; () banked
 15236  001574  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 15237  001576  6BC3               	clrf	??_TCP_FiniteStateMachine& (0+255),b
 15238  001578  EE21  F0CA         	lfsr	2,_tcpHeader+14
 15239  00157C  CFDE F0C5          	movff	postinc2,??_TCP_FiniteStateMachine+2
 15240  001580  CFDD F0C6          	movff	postdec2,??_TCP_FiniteStateMachine+3
 15241  001584  C0C6  F0C5         	movff	??_TCP_FiniteStateMachine+3,??_TCP_FiniteStateMachine+2
 15242  001588  6BC6               	clrf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 15243  00158A  6BC6               	clrf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 15244  00158C  51C3               	movf	??_TCP_FiniteStateMachine& (0+255),w,b
 15245  00158E  13C5               	iorwf	(??_TCP_FiniteStateMachine+2)& (0+255),f,b
 15246  001590  51C4               	movf	(??_TCP_FiniteStateMachine+1)& (0+255),w,b
 15247  001592  13C6               	iorwf	(??_TCP_FiniteStateMachine+3)& (0+255),f,b
 15248  001594  0E18               	movlw	24
 15249  001596  25FE               	addwf	_currentTCB& (0+255),w,b
 15250  001598  6FC7               	movwf	(??_TCP_FiniteStateMachine+4)& (0+255),b
 15251  00159A  0E00               	movlw	0
 15252  00159C  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 15253  00159E  6FC8               	movwf	(??_TCP_FiniteStateMachine+5)& (0+255),b
 15254  0015A0  C0C7  FFF6         	movff	??_TCP_FiniteStateMachine+4,tblptrl
 15255  0015A4  C0C8  FFF7         	movff	??_TCP_FiniteStateMachine+5,tblptrh
 15256  0015A8  0E00               	movlw	low (__smallconst shr (0+16))
 15257  0015AA  6EF8               	movwf	tblptru,c
 15258  0015AC  0E0F               	movlw	(high __ramtop+-1)
 15259  0015AE  64F7               	cpfsgt	tblptrh,c
 15260  0015B0  D007               	bra	u11817
 15261  0015B2  C0C5  FFF5         	movff	??_TCP_FiniteStateMachine+2,tablat
 15262  0015B6  000D               	tblwt		*+
 15263  0015B8  C0C6  FFF5         	movff	??_TCP_FiniteStateMachine+3,tablat
 15264  0015BC  000C               	tblwt		*
 15265  0015BE  D008               	bra	u11810
 15266  0015C0                     u11817:
 15267  0015C0  CFF6 FFE9          	movff	tblptrl,fsr0l
 15268  0015C4  CFF7 FFEA          	movff	tblptrh,fsr0h
 15269  0015C8  C0C5  FFEE         	movff	??_TCP_FiniteStateMachine+2,postinc0
 15270  0015CC  C0C6  FFEF         	movff	??_TCP_FiniteStateMachine+3,indf0
 15271  0015D0                     u11810:
 15272                           
 15273                           ;tcpv4.c: 662: currentTCB->mss = tcpMss;
 15274  0015D0  0E1C               	movlw	28
 15275  0015D2  0100               	movlb	0	; () banked
 15276  0015D4  25FE               	addwf	_currentTCB& (0+255),w,b
 15277  0015D6  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 15278  0015D8  0E00               	movlw	0
 15279  0015DA  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 15280  0015DC  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 15281  0015DE  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 15282  0015E2  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 15283  0015E6  0E00               	movlw	low (__smallconst shr (0+16))
 15284  0015E8  6EF8               	movwf	tblptru,c
 15285  0015EA  0E0F               	movlw	(high __ramtop+-1)
 15286  0015EC  64F7               	cpfsgt	tblptrh,c
 15287  0015EE  D007               	bra	u11827
 15288  0015F0  C1A4  FFF5         	movff	_tcpMss,tablat
 15289  0015F4  000D               	tblwt		*+
 15290  0015F6  C1A5  FFF5         	movff	_tcpMss+1,tablat
 15291  0015FA  000C               	tblwt		*
 15292  0015FC  D008               	bra	u11820
 15293  0015FE                     u11827:
 15294  0015FE  CFF6 FFE9          	movff	tblptrl,fsr0l
 15295  001602  CFF7 FFEA          	movff	tblptrh,fsr0h
 15296  001606  C1A4  FFEE         	movff	_tcpMss,postinc0
 15297  00160A  C1A5  FFEF         	movff	_tcpMss+1,indf0
 15298  00160E                     u11820:
 15299                           
 15300                           ;tcpv4.c: 665: currentTCB->timeout = ((unsigned long)1*2);
 15301  00160E  0E30               	movlw	48
 15302  001610  0100               	movlb	0	; () banked
 15303  001612  25FE               	addwf	_currentTCB& (0+255),w,b
 15304  001614  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 15305  001616  0E00               	movlw	0
 15306  001618  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 15307  00161A  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 15308  00161C  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 15309  001620  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 15310  001624  0E00               	movlw	low (__smallconst shr (0+16))
 15311  001626  6EF8               	movwf	tblptru,c
 15312  001628  0E0F               	movlw	(high __ramtop+-1)
 15313  00162A  64F7               	cpfsgt	tblptrh,c
 15314  00162C  D006               	bra	u11837
 15315  00162E  0E02               	movlw	2
 15316  001630  6EF5               	movwf	tablat,c
 15317  001632  000D               	tblwt		*+
 15318  001634  6AF5               	clrf	tablat,c
 15319  001636  000C               	tblwt		*
 15320  001638  D007               	bra	u11830
 15321  00163A                     u11837:
 15322  00163A  CFF6 FFE9          	movff	tblptrl,fsr0l
 15323  00163E  CFF7 FFEA          	movff	tblptrh,fsr0h
 15324  001642  0E02               	movlw	2
 15325  001644  6EEE               	movwf	postinc0,c
 15326  001646  6AEF               	clrf	indf0,c
 15327  001648                     u11830:
 15328                           
 15329                           ;tcpv4.c: 666: currentTCB->timeoutReloadValue = ((unsigned long)1*2);
 15330  001648  0E32               	movlw	50
 15331  00164A  0100               	movlb	0	; () banked
 15332  00164C  25FE               	addwf	_currentTCB& (0+255),w,b
 15333  00164E  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 15334  001650  0E00               	movlw	0
 15335  001652  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 15336  001654  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 15337  001656  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 15338  00165A  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 15339  00165E  0E00               	movlw	low (__smallconst shr (0+16))
 15340  001660  6EF8               	movwf	tblptru,c
 15341  001662  0E0F               	movlw	(high __ramtop+-1)
 15342  001664  64F7               	cpfsgt	tblptrh,c
 15343  001666  D006               	bra	u11847
 15344  001668  0E02               	movlw	2
 15345  00166A  6EF5               	movwf	tablat,c
 15346  00166C  000D               	tblwt		*+
 15347  00166E  6AF5               	clrf	tablat,c
 15348  001670  000C               	tblwt		*
 15349  001672  D007               	bra	u11840
 15350  001674                     u11847:
 15351  001674  CFF6 FFE9          	movff	tblptrl,fsr0l
 15352  001678  CFF7 FFEA          	movff	tblptrh,fsr0h
 15353  00167C  0E02               	movlw	2
 15354  00167E  6EEE               	movwf	postinc0,c
 15355  001680  6AEF               	clrf	indf0,c
 15356  001682                     u11840:
 15357                           
 15358                           ;tcpv4.c: 667: currentTCB->timeoutsCount = (3u);
 15359  001682  0E34               	movlw	52
 15360  001684  0100               	movlb	0	; () banked
 15361  001686  25FE               	addwf	_currentTCB& (0+255),w,b
 15362  001688  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 15363  00168A  0E00               	movlw	0
 15364  00168C  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 15365  00168E  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 15366  001690  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 15367  001694  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 15368  001698  0E00               	movlw	low (__smallconst shr (0+16))
 15369  00169A  6EF8               	movwf	tblptru,c
 15370  00169C  0E0F               	movlw	(high __ramtop+-1)
 15371  00169E  64F7               	cpfsgt	tblptrh,c
 15372  0016A0  D004               	bra	u11857
 15373  0016A2  0E03               	movlw	3
 15374  0016A4  6EF5               	movwf	tablat,c
 15375  0016A6  000C               	tblwt		*
 15376  0016A8  D006               	bra	u11850
 15377  0016AA                     u11857:
 15378  0016AA  CFF6 FFE9          	movff	tblptrl,fsr0l
 15379  0016AE  CFF7 FFEA          	movff	tblptrh,fsr0h
 15380  0016B2  0E03               	movlw	3
 15381  0016B4  6EEF               	movwf	indf0,c
 15382  0016B6                     u11850:
 15383                           
 15384                           ;tcpv4.c: 668: currentTCB->flags = 0x02U | 0x10U;
 15385  0016B6  0E35               	movlw	53
 15386  0016B8  0100               	movlb	0	; () banked
 15387  0016BA  25FE               	addwf	_currentTCB& (0+255),w,b
 15388  0016BC  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 15389  0016BE  0E00               	movlw	0
 15390  0016C0  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 15391  0016C2  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 15392  0016C4  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 15393  0016C8  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 15394  0016CC  0E00               	movlw	low (__smallconst shr (0+16))
 15395  0016CE  6EF8               	movwf	tblptru,c
 15396  0016D0  0E0F               	movlw	(high __ramtop+-1)
 15397  0016D2  64F7               	cpfsgt	tblptrh,c
 15398  0016D4  D004               	bra	u11867
 15399  0016D6  0E12               	movlw	18
 15400  0016D8  6EF5               	movwf	tablat,c
 15401  0016DA  000C               	tblwt		*
 15402  0016DC  D006               	bra	u11860
 15403  0016DE                     u11867:
 15404  0016DE  CFF6 FFE9          	movff	tblptrl,fsr0l
 15405  0016E2  CFF7 FFEA          	movff	tblptrh,fsr0h
 15406  0016E6  0E12               	movlw	18
 15407  0016E8  6EEF               	movwf	indf0,c
 15408  0016EA                     u11860:
 15409  0016EA  D6C2               	goto	l8495
 15410  0016EC                     l8523:
 15411                           
 15412                           ; BSR set to: 0
 15413                           ;tcpv4.c: 676: ;
 15414                           ;tcpv4.c: 678: currentTCB->timeout = 0;
 15415  0016EC  0E30               	movlw	48
 15416  0016EE  25FE               	addwf	_currentTCB& (0+255),w,b
 15417  0016F0  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 15418  0016F2  0E00               	movlw	0
 15419  0016F4  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 15420  0016F6  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 15421  0016F8  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 15422  0016FC  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 15423  001700  0E00               	movlw	low (__smallconst shr (0+16))
 15424  001702  6EF8               	movwf	tblptru,c
 15425  001704  0E0F               	movlw	(high __ramtop+-1)
 15426  001706  64F7               	cpfsgt	tblptrh,c
 15427  001708  D005               	bra	u11877
 15428  00170A  6AF5               	clrf	tablat,c
 15429  00170C  000D               	tblwt		*+
 15430  00170E  6AF5               	clrf	tablat,c
 15431  001710  000C               	tblwt		*
 15432  001712  D006               	bra	u11870
 15433  001714                     u11877:
 15434  001714  CFF6 FFE9          	movff	tblptrl,fsr0l
 15435  001718  CFF7 FFEA          	movff	tblptrh,fsr0h
 15436  00171C  6AEE               	clrf	postinc0,c
 15437  00171E  6AEF               	clrf	indf0,c
 15438  001720                     u11870:
 15439                           
 15440                           ;tcpv4.c: 680: if ((currentTCB->localSeqno + 1) == tcpHeader.ackNumber)
 15441  001720  0E10               	movlw	16
 15442  001722  0100               	movlb	0	; () banked
 15443  001724  25FE               	addwf	_currentTCB& (0+255),w,b
 15444  001726  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 15445  001728  0E00               	movlw	0
 15446  00172A  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 15447  00172C  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 15448  00172E  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 15449  001732  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 15450  001736  0E00               	movlw	low (__smallconst shr (0+16))
 15451  001738  6EF8               	movwf	tblptru,c
 15452  00173A  0E0F               	movlw	(high __ramtop+-1)
 15453  00173C  64F7               	cpfsgt	tblptrh,c
 15454  00173E  D00D               	bra	u11887
 15455  001740  0009               	tblrd		*+
 15456  001742  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 15457  001746  0009               	tblrd		*+
 15458  001748  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 15459  00174C  0009               	tblrd		*+
 15460  00174E  CFF5 F0C7          	movff	tablat,??_TCP_FiniteStateMachine+4
 15461  001752  0009               	tblrd		*+
 15462  001754  CFF5 F0C8          	movff	tablat,??_TCP_FiniteStateMachine+5
 15463  001758  D00C               	bra	u11880
 15464  00175A                     u11887:
 15465  00175A  CFF6 FFE9          	movff	tblptrl,fsr0l
 15466  00175E  CFF7 FFEA          	movff	tblptrh,fsr0h
 15467  001762  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 15468  001766  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 15469  00176A  CFEE F0C7          	movff	postinc0,??_TCP_FiniteStateMachine+4
 15470  00176E  CFEE F0C8          	movff	postinc0,??_TCP_FiniteStateMachine+5
 15471  001772                     u11880:
 15472  001772  0E01               	movlw	1
 15473  001774  0100               	movlb	0	; () banked
 15474  001776  25C5               	addwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 15475  001778  6FC9               	movwf	(??_TCP_FiniteStateMachine+6)& (0+255),b
 15476  00177A  0E00               	movlw	0
 15477  00177C  21C6               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 15478  00177E  6FCA               	movwf	(??_TCP_FiniteStateMachine+7)& (0+255),b
 15479  001780  0E00               	movlw	0
 15480  001782  21C7               	addwfc	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 15481  001784  6FCB               	movwf	(??_TCP_FiniteStateMachine+8)& (0+255),b
 15482  001786  0E00               	movlw	0
 15483  001788  21C8               	addwfc	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 15484  00178A  6FCC               	movwf	(??_TCP_FiniteStateMachine+9)& (0+255),b
 15485  00178C  0101               	movlb	1	; () banked
 15486  00178E  51C4               	movf	(_tcpHeader+8)& (0+255),w,b
 15487  001790  0100               	movlb	0	; () banked
 15488  001792  19C9               	xorwf	(??_TCP_FiniteStateMachine+6)& (0+255),w,b
 15489  001794  E10F               	bnz	u11891
 15490  001796  0101               	movlb	1	; () banked
 15491  001798  51C5               	movf	(_tcpHeader+9)& (0+255),w,b
 15492  00179A  0100               	movlb	0	; () banked
 15493  00179C  19CA               	xorwf	(??_TCP_FiniteStateMachine+7)& (0+255),w,b
 15494  00179E  E10A               	bnz	u11891
 15495  0017A0  0101               	movlb	1	; () banked
 15496  0017A2  51C6               	movf	(_tcpHeader+10)& (0+255),w,b
 15497  0017A4  0100               	movlb	0	; () banked
 15498  0017A6  19CB               	xorwf	(??_TCP_FiniteStateMachine+8)& (0+255),w,b
 15499  0017A8  E105               	bnz	u11891
 15500  0017AA  0101               	movlb	1	; () banked
 15501  0017AC  51C7               	movf	(_tcpHeader+11)& (0+255),w,b
 15502  0017AE  0100               	movlb	0	; () banked
 15503  0017B0  19CC               	xorwf	(??_TCP_FiniteStateMachine+9)& (0+255),w,b
 15504  0017B2  A4D8               	btfss	status,2,c
 15505  0017B4                     u11891:
 15506  0017B4  D14F               	goto	l8537
 15507                           
 15508                           ; BSR set to: 0
 15509                           ;tcpv4.c: 681: {
 15510                           ;tcpv4.c: 683: currentTCB->localSeqno = currentTCB->localSeqno + 1;
 15511  0017B6  0E10               	movlw	16
 15512  0017B8  25FE               	addwf	_currentTCB& (0+255),w,b
 15513  0017BA  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 15514  0017BC  0E00               	movlw	0
 15515  0017BE  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 15516  0017C0  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 15517  0017C2  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 15518  0017C6  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 15519  0017CA  0E00               	movlw	low (__smallconst shr (0+16))
 15520  0017CC  6EF8               	movwf	tblptru,c
 15521  0017CE  0E0F               	movlw	(high __ramtop+-1)
 15522  0017D0  64F7               	cpfsgt	tblptrh,c
 15523  0017D2  D00D               	bra	u11907
 15524  0017D4  0009               	tblrd		*+
 15525  0017D6  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 15526  0017DA  0009               	tblrd		*+
 15527  0017DC  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 15528  0017E0  0009               	tblrd		*+
 15529  0017E2  CFF5 F0C7          	movff	tablat,??_TCP_FiniteStateMachine+4
 15530  0017E6  0009               	tblrd		*+
 15531  0017E8  CFF5 F0C8          	movff	tablat,??_TCP_FiniteStateMachine+5
 15532  0017EC  D00C               	bra	u11900
 15533  0017EE                     u11907:
 15534  0017EE  CFF6 FFE9          	movff	tblptrl,fsr0l
 15535  0017F2  CFF7 FFEA          	movff	tblptrh,fsr0h
 15536  0017F6  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 15537  0017FA  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 15538  0017FE  CFEE F0C7          	movff	postinc0,??_TCP_FiniteStateMachine+4
 15539  001802  CFEE F0C8          	movff	postinc0,??_TCP_FiniteStateMachine+5
 15540  001806                     u11900:
 15541  001806  0E01               	movlw	1
 15542  001808  0100               	movlb	0	; () banked
 15543  00180A  25C5               	addwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 15544  00180C  6FC9               	movwf	(??_TCP_FiniteStateMachine+6)& (0+255),b
 15545  00180E  0E00               	movlw	0
 15546  001810  21C6               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 15547  001812  6FCA               	movwf	(??_TCP_FiniteStateMachine+7)& (0+255),b
 15548  001814  0E00               	movlw	0
 15549  001816  21C7               	addwfc	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 15550  001818  6FCB               	movwf	(??_TCP_FiniteStateMachine+8)& (0+255),b
 15551  00181A  0E00               	movlw	0
 15552  00181C  21C8               	addwfc	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 15553  00181E  6FCC               	movwf	(??_TCP_FiniteStateMachine+9)& (0+255),b
 15554  001820  0E10               	movlw	16
 15555  001822  25FE               	addwf	_currentTCB& (0+255),w,b
 15556  001824  6FCD               	movwf	(??_TCP_FiniteStateMachine+10)& (0+255),b
 15557  001826  0E00               	movlw	0
 15558  001828  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 15559  00182A  6FCE               	movwf	(??_TCP_FiniteStateMachine+11)& (0+255),b
 15560  00182C  C0CD  FFF6         	movff	??_TCP_FiniteStateMachine+10,tblptrl
 15561  001830  C0CE  FFF7         	movff	??_TCP_FiniteStateMachine+11,tblptrh
 15562  001834  0E00               	movlw	low (__smallconst shr (0+16))
 15563  001836  6EF8               	movwf	tblptru,c
 15564  001838  0E0F               	movlw	(high __ramtop+-1)
 15565  00183A  64F7               	cpfsgt	tblptrh,c
 15566  00183C  D00D               	bra	u11917
 15567  00183E  C0C9  FFF5         	movff	??_TCP_FiniteStateMachine+6,tablat
 15568  001842  000D               	tblwt		*+
 15569  001844  C0CA  FFF5         	movff	??_TCP_FiniteStateMachine+7,tablat
 15570  001848  000D               	tblwt		*+
 15571  00184A  C0CB  FFF5         	movff	??_TCP_FiniteStateMachine+8,tablat
 15572  00184E  000D               	tblwt		*+
 15573  001850  C0CC  FFF5         	movff	??_TCP_FiniteStateMachine+9,tablat
 15574  001854  000C               	tblwt		*
 15575  001856  D00C               	bra	u11910
 15576  001858                     u11917:
 15577  001858  CFF6 FFE9          	movff	tblptrl,fsr0l
 15578  00185C  CFF7 FFEA          	movff	tblptrh,fsr0h
 15579  001860  C0C9  FFEE         	movff	??_TCP_FiniteStateMachine+6,postinc0
 15580  001864  C0CA  FFEE         	movff	??_TCP_FiniteStateMachine+7,postinc0
 15581  001868  C0CB  FFEE         	movff	??_TCP_FiniteStateMachine+8,postinc0
 15582  00186C  C0CC  FFEF         	movff	??_TCP_FiniteStateMachine+9,indf0
 15583  001870                     u11910:
 15584                           
 15585                           ;tcpv4.c: 684: currentTCB->flags = 0x10U;
 15586  001870  0E35               	movlw	53
 15587  001872  0100               	movlb	0	; () banked
 15588  001874  25FE               	addwf	_currentTCB& (0+255),w,b
 15589  001876  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 15590  001878  0E00               	movlw	0
 15591  00187A  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 15592  00187C  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 15593  00187E  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 15594  001882  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 15595  001886  0E00               	movlw	low (__smallconst shr (0+16))
 15596  001888  6EF8               	movwf	tblptru,c
 15597  00188A  0E0F               	movlw	(high __ramtop+-1)
 15598  00188C  64F7               	cpfsgt	tblptrh,c
 15599  00188E  D004               	bra	u11927
 15600  001890  0E10               	movlw	16
 15601  001892  6EF5               	movwf	tablat,c
 15602  001894  000C               	tblwt		*
 15603  001896  D006               	bra	u11920
 15604  001898                     u11927:
 15605  001898  CFF6 FFE9          	movff	tblptrl,fsr0l
 15606  00189C  CFF7 FFEA          	movff	tblptrh,fsr0h
 15607  0018A0  0E10               	movlw	16
 15608  0018A2  6EEF               	movwf	indf0,c
 15609  0018A4                     u11920:
 15610                           
 15611                           ;tcpv4.c: 687: currentTCB->remoteSeqno = tcpHeader.sequenceNumber;
 15612  0018A4  0E08               	movlw	8
 15613  0018A6  0100               	movlb	0	; () banked
 15614  0018A8  25FE               	addwf	_currentTCB& (0+255),w,b
 15615  0018AA  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 15616  0018AC  0E00               	movlw	0
 15617  0018AE  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 15618  0018B0  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 15619  0018B2  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 15620  0018B6  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 15621  0018BA  0E00               	movlw	low (__smallconst shr (0+16))
 15622  0018BC  6EF8               	movwf	tblptru,c
 15623  0018BE  0E0F               	movlw	(high __ramtop+-1)
 15624  0018C0  64F7               	cpfsgt	tblptrh,c
 15625  0018C2  D00D               	bra	u11937
 15626  0018C4  C1C0  FFF5         	movff	_tcpHeader+4,tablat
 15627  0018C8  000D               	tblwt		*+
 15628  0018CA  C1C1  FFF5         	movff	_tcpHeader+5,tablat
 15629  0018CE  000D               	tblwt		*+
 15630  0018D0  C1C2  FFF5         	movff	_tcpHeader+6,tablat
 15631  0018D4  000D               	tblwt		*+
 15632  0018D6  C1C3  FFF5         	movff	_tcpHeader+7,tablat
 15633  0018DA  000C               	tblwt		*
 15634  0018DC  D00C               	bra	u11930
 15635  0018DE                     u11937:
 15636  0018DE  CFF6 FFE9          	movff	tblptrl,fsr0l
 15637  0018E2  CFF7 FFEA          	movff	tblptrh,fsr0h
 15638  0018E6  C1C0  FFEE         	movff	_tcpHeader+4,postinc0
 15639  0018EA  C1C1  FFEE         	movff	_tcpHeader+5,postinc0
 15640  0018EE  C1C2  FFEE         	movff	_tcpHeader+6,postinc0
 15641  0018F2  C1C3  FFEF         	movff	_tcpHeader+7,indf0
 15642  0018F6                     u11930:
 15643                           
 15644                           ;tcpv4.c: 689: currentTCB->remoteAck = tcpHeader.sequenceNumber + 1;
 15645  0018F6  0E01               	movlw	1
 15646  0018F8  0101               	movlb	1	; () banked
 15647  0018FA  25C0               	addwf	(_tcpHeader+4)& (0+255),w,b
 15648  0018FC  0100               	movlb	0	; () banked
 15649  0018FE  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 15650  001900  0E00               	movlw	0
 15651  001902  0101               	movlb	1	; () banked
 15652  001904  21C1               	addwfc	(_tcpHeader+5)& (0+255),w,b
 15653  001906  0100               	movlb	0	; () banked
 15654  001908  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 15655  00190A  0E00               	movlw	0
 15656  00190C  0101               	movlb	1	; () banked
 15657  00190E  21C2               	addwfc	(_tcpHeader+6)& (0+255),w,b
 15658  001910  0100               	movlb	0	; () banked
 15659  001912  6FC5               	movwf	(??_TCP_FiniteStateMachine+2)& (0+255),b
 15660  001914  0E00               	movlw	0
 15661  001916  0101               	movlb	1	; () banked
 15662  001918  21C3               	addwfc	(_tcpHeader+7)& (0+255),w,b
 15663  00191A  0100               	movlb	0	; () banked
 15664  00191C  6FC6               	movwf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 15665  00191E  0E0C               	movlw	12
 15666  001920  25FE               	addwf	_currentTCB& (0+255),w,b
 15667  001922  6FC7               	movwf	(??_TCP_FiniteStateMachine+4)& (0+255),b
 15668  001924  0E00               	movlw	0
 15669  001926  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 15670  001928  6FC8               	movwf	(??_TCP_FiniteStateMachine+5)& (0+255),b
 15671  00192A  C0C7  FFF6         	movff	??_TCP_FiniteStateMachine+4,tblptrl
 15672  00192E  C0C8  FFF7         	movff	??_TCP_FiniteStateMachine+5,tblptrh
 15673  001932  0E00               	movlw	low (__smallconst shr (0+16))
 15674  001934  6EF8               	movwf	tblptru,c
 15675  001936  0E0F               	movlw	(high __ramtop+-1)
 15676  001938  64F7               	cpfsgt	tblptrh,c
 15677  00193A  D00D               	bra	u11947
 15678  00193C  C0C3  FFF5         	movff	??_TCP_FiniteStateMachine,tablat
 15679  001940  000D               	tblwt		*+
 15680  001942  C0C4  FFF5         	movff	??_TCP_FiniteStateMachine+1,tablat
 15681  001946  000D               	tblwt		*+
 15682  001948  C0C5  FFF5         	movff	??_TCP_FiniteStateMachine+2,tablat
 15683  00194C  000D               	tblwt		*+
 15684  00194E  C0C6  FFF5         	movff	??_TCP_FiniteStateMachine+3,tablat
 15685  001952  000C               	tblwt		*
 15686  001954  D00C               	bra	u11940
 15687  001956                     u11947:
 15688  001956  CFF6 FFE9          	movff	tblptrl,fsr0l
 15689  00195A  CFF7 FFEA          	movff	tblptrh,fsr0h
 15690  00195E  C0C3  FFEE         	movff	??_TCP_FiniteStateMachine,postinc0
 15691  001962  C0C4  FFEE         	movff	??_TCP_FiniteStateMachine+1,postinc0
 15692  001966  C0C5  FFEE         	movff	??_TCP_FiniteStateMachine+2,postinc0
 15693  00196A  C0C6  FFEF         	movff	??_TCP_FiniteStateMachine+3,indf0
 15694  00196E                     u11940:
 15695                           
 15696                           ;tcpv4.c: 691: currentTCB->remoteWnd = ((((uint16_t)tcpHeader.windowSize & (uint16_t)0xF
      +                          F00) >> 8) | (((uint16_t)tcpHeader.windowSize & (uint16_t)0x00FF) << 8));
 15697  00196E  0101               	movlb	1	; () banked
 15698  001970  51CA               	movf	(_tcpHeader+14)& (0+255),w,b
 15699  001972  0100               	movlb	0	; () banked
 15700  001974  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 15701  001976  6BC3               	clrf	??_TCP_FiniteStateMachine& (0+255),b
 15702  001978  EE21  F0CA         	lfsr	2,_tcpHeader+14
 15703  00197C  CFDE F0C5          	movff	postinc2,??_TCP_FiniteStateMachine+2
 15704  001980  CFDD F0C6          	movff	postdec2,??_TCP_FiniteStateMachine+3
 15705  001984  C0C6  F0C5         	movff	??_TCP_FiniteStateMachine+3,??_TCP_FiniteStateMachine+2
 15706  001988  6BC6               	clrf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 15707  00198A  6BC6               	clrf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 15708  00198C  51C3               	movf	??_TCP_FiniteStateMachine& (0+255),w,b
 15709  00198E  13C5               	iorwf	(??_TCP_FiniteStateMachine+2)& (0+255),f,b
 15710  001990  51C4               	movf	(??_TCP_FiniteStateMachine+1)& (0+255),w,b
 15711  001992  13C6               	iorwf	(??_TCP_FiniteStateMachine+3)& (0+255),f,b
 15712  001994  0E18               	movlw	24
 15713  001996  25FE               	addwf	_currentTCB& (0+255),w,b
 15714  001998  6FC7               	movwf	(??_TCP_FiniteStateMachine+4)& (0+255),b
 15715  00199A  0E00               	movlw	0
 15716  00199C  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 15717  00199E  6FC8               	movwf	(??_TCP_FiniteStateMachine+5)& (0+255),b
 15718  0019A0  C0C7  FFF6         	movff	??_TCP_FiniteStateMachine+4,tblptrl
 15719  0019A4  C0C8  FFF7         	movff	??_TCP_FiniteStateMachine+5,tblptrh
 15720  0019A8  0E00               	movlw	low (__smallconst shr (0+16))
 15721  0019AA  6EF8               	movwf	tblptru,c
 15722  0019AC  0E0F               	movlw	(high __ramtop+-1)
 15723  0019AE  64F7               	cpfsgt	tblptrh,c
 15724  0019B0  D007               	bra	u11957
 15725  0019B2  C0C5  FFF5         	movff	??_TCP_FiniteStateMachine+2,tablat
 15726  0019B6  000D               	tblwt		*+
 15727  0019B8  C0C6  FFF5         	movff	??_TCP_FiniteStateMachine+3,tablat
 15728  0019BC  000C               	tblwt		*
 15729  0019BE  D008               	bra	u11950
 15730  0019C0                     u11957:
 15731  0019C0  CFF6 FFE9          	movff	tblptrl,fsr0l
 15732  0019C4  CFF7 FFEA          	movff	tblptrh,fsr0h
 15733  0019C8  C0C5  FFEE         	movff	??_TCP_FiniteStateMachine+2,postinc0
 15734  0019CC  C0C6  FFEF         	movff	??_TCP_FiniteStateMachine+3,indf0
 15735  0019D0                     u11950:
 15736                           
 15737                           ;tcpv4.c: 692: currentTCB->mss = tcpMss;
 15738  0019D0  0E1C               	movlw	28
 15739  0019D2  0100               	movlb	0	; () banked
 15740  0019D4  25FE               	addwf	_currentTCB& (0+255),w,b
 15741  0019D6  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 15742  0019D8  0E00               	movlw	0
 15743  0019DA  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 15744  0019DC  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 15745  0019DE  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 15746  0019E2  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 15747  0019E6  0E00               	movlw	low (__smallconst shr (0+16))
 15748  0019E8  6EF8               	movwf	tblptru,c
 15749  0019EA  0E0F               	movlw	(high __ramtop+-1)
 15750  0019EC  64F7               	cpfsgt	tblptrh,c
 15751  0019EE  D007               	bra	u11967
 15752  0019F0  C1A4  FFF5         	movff	_tcpMss,tablat
 15753  0019F4  000D               	tblwt		*+
 15754  0019F6  C1A5  FFF5         	movff	_tcpMss+1,tablat
 15755  0019FA  000C               	tblwt		*
 15756  0019FC  D008               	bra	u11960
 15757  0019FE                     u11967:
 15758  0019FE  CFF6 FFE9          	movff	tblptrl,fsr0l
 15759  001A02  CFF7 FFEA          	movff	tblptrh,fsr0h
 15760  001A06  C1A4  FFEE         	movff	_tcpMss,postinc0
 15761  001A0A  C1A5  FFEF         	movff	_tcpMss+1,indf0
 15762  001A0E                     u11960:
 15763                           
 15764                           ;tcpv4.c: 694: if(TCP_Snd(currentTCB))
 15765  001A0E  C0FE  F058         	movff	_currentTCB,TCP_Snd@tcbPtr
 15766  001A12  C0FF  F059         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 15767  001A16  EC11  F01D         	call	_TCP_Snd	;wreg free
 15768  001A1A  0900               	iorlw	0
 15769  001A1C  E102 EFDA  F01C    	bz	l8821
 15770                           
 15771                           ; BSR set to: 0
 15772                           ;tcpv4.c: 695: {
 15773                           ;tcpv4.c: 696: nextState = ESTABLISHED;
 15774  001A22  0E04               	movlw	4
 15775  001A24  6FD3               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 15776                           
 15777                           ; BSR set to: 0
 15778                           ;tcpv4.c: 697: currentTCB->socketState = SOCKET_CONNECTED;
 15779  001A26  0E36               	movlw	54
 15780  001A28  25FE               	addwf	_currentTCB& (0+255),w,b
 15781  001A2A  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 15782  001A2C  0E00               	movlw	0
 15783  001A2E  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 15784  001A30  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 15785  001A32  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 15786  001A36  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 15787  001A3A  0E00               	movlw	low (__smallconst shr (0+16))
 15788  001A3C  6EF8               	movwf	tblptru,c
 15789  001A3E  0E0F               	movlw	(high __ramtop+-1)
 15790  001A40  64F7               	cpfsgt	tblptrh,c
 15791  001A42  D004               	bra	u11987
 15792  001A44  0E03               	movlw	3
 15793  001A46  6EF5               	movwf	tablat,c
 15794  001A48  000C               	tblwt		*
 15795  001A4A  D002               	bra	u11980
 15796  001A4C                     u11987:
 15797  001A4C  EF9F  F012         	goto	u12477
 15798  001A50                     u11980:
 15799  001A50  EFDA  F01C         	goto	l8821
 15800  001A54                     l8537:
 15801                           
 15802                           ; BSR set to: 0
 15803                           ;tcpv4.c: 700: else
 15804                           ;tcpv4.c: 701: {
 15805                           ;tcpv4.c: 703: currentTCB->localSeqno = tcpHeader.ackNumber;
 15806  001A54  0E10               	movlw	16
 15807  001A56  25FE               	addwf	_currentTCB& (0+255),w,b
 15808  001A58  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 15809  001A5A  0E00               	movlw	0
 15810  001A5C  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 15811  001A5E  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 15812  001A60  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 15813  001A64  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 15814  001A68  0E00               	movlw	low (__smallconst shr (0+16))
 15815  001A6A  6EF8               	movwf	tblptru,c
 15816  001A6C  0E0F               	movlw	(high __ramtop+-1)
 15817  001A6E  64F7               	cpfsgt	tblptrh,c
 15818  001A70  D00D               	bra	u11997
 15819  001A72  C1C4  FFF5         	movff	_tcpHeader+8,tablat
 15820  001A76  000D               	tblwt		*+
 15821  001A78  C1C5  FFF5         	movff	_tcpHeader+9,tablat
 15822  001A7C  000D               	tblwt		*+
 15823  001A7E  C1C6  FFF5         	movff	_tcpHeader+10,tablat
 15824  001A82  000D               	tblwt		*+
 15825  001A84  C1C7  FFF5         	movff	_tcpHeader+11,tablat
 15826  001A88  000C               	tblwt		*
 15827  001A8A  D00C               	bra	u11990
 15828  001A8C                     u11997:
 15829  001A8C  CFF6 FFE9          	movff	tblptrl,fsr0l
 15830  001A90  CFF7 FFEA          	movff	tblptrh,fsr0h
 15831  001A94  C1C4  FFEE         	movff	_tcpHeader+8,postinc0
 15832  001A98  C1C5  FFEE         	movff	_tcpHeader+9,postinc0
 15833  001A9C  C1C6  FFEE         	movff	_tcpHeader+10,postinc0
 15834  001AA0  C1C7  FFEF         	movff	_tcpHeader+11,indf0
 15835  001AA4                     u11990:
 15836                           
 15837                           ;tcpv4.c: 704: currentTCB->flags = 0x04U | 0x10U;
 15838  001AA4  0E35               	movlw	53
 15839  001AA6  0100               	movlb	0	; () banked
 15840  001AA8  25FE               	addwf	_currentTCB& (0+255),w,b
 15841  001AAA  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 15842  001AAC  0E00               	movlw	0
 15843  001AAE  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 15844  001AB0  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 15845  001AB2  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 15846  001AB6  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 15847  001ABA  0E00               	movlw	low (__smallconst shr (0+16))
 15848  001ABC  6EF8               	movwf	tblptru,c
 15849  001ABE  0E0F               	movlw	(high __ramtop+-1)
 15850  001AC0  64F7               	cpfsgt	tblptrh,c
 15851  001AC2  D004               	bra	u12007
 15852  001AC4  0E14               	movlw	20
 15853  001AC6  6EF5               	movwf	tablat,c
 15854  001AC8  000C               	tblwt		*
 15855  001ACA  D006               	bra	u12000
 15856  001ACC                     u12007:
 15857  001ACC  CFF6 FFE9          	movff	tblptrl,fsr0l
 15858  001AD0  CFF7 FFEA          	movff	tblptrh,fsr0h
 15859  001AD4  0E14               	movlw	20
 15860  001AD6  6EEF               	movwf	indf0,c
 15861  001AD8                     u12000:
 15862                           
 15863                           ;tcpv4.c: 705: if(TCP_Snd(currentTCB))
 15864  001AD8  C0FE  F058         	movff	_currentTCB,TCP_Snd@tcbPtr
 15865  001ADC  C0FF  F059         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 15866  001AE0  EC11  F01D         	call	_TCP_Snd	;wreg free
 15867  001AE4                     L10:
 15868  001AE4  0900               	iorlw	0
 15869  001AE6  E001 D4CC          	bnz	l1293
 15870  001AEA  EFDA  F01C         	goto	l8821
 15871  001AEE                     l8545:
 15872                           
 15873                           ; BSR set to: 0
 15874                           ;tcpv4.c: 713: ;
 15875                           ;tcpv4.c: 715: currentTCB->timeout = 0;
 15876  001AEE  0E30               	movlw	48
 15877  001AF0  25FE               	addwf	_currentTCB& (0+255),w,b
 15878  001AF2  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 15879  001AF4  0E00               	movlw	0
 15880  001AF6  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 15881  001AF8  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 15882  001AFA  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 15883  001AFE  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 15884  001B02  0E00               	movlw	low (__smallconst shr (0+16))
 15885  001B04  6EF8               	movwf	tblptru,c
 15886  001B06  0E0F               	movlw	(high __ramtop+-1)
 15887  001B08  64F7               	cpfsgt	tblptrh,c
 15888  001B0A  D005               	bra	u12027
 15889  001B0C  6AF5               	clrf	tablat,c
 15890  001B0E  000D               	tblwt		*+
 15891  001B10  6AF5               	clrf	tablat,c
 15892  001B12  000C               	tblwt		*
 15893  001B14  D006               	bra	u12020
 15894  001B16                     u12027:
 15895  001B16  CFF6 FFE9          	movff	tblptrl,fsr0l
 15896  001B1A  CFF7 FFEA          	movff	tblptrh,fsr0h
 15897  001B1E  6AEE               	clrf	postinc0,c
 15898  001B20  6AEF               	clrf	indf0,c
 15899  001B22                     u12020:
 15900                           
 15901                           ;tcpv4.c: 717: if ((currentTCB->localSeqno + 1) == tcpHeader.ackNumber)
 15902  001B22  0E10               	movlw	16
 15903  001B24  0100               	movlb	0	; () banked
 15904  001B26  25FE               	addwf	_currentTCB& (0+255),w,b
 15905  001B28  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 15906  001B2A  0E00               	movlw	0
 15907  001B2C  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 15908  001B2E  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 15909  001B30  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 15910  001B34  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 15911  001B38  0E00               	movlw	low (__smallconst shr (0+16))
 15912  001B3A  6EF8               	movwf	tblptru,c
 15913  001B3C  0E0F               	movlw	(high __ramtop+-1)
 15914  001B3E  64F7               	cpfsgt	tblptrh,c
 15915  001B40  D00D               	bra	u12037
 15916  001B42  0009               	tblrd		*+
 15917  001B44  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 15918  001B48  0009               	tblrd		*+
 15919  001B4A  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 15920  001B4E  0009               	tblrd		*+
 15921  001B50  CFF5 F0C7          	movff	tablat,??_TCP_FiniteStateMachine+4
 15922  001B54  0009               	tblrd		*+
 15923  001B56  CFF5 F0C8          	movff	tablat,??_TCP_FiniteStateMachine+5
 15924  001B5A  D00C               	bra	u12030
 15925  001B5C                     u12037:
 15926  001B5C  CFF6 FFE9          	movff	tblptrl,fsr0l
 15927  001B60  CFF7 FFEA          	movff	tblptrh,fsr0h
 15928  001B64  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 15929  001B68  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 15930  001B6C  CFEE F0C7          	movff	postinc0,??_TCP_FiniteStateMachine+4
 15931  001B70  CFEE F0C8          	movff	postinc0,??_TCP_FiniteStateMachine+5
 15932  001B74                     u12030:
 15933  001B74  0E01               	movlw	1
 15934  001B76  0100               	movlb	0	; () banked
 15935  001B78  25C5               	addwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 15936  001B7A  6FC9               	movwf	(??_TCP_FiniteStateMachine+6)& (0+255),b
 15937  001B7C  0E00               	movlw	0
 15938  001B7E  21C6               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 15939  001B80  6FCA               	movwf	(??_TCP_FiniteStateMachine+7)& (0+255),b
 15940  001B82  0E00               	movlw	0
 15941  001B84  21C7               	addwfc	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 15942  001B86  6FCB               	movwf	(??_TCP_FiniteStateMachine+8)& (0+255),b
 15943  001B88  0E00               	movlw	0
 15944  001B8A  21C8               	addwfc	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 15945  001B8C  6FCC               	movwf	(??_TCP_FiniteStateMachine+9)& (0+255),b
 15946  001B8E  0101               	movlb	1	; () banked
 15947  001B90  51C4               	movf	(_tcpHeader+8)& (0+255),w,b
 15948  001B92  0100               	movlb	0	; () banked
 15949  001B94  19C9               	xorwf	(??_TCP_FiniteStateMachine+6)& (0+255),w,b
 15950  001B96  E10F               	bnz	u12041
 15951  001B98  0101               	movlb	1	; () banked
 15952  001B9A  51C5               	movf	(_tcpHeader+9)& (0+255),w,b
 15953  001B9C  0100               	movlb	0	; () banked
 15954  001B9E  19CA               	xorwf	(??_TCP_FiniteStateMachine+7)& (0+255),w,b
 15955  001BA0  E10A               	bnz	u12041
 15956  001BA2  0101               	movlb	1	; () banked
 15957  001BA4  51C6               	movf	(_tcpHeader+10)& (0+255),w,b
 15958  001BA6  0100               	movlb	0	; () banked
 15959  001BA8  19CB               	xorwf	(??_TCP_FiniteStateMachine+8)& (0+255),w,b
 15960  001BAA  E105               	bnz	u12041
 15961  001BAC  0101               	movlb	1	; () banked
 15962  001BAE  51C7               	movf	(_tcpHeader+11)& (0+255),w,b
 15963  001BB0  0100               	movlb	0	; () banked
 15964  001BB2  19CC               	xorwf	(??_TCP_FiniteStateMachine+9)& (0+255),w,b
 15965  001BB4  A4D8               	btfss	status,2,c
 15966  001BB6                     u12041:
 15967  001BB6  D145               	goto	l8557
 15968                           
 15969                           ; BSR set to: 0
 15970                           ;tcpv4.c: 718: {
 15971                           ;tcpv4.c: 720: currentTCB->localSeqno = currentTCB->localSeqno + 1;
 15972  001BB8  0E10               	movlw	16
 15973  001BBA  25FE               	addwf	_currentTCB& (0+255),w,b
 15974  001BBC  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 15975  001BBE  0E00               	movlw	0
 15976  001BC0  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 15977  001BC2  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 15978  001BC4  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 15979  001BC8  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 15980  001BCC  0E00               	movlw	low (__smallconst shr (0+16))
 15981  001BCE  6EF8               	movwf	tblptru,c
 15982  001BD0  0E0F               	movlw	(high __ramtop+-1)
 15983  001BD2  64F7               	cpfsgt	tblptrh,c
 15984  001BD4  D00D               	bra	u12057
 15985  001BD6  0009               	tblrd		*+
 15986  001BD8  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 15987  001BDC  0009               	tblrd		*+
 15988  001BDE  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 15989  001BE2  0009               	tblrd		*+
 15990  001BE4  CFF5 F0C7          	movff	tablat,??_TCP_FiniteStateMachine+4
 15991  001BE8  0009               	tblrd		*+
 15992  001BEA  CFF5 F0C8          	movff	tablat,??_TCP_FiniteStateMachine+5
 15993  001BEE  D00C               	bra	u12050
 15994  001BF0                     u12057:
 15995  001BF0  CFF6 FFE9          	movff	tblptrl,fsr0l
 15996  001BF4  CFF7 FFEA          	movff	tblptrh,fsr0h
 15997  001BF8  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 15998  001BFC  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 15999  001C00  CFEE F0C7          	movff	postinc0,??_TCP_FiniteStateMachine+4
 16000  001C04  CFEE F0C8          	movff	postinc0,??_TCP_FiniteStateMachine+5
 16001  001C08                     u12050:
 16002  001C08  0E01               	movlw	1
 16003  001C0A  0100               	movlb	0	; () banked
 16004  001C0C  25C5               	addwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 16005  001C0E  6FC9               	movwf	(??_TCP_FiniteStateMachine+6)& (0+255),b
 16006  001C10  0E00               	movlw	0
 16007  001C12  21C6               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 16008  001C14  6FCA               	movwf	(??_TCP_FiniteStateMachine+7)& (0+255),b
 16009  001C16  0E00               	movlw	0
 16010  001C18  21C7               	addwfc	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 16011  001C1A  6FCB               	movwf	(??_TCP_FiniteStateMachine+8)& (0+255),b
 16012  001C1C  0E00               	movlw	0
 16013  001C1E  21C8               	addwfc	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 16014  001C20  6FCC               	movwf	(??_TCP_FiniteStateMachine+9)& (0+255),b
 16015  001C22  0E10               	movlw	16
 16016  001C24  25FE               	addwf	_currentTCB& (0+255),w,b
 16017  001C26  6FCD               	movwf	(??_TCP_FiniteStateMachine+10)& (0+255),b
 16018  001C28  0E00               	movlw	0
 16019  001C2A  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16020  001C2C  6FCE               	movwf	(??_TCP_FiniteStateMachine+11)& (0+255),b
 16021  001C2E  C0CD  FFF6         	movff	??_TCP_FiniteStateMachine+10,tblptrl
 16022  001C32  C0CE  FFF7         	movff	??_TCP_FiniteStateMachine+11,tblptrh
 16023  001C36  0E00               	movlw	low (__smallconst shr (0+16))
 16024  001C38  6EF8               	movwf	tblptru,c
 16025  001C3A  0E0F               	movlw	(high __ramtop+-1)
 16026  001C3C  64F7               	cpfsgt	tblptrh,c
 16027  001C3E  D00D               	bra	u12067
 16028  001C40  C0C9  FFF5         	movff	??_TCP_FiniteStateMachine+6,tablat
 16029  001C44  000D               	tblwt		*+
 16030  001C46  C0CA  FFF5         	movff	??_TCP_FiniteStateMachine+7,tablat
 16031  001C4A  000D               	tblwt		*+
 16032  001C4C  C0CB  FFF5         	movff	??_TCP_FiniteStateMachine+8,tablat
 16033  001C50  000D               	tblwt		*+
 16034  001C52  C0CC  FFF5         	movff	??_TCP_FiniteStateMachine+9,tablat
 16035  001C56  000C               	tblwt		*
 16036  001C58  D00C               	bra	u12060
 16037  001C5A                     u12067:
 16038  001C5A  CFF6 FFE9          	movff	tblptrl,fsr0l
 16039  001C5E  CFF7 FFEA          	movff	tblptrh,fsr0h
 16040  001C62  C0C9  FFEE         	movff	??_TCP_FiniteStateMachine+6,postinc0
 16041  001C66  C0CA  FFEE         	movff	??_TCP_FiniteStateMachine+7,postinc0
 16042  001C6A  C0CB  FFEE         	movff	??_TCP_FiniteStateMachine+8,postinc0
 16043  001C6E  C0CC  FFEF         	movff	??_TCP_FiniteStateMachine+9,indf0
 16044  001C72                     u12060:
 16045                           
 16046                           ;tcpv4.c: 721: currentTCB->flags = 0x10U;
 16047  001C72  0E35               	movlw	53
 16048  001C74  0100               	movlb	0	; () banked
 16049  001C76  25FE               	addwf	_currentTCB& (0+255),w,b
 16050  001C78  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 16051  001C7A  0E00               	movlw	0
 16052  001C7C  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16053  001C7E  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16054  001C80  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 16055  001C84  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 16056  001C88  0E00               	movlw	low (__smallconst shr (0+16))
 16057  001C8A  6EF8               	movwf	tblptru,c
 16058  001C8C  0E0F               	movlw	(high __ramtop+-1)
 16059  001C8E  64F7               	cpfsgt	tblptrh,c
 16060  001C90  D004               	bra	u12077
 16061  001C92  0E10               	movlw	16
 16062  001C94  6EF5               	movwf	tablat,c
 16063  001C96  000C               	tblwt		*
 16064  001C98  D006               	bra	u12070
 16065  001C9A                     u12077:
 16066  001C9A  CFF6 FFE9          	movff	tblptrl,fsr0l
 16067  001C9E  CFF7 FFEA          	movff	tblptrh,fsr0h
 16068  001CA2  0E10               	movlw	16
 16069  001CA4  6EEF               	movwf	indf0,c
 16070  001CA6                     u12070:
 16071                           
 16072                           ;tcpv4.c: 724: currentTCB->remoteSeqno = tcpHeader.sequenceNumber;
 16073  001CA6  0E08               	movlw	8
 16074  001CA8  0100               	movlb	0	; () banked
 16075  001CAA  25FE               	addwf	_currentTCB& (0+255),w,b
 16076  001CAC  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 16077  001CAE  0E00               	movlw	0
 16078  001CB0  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16079  001CB2  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16080  001CB4  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 16081  001CB8  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 16082  001CBC  0E00               	movlw	low (__smallconst shr (0+16))
 16083  001CBE  6EF8               	movwf	tblptru,c
 16084  001CC0  0E0F               	movlw	(high __ramtop+-1)
 16085  001CC2  64F7               	cpfsgt	tblptrh,c
 16086  001CC4  D00D               	bra	u12087
 16087  001CC6  C1C0  FFF5         	movff	_tcpHeader+4,tablat
 16088  001CCA  000D               	tblwt		*+
 16089  001CCC  C1C1  FFF5         	movff	_tcpHeader+5,tablat
 16090  001CD0  000D               	tblwt		*+
 16091  001CD2  C1C2  FFF5         	movff	_tcpHeader+6,tablat
 16092  001CD6  000D               	tblwt		*+
 16093  001CD8  C1C3  FFF5         	movff	_tcpHeader+7,tablat
 16094  001CDC  000C               	tblwt		*
 16095  001CDE  D00C               	bra	u12080
 16096  001CE0                     u12087:
 16097  001CE0  CFF6 FFE9          	movff	tblptrl,fsr0l
 16098  001CE4  CFF7 FFEA          	movff	tblptrh,fsr0h
 16099  001CE8  C1C0  FFEE         	movff	_tcpHeader+4,postinc0
 16100  001CEC  C1C1  FFEE         	movff	_tcpHeader+5,postinc0
 16101  001CF0  C1C2  FFEE         	movff	_tcpHeader+6,postinc0
 16102  001CF4  C1C3  FFEF         	movff	_tcpHeader+7,indf0
 16103  001CF8                     u12080:
 16104                           
 16105                           ;tcpv4.c: 725: currentTCB->remoteAck = tcpHeader.sequenceNumber + 1;
 16106  001CF8  0E01               	movlw	1
 16107  001CFA  0101               	movlb	1	; () banked
 16108  001CFC  25C0               	addwf	(_tcpHeader+4)& (0+255),w,b
 16109  001CFE  0100               	movlb	0	; () banked
 16110  001D00  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 16111  001D02  0E00               	movlw	0
 16112  001D04  0101               	movlb	1	; () banked
 16113  001D06  21C1               	addwfc	(_tcpHeader+5)& (0+255),w,b
 16114  001D08  0100               	movlb	0	; () banked
 16115  001D0A  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16116  001D0C  0E00               	movlw	0
 16117  001D0E  0101               	movlb	1	; () banked
 16118  001D10  21C2               	addwfc	(_tcpHeader+6)& (0+255),w,b
 16119  001D12  0100               	movlb	0	; () banked
 16120  001D14  6FC5               	movwf	(??_TCP_FiniteStateMachine+2)& (0+255),b
 16121  001D16  0E00               	movlw	0
 16122  001D18  0101               	movlb	1	; () banked
 16123  001D1A  21C3               	addwfc	(_tcpHeader+7)& (0+255),w,b
 16124  001D1C  0100               	movlb	0	; () banked
 16125  001D1E  6FC6               	movwf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 16126  001D20  0E0C               	movlw	12
 16127  001D22  25FE               	addwf	_currentTCB& (0+255),w,b
 16128  001D24  6FC7               	movwf	(??_TCP_FiniteStateMachine+4)& (0+255),b
 16129  001D26  0E00               	movlw	0
 16130  001D28  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16131  001D2A  6FC8               	movwf	(??_TCP_FiniteStateMachine+5)& (0+255),b
 16132  001D2C  C0C7  FFF6         	movff	??_TCP_FiniteStateMachine+4,tblptrl
 16133  001D30  C0C8  FFF7         	movff	??_TCP_FiniteStateMachine+5,tblptrh
 16134  001D34  0E00               	movlw	low (__smallconst shr (0+16))
 16135  001D36  6EF8               	movwf	tblptru,c
 16136  001D38  0E0F               	movlw	(high __ramtop+-1)
 16137  001D3A  64F7               	cpfsgt	tblptrh,c
 16138  001D3C  D00D               	bra	u12097
 16139  001D3E  C0C3  FFF5         	movff	??_TCP_FiniteStateMachine,tablat
 16140  001D42  000D               	tblwt		*+
 16141  001D44  C0C4  FFF5         	movff	??_TCP_FiniteStateMachine+1,tablat
 16142  001D48  000D               	tblwt		*+
 16143  001D4A  C0C5  FFF5         	movff	??_TCP_FiniteStateMachine+2,tablat
 16144  001D4E  000D               	tblwt		*+
 16145  001D50  C0C6  FFF5         	movff	??_TCP_FiniteStateMachine+3,tablat
 16146  001D54  000C               	tblwt		*
 16147  001D56  D00C               	bra	u12090
 16148  001D58                     u12097:
 16149  001D58  CFF6 FFE9          	movff	tblptrl,fsr0l
 16150  001D5C  CFF7 FFEA          	movff	tblptrh,fsr0h
 16151  001D60  C0C3  FFEE         	movff	??_TCP_FiniteStateMachine,postinc0
 16152  001D64  C0C4  FFEE         	movff	??_TCP_FiniteStateMachine+1,postinc0
 16153  001D68  C0C5  FFEE         	movff	??_TCP_FiniteStateMachine+2,postinc0
 16154  001D6C  C0C6  FFEF         	movff	??_TCP_FiniteStateMachine+3,indf0
 16155  001D70                     u12090:
 16156                           
 16157                           ;tcpv4.c: 727: currentTCB->remoteWnd = ((((uint16_t)tcpHeader.windowSize & (uint16_t)0xF
      +                          F00) >> 8) | (((uint16_t)tcpHeader.windowSize & (uint16_t)0x00FF) << 8));
 16158  001D70  0101               	movlb	1	; () banked
 16159  001D72  51CA               	movf	(_tcpHeader+14)& (0+255),w,b
 16160  001D74  0100               	movlb	0	; () banked
 16161  001D76  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16162  001D78  6BC3               	clrf	??_TCP_FiniteStateMachine& (0+255),b
 16163  001D7A  EE21  F0CA         	lfsr	2,_tcpHeader+14
 16164  001D7E  CFDE F0C5          	movff	postinc2,??_TCP_FiniteStateMachine+2
 16165  001D82  CFDD F0C6          	movff	postdec2,??_TCP_FiniteStateMachine+3
 16166  001D86  C0C6  F0C5         	movff	??_TCP_FiniteStateMachine+3,??_TCP_FiniteStateMachine+2
 16167  001D8A  6BC6               	clrf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 16168  001D8C  6BC6               	clrf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 16169  001D8E  51C3               	movf	??_TCP_FiniteStateMachine& (0+255),w,b
 16170  001D90  13C5               	iorwf	(??_TCP_FiniteStateMachine+2)& (0+255),f,b
 16171  001D92  51C4               	movf	(??_TCP_FiniteStateMachine+1)& (0+255),w,b
 16172  001D94  13C6               	iorwf	(??_TCP_FiniteStateMachine+3)& (0+255),f,b
 16173  001D96  0E18               	movlw	24
 16174  001D98  25FE               	addwf	_currentTCB& (0+255),w,b
 16175  001D9A  6FC7               	movwf	(??_TCP_FiniteStateMachine+4)& (0+255),b
 16176  001D9C  0E00               	movlw	0
 16177  001D9E  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16178  001DA0  6FC8               	movwf	(??_TCP_FiniteStateMachine+5)& (0+255),b
 16179  001DA2  C0C7  FFF6         	movff	??_TCP_FiniteStateMachine+4,tblptrl
 16180  001DA6  C0C8  FFF7         	movff	??_TCP_FiniteStateMachine+5,tblptrh
 16181  001DAA  0E00               	movlw	low (__smallconst shr (0+16))
 16182  001DAC  6EF8               	movwf	tblptru,c
 16183  001DAE  0E0F               	movlw	(high __ramtop+-1)
 16184  001DB0  64F7               	cpfsgt	tblptrh,c
 16185  001DB2  D007               	bra	u12107
 16186  001DB4  C0C5  FFF5         	movff	??_TCP_FiniteStateMachine+2,tablat
 16187  001DB8  000D               	tblwt		*+
 16188  001DBA  C0C6  FFF5         	movff	??_TCP_FiniteStateMachine+3,tablat
 16189  001DBE  000C               	tblwt		*
 16190  001DC0  D008               	bra	u12100
 16191  001DC2                     u12107:
 16192  001DC2  CFF6 FFE9          	movff	tblptrl,fsr0l
 16193  001DC6  CFF7 FFEA          	movff	tblptrh,fsr0h
 16194  001DCA  C0C5  FFEE         	movff	??_TCP_FiniteStateMachine+2,postinc0
 16195  001DCE  C0C6  FFEF         	movff	??_TCP_FiniteStateMachine+3,indf0
 16196  001DD2                     u12100:
 16197                           
 16198                           ;tcpv4.c: 728: currentTCB->mss = tcpMss;
 16199  001DD2  0E1C               	movlw	28
 16200  001DD4  0100               	movlb	0	; () banked
 16201  001DD6  25FE               	addwf	_currentTCB& (0+255),w,b
 16202  001DD8  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 16203  001DDA  0E00               	movlw	0
 16204  001DDC  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16205  001DDE  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16206  001DE0  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 16207  001DE4  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 16208  001DE8  0E00               	movlw	low (__smallconst shr (0+16))
 16209  001DEA  6EF8               	movwf	tblptru,c
 16210  001DEC  0E0F               	movlw	(high __ramtop+-1)
 16211  001DEE  64F7               	cpfsgt	tblptrh,c
 16212  001DF0  D007               	bra	u12117
 16213  001DF2  C1A4  FFF5         	movff	_tcpMss,tablat
 16214  001DF6  000D               	tblwt		*+
 16215  001DF8  C1A5  FFF5         	movff	_tcpMss+1,tablat
 16216  001DFC  000C               	tblwt		*
 16217  001DFE  D008               	bra	u12110
 16218  001E00                     u12117:
 16219  001E00  CFF6 FFE9          	movff	tblptrl,fsr0l
 16220  001E04  CFF7 FFEA          	movff	tblptrh,fsr0h
 16221  001E08  C1A4  FFEE         	movff	_tcpMss,postinc0
 16222  001E0C  C1A5  FFEF         	movff	_tcpMss+1,indf0
 16223  001E10                     u12110:
 16224                           
 16225                           ;tcpv4.c: 730: nextState = ESTABLISHED;
 16226  001E10  0E04               	movlw	4
 16227  001E12  0100               	movlb	0	; () banked
 16228  001E14  6FD3               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 16229                           
 16230                           ; BSR set to: 0
 16231                           ;tcpv4.c: 731: currentTCB->socketState = SOCKET_CONNECTED;
 16232  001E16  0E36               	movlw	54
 16233  001E18  25FE               	addwf	_currentTCB& (0+255),w,b
 16234  001E1A  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 16235  001E1C  0E00               	movlw	0
 16236  001E1E  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16237  001E20  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16238  001E22  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 16239  001E26  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 16240  001E2A  0E00               	movlw	low (__smallconst shr (0+16))
 16241  001E2C  6EF8               	movwf	tblptru,c
 16242  001E2E  0E0F               	movlw	(high __ramtop+-1)
 16243  001E30  64F7               	cpfsgt	tblptrh,c
 16244  001E32  D004               	bra	u12127
 16245  001E34  0E03               	movlw	3
 16246  001E36  6EF5               	movwf	tablat,c
 16247  001E38  000C               	tblwt		*
 16248  001E3A  D001               	bra	u12120
 16249  001E3C                     u12127:
 16250  001E3C  D380               	goto	u12477
 16251  001E3E                     u12120:
 16252                           
 16253                           ;tcpv4.c: 732: }
 16254  001E3E  EFDA  F01C         	goto	l8821
 16255  001E42                     l8557:
 16256                           
 16257                           ; BSR set to: 0
 16258                           ;tcpv4.c: 733: else
 16259                           ;tcpv4.c: 734: {
 16260                           ;tcpv4.c: 736: currentTCB->localSeqno = tcpHeader.ackNumber;
 16261  001E42  0E10               	movlw	16
 16262  001E44  25FE               	addwf	_currentTCB& (0+255),w,b
 16263  001E46  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 16264  001E48  0E00               	movlw	0
 16265  001E4A  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16266  001E4C  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16267  001E4E  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 16268  001E52  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 16269  001E56  0E00               	movlw	low (__smallconst shr (0+16))
 16270  001E58  6EF8               	movwf	tblptru,c
 16271  001E5A  0E0F               	movlw	(high __ramtop+-1)
 16272  001E5C  64F7               	cpfsgt	tblptrh,c
 16273  001E5E  D00D               	bra	u12137
 16274  001E60  C1C4  FFF5         	movff	_tcpHeader+8,tablat
 16275  001E64  000D               	tblwt		*+
 16276  001E66  C1C5  FFF5         	movff	_tcpHeader+9,tablat
 16277  001E6A  000D               	tblwt		*+
 16278  001E6C  C1C6  FFF5         	movff	_tcpHeader+10,tablat
 16279  001E70  000D               	tblwt		*+
 16280  001E72  C1C7  FFF5         	movff	_tcpHeader+11,tablat
 16281  001E76  000C               	tblwt		*
 16282  001E78  D00C               	bra	u12130
 16283  001E7A                     u12137:
 16284  001E7A  CFF6 FFE9          	movff	tblptrl,fsr0l
 16285  001E7E  CFF7 FFEA          	movff	tblptrh,fsr0h
 16286  001E82  C1C4  FFEE         	movff	_tcpHeader+8,postinc0
 16287  001E86  C1C5  FFEE         	movff	_tcpHeader+9,postinc0
 16288  001E8A  C1C6  FFEE         	movff	_tcpHeader+10,postinc0
 16289  001E8E  C1C7  FFEF         	movff	_tcpHeader+11,indf0
 16290  001E92                     u12130:
 16291                           
 16292                           ;tcpv4.c: 737: currentTCB->flags = 0x04U;
 16293  001E92  0E35               	movlw	53
 16294  001E94  0100               	movlb	0	; () banked
 16295  001E96  25FE               	addwf	_currentTCB& (0+255),w,b
 16296  001E98  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 16297  001E9A  0E00               	movlw	0
 16298  001E9C  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16299  001E9E  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16300  001EA0  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 16301  001EA4  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 16302  001EA8  0E00               	movlw	low (__smallconst shr (0+16))
 16303  001EAA  6EF8               	movwf	tblptru,c
 16304  001EAC  0E0F               	movlw	(high __ramtop+-1)
 16305  001EAE  64F7               	cpfsgt	tblptrh,c
 16306  001EB0  D004               	bra	u12147
 16307  001EB2  0E04               	movlw	4
 16308  001EB4  6EF5               	movwf	tablat,c
 16309  001EB6  000C               	tblwt		*
 16310  001EB8  D006               	bra	u12140
 16311  001EBA                     u12147:
 16312  001EBA  CFF6 FFE9          	movff	tblptrl,fsr0l
 16313  001EBE  CFF7 FFEA          	movff	tblptrh,fsr0h
 16314  001EC2  0E04               	movlw	4
 16315  001EC4  6EEF               	movwf	indf0,c
 16316  001EC6                     u12140:
 16317                           
 16318                           ;tcpv4.c: 738: if(TCP_Snd(currentTCB))
 16319  001EC6  C0FE  F058         	movff	_currentTCB,TCP_Snd@tcbPtr
 16320  001ECA  C0FF  F059         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 16321  001ECE  EC11  F01D         	call	_TCP_Snd	;wreg free
 16322  001ED2  D608               	goto	L10
 16323  001ED4                     l8567:
 16324                           
 16325                           ; BSR set to: 0
 16326                           ;tcpv4.c: 752: ;
 16327                           ;tcpv4.c: 755: if (currentTCB->timeoutsCount)
 16328  001ED4  0E34               	movlw	52
 16329  001ED6  25FE               	addwf	_currentTCB& (0+255),w,b
 16330  001ED8  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 16331  001EDA  0E00               	movlw	0
 16332  001EDC  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16333  001EDE  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16334  001EE0  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 16335  001EE4  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 16336  001EE8  0E00               	movlw	low (__smallconst shr (0+16))
 16337  001EEA  6EF8               	movwf	tblptru,c
 16338  001EEC  0E0F               	movlw	(high __ramtop+-1)
 16339  001EEE  64F7               	cpfsgt	tblptrh,c
 16340  001EF0  D003               	bra	u12167
 16341  001EF2  0008               	tblrd		*
 16342  001EF4  50F5               	movf	tablat,w,c
 16343  001EF6  D005               	bra	u12160
 16344  001EF8                     u12167:
 16345  001EF8  CFF6 FFE9          	movff	tblptrl,fsr0l
 16346  001EFC  CFF7 FFEA          	movff	tblptrh,fsr0h
 16347  001F00  50EF               	movf	indf0,w,c
 16348  001F02                     u12160:
 16349  001F02  0900               	iorlw	0
 16350  001F04  E05A               	bz	l8583
 16351                           
 16352                           ;tcpv4.c: 756: {
 16353                           ;tcpv4.c: 757: if(TCP_Snd(currentTCB))
 16354  001F06  C0FE  F058         	movff	_currentTCB,TCP_Snd@tcbPtr
 16355  001F0A  C0FF  F059         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 16356  001F0E  EC11  F01D         	call	_TCP_Snd	;wreg free
 16357  001F12  0900               	iorlw	0
 16358  001F14  E102 EFDA  F01C    	bz	l8821
 16359                           
 16360                           ; BSR set to: 0
 16361                           ;tcpv4.c: 758: {
 16362                           ;tcpv4.c: 759: if (currentTCB->flags & 0x04U)
 16363  001F1A  0E35               	movlw	53
 16364  001F1C  25FE               	addwf	_currentTCB& (0+255),w,b
 16365  001F1E  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 16366  001F20  0E00               	movlw	0
 16367  001F22  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16368  001F24  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16369  001F26  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 16370  001F2A  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 16371  001F2E  0E00               	movlw	low (__smallconst shr (0+16))
 16372  001F30  6EF8               	movwf	tblptru,c
 16373  001F32  0E0F               	movlw	(high __ramtop+-1)
 16374  001F34  64F7               	cpfsgt	tblptrh,c
 16375  001F36  D003               	bra	u12197
 16376  001F38  0008               	tblrd		*
 16377  001F3A  50F5               	movf	tablat,w,c
 16378  001F3C  D005               	bra	u12190
 16379  001F3E                     u12197:
 16380  001F3E  CFF6 FFE9          	movff	tblptrl,fsr0l
 16381  001F42  CFF7 FFEA          	movff	tblptrh,fsr0h
 16382  001F46  50EF               	movf	indf0,w,c
 16383  001F48                     u12190:
 16384  001F48  0100               	movlb	0	; () banked
 16385  001F4A  6FC5               	movwf	(??_TCP_FiniteStateMachine+2)& (0+255),b
 16386  001F4C  B5C5               	btfsc	(??_TCP_FiniteStateMachine+2)& (0+255),2,b
 16387  001F4E  EF41  F00A         	goto	l1293
 16388                           
 16389                           ; BSR set to: 0
 16390                           ;tcpv4.c: 764: if(currentTCB->flags & 0x10U)
 16391  001F52  0E35               	movlw	53
 16392  001F54  25FE               	addwf	_currentTCB& (0+255),w,b
 16393  001F56  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 16394  001F58  0E00               	movlw	0
 16395  001F5A  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16396  001F5C  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16397  001F5E  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 16398  001F62  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 16399  001F66  0E00               	movlw	low (__smallconst shr (0+16))
 16400  001F68  6EF8               	movwf	tblptru,c
 16401  001F6A  0E0F               	movlw	(high __ramtop+-1)
 16402  001F6C  64F7               	cpfsgt	tblptrh,c
 16403  001F6E  D003               	bra	u12217
 16404  001F70  0008               	tblrd		*
 16405  001F72  50F5               	movf	tablat,w,c
 16406  001F74  D005               	bra	u12210
 16407  001F76                     u12217:
 16408  001F76  CFF6 FFE9          	movff	tblptrl,fsr0l
 16409  001F7A  CFF7 FFEA          	movff	tblptrh,fsr0h
 16410  001F7E  50EF               	movf	indf0,w,c
 16411  001F80                     u12210:
 16412  001F80  0100               	movlb	0	; () banked
 16413  001F82  6FC5               	movwf	(??_TCP_FiniteStateMachine+2)& (0+255),b
 16414  001F84  A9C5               	btfss	(??_TCP_FiniteStateMachine+2)& (0+255),4,b
 16415  001F86  EFDA  F01C         	goto	l8821
 16416                           
 16417                           ; BSR set to: 0
 16418                           ;tcpv4.c: 765: {
 16419                           ;tcpv4.c: 766: nextState = ESTABLISHED;
 16420  001F8A  0E04               	movlw	4
 16421  001F8C  6FD3               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 16422                           
 16423                           ; BSR set to: 0
 16424                           ;tcpv4.c: 767: currentTCB->socketState = SOCKET_CONNECTED;
 16425  001F8E  0E36               	movlw	54
 16426  001F90  25FE               	addwf	_currentTCB& (0+255),w,b
 16427  001F92  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 16428  001F94  0E00               	movlw	0
 16429  001F96  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16430  001F98  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16431  001F9A  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 16432  001F9E  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 16433  001FA2  0E00               	movlw	low (__smallconst shr (0+16))
 16434  001FA4  6EF8               	movwf	tblptru,c
 16435  001FA6  0E0F               	movlw	(high __ramtop+-1)
 16436  001FA8  64F7               	cpfsgt	tblptrh,c
 16437  001FAA  D004               	bra	u12237
 16438  001FAC  0E03               	movlw	3
 16439  001FAE  6EF5               	movwf	tablat,c
 16440  001FB0  000C               	tblwt		*
 16441  001FB2  D001               	bra	u12230
 16442  001FB4                     u12237:
 16443  001FB4  D2C4               	goto	u12477
 16444  001FB6                     u12230:
 16445  001FB6  EFDA  F01C         	goto	l8821
 16446  001FBA                     l8583:
 16447                           
 16448                           ;tcpv4.c: 771: {
 16449                           ;tcpv4.c: 773: currentTCB->flags = 0x04U;
 16450  001FBA  0E35               	movlw	53
 16451  001FBC  0100               	movlb	0	; () banked
 16452  001FBE  25FE               	addwf	_currentTCB& (0+255),w,b
 16453  001FC0  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 16454  001FC2  0E00               	movlw	0
 16455  001FC4  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16456  001FC6  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16457  001FC8  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 16458  001FCC  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 16459  001FD0  0E00               	movlw	low (__smallconst shr (0+16))
 16460  001FD2  6EF8               	movwf	tblptru,c
 16461  001FD4  0E0F               	movlw	(high __ramtop+-1)
 16462  001FD6  64F7               	cpfsgt	tblptrh,c
 16463  001FD8  D004               	bra	u12247
 16464  001FDA  0E04               	movlw	4
 16465  001FDC  6EF5               	movwf	tablat,c
 16466  001FDE  000C               	tblwt		*
 16467  001FE0  D006               	bra	u12240
 16468  001FE2                     u12247:
 16469  001FE2  CFF6 FFE9          	movff	tblptrl,fsr0l
 16470  001FE6  CFF7 FFEA          	movff	tblptrh,fsr0h
 16471  001FEA  0E04               	movlw	4
 16472  001FEC  6EEF               	movwf	indf0,c
 16473  001FEE                     u12240:
 16474                           
 16475                           ;tcpv4.c: 774: if(TCP_Snd(currentTCB))
 16476  001FEE  C0FE  F058         	movff	_currentTCB,TCP_Snd@tcbPtr
 16477  001FF2  C0FF  F059         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 16478  001FF6  EC11  F01D         	call	_TCP_Snd	;wreg free
 16479  001FFA  D574               	goto	L10
 16480  001FFC                     l8595:
 16481  001FFC  0100               	movlb	0	; () banked
 16482  001FFE  51D2               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 16483                           
 16484                           ; Switch size 1, requested type "speed"
 16485                           ; Number of cases is 7, Range of values is 0 to 12
 16486                           ; switch strategies available:
 16487                           ; Name         Instructions Cycles
 16488                           ; simple_byte           22    12 (average)
 16489                           ;	Chosen strategy is simple_byte
 16490  002000  E102 EF41  F00A    	bz	l1293
 16491  002006  0A03               	xorlw	3	; case 3
 16492  002008  E102 EF53  F00A    	bz	l8505
 16493  00200E  0A07               	xorlw	7	; case 4
 16494  002010  E101 D56D          	bz	l8545
 16495  002014  0A01               	xorlw	1	; case 5
 16496  002016  E102 EF76  F00B    	bz	l8523
 16497  00201C  0A0C               	xorlw	12	; case 9
 16498  00201E  E102 EF41  F00A    	bz	l1293
 16499  002024  0A03               	xorlw	3	; case 10
 16500  002026  E102 EF41  F00A    	bz	l1293
 16501  00202C  0A06               	xorlw	6	; case 12
 16502  00202E  E101 D751          	bz	l8567
 16503  002032  EFDA  F01C         	goto	l8821
 16504  002036                     l8597:
 16505                           
 16506                           ; BSR set to: 0
 16507                           ;tcpv4.c: 796: ;
 16508                           ;tcpv4.c: 797: if (currentTCB->localPort == tcpHeader.destPort)
 16509  002036  C0FE  FFF6         	movff	_currentTCB,tblptrl
 16510  00203A  C0FF  FFF7         	movff	_currentTCB+1,tblptrh
 16511  00203E  0E00               	movlw	low (__smallconst shr (0+16))
 16512  002040  6EF8               	movwf	tblptru,c
 16513  002042  0E0F               	movlw	(high __ramtop+-1)
 16514  002044  64F7               	cpfsgt	tblptrh,c
 16515  002046  D007               	bra	u12267
 16516  002048  0009               	tblrd		*+
 16517  00204A  CFF5 F0C3          	movff	tablat,??_TCP_FiniteStateMachine
 16518  00204E  0009               	tblrd		*+
 16519  002050  CFF5 F0C4          	movff	tablat,??_TCP_FiniteStateMachine+1
 16520  002054  D008               	bra	u12260
 16521  002056                     u12267:
 16522  002056  CFF6 FFE9          	movff	tblptrl,fsr0l
 16523  00205A  CFF7 FFEA          	movff	tblptrh,fsr0h
 16524  00205E  CFEE F0C3          	movff	postinc0,??_TCP_FiniteStateMachine
 16525  002062  CFEE F0C4          	movff	postinc0,??_TCP_FiniteStateMachine+1
 16526  002066                     u12260:
 16527  002066  0101               	movlb	1	; () banked
 16528  002068  51BE               	movf	(_tcpHeader+2)& (0+255),w,b
 16529  00206A  0100               	movlb	0	; () banked
 16530  00206C  19C3               	xorwf	??_TCP_FiniteStateMachine& (0+255),w,b
 16531  00206E  E105               	bnz	u12271
 16532  002070  0101               	movlb	1	; () banked
 16533  002072  51BF               	movf	(_tcpHeader+3)& (0+255),w,b
 16534  002074  0100               	movlb	0	; () banked
 16535  002076  19C4               	xorwf	(??_TCP_FiniteStateMachine+1)& (0+255),w,b
 16536  002078  A4D8               	btfss	status,2,c
 16537  00207A                     u12271:
 16538  00207A  EFDA  F01C         	goto	l8821
 16539                           
 16540                           ; BSR set to: 0
 16541                           ;tcpv4.c: 798: {
 16542                           ;tcpv4.c: 800: currentTCB->timeout = 0;
 16543  00207E  0E30               	movlw	48
 16544  002080  25FE               	addwf	_currentTCB& (0+255),w,b
 16545  002082  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 16546  002084  0E00               	movlw	0
 16547  002086  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16548  002088  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16549  00208A  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 16550  00208E  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 16551  002092  0E00               	movlw	low (__smallconst shr (0+16))
 16552  002094  6EF8               	movwf	tblptru,c
 16553  002096  0E0F               	movlw	(high __ramtop+-1)
 16554  002098  64F7               	cpfsgt	tblptrh,c
 16555  00209A  D005               	bra	u12287
 16556  00209C  6AF5               	clrf	tablat,c
 16557  00209E  000D               	tblwt		*+
 16558  0020A0  6AF5               	clrf	tablat,c
 16559  0020A2  000C               	tblwt		*
 16560  0020A4  D006               	bra	u12280
 16561  0020A6                     u12287:
 16562  0020A6  CFF6 FFE9          	movff	tblptrl,fsr0l
 16563  0020AA  CFF7 FFEA          	movff	tblptrh,fsr0h
 16564  0020AE  6AEE               	clrf	postinc0,c
 16565  0020B0  6AEF               	clrf	indf0,c
 16566  0020B2                     u12280:
 16567                           
 16568                           ;tcpv4.c: 804: if ((currentTCB->destIP == receivedRemoteAddress) && (currentTCB->destPor
      +                          t == tcpHeader.sourcePort))
 16569  0020B2  0E02               	movlw	2
 16570  0020B4  0100               	movlb	0	; () banked
 16571  0020B6  25FE               	addwf	_currentTCB& (0+255),w,b
 16572  0020B8  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 16573  0020BA  0E00               	movlw	0
 16574  0020BC  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16575  0020BE  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16576  0020C0  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 16577  0020C4  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 16578  0020C8  0E00               	movlw	low (__smallconst shr (0+16))
 16579  0020CA  6EF8               	movwf	tblptru,c
 16580  0020CC  0E0F               	movlw	(high __ramtop+-1)
 16581  0020CE  64F7               	cpfsgt	tblptrh,c
 16582  0020D0  D00D               	bra	u12297
 16583  0020D2  0009               	tblrd		*+
 16584  0020D4  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 16585  0020D8  0009               	tblrd		*+
 16586  0020DA  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 16587  0020DE  0009               	tblrd		*+
 16588  0020E0  CFF5 F0C7          	movff	tablat,??_TCP_FiniteStateMachine+4
 16589  0020E4  0009               	tblrd		*+
 16590  0020E6  CFF5 F0C8          	movff	tablat,??_TCP_FiniteStateMachine+5
 16591  0020EA  D00C               	bra	u12290
 16592  0020EC                     u12297:
 16593  0020EC  CFF6 FFE9          	movff	tblptrl,fsr0l
 16594  0020F0  CFF7 FFEA          	movff	tblptrh,fsr0h
 16595  0020F4  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 16596  0020F8  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 16597  0020FC  CFEE F0C7          	movff	postinc0,??_TCP_FiniteStateMachine+4
 16598  002100  CFEE F0C8          	movff	postinc0,??_TCP_FiniteStateMachine+5
 16599  002104                     u12290:
 16600  002104  0101               	movlb	1	; () banked
 16601  002106  5196               	movf	_receivedRemoteAddress& (0+255),w,b
 16602  002108  0100               	movlb	0	; () banked
 16603  00210A  19C5               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 16604  00210C  E10F               	bnz	u12301
 16605  00210E  0101               	movlb	1	; () banked
 16606  002110  5197               	movf	(_receivedRemoteAddress+1)& (0+255),w,b
 16607  002112  0100               	movlb	0	; () banked
 16608  002114  19C6               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 16609  002116  E17E               	bnz	l8607
 16610  002118  0101               	movlb	1	; () banked
 16611  00211A  5198               	movf	(_receivedRemoteAddress+2)& (0+255),w,b
 16612  00211C  0100               	movlb	0	; () banked
 16613  00211E  19C7               	xorwf	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 16614  002120  E179               	bnz	l8607
 16615  002122  0101               	movlb	1	; () banked
 16616  002124  5199               	movf	(_receivedRemoteAddress+3)& (0+255),w,b
 16617  002126  0100               	movlb	0	; () banked
 16618  002128  19C8               	xorwf	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 16619  00212A  A4D8               	btfss	status,2,c
 16620  00212C                     u12301:
 16621  00212C  D073               	goto	l8607
 16622                           
 16623                           ; BSR set to: 0
 16624  00212E  0E06               	movlw	6
 16625  002130  25FE               	addwf	_currentTCB& (0+255),w,b
 16626  002132  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 16627  002134  0E00               	movlw	0
 16628  002136  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16629  002138  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16630  00213A  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 16631  00213E  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 16632  002142  0E00               	movlw	low (__smallconst shr (0+16))
 16633  002144  6EF8               	movwf	tblptru,c
 16634  002146  0E0F               	movlw	(high __ramtop+-1)
 16635  002148  64F7               	cpfsgt	tblptrh,c
 16636  00214A  D007               	bra	u12317
 16637  00214C  0009               	tblrd		*+
 16638  00214E  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 16639  002152  0009               	tblrd		*+
 16640  002154  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 16641  002158  D008               	bra	u12310
 16642  00215A                     u12317:
 16643  00215A  CFF6 FFE9          	movff	tblptrl,fsr0l
 16644  00215E  CFF7 FFEA          	movff	tblptrh,fsr0h
 16645  002162  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 16646  002166  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 16647  00216A                     u12310:
 16648  00216A  0101               	movlb	1	; () banked
 16649  00216C  51BC               	movf	_tcpHeader& (0+255),w,b
 16650  00216E  0100               	movlb	0	; () banked
 16651  002170  19C5               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 16652  002172  E150               	bnz	l8607
 16653  002174  0101               	movlb	1	; () banked
 16654  002176  51BD               	movf	(_tcpHeader+1)& (0+255),w,b
 16655  002178  0100               	movlb	0	; () banked
 16656  00217A  19C6               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 16657  00217C  E14B               	bnz	l8607
 16658                           
 16659                           ; BSR set to: 0
 16660                           ;tcpv4.c: 805: if ((currentTCB->localSeqno + 1) == tcpHeader.ackNumber)
 16661  00217E  0E10               	movlw	16
 16662  002180  25FE               	addwf	_currentTCB& (0+255),w,b
 16663  002182  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 16664  002184  0E00               	movlw	0
 16665  002186  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16666  002188  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16667  00218A  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 16668  00218E  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 16669  002192  0E00               	movlw	low (__smallconst shr (0+16))
 16670  002194  6EF8               	movwf	tblptru,c
 16671  002196  0E0F               	movlw	(high __ramtop+-1)
 16672  002198  64F7               	cpfsgt	tblptrh,c
 16673  00219A  D00D               	bra	u12337
 16674  00219C  0009               	tblrd		*+
 16675  00219E  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 16676  0021A2  0009               	tblrd		*+
 16677  0021A4  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 16678  0021A8  0009               	tblrd		*+
 16679  0021AA  CFF5 F0C7          	movff	tablat,??_TCP_FiniteStateMachine+4
 16680  0021AE  0009               	tblrd		*+
 16681  0021B0  CFF5 F0C8          	movff	tablat,??_TCP_FiniteStateMachine+5
 16682  0021B4  D00C               	bra	u12330
 16683  0021B6                     u12337:
 16684  0021B6  CFF6 FFE9          	movff	tblptrl,fsr0l
 16685  0021BA  CFF7 FFEA          	movff	tblptrh,fsr0h
 16686  0021BE  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 16687  0021C2  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 16688  0021C6  CFEE F0C7          	movff	postinc0,??_TCP_FiniteStateMachine+4
 16689  0021CA  CFEE F0C8          	movff	postinc0,??_TCP_FiniteStateMachine+5
 16690  0021CE                     u12330:
 16691  0021CE  0E01               	movlw	1
 16692  0021D0  0100               	movlb	0	; () banked
 16693  0021D2  25C5               	addwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 16694  0021D4  6FC9               	movwf	(??_TCP_FiniteStateMachine+6)& (0+255),b
 16695  0021D6  0E00               	movlw	0
 16696  0021D8  21C6               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 16697  0021DA  6FCA               	movwf	(??_TCP_FiniteStateMachine+7)& (0+255),b
 16698  0021DC  0E00               	movlw	0
 16699  0021DE  21C7               	addwfc	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 16700  0021E0  6FCB               	movwf	(??_TCP_FiniteStateMachine+8)& (0+255),b
 16701  0021E2  0E00               	movlw	0
 16702  0021E4  21C8               	addwfc	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 16703  0021E6  6FCC               	movwf	(??_TCP_FiniteStateMachine+9)& (0+255),b
 16704  0021E8  0101               	movlb	1	; () banked
 16705  0021EA  51C4               	movf	(_tcpHeader+8)& (0+255),w,b
 16706  0021EC  0100               	movlb	0	; () banked
 16707  0021EE  19C9               	xorwf	(??_TCP_FiniteStateMachine+6)& (0+255),w,b
 16708  0021F0  E111               	bnz	l8607
 16709  0021F2  0101               	movlb	1	; () banked
 16710  0021F4  51C5               	movf	(_tcpHeader+9)& (0+255),w,b
 16711  0021F6  0100               	movlb	0	; () banked
 16712  0021F8  19CA               	xorwf	(??_TCP_FiniteStateMachine+7)& (0+255),w,b
 16713  0021FA  E10C               	bnz	l8607
 16714  0021FC  0101               	movlb	1	; () banked
 16715  0021FE  51C6               	movf	(_tcpHeader+10)& (0+255),w,b
 16716  002200  0100               	movlb	0	; () banked
 16717  002202  19CB               	xorwf	(??_TCP_FiniteStateMachine+8)& (0+255),w,b
 16718  002204  E107               	bnz	l8607
 16719  002206  0101               	movlb	1	; () banked
 16720  002208  51C7               	movf	(_tcpHeader+11)& (0+255),w,b
 16721  00220A  0100               	movlb	0	; () banked
 16722  00220C  19CC               	xorwf	(??_TCP_FiniteStateMachine+9)& (0+255),w,b
 16723  00220E  E102               	bnz	l8607
 16724                           
 16725                           ; BSR set to: 0
 16726                           ;tcpv4.c: 807: nextState = ESTABLISHED;
 16727  002210  0E04               	movlw	4
 16728  002212  6FD3               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 16729  002214                     l8607:
 16730                           
 16731                           ; BSR set to: 0
 16732                           ;tcpv4.c: 808: currentTCB->socketState = SOCKET_CONNECTED;
 16733  002214  0E36               	movlw	54
 16734  002216  25FE               	addwf	_currentTCB& (0+255),w,b
 16735  002218  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 16736  00221A  0E00               	movlw	0
 16737  00221C  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16738  00221E  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16739  002220  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 16740  002224  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 16741  002228  0E00               	movlw	low (__smallconst shr (0+16))
 16742  00222A  6EF8               	movwf	tblptru,c
 16743  00222C  0E0F               	movlw	(high __ramtop+-1)
 16744  00222E  64F7               	cpfsgt	tblptrh,c
 16745  002230  D004               	bra	u12357
 16746  002232  0E03               	movlw	3
 16747  002234  6EF5               	movwf	tablat,c
 16748  002236  000C               	tblwt		*
 16749  002238  D001               	bra	u12350
 16750  00223A                     u12357:
 16751  00223A  D181               	goto	u12477
 16752  00223C                     u12350:
 16753  00223C  EFDA  F01C         	goto	l8821
 16754  002240                     l8609:
 16755                           
 16756                           ; BSR set to: 0
 16757                           ;tcpv4.c: 812: ;
 16758                           ;tcpv4.c: 816: if ((currentTCB->destIP == receivedRemoteAddress) && (currentTCB->destPor
      +                          t == tcpHeader.sourcePort))
 16759  002240  0E02               	movlw	2
 16760  002242  25FE               	addwf	_currentTCB& (0+255),w,b
 16761  002244  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 16762  002246  0E00               	movlw	0
 16763  002248  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16764  00224A  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16765  00224C  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 16766  002250  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 16767  002254  0E00               	movlw	low (__smallconst shr (0+16))
 16768  002256  6EF8               	movwf	tblptru,c
 16769  002258  0E0F               	movlw	(high __ramtop+-1)
 16770  00225A  64F7               	cpfsgt	tblptrh,c
 16771  00225C  D00D               	bra	u12367
 16772  00225E  0009               	tblrd		*+
 16773  002260  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 16774  002264  0009               	tblrd		*+
 16775  002266  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 16776  00226A  0009               	tblrd		*+
 16777  00226C  CFF5 F0C7          	movff	tablat,??_TCP_FiniteStateMachine+4
 16778  002270  0009               	tblrd		*+
 16779  002272  CFF5 F0C8          	movff	tablat,??_TCP_FiniteStateMachine+5
 16780  002276  D00C               	bra	u12360
 16781  002278                     u12367:
 16782  002278  CFF6 FFE9          	movff	tblptrl,fsr0l
 16783  00227C  CFF7 FFEA          	movff	tblptrh,fsr0h
 16784  002280  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 16785  002284  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 16786  002288  CFEE F0C7          	movff	postinc0,??_TCP_FiniteStateMachine+4
 16787  00228C  CFEE F0C8          	movff	postinc0,??_TCP_FiniteStateMachine+5
 16788  002290                     u12360:
 16789  002290  0101               	movlb	1	; () banked
 16790  002292  5196               	movf	_receivedRemoteAddress& (0+255),w,b
 16791  002294  0100               	movlb	0	; () banked
 16792  002296  19C5               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 16793  002298  E10F               	bnz	u12371
 16794  00229A  0101               	movlb	1	; () banked
 16795  00229C  5197               	movf	(_receivedRemoteAddress+1)& (0+255),w,b
 16796  00229E  0100               	movlb	0	; () banked
 16797  0022A0  19C6               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 16798  0022A2  E10A               	bnz	u12371
 16799  0022A4  0101               	movlb	1	; () banked
 16800  0022A6  5198               	movf	(_receivedRemoteAddress+2)& (0+255),w,b
 16801  0022A8  0100               	movlb	0	; () banked
 16802  0022AA  19C7               	xorwf	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 16803  0022AC  E105               	bnz	u12371
 16804  0022AE  0101               	movlb	1	; () banked
 16805  0022B0  5199               	movf	(_receivedRemoteAddress+3)& (0+255),w,b
 16806  0022B2  0100               	movlb	0	; () banked
 16807  0022B4  19C8               	xorwf	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 16808  0022B6  A4D8               	btfss	status,2,c
 16809  0022B8                     u12371:
 16810  0022B8  EFDA  F01C         	goto	l8821
 16811                           
 16812                           ; BSR set to: 0
 16813  0022BC  0E06               	movlw	6
 16814  0022BE  25FE               	addwf	_currentTCB& (0+255),w,b
 16815  0022C0  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 16816  0022C2  0E00               	movlw	0
 16817  0022C4  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16818  0022C6  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16819  0022C8  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 16820  0022CC  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 16821  0022D0  0E00               	movlw	low (__smallconst shr (0+16))
 16822  0022D2  6EF8               	movwf	tblptru,c
 16823  0022D4  0E0F               	movlw	(high __ramtop+-1)
 16824  0022D6  64F7               	cpfsgt	tblptrh,c
 16825  0022D8  D007               	bra	u12387
 16826  0022DA  0009               	tblrd		*+
 16827  0022DC  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 16828  0022E0  0009               	tblrd		*+
 16829  0022E2  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 16830  0022E6  D008               	bra	u12380
 16831  0022E8                     u12387:
 16832  0022E8  CFF6 FFE9          	movff	tblptrl,fsr0l
 16833  0022EC  CFF7 FFEA          	movff	tblptrh,fsr0h
 16834  0022F0  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 16835  0022F4  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 16836  0022F8                     u12380:
 16837  0022F8  0101               	movlb	1	; () banked
 16838  0022FA  51BC               	movf	_tcpHeader& (0+255),w,b
 16839  0022FC  0100               	movlb	0	; () banked
 16840  0022FE  19C5               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 16841  002300  E105               	bnz	u12391
 16842  002302  0101               	movlb	1	; () banked
 16843  002304  51BD               	movf	(_tcpHeader+1)& (0+255),w,b
 16844  002306  0100               	movlb	0	; () banked
 16845  002308  19C6               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 16846  00230A  A4D8               	btfss	status,2,c
 16847  00230C                     u12391:
 16848  00230C  EFDA  F01C         	goto	l8821
 16849                           
 16850                           ; BSR set to: 0
 16851                           ;tcpv4.c: 817: {
 16852                           ;tcpv4.c: 820: if (currentTCB->remoteAck == tcpHeader.sequenceNumber)
 16853  002310  0E0C               	movlw	12
 16854  002312  25FE               	addwf	_currentTCB& (0+255),w,b
 16855  002314  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 16856  002316  0E00               	movlw	0
 16857  002318  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16858  00231A  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16859  00231C  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 16860  002320  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 16861  002324  0E00               	movlw	low (__smallconst shr (0+16))
 16862  002326  6EF8               	movwf	tblptru,c
 16863  002328  0E0F               	movlw	(high __ramtop+-1)
 16864  00232A  64F7               	cpfsgt	tblptrh,c
 16865  00232C  D00D               	bra	u12407
 16866  00232E  0009               	tblrd		*+
 16867  002330  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 16868  002334  0009               	tblrd		*+
 16869  002336  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 16870  00233A  0009               	tblrd		*+
 16871  00233C  CFF5 F0C7          	movff	tablat,??_TCP_FiniteStateMachine+4
 16872  002340  0009               	tblrd		*+
 16873  002342  CFF5 F0C8          	movff	tablat,??_TCP_FiniteStateMachine+5
 16874  002346  D00C               	bra	u12400
 16875  002348                     u12407:
 16876  002348  CFF6 FFE9          	movff	tblptrl,fsr0l
 16877  00234C  CFF7 FFEA          	movff	tblptrh,fsr0h
 16878  002350  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 16879  002354  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 16880  002358  CFEE F0C7          	movff	postinc0,??_TCP_FiniteStateMachine+4
 16881  00235C  CFEE F0C8          	movff	postinc0,??_TCP_FiniteStateMachine+5
 16882  002360                     u12400:
 16883  002360  0101               	movlb	1	; () banked
 16884  002362  51C0               	movf	(_tcpHeader+4)& (0+255),w,b
 16885  002364  0100               	movlb	0	; () banked
 16886  002366  19C5               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 16887  002368  E10F               	bnz	u12411
 16888  00236A  0101               	movlb	1	; () banked
 16889  00236C  51C1               	movf	(_tcpHeader+5)& (0+255),w,b
 16890  00236E  0100               	movlb	0	; () banked
 16891  002370  19C6               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 16892  002372  E10A               	bnz	u12411
 16893  002374  0101               	movlb	1	; () banked
 16894  002376  51C2               	movf	(_tcpHeader+6)& (0+255),w,b
 16895  002378  0100               	movlb	0	; () banked
 16896  00237A  19C7               	xorwf	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 16897  00237C  E105               	bnz	u12411
 16898  00237E  0101               	movlb	1	; () banked
 16899  002380  51C3               	movf	(_tcpHeader+7)& (0+255),w,b
 16900  002382  0100               	movlb	0	; () banked
 16901  002384  19C8               	xorwf	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 16902  002386  A4D8               	btfss	status,2,c
 16903  002388                     u12411:
 16904  002388  EFDA  F01C         	goto	l8821
 16905                           
 16906                           ; BSR set to: 0
 16907                           ;tcpv4.c: 821: {
 16908                           ;tcpv4.c: 823: if ((currentTCB->localSeqno + 1) == tcpHeader.ackNumber)
 16909  00238C  0E10               	movlw	16
 16910  00238E  25FE               	addwf	_currentTCB& (0+255),w,b
 16911  002390  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 16912  002392  0E00               	movlw	0
 16913  002394  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16914  002396  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16915  002398  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 16916  00239C  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 16917  0023A0  0E00               	movlw	low (__smallconst shr (0+16))
 16918  0023A2  6EF8               	movwf	tblptru,c
 16919  0023A4  0E0F               	movlw	(high __ramtop+-1)
 16920  0023A6  64F7               	cpfsgt	tblptrh,c
 16921  0023A8  D00D               	bra	u12427
 16922  0023AA  0009               	tblrd		*+
 16923  0023AC  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 16924  0023B0  0009               	tblrd		*+
 16925  0023B2  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 16926  0023B6  0009               	tblrd		*+
 16927  0023B8  CFF5 F0C7          	movff	tablat,??_TCP_FiniteStateMachine+4
 16928  0023BC  0009               	tblrd		*+
 16929  0023BE  CFF5 F0C8          	movff	tablat,??_TCP_FiniteStateMachine+5
 16930  0023C2  D00C               	bra	u12420
 16931  0023C4                     u12427:
 16932  0023C4  CFF6 FFE9          	movff	tblptrl,fsr0l
 16933  0023C8  CFF7 FFEA          	movff	tblptrh,fsr0h
 16934  0023CC  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 16935  0023D0  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 16936  0023D4  CFEE F0C7          	movff	postinc0,??_TCP_FiniteStateMachine+4
 16937  0023D8  CFEE F0C8          	movff	postinc0,??_TCP_FiniteStateMachine+5
 16938  0023DC                     u12420:
 16939  0023DC  0E01               	movlw	1
 16940  0023DE  0100               	movlb	0	; () banked
 16941  0023E0  25C5               	addwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 16942  0023E2  6FC9               	movwf	(??_TCP_FiniteStateMachine+6)& (0+255),b
 16943  0023E4  0E00               	movlw	0
 16944  0023E6  21C6               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 16945  0023E8  6FCA               	movwf	(??_TCP_FiniteStateMachine+7)& (0+255),b
 16946  0023EA  0E00               	movlw	0
 16947  0023EC  21C7               	addwfc	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 16948  0023EE  6FCB               	movwf	(??_TCP_FiniteStateMachine+8)& (0+255),b
 16949  0023F0  0E00               	movlw	0
 16950  0023F2  21C8               	addwfc	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 16951  0023F4  6FCC               	movwf	(??_TCP_FiniteStateMachine+9)& (0+255),b
 16952  0023F6  0101               	movlb	1	; () banked
 16953  0023F8  51C4               	movf	(_tcpHeader+8)& (0+255),w,b
 16954  0023FA  0100               	movlb	0	; () banked
 16955  0023FC  19C9               	xorwf	(??_TCP_FiniteStateMachine+6)& (0+255),w,b
 16956  0023FE  E10F               	bnz	u12431
 16957  002400  0101               	movlb	1	; () banked
 16958  002402  51C5               	movf	(_tcpHeader+9)& (0+255),w,b
 16959  002404  0100               	movlb	0	; () banked
 16960  002406  19CA               	xorwf	(??_TCP_FiniteStateMachine+7)& (0+255),w,b
 16961  002408  E10A               	bnz	u12431
 16962  00240A  0101               	movlb	1	; () banked
 16963  00240C  51C6               	movf	(_tcpHeader+10)& (0+255),w,b
 16964  00240E  0100               	movlb	0	; () banked
 16965  002410  19CB               	xorwf	(??_TCP_FiniteStateMachine+8)& (0+255),w,b
 16966  002412  E105               	bnz	u12431
 16967  002414  0101               	movlb	1	; () banked
 16968  002416  51C7               	movf	(_tcpHeader+11)& (0+255),w,b
 16969  002418  0100               	movlb	0	; () banked
 16970  00241A  19CC               	xorwf	(??_TCP_FiniteStateMachine+9)& (0+255),w,b
 16971  00241C  A4D8               	btfss	status,2,c
 16972  00241E                     u12431:
 16973  00241E  EFDA  F01C         	goto	l8821
 16974                           
 16975                           ; BSR set to: 0
 16976                           ;tcpv4.c: 824: {
 16977                           ;tcpv4.c: 825: currentTCB->localSeqno = currentTCB->localSeqno + 1;
 16978  002422  0E10               	movlw	16
 16979  002424  25FE               	addwf	_currentTCB& (0+255),w,b
 16980  002426  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 16981  002428  0E00               	movlw	0
 16982  00242A  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16983  00242C  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16984  00242E  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 16985  002432  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 16986  002436  0E00               	movlw	low (__smallconst shr (0+16))
 16987  002438  6EF8               	movwf	tblptru,c
 16988  00243A  0E0F               	movlw	(high __ramtop+-1)
 16989  00243C  64F7               	cpfsgt	tblptrh,c
 16990  00243E  D00D               	bra	u12447
 16991  002440  0009               	tblrd		*+
 16992  002442  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 16993  002446  0009               	tblrd		*+
 16994  002448  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 16995  00244C  0009               	tblrd		*+
 16996  00244E  CFF5 F0C7          	movff	tablat,??_TCP_FiniteStateMachine+4
 16997  002452  0009               	tblrd		*+
 16998  002454  CFF5 F0C8          	movff	tablat,??_TCP_FiniteStateMachine+5
 16999  002458  D00C               	bra	u12440
 17000  00245A                     u12447:
 17001  00245A  CFF6 FFE9          	movff	tblptrl,fsr0l
 17002  00245E  CFF7 FFEA          	movff	tblptrh,fsr0h
 17003  002462  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 17004  002466  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 17005  00246A  CFEE F0C7          	movff	postinc0,??_TCP_FiniteStateMachine+4
 17006  00246E  CFEE F0C8          	movff	postinc0,??_TCP_FiniteStateMachine+5
 17007  002472                     u12440:
 17008  002472  0E01               	movlw	1
 17009  002474  0100               	movlb	0	; () banked
 17010  002476  25C5               	addwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 17011  002478  6FC9               	movwf	(??_TCP_FiniteStateMachine+6)& (0+255),b
 17012  00247A  0E00               	movlw	0
 17013  00247C  21C6               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 17014  00247E  6FCA               	movwf	(??_TCP_FiniteStateMachine+7)& (0+255),b
 17015  002480  0E00               	movlw	0
 17016  002482  21C7               	addwfc	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 17017  002484  6FCB               	movwf	(??_TCP_FiniteStateMachine+8)& (0+255),b
 17018  002486  0E00               	movlw	0
 17019  002488  21C8               	addwfc	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 17020  00248A  6FCC               	movwf	(??_TCP_FiniteStateMachine+9)& (0+255),b
 17021  00248C  0E10               	movlw	16
 17022  00248E  25FE               	addwf	_currentTCB& (0+255),w,b
 17023  002490  6FCD               	movwf	(??_TCP_FiniteStateMachine+10)& (0+255),b
 17024  002492  0E00               	movlw	0
 17025  002494  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17026  002496  6FCE               	movwf	(??_TCP_FiniteStateMachine+11)& (0+255),b
 17027  002498  C0CD  FFF6         	movff	??_TCP_FiniteStateMachine+10,tblptrl
 17028  00249C  C0CE  FFF7         	movff	??_TCP_FiniteStateMachine+11,tblptrh
 17029  0024A0  0E00               	movlw	low (__smallconst shr (0+16))
 17030  0024A2  6EF8               	movwf	tblptru,c
 17031  0024A4  0E0F               	movlw	(high __ramtop+-1)
 17032  0024A6  64F7               	cpfsgt	tblptrh,c
 17033  0024A8  D00D               	bra	u12457
 17034  0024AA  C0C9  FFF5         	movff	??_TCP_FiniteStateMachine+6,tablat
 17035  0024AE  000D               	tblwt		*+
 17036  0024B0  C0CA  FFF5         	movff	??_TCP_FiniteStateMachine+7,tablat
 17037  0024B4  000D               	tblwt		*+
 17038  0024B6  C0CB  FFF5         	movff	??_TCP_FiniteStateMachine+8,tablat
 17039  0024BA  000D               	tblwt		*+
 17040  0024BC  C0CC  FFF5         	movff	??_TCP_FiniteStateMachine+9,tablat
 17041  0024C0  000C               	tblwt		*
 17042  0024C2  D00C               	bra	u12450
 17043  0024C4                     u12457:
 17044  0024C4  CFF6 FFE9          	movff	tblptrl,fsr0l
 17045  0024C8  CFF7 FFEA          	movff	tblptrh,fsr0h
 17046  0024CC  C0C9  FFEE         	movff	??_TCP_FiniteStateMachine+6,postinc0
 17047  0024D0  C0CA  FFEE         	movff	??_TCP_FiniteStateMachine+7,postinc0
 17048  0024D4  C0CB  FFEE         	movff	??_TCP_FiniteStateMachine+8,postinc0
 17049  0024D8  C0CC  FFEF         	movff	??_TCP_FiniteStateMachine+9,indf0
 17050  0024DC                     u12450:
 17051                           
 17052                           ;tcpv4.c: 827: currentTCB->timeout = 0;
 17053  0024DC  0E30               	movlw	48
 17054  0024DE  0100               	movlb	0	; () banked
 17055  0024E0  25FE               	addwf	_currentTCB& (0+255),w,b
 17056  0024E2  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17057  0024E4  0E00               	movlw	0
 17058  0024E6  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17059  0024E8  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17060  0024EA  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17061  0024EE  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17062  0024F2  0E00               	movlw	low (__smallconst shr (0+16))
 17063  0024F4  6EF8               	movwf	tblptru,c
 17064  0024F6  0E0F               	movlw	(high __ramtop+-1)
 17065  0024F8  64F7               	cpfsgt	tblptrh,c
 17066  0024FA  D005               	bra	u12467
 17067  0024FC  6AF5               	clrf	tablat,c
 17068  0024FE  000D               	tblwt		*+
 17069  002500  6AF5               	clrf	tablat,c
 17070  002502  000C               	tblwt		*
 17071  002504  D006               	bra	u12460
 17072  002506                     u12467:
 17073  002506  CFF6 FFE9          	movff	tblptrl,fsr0l
 17074  00250A  CFF7 FFEA          	movff	tblptrh,fsr0h
 17075  00250E  6AEE               	clrf	postinc0,c
 17076  002510  6AEF               	clrf	indf0,c
 17077  002512                     u12460:
 17078                           
 17079                           ;tcpv4.c: 829: nextState = ESTABLISHED;
 17080  002512  0E04               	movlw	4
 17081  002514  0100               	movlb	0	; () banked
 17082  002516  6FD3               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 17083                           
 17084                           ; BSR set to: 0
 17085                           ;tcpv4.c: 830: currentTCB->socketState = SOCKET_CONNECTED;
 17086  002518  0E36               	movlw	54
 17087  00251A  25FE               	addwf	_currentTCB& (0+255),w,b
 17088  00251C  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17089  00251E  0E00               	movlw	0
 17090  002520  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17091  002522  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17092  002524  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17093  002528  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17094  00252C  0E00               	movlw	low (__smallconst shr (0+16))
 17095  00252E  6EF8               	movwf	tblptru,c
 17096  002530  0E0F               	movlw	(high __ramtop+-1)
 17097  002532  64F7               	cpfsgt	tblptrh,c
 17098  002534  D004               	bra	u12477
 17099  002536  0E03               	movlw	3
 17100  002538  6EF5               	movwf	tablat,c
 17101  00253A  000C               	tblwt		*
 17102  00253C  D006               	bra	u12470
 17103  00253E                     u12477:
 17104  00253E  CFF6 FFE9          	movff	tblptrl,fsr0l
 17105  002542  CFF7 FFEA          	movff	tblptrh,fsr0h
 17106  002546  0E03               	movlw	3
 17107  002548  6EEF               	movwf	indf0,c
 17108  00254A                     u12470:
 17109  00254A  EFDA  F01C         	goto	l8821
 17110  00254E                     l8623:
 17111                           
 17112                           ; BSR set to: 0
 17113                           ;tcpv4.c: 836: ;
 17114                           ;tcpv4.c: 838: currentTCB->timeout = 0;
 17115  00254E  0E30               	movlw	48
 17116  002550  25FE               	addwf	_currentTCB& (0+255),w,b
 17117  002552  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17118  002554  0E00               	movlw	0
 17119  002556  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17120  002558  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17121  00255A  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17122  00255E  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17123  002562  0E00               	movlw	low (__smallconst shr (0+16))
 17124  002564  6EF8               	movwf	tblptru,c
 17125  002566  0E0F               	movlw	(high __ramtop+-1)
 17126  002568  64F7               	cpfsgt	tblptrh,c
 17127  00256A  D005               	bra	u12487
 17128  00256C  6AF5               	clrf	tablat,c
 17129  00256E  000D               	tblwt		*+
 17130  002570  6AF5               	clrf	tablat,c
 17131  002572  000C               	tblwt		*
 17132  002574  D006               	bra	u12480
 17133  002576                     u12487:
 17134  002576  CFF6 FFE9          	movff	tblptrl,fsr0l
 17135  00257A  CFF7 FFEA          	movff	tblptrh,fsr0h
 17136  00257E  6AEE               	clrf	postinc0,c
 17137  002580  6AEF               	clrf	indf0,c
 17138  002582                     u12480:
 17139                           
 17140                           ;tcpv4.c: 840: currentTCB->flags = 0x01U;
 17141  002582  0E35               	movlw	53
 17142  002584  0100               	movlb	0	; () banked
 17143  002586  25FE               	addwf	_currentTCB& (0+255),w,b
 17144  002588  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17145  00258A  0E00               	movlw	0
 17146  00258C  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17147  00258E  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17148  002590  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17149  002594  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17150  002598  0E00               	movlw	low (__smallconst shr (0+16))
 17151  00259A  6EF8               	movwf	tblptru,c
 17152  00259C  0E0F               	movlw	(high __ramtop+-1)
 17153  00259E  64F7               	cpfsgt	tblptrh,c
 17154  0025A0  D004               	bra	u12497
 17155  0025A2  0E01               	movlw	1
 17156  0025A4  6EF5               	movwf	tablat,c
 17157  0025A6  000C               	tblwt		*
 17158  0025A8  D006               	bra	u12490
 17159  0025AA                     u12497:
 17160  0025AA  CFF6 FFE9          	movff	tblptrl,fsr0l
 17161  0025AE  CFF7 FFEA          	movff	tblptrh,fsr0h
 17162  0025B2  0E01               	movlw	1
 17163  0025B4  6EEF               	movwf	indf0,c
 17164  0025B6                     u12490:
 17165                           
 17166                           ;tcpv4.c: 841: currentTCB->timeout = ((unsigned long)1*2);
 17167  0025B6  0E30               	movlw	48
 17168  0025B8  0100               	movlb	0	; () banked
 17169  0025BA  25FE               	addwf	_currentTCB& (0+255),w,b
 17170  0025BC  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17171  0025BE  0E00               	movlw	0
 17172  0025C0  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17173  0025C2  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17174  0025C4  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17175  0025C8  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17176  0025CC  0E00               	movlw	low (__smallconst shr (0+16))
 17177  0025CE  6EF8               	movwf	tblptru,c
 17178  0025D0  0E0F               	movlw	(high __ramtop+-1)
 17179  0025D2  64F7               	cpfsgt	tblptrh,c
 17180  0025D4  D006               	bra	u12507
 17181  0025D6  0E02               	movlw	2
 17182  0025D8  6EF5               	movwf	tablat,c
 17183  0025DA  000D               	tblwt		*+
 17184  0025DC  6AF5               	clrf	tablat,c
 17185  0025DE  000C               	tblwt		*
 17186  0025E0  D007               	bra	u12500
 17187  0025E2                     u12507:
 17188  0025E2  CFF6 FFE9          	movff	tblptrl,fsr0l
 17189  0025E6  CFF7 FFEA          	movff	tblptrh,fsr0h
 17190  0025EA  0E02               	movlw	2
 17191  0025EC  6EEE               	movwf	postinc0,c
 17192  0025EE  6AEF               	clrf	indf0,c
 17193  0025F0                     u12500:
 17194                           
 17195                           ;tcpv4.c: 842: currentTCB->timeoutReloadValue = ((unsigned long)1*2);
 17196  0025F0  0E32               	movlw	50
 17197  0025F2  0100               	movlb	0	; () banked
 17198  0025F4  25FE               	addwf	_currentTCB& (0+255),w,b
 17199  0025F6  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17200  0025F8  0E00               	movlw	0
 17201  0025FA  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17202  0025FC  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17203  0025FE  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17204  002602  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17205  002606  0E00               	movlw	low (__smallconst shr (0+16))
 17206  002608  6EF8               	movwf	tblptru,c
 17207  00260A  0E0F               	movlw	(high __ramtop+-1)
 17208  00260C  64F7               	cpfsgt	tblptrh,c
 17209  00260E  D006               	bra	u12517
 17210  002610  0E02               	movlw	2
 17211  002612  6EF5               	movwf	tablat,c
 17212  002614  000D               	tblwt		*+
 17213  002616  6AF5               	clrf	tablat,c
 17214  002618  000C               	tblwt		*
 17215  00261A  D007               	bra	u12510
 17216  00261C                     u12517:
 17217  00261C  CFF6 FFE9          	movff	tblptrl,fsr0l
 17218  002620  CFF7 FFEA          	movff	tblptrh,fsr0h
 17219  002624  0E02               	movlw	2
 17220  002626  6EEE               	movwf	postinc0,c
 17221  002628  6AEF               	clrf	indf0,c
 17222  00262A                     u12510:
 17223                           
 17224                           ;tcpv4.c: 843: currentTCB->timeoutsCount = (5u);
 17225  00262A  0E34               	movlw	52
 17226  00262C  0100               	movlb	0	; () banked
 17227  00262E  25FE               	addwf	_currentTCB& (0+255),w,b
 17228  002630  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17229  002632  0E00               	movlw	0
 17230  002634  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17231  002636  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17232  002638  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17233  00263C  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17234  002640  0E00               	movlw	low (__smallconst shr (0+16))
 17235  002642  6EF8               	movwf	tblptru,c
 17236  002644  0E0F               	movlw	(high __ramtop+-1)
 17237  002646  64F7               	cpfsgt	tblptrh,c
 17238  002648  D004               	bra	u12527
 17239  00264A  0E05               	movlw	5
 17240  00264C  6EF5               	movwf	tablat,c
 17241  00264E  000C               	tblwt		*
 17242  002650  D006               	bra	u12520
 17243  002652                     u12527:
 17244  002652  CFF6 FFE9          	movff	tblptrl,fsr0l
 17245  002656  CFF7 FFEA          	movff	tblptrh,fsr0h
 17246  00265A  0E05               	movlw	5
 17247  00265C  6EEF               	movwf	indf0,c
 17248  00265E                     u12520:
 17249  00265E                     l8625:
 17250                           
 17251                           ;tcpv4.c: 845: nextState = FIN_WAIT_1;
 17252  00265E  0E05               	movlw	5
 17253  002660  0100               	movlb	0	; () banked
 17254  002662  6FD3               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 17255  002664                     l8627:
 17256                           
 17257                           ;tcpv4.c: 846: TCP_Snd(currentTCB);
 17258  002664  C0FE  F058         	movff	_currentTCB,TCP_Snd@tcbPtr
 17259  002668  C0FF  F059         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 17260  00266C  EC11  F01D         	call	_TCP_Snd	;wreg free
 17261                           
 17262                           ;tcpv4.c: 847: break;
 17263  002670  EFDA  F01C         	goto	l8821
 17264  002674                     l8629:
 17265                           
 17266                           ; BSR set to: 0
 17267                           ;tcpv4.c: 849: case RCV_RST:
 17268                           ;tcpv4.c: 851: ;
 17269                           ;tcpv4.c: 853: if (currentTCB->localPort == tcpHeader.destPort)
 17270  002674  C0FE  FFF6         	movff	_currentTCB,tblptrl
 17271  002678  C0FF  FFF7         	movff	_currentTCB+1,tblptrh
 17272  00267C  0E00               	movlw	low (__smallconst shr (0+16))
 17273  00267E  6EF8               	movwf	tblptru,c
 17274  002680  0E0F               	movlw	(high __ramtop+-1)
 17275  002682  64F7               	cpfsgt	tblptrh,c
 17276  002684  D007               	bra	u12537
 17277  002686  0009               	tblrd		*+
 17278  002688  CFF5 F0C3          	movff	tablat,??_TCP_FiniteStateMachine
 17279  00268C  0009               	tblrd		*+
 17280  00268E  CFF5 F0C4          	movff	tablat,??_TCP_FiniteStateMachine+1
 17281  002692  D008               	bra	u12530
 17282  002694                     u12537:
 17283  002694  CFF6 FFE9          	movff	tblptrl,fsr0l
 17284  002698  CFF7 FFEA          	movff	tblptrh,fsr0h
 17285  00269C  CFEE F0C3          	movff	postinc0,??_TCP_FiniteStateMachine
 17286  0026A0  CFEE F0C4          	movff	postinc0,??_TCP_FiniteStateMachine+1
 17287  0026A4                     u12530:
 17288  0026A4  0101               	movlb	1	; () banked
 17289  0026A6  51BE               	movf	(_tcpHeader+2)& (0+255),w,b
 17290  0026A8  0100               	movlb	0	; () banked
 17291  0026AA  19C3               	xorwf	??_TCP_FiniteStateMachine& (0+255),w,b
 17292  0026AC  E105               	bnz	u12541
 17293  0026AE  0101               	movlb	1	; () banked
 17294  0026B0  51BF               	movf	(_tcpHeader+3)& (0+255),w,b
 17295  0026B2  0100               	movlb	0	; () banked
 17296  0026B4  19C4               	xorwf	(??_TCP_FiniteStateMachine+1)& (0+255),w,b
 17297  0026B6  A4D8               	btfss	status,2,c
 17298  0026B8                     u12541:
 17299  0026B8  EFDA  F01C         	goto	l8821
 17300                           
 17301                           ; BSR set to: 0
 17302                           ;tcpv4.c: 854: {
 17303                           ;tcpv4.c: 855: if (currentTCB->remoteAck == tcpHeader.sequenceNumber)
 17304  0026BC  0E0C               	movlw	12
 17305  0026BE  25FE               	addwf	_currentTCB& (0+255),w,b
 17306  0026C0  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17307  0026C2  0E00               	movlw	0
 17308  0026C4  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17309  0026C6  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17310  0026C8  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17311  0026CC  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17312  0026D0  0E00               	movlw	low (__smallconst shr (0+16))
 17313  0026D2  6EF8               	movwf	tblptru,c
 17314  0026D4  0E0F               	movlw	(high __ramtop+-1)
 17315  0026D6  64F7               	cpfsgt	tblptrh,c
 17316  0026D8  D00D               	bra	u12557
 17317  0026DA  0009               	tblrd		*+
 17318  0026DC  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 17319  0026E0  0009               	tblrd		*+
 17320  0026E2  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 17321  0026E6  0009               	tblrd		*+
 17322  0026E8  CFF5 F0C7          	movff	tablat,??_TCP_FiniteStateMachine+4
 17323  0026EC  0009               	tblrd		*+
 17324  0026EE  CFF5 F0C8          	movff	tablat,??_TCP_FiniteStateMachine+5
 17325  0026F2  D00C               	bra	u12550
 17326  0026F4                     u12557:
 17327  0026F4  CFF6 FFE9          	movff	tblptrl,fsr0l
 17328  0026F8  CFF7 FFEA          	movff	tblptrh,fsr0h
 17329  0026FC  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 17330  002700  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 17331  002704  CFEE F0C7          	movff	postinc0,??_TCP_FiniteStateMachine+4
 17332  002708  CFEE F0C8          	movff	postinc0,??_TCP_FiniteStateMachine+5
 17333  00270C                     u12550:
 17334  00270C  0101               	movlb	1	; () banked
 17335  00270E  51C0               	movf	(_tcpHeader+4)& (0+255),w,b
 17336  002710  0100               	movlb	0	; () banked
 17337  002712  19C5               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 17338  002714  E10F               	bnz	u12561
 17339  002716  0101               	movlb	1	; () banked
 17340  002718  51C1               	movf	(_tcpHeader+5)& (0+255),w,b
 17341  00271A  0100               	movlb	0	; () banked
 17342  00271C  19C6               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 17343  00271E  E10A               	bnz	u12561
 17344  002720  0101               	movlb	1	; () banked
 17345  002722  51C2               	movf	(_tcpHeader+6)& (0+255),w,b
 17346  002724  0100               	movlb	0	; () banked
 17347  002726  19C7               	xorwf	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 17348  002728  E105               	bnz	u12561
 17349  00272A  0101               	movlb	1	; () banked
 17350  00272C  51C3               	movf	(_tcpHeader+7)& (0+255),w,b
 17351  00272E  0100               	movlb	0	; () banked
 17352  002730  19C8               	xorwf	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 17353  002732  A4D8               	btfss	status,2,c
 17354  002734                     u12561:
 17355  002734  EFDA  F01C         	goto	l8821
 17356                           
 17357                           ; BSR set to: 0
 17358                           ;tcpv4.c: 856: {
 17359                           ;tcpv4.c: 857: ;
 17360                           ;tcpv4.c: 858: currentTCB->destIP = 0;
 17361  002738  0E02               	movlw	2
 17362  00273A  25FE               	addwf	_currentTCB& (0+255),w,b
 17363  00273C  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17364  00273E  0E00               	movlw	0
 17365  002740  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17366  002742  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17367  002744  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17368  002748  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17369  00274C  0E00               	movlw	low (__smallconst shr (0+16))
 17370  00274E  6EF8               	movwf	tblptru,c
 17371  002750  0E0F               	movlw	(high __ramtop+-1)
 17372  002752  64F7               	cpfsgt	tblptrh,c
 17373  002754  D009               	bra	u12577
 17374  002756  6AF5               	clrf	tablat,c
 17375  002758  000D               	tblwt		*+
 17376  00275A  6AF5               	clrf	tablat,c
 17377  00275C  000D               	tblwt		*+
 17378  00275E  6AF5               	clrf	tablat,c
 17379  002760  000D               	tblwt		*+
 17380  002762  6AF5               	clrf	tablat,c
 17381  002764  000C               	tblwt		*
 17382  002766  D008               	bra	u12570
 17383  002768                     u12577:
 17384  002768  CFF6 FFE9          	movff	tblptrl,fsr0l
 17385  00276C  CFF7 FFEA          	movff	tblptrh,fsr0h
 17386  002770  6AEE               	clrf	postinc0,c
 17387  002772  6AEE               	clrf	postinc0,c
 17388  002774  6AEE               	clrf	postinc0,c
 17389  002776  6AEF               	clrf	indf0,c
 17390  002778                     u12570:
 17391                           
 17392                           ;tcpv4.c: 859: currentTCB->destPort = 0;
 17393  002778  0E06               	movlw	6
 17394  00277A  0100               	movlb	0	; () banked
 17395  00277C  25FE               	addwf	_currentTCB& (0+255),w,b
 17396  00277E  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17397  002780  0E00               	movlw	0
 17398  002782  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17399  002784  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17400  002786  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17401  00278A  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17402  00278E  0E00               	movlw	low (__smallconst shr (0+16))
 17403  002790  6EF8               	movwf	tblptru,c
 17404  002792  0E0F               	movlw	(high __ramtop+-1)
 17405  002794  64F7               	cpfsgt	tblptrh,c
 17406  002796  D005               	bra	u12587
 17407  002798  6AF5               	clrf	tablat,c
 17408  00279A  000D               	tblwt		*+
 17409  00279C  6AF5               	clrf	tablat,c
 17410  00279E  000C               	tblwt		*
 17411  0027A0  D006               	bra	u12580
 17412  0027A2                     u12587:
 17413  0027A2  CFF6 FFE9          	movff	tblptrl,fsr0l
 17414  0027A6  CFF7 FFEA          	movff	tblptrh,fsr0h
 17415  0027AA  6AEE               	clrf	postinc0,c
 17416  0027AC  6AEF               	clrf	indf0,c
 17417  0027AE                     u12580:
 17418                           
 17419                           ;tcpv4.c: 860: currentTCB->localSeqno = 0;
 17420  0027AE  0E10               	movlw	16
 17421  0027B0  0100               	movlb	0	; () banked
 17422  0027B2  25FE               	addwf	_currentTCB& (0+255),w,b
 17423  0027B4  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17424  0027B6  0E00               	movlw	0
 17425  0027B8  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17426  0027BA  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17427  0027BC  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17428  0027C0  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17429  0027C4  0E00               	movlw	low (__smallconst shr (0+16))
 17430  0027C6  6EF8               	movwf	tblptru,c
 17431  0027C8  0E0F               	movlw	(high __ramtop+-1)
 17432  0027CA  64F7               	cpfsgt	tblptrh,c
 17433  0027CC  D009               	bra	u12597
 17434  0027CE  6AF5               	clrf	tablat,c
 17435  0027D0  000D               	tblwt		*+
 17436  0027D2  6AF5               	clrf	tablat,c
 17437  0027D4  000D               	tblwt		*+
 17438  0027D6  6AF5               	clrf	tablat,c
 17439  0027D8  000D               	tblwt		*+
 17440  0027DA  6AF5               	clrf	tablat,c
 17441  0027DC  000C               	tblwt		*
 17442  0027DE  D008               	bra	u12590
 17443  0027E0                     u12597:
 17444  0027E0  CFF6 FFE9          	movff	tblptrl,fsr0l
 17445  0027E4  CFF7 FFEA          	movff	tblptrh,fsr0h
 17446  0027E8  6AEE               	clrf	postinc0,c
 17447  0027EA  6AEE               	clrf	postinc0,c
 17448  0027EC  6AEE               	clrf	postinc0,c
 17449  0027EE  6AEF               	clrf	indf0,c
 17450  0027F0                     u12590:
 17451                           
 17452                           ;tcpv4.c: 861: currentTCB->localLastAck = 0;
 17453  0027F0  0E14               	movlw	20
 17454  0027F2  0100               	movlb	0	; () banked
 17455  0027F4  25FE               	addwf	_currentTCB& (0+255),w,b
 17456  0027F6  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17457  0027F8  0E00               	movlw	0
 17458  0027FA  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17459  0027FC  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17460  0027FE  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17461  002802  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17462  002806  0E00               	movlw	low (__smallconst shr (0+16))
 17463  002808  6EF8               	movwf	tblptru,c
 17464  00280A  0E0F               	movlw	(high __ramtop+-1)
 17465  00280C  64F7               	cpfsgt	tblptrh,c
 17466  00280E  D009               	bra	u12607
 17467  002810  6AF5               	clrf	tablat,c
 17468  002812  000D               	tblwt		*+
 17469  002814  6AF5               	clrf	tablat,c
 17470  002816  000D               	tblwt		*+
 17471  002818  6AF5               	clrf	tablat,c
 17472  00281A  000D               	tblwt		*+
 17473  00281C  6AF5               	clrf	tablat,c
 17474  00281E  000C               	tblwt		*
 17475  002820  D008               	bra	u12600
 17476  002822                     u12607:
 17477  002822  CFF6 FFE9          	movff	tblptrl,fsr0l
 17478  002826  CFF7 FFEA          	movff	tblptrh,fsr0h
 17479  00282A  6AEE               	clrf	postinc0,c
 17480  00282C  6AEE               	clrf	postinc0,c
 17481  00282E  6AEE               	clrf	postinc0,c
 17482  002830  6AEF               	clrf	indf0,c
 17483  002832                     u12600:
 17484                           
 17485                           ;tcpv4.c: 862: currentTCB->remoteSeqno = 0;
 17486  002832  0E08               	movlw	8
 17487  002834  0100               	movlb	0	; () banked
 17488  002836  25FE               	addwf	_currentTCB& (0+255),w,b
 17489  002838  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17490  00283A  0E00               	movlw	0
 17491  00283C  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17492  00283E  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17493  002840  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17494  002844  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17495  002848  0E00               	movlw	low (__smallconst shr (0+16))
 17496  00284A  6EF8               	movwf	tblptru,c
 17497  00284C  0E0F               	movlw	(high __ramtop+-1)
 17498  00284E  64F7               	cpfsgt	tblptrh,c
 17499  002850  D009               	bra	u12617
 17500  002852  6AF5               	clrf	tablat,c
 17501  002854  000D               	tblwt		*+
 17502  002856  6AF5               	clrf	tablat,c
 17503  002858  000D               	tblwt		*+
 17504  00285A  6AF5               	clrf	tablat,c
 17505  00285C  000D               	tblwt		*+
 17506  00285E  6AF5               	clrf	tablat,c
 17507  002860  000C               	tblwt		*
 17508  002862  D008               	bra	u12610
 17509  002864                     u12617:
 17510  002864  CFF6 FFE9          	movff	tblptrl,fsr0l
 17511  002868  CFF7 FFEA          	movff	tblptrh,fsr0h
 17512  00286C  6AEE               	clrf	postinc0,c
 17513  00286E  6AEE               	clrf	postinc0,c
 17514  002870  6AEE               	clrf	postinc0,c
 17515  002872  6AEF               	clrf	indf0,c
 17516  002874                     u12610:
 17517                           
 17518                           ;tcpv4.c: 863: currentTCB->remoteAck = 0;
 17519  002874  0E0C               	movlw	12
 17520  002876  0100               	movlb	0	; () banked
 17521  002878  25FE               	addwf	_currentTCB& (0+255),w,b
 17522  00287A  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17523  00287C  0E00               	movlw	0
 17524  00287E  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17525  002880  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17526  002882  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17527  002886  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17528  00288A  0E00               	movlw	low (__smallconst shr (0+16))
 17529  00288C  6EF8               	movwf	tblptru,c
 17530  00288E  0E0F               	movlw	(high __ramtop+-1)
 17531  002890  64F7               	cpfsgt	tblptrh,c
 17532  002892  D009               	bra	u12627
 17533  002894  6AF5               	clrf	tablat,c
 17534  002896  000D               	tblwt		*+
 17535  002898  6AF5               	clrf	tablat,c
 17536  00289A  000D               	tblwt		*+
 17537  00289C  6AF5               	clrf	tablat,c
 17538  00289E  000D               	tblwt		*+
 17539  0028A0  6AF5               	clrf	tablat,c
 17540  0028A2  000C               	tblwt		*
 17541  0028A4  D008               	bra	u12620
 17542  0028A6                     u12627:
 17543  0028A6  CFF6 FFE9          	movff	tblptrl,fsr0l
 17544  0028AA  CFF7 FFEA          	movff	tblptrh,fsr0h
 17545  0028AE  6AEE               	clrf	postinc0,c
 17546  0028B0  6AEE               	clrf	postinc0,c
 17547  0028B2  6AEE               	clrf	postinc0,c
 17548  0028B4  6AEF               	clrf	indf0,c
 17549  0028B6                     u12620:
 17550                           
 17551                           ;tcpv4.c: 864: currentTCB->remoteWnd = 0;
 17552  0028B6  0E18               	movlw	24
 17553  0028B8  0100               	movlb	0	; () banked
 17554  0028BA  25FE               	addwf	_currentTCB& (0+255),w,b
 17555  0028BC  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17556  0028BE  0E00               	movlw	0
 17557  0028C0  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17558  0028C2  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17559  0028C4  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17560  0028C8  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17561  0028CC  0E00               	movlw	low (__smallconst shr (0+16))
 17562  0028CE  6EF8               	movwf	tblptru,c
 17563  0028D0  0E0F               	movlw	(high __ramtop+-1)
 17564  0028D2  64F7               	cpfsgt	tblptrh,c
 17565  0028D4  D005               	bra	u12637
 17566  0028D6  6AF5               	clrf	tablat,c
 17567  0028D8  000D               	tblwt		*+
 17568  0028DA  6AF5               	clrf	tablat,c
 17569  0028DC  000C               	tblwt		*
 17570  0028DE  D006               	bra	u12630
 17571  0028E0                     u12637:
 17572  0028E0  CFF6 FFE9          	movff	tblptrl,fsr0l
 17573  0028E4  CFF7 FFEA          	movff	tblptrh,fsr0h
 17574  0028E8  6AEE               	clrf	postinc0,c
 17575  0028EA  6AEF               	clrf	indf0,c
 17576  0028EC                     u12630:
 17577                           
 17578                           ;tcpv4.c: 865: currentTCB->mss = 0;
 17579  0028EC  0E1C               	movlw	28
 17580  0028EE  0100               	movlb	0	; () banked
 17581  0028F0  25FE               	addwf	_currentTCB& (0+255),w,b
 17582  0028F2  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17583  0028F4  0E00               	movlw	0
 17584  0028F6  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17585  0028F8  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17586  0028FA  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17587  0028FE  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17588  002902  0E00               	movlw	low (__smallconst shr (0+16))
 17589  002904  6EF8               	movwf	tblptru,c
 17590  002906  0E0F               	movlw	(high __ramtop+-1)
 17591  002908  64F7               	cpfsgt	tblptrh,c
 17592  00290A  D005               	bra	u12647
 17593  00290C  6AF5               	clrf	tablat,c
 17594  00290E  000D               	tblwt		*+
 17595  002910  6AF5               	clrf	tablat,c
 17596  002912  000C               	tblwt		*
 17597  002914  D006               	bra	u12640
 17598  002916                     u12647:
 17599  002916  CFF6 FFE9          	movff	tblptrl,fsr0l
 17600  00291A  CFF7 FFEA          	movff	tblptrh,fsr0h
 17601  00291E  6AEE               	clrf	postinc0,c
 17602  002920  6AEF               	clrf	indf0,c
 17603  002922                     u12640:
 17604  002922                     l8635:
 17605                           
 17606                           ;tcpv4.c: 867: nextState = LISTEN;
 17607  002922  0E01               	movlw	1
 17608  002924  0100               	movlb	0	; () banked
 17609  002926  EF97  F01A         	goto	L14
 17610  00292A                     l8637:
 17611                           
 17612                           ; BSR set to: 0
 17613                           ;tcpv4.c: 872: ;
 17614                           ;tcpv4.c: 873: if (currentTCB->timeoutsCount)
 17615  00292A  0E34               	movlw	52
 17616  00292C  25FE               	addwf	_currentTCB& (0+255),w,b
 17617  00292E  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17618  002930  0E00               	movlw	0
 17619  002932  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17620  002934  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17621  002936  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17622  00293A  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17623  00293E  0E00               	movlw	low (__smallconst shr (0+16))
 17624  002940  6EF8               	movwf	tblptru,c
 17625  002942  0E0F               	movlw	(high __ramtop+-1)
 17626  002944  64F7               	cpfsgt	tblptrh,c
 17627  002946  D003               	bra	u12657
 17628  002948  0008               	tblrd		*
 17629  00294A  50F5               	movf	tablat,w,c
 17630  00294C  D005               	bra	u12650
 17631  00294E                     u12657:
 17632  00294E  CFF6 FFE9          	movff	tblptrl,fsr0l
 17633  002952  CFF7 FFEA          	movff	tblptrh,fsr0h
 17634  002956  50EF               	movf	indf0,w,c
 17635  002958                     u12650:
 17636  002958  0900               	iorlw	0
 17637  00295A  E001 D683          	bnz	l8627
 17638                           
 17639                           ;tcpv4.c: 877: else
 17640                           ;tcpv4.c: 878: {
 17641                           ;tcpv4.c: 880: currentTCB->flags = 0x04U;
 17642  00295E  0E35               	movlw	53
 17643  002960  0100               	movlb	0	; () banked
 17644  002962  25FE               	addwf	_currentTCB& (0+255),w,b
 17645  002964  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17646  002966  0E00               	movlw	0
 17647  002968  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17648  00296A  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17649  00296C  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17650  002970  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17651  002974  0E00               	movlw	low (__smallconst shr (0+16))
 17652  002976  6EF8               	movwf	tblptru,c
 17653  002978  0E0F               	movlw	(high __ramtop+-1)
 17654  00297A  64F7               	cpfsgt	tblptrh,c
 17655  00297C  D004               	bra	u12677
 17656  00297E  0E04               	movlw	4
 17657  002980  6EF5               	movwf	tablat,c
 17658  002982  000C               	tblwt		*
 17659  002984  D006               	bra	u12670
 17660  002986                     u12677:
 17661  002986  CFF6 FFE9          	movff	tblptrl,fsr0l
 17662  00298A  CFF7 FFEA          	movff	tblptrh,fsr0h
 17663  00298E  0E04               	movlw	4
 17664  002990  6EEF               	movwf	indf0,c
 17665  002992                     u12670:
 17666                           
 17667                           ;tcpv4.c: 881: if(TCP_Snd(currentTCB))
 17668  002992  C0FE  F058         	movff	_currentTCB,TCP_Snd@tcbPtr
 17669  002996  C0FF  F059         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 17670  00299A  EC11  F01D         	call	_TCP_Snd	;wreg free
 17671  00299E  0900               	iorlw	0
 17672  0029A0  E102 EFDA  F01C    	bz	l8821
 17673                           
 17674                           ; BSR set to: 0
 17675                           ;tcpv4.c: 882: {
 17676                           ;tcpv4.c: 883: currentTCB->destIP = 0;
 17677  0029A6  0E02               	movlw	2
 17678  0029A8  25FE               	addwf	_currentTCB& (0+255),w,b
 17679  0029AA  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17680  0029AC  0E00               	movlw	0
 17681  0029AE  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17682  0029B0  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17683  0029B2  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17684  0029B6  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17685  0029BA  0E00               	movlw	low (__smallconst shr (0+16))
 17686  0029BC  6EF8               	movwf	tblptru,c
 17687  0029BE  0E0F               	movlw	(high __ramtop+-1)
 17688  0029C0  64F7               	cpfsgt	tblptrh,c
 17689  0029C2  D009               	bra	u12697
 17690  0029C4  6AF5               	clrf	tablat,c
 17691  0029C6  000D               	tblwt		*+
 17692  0029C8  6AF5               	clrf	tablat,c
 17693  0029CA  000D               	tblwt		*+
 17694  0029CC  6AF5               	clrf	tablat,c
 17695  0029CE  000D               	tblwt		*+
 17696  0029D0  6AF5               	clrf	tablat,c
 17697  0029D2  000C               	tblwt		*
 17698  0029D4  D008               	bra	u12690
 17699  0029D6                     u12697:
 17700  0029D6  CFF6 FFE9          	movff	tblptrl,fsr0l
 17701  0029DA  CFF7 FFEA          	movff	tblptrh,fsr0h
 17702  0029DE  6AEE               	clrf	postinc0,c
 17703  0029E0  6AEE               	clrf	postinc0,c
 17704  0029E2  6AEE               	clrf	postinc0,c
 17705  0029E4  6AEF               	clrf	indf0,c
 17706  0029E6                     u12690:
 17707                           
 17708                           ;tcpv4.c: 884: currentTCB->destPort = 0;
 17709  0029E6  0E06               	movlw	6
 17710  0029E8  0100               	movlb	0	; () banked
 17711  0029EA  25FE               	addwf	_currentTCB& (0+255),w,b
 17712  0029EC  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17713  0029EE  0E00               	movlw	0
 17714  0029F0  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17715  0029F2  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17716  0029F4  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17717  0029F8  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17718  0029FC  0E00               	movlw	low (__smallconst shr (0+16))
 17719  0029FE  6EF8               	movwf	tblptru,c
 17720  002A00  0E0F               	movlw	(high __ramtop+-1)
 17721  002A02  64F7               	cpfsgt	tblptrh,c
 17722  002A04  D005               	bra	u12707
 17723  002A06  6AF5               	clrf	tablat,c
 17724  002A08  000D               	tblwt		*+
 17725  002A0A  6AF5               	clrf	tablat,c
 17726  002A0C  000C               	tblwt		*
 17727  002A0E  D006               	bra	u12700
 17728  002A10                     u12707:
 17729  002A10  CFF6 FFE9          	movff	tblptrl,fsr0l
 17730  002A14  CFF7 FFEA          	movff	tblptrh,fsr0h
 17731  002A18  6AEE               	clrf	postinc0,c
 17732  002A1A  6AEF               	clrf	indf0,c
 17733  002A1C                     u12700:
 17734                           
 17735                           ;tcpv4.c: 885: currentTCB->localSeqno = 0;
 17736  002A1C  0E10               	movlw	16
 17737  002A1E  0100               	movlb	0	; () banked
 17738  002A20  25FE               	addwf	_currentTCB& (0+255),w,b
 17739  002A22  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17740  002A24  0E00               	movlw	0
 17741  002A26  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17742  002A28  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17743  002A2A  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17744  002A2E  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17745  002A32  0E00               	movlw	low (__smallconst shr (0+16))
 17746  002A34  6EF8               	movwf	tblptru,c
 17747  002A36  0E0F               	movlw	(high __ramtop+-1)
 17748  002A38  64F7               	cpfsgt	tblptrh,c
 17749  002A3A  D009               	bra	u12717
 17750  002A3C  6AF5               	clrf	tablat,c
 17751  002A3E  000D               	tblwt		*+
 17752  002A40  6AF5               	clrf	tablat,c
 17753  002A42  000D               	tblwt		*+
 17754  002A44  6AF5               	clrf	tablat,c
 17755  002A46  000D               	tblwt		*+
 17756  002A48  6AF5               	clrf	tablat,c
 17757  002A4A  000C               	tblwt		*
 17758  002A4C  D008               	bra	u12710
 17759  002A4E                     u12717:
 17760  002A4E  CFF6 FFE9          	movff	tblptrl,fsr0l
 17761  002A52  CFF7 FFEA          	movff	tblptrh,fsr0h
 17762  002A56  6AEE               	clrf	postinc0,c
 17763  002A58  6AEE               	clrf	postinc0,c
 17764  002A5A  6AEE               	clrf	postinc0,c
 17765  002A5C  6AEF               	clrf	indf0,c
 17766  002A5E                     u12710:
 17767                           
 17768                           ;tcpv4.c: 886: currentTCB->localLastAck = 0;
 17769  002A5E  0E14               	movlw	20
 17770  002A60  0100               	movlb	0	; () banked
 17771  002A62  25FE               	addwf	_currentTCB& (0+255),w,b
 17772  002A64  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17773  002A66  0E00               	movlw	0
 17774  002A68  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17775  002A6A  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17776  002A6C  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17777  002A70  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17778  002A74  0E00               	movlw	low (__smallconst shr (0+16))
 17779  002A76  6EF8               	movwf	tblptru,c
 17780  002A78  0E0F               	movlw	(high __ramtop+-1)
 17781  002A7A  64F7               	cpfsgt	tblptrh,c
 17782  002A7C  D009               	bra	u12727
 17783  002A7E  6AF5               	clrf	tablat,c
 17784  002A80  000D               	tblwt		*+
 17785  002A82  6AF5               	clrf	tablat,c
 17786  002A84  000D               	tblwt		*+
 17787  002A86  6AF5               	clrf	tablat,c
 17788  002A88  000D               	tblwt		*+
 17789  002A8A  6AF5               	clrf	tablat,c
 17790  002A8C  000C               	tblwt		*
 17791  002A8E  D008               	bra	u12720
 17792  002A90                     u12727:
 17793  002A90  CFF6 FFE9          	movff	tblptrl,fsr0l
 17794  002A94  CFF7 FFEA          	movff	tblptrh,fsr0h
 17795  002A98  6AEE               	clrf	postinc0,c
 17796  002A9A  6AEE               	clrf	postinc0,c
 17797  002A9C  6AEE               	clrf	postinc0,c
 17798  002A9E  6AEF               	clrf	indf0,c
 17799  002AA0                     u12720:
 17800                           
 17801                           ;tcpv4.c: 887: currentTCB->remoteSeqno = 0;
 17802  002AA0  0E08               	movlw	8
 17803  002AA2  0100               	movlb	0	; () banked
 17804  002AA4  25FE               	addwf	_currentTCB& (0+255),w,b
 17805  002AA6  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17806  002AA8  0E00               	movlw	0
 17807  002AAA  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17808  002AAC  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17809  002AAE  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17810  002AB2  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17811  002AB6  0E00               	movlw	low (__smallconst shr (0+16))
 17812  002AB8  6EF8               	movwf	tblptru,c
 17813  002ABA  0E0F               	movlw	(high __ramtop+-1)
 17814  002ABC  64F7               	cpfsgt	tblptrh,c
 17815  002ABE  D009               	bra	u12737
 17816  002AC0  6AF5               	clrf	tablat,c
 17817  002AC2  000D               	tblwt		*+
 17818  002AC4  6AF5               	clrf	tablat,c
 17819  002AC6  000D               	tblwt		*+
 17820  002AC8  6AF5               	clrf	tablat,c
 17821  002ACA  000D               	tblwt		*+
 17822  002ACC  6AF5               	clrf	tablat,c
 17823  002ACE  000C               	tblwt		*
 17824  002AD0  D008               	bra	u12730
 17825  002AD2                     u12737:
 17826  002AD2  CFF6 FFE9          	movff	tblptrl,fsr0l
 17827  002AD6  CFF7 FFEA          	movff	tblptrh,fsr0h
 17828  002ADA  6AEE               	clrf	postinc0,c
 17829  002ADC  6AEE               	clrf	postinc0,c
 17830  002ADE  6AEE               	clrf	postinc0,c
 17831  002AE0  6AEF               	clrf	indf0,c
 17832  002AE2                     u12730:
 17833                           
 17834                           ;tcpv4.c: 888: currentTCB->remoteAck = 0;
 17835  002AE2  0E0C               	movlw	12
 17836  002AE4  0100               	movlb	0	; () banked
 17837  002AE6  25FE               	addwf	_currentTCB& (0+255),w,b
 17838  002AE8  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17839  002AEA  0E00               	movlw	0
 17840  002AEC  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17841  002AEE  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17842  002AF0  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17843  002AF4  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17844  002AF8  0E00               	movlw	low (__smallconst shr (0+16))
 17845  002AFA  6EF8               	movwf	tblptru,c
 17846  002AFC  0E0F               	movlw	(high __ramtop+-1)
 17847  002AFE  64F7               	cpfsgt	tblptrh,c
 17848  002B00  D009               	bra	u12747
 17849  002B02  6AF5               	clrf	tablat,c
 17850  002B04  000D               	tblwt		*+
 17851  002B06  6AF5               	clrf	tablat,c
 17852  002B08  000D               	tblwt		*+
 17853  002B0A  6AF5               	clrf	tablat,c
 17854  002B0C  000D               	tblwt		*+
 17855  002B0E  6AF5               	clrf	tablat,c
 17856  002B10  000C               	tblwt		*
 17857  002B12  D008               	bra	u12740
 17858  002B14                     u12747:
 17859  002B14  CFF6 FFE9          	movff	tblptrl,fsr0l
 17860  002B18  CFF7 FFEA          	movff	tblptrh,fsr0h
 17861  002B1C  6AEE               	clrf	postinc0,c
 17862  002B1E  6AEE               	clrf	postinc0,c
 17863  002B20  6AEE               	clrf	postinc0,c
 17864  002B22  6AEF               	clrf	indf0,c
 17865  002B24                     u12740:
 17866                           
 17867                           ;tcpv4.c: 889: currentTCB->remoteWnd = 0;
 17868  002B24  0E18               	movlw	24
 17869  002B26  0100               	movlb	0	; () banked
 17870  002B28  25FE               	addwf	_currentTCB& (0+255),w,b
 17871  002B2A  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17872  002B2C  0E00               	movlw	0
 17873  002B2E  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17874  002B30  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17875  002B32  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17876  002B36  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17877  002B3A  0E00               	movlw	low (__smallconst shr (0+16))
 17878  002B3C  6EF8               	movwf	tblptru,c
 17879  002B3E  0E0F               	movlw	(high __ramtop+-1)
 17880  002B40  64F7               	cpfsgt	tblptrh,c
 17881  002B42  D005               	bra	u12757
 17882  002B44  6AF5               	clrf	tablat,c
 17883  002B46  000D               	tblwt		*+
 17884  002B48  6AF5               	clrf	tablat,c
 17885  002B4A  000C               	tblwt		*
 17886  002B4C  D006               	bra	u12750
 17887  002B4E                     u12757:
 17888  002B4E  CFF6 FFE9          	movff	tblptrl,fsr0l
 17889  002B52  CFF7 FFEA          	movff	tblptrh,fsr0h
 17890  002B56  6AEE               	clrf	postinc0,c
 17891  002B58  6AEF               	clrf	indf0,c
 17892  002B5A                     u12750:
 17893                           
 17894                           ;tcpv4.c: 890: currentTCB->mss = 0;
 17895  002B5A  0E1C               	movlw	28
 17896  002B5C  0100               	movlb	0	; () banked
 17897  002B5E  25FE               	addwf	_currentTCB& (0+255),w,b
 17898  002B60  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17899  002B62  0E00               	movlw	0
 17900  002B64  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17901  002B66  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17902  002B68  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17903  002B6C  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17904  002B70  0E00               	movlw	low (__smallconst shr (0+16))
 17905  002B72  6EF8               	movwf	tblptru,c
 17906  002B74  0E0F               	movlw	(high __ramtop+-1)
 17907  002B76  64F7               	cpfsgt	tblptrh,c
 17908  002B78  D005               	bra	u12767
 17909  002B7A  6AF5               	clrf	tablat,c
 17910  002B7C  000D               	tblwt		*+
 17911  002B7E  6AF5               	clrf	tablat,c
 17912  002B80  000C               	tblwt		*
 17913  002B82  D006               	bra	u12760
 17914  002B84                     u12767:
 17915  002B84  CFF6 FFE9          	movff	tblptrl,fsr0l
 17916  002B88  CFF7 FFEA          	movff	tblptrh,fsr0h
 17917  002B8C  6AEE               	clrf	postinc0,c
 17918  002B8E  6AEF               	clrf	indf0,c
 17919  002B90                     u12760:
 17920  002B90  D6C8               	goto	l8635
 17921  002B92                     l8651:
 17922  002B92  0100               	movlb	0	; () banked
 17923  002B94  51D2               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 17924                           
 17925                           ; Switch size 1, requested type "speed"
 17926                           ; Number of cases is 6, Range of values is 0 to 12
 17927                           ; switch strategies available:
 17928                           ; Name         Instructions Cycles
 17929                           ; simple_byte           19    10 (average)
 17930                           ;	Chosen strategy is simple_byte
 17931  002B96  E101 D4DA          	bz	l8623
 17932  002B9A  0A04               	xorlw	4	; case 4
 17933  002B9C  E102 EF20  F011    	bz	l8609
 17934  002BA2  0A01               	xorlw	1	; case 5
 17935  002BA4  E102 EF1B  F010    	bz	l8597
 17936  002BAA  0A0C               	xorlw	12	; case 9
 17937  002BAC  E101 D562          	bz	l8629
 17938  002BB0  0A03               	xorlw	3	; case 10
 17939  002BB2  E101 D55F          	bz	l8629
 17940  002BB6  0A06               	xorlw	6	; case 12
 17941  002BB8  E101 D6B7          	bz	l8637
 17942  002BBC  EFDA  F01C         	goto	l8821
 17943  002BC0                     l8653:
 17944                           
 17945                           ; BSR set to: 0
 17946                           ;tcpv4.c: 904: ;
 17947                           ;tcpv4.c: 905: if (currentTCB->destIP == receivedRemoteAddress)
 17948  002BC0  0E02               	movlw	2
 17949  002BC2  25FE               	addwf	_currentTCB& (0+255),w,b
 17950  002BC4  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17951  002BC6  0E00               	movlw	0
 17952  002BC8  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17953  002BCA  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17954  002BCC  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17955  002BD0  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17956  002BD4  0E00               	movlw	low (__smallconst shr (0+16))
 17957  002BD6  6EF8               	movwf	tblptru,c
 17958  002BD8  0E0F               	movlw	(high __ramtop+-1)
 17959  002BDA  64F7               	cpfsgt	tblptrh,c
 17960  002BDC  D00D               	bra	u12777
 17961  002BDE  0009               	tblrd		*+
 17962  002BE0  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 17963  002BE4  0009               	tblrd		*+
 17964  002BE6  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 17965  002BEA  0009               	tblrd		*+
 17966  002BEC  CFF5 F0C7          	movff	tablat,??_TCP_FiniteStateMachine+4
 17967  002BF0  0009               	tblrd		*+
 17968  002BF2  CFF5 F0C8          	movff	tablat,??_TCP_FiniteStateMachine+5
 17969  002BF6  D00C               	bra	u12770
 17970  002BF8                     u12777:
 17971  002BF8  CFF6 FFE9          	movff	tblptrl,fsr0l
 17972  002BFC  CFF7 FFEA          	movff	tblptrh,fsr0h
 17973  002C00  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 17974  002C04  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 17975  002C08  CFEE F0C7          	movff	postinc0,??_TCP_FiniteStateMachine+4
 17976  002C0C  CFEE F0C8          	movff	postinc0,??_TCP_FiniteStateMachine+5
 17977  002C10                     u12770:
 17978  002C10  0101               	movlb	1	; () banked
 17979  002C12  5196               	movf	_receivedRemoteAddress& (0+255),w,b
 17980  002C14  0100               	movlb	0	; () banked
 17981  002C16  19C5               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 17982  002C18  E10F               	bnz	u12781
 17983  002C1A  0101               	movlb	1	; () banked
 17984  002C1C  5197               	movf	(_receivedRemoteAddress+1)& (0+255),w,b
 17985  002C1E  0100               	movlb	0	; () banked
 17986  002C20  19C6               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 17987  002C22  E10A               	bnz	u12781
 17988  002C24  0101               	movlb	1	; () banked
 17989  002C26  5198               	movf	(_receivedRemoteAddress+2)& (0+255),w,b
 17990  002C28  0100               	movlb	0	; () banked
 17991  002C2A  19C7               	xorwf	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 17992  002C2C  E105               	bnz	u12781
 17993  002C2E  0101               	movlb	1	; () banked
 17994  002C30  5199               	movf	(_receivedRemoteAddress+3)& (0+255),w,b
 17995  002C32  0100               	movlb	0	; () banked
 17996  002C34  19C8               	xorwf	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 17997  002C36  A4D8               	btfss	status,2,c
 17998  002C38                     u12781:
 17999  002C38  EFDA  F01C         	goto	l8821
 18000                           
 18001                           ; BSR set to: 0
 18002                           ;tcpv4.c: 906: {
 18003                           ;tcpv4.c: 910: if (currentTCB->remoteAck == tcpHeader.sequenceNumber)
 18004  002C3C  0E0C               	movlw	12
 18005  002C3E  25FE               	addwf	_currentTCB& (0+255),w,b
 18006  002C40  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18007  002C42  0E00               	movlw	0
 18008  002C44  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18009  002C46  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18010  002C48  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18011  002C4C  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18012  002C50  0E00               	movlw	low (__smallconst shr (0+16))
 18013  002C52  6EF8               	movwf	tblptru,c
 18014  002C54  0E0F               	movlw	(high __ramtop+-1)
 18015  002C56  64F7               	cpfsgt	tblptrh,c
 18016  002C58  D00D               	bra	u12797
 18017  002C5A  0009               	tblrd		*+
 18018  002C5C  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 18019  002C60  0009               	tblrd		*+
 18020  002C62  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 18021  002C66  0009               	tblrd		*+
 18022  002C68  CFF5 F0C7          	movff	tablat,??_TCP_FiniteStateMachine+4
 18023  002C6C  0009               	tblrd		*+
 18024  002C6E  CFF5 F0C8          	movff	tablat,??_TCP_FiniteStateMachine+5
 18025  002C72  D00C               	bra	u12790
 18026  002C74                     u12797:
 18027  002C74  CFF6 FFE9          	movff	tblptrl,fsr0l
 18028  002C78  CFF7 FFEA          	movff	tblptrh,fsr0h
 18029  002C7C  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 18030  002C80  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 18031  002C84  CFEE F0C7          	movff	postinc0,??_TCP_FiniteStateMachine+4
 18032  002C88  CFEE F0C8          	movff	postinc0,??_TCP_FiniteStateMachine+5
 18033  002C8C                     u12790:
 18034  002C8C  0101               	movlb	1	; () banked
 18035  002C8E  51C0               	movf	(_tcpHeader+4)& (0+255),w,b
 18036  002C90  0100               	movlb	0	; () banked
 18037  002C92  19C5               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 18038  002C94  E10F               	bnz	u12801
 18039  002C96  0101               	movlb	1	; () banked
 18040  002C98  51C1               	movf	(_tcpHeader+5)& (0+255),w,b
 18041  002C9A  0100               	movlb	0	; () banked
 18042  002C9C  19C6               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 18043  002C9E  E10A               	bnz	u12801
 18044  002CA0  0101               	movlb	1	; () banked
 18045  002CA2  51C2               	movf	(_tcpHeader+6)& (0+255),w,b
 18046  002CA4  0100               	movlb	0	; () banked
 18047  002CA6  19C7               	xorwf	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 18048  002CA8  E105               	bnz	u12801
 18049  002CAA  0101               	movlb	1	; () banked
 18050  002CAC  51C3               	movf	(_tcpHeader+7)& (0+255),w,b
 18051  002CAE  0100               	movlb	0	; () banked
 18052  002CB0  19C8               	xorwf	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 18053  002CB2  A4D8               	btfss	status,2,c
 18054  002CB4                     u12801:
 18055  002CB4  EFDA  F01C         	goto	l8821
 18056                           
 18057                           ; BSR set to: 0
 18058                           ;tcpv4.c: 911: {
 18059                           ;tcpv4.c: 915: if (currentTCB->localLastAck < tcpHeader.ackNumber)
 18060  002CB8  0E14               	movlw	20
 18061  002CBA  25FE               	addwf	_currentTCB& (0+255),w,b
 18062  002CBC  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18063  002CBE  0E00               	movlw	0
 18064  002CC0  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18065  002CC2  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18066  002CC4  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18067  002CC8  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18068  002CCC  0E00               	movlw	low (__smallconst shr (0+16))
 18069  002CCE  6EF8               	movwf	tblptru,c
 18070  002CD0  0E0F               	movlw	(high __ramtop+-1)
 18071  002CD2  64F7               	cpfsgt	tblptrh,c
 18072  002CD4  D00D               	bra	u12817
 18073  002CD6  0009               	tblrd		*+
 18074  002CD8  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 18075  002CDC  0009               	tblrd		*+
 18076  002CDE  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 18077  002CE2  0009               	tblrd		*+
 18078  002CE4  CFF5 F0C7          	movff	tablat,??_TCP_FiniteStateMachine+4
 18079  002CE8  0009               	tblrd		*+
 18080  002CEA  CFF5 F0C8          	movff	tablat,??_TCP_FiniteStateMachine+5
 18081  002CEE  D00C               	bra	u12810
 18082  002CF0                     u12817:
 18083  002CF0  CFF6 FFE9          	movff	tblptrl,fsr0l
 18084  002CF4  CFF7 FFEA          	movff	tblptrh,fsr0h
 18085  002CF8  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 18086  002CFC  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 18087  002D00  CFEE F0C7          	movff	postinc0,??_TCP_FiniteStateMachine+4
 18088  002D04  CFEE F0C8          	movff	postinc0,??_TCP_FiniteStateMachine+5
 18089  002D08                     u12810:
 18090  002D08  0101               	movlb	1	; () banked
 18091  002D0A  51C4               	movf	(_tcpHeader+8)& (0+255),w,b
 18092  002D0C  0100               	movlb	0	; () banked
 18093  002D0E  5DC5               	subwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 18094  002D10  0101               	movlb	1	; () banked
 18095  002D12  51C5               	movf	(_tcpHeader+9)& (0+255),w,b
 18096  002D14  0100               	movlb	0	; () banked
 18097  002D16  59C6               	subwfb	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 18098  002D18  0101               	movlb	1	; () banked
 18099  002D1A  51C6               	movf	(_tcpHeader+10)& (0+255),w,b
 18100  002D1C  0100               	movlb	0	; () banked
 18101  002D1E  59C7               	subwfb	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 18102  002D20  0101               	movlb	1	; () banked
 18103  002D22  51C7               	movf	(_tcpHeader+11)& (0+255),w,b
 18104  002D24  0100               	movlb	0	; () banked
 18105  002D26  59C8               	subwfb	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 18106  002D28  E302 EFDA  F01C    	bc	l8821
 18107                           
 18108                           ; BSR set to: 0
 18109                           ;tcpv4.c: 916: {
 18110                           ;tcpv4.c: 918: if ((currentTCB->localSeqno + 1) >= tcpHeader.ackNumber)
 18111  002D2E  0E10               	movlw	16
 18112  002D30  25FE               	addwf	_currentTCB& (0+255),w,b
 18113  002D32  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18114  002D34  0E00               	movlw	0
 18115  002D36  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18116  002D38  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18117  002D3A  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18118  002D3E  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18119  002D42  0E00               	movlw	low (__smallconst shr (0+16))
 18120  002D44  6EF8               	movwf	tblptru,c
 18121  002D46  0E0F               	movlw	(high __ramtop+-1)
 18122  002D48  64F7               	cpfsgt	tblptrh,c
 18123  002D4A  D00D               	bra	u12837
 18124  002D4C  0009               	tblrd		*+
 18125  002D4E  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 18126  002D52  0009               	tblrd		*+
 18127  002D54  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 18128  002D58  0009               	tblrd		*+
 18129  002D5A  CFF5 F0C7          	movff	tablat,??_TCP_FiniteStateMachine+4
 18130  002D5E  0009               	tblrd		*+
 18131  002D60  CFF5 F0C8          	movff	tablat,??_TCP_FiniteStateMachine+5
 18132  002D64  D00C               	bra	u12830
 18133  002D66                     u12837:
 18134  002D66  CFF6 FFE9          	movff	tblptrl,fsr0l
 18135  002D6A  CFF7 FFEA          	movff	tblptrh,fsr0h
 18136  002D6E  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 18137  002D72  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 18138  002D76  CFEE F0C7          	movff	postinc0,??_TCP_FiniteStateMachine+4
 18139  002D7A  CFEE F0C8          	movff	postinc0,??_TCP_FiniteStateMachine+5
 18140  002D7E                     u12830:
 18141  002D7E  0E01               	movlw	1
 18142  002D80  0100               	movlb	0	; () banked
 18143  002D82  25C5               	addwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 18144  002D84  6FC9               	movwf	(??_TCP_FiniteStateMachine+6)& (0+255),b
 18145  002D86  0E00               	movlw	0
 18146  002D88  21C6               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 18147  002D8A  6FCA               	movwf	(??_TCP_FiniteStateMachine+7)& (0+255),b
 18148  002D8C  0E00               	movlw	0
 18149  002D8E  21C7               	addwfc	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 18150  002D90  6FCB               	movwf	(??_TCP_FiniteStateMachine+8)& (0+255),b
 18151  002D92  0E00               	movlw	0
 18152  002D94  21C8               	addwfc	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 18153  002D96  6FCC               	movwf	(??_TCP_FiniteStateMachine+9)& (0+255),b
 18154  002D98  0101               	movlb	1	; () banked
 18155  002D9A  51C4               	movf	(_tcpHeader+8)& (0+255),w,b
 18156  002D9C  0100               	movlb	0	; () banked
 18157  002D9E  5DC9               	subwf	(??_TCP_FiniteStateMachine+6)& (0+255),w,b
 18158  002DA0  0101               	movlb	1	; () banked
 18159  002DA2  51C5               	movf	(_tcpHeader+9)& (0+255),w,b
 18160  002DA4  0100               	movlb	0	; () banked
 18161  002DA6  59CA               	subwfb	(??_TCP_FiniteStateMachine+7)& (0+255),w,b
 18162  002DA8  0101               	movlb	1	; () banked
 18163  002DAA  51C6               	movf	(_tcpHeader+10)& (0+255),w,b
 18164  002DAC  0100               	movlb	0	; () banked
 18165  002DAE  59CB               	subwfb	(??_TCP_FiniteStateMachine+8)& (0+255),w,b
 18166  002DB0  0101               	movlb	1	; () banked
 18167  002DB2  51C7               	movf	(_tcpHeader+11)& (0+255),w,b
 18168  002DB4  0100               	movlb	0	; () banked
 18169  002DB6  59CC               	subwfb	(??_TCP_FiniteStateMachine+9)& (0+255),w,b
 18170  002DB8  E201 D196          	bnc	l8677
 18171                           
 18172                           ; BSR set to: 0
 18173                           ;tcpv4.c: 919: {
 18174                           ;tcpv4.c: 920: notAckBytes = currentTCB->localSeqno - tcpHeader.ackNumber;
 18175  002DBC  0E10               	movlw	16
 18176  002DBE  25FE               	addwf	_currentTCB& (0+255),w,b
 18177  002DC0  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18178  002DC2  0E00               	movlw	0
 18179  002DC4  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18180  002DC6  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18181  002DC8  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18182  002DCC  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18183  002DD0  0E00               	movlw	low (__smallconst shr (0+16))
 18184  002DD2  6EF8               	movwf	tblptru,c
 18185  002DD4  0E0F               	movlw	(high __ramtop+-1)
 18186  002DD6  64F7               	cpfsgt	tblptrh,c
 18187  002DD8  D007               	bra	u12857
 18188  002DDA  0009               	tblrd		*+
 18189  002DDC  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 18190  002DE0  0009               	tblrd		*+
 18191  002DE2  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 18192  002DE6  D008               	bra	u12850
 18193  002DE8                     u12857:
 18194  002DE8  CFF6 FFE9          	movff	tblptrl,fsr0l
 18195  002DEC  CFF7 FFEA          	movff	tblptrh,fsr0h
 18196  002DF0  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 18197  002DF4  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 18198  002DF8                     u12850:
 18199  002DF8  0101               	movlb	1	; () banked
 18200  002DFA  51C4               	movf	(_tcpHeader+8)& (0+255),w,b
 18201  002DFC  0100               	movlb	0	; () banked
 18202  002DFE  5DC5               	subwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 18203  002E00  6FD0               	movwf	TCP_FiniteStateMachine@notAckBytes& (0+255),b
 18204  002E02  0101               	movlb	1	; () banked
 18205  002E04  51C5               	movf	(_tcpHeader+9)& (0+255),w,b
 18206  002E06  0100               	movlb	0	; () banked
 18207  002E08  59C6               	subwfb	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 18208  002E0A  6FD1               	movwf	(TCP_FiniteStateMachine@notAckBytes+1)& (0+255),b
 18209                           
 18210                           ;tcpv4.c: 923: currentTCB->txBufferPtr = currentTCB->txBufferPtr - notAckBytes;
 18211  002E0C  0E25               	movlw	37
 18212  002E0E  25FE               	addwf	_currentTCB& (0+255),w,b
 18213  002E10  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18214  002E12  0E00               	movlw	0
 18215  002E14  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18216  002E16  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18217  002E18  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18218  002E1C  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18219  002E20  0E00               	movlw	low (__smallconst shr (0+16))
 18220  002E22  6EF8               	movwf	tblptru,c
 18221  002E24  0E0F               	movlw	(high __ramtop+-1)
 18222  002E26  64F7               	cpfsgt	tblptrh,c
 18223  002E28  D007               	bra	u12867
 18224  002E2A  0009               	tblrd		*+
 18225  002E2C  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 18226  002E30  0009               	tblrd		*+
 18227  002E32  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 18228  002E36  D008               	bra	u12860
 18229  002E38                     u12867:
 18230  002E38  CFF6 FFE9          	movff	tblptrl,fsr0l
 18231  002E3C  CFF7 FFEA          	movff	tblptrh,fsr0h
 18232  002E40  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 18233  002E44  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 18234  002E48                     u12860:
 18235  002E48  0100               	movlb	0	; () banked
 18236  002E4A  51D0               	movf	TCP_FiniteStateMachine@notAckBytes& (0+255),w,b
 18237  002E4C  5FC5               	subwf	(??_TCP_FiniteStateMachine+2)& (0+255),f,b
 18238  002E4E  51D1               	movf	(TCP_FiniteStateMachine@notAckBytes+1)& (0+255),w,b
 18239  002E50  5BC6               	subwfb	(??_TCP_FiniteStateMachine+3)& (0+255),f,b
 18240  002E52  0E25               	movlw	37
 18241  002E54  25FE               	addwf	_currentTCB& (0+255),w,b
 18242  002E56  6FC7               	movwf	(??_TCP_FiniteStateMachine+4)& (0+255),b
 18243  002E58  0E00               	movlw	0
 18244  002E5A  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18245  002E5C  6FC8               	movwf	(??_TCP_FiniteStateMachine+5)& (0+255),b
 18246  002E5E  C0C7  FFF6         	movff	??_TCP_FiniteStateMachine+4,tblptrl
 18247  002E62  C0C8  FFF7         	movff	??_TCP_FiniteStateMachine+5,tblptrh
 18248  002E66  0E00               	movlw	low (__smallconst shr (0+16))
 18249  002E68  6EF8               	movwf	tblptru,c
 18250  002E6A  0E0F               	movlw	(high __ramtop+-1)
 18251  002E6C  64F7               	cpfsgt	tblptrh,c
 18252  002E6E  D007               	bra	u12877
 18253  002E70  C0C5  FFF5         	movff	??_TCP_FiniteStateMachine+2,tablat
 18254  002E74  000D               	tblwt		*+
 18255  002E76  C0C6  FFF5         	movff	??_TCP_FiniteStateMachine+3,tablat
 18256  002E7A  000C               	tblwt		*
 18257  002E7C  D008               	bra	u12870
 18258  002E7E                     u12877:
 18259  002E7E  CFF6 FFE9          	movff	tblptrl,fsr0l
 18260  002E82  CFF7 FFEA          	movff	tblptrh,fsr0h
 18261  002E86  C0C5  FFEE         	movff	??_TCP_FiniteStateMachine+2,postinc0
 18262  002E8A  C0C6  FFEF         	movff	??_TCP_FiniteStateMachine+3,indf0
 18263  002E8E                     u12870:
 18264                           
 18265                           ;tcpv4.c: 924: currentTCB->bytesToSend = currentTCB->bytesToSend + notAckBytes;
 18266  002E8E  0E27               	movlw	39
 18267  002E90  0100               	movlb	0	; () banked
 18268  002E92  25FE               	addwf	_currentTCB& (0+255),w,b
 18269  002E94  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18270  002E96  0E00               	movlw	0
 18271  002E98  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18272  002E9A  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18273  002E9C  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18274  002EA0  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18275  002EA4  0E00               	movlw	low (__smallconst shr (0+16))
 18276  002EA6  6EF8               	movwf	tblptru,c
 18277  002EA8  0E0F               	movlw	(high __ramtop+-1)
 18278  002EAA  64F7               	cpfsgt	tblptrh,c
 18279  002EAC  D007               	bra	u12887
 18280  002EAE  0009               	tblrd		*+
 18281  002EB0  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 18282  002EB4  0009               	tblrd		*+
 18283  002EB6  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 18284  002EBA  D008               	bra	u12880
 18285  002EBC                     u12887:
 18286  002EBC  CFF6 FFE9          	movff	tblptrl,fsr0l
 18287  002EC0  CFF7 FFEA          	movff	tblptrh,fsr0h
 18288  002EC4  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 18289  002EC8  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 18290  002ECC                     u12880:
 18291  002ECC  0100               	movlb	0	; () banked
 18292  002ECE  51D0               	movf	TCP_FiniteStateMachine@notAckBytes& (0+255),w,b
 18293  002ED0  27C5               	addwf	(??_TCP_FiniteStateMachine+2)& (0+255),f,b
 18294  002ED2  51D1               	movf	(TCP_FiniteStateMachine@notAckBytes+1)& (0+255),w,b
 18295  002ED4  23C6               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),f,b
 18296  002ED6  0E27               	movlw	39
 18297  002ED8  25FE               	addwf	_currentTCB& (0+255),w,b
 18298  002EDA  6FC7               	movwf	(??_TCP_FiniteStateMachine+4)& (0+255),b
 18299  002EDC  0E00               	movlw	0
 18300  002EDE  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18301  002EE0  6FC8               	movwf	(??_TCP_FiniteStateMachine+5)& (0+255),b
 18302  002EE2  C0C7  FFF6         	movff	??_TCP_FiniteStateMachine+4,tblptrl
 18303  002EE6  C0C8  FFF7         	movff	??_TCP_FiniteStateMachine+5,tblptrh
 18304  002EEA  0E00               	movlw	low (__smallconst shr (0+16))
 18305  002EEC  6EF8               	movwf	tblptru,c
 18306  002EEE  0E0F               	movlw	(high __ramtop+-1)
 18307  002EF0  64F7               	cpfsgt	tblptrh,c
 18308  002EF2  D007               	bra	u12897
 18309  002EF4  C0C5  FFF5         	movff	??_TCP_FiniteStateMachine+2,tablat
 18310  002EF8  000D               	tblwt		*+
 18311  002EFA  C0C6  FFF5         	movff	??_TCP_FiniteStateMachine+3,tablat
 18312  002EFE  000C               	tblwt		*
 18313  002F00  D008               	bra	u12890
 18314  002F02                     u12897:
 18315  002F02  CFF6 FFE9          	movff	tblptrl,fsr0l
 18316  002F06  CFF7 FFEA          	movff	tblptrh,fsr0h
 18317  002F0A  C0C5  FFEE         	movff	??_TCP_FiniteStateMachine+2,postinc0
 18318  002F0E  C0C6  FFEF         	movff	??_TCP_FiniteStateMachine+3,indf0
 18319  002F12                     u12890:
 18320                           
 18321                           ;tcpv4.c: 927: if(currentTCB->bytesToSend == 0)
 18322  002F12  0E27               	movlw	39
 18323  002F14  0100               	movlb	0	; () banked
 18324  002F16  25FE               	addwf	_currentTCB& (0+255),w,b
 18325  002F18  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18326  002F1A  0E00               	movlw	0
 18327  002F1C  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18328  002F1E  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18329  002F20  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18330  002F24  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18331  002F28  0E00               	movlw	low (__smallconst shr (0+16))
 18332  002F2A  6EF8               	movwf	tblptru,c
 18333  002F2C  0E0F               	movlw	(high __ramtop+-1)
 18334  002F2E  64F7               	cpfsgt	tblptrh,c
 18335  002F30  D007               	bra	u12907
 18336  002F32  0009               	tblrd		*+
 18337  002F34  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 18338  002F38  0009               	tblrd		*+
 18339  002F3A  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 18340  002F3E  D008               	bra	u12900
 18341  002F40                     u12907:
 18342  002F40  CFF6 FFE9          	movff	tblptrl,fsr0l
 18343  002F44  CFF7 FFEA          	movff	tblptrh,fsr0h
 18344  002F48  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 18345  002F4C  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 18346  002F50                     u12900:
 18347  002F50  0100               	movlb	0	; () banked
 18348  002F52  51C5               	movf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 18349  002F54  11C6               	iorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 18350  002F56  E131               	bnz	l8667
 18351                           
 18352                           ; BSR set to: 0
 18353                           ;tcpv4.c: 928: {
 18354                           ;tcpv4.c: 929: if (currentTCB->txBufState == TX_BUFF_IN_USE)
 18355  002F58  0E29               	movlw	41
 18356  002F5A  25FE               	addwf	_currentTCB& (0+255),w,b
 18357  002F5C  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18358  002F5E  0E00               	movlw	0
 18359  002F60  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18360  002F62  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18361  002F64  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18362  002F68  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18363  002F6C  0E00               	movlw	low (__smallconst shr (0+16))
 18364  002F6E  6EF8               	movwf	tblptru,c
 18365  002F70  0E0F               	movlw	(high __ramtop+-1)
 18366  002F72  64F7               	cpfsgt	tblptrh,c
 18367  002F74  D003               	bra	u12927
 18368  002F76  0008               	tblrd		*
 18369  002F78  50F5               	movf	tablat,w,c
 18370  002F7A  D005               	bra	u12920
 18371  002F7C                     u12927:
 18372  002F7C  CFF6 FFE9          	movff	tblptrl,fsr0l
 18373  002F80  CFF7 FFEA          	movff	tblptrh,fsr0h
 18374  002F84  50EF               	movf	indf0,w,c
 18375  002F86                     u12920:
 18376  002F86  0A02               	xorlw	2
 18377  002F88  E118               	bnz	l8667
 18378                           
 18379                           ;tcpv4.c: 930: {
 18380                           ;tcpv4.c: 931: currentTCB->txBufState = NO_BUFF;
 18381  002F8A  0E29               	movlw	41
 18382  002F8C  0100               	movlb	0	; () banked
 18383  002F8E  25FE               	addwf	_currentTCB& (0+255),w,b
 18384  002F90  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18385  002F92  0E00               	movlw	0
 18386  002F94  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18387  002F96  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18388  002F98  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18389  002F9C  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18390  002FA0  0E00               	movlw	low (__smallconst shr (0+16))
 18391  002FA2  6EF8               	movwf	tblptru,c
 18392  002FA4  0E0F               	movlw	(high __ramtop+-1)
 18393  002FA6  64F7               	cpfsgt	tblptrh,c
 18394  002FA8  D003               	bra	u12947
 18395  002FAA  6AF5               	clrf	tablat,c
 18396  002FAC  000C               	tblwt		*
 18397  002FAE  D005               	bra	u12940
 18398  002FB0                     u12947:
 18399  002FB0  CFF6 FFE9          	movff	tblptrl,fsr0l
 18400  002FB4  CFF7 FFEA          	movff	tblptrh,fsr0h
 18401  002FB8  6AEF               	clrf	indf0,c
 18402  002FBA                     u12940:
 18403  002FBA                     l8667:
 18404                           
 18405                           ;tcpv4.c: 932: }
 18406                           ;tcpv4.c: 933: }
 18407                           ;tcpv4.c: 935: currentTCB->localLastAck = tcpHeader.ackNumber - 1;
 18408  002FBA  EE21  F0C4         	lfsr	2,_tcpHeader+8
 18409  002FBE  0EFF               	movlw	255
 18410  002FC0  24DE               	addwf	postinc2,w,c
 18411  002FC2  0100               	movlb	0	; () banked
 18412  002FC4  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18413  002FC6  0EFF               	movlw	255
 18414  002FC8  20DE               	addwfc	postinc2,w,c
 18415  002FCA  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18416  002FCC  0EFF               	movlw	255
 18417  002FCE  20DE               	addwfc	postinc2,w,c
 18418  002FD0  6FC5               	movwf	(??_TCP_FiniteStateMachine+2)& (0+255),b
 18419  002FD2  0EFF               	movlw	255
 18420  002FD4  20DE               	addwfc	postinc2,w,c
 18421  002FD6  6FC6               	movwf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 18422  002FD8  0E14               	movlw	20
 18423  002FDA  25FE               	addwf	_currentTCB& (0+255),w,b
 18424  002FDC  6FC7               	movwf	(??_TCP_FiniteStateMachine+4)& (0+255),b
 18425  002FDE  0E00               	movlw	0
 18426  002FE0  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18427  002FE2  6FC8               	movwf	(??_TCP_FiniteStateMachine+5)& (0+255),b
 18428  002FE4  C0C7  FFF6         	movff	??_TCP_FiniteStateMachine+4,tblptrl
 18429  002FE8  C0C8  FFF7         	movff	??_TCP_FiniteStateMachine+5,tblptrh
 18430  002FEC  0E00               	movlw	low (__smallconst shr (0+16))
 18431  002FEE  6EF8               	movwf	tblptru,c
 18432  002FF0  0E0F               	movlw	(high __ramtop+-1)
 18433  002FF2  64F7               	cpfsgt	tblptrh,c
 18434  002FF4  D00D               	bra	u12957
 18435  002FF6  C0C3  FFF5         	movff	??_TCP_FiniteStateMachine,tablat
 18436  002FFA  000D               	tblwt		*+
 18437  002FFC  C0C4  FFF5         	movff	??_TCP_FiniteStateMachine+1,tablat
 18438  003000  000D               	tblwt		*+
 18439  003002  C0C5  FFF5         	movff	??_TCP_FiniteStateMachine+2,tablat
 18440  003006  000D               	tblwt		*+
 18441  003008  C0C6  FFF5         	movff	??_TCP_FiniteStateMachine+3,tablat
 18442  00300C  000C               	tblwt		*
 18443  00300E  D00C               	bra	u12950
 18444  003010                     u12957:
 18445  003010  CFF6 FFE9          	movff	tblptrl,fsr0l
 18446  003014  CFF7 FFEA          	movff	tblptrh,fsr0h
 18447  003018  C0C3  FFEE         	movff	??_TCP_FiniteStateMachine,postinc0
 18448  00301C  C0C4  FFEE         	movff	??_TCP_FiniteStateMachine+1,postinc0
 18449  003020  C0C5  FFEE         	movff	??_TCP_FiniteStateMachine+2,postinc0
 18450  003024  C0C6  FFEF         	movff	??_TCP_FiniteStateMachine+3,indf0
 18451  003028                     u12950:
 18452                           
 18453                           ;tcpv4.c: 936: currentTCB->localSeqno = tcpHeader.ackNumber;
 18454  003028  0E10               	movlw	16
 18455  00302A  0100               	movlb	0	; () banked
 18456  00302C  25FE               	addwf	_currentTCB& (0+255),w,b
 18457  00302E  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18458  003030  0E00               	movlw	0
 18459  003032  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18460  003034  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18461  003036  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18462  00303A  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18463  00303E  0E00               	movlw	low (__smallconst shr (0+16))
 18464  003040  6EF8               	movwf	tblptru,c
 18465  003042  0E0F               	movlw	(high __ramtop+-1)
 18466  003044  64F7               	cpfsgt	tblptrh,c
 18467  003046  D00D               	bra	u12967
 18468  003048  C1C4  FFF5         	movff	_tcpHeader+8,tablat
 18469  00304C  000D               	tblwt		*+
 18470  00304E  C1C5  FFF5         	movff	_tcpHeader+9,tablat
 18471  003052  000D               	tblwt		*+
 18472  003054  C1C6  FFF5         	movff	_tcpHeader+10,tablat
 18473  003058  000D               	tblwt		*+
 18474  00305A  C1C7  FFF5         	movff	_tcpHeader+11,tablat
 18475  00305E  000C               	tblwt		*
 18476  003060  D00C               	bra	u12960
 18477  003062                     u12967:
 18478  003062  CFF6 FFE9          	movff	tblptrl,fsr0l
 18479  003066  CFF7 FFEA          	movff	tblptrh,fsr0h
 18480  00306A  C1C4  FFEE         	movff	_tcpHeader+8,postinc0
 18481  00306E  C1C5  FFEE         	movff	_tcpHeader+9,postinc0
 18482  003072  C1C6  FFEE         	movff	_tcpHeader+10,postinc0
 18483  003076  C1C7  FFEF         	movff	_tcpHeader+11,indf0
 18484  00307A                     u12960:
 18485                           
 18486                           ;tcpv4.c: 939: if(rcvPayloadLen > 0)
 18487  00307A  0101               	movlb	1	; () banked
 18488  00307C  51A0               	movf	_rcvPayloadLen& (0+255),w,b
 18489  00307E  11A1               	iorwf	(_rcvPayloadLen+1)& (0+255),w,b
 18490  003080  E102 EFDA  F01C    	bz	l8821
 18491                           
 18492                           ; BSR set to: 1
 18493                           ;tcpv4.c: 940: {
 18494                           ;tcpv4.c: 941: currentTCB->remoteSeqno = tcpHeader.sequenceNumber;
 18495  003086  0E08               	movlw	8
 18496  003088  0100               	movlb	0	; () banked
 18497  00308A  25FE               	addwf	_currentTCB& (0+255),w,b
 18498  00308C  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18499  00308E  0E00               	movlw	0
 18500  003090  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18501  003092  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18502  003094  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18503  003098  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18504  00309C  0E00               	movlw	low (__smallconst shr (0+16))
 18505  00309E  6EF8               	movwf	tblptru,c
 18506  0030A0  0E0F               	movlw	(high __ramtop+-1)
 18507  0030A2  64F7               	cpfsgt	tblptrh,c
 18508  0030A4  D00D               	bra	u12987
 18509  0030A6  C1C0  FFF5         	movff	_tcpHeader+4,tablat
 18510  0030AA  000D               	tblwt		*+
 18511  0030AC  C1C1  FFF5         	movff	_tcpHeader+5,tablat
 18512  0030B0  000D               	tblwt		*+
 18513  0030B2  C1C2  FFF5         	movff	_tcpHeader+6,tablat
 18514  0030B6  000D               	tblwt		*+
 18515  0030B8  C1C3  FFF5         	movff	_tcpHeader+7,tablat
 18516  0030BC  000C               	tblwt		*
 18517  0030BE  D00C               	bra	u12980
 18518  0030C0                     u12987:
 18519  0030C0  CFF6 FFE9          	movff	tblptrl,fsr0l
 18520  0030C4  CFF7 FFEA          	movff	tblptrh,fsr0h
 18521  0030C8  C1C0  FFEE         	movff	_tcpHeader+4,postinc0
 18522  0030CC  C1C1  FFEE         	movff	_tcpHeader+5,postinc0
 18523  0030D0  C1C2  FFEE         	movff	_tcpHeader+6,postinc0
 18524  0030D4  C1C3  FFEF         	movff	_tcpHeader+7,indf0
 18525  0030D8                     u12980:
 18526                           
 18527                           ;tcpv4.c: 944: TCP_PayloadSave(rcvPayloadLen);
 18528  0030D8  C1A0  F05A         	movff	_rcvPayloadLen,TCP_PayloadSave@len
 18529  0030DC  C1A1  F05B         	movff	_rcvPayloadLen+1,TCP_PayloadSave@len+1
 18530  0030E0  EC58  F02D         	call	_TCP_PayloadSave	;wreg free
 18531  0030E4  EFDA  F01C         	goto	l8821
 18532  0030E8                     l8677:
 18533                           
 18534                           ; BSR set to: 0
 18535                           ;tcpv4.c: 947: {
 18536                           ;tcpv4.c: 951: currentTCB->flags = 0x04U | 0x10U;
 18537  0030E8  0E35               	movlw	53
 18538  0030EA  25FE               	addwf	_currentTCB& (0+255),w,b
 18539  0030EC  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18540  0030EE  0E00               	movlw	0
 18541  0030F0  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18542  0030F2  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18543  0030F4  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18544  0030F8  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18545  0030FC  0E00               	movlw	low (__smallconst shr (0+16))
 18546  0030FE  6EF8               	movwf	tblptru,c
 18547  003100  0E0F               	movlw	(high __ramtop+-1)
 18548  003102  64F7               	cpfsgt	tblptrh,c
 18549  003104  D004               	bra	u12997
 18550  003106  0E14               	movlw	20
 18551  003108  6EF5               	movwf	tablat,c
 18552  00310A  000C               	tblwt		*
 18553  00310C  D006               	bra	u12990
 18554  00310E                     u12997:
 18555  00310E  CFF6 FFE9          	movff	tblptrl,fsr0l
 18556  003112  CFF7 FFEA          	movff	tblptrh,fsr0h
 18557  003116  0E14               	movlw	20
 18558  003118  6EEF               	movwf	indf0,c
 18559  00311A                     u12990:
 18560                           
 18561                           ;tcpv4.c: 952: if (TCP_Snd(currentTCB))
 18562  00311A  C0FE  F058         	movff	_currentTCB,TCP_Snd@tcbPtr
 18563  00311E  C0FF  F059         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 18564  003122  EC11  F01D         	call	_TCP_Snd	;wreg free
 18565  003126  EF72  F00D         	goto	L10
 18566  00312A                     l8685:
 18567                           
 18568                           ; BSR set to: 0
 18569                           ;tcpv4.c: 963: ;
 18570                           ;tcpv4.c: 964: currentTCB->flags = 0x01U;
 18571  00312A  0E35               	movlw	53
 18572  00312C  25FE               	addwf	_currentTCB& (0+255),w,b
 18573  00312E  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18574  003130  0E00               	movlw	0
 18575  003132  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18576  003134  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18577  003136  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18578  00313A  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18579  00313E  0E00               	movlw	low (__smallconst shr (0+16))
 18580  003140  6EF8               	movwf	tblptru,c
 18581  003142  0E0F               	movlw	(high __ramtop+-1)
 18582  003144  64F7               	cpfsgt	tblptrh,c
 18583  003146  D004               	bra	u13017
 18584  003148  0E01               	movlw	1
 18585  00314A  6EF5               	movwf	tablat,c
 18586  00314C  000C               	tblwt		*
 18587  00314E  D006               	bra	u13010
 18588  003150                     u13017:
 18589  003150  CFF6 FFE9          	movff	tblptrl,fsr0l
 18590  003154  CFF7 FFEA          	movff	tblptrh,fsr0h
 18591  003158  0E01               	movlw	1
 18592  00315A  6EEF               	movwf	indf0,c
 18593  00315C                     u13010:
 18594  00315C  EF2F  F013         	goto	l8625
 18595  003160                     l8691:
 18596                           
 18597                           ; BSR set to: 0
 18598                           ;tcpv4.c: 971: ;
 18599                           ;tcpv4.c: 974: currentTCB->localSeqno = tcpHeader.ackNumber;
 18600  003160  0E10               	movlw	16
 18601  003162  25FE               	addwf	_currentTCB& (0+255),w,b
 18602  003164  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18603  003166  0E00               	movlw	0
 18604  003168  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18605  00316A  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18606  00316C  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18607  003170  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18608  003174  0E00               	movlw	low (__smallconst shr (0+16))
 18609  003176  6EF8               	movwf	tblptru,c
 18610  003178  0E0F               	movlw	(high __ramtop+-1)
 18611  00317A  64F7               	cpfsgt	tblptrh,c
 18612  00317C  D00D               	bra	u13027
 18613  00317E  C1C4  FFF5         	movff	_tcpHeader+8,tablat
 18614  003182  000D               	tblwt		*+
 18615  003184  C1C5  FFF5         	movff	_tcpHeader+9,tablat
 18616  003188  000D               	tblwt		*+
 18617  00318A  C1C6  FFF5         	movff	_tcpHeader+10,tablat
 18618  00318E  000D               	tblwt		*+
 18619  003190  C1C7  FFF5         	movff	_tcpHeader+11,tablat
 18620  003194  000C               	tblwt		*
 18621  003196  D00C               	bra	u13020
 18622  003198                     u13027:
 18623  003198  CFF6 FFE9          	movff	tblptrl,fsr0l
 18624  00319C  CFF7 FFEA          	movff	tblptrh,fsr0h
 18625  0031A0  C1C4  FFEE         	movff	_tcpHeader+8,postinc0
 18626  0031A4  C1C5  FFEE         	movff	_tcpHeader+9,postinc0
 18627  0031A8  C1C6  FFEE         	movff	_tcpHeader+10,postinc0
 18628  0031AC  C1C7  FFEF         	movff	_tcpHeader+11,indf0
 18629  0031B0                     u13020:
 18630                           
 18631                           ;tcpv4.c: 975: currentTCB->remoteAck = currentTCB->remoteAck + 1;
 18632  0031B0  0E0C               	movlw	12
 18633  0031B2  0100               	movlb	0	; () banked
 18634  0031B4  25FE               	addwf	_currentTCB& (0+255),w,b
 18635  0031B6  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18636  0031B8  0E00               	movlw	0
 18637  0031BA  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18638  0031BC  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18639  0031BE  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18640  0031C2  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18641  0031C6  0E00               	movlw	low (__smallconst shr (0+16))
 18642  0031C8  6EF8               	movwf	tblptru,c
 18643  0031CA  0E0F               	movlw	(high __ramtop+-1)
 18644  0031CC  64F7               	cpfsgt	tblptrh,c
 18645  0031CE  D00D               	bra	u13037
 18646  0031D0  0009               	tblrd		*+
 18647  0031D2  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 18648  0031D6  0009               	tblrd		*+
 18649  0031D8  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 18650  0031DC  0009               	tblrd		*+
 18651  0031DE  CFF5 F0C7          	movff	tablat,??_TCP_FiniteStateMachine+4
 18652  0031E2  0009               	tblrd		*+
 18653  0031E4  CFF5 F0C8          	movff	tablat,??_TCP_FiniteStateMachine+5
 18654  0031E8  D00C               	bra	u13030
 18655  0031EA                     u13037:
 18656  0031EA  CFF6 FFE9          	movff	tblptrl,fsr0l
 18657  0031EE  CFF7 FFEA          	movff	tblptrh,fsr0h
 18658  0031F2  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 18659  0031F6  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 18660  0031FA  CFEE F0C7          	movff	postinc0,??_TCP_FiniteStateMachine+4
 18661  0031FE  CFEE F0C8          	movff	postinc0,??_TCP_FiniteStateMachine+5
 18662  003202                     u13030:
 18663  003202  0E01               	movlw	1
 18664  003204  0100               	movlb	0	; () banked
 18665  003206  25C5               	addwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 18666  003208  6FC9               	movwf	(??_TCP_FiniteStateMachine+6)& (0+255),b
 18667  00320A  0E00               	movlw	0
 18668  00320C  21C6               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 18669  00320E  6FCA               	movwf	(??_TCP_FiniteStateMachine+7)& (0+255),b
 18670  003210  0E00               	movlw	0
 18671  003212  21C7               	addwfc	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 18672  003214  6FCB               	movwf	(??_TCP_FiniteStateMachine+8)& (0+255),b
 18673  003216  0E00               	movlw	0
 18674  003218  21C8               	addwfc	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 18675  00321A  6FCC               	movwf	(??_TCP_FiniteStateMachine+9)& (0+255),b
 18676  00321C  0E0C               	movlw	12
 18677  00321E  25FE               	addwf	_currentTCB& (0+255),w,b
 18678  003220  6FCD               	movwf	(??_TCP_FiniteStateMachine+10)& (0+255),b
 18679  003222  0E00               	movlw	0
 18680  003224  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18681  003226  6FCE               	movwf	(??_TCP_FiniteStateMachine+11)& (0+255),b
 18682  003228  C0CD  FFF6         	movff	??_TCP_FiniteStateMachine+10,tblptrl
 18683  00322C  C0CE  FFF7         	movff	??_TCP_FiniteStateMachine+11,tblptrh
 18684  003230  0E00               	movlw	low (__smallconst shr (0+16))
 18685  003232  6EF8               	movwf	tblptru,c
 18686  003234  0E0F               	movlw	(high __ramtop+-1)
 18687  003236  64F7               	cpfsgt	tblptrh,c
 18688  003238  D00D               	bra	u13047
 18689  00323A  C0C9  FFF5         	movff	??_TCP_FiniteStateMachine+6,tablat
 18690  00323E  000D               	tblwt		*+
 18691  003240  C0CA  FFF5         	movff	??_TCP_FiniteStateMachine+7,tablat
 18692  003244  000D               	tblwt		*+
 18693  003246  C0CB  FFF5         	movff	??_TCP_FiniteStateMachine+8,tablat
 18694  00324A  000D               	tblwt		*+
 18695  00324C  C0CC  FFF5         	movff	??_TCP_FiniteStateMachine+9,tablat
 18696  003250  000C               	tblwt		*
 18697  003252  D00C               	bra	u13040
 18698  003254                     u13047:
 18699  003254  CFF6 FFE9          	movff	tblptrl,fsr0l
 18700  003258  CFF7 FFEA          	movff	tblptrh,fsr0h
 18701  00325C  C0C9  FFEE         	movff	??_TCP_FiniteStateMachine+6,postinc0
 18702  003260  C0CA  FFEE         	movff	??_TCP_FiniteStateMachine+7,postinc0
 18703  003264  C0CB  FFEE         	movff	??_TCP_FiniteStateMachine+8,postinc0
 18704  003268  C0CC  FFEF         	movff	??_TCP_FiniteStateMachine+9,indf0
 18705  00326C                     u13040:
 18706                           
 18707                           ;tcpv4.c: 977: currentTCB->socketState = SOCKET_CLOSING;
 18708  00326C  0E36               	movlw	54
 18709  00326E  0100               	movlb	0	; () banked
 18710  003270  25FE               	addwf	_currentTCB& (0+255),w,b
 18711  003272  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18712  003274  0E00               	movlw	0
 18713  003276  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18714  003278  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18715  00327A  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18716  00327E  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18717  003282  0E00               	movlw	low (__smallconst shr (0+16))
 18718  003284  6EF8               	movwf	tblptru,c
 18719  003286  0E0F               	movlw	(high __ramtop+-1)
 18720  003288  64F7               	cpfsgt	tblptrh,c
 18721  00328A  D004               	bra	u13057
 18722  00328C  0E04               	movlw	4
 18723  00328E  6EF5               	movwf	tablat,c
 18724  003290  000C               	tblwt		*
 18725  003292  D006               	bra	u13050
 18726  003294                     u13057:
 18727  003294  CFF6 FFE9          	movff	tblptrl,fsr0l
 18728  003298  CFF7 FFEA          	movff	tblptrh,fsr0h
 18729  00329C  0E04               	movlw	4
 18730  00329E  6EEF               	movwf	indf0,c
 18731  0032A0                     u13050:
 18732                           
 18733                           ;tcpv4.c: 978: currentTCB->timeout = ((unsigned long)1*2);
 18734  0032A0  0E30               	movlw	48
 18735  0032A2  0100               	movlb	0	; () banked
 18736  0032A4  25FE               	addwf	_currentTCB& (0+255),w,b
 18737  0032A6  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18738  0032A8  0E00               	movlw	0
 18739  0032AA  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18740  0032AC  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18741  0032AE  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18742  0032B2  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18743  0032B6  0E00               	movlw	low (__smallconst shr (0+16))
 18744  0032B8  6EF8               	movwf	tblptru,c
 18745  0032BA  0E0F               	movlw	(high __ramtop+-1)
 18746  0032BC  64F7               	cpfsgt	tblptrh,c
 18747  0032BE  D006               	bra	u13067
 18748  0032C0  0E02               	movlw	2
 18749  0032C2  6EF5               	movwf	tablat,c
 18750  0032C4  000D               	tblwt		*+
 18751  0032C6  6AF5               	clrf	tablat,c
 18752  0032C8  000C               	tblwt		*
 18753  0032CA  D007               	bra	u13060
 18754  0032CC                     u13067:
 18755  0032CC  CFF6 FFE9          	movff	tblptrl,fsr0l
 18756  0032D0  CFF7 FFEA          	movff	tblptrh,fsr0h
 18757  0032D4  0E02               	movlw	2
 18758  0032D6  6EEE               	movwf	postinc0,c
 18759  0032D8  6AEF               	clrf	indf0,c
 18760  0032DA                     u13060:
 18761                           
 18762                           ;tcpv4.c: 979: currentTCB->timeoutReloadValue = ((unsigned long)1*2);
 18763  0032DA  0E32               	movlw	50
 18764  0032DC  0100               	movlb	0	; () banked
 18765  0032DE  25FE               	addwf	_currentTCB& (0+255),w,b
 18766  0032E0  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18767  0032E2  0E00               	movlw	0
 18768  0032E4  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18769  0032E6  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18770  0032E8  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18771  0032EC  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18772  0032F0  0E00               	movlw	low (__smallconst shr (0+16))
 18773  0032F2  6EF8               	movwf	tblptru,c
 18774  0032F4  0E0F               	movlw	(high __ramtop+-1)
 18775  0032F6  64F7               	cpfsgt	tblptrh,c
 18776  0032F8  D006               	bra	u13077
 18777  0032FA  0E02               	movlw	2
 18778  0032FC  6EF5               	movwf	tablat,c
 18779  0032FE  000D               	tblwt		*+
 18780  003300  6AF5               	clrf	tablat,c
 18781  003302  000C               	tblwt		*
 18782  003304  D007               	bra	u13070
 18783  003306                     u13077:
 18784  003306  CFF6 FFE9          	movff	tblptrl,fsr0l
 18785  00330A  CFF7 FFEA          	movff	tblptrh,fsr0h
 18786  00330E  0E02               	movlw	2
 18787  003310  6EEE               	movwf	postinc0,c
 18788  003312  6AEF               	clrf	indf0,c
 18789  003314                     u13070:
 18790                           
 18791                           ;tcpv4.c: 980: currentTCB->timeoutsCount = (5u);
 18792  003314  0E34               	movlw	52
 18793  003316  0100               	movlb	0	; () banked
 18794  003318  25FE               	addwf	_currentTCB& (0+255),w,b
 18795  00331A  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18796  00331C  0E00               	movlw	0
 18797  00331E  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18798  003320  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18799  003322  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18800  003326  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18801  00332A  0E00               	movlw	low (__smallconst shr (0+16))
 18802  00332C  6EF8               	movwf	tblptru,c
 18803  00332E  0E0F               	movlw	(high __ramtop+-1)
 18804  003330  64F7               	cpfsgt	tblptrh,c
 18805  003332  D004               	bra	u13087
 18806  003334  0E05               	movlw	5
 18807  003336  6EF5               	movwf	tablat,c
 18808  003338  000C               	tblwt		*
 18809  00333A  D006               	bra	u13080
 18810  00333C                     u13087:
 18811  00333C  CFF6 FFE9          	movff	tblptrl,fsr0l
 18812  003340  CFF7 FFEA          	movff	tblptrh,fsr0h
 18813  003344  0E05               	movlw	5
 18814  003346  6EEF               	movwf	indf0,c
 18815  003348                     u13080:
 18816                           
 18817                           ;tcpv4.c: 982: currentTCB->flags = 0x01U | 0x10U;
 18818  003348  0E35               	movlw	53
 18819  00334A  0100               	movlb	0	; () banked
 18820  00334C  25FE               	addwf	_currentTCB& (0+255),w,b
 18821  00334E  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18822  003350  0E00               	movlw	0
 18823  003352  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18824  003354  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18825  003356  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18826  00335A  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18827  00335E  0E00               	movlw	low (__smallconst shr (0+16))
 18828  003360  6EF8               	movwf	tblptru,c
 18829  003362  0E0F               	movlw	(high __ramtop+-1)
 18830  003364  64F7               	cpfsgt	tblptrh,c
 18831  003366  D004               	bra	u13097
 18832  003368  0E11               	movlw	17
 18833  00336A  6EF5               	movwf	tablat,c
 18834  00336C  000C               	tblwt		*
 18835  00336E  D006               	bra	u13090
 18836  003370                     u13097:
 18837  003370  CFF6 FFE9          	movff	tblptrl,fsr0l
 18838  003374  CFF7 FFEA          	movff	tblptrh,fsr0h
 18839  003378  0E11               	movlw	17
 18840  00337A  6EEF               	movwf	indf0,c
 18841  00337C                     u13090:
 18842                           
 18843                           ;tcpv4.c: 984: nextState = LAST_ACK;
 18844  00337C  0E09               	movlw	9
 18845  00337E  EF30  F013         	goto	L12
 18846  003382                     l8699:
 18847                           
 18848                           ; BSR set to: 0
 18849                           ;tcpv4.c: 993: ;
 18850                           ;tcpv4.c: 994: if (currentTCB->timeoutsCount)
 18851  003382  0E34               	movlw	52
 18852  003384  25FE               	addwf	_currentTCB& (0+255),w,b
 18853  003386  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18854  003388  0E00               	movlw	0
 18855  00338A  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18856  00338C  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18857  00338E  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18858  003392  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18859  003396  0E00               	movlw	low (__smallconst shr (0+16))
 18860  003398  6EF8               	movwf	tblptru,c
 18861  00339A  0E0F               	movlw	(high __ramtop+-1)
 18862  00339C  64F7               	cpfsgt	tblptrh,c
 18863  00339E  D003               	bra	u13107
 18864  0033A0  0008               	tblrd		*
 18865  0033A2  50F5               	movf	tablat,w,c
 18866  0033A4  D005               	bra	u13100
 18867  0033A6                     u13107:
 18868  0033A6  CFF6 FFE9          	movff	tblptrl,fsr0l
 18869  0033AA  CFF7 FFEA          	movff	tblptrh,fsr0h
 18870  0033AE  50EF               	movf	indf0,w,c
 18871  0033B0                     u13100:
 18872  0033B0  0900               	iorlw	0
 18873  0033B2  E002 EF32  F013    	bnz	l8627
 18874                           
 18875                           ;tcpv4.c: 998: {
 18876                           ;tcpv4.c: 1000: currentTCB->flags = 0x04U;
 18877  0033B8  0E35               	movlw	53
 18878  0033BA  0100               	movlb	0	; () banked
 18879  0033BC  25FE               	addwf	_currentTCB& (0+255),w,b
 18880  0033BE  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18881  0033C0  0E00               	movlw	0
 18882  0033C2  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18883  0033C4  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18884  0033C6  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18885  0033CA  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18886  0033CE  0E00               	movlw	low (__smallconst shr (0+16))
 18887  0033D0  6EF8               	movwf	tblptru,c
 18888  0033D2  0E0F               	movlw	(high __ramtop+-1)
 18889  0033D4  64F7               	cpfsgt	tblptrh,c
 18890  0033D6  D004               	bra	u13127
 18891  0033D8  0E04               	movlw	4
 18892  0033DA  6EF5               	movwf	tablat,c
 18893  0033DC  000C               	tblwt		*
 18894  0033DE  D006               	bra	u13120
 18895  0033E0                     u13127:
 18896  0033E0  CFF6 FFE9          	movff	tblptrl,fsr0l
 18897  0033E4  CFF7 FFEA          	movff	tblptrh,fsr0h
 18898  0033E8  0E04               	movlw	4
 18899  0033EA  6EEF               	movwf	indf0,c
 18900  0033EC                     u13120:
 18901                           
 18902                           ;tcpv4.c: 1001: if(TCP_Snd(currentTCB))
 18903  0033EC  C0FE  F058         	movff	_currentTCB,TCP_Snd@tcbPtr
 18904  0033F0  C0FF  F059         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 18905  0033F4  EC11  F01D         	call	_TCP_Snd	;wreg free
 18906  0033F8  EF72  F00D         	goto	L10
 18907  0033FC                     l8713:
 18908  0033FC  0100               	movlb	0	; () banked
 18909  0033FE  51D2               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 18910                           
 18911                           ; Switch size 1, requested type "speed"
 18912                           ; Number of cases is 7, Range of values is 0 to 12
 18913                           ; switch strategies available:
 18914                           ; Name         Instructions Cycles
 18915                           ; simple_byte           22    12 (average)
 18916                           ;	Chosen strategy is simple_byte
 18917  003400  E101 D693          	bz	l8685
 18918  003404  0A04               	xorlw	4	; case 4
 18919  003406  E102 EFE0  F015    	bz	l8653
 18920  00340C  0A02               	xorlw	2	; case 6
 18921  00340E  E101 D6A7          	bz	l8691
 18922  003412  0A01               	xorlw	1	; case 7
 18923  003414  E101 D6A4          	bz	l8691
 18924  003418  0A0E               	xorlw	14	; case 9
 18925  00341A  E102 EF41  F00A    	bz	l1293
 18926  003420  0A03               	xorlw	3	; case 10
 18927  003422  E102 EF41  F00A    	bz	l1293
 18928  003428  0A06               	xorlw	6	; case 12
 18929  00342A  E0AB               	bz	l8699
 18930  00342C  D2C3               	goto	l8821
 18931  00342E                     l8715:
 18932                           
 18933                           ; BSR set to: 0
 18934                           ;tcpv4.c: 1016: ;
 18935                           ;tcpv4.c: 1017: currentTCB->flags = 0x10U;
 18936  00342E  0E35               	movlw	53
 18937  003430  25FE               	addwf	_currentTCB& (0+255),w,b
 18938  003432  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18939  003434  0E00               	movlw	0
 18940  003436  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18941  003438  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18942  00343A  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18943  00343E  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18944  003442  0E00               	movlw	low (__smallconst shr (0+16))
 18945  003444  6EF8               	movwf	tblptru,c
 18946  003446  0E0F               	movlw	(high __ramtop+-1)
 18947  003448  64F7               	cpfsgt	tblptrh,c
 18948  00344A  D004               	bra	u13147
 18949  00344C  0E10               	movlw	16
 18950  00344E  6EF5               	movwf	tablat,c
 18951  003450  000C               	tblwt		*
 18952  003452  D006               	bra	u13140
 18953  003454                     u13147:
 18954  003454  CFF6 FFE9          	movff	tblptrl,fsr0l
 18955  003458  CFF7 FFEA          	movff	tblptrh,fsr0h
 18956  00345C  0E10               	movlw	16
 18957  00345E  6EEF               	movwf	indf0,c
 18958  003460                     u13140:
 18959                           
 18960                           ;tcpv4.c: 1018: if(TCP_Snd(currentTCB))
 18961  003460  C0FE  F058         	movff	_currentTCB,TCP_Snd@tcbPtr
 18962  003464  C0FF  F059         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 18963  003468  EC11  F01D         	call	_TCP_Snd	;wreg free
 18964  00346C  0900               	iorlw	0
 18965  00346E  E101 D2A1          	bz	l8821
 18966                           
 18967                           ; BSR set to: 0
 18968                           ;tcpv4.c: 1019: {
 18969                           ;tcpv4.c: 1020: nextState = CLOSING;
 18970  003472  0E08               	movlw	8
 18971  003474  D05C               	goto	L14
 18972  003476                     l8721:
 18973                           
 18974                           ; BSR set to: 0
 18975                           ;tcpv4.c: 1024: ;
 18976                           ;tcpv4.c: 1026: currentTCB->timeout = ((unsigned long)1*2);
 18977  003476  0E30               	movlw	48
 18978  003478  25FE               	addwf	_currentTCB& (0+255),w,b
 18979  00347A  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18980  00347C  0E00               	movlw	0
 18981  00347E  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18982  003480  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18983  003482  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18984  003486  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18985  00348A  0E00               	movlw	low (__smallconst shr (0+16))
 18986  00348C  6EF8               	movwf	tblptru,c
 18987  00348E  0E0F               	movlw	(high __ramtop+-1)
 18988  003490  64F7               	cpfsgt	tblptrh,c
 18989  003492  D006               	bra	u13167
 18990  003494  0E02               	movlw	2
 18991  003496  6EF5               	movwf	tablat,c
 18992  003498  000D               	tblwt		*+
 18993  00349A  6AF5               	clrf	tablat,c
 18994  00349C  000C               	tblwt		*
 18995  00349E  D007               	bra	u13160
 18996  0034A0                     u13167:
 18997  0034A0  CFF6 FFE9          	movff	tblptrl,fsr0l
 18998  0034A4  CFF7 FFEA          	movff	tblptrh,fsr0h
 18999  0034A8  0E02               	movlw	2
 19000  0034AA  6EEE               	movwf	postinc0,c
 19001  0034AC  6AEF               	clrf	indf0,c
 19002  0034AE                     u13160:
 19003                           
 19004                           ;tcpv4.c: 1027: currentTCB->timeoutsCount = 1;
 19005  0034AE  0E34               	movlw	52
 19006  0034B0  0100               	movlb	0	; () banked
 19007  0034B2  25FE               	addwf	_currentTCB& (0+255),w,b
 19008  0034B4  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19009  0034B6  0E00               	movlw	0
 19010  0034B8  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19011  0034BA  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19012  0034BC  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19013  0034C0  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19014  0034C4  0E00               	movlw	low (__smallconst shr (0+16))
 19015  0034C6  6EF8               	movwf	tblptru,c
 19016  0034C8  0E0F               	movlw	(high __ramtop+-1)
 19017  0034CA  64F7               	cpfsgt	tblptrh,c
 19018  0034CC  D004               	bra	u13177
 19019  0034CE  0E01               	movlw	1
 19020  0034D0  6EF5               	movwf	tablat,c
 19021  0034D2  000C               	tblwt		*
 19022  0034D4  D006               	bra	u13170
 19023  0034D6                     u13177:
 19024  0034D6  CFF6 FFE9          	movff	tblptrl,fsr0l
 19025  0034DA  CFF7 FFEA          	movff	tblptrh,fsr0h
 19026  0034DE  0E01               	movlw	1
 19027  0034E0  6EEF               	movwf	indf0,c
 19028  0034E2                     u13170:
 19029                           
 19030                           ;tcpv4.c: 1028: nextState = FIN_WAIT_2;
 19031  0034E2  0E06               	movlw	6
 19032  0034E4  EF92  F014         	goto	L18
 19033  0034E8                     l8725:
 19034                           
 19035                           ; BSR set to: 0
 19036                           ;tcpv4.c: 1031: ;
 19037                           ;tcpv4.c: 1032: currentTCB->flags = 0x10U;
 19038  0034E8  0E35               	movlw	53
 19039  0034EA  25FE               	addwf	_currentTCB& (0+255),w,b
 19040  0034EC  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19041  0034EE  0E00               	movlw	0
 19042  0034F0  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19043  0034F2  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19044  0034F4  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19045  0034F8  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19046  0034FC  0E00               	movlw	low (__smallconst shr (0+16))
 19047  0034FE  6EF8               	movwf	tblptru,c
 19048  003500  0E0F               	movlw	(high __ramtop+-1)
 19049  003502  64F7               	cpfsgt	tblptrh,c
 19050  003504  D004               	bra	u13187
 19051  003506  0E10               	movlw	16
 19052  003508  6EF5               	movwf	tablat,c
 19053  00350A  000C               	tblwt		*
 19054  00350C  D006               	bra	u13180
 19055  00350E                     u13187:
 19056  00350E  CFF6 FFE9          	movff	tblptrl,fsr0l
 19057  003512  CFF7 FFEA          	movff	tblptrh,fsr0h
 19058  003516  0E10               	movlw	16
 19059  003518  6EEF               	movwf	indf0,c
 19060  00351A                     u13180:
 19061                           
 19062                           ;tcpv4.c: 1033: if(TCP_Snd(currentTCB))
 19063  00351A  C0FE  F058         	movff	_currentTCB,TCP_Snd@tcbPtr
 19064  00351E  C0FF  F059         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 19065  003522  EC11  F01D         	call	_TCP_Snd	;wreg free
 19066  003526  0900               	iorlw	0
 19067  003528  E101 D244          	bz	l8821
 19068  00352C                     l8729:
 19069                           
 19070                           ; BSR set to: 0
 19071                           ;tcpv4.c: 1034: {
 19072                           ;tcpv4.c: 1035: nextState = TIME_WAIT;
 19073  00352C  0E0A               	movlw	10
 19074  00352E                     L14:
 19075  00352E  6FD3               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 19076  003530  D241               	goto	l8821
 19077  003532                     l8731:
 19078                           
 19079                           ; BSR set to: 0
 19080                           ;tcpv4.c: 1039: ;
 19081                           ;tcpv4.c: 1040: if (currentTCB->timeoutsCount)
 19082  003532  0E34               	movlw	52
 19083  003534  25FE               	addwf	_currentTCB& (0+255),w,b
 19084  003536  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19085  003538  0E00               	movlw	0
 19086  00353A  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19087  00353C  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19088  00353E  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19089  003542  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19090  003546  0E00               	movlw	low (__smallconst shr (0+16))
 19091  003548  6EF8               	movwf	tblptru,c
 19092  00354A  0E0F               	movlw	(high __ramtop+-1)
 19093  00354C  64F7               	cpfsgt	tblptrh,c
 19094  00354E  D003               	bra	u13207
 19095  003550  0008               	tblrd		*
 19096  003552  50F5               	movf	tablat,w,c
 19097  003554  D005               	bra	u13200
 19098  003556                     u13207:
 19099  003556  CFF6 FFE9          	movff	tblptrl,fsr0l
 19100  00355A  CFF7 FFEA          	movff	tblptrh,fsr0h
 19101  00355E  50EF               	movf	indf0,w,c
 19102  003560                     u13200:
 19103  003560  0900               	iorlw	0
 19104  003562  E002 EF32  F013    	bnz	l8627
 19105                           
 19106                           ;tcpv4.c: 1044: {
 19107                           ;tcpv4.c: 1046: currentTCB->flags = 0x04U;
 19108  003568  0E35               	movlw	53
 19109  00356A  0100               	movlb	0	; () banked
 19110  00356C  25FE               	addwf	_currentTCB& (0+255),w,b
 19111  00356E  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19112  003570  0E00               	movlw	0
 19113  003572  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19114  003574  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19115  003576  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19116  00357A  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19117  00357E  0E00               	movlw	low (__smallconst shr (0+16))
 19118  003580  6EF8               	movwf	tblptru,c
 19119  003582  0E0F               	movlw	(high __ramtop+-1)
 19120  003584  64F7               	cpfsgt	tblptrh,c
 19121  003586  D004               	bra	u13227
 19122  003588  0E04               	movlw	4
 19123  00358A  6EF5               	movwf	tablat,c
 19124  00358C  000C               	tblwt		*
 19125  00358E  D006               	bra	u13220
 19126  003590                     u13227:
 19127  003590  CFF6 FFE9          	movff	tblptrl,fsr0l
 19128  003594  CFF7 FFEA          	movff	tblptrh,fsr0h
 19129  003598  0E04               	movlw	4
 19130  00359A  6EEF               	movwf	indf0,c
 19131  00359C                     u13220:
 19132                           
 19133                           ;tcpv4.c: 1047: if(TCP_Snd(currentTCB))
 19134  00359C  C0FE  F058         	movff	_currentTCB,TCP_Snd@tcbPtr
 19135  0035A0  C0FF  F059         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 19136  0035A4  EC11  F01D         	call	_TCP_Snd	;wreg free
 19137  0035A8  EF72  F00D         	goto	L10
 19138  0035AC                     l8745:
 19139  0035AC  0100               	movlb	0	; () banked
 19140  0035AE  51D2               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 19141                           
 19142                           ; Switch size 1, requested type "speed"
 19143                           ; Number of cases is 4, Range of values is 4 to 12
 19144                           ; switch strategies available:
 19145                           ; Name         Instructions Cycles
 19146                           ; simple_byte           13     7 (average)
 19147                           ;	Chosen strategy is simple_byte
 19148  0035B0  0A04               	xorlw	4	; case 4
 19149  0035B2  E101 D760          	bz	l8721
 19150  0035B6  0A02               	xorlw	2	; case 6
 19151  0035B8  E101 D739          	bz	l8715
 19152  0035BC  0A01               	xorlw	1	; case 7
 19153  0035BE  E094               	bz	l8725
 19154  0035C0  0A0B               	xorlw	11	; case 12
 19155  0035C2  E0B7               	bz	l8731
 19156  0035C4  D1F7               	goto	l8821
 19157  0035C6                     l8747:
 19158                           
 19159                           ; BSR set to: 0
 19160                           ;tcpv4.c: 1062: ;
 19161                           ;tcpv4.c: 1063: if(TCP_Snd(currentTCB))
 19162  0035C6  C0FE  F058         	movff	_currentTCB,TCP_Snd@tcbPtr
 19163  0035CA  C0FF  F059         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 19164  0035CE  EC11  F01D         	call	_TCP_Snd	;wreg free
 19165  0035D2  D7A9               	goto	L15
 19166  0035D4                     l8751:
 19167                           
 19168                           ; BSR set to: 0
 19169                           ;tcpv4.c: 1069: ;
 19170                           ;tcpv4.c: 1070: if (currentTCB->timeoutsCount)
 19171  0035D4  0E34               	movlw	52
 19172  0035D6  25FE               	addwf	_currentTCB& (0+255),w,b
 19173  0035D8  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19174  0035DA  0E00               	movlw	0
 19175  0035DC  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19176  0035DE  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19177  0035E0  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19178  0035E4  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19179  0035E8  0E00               	movlw	low (__smallconst shr (0+16))
 19180  0035EA  6EF8               	movwf	tblptru,c
 19181  0035EC  0E0F               	movlw	(high __ramtop+-1)
 19182  0035EE  64F7               	cpfsgt	tblptrh,c
 19183  0035F0  D003               	bra	u13257
 19184  0035F2  0008               	tblrd		*
 19185  0035F4  50F5               	movf	tablat,w,c
 19186  0035F6  D005               	bra	u13250
 19187  0035F8                     u13257:
 19188  0035F8  CFF6 FFE9          	movff	tblptrl,fsr0l
 19189  0035FC  CFF7 FFEA          	movff	tblptrh,fsr0h
 19190  003600  50EF               	movf	indf0,w,c
 19191  003602                     u13250:
 19192  003602  0900               	iorlw	0
 19193  003604  E002 EF32  F013    	bnz	l8627
 19194                           
 19195                           ;tcpv4.c: 1074: {
 19196                           ;tcpv4.c: 1076: currentTCB->flags = 0x04U;
 19197  00360A  0E35               	movlw	53
 19198  00360C  0100               	movlb	0	; () banked
 19199  00360E  25FE               	addwf	_currentTCB& (0+255),w,b
 19200  003610  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19201  003612  0E00               	movlw	0
 19202  003614  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19203  003616  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19204  003618  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19205  00361C  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19206  003620  0E00               	movlw	low (__smallconst shr (0+16))
 19207  003622  6EF8               	movwf	tblptru,c
 19208  003624  0E0F               	movlw	(high __ramtop+-1)
 19209  003626  64F7               	cpfsgt	tblptrh,c
 19210  003628  D004               	bra	u13277
 19211  00362A  0E04               	movlw	4
 19212  00362C  6EF5               	movwf	tablat,c
 19213  00362E  000C               	tblwt		*
 19214  003630  D006               	bra	u13270
 19215  003632                     u13277:
 19216  003632  CFF6 FFE9          	movff	tblptrl,fsr0l
 19217  003636  CFF7 FFEA          	movff	tblptrh,fsr0h
 19218  00363A  0E04               	movlw	4
 19219  00363C  6EEF               	movwf	indf0,c
 19220  00363E                     u13270:
 19221                           
 19222                           ;tcpv4.c: 1077: if(TCP_Snd(currentTCB))
 19223  00363E  C0FE  F058         	movff	_currentTCB,TCP_Snd@tcbPtr
 19224  003642  C0FF  F059         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 19225  003646  EC11  F01D         	call	_TCP_Snd	;wreg free
 19226  00364A  EF72  F00D         	goto	L10
 19227  00364E                     l8765:
 19228  00364E  0100               	movlb	0	; () banked
 19229  003650  51D2               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 19230                           
 19231                           ; Switch size 1, requested type "speed"
 19232                           ; Number of cases is 2, Range of values is 6 to 12
 19233                           ; switch strategies available:
 19234                           ; Name         Instructions Cycles
 19235                           ; simple_byte            7     4 (average)
 19236                           ;	Chosen strategy is simple_byte
 19237  003652  0A06               	xorlw	6	; case 6
 19238  003654  E0B8               	bz	l8747
 19239  003656  0A0A               	xorlw	10	; case 12
 19240  003658  E0BD               	bz	l8751
 19241  00365A  D1AC               	goto	l8821
 19242  00365C                     l8771:
 19243  00365C  0100               	movlb	0	; () banked
 19244  00365E  51D2               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 19245                           
 19246                           ; Switch size 1, requested type "speed"
 19247                           ; Number of cases is 1, Range of values is 4 to 4
 19248                           ; switch strategies available:
 19249                           ; Name         Instructions Cycles
 19250                           ; simple_byte            4     3 (average)
 19251                           ;	Chosen strategy is simple_byte
 19252  003660  0A04               	xorlw	4	; case 4
 19253  003662  E101 D763          	bz	l8729
 19254  003666  D1A6               	goto	l8821
 19255  003668                     l8773:
 19256                           
 19257                           ; BSR set to: 0
 19258                           ;tcpv4.c: 1107: case RCV_ACK:
 19259                           ;tcpv4.c: 1108: if ((currentTCB->destIP == receivedRemoteAddress) &&
 19260                           ;tcpv4.c: 1109: (currentTCB->destPort == tcpHeader.sourcePort))
 19261  003668  0E02               	movlw	2
 19262  00366A  25FE               	addwf	_currentTCB& (0+255),w,b
 19263  00366C  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19264  00366E  0E00               	movlw	0
 19265  003670  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19266  003672  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19267  003674  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19268  003678  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19269  00367C  0E00               	movlw	low (__smallconst shr (0+16))
 19270  00367E  6EF8               	movwf	tblptru,c
 19271  003680  0E0F               	movlw	(high __ramtop+-1)
 19272  003682  64F7               	cpfsgt	tblptrh,c
 19273  003684  D00D               	bra	u13297
 19274  003686  0009               	tblrd		*+
 19275  003688  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 19276  00368C  0009               	tblrd		*+
 19277  00368E  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 19278  003692  0009               	tblrd		*+
 19279  003694  CFF5 F0C7          	movff	tablat,??_TCP_FiniteStateMachine+4
 19280  003698  0009               	tblrd		*+
 19281  00369A  CFF5 F0C8          	movff	tablat,??_TCP_FiniteStateMachine+5
 19282  00369E  D00C               	bra	u13290
 19283  0036A0                     u13297:
 19284  0036A0  CFF6 FFE9          	movff	tblptrl,fsr0l
 19285  0036A4  CFF7 FFEA          	movff	tblptrh,fsr0h
 19286  0036A8  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 19287  0036AC  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 19288  0036B0  CFEE F0C7          	movff	postinc0,??_TCP_FiniteStateMachine+4
 19289  0036B4  CFEE F0C8          	movff	postinc0,??_TCP_FiniteStateMachine+5
 19290  0036B8                     u13290:
 19291  0036B8  0101               	movlb	1	; () banked
 19292  0036BA  5196               	movf	_receivedRemoteAddress& (0+255),w,b
 19293  0036BC  0100               	movlb	0	; () banked
 19294  0036BE  19C5               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 19295  0036C0  E10F               	bnz	u13301
 19296  0036C2  0101               	movlb	1	; () banked
 19297  0036C4  5197               	movf	(_receivedRemoteAddress+1)& (0+255),w,b
 19298  0036C6  0100               	movlb	0	; () banked
 19299  0036C8  19C6               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 19300  0036CA  E10A               	bnz	u13301
 19301  0036CC  0101               	movlb	1	; () banked
 19302  0036CE  5198               	movf	(_receivedRemoteAddress+2)& (0+255),w,b
 19303  0036D0  0100               	movlb	0	; () banked
 19304  0036D2  19C7               	xorwf	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 19305  0036D4  E105               	bnz	u13301
 19306  0036D6  0101               	movlb	1	; () banked
 19307  0036D8  5199               	movf	(_receivedRemoteAddress+3)& (0+255),w,b
 19308  0036DA  0100               	movlb	0	; () banked
 19309  0036DC  19C8               	xorwf	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 19310  0036DE  A4D8               	btfss	status,2,c
 19311  0036E0                     u13301:
 19312  0036E0  D169               	goto	l8821
 19313                           
 19314                           ; BSR set to: 0
 19315  0036E2  0E06               	movlw	6
 19316  0036E4  25FE               	addwf	_currentTCB& (0+255),w,b
 19317  0036E6  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19318  0036E8  0E00               	movlw	0
 19319  0036EA  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19320  0036EC  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19321  0036EE  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19322  0036F2  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19323  0036F6  0E00               	movlw	low (__smallconst shr (0+16))
 19324  0036F8  6EF8               	movwf	tblptru,c
 19325  0036FA  0E0F               	movlw	(high __ramtop+-1)
 19326  0036FC  64F7               	cpfsgt	tblptrh,c
 19327  0036FE  D007               	bra	u13317
 19328  003700  0009               	tblrd		*+
 19329  003702  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 19330  003706  0009               	tblrd		*+
 19331  003708  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 19332  00370C  D008               	bra	u13310
 19333  00370E                     u13317:
 19334  00370E  CFF6 FFE9          	movff	tblptrl,fsr0l
 19335  003712  CFF7 FFEA          	movff	tblptrh,fsr0h
 19336  003716  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 19337  00371A  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 19338  00371E                     u13310:
 19339  00371E  0101               	movlb	1	; () banked
 19340  003720  51BC               	movf	_tcpHeader& (0+255),w,b
 19341  003722  0100               	movlb	0	; () banked
 19342  003724  19C5               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 19343  003726  E105               	bnz	u13321
 19344  003728  0101               	movlb	1	; () banked
 19345  00372A  51BD               	movf	(_tcpHeader+1)& (0+255),w,b
 19346  00372C  0100               	movlb	0	; () banked
 19347  00372E  19C6               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 19348  003730  D13E               	goto	L16
 19349  003732                     u13321:
 19350  003732  D140               	goto	l8821
 19351  003734                     l8781:
 19352                           
 19353                           ; BSR set to: 0
 19354                           ;tcpv4.c: 1117: if (currentTCB->timeoutsCount)
 19355  003734  0E34               	movlw	52
 19356  003736  25FE               	addwf	_currentTCB& (0+255),w,b
 19357  003738  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19358  00373A  0E00               	movlw	0
 19359  00373C  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19360  00373E  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19361  003740  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19362  003744  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19363  003748  0E00               	movlw	low (__smallconst shr (0+16))
 19364  00374A  6EF8               	movwf	tblptru,c
 19365  00374C  0E0F               	movlw	(high __ramtop+-1)
 19366  00374E  64F7               	cpfsgt	tblptrh,c
 19367  003750  D003               	bra	u13337
 19368  003752  0008               	tblrd		*
 19369  003754  50F5               	movf	tablat,w,c
 19370  003756  D005               	bra	u13330
 19371  003758                     u13337:
 19372  003758  CFF6 FFE9          	movff	tblptrl,fsr0l
 19373  00375C  CFF7 FFEA          	movff	tblptrh,fsr0h
 19374  003760  50EF               	movf	indf0,w,c
 19375  003762                     u13330:
 19376  003762  0900               	iorlw	0
 19377  003764  E002 EF32  F013    	bnz	l8627
 19378                           
 19379                           ;tcpv4.c: 1121: {
 19380                           ;tcpv4.c: 1123: currentTCB->flags = 0x04U;
 19381  00376A  0E35               	movlw	53
 19382  00376C  0100               	movlb	0	; () banked
 19383  00376E  25FE               	addwf	_currentTCB& (0+255),w,b
 19384  003770  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19385  003772  0E00               	movlw	0
 19386  003774  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19387  003776  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19388  003778  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19389  00377C  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19390  003780  0E00               	movlw	low (__smallconst shr (0+16))
 19391  003782  6EF8               	movwf	tblptru,c
 19392  003784  0E0F               	movlw	(high __ramtop+-1)
 19393  003786  64F7               	cpfsgt	tblptrh,c
 19394  003788  D004               	bra	u13357
 19395  00378A  0E04               	movlw	4
 19396  00378C  6EF5               	movwf	tablat,c
 19397  00378E  000C               	tblwt		*
 19398  003790  D006               	bra	u13350
 19399  003792                     u13357:
 19400  003792  CFF6 FFE9          	movff	tblptrl,fsr0l
 19401  003796  CFF7 FFEA          	movff	tblptrh,fsr0h
 19402  00379A  0E04               	movlw	4
 19403  00379C  6EEF               	movwf	indf0,c
 19404  00379E                     u13350:
 19405                           
 19406                           ;tcpv4.c: 1124: if(TCP_Snd(currentTCB))
 19407  00379E  C0FE  F058         	movff	_currentTCB,TCP_Snd@tcbPtr
 19408  0037A2  C0FF  F059         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 19409  0037A6  EC11  F01D         	call	_TCP_Snd	;wreg free
 19410  0037AA  EF72  F00D         	goto	L10
 19411  0037AE                     l8795:
 19412  0037AE  0100               	movlb	0	; () banked
 19413  0037B0  51D2               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 19414                           
 19415                           ; Switch size 1, requested type "speed"
 19416                           ; Number of cases is 3, Range of values is 4 to 12
 19417                           ; switch strategies available:
 19418                           ; Name         Instructions Cycles
 19419                           ; simple_byte           10     6 (average)
 19420                           ;	Chosen strategy is simple_byte
 19421  0037B2  0A04               	xorlw	4	; case 4
 19422  0037B4  E101 D758          	bz	l8773
 19423  0037B8  0A03               	xorlw	3	; case 7
 19424  0037BA  E101 D755          	bz	l8773
 19425  0037BE  0A0B               	xorlw	11	; case 12
 19426  0037C0  E0B9               	bz	l8781
 19427  0037C2  D0F8               	goto	l8821
 19428  0037C4                     l8799:
 19429                           
 19430                           ; BSR set to: 0
 19431                           ;tcpv4.c: 1143: ;
 19432                           ;tcpv4.c: 1145: currentTCB->timeout = ((unsigned long)1*2);
 19433  0037C4  0E30               	movlw	48
 19434  0037C6  25FE               	addwf	_currentTCB& (0+255),w,b
 19435  0037C8  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19436  0037CA  0E00               	movlw	0
 19437  0037CC  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19438  0037CE  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19439  0037D0  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19440  0037D4  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19441  0037D8  0E00               	movlw	low (__smallconst shr (0+16))
 19442  0037DA  6EF8               	movwf	tblptru,c
 19443  0037DC  0E0F               	movlw	(high __ramtop+-1)
 19444  0037DE  64F7               	cpfsgt	tblptrh,c
 19445  0037E0  D006               	bra	u13377
 19446  0037E2  0E02               	movlw	2
 19447  0037E4  6EF5               	movwf	tablat,c
 19448  0037E6  000D               	tblwt		*+
 19449  0037E8  6AF5               	clrf	tablat,c
 19450  0037EA  000C               	tblwt		*
 19451  0037EC  D007               	bra	u13370
 19452  0037EE                     u13377:
 19453  0037EE  CFF6 FFE9          	movff	tblptrl,fsr0l
 19454  0037F2  CFF7 FFEA          	movff	tblptrh,fsr0h
 19455  0037F6  0E02               	movlw	2
 19456  0037F8  6EEE               	movwf	postinc0,c
 19457  0037FA  6AEF               	clrf	indf0,c
 19458  0037FC                     u13370:
 19459                           
 19460                           ;tcpv4.c: 1146: currentTCB->timeoutReloadValue = ((unsigned long)1*2);
 19461  0037FC  0E32               	movlw	50
 19462  0037FE  0100               	movlb	0	; () banked
 19463  003800  25FE               	addwf	_currentTCB& (0+255),w,b
 19464  003802  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19465  003804  0E00               	movlw	0
 19466  003806  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19467  003808  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19468  00380A  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19469  00380E  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19470  003812  0E00               	movlw	low (__smallconst shr (0+16))
 19471  003814  6EF8               	movwf	tblptru,c
 19472  003816  0E0F               	movlw	(high __ramtop+-1)
 19473  003818  64F7               	cpfsgt	tblptrh,c
 19474  00381A  D006               	bra	u13387
 19475  00381C  0E02               	movlw	2
 19476  00381E  6EF5               	movwf	tablat,c
 19477  003820  000D               	tblwt		*+
 19478  003822  6AF5               	clrf	tablat,c
 19479  003824  000C               	tblwt		*
 19480  003826  D007               	bra	u13380
 19481  003828                     u13387:
 19482  003828  CFF6 FFE9          	movff	tblptrl,fsr0l
 19483  00382C  CFF7 FFEA          	movff	tblptrh,fsr0h
 19484  003830  0E02               	movlw	2
 19485  003832  6EEE               	movwf	postinc0,c
 19486  003834  6AEF               	clrf	indf0,c
 19487  003836                     u13380:
 19488                           
 19489                           ;tcpv4.c: 1147: currentTCB->timeoutsCount = (3u);
 19490  003836  0E34               	movlw	52
 19491  003838  0100               	movlb	0	; () banked
 19492  00383A  25FE               	addwf	_currentTCB& (0+255),w,b
 19493  00383C  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19494  00383E  0E00               	movlw	0
 19495  003840  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19496  003842  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19497  003844  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19498  003848  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19499  00384C  0E00               	movlw	low (__smallconst shr (0+16))
 19500  00384E  6EF8               	movwf	tblptru,c
 19501  003850  0E0F               	movlw	(high __ramtop+-1)
 19502  003852  64F7               	cpfsgt	tblptrh,c
 19503  003854  D004               	bra	u13397
 19504  003856  0E03               	movlw	3
 19505  003858  6EF5               	movwf	tablat,c
 19506  00385A  000C               	tblwt		*
 19507  00385C  D006               	bra	u13390
 19508  00385E                     u13397:
 19509  00385E  CFF6 FFE9          	movff	tblptrl,fsr0l
 19510  003862  CFF7 FFEA          	movff	tblptrh,fsr0h
 19511  003866  0E03               	movlw	3
 19512  003868  6EEF               	movwf	indf0,c
 19513  00386A                     u13390:
 19514                           
 19515                           ;tcpv4.c: 1148: currentTCB->flags = 0x02U;
 19516  00386A  0E35               	movlw	53
 19517  00386C  0100               	movlb	0	; () banked
 19518  00386E  25FE               	addwf	_currentTCB& (0+255),w,b
 19519  003870  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19520  003872  0E00               	movlw	0
 19521  003874  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19522  003876  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19523  003878  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19524  00387C  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19525  003880  0E00               	movlw	low (__smallconst shr (0+16))
 19526  003882  6EF8               	movwf	tblptru,c
 19527  003884  0E0F               	movlw	(high __ramtop+-1)
 19528  003886  64F7               	cpfsgt	tblptrh,c
 19529  003888  D004               	bra	u13407
 19530  00388A  0E02               	movlw	2
 19531  00388C  6EF5               	movwf	tablat,c
 19532  00388E  000C               	tblwt		*
 19533  003890  D006               	bra	u13400
 19534  003892                     u13407:
 19535  003892  CFF6 FFE9          	movff	tblptrl,fsr0l
 19536  003896  CFF7 FFEA          	movff	tblptrh,fsr0h
 19537  00389A  0E02               	movlw	2
 19538  00389C  6EEF               	movwf	indf0,c
 19539  00389E                     u13400:
 19540                           
 19541                           ;tcpv4.c: 1149: TCP_Snd(currentTCB);
 19542  00389E  C0FE  F058         	movff	_currentTCB,TCP_Snd@tcbPtr
 19543  0038A2  C0FF  F059         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 19544  0038A6  EC11  F01D         	call	_TCP_Snd	;wreg free
 19545                           
 19546                           ; BSR set to: 0
 19547                           ;tcpv4.c: 1150: nextState = SYN_SENT;
 19548  0038AA  0E02               	movlw	2
 19549  0038AC  6FD3               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 19550                           
 19551                           ; BSR set to: 0
 19552                           ;tcpv4.c: 1151: ret = 1;
 19553  0038AE  0E01               	movlw	1
 19554  0038B0  6FCF               	movwf	TCP_FiniteStateMachine@ret& (0+255),b
 19555                           
 19556                           ;tcpv4.c: 1152: break;
 19557  0038B2  D080               	goto	l8821
 19558  0038B4                     l8807:
 19559                           
 19560                           ; BSR set to: 0
 19561                           ;tcpv4.c: 1154: ;
 19562                           ;tcpv4.c: 1155: currentTCB->destIP = 0;
 19563  0038B4  0E02               	movlw	2
 19564  0038B6  25FE               	addwf	_currentTCB& (0+255),w,b
 19565  0038B8  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19566  0038BA  0E00               	movlw	0
 19567  0038BC  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19568  0038BE  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19569  0038C0  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19570  0038C4  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19571  0038C8  0E00               	movlw	low (__smallconst shr (0+16))
 19572  0038CA  6EF8               	movwf	tblptru,c
 19573  0038CC  0E0F               	movlw	(high __ramtop+-1)
 19574  0038CE  64F7               	cpfsgt	tblptrh,c
 19575  0038D0  D009               	bra	u13417
 19576  0038D2  6AF5               	clrf	tablat,c
 19577  0038D4  000D               	tblwt		*+
 19578  0038D6  6AF5               	clrf	tablat,c
 19579  0038D8  000D               	tblwt		*+
 19580  0038DA  6AF5               	clrf	tablat,c
 19581  0038DC  000D               	tblwt		*+
 19582  0038DE  6AF5               	clrf	tablat,c
 19583  0038E0  000C               	tblwt		*
 19584  0038E2  D008               	bra	u13410
 19585  0038E4                     u13417:
 19586  0038E4  CFF6 FFE9          	movff	tblptrl,fsr0l
 19587  0038E8  CFF7 FFEA          	movff	tblptrh,fsr0h
 19588  0038EC  6AEE               	clrf	postinc0,c
 19589  0038EE  6AEE               	clrf	postinc0,c
 19590  0038F0  6AEE               	clrf	postinc0,c
 19591  0038F2  6AEF               	clrf	indf0,c
 19592  0038F4                     u13410:
 19593                           
 19594                           ;tcpv4.c: 1156: currentTCB->destPort = 0;
 19595  0038F4  0E06               	movlw	6
 19596  0038F6  0100               	movlb	0	; () banked
 19597  0038F8  25FE               	addwf	_currentTCB& (0+255),w,b
 19598  0038FA  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19599  0038FC  0E00               	movlw	0
 19600  0038FE  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19601  003900  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19602  003902  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19603  003906  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19604  00390A  0E00               	movlw	low (__smallconst shr (0+16))
 19605  00390C  6EF8               	movwf	tblptru,c
 19606  00390E  0E0F               	movlw	(high __ramtop+-1)
 19607  003910  64F7               	cpfsgt	tblptrh,c
 19608  003912  D005               	bra	u13427
 19609  003914  6AF5               	clrf	tablat,c
 19610  003916  000D               	tblwt		*+
 19611  003918  6AF5               	clrf	tablat,c
 19612  00391A  000C               	tblwt		*
 19613  00391C  D006               	bra	u13420
 19614  00391E                     u13427:
 19615  00391E  CFF6 FFE9          	movff	tblptrl,fsr0l
 19616  003922  CFF7 FFEA          	movff	tblptrh,fsr0h
 19617  003926  6AEE               	clrf	postinc0,c
 19618  003928  6AEF               	clrf	indf0,c
 19619  00392A                     u13420:
 19620                           
 19621                           ;tcpv4.c: 1157: nextState = LISTEN;
 19622  00392A  0E01               	movlw	1
 19623  00392C  0100               	movlb	0	; () banked
 19624  00392E  D7BE               	goto	L17
 19625  003930                     l8815:
 19626  003930  0100               	movlb	0	; () banked
 19627  003932  51D2               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 19628                           
 19629                           ; Switch size 1, requested type "speed"
 19630                           ; Number of cases is 2, Range of values is 1 to 2
 19631                           ; switch strategies available:
 19632                           ; Name         Instructions Cycles
 19633                           ; simple_byte            7     4 (average)
 19634                           ;	Chosen strategy is simple_byte
 19635  003934  0A01               	xorlw	1	; case 1
 19636  003936  E101 D745          	bz	l8799
 19637  00393A  0A03               	xorlw	3	; case 2
 19638  00393C  E0BB               	bz	l8807
 19639  00393E  D03A               	goto	l8821
 19640  003940                     l8819:
 19641                           
 19642                           ; BSR set to: 0
 19643  003940  0E2A               	movlw	42
 19644  003942  25FE               	addwf	_currentTCB& (0+255),w,b
 19645  003944  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19646  003946  0E00               	movlw	0
 19647  003948  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19648  00394A  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19649  00394C  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19650  003950  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19651  003954  0E00               	movlw	low (__smallconst shr (0+16))
 19652  003956  6EF8               	movwf	tblptru,c
 19653  003958  0E0F               	movlw	(high __ramtop+-1)
 19654  00395A  64F7               	cpfsgt	tblptrh,c
 19655  00395C  D003               	bra	u13437
 19656  00395E  0008               	tblrd		*
 19657  003960  50F5               	movf	tablat,w,c
 19658  003962  D005               	bra	u13430
 19659  003964                     u13437:
 19660  003964  CFF6 FFE9          	movff	tblptrl,fsr0l
 19661  003968  CFF7 FFEA          	movff	tblptrh,fsr0h
 19662  00396C  50EF               	movf	indf0,w,c
 19663  00396E                     u13430:
 19664                           
 19665                           ; Switch size 1, requested type "speed"
 19666                           ; Number of cases is 11, Range of values is 0 to 10
 19667                           ; switch strategies available:
 19668                           ; Name         Instructions Cycles
 19669                           ; simple_byte           34    18 (average)
 19670                           ;	Chosen strategy is simple_byte
 19671  00396E  0A00               	xorlw	0	; case 0
 19672  003970  E0DF               	bz	l8815
 19673  003972  0A01               	xorlw	1	; case 1
 19674  003974  E102 EF4B  F00A    	bz	l8503
 19675  00397A  0A03               	xorlw	3	; case 2
 19676  00397C  E102 EFFE  F00F    	bz	l8595
 19677  003982  0A01               	xorlw	1	; case 3
 19678  003984  E102 EFC9  F015    	bz	l8651
 19679  00398A  0A07               	xorlw	7	; case 4
 19680  00398C  E101 D536          	bz	l8713
 19681  003990  0A01               	xorlw	1	; case 5
 19682  003992  E101 D60B          	bz	l8745
 19683  003996  0A03               	xorlw	3	; case 6
 19684  003998  E101 D659          	bz	l8765
 19685  00399C  0A01               	xorlw	1	; case 7
 19686  00399E  E00A               	bz	l8821
 19687  0039A0  0A0F               	xorlw	15	; case 8
 19688  0039A2  E101 D65B          	bz	l8771
 19689  0039A6  0A01               	xorlw	1	; case 9
 19690  0039A8  E101 D701          	bz	l8795
 19691  0039AC  0A03               	xorlw	3	; case 10
 19692  0039AE                     L16:
 19693  0039AE  E102 EF41  F00A    	bz	l1293
 19694  0039B4                     l8821:
 19695                           
 19696                           ;tcpv4.c: 1167: currentTCB->connectionEvent = NOP;
 19697  0039B4  0E2B               	movlw	43
 19698  0039B6  0100               	movlb	0	; () banked
 19699  0039B8  25FE               	addwf	_currentTCB& (0+255),w,b
 19700  0039BA  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19701  0039BC  0E00               	movlw	0
 19702  0039BE  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19703  0039C0  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19704  0039C2  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19705  0039C6  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19706  0039CA  0E00               	movlw	low (__smallconst shr (0+16))
 19707  0039CC  6EF8               	movwf	tblptru,c
 19708  0039CE  0E0F               	movlw	(high __ramtop+-1)
 19709  0039D0  64F7               	cpfsgt	tblptrh,c
 19710  0039D2  D004               	bra	u13447
 19711  0039D4  0E0D               	movlw	13
 19712  0039D6  6EF5               	movwf	tablat,c
 19713  0039D8  000C               	tblwt		*
 19714  0039DA  D006               	bra	u13440
 19715  0039DC                     u13447:
 19716  0039DC  CFF6 FFE9          	movff	tblptrl,fsr0l
 19717  0039E0  CFF7 FFEA          	movff	tblptrh,fsr0h
 19718  0039E4  0E0D               	movlw	13
 19719  0039E6  6EEF               	movwf	indf0,c
 19720  0039E8                     u13440:
 19721                           
 19722                           ;tcpv4.c: 1168: currentTCB->fsmState = nextState;
 19723  0039E8  0E2A               	movlw	42
 19724  0039EA  0100               	movlb	0	; () banked
 19725  0039EC  25FE               	addwf	_currentTCB& (0+255),w,b
 19726  0039EE  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19727  0039F0  0E00               	movlw	0
 19728  0039F2  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19729  0039F4  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19730  0039F6  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19731  0039FA  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19732  0039FE  0E00               	movlw	low (__smallconst shr (0+16))
 19733  003A00  6EF8               	movwf	tblptru,c
 19734  003A02  0E0F               	movlw	(high __ramtop+-1)
 19735  003A04  64F7               	cpfsgt	tblptrh,c
 19736  003A06  D004               	bra	u13457
 19737  003A08  C0D3  FFF5         	movff	TCP_FiniteStateMachine@nextState,tablat
 19738  003A0C  000C               	tblwt		*
 19739  003A0E  D006               	bra	u13450
 19740  003A10                     u13457:
 19741  003A10  CFF6 FFE9          	movff	tblptrl,fsr0l
 19742  003A14  CFF7 FFEA          	movff	tblptrh,fsr0h
 19743  003A18  C0D3  FFEF         	movff	TCP_FiniteStateMachine@nextState,indf0
 19744  003A1C                     u13450:
 19745                           
 19746                           ;tcpv4.c: 1169: return ret;
 19747  003A1C  0100               	movlb	0	; () banked
 19748  003A1E  51CF               	movf	TCP_FiniteStateMachine@ret& (0+255),w,b
 19749                           
 19750                           ; BSR set to: 0
 19751  003A20  0012               	return		;funcret
 19752  003A22                     __end_of_TCP_FiniteStateMachine:
 19753                           	opt stack 0
 19754                           tosu	equ	0xFFF
 19755                           tosh	equ	0xFFE
 19756                           tosl	equ	0xFFD
 19757                           pclath	equ	0xFFA
 19758                           tblptru	equ	0xFF8
 19759                           tblptrh	equ	0xFF7
 19760                           tblptrl	equ	0xFF6
 19761                           tablat	equ	0xFF5
 19762                           prodh	equ	0xFF4
 19763                           prodl	equ	0xFF3
 19764                           intcon	equ	0xFF2
 19765                           intcon2	equ	0xFF1
 19766                           indf0	equ	0xFEF
 19767                           postinc0	equ	0xFEE
 19768                           fsr0h	equ	0xFEA
 19769                           fsr0l	equ	0xFE9
 19770                           wreg	equ	0xFE8
 19771                           indf1	equ	0xFE7
 19772                           postinc1	equ	0xFE6
 19773                           postdec1	equ	0xFE5
 19774                           plusw1	equ	0xFE3
 19775                           fsr1h	equ	0xFE2
 19776                           fsr1l	equ	0xFE1
 19777                           indf2	equ	0xFDF
 19778                           postinc2	equ	0xFDE
 19779                           postdec2	equ	0xFDD
 19780                           plusw2	equ	0xFDB
 19781                           fsr2h	equ	0xFDA
 19782                           fsr2l	equ	0xFD9
 19783                           status	equ	0xFD8
 19784                           
 19785 ;; *************** function _TCP_PayloadSave *****************
 19786 ;; Defined at:
 19787 ;;		line 310 in file "../../TCPIP Library/source/tcpv4.c"
 19788 ;; Parameters:    Size  Location     Type
 19789 ;;  len             2   89[COMRAM] unsigned int 
 19790 ;; Auto vars:     Size  Location     Type
 19791 ;;  buffer_size     2   97[BANK0 ] unsigned int 
 19792 ;;  ret             1    0        unsigned char 
 19793 ;; Return value:  Size  Location     Type
 19794 ;;                  1    wreg      unsigned char 
 19795 ;; Registers used:
 19796 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19797 ;; Tracked objects:
 19798 ;;		On entry : 0/1
 19799 ;;		On exit  : 0/0
 19800 ;;		Unchanged: 0/0
 19801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19802 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19803 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19804 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19805 ;;      Totals:         2      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19806 ;;Total ram usage:       17 bytes
 19807 ;; Hardware stack levels used:    1
 19808 ;; Hardware stack levels required when called:   10
 19809 ;; This function calls:
 19810 ;;		_ETH_ReadBlock
 19811 ;;		_TCP_Snd
 19812 ;; This function is called by:
 19813 ;;		_TCP_FiniteStateMachine
 19814 ;; This function uses a non-reentrant model
 19815 ;;
 19816                           
 19817                           	psect	text79
 19818  005AB0                     __ptext79:
 19819                           	opt stack 0
 19820  005AB0                     _TCP_PayloadSave:
 19821                           	opt stack 17
 19822                           
 19823                           ;tcpv4.c: 313: uint16_t buffer_size;
 19824                           ;tcpv4.c: 316: if (currentTCB->rxBufState == RX_BUFF_IN_USE)
 19825                           
 19826                           ; BSR set to: 0
 19827                           ;incstack = 0
 19828  005AB0  0E22               	movlw	34
 19829  005AB2  0100               	movlb	0	; () banked
 19830  005AB4  25FE               	addwf	_currentTCB& (0+255),w,b
 19831  005AB6  6FB4               	movwf	??_TCP_PayloadSave& (0+255),b
 19832  005AB8  0E00               	movlw	0
 19833  005ABA  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19834  005ABC  6FB5               	movwf	(??_TCP_PayloadSave+1)& (0+255),b
 19835  005ABE  C0B4  FFF6         	movff	??_TCP_PayloadSave,tblptrl
 19836  005AC2  C0B5  FFF7         	movff	??_TCP_PayloadSave+1,tblptrh
 19837  005AC6  0E00               	movlw	low (__smallconst shr (0+16))
 19838  005AC8  6EF8               	movwf	tblptru,c
 19839  005ACA  0E0F               	movlw	(high __ramtop+-1)
 19840  005ACC  64F7               	cpfsgt	tblptrh,c
 19841  005ACE  D003               	bra	u11287
 19842  005AD0  0008               	tblrd		*
 19843  005AD2  50F5               	movf	tablat,w,c
 19844  005AD4  D005               	bra	u11280
 19845  005AD6                     u11287:
 19846  005AD6  CFF6 FFE9          	movff	tblptrl,fsr0l
 19847  005ADA  CFF7 FFEA          	movff	tblptrh,fsr0h
 19848  005ADE  50EF               	movf	indf0,w,c
 19849  005AE0                     u11280:
 19850  005AE0  06E8               	decf	wreg,f,c
 19851  005AE2  A4D8               	btfss	status,2,c
 19852  005AE4  0012               	return	
 19853                           
 19854                           ;tcpv4.c: 317: {
 19855                           ;tcpv4.c: 319: if (currentTCB->localWnd >= len)
 19856  005AE6  0E1A               	movlw	26
 19857  005AE8  0100               	movlb	0	; () banked
 19858  005AEA  25FE               	addwf	_currentTCB& (0+255),w,b
 19859  005AEC  6FB4               	movwf	??_TCP_PayloadSave& (0+255),b
 19860  005AEE  0E00               	movlw	0
 19861  005AF0  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19862  005AF2  6FB5               	movwf	(??_TCP_PayloadSave+1)& (0+255),b
 19863  005AF4  C0B4  FFF6         	movff	??_TCP_PayloadSave,tblptrl
 19864  005AF8  C0B5  FFF7         	movff	??_TCP_PayloadSave+1,tblptrh
 19865  005AFC  0E00               	movlw	low (__smallconst shr (0+16))
 19866  005AFE  6EF8               	movwf	tblptru,c
 19867  005B00  0E0F               	movlw	(high __ramtop+-1)
 19868  005B02  64F7               	cpfsgt	tblptrh,c
 19869  005B04  D007               	bra	u11307
 19870  005B06  0009               	tblrd		*+
 19871  005B08  CFF5 F0B6          	movff	tablat,??_TCP_PayloadSave+2
 19872  005B0C  0009               	tblrd		*+
 19873  005B0E  CFF5 F0B7          	movff	tablat,??_TCP_PayloadSave+3
 19874  005B12  D008               	bra	u11300
 19875  005B14                     u11307:
 19876  005B14  CFF6 FFE9          	movff	tblptrl,fsr0l
 19877  005B18  CFF7 FFEA          	movff	tblptrh,fsr0h
 19878  005B1C  CFEE F0B6          	movff	postinc0,??_TCP_PayloadSave+2
 19879  005B20  CFEE F0B7          	movff	postinc0,??_TCP_PayloadSave+3
 19880  005B24                     u11300:
 19881  005B24  505A               	movf	TCP_PayloadSave@len,w,c
 19882  005B26  0100               	movlb	0	; () banked
 19883  005B28  5DB6               	subwf	(??_TCP_PayloadSave+2)& (0+255),w,b
 19884  005B2A  505B               	movf	TCP_PayloadSave@len+1,w,c
 19885  005B2C  59B7               	subwfb	(??_TCP_PayloadSave+3)& (0+255),w,b
 19886  005B2E  E305               	bnc	l8269
 19887                           
 19888                           ; BSR set to: 0
 19889                           ;tcpv4.c: 320: {
 19890                           ;tcpv4.c: 321: buffer_size = len;
 19891  005B30  C05A  F0C1         	movff	TCP_PayloadSave@len,TCP_PayloadSave@buffer_size
 19892  005B34  C05B  F0C2         	movff	TCP_PayloadSave@len+1,TCP_PayloadSave@buffer_size+1
 19893                           
 19894                           ;tcpv4.c: 322: }else
 19895  005B38  D01E               	goto	l8271
 19896  005B3A                     l8269:
 19897                           
 19898                           ; BSR set to: 0
 19899                           ;tcpv4.c: 323: {
 19900                           ;tcpv4.c: 324: buffer_size = currentTCB->localWnd;
 19901  005B3A  0E1A               	movlw	26
 19902  005B3C  25FE               	addwf	_currentTCB& (0+255),w,b
 19903  005B3E  6FB4               	movwf	??_TCP_PayloadSave& (0+255),b
 19904  005B40  0E00               	movlw	0
 19905  005B42  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19906  005B44  6FB5               	movwf	(??_TCP_PayloadSave+1)& (0+255),b
 19907  005B46  C0B4  FFF6         	movff	??_TCP_PayloadSave,tblptrl
 19908  005B4A  C0B5  FFF7         	movff	??_TCP_PayloadSave+1,tblptrh
 19909  005B4E  0E00               	movlw	low (__smallconst shr (0+16))
 19910  005B50  6EF8               	movwf	tblptru,c
 19911  005B52  0E0F               	movlw	(high __ramtop+-1)
 19912  005B54  64F7               	cpfsgt	tblptrh,c
 19913  005B56  D007               	bra	u11327
 19914  005B58  0009               	tblrd		*+
 19915  005B5A  CFF5 F0C1          	movff	tablat,TCP_PayloadSave@buffer_size
 19916  005B5E  0009               	tblrd		*+
 19917  005B60  CFF5 F0C2          	movff	tablat,TCP_PayloadSave@buffer_size+1
 19918  005B64  D008               	bra	u11320
 19919  005B66                     u11327:
 19920  005B66  CFF6 FFE9          	movff	tblptrl,fsr0l
 19921  005B6A  CFF7 FFEA          	movff	tblptrh,fsr0h
 19922  005B6E  CFEE F0C1          	movff	postinc0,TCP_PayloadSave@buffer_size
 19923  005B72  CFEE F0C2          	movff	postinc0,TCP_PayloadSave@buffer_size+1
 19924  005B76                     u11320:
 19925  005B76                     l8271:
 19926                           
 19927                           ;tcpv4.c: 325: }
 19928                           ;tcpv4.c: 327: ETH_ReadBlock(currentTCB->rxBufferPtr, buffer_size);
 19929  005B76  0E20               	movlw	32
 19930  005B78  0100               	movlb	0	; () banked
 19931  005B7A  25FE               	addwf	_currentTCB& (0+255),w,b
 19932  005B7C  6FB4               	movwf	??_TCP_PayloadSave& (0+255),b
 19933  005B7E  0E00               	movlw	0
 19934  005B80  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19935  005B82  6FB5               	movwf	(??_TCP_PayloadSave+1)& (0+255),b
 19936  005B84  C0B4  FFF6         	movff	??_TCP_PayloadSave,tblptrl
 19937  005B88  C0B5  FFF7         	movff	??_TCP_PayloadSave+1,tblptrh
 19938  005B8C  0E00               	movlw	low (__smallconst shr (0+16))
 19939  005B8E  6EF8               	movwf	tblptru,c
 19940  005B90  0E0F               	movlw	(high __ramtop+-1)
 19941  005B92  64F7               	cpfsgt	tblptrh,c
 19942  005B94  D007               	bra	u11337
 19943  005B96  0009               	tblrd		*+
 19944  005B98  CFF5 F003          	movff	tablat,ETH_ReadBlock@data
 19945  005B9C  0009               	tblrd		*+
 19946  005B9E  CFF5 F004          	movff	tablat,ETH_ReadBlock@data+1
 19947  005BA2  D008               	bra	u11330
 19948  005BA4                     u11337:
 19949  005BA4  CFF6 FFE9          	movff	tblptrl,fsr0l
 19950  005BA8  CFF7 FFEA          	movff	tblptrh,fsr0h
 19951  005BAC  CFEE F003          	movff	postinc0,ETH_ReadBlock@data
 19952  005BB0  CFEE F004          	movff	postinc0,ETH_ReadBlock@data+1
 19953  005BB4                     u11330:
 19954  005BB4  C0C1  F005         	movff	TCP_PayloadSave@buffer_size,ETH_ReadBlock@length
 19955  005BB8  C0C2  F006         	movff	TCP_PayloadSave@buffer_size+1,ETH_ReadBlock@length+1
 19956  005BBC  ECDB  F03A         	call	_ETH_ReadBlock	;wreg free
 19957                           
 19958                           ; BSR set to: 1
 19959                           ;tcpv4.c: 328: currentTCB->rxBufferPtr = currentTCB->rxBufferPtr + buffer_size;
 19960  005BC0  0E20               	movlw	32
 19961  005BC2  0100               	movlb	0	; () banked
 19962  005BC4  25FE               	addwf	_currentTCB& (0+255),w,b
 19963  005BC6  6FB4               	movwf	??_TCP_PayloadSave& (0+255),b
 19964  005BC8  0E00               	movlw	0
 19965  005BCA  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19966  005BCC  6FB5               	movwf	(??_TCP_PayloadSave+1)& (0+255),b
 19967  005BCE  C0B4  FFF6         	movff	??_TCP_PayloadSave,tblptrl
 19968  005BD2  C0B5  FFF7         	movff	??_TCP_PayloadSave+1,tblptrh
 19969  005BD6  0E00               	movlw	low (__smallconst shr (0+16))
 19970  005BD8  6EF8               	movwf	tblptru,c
 19971  005BDA  0E0F               	movlw	(high __ramtop+-1)
 19972  005BDC  64F7               	cpfsgt	tblptrh,c
 19973  005BDE  D007               	bra	u11347
 19974  005BE0  0009               	tblrd		*+
 19975  005BE2  CFF5 F0B6          	movff	tablat,??_TCP_PayloadSave+2
 19976  005BE6  0009               	tblrd		*+
 19977  005BE8  CFF5 F0B7          	movff	tablat,??_TCP_PayloadSave+3
 19978  005BEC  D008               	bra	u11340
 19979  005BEE                     u11347:
 19980  005BEE  CFF6 FFE9          	movff	tblptrl,fsr0l
 19981  005BF2  CFF7 FFEA          	movff	tblptrh,fsr0h
 19982  005BF6  CFEE F0B6          	movff	postinc0,??_TCP_PayloadSave+2
 19983  005BFA  CFEE F0B7          	movff	postinc0,??_TCP_PayloadSave+3
 19984  005BFE                     u11340:
 19985  005BFE  0100               	movlb	0	; () banked
 19986  005C00  51C1               	movf	TCP_PayloadSave@buffer_size& (0+255),w,b
 19987  005C02  27B6               	addwf	(??_TCP_PayloadSave+2)& (0+255),f,b
 19988  005C04  51C2               	movf	(TCP_PayloadSave@buffer_size+1)& (0+255),w,b
 19989  005C06  23B7               	addwfc	(??_TCP_PayloadSave+3)& (0+255),f,b
 19990  005C08  0E20               	movlw	32
 19991  005C0A  25FE               	addwf	_currentTCB& (0+255),w,b
 19992  005C0C  6FB8               	movwf	(??_TCP_PayloadSave+4)& (0+255),b
 19993  005C0E  0E00               	movlw	0
 19994  005C10  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19995  005C12  6FB9               	movwf	(??_TCP_PayloadSave+5)& (0+255),b
 19996  005C14  C0B8  FFF6         	movff	??_TCP_PayloadSave+4,tblptrl
 19997  005C18  C0B9  FFF7         	movff	??_TCP_PayloadSave+5,tblptrh
 19998  005C1C  0E00               	movlw	low (__smallconst shr (0+16))
 19999  005C1E  6EF8               	movwf	tblptru,c
 20000  005C20  0E0F               	movlw	(high __ramtop+-1)
 20001  005C22  64F7               	cpfsgt	tblptrh,c
 20002  005C24  D007               	bra	u11357
 20003  005C26  C0B6  FFF5         	movff	??_TCP_PayloadSave+2,tablat
 20004  005C2A  000D               	tblwt		*+
 20005  005C2C  C0B7  FFF5         	movff	??_TCP_PayloadSave+3,tablat
 20006  005C30  000C               	tblwt		*
 20007  005C32  D008               	bra	u11350
 20008  005C34                     u11357:
 20009  005C34  CFF6 FFE9          	movff	tblptrl,fsr0l
 20010  005C38  CFF7 FFEA          	movff	tblptrh,fsr0h
 20011  005C3C  C0B6  FFEE         	movff	??_TCP_PayloadSave+2,postinc0
 20012  005C40  C0B7  FFEF         	movff	??_TCP_PayloadSave+3,indf0
 20013  005C44                     u11350:
 20014                           
 20015                           ;tcpv4.c: 331: currentTCB->localWnd = currentTCB->localWnd - buffer_size;
 20016  005C44  0E1A               	movlw	26
 20017  005C46  0100               	movlb	0	; () banked
 20018  005C48  25FE               	addwf	_currentTCB& (0+255),w,b
 20019  005C4A  6FB4               	movwf	??_TCP_PayloadSave& (0+255),b
 20020  005C4C  0E00               	movlw	0
 20021  005C4E  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 20022  005C50  6FB5               	movwf	(??_TCP_PayloadSave+1)& (0+255),b
 20023  005C52  C0B4  FFF6         	movff	??_TCP_PayloadSave,tblptrl
 20024  005C56  C0B5  FFF7         	movff	??_TCP_PayloadSave+1,tblptrh
 20025  005C5A  0E00               	movlw	low (__smallconst shr (0+16))
 20026  005C5C  6EF8               	movwf	tblptru,c
 20027  005C5E  0E0F               	movlw	(high __ramtop+-1)
 20028  005C60  64F7               	cpfsgt	tblptrh,c
 20029  005C62  D007               	bra	u11367
 20030  005C64  0009               	tblrd		*+
 20031  005C66  CFF5 F0B6          	movff	tablat,??_TCP_PayloadSave+2
 20032  005C6A  0009               	tblrd		*+
 20033  005C6C  CFF5 F0B7          	movff	tablat,??_TCP_PayloadSave+3
 20034  005C70  D008               	bra	u11360
 20035  005C72                     u11367:
 20036  005C72  CFF6 FFE9          	movff	tblptrl,fsr0l
 20037  005C76  CFF7 FFEA          	movff	tblptrh,fsr0h
 20038  005C7A  CFEE F0B6          	movff	postinc0,??_TCP_PayloadSave+2
 20039  005C7E  CFEE F0B7          	movff	postinc0,??_TCP_PayloadSave+3
 20040  005C82                     u11360:
 20041  005C82  0100               	movlb	0	; () banked
 20042  005C84  51C1               	movf	TCP_PayloadSave@buffer_size& (0+255),w,b
 20043  005C86  5FB6               	subwf	(??_TCP_PayloadSave+2)& (0+255),f,b
 20044  005C88  51C2               	movf	(TCP_PayloadSave@buffer_size+1)& (0+255),w,b
 20045  005C8A  5BB7               	subwfb	(??_TCP_PayloadSave+3)& (0+255),f,b
 20046  005C8C  0E1A               	movlw	26
 20047  005C8E  25FE               	addwf	_currentTCB& (0+255),w,b
 20048  005C90  6FB8               	movwf	(??_TCP_PayloadSave+4)& (0+255),b
 20049  005C92  0E00               	movlw	0
 20050  005C94  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 20051  005C96  6FB9               	movwf	(??_TCP_PayloadSave+5)& (0+255),b
 20052  005C98  C0B8  FFF6         	movff	??_TCP_PayloadSave+4,tblptrl
 20053  005C9C  C0B9  FFF7         	movff	??_TCP_PayloadSave+5,tblptrh
 20054  005CA0  0E00               	movlw	low (__smallconst shr (0+16))
 20055  005CA2  6EF8               	movwf	tblptru,c
 20056  005CA4  0E0F               	movlw	(high __ramtop+-1)
 20057  005CA6  64F7               	cpfsgt	tblptrh,c
 20058  005CA8  D007               	bra	u11377
 20059  005CAA  C0B6  FFF5         	movff	??_TCP_PayloadSave+2,tablat
 20060  005CAE  000D               	tblwt		*+
 20061  005CB0  C0B7  FFF5         	movff	??_TCP_PayloadSave+3,tablat
 20062  005CB4  000C               	tblwt		*
 20063  005CB6  D008               	bra	u11370
 20064  005CB8                     u11377:
 20065  005CB8  CFF6 FFE9          	movff	tblptrl,fsr0l
 20066  005CBC  CFF7 FFEA          	movff	tblptrh,fsr0h
 20067  005CC0  C0B6  FFEE         	movff	??_TCP_PayloadSave+2,postinc0
 20068  005CC4  C0B7  FFEF         	movff	??_TCP_PayloadSave+3,indf0
 20069  005CC8                     u11370:
 20070                           
 20071                           ;tcpv4.c: 332: currentTCB->remoteAck = currentTCB->remoteSeqno + buffer_size;
 20072  005CC8  0E08               	movlw	8
 20073  005CCA  0100               	movlb	0	; () banked
 20074  005CCC  25FE               	addwf	_currentTCB& (0+255),w,b
 20075  005CCE  6FB4               	movwf	??_TCP_PayloadSave& (0+255),b
 20076  005CD0  0E00               	movlw	0
 20077  005CD2  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 20078  005CD4  6FB5               	movwf	(??_TCP_PayloadSave+1)& (0+255),b
 20079  005CD6  C0B4  FFF6         	movff	??_TCP_PayloadSave,tblptrl
 20080  005CDA  C0B5  FFF7         	movff	??_TCP_PayloadSave+1,tblptrh
 20081  005CDE  0E00               	movlw	low (__smallconst shr (0+16))
 20082  005CE0  6EF8               	movwf	tblptru,c
 20083  005CE2  0E0F               	movlw	(high __ramtop+-1)
 20084  005CE4  64F7               	cpfsgt	tblptrh,c
 20085  005CE6  D00D               	bra	u11387
 20086  005CE8  0009               	tblrd		*+
 20087  005CEA  CFF5 F0B6          	movff	tablat,??_TCP_PayloadSave+2
 20088  005CEE  0009               	tblrd		*+
 20089  005CF0  CFF5 F0B7          	movff	tablat,??_TCP_PayloadSave+3
 20090  005CF4  0009               	tblrd		*+
 20091  005CF6  CFF5 F0B8          	movff	tablat,??_TCP_PayloadSave+4
 20092  005CFA  0009               	tblrd		*+
 20093  005CFC  CFF5 F0B9          	movff	tablat,??_TCP_PayloadSave+5
 20094  005D00  D00C               	bra	u11380
 20095  005D02                     u11387:
 20096  005D02  CFF6 FFE9          	movff	tblptrl,fsr0l
 20097  005D06  CFF7 FFEA          	movff	tblptrh,fsr0h
 20098  005D0A  CFEE F0B6          	movff	postinc0,??_TCP_PayloadSave+2
 20099  005D0E  CFEE F0B7          	movff	postinc0,??_TCP_PayloadSave+3
 20100  005D12  CFEE F0B8          	movff	postinc0,??_TCP_PayloadSave+4
 20101  005D16  CFEE F0B9          	movff	postinc0,??_TCP_PayloadSave+5
 20102  005D1A                     u11380:
 20103  005D1A  0100               	movlb	0	; () banked
 20104  005D1C  51C1               	movf	TCP_PayloadSave@buffer_size& (0+255),w,b
 20105  005D1E  25B6               	addwf	(??_TCP_PayloadSave+2)& (0+255),w,b
 20106  005D20  6FBA               	movwf	(??_TCP_PayloadSave+6)& (0+255),b
 20107  005D22  51C2               	movf	(TCP_PayloadSave@buffer_size+1)& (0+255),w,b
 20108  005D24  21B7               	addwfc	(??_TCP_PayloadSave+3)& (0+255),w,b
 20109  005D26  6FBB               	movwf	(??_TCP_PayloadSave+7)& (0+255),b
 20110  005D28  0E00               	movlw	0
 20111  005D2A  21B8               	addwfc	(??_TCP_PayloadSave+4)& (0+255),w,b
 20112  005D2C  6FBC               	movwf	(??_TCP_PayloadSave+8)& (0+255),b
 20113  005D2E  0E00               	movlw	0
 20114  005D30  21B9               	addwfc	(??_TCP_PayloadSave+5)& (0+255),w,b
 20115  005D32  6FBD               	movwf	(??_TCP_PayloadSave+9)& (0+255),b
 20116  005D34  0E0C               	movlw	12
 20117  005D36  25FE               	addwf	_currentTCB& (0+255),w,b
 20118  005D38  6FBE               	movwf	(??_TCP_PayloadSave+10)& (0+255),b
 20119  005D3A  0E00               	movlw	0
 20120  005D3C  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 20121  005D3E  6FBF               	movwf	(??_TCP_PayloadSave+11)& (0+255),b
 20122  005D40  C0BE  FFF6         	movff	??_TCP_PayloadSave+10,tblptrl
 20123  005D44  C0BF  FFF7         	movff	??_TCP_PayloadSave+11,tblptrh
 20124  005D48  0E00               	movlw	low (__smallconst shr (0+16))
 20125  005D4A  6EF8               	movwf	tblptru,c
 20126  005D4C  0E0F               	movlw	(high __ramtop+-1)
 20127  005D4E  64F7               	cpfsgt	tblptrh,c
 20128  005D50  D00D               	bra	u11397
 20129  005D52  C0BA  FFF5         	movff	??_TCP_PayloadSave+6,tablat
 20130  005D56  000D               	tblwt		*+
 20131  005D58  C0BB  FFF5         	movff	??_TCP_PayloadSave+7,tablat
 20132  005D5C  000D               	tblwt		*+
 20133  005D5E  C0BC  FFF5         	movff	??_TCP_PayloadSave+8,tablat
 20134  005D62  000D               	tblwt		*+
 20135  005D64  C0BD  FFF5         	movff	??_TCP_PayloadSave+9,tablat
 20136  005D68  000C               	tblwt		*
 20137  005D6A  D00C               	bra	u11390
 20138  005D6C                     u11397:
 20139  005D6C  CFF6 FFE9          	movff	tblptrl,fsr0l
 20140  005D70  CFF7 FFEA          	movff	tblptrh,fsr0h
 20141  005D74  C0BA  FFEE         	movff	??_TCP_PayloadSave+6,postinc0
 20142  005D78  C0BB  FFEE         	movff	??_TCP_PayloadSave+7,postinc0
 20143  005D7C  C0BC  FFEE         	movff	??_TCP_PayloadSave+8,postinc0
 20144  005D80  C0BD  FFEF         	movff	??_TCP_PayloadSave+9,indf0
 20145  005D84                     u11390:
 20146                           
 20147                           ;tcpv4.c: 335: currentTCB->flags = 0x10U;
 20148  005D84  0E35               	movlw	53
 20149  005D86  0100               	movlb	0	; () banked
 20150  005D88  25FE               	addwf	_currentTCB& (0+255),w,b
 20151  005D8A  6FB4               	movwf	??_TCP_PayloadSave& (0+255),b
 20152  005D8C  0E00               	movlw	0
 20153  005D8E  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 20154  005D90  6FB5               	movwf	(??_TCP_PayloadSave+1)& (0+255),b
 20155  005D92  C0B4  FFF6         	movff	??_TCP_PayloadSave,tblptrl
 20156  005D96  C0B5  FFF7         	movff	??_TCP_PayloadSave+1,tblptrh
 20157  005D9A  0E00               	movlw	low (__smallconst shr (0+16))
 20158  005D9C  6EF8               	movwf	tblptru,c
 20159  005D9E  0E0F               	movlw	(high __ramtop+-1)
 20160  005DA0  64F7               	cpfsgt	tblptrh,c
 20161  005DA2  D004               	bra	u11407
 20162  005DA4  0E10               	movlw	16
 20163  005DA6  6EF5               	movwf	tablat,c
 20164  005DA8  000C               	tblwt		*
 20165  005DAA  D006               	bra	u11400
 20166  005DAC                     u11407:
 20167  005DAC  CFF6 FFE9          	movff	tblptrl,fsr0l
 20168  005DB0  CFF7 FFEA          	movff	tblptrh,fsr0h
 20169  005DB4  0E10               	movlw	16
 20170  005DB6  6EEF               	movwf	indf0,c
 20171  005DB8                     u11400:
 20172                           
 20173                           ;tcpv4.c: 336: TCP_Snd(currentTCB);
 20174  005DB8  C0FE  F058         	movff	_currentTCB,TCP_Snd@tcbPtr
 20175  005DBC  C0FF  F059         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 20176  005DC0  EF11  F01D         	goto	_TCP_Snd	;wreg free
 20177  005DC4                     __end_of_TCP_PayloadSave:
 20178                           	opt stack 0
 20179                           tosu	equ	0xFFF
 20180                           tosh	equ	0xFFE
 20181                           tosl	equ	0xFFD
 20182                           pclath	equ	0xFFA
 20183                           tblptru	equ	0xFF8
 20184                           tblptrh	equ	0xFF7
 20185                           tblptrl	equ	0xFF6
 20186                           tablat	equ	0xFF5
 20187                           prodh	equ	0xFF4
 20188                           prodl	equ	0xFF3
 20189                           intcon	equ	0xFF2
 20190                           intcon2	equ	0xFF1
 20191                           indf0	equ	0xFEF
 20192                           postinc0	equ	0xFEE
 20193                           fsr0h	equ	0xFEA
 20194                           fsr0l	equ	0xFE9
 20195                           wreg	equ	0xFE8
 20196                           indf1	equ	0xFE7
 20197                           postinc1	equ	0xFE6
 20198                           postdec1	equ	0xFE5
 20199                           plusw1	equ	0xFE3
 20200                           fsr1h	equ	0xFE2
 20201                           fsr1l	equ	0xFE1
 20202                           indf2	equ	0xFDF
 20203                           postinc2	equ	0xFDE
 20204                           postdec2	equ	0xFDD
 20205                           plusw2	equ	0xFDB
 20206                           fsr2h	equ	0xFDA
 20207                           fsr2l	equ	0xFD9
 20208                           status	equ	0xFD8
 20209                           
 20210 ;; *************** function _TCP_Snd *****************
 20211 ;; Defined at:
 20212 ;;		line 200 in file "../../TCPIP Library/source/tcpv4.c"
 20213 ;; Parameters:    Size  Location     Type
 20214 ;;  tcbPtr          2   87[COMRAM] PTR struct .
 20215 ;;		 -> ?_sprintf(2), ?_printf(2), main@str(32), STR_5(13), 
 20216 ;;		 -> STR_4(17), DEMO_TCP_EchoServer@port7TCB(55), Network_Read@debug_str(80), NULL(0), 
 20217 ;; Auto vars:     Size  Location     Type
 20218 ;;  txHeader       20   64[BANK0 ] struct .
 20219 ;;  tcpDataLengt    2   62[BANK0 ] unsigned int 
 20220 ;;  payloadLengt    2   59[BANK0 ] unsigned int 
 20221 ;;  cksm            2   57[BANK0 ] unsigned int 
 20222 ;;  data            2   55[BANK0 ] PTR unsigned char 
 20223 ;;		 -> ?_sprintf(2), ?_printf(2), main@str(32), STR_5(13), 
 20224 ;;		 -> STR_4(17), DEMO_TCP_EchoServer@txdataPort7(20), Network_Read@debug_str(80), NULL(0), 
 20225 ;;  ret             1   61[BANK0 ] unsigned char 
 20226 ;; Return value:  Size  Location     Type
 20227 ;;                  1    wreg      unsigned char 
 20228 ;; Registers used:
 20229 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20230 ;; Tracked objects:
 20231 ;;		On entry : 0/0
 20232 ;;		On exit  : F/0
 20233 ;;		Unchanged: 0/0
 20234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20235 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20236 ;;      Locals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20237 ;;      Temps:          0      48       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20238 ;;      Totals:         2      77       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20239 ;;Total ram usage:       79 bytes
 20240 ;; Hardware stack levels used:    1
 20241 ;; Hardware stack levels required when called:    9
 20242 ;; This function calls:
 20243 ;;		_ETH_Insert
 20244 ;;		_ETH_TxComputeChecksum
 20245 ;;		_ETH_WriteBlock
 20246 ;;		_IPV4_Send
 20247 ;;		_IPv4_Start
 20248 ;; This function is called by:
 20249 ;;		_TCP_PayloadSave
 20250 ;;		_TCP_FiniteStateMachine
 20251 ;;		_TCP_Send
 20252 ;; This function uses a non-reentrant model
 20253 ;;
 20254                           
 20255                           	psect	text80
 20256  003A22                     __ptext80:
 20257                           	opt stack 0
 20258  003A22                     _TCP_Snd:
 20259                           	opt stack 18
 20260                           
 20261                           ;tcpv4.c: 203: tcpHeader_t txHeader;
 20262                           ;tcpv4.c: 204: uint16_t payloadLength;
 20263                           ;tcpv4.c: 205: uint16_t cksm;
 20264                           ;tcpv4.c: 206: uint16_t tcpDataLength;
 20265                           ;tcpv4.c: 207: uint8_t *data;
 20266                           ;tcpv4.c: 209: txHeader.sourcePort = ((((uint16_t)tcbPtr->localPort & (uint16_t)0xFF00) 
      +                          >> 8) | (((uint16_t)tcbPtr->localPort & (uint16_t)0x00FF) << 8));
 20267                           
 20268                           ;incstack = 0
 20269  003A22  C058  FFF6         	movff	TCP_Snd@tcbPtr,tblptrl
 20270  003A26  C059  FFF7         	movff	TCP_Snd@tcbPtr+1,tblptrh
 20271  003A2A  0E00               	movlw	low (__smallconst shr (0+16))
 20272  003A2C  6EF8               	movwf	tblptru,c
 20273  003A2E  0E0F               	movlw	(high __ramtop+-1)
 20274  003A30  64F7               	cpfsgt	tblptrh,c
 20275  003A32  D007               	bra	u10577
 20276  003A34  0009               	tblrd		*+
 20277  003A36  CFF5 F067          	movff	tablat,??_TCP_Snd
 20278  003A3A  0009               	tblrd		*+
 20279  003A3C  CFF5 F068          	movff	tablat,??_TCP_Snd+1
 20280  003A40  D008               	bra	u10570
 20281  003A42                     u10577:
 20282  003A42  CFF6 FFE9          	movff	tblptrl,fsr0l
 20283  003A46  CFF7 FFEA          	movff	tblptrh,fsr0h
 20284  003A4A  CFEE F067          	movff	postinc0,??_TCP_Snd
 20285  003A4E  CFEE F068          	movff	postinc0,??_TCP_Snd+1
 20286  003A52                     u10570:
 20287  003A52  0100               	movlb	0	; () banked
 20288  003A54  5167               	movf	??_TCP_Snd& (0+255),w,b
 20289  003A56  6F6A               	movwf	(??_TCP_Snd+3)& (0+255),b
 20290  003A58  6B69               	clrf	(??_TCP_Snd+2)& (0+255),b
 20291  003A5A  C058  FFF6         	movff	TCP_Snd@tcbPtr,tblptrl
 20292  003A5E  C059  FFF7         	movff	TCP_Snd@tcbPtr+1,tblptrh
 20293  003A62  0E00               	movlw	low (__smallconst shr (0+16))
 20294  003A64  6EF8               	movwf	tblptru,c
 20295  003A66  0E0F               	movlw	(high __ramtop+-1)
 20296  003A68  64F7               	cpfsgt	tblptrh,c
 20297  003A6A  D007               	bra	u10587
 20298  003A6C  0009               	tblrd		*+
 20299  003A6E  CFF5 F06B          	movff	tablat,??_TCP_Snd+4
 20300  003A72  0009               	tblrd		*+
 20301  003A74  CFF5 F06C          	movff	tablat,??_TCP_Snd+5
 20302  003A78  D008               	bra	u10580
 20303  003A7A                     u10587:
 20304  003A7A  CFF6 FFE9          	movff	tblptrl,fsr0l
 20305  003A7E  CFF7 FFEA          	movff	tblptrh,fsr0h
 20306  003A82  CFEE F06B          	movff	postinc0,??_TCP_Snd+4
 20307  003A86  CFEE F06C          	movff	postinc0,??_TCP_Snd+5
 20308  003A8A                     u10580:
 20309  003A8A  C06C  F06B         	movff	??_TCP_Snd+5,??_TCP_Snd+4
 20310  003A8E  0100               	movlb	0	; () banked
 20311  003A90  6B6C               	clrf	(??_TCP_Snd+5)& (0+255),b
 20312  003A92  6B6C               	clrf	(??_TCP_Snd+5)& (0+255),b
 20313  003A94  5169               	movf	(??_TCP_Snd+2)& (0+255),w,b
 20314  003A96  116B               	iorwf	(??_TCP_Snd+4)& (0+255),w,b
 20315  003A98  6FA0               	movwf	TCP_Snd@txHeader& (0+255),b
 20316  003A9A  516A               	movf	(??_TCP_Snd+3)& (0+255),w,b
 20317  003A9C  116C               	iorwf	(??_TCP_Snd+5)& (0+255),w,b
 20318  003A9E  6FA1               	movwf	(TCP_Snd@txHeader+1)& (0+255),b
 20319                           
 20320                           ;tcpv4.c: 210: txHeader.destPort = ((((uint16_t)tcbPtr->destPort & (uint16_t)0xFF00) >> 
      +                          8) | (((uint16_t)tcbPtr->destPort & (uint16_t)0x00FF) << 8));
 20321  003AA0  0E06               	movlw	6
 20322  003AA2  2458               	addwf	TCP_Snd@tcbPtr,w,c
 20323  003AA4  6F67               	movwf	??_TCP_Snd& (0+255),b
 20324  003AA6  0E00               	movlw	0
 20325  003AA8  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 20326  003AAA  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 20327  003AAC  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 20328  003AB0  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 20329  003AB4  0E00               	movlw	low (__smallconst shr (0+16))
 20330  003AB6  6EF8               	movwf	tblptru,c
 20331  003AB8  0E0F               	movlw	(high __ramtop+-1)
 20332  003ABA  64F7               	cpfsgt	tblptrh,c
 20333  003ABC  D007               	bra	u10597
 20334  003ABE  0009               	tblrd		*+
 20335  003AC0  CFF5 F069          	movff	tablat,??_TCP_Snd+2
 20336  003AC4  0009               	tblrd		*+
 20337  003AC6  CFF5 F06A          	movff	tablat,??_TCP_Snd+3
 20338  003ACA  D008               	bra	u10590
 20339  003ACC                     u10597:
 20340  003ACC  CFF6 FFE9          	movff	tblptrl,fsr0l
 20341  003AD0  CFF7 FFEA          	movff	tblptrh,fsr0h
 20342  003AD4  CFEE F069          	movff	postinc0,??_TCP_Snd+2
 20343  003AD8  CFEE F06A          	movff	postinc0,??_TCP_Snd+3
 20344  003ADC                     u10590:
 20345  003ADC  0100               	movlb	0	; () banked
 20346  003ADE  5169               	movf	(??_TCP_Snd+2)& (0+255),w,b
 20347  003AE0  6F6C               	movwf	(??_TCP_Snd+5)& (0+255),b
 20348  003AE2  6B6B               	clrf	(??_TCP_Snd+4)& (0+255),b
 20349  003AE4  0E06               	movlw	6
 20350  003AE6  2458               	addwf	TCP_Snd@tcbPtr,w,c
 20351  003AE8  6F6D               	movwf	(??_TCP_Snd+6)& (0+255),b
 20352  003AEA  0E00               	movlw	0
 20353  003AEC  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 20354  003AEE  6F6E               	movwf	(??_TCP_Snd+7)& (0+255),b
 20355  003AF0  C06D  FFF6         	movff	??_TCP_Snd+6,tblptrl
 20356  003AF4  C06E  FFF7         	movff	??_TCP_Snd+7,tblptrh
 20357  003AF8  0E00               	movlw	low (__smallconst shr (0+16))
 20358  003AFA  6EF8               	movwf	tblptru,c
 20359  003AFC  0E0F               	movlw	(high __ramtop+-1)
 20360  003AFE  64F7               	cpfsgt	tblptrh,c
 20361  003B00  D007               	bra	u10607
 20362  003B02  0009               	tblrd		*+
 20363  003B04  CFF5 F06F          	movff	tablat,??_TCP_Snd+8
 20364  003B08  0009               	tblrd		*+
 20365  003B0A  CFF5 F070          	movff	tablat,??_TCP_Snd+9
 20366  003B0E  D008               	bra	u10600
 20367  003B10                     u10607:
 20368  003B10  CFF6 FFE9          	movff	tblptrl,fsr0l
 20369  003B14  CFF7 FFEA          	movff	tblptrh,fsr0h
 20370  003B18  CFEE F06F          	movff	postinc0,??_TCP_Snd+8
 20371  003B1C  CFEE F070          	movff	postinc0,??_TCP_Snd+9
 20372  003B20                     u10600:
 20373  003B20  C070  F06F         	movff	??_TCP_Snd+9,??_TCP_Snd+8
 20374  003B24  0100               	movlb	0	; () banked
 20375  003B26  6B70               	clrf	(??_TCP_Snd+9)& (0+255),b
 20376  003B28  6B70               	clrf	(??_TCP_Snd+9)& (0+255),b
 20377  003B2A  516B               	movf	(??_TCP_Snd+4)& (0+255),w,b
 20378  003B2C  116F               	iorwf	(??_TCP_Snd+8)& (0+255),w,b
 20379  003B2E  6FA2               	movwf	(TCP_Snd@txHeader+2)& (0+255),b
 20380  003B30  516C               	movf	(??_TCP_Snd+5)& (0+255),w,b
 20381  003B32  1170               	iorwf	(??_TCP_Snd+9)& (0+255),w,b
 20382  003B34  6FA3               	movwf	(TCP_Snd@txHeader+3)& (0+255),b
 20383                           
 20384                           ;tcpv4.c: 212: txHeader.sequenceNumber = ((((uint32_t)tcbPtr->localSeqno&(uint32_t)0xff0
      +                          00000) >> 24) | (((uint32_t)tcbPtr->localSeqno&(uint32_t)0x00ff0000) >> 8) | (((uint32_t
      +                          )tcbPtr->localSeqno&(uint32_t)0x0000ff00) << 8) | (((uint32_t)tcbPtr->localSeqno&(uint32
      +                          _
 20385  003B36  0E10               	movlw	16
 20386  003B38  2458               	addwf	TCP_Snd@tcbPtr,w,c
 20387  003B3A  6F67               	movwf	??_TCP_Snd& (0+255),b
 20388  003B3C  0E00               	movlw	0
 20389  003B3E  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 20390  003B40  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 20391  003B42  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 20392  003B46  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 20393  003B4A  0E00               	movlw	low (__smallconst shr (0+16))
 20394  003B4C  6EF8               	movwf	tblptru,c
 20395  003B4E  0E0F               	movlw	(high __ramtop+-1)
 20396  003B50  64F7               	cpfsgt	tblptrh,c
 20397  003B52  D00D               	bra	u10617
 20398  003B54  0009               	tblrd		*+
 20399  003B56  CFF5 F069          	movff	tablat,??_TCP_Snd+2
 20400  003B5A  0009               	tblrd		*+
 20401  003B5C  CFF5 F06A          	movff	tablat,??_TCP_Snd+3
 20402  003B60  0009               	tblrd		*+
 20403  003B62  CFF5 F06B          	movff	tablat,??_TCP_Snd+4
 20404  003B66  0009               	tblrd		*+
 20405  003B68  CFF5 F06C          	movff	tablat,??_TCP_Snd+5
 20406  003B6C  D00C               	bra	u10610
 20407  003B6E                     u10617:
 20408  003B6E  CFF6 FFE9          	movff	tblptrl,fsr0l
 20409  003B72  CFF7 FFEA          	movff	tblptrh,fsr0h
 20410  003B76  CFEE F069          	movff	postinc0,??_TCP_Snd+2
 20411  003B7A  CFEE F06A          	movff	postinc0,??_TCP_Snd+3
 20412  003B7E  CFEE F06B          	movff	postinc0,??_TCP_Snd+4
 20413  003B82  CFEE F06C          	movff	postinc0,??_TCP_Snd+5
 20414  003B86                     u10610:
 20415  003B86  0100               	movlb	0	; () banked
 20416  003B88  5169               	movf	(??_TCP_Snd+2)& (0+255),w,b
 20417  003B8A  6F6D               	movwf	(??_TCP_Snd+6)& (0+255),b
 20418  003B8C  6B6E               	clrf	(??_TCP_Snd+7)& (0+255),b
 20419  003B8E  6B6F               	clrf	(??_TCP_Snd+8)& (0+255),b
 20420  003B90  6B70               	clrf	(??_TCP_Snd+9)& (0+255),b
 20421  003B92  C06D  F070         	movff	??_TCP_Snd+6,??_TCP_Snd+9
 20422  003B96  6B6F               	clrf	(??_TCP_Snd+8)& (0+255),b
 20423  003B98  6B6E               	clrf	(??_TCP_Snd+7)& (0+255),b
 20424  003B9A  6B6D               	clrf	(??_TCP_Snd+6)& (0+255),b
 20425  003B9C  0E10               	movlw	16
 20426  003B9E  2458               	addwf	TCP_Snd@tcbPtr,w,c
 20427  003BA0  6F71               	movwf	(??_TCP_Snd+10)& (0+255),b
 20428  003BA2  0E00               	movlw	0
 20429  003BA4  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 20430  003BA6  6F72               	movwf	(??_TCP_Snd+11)& (0+255),b
 20431  003BA8  C071  FFF6         	movff	??_TCP_Snd+10,tblptrl
 20432  003BAC  C072  FFF7         	movff	??_TCP_Snd+11,tblptrh
 20433  003BB0  0E00               	movlw	low (__smallconst shr (0+16))
 20434  003BB2  6EF8               	movwf	tblptru,c
 20435  003BB4  0E0F               	movlw	(high __ramtop+-1)
 20436  003BB6  64F7               	cpfsgt	tblptrh,c
 20437  003BB8  D00D               	bra	u10627
 20438  003BBA  0009               	tblrd		*+
 20439  003BBC  CFF5 F073          	movff	tablat,??_TCP_Snd+12
 20440  003BC0  0009               	tblrd		*+
 20441  003BC2  CFF5 F074          	movff	tablat,??_TCP_Snd+13
 20442  003BC6  0009               	tblrd		*+
 20443  003BC8  CFF5 F075          	movff	tablat,??_TCP_Snd+14
 20444  003BCC  0009               	tblrd		*+
 20445  003BCE  CFF5 F076          	movff	tablat,??_TCP_Snd+15
 20446  003BD2  D00C               	bra	u10620
 20447  003BD4                     u10627:
 20448  003BD4  CFF6 FFE9          	movff	tblptrl,fsr0l
 20449  003BD8  CFF7 FFEA          	movff	tblptrh,fsr0h
 20450  003BDC  CFEE F073          	movff	postinc0,??_TCP_Snd+12
 20451  003BE0  CFEE F074          	movff	postinc0,??_TCP_Snd+13
 20452  003BE4  CFEE F075          	movff	postinc0,??_TCP_Snd+14
 20453  003BE8  CFEE F076          	movff	postinc0,??_TCP_Snd+15
 20454  003BEC                     u10620:
 20455  003BEC  0100               	movlb	0	; () banked
 20456  003BEE  6B77               	clrf	(??_TCP_Snd+16)& (0+255),b
 20457  003BF0  5174               	movf	(??_TCP_Snd+13)& (0+255),w,b
 20458  003BF2  6F78               	movwf	(??_TCP_Snd+17)& (0+255),b
 20459  003BF4  6B79               	clrf	(??_TCP_Snd+18)& (0+255),b
 20460  003BF6  6B7A               	clrf	(??_TCP_Snd+19)& (0+255),b
 20461  003BF8  C079  F07A         	movff	??_TCP_Snd+18,??_TCP_Snd+19
 20462  003BFC  C078  F079         	movff	??_TCP_Snd+17,??_TCP_Snd+18
 20463  003C00  C077  F078         	movff	??_TCP_Snd+16,??_TCP_Snd+17
 20464  003C04  6B77               	clrf	(??_TCP_Snd+16)& (0+255),b
 20465  003C06  0E10               	movlw	16
 20466  003C08  2458               	addwf	TCP_Snd@tcbPtr,w,c
 20467  003C0A  6F7B               	movwf	(??_TCP_Snd+20)& (0+255),b
 20468  003C0C  0E00               	movlw	0
 20469  003C0E  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 20470  003C10  6F7C               	movwf	(??_TCP_Snd+21)& (0+255),b
 20471  003C12  C07B  FFF6         	movff	??_TCP_Snd+20,tblptrl
 20472  003C16  C07C  FFF7         	movff	??_TCP_Snd+21,tblptrh
 20473  003C1A  0E00               	movlw	low (__smallconst shr (0+16))
 20474  003C1C  6EF8               	movwf	tblptru,c
 20475  003C1E  0E0F               	movlw	(high __ramtop+-1)
 20476  003C20  64F7               	cpfsgt	tblptrh,c
 20477  003C22  D00D               	bra	u10637
 20478  003C24  0009               	tblrd		*+
 20479  003C26  CFF5 F07D          	movff	tablat,??_TCP_Snd+22
 20480  003C2A  0009               	tblrd		*+
 20481  003C2C  CFF5 F07E          	movff	tablat,??_TCP_Snd+23
 20482  003C30  0009               	tblrd		*+
 20483  003C32  CFF5 F07F          	movff	tablat,??_TCP_Snd+24
 20484  003C36  0009               	tblrd		*+
 20485  003C38  CFF5 F080          	movff	tablat,??_TCP_Snd+25
 20486  003C3C  D00C               	bra	u10630
 20487  003C3E                     u10637:
 20488  003C3E  CFF6 FFE9          	movff	tblptrl,fsr0l
 20489  003C42  CFF7 FFEA          	movff	tblptrh,fsr0h
 20490  003C46  CFEE F07D          	movff	postinc0,??_TCP_Snd+22
 20491  003C4A  CFEE F07E          	movff	postinc0,??_TCP_Snd+23
 20492  003C4E  CFEE F07F          	movff	postinc0,??_TCP_Snd+24
 20493  003C52  CFEE F080          	movff	postinc0,??_TCP_Snd+25
 20494  003C56                     u10630:
 20495  003C56  C07E  F07D         	movff	??_TCP_Snd+23,??_TCP_Snd+22
 20496  003C5A  C07F  F07E         	movff	??_TCP_Snd+24,??_TCP_Snd+23
 20497  003C5E  C080  F07F         	movff	??_TCP_Snd+25,??_TCP_Snd+24
 20498  003C62  0100               	movlb	0	; () banked
 20499  003C64  6B80               	clrf	(??_TCP_Snd+25)& (0+255),b
 20500  003C66  6B81               	clrf	(??_TCP_Snd+26)& (0+255),b
 20501  003C68  517E               	movf	(??_TCP_Snd+23)& (0+255),w,b
 20502  003C6A  6F82               	movwf	(??_TCP_Snd+27)& (0+255),b
 20503  003C6C  6B83               	clrf	(??_TCP_Snd+28)& (0+255),b
 20504  003C6E  6B84               	clrf	(??_TCP_Snd+29)& (0+255),b
 20505  003C70  0E10               	movlw	16
 20506  003C72  2458               	addwf	TCP_Snd@tcbPtr,w,c
 20507  003C74  6F85               	movwf	(??_TCP_Snd+30)& (0+255),b
 20508  003C76  0E00               	movlw	0
 20509  003C78  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 20510  003C7A  6F86               	movwf	(??_TCP_Snd+31)& (0+255),b
 20511  003C7C  C085  FFF6         	movff	??_TCP_Snd+30,tblptrl
 20512  003C80  C086  FFF7         	movff	??_TCP_Snd+31,tblptrh
 20513  003C84  0E00               	movlw	low (__smallconst shr (0+16))
 20514  003C86  6EF8               	movwf	tblptru,c
 20515  003C88  0E0F               	movlw	(high __ramtop+-1)
 20516  003C8A  64F7               	cpfsgt	tblptrh,c
 20517  003C8C  D00D               	bra	u10647
 20518  003C8E  0009               	tblrd		*+
 20519  003C90  CFF5 F087          	movff	tablat,??_TCP_Snd+32
 20520  003C94  0009               	tblrd		*+
 20521  003C96  CFF5 F088          	movff	tablat,??_TCP_Snd+33
 20522  003C9A  0009               	tblrd		*+
 20523  003C9C  CFF5 F089          	movff	tablat,??_TCP_Snd+34
 20524  003CA0  0009               	tblrd		*+
 20525  003CA2  CFF5 F08A          	movff	tablat,??_TCP_Snd+35
 20526  003CA6  D00C               	bra	u10640
 20527  003CA8                     u10647:
 20528  003CA8  CFF6 FFE9          	movff	tblptrl,fsr0l
 20529  003CAC  CFF7 FFEA          	movff	tblptrh,fsr0h
 20530  003CB0  CFEE F087          	movff	postinc0,??_TCP_Snd+32
 20531  003CB4  CFEE F088          	movff	postinc0,??_TCP_Snd+33
 20532  003CB8  CFEE F089          	movff	postinc0,??_TCP_Snd+34
 20533  003CBC  CFEE F08A          	movff	postinc0,??_TCP_Snd+35
 20534  003CC0                     u10640:
 20535  003CC0  0100               	movlb	0	; () banked
 20536  003CC2  6B8B               	clrf	(??_TCP_Snd+36)& (0+255),b
 20537  003CC4  6B8C               	clrf	(??_TCP_Snd+37)& (0+255),b
 20538  003CC6  6B8D               	clrf	(??_TCP_Snd+38)& (0+255),b
 20539  003CC8  518A               	movf	(??_TCP_Snd+35)& (0+255),w,b
 20540  003CCA  6F8E               	movwf	(??_TCP_Snd+39)& (0+255),b
 20541  003CCC  0E19               	movlw	25
 20542  003CCE  D005               	goto	u10650
 20543  003CD0                     u10655:
 20544  003CD0  90D8               	bcf	status,0,c
 20545  003CD2  338E               	rrcf	(??_TCP_Snd+39)& (0+255),f,b
 20546  003CD4  338D               	rrcf	(??_TCP_Snd+38)& (0+255),f,b
 20547  003CD6  338C               	rrcf	(??_TCP_Snd+37)& (0+255),f,b
 20548  003CD8  338B               	rrcf	(??_TCP_Snd+36)& (0+255),f,b
 20549  003CDA                     u10650:
 20550  003CDA  2EE8               	decfsz	wreg,f,c
 20551  003CDC  D7F9               	goto	u10655
 20552  003CDE  5181               	movf	(??_TCP_Snd+26)& (0+255),w,b
 20553  003CE0  118B               	iorwf	(??_TCP_Snd+36)& (0+255),w,b
 20554  003CE2  6F8F               	movwf	(??_TCP_Snd+40)& (0+255),b
 20555  003CE4  5182               	movf	(??_TCP_Snd+27)& (0+255),w,b
 20556  003CE6  118C               	iorwf	(??_TCP_Snd+37)& (0+255),w,b
 20557  003CE8  6F90               	movwf	(??_TCP_Snd+41)& (0+255),b
 20558  003CEA  5183               	movf	(??_TCP_Snd+28)& (0+255),w,b
 20559  003CEC  118D               	iorwf	(??_TCP_Snd+38)& (0+255),w,b
 20560  003CEE  6F91               	movwf	(??_TCP_Snd+42)& (0+255),b
 20561  003CF0  5184               	movf	(??_TCP_Snd+29)& (0+255),w,b
 20562  003CF2  118E               	iorwf	(??_TCP_Snd+39)& (0+255),w,b
 20563  003CF4  6F92               	movwf	(??_TCP_Snd+43)& (0+255),b
 20564  003CF6  5177               	movf	(??_TCP_Snd+16)& (0+255),w,b
 20565  003CF8  118F               	iorwf	(??_TCP_Snd+40)& (0+255),w,b
 20566  003CFA  6F93               	movwf	(??_TCP_Snd+44)& (0+255),b
 20567  003CFC  5178               	movf	(??_TCP_Snd+17)& (0+255),w,b
 20568  003CFE  1190               	iorwf	(??_TCP_Snd+41)& (0+255),w,b
 20569  003D00  6F94               	movwf	(??_TCP_Snd+45)& (0+255),b
 20570  003D02  5179               	movf	(??_TCP_Snd+18)& (0+255),w,b
 20571  003D04  1191               	iorwf	(??_TCP_Snd+42)& (0+255),w,b
 20572  003D06  6F95               	movwf	(??_TCP_Snd+46)& (0+255),b
 20573  003D08  517A               	movf	(??_TCP_Snd+19)& (0+255),w,b
 20574  003D0A  1192               	iorwf	(??_TCP_Snd+43)& (0+255),w,b
 20575  003D0C  6F96               	movwf	(??_TCP_Snd+47)& (0+255),b
 20576  003D0E  516D               	movf	(??_TCP_Snd+6)& (0+255),w,b
 20577  003D10  1193               	iorwf	(??_TCP_Snd+44)& (0+255),w,b
 20578  003D12  6FA4               	movwf	(TCP_Snd@txHeader+4)& (0+255),b
 20579  003D14  516E               	movf	(??_TCP_Snd+7)& (0+255),w,b
 20580  003D16  1194               	iorwf	(??_TCP_Snd+45)& (0+255),w,b
 20581  003D18  6FA5               	movwf	(TCP_Snd@txHeader+5)& (0+255),b
 20582  003D1A  516F               	movf	(??_TCP_Snd+8)& (0+255),w,b
 20583  003D1C  1195               	iorwf	(??_TCP_Snd+46)& (0+255),w,b
 20584  003D1E  6FA6               	movwf	(TCP_Snd@txHeader+6)& (0+255),b
 20585  003D20  5170               	movf	(??_TCP_Snd+9)& (0+255),w,b
 20586  003D22  1196               	iorwf	(??_TCP_Snd+47)& (0+255),w,b
 20587  003D24  6FA7               	movwf	(TCP_Snd@txHeader+7)& (0+255),b
 20588                           
 20589                           ;tcpv4.c: 214: txHeader.ackNumber = ((((uint32_t)tcbPtr->remoteAck&(uint32_t)0xff000000)
      +                           >> 24) | (((uint32_t)tcbPtr->remoteAck&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)tcbPtr
      +                          ->remoteAck&(uint32_t)0x0000ff00) << 8) | (((uint32_t)tcbPtr->remoteAck&(uint32_t)0x0000
      +                          0
 20590  003D26  0E0C               	movlw	12
 20591  003D28  2458               	addwf	TCP_Snd@tcbPtr,w,c
 20592  003D2A  6F67               	movwf	??_TCP_Snd& (0+255),b
 20593  003D2C  0E00               	movlw	0
 20594  003D2E  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 20595  003D30  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 20596  003D32  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 20597  003D36  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 20598  003D3A  0E00               	movlw	low (__smallconst shr (0+16))
 20599  003D3C  6EF8               	movwf	tblptru,c
 20600  003D3E  0E0F               	movlw	(high __ramtop+-1)
 20601  003D40  64F7               	cpfsgt	tblptrh,c
 20602  003D42  D00D               	bra	u10667
 20603  003D44  0009               	tblrd		*+
 20604  003D46  CFF5 F069          	movff	tablat,??_TCP_Snd+2
 20605  003D4A  0009               	tblrd		*+
 20606  003D4C  CFF5 F06A          	movff	tablat,??_TCP_Snd+3
 20607  003D50  0009               	tblrd		*+
 20608  003D52  CFF5 F06B          	movff	tablat,??_TCP_Snd+4
 20609  003D56  0009               	tblrd		*+
 20610  003D58  CFF5 F06C          	movff	tablat,??_TCP_Snd+5
 20611  003D5C  D00C               	bra	u10660
 20612  003D5E                     u10667:
 20613  003D5E  CFF6 FFE9          	movff	tblptrl,fsr0l
 20614  003D62  CFF7 FFEA          	movff	tblptrh,fsr0h
 20615  003D66  CFEE F069          	movff	postinc0,??_TCP_Snd+2
 20616  003D6A  CFEE F06A          	movff	postinc0,??_TCP_Snd+3
 20617  003D6E  CFEE F06B          	movff	postinc0,??_TCP_Snd+4
 20618  003D72  CFEE F06C          	movff	postinc0,??_TCP_Snd+5
 20619  003D76                     u10660:
 20620  003D76  0100               	movlb	0	; () banked
 20621  003D78  5169               	movf	(??_TCP_Snd+2)& (0+255),w,b
 20622  003D7A  6F6D               	movwf	(??_TCP_Snd+6)& (0+255),b
 20623  003D7C  6B6E               	clrf	(??_TCP_Snd+7)& (0+255),b
 20624  003D7E  6B6F               	clrf	(??_TCP_Snd+8)& (0+255),b
 20625  003D80  6B70               	clrf	(??_TCP_Snd+9)& (0+255),b
 20626  003D82  C06D  F070         	movff	??_TCP_Snd+6,??_TCP_Snd+9
 20627  003D86  6B6F               	clrf	(??_TCP_Snd+8)& (0+255),b
 20628  003D88  6B6E               	clrf	(??_TCP_Snd+7)& (0+255),b
 20629  003D8A  6B6D               	clrf	(??_TCP_Snd+6)& (0+255),b
 20630  003D8C  0E0C               	movlw	12
 20631  003D8E  2458               	addwf	TCP_Snd@tcbPtr,w,c
 20632  003D90  6F71               	movwf	(??_TCP_Snd+10)& (0+255),b
 20633  003D92  0E00               	movlw	0
 20634  003D94  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 20635  003D96  6F72               	movwf	(??_TCP_Snd+11)& (0+255),b
 20636  003D98  C071  FFF6         	movff	??_TCP_Snd+10,tblptrl
 20637  003D9C  C072  FFF7         	movff	??_TCP_Snd+11,tblptrh
 20638  003DA0  0E00               	movlw	low (__smallconst shr (0+16))
 20639  003DA2  6EF8               	movwf	tblptru,c
 20640  003DA4  0E0F               	movlw	(high __ramtop+-1)
 20641  003DA6  64F7               	cpfsgt	tblptrh,c
 20642  003DA8  D00D               	bra	u10677
 20643  003DAA  0009               	tblrd		*+
 20644  003DAC  CFF5 F073          	movff	tablat,??_TCP_Snd+12
 20645  003DB0  0009               	tblrd		*+
 20646  003DB2  CFF5 F074          	movff	tablat,??_TCP_Snd+13
 20647  003DB6  0009               	tblrd		*+
 20648  003DB8  CFF5 F075          	movff	tablat,??_TCP_Snd+14
 20649  003DBC  0009               	tblrd		*+
 20650  003DBE  CFF5 F076          	movff	tablat,??_TCP_Snd+15
 20651  003DC2  D00C               	bra	u10670
 20652  003DC4                     u10677:
 20653  003DC4  CFF6 FFE9          	movff	tblptrl,fsr0l
 20654  003DC8  CFF7 FFEA          	movff	tblptrh,fsr0h
 20655  003DCC  CFEE F073          	movff	postinc0,??_TCP_Snd+12
 20656  003DD0  CFEE F074          	movff	postinc0,??_TCP_Snd+13
 20657  003DD4  CFEE F075          	movff	postinc0,??_TCP_Snd+14
 20658  003DD8  CFEE F076          	movff	postinc0,??_TCP_Snd+15
 20659  003DDC                     u10670:
 20660  003DDC  0100               	movlb	0	; () banked
 20661  003DDE  6B77               	clrf	(??_TCP_Snd+16)& (0+255),b
 20662  003DE0  5174               	movf	(??_TCP_Snd+13)& (0+255),w,b
 20663  003DE2  6F78               	movwf	(??_TCP_Snd+17)& (0+255),b
 20664  003DE4  6B79               	clrf	(??_TCP_Snd+18)& (0+255),b
 20665  003DE6  6B7A               	clrf	(??_TCP_Snd+19)& (0+255),b
 20666  003DE8  C079  F07A         	movff	??_TCP_Snd+18,??_TCP_Snd+19
 20667  003DEC  C078  F079         	movff	??_TCP_Snd+17,??_TCP_Snd+18
 20668  003DF0  C077  F078         	movff	??_TCP_Snd+16,??_TCP_Snd+17
 20669  003DF4  6B77               	clrf	(??_TCP_Snd+16)& (0+255),b
 20670  003DF6  0E0C               	movlw	12
 20671  003DF8  2458               	addwf	TCP_Snd@tcbPtr,w,c
 20672  003DFA  6F7B               	movwf	(??_TCP_Snd+20)& (0+255),b
 20673  003DFC  0E00               	movlw	0
 20674  003DFE  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 20675  003E00  6F7C               	movwf	(??_TCP_Snd+21)& (0+255),b
 20676  003E02  C07B  FFF6         	movff	??_TCP_Snd+20,tblptrl
 20677  003E06  C07C  FFF7         	movff	??_TCP_Snd+21,tblptrh
 20678  003E0A  0E00               	movlw	low (__smallconst shr (0+16))
 20679  003E0C  6EF8               	movwf	tblptru,c
 20680  003E0E  0E0F               	movlw	(high __ramtop+-1)
 20681  003E10  64F7               	cpfsgt	tblptrh,c
 20682  003E12  D00D               	bra	u10687
 20683  003E14  0009               	tblrd		*+
 20684  003E16  CFF5 F07D          	movff	tablat,??_TCP_Snd+22
 20685  003E1A  0009               	tblrd		*+
 20686  003E1C  CFF5 F07E          	movff	tablat,??_TCP_Snd+23
 20687  003E20  0009               	tblrd		*+
 20688  003E22  CFF5 F07F          	movff	tablat,??_TCP_Snd+24
 20689  003E26  0009               	tblrd		*+
 20690  003E28  CFF5 F080          	movff	tablat,??_TCP_Snd+25
 20691  003E2C  D00C               	bra	u10680
 20692  003E2E                     u10687:
 20693  003E2E  CFF6 FFE9          	movff	tblptrl,fsr0l
 20694  003E32  CFF7 FFEA          	movff	tblptrh,fsr0h
 20695  003E36  CFEE F07D          	movff	postinc0,??_TCP_Snd+22
 20696  003E3A  CFEE F07E          	movff	postinc0,??_TCP_Snd+23
 20697  003E3E  CFEE F07F          	movff	postinc0,??_TCP_Snd+24
 20698  003E42  CFEE F080          	movff	postinc0,??_TCP_Snd+25
 20699  003E46                     u10680:
 20700  003E46  C07E  F07D         	movff	??_TCP_Snd+23,??_TCP_Snd+22
 20701  003E4A  C07F  F07E         	movff	??_TCP_Snd+24,??_TCP_Snd+23
 20702  003E4E  C080  F07F         	movff	??_TCP_Snd+25,??_TCP_Snd+24
 20703  003E52  0100               	movlb	0	; () banked
 20704  003E54  6B80               	clrf	(??_TCP_Snd+25)& (0+255),b
 20705  003E56  6B81               	clrf	(??_TCP_Snd+26)& (0+255),b
 20706  003E58  517E               	movf	(??_TCP_Snd+23)& (0+255),w,b
 20707  003E5A  6F82               	movwf	(??_TCP_Snd+27)& (0+255),b
 20708  003E5C  6B83               	clrf	(??_TCP_Snd+28)& (0+255),b
 20709  003E5E  6B84               	clrf	(??_TCP_Snd+29)& (0+255),b
 20710  003E60  0E0C               	movlw	12
 20711  003E62  2458               	addwf	TCP_Snd@tcbPtr,w,c
 20712  003E64  6F85               	movwf	(??_TCP_Snd+30)& (0+255),b
 20713  003E66  0E00               	movlw	0
 20714  003E68  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 20715  003E6A  6F86               	movwf	(??_TCP_Snd+31)& (0+255),b
 20716  003E6C  C085  FFF6         	movff	??_TCP_Snd+30,tblptrl
 20717  003E70  C086  FFF7         	movff	??_TCP_Snd+31,tblptrh
 20718  003E74  0E00               	movlw	low (__smallconst shr (0+16))
 20719  003E76  6EF8               	movwf	tblptru,c
 20720  003E78  0E0F               	movlw	(high __ramtop+-1)
 20721  003E7A  64F7               	cpfsgt	tblptrh,c
 20722  003E7C  D00D               	bra	u10697
 20723  003E7E  0009               	tblrd		*+
 20724  003E80  CFF5 F087          	movff	tablat,??_TCP_Snd+32
 20725  003E84  0009               	tblrd		*+
 20726  003E86  CFF5 F088          	movff	tablat,??_TCP_Snd+33
 20727  003E8A  0009               	tblrd		*+
 20728  003E8C  CFF5 F089          	movff	tablat,??_TCP_Snd+34
 20729  003E90  0009               	tblrd		*+
 20730  003E92  CFF5 F08A          	movff	tablat,??_TCP_Snd+35
 20731  003E96  D00C               	bra	u10690
 20732  003E98                     u10697:
 20733  003E98  CFF6 FFE9          	movff	tblptrl,fsr0l
 20734  003E9C  CFF7 FFEA          	movff	tblptrh,fsr0h
 20735  003EA0  CFEE F087          	movff	postinc0,??_TCP_Snd+32
 20736  003EA4  CFEE F088          	movff	postinc0,??_TCP_Snd+33
 20737  003EA8  CFEE F089          	movff	postinc0,??_TCP_Snd+34
 20738  003EAC  CFEE F08A          	movff	postinc0,??_TCP_Snd+35
 20739  003EB0                     u10690:
 20740  003EB0  0100               	movlb	0	; () banked
 20741  003EB2  6B8B               	clrf	(??_TCP_Snd+36)& (0+255),b
 20742  003EB4  6B8C               	clrf	(??_TCP_Snd+37)& (0+255),b
 20743  003EB6  6B8D               	clrf	(??_TCP_Snd+38)& (0+255),b
 20744  003EB8  518A               	movf	(??_TCP_Snd+35)& (0+255),w,b
 20745  003EBA  6F8E               	movwf	(??_TCP_Snd+39)& (0+255),b
 20746  003EBC  0E19               	movlw	25
 20747  003EBE  D005               	goto	u10700
 20748  003EC0                     u10705:
 20749  003EC0  90D8               	bcf	status,0,c
 20750  003EC2  338E               	rrcf	(??_TCP_Snd+39)& (0+255),f,b
 20751  003EC4  338D               	rrcf	(??_TCP_Snd+38)& (0+255),f,b
 20752  003EC6  338C               	rrcf	(??_TCP_Snd+37)& (0+255),f,b
 20753  003EC8  338B               	rrcf	(??_TCP_Snd+36)& (0+255),f,b
 20754  003ECA                     u10700:
 20755  003ECA  2EE8               	decfsz	wreg,f,c
 20756  003ECC  D7F9               	goto	u10705
 20757  003ECE  5181               	movf	(??_TCP_Snd+26)& (0+255),w,b
 20758  003ED0  118B               	iorwf	(??_TCP_Snd+36)& (0+255),w,b
 20759  003ED2  6F8F               	movwf	(??_TCP_Snd+40)& (0+255),b
 20760  003ED4  5182               	movf	(??_TCP_Snd+27)& (0+255),w,b
 20761  003ED6  118C               	iorwf	(??_TCP_Snd+37)& (0+255),w,b
 20762  003ED8  6F90               	movwf	(??_TCP_Snd+41)& (0+255),b
 20763  003EDA  5183               	movf	(??_TCP_Snd+28)& (0+255),w,b
 20764  003EDC  118D               	iorwf	(??_TCP_Snd+38)& (0+255),w,b
 20765  003EDE  6F91               	movwf	(??_TCP_Snd+42)& (0+255),b
 20766  003EE0  5184               	movf	(??_TCP_Snd+29)& (0+255),w,b
 20767  003EE2  118E               	iorwf	(??_TCP_Snd+39)& (0+255),w,b
 20768  003EE4  6F92               	movwf	(??_TCP_Snd+43)& (0+255),b
 20769  003EE6  5177               	movf	(??_TCP_Snd+16)& (0+255),w,b
 20770  003EE8  118F               	iorwf	(??_TCP_Snd+40)& (0+255),w,b
 20771  003EEA  6F93               	movwf	(??_TCP_Snd+44)& (0+255),b
 20772  003EEC  5178               	movf	(??_TCP_Snd+17)& (0+255),w,b
 20773  003EEE  1190               	iorwf	(??_TCP_Snd+41)& (0+255),w,b
 20774  003EF0  6F94               	movwf	(??_TCP_Snd+45)& (0+255),b
 20775  003EF2  5179               	movf	(??_TCP_Snd+18)& (0+255),w,b
 20776  003EF4  1191               	iorwf	(??_TCP_Snd+42)& (0+255),w,b
 20777  003EF6  6F95               	movwf	(??_TCP_Snd+46)& (0+255),b
 20778  003EF8  517A               	movf	(??_TCP_Snd+19)& (0+255),w,b
 20779  003EFA  1192               	iorwf	(??_TCP_Snd+43)& (0+255),w,b
 20780  003EFC  6F96               	movwf	(??_TCP_Snd+47)& (0+255),b
 20781  003EFE  516D               	movf	(??_TCP_Snd+6)& (0+255),w,b
 20782  003F00  1193               	iorwf	(??_TCP_Snd+44)& (0+255),w,b
 20783  003F02  6FA8               	movwf	(TCP_Snd@txHeader+8)& (0+255),b
 20784  003F04  516E               	movf	(??_TCP_Snd+7)& (0+255),w,b
 20785  003F06  1194               	iorwf	(??_TCP_Snd+45)& (0+255),w,b
 20786  003F08  6FA9               	movwf	(TCP_Snd@txHeader+9)& (0+255),b
 20787  003F0A  516F               	movf	(??_TCP_Snd+8)& (0+255),w,b
 20788  003F0C  1195               	iorwf	(??_TCP_Snd+46)& (0+255),w,b
 20789  003F0E  6FAA               	movwf	(TCP_Snd@txHeader+10)& (0+255),b
 20790  003F10  5170               	movf	(??_TCP_Snd+9)& (0+255),w,b
 20791  003F12  1196               	iorwf	(??_TCP_Snd+47)& (0+255),w,b
 20792  003F14  6FAB               	movwf	(TCP_Snd@txHeader+11)& (0+255),b
 20793                           
 20794                           ; BSR set to: 0
 20795                           ;tcpv4.c: 216: txHeader.ns = 0;
 20796  003F16  91AC               	bcf	(TCP_Snd@txHeader+12)& (0+255),0,b
 20797                           
 20798                           ; BSR set to: 0
 20799                           ;tcpv4.c: 217: txHeader.reserved = 0;
 20800  003F18  0EF1               	movlw	-15
 20801  003F1A  17AC               	andwf	(TCP_Snd@txHeader+12)& (0+255),f,b
 20802                           
 20803                           ; BSR set to: 0
 20804                           ;tcpv4.c: 218: txHeader.dataOffset = 5;
 20805  003F1C  51AC               	movf	(TCP_Snd@txHeader+12)& (0+255),w,b
 20806  003F1E  0B0F               	andlw	-241
 20807  003F20  0950               	iorlw	80
 20808  003F22  6FAC               	movwf	(TCP_Snd@txHeader+12)& (0+255),b
 20809                           
 20810                           ;tcpv4.c: 219: txHeader.windowSize = ((((uint16_t)tcbPtr->localWnd & (uint16_t)0xFF00) >
      +                          > 8) | (((uint16_t)tcbPtr->localWnd & (uint16_t)0x00FF) << 8));
 20811  003F24  0E1A               	movlw	26
 20812  003F26  2458               	addwf	TCP_Snd@tcbPtr,w,c
 20813  003F28  6F67               	movwf	??_TCP_Snd& (0+255),b
 20814  003F2A  0E00               	movlw	0
 20815  003F2C  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 20816  003F2E  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 20817  003F30  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 20818  003F34  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 20819  003F38  0E00               	movlw	low (__smallconst shr (0+16))
 20820  003F3A  6EF8               	movwf	tblptru,c
 20821  003F3C  0E0F               	movlw	(high __ramtop+-1)
 20822  003F3E  64F7               	cpfsgt	tblptrh,c
 20823  003F40  D007               	bra	u10717
 20824  003F42  0009               	tblrd		*+
 20825  003F44  CFF5 F069          	movff	tablat,??_TCP_Snd+2
 20826  003F48  0009               	tblrd		*+
 20827  003F4A  CFF5 F06A          	movff	tablat,??_TCP_Snd+3
 20828  003F4E  D008               	bra	u10710
 20829  003F50                     u10717:
 20830  003F50  CFF6 FFE9          	movff	tblptrl,fsr0l
 20831  003F54  CFF7 FFEA          	movff	tblptrh,fsr0h
 20832  003F58  CFEE F069          	movff	postinc0,??_TCP_Snd+2
 20833  003F5C  CFEE F06A          	movff	postinc0,??_TCP_Snd+3
 20834  003F60                     u10710:
 20835  003F60  0100               	movlb	0	; () banked
 20836  003F62  5169               	movf	(??_TCP_Snd+2)& (0+255),w,b
 20837  003F64  6F6C               	movwf	(??_TCP_Snd+5)& (0+255),b
 20838  003F66  6B6B               	clrf	(??_TCP_Snd+4)& (0+255),b
 20839  003F68  0E1A               	movlw	26
 20840  003F6A  2458               	addwf	TCP_Snd@tcbPtr,w,c
 20841  003F6C  6F6D               	movwf	(??_TCP_Snd+6)& (0+255),b
 20842  003F6E  0E00               	movlw	0
 20843  003F70  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 20844  003F72  6F6E               	movwf	(??_TCP_Snd+7)& (0+255),b
 20845  003F74  C06D  FFF6         	movff	??_TCP_Snd+6,tblptrl
 20846  003F78  C06E  FFF7         	movff	??_TCP_Snd+7,tblptrh
 20847  003F7C  0E00               	movlw	low (__smallconst shr (0+16))
 20848  003F7E  6EF8               	movwf	tblptru,c
 20849  003F80  0E0F               	movlw	(high __ramtop+-1)
 20850  003F82  64F7               	cpfsgt	tblptrh,c
 20851  003F84  D007               	bra	u10727
 20852  003F86  0009               	tblrd		*+
 20853  003F88  CFF5 F06F          	movff	tablat,??_TCP_Snd+8
 20854  003F8C  0009               	tblrd		*+
 20855  003F8E  CFF5 F070          	movff	tablat,??_TCP_Snd+9
 20856  003F92  D008               	bra	u10720
 20857  003F94                     u10727:
 20858  003F94  CFF6 FFE9          	movff	tblptrl,fsr0l
 20859  003F98  CFF7 FFEA          	movff	tblptrh,fsr0h
 20860  003F9C  CFEE F06F          	movff	postinc0,??_TCP_Snd+8
 20861  003FA0  CFEE F070          	movff	postinc0,??_TCP_Snd+9
 20862  003FA4                     u10720:
 20863  003FA4  C070  F06F         	movff	??_TCP_Snd+9,??_TCP_Snd+8
 20864  003FA8  0100               	movlb	0	; () banked
 20865  003FAA  6B70               	clrf	(??_TCP_Snd+9)& (0+255),b
 20866  003FAC  6B70               	clrf	(??_TCP_Snd+9)& (0+255),b
 20867  003FAE  516B               	movf	(??_TCP_Snd+4)& (0+255),w,b
 20868  003FB0  116F               	iorwf	(??_TCP_Snd+8)& (0+255),w,b
 20869  003FB2  6FAE               	movwf	(TCP_Snd@txHeader+14)& (0+255),b
 20870  003FB4  516C               	movf	(??_TCP_Snd+5)& (0+255),w,b
 20871  003FB6  1170               	iorwf	(??_TCP_Snd+9)& (0+255),w,b
 20872  003FB8  6FAF               	movwf	(TCP_Snd@txHeader+15)& (0+255),b
 20873                           
 20874                           ; BSR set to: 0
 20875                           ;tcpv4.c: 220: txHeader.checksum = 0;
 20876  003FBA  6BB0               	clrf	(TCP_Snd@txHeader+16)& (0+255),b
 20877  003FBC  6BB1               	clrf	(TCP_Snd@txHeader+17)& (0+255),b
 20878                           
 20879                           ; BSR set to: 0
 20880                           ;tcpv4.c: 221: txHeader.urgentPtr = 0;
 20881  003FBE  6BB2               	clrf	(TCP_Snd@txHeader+18)& (0+255),b
 20882  003FC0  6BB3               	clrf	(TCP_Snd@txHeader+19)& (0+255),b
 20883                           
 20884                           ;tcpv4.c: 223: if ((tcbPtr->flags) & (0x02U | 0x04U))
 20885  003FC2  0E35               	movlw	53
 20886  003FC4  2458               	addwf	TCP_Snd@tcbPtr,w,c
 20887  003FC6  6F67               	movwf	??_TCP_Snd& (0+255),b
 20888  003FC8  0E00               	movlw	0
 20889  003FCA  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 20890  003FCC  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 20891  003FCE  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 20892  003FD2  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 20893  003FD6  0E00               	movlw	low (__smallconst shr (0+16))
 20894  003FD8  6EF8               	movwf	tblptru,c
 20895  003FDA  0E0F               	movlw	(high __ramtop+-1)
 20896  003FDC  64F7               	cpfsgt	tblptrh,c
 20897  003FDE  D003               	bra	u10737
 20898  003FE0  0008               	tblrd		*
 20899  003FE2  50F5               	movf	tablat,w,c
 20900  003FE4  D005               	bra	u10730
 20901  003FE6                     u10737:
 20902  003FE6  CFF6 FFE9          	movff	tblptrl,fsr0l
 20903  003FEA  CFF7 FFEA          	movff	tblptrh,fsr0h
 20904  003FEE  50EF               	movf	indf0,w,c
 20905  003FF0                     u10730:
 20906  003FF0  0100               	movlb	0	; () banked
 20907  003FF2  6F69               	movwf	(??_TCP_Snd+2)& (0+255),b
 20908  003FF4  0E06               	movlw	6
 20909  003FF6  1769               	andwf	(??_TCP_Snd+2)& (0+255),f,b
 20910  003FF8  E003               	bz	l8065
 20911                           
 20912                           ; BSR set to: 0
 20913                           ;tcpv4.c: 224: {
 20914                           ;tcpv4.c: 225: tcpDataLength = 0;
 20915  003FFA  6B9E               	clrf	TCP_Snd@tcpDataLength& (0+255),b
 20916  003FFC  6B9F               	clrf	(TCP_Snd@tcpDataLength+1)& (0+255),b
 20917                           
 20918                           ;tcpv4.c: 226: } else
 20919  003FFE  D188               	goto	l1212
 20920  004000                     l8065:
 20921                           
 20922                           ; BSR set to: 0
 20923                           ;tcpv4.c: 227: {
 20924                           ;tcpv4.c: 228: tcpDataLength = tcbPtr->bytesToSend;
 20925  004000  0E27               	movlw	39
 20926  004002  2458               	addwf	TCP_Snd@tcbPtr,w,c
 20927  004004  6F67               	movwf	??_TCP_Snd& (0+255),b
 20928  004006  0E00               	movlw	0
 20929  004008  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 20930  00400A  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 20931  00400C  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 20932  004010  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 20933  004014  0E00               	movlw	low (__smallconst shr (0+16))
 20934  004016  6EF8               	movwf	tblptru,c
 20935  004018  0E0F               	movlw	(high __ramtop+-1)
 20936  00401A  64F7               	cpfsgt	tblptrh,c
 20937  00401C  D007               	bra	u10757
 20938  00401E  0009               	tblrd		*+
 20939  004020  CFF5 F09E          	movff	tablat,TCP_Snd@tcpDataLength
 20940  004024  0009               	tblrd		*+
 20941  004026  CFF5 F09F          	movff	tablat,TCP_Snd@tcpDataLength+1
 20942  00402A  D008               	bra	u10750
 20943  00402C                     u10757:
 20944  00402C  CFF6 FFE9          	movff	tblptrl,fsr0l
 20945  004030  CFF7 FFEA          	movff	tblptrh,fsr0h
 20946  004034  CFEE F09E          	movff	postinc0,TCP_Snd@tcpDataLength
 20947  004038  CFEE F09F          	movff	postinc0,TCP_Snd@tcpDataLength+1
 20948  00403C                     u10750:
 20949                           
 20950                           ;tcpv4.c: 230: if (tcpDataLength != 0)
 20951  00403C  0100               	movlb	0	; () banked
 20952  00403E  519E               	movf	TCP_Snd@tcpDataLength& (0+255),w,b
 20953  004040  119F               	iorwf	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 20954  004042  E101 D165          	bz	l1212
 20955                           
 20956                           ; BSR set to: 0
 20957                           ;tcpv4.c: 231: {
 20958                           ;tcpv4.c: 232: if(tcpDataLength > tcbPtr->remoteWnd)
 20959  004046  0E18               	movlw	24
 20960  004048  2458               	addwf	TCP_Snd@tcbPtr,w,c
 20961  00404A  6F67               	movwf	??_TCP_Snd& (0+255),b
 20962  00404C  0E00               	movlw	0
 20963  00404E  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 20964  004050  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 20965  004052  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 20966  004056  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 20967  00405A  0E00               	movlw	low (__smallconst shr (0+16))
 20968  00405C  6EF8               	movwf	tblptru,c
 20969  00405E  0E0F               	movlw	(high __ramtop+-1)
 20970  004060  64F7               	cpfsgt	tblptrh,c
 20971  004062  D007               	bra	u10777
 20972  004064  0009               	tblrd		*+
 20973  004066  CFF5 F069          	movff	tablat,??_TCP_Snd+2
 20974  00406A  0009               	tblrd		*+
 20975  00406C  CFF5 F06A          	movff	tablat,??_TCP_Snd+3
 20976  004070  D008               	bra	u10770
 20977  004072                     u10777:
 20978  004072  CFF6 FFE9          	movff	tblptrl,fsr0l
 20979  004076  CFF7 FFEA          	movff	tblptrh,fsr0h
 20980  00407A  CFEE F069          	movff	postinc0,??_TCP_Snd+2
 20981  00407E  CFEE F06A          	movff	postinc0,??_TCP_Snd+3
 20982  004082                     u10770:
 20983  004082  0100               	movlb	0	; () banked
 20984  004084  519E               	movf	TCP_Snd@tcpDataLength& (0+255),w,b
 20985  004086  5D69               	subwf	(??_TCP_Snd+2)& (0+255),w,b
 20986  004088  519F               	movf	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 20987  00408A  596A               	subwfb	(??_TCP_Snd+3)& (0+255),w,b
 20988  00408C  E21E               	bc	l1214
 20989                           
 20990                           ; BSR set to: 0
 20991                           ;tcpv4.c: 233: {
 20992                           ;tcpv4.c: 234: tcpDataLength = tcbPtr->remoteWnd;
 20993  00408E  0E18               	movlw	24
 20994  004090  2458               	addwf	TCP_Snd@tcbPtr,w,c
 20995  004092  6F67               	movwf	??_TCP_Snd& (0+255),b
 20996  004094  0E00               	movlw	0
 20997  004096  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 20998  004098  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 20999  00409A  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 21000  00409E  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 21001  0040A2  0E00               	movlw	low (__smallconst shr (0+16))
 21002  0040A4  6EF8               	movwf	tblptru,c
 21003  0040A6  0E0F               	movlw	(high __ramtop+-1)
 21004  0040A8  64F7               	cpfsgt	tblptrh,c
 21005  0040AA  D007               	bra	u10797
 21006  0040AC  0009               	tblrd		*+
 21007  0040AE  CFF5 F09E          	movff	tablat,TCP_Snd@tcpDataLength
 21008  0040B2  0009               	tblrd		*+
 21009  0040B4  CFF5 F09F          	movff	tablat,TCP_Snd@tcpDataLength+1
 21010  0040B8  D008               	bra	u10790
 21011  0040BA                     u10797:
 21012  0040BA  CFF6 FFE9          	movff	tblptrl,fsr0l
 21013  0040BE  CFF7 FFEA          	movff	tblptrh,fsr0h
 21014  0040C2  CFEE F09E          	movff	postinc0,TCP_Snd@tcpDataLength
 21015  0040C6  CFEE F09F          	movff	postinc0,TCP_Snd@tcpDataLength+1
 21016  0040CA                     u10790:
 21017  0040CA                     l1214:
 21018                           
 21019                           ;tcpv4.c: 235: }
 21020                           ;tcpv4.c: 237: if(tcpDataLength > tcbPtr->mss)
 21021  0040CA  0E1C               	movlw	28
 21022  0040CC  2458               	addwf	TCP_Snd@tcbPtr,w,c
 21023  0040CE  0100               	movlb	0	; () banked
 21024  0040D0  6F67               	movwf	??_TCP_Snd& (0+255),b
 21025  0040D2  0E00               	movlw	0
 21026  0040D4  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 21027  0040D6  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 21028  0040D8  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 21029  0040DC  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 21030  0040E0  0E00               	movlw	low (__smallconst shr (0+16))
 21031  0040E2  6EF8               	movwf	tblptru,c
 21032  0040E4  0E0F               	movlw	(high __ramtop+-1)
 21033  0040E6  64F7               	cpfsgt	tblptrh,c
 21034  0040E8  D007               	bra	u10807
 21035  0040EA  0009               	tblrd		*+
 21036  0040EC  CFF5 F069          	movff	tablat,??_TCP_Snd+2
 21037  0040F0  0009               	tblrd		*+
 21038  0040F2  CFF5 F06A          	movff	tablat,??_TCP_Snd+3
 21039  0040F6  D008               	bra	u10800
 21040  0040F8                     u10807:
 21041  0040F8  CFF6 FFE9          	movff	tblptrl,fsr0l
 21042  0040FC  CFF7 FFEA          	movff	tblptrh,fsr0h
 21043  004100  CFEE F069          	movff	postinc0,??_TCP_Snd+2
 21044  004104  CFEE F06A          	movff	postinc0,??_TCP_Snd+3
 21045  004108                     u10800:
 21046  004108  0100               	movlb	0	; () banked
 21047  00410A  519E               	movf	TCP_Snd@tcpDataLength& (0+255),w,b
 21048  00410C  5D69               	subwf	(??_TCP_Snd+2)& (0+255),w,b
 21049  00410E  519F               	movf	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 21050  004110  596A               	subwfb	(??_TCP_Snd+3)& (0+255),w,b
 21051  004112  E21E               	bc	l1215
 21052                           
 21053                           ; BSR set to: 0
 21054                           ;tcpv4.c: 238: {
 21055                           ;tcpv4.c: 239: tcpDataLength = tcbPtr->mss;
 21056  004114  0E1C               	movlw	28
 21057  004116  2458               	addwf	TCP_Snd@tcbPtr,w,c
 21058  004118  6F67               	movwf	??_TCP_Snd& (0+255),b
 21059  00411A  0E00               	movlw	0
 21060  00411C  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 21061  00411E  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 21062  004120  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 21063  004124  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 21064  004128  0E00               	movlw	low (__smallconst shr (0+16))
 21065  00412A  6EF8               	movwf	tblptru,c
 21066  00412C  0E0F               	movlw	(high __ramtop+-1)
 21067  00412E  64F7               	cpfsgt	tblptrh,c
 21068  004130  D007               	bra	u10827
 21069  004132  0009               	tblrd		*+
 21070  004134  CFF5 F09E          	movff	tablat,TCP_Snd@tcpDataLength
 21071  004138  0009               	tblrd		*+
 21072  00413A  CFF5 F09F          	movff	tablat,TCP_Snd@tcpDataLength+1
 21073  00413E  D008               	bra	u10820
 21074  004140                     u10827:
 21075  004140  CFF6 FFE9          	movff	tblptrl,fsr0l
 21076  004144  CFF7 FFEA          	movff	tblptrh,fsr0h
 21077  004148  CFEE F09E          	movff	postinc0,TCP_Snd@tcpDataLength
 21078  00414C  CFEE F09F          	movff	postinc0,TCP_Snd@tcpDataLength+1
 21079  004150                     u10820:
 21080  004150                     l1215:
 21081                           
 21082                           ;tcpv4.c: 240: }
 21083                           ;tcpv4.c: 241: data = tcbPtr->txBufferPtr;
 21084  004150  0E25               	movlw	37
 21085  004152  2458               	addwf	TCP_Snd@tcbPtr,w,c
 21086  004154  0100               	movlb	0	; () banked
 21087  004156  6F67               	movwf	??_TCP_Snd& (0+255),b
 21088  004158  0E00               	movlw	0
 21089  00415A  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 21090  00415C  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 21091  00415E  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 21092  004162  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 21093  004166  0E00               	movlw	low (__smallconst shr (0+16))
 21094  004168  6EF8               	movwf	tblptru,c
 21095  00416A  0E0F               	movlw	(high __ramtop+-1)
 21096  00416C  64F7               	cpfsgt	tblptrh,c
 21097  00416E  D007               	bra	u10837
 21098  004170  0009               	tblrd		*+
 21099  004172  CFF5 F097          	movff	tablat,TCP_Snd@data
 21100  004176  0009               	tblrd		*+
 21101  004178  CFF5 F098          	movff	tablat,TCP_Snd@data+1
 21102  00417C  D008               	bra	u10830
 21103  00417E                     u10837:
 21104  00417E  CFF6 FFE9          	movff	tblptrl,fsr0l
 21105  004182  CFF7 FFEA          	movff	tblptrh,fsr0h
 21106  004186  CFEE F097          	movff	postinc0,TCP_Snd@data
 21107  00418A  CFEE F098          	movff	postinc0,TCP_Snd@data+1
 21108  00418E                     u10830:
 21109                           
 21110                           ;tcpv4.c: 244: tcbPtr->txBufferPtr = tcbPtr->txBufferPtr + tcpDataLength;
 21111  00418E  0E25               	movlw	37
 21112  004190  2458               	addwf	TCP_Snd@tcbPtr,w,c
 21113  004192  0100               	movlb	0	; () banked
 21114  004194  6F67               	movwf	??_TCP_Snd& (0+255),b
 21115  004196  0E00               	movlw	0
 21116  004198  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 21117  00419A  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 21118  00419C  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 21119  0041A0  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 21120  0041A4  0E00               	movlw	low (__smallconst shr (0+16))
 21121  0041A6  6EF8               	movwf	tblptru,c
 21122  0041A8  0E0F               	movlw	(high __ramtop+-1)
 21123  0041AA  64F7               	cpfsgt	tblptrh,c
 21124  0041AC  D007               	bra	u10847
 21125  0041AE  0009               	tblrd		*+
 21126  0041B0  CFF5 F069          	movff	tablat,??_TCP_Snd+2
 21127  0041B4  0009               	tblrd		*+
 21128  0041B6  CFF5 F06A          	movff	tablat,??_TCP_Snd+3
 21129  0041BA  D008               	bra	u10840
 21130  0041BC                     u10847:
 21131  0041BC  CFF6 FFE9          	movff	tblptrl,fsr0l
 21132  0041C0  CFF7 FFEA          	movff	tblptrh,fsr0h
 21133  0041C4  CFEE F069          	movff	postinc0,??_TCP_Snd+2
 21134  0041C8  CFEE F06A          	movff	postinc0,??_TCP_Snd+3
 21135  0041CC                     u10840:
 21136  0041CC  0100               	movlb	0	; () banked
 21137  0041CE  519E               	movf	TCP_Snd@tcpDataLength& (0+255),w,b
 21138  0041D0  2769               	addwf	(??_TCP_Snd+2)& (0+255),f,b
 21139  0041D2  519F               	movf	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 21140  0041D4  236A               	addwfc	(??_TCP_Snd+3)& (0+255),f,b
 21141  0041D6  0E25               	movlw	37
 21142  0041D8  2458               	addwf	TCP_Snd@tcbPtr,w,c
 21143  0041DA  6F6B               	movwf	(??_TCP_Snd+4)& (0+255),b
 21144  0041DC  0E00               	movlw	0
 21145  0041DE  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 21146  0041E0  6F6C               	movwf	(??_TCP_Snd+5)& (0+255),b
 21147  0041E2  C06B  FFF6         	movff	??_TCP_Snd+4,tblptrl
 21148  0041E6  C06C  FFF7         	movff	??_TCP_Snd+5,tblptrh
 21149  0041EA  0E00               	movlw	low (__smallconst shr (0+16))
 21150  0041EC  6EF8               	movwf	tblptru,c
 21151  0041EE  0E0F               	movlw	(high __ramtop+-1)
 21152  0041F0  64F7               	cpfsgt	tblptrh,c
 21153  0041F2  D007               	bra	u10857
 21154  0041F4  C069  FFF5         	movff	??_TCP_Snd+2,tablat
 21155  0041F8  000D               	tblwt		*+
 21156  0041FA  C06A  FFF5         	movff	??_TCP_Snd+3,tablat
 21157  0041FE  000C               	tblwt		*
 21158  004200  D008               	bra	u10850
 21159  004202                     u10857:
 21160  004202  CFF6 FFE9          	movff	tblptrl,fsr0l
 21161  004206  CFF7 FFEA          	movff	tblptrh,fsr0h
 21162  00420A  C069  FFEE         	movff	??_TCP_Snd+2,postinc0
 21163  00420E  C06A  FFEF         	movff	??_TCP_Snd+3,indf0
 21164  004212                     u10850:
 21165                           
 21166                           ;tcpv4.c: 245: tcbPtr->bytesToSend = tcbPtr->bytesToSend - tcpDataLength;
 21167  004212  0E27               	movlw	39
 21168  004214  2458               	addwf	TCP_Snd@tcbPtr,w,c
 21169  004216  0100               	movlb	0	; () banked
 21170  004218  6F67               	movwf	??_TCP_Snd& (0+255),b
 21171  00421A  0E00               	movlw	0
 21172  00421C  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 21173  00421E  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 21174  004220  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 21175  004224  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 21176  004228  0E00               	movlw	low (__smallconst shr (0+16))
 21177  00422A  6EF8               	movwf	tblptru,c
 21178  00422C  0E0F               	movlw	(high __ramtop+-1)
 21179  00422E  64F7               	cpfsgt	tblptrh,c
 21180  004230  D007               	bra	u10867
 21181  004232  0009               	tblrd		*+
 21182  004234  CFF5 F069          	movff	tablat,??_TCP_Snd+2
 21183  004238  0009               	tblrd		*+
 21184  00423A  CFF5 F06A          	movff	tablat,??_TCP_Snd+3
 21185  00423E  D008               	bra	u10860
 21186  004240                     u10867:
 21187  004240  CFF6 FFE9          	movff	tblptrl,fsr0l
 21188  004244  CFF7 FFEA          	movff	tblptrh,fsr0h
 21189  004248  CFEE F069          	movff	postinc0,??_TCP_Snd+2
 21190  00424C  CFEE F06A          	movff	postinc0,??_TCP_Snd+3
 21191  004250                     u10860:
 21192  004250  0100               	movlb	0	; () banked
 21193  004252  519E               	movf	TCP_Snd@tcpDataLength& (0+255),w,b
 21194  004254  5F69               	subwf	(??_TCP_Snd+2)& (0+255),f,b
 21195  004256  519F               	movf	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 21196  004258  5B6A               	subwfb	(??_TCP_Snd+3)& (0+255),f,b
 21197  00425A  0E27               	movlw	39
 21198  00425C  2458               	addwf	TCP_Snd@tcbPtr,w,c
 21199  00425E  6F6B               	movwf	(??_TCP_Snd+4)& (0+255),b
 21200  004260  0E00               	movlw	0
 21201  004262  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 21202  004264  6F6C               	movwf	(??_TCP_Snd+5)& (0+255),b
 21203  004266  C06B  FFF6         	movff	??_TCP_Snd+4,tblptrl
 21204  00426A  C06C  FFF7         	movff	??_TCP_Snd+5,tblptrh
 21205  00426E  0E00               	movlw	low (__smallconst shr (0+16))
 21206  004270  6EF8               	movwf	tblptru,c
 21207  004272  0E0F               	movlw	(high __ramtop+-1)
 21208  004274  64F7               	cpfsgt	tblptrh,c
 21209  004276  D007               	bra	u10877
 21210  004278  C069  FFF5         	movff	??_TCP_Snd+2,tablat
 21211  00427C  000D               	tblwt		*+
 21212  00427E  C06A  FFF5         	movff	??_TCP_Snd+3,tablat
 21213  004282  000C               	tblwt		*
 21214  004284  D008               	bra	u10870
 21215  004286                     u10877:
 21216  004286  CFF6 FFE9          	movff	tblptrl,fsr0l
 21217  00428A  CFF7 FFEA          	movff	tblptrh,fsr0h
 21218  00428E  C069  FFEE         	movff	??_TCP_Snd+2,postinc0
 21219  004292  C06A  FFEF         	movff	??_TCP_Snd+3,indf0
 21220  004296                     u10870:
 21221                           
 21222                           ;tcpv4.c: 247: if (tcbPtr->bytesToSend == 0)
 21223  004296  0E27               	movlw	39
 21224  004298  2458               	addwf	TCP_Snd@tcbPtr,w,c
 21225  00429A  0100               	movlb	0	; () banked
 21226  00429C  6F67               	movwf	??_TCP_Snd& (0+255),b
 21227  00429E  0E00               	movlw	0
 21228  0042A0  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 21229  0042A2  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 21230  0042A4  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 21231  0042A8  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 21232  0042AC  0E00               	movlw	low (__smallconst shr (0+16))
 21233  0042AE  6EF8               	movwf	tblptru,c
 21234  0042B0  0E0F               	movlw	(high __ramtop+-1)
 21235  0042B2  64F7               	cpfsgt	tblptrh,c
 21236  0042B4  D007               	bra	u10887
 21237  0042B6  0009               	tblrd		*+
 21238  0042B8  CFF5 F069          	movff	tablat,??_TCP_Snd+2
 21239  0042BC  0009               	tblrd		*+
 21240  0042BE  CFF5 F06A          	movff	tablat,??_TCP_Snd+3
 21241  0042C2  D008               	bra	u10880
 21242  0042C4                     u10887:
 21243  0042C4  CFF6 FFE9          	movff	tblptrl,fsr0l
 21244  0042C8  CFF7 FFEA          	movff	tblptrh,fsr0h
 21245  0042CC  CFEE F069          	movff	postinc0,??_TCP_Snd+2
 21246  0042D0  CFEE F06A          	movff	postinc0,??_TCP_Snd+3
 21247  0042D4                     u10880:
 21248  0042D4  0100               	movlb	0	; () banked
 21249  0042D6  5169               	movf	(??_TCP_Snd+2)& (0+255),w,b
 21250  0042D8  116A               	iorwf	(??_TCP_Snd+3)& (0+255),w,b
 21251  0042DA  E11A               	bnz	l1212
 21252                           
 21253                           ; BSR set to: 0
 21254                           ;tcpv4.c: 248: {
 21255                           ;tcpv4.c: 249: tcbPtr->flags |= 0x08U;
 21256  0042DC  0E35               	movlw	53
 21257  0042DE  2458               	addwf	TCP_Snd@tcbPtr,w,c
 21258  0042E0  6F67               	movwf	??_TCP_Snd& (0+255),b
 21259  0042E2  0E00               	movlw	0
 21260  0042E4  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 21261  0042E6  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 21262  0042E8  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 21263  0042EC  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 21264  0042F0  0E00               	movlw	low (__smallconst shr (0+16))
 21265  0042F2  6EF8               	movwf	tblptru,c
 21266  0042F4  0E0F               	movlw	(high __ramtop+-1)
 21267  0042F6  64F7               	cpfsgt	tblptrh,c
 21268  0042F8  D005               	bra	u10907
 21269  0042FA  0E08               	movlw	8
 21270  0042FC  0008               	tblrd		*
 21271  0042FE  12F5               	iorwf	tablat,f,c
 21272  004300  000C               	tblwt		*
 21273  004302  D006               	bra	u10900
 21274  004304                     u10907:
 21275  004304  CFF6 FFE9          	movff	tblptrl,fsr0l
 21276  004308  CFF7 FFEA          	movff	tblptrh,fsr0h
 21277  00430C  0E08               	movlw	8
 21278  00430E  12EF               	iorwf	indf0,f,c
 21279  004310                     u10900:
 21280  004310                     l1212:
 21281                           
 21282                           ;tcpv4.c: 250: }
 21283                           ;tcpv4.c: 251: }
 21284                           ;tcpv4.c: 252: }
 21285                           ;tcpv4.c: 254: txHeader.flags = tcbPtr->flags;
 21286  004310  0E35               	movlw	53
 21287  004312  2458               	addwf	TCP_Snd@tcbPtr,w,c
 21288  004314  0100               	movlb	0	; () banked
 21289  004316  6F67               	movwf	??_TCP_Snd& (0+255),b
 21290  004318  0E00               	movlw	0
 21291  00431A  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 21292  00431C  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 21293  00431E  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 21294  004322  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 21295  004326  0E00               	movlw	low (__smallconst shr (0+16))
 21296  004328  6EF8               	movwf	tblptru,c
 21297  00432A  0E0F               	movlw	(high __ramtop+-1)
 21298  00432C  64F7               	cpfsgt	tblptrh,c
 21299  00432E  D003               	bra	u10917
 21300  004330  0008               	tblrd		*
 21301  004332  50F5               	movf	tablat,w,c
 21302  004334  D005               	bra	u10910
 21303  004336                     u10917:
 21304  004336  CFF6 FFE9          	movff	tblptrl,fsr0l
 21305  00433A  CFF7 FFEA          	movff	tblptrh,fsr0h
 21306  00433E  50EF               	movf	indf0,w,c
 21307  004340                     u10910:
 21308  004340  0100               	movlb	0	; () banked
 21309  004342  6FAD               	movwf	(TCP_Snd@txHeader+13)& (0+255),b
 21310                           
 21311                           ; BSR set to: 0
 21312                           ;tcpv4.c: 255: payloadLength = sizeof(tcpHeader_t) + tcpDataLength;
 21313  004344  0E14               	movlw	20
 21314  004346  259E               	addwf	TCP_Snd@tcpDataLength& (0+255),w,b
 21315  004348  6F9B               	movwf	TCP_Snd@payloadLength& (0+255),b
 21316  00434A  0E00               	movlw	0
 21317  00434C  219F               	addwfc	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 21318  00434E  6F9C               	movwf	(TCP_Snd@payloadLength+1)& (0+255),b
 21319                           
 21320                           ; BSR set to: 0
 21321                           ;tcpv4.c: 257: ret = IPv4_Start(tcbPtr->destIP, TCP);
 21322  004350  0E02               	movlw	2
 21323  004352  2458               	addwf	TCP_Snd@tcbPtr,w,c
 21324  004354  6F67               	movwf	??_TCP_Snd& (0+255),b
 21325  004356  0E00               	movlw	0
 21326  004358  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 21327  00435A  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 21328  00435C  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 21329  004360  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 21330  004364  0E00               	movlw	low (__smallconst shr (0+16))
 21331  004366  6EF8               	movwf	tblptru,c
 21332  004368  0E0F               	movlw	(high __ramtop+-1)
 21333  00436A  64F7               	cpfsgt	tblptrh,c
 21334  00436C  D00D               	bra	u10927
 21335  00436E  0009               	tblrd		*+
 21336  004370  CFF5 F04B          	movff	tablat,IPv4_Start@destAddress
 21337  004374  0009               	tblrd		*+
 21338  004376  CFF5 F04C          	movff	tablat,IPv4_Start@destAddress+1
 21339  00437A  0009               	tblrd		*+
 21340  00437C  CFF5 F04D          	movff	tablat,IPv4_Start@destAddress+2
 21341  004380  0009               	tblrd		*+
 21342  004382  CFF5 F04E          	movff	tablat,IPv4_Start@destAddress+3
 21343  004386  D00C               	bra	u10920
 21344  004388                     u10927:
 21345  004388  CFF6 FFE9          	movff	tblptrl,fsr0l
 21346  00438C  CFF7 FFEA          	movff	tblptrh,fsr0h
 21347  004390  CFEE F04B          	movff	postinc0,IPv4_Start@destAddress
 21348  004394  CFEE F04C          	movff	postinc0,IPv4_Start@destAddress+1
 21349  004398  CFEE F04D          	movff	postinc0,IPv4_Start@destAddress+2
 21350  00439C  CFEE F04E          	movff	postinc0,IPv4_Start@destAddress+3
 21351  0043A0                     u10920:
 21352  0043A0  0E06               	movlw	6
 21353  0043A2  6E4F               	movwf	IPv4_Start@protocol,c
 21354  0043A4  EC0F  F034         	call	_IPv4_Start	;wreg free
 21355  0043A8  6F9D               	movwf	TCP_Snd@ret& (0+255),b
 21356                           
 21357                           ; BSR set to: 0
 21358                           ;tcpv4.c: 258: if (ret)
 21359  0043AA  519D               	movf	TCP_Snd@ret& (0+255),w,b
 21360  0043AC  E042               	bz	l8097
 21361                           
 21362                           ; BSR set to: 0
 21363                           ;tcpv4.c: 259: {
 21364                           ;tcpv4.c: 260: ETH_WriteBlock((uint8_t *) &txHeader, sizeof(tcpHeader_t));
 21365  0043AE  0EA0               	movlw	low TCP_Snd@txHeader
 21366  0043B0  6E03               	movwf	ETH_WriteBlock@data,c
 21367  0043B2  6A04               	clrf	ETH_WriteBlock@data+1,c
 21368  0043B4  6A06               	clrf	ETH_WriteBlock@len+1,c
 21369  0043B6  0E14               	movlw	20
 21370  0043B8  6E05               	movwf	ETH_WriteBlock@len,c
 21371  0043BA  EC02  F03E         	call	_ETH_WriteBlock	;wreg free
 21372                           
 21373                           ;tcpv4.c: 262: if (tcpDataLength > 0)
 21374  0043BE  0100               	movlb	0	; () banked
 21375  0043C0  519E               	movf	TCP_Snd@tcpDataLength& (0+255),w,b
 21376  0043C2  119F               	iorwf	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 21377  0043C4  E00A               	bz	l8089
 21378                           
 21379                           ; BSR set to: 0
 21380                           ;tcpv4.c: 263: {
 21381                           ;tcpv4.c: 264: ETH_WriteBlock( data, tcpDataLength);
 21382  0043C6  C097  F003         	movff	TCP_Snd@data,ETH_WriteBlock@data
 21383  0043CA  C098  F004         	movff	TCP_Snd@data+1,ETH_WriteBlock@data+1
 21384  0043CE  C09E  F005         	movff	TCP_Snd@tcpDataLength,ETH_WriteBlock@len
 21385  0043D2  C09F  F006         	movff	TCP_Snd@tcpDataLength+1,ETH_WriteBlock@len+1
 21386  0043D6  EC02  F03E         	call	_ETH_WriteBlock	;wreg free
 21387  0043DA                     l8089:
 21388                           
 21389                           ;tcpv4.c: 265: }
 21390                           ;tcpv4.c: 267: cksm = payloadLength + TCP;
 21391  0043DA  0E06               	movlw	6
 21392  0043DC  0100               	movlb	0	; () banked
 21393  0043DE  259B               	addwf	TCP_Snd@payloadLength& (0+255),w,b
 21394  0043E0  6F99               	movwf	TCP_Snd@cksm& (0+255),b
 21395  0043E2  0E00               	movlw	0
 21396  0043E4  219C               	addwfc	(TCP_Snd@payloadLength+1)& (0+255),w,b
 21397  0043E6  6F9A               	movwf	(TCP_Snd@cksm+1)& (0+255),b
 21398                           
 21399                           ; BSR set to: 0
 21400                           ;tcpv4.c: 269: cksm = ETH_TxComputeChecksum(sizeof(ethernetFrame_t) + sizeof(ipv4Header_
      +                          t) - 8, payloadLength + 8, cksm);
 21401  0043E8  6A0E               	clrf	ETH_TxComputeChecksum@position+1,c
 21402  0043EA  0E1A               	movlw	26
 21403  0043EC  6E0D               	movwf	ETH_TxComputeChecksum@position,c
 21404  0043EE  0E08               	movlw	8
 21405  0043F0  259B               	addwf	TCP_Snd@payloadLength& (0+255),w,b
 21406  0043F2  6E0F               	movwf	ETH_TxComputeChecksum@length,c
 21407  0043F4  0E00               	movlw	0
 21408  0043F6  219C               	addwfc	(TCP_Snd@payloadLength+1)& (0+255),w,b
 21409  0043F8  6E10               	movwf	ETH_TxComputeChecksum@length+1,c
 21410  0043FA  C099  F011         	movff	TCP_Snd@cksm,ETH_TxComputeChecksum@seed
 21411  0043FE  C09A  F012         	movff	TCP_Snd@cksm+1,ETH_TxComputeChecksum@seed+1
 21412  004402  EC92  F038         	call	_ETH_TxComputeChecksum	;wreg free
 21413  004406  C00D  F099         	movff	?_ETH_TxComputeChecksum,TCP_Snd@cksm
 21414  00440A  C00E  F09A         	movff	?_ETH_TxComputeChecksum+1,TCP_Snd@cksm+1
 21415                           
 21416                           ;tcpv4.c: 270: ETH_Insert((char *)&cksm, 2, sizeof(ethernetFrame_t) + sizeof(ipv4Header_
      +                          t) + (size_t)(((char*)&((tcpHeader_t *)1)->checksum)-1));
 21417  00440E  0E99               	movlw	low TCP_Snd@cksm
 21418  004410  6E0B               	movwf	ETH_Insert@data,c
 21419  004412  6A0D               	clrf	ETH_Insert@len+1,c
 21420  004414  0E02               	movlw	2
 21421  004416  6E0C               	movwf	ETH_Insert@len,c
 21422  004418  6A0F               	clrf	ETH_Insert@offset+1,c
 21423  00441A  0E32               	movlw	50
 21424  00441C  6E0E               	movwf	ETH_Insert@offset,c
 21425  00441E  ECAD  F03E         	call	_ETH_Insert	;wreg free
 21426                           
 21427                           ;tcpv4.c: 272: ret = IPV4_Send(payloadLength);
 21428  004422  C09B  F01D         	movff	TCP_Snd@payloadLength,IPV4_Send@payloadLength
 21429  004426  C09C  F01E         	movff	TCP_Snd@payloadLength+1,IPV4_Send@payloadLength+1
 21430  00442A  EC2E  F03D         	call	_IPV4_Send	;wreg free
 21431  00442E  0100               	movlb	0	; () banked
 21432  004430  6F9D               	movwf	TCP_Snd@ret& (0+255),b
 21433  004432                     l8097:
 21434                           
 21435                           ; BSR set to: 0
 21436                           ;tcpv4.c: 273: }
 21437                           ;tcpv4.c: 277: if (ret == 0)
 21438  004432  519D               	movf	TCP_Snd@ret& (0+255),w,b
 21439  004434  E173               	bnz	l8103
 21440                           
 21441                           ; BSR set to: 0
 21442                           ;tcpv4.c: 278: {
 21443                           ;tcpv4.c: 281: tcbPtr->timeoutsCount = tcbPtr->timeoutsCount + 1;
 21444  004436  0E34               	movlw	52
 21445  004438  2458               	addwf	TCP_Snd@tcbPtr,w,c
 21446  00443A  6F67               	movwf	??_TCP_Snd& (0+255),b
 21447  00443C  0E00               	movlw	0
 21448  00443E  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 21449  004440  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 21450  004442  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 21451  004446  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 21452  00444A  0E00               	movlw	low (__smallconst shr (0+16))
 21453  00444C  6EF8               	movwf	tblptru,c
 21454  00444E  0E0F               	movlw	(high __ramtop+-1)
 21455  004450  64F7               	cpfsgt	tblptrh,c
 21456  004452  D003               	bra	u10967
 21457  004454  0008               	tblrd		*
 21458  004456  50F5               	movf	tablat,w,c
 21459  004458  D005               	bra	u10960
 21460  00445A                     u10967:
 21461  00445A  CFF6 FFE9          	movff	tblptrl,fsr0l
 21462  00445E  CFF7 FFEA          	movff	tblptrh,fsr0h
 21463  004462  50EF               	movf	indf0,w,c
 21464  004464                     u10960:
 21465  004464  0100               	movlb	0	; () banked
 21466  004466  6F69               	movwf	(??_TCP_Snd+2)& (0+255),b
 21467  004468  2B69               	incf	(??_TCP_Snd+2)& (0+255),f,b
 21468  00446A  0E34               	movlw	52
 21469  00446C  2458               	addwf	TCP_Snd@tcbPtr,w,c
 21470  00446E  6F6A               	movwf	(??_TCP_Snd+3)& (0+255),b
 21471  004470  0E00               	movlw	0
 21472  004472  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 21473  004474  6F6B               	movwf	(??_TCP_Snd+4)& (0+255),b
 21474  004476  C06A  FFF6         	movff	??_TCP_Snd+3,tblptrl
 21475  00447A  C06B  FFF7         	movff	??_TCP_Snd+4,tblptrh
 21476  00447E  0E00               	movlw	low (__smallconst shr (0+16))
 21477  004480  6EF8               	movwf	tblptru,c
 21478  004482  0E0F               	movlw	(high __ramtop+-1)
 21479  004484  64F7               	cpfsgt	tblptrh,c
 21480  004486  D004               	bra	u10977
 21481  004488  C069  FFF5         	movff	??_TCP_Snd+2,tablat
 21482  00448C  000C               	tblwt		*
 21483  00448E  D006               	bra	u10970
 21484  004490                     u10977:
 21485  004490  CFF6 FFE9          	movff	tblptrl,fsr0l
 21486  004494  CFF7 FFEA          	movff	tblptrh,fsr0h
 21487  004498  C069  FFEF         	movff	??_TCP_Snd+2,indf0
 21488  00449C                     u10970:
 21489                           
 21490                           ;tcpv4.c: 283: if (tcbPtr->timeout == 0)
 21491  00449C  0E30               	movlw	48
 21492  00449E  2458               	addwf	TCP_Snd@tcbPtr,w,c
 21493  0044A0  0100               	movlb	0	; () banked
 21494  0044A2  6F67               	movwf	??_TCP_Snd& (0+255),b
 21495  0044A4  0E00               	movlw	0
 21496  0044A6  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 21497  0044A8  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 21498  0044AA  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 21499  0044AE  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 21500  0044B2  0E00               	movlw	low (__smallconst shr (0+16))
 21501  0044B4  6EF8               	movwf	tblptru,c
 21502  0044B6  0E0F               	movlw	(high __ramtop+-1)
 21503  0044B8  64F7               	cpfsgt	tblptrh,c
 21504  0044BA  D007               	bra	u10987
 21505  0044BC  0009               	tblrd		*+
 21506  0044BE  CFF5 F069          	movff	tablat,??_TCP_Snd+2
 21507  0044C2  0009               	tblrd		*+
 21508  0044C4  CFF5 F06A          	movff	tablat,??_TCP_Snd+3
 21509  0044C8  D008               	bra	u10980
 21510  0044CA                     u10987:
 21511  0044CA  CFF6 FFE9          	movff	tblptrl,fsr0l
 21512  0044CE  CFF7 FFEA          	movff	tblptrh,fsr0h
 21513  0044D2  CFEE F069          	movff	postinc0,??_TCP_Snd+2
 21514  0044D6  CFEE F06A          	movff	postinc0,??_TCP_Snd+3
 21515  0044DA                     u10980:
 21516  0044DA  0100               	movlb	0	; () banked
 21517  0044DC  5169               	movf	(??_TCP_Snd+2)& (0+255),w,b
 21518  0044DE  116A               	iorwf	(??_TCP_Snd+3)& (0+255),w,b
 21519  0044E0  E17A               	bnz	l8105
 21520                           
 21521                           ; BSR set to: 0
 21522                           ;tcpv4.c: 284: {
 21523                           ;tcpv4.c: 285: tcbPtr->timeout = ((unsigned long)1*2);
 21524  0044E2  0E30               	movlw	48
 21525  0044E4  2458               	addwf	TCP_Snd@tcbPtr,w,c
 21526  0044E6  6F67               	movwf	??_TCP_Snd& (0+255),b
 21527  0044E8  0E00               	movlw	0
 21528  0044EA  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 21529  0044EC  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 21530  0044EE  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 21531  0044F2  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 21532  0044F6  0E00               	movlw	low (__smallconst shr (0+16))
 21533  0044F8  6EF8               	movwf	tblptru,c
 21534  0044FA  0E0F               	movlw	(high __ramtop+-1)
 21535  0044FC  64F7               	cpfsgt	tblptrh,c
 21536  0044FE  D006               	bra	u11007
 21537  004500  0E02               	movlw	2
 21538  004502  6EF5               	movwf	tablat,c
 21539  004504  000D               	tblwt		*+
 21540  004506  6AF5               	clrf	tablat,c
 21541  004508  000C               	tblwt		*
 21542  00450A  D007               	bra	u11000
 21543  00450C                     u11007:
 21544  00450C  CFF6 FFE9          	movff	tblptrl,fsr0l
 21545  004510  CFF7 FFEA          	movff	tblptrh,fsr0h
 21546  004514  0E02               	movlw	2
 21547  004516  6EEE               	movwf	postinc0,c
 21548  004518  6AEF               	clrf	indf0,c
 21549  00451A                     u11000:
 21550  00451A  D05D               	goto	l8105
 21551  00451C                     l8103:
 21552                           
 21553                           ; BSR set to: 0
 21554                           ;tcpv4.c: 288: else
 21555                           ;tcpv4.c: 289: {
 21556                           ;tcpv4.c: 291: tcbPtr->localSeqno = tcbPtr->localSeqno + tcpDataLength;
 21557  00451C  0E10               	movlw	16
 21558  00451E  2458               	addwf	TCP_Snd@tcbPtr,w,c
 21559  004520  6F67               	movwf	??_TCP_Snd& (0+255),b
 21560  004522  0E00               	movlw	0
 21561  004524  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 21562  004526  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 21563  004528  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 21564  00452C  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 21565  004530  0E00               	movlw	low (__smallconst shr (0+16))
 21566  004532  6EF8               	movwf	tblptru,c
 21567  004534  0E0F               	movlw	(high __ramtop+-1)
 21568  004536  64F7               	cpfsgt	tblptrh,c
 21569  004538  D00D               	bra	u11017
 21570  00453A  0009               	tblrd		*+
 21571  00453C  CFF5 F069          	movff	tablat,??_TCP_Snd+2
 21572  004540  0009               	tblrd		*+
 21573  004542  CFF5 F06A          	movff	tablat,??_TCP_Snd+3
 21574  004546  0009               	tblrd		*+
 21575  004548  CFF5 F06B          	movff	tablat,??_TCP_Snd+4
 21576  00454C  0009               	tblrd		*+
 21577  00454E  CFF5 F06C          	movff	tablat,??_TCP_Snd+5
 21578  004552  D00C               	bra	u11010
 21579  004554                     u11017:
 21580  004554  CFF6 FFE9          	movff	tblptrl,fsr0l
 21581  004558  CFF7 FFEA          	movff	tblptrh,fsr0h
 21582  00455C  CFEE F069          	movff	postinc0,??_TCP_Snd+2
 21583  004560  CFEE F06A          	movff	postinc0,??_TCP_Snd+3
 21584  004564  CFEE F06B          	movff	postinc0,??_TCP_Snd+4
 21585  004568  CFEE F06C          	movff	postinc0,??_TCP_Snd+5
 21586  00456C                     u11010:
 21587  00456C  0100               	movlb	0	; () banked
 21588  00456E  519E               	movf	TCP_Snd@tcpDataLength& (0+255),w,b
 21589  004570  2569               	addwf	(??_TCP_Snd+2)& (0+255),w,b
 21590  004572  6F6D               	movwf	(??_TCP_Snd+6)& (0+255),b
 21591  004574  519F               	movf	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 21592  004576  216A               	addwfc	(??_TCP_Snd+3)& (0+255),w,b
 21593  004578  6F6E               	movwf	(??_TCP_Snd+7)& (0+255),b
 21594  00457A  0E00               	movlw	0
 21595  00457C  216B               	addwfc	(??_TCP_Snd+4)& (0+255),w,b
 21596  00457E  6F6F               	movwf	(??_TCP_Snd+8)& (0+255),b
 21597  004580  0E00               	movlw	0
 21598  004582  216C               	addwfc	(??_TCP_Snd+5)& (0+255),w,b
 21599  004584  6F70               	movwf	(??_TCP_Snd+9)& (0+255),b
 21600  004586  0E10               	movlw	16
 21601  004588  2458               	addwf	TCP_Snd@tcbPtr,w,c
 21602  00458A  6F71               	movwf	(??_TCP_Snd+10)& (0+255),b
 21603  00458C  0E00               	movlw	0
 21604  00458E  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 21605  004590  6F72               	movwf	(??_TCP_Snd+11)& (0+255),b
 21606  004592  C071  FFF6         	movff	??_TCP_Snd+10,tblptrl
 21607  004596  C072  FFF7         	movff	??_TCP_Snd+11,tblptrh
 21608  00459A  0E00               	movlw	low (__smallconst shr (0+16))
 21609  00459C  6EF8               	movwf	tblptru,c
 21610  00459E  0E0F               	movlw	(high __ramtop+-1)
 21611  0045A0  64F7               	cpfsgt	tblptrh,c
 21612  0045A2  D00D               	bra	u11027
 21613  0045A4  C06D  FFF5         	movff	??_TCP_Snd+6,tablat
 21614  0045A8  000D               	tblwt		*+
 21615  0045AA  C06E  FFF5         	movff	??_TCP_Snd+7,tablat
 21616  0045AE  000D               	tblwt		*+
 21617  0045B0  C06F  FFF5         	movff	??_TCP_Snd+8,tablat
 21618  0045B4  000D               	tblwt		*+
 21619  0045B6  C070  FFF5         	movff	??_TCP_Snd+9,tablat
 21620  0045BA  000C               	tblwt		*
 21621  0045BC  D00C               	bra	u11020
 21622  0045BE                     u11027:
 21623  0045BE  CFF6 FFE9          	movff	tblptrl,fsr0l
 21624  0045C2  CFF7 FFEA          	movff	tblptrh,fsr0h
 21625  0045C6  C06D  FFEE         	movff	??_TCP_Snd+6,postinc0
 21626  0045CA  C06E  FFEE         	movff	??_TCP_Snd+7,postinc0
 21627  0045CE  C06F  FFEE         	movff	??_TCP_Snd+8,postinc0
 21628  0045D2  C070  FFEF         	movff	??_TCP_Snd+9,indf0
 21629  0045D6                     u11020:
 21630  0045D6                     l8105:
 21631                           
 21632                           ;tcpv4.c: 293: }
 21633                           ;tcpv4.c: 295: return ret;
 21634  0045D6  0100               	movlb	0	; () banked
 21635  0045D8  519D               	movf	TCP_Snd@ret& (0+255),w,b
 21636                           
 21637                           ; BSR set to: 0
 21638  0045DA  0012               	return		;funcret
 21639  0045DC                     __end_of_TCP_Snd:
 21640                           	opt stack 0
 21641                           tosu	equ	0xFFF
 21642                           tosh	equ	0xFFE
 21643                           tosl	equ	0xFFD
 21644                           pclath	equ	0xFFA
 21645                           tblptru	equ	0xFF8
 21646                           tblptrh	equ	0xFF7
 21647                           tblptrl	equ	0xFF6
 21648                           tablat	equ	0xFF5
 21649                           prodh	equ	0xFF4
 21650                           prodl	equ	0xFF3
 21651                           intcon	equ	0xFF2
 21652                           intcon2	equ	0xFF1
 21653                           indf0	equ	0xFEF
 21654                           postinc0	equ	0xFEE
 21655                           fsr0h	equ	0xFEA
 21656                           fsr0l	equ	0xFE9
 21657                           wreg	equ	0xFE8
 21658                           indf1	equ	0xFE7
 21659                           postinc1	equ	0xFE6
 21660                           postdec1	equ	0xFE5
 21661                           plusw1	equ	0xFE3
 21662                           fsr1h	equ	0xFE2
 21663                           fsr1l	equ	0xFE1
 21664                           indf2	equ	0xFDF
 21665                           postinc2	equ	0xFDE
 21666                           postdec2	equ	0xFDD
 21667                           plusw2	equ	0xFDB
 21668                           fsr2h	equ	0xFDA
 21669                           fsr2l	equ	0xFD9
 21670                           status	equ	0xFD8
 21671                           
 21672 ;; *************** function _IPv4_Start *****************
 21673 ;; Defined at:
 21674 ;;		line 213 in file "../../TCPIP Library/source/ipv4.c"
 21675 ;; Parameters:    Size  Location     Type
 21676 ;;  destAddress     4   74[COMRAM] unsigned long 
 21677 ;;  protocol        1   78[COMRAM] enum E6749
 21678 ;; Auto vars:     Size  Location     Type
 21679 ;;  targetAddres    4    0[BANK0 ] unsigned long 
 21680 ;;  macAddress      2    4[BANK0 ] PTR const struct .
 21681 ;;		 -> arpMap.macAddress(6), broadcastMAC(6), arpMap(104), NULL(0), 
 21682 ;;  ret             1    6[BANK0 ] enum E6890
 21683 ;; Return value:  Size  Location     Type
 21684 ;;                  1    wreg      enum E366
 21685 ;; Registers used:
 21686 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21687 ;; Tracked objects:
 21688 ;;		On entry : 0/0
 21689 ;;		On exit  : F/0
 21690 ;;		Unchanged: 0/0
 21691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21692 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21693 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21694 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21695 ;;      Totals:        13       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21696 ;;Total ram usage:       20 bytes
 21697 ;; Hardware stack levels used:    1
 21698 ;; Hardware stack levels required when called:    8
 21699 ;; This function calls:
 21700 ;;		_ARPV4_Lookup
 21701 ;;		_ARPV4_Request
 21702 ;;		_ETH_Write16
 21703 ;;		_ETH_Write32
 21704 ;;		_ETH_Write8
 21705 ;;		_ETH_WriteStart
 21706 ;; This function is called by:
 21707 ;;		_ICMP_EchoReply
 21708 ;;		_TCP_Snd
 21709 ;;		_UDP_Start
 21710 ;; This function uses a non-reentrant model
 21711 ;;
 21712                           
 21713                           	psect	text81
 21714  00681E                     __ptext81:
 21715                           	opt stack 0
 21716  00681E                     _IPv4_Start:
 21717                           	opt stack 18
 21718                           
 21719                           ;ipv4.c: 215: error_msg ret = ERROR;
 21720                           
 21721                           ; BSR set to: 0
 21722                           ;incstack = 0
 21723  00681E  0100               	movlb	0	; () banked
 21724  006820  6B66               	clrf	IPv4_Start@ret& (0+255),b
 21725                           
 21726                           ; BSR set to: 0
 21727                           ;ipv4.c: 217: const mac48Address_t *macAddress;
 21728                           ;ipv4.c: 218: uint32_t targetAddress;
 21729                           ;ipv4.c: 221: if(((ipv4Address != 0) || (protocol == UDP))
 21730                           ;ipv4.c: 222: && (ipv4Address != 0x7F000001))
 21731  006822  0101               	movlb	1	; () banked
 21732  006824  518E               	movf	_ipv4Address& (0+255),w,b
 21733  006826  118F               	iorwf	(_ipv4Address+1)& (0+255),w,b
 21734  006828  1190               	iorwf	(_ipv4Address+2)& (0+255),w,b
 21735  00682A  1191               	iorwf	(_ipv4Address+3)& (0+255),w,b
 21736  00682C  E103               	bnz	l7937
 21737                           
 21738                           ; BSR set to: 1
 21739  00682E  0E11               	movlw	17
 21740  006830  184F               	xorwf	IPv4_Start@protocol,w,c
 21741  006832  E162               	bnz	l7951
 21742  006834                     l7937:
 21743                           
 21744                           ; BSR set to: 1
 21745  006834  058E               	decf	_ipv4Address& (0+255),w,b
 21746  006836  E105               	bnz	u10450
 21747  006838  0E7F               	movlw	127
 21748  00683A  1991               	xorwf	(_ipv4Address+3)& (0+255),w,b
 21749  00683C  118F               	iorwf	(_ipv4Address+1)& (0+255),w,b
 21750  00683E  1190               	iorwf	(_ipv4Address+2)& (0+255),w,b
 21751  006840  E05B               	bz	l7951
 21752  006842                     u10450:
 21753                           
 21754                           ; BSR set to: 1
 21755                           ;ipv4.c: 223: {
 21756                           ;ipv4.c: 224: if(destAddress != 0xFFFFFFFF)
 21757  006842  284B               	incf	IPv4_Start@destAddress,w,c
 21758  006844  E106               	bnz	u10460
 21759  006846  284C               	incf	IPv4_Start@destAddress+1,w,c
 21760  006848  E104               	bnz	u10460
 21761  00684A  284D               	incf	IPv4_Start@destAddress+2,w,c
 21762  00684C  E102               	bnz	u10460
 21763  00684E  284E               	incf	IPv4_Start@destAddress+3,w,c
 21764  006850  E056               	bz	l7955
 21765  006852                     u10460:
 21766                           
 21767                           ; BSR set to: 1
 21768                           ;ipv4.c: 225: {
 21769                           ;ipv4.c: 226: if((ipv4SubnetMask & destAddress) == (ipv4SubnetMask & ipv4Address))
 21770  006852  518E               	movf	_ipv4Address& (0+255),w,b
 21771  006854  1592               	andwf	_ipv4SubnetMask& (0+255),w,b
 21772  006856  6E50               	movwf	??_IPv4_Start& (0+255),c
 21773  006858  518F               	movf	(_ipv4Address+1)& (0+255),w,b
 21774  00685A  1593               	andwf	(_ipv4SubnetMask+1)& (0+255),w,b
 21775  00685C  6E51               	movwf	(??_IPv4_Start+1)& (0+255),c
 21776  00685E  5190               	movf	(_ipv4Address+2)& (0+255),w,b
 21777  006860  1594               	andwf	(_ipv4SubnetMask+2)& (0+255),w,b
 21778  006862  6E52               	movwf	(??_IPv4_Start+2)& (0+255),c
 21779  006864  5191               	movf	(_ipv4Address+3)& (0+255),w,b
 21780  006866  1595               	andwf	(_ipv4SubnetMask+3)& (0+255),w,b
 21781  006868  6E53               	movwf	(??_IPv4_Start+3)& (0+255),c
 21782  00686A  504B               	movf	IPv4_Start@destAddress,w,c
 21783  00686C  1592               	andwf	_ipv4SubnetMask& (0+255),w,b
 21784  00686E  6E54               	movwf	(??_IPv4_Start+4)& (0+255),c
 21785  006870  504C               	movf	IPv4_Start@destAddress+1,w,c
 21786  006872  1593               	andwf	(_ipv4SubnetMask+1)& (0+255),w,b
 21787  006874  6E55               	movwf	(??_IPv4_Start+5)& (0+255),c
 21788  006876  504D               	movf	IPv4_Start@destAddress+2,w,c
 21789  006878  1594               	andwf	(_ipv4SubnetMask+2)& (0+255),w,b
 21790  00687A  6E56               	movwf	(??_IPv4_Start+6)& (0+255),c
 21791  00687C  504E               	movf	IPv4_Start@destAddress+3,w,c
 21792  00687E  1595               	andwf	(_ipv4SubnetMask+3)& (0+255),w,b
 21793  006880  6E57               	movwf	(??_IPv4_Start+7)& (0+255),c
 21794  006882  5050               	movf	??_IPv4_Start,w,c
 21795  006884  1854               	xorwf	??_IPv4_Start+4,w,c
 21796  006886  E112               	bnz	l1035
 21797  006888  5051               	movf	??_IPv4_Start+1,w,c
 21798  00688A  1855               	xorwf	??_IPv4_Start+5,w,c
 21799  00688C  E10F               	bnz	l1035
 21800  00688E  5052               	movf	??_IPv4_Start+2,w,c
 21801  006890  1856               	xorwf	??_IPv4_Start+6,w,c
 21802  006892  E10C               	bnz	l1035
 21803  006894  5053               	movf	??_IPv4_Start+3,w,c
 21804  006896  1857               	xorwf	??_IPv4_Start+7,w,c
 21805  006898  E109               	bnz	l1035
 21806                           
 21807                           ; BSR set to: 1
 21808                           ;ipv4.c: 227: {
 21809                           ;ipv4.c: 228: targetAddress = destAddress;
 21810  00689A  C04B  F060         	movff	IPv4_Start@destAddress,IPv4_Start@targetAddress
 21811  00689E  C04C  F061         	movff	IPv4_Start@destAddress+1,IPv4_Start@targetAddress+1
 21812  0068A2  C04D  F062         	movff	IPv4_Start@destAddress+2,IPv4_Start@targetAddress+2
 21813  0068A6  C04E  F063         	movff	IPv4_Start@destAddress+3,IPv4_Start@targetAddress+3
 21814                           
 21815                           ;ipv4.c: 229: }
 21816  0068AA  D008               	goto	l7945
 21817  0068AC                     l1035:
 21818                           
 21819                           ; BSR set to: 1
 21820                           ;ipv4.c: 230: else
 21821                           ;ipv4.c: 231: {
 21822                           ;ipv4.c: 232: targetAddress = ipv4Router;
 21823  0068AC  C226  F060         	movff	_ipv4Router,IPv4_Start@targetAddress
 21824  0068B0  C227  F061         	movff	_ipv4Router+1,IPv4_Start@targetAddress+1
 21825  0068B4  C228  F062         	movff	_ipv4Router+2,IPv4_Start@targetAddress+2
 21826  0068B8  C229  F063         	movff	_ipv4Router+3,IPv4_Start@targetAddress+3
 21827  0068BC                     l7945:
 21828                           
 21829                           ; BSR set to: 1
 21830                           ;ipv4.c: 233: }
 21831                           ;ipv4.c: 235: macAddress= ARPV4_Lookup(targetAddress);
 21832  0068BC  C060  F002         	movff	IPv4_Start@targetAddress,ARPV4_Lookup@ip_address
 21833  0068C0  C061  F003         	movff	IPv4_Start@targetAddress+1,ARPV4_Lookup@ip_address+1
 21834  0068C4  C062  F004         	movff	IPv4_Start@targetAddress+2,ARPV4_Lookup@ip_address+2
 21835  0068C8  C063  F005         	movff	IPv4_Start@targetAddress+3,ARPV4_Lookup@ip_address+3
 21836  0068CC  EC25  F03F         	call	_ARPV4_Lookup	;wreg free
 21837  0068D0  C002  F064         	movff	?_ARPV4_Lookup,IPv4_Start@macAddress
 21838  0068D4  C003  F065         	movff	?_ARPV4_Lookup+1,IPv4_Start@macAddress+1
 21839                           
 21840                           ; BSR set to: 1
 21841                           ;ipv4.c: 236: if(macAddress == 0)
 21842  0068D8  0100               	movlb	0	; () banked
 21843  0068DA  5164               	movf	IPv4_Start@macAddress& (0+255),w,b
 21844  0068DC  1165               	iorwf	(IPv4_Start@macAddress+1)& (0+255),w,b
 21845  0068DE  E116               	bnz	l7957
 21846                           
 21847                           ; BSR set to: 0
 21848                           ;ipv4.c: 237: {
 21849                           ;ipv4.c: 238: ret = ARPV4_Request(targetAddress);
 21850  0068E0  C060  F00F         	movff	IPv4_Start@targetAddress,ARPV4_Request@destAddress
 21851  0068E4  C061  F010         	movff	IPv4_Start@targetAddress+1,ARPV4_Request@destAddress+1
 21852  0068E8  C062  F011         	movff	IPv4_Start@targetAddress+2,ARPV4_Request@destAddress+2
 21853  0068EC  C063  F012         	movff	IPv4_Start@targetAddress+3,ARPV4_Request@destAddress+3
 21854  0068F0  EC68  F032         	call	_ARPV4_Request	;wreg free
 21855  0068F4  0100               	movlb	0	; () banked
 21856  0068F6  6F66               	movwf	IPv4_Start@ret& (0+255),b
 21857  0068F8                     l7951:
 21858                           
 21859                           ;ipv4.c: 239: return ret;
 21860  0068F8  0100               	movlb	0	; () banked
 21861  0068FA  5166               	movf	IPv4_Start@ret& (0+255),w,b
 21862  0068FC  0012               	return	
 21863  0068FE                     l7955:
 21864                           
 21865                           ; BSR set to: 1
 21866                           ;ipv4.c: 242: else
 21867                           ;ipv4.c: 243: {
 21868                           ;ipv4.c: 244: macAddress = &broadcastMAC;
 21869  0068FE  0E28               	movlw	low _broadcastMAC
 21870  006900  0100               	movlb	0	; () banked
 21871  006902  6F64               	movwf	IPv4_Start@macAddress& (0+255),b
 21872  006904  5164               	movf	IPv4_Start@macAddress& (0+255),w,b
 21873  006906  A4D8               	btfss	status,2,c
 21874  006908  0E10               	movlw	high __smallconst
 21875  00690A  6F65               	movwf	(IPv4_Start@macAddress+1)& (0+255),b
 21876  00690C                     l7957:
 21877                           
 21878                           ; BSR set to: 0
 21879                           ;ipv4.c: 245: }
 21880                           ;ipv4.c: 246: ret = ETH_WriteStart(macAddress, 0x0800);
 21881  00690C  C064  F00B         	movff	IPv4_Start@macAddress,ETH_WriteStart@destMAC
 21882  006910  C065  F00C         	movff	IPv4_Start@macAddress+1,ETH_WriteStart@destMAC+1
 21883  006914  0E08               	movlw	8
 21884  006916  6E0E               	movwf	ETH_WriteStart@type+1,c
 21885  006918  6A0D               	clrf	ETH_WriteStart@type,c
 21886  00691A  EC83  F03E         	call	_ETH_WriteStart	;wreg free
 21887  00691E  0100               	movlb	0	; () banked
 21888  006920  6F66               	movwf	IPv4_Start@ret& (0+255),b
 21889                           
 21890                           ; BSR set to: 0
 21891                           ;ipv4.c: 247: if(ret == SUCCESS)
 21892  006922  0566               	decf	IPv4_Start@ret& (0+255),w,b
 21893  006924  E1E9               	bnz	l7951
 21894                           
 21895                           ; BSR set to: 0
 21896                           ;ipv4.c: 248: {
 21897                           ;ipv4.c: 249: ETH_Write16(0x4500);
 21898  006926  0E45               	movlw	69
 21899  006928  6E04               	movwf	ETH_Write16@data+1,c
 21900  00692A  6A03               	clrf	ETH_Write16@data,c
 21901  00692C  ECDA  F042         	call	_ETH_Write16	;wreg free
 21902                           
 21903                           ;ipv4.c: 250: ETH_Write16(0);
 21904  006930  6A04               	clrf	ETH_Write16@data+1,c
 21905  006932  6A03               	clrf	ETH_Write16@data,c
 21906  006934  ECDA  F042         	call	_ETH_Write16	;wreg free
 21907                           
 21908                           ;ipv4.c: 251: ETH_Write32(0xAA554000);
 21909  006938  6A03               	clrf	ETH_Write32@data,c
 21910  00693A  0E40               	movlw	64
 21911  00693C  6E04               	movwf	ETH_Write32@data+1,c
 21912  00693E  0E55               	movlw	85
 21913  006940  6E05               	movwf	ETH_Write32@data+2,c
 21914  006942  0EAA               	movlw	170
 21915  006944  6E06               	movwf	ETH_Write32@data+3,c
 21916  006946  ECE8  F041         	call	_ETH_Write32	;wreg free
 21917                           
 21918                           ;ipv4.c: 252: ETH_Write8(64u);
 21919  00694A  0E40               	movlw	64
 21920  00694C  EC70  F043         	call	_ETH_Write8
 21921                           
 21922                           ;ipv4.c: 253: ETH_Write8(protocol);
 21923  006950  504F               	movf	IPv4_Start@protocol,w,c
 21924  006952  EC70  F043         	call	_ETH_Write8
 21925                           
 21926                           ;ipv4.c: 254: ETH_Write16(0);
 21927  006956  6A04               	clrf	ETH_Write16@data+1,c
 21928  006958  6A03               	clrf	ETH_Write16@data,c
 21929  00695A  ECDA  F042         	call	_ETH_Write16	;wreg free
 21930                           
 21931                           ;ipv4.c: 255: ETH_Write32(ipv4Address);
 21932  00695E  C18E  F003         	movff	_ipv4Address,ETH_Write32@data
 21933  006962  C18F  F004         	movff	_ipv4Address+1,ETH_Write32@data+1
 21934  006966  C190  F005         	movff	_ipv4Address+2,ETH_Write32@data+2
 21935  00696A  C191  F006         	movff	_ipv4Address+3,ETH_Write32@data+3
 21936  00696E  ECE8  F041         	call	_ETH_Write32	;wreg free
 21937                           
 21938                           ;ipv4.c: 256: ETH_Write32(destAddress);
 21939  006972  C04B  F003         	movff	IPv4_Start@destAddress,ETH_Write32@data
 21940  006976  C04C  F004         	movff	IPv4_Start@destAddress+1,ETH_Write32@data+1
 21941  00697A  C04D  F005         	movff	IPv4_Start@destAddress+2,ETH_Write32@data+2
 21942  00697E  C04E  F006         	movff	IPv4_Start@destAddress+3,ETH_Write32@data+3
 21943  006982  ECE8  F041         	call	_ETH_Write32	;wreg free
 21944                           
 21945                           ;ipv4.c: 259: ipv4Header.srcIpAddress = ipv4Address;
 21946  006986  C18E  F1B4         	movff	_ipv4Address,_ipv4Header+12
 21947  00698A  C18F  F1B5         	movff	_ipv4Address+1,_ipv4Header+13
 21948  00698E  C190  F1B6         	movff	_ipv4Address+2,_ipv4Header+14
 21949  006992  C191  F1B7         	movff	_ipv4Address+3,_ipv4Header+15
 21950                           
 21951                           ;ipv4.c: 260: ipv4Header.dstIpAddress = destAddress;
 21952  006996  C04B  F1B8         	movff	IPv4_Start@destAddress,_ipv4Header+16
 21953  00699A  C04C  F1B9         	movff	IPv4_Start@destAddress+1,_ipv4Header+17
 21954  00699E  C04D  F1BA         	movff	IPv4_Start@destAddress+2,_ipv4Header+18
 21955  0069A2  C04E  F1BB         	movff	IPv4_Start@destAddress+3,_ipv4Header+19
 21956                           
 21957                           ;ipv4.c: 261: ipv4Header.protocol = protocol;
 21958  0069A6  C04F  F1B1         	movff	IPv4_Start@protocol,_ipv4Header+9
 21959  0069AA  D7A6               	goto	l7951
 21960  0069AC                     __end_of_IPv4_Start:
 21961                           	opt stack 0
 21962                           tosu	equ	0xFFF
 21963                           tosh	equ	0xFFE
 21964                           tosl	equ	0xFFD
 21965                           pclath	equ	0xFFA
 21966                           tblptru	equ	0xFF8
 21967                           tblptrh	equ	0xFF7
 21968                           tblptrl	equ	0xFF6
 21969                           tablat	equ	0xFF5
 21970                           prodh	equ	0xFF4
 21971                           prodl	equ	0xFF3
 21972                           intcon	equ	0xFF2
 21973                           intcon2	equ	0xFF1
 21974                           indf0	equ	0xFEF
 21975                           postinc0	equ	0xFEE
 21976                           fsr0h	equ	0xFEA
 21977                           fsr0l	equ	0xFE9
 21978                           wreg	equ	0xFE8
 21979                           indf1	equ	0xFE7
 21980                           postinc1	equ	0xFE6
 21981                           postdec1	equ	0xFE5
 21982                           plusw1	equ	0xFE3
 21983                           fsr1h	equ	0xFE2
 21984                           fsr1l	equ	0xFE1
 21985                           indf2	equ	0xFDF
 21986                           postinc2	equ	0xFDE
 21987                           postdec2	equ	0xFDD
 21988                           plusw2	equ	0xFDB
 21989                           fsr2h	equ	0xFDA
 21990                           fsr2l	equ	0xFD9
 21991                           status	equ	0xFD8
 21992                           
 21993 ;; *************** function _ETH_Write8 *****************
 21994 ;; Defined at:
 21995 ;;		line 334 in file "../../TCPIP Library/ethernet_drivers/encX24j600_spi.c"
 21996 ;; Parameters:    Size  Location     Type
 21997 ;;  data            1    wreg     unsigned char 
 21998 ;; Auto vars:     Size  Location     Type
 21999 ;;  data            1    2[COMRAM] unsigned char 
 22000 ;; Return value:  Size  Location     Type
 22001 ;;                  1    wreg      void 
 22002 ;; Registers used:
 22003 ;;		wreg, status,2, status,0, cstack
 22004 ;; Tracked objects:
 22005 ;;		On entry : 0/0
 22006 ;;		On exit  : 0/0
 22007 ;;		Unchanged: 0/0
 22008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22010 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22012 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22013 ;;Total ram usage:        1 bytes
 22014 ;; Hardware stack levels used:    1
 22015 ;; Hardware stack levels required when called:    4
 22016 ;; This function calls:
 22017 ;;		_SPI_ExchangeByte
 22018 ;; This function is called by:
 22019 ;;		_DHCP_Request
 22020 ;;		_DHCP_WriteZeros
 22021 ;;		_IPv4_Start
 22022 ;; This function uses a non-reentrant model
 22023 ;;
 22024                           
 22025                           	psect	text82
 22026  0086E0                     __ptext82:
 22027                           	opt stack 0
 22028  0086E0                     _ETH_Write8:
 22029                           	opt stack 21
 22030                           
 22031                           ; BSR set to: 0
 22032                           ;incstack = 0
 22033                           ;ETH_Write8@data stored from wreg
 22034  0086E0  6E03               	movwf	ETH_Write8@data,c
 22035                           
 22036                           ;encX24j600_spi.c: 336: do{LATB3 = 0;} while(0);
 22037  0086E2  968A               	bcf	3978,3,c	;volatile
 22038                           
 22039                           ;encX24j600_spi.c: 337: TXPacketSize += 1;
 22040  0086E4  0101               	movlb	1	; () banked
 22041  0086E6  4B9A               	infsnz	_TXPacketSize& (0+255),f,b
 22042  0086E8  2B9B               	incf	(_TXPacketSize+1)& (0+255),f,b
 22043                           
 22044                           ; BSR set to: 1
 22045                           ;encX24j600_spi.c: 338: SPI_ExchangeByte(wgpdata_inst);
 22046  0086EA  0E2A               	movlw	42
 22047  0086EC  ECD2  F043         	call	_SPI_ExchangeByte
 22048                           
 22049                           ;encX24j600_spi.c: 339: SPI_ExchangeByte(data);
 22050  0086F0  5003               	movf	ETH_Write8@data,w,c
 22051  0086F2  ECD2  F043         	call	_SPI_ExchangeByte
 22052  0086F6  868A               	bsf	3978,3,c	;volatile
 22053  0086F8  0012               	return		;funcret
 22054  0086FA                     __end_of_ETH_Write8:
 22055                           	opt stack 0
 22056                           tosu	equ	0xFFF
 22057                           tosh	equ	0xFFE
 22058                           tosl	equ	0xFFD
 22059                           pclath	equ	0xFFA
 22060                           tblptru	equ	0xFF8
 22061                           tblptrh	equ	0xFF7
 22062                           tblptrl	equ	0xFF6
 22063                           tablat	equ	0xFF5
 22064                           prodh	equ	0xFF4
 22065                           prodl	equ	0xFF3
 22066                           intcon	equ	0xFF2
 22067                           intcon2	equ	0xFF1
 22068                           indf0	equ	0xFEF
 22069                           postinc0	equ	0xFEE
 22070                           fsr0h	equ	0xFEA
 22071                           fsr0l	equ	0xFE9
 22072                           wreg	equ	0xFE8
 22073                           indf1	equ	0xFE7
 22074                           postinc1	equ	0xFE6
 22075                           postdec1	equ	0xFE5
 22076                           plusw1	equ	0xFE3
 22077                           fsr1h	equ	0xFE2
 22078                           fsr1l	equ	0xFE1
 22079                           indf2	equ	0xFDF
 22080                           postinc2	equ	0xFDE
 22081                           postdec2	equ	0xFDD
 22082                           plusw2	equ	0xFDB
 22083                           fsr2h	equ	0xFDA
 22084                           fsr2l	equ	0xFD9
 22085                           status	equ	0xFD8
 22086                           
 22087 ;; *************** function _ETH_Write32 *****************
 22088 ;; Defined at:
 22089 ;;		line 376 in file "../../TCPIP Library/ethernet_drivers/encX24j600_spi.c"
 22090 ;; Parameters:    Size  Location     Type
 22091 ;;  data            4    2[COMRAM] unsigned long 
 22092 ;; Auto vars:     Size  Location     Type
 22093 ;;		None
 22094 ;; Return value:  Size  Location     Type
 22095 ;;                  1    wreg      void 
 22096 ;; Registers used:
 22097 ;;		wreg, status,2, status,0, cstack
 22098 ;; Tracked objects:
 22099 ;;		On entry : 0/0
 22100 ;;		On exit  : 0/0
 22101 ;;		Unchanged: 0/0
 22102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22103 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22106 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22107 ;;Total ram usage:        4 bytes
 22108 ;; Hardware stack levels used:    1
 22109 ;; Hardware stack levels required when called:    4
 22110 ;; This function calls:
 22111 ;;		_SPI_ExchangeByte
 22112 ;; This function is called by:
 22113 ;;		_DHCP_Request
 22114 ;;		_IPv4_Start
 22115 ;; This function uses a non-reentrant model
 22116 ;;
 22117                           
 22118                           	psect	text83
 22119  0083D0                     __ptext83:
 22120                           	opt stack 0
 22121  0083D0                     _ETH_Write32:
 22122                           	opt stack 21
 22123                           
 22124                           ;incstack = 0
 22125                           ;encX24j600_spi.c: 378: do{LATB3 = 0;} while(0);
 22126  0083D0  968A               	bcf	3978,3,c	;volatile
 22127                           
 22128                           ;encX24j600_spi.c: 379: TXPacketSize += 4;
 22129  0083D2  0E04               	movlw	4
 22130  0083D4  0101               	movlb	1	; () banked
 22131  0083D6  279A               	addwf	_TXPacketSize& (0+255),f,b
 22132  0083D8  0E00               	movlw	0
 22133  0083DA  239B               	addwfc	(_TXPacketSize+1)& (0+255),f,b
 22134                           
 22135                           ; BSR set to: 1
 22136                           ;encX24j600_spi.c: 380: SPI_ExchangeByte(wgpdata_inst);
 22137  0083DC  0E2A               	movlw	42
 22138  0083DE  ECD2  F043         	call	_SPI_ExchangeByte
 22139                           
 22140                           ;encX24j600_spi.c: 381: SPI_ExchangeByte(((uint8_t*) &data)[3]);
 22141  0083E2  5006               	movf	ETH_Write32@data+3,w,c
 22142  0083E4  ECD2  F043         	call	_SPI_ExchangeByte
 22143                           
 22144                           ;encX24j600_spi.c: 382: SPI_ExchangeByte(((uint8_t*) &data)[2]);
 22145  0083E8  5005               	movf	ETH_Write32@data+2,w,c
 22146  0083EA  ECD2  F043         	call	_SPI_ExchangeByte
 22147                           
 22148                           ;encX24j600_spi.c: 383: SPI_ExchangeByte(((uint8_t*) &data)[1]);
 22149  0083EE  5004               	movf	ETH_Write32@data+1,w,c
 22150  0083F0  ECD2  F043         	call	_SPI_ExchangeByte
 22151                           
 22152                           ;encX24j600_spi.c: 384: SPI_ExchangeByte(((uint8_t*) &data)[0]);
 22153  0083F4  5003               	movf	ETH_Write32@data,w,c
 22154  0083F6  ECD2  F043         	call	_SPI_ExchangeByte
 22155  0083FA  868A               	bsf	3978,3,c	;volatile
 22156  0083FC  0012               	return		;funcret
 22157  0083FE                     __end_of_ETH_Write32:
 22158                           	opt stack 0
 22159                           tosu	equ	0xFFF
 22160                           tosh	equ	0xFFE
 22161                           tosl	equ	0xFFD
 22162                           pclath	equ	0xFFA
 22163                           tblptru	equ	0xFF8
 22164                           tblptrh	equ	0xFF7
 22165                           tblptrl	equ	0xFF6
 22166                           tablat	equ	0xFF5
 22167                           prodh	equ	0xFF4
 22168                           prodl	equ	0xFF3
 22169                           intcon	equ	0xFF2
 22170                           intcon2	equ	0xFF1
 22171                           indf0	equ	0xFEF
 22172                           postinc0	equ	0xFEE
 22173                           fsr0h	equ	0xFEA
 22174                           fsr0l	equ	0xFE9
 22175                           wreg	equ	0xFE8
 22176                           indf1	equ	0xFE7
 22177                           postinc1	equ	0xFE6
 22178                           postdec1	equ	0xFE5
 22179                           plusw1	equ	0xFE3
 22180                           fsr1h	equ	0xFE2
 22181                           fsr1l	equ	0xFE1
 22182                           indf2	equ	0xFDF
 22183                           postinc2	equ	0xFDE
 22184                           postdec2	equ	0xFDD
 22185                           plusw2	equ	0xFDB
 22186                           fsr2h	equ	0xFDA
 22187                           fsr2l	equ	0xFD9
 22188                           status	equ	0xFD8
 22189                           
 22190 ;; *************** function _ARPV4_Request *****************
 22191 ;; Defined at:
 22192 ;;		line 194 in file "../../TCPIP Library/source/arpv4.c"
 22193 ;; Parameters:    Size  Location     Type
 22194 ;;  destAddress     4   14[COMRAM] unsigned long 
 22195 ;; Auto vars:     Size  Location     Type
 22196 ;;  header         28   46[COMRAM] struct .
 22197 ;;  ret             1   45[COMRAM] enum E450
 22198 ;; Return value:  Size  Location     Type
 22199 ;;                  1    wreg      enum E450
 22200 ;; Registers used:
 22201 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22202 ;; Tracked objects:
 22203 ;;		On entry : F/0
 22204 ;;		On exit  : 0/0
 22205 ;;		Unchanged: 0/0
 22206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22207 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22208 ;;      Locals:        29       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22209 ;;      Temps:         27       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22210 ;;      Totals:        60       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22211 ;;Total ram usage:       60 bytes
 22212 ;; Hardware stack levels used:    1
 22213 ;; Hardware stack levels required when called:    7
 22214 ;; This function calls:
 22215 ;;		_ETH_GetMAC
 22216 ;;		_ETH_Send
 22217 ;;		_ETH_WriteBlock
 22218 ;;		_ETH_WriteStart
 22219 ;; This function is called by:
 22220 ;;		_IPv4_Start
 22221 ;; This function uses a non-reentrant model
 22222 ;;
 22223                           
 22224                           	psect	text84
 22225  0064D0                     __ptext84:
 22226                           	opt stack 0
 22227  0064D0                     _ARPV4_Request:
 22228                           	opt stack 18
 22229                           
 22230                           ; BSR set to: 0
 22231                           ;arpv4.c: 200: arpHeader_t header;
 22232                           ;arpv4.c: 201: header.htype = ((((uint16_t)1 & (uint16_t)0xFF00) >> 8) | (((uint16_t)1 &
      +                           (uint16_t)0x00FF) << 8));
 22233                           
 22234                           ; BSR set to: 0
 22235                           
 22236                           ;incstack = 0
 22237  0064D0  0E01               	movlw	1
 22238  0064D2  6E30               	movwf	ARPV4_Request@header+1,c
 22239  0064D4  6A2F               	clrf	ARPV4_Request@header,c
 22240                           
 22241                           ;arpv4.c: 202: header.ptype = ((((uint16_t)0x0800 & (uint16_t)0xFF00) >> 8) | (((uint16_
      +                          t)0x0800 & (uint16_t)0x00FF) << 8));
 22242  0064D6  6A32               	clrf	ARPV4_Request@header+3,c
 22243  0064D8  0E08               	movlw	8
 22244  0064DA  6E31               	movwf	ARPV4_Request@header+2,c
 22245                           
 22246                           ;arpv4.c: 203: header.hlen = 6;
 22247  0064DC  0E06               	movlw	6
 22248  0064DE  6E33               	movwf	ARPV4_Request@header+4,c
 22249                           
 22250                           ;arpv4.c: 204: header.plen = 4;
 22251  0064E0  0E04               	movlw	4
 22252  0064E2  6E34               	movwf	ARPV4_Request@header+5,c
 22253                           
 22254                           ;arpv4.c: 205: header.oper = ((((uint16_t)1 & (uint16_t)0xFF00) >> 8) | (((uint16_t)1 & 
      +                          (uint16_t)0x00FF) << 8));
 22255  0064E4  0E01               	movlw	1
 22256  0064E6  6E36               	movwf	ARPV4_Request@header+7,c
 22257  0064E8  6A35               	clrf	ARPV4_Request@header+6,c
 22258                           
 22259                           ; BSR set to: 0
 22260                           ;arpv4.c: 206: ETH_GetMAC((char*)&header.sha);
 22261  0064EA  0E37               	movlw	low (ARPV4_Request@header+8)
 22262  0064EC  6E08               	movwf	ETH_GetMAC@macAddr,c
 22263  0064EE  6A09               	clrf	ETH_GetMAC@macAddr+1,c
 22264  0064F0  ECB8  F03C         	call	_ETH_GetMAC	;wreg free
 22265                           
 22266                           ;arpv4.c: 207: header.spa = ((((uint32_t)ipv4Address&(uint32_t)0xff000000) >> 24) | (((u
      +                          int32_t)ipv4Address&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)ipv4Address&(uint32_t)0x00
      +                          00ff00) << 8) | (((uint32_t)ipv4Address&(uint32_t)0x000000ff) << 24) );
 22267  0064F4  0101               	movlb	1	; () banked
 22268  0064F6  518E               	movf	_ipv4Address& (0+255),w,b
 22269  0064F8  6E13               	movwf	??_ARPV4_Request& (0+255),c
 22270  0064FA  6A14               	clrf	(??_ARPV4_Request+1)& (0+255),c
 22271  0064FC  6A15               	clrf	(??_ARPV4_Request+2)& (0+255),c
 22272  0064FE  6A16               	clrf	(??_ARPV4_Request+3)& (0+255),c
 22273  006500  C013  F016         	movff	??_ARPV4_Request,??_ARPV4_Request+3
 22274  006504  6A15               	clrf	??_ARPV4_Request+2,c
 22275  006506  6A14               	clrf	??_ARPV4_Request+1,c
 22276  006508  6A13               	clrf	??_ARPV4_Request,c
 22277  00650A  6A17               	clrf	(??_ARPV4_Request+4)& (0+255),c
 22278  00650C  518F               	movf	(_ipv4Address+1)& (0+255),w,b
 22279  00650E  6E18               	movwf	(??_ARPV4_Request+5)& (0+255),c
 22280  006510  6A19               	clrf	(??_ARPV4_Request+6)& (0+255),c
 22281  006512  6A1A               	clrf	(??_ARPV4_Request+7)& (0+255),c
 22282  006514  C019  F01A         	movff	??_ARPV4_Request+6,??_ARPV4_Request+7
 22283  006518  C018  F019         	movff	??_ARPV4_Request+5,??_ARPV4_Request+6
 22284  00651C  C017  F018         	movff	??_ARPV4_Request+4,??_ARPV4_Request+5
 22285  006520  6A17               	clrf	??_ARPV4_Request+4,c
 22286  006522  6A1B               	clrf	(??_ARPV4_Request+8)& (0+255),c
 22287  006524  5190               	movf	(_ipv4Address+2)& (0+255),w,b
 22288  006526  6E1C               	movwf	(??_ARPV4_Request+9)& (0+255),c
 22289  006528  6A1D               	clrf	(??_ARPV4_Request+10)& (0+255),c
 22290  00652A  501B               	movf	??_ARPV4_Request+8,w,c
 22291  00652C  6E1E               	movwf	(??_ARPV4_Request+11)& (0+255),c
 22292  00652E  501C               	movf	??_ARPV4_Request+9,w,c
 22293  006530  6E1F               	movwf	(??_ARPV4_Request+12)& (0+255),c
 22294  006532  501D               	movf	??_ARPV4_Request+10,w,c
 22295  006534  6E20               	movwf	(??_ARPV4_Request+13)& (0+255),c
 22296  006536  6A21               	clrf	(??_ARPV4_Request+14)& (0+255),c
 22297  006538  6A22               	clrf	(??_ARPV4_Request+15)& (0+255),c
 22298  00653A  6A23               	clrf	(??_ARPV4_Request+16)& (0+255),c
 22299  00653C  6A24               	clrf	(??_ARPV4_Request+17)& (0+255),c
 22300  00653E  5191               	movf	(_ipv4Address+3)& (0+255),w,b
 22301  006540  6E25               	movwf	(??_ARPV4_Request+18)& (0+255),c
 22302  006542  0E19               	movlw	25
 22303  006544  D005               	goto	u10370
 22304  006546                     u10375:
 22305  006546  90D8               	bcf	status,0,c
 22306  006548  3225               	rrcf	??_ARPV4_Request+18,f,c
 22307  00654A  3224               	rrcf	??_ARPV4_Request+17,f,c
 22308  00654C  3223               	rrcf	??_ARPV4_Request+16,f,c
 22309  00654E  3222               	rrcf	??_ARPV4_Request+15,f,c
 22310  006550                     u10370:
 22311  006550  2EE8               	decfsz	wreg,f,c
 22312  006552  D7F9               	goto	u10375
 22313  006554  501E               	movf	??_ARPV4_Request+11,w,c
 22314  006556  1022               	iorwf	??_ARPV4_Request+15,w,c
 22315  006558  6E26               	movwf	(??_ARPV4_Request+19)& (0+255),c
 22316  00655A  501F               	movf	??_ARPV4_Request+12,w,c
 22317  00655C  1023               	iorwf	??_ARPV4_Request+16,w,c
 22318  00655E  6E27               	movwf	(??_ARPV4_Request+20)& (0+255),c
 22319  006560  5020               	movf	??_ARPV4_Request+13,w,c
 22320  006562  1024               	iorwf	??_ARPV4_Request+17,w,c
 22321  006564  6E28               	movwf	(??_ARPV4_Request+21)& (0+255),c
 22322  006566  5021               	movf	??_ARPV4_Request+14,w,c
 22323  006568  1025               	iorwf	??_ARPV4_Request+18,w,c
 22324  00656A  6E29               	movwf	(??_ARPV4_Request+22)& (0+255),c
 22325  00656C  5017               	movf	??_ARPV4_Request+4,w,c
 22326  00656E  1026               	iorwf	??_ARPV4_Request+19,w,c
 22327  006570  6E2A               	movwf	(??_ARPV4_Request+23)& (0+255),c
 22328  006572  5018               	movf	??_ARPV4_Request+5,w,c
 22329  006574  1027               	iorwf	??_ARPV4_Request+20,w,c
 22330  006576  6E2B               	movwf	(??_ARPV4_Request+24)& (0+255),c
 22331  006578  5019               	movf	??_ARPV4_Request+6,w,c
 22332  00657A  1028               	iorwf	??_ARPV4_Request+21,w,c
 22333  00657C  6E2C               	movwf	(??_ARPV4_Request+25)& (0+255),c
 22334  00657E  501A               	movf	??_ARPV4_Request+7,w,c
 22335  006580  1029               	iorwf	??_ARPV4_Request+22,w,c
 22336  006582  6E2D               	movwf	(??_ARPV4_Request+26)& (0+255),c
 22337  006584  5013               	movf	??_ARPV4_Request,w,c
 22338  006586  102A               	iorwf	??_ARPV4_Request+23,w,c
 22339  006588  6E3D               	movwf	ARPV4_Request@header+14,c
 22340  00658A  5014               	movf	??_ARPV4_Request+1,w,c
 22341  00658C  102B               	iorwf	??_ARPV4_Request+24,w,c
 22342  00658E  6E3E               	movwf	ARPV4_Request@header+15,c
 22343  006590  5015               	movf	??_ARPV4_Request+2,w,c
 22344  006592  102C               	iorwf	??_ARPV4_Request+25,w,c
 22345  006594  6E3F               	movwf	ARPV4_Request@header+16,c
 22346  006596  5016               	movf	??_ARPV4_Request+3,w,c
 22347  006598  102D               	iorwf	??_ARPV4_Request+26,w,c
 22348  00659A  6E40               	movwf	ARPV4_Request@header+17,c
 22349                           
 22350                           ; BSR set to: 1
 22351                           ;arpv4.c: 208: header.tpa= ((((uint32_t)destAddress&(uint32_t)0xff000000) >> 24) | (((ui
      +                          nt32_t)destAddress&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)destAddress&(uint32_t)0x000
      +                          0ff00) << 8) | (((uint32_t)destAddress&(uint32_t)0x000000ff) << 24) );
 22352  00659C  500F               	movf	ARPV4_Request@destAddress,w,c
 22353  00659E  6E13               	movwf	??_ARPV4_Request& (0+255),c
 22354  0065A0  6A14               	clrf	(??_ARPV4_Request+1)& (0+255),c
 22355  0065A2  6A15               	clrf	(??_ARPV4_Request+2)& (0+255),c
 22356  0065A4  6A16               	clrf	(??_ARPV4_Request+3)& (0+255),c
 22357  0065A6  C013  F016         	movff	??_ARPV4_Request,??_ARPV4_Request+3
 22358  0065AA  6A15               	clrf	??_ARPV4_Request+2,c
 22359  0065AC  6A14               	clrf	??_ARPV4_Request+1,c
 22360  0065AE  6A13               	clrf	??_ARPV4_Request,c
 22361  0065B0  6A17               	clrf	(??_ARPV4_Request+4)& (0+255),c
 22362  0065B2  5010               	movf	ARPV4_Request@destAddress+1,w,c
 22363  0065B4  6E18               	movwf	(??_ARPV4_Request+5)& (0+255),c
 22364  0065B6  6A19               	clrf	(??_ARPV4_Request+6)& (0+255),c
 22365  0065B8  6A1A               	clrf	(??_ARPV4_Request+7)& (0+255),c
 22366  0065BA  C019  F01A         	movff	??_ARPV4_Request+6,??_ARPV4_Request+7
 22367  0065BE  C018  F019         	movff	??_ARPV4_Request+5,??_ARPV4_Request+6
 22368  0065C2  C017  F018         	movff	??_ARPV4_Request+4,??_ARPV4_Request+5
 22369  0065C6  6A17               	clrf	??_ARPV4_Request+4,c
 22370  0065C8  6A1B               	clrf	(??_ARPV4_Request+8)& (0+255),c
 22371  0065CA  5011               	movf	ARPV4_Request@destAddress+2,w,c
 22372  0065CC  6E1C               	movwf	(??_ARPV4_Request+9)& (0+255),c
 22373  0065CE  6A1D               	clrf	(??_ARPV4_Request+10)& (0+255),c
 22374  0065D0  501B               	movf	??_ARPV4_Request+8,w,c
 22375  0065D2  6E1E               	movwf	(??_ARPV4_Request+11)& (0+255),c
 22376  0065D4  501C               	movf	??_ARPV4_Request+9,w,c
 22377  0065D6  6E1F               	movwf	(??_ARPV4_Request+12)& (0+255),c
 22378  0065D8  501D               	movf	??_ARPV4_Request+10,w,c
 22379  0065DA  6E20               	movwf	(??_ARPV4_Request+13)& (0+255),c
 22380  0065DC  6A21               	clrf	(??_ARPV4_Request+14)& (0+255),c
 22381  0065DE  6A22               	clrf	(??_ARPV4_Request+15)& (0+255),c
 22382  0065E0  6A23               	clrf	(??_ARPV4_Request+16)& (0+255),c
 22383  0065E2  6A24               	clrf	(??_ARPV4_Request+17)& (0+255),c
 22384  0065E4  5012               	movf	ARPV4_Request@destAddress+3,w,c
 22385  0065E6  6E25               	movwf	(??_ARPV4_Request+18)& (0+255),c
 22386  0065E8  0E19               	movlw	25
 22387  0065EA  D005               	goto	u10380
 22388  0065EC                     u10385:
 22389  0065EC  90D8               	bcf	status,0,c
 22390  0065EE  3225               	rrcf	??_ARPV4_Request+18,f,c
 22391  0065F0  3224               	rrcf	??_ARPV4_Request+17,f,c
 22392  0065F2  3223               	rrcf	??_ARPV4_Request+16,f,c
 22393  0065F4  3222               	rrcf	??_ARPV4_Request+15,f,c
 22394  0065F6                     u10380:
 22395  0065F6  2EE8               	decfsz	wreg,f,c
 22396  0065F8  D7F9               	goto	u10385
 22397  0065FA  501E               	movf	??_ARPV4_Request+11,w,c
 22398  0065FC  1022               	iorwf	??_ARPV4_Request+15,w,c
 22399  0065FE  6E26               	movwf	(??_ARPV4_Request+19)& (0+255),c
 22400  006600  501F               	movf	??_ARPV4_Request+12,w,c
 22401  006602  1023               	iorwf	??_ARPV4_Request+16,w,c
 22402  006604  6E27               	movwf	(??_ARPV4_Request+20)& (0+255),c
 22403  006606  5020               	movf	??_ARPV4_Request+13,w,c
 22404  006608  1024               	iorwf	??_ARPV4_Request+17,w,c
 22405  00660A  6E28               	movwf	(??_ARPV4_Request+21)& (0+255),c
 22406  00660C  5021               	movf	??_ARPV4_Request+14,w,c
 22407  00660E  1025               	iorwf	??_ARPV4_Request+18,w,c
 22408  006610  6E29               	movwf	(??_ARPV4_Request+22)& (0+255),c
 22409  006612  5017               	movf	??_ARPV4_Request+4,w,c
 22410  006614  1026               	iorwf	??_ARPV4_Request+19,w,c
 22411  006616  6E2A               	movwf	(??_ARPV4_Request+23)& (0+255),c
 22412  006618  5018               	movf	??_ARPV4_Request+5,w,c
 22413  00661A  1027               	iorwf	??_ARPV4_Request+20,w,c
 22414  00661C  6E2B               	movwf	(??_ARPV4_Request+24)& (0+255),c
 22415  00661E  5019               	movf	??_ARPV4_Request+6,w,c
 22416  006620  1028               	iorwf	??_ARPV4_Request+21,w,c
 22417  006622  6E2C               	movwf	(??_ARPV4_Request+25)& (0+255),c
 22418  006624  501A               	movf	??_ARPV4_Request+7,w,c
 22419  006626  1029               	iorwf	??_ARPV4_Request+22,w,c
 22420  006628  6E2D               	movwf	(??_ARPV4_Request+26)& (0+255),c
 22421  00662A  5013               	movf	??_ARPV4_Request,w,c
 22422  00662C  102A               	iorwf	??_ARPV4_Request+23,w,c
 22423  00662E  6E47               	movwf	ARPV4_Request@header+24,c
 22424  006630  5014               	movf	??_ARPV4_Request+1,w,c
 22425  006632  102B               	iorwf	??_ARPV4_Request+24,w,c
 22426  006634  6E48               	movwf	ARPV4_Request@header+25,c
 22427  006636  5015               	movf	??_ARPV4_Request+2,w,c
 22428  006638  102C               	iorwf	??_ARPV4_Request+25,w,c
 22429  00663A  6E49               	movwf	ARPV4_Request@header+26,c
 22430  00663C  5016               	movf	??_ARPV4_Request+3,w,c
 22431  00663E  102D               	iorwf	??_ARPV4_Request+26,w,c
 22432  006640  6E4A               	movwf	ARPV4_Request@header+27,c
 22433                           
 22434                           ; BSR set to: 1
 22435                           ;arpv4.c: 209: header.tha.s.byte1 = 0;
 22436  006642  6A41               	clrf	ARPV4_Request@header+18,c
 22437                           
 22438                           ; BSR set to: 1
 22439                           ;arpv4.c: 210: header.tha.s.byte2 = 0;
 22440  006644  6A42               	clrf	ARPV4_Request@header+19,c
 22441                           
 22442                           ; BSR set to: 1
 22443                           ;arpv4.c: 211: header.tha.s.byte3 = 0;
 22444  006646  6A43               	clrf	ARPV4_Request@header+20,c
 22445                           
 22446                           ; BSR set to: 1
 22447                           ;arpv4.c: 212: header.tha.s.byte4 = 0;
 22448  006648  6A44               	clrf	ARPV4_Request@header+21,c
 22449                           
 22450                           ; BSR set to: 1
 22451                           ;arpv4.c: 213: header.tha.s.byte5 = 0;
 22452  00664A  6A45               	clrf	ARPV4_Request@header+22,c
 22453                           
 22454                           ; BSR set to: 1
 22455                           ;arpv4.c: 214: header.tha.s.byte6 = 0;
 22456  00664C  6A46               	clrf	ARPV4_Request@header+23,c
 22457                           
 22458                           ; BSR set to: 1
 22459                           ;arpv4.c: 216: ret = ETH_WriteStart(&broadcastMAC,0x0806);
 22460  00664E  0E28               	movlw	low _broadcastMAC
 22461  006650  6E0B               	movwf	ETH_WriteStart@destMAC,c
 22462  006652  500B               	movf	ETH_WriteStart@destMAC,w,c
 22463  006654  A4D8               	btfss	status,2,c
 22464  006656  0E10               	movlw	high __smallconst
 22465  006658  6E0C               	movwf	ETH_WriteStart@destMAC+1,c
 22466  00665A  0E08               	movlw	8
 22467  00665C  6E0E               	movwf	ETH_WriteStart@type+1,c
 22468  00665E  0E06               	movlw	6
 22469  006660  6E0D               	movwf	ETH_WriteStart@type,c
 22470  006662  EC83  F03E         	call	_ETH_WriteStart	;wreg free
 22471  006666  6E2E               	movwf	ARPV4_Request@ret,c
 22472                           
 22473                           ;arpv4.c: 217: if(ret == SUCCESS)
 22474  006668  042E               	decf	ARPV4_Request@ret,w,c
 22475  00666A  E10E               	bnz	l7901
 22476                           
 22477                           ;arpv4.c: 218: {
 22478                           ;arpv4.c: 219: ETH_WriteBlock((char*)&header,sizeof(arpHeader_t));
 22479  00666C  0E2F               	movlw	low ARPV4_Request@header
 22480  00666E  6E03               	movwf	ETH_WriteBlock@data,c
 22481  006670  6A04               	clrf	ETH_WriteBlock@data+1,c
 22482  006672  6A06               	clrf	ETH_WriteBlock@len+1,c
 22483  006674  0E1C               	movlw	28
 22484  006676  6E05               	movwf	ETH_WriteBlock@len,c
 22485  006678  EC02  F03E         	call	_ETH_WriteBlock	;wreg free
 22486                           
 22487                           ;arpv4.c: 220: ret = ETH_Send();
 22488  00667C  ECEB  F042         	call	_ETH_Send	;wreg free
 22489  006680  6E2E               	movwf	ARPV4_Request@ret,c
 22490                           
 22491                           ; BSR set to: 1
 22492                           ;arpv4.c: 221: if(ret == SUCCESS)
 22493  006682  042E               	decf	ARPV4_Request@ret,w,c
 22494  006684  E101               	bnz	l7901
 22495                           
 22496                           ; BSR set to: 1
 22497                           ;arpv4.c: 222: {
 22498                           ;arpv4.c: 223: return MAC_NOT_FOUND;
 22499  006686  0C05               	retlw	5
 22500  006688                     l7901:
 22501                           
 22502                           ;arpv4.c: 224: }
 22503                           ;arpv4.c: 225: }
 22504                           ;arpv4.c: 226: return ret;
 22505  006688  502E               	movf	ARPV4_Request@ret,w,c
 22506  00668A  0012               	return		;funcret
 22507  00668C                     __end_of_ARPV4_Request:
 22508                           	opt stack 0
 22509                           tosu	equ	0xFFF
 22510                           tosh	equ	0xFFE
 22511                           tosl	equ	0xFFD
 22512                           pclath	equ	0xFFA
 22513                           tblptru	equ	0xFF8
 22514                           tblptrh	equ	0xFF7
 22515                           tblptrl	equ	0xFF6
 22516                           tablat	equ	0xFF5
 22517                           prodh	equ	0xFF4
 22518                           prodl	equ	0xFF3
 22519                           intcon	equ	0xFF2
 22520                           intcon2	equ	0xFF1
 22521                           indf0	equ	0xFEF
 22522                           postinc0	equ	0xFEE
 22523                           fsr0h	equ	0xFEA
 22524                           fsr0l	equ	0xFE9
 22525                           wreg	equ	0xFE8
 22526                           indf1	equ	0xFE7
 22527                           postinc1	equ	0xFE6
 22528                           postdec1	equ	0xFE5
 22529                           plusw1	equ	0xFE3
 22530                           fsr1h	equ	0xFE2
 22531                           fsr1l	equ	0xFE1
 22532                           indf2	equ	0xFDF
 22533                           postinc2	equ	0xFDE
 22534                           postdec2	equ	0xFDD
 22535                           plusw2	equ	0xFDB
 22536                           fsr2h	equ	0xFDA
 22537                           fsr2l	equ	0xFD9
 22538                           status	equ	0xFD8
 22539                           
 22540 ;; *************** function _ETH_WriteStart *****************
 22541 ;; Defined at:
 22542 ;;		line 366 in file "../../TCPIP Library/ethernet_drivers/encX24J600_driver.c"
 22543 ;; Parameters:    Size  Location     Type
 22544 ;;  destMAC         2   10[COMRAM] PTR const struct .
 22545 ;;		 -> arpMap.macAddress(6), broadcastMAC(6), header.sha(6), ARPV4_Packet@header(28), 
 22546 ;;		 -> arpMap(104), NULL(0), 
 22547 ;;  type            2   12[COMRAM] unsigned int 
 22548 ;; Auto vars:     Size  Location     Type
 22549 ;;		None
 22550 ;; Return value:  Size  Location     Type
 22551 ;;                  1    wreg      enum E6934
 22552 ;; Registers used:
 22553 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22554 ;; Tracked objects:
 22555 ;;		On entry : E/1
 22556 ;;		On exit  : 0/0
 22557 ;;		Unchanged: 0/0
 22558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22559 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22562 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22563 ;;Total ram usage:        4 bytes
 22564 ;; Hardware stack levels used:    1
 22565 ;; Hardware stack levels required when called:    6
 22566 ;; This function calls:
 22567 ;;		_ENCx24_Read
 22568 ;;		_ENCx24_Write
 22569 ;;		_ETH_Write16
 22570 ;;		_ETH_WriteBlock
 22571 ;; This function is called by:
 22572 ;;		_ARPV4_Packet
 22573 ;;		_ARPV4_Request
 22574 ;;		_IPv4_Start
 22575 ;; This function uses a non-reentrant model
 22576 ;;
 22577                           
 22578                           	psect	text85
 22579  007D06                     __ptext85:
 22580                           	opt stack 0
 22581  007D06                     _ETH_WriteStart:
 22582                           	opt stack 19
 22583                           
 22584                           ;encX24J600_driver.c: 368: TXPacketSize = 0;
 22585                           
 22586                           ;incstack = 0
 22587  007D06  0101               	movlb	1	; () banked
 22588  007D08  6B9A               	clrf	_TXPacketSize& (0+255),b
 22589  007D0A  6B9B               	clrf	(_TXPacketSize+1)& (0+255),b
 22590                           
 22591                           ;encX24J600_driver.c: 369: if(ethData.bufferBusy)
 22592  007D0C  BB83               	btfsc	_ethData& (0+255),5,b	;volatile
 22593                           
 22594                           ; BSR set to: 1
 22595                           ;encX24J600_driver.c: 370: {
 22596                           ;encX24J600_driver.c: 371: return BUFFER_BUSY;
 22597  007D0E  0C03               	retlw	3
 22598                           
 22599                           ; BSR set to: 1
 22600                           ;encX24J600_driver.c: 372: }
 22601                           ;encX24J600_driver.c: 373: if((ENCx24_Read(XJ600_ECON1L) & 0x02))
 22602  007D10  0EFE               	movlw	254
 22603  007D12  EC06  F040         	call	_ENCx24_Read
 22604  007D16  B205               	btfsc	?_ENCx24_Read,1,c
 22605                           
 22606                           ;encX24J600_driver.c: 374: {
 22607                           ;encX24J600_driver.c: 375: return TX_LOGIC_NOT_IDLE;
 22608  007D18  0C04               	retlw	4
 22609                           
 22610                           ;encX24J600_driver.c: 376: }
 22611                           ;encX24J600_driver.c: 378: ENCx24_Write(XJ600_EGPWRPTL, 0x0000ul);
 22612  007D1A  6A06               	clrf	ENCx24_Write@data+1,c
 22613  007D1C  6A05               	clrf	ENCx24_Write@data,c
 22614  007D1E  0E88               	movlw	136
 22615  007D20  EC94  F040         	call	_ENCx24_Write
 22616                           
 22617                           ;encX24J600_driver.c: 380: ETH_WriteBlock((char *)destMAC,6);
 22618  007D24  C00B  F003         	movff	ETH_WriteStart@destMAC,ETH_WriteBlock@data
 22619  007D28  C00C  F004         	movff	ETH_WriteStart@destMAC+1,ETH_WriteBlock@data+1
 22620  007D2C  6A06               	clrf	ETH_WriteBlock@len+1,c
 22621  007D2E  0E06               	movlw	6
 22622  007D30  6E05               	movwf	ETH_WriteBlock@len,c
 22623  007D32  EC02  F03E         	call	_ETH_WriteBlock	;wreg free
 22624                           
 22625                           ;encX24J600_driver.c: 381: ETH_WriteBlock((char *)&ethMAC,6);
 22626  007D36  0E99               	movlw	low _ethMAC
 22627  007D38  6E03               	movwf	ETH_WriteBlock@data,c
 22628  007D3A  0E02               	movlw	high _ethMAC
 22629  007D3C  6E04               	movwf	ETH_WriteBlock@data+1,c
 22630  007D3E  6A06               	clrf	ETH_WriteBlock@len+1,c
 22631  007D40  0E06               	movlw	6
 22632  007D42  6E05               	movwf	ETH_WriteBlock@len,c
 22633  007D44  EC02  F03E         	call	_ETH_WriteBlock	;wreg free
 22634                           
 22635                           ;encX24J600_driver.c: 382: ETH_Write16(type);
 22636  007D48  C00D  F003         	movff	ETH_WriteStart@type,ETH_Write16@data
 22637  007D4C  C00E  F004         	movff	ETH_WriteStart@type+1,ETH_Write16@data+1
 22638  007D50  ECDA  F042         	call	_ETH_Write16	;wreg free
 22639                           
 22640                           ;encX24J600_driver.c: 383: ethData.bufferBusy = 1;
 22641  007D54  0101               	movlb	1	; () banked
 22642  007D56  8B83               	bsf	_ethData& (0+255),5,b	;volatile
 22643                           
 22644                           ; BSR set to: 1
 22645                           ;encX24J600_driver.c: 385: return SUCCESS;
 22646  007D58  0C01               	retlw	1	;funcret
 22647  007D5A                     __end_of_ETH_WriteStart:
 22648                           	opt stack 0
 22649                           tosu	equ	0xFFF
 22650                           tosh	equ	0xFFE
 22651                           tosl	equ	0xFFD
 22652                           pclath	equ	0xFFA
 22653                           tblptru	equ	0xFF8
 22654                           tblptrh	equ	0xFF7
 22655                           tblptrl	equ	0xFF6
 22656                           tablat	equ	0xFF5
 22657                           prodh	equ	0xFF4
 22658                           prodl	equ	0xFF3
 22659                           intcon	equ	0xFF2
 22660                           intcon2	equ	0xFF1
 22661                           indf0	equ	0xFEF
 22662                           postinc0	equ	0xFEE
 22663                           fsr0h	equ	0xFEA
 22664                           fsr0l	equ	0xFE9
 22665                           wreg	equ	0xFE8
 22666                           indf1	equ	0xFE7
 22667                           postinc1	equ	0xFE6
 22668                           postdec1	equ	0xFE5
 22669                           plusw1	equ	0xFE3
 22670                           fsr1h	equ	0xFE2
 22671                           fsr1l	equ	0xFE1
 22672                           indf2	equ	0xFDF
 22673                           postinc2	equ	0xFDE
 22674                           postdec2	equ	0xFDD
 22675                           plusw2	equ	0xFDB
 22676                           fsr2h	equ	0xFDA
 22677                           fsr2l	equ	0xFD9
 22678                           status	equ	0xFD8
 22679                           
 22680 ;; *************** function _ETH_WriteBlock *****************
 22681 ;; Defined at:
 22682 ;;		line 393 in file "../../TCPIP Library/ethernet_drivers/encX24j600_spi.c"
 22683 ;; Parameters:    Size  Location     Type
 22684 ;;  data            2    2[COMRAM] PTR void 
 22685 ;;		 -> arpMap.macAddress(6), ?_sprintf(2), ?_printf(2), main@str(32), 
 22686 ;;		 -> STR_5(13), STR_4(17), DEMO_TCP_EchoServer@txdataPort7(20), TCP_Snd@txHeader(20), 
 22687 ;;		 -> Network_Read@debug_str(80), dhcpName(21), DHCP_Request@ethMAC(6), broadcastMAC(6), 
 22688 ;;		 -> ARPV4_Request@header(28), header.sha(6), ARPV4_Packet@header(28), arpMap(104), 
 22689 ;;		 -> ethMAC(6), NULL(0), 
 22690 ;;  len             2    4[COMRAM] unsigned int 
 22691 ;; Auto vars:     Size  Location     Type
 22692 ;;  p               2    6[COMRAM] PTR unsigned char 
 22693 ;;		 -> arpMap.macAddress(6), ?_sprintf(2), ?_printf(2), main@str(32), 
 22694 ;;		 -> STR_5(13), STR_4(17), DEMO_TCP_EchoServer@txdataPort7(20), TCP_Snd@txHeader(20), 
 22695 ;;		 -> Network_Read@debug_str(80), dhcpName(21), DHCP_Request@ethMAC(6), broadcastMAC(6), 
 22696 ;;		 -> ARPV4_Request@header(28), header.sha(6), ARPV4_Packet@header(28), arpMap(104), 
 22697 ;;		 -> ethMAC(6), NULL(0), 
 22698 ;; Return value:  Size  Location     Type
 22699 ;;                  2    2[COMRAM] unsigned int 
 22700 ;; Registers used:
 22701 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22702 ;; Tracked objects:
 22703 ;;		On entry : 0/1
 22704 ;;		On exit  : 0/0
 22705 ;;		Unchanged: 0/0
 22706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22707 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22708 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22710 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22711 ;;Total ram usage:        6 bytes
 22712 ;; Hardware stack levels used:    1
 22713 ;; Hardware stack levels required when called:    4
 22714 ;; This function calls:
 22715 ;;		_SPI_ExchangeByte
 22716 ;; This function is called by:
 22717 ;;		_ETH_WriteStart
 22718 ;;		_ARPV4_Packet
 22719 ;;		_ARPV4_Request
 22720 ;;		_DHCP_Request
 22721 ;;		_TCP_Snd
 22722 ;; This function uses a non-reentrant model
 22723 ;;
 22724                           
 22725                           	psect	text86
 22726  007C04                     __ptext86:
 22727                           	opt stack 0
 22728  007C04                     _ETH_WriteBlock:
 22729                           	opt stack 20
 22730                           
 22731                           ;encX24j600_spi.c: 395: char *p = data;
 22732                           
 22733                           ;incstack = 0
 22734  007C04  C003  F007         	movff	ETH_WriteBlock@data,ETH_WriteBlock@p
 22735  007C08  C004  F008         	movff	ETH_WriteBlock@data+1,ETH_WriteBlock@p+1
 22736  007C0C  968A               	bcf	3978,3,c	;volatile
 22737                           
 22738                           ;encX24j600_spi.c: 398: TXPacketSize += len;
 22739  007C0E  5005               	movf	ETH_WriteBlock@len,w,c
 22740  007C10  0101               	movlb	1	; () banked
 22741  007C12  279A               	addwf	_TXPacketSize& (0+255),f,b
 22742  007C14  5006               	movf	ETH_WriteBlock@len+1,w,c
 22743  007C16  239B               	addwfc	(_TXPacketSize+1)& (0+255),f,b
 22744                           
 22745                           ; BSR set to: 1
 22746                           ;encX24j600_spi.c: 399: SPI_ExchangeByte(wgpdata_inst);
 22747  007C18  0E2A               	movlw	42
 22748  007C1A  ECD2  F043         	call	_SPI_ExchangeByte
 22749                           
 22750                           ;encX24j600_spi.c: 400: while(len--)
 22751  007C1E  D015               	goto	l7679
 22752  007C20                     l7675:
 22753                           
 22754                           ;encX24j600_spi.c: 401: {
 22755                           ;encX24j600_spi.c: 402: SPI_ExchangeByte(*p++);
 22756  007C20  C007  FFF6         	movff	ETH_WriteBlock@p,tblptrl
 22757  007C24  C008  FFF7         	movff	ETH_WriteBlock@p+1,tblptrh
 22758  007C28  0E00               	movlw	low (__smallconst shr (0+16))
 22759  007C2A  6EF8               	movwf	tblptru,c
 22760  007C2C  0E0F               	movlw	(high __ramtop+-1)
 22761  007C2E  64F7               	cpfsgt	tblptrh,c
 22762  007C30  D003               	bra	u10257
 22763  007C32  0008               	tblrd		*
 22764  007C34  50F5               	movf	tablat,w,c
 22765  007C36  D005               	bra	u10250
 22766  007C38                     u10257:
 22767  007C38  CFF6 FFE9          	movff	tblptrl,fsr0l
 22768  007C3C  CFF7 FFEA          	movff	tblptrh,fsr0h
 22769  007C40  50EF               	movf	indf0,w,c
 22770  007C42                     u10250:
 22771  007C42  ECD2  F043         	call	_SPI_ExchangeByte
 22772  007C46  4A07               	infsnz	ETH_WriteBlock@p,f,c
 22773  007C48  2A08               	incf	ETH_WriteBlock@p+1,f,c
 22774  007C4A                     l7679:
 22775  007C4A  0605               	decf	ETH_WriteBlock@len,f,c
 22776  007C4C  A0D8               	btfss	status,0,c
 22777  007C4E  0606               	decf	ETH_WriteBlock@len+1,f,c
 22778  007C50  2805               	incf	ETH_WriteBlock@len,w,c
 22779  007C52  E1E6               	bnz	l7675
 22780  007C54  2806               	incf	ETH_WriteBlock@len+1,w,c
 22781  007C56  E1E4               	bnz	l7675
 22782                           
 22783                           ;encX24j600_spi.c: 403: }
 22784                           ;encX24j600_spi.c: 404: do{LATB3 = 1;} while(0);
 22785  007C58  868A               	bsf	3978,3,c	;volatile
 22786  007C5A  0012               	return		;funcret
 22787  007C5C                     __end_of_ETH_WriteBlock:
 22788                           	opt stack 0
 22789                           tosu	equ	0xFFF
 22790                           tosh	equ	0xFFE
 22791                           tosl	equ	0xFFD
 22792                           pclath	equ	0xFFA
 22793                           tblptru	equ	0xFF8
 22794                           tblptrh	equ	0xFF7
 22795                           tblptrl	equ	0xFF6
 22796                           tablat	equ	0xFF5
 22797                           prodh	equ	0xFF4
 22798                           prodl	equ	0xFF3
 22799                           intcon	equ	0xFF2
 22800                           intcon2	equ	0xFF1
 22801                           indf0	equ	0xFEF
 22802                           postinc0	equ	0xFEE
 22803                           fsr0h	equ	0xFEA
 22804                           fsr0l	equ	0xFE9
 22805                           wreg	equ	0xFE8
 22806                           indf1	equ	0xFE7
 22807                           postinc1	equ	0xFE6
 22808                           postdec1	equ	0xFE5
 22809                           plusw1	equ	0xFE3
 22810                           fsr1h	equ	0xFE2
 22811                           fsr1l	equ	0xFE1
 22812                           indf2	equ	0xFDF
 22813                           postinc2	equ	0xFDE
 22814                           postdec2	equ	0xFDD
 22815                           plusw2	equ	0xFDB
 22816                           fsr2h	equ	0xFDA
 22817                           fsr2l	equ	0xFD9
 22818                           status	equ	0xFD8
 22819                           
 22820 ;; *************** function _ETH_Write16 *****************
 22821 ;; Defined at:
 22822 ;;		line 347 in file "../../TCPIP Library/ethernet_drivers/encX24j600_spi.c"
 22823 ;; Parameters:    Size  Location     Type
 22824 ;;  data            2    2[COMRAM] unsigned int 
 22825 ;; Auto vars:     Size  Location     Type
 22826 ;;		None
 22827 ;; Return value:  Size  Location     Type
 22828 ;;                  1    wreg      void 
 22829 ;; Registers used:
 22830 ;;		wreg, status,2, status,0, cstack
 22831 ;; Tracked objects:
 22832 ;;		On entry : 0/0
 22833 ;;		On exit  : 0/0
 22834 ;;		Unchanged: 0/0
 22835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22836 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22839 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22840 ;;Total ram usage:        2 bytes
 22841 ;; Hardware stack levels used:    1
 22842 ;; Hardware stack levels required when called:    4
 22843 ;; This function calls:
 22844 ;;		_SPI_ExchangeByte
 22845 ;; This function is called by:
 22846 ;;		_ETH_WriteStart
 22847 ;;		_DHCP_Request
 22848 ;;		_ICMP_EchoReply
 22849 ;;		_IPv4_Start
 22850 ;;		_UDP_Start
 22851 ;; This function uses a non-reentrant model
 22852 ;;
 22853                           
 22854                           	psect	text87
 22855  0085B4                     __ptext87:
 22856                           	opt stack 0
 22857  0085B4                     _ETH_Write16:
 22858                           	opt stack 20
 22859                           
 22860                           ;incstack = 0
 22861                           ;encX24j600_spi.c: 349: do{LATB3 = 0;} while(0);
 22862  0085B4  968A               	bcf	3978,3,c	;volatile
 22863                           
 22864                           ;encX24j600_spi.c: 350: TXPacketSize += 2;
 22865  0085B6  0E02               	movlw	2
 22866  0085B8  0101               	movlb	1	; () banked
 22867  0085BA  279A               	addwf	_TXPacketSize& (0+255),f,b
 22868  0085BC  0E00               	movlw	0
 22869  0085BE  239B               	addwfc	(_TXPacketSize+1)& (0+255),f,b
 22870                           
 22871                           ; BSR set to: 1
 22872                           ;encX24j600_spi.c: 351: SPI_ExchangeByte(wgpdata_inst);
 22873  0085C0  0E2A               	movlw	42
 22874  0085C2  ECD2  F043         	call	_SPI_ExchangeByte
 22875                           
 22876                           ;encX24j600_spi.c: 352: SPI_ExchangeByte(((uint8_t*) &data)[1]);
 22877  0085C6  5004               	movf	ETH_Write16@data+1,w,c
 22878  0085C8  ECD2  F043         	call	_SPI_ExchangeByte
 22879                           
 22880                           ;encX24j600_spi.c: 353: SPI_ExchangeByte(((uint8_t*) &data)[0]);
 22881  0085CC  5003               	movf	ETH_Write16@data,w,c
 22882  0085CE  ECD2  F043         	call	_SPI_ExchangeByte
 22883  0085D2  868A               	bsf	3978,3,c	;volatile
 22884  0085D4  0012               	return		;funcret
 22885  0085D6                     __end_of_ETH_Write16:
 22886                           	opt stack 0
 22887                           tosu	equ	0xFFF
 22888                           tosh	equ	0xFFE
 22889                           tosl	equ	0xFFD
 22890                           pclath	equ	0xFFA
 22891                           tblptru	equ	0xFF8
 22892                           tblptrh	equ	0xFF7
 22893                           tblptrl	equ	0xFF6
 22894                           tablat	equ	0xFF5
 22895                           prodh	equ	0xFF4
 22896                           prodl	equ	0xFF3
 22897                           intcon	equ	0xFF2
 22898                           intcon2	equ	0xFF1
 22899                           indf0	equ	0xFEF
 22900                           postinc0	equ	0xFEE
 22901                           fsr0h	equ	0xFEA
 22902                           fsr0l	equ	0xFE9
 22903                           wreg	equ	0xFE8
 22904                           indf1	equ	0xFE7
 22905                           postinc1	equ	0xFE6
 22906                           postdec1	equ	0xFE5
 22907                           plusw1	equ	0xFE3
 22908                           fsr1h	equ	0xFE2
 22909                           fsr1l	equ	0xFE1
 22910                           indf2	equ	0xFDF
 22911                           postinc2	equ	0xFDE
 22912                           postdec2	equ	0xFDD
 22913                           plusw2	equ	0xFDB
 22914                           fsr2h	equ	0xFDA
 22915                           fsr2l	equ	0xFD9
 22916                           status	equ	0xFD8
 22917                           
 22918 ;; *************** function _ETH_GetMAC *****************
 22919 ;; Defined at:
 22920 ;;		line 456 in file "../../TCPIP Library/ethernet_drivers/encX24J600_driver.c"
 22921 ;; Parameters:    Size  Location     Type
 22922 ;;  macAddr         2    7[COMRAM] PTR unsigned char 
 22923 ;;		 -> DHCP_Handler@ethMAC(6), DHCP_Request@ethMAC(6), ARPV4_Request@header(28), header.sha(6), 
 22924 ;;		 -> ARPV4_Packet@header(28), ethMAC(6), 
 22925 ;; Auto vars:     Size  Location     Type
 22926 ;;		None
 22927 ;; Return value:  Size  Location     Type
 22928 ;;                  1    wreg      void 
 22929 ;; Registers used:
 22930 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22931 ;; Tracked objects:
 22932 ;;		On entry : 0/0
 22933 ;;		On exit  : 0/0
 22934 ;;		Unchanged: 0/0
 22935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22936 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22939 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22940 ;;Total ram usage:        2 bytes
 22941 ;; Hardware stack levels used:    1
 22942 ;; Hardware stack levels required when called:    6
 22943 ;; This function calls:
 22944 ;;		_ETH_MACRead8
 22945 ;; This function is called by:
 22946 ;;		_ETH_Init
 22947 ;;		_ARPV4_Packet
 22948 ;;		_ARPV4_Request
 22949 ;;		_DHCP_Request
 22950 ;;		_DHCP_Handler
 22951 ;; This function uses a non-reentrant model
 22952 ;;
 22953                           
 22954                           	psect	text88
 22955  007970                     __ptext88:
 22956                           	opt stack 0
 22957  007970                     _ETH_GetMAC:
 22958                           	opt stack 18
 22959                           
 22960                           ;encX24J600_driver.c: 459: *macAddr++ = ETH_MACRead8(XJ600_MAADR1L);
 22961                           
 22962                           ;incstack = 0
 22963  007970  0E64               	movlw	100
 22964  007972  EC33  F041         	call	_ETH_MACRead8
 22965  007976  C008  FFD9         	movff	ETH_GetMAC@macAddr,fsr2l
 22966  00797A  C009  FFDA         	movff	ETH_GetMAC@macAddr+1,fsr2h
 22967  00797E  6EDF               	movwf	indf2,c
 22968  007980  4A08               	infsnz	ETH_GetMAC@macAddr,f,c
 22969  007982  2A09               	incf	ETH_GetMAC@macAddr+1,f,c
 22970                           
 22971                           ;encX24J600_driver.c: 460: *macAddr++ = ETH_MACRead8(XJ600_MAADR1H);
 22972  007984  0E65               	movlw	101
 22973  007986  EC33  F041         	call	_ETH_MACRead8
 22974  00798A  C008  FFD9         	movff	ETH_GetMAC@macAddr,fsr2l
 22975  00798E  C009  FFDA         	movff	ETH_GetMAC@macAddr+1,fsr2h
 22976  007992  6EDF               	movwf	indf2,c
 22977  007994  4A08               	infsnz	ETH_GetMAC@macAddr,f,c
 22978  007996  2A09               	incf	ETH_GetMAC@macAddr+1,f,c
 22979                           
 22980                           ;encX24J600_driver.c: 461: *macAddr++ = ETH_MACRead8(XJ600_MAADR2L);
 22981  007998  0E62               	movlw	98
 22982  00799A  EC33  F041         	call	_ETH_MACRead8
 22983  00799E  C008  FFD9         	movff	ETH_GetMAC@macAddr,fsr2l
 22984  0079A2  C009  FFDA         	movff	ETH_GetMAC@macAddr+1,fsr2h
 22985  0079A6  6EDF               	movwf	indf2,c
 22986  0079A8  4A08               	infsnz	ETH_GetMAC@macAddr,f,c
 22987  0079AA  2A09               	incf	ETH_GetMAC@macAddr+1,f,c
 22988                           
 22989                           ;encX24J600_driver.c: 462: *macAddr++ = ETH_MACRead8(XJ600_MAADR2H);
 22990  0079AC  0E63               	movlw	99
 22991  0079AE  EC33  F041         	call	_ETH_MACRead8
 22992  0079B2  C008  FFD9         	movff	ETH_GetMAC@macAddr,fsr2l
 22993  0079B6  C009  FFDA         	movff	ETH_GetMAC@macAddr+1,fsr2h
 22994  0079BA  6EDF               	movwf	indf2,c
 22995  0079BC  4A08               	infsnz	ETH_GetMAC@macAddr,f,c
 22996  0079BE  2A09               	incf	ETH_GetMAC@macAddr+1,f,c
 22997                           
 22998                           ;encX24J600_driver.c: 463: *macAddr++ = ETH_MACRead8(XJ600_MAADR3L);
 22999  0079C0  0E60               	movlw	96
 23000  0079C2  EC33  F041         	call	_ETH_MACRead8
 23001  0079C6  C008  FFD9         	movff	ETH_GetMAC@macAddr,fsr2l
 23002  0079CA  C009  FFDA         	movff	ETH_GetMAC@macAddr+1,fsr2h
 23003  0079CE  6EDF               	movwf	indf2,c
 23004  0079D0  4A08               	infsnz	ETH_GetMAC@macAddr,f,c
 23005  0079D2  2A09               	incf	ETH_GetMAC@macAddr+1,f,c
 23006                           
 23007                           ;encX24J600_driver.c: 464: *macAddr++ = ETH_MACRead8(XJ600_MAADR3H);
 23008  0079D4  0E61               	movlw	97
 23009  0079D6  EC33  F041         	call	_ETH_MACRead8
 23010  0079DA  C008  FFD9         	movff	ETH_GetMAC@macAddr,fsr2l
 23011  0079DE  C009  FFDA         	movff	ETH_GetMAC@macAddr+1,fsr2h
 23012  0079E2  6EDF               	movwf	indf2,c
 23013  0079E4  4A08               	infsnz	ETH_GetMAC@macAddr,f,c
 23014  0079E6  2A09               	incf	ETH_GetMAC@macAddr+1,f,c
 23015  0079E8  0012               	return		;funcret
 23016  0079EA                     __end_of_ETH_GetMAC:
 23017                           	opt stack 0
 23018                           tosu	equ	0xFFF
 23019                           tosh	equ	0xFFE
 23020                           tosl	equ	0xFFD
 23021                           pclath	equ	0xFFA
 23022                           tblptru	equ	0xFF8
 23023                           tblptrh	equ	0xFF7
 23024                           tblptrl	equ	0xFF6
 23025                           tablat	equ	0xFF5
 23026                           prodh	equ	0xFF4
 23027                           prodl	equ	0xFF3
 23028                           intcon	equ	0xFF2
 23029                           intcon2	equ	0xFF1
 23030                           indf0	equ	0xFEF
 23031                           postinc0	equ	0xFEE
 23032                           fsr0h	equ	0xFEA
 23033                           fsr0l	equ	0xFE9
 23034                           wreg	equ	0xFE8
 23035                           indf1	equ	0xFE7
 23036                           postinc1	equ	0xFE6
 23037                           postdec1	equ	0xFE5
 23038                           plusw1	equ	0xFE3
 23039                           fsr1h	equ	0xFE2
 23040                           fsr1l	equ	0xFE1
 23041                           indf2	equ	0xFDF
 23042                           postinc2	equ	0xFDE
 23043                           postdec2	equ	0xFDD
 23044                           plusw2	equ	0xFDB
 23045                           fsr2h	equ	0xFDA
 23046                           fsr2l	equ	0xFD9
 23047                           status	equ	0xFD8
 23048                           
 23049 ;; *************** function _ETH_MACRead8 *****************
 23050 ;; Defined at:
 23051 ;;		line 504 in file "../../TCPIP Library/ethernet_drivers/encX24j600_spi.c"
 23052 ;; Parameters:    Size  Location     Type
 23053 ;;  a               1    wreg     enum E6671
 23054 ;; Auto vars:     Size  Location     Type
 23055 ;;  a               1    6[COMRAM] enum E6671
 23056 ;;  bank            1    5[COMRAM] unsigned char 
 23057 ;;  v               1    4[COMRAM] unsigned char 
 23058 ;; Return value:  Size  Location     Type
 23059 ;;                  1    wreg      unsigned char 
 23060 ;; Registers used:
 23061 ;;		wreg, status,2, status,0, cstack
 23062 ;; Tracked objects:
 23063 ;;		On entry : 0/0
 23064 ;;		On exit  : 0/0
 23065 ;;		Unchanged: 0/0
 23066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23068 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23070 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23071 ;;Total ram usage:        3 bytes
 23072 ;; Hardware stack levels used:    1
 23073 ;; Hardware stack levels required when called:    5
 23074 ;; This function calls:
 23075 ;;		_ENCx24_BankselSPI
 23076 ;;		_SPI_ExchangeByte
 23077 ;; This function is called by:
 23078 ;;		_ETH_GetMAC
 23079 ;; This function uses a non-reentrant model
 23080 ;;
 23081                           
 23082                           	psect	text89
 23083  008266                     __ptext89:
 23084                           	opt stack 0
 23085  008266                     _ETH_MACRead8:
 23086                           	opt stack 18
 23087                           
 23088                           ;incstack = 0
 23089                           ;ETH_MACRead8@a stored from wreg
 23090  008266  6E07               	movwf	ETH_MACRead8@a,c
 23091                           
 23092                           ;encX24j600_spi.c: 506: uint8_t v;
 23093                           ;encX24j600_spi.c: 507: uint8_t bank;
 23094                           ;encX24j600_spi.c: 509: bank = a & 0xE0;
 23095  008268  5007               	movf	ETH_MACRead8@a,w,c
 23096  00826A  0BE0               	andlw	224
 23097  00826C  6E06               	movwf	ETH_MACRead8@bank,c
 23098                           
 23099                           ;encX24j600_spi.c: 510: if(bank != 0X80)
 23100  00826E  0E80               	movlw	128
 23101  008270  1806               	xorwf	ETH_MACRead8@bank,w,c
 23102  008272  E009               	bz	l739
 23103                           
 23104                           ;encX24j600_spi.c: 511: {
 23105                           ;encX24j600_spi.c: 512: ENCx24_BankselSPI(a);
 23106  008274  5007               	movf	ETH_MACRead8@a,w,c
 23107  008276  EC2E  F03E         	call	_ENCx24_BankselSPI
 23108  00827A  968A               	bcf	3978,3,c	;volatile
 23109                           
 23110                           ;encX24j600_spi.c: 514: SPI_ExchangeByte(rcr_inst| (a & 0x1F));
 23111  00827C  5007               	movf	ETH_MACRead8@a,w,c
 23112  00827E  0B1F               	andlw	31
 23113  008280  ECD2  F043         	call	_SPI_ExchangeByte
 23114                           
 23115                           ;encX24j600_spi.c: 515: }
 23116  008284  D007               	goto	l738
 23117  008286                     l739:
 23118  008286  968A               	bcf	3978,3,c	;volatile
 23119                           
 23120                           ;encX24j600_spi.c: 519: SPI_ExchangeByte(rcru_inst);
 23121  008288  0E20               	movlw	32
 23122  00828A  ECD2  F043         	call	_SPI_ExchangeByte
 23123                           
 23124                           ;encX24j600_spi.c: 520: SPI_ExchangeByte(a);
 23125  00828E  5007               	movf	ETH_MACRead8@a,w,c
 23126  008290  ECD2  F043         	call	_SPI_ExchangeByte
 23127  008294                     l738:
 23128                           
 23129                           ;encX24j600_spi.c: 521: }
 23130                           ;encX24j600_spi.c: 522: v = SPI_ExchangeByte(0);
 23131  008294  0E00               	movlw	0
 23132  008296  ECD2  F043         	call	_SPI_ExchangeByte
 23133  00829A  6E05               	movwf	ETH_MACRead8@v,c
 23134  00829C  868A               	bsf	3978,3,c	;volatile
 23135                           
 23136                           ;encX24j600_spi.c: 525: return v;
 23137  00829E  5005               	movf	ETH_MACRead8@v,w,c
 23138  0082A0  0012               	return		;funcret
 23139  0082A2                     __end_of_ETH_MACRead8:
 23140                           	opt stack 0
 23141                           tosu	equ	0xFFF
 23142                           tosh	equ	0xFFE
 23143                           tosl	equ	0xFFD
 23144                           pclath	equ	0xFFA
 23145                           tblptru	equ	0xFF8
 23146                           tblptrh	equ	0xFF7
 23147                           tblptrl	equ	0xFF6
 23148                           tablat	equ	0xFF5
 23149                           prodh	equ	0xFF4
 23150                           prodl	equ	0xFF3
 23151                           intcon	equ	0xFF2
 23152                           intcon2	equ	0xFF1
 23153                           indf0	equ	0xFEF
 23154                           postinc0	equ	0xFEE
 23155                           fsr0h	equ	0xFEA
 23156                           fsr0l	equ	0xFE9
 23157                           wreg	equ	0xFE8
 23158                           indf1	equ	0xFE7
 23159                           postinc1	equ	0xFE6
 23160                           postdec1	equ	0xFE5
 23161                           plusw1	equ	0xFE3
 23162                           fsr1h	equ	0xFE2
 23163                           fsr1l	equ	0xFE1
 23164                           indf2	equ	0xFDF
 23165                           postinc2	equ	0xFDE
 23166                           postdec2	equ	0xFDD
 23167                           plusw2	equ	0xFDB
 23168                           fsr2h	equ	0xFDA
 23169                           fsr2l	equ	0xFD9
 23170                           status	equ	0xFD8
 23171                           
 23172 ;; *************** function _ARPV4_Lookup *****************
 23173 ;; Defined at:
 23174 ;;		line 234 in file "../../TCPIP Library/source/arpv4.c"
 23175 ;; Parameters:    Size  Location     Type
 23176 ;;  ip_address      4    1[COMRAM] unsigned long 
 23177 ;; Auto vars:     Size  Location     Type
 23178 ;;  entry_pointe    2    9[COMRAM] PTR struct .
 23179 ;;		 -> arpMap(104), 
 23180 ;;  x               1   11[COMRAM] unsigned char 
 23181 ;; Return value:  Size  Location     Type
 23182 ;;                  2    1[COMRAM] PTR struct .
 23183 ;; Registers used:
 23184 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23185 ;; Tracked objects:
 23186 ;;		On entry : F/1
 23187 ;;		On exit  : F/1
 23188 ;;		Unchanged: F/0
 23189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23190 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23191 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23192 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23193 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23194 ;;Total ram usage:       11 bytes
 23195 ;; Hardware stack levels used:    1
 23196 ;; Hardware stack levels required when called:    3
 23197 ;; This function calls:
 23198 ;;		Nothing
 23199 ;; This function is called by:
 23200 ;;		_IPv4_Start
 23201 ;; This function uses a non-reentrant model
 23202 ;;
 23203                           
 23204                           	psect	text90
 23205  007E4A                     __ptext90:
 23206                           	opt stack 0
 23207  007E4A                     _ARPV4_Lookup:
 23208                           	opt stack 22
 23209                           
 23210                           ; BSR set to: 1
 23211                           ;arpv4.c: 236: arpMap_t *entry_pointer = arpMap;
 23212                           
 23213                           ;incstack = 0
 23214  007E4A  0E00               	movlw	low _arpMap
 23215  007E4C  6E0A               	movwf	ARPV4_Lookup@entry_pointer,c
 23216  007E4E  0E03               	movlw	high _arpMap
 23217  007E50  6E0B               	movwf	ARPV4_Lookup@entry_pointer+1,c
 23218                           
 23219                           ; BSR set to: 1
 23220                           ;arpv4.c: 237: uint8_t x;
 23221                           ;arpv4.c: 239: for(x = 0; x < 8; x++)
 23222  007E52  6A0C               	clrf	ARPV4_Lookup@x,c
 23223  007E54                     l7911:
 23224                           
 23225                           ; BSR set to: 1
 23226                           ;arpv4.c: 240: {
 23227                           ;arpv4.c: 241: if(entry_pointer->ipAddress == ip_address)
 23228  007E54  EE20 F006          	lfsr	2,6
 23229  007E58  500A               	movf	ARPV4_Lookup@entry_pointer,w,c
 23230  007E5A  26D9               	addwf	fsr2l,f,c
 23231  007E5C  500B               	movf	ARPV4_Lookup@entry_pointer+1,w,c
 23232  007E5E  22DA               	addwfc	fsr2h,f,c
 23233  007E60  5002               	movf	ARPV4_Lookup@ip_address,w,c
 23234  007E62  18DE               	xorwf	postinc2,w,c
 23235  007E64  E10E               	bnz	l7917
 23236  007E66  5003               	movf	ARPV4_Lookup@ip_address+1,w,c
 23237  007E68  18DE               	xorwf	postinc2,w,c
 23238  007E6A  E10B               	bnz	l7917
 23239  007E6C  5004               	movf	ARPV4_Lookup@ip_address+2,w,c
 23240  007E6E  18DE               	xorwf	postinc2,w,c
 23241  007E70  E108               	bnz	l7917
 23242  007E72  5005               	movf	ARPV4_Lookup@ip_address+3,w,c
 23243  007E74  18DE               	xorwf	postinc2,w,c
 23244  007E76  E105               	bnz	l7917
 23245                           
 23246                           ; BSR set to: 1
 23247                           ;arpv4.c: 242: return &entry_pointer->macAddress;
 23248  007E78  C00A  F002         	movff	ARPV4_Lookup@entry_pointer,?_ARPV4_Lookup
 23249  007E7C  C00B  F003         	movff	ARPV4_Lookup@entry_pointer+1,?_ARPV4_Lookup+1
 23250  007E80  0012               	return	
 23251  007E82                     l7917:
 23252                           
 23253                           ; BSR set to: 1
 23254                           ;arpv4.c: 243: entry_pointer ++;
 23255  007E82  0E0D               	movlw	13
 23256  007E84  260A               	addwf	ARPV4_Lookup@entry_pointer,f,c
 23257  007E86  0E00               	movlw	0
 23258  007E88  220B               	addwfc	ARPV4_Lookup@entry_pointer+1,f,c
 23259                           
 23260                           ; BSR set to: 1
 23261  007E8A  2A0C               	incf	ARPV4_Lookup@x,f,c
 23262                           
 23263                           ; BSR set to: 1
 23264  007E8C  0E07               	movlw	7
 23265  007E8E  640C               	cpfsgt	ARPV4_Lookup@x,c
 23266  007E90  D7E1               	goto	l7911
 23267                           
 23268                           ; BSR set to: 1
 23269                           ;arpv4.c: 244: }
 23270                           ;arpv4.c: 245: return 0;
 23271  007E92  6A02               	clrf	?_ARPV4_Lookup,c
 23272  007E94  6A03               	clrf	?_ARPV4_Lookup+1,c
 23273                           
 23274                           ; BSR set to: 1
 23275  007E96  0012               	return		;funcret
 23276  007E98                     __end_of_ARPV4_Lookup:
 23277                           	opt stack 0
 23278                           tosu	equ	0xFFF
 23279                           tosh	equ	0xFFE
 23280                           tosl	equ	0xFFD
 23281                           pclath	equ	0xFFA
 23282                           tblptru	equ	0xFF8
 23283                           tblptrh	equ	0xFF7
 23284                           tblptrl	equ	0xFF6
 23285                           tablat	equ	0xFF5
 23286                           prodh	equ	0xFF4
 23287                           prodl	equ	0xFF3
 23288                           intcon	equ	0xFF2
 23289                           intcon2	equ	0xFF1
 23290                           indf0	equ	0xFEF
 23291                           postinc0	equ	0xFEE
 23292                           fsr0h	equ	0xFEA
 23293                           fsr0l	equ	0xFE9
 23294                           wreg	equ	0xFE8
 23295                           indf1	equ	0xFE7
 23296                           postinc1	equ	0xFE6
 23297                           postdec1	equ	0xFE5
 23298                           plusw1	equ	0xFE3
 23299                           fsr1h	equ	0xFE2
 23300                           fsr1l	equ	0xFE1
 23301                           indf2	equ	0xFDF
 23302                           postinc2	equ	0xFDE
 23303                           postdec2	equ	0xFDD
 23304                           plusw2	equ	0xFDB
 23305                           fsr2h	equ	0xFDA
 23306                           fsr2l	equ	0xFD9
 23307                           status	equ	0xFD8
 23308                           
 23309 ;; *************** function _IPV4_Send *****************
 23310 ;; Defined at:
 23311 ;;		line 267 in file "../../TCPIP Library/source/ipv4.c"
 23312 ;; Parameters:    Size  Location     Type
 23313 ;;  payloadLengt    2   28[COMRAM] unsigned int 
 23314 ;; Auto vars:     Size  Location     Type
 23315 ;;  totalLength     2   37[COMRAM] unsigned int 
 23316 ;;  cksm            2   35[COMRAM] unsigned int 
 23317 ;;  ret             1   34[COMRAM] enum E6890
 23318 ;; Return value:  Size  Location     Type
 23319 ;;                  1    wreg      enum E366
 23320 ;; Registers used:
 23321 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23322 ;; Tracked objects:
 23323 ;;		On entry : 0/0
 23324 ;;		On exit  : F/1
 23325 ;;		Unchanged: 0/0
 23326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23327 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23328 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23329 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23330 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23331 ;;Total ram usage:       11 bytes
 23332 ;; Hardware stack levels used:    1
 23333 ;; Hardware stack levels required when called:    8
 23334 ;; This function calls:
 23335 ;;		_ETH_Insert
 23336 ;;		_ETH_Send
 23337 ;;		_ETH_TxComputeChecksum
 23338 ;; This function is called by:
 23339 ;;		_ICMP_EchoReply
 23340 ;;		_TCP_Snd
 23341 ;;		_UDP_Send
 23342 ;; This function uses a non-reentrant model
 23343 ;;
 23344                           
 23345                           	psect	text91
 23346  007A5C                     __ptext91:
 23347                           	opt stack 0
 23348  007A5C                     _IPV4_Send:
 23349                           	opt stack 18
 23350                           
 23351                           ;ipv4.c: 269: uint16_t totalLength;
 23352                           ;ipv4.c: 270: uint16_t cksm;
 23353                           ;ipv4.c: 271: error_msg ret;
 23354                           ;ipv4.c: 273: totalLength = 20 + payloadLength;
 23355                           
 23356                           ; BSR set to: 1
 23357                           ;incstack = 0
 23358  007A5C  0E14               	movlw	20
 23359  007A5E  241D               	addwf	IPV4_Send@payloadLength,w,c
 23360  007A60  6E26               	movwf	IPV4_Send@totalLength,c
 23361  007A62  0E00               	movlw	0
 23362  007A64  201E               	addwfc	IPV4_Send@payloadLength+1,w,c
 23363  007A66  6E27               	movwf	IPV4_Send@totalLength+1,c
 23364                           
 23365                           ;ipv4.c: 274: totalLength = ((((uint16_t)totalLength & (uint16_t)0xFF00) >> 8) | (((uint
      +                          16_t)totalLength & (uint16_t)0x00FF) << 8));
 23366  007A68  5026               	movf	IPV4_Send@totalLength,w,c
 23367  007A6A  6E20               	movwf	(??_IPV4_Send+1)& (0+255),c
 23368  007A6C  6A1F               	clrf	??_IPV4_Send& (0+255),c
 23369  007A6E  5027               	movf	IPV4_Send@totalLength+1,w,c
 23370  007A70  6E21               	movwf	(??_IPV4_Send+2)& (0+255),c
 23371  007A72  6A22               	clrf	(??_IPV4_Send+3)& (0+255),c
 23372  007A74  501F               	movf	??_IPV4_Send,w,c
 23373  007A76  1021               	iorwf	??_IPV4_Send+2,w,c
 23374  007A78  6E26               	movwf	IPV4_Send@totalLength,c
 23375  007A7A  5020               	movf	??_IPV4_Send+1,w,c
 23376  007A7C  1022               	iorwf	??_IPV4_Send+3,w,c
 23377  007A7E  6E27               	movwf	IPV4_Send@totalLength+1,c
 23378                           
 23379                           ;ipv4.c: 277: ETH_Insert((char *)&totalLength, 2, sizeof(ethernetFrame_t) + (size_t)(((c
      +                          har*)&((ipv4Header_t *)1)->length)-1));
 23380  007A80  0E26               	movlw	low IPV4_Send@totalLength
 23381  007A82  6E0B               	movwf	ETH_Insert@data,c
 23382  007A84  6A0D               	clrf	ETH_Insert@len+1,c
 23383  007A86  0E02               	movlw	2
 23384  007A88  6E0C               	movwf	ETH_Insert@len,c
 23385  007A8A  6A0F               	clrf	ETH_Insert@offset+1,c
 23386  007A8C  0E10               	movlw	16
 23387  007A8E  6E0E               	movwf	ETH_Insert@offset,c
 23388  007A90  ECAD  F03E         	call	_ETH_Insert	;wreg free
 23389                           
 23390                           ;ipv4.c: 279: cksm = ETH_TxComputeChecksum(sizeof(ethernetFrame_t),sizeof(ipv4Header_t),
      +                          0);
 23391  007A94  6A0E               	clrf	ETH_TxComputeChecksum@position+1,c
 23392  007A96  0E0E               	movlw	14
 23393  007A98  6E0D               	movwf	ETH_TxComputeChecksum@position,c
 23394  007A9A  6A10               	clrf	ETH_TxComputeChecksum@length+1,c
 23395  007A9C  0E14               	movlw	20
 23396  007A9E  6E0F               	movwf	ETH_TxComputeChecksum@length,c
 23397  007AA0  6A12               	clrf	ETH_TxComputeChecksum@seed+1,c
 23398  007AA2  6A11               	clrf	ETH_TxComputeChecksum@seed,c
 23399  007AA4  EC92  F038         	call	_ETH_TxComputeChecksum	;wreg free
 23400  007AA8  C00D  F024         	movff	?_ETH_TxComputeChecksum,IPV4_Send@cksm
 23401  007AAC  C00E  F025         	movff	?_ETH_TxComputeChecksum+1,IPV4_Send@cksm+1
 23402                           
 23403                           ;ipv4.c: 281: ETH_Insert((char *)&cksm, 2, sizeof(ethernetFrame_t) + (size_t)(((char*)&(
      +                          (ipv4Header_t *)1)->headerCksm)-1));
 23404  007AB0  0E24               	movlw	low IPV4_Send@cksm
 23405  007AB2  6E0B               	movwf	ETH_Insert@data,c
 23406  007AB4  6A0D               	clrf	ETH_Insert@len+1,c
 23407  007AB6  0E02               	movlw	2
 23408  007AB8  6E0C               	movwf	ETH_Insert@len,c
 23409  007ABA  6A0F               	clrf	ETH_Insert@offset+1,c
 23410  007ABC  0E18               	movlw	24
 23411  007ABE  6E0E               	movwf	ETH_Insert@offset,c
 23412  007AC0  ECAD  F03E         	call	_ETH_Insert	;wreg free
 23413                           
 23414                           ;ipv4.c: 282: ret = ETH_Send();
 23415  007AC4  ECEB  F042         	call	_ETH_Send	;wreg free
 23416  007AC8  6E23               	movwf	IPV4_Send@ret,c
 23417                           
 23418                           ; BSR set to: 1
 23419                           ;ipv4.c: 284: return ret;
 23420  007ACA  5023               	movf	IPV4_Send@ret,w,c
 23421                           
 23422                           ; BSR set to: 1
 23423  007ACC  0012               	return		;funcret
 23424  007ACE                     __end_of_IPV4_Send:
 23425                           	opt stack 0
 23426                           tosu	equ	0xFFF
 23427                           tosh	equ	0xFFE
 23428                           tosl	equ	0xFFD
 23429                           pclath	equ	0xFFA
 23430                           tblptru	equ	0xFF8
 23431                           tblptrh	equ	0xFF7
 23432                           tblptrl	equ	0xFF6
 23433                           tablat	equ	0xFF5
 23434                           prodh	equ	0xFF4
 23435                           prodl	equ	0xFF3
 23436                           intcon	equ	0xFF2
 23437                           intcon2	equ	0xFF1
 23438                           indf0	equ	0xFEF
 23439                           postinc0	equ	0xFEE
 23440                           fsr0h	equ	0xFEA
 23441                           fsr0l	equ	0xFE9
 23442                           wreg	equ	0xFE8
 23443                           indf1	equ	0xFE7
 23444                           postinc1	equ	0xFE6
 23445                           postdec1	equ	0xFE5
 23446                           plusw1	equ	0xFE3
 23447                           fsr1h	equ	0xFE2
 23448                           fsr1l	equ	0xFE1
 23449                           indf2	equ	0xFDF
 23450                           postinc2	equ	0xFDE
 23451                           postdec2	equ	0xFDD
 23452                           plusw2	equ	0xFDB
 23453                           fsr2h	equ	0xFDA
 23454                           fsr2l	equ	0xFD9
 23455                           status	equ	0xFD8
 23456                           
 23457 ;; *************** function _ETH_TxComputeChecksum *****************
 23458 ;; Defined at:
 23459 ;;		line 501 in file "../../TCPIP Library/ethernet_drivers/encX24J600_driver.c"
 23460 ;; Parameters:    Size  Location     Type
 23461 ;;  position        2   12[COMRAM] unsigned int 
 23462 ;;  length          2   14[COMRAM] unsigned int 
 23463 ;;  seed            2   16[COMRAM] unsigned int 
 23464 ;; Auto vars:     Size  Location     Type
 23465 ;;  cksm            4   22[COMRAM] unsigned long 
 23466 ;;  econ1Val        2   26[COMRAM] unsigned int 
 23467 ;; Return value:  Size  Location     Type
 23468 ;;                  2   12[COMRAM] unsigned int 
 23469 ;; Registers used:
 23470 ;;		wreg, status,2, status,0, cstack
 23471 ;; Tracked objects:
 23472 ;;		On entry : 0/0
 23473 ;;		On exit  : 0/0
 23474 ;;		Unchanged: 0/0
 23475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23476 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23477 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23478 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23479 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23480 ;;Total ram usage:       16 bytes
 23481 ;; Hardware stack levels used:    1
 23482 ;; Hardware stack levels required when called:    7
 23483 ;; This function calls:
 23484 ;;		_ENCx24_BFC
 23485 ;;		_ENCx24_BFS
 23486 ;;		_ENCx24_Read
 23487 ;;		_ENCx24_Write
 23488 ;;		_waitForDMA
 23489 ;; This function is called by:
 23490 ;;		_ICMP_EchoReply
 23491 ;;		_IPV4_Send
 23492 ;;		_TCP_Snd
 23493 ;;		_UDP_Send
 23494 ;; This function uses a non-reentrant model
 23495 ;;
 23496                           
 23497                           	psect	text92
 23498  007124                     __ptext92:
 23499                           	opt stack 0
 23500  007124                     _ETH_TxComputeChecksum:
 23501                           	opt stack 0
 23502  007124                     i6L__ptext93:
 23503                           	opt stack 0
 23504  007124                     i6L_waitForDMA:
 23505                           	opt stack 0
 23506  007124                     i6Ll501:
 23507                           	opt stack 0
 23508  007124                     i6Ll7791:
 23509                           	opt stack 18
 23510                           
 23511                           ;encX24J600_driver.c: 487: {
 23512                           ;encX24J600_driver.c: 488: econ1_val = ENCx24_Read(XJ600_ECON1L);
 23513  007124  0EFE               	movlw	254
 23514  007126  EC06  F040         	call	_ENCx24_Read
 23515  00712A  C005  F00B         	movff	?_ENCx24_Read,waitForDMA@econ1_val
 23516  00712E  C006  F00C         	movff	?_ENCx24_Read+1,waitForDMA@econ1_val+1
 23517  007132                     i6Ll7793:
 23518                           	opt stack 18
 23519                           
 23520                           ;encX24J600_driver.c: 489: } while ( econ1_val & 0x0020 );
 23521  007132  BA0B               	btfsc	waitForDMA@econ1_val,5,c
 23522  007134                     i6Lu10341:
 23523                           	opt stack 0
 23524  007134  D7F7               	goto	i6Ll501
 23525  007136                     i6Lu10340:
 23526                           	opt stack 0
 23527  007136                     i6Ll503:
 23528                           	opt stack 18
 23529                           
 23530                           ;encX24J600_driver.c: 515: ENCx24_BFC(XJ600_ECON1L, econ1Val);
 23531  007136  6A06               	clrf	ENCx24_BFC@bitMask+1,c
 23532  007138  0E1C               	movlw	28
 23533  00713A  6E05               	movwf	ENCx24_BFC@bitMask,c
 23534  00713C  0EFE               	movlw	254
 23535  00713E  ECD5  F040         	call	_ENCx24_BFC
 23536                           
 23537                           ;encX24J600_driver.c: 518: ENCx24_Write(XJ600_EDMASTL, position);
 23538  007142  C00D  F005         	movff	ETH_TxComputeChecksum@position,ENCx24_Write@data
 23539  007146  C00E  F006         	movff	ETH_TxComputeChecksum@position+1,ENCx24_Write@data+1
 23540  00714A  0E0A               	movlw	10
 23541  00714C  EC94  F040         	call	_ENCx24_Write
 23542                           
 23543                           ;encX24J600_driver.c: 520: ENCx24_Write(XJ600_EDMALENL, length);
 23544  007150  C00F  F005         	movff	ETH_TxComputeChecksum@length,ENCx24_Write@data
 23545  007154  C010  F006         	movff	ETH_TxComputeChecksum@length+1,ENCx24_Write@data+1
 23546  007158  0E0C               	movlw	12
 23547  00715A  EC94  F040         	call	_ENCx24_Write
 23548                           
 23549                           ;encX24J600_driver.c: 522: econ1Val = 0x0020;
 23550  00715E  6A1C               	clrf	ETH_TxComputeChecksum@econ1Val+1,c
 23551  007160  0E20               	movlw	32
 23552  007162  6E1B               	movwf	ETH_TxComputeChecksum@econ1Val,c
 23553                           
 23554                           ;encX24J600_driver.c: 524: if (seed)
 23555  007164  5011               	movf	ETH_TxComputeChecksum@seed,w,c
 23556  007166  1012               	iorwf	ETH_TxComputeChecksum@seed+1,w,c
 23557  007168  E016               	bz	l7817
 23558                           
 23559                           ;encX24J600_driver.c: 525: {
 23560                           ;encX24J600_driver.c: 526: econ1Val |= 0x0008;
 23561  00716A  861B               	bsf	ETH_TxComputeChecksum@econ1Val,3,c
 23562                           
 23563                           ;encX24J600_driver.c: 527: seed=~(seed);
 23564  00716C  1E11               	comf	ETH_TxComputeChecksum@seed,f,c
 23565  00716E  1E12               	comf	ETH_TxComputeChecksum@seed+1,f,c
 23566                           
 23567                           ;encX24J600_driver.c: 528: seed = ((((uint16_t)seed & (uint16_t)0xFF00) >> 8) | (((uint1
      +                          6_t)seed & (uint16_t)0x00FF) << 8));
 23568  007170  5011               	movf	ETH_TxComputeChecksum@seed,w,c
 23569  007172  6E14               	movwf	(??_ETH_TxComputeChecksum+1)& (0+255),c
 23570  007174  6A13               	clrf	??_ETH_TxComputeChecksum& (0+255),c
 23571  007176  5012               	movf	ETH_TxComputeChecksum@seed+1,w,c
 23572  007178  6E15               	movwf	(??_ETH_TxComputeChecksum+2)& (0+255),c
 23573  00717A  6A16               	clrf	(??_ETH_TxComputeChecksum+3)& (0+255),c
 23574  00717C  5013               	movf	??_ETH_TxComputeChecksum,w,c
 23575  00717E  1015               	iorwf	??_ETH_TxComputeChecksum+2,w,c
 23576  007180  6E11               	movwf	ETH_TxComputeChecksum@seed,c
 23577  007182  5014               	movf	??_ETH_TxComputeChecksum+1,w,c
 23578  007184  1016               	iorwf	??_ETH_TxComputeChecksum+3,w,c
 23579  007186  6E12               	movwf	ETH_TxComputeChecksum@seed+1,c
 23580                           
 23581                           ;encX24J600_driver.c: 529: ENCx24_Write(XJ600_EDMACSL, seed);
 23582  007188  C011  F005         	movff	ETH_TxComputeChecksum@seed,ENCx24_Write@data
 23583  00718C  C012  F006         	movff	ETH_TxComputeChecksum@seed+1,ENCx24_Write@data+1
 23584  007190  0E10               	movlw	16
 23585  007192  EC94  F040         	call	_ENCx24_Write
 23586  007196                     l7817:
 23587                           
 23588                           ;encX24J600_driver.c: 530: }
 23589                           ;encX24J600_driver.c: 532: ENCx24_BFS(XJ600_ECON1L, econ1Val);
 23590  007196  C01B  F005         	movff	ETH_TxComputeChecksum@econ1Val,ENCx24_BFS@bitMask
 23591  00719A  C01C  F006         	movff	ETH_TxComputeChecksum@econ1Val+1,ENCx24_BFS@bitMask+1
 23592  00719E  0EFE               	movlw	254
 23593  0071A0  ECB5  F040         	call	_ENCx24_BFS
 23594  0071A4                     i7L__ptext93:
 23595                           	opt stack 0
 23596  0071A4                     i7L_waitForDMA:
 23597                           	opt stack 0
 23598  0071A4                     i7Ll501:
 23599                           	opt stack 0
 23600  0071A4                     i7Ll7791:
 23601                           	opt stack 18
 23602                           
 23603                           ;encX24J600_driver.c: 487: {
 23604                           ;encX24J600_driver.c: 488: econ1_val = ENCx24_Read(XJ600_ECON1L);
 23605  0071A4  0EFE               	movlw	254
 23606  0071A6  EC06  F040         	call	_ENCx24_Read
 23607  0071AA  C005  F00B         	movff	?_ENCx24_Read,waitForDMA@econ1_val
 23608  0071AE  C006  F00C         	movff	?_ENCx24_Read+1,waitForDMA@econ1_val+1
 23609  0071B2                     i7Ll7793:
 23610                           	opt stack 18
 23611                           
 23612                           ;encX24J600_driver.c: 489: } while ( econ1_val & 0x0020 );
 23613  0071B2  BA0B               	btfsc	waitForDMA@econ1_val,5,c
 23614  0071B4                     i7Lu10341:
 23615                           	opt stack 0
 23616  0071B4  D7F7               	goto	i7Ll501
 23617  0071B6                     i7Lu10340:
 23618                           	opt stack 0
 23619  0071B6                     i7Ll503:
 23620                           	opt stack 18
 23621                           
 23622                           ;encX24J600_driver.c: 535: cksm = ENCx24_Read(XJ600_EDMACSL);
 23623  0071B6  0E10               	movlw	16
 23624  0071B8  EC06  F040         	call	_ENCx24_Read
 23625  0071BC  C005  F017         	movff	?_ENCx24_Read,ETH_TxComputeChecksum@cksm
 23626  0071C0  C006  F018         	movff	?_ENCx24_Read+1,ETH_TxComputeChecksum@cksm+1
 23627  0071C4  6A19               	clrf	ETH_TxComputeChecksum@cksm+2,c
 23628  0071C6  6A1A               	clrf	ETH_TxComputeChecksum@cksm+3,c
 23629                           
 23630                           ;encX24J600_driver.c: 536: return cksm;
 23631  0071C8  C017  F00D         	movff	ETH_TxComputeChecksum@cksm,?_ETH_TxComputeChecksum
 23632  0071CC  C018  F00E         	movff	ETH_TxComputeChecksum@cksm+1,?_ETH_TxComputeChecksum+1
 23633  0071D0  0012               	return		;funcret
 23634  0071D2                     __end_of_ETH_TxComputeChecksum:
 23635                           	opt stack 0
 23636                           tosu	equ	0xFFF
 23637                           tosh	equ	0xFFE
 23638                           tosl	equ	0xFFD
 23639                           pclath	equ	0xFFA
 23640                           tblptru	equ	0xFF8
 23641                           tblptrh	equ	0xFF7
 23642                           tblptrl	equ	0xFF6
 23643                           tablat	equ	0xFF5
 23644                           prodh	equ	0xFF4
 23645                           prodl	equ	0xFF3
 23646                           intcon	equ	0xFF2
 23647                           intcon2	equ	0xFF1
 23648                           indf0	equ	0xFEF
 23649                           postinc0	equ	0xFEE
 23650                           fsr0h	equ	0xFEA
 23651                           fsr0l	equ	0xFE9
 23652                           wreg	equ	0xFE8
 23653                           indf1	equ	0xFE7
 23654                           postinc1	equ	0xFE6
 23655                           postdec1	equ	0xFE5
 23656                           plusw1	equ	0xFE3
 23657                           fsr1h	equ	0xFE2
 23658                           fsr1l	equ	0xFE1
 23659                           indf2	equ	0xFDF
 23660                           postinc2	equ	0xFDE
 23661                           postdec2	equ	0xFDD
 23662                           plusw2	equ	0xFDB
 23663                           fsr2h	equ	0xFDA
 23664                           fsr2l	equ	0xFD9
 23665                           status	equ	0xFD8
 23666                           
 23667 ;; *************** function _waitForDMA *****************
 23668 ;; Defined at:
 23669 ;;		line 483 in file "../../TCPIP Library/ethernet_drivers/encX24J600_driver.c"
 23670 ;; Parameters:    Size  Location     Type
 23671 ;;		None
 23672 ;; Auto vars:     Size  Location     Type
 23673 ;;  econ1_val       2   10[COMRAM] unsigned int 
 23674 ;; Return value:  Size  Location     Type
 23675 ;;                  1    wreg      void 
 23676 ;; Registers used:
 23677 ;;		wreg, status,2, status,0, cstack
 23678 ;; Tracked objects:
 23679 ;;		On entry : 0/0
 23680 ;;		On exit  : 0/0
 23681 ;;		Unchanged: 0/0
 23682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23684 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23686 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23687 ;;Total ram usage:        2 bytes
 23688 ;; Hardware stack levels used:    1
 23689 ;; Hardware stack levels required when called:    6
 23690 ;; This function calls:
 23691 ;;		_ENCx24_Read
 23692 ;; This function is called by:
 23693 ;;		_ETH_Copy
 23694 ;;		_ETH_TxComputeChecksum
 23695 ;;		_ETH_RxComputeChecksum
 23696 ;; This function uses a non-reentrant model
 23697 ;;
 23698                           
 23699                           	psect	text93
 23700  000000                     __ptext93:
 23701                           	opt stack 0
 23702  000000                     _waitForDMA:
 23703                           	opt stack 0
 23704  000000                     __end_of_waitForDMA:
 23705                           	opt stack 0
 23706                           tosu	equ	0xFFF
 23707                           tosh	equ	0xFFE
 23708                           tosl	equ	0xFFD
 23709                           pclath	equ	0xFFA
 23710                           tblptru	equ	0xFF8
 23711                           tblptrh	equ	0xFF7
 23712                           tblptrl	equ	0xFF6
 23713                           tablat	equ	0xFF5
 23714                           prodh	equ	0xFF4
 23715                           prodl	equ	0xFF3
 23716                           intcon	equ	0xFF2
 23717                           intcon2	equ	0xFF1
 23718                           indf0	equ	0xFEF
 23719                           postinc0	equ	0xFEE
 23720                           fsr0h	equ	0xFEA
 23721                           fsr0l	equ	0xFE9
 23722                           wreg	equ	0xFE8
 23723                           indf1	equ	0xFE7
 23724                           postinc1	equ	0xFE6
 23725                           postdec1	equ	0xFE5
 23726                           plusw1	equ	0xFE3
 23727                           fsr1h	equ	0xFE2
 23728                           fsr1l	equ	0xFE1
 23729                           indf2	equ	0xFDF
 23730                           postinc2	equ	0xFDE
 23731                           postdec2	equ	0xFDD
 23732                           plusw2	equ	0xFDB
 23733                           fsr2h	equ	0xFDA
 23734                           fsr2l	equ	0xFD9
 23735                           status	equ	0xFD8
 23736                           
 23737 ;; *************** function _ENCx24_BFS *****************
 23738 ;; Defined at:
 23739 ;;		line 151 in file "../../TCPIP Library/ethernet_drivers/encX24j600_spi.c"
 23740 ;; Parameters:    Size  Location     Type
 23741 ;;  a               1    wreg     enum E6671
 23742 ;;  bitMask         2    4[COMRAM] unsigned int 
 23743 ;; Auto vars:     Size  Location     Type
 23744 ;;  a               1    7[COMRAM] enum E6671
 23745 ;;  bank            1    6[COMRAM] unsigned char 
 23746 ;; Return value:  Size  Location     Type
 23747 ;;                  1    wreg      void 
 23748 ;; Registers used:
 23749 ;;		wreg, status,2, status,0, cstack
 23750 ;; Tracked objects:
 23751 ;;		On entry : 0/0
 23752 ;;		On exit  : 0/0
 23753 ;;		Unchanged: 0/0
 23754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23755 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23756 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23758 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23759 ;;Total ram usage:        4 bytes
 23760 ;; Hardware stack levels used:    1
 23761 ;; Hardware stack levels required when called:    5
 23762 ;; This function calls:
 23763 ;;		_ENCx24_BankselSPI
 23764 ;;		_SPI_ExchangeByte
 23765 ;; This function is called by:
 23766 ;;		_ETH_SendSystemReset
 23767 ;;		_ETH_Init
 23768 ;;		_ETH_ResetReceiver
 23769 ;;		_ETH_Copy
 23770 ;;		_ETH_TxComputeChecksum
 23771 ;;		_ETH_RxComputeChecksum
 23772 ;;		_ENCx24_PhyRead
 23773 ;; This function uses a non-reentrant model
 23774 ;;
 23775                           
 23776                           	psect	text94
 23777  00816A                     __ptext94:
 23778                           	opt stack 0
 23779  00816A                     _ENCx24_BFS:
 23780                           	opt stack 19
 23781                           
 23782                           ;incstack = 0
 23783                           ;ENCx24_BFS@a stored from wreg
 23784  00816A  6E08               	movwf	ENCx24_BFS@a,c
 23785                           
 23786                           ;encX24j600_spi.c: 153: uint8_t bank;
 23787                           ;encX24j600_spi.c: 154: bank = a & 0xE0;
 23788  00816C  5008               	movf	ENCx24_BFS@a,w,c
 23789  00816E  0BE0               	andlw	224
 23790  008170  6E07               	movwf	ENCx24_BFS@bank,c
 23791                           
 23792                           ;encX24j600_spi.c: 155: if(bank != 0X80)
 23793  008172  0E80               	movlw	128
 23794  008174  1807               	xorwf	ENCx24_BFS@bank,w,c
 23795  008176  E00A               	bz	l578
 23796                           
 23797                           ;encX24j600_spi.c: 156: {
 23798                           ;encX24j600_spi.c: 157: ENCx24_BankselSPI(a);
 23799  008178  5008               	movf	ENCx24_BFS@a,w,c
 23800  00817A  EC2E  F03E         	call	_ENCx24_BankselSPI
 23801  00817E  968A               	bcf	3978,3,c	;volatile
 23802                           
 23803                           ;encX24j600_spi.c: 159: SPI_ExchangeByte(bfs_inst | (a & 0x1F));
 23804  008180  5008               	movf	ENCx24_BFS@a,w,c
 23805  008182  0B1F               	andlw	31
 23806  008184  0980               	iorlw	128
 23807  008186  ECD2  F043         	call	_SPI_ExchangeByte
 23808                           
 23809                           ;encX24j600_spi.c: 160: }
 23810  00818A  D007               	goto	l577
 23811  00818C                     l578:
 23812  00818C  968A               	bcf	3978,3,c	;volatile
 23813                           
 23814                           ;encX24j600_spi.c: 164: SPI_ExchangeByte(bfsu_inst);
 23815  00818E  0E24               	movlw	36
 23816  008190  ECD2  F043         	call	_SPI_ExchangeByte
 23817                           
 23818                           ;encX24j600_spi.c: 165: SPI_ExchangeByte(a);
 23819  008194  5008               	movf	ENCx24_BFS@a,w,c
 23820  008196  ECD2  F043         	call	_SPI_ExchangeByte
 23821  00819A                     l577:
 23822                           
 23823                           ;encX24j600_spi.c: 166: }
 23824                           ;encX24j600_spi.c: 167: SPI_ExchangeByte(bitMask);
 23825  00819A  5005               	movf	ENCx24_BFS@bitMask,w,c
 23826  00819C  ECD2  F043         	call	_SPI_ExchangeByte
 23827                           
 23828                           ;encX24j600_spi.c: 168: SPI_ExchangeByte(bitMask>>8);
 23829  0081A0  5006               	movf	ENCx24_BFS@bitMask+1,w,c
 23830  0081A2  ECD2  F043         	call	_SPI_ExchangeByte
 23831  0081A6  868A               	bsf	3978,3,c	;volatile
 23832  0081A8  0012               	return		;funcret
 23833  0081AA                     __end_of_ENCx24_BFS:
 23834                           	opt stack 0
 23835                           tosu	equ	0xFFF
 23836                           tosh	equ	0xFFE
 23837                           tosl	equ	0xFFD
 23838                           pclath	equ	0xFFA
 23839                           tblptru	equ	0xFF8
 23840                           tblptrh	equ	0xFF7
 23841                           tblptrl	equ	0xFF6
 23842                           tablat	equ	0xFF5
 23843                           prodh	equ	0xFF4
 23844                           prodl	equ	0xFF3
 23845                           intcon	equ	0xFF2
 23846                           intcon2	equ	0xFF1
 23847                           indf0	equ	0xFEF
 23848                           postinc0	equ	0xFEE
 23849                           fsr0h	equ	0xFEA
 23850                           fsr0l	equ	0xFE9
 23851                           wreg	equ	0xFE8
 23852                           indf1	equ	0xFE7
 23853                           postinc1	equ	0xFE6
 23854                           postdec1	equ	0xFE5
 23855                           plusw1	equ	0xFE3
 23856                           fsr1h	equ	0xFE2
 23857                           fsr1l	equ	0xFE1
 23858                           indf2	equ	0xFDF
 23859                           postinc2	equ	0xFDE
 23860                           postdec2	equ	0xFDD
 23861                           plusw2	equ	0xFDB
 23862                           fsr2h	equ	0xFDA
 23863                           fsr2l	equ	0xFD9
 23864                           status	equ	0xFD8
 23865                           
 23866 ;; *************** function _ENCx24_BFC *****************
 23867 ;; Defined at:
 23868 ;;		line 177 in file "../../TCPIP Library/ethernet_drivers/encX24j600_spi.c"
 23869 ;; Parameters:    Size  Location     Type
 23870 ;;  a               1    wreg     enum E6671
 23871 ;;  bitMask         2    4[COMRAM] unsigned int 
 23872 ;; Auto vars:     Size  Location     Type
 23873 ;;  a               1    7[COMRAM] enum E6671
 23874 ;;  bank            1    6[COMRAM] unsigned char 
 23875 ;; Return value:  Size  Location     Type
 23876 ;;                  1    wreg      void 
 23877 ;; Registers used:
 23878 ;;		wreg, status,2, status,0, cstack
 23879 ;; Tracked objects:
 23880 ;;		On entry : 0/0
 23881 ;;		On exit  : 0/0
 23882 ;;		Unchanged: 0/0
 23883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23884 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23885 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23887 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23888 ;;Total ram usage:        4 bytes
 23889 ;; Hardware stack levels used:    1
 23890 ;; Hardware stack levels required when called:    5
 23891 ;; This function calls:
 23892 ;;		_ENCx24_BankselSPI
 23893 ;;		_SPI_ExchangeByte
 23894 ;; This function is called by:
 23895 ;;		_ETH_EventHandler
 23896 ;;		_ETH_ResetReceiver
 23897 ;;		_ETH_Copy
 23898 ;;		_ETH_TxComputeChecksum
 23899 ;;		_ETH_RxComputeChecksum
 23900 ;;		_ENCx24_PhyRead
 23901 ;; This function uses a non-reentrant model
 23902 ;;
 23903                           
 23904                           	psect	text95
 23905  0081AA                     __ptext95:
 23906                           	opt stack 0
 23907  0081AA                     _ENCx24_BFC:
 23908                           	opt stack 19
 23909                           
 23910                           ;incstack = 0
 23911                           ;ENCx24_BFC@a stored from wreg
 23912  0081AA  6E08               	movwf	ENCx24_BFC@a,c
 23913                           
 23914                           ;encX24j600_spi.c: 179: uint8_t bank;
 23915                           ;encX24j600_spi.c: 180: bank = a & 0xE0;
 23916  0081AC  5008               	movf	ENCx24_BFC@a,w,c
 23917  0081AE  0BE0               	andlw	224
 23918  0081B0  6E07               	movwf	ENCx24_BFC@bank,c
 23919                           
 23920                           ;encX24j600_spi.c: 181: if(bank != 0X80)
 23921  0081B2  0E80               	movlw	128
 23922  0081B4  1807               	xorwf	ENCx24_BFC@bank,w,c
 23923  0081B6  E00A               	bz	l589
 23924                           
 23925                           ;encX24j600_spi.c: 182: {
 23926                           ;encX24j600_spi.c: 183: ENCx24_BankselSPI(a);
 23927  0081B8  5008               	movf	ENCx24_BFC@a,w,c
 23928  0081BA  EC2E  F03E         	call	_ENCx24_BankselSPI
 23929  0081BE  968A               	bcf	3978,3,c	;volatile
 23930                           
 23931                           ;encX24j600_spi.c: 185: SPI_ExchangeByte(bfc_inst | (a & 0x1F));
 23932  0081C0  5008               	movf	ENCx24_BFC@a,w,c
 23933  0081C2  0B1F               	andlw	31
 23934  0081C4  09A0               	iorlw	160
 23935  0081C6  ECD2  F043         	call	_SPI_ExchangeByte
 23936                           
 23937                           ;encX24j600_spi.c: 186: }
 23938  0081CA  D007               	goto	l588
 23939  0081CC                     l589:
 23940  0081CC  968A               	bcf	3978,3,c	;volatile
 23941                           
 23942                           ;encX24j600_spi.c: 190: SPI_ExchangeByte(bfcu_inst);
 23943  0081CE  0E26               	movlw	38
 23944  0081D0  ECD2  F043         	call	_SPI_ExchangeByte
 23945                           
 23946                           ;encX24j600_spi.c: 191: SPI_ExchangeByte(a);
 23947  0081D4  5008               	movf	ENCx24_BFC@a,w,c
 23948  0081D6  ECD2  F043         	call	_SPI_ExchangeByte
 23949  0081DA                     l588:
 23950                           
 23951                           ;encX24j600_spi.c: 192: }
 23952                           ;encX24j600_spi.c: 193: SPI_ExchangeByte(bitMask);
 23953  0081DA  5005               	movf	ENCx24_BFC@bitMask,w,c
 23954  0081DC  ECD2  F043         	call	_SPI_ExchangeByte
 23955                           
 23956                           ;encX24j600_spi.c: 194: SPI_ExchangeByte(bitMask>>8);
 23957  0081E0  5006               	movf	ENCx24_BFC@bitMask+1,w,c
 23958  0081E2  ECD2  F043         	call	_SPI_ExchangeByte
 23959  0081E6  868A               	bsf	3978,3,c	;volatile
 23960  0081E8  0012               	return		;funcret
 23961  0081EA                     __end_of_ENCx24_BFC:
 23962                           	opt stack 0
 23963                           tosu	equ	0xFFF
 23964                           tosh	equ	0xFFE
 23965                           tosl	equ	0xFFD
 23966                           pclath	equ	0xFFA
 23967                           tblptru	equ	0xFF8
 23968                           tblptrh	equ	0xFF7
 23969                           tblptrl	equ	0xFF6
 23970                           tablat	equ	0xFF5
 23971                           prodh	equ	0xFF4
 23972                           prodl	equ	0xFF3
 23973                           intcon	equ	0xFF2
 23974                           intcon2	equ	0xFF1
 23975                           indf0	equ	0xFEF
 23976                           postinc0	equ	0xFEE
 23977                           fsr0h	equ	0xFEA
 23978                           fsr0l	equ	0xFE9
 23979                           wreg	equ	0xFE8
 23980                           indf1	equ	0xFE7
 23981                           postinc1	equ	0xFE6
 23982                           postdec1	equ	0xFE5
 23983                           plusw1	equ	0xFE3
 23984                           fsr1h	equ	0xFE2
 23985                           fsr1l	equ	0xFE1
 23986                           indf2	equ	0xFDF
 23987                           postinc2	equ	0xFDE
 23988                           postdec2	equ	0xFDD
 23989                           plusw2	equ	0xFDB
 23990                           fsr2h	equ	0xFDA
 23991                           fsr2l	equ	0xFD9
 23992                           status	equ	0xFD8
 23993                           
 23994 ;; *************** function _ETH_Send *****************
 23995 ;; Defined at:
 23996 ;;		line 393 in file "../../TCPIP Library/ethernet_drivers/encX24J600_driver.c"
 23997 ;; Parameters:    Size  Location     Type
 23998 ;;		None
 23999 ;; Auto vars:     Size  Location     Type
 24000 ;;		None
 24001 ;; Return value:  Size  Location     Type
 24002 ;;                  1    wreg      enum E6934
 24003 ;; Registers used:
 24004 ;;		wreg, status,2, status,0, cstack
 24005 ;; Tracked objects:
 24006 ;;		On entry : 0/1
 24007 ;;		On exit  : F/1
 24008 ;;		Unchanged: 0/0
 24009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24014 ;;Total ram usage:        0 bytes
 24015 ;; Hardware stack levels used:    1
 24016 ;; Hardware stack levels required when called:    6
 24017 ;; This function calls:
 24018 ;;		_ENCx24_Write
 24019 ;;		_ETH_Set_TXRTS
 24020 ;; This function is called by:
 24021 ;;		_ARPV4_Packet
 24022 ;;		_ARPV4_Request
 24023 ;;		_IPV4_Send
 24024 ;; This function uses a non-reentrant model
 24025 ;;
 24026                           
 24027                           	psect	text96
 24028  0085D6                     __ptext96:
 24029                           	opt stack 0
 24030  0085D6                     _ETH_Send:
 24031                           	opt stack 18
 24032                           
 24033                           ;encX24J600_driver.c: 396: ENCx24_Write(XJ600_ETXLENL, TXPacketSize);
 24034                           
 24035                           ;incstack = 0
 24036  0085D6  C19A  F005         	movff	_TXPacketSize,ENCx24_Write@data
 24037  0085DA  C19B  F006         	movff	_TXPacketSize+1,ENCx24_Write@data+1
 24038  0085DE  0E02               	movlw	2
 24039  0085E0  EC94  F040         	call	_ENCx24_Write
 24040                           
 24041                           ;encX24J600_driver.c: 397: if (!ethData.up)
 24042  0085E4  0101               	movlb	1	; () banked
 24043  0085E6  A583               	btfss	_ethData& (0+255),2,b	;volatile
 24044                           
 24045                           ; BSR set to: 1
 24046                           ;encX24J600_driver.c: 398: {
 24047                           ;encX24J600_driver.c: 399: return LINK_NOT_FOUND;
 24048  0085E8  0C02               	retlw	2
 24049                           
 24050                           ; BSR set to: 1
 24051                           ;encX24J600_driver.c: 400: }
 24052                           ;encX24J600_driver.c: 401: if(!ethData.bufferBusy)
 24053  0085EA  AB83               	btfss	_ethData& (0+255),5,b	;volatile
 24054                           
 24055                           ; BSR set to: 1
 24056                           ;encX24J600_driver.c: 402: {
 24057                           ;encX24J600_driver.c: 403: return BUFFER_BUSY;
 24058  0085EC  0C03               	retlw	3
 24059                           
 24060                           ; BSR set to: 1
 24061                           ;encX24J600_driver.c: 404: }
 24062                           ;encX24J600_driver.c: 405: ETH_Set_TXRTS();
 24063  0085EE  ECEB  F043         	call	_ETH_Set_TXRTS	;wreg free
 24064                           
 24065                           ;encX24J600_driver.c: 406: ethData.bufferBusy = 0;
 24066  0085F2  0101               	movlb	1	; () banked
 24067  0085F4  9B83               	bcf	_ethData& (0+255),5,b	;volatile
 24068                           
 24069                           ; BSR set to: 1
 24070                           
 24071                           ; BSR set to: 1
 24072                           ;encX24J600_driver.c: 408: return SUCCESS;
 24073  0085F6  0C01               	retlw	1	;funcret
 24074  0085F8                     __end_of_ETH_Send:
 24075                           	opt stack 0
 24076                           tosu	equ	0xFFF
 24077                           tosh	equ	0xFFE
 24078                           tosl	equ	0xFFD
 24079                           pclath	equ	0xFFA
 24080                           tblptru	equ	0xFF8
 24081                           tblptrh	equ	0xFF7
 24082                           tblptrl	equ	0xFF6
 24083                           tablat	equ	0xFF5
 24084                           prodh	equ	0xFF4
 24085                           prodl	equ	0xFF3
 24086                           intcon	equ	0xFF2
 24087                           intcon2	equ	0xFF1
 24088                           indf0	equ	0xFEF
 24089                           postinc0	equ	0xFEE
 24090                           fsr0h	equ	0xFEA
 24091                           fsr0l	equ	0xFE9
 24092                           wreg	equ	0xFE8
 24093                           indf1	equ	0xFE7
 24094                           postinc1	equ	0xFE6
 24095                           postdec1	equ	0xFE5
 24096                           plusw1	equ	0xFE3
 24097                           fsr1h	equ	0xFE2
 24098                           fsr1l	equ	0xFE1
 24099                           indf2	equ	0xFDF
 24100                           postinc2	equ	0xFDE
 24101                           postdec2	equ	0xFDD
 24102                           plusw2	equ	0xFDB
 24103                           fsr2h	equ	0xFDA
 24104                           fsr2l	equ	0xFD9
 24105                           status	equ	0xFD8
 24106                           
 24107 ;; *************** function _ETH_Set_TXRTS *****************
 24108 ;; Defined at:
 24109 ;;		line 435 in file "../../TCPIP Library/ethernet_drivers/encX24j600_spi.c"
 24110 ;; Parameters:    Size  Location     Type
 24111 ;;		None
 24112 ;; Auto vars:     Size  Location     Type
 24113 ;;		None
 24114 ;; Return value:  Size  Location     Type
 24115 ;;                  1    wreg      void 
 24116 ;; Registers used:
 24117 ;;		wreg, status,2, cstack
 24118 ;; Tracked objects:
 24119 ;;		On entry : F/1
 24120 ;;		On exit  : 0/0
 24121 ;;		Unchanged: 0/0
 24122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24127 ;;Total ram usage:        0 bytes
 24128 ;; Hardware stack levels used:    1
 24129 ;; Hardware stack levels required when called:    4
 24130 ;; This function calls:
 24131 ;;		_SPI_ExchangeByte
 24132 ;; This function is called by:
 24133 ;;		_ETH_Send
 24134 ;; This function uses a non-reentrant model
 24135 ;;
 24136                           
 24137                           	psect	text97
 24138  0087D6                     __ptext97:
 24139                           	opt stack 0
 24140  0087D6                     _ETH_Set_TXRTS:
 24141                           	opt stack 19
 24142                           
 24143                           ; BSR set to: 1
 24144                           
 24145                           ; BSR set to: 1
 24146                           ;incstack = 0
 24147                           ;encX24j600_spi.c: 437: do{LATB3 = 0;} while(0);
 24148  0087D6  968A               	bcf	3978,3,c	;volatile
 24149                           
 24150                           ; BSR set to: 1
 24151                           ;encX24j600_spi.c: 438: SPI_ExchangeByte(settxrts_inst);
 24152  0087D8  0ED4               	movlw	212
 24153  0087DA  ECD2  F043         	call	_SPI_ExchangeByte
 24154  0087DE  868A               	bsf	3978,3,c	;volatile
 24155  0087E0  0012               	return		;funcret
 24156  0087E2                     __end_of_ETH_Set_TXRTS:
 24157                           	opt stack 0
 24158                           tosu	equ	0xFFF
 24159                           tosh	equ	0xFFE
 24160                           tosl	equ	0xFFD
 24161                           pclath	equ	0xFFA
 24162                           tblptru	equ	0xFF8
 24163                           tblptrh	equ	0xFF7
 24164                           tblptrl	equ	0xFF6
 24165                           tablat	equ	0xFF5
 24166                           prodh	equ	0xFF4
 24167                           prodl	equ	0xFF3
 24168                           intcon	equ	0xFF2
 24169                           intcon2	equ	0xFF1
 24170                           indf0	equ	0xFEF
 24171                           postinc0	equ	0xFEE
 24172                           fsr0h	equ	0xFEA
 24173                           fsr0l	equ	0xFE9
 24174                           wreg	equ	0xFE8
 24175                           indf1	equ	0xFE7
 24176                           postinc1	equ	0xFE6
 24177                           postdec1	equ	0xFE5
 24178                           plusw1	equ	0xFE3
 24179                           fsr1h	equ	0xFE2
 24180                           fsr1l	equ	0xFE1
 24181                           indf2	equ	0xFDF
 24182                           postinc2	equ	0xFDE
 24183                           postdec2	equ	0xFDD
 24184                           plusw2	equ	0xFDB
 24185                           fsr2h	equ	0xFDA
 24186                           fsr2l	equ	0xFD9
 24187                           status	equ	0xFD8
 24188                           
 24189 ;; *************** function _ETH_Insert *****************
 24190 ;; Defined at:
 24191 ;;		line 416 in file "../../TCPIP Library/ethernet_drivers/encX24j600_spi.c"
 24192 ;; Parameters:    Size  Location     Type
 24193 ;;  data            1   10[COMRAM] PTR unsigned char 
 24194 ;;		 -> UDP_Send@cksm(2), UDP_Send@udpLength(2), TCP_Snd@cksm(2), IPV4_Send@cksm(2), 
 24195 ;;		 -> IPV4_Send@totalLength(2), ICMP_EchoReply@cksm(2), 
 24196 ;;  len             2   11[COMRAM] unsigned int 
 24197 ;;  offset          2   13[COMRAM] unsigned int 
 24198 ;; Auto vars:     Size  Location     Type
 24199 ;;  current_tx_p    2   15[COMRAM] unsigned int 
 24200 ;; Return value:  Size  Location     Type
 24201 ;;                  1    wreg      void 
 24202 ;; Registers used:
 24203 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24204 ;; Tracked objects:
 24205 ;;		On entry : 0/0
 24206 ;;		On exit  : 0/0
 24207 ;;		Unchanged: 0/0
 24208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24209 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24210 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24212 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24213 ;;Total ram usage:        7 bytes
 24214 ;; Hardware stack levels used:    1
 24215 ;; Hardware stack levels required when called:    6
 24216 ;; This function calls:
 24217 ;;		_ENCx24_Read
 24218 ;;		_ENCx24_Write
 24219 ;;		_SPI_ExchangeByte
 24220 ;; This function is called by:
 24221 ;;		_ICMP_EchoReply
 24222 ;;		_IPV4_Send
 24223 ;;		_TCP_Snd
 24224 ;;		_UDP_Send
 24225 ;; This function uses a non-reentrant model
 24226 ;;
 24227                           
 24228                           	psect	text98
 24229  007D5A                     __ptext98:
 24230                           	opt stack 0
 24231  007D5A                     _ETH_Insert:
 24232                           	opt stack 19
 24233                           
 24234                           ;encX24j600_spi.c: 420: current_tx_pointer = ENCx24_Read(XJ600_EGPWRPTL);
 24235                           
 24236                           ;incstack = 0
 24237  007D5A  0E88               	movlw	136
 24238  007D5C  EC06  F040         	call	_ENCx24_Read
 24239  007D60  C005  F010         	movff	?_ENCx24_Read,ETH_Insert@current_tx_pointer
 24240  007D64  C006  F011         	movff	?_ENCx24_Read+1,ETH_Insert@current_tx_pointer+1
 24241                           
 24242                           ;encX24j600_spi.c: 421: ENCx24_Write(XJ600_EGPWRPTL, offset);
 24243  007D68  C00E  F005         	movff	ETH_Insert@offset,ENCx24_Write@data
 24244  007D6C  C00F  F006         	movff	ETH_Insert@offset+1,ENCx24_Write@data+1
 24245  007D70  0E88               	movlw	136
 24246  007D72  EC94  F040         	call	_ENCx24_Write
 24247  007D76  968A               	bcf	3978,3,c	;volatile
 24248                           
 24249                           ;encX24j600_spi.c: 424: SPI_ExchangeByte(wgpdata_inst);
 24250  007D78  0E2A               	movlw	42
 24251  007D7A  ECD2  F043         	call	_SPI_ExchangeByte
 24252                           
 24253                           ;encX24j600_spi.c: 425: while(len--)
 24254  007D7E  D007               	goto	l7861
 24255  007D80                     l7857:
 24256                           
 24257                           ;encX24j600_spi.c: 426: SPI_ExchangeByte(*data++);
 24258  007D80  500B               	movf	ETH_Insert@data,w,c
 24259  007D82  6ED9               	movwf	fsr2l,c
 24260  007D84  6ADA               	clrf	fsr2h,c
 24261  007D86  50DF               	movf	indf2,w,c
 24262  007D88  ECD2  F043         	call	_SPI_ExchangeByte
 24263  007D8C  2A0B               	incf	ETH_Insert@data,f,c
 24264  007D8E                     l7861:
 24265  007D8E  060C               	decf	ETH_Insert@len,f,c
 24266  007D90  A0D8               	btfss	status,0,c
 24267  007D92  060D               	decf	ETH_Insert@len+1,f,c
 24268  007D94  280C               	incf	ETH_Insert@len,w,c
 24269  007D96  E1F4               	bnz	l7857
 24270  007D98  280D               	incf	ETH_Insert@len+1,w,c
 24271  007D9A  E1F2               	bnz	l7857
 24272                           
 24273                           ;encX24j600_spi.c: 427: do{LATB3 = 1;} while(0);
 24274  007D9C  868A               	bsf	3978,3,c	;volatile
 24275                           
 24276                           ;encX24j600_spi.c: 429: ENCx24_Write(XJ600_EGPWRPTL, current_tx_pointer);
 24277  007D9E  C010  F005         	movff	ETH_Insert@current_tx_pointer,ENCx24_Write@data
 24278  007DA2  C011  F006         	movff	ETH_Insert@current_tx_pointer+1,ENCx24_Write@data+1
 24279  007DA6  0E88               	movlw	136
 24280  007DA8  EF94  F040         	goto	_ENCx24_Write
 24281  007DAC                     __end_of_ETH_Insert:
 24282                           	opt stack 0
 24283                           tosu	equ	0xFFF
 24284                           tosh	equ	0xFFE
 24285                           tosl	equ	0xFFD
 24286                           pclath	equ	0xFFA
 24287                           tblptru	equ	0xFF8
 24288                           tblptrh	equ	0xFF7
 24289                           tblptrl	equ	0xFF6
 24290                           tablat	equ	0xFF5
 24291                           prodh	equ	0xFF4
 24292                           prodl	equ	0xFF3
 24293                           intcon	equ	0xFF2
 24294                           intcon2	equ	0xFF1
 24295                           indf0	equ	0xFEF
 24296                           postinc0	equ	0xFEE
 24297                           fsr0h	equ	0xFEA
 24298                           fsr0l	equ	0xFE9
 24299                           wreg	equ	0xFE8
 24300                           indf1	equ	0xFE7
 24301                           postinc1	equ	0xFE6
 24302                           postdec1	equ	0xFE5
 24303                           plusw1	equ	0xFE3
 24304                           fsr1h	equ	0xFE2
 24305                           fsr1l	equ	0xFE1
 24306                           indf2	equ	0xFDF
 24307                           postinc2	equ	0xFDE
 24308                           postdec2	equ	0xFDD
 24309                           plusw2	equ	0xFDB
 24310                           fsr2h	equ	0xFDA
 24311                           fsr2l	equ	0xFD9
 24312                           status	equ	0xFD8
 24313                           
 24314 ;; *************** function _ENCx24_Write *****************
 24315 ;; Defined at:
 24316 ;;		line 124 in file "../../TCPIP Library/ethernet_drivers/encX24j600_spi.c"
 24317 ;; Parameters:    Size  Location     Type
 24318 ;;  a               1    wreg     enum E6671
 24319 ;;  data            2    4[COMRAM] unsigned int 
 24320 ;; Auto vars:     Size  Location     Type
 24321 ;;  a               1    7[COMRAM] enum E6671
 24322 ;;  bank            1    6[COMRAM] unsigned char 
 24323 ;; Return value:  Size  Location     Type
 24324 ;;                  1    wreg      void 
 24325 ;; Registers used:
 24326 ;;		wreg, status,2, status,0, cstack
 24327 ;; Tracked objects:
 24328 ;;		On entry : 0/2
 24329 ;;		On exit  : 0/0
 24330 ;;		Unchanged: 0/0
 24331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24332 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24333 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24335 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24336 ;;Total ram usage:        4 bytes
 24337 ;; Hardware stack levels used:    1
 24338 ;; Hardware stack levels required when called:    5
 24339 ;; This function calls:
 24340 ;;		_ENCx24_BankselSPI
 24341 ;;		_SPI_ExchangeByte
 24342 ;; This function is called by:
 24343 ;;		_ETH_SendSystemReset
 24344 ;;		_ETH_Init
 24345 ;;		_ETH_EventHandler
 24346 ;;		_ETH_ResetReceiver
 24347 ;;		_ETH_Dump
 24348 ;;		_ETH_Flush
 24349 ;;		_ETH_WriteStart
 24350 ;;		_ETH_Send
 24351 ;;		_ETH_Copy
 24352 ;;		_ETH_TxComputeChecksum
 24353 ;;		_ETH_RxComputeChecksum
 24354 ;;		_ENCx24_PhyRead
 24355 ;;		_ENCx24_PHYWrite
 24356 ;;		_ETH_Insert
 24357 ;; This function uses a non-reentrant model
 24358 ;;
 24359                           
 24360                           	psect	text99
 24361  008128                     __ptext99:
 24362                           	opt stack 0
 24363  008128                     _ENCx24_Write:
 24364                           	opt stack 19
 24365                           
 24366                           ;incstack = 0
 24367                           ;ENCx24_Write@a stored from wreg
 24368  008128  6E08               	movwf	ENCx24_Write@a,c
 24369                           
 24370                           ;encX24j600_spi.c: 126: uint8_t bank;
 24371                           ;encX24j600_spi.c: 127: bank = a & 0xE0;
 24372  00812A  5008               	movf	ENCx24_Write@a,w,c
 24373  00812C  0BE0               	andlw	224
 24374  00812E  6E07               	movwf	ENCx24_Write@bank,c
 24375                           
 24376                           ;encX24j600_spi.c: 128: if(bank != 0X80)
 24377  008130  0E80               	movlw	128
 24378  008132  1807               	xorwf	ENCx24_Write@bank,w,c
 24379  008134  E00B               	bz	l567
 24380                           
 24381                           ;encX24j600_spi.c: 129: {
 24382                           ;encX24j600_spi.c: 130: ENCx24_BankselSPI(a);
 24383  008136  5008               	movf	ENCx24_Write@a,w,c
 24384  008138  EC2E  F03E         	call	_ENCx24_BankselSPI
 24385  00813C  968A               	bcf	3978,3,c	;volatile
 24386                           
 24387                           ;encX24j600_spi.c: 132: a &= 0x1F;
 24388  00813E  0E1F               	movlw	31
 24389  008140  1608               	andwf	ENCx24_Write@a,f,c
 24390                           
 24391                           ;encX24j600_spi.c: 133: SPI_ExchangeByte(wcr_inst | (a));
 24392  008142  5008               	movf	ENCx24_Write@a,w,c
 24393  008144  0940               	iorlw	64
 24394  008146  ECD2  F043         	call	_SPI_ExchangeByte
 24395                           
 24396                           ;encX24j600_spi.c: 134: }
 24397  00814A  D007               	goto	l566
 24398  00814C                     l567:
 24399  00814C  968A               	bcf	3978,3,c	;volatile
 24400                           
 24401                           ;encX24j600_spi.c: 138: SPI_ExchangeByte(wcru_inst);
 24402  00814E  0E22               	movlw	34
 24403  008150  ECD2  F043         	call	_SPI_ExchangeByte
 24404                           
 24405                           ;encX24j600_spi.c: 139: SPI_ExchangeByte(a);
 24406  008154  5008               	movf	ENCx24_Write@a,w,c
 24407  008156  ECD2  F043         	call	_SPI_ExchangeByte
 24408  00815A                     l566:
 24409                           
 24410                           ;encX24j600_spi.c: 140: }
 24411                           ;encX24j600_spi.c: 141: SPI_ExchangeByte(((uint8_t*) &data)[0]);
 24412  00815A  5005               	movf	ENCx24_Write@data,w,c
 24413  00815C  ECD2  F043         	call	_SPI_ExchangeByte
 24414                           
 24415                           ;encX24j600_spi.c: 142: SPI_ExchangeByte(((uint8_t*) &data)[1]);
 24416  008160  5006               	movf	ENCx24_Write@data+1,w,c
 24417  008162  ECD2  F043         	call	_SPI_ExchangeByte
 24418  008166  868A               	bsf	3978,3,c	;volatile
 24419  008168  0012               	return		;funcret
 24420  00816A                     __end_of_ENCx24_Write:
 24421                           	opt stack 0
 24422                           tosu	equ	0xFFF
 24423                           tosh	equ	0xFFE
 24424                           tosl	equ	0xFFD
 24425                           pclath	equ	0xFFA
 24426                           tblptru	equ	0xFF8
 24427                           tblptrh	equ	0xFF7
 24428                           tblptrl	equ	0xFF6
 24429                           tablat	equ	0xFF5
 24430                           prodh	equ	0xFF4
 24431                           prodl	equ	0xFF3
 24432                           intcon	equ	0xFF2
 24433                           intcon2	equ	0xFF1
 24434                           indf0	equ	0xFEF
 24435                           postinc0	equ	0xFEE
 24436                           fsr0h	equ	0xFEA
 24437                           fsr0l	equ	0xFE9
 24438                           wreg	equ	0xFE8
 24439                           indf1	equ	0xFE7
 24440                           postinc1	equ	0xFE6
 24441                           postdec1	equ	0xFE5
 24442                           plusw1	equ	0xFE3
 24443                           fsr1h	equ	0xFE2
 24444                           fsr1l	equ	0xFE1
 24445                           indf2	equ	0xFDF
 24446                           postinc2	equ	0xFDE
 24447                           postdec2	equ	0xFDD
 24448                           plusw2	equ	0xFDB
 24449                           fsr2h	equ	0xFDA
 24450                           fsr2l	equ	0xFD9
 24451                           status	equ	0xFD8
 24452                           
 24453 ;; *************** function _ENCx24_Read *****************
 24454 ;; Defined at:
 24455 ;;		line 95 in file "../../TCPIP Library/ethernet_drivers/encX24j600_spi.c"
 24456 ;; Parameters:    Size  Location     Type
 24457 ;;  a               1    wreg     enum E6671
 24458 ;; Auto vars:     Size  Location     Type
 24459 ;;  a               1    9[COMRAM] enum E6671
 24460 ;;  v               2    7[COMRAM] unsigned int 
 24461 ;;  bank            1    6[COMRAM] unsigned char 
 24462 ;; Return value:  Size  Location     Type
 24463 ;;                  2    4[COMRAM] unsigned int 
 24464 ;; Registers used:
 24465 ;;		wreg, status,2, status,0, cstack
 24466 ;; Tracked objects:
 24467 ;;		On entry : 0/2
 24468 ;;		On exit  : 0/0
 24469 ;;		Unchanged: 0/0
 24470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24471 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24472 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24474 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24475 ;;Total ram usage:        6 bytes
 24476 ;; Hardware stack levels used:    1
 24477 ;; Hardware stack levels required when called:    5
 24478 ;; This function calls:
 24479 ;;		_ENCx24_BankselSPI
 24480 ;;		_SPI_ExchangeByte
 24481 ;; This function is called by:
 24482 ;;		_ETH_SendSystemReset
 24483 ;;		_ETH_Init
 24484 ;;		_ETH_readLinkStatus
 24485 ;;		_ETH_EventHandler
 24486 ;;		_ETH_Dump
 24487 ;;		_ETH_WriteStart
 24488 ;;		_ETH_Copy
 24489 ;;		_waitForDMA
 24490 ;;		_ETH_TxComputeChecksum
 24491 ;;		_ETH_RxComputeChecksum
 24492 ;;		_ETH_SaveRDPT
 24493 ;;		_ETH_ResetByteCount
 24494 ;;		_ETH_GetByteCount
 24495 ;;		_ENCx24_PhyRead
 24496 ;;		_ENCx24_PHYWrite
 24497 ;;		_ETH_Insert
 24498 ;; This function uses a non-reentrant model
 24499 ;;
 24500                           
 24501                           	psect	text100
 24502  00800C                     __ptext100:
 24503                           	opt stack 0
 24504  00800C                     _ENCx24_Read:
 24505                           	opt stack 22
 24506                           
 24507                           ;incstack = 0
 24508                           ;ENCx24_Read@a stored from wreg
 24509  00800C  6E0A               	movwf	ENCx24_Read@a,c
 24510                           
 24511                           ;encX24j600_spi.c: 97: uint16_t v;
 24512                           ;encX24j600_spi.c: 98: uint8_t bank;
 24513                           ;encX24j600_spi.c: 100: bank = a & 0xE0;
 24514  00800E  500A               	movf	ENCx24_Read@a,w,c
 24515  008010  0BE0               	andlw	224
 24516  008012  6E07               	movwf	ENCx24_Read@bank,c
 24517                           
 24518                           ;encX24j600_spi.c: 101: if(bank != 0X80)
 24519  008014  0E80               	movlw	128
 24520  008016  1807               	xorwf	ENCx24_Read@bank,w,c
 24521  008018  E009               	bz	l556
 24522                           
 24523                           ;encX24j600_spi.c: 102: {
 24524                           ;encX24j600_spi.c: 103: ENCx24_BankselSPI(a);
 24525  00801A  500A               	movf	ENCx24_Read@a,w,c
 24526  00801C  EC2E  F03E         	call	_ENCx24_BankselSPI
 24527  008020  968A               	bcf	3978,3,c	;volatile
 24528                           
 24529                           ;encX24j600_spi.c: 105: SPI_ExchangeByte(rcr_inst| (a & 0x1F));
 24530  008022  500A               	movf	ENCx24_Read@a,w,c
 24531  008024  0B1F               	andlw	31
 24532  008026  ECD2  F043         	call	_SPI_ExchangeByte
 24533                           
 24534                           ;encX24j600_spi.c: 106: }
 24535  00802A  D007               	goto	l555
 24536  00802C                     l556:
 24537  00802C  968A               	bcf	3978,3,c	;volatile
 24538                           
 24539                           ;encX24j600_spi.c: 110: SPI_ExchangeByte(rcru_inst);
 24540  00802E  0E20               	movlw	32
 24541  008030  ECD2  F043         	call	_SPI_ExchangeByte
 24542                           
 24543                           ;encX24j600_spi.c: 111: SPI_ExchangeByte(a);
 24544  008034  500A               	movf	ENCx24_Read@a,w,c
 24545  008036  ECD2  F043         	call	_SPI_ExchangeByte
 24546  00803A                     l555:
 24547                           
 24548                           ;encX24j600_spi.c: 112: }
 24549                           ;encX24j600_spi.c: 113: ((uint8_t*)&v)[0] = SPI_ExchangeByte(0);
 24550  00803A  0E00               	movlw	0
 24551  00803C  ECD2  F043         	call	_SPI_ExchangeByte
 24552  008040  6E08               	movwf	ENCx24_Read@v,c
 24553                           
 24554                           ;encX24j600_spi.c: 114: ((uint8_t*)&v)[1] = SPI_ExchangeByte(0);
 24555  008042  0E00               	movlw	0
 24556  008044  ECD2  F043         	call	_SPI_ExchangeByte
 24557  008048  6E09               	movwf	ENCx24_Read@v+1,c
 24558  00804A  868A               	bsf	3978,3,c	;volatile
 24559                           
 24560                           ;encX24j600_spi.c: 116: return v;
 24561  00804C  C008  F005         	movff	ENCx24_Read@v,?_ENCx24_Read
 24562  008050  C009  F006         	movff	ENCx24_Read@v+1,?_ENCx24_Read+1
 24563  008054  0012               	return		;funcret
 24564  008056                     __end_of_ENCx24_Read:
 24565                           	opt stack 0
 24566                           tosu	equ	0xFFF
 24567                           tosh	equ	0xFFE
 24568                           tosl	equ	0xFFD
 24569                           pclath	equ	0xFFA
 24570                           tblptru	equ	0xFF8
 24571                           tblptrh	equ	0xFF7
 24572                           tblptrl	equ	0xFF6
 24573                           tablat	equ	0xFF5
 24574                           prodh	equ	0xFF4
 24575                           prodl	equ	0xFF3
 24576                           intcon	equ	0xFF2
 24577                           intcon2	equ	0xFF1
 24578                           indf0	equ	0xFEF
 24579                           postinc0	equ	0xFEE
 24580                           fsr0h	equ	0xFEA
 24581                           fsr0l	equ	0xFE9
 24582                           wreg	equ	0xFE8
 24583                           indf1	equ	0xFE7
 24584                           postinc1	equ	0xFE6
 24585                           postdec1	equ	0xFE5
 24586                           plusw1	equ	0xFE3
 24587                           fsr1h	equ	0xFE2
 24588                           fsr1l	equ	0xFE1
 24589                           indf2	equ	0xFDF
 24590                           postinc2	equ	0xFDE
 24591                           postdec2	equ	0xFDD
 24592                           plusw2	equ	0xFDB
 24593                           fsr2h	equ	0xFDA
 24594                           fsr2l	equ	0xFD9
 24595                           status	equ	0xFD8
 24596                           
 24597 ;; *************** function _ENCx24_BankselSPI *****************
 24598 ;; Defined at:
 24599 ;;		line 61 in file "../../TCPIP Library/ethernet_drivers/encX24j600_spi.c"
 24600 ;; Parameters:    Size  Location     Type
 24601 ;;  a               1    wreg     enum E6671
 24602 ;; Auto vars:     Size  Location     Type
 24603 ;;  a               1    2[COMRAM] enum E6671
 24604 ;;  bank            1    3[COMRAM] unsigned char 
 24605 ;; Return value:  Size  Location     Type
 24606 ;;                  1    wreg      void 
 24607 ;; Registers used:
 24608 ;;		wreg, status,2, status,0, cstack
 24609 ;; Tracked objects:
 24610 ;;		On entry : 0/0
 24611 ;;		On exit  : 0/0
 24612 ;;		Unchanged: 0/0
 24613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24615 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24617 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24618 ;;Total ram usage:        2 bytes
 24619 ;; Hardware stack levels used:    1
 24620 ;; Hardware stack levels required when called:    4
 24621 ;; This function calls:
 24622 ;;		_SPI_ExchangeByte
 24623 ;; This function is called by:
 24624 ;;		_ENCx24_Read
 24625 ;;		_ENCx24_Write
 24626 ;;		_ENCx24_BFS
 24627 ;;		_ENCx24_BFC
 24628 ;;		_ETH_MACRead8
 24629 ;; This function uses a non-reentrant model
 24630 ;;
 24631                           
 24632                           	psect	text101
 24633  007C5C                     __ptext101:
 24634                           	opt stack 0
 24635  007C5C                     _ENCx24_BankselSPI:
 24636                           	opt stack 22
 24637                           
 24638                           ;incstack = 0
 24639                           ;ENCx24_BankselSPI@a stored from wreg
 24640  007C5C  6E03               	movwf	ENCx24_BankselSPI@a,c
 24641                           
 24642                           ;encX24j600_spi.c: 63: uint8_t bank;
 24643                           ;encX24j600_spi.c: 64: bank = a & 0xE0;
 24644  007C5E  5003               	movf	ENCx24_BankselSPI@a,w,c
 24645  007C60  0BE0               	andlw	224
 24646  007C62  6E04               	movwf	ENCx24_BankselSPI@bank,c
 24647                           
 24648                           ;encX24j600_spi.c: 65: if( bank != last_bank && bank!=0X80)
 24649  007C64  0101               	movlb	1	; () banked
 24650  007C66  19A6               	xorwf	_last_bank& (0+255),w,b
 24651  007C68  B4D8               	btfsc	status,2,c
 24652  007C6A  0012               	return	
 24653                           
 24654                           ; BSR set to: 1
 24655  007C6C  0E80               	movlw	128
 24656  007C6E  1804               	xorwf	ENCx24_BankselSPI@bank,w,c
 24657  007C70  B4D8               	btfsc	status,2,c
 24658  007C72  0012               	return	
 24659                           
 24660                           ; BSR set to: 1
 24661                           ;encX24j600_spi.c: 66: {
 24662                           ;encX24j600_spi.c: 67: last_bank = bank;
 24663  007C74  C004  F1A6         	movff	ENCx24_BankselSPI@bank,_last_bank
 24664                           
 24665                           ; BSR set to: 1
 24666                           
 24667                           ;encX24j600_spi.c: 68: do{LATB3 = 0;} while(0);
 24668  007C78  968A               	bcf	3978,3,c	;volatile
 24669  007C7A  D010               	goto	l7639
 24670  007C7C                     l7629:
 24671                           
 24672                           ; BSR set to: 1
 24673                           ;encX24j600_spi.c: 72: SPI_ExchangeByte(b0sel_inst);
 24674  007C7C  0EC0               	movlw	192
 24675  007C7E  ECD2  F043         	call	_SPI_ExchangeByte
 24676                           
 24677                           ;encX24j600_spi.c: 73: break;
 24678  007C82  D015               	goto	l547
 24679  007C84                     l7631:
 24680                           
 24681                           ; BSR set to: 1
 24682                           ;encX24j600_spi.c: 75: SPI_ExchangeByte(b1sel_inst);
 24683  007C84  0EC2               	movlw	194
 24684  007C86  ECD2  F043         	call	_SPI_ExchangeByte
 24685                           
 24686                           ;encX24j600_spi.c: 76: break;
 24687  007C8A  D011               	goto	l547
 24688  007C8C                     l7633:
 24689                           
 24690                           ; BSR set to: 1
 24691                           ;encX24j600_spi.c: 78: SPI_ExchangeByte(b2sel_inst);
 24692  007C8C  0EC4               	movlw	196
 24693  007C8E  ECD2  F043         	call	_SPI_ExchangeByte
 24694                           
 24695                           ;encX24j600_spi.c: 79: break;
 24696  007C92  D00D               	goto	l547
 24697  007C94                     l7635:
 24698                           
 24699                           ; BSR set to: 1
 24700                           ;encX24j600_spi.c: 81: SPI_ExchangeByte(b3sel_inst);
 24701  007C94  0EC6               	movlw	198
 24702  007C96  ECD2  F043         	call	_SPI_ExchangeByte
 24703                           
 24704                           ;encX24j600_spi.c: 82: break;
 24705  007C9A  D009               	goto	l547
 24706  007C9C                     l7639:
 24707                           
 24708                           ; BSR set to: 1
 24709  007C9C  5004               	movf	ENCx24_BankselSPI@bank,w,c
 24710                           
 24711                           ; Switch size 1, requested type "speed"
 24712                           ; Number of cases is 5, Range of values is 0 to 224
 24713                           ; switch strategies available:
 24714                           ; Name         Instructions Cycles
 24715                           ; simple_byte           16     9 (average)
 24716                           ;	Chosen strategy is simple_byte
 24717  007C9E  E0EE               	bz	l7629
 24718  007CA0  0A20               	xorlw	32	; case 32
 24719  007CA2  E0F0               	bz	l7631
 24720  007CA4  0A60               	xorlw	96	; case 64
 24721  007CA6  E0F2               	bz	l7633
 24722  007CA8  0A20               	xorlw	32	; case 96
 24723  007CAA  E0F4               	bz	l7635
 24724  007CAC  0A80               	xorlw	128	; case 224
 24725  007CAE                     l547:
 24726  007CAE  868A               	bsf	3978,3,c	;volatile
 24727  007CB0  0012               	return		;funcret
 24728  007CB2                     __end_of_ENCx24_BankselSPI:
 24729                           	opt stack 0
 24730                           tosu	equ	0xFFF
 24731                           tosh	equ	0xFFE
 24732                           tosl	equ	0xFFD
 24733                           pclath	equ	0xFFA
 24734                           tblptru	equ	0xFF8
 24735                           tblptrh	equ	0xFF7
 24736                           tblptrl	equ	0xFF6
 24737                           tablat	equ	0xFF5
 24738                           prodh	equ	0xFF4
 24739                           prodl	equ	0xFF3
 24740                           intcon	equ	0xFF2
 24741                           intcon2	equ	0xFF1
 24742                           indf0	equ	0xFEF
 24743                           postinc0	equ	0xFEE
 24744                           fsr0h	equ	0xFEA
 24745                           fsr0l	equ	0xFE9
 24746                           wreg	equ	0xFE8
 24747                           indf1	equ	0xFE7
 24748                           postinc1	equ	0xFE6
 24749                           postdec1	equ	0xFE5
 24750                           plusw1	equ	0xFE3
 24751                           fsr1h	equ	0xFE2
 24752                           fsr1l	equ	0xFE1
 24753                           indf2	equ	0xFDF
 24754                           postinc2	equ	0xFDE
 24755                           postdec2	equ	0xFDD
 24756                           plusw2	equ	0xFDB
 24757                           fsr2h	equ	0xFDA
 24758                           fsr2l	equ	0xFD9
 24759                           status	equ	0xFD8
 24760                           
 24761 ;; *************** function _ETH_ReadBlock *****************
 24762 ;; Defined at:
 24763 ;;		line 305 in file "../../TCPIP Library/ethernet_drivers/encX24j600_spi.c"
 24764 ;; Parameters:    Size  Location     Type
 24765 ;;  data            2    2[COMRAM] PTR void 
 24766 ;;		 -> ?_sprintf(2), ?_printf(2), main@str(32), STR_5(13), 
 24767 ;;		 -> STR_4(17), DEMO_TCP_EchoServer@rxdataPort7(20), udpHeader(8), tcpHeader(20), 
 24768 ;;		 -> Network_Read@debug_str(80), Network_Read@header(14), ipv4Header(20), ICMP_Receive@icmpHdr(8), 
 24769 ;;		 -> DHCP_Handler@ethPktMAC(6), ARPV4_Packet@header(28), NULL(0), 
 24770 ;;  length          2    4[COMRAM] unsigned int 
 24771 ;; Auto vars:     Size  Location     Type
 24772 ;;  len             2    9[COMRAM] unsigned int 
 24773 ;;  p               2    7[COMRAM] PTR unsigned char 
 24774 ;;		 -> ?_sprintf(2), ?_printf(2), main@str(32), STR_5(13), 
 24775 ;;		 -> STR_4(17), DEMO_TCP_EchoServer@rxdataPort7(20), udpHeader(8), tcpHeader(20), 
 24776 ;;		 -> Network_Read@debug_str(80), Network_Read@header(14), ipv4Header(20), ICMP_Receive@icmpHdr(8), 
 24777 ;;		 -> DHCP_Handler@ethPktMAC(6), ARPV4_Packet@header(28), NULL(0), 
 24778 ;; Return value:  Size  Location     Type
 24779 ;;                  2    2[COMRAM] unsigned int 
 24780 ;; Registers used:
 24781 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24782 ;; Tracked objects:
 24783 ;;		On entry : 0/2
 24784 ;;		On exit  : F/1
 24785 ;;		Unchanged: 0/0
 24786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24787 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24788 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24789 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24790 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24791 ;;Total ram usage:        9 bytes
 24792 ;; Hardware stack levels used:    1
 24793 ;; Hardware stack levels required when called:    4
 24794 ;; This function calls:
 24795 ;;		_SPI_ExchangeByte
 24796 ;; This function is called by:
 24797 ;;		_ARPV4_Packet
 24798 ;;		_DHCP_Handler
 24799 ;;		_ICMP_Receive
 24800 ;;		_IPV4_Packet
 24801 ;;		_Network_Read
 24802 ;;		_TCP_PayloadSave
 24803 ;;		_TCP_Recv
 24804 ;;		_UDP_Receive
 24805 ;; This function uses a non-reentrant model
 24806 ;;
 24807                           
 24808                           	psect	text102
 24809  0075B6                     __ptext102:
 24810                           	opt stack 0
 24811  0075B6                     _ETH_ReadBlock:
 24812                           	opt stack 22
 24813                           
 24814                           ;encX24j600_spi.c: 307: uint16_t len = length;
 24815                           
 24816                           ;incstack = 0
 24817  0075B6  C005  F00A         	movff	ETH_ReadBlock@length,ETH_ReadBlock@len
 24818  0075BA  C006  F00B         	movff	ETH_ReadBlock@length+1,ETH_ReadBlock@len+1
 24819                           
 24820                           ;encX24j600_spi.c: 308: char *p = data;
 24821  0075BE  C003  F008         	movff	ETH_ReadBlock@data,ETH_ReadBlock@p
 24822  0075C2  C004  F009         	movff	ETH_ReadBlock@data+1,ETH_ReadBlock@p+1
 24823                           
 24824                           ;encX24j600_spi.c: 309: if(rxPacketStatusVector.ByteCount)
 24825  0075C6  0102               	movlb	2	; () banked
 24826  0075C8  5118               	movf	_rxPacketStatusVector& (0+255),w,b
 24827  0075CA  1119               	iorwf	(_rxPacketStatusVector+1)& (0+255),w,b
 24828  0075CC  E03A               	bz	l635
 24829                           
 24830                           ; BSR set to: 2
 24831                           ;encX24j600_spi.c: 310: {
 24832                           ;encX24j600_spi.c: 311: if(length > rxPacketStatusVector.ByteCount)
 24833  0075CE  5005               	movf	ETH_ReadBlock@length,w,c
 24834  0075D0  5D18               	subwf	_rxPacketStatusVector& (0+255),w,b
 24835  0075D2  5006               	movf	ETH_ReadBlock@length+1,w,c
 24836  0075D4  5919               	subwfb	(_rxPacketStatusVector+1)& (0+255),w,b
 24837  0075D6  E204               	bc	l7995
 24838                           
 24839                           ; BSR set to: 2
 24840                           ;encX24j600_spi.c: 312: {
 24841                           ;encX24j600_spi.c: 313: len = rxPacketStatusVector.ByteCount;
 24842  0075D8  C218  F00A         	movff	_rxPacketStatusVector,ETH_ReadBlock@len
 24843  0075DC  C219  F00B         	movff	_rxPacketStatusVector+1,ETH_ReadBlock@len+1
 24844  0075E0                     l7995:
 24845                           
 24846                           ; BSR set to: 2
 24847                           ;encX24j600_spi.c: 314: }
 24848                           ;encX24j600_spi.c: 315: rxPacketStatusVector.ByteCount -= len;
 24849  0075E0  500A               	movf	ETH_ReadBlock@len,w,c
 24850  0075E2  5F18               	subwf	_rxPacketStatusVector& (0+255),f,b
 24851  0075E4  500B               	movf	ETH_ReadBlock@len+1,w,c
 24852  0075E6  5B19               	subwfb	(_rxPacketStatusVector+1)& (0+255),f,b
 24853                           
 24854                           ; BSR set to: 2
 24855  0075E8  968A               	bcf	3978,3,c	;volatile
 24856                           
 24857                           ; BSR set to: 2
 24858                           ;encX24j600_spi.c: 317: SPI_ExchangeByte(rrxdata_inst);
 24859  0075EA  0E2C               	movlw	44
 24860  0075EC  ECD2  F043         	call	_SPI_ExchangeByte
 24861                           
 24862                           ;encX24j600_spi.c: 318: while(len--) *p++=SPI_ExchangeByte(0);
 24863  0075F0  D019               	goto	l8005
 24864  0075F2                     l8001:
 24865  0075F2  C008  FFF6         	movff	ETH_ReadBlock@p,tblptrl
 24866  0075F6  C009  FFF7         	movff	ETH_ReadBlock@p+1,tblptrh
 24867  0075FA  0E00               	movlw	low (__smallconst shr (0+16))
 24868  0075FC  6EF8               	movwf	tblptru,c
 24869  0075FE  0E00               	movlw	0
 24870  007600  ECD2  F043         	call	_SPI_ExchangeByte
 24871  007604  6E07               	movwf	??_ETH_ReadBlock& (0+255),c
 24872  007606  0E0F               	movlw	(high __ramtop+-1)
 24873  007608  64F7               	cpfsgt	tblptrh,c
 24874  00760A  D004               	bra	u10527
 24875  00760C  C007  FFF5         	movff	??_ETH_ReadBlock,tablat
 24876  007610  000C               	tblwt		*
 24877  007612  D006               	bra	u10520
 24878  007614                     u10527:
 24879  007614  CFF6 FFE9          	movff	tblptrl,fsr0l
 24880  007618  CFF7 FFEA          	movff	tblptrh,fsr0h
 24881  00761C  C007  FFEF         	movff	??_ETH_ReadBlock,indf0
 24882  007620                     u10520:
 24883  007620  4A08               	infsnz	ETH_ReadBlock@p,f,c
 24884  007622  2A09               	incf	ETH_ReadBlock@p+1,f,c
 24885  007624                     l8005:
 24886  007624  060A               	decf	ETH_ReadBlock@len,f,c
 24887  007626  A0D8               	btfss	status,0,c
 24888  007628  060B               	decf	ETH_ReadBlock@len+1,f,c
 24889  00762A  280A               	incf	ETH_ReadBlock@len,w,c
 24890  00762C  E1E2               	bnz	l8001
 24891  00762E  280B               	incf	ETH_ReadBlock@len+1,w,c
 24892  007630  E1E0               	bnz	l8001
 24893                           
 24894                           ;encX24j600_spi.c: 319: do{LATB3 = 1;} while(0);
 24895  007632  868A               	bsf	3978,3,c	;volatile
 24896                           
 24897                           ;encX24j600_spi.c: 320: ethData.error=0;
 24898  007634  0101               	movlb	1	; () banked
 24899  007636  9183               	bcf	_ethData& (0+255),0,b	;volatile
 24900                           
 24901                           ;encX24j600_spi.c: 321: return length;
 24902  007638  C005  F003         	movff	ETH_ReadBlock@length,?_ETH_ReadBlock
 24903  00763C  C006  F004         	movff	ETH_ReadBlock@length+1,?_ETH_ReadBlock+1
 24904  007640  0012               	return	
 24905  007642                     l635:
 24906                           
 24907                           ; BSR set to: 2
 24908                           ;encX24j600_spi.c: 323: else
 24909                           ;encX24j600_spi.c: 324: {
 24910                           ;encX24j600_spi.c: 325: ethData.error= 1;
 24911  007642  0101               	movlb	1	; () banked
 24912  007644  8183               	bsf	_ethData& (0+255),0,b	;volatile
 24913                           
 24914                           ;encX24j600_spi.c: 326: return 0;
 24915  007646  6A03               	clrf	?_ETH_ReadBlock,c
 24916  007648  6A04               	clrf	?_ETH_ReadBlock+1,c
 24917                           
 24918                           ; BSR set to: 1
 24919  00764A  0012               	return		;funcret
 24920  00764C                     __end_of_ETH_ReadBlock:
 24921                           	opt stack 0
 24922                           tosu	equ	0xFFF
 24923                           tosh	equ	0xFFE
 24924                           tosl	equ	0xFFD
 24925                           pclath	equ	0xFFA
 24926                           tblptru	equ	0xFF8
 24927                           tblptrh	equ	0xFF7
 24928                           tblptrl	equ	0xFF6
 24929                           tablat	equ	0xFF5
 24930                           prodh	equ	0xFF4
 24931                           prodl	equ	0xFF3
 24932                           intcon	equ	0xFF2
 24933                           intcon2	equ	0xFF1
 24934                           indf0	equ	0xFEF
 24935                           postinc0	equ	0xFEE
 24936                           fsr0h	equ	0xFEA
 24937                           fsr0l	equ	0xFE9
 24938                           wreg	equ	0xFE8
 24939                           indf1	equ	0xFE7
 24940                           postinc1	equ	0xFE6
 24941                           postdec1	equ	0xFE5
 24942                           plusw1	equ	0xFE3
 24943                           fsr1h	equ	0xFE2
 24944                           fsr1l	equ	0xFE1
 24945                           indf2	equ	0xFDF
 24946                           postinc2	equ	0xFDE
 24947                           postdec2	equ	0xFDD
 24948                           plusw2	equ	0xFDB
 24949                           fsr2h	equ	0xFDA
 24950                           fsr2l	equ	0xFD9
 24951                           status	equ	0xFD8
 24952                           
 24953 ;; *************** function _SPI_ExchangeByte *****************
 24954 ;; Defined at:
 24955 ;;		line 55 in file "../board_support_package/picdem2_net/mssp_spi_master.c"
 24956 ;; Parameters:    Size  Location     Type
 24957 ;;  v               1    wreg     unsigned char 
 24958 ;; Auto vars:     Size  Location     Type
 24959 ;;  v               1    1[COMRAM] unsigned char 
 24960 ;; Return value:  Size  Location     Type
 24961 ;;                  1    wreg      unsigned char 
 24962 ;; Registers used:
 24963 ;;		wreg, status,2
 24964 ;; Tracked objects:
 24965 ;;		On entry : 0/2
 24966 ;;		On exit  : 0/0
 24967 ;;		Unchanged: 0/0
 24968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24970 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24972 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24973 ;;Total ram usage:        1 bytes
 24974 ;; Hardware stack levels used:    1
 24975 ;; Hardware stack levels required when called:    3
 24976 ;; This function calls:
 24977 ;;		Nothing
 24978 ;; This function is called by:
 24979 ;;		_ETH_Init
 24980 ;;		_ETH_NextPacketUpdate
 24981 ;;		_ENCx24_BankselSPI
 24982 ;;		_ENCx24_Read
 24983 ;;		_ENCx24_Write
 24984 ;;		_ENCx24_BFS
 24985 ;;		_ENCx24_BFC
 24986 ;;		_ETH_Read8
 24987 ;;		_ETH_Read16
 24988 ;;		_ETH_Read32
 24989 ;;		_ETH_ReadBlock
 24990 ;;		_ETH_Write8
 24991 ;;		_ETH_Write16
 24992 ;;		_ETH_Write32
 24993 ;;		_ETH_WriteBlock
 24994 ;;		_ETH_Insert
 24995 ;;		_ETH_Set_TXRTS
 24996 ;;		_ETH_SetPktDec
 24997 ;;		_ETH_SetRXptr
 24998 ;;		_ETH_MACRead8
 24999 ;; This function uses a non-reentrant model
 25000 ;;
 25001                           
 25002                           	psect	text103
 25003  0087A4                     __ptext103:
 25004                           	opt stack 0
 25005  0087A4                     _SPI_ExchangeByte:
 25006                           	opt stack 23
 25007                           
 25008                           ; BSR set to: 1
 25009                           ;incstack = 0
 25010                           ;SPI_ExchangeByte@v stored from wreg
 25011  0087A4  6E02               	movwf	SPI_ExchangeByte@v,c
 25012                           
 25013                           ;mssp_spi_master.c: 57: SSP1BUF = v;
 25014  0087A6  C002  FFC9         	movff	SPI_ExchangeByte@v,4041	;volatile
 25015  0087AA                     l283:
 25016  0087AA  A0C7               	btfss	4039,0,c	;volatile
 25017  0087AC  D7FE               	goto	l283
 25018                           
 25019                           ;mssp_spi_master.c: 59: return SSPBUF;
 25020  0087AE  50C9               	movf	4041,w,c	;volatile
 25021  0087B0  0012               	return		;funcret
 25022  0087B2                     __end_of_SPI_ExchangeByte:
 25023                           	opt stack 0
 25024                           tosu	equ	0xFFF
 25025                           tosh	equ	0xFFE
 25026                           tosl	equ	0xFFD
 25027                           pclath	equ	0xFFA
 25028                           tblptru	equ	0xFF8
 25029                           tblptrh	equ	0xFF7
 25030                           tblptrl	equ	0xFF6
 25031                           tablat	equ	0xFF5
 25032                           prodh	equ	0xFF4
 25033                           prodl	equ	0xFF3
 25034                           intcon	equ	0xFF2
 25035                           intcon2	equ	0xFF1
 25036                           indf0	equ	0xFEF
 25037                           postinc0	equ	0xFEE
 25038                           fsr0h	equ	0xFEA
 25039                           fsr0l	equ	0xFE9
 25040                           wreg	equ	0xFE8
 25041                           indf1	equ	0xFE7
 25042                           postinc1	equ	0xFE6
 25043                           postdec1	equ	0xFE5
 25044                           plusw1	equ	0xFE3
 25045                           fsr1h	equ	0xFE2
 25046                           fsr1l	equ	0xFE1
 25047                           indf2	equ	0xFDF
 25048                           postinc2	equ	0xFDE
 25049                           postdec2	equ	0xFDD
 25050                           plusw2	equ	0xFDB
 25051                           fsr2h	equ	0xFDA
 25052                           fsr2l	equ	0xFD9
 25053                           status	equ	0xFD8
 25054                           
 25055 ;; *************** function _TCB_Reset *****************
 25056 ;; Defined at:
 25057 ;;		line 134 in file "../../TCPIP Library/source/tcpv4.c"
 25058 ;; Parameters:    Size  Location     Type
 25059 ;;  tcbPtr          2    1[COMRAM] PTR struct .
 25060 ;;		 -> ?_sprintf(2), ?_printf(2), main@str(32), STR_5(13), 
 25061 ;;		 -> STR_4(17), DEMO_TCP_EchoServer@port7TCB(55), Network_Read@debug_str(80), NULL(0), 
 25062 ;; Auto vars:     Size  Location     Type
 25063 ;;		None
 25064 ;; Return value:  Size  Location     Type
 25065 ;;                  1    wreg      void 
 25066 ;; Registers used:
 25067 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 25068 ;; Tracked objects:
 25069 ;;		On entry : 0/0
 25070 ;;		On exit  : 0/0
 25071 ;;		Unchanged: 0/0
 25072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25073 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25075 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25076 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25077 ;;Total ram usage:        4 bytes
 25078 ;; Hardware stack levels used:    1
 25079 ;; Hardware stack levels required when called:    3
 25080 ;; This function calls:
 25081 ;;		Nothing
 25082 ;; This function is called by:
 25083 ;;		_TCP_FiniteStateMachine
 25084 ;;		_TCP_SocketInit
 25085 ;; This function uses a non-reentrant model
 25086 ;;
 25087                           
 25088                           	psect	text104
 25089  005DC4                     __ptext104:
 25090                           	opt stack 0
 25091  005DC4                     _TCB_Reset:
 25092                           	opt stack 24
 25093                           
 25094                           ;tcpv4.c: 136: tcbPtr->destIP = 0;
 25095                           
 25096                           ;incstack = 0
 25097  005DC4  0E02               	movlw	2
 25098  005DC6  2402               	addwf	TCB_Reset@tcbPtr,w,c
 25099  005DC8  6E04               	movwf	??_TCB_Reset& (0+255),c
 25100  005DCA  0E00               	movlw	0
 25101  005DCC  2003               	addwfc	TCB_Reset@tcbPtr+1,w,c
 25102  005DCE  6E05               	movwf	(??_TCB_Reset+1)& (0+255),c
 25103  005DD0  C004  FFF6         	movff	??_TCB_Reset,tblptrl
 25104  005DD4  C005  FFF7         	movff	??_TCB_Reset+1,tblptrh
 25105  005DD8  0E00               	movlw	low (__smallconst shr (0+16))
 25106  005DDA  6EF8               	movwf	tblptru,c
 25107  005DDC  0E0F               	movlw	(high __ramtop+-1)
 25108  005DDE  64F7               	cpfsgt	tblptrh,c
 25109  005DE0  D009               	bra	u11157
 25110  005DE2  6AF5               	clrf	tablat,c
 25111  005DE4  000D               	tblwt		*+
 25112  005DE6  6AF5               	clrf	tablat,c
 25113  005DE8  000D               	tblwt		*+
 25114  005DEA  6AF5               	clrf	tablat,c
 25115  005DEC  000D               	tblwt		*+
 25116  005DEE  6AF5               	clrf	tablat,c
 25117  005DF0  000C               	tblwt		*
 25118  005DF2  D008               	bra	u11150
 25119  005DF4                     u11157:
 25120  005DF4  CFF6 FFE9          	movff	tblptrl,fsr0l
 25121  005DF8  CFF7 FFEA          	movff	tblptrh,fsr0h
 25122  005DFC  6AEE               	clrf	postinc0,c
 25123  005DFE  6AEE               	clrf	postinc0,c
 25124  005E00  6AEE               	clrf	postinc0,c
 25125  005E02  6AEF               	clrf	indf0,c
 25126  005E04                     u11150:
 25127                           
 25128                           ;tcpv4.c: 137: tcbPtr->destPort = 0;
 25129  005E04  0E06               	movlw	6
 25130  005E06  2402               	addwf	TCB_Reset@tcbPtr,w,c
 25131  005E08  6E04               	movwf	??_TCB_Reset& (0+255),c
 25132  005E0A  0E00               	movlw	0
 25133  005E0C  2003               	addwfc	TCB_Reset@tcbPtr+1,w,c
 25134  005E0E  6E05               	movwf	(??_TCB_Reset+1)& (0+255),c
 25135  005E10  C004  FFF6         	movff	??_TCB_Reset,tblptrl
 25136  005E14  C005  FFF7         	movff	??_TCB_Reset+1,tblptrh
 25137  005E18  0E00               	movlw	low (__smallconst shr (0+16))
 25138  005E1A  6EF8               	movwf	tblptru,c
 25139  005E1C  0E0F               	movlw	(high __ramtop+-1)
 25140  005E1E  64F7               	cpfsgt	tblptrh,c
 25141  005E20  D005               	bra	u11167
 25142  005E22  6AF5               	clrf	tablat,c
 25143  005E24  000D               	tblwt		*+
 25144  005E26  6AF5               	clrf	tablat,c
 25145  005E28  000C               	tblwt		*
 25146  005E2A  D006               	bra	u11160
 25147  005E2C                     u11167:
 25148  005E2C  CFF6 FFE9          	movff	tblptrl,fsr0l
 25149  005E30  CFF7 FFEA          	movff	tblptrh,fsr0h
 25150  005E34  6AEE               	clrf	postinc0,c
 25151  005E36  6AEF               	clrf	indf0,c
 25152  005E38                     u11160:
 25153                           
 25154                           ;tcpv4.c: 138: tcbPtr->localSeqno = 0;
 25155  005E38  0E10               	movlw	16
 25156  005E3A  2402               	addwf	TCB_Reset@tcbPtr,w,c
 25157  005E3C  6E04               	movwf	??_TCB_Reset& (0+255),c
 25158  005E3E  0E00               	movlw	0
 25159  005E40  2003               	addwfc	TCB_Reset@tcbPtr+1,w,c
 25160  005E42  6E05               	movwf	(??_TCB_Reset+1)& (0+255),c
 25161  005E44  C004  FFF6         	movff	??_TCB_Reset,tblptrl
 25162  005E48  C005  FFF7         	movff	??_TCB_Reset+1,tblptrh
 25163  005E4C  0E00               	movlw	low (__smallconst shr (0+16))
 25164  005E4E  6EF8               	movwf	tblptru,c
 25165  005E50  0E0F               	movlw	(high __ramtop+-1)
 25166  005E52  64F7               	cpfsgt	tblptrh,c
 25167  005E54  D009               	bra	u11177
 25168  005E56  6AF5               	clrf	tablat,c
 25169  005E58  000D               	tblwt		*+
 25170  005E5A  6AF5               	clrf	tablat,c
 25171  005E5C  000D               	tblwt		*+
 25172  005E5E  6AF5               	clrf	tablat,c
 25173  005E60  000D               	tblwt		*+
 25174  005E62  6AF5               	clrf	tablat,c
 25175  005E64  000C               	tblwt		*
 25176  005E66  D008               	bra	u11170
 25177  005E68                     u11177:
 25178  005E68  CFF6 FFE9          	movff	tblptrl,fsr0l
 25179  005E6C  CFF7 FFEA          	movff	tblptrh,fsr0h
 25180  005E70  6AEE               	clrf	postinc0,c
 25181  005E72  6AEE               	clrf	postinc0,c
 25182  005E74  6AEE               	clrf	postinc0,c
 25183  005E76  6AEF               	clrf	indf0,c
 25184  005E78                     u11170:
 25185                           
 25186                           ;tcpv4.c: 139: tcbPtr->localLastAck = 0;
 25187  005E78  0E14               	movlw	20
 25188  005E7A  2402               	addwf	TCB_Reset@tcbPtr,w,c
 25189  005E7C  6E04               	movwf	??_TCB_Reset& (0+255),c
 25190  005E7E  0E00               	movlw	0
 25191  005E80  2003               	addwfc	TCB_Reset@tcbPtr+1,w,c
 25192  005E82  6E05               	movwf	(??_TCB_Reset+1)& (0+255),c
 25193  005E84  C004  FFF6         	movff	??_TCB_Reset,tblptrl
 25194  005E88  C005  FFF7         	movff	??_TCB_Reset+1,tblptrh
 25195  005E8C  0E00               	movlw	low (__smallconst shr (0+16))
 25196  005E8E  6EF8               	movwf	tblptru,c
 25197  005E90  0E0F               	movlw	(high __ramtop+-1)
 25198  005E92  64F7               	cpfsgt	tblptrh,c
 25199  005E94  D009               	bra	u11187
 25200  005E96  6AF5               	clrf	tablat,c
 25201  005E98  000D               	tblwt		*+
 25202  005E9A  6AF5               	clrf	tablat,c
 25203  005E9C  000D               	tblwt		*+
 25204  005E9E  6AF5               	clrf	tablat,c
 25205  005EA0  000D               	tblwt		*+
 25206  005EA2  6AF5               	clrf	tablat,c
 25207  005EA4  000C               	tblwt		*
 25208  005EA6  D008               	bra	u11180
 25209  005EA8                     u11187:
 25210  005EA8  CFF6 FFE9          	movff	tblptrl,fsr0l
 25211  005EAC  CFF7 FFEA          	movff	tblptrh,fsr0h
 25212  005EB0  6AEE               	clrf	postinc0,c
 25213  005EB2  6AEE               	clrf	postinc0,c
 25214  005EB4  6AEE               	clrf	postinc0,c
 25215  005EB6  6AEF               	clrf	indf0,c
 25216  005EB8                     u11180:
 25217                           
 25218                           ;tcpv4.c: 140: tcbPtr->remoteSeqno = 0;
 25219  005EB8  0E08               	movlw	8
 25220  005EBA  2402               	addwf	TCB_Reset@tcbPtr,w,c
 25221  005EBC  6E04               	movwf	??_TCB_Reset& (0+255),c
 25222  005EBE  0E00               	movlw	0
 25223  005EC0  2003               	addwfc	TCB_Reset@tcbPtr+1,w,c
 25224  005EC2  6E05               	movwf	(??_TCB_Reset+1)& (0+255),c
 25225  005EC4  C004  FFF6         	movff	??_TCB_Reset,tblptrl
 25226  005EC8  C005  FFF7         	movff	??_TCB_Reset+1,tblptrh
 25227  005ECC  0E00               	movlw	low (__smallconst shr (0+16))
 25228  005ECE  6EF8               	movwf	tblptru,c
 25229  005ED0  0E0F               	movlw	(high __ramtop+-1)
 25230  005ED2  64F7               	cpfsgt	tblptrh,c
 25231  005ED4  D009               	bra	u11197
 25232  005ED6  6AF5               	clrf	tablat,c
 25233  005ED8  000D               	tblwt		*+
 25234  005EDA  6AF5               	clrf	tablat,c
 25235  005EDC  000D               	tblwt		*+
 25236  005EDE  6AF5               	clrf	tablat,c
 25237  005EE0  000D               	tblwt		*+
 25238  005EE2  6AF5               	clrf	tablat,c
 25239  005EE4  000C               	tblwt		*
 25240  005EE6  D008               	bra	u11190
 25241  005EE8                     u11197:
 25242  005EE8  CFF6 FFE9          	movff	tblptrl,fsr0l
 25243  005EEC  CFF7 FFEA          	movff	tblptrh,fsr0h
 25244  005EF0  6AEE               	clrf	postinc0,c
 25245  005EF2  6AEE               	clrf	postinc0,c
 25246  005EF4  6AEE               	clrf	postinc0,c
 25247  005EF6  6AEF               	clrf	indf0,c
 25248  005EF8                     u11190:
 25249                           
 25250                           ;tcpv4.c: 141: tcbPtr->remoteAck = 0;
 25251  005EF8  0E0C               	movlw	12
 25252  005EFA  2402               	addwf	TCB_Reset@tcbPtr,w,c
 25253  005EFC  6E04               	movwf	??_TCB_Reset& (0+255),c
 25254  005EFE  0E00               	movlw	0
 25255  005F00  2003               	addwfc	TCB_Reset@tcbPtr+1,w,c
 25256  005F02  6E05               	movwf	(??_TCB_Reset+1)& (0+255),c
 25257  005F04  C004  FFF6         	movff	??_TCB_Reset,tblptrl
 25258  005F08  C005  FFF7         	movff	??_TCB_Reset+1,tblptrh
 25259  005F0C  0E00               	movlw	low (__smallconst shr (0+16))
 25260  005F0E  6EF8               	movwf	tblptru,c
 25261  005F10  0E0F               	movlw	(high __ramtop+-1)
 25262  005F12  64F7               	cpfsgt	tblptrh,c
 25263  005F14  D009               	bra	u11207
 25264  005F16  6AF5               	clrf	tablat,c
 25265  005F18  000D               	tblwt		*+
 25266  005F1A  6AF5               	clrf	tablat,c
 25267  005F1C  000D               	tblwt		*+
 25268  005F1E  6AF5               	clrf	tablat,c
 25269  005F20  000D               	tblwt		*+
 25270  005F22  6AF5               	clrf	tablat,c
 25271  005F24  000C               	tblwt		*
 25272  005F26  D008               	bra	u11200
 25273  005F28                     u11207:
 25274  005F28  CFF6 FFE9          	movff	tblptrl,fsr0l
 25275  005F2C  CFF7 FFEA          	movff	tblptrh,fsr0h
 25276  005F30  6AEE               	clrf	postinc0,c
 25277  005F32  6AEE               	clrf	postinc0,c
 25278  005F34  6AEE               	clrf	postinc0,c
 25279  005F36  6AEF               	clrf	indf0,c
 25280  005F38                     u11200:
 25281                           
 25282                           ;tcpv4.c: 142: tcbPtr->remoteWnd = 0;
 25283  005F38  0E18               	movlw	24
 25284  005F3A  2402               	addwf	TCB_Reset@tcbPtr,w,c
 25285  005F3C  6E04               	movwf	??_TCB_Reset& (0+255),c
 25286  005F3E  0E00               	movlw	0
 25287  005F40  2003               	addwfc	TCB_Reset@tcbPtr+1,w,c
 25288  005F42  6E05               	movwf	(??_TCB_Reset+1)& (0+255),c
 25289  005F44  C004  FFF6         	movff	??_TCB_Reset,tblptrl
 25290  005F48  C005  FFF7         	movff	??_TCB_Reset+1,tblptrh
 25291  005F4C  0E00               	movlw	low (__smallconst shr (0+16))
 25292  005F4E  6EF8               	movwf	tblptru,c
 25293  005F50  0E0F               	movlw	(high __ramtop+-1)
 25294  005F52  64F7               	cpfsgt	tblptrh,c
 25295  005F54  D005               	bra	u11217
 25296  005F56  6AF5               	clrf	tablat,c
 25297  005F58  000D               	tblwt		*+
 25298  005F5A  6AF5               	clrf	tablat,c
 25299  005F5C  000C               	tblwt		*
 25300  005F5E  D006               	bra	u11210
 25301  005F60                     u11217:
 25302  005F60  CFF6 FFE9          	movff	tblptrl,fsr0l
 25303  005F64  CFF7 FFEA          	movff	tblptrh,fsr0h
 25304  005F68  6AEE               	clrf	postinc0,c
 25305  005F6A  6AEF               	clrf	indf0,c
 25306  005F6C                     u11210:
 25307                           
 25308                           ;tcpv4.c: 144: tcbPtr->timeout = 0;
 25309  005F6C  0E30               	movlw	48
 25310  005F6E  2402               	addwf	TCB_Reset@tcbPtr,w,c
 25311  005F70  6E04               	movwf	??_TCB_Reset& (0+255),c
 25312  005F72  0E00               	movlw	0
 25313  005F74  2003               	addwfc	TCB_Reset@tcbPtr+1,w,c
 25314  005F76  6E05               	movwf	(??_TCB_Reset+1)& (0+255),c
 25315  005F78  C004  FFF6         	movff	??_TCB_Reset,tblptrl
 25316  005F7C  C005  FFF7         	movff	??_TCB_Reset+1,tblptrh
 25317  005F80  0E00               	movlw	low (__smallconst shr (0+16))
 25318  005F82  6EF8               	movwf	tblptru,c
 25319  005F84  0E0F               	movlw	(high __ramtop+-1)
 25320  005F86  64F7               	cpfsgt	tblptrh,c
 25321  005F88  D005               	bra	u11227
 25322  005F8A  6AF5               	clrf	tablat,c
 25323  005F8C  000D               	tblwt		*+
 25324  005F8E  6AF5               	clrf	tablat,c
 25325  005F90  000C               	tblwt		*
 25326  005F92  D006               	bra	u11220
 25327  005F94                     u11227:
 25328  005F94  CFF6 FFE9          	movff	tblptrl,fsr0l
 25329  005F98  CFF7 FFEA          	movff	tblptrh,fsr0h
 25330  005F9C  6AEE               	clrf	postinc0,c
 25331  005F9E  6AEF               	clrf	indf0,c
 25332  005FA0                     u11220:
 25333                           
 25334                           ;tcpv4.c: 145: tcbPtr->timeoutReloadValue = 0;
 25335  005FA0  0E32               	movlw	50
 25336  005FA2  2402               	addwf	TCB_Reset@tcbPtr,w,c
 25337  005FA4  6E04               	movwf	??_TCB_Reset& (0+255),c
 25338  005FA6  0E00               	movlw	0
 25339  005FA8  2003               	addwfc	TCB_Reset@tcbPtr+1,w,c
 25340  005FAA  6E05               	movwf	(??_TCB_Reset+1)& (0+255),c
 25341  005FAC  C004  FFF6         	movff	??_TCB_Reset,tblptrl
 25342  005FB0  C005  FFF7         	movff	??_TCB_Reset+1,tblptrh
 25343  005FB4  0E00               	movlw	low (__smallconst shr (0+16))
 25344  005FB6  6EF8               	movwf	tblptru,c
 25345  005FB8  0E0F               	movlw	(high __ramtop+-1)
 25346  005FBA  64F7               	cpfsgt	tblptrh,c
 25347  005FBC  D005               	bra	u11237
 25348  005FBE  6AF5               	clrf	tablat,c
 25349  005FC0  000D               	tblwt		*+
 25350  005FC2  6AF5               	clrf	tablat,c
 25351  005FC4  000C               	tblwt		*
 25352  005FC6  D006               	bra	u11230
 25353  005FC8                     u11237:
 25354  005FC8  CFF6 FFE9          	movff	tblptrl,fsr0l
 25355  005FCC  CFF7 FFEA          	movff	tblptrh,fsr0h
 25356  005FD0  6AEE               	clrf	postinc0,c
 25357  005FD2  6AEF               	clrf	indf0,c
 25358  005FD4                     u11230:
 25359                           
 25360                           ;tcpv4.c: 146: tcbPtr->timeoutsCount = 0;
 25361  005FD4  0E34               	movlw	52
 25362  005FD6  2402               	addwf	TCB_Reset@tcbPtr,w,c
 25363  005FD8  6E04               	movwf	??_TCB_Reset& (0+255),c
 25364  005FDA  0E00               	movlw	0
 25365  005FDC  2003               	addwfc	TCB_Reset@tcbPtr+1,w,c
 25366  005FDE  6E05               	movwf	(??_TCB_Reset+1)& (0+255),c
 25367  005FE0  C004  FFF6         	movff	??_TCB_Reset,tblptrl
 25368  005FE4  C005  FFF7         	movff	??_TCB_Reset+1,tblptrh
 25369  005FE8  0E00               	movlw	low (__smallconst shr (0+16))
 25370  005FEA  6EF8               	movwf	tblptru,c
 25371  005FEC  0E0F               	movlw	(high __ramtop+-1)
 25372  005FEE  64F7               	cpfsgt	tblptrh,c
 25373  005FF0  D003               	bra	u11247
 25374  005FF2  6AF5               	clrf	tablat,c
 25375  005FF4  000C               	tblwt		*
 25376  005FF6  D005               	bra	u11240
 25377  005FF8                     u11247:
 25378  005FF8  CFF6 FFE9          	movff	tblptrl,fsr0l
 25379  005FFC  CFF7 FFEA          	movff	tblptrh,fsr0h
 25380  006000  6AEF               	clrf	indf0,c
 25381  006002                     u11240:
 25382                           
 25383                           ;tcpv4.c: 147: tcbPtr->flags = 0;
 25384  006002  0E35               	movlw	53
 25385  006004  2402               	addwf	TCB_Reset@tcbPtr,w,c
 25386  006006  6E04               	movwf	??_TCB_Reset& (0+255),c
 25387  006008  0E00               	movlw	0
 25388  00600A  2003               	addwfc	TCB_Reset@tcbPtr+1,w,c
 25389  00600C  6E05               	movwf	(??_TCB_Reset+1)& (0+255),c
 25390  00600E  C004  FFF6         	movff	??_TCB_Reset,tblptrl
 25391  006012  C005  FFF7         	movff	??_TCB_Reset+1,tblptrh
 25392  006016  0E00               	movlw	low (__smallconst shr (0+16))
 25393  006018  6EF8               	movwf	tblptru,c
 25394  00601A  0E0F               	movlw	(high __ramtop+-1)
 25395  00601C  64F7               	cpfsgt	tblptrh,c
 25396  00601E  D003               	bra	u11257
 25397  006020  6AF5               	clrf	tablat,c
 25398  006022  000C               	tblwt		*
 25399  006024  D005               	bra	u11250
 25400  006026                     u11257:
 25401  006026  CFF6 FFE9          	movff	tblptrl,fsr0l
 25402  00602A  CFF7 FFEA          	movff	tblptrh,fsr0h
 25403  00602E  6AEF               	clrf	indf0,c
 25404  006030                     u11250:
 25405                           
 25406                           ;tcpv4.c: 149: tcbPtr->localPort = 0;
 25407  006030  C002  FFF6         	movff	TCB_Reset@tcbPtr,tblptrl
 25408  006034  C003  FFF7         	movff	TCB_Reset@tcbPtr+1,tblptrh
 25409  006038  0E00               	movlw	low (__smallconst shr (0+16))
 25410  00603A  6EF8               	movwf	tblptru,c
 25411  00603C  0E0F               	movlw	(high __ramtop+-1)
 25412  00603E  64F7               	cpfsgt	tblptrh,c
 25413  006040  D005               	bra	u11267
 25414  006042  6AF5               	clrf	tablat,c
 25415  006044  000D               	tblwt		*+
 25416  006046  6AF5               	clrf	tablat,c
 25417  006048  000C               	tblwt		*
 25418  00604A  D006               	bra	u11260
 25419  00604C                     u11267:
 25420  00604C  CFF6 FFE9          	movff	tblptrl,fsr0l
 25421  006050  CFF7 FFEA          	movff	tblptrh,fsr0h
 25422  006054  6AEE               	clrf	postinc0,c
 25423  006056  6AEF               	clrf	indf0,c
 25424  006058                     u11260:
 25425                           
 25426                           ;tcpv4.c: 150: tcbPtr->socketState = SOCKET_CLOSED;
 25427  006058  0E36               	movlw	54
 25428  00605A  2402               	addwf	TCB_Reset@tcbPtr,w,c
 25429  00605C  6E04               	movwf	??_TCB_Reset& (0+255),c
 25430  00605E  0E00               	movlw	0
 25431  006060  2003               	addwfc	TCB_Reset@tcbPtr+1,w,c
 25432  006062  6E05               	movwf	(??_TCB_Reset+1)& (0+255),c
 25433  006064  C004  FFF6         	movff	??_TCB_Reset,tblptrl
 25434  006068  C005  FFF7         	movff	??_TCB_Reset+1,tblptrh
 25435  00606C  0E00               	movlw	low (__smallconst shr (0+16))
 25436  00606E  6EF8               	movwf	tblptru,c
 25437  006070  0E0F               	movlw	(high __ramtop+-1)
 25438  006072  64F7               	cpfsgt	tblptrh,c
 25439  006074  D004               	bra	u11277
 25440  006076  0E01               	movlw	1
 25441  006078  6EF5               	movwf	tablat,c
 25442  00607A  000C               	tblwt		*
 25443  00607C  D006               	bra	u11270
 25444  00607E                     u11277:
 25445  00607E  CFF6 FFE9          	movff	tblptrl,fsr0l
 25446  006082  CFF7 FFEA          	movff	tblptrh,fsr0h
 25447  006086  0E01               	movlw	1
 25448  006088  6EEF               	movwf	indf0,c
 25449  00608A                     u11270:
 25450  00608A  0012               	return		;funcret
 25451  00608C                     __end_of_TCB_Reset:
 25452                           	opt stack 0
 25453                           tosu	equ	0xFFF
 25454                           tosh	equ	0xFFE
 25455                           tosl	equ	0xFFD
 25456                           pclath	equ	0xFFA
 25457                           tblptru	equ	0xFF8
 25458                           tblptrh	equ	0xFF7
 25459                           tblptrl	equ	0xFF6
 25460                           tablat	equ	0xFF5
 25461                           prodh	equ	0xFF4
 25462                           prodl	equ	0xFF3
 25463                           intcon	equ	0xFF2
 25464                           intcon2	equ	0xFF1
 25465                           indf0	equ	0xFEF
 25466                           postinc0	equ	0xFEE
 25467                           fsr0h	equ	0xFEA
 25468                           fsr0l	equ	0xFE9
 25469                           wreg	equ	0xFE8
 25470                           indf1	equ	0xFE7
 25471                           postinc1	equ	0xFE6
 25472                           postdec1	equ	0xFE5
 25473                           plusw1	equ	0xFE3
 25474                           fsr1h	equ	0xFE2
 25475                           fsr1l	equ	0xFE1
 25476                           indf2	equ	0xFDF
 25477                           postinc2	equ	0xFDE
 25478                           postdec2	equ	0xFDD
 25479                           plusw2	equ	0xFDB
 25480                           fsr2h	equ	0xFDA
 25481                           fsr2l	equ	0xFD9
 25482                           status	equ	0xFD8
 25483                           
 25484 ;; *************** function _TCP_InsertRxBuffer *****************
 25485 ;; Defined at:
 25486 ;;		line 1361 in file "../../TCPIP Library/source/tcpv4.c"
 25487 ;; Parameters:    Size  Location     Type
 25488 ;;  tcbPtr          2    9[COMRAM] PTR struct .
 25489 ;;		 -> DEMO_TCP_EchoServer@port7TCB(55), 
 25490 ;;  data            2   11[COMRAM] PTR unsigned char 
 25491 ;;		 -> DEMO_TCP_EchoServer@rxdataPort7(20), 
 25492 ;;  data_len        2   13[COMRAM] unsigned int 
 25493 ;; Auto vars:     Size  Location     Type
 25494 ;;  ret             1    0        unsigned char 
 25495 ;; Return value:  Size  Location     Type
 25496 ;;                  1    wreg      unsigned char 
 25497 ;; Registers used:
 25498 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25499 ;; Tracked objects:
 25500 ;;		On entry : 0/0
 25501 ;;		On exit  : 0/0
 25502 ;;		Unchanged: 0/0
 25503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25504 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25505 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25507 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25508 ;;Total ram usage:        7 bytes
 25509 ;; Hardware stack levels used:    1
 25510 ;; Hardware stack levels required when called:    4
 25511 ;; This function calls:
 25512 ;;		_TCB_Check
 25513 ;; This function is called by:
 25514 ;;		_DEMO_TCP_EchoServer
 25515 ;; This function uses a non-reentrant model
 25516 ;;
 25517                           
 25518                           	psect	text105
 25519  0076DA                     __ptext105:
 25520                           	opt stack 0
 25521  0076DA                     _TCP_InsertRxBuffer:
 25522                           	opt stack 25
 25523                           
 25524                           ;tcpv4.c: 1365: if (TCB_Check(tcbPtr))
 25525                           
 25526                           ;incstack = 0
 25527  0076DA  C00A  F002         	movff	TCP_InsertRxBuffer@tcbPtr,TCB_Check@ptr
 25528  0076DE  C00B  F003         	movff	TCP_InsertRxBuffer@tcbPtr+1,TCB_Check@ptr+1
 25529  0076E2  ECF3  F03B         	call	_TCB_Check	;wreg free
 25530  0076E6  0900               	iorlw	0
 25531  0076E8  B4D8               	btfsc	status,2,c
 25532  0076EA  0012               	return	
 25533                           
 25534                           ;tcpv4.c: 1366: {
 25535                           ;tcpv4.c: 1367: if (tcbPtr->rxBufState == NO_BUFF)
 25536  0076EC  EE20 F022          	lfsr	2,34
 25537  0076F0  500A               	movf	TCP_InsertRxBuffer@tcbPtr,w,c
 25538  0076F2  26D9               	addwf	fsr2l,f,c
 25539  0076F4  500B               	movf	TCP_InsertRxBuffer@tcbPtr+1,w,c
 25540  0076F6  22DA               	addwfc	fsr2h,f,c
 25541  0076F8  50DF               	movf	indf2,w,c
 25542  0076FA  A4D8               	btfss	status,2,c
 25543  0076FC  0012               	return	
 25544                           
 25545                           ;tcpv4.c: 1368: {
 25546                           ;tcpv4.c: 1369: if (data != (0))
 25547  0076FE  500C               	movf	TCP_InsertRxBuffer@data,w,c
 25548  007700  100D               	iorwf	TCP_InsertRxBuffer@data+1,w,c
 25549  007702  B4D8               	btfsc	status,2,c
 25550  007704  0012               	return	
 25551                           
 25552                           ;tcpv4.c: 1370: {
 25553                           ;tcpv4.c: 1371: tcbPtr->rxBufferStart = data;
 25554  007706  EE20 F01E          	lfsr	2,30
 25555  00770A  500A               	movf	TCP_InsertRxBuffer@tcbPtr,w,c
 25556  00770C  26D9               	addwf	fsr2l,f,c
 25557  00770E  500B               	movf	TCP_InsertRxBuffer@tcbPtr+1,w,c
 25558  007710  22DA               	addwfc	fsr2h,f,c
 25559  007712  C00C  FFDE         	movff	TCP_InsertRxBuffer@data,postinc2
 25560  007716  C00D  FFDD         	movff	TCP_InsertRxBuffer@data+1,postdec2
 25561                           
 25562                           ;tcpv4.c: 1372: tcbPtr->rxBufferPtr = tcbPtr->rxBufferStart;
 25563  00771A  EE20 F01E          	lfsr	2,30
 25564  00771E  500A               	movf	TCP_InsertRxBuffer@tcbPtr,w,c
 25565  007720  26D9               	addwf	fsr2l,f,c
 25566  007722  500B               	movf	TCP_InsertRxBuffer@tcbPtr+1,w,c
 25567  007724  22DA               	addwfc	fsr2h,f,c
 25568  007726  EE10 F020          	lfsr	1,32
 25569  00772A  500A               	movf	TCP_InsertRxBuffer@tcbPtr,w,c
 25570  00772C  26E1               	addwf	fsr1l,f,c
 25571  00772E  500B               	movf	TCP_InsertRxBuffer@tcbPtr+1,w,c
 25572  007730  22E2               	addwfc	fsr1h,f,c
 25573  007732  CFDE FFE6          	movff	postinc2,postinc1
 25574  007736  CFDD FFE5          	movff	postdec2,postdec1
 25575                           
 25576                           ;tcpv4.c: 1373: tcbPtr->localWnd = data_len;
 25577  00773A  EE20 F01A          	lfsr	2,26
 25578  00773E  500A               	movf	TCP_InsertRxBuffer@tcbPtr,w,c
 25579  007740  26D9               	addwf	fsr2l,f,c
 25580  007742  500B               	movf	TCP_InsertRxBuffer@tcbPtr+1,w,c
 25581  007744  22DA               	addwfc	fsr2h,f,c
 25582  007746  C00E  FFDE         	movff	TCP_InsertRxBuffer@data_len,postinc2
 25583  00774A  C00F  FFDD         	movff	TCP_InsertRxBuffer@data_len+1,postdec2
 25584                           
 25585                           ;tcpv4.c: 1374: tcbPtr->rxBufState = RX_BUFF_IN_USE;
 25586  00774E  EE20 F022          	lfsr	2,34
 25587  007752  500A               	movf	TCP_InsertRxBuffer@tcbPtr,w,c
 25588  007754  26D9               	addwf	fsr2l,f,c
 25589  007756  500B               	movf	TCP_InsertRxBuffer@tcbPtr+1,w,c
 25590  007758  22DA               	addwfc	fsr2h,f,c
 25591  00775A  0E01               	movlw	1
 25592  00775C  6EDF               	movwf	indf2,c
 25593  00775E  0C01               	retlw	1
 25594  007760                     __end_of_TCP_InsertRxBuffer:
 25595                           	opt stack 0
 25596                           tosu	equ	0xFFF
 25597                           tosh	equ	0xFFE
 25598                           tosl	equ	0xFFD
 25599                           pclath	equ	0xFFA
 25600                           tblptru	equ	0xFF8
 25601                           tblptrh	equ	0xFF7
 25602                           tblptrl	equ	0xFF6
 25603                           tablat	equ	0xFF5
 25604                           prodh	equ	0xFF4
 25605                           prodl	equ	0xFF3
 25606                           intcon	equ	0xFF2
 25607                           intcon2	equ	0xFF1
 25608                           indf0	equ	0xFEF
 25609                           postinc0	equ	0xFEE
 25610                           fsr0h	equ	0xFEA
 25611                           fsr0l	equ	0xFE9
 25612                           wreg	equ	0xFE8
 25613                           indf1	equ	0xFE7
 25614                           postinc1	equ	0xFE6
 25615                           postdec1	equ	0xFE5
 25616                           plusw1	equ	0xFE3
 25617                           fsr1h	equ	0xFE2
 25618                           fsr1l	equ	0xFE1
 25619                           indf2	equ	0xFDF
 25620                           postinc2	equ	0xFDE
 25621                           postdec2	equ	0xFDD
 25622                           plusw2	equ	0xFDB
 25623                           fsr2h	equ	0xFDA
 25624                           fsr2l	equ	0xFD9
 25625                           status	equ	0xFD8
 25626                           
 25627 ;; *************** function _TCP_GetRxLength *****************
 25628 ;; Defined at:
 25629 ;;		line 1403 in file "../../TCPIP Library/source/tcpv4.c"
 25630 ;; Parameters:    Size  Location     Type
 25631 ;;  tcbPtr          2    9[COMRAM] PTR struct .
 25632 ;;		 -> DEMO_TCP_EchoServer@port7TCB(55), 
 25633 ;; Auto vars:     Size  Location     Type
 25634 ;;  ret             2   15[COMRAM] int 
 25635 ;; Return value:  Size  Location     Type
 25636 ;;                  2    9[COMRAM] int 
 25637 ;; Registers used:
 25638 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25639 ;; Tracked objects:
 25640 ;;		On entry : 0/0
 25641 ;;		On exit  : 0/0
 25642 ;;		Unchanged: 0/0
 25643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25644 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25645 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25646 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25647 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25648 ;;Total ram usage:        8 bytes
 25649 ;; Hardware stack levels used:    1
 25650 ;; Hardware stack levels required when called:    4
 25651 ;; This function calls:
 25652 ;;		_TCB_Check
 25653 ;; This function is called by:
 25654 ;;		_DEMO_TCP_EchoServer
 25655 ;; This function uses a non-reentrant model
 25656 ;;
 25657                           
 25658                           	psect	text106
 25659  007BA2                     __ptext106:
 25660                           	opt stack 0
 25661  007BA2                     _TCP_GetRxLength:
 25662                           	opt stack 25
 25663                           
 25664                           ;tcpv4.c: 1405: int16_t ret = 0;
 25665                           
 25666                           ;incstack = 0
 25667  007BA2  6A10               	clrf	TCP_GetRxLength@ret,c
 25668  007BA4  6A11               	clrf	TCP_GetRxLength@ret+1,c
 25669                           
 25670                           ;tcpv4.c: 1407: if (TCB_Check(tcbPtr))
 25671  007BA6  C00A  F002         	movff	TCP_GetRxLength@tcbPtr,TCB_Check@ptr
 25672  007BAA  C00B  F003         	movff	TCP_GetRxLength@tcbPtr+1,TCB_Check@ptr+1
 25673  007BAE  ECF3  F03B         	call	_TCB_Check	;wreg free
 25674  007BB2  0900               	iorlw	0
 25675  007BB4  E022               	bz	l9949
 25676                           
 25677                           ;tcpv4.c: 1408: {
 25678                           ;tcpv4.c: 1409: if (tcbPtr->rxBufState == RX_BUFF_IN_USE)
 25679  007BB6  EE20 F022          	lfsr	2,34
 25680  007BBA  500A               	movf	TCP_GetRxLength@tcbPtr,w,c
 25681  007BBC  26D9               	addwf	fsr2l,f,c
 25682  007BBE  500B               	movf	TCP_GetRxLength@tcbPtr+1,w,c
 25683  007BC0  22DA               	addwfc	fsr2h,f,c
 25684  007BC2  04DE               	decf	postinc2,w,c
 25685  007BC4  E11A               	bnz	l9949
 25686                           
 25687                           ;tcpv4.c: 1410: {
 25688                           ;tcpv4.c: 1411: ret = tcbPtr->rxBufferPtr - tcbPtr->rxBufferStart;
 25689  007BC6  EE20 F01E          	lfsr	2,30
 25690  007BCA  500A               	movf	TCP_GetRxLength@tcbPtr,w,c
 25691  007BCC  26D9               	addwf	fsr2l,f,c
 25692  007BCE  500B               	movf	TCP_GetRxLength@tcbPtr+1,w,c
 25693  007BD0  22DA               	addwfc	fsr2h,f,c
 25694  007BD2  CFDE F00C          	movff	postinc2,??_TCP_GetRxLength
 25695  007BD6  CFDD F00D          	movff	postdec2,??_TCP_GetRxLength+1
 25696  007BDA  EE20 F020          	lfsr	2,32
 25697  007BDE  500A               	movf	TCP_GetRxLength@tcbPtr,w,c
 25698  007BE0  26D9               	addwf	fsr2l,f,c
 25699  007BE2  500B               	movf	TCP_GetRxLength@tcbPtr+1,w,c
 25700  007BE4  22DA               	addwfc	fsr2h,f,c
 25701  007BE6  CFDE F00E          	movff	postinc2,??_TCP_GetRxLength+2
 25702  007BEA  CFDD F00F          	movff	postdec2,??_TCP_GetRxLength+3
 25703  007BEE  500C               	movf	??_TCP_GetRxLength,w,c
 25704  007BF0  5C0E               	subwf	??_TCP_GetRxLength+2,w,c
 25705  007BF2  6E10               	movwf	TCP_GetRxLength@ret,c
 25706  007BF4  500D               	movf	??_TCP_GetRxLength+1,w,c
 25707  007BF6  580F               	subwfb	??_TCP_GetRxLength+3,w,c
 25708  007BF8  6E11               	movwf	TCP_GetRxLength@ret+1,c
 25709  007BFA                     l9949:
 25710                           
 25711                           ;tcpv4.c: 1412: }
 25712                           ;tcpv4.c: 1413: }
 25713                           ;tcpv4.c: 1414: return ret;
 25714  007BFA  C010  F00A         	movff	TCP_GetRxLength@ret,?_TCP_GetRxLength
 25715  007BFE  C011  F00B         	movff	TCP_GetRxLength@ret+1,?_TCP_GetRxLength+1
 25716  007C02  0012               	return		;funcret
 25717  007C04                     __end_of_TCP_GetRxLength:
 25718                           	opt stack 0
 25719                           tosu	equ	0xFFF
 25720                           tosh	equ	0xFFE
 25721                           tosl	equ	0xFFD
 25722                           pclath	equ	0xFFA
 25723                           tblptru	equ	0xFF8
 25724                           tblptrh	equ	0xFF7
 25725                           tblptrl	equ	0xFF6
 25726                           tablat	equ	0xFF5
 25727                           prodh	equ	0xFF4
 25728                           prodl	equ	0xFF3
 25729                           intcon	equ	0xFF2
 25730                           intcon2	equ	0xFF1
 25731                           indf0	equ	0xFEF
 25732                           postinc0	equ	0xFEE
 25733                           fsr0h	equ	0xFEA
 25734                           fsr0l	equ	0xFE9
 25735                           wreg	equ	0xFE8
 25736                           indf1	equ	0xFE7
 25737                           postinc1	equ	0xFE6
 25738                           postdec1	equ	0xFE5
 25739                           plusw1	equ	0xFE3
 25740                           fsr1h	equ	0xFE2
 25741                           fsr1l	equ	0xFE1
 25742                           indf2	equ	0xFDF
 25743                           postinc2	equ	0xFDE
 25744                           postdec2	equ	0xFDD
 25745                           plusw2	equ	0xFDB
 25746                           fsr2h	equ	0xFDA
 25747                           fsr2l	equ	0xFD9
 25748                           status	equ	0xFD8
 25749                           
 25750 ;; *************** function _TCP_GetReceivedData *****************
 25751 ;; Defined at:
 25752 ;;		line 1383 in file "../../TCPIP Library/source/tcpv4.c"
 25753 ;; Parameters:    Size  Location     Type
 25754 ;;  tcbPtr          2    9[COMRAM] PTR struct .
 25755 ;;		 -> DEMO_TCP_EchoServer@port7TCB(55), 
 25756 ;; Auto vars:     Size  Location     Type
 25757 ;;  ret             2   15[COMRAM] int 
 25758 ;; Return value:  Size  Location     Type
 25759 ;;                  2    9[COMRAM] int 
 25760 ;; Registers used:
 25761 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25762 ;; Tracked objects:
 25763 ;;		On entry : F/0
 25764 ;;		On exit  : 0/0
 25765 ;;		Unchanged: 0/0
 25766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25767 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25768 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25769 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25770 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25771 ;;Total ram usage:        8 bytes
 25772 ;; Hardware stack levels used:    1
 25773 ;; Hardware stack levels required when called:    4
 25774 ;; This function calls:
 25775 ;;		_TCB_Check
 25776 ;; This function is called by:
 25777 ;;		_DEMO_TCP_EchoServer
 25778 ;; This function uses a non-reentrant model
 25779 ;;
 25780                           
 25781                           	psect	text107
 25782  007760                     __ptext107:
 25783                           	opt stack 0
 25784  007760                     _TCP_GetReceivedData:
 25785                           	opt stack 25
 25786                           
 25787                           ; BSR set to: 0
 25788                           ;tcpv4.c: 1385: int16_t ret = 0;
 25789                           
 25790                           ;incstack = 0
 25791  007760  6A10               	clrf	TCP_GetReceivedData@ret,c
 25792  007762  6A11               	clrf	TCP_GetReceivedData@ret+1,c
 25793                           
 25794                           ; BSR set to: 0
 25795                           ;tcpv4.c: 1387: if (TCB_Check(tcbPtr))
 25796  007764  C00A  F002         	movff	TCP_GetReceivedData@tcbPtr,TCB_Check@ptr
 25797  007768  C00B  F003         	movff	TCP_GetReceivedData@tcbPtr+1,TCB_Check@ptr+1
 25798  00776C  ECF3  F03B         	call	_TCB_Check	;wreg free
 25799  007770  0900               	iorlw	0
 25800  007772  E034               	bz	l9937
 25801                           
 25802                           ;tcpv4.c: 1388: {
 25803                           ;tcpv4.c: 1389: if (tcbPtr->rxBufState == RX_BUFF_IN_USE)
 25804  007774  EE20 F022          	lfsr	2,34
 25805  007778  500A               	movf	TCP_GetReceivedData@tcbPtr,w,c
 25806  00777A  26D9               	addwf	fsr2l,f,c
 25807  00777C  500B               	movf	TCP_GetReceivedData@tcbPtr+1,w,c
 25808  00777E  22DA               	addwfc	fsr2h,f,c
 25809  007780  04DE               	decf	postinc2,w,c
 25810  007782  E12C               	bnz	l9937
 25811                           
 25812                           ;tcpv4.c: 1390: {
 25813                           ;tcpv4.c: 1391: ret = tcbPtr->rxBufferPtr - tcbPtr->rxBufferStart;
 25814  007784  EE20 F01E          	lfsr	2,30
 25815  007788  500A               	movf	TCP_GetReceivedData@tcbPtr,w,c
 25816  00778A  26D9               	addwf	fsr2l,f,c
 25817  00778C  500B               	movf	TCP_GetReceivedData@tcbPtr+1,w,c
 25818  00778E  22DA               	addwfc	fsr2h,f,c
 25819  007790  CFDE F00C          	movff	postinc2,??_TCP_GetReceivedData
 25820  007794  CFDD F00D          	movff	postdec2,??_TCP_GetReceivedData+1
 25821  007798  EE20 F020          	lfsr	2,32
 25822  00779C  500A               	movf	TCP_GetReceivedData@tcbPtr,w,c
 25823  00779E  26D9               	addwf	fsr2l,f,c
 25824  0077A0  500B               	movf	TCP_GetReceivedData@tcbPtr+1,w,c
 25825  0077A2  22DA               	addwfc	fsr2h,f,c
 25826  0077A4  CFDE F00E          	movff	postinc2,??_TCP_GetReceivedData+2
 25827  0077A8  CFDD F00F          	movff	postdec2,??_TCP_GetReceivedData+3
 25828  0077AC  500C               	movf	??_TCP_GetReceivedData,w,c
 25829  0077AE  5C0E               	subwf	??_TCP_GetReceivedData+2,w,c
 25830  0077B0  6E10               	movwf	TCP_GetReceivedData@ret,c
 25831  0077B2  500D               	movf	??_TCP_GetReceivedData+1,w,c
 25832  0077B4  580F               	subwfb	??_TCP_GetReceivedData+3,w,c
 25833  0077B6  6E11               	movwf	TCP_GetReceivedData@ret+1,c
 25834                           
 25835                           ;tcpv4.c: 1393: if (ret != 0)
 25836  0077B8  1010               	iorwf	TCP_GetReceivedData@ret,w,c
 25837  0077BA  E010               	bz	l9937
 25838                           
 25839                           ;tcpv4.c: 1394: {
 25840                           ;tcpv4.c: 1395: tcbPtr->localWnd = 0;
 25841  0077BC  EE20 F01A          	lfsr	2,26
 25842  0077C0  500A               	movf	TCP_GetReceivedData@tcbPtr,w,c
 25843  0077C2  26D9               	addwf	fsr2l,f,c
 25844  0077C4  500B               	movf	TCP_GetReceivedData@tcbPtr+1,w,c
 25845  0077C6  22DA               	addwfc	fsr2h,f,c
 25846  0077C8  6ADE               	clrf	postinc2,c
 25847  0077CA  6ADD               	clrf	postdec2,c
 25848                           
 25849                           ;tcpv4.c: 1396: tcbPtr->rxBufState = NO_BUFF;
 25850  0077CC  EE20 F022          	lfsr	2,34
 25851  0077D0  500A               	movf	TCP_GetReceivedData@tcbPtr,w,c
 25852  0077D2  26D9               	addwf	fsr2l,f,c
 25853  0077D4  500B               	movf	TCP_GetReceivedData@tcbPtr+1,w,c
 25854  0077D6  22DA               	addwfc	fsr2h,f,c
 25855  0077D8  0E00               	movlw	0
 25856  0077DA  6ADF               	clrf	indf2,c
 25857  0077DC                     l9937:
 25858                           
 25859                           ;tcpv4.c: 1397: }
 25860                           ;tcpv4.c: 1398: }
 25861                           ;tcpv4.c: 1399: }
 25862                           ;tcpv4.c: 1400: return ret;
 25863  0077DC  C010  F00A         	movff	TCP_GetReceivedData@ret,?_TCP_GetReceivedData
 25864  0077E0  C011  F00B         	movff	TCP_GetReceivedData@ret+1,?_TCP_GetReceivedData+1
 25865  0077E4  0012               	return		;funcret
 25866  0077E6                     __end_of_TCP_GetReceivedData:
 25867                           	opt stack 0
 25868                           tosu	equ	0xFFF
 25869                           tosh	equ	0xFFE
 25870                           tosl	equ	0xFFD
 25871                           pclath	equ	0xFFA
 25872                           tblptru	equ	0xFF8
 25873                           tblptrh	equ	0xFF7
 25874                           tblptrl	equ	0xFF6
 25875                           tablat	equ	0xFF5
 25876                           prodh	equ	0xFF4
 25877                           prodl	equ	0xFF3
 25878                           intcon	equ	0xFF2
 25879                           intcon2	equ	0xFF1
 25880                           indf0	equ	0xFEF
 25881                           postinc0	equ	0xFEE
 25882                           fsr0h	equ	0xFEA
 25883                           fsr0l	equ	0xFE9
 25884                           wreg	equ	0xFE8
 25885                           indf1	equ	0xFE7
 25886                           postinc1	equ	0xFE6
 25887                           postdec1	equ	0xFE5
 25888                           plusw1	equ	0xFE3
 25889                           fsr1h	equ	0xFE2
 25890                           fsr1l	equ	0xFE1
 25891                           indf2	equ	0xFDF
 25892                           postinc2	equ	0xFDE
 25893                           postdec2	equ	0xFDD
 25894                           plusw2	equ	0xFDB
 25895                           fsr2h	equ	0xFDA
 25896                           fsr2l	equ	0xFD9
 25897                           status	equ	0xFD8
 25898                           
 25899 ;; *************** function _TCP_Bind *****************
 25900 ;; Defined at:
 25901 ;;		line 1235 in file "../../TCPIP Library/source/tcpv4.c"
 25902 ;; Parameters:    Size  Location     Type
 25903 ;;  tcbPtr          2    9[COMRAM] PTR struct .
 25904 ;;		 -> DEMO_TCP_EchoServer@port7TCB(55), 
 25905 ;;  port            2   11[COMRAM] unsigned int 
 25906 ;; Auto vars:     Size  Location     Type
 25907 ;;  ret             1    0        unsigned char 
 25908 ;; Return value:  Size  Location     Type
 25909 ;;                  1    wreg      unsigned char 
 25910 ;; Registers used:
 25911 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25912 ;; Tracked objects:
 25913 ;;		On entry : D/0
 25914 ;;		On exit  : 0/0
 25915 ;;		Unchanged: 0/0
 25916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25917 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25918 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25920 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25921 ;;Total ram usage:        5 bytes
 25922 ;; Hardware stack levels used:    1
 25923 ;; Hardware stack levels required when called:    4
 25924 ;; This function calls:
 25925 ;;		_TCB_Check
 25926 ;; This function is called by:
 25927 ;;		_DEMO_TCP_EchoServer
 25928 ;; This function uses a non-reentrant model
 25929 ;;
 25930                           
 25931                           	psect	text108
 25932  00856E                     __ptext108:
 25933                           	opt stack 0
 25934  00856E                     _TCP_Bind:
 25935                           	opt stack 25
 25936                           
 25937                           ;tcpv4.c: 1239: ;
 25938                           ;tcpv4.c: 1241: if (TCB_Check(tcbPtr))
 25939                           
 25940                           ;incstack = 0
 25941  00856E  C00A  F002         	movff	TCP_Bind@tcbPtr,TCB_Check@ptr
 25942  008572  C00B  F003         	movff	TCP_Bind@tcbPtr+1,TCB_Check@ptr+1
 25943  008576  ECF3  F03B         	call	_TCB_Check	;wreg free
 25944  00857A  0900               	iorlw	0
 25945  00857C  B4D8               	btfsc	status,2,c
 25946  00857E  0012               	return	
 25947                           
 25948                           ;tcpv4.c: 1242: {
 25949                           ;tcpv4.c: 1243: tcbPtr->localPort = port;
 25950  008580  C00A  FFD9         	movff	TCP_Bind@tcbPtr,fsr2l
 25951  008584  C00B  FFDA         	movff	TCP_Bind@tcbPtr+1,fsr2h
 25952  008588  C00C  FFDE         	movff	TCP_Bind@port,postinc2
 25953  00858C  C00D  FFDD         	movff	TCP_Bind@port+1,postdec2
 25954  008590  0012               	return		;funcret
 25955  008592                     __end_of_TCP_Bind:
 25956                           	opt stack 0
 25957                           tosu	equ	0xFFF
 25958                           tosh	equ	0xFFE
 25959                           tosl	equ	0xFFD
 25960                           pclath	equ	0xFFA
 25961                           tblptru	equ	0xFF8
 25962                           tblptrh	equ	0xFF7
 25963                           tblptrl	equ	0xFF6
 25964                           tablat	equ	0xFF5
 25965                           prodh	equ	0xFF4
 25966                           prodl	equ	0xFF3
 25967                           intcon	equ	0xFF2
 25968                           intcon2	equ	0xFF1
 25969                           indf0	equ	0xFEF
 25970                           postinc0	equ	0xFEE
 25971                           fsr0h	equ	0xFEA
 25972                           fsr0l	equ	0xFE9
 25973                           wreg	equ	0xFE8
 25974                           indf1	equ	0xFE7
 25975                           postinc1	equ	0xFE6
 25976                           postdec1	equ	0xFE5
 25977                           plusw1	equ	0xFE3
 25978                           fsr1h	equ	0xFE2
 25979                           fsr1l	equ	0xFE1
 25980                           indf2	equ	0xFDF
 25981                           postinc2	equ	0xFDE
 25982                           postdec2	equ	0xFDD
 25983                           plusw2	equ	0xFDB
 25984                           fsr2h	equ	0xFDA
 25985                           fsr2l	equ	0xFD9
 25986                           status	equ	0xFD8
 25987                           
 25988 ;; *************** function _TCB_Check *****************
 25989 ;; Defined at:
 25990 ;;		line 162 in file "../../TCPIP Library/source/tcpv4.c"
 25991 ;; Parameters:    Size  Location     Type
 25992 ;;  ptr             2    1[COMRAM] PTR struct .
 25993 ;;		 -> DEMO_TCP_EchoServer@port7TCB(55), 
 25994 ;; Auto vars:     Size  Location     Type
 25995 ;;  tcbPtr          2    7[COMRAM] PTR struct .
 25996 ;;		 -> ?_sprintf(2), ?_printf(2), main@str(32), STR_5(13), 
 25997 ;;		 -> STR_4(17), DEMO_TCP_EchoServer@port7TCB(55), Network_Read@debug_str(80), NULL(0), 
 25998 ;;  count           1    6[COMRAM] char 
 25999 ;;  ret             1    5[COMRAM] unsigned char 
 26000 ;; Return value:  Size  Location     Type
 26001 ;;                  1    wreg      unsigned char 
 26002 ;; Registers used:
 26003 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 26004 ;; Tracked objects:
 26005 ;;		On entry : 0/0
 26006 ;;		On exit  : 0/0
 26007 ;;		Unchanged: 0/0
 26008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26009 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26010 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26011 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26012 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26013 ;;Total ram usage:        8 bytes
 26014 ;; Hardware stack levels used:    1
 26015 ;; Hardware stack levels required when called:    3
 26016 ;; This function calls:
 26017 ;;		Nothing
 26018 ;; This function is called by:
 26019 ;;		_TCP_SocketInit
 26020 ;;		_TCP_SocketPoll
 26021 ;;		_TCP_Bind
 26022 ;;		_TCP_Listen
 26023 ;;		_TCP_SendDone
 26024 ;;		_TCP_InsertRxBuffer
 26025 ;;		_TCP_GetReceivedData
 26026 ;;		_TCP_GetRxLength
 26027 ;; This function uses a non-reentrant model
 26028 ;;
 26029                           
 26030                           	psect	text109
 26031  0077E6                     __ptext109:
 26032                           	opt stack 0
 26033  0077E6                     _TCB_Check:
 26034                           	opt stack 25
 26035                           
 26036                           ;tcpv4.c: 164: tcpTCB_t *tcbPtr;
 26037                           ;tcpv4.c: 165: bool ret = 0;
 26038                           
 26039                           ;incstack = 0
 26040  0077E6  6A06               	clrf	TCB_Check@ret,c
 26041                           
 26042                           ;tcpv4.c: 166: socklistsize_t count = 0;
 26043  0077E8  6A07               	clrf	TCB_Check@count,c
 26044                           
 26045                           ;tcpv4.c: 168: if((tcbList != (0)) && (ptr != (0)))
 26046  0077EA  0101               	movlb	1	; () banked
 26047  0077EC  51A2               	movf	_tcbList& (0+255),w,b
 26048  0077EE  11A3               	iorwf	(_tcbList+1)& (0+255),w,b
 26049  0077F0  E03B               	bz	l9077
 26050                           
 26051                           ; BSR set to: 1
 26052  0077F2  5002               	movf	TCB_Check@ptr,w,c
 26053  0077F4  1003               	iorwf	TCB_Check@ptr+1,w,c
 26054  0077F6  E038               	bz	l9077
 26055                           
 26056                           ; BSR set to: 1
 26057                           ;tcpv4.c: 169: {
 26058                           ;tcpv4.c: 171: tcbPtr = tcbList;
 26059  0077F8  C1A2  F008         	movff	_tcbList,TCB_Check@tcbPtr
 26060  0077FC  C1A3  F009         	movff	_tcbList+1,TCB_Check@tcbPtr+1
 26061                           
 26062                           ;tcpv4.c: 172: while((tcbPtr != (0)) && (count < tcbListSize))
 26063  007800  D028               	goto	l9073
 26064  007802                     l9063:
 26065                           
 26066                           ; BSR set to: 1
 26067                           ;tcpv4.c: 173: {
 26068                           ;tcpv4.c: 174: if (tcbPtr == ptr)
 26069  007802  5002               	movf	TCB_Check@ptr,w,c
 26070  007804  1808               	xorwf	TCB_Check@tcbPtr,w,c
 26071  007806  E106               	bnz	l9069
 26072  007808  5003               	movf	TCB_Check@ptr+1,w,c
 26073  00780A  1809               	xorwf	TCB_Check@tcbPtr+1,w,c
 26074  00780C  E103               	bnz	l9069
 26075                           
 26076                           ; BSR set to: 1
 26077                           ;tcpv4.c: 175: {
 26078                           ;tcpv4.c: 176: ret = 1;
 26079  00780E  0E01               	movlw	1
 26080  007810  6E06               	movwf	TCB_Check@ret,c
 26081                           
 26082                           ;tcpv4.c: 177: break;
 26083  007812  D02A               	goto	l9077
 26084  007814                     l9069:
 26085                           
 26086                           ; BSR set to: 1
 26087                           ;tcpv4.c: 179: else
 26088                           ;tcpv4.c: 180: {
 26089                           ;tcpv4.c: 181: tcbPtr = tcbPtr->nextTCB;
 26090  007814  0E2C               	movlw	44
 26091  007816  2408               	addwf	TCB_Check@tcbPtr,w,c
 26092  007818  6E04               	movwf	??_TCB_Check& (0+255),c
 26093  00781A  0E00               	movlw	0
 26094  00781C  2009               	addwfc	TCB_Check@tcbPtr+1,w,c
 26095  00781E  6E05               	movwf	(??_TCB_Check+1)& (0+255),c
 26096  007820  C004  FFF6         	movff	??_TCB_Check,tblptrl
 26097  007824  C005  FFF7         	movff	??_TCB_Check+1,tblptrh
 26098  007828  0E00               	movlw	low (__smallconst shr (0+16))
 26099  00782A  6EF8               	movwf	tblptru,c
 26100  00782C  0E0F               	movlw	(high __ramtop+-1)
 26101  00782E  64F7               	cpfsgt	tblptrh,c
 26102  007830  D007               	bra	u13917
 26103  007832  0009               	tblrd		*+
 26104  007834  CFF5 F008          	movff	tablat,TCB_Check@tcbPtr
 26105  007838  0009               	tblrd		*+
 26106  00783A  CFF5 F009          	movff	tablat,TCB_Check@tcbPtr+1
 26107  00783E  D008               	bra	u13910
 26108  007840                     u13917:
 26109  007840  CFF6 FFE9          	movff	tblptrl,fsr0l
 26110  007844  CFF7 FFEA          	movff	tblptrh,fsr0h
 26111  007848  CFEE F008          	movff	postinc0,TCB_Check@tcbPtr
 26112  00784C  CFEE F009          	movff	postinc0,TCB_Check@tcbPtr+1
 26113  007850                     u13910:
 26114                           
 26115                           ;tcpv4.c: 182: count ++;
 26116  007850  2A07               	incf	TCB_Check@count,f,c
 26117  007852                     l9073:
 26118  007852  5008               	movf	TCB_Check@tcbPtr,w,c
 26119  007854  1009               	iorwf	TCB_Check@tcbPtr+1,w,c
 26120  007856  E008               	bz	l9077
 26121  007858  5007               	movf	TCB_Check@count,w,c
 26122  00785A  0A80               	xorlw	128
 26123  00785C  6E04               	movwf	??_TCB_Check& (0+255),c
 26124  00785E  0101               	movlb	1	; () banked
 26125  007860  51A7               	movf	_tcbListSize& (0+255),w,b
 26126  007862  0A80               	xorlw	128
 26127  007864  5C04               	subwf	??_TCB_Check& (0+255),w,c
 26128  007866  E3CD               	bnc	l9063
 26129  007868                     l9077:
 26130                           
 26131                           ;tcpv4.c: 183: }
 26132                           ;tcpv4.c: 184: }
 26133                           ;tcpv4.c: 185: }
 26134                           ;tcpv4.c: 186: return ret;
 26135  007868  5006               	movf	TCB_Check@ret,w,c
 26136  00786A  0012               	return		;funcret
 26137  00786C                     __end_of_TCB_Check:
 26138                           	opt stack 0
 26139                           tosu	equ	0xFFF
 26140                           tosh	equ	0xFFE
 26141                           tosl	equ	0xFFD
 26142                           pclath	equ	0xFFA
 26143                           tblptru	equ	0xFF8
 26144                           tblptrh	equ	0xFF7
 26145                           tblptrl	equ	0xFF6
 26146                           tablat	equ	0xFF5
 26147                           prodh	equ	0xFF4
 26148                           prodl	equ	0xFF3
 26149                           intcon	equ	0xFF2
 26150                           intcon2	equ	0xFF1
 26151                           indf0	equ	0xFEF
 26152                           postinc0	equ	0xFEE
 26153                           fsr0h	equ	0xFEA
 26154                           fsr0l	equ	0xFE9
 26155                           wreg	equ	0xFE8
 26156                           indf1	equ	0xFE7
 26157                           postinc1	equ	0xFE6
 26158                           postdec1	equ	0xFE5
 26159                           plusw1	equ	0xFE3
 26160                           fsr1h	equ	0xFE2
 26161                           fsr1l	equ	0xFE1
 26162                           indf2	equ	0xFDF
 26163                           postinc2	equ	0xFDE
 26164                           postdec2	equ	0xFDD
 26165                           plusw2	equ	0xFDB
 26166                           fsr2h	equ	0xFDA
 26167                           fsr2l	equ	0xFD9
 26168                           status	equ	0xFD8
 26169                           
 26170 ;; *************** function _low_isr *****************
 26171 ;; Defined at:
 26172 ;;		line 62 in file "main.c"
 26173 ;; Parameters:    Size  Location     Type
 26174 ;;		None
 26175 ;; Auto vars:     Size  Location     Type
 26176 ;;		None
 26177 ;; Return value:  Size  Location     Type
 26178 ;;                  1    wreg      void 
 26179 ;; Registers used:
 26180 ;;		None
 26181 ;; Tracked objects:
 26182 ;;		On entry : 0/0
 26183 ;;		On exit  : 0/0
 26184 ;;		Unchanged: 0/0
 26185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26188 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26189 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26190 ;;Total ram usage:        1 bytes
 26191 ;; Hardware stack levels used:    1
 26192 ;; Hardware stack levels required when called:    2
 26193 ;; This function calls:
 26194 ;;		Nothing
 26195 ;; This function is called by:
 26196 ;;		Interrupt level 1
 26197 ;; This function uses a non-reentrant model
 26198 ;;
 26199                           
 26200                           	psect	intcodelo
 26201  000018                     __pintcodelo:
 26202                           	opt stack 0
 26203  000018                     _low_isr:
 26204                           	opt stack 15
 26205                           
 26206                           ;incstack = 0
 26207  000018  805E               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 26208  00001A  CFE0 F001          	movff	bsr,??_low_isr
 26209                           
 26210                           ;main.c: 67: __nop();
 26211  00001E  F000               	nop	
 26212  000020  C001  FFE0         	movff	??_low_isr,bsr
 26213  000024  905E               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 26214  000026  0010               	retfie	
 26215  000028                     __end_of_low_isr:
 26216                           	opt stack 0
 26217                           tosu	equ	0xFFF
 26218                           tosh	equ	0xFFE
 26219                           tosl	equ	0xFFD
 26220                           pclath	equ	0xFFA
 26221                           tblptru	equ	0xFF8
 26222                           tblptrh	equ	0xFF7
 26223                           tblptrl	equ	0xFF6
 26224                           tablat	equ	0xFF5
 26225                           prodh	equ	0xFF4
 26226                           prodl	equ	0xFF3
 26227                           intcon	equ	0xFF2
 26228                           intcon2	equ	0xFF1
 26229                           indf0	equ	0xFEF
 26230                           postinc0	equ	0xFEE
 26231                           fsr0h	equ	0xFEA
 26232                           fsr0l	equ	0xFE9
 26233                           wreg	equ	0xFE8
 26234                           indf1	equ	0xFE7
 26235                           postinc1	equ	0xFE6
 26236                           postdec1	equ	0xFE5
 26237                           plusw1	equ	0xFE3
 26238                           fsr1h	equ	0xFE2
 26239                           fsr1l	equ	0xFE1
 26240                           bsr	equ	0xFE0
 26241                           indf2	equ	0xFDF
 26242                           postinc2	equ	0xFDE
 26243                           postdec2	equ	0xFDD
 26244                           plusw2	equ	0xFDB
 26245                           fsr2h	equ	0xFDA
 26246                           fsr2l	equ	0xFD9
 26247                           status	equ	0xFD8
 26248                           
 26249 ;; *************** function _high_isr *****************
 26250 ;; Defined at:
 26251 ;;		line 57 in file "main.c"
 26252 ;; Parameters:    Size  Location     Type
 26253 ;;		None
 26254 ;; Auto vars:     Size  Location     Type
 26255 ;;		None
 26256 ;; Return value:  Size  Location     Type
 26257 ;;                  1    wreg      void 
 26258 ;; Registers used:
 26259 ;;		wreg, status,2, status,0, cstack
 26260 ;; Tracked objects:
 26261 ;;		On entry : 0/0
 26262 ;;		On exit  : 0/0
 26263 ;;		Unchanged: 0/0
 26264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26269 ;;Total ram usage:        0 bytes
 26270 ;; Hardware stack levels used:    1
 26271 ;; Hardware stack levels required when called:    1
 26272 ;; This function calls:
 26273 ;;		_rtcc_handler
 26274 ;; This function is called by:
 26275 ;;		Interrupt level 2
 26276 ;; This function uses a non-reentrant model
 26277 ;;
 26278                           
 26279                           	psect	intcode
 26280  000008                     __pintcode:
 26281                           	opt stack 0
 26282  000008                     _high_isr:
 26283                           	opt stack 15
 26284                           
 26285                           ;incstack = 0
 26286  000008  825E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 26287  00000A  EFFB  F043         	goto	int_func
 26288                           tosu	equ	0xFFF
 26289                           tosh	equ	0xFFE
 26290                           tosl	equ	0xFFD
 26291                           pclath	equ	0xFFA
 26292                           tblptru	equ	0xFF8
 26293                           tblptrh	equ	0xFF7
 26294                           tblptrl	equ	0xFF6
 26295                           tablat	equ	0xFF5
 26296                           prodh	equ	0xFF4
 26297                           prodl	equ	0xFF3
 26298                           intcon	equ	0xFF2
 26299                           intcon2	equ	0xFF1
 26300                           indf0	equ	0xFEF
 26301                           postinc0	equ	0xFEE
 26302                           fsr0h	equ	0xFEA
 26303                           fsr0l	equ	0xFE9
 26304                           wreg	equ	0xFE8
 26305                           indf1	equ	0xFE7
 26306                           postinc1	equ	0xFE6
 26307                           postdec1	equ	0xFE5
 26308                           plusw1	equ	0xFE3
 26309                           fsr1h	equ	0xFE2
 26310                           fsr1l	equ	0xFE1
 26311                           bsr	equ	0xFE0
 26312                           indf2	equ	0xFDF
 26313                           postinc2	equ	0xFDE
 26314                           postdec2	equ	0xFDD
 26315                           plusw2	equ	0xFDB
 26316                           fsr2h	equ	0xFDA
 26317                           fsr2l	equ	0xFD9
 26318                           status	equ	0xFD8
 26319                           
 26320                           	psect	intcode_body
 26321  0087F6                     __pintcode_body:
 26322                           	opt stack 15
 26323  0087F6                     int_func:
 26324                           	opt stack 15
 26325                           
 26326                           ;main.c: 59: rtcc_handler();
 26327  0087F6  EC7E  F042         	call	_rtcc_handler	;wreg free
 26328  0087FA  925E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 26329  0087FC  0011               	retfie		f
 26330  0087FE                     __end_of_high_isr:
 26331                           	opt stack 0
 26332                           tosu	equ	0xFFF
 26333                           tosh	equ	0xFFE
 26334                           tosl	equ	0xFFD
 26335                           pclath	equ	0xFFA
 26336                           tblptru	equ	0xFF8
 26337                           tblptrh	equ	0xFF7
 26338                           tblptrl	equ	0xFF6
 26339                           tablat	equ	0xFF5
 26340                           prodh	equ	0xFF4
 26341                           prodl	equ	0xFF3
 26342                           intcon	equ	0xFF2
 26343                           intcon2	equ	0xFF1
 26344                           indf0	equ	0xFEF
 26345                           postinc0	equ	0xFEE
 26346                           fsr0h	equ	0xFEA
 26347                           fsr0l	equ	0xFE9
 26348                           wreg	equ	0xFE8
 26349                           indf1	equ	0xFE7
 26350                           postinc1	equ	0xFE6
 26351                           postdec1	equ	0xFE5
 26352                           plusw1	equ	0xFE3
 26353                           fsr1h	equ	0xFE2
 26354                           fsr1l	equ	0xFE1
 26355                           bsr	equ	0xFE0
 26356                           indf2	equ	0xFDF
 26357                           postinc2	equ	0xFDE
 26358                           postdec2	equ	0xFDD
 26359                           plusw2	equ	0xFDB
 26360                           fsr2h	equ	0xFDA
 26361                           fsr2l	equ	0xFD9
 26362                           status	equ	0xFD8
 26363                           
 26364 ;; *************** function _rtcc_handler *****************
 26365 ;; Defined at:
 26366 ;;		line 122 in file "../board_support_package/picdem2_net/rtcc.c"
 26367 ;; Parameters:    Size  Location     Type
 26368 ;;		None
 26369 ;; Auto vars:     Size  Location     Type
 26370 ;;		None
 26371 ;; Return value:  Size  Location     Type
 26372 ;;                  1    wreg      void 
 26373 ;; Registers used:
 26374 ;;		wreg, status,2, status,0
 26375 ;; Tracked objects:
 26376 ;;		On entry : 0/0
 26377 ;;		On exit  : 0/0
 26378 ;;		Unchanged: 0/0
 26379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26384 ;;Total ram usage:        0 bytes
 26385 ;; Hardware stack levels used:    1
 26386 ;; This function calls:
 26387 ;;		Nothing
 26388 ;; This function is called by:
 26389 ;;		_high_isr
 26390 ;; This function uses a non-reentrant model
 26391 ;;
 26392                           
 26393                           	psect	text112
 26394  0084FC                     __ptext112:
 26395                           	opt stack 0
 26396  0084FC                     _rtcc_handler:
 26397                           	opt stack 15
 26398                           
 26399                           ;rtcc.c: 124: if(TMR1IE && TMR1IF)
 26400                           
 26401                           ;incstack = 0
 26402  0084FC  B09D               	btfsc	3997,0,c	;volatile
 26403  0084FE  A09E               	btfss	3998,0,c	;volatile
 26404  008500  0012               	return	
 26405                           
 26406                           ;rtcc.c: 125: {
 26407                           ;rtcc.c: 126: TMR1IF = 0;
 26408  008502  909E               	bcf	3998,0,c	;volatile
 26409                           
 26410                           ;rtcc.c: 127: TMR1ON = 0;
 26411  008504  90CD               	bcf	4045,0,c	;volatile
 26412                           
 26413                           ;rtcc.c: 128: TMR1 = 32768UL;
 26414  008506  0E80               	movlw	128
 26415  008508  6ECF               	movwf	4047,c	;volatile
 26416  00850A  6ACE               	clrf	4046,c	;volatile
 26417                           
 26418                           ;rtcc.c: 129: TMR1ON = 1;
 26419  00850C  80CD               	bsf	4045,0,c	;volatile
 26420                           
 26421                           ;rtcc.c: 130: deviceTime++;
 26422  00850E  0102               	movlb	2	; () banked
 26423  008510  2BCC               	incf	_deviceTime& (0+255),f,b	;volatile
 26424  008512  0E00               	movlw	0
 26425  008514  23CD               	addwfc	(_deviceTime+1)& (0+255),f,b	;volatile
 26426  008516  23CE               	addwfc	(_deviceTime+2)& (0+255),f,b	;volatile
 26427  008518  23CF               	addwfc	(_deviceTime+3)& (0+255),f,b	;volatile
 26428                           
 26429                           ; BSR set to: 2
 26430                           ;rtcc.c: 131: localTime++;
 26431  00851A  2BD0               	incf	_localTime& (0+255),f,b	;volatile
 26432  00851C  23D1               	addwfc	(_localTime+1)& (0+255),f,b	;volatile
 26433  00851E  23D2               	addwfc	(_localTime+2)& (0+255),f,b	;volatile
 26434  008520  23D3               	addwfc	(_localTime+3)& (0+255),f,b	;volatile
 26435  008522  0C00               	retlw	0	;funcret
 26436  008524                     __end_of_rtcc_handler:
 26437                           	opt stack 0
 26438                           tosu	equ	0xFFF
 26439                           tosh	equ	0xFFE
 26440                           tosl	equ	0xFFD
 26441                           pclath	equ	0xFFA
 26442                           tblptru	equ	0xFF8
 26443                           tblptrh	equ	0xFF7
 26444                           tblptrl	equ	0xFF6
 26445                           tablat	equ	0xFF5
 26446                           prodh	equ	0xFF4
 26447                           prodl	equ	0xFF3
 26448                           intcon	equ	0xFF2
 26449                           intcon2	equ	0xFF1
 26450                           indf0	equ	0xFEF
 26451                           postinc0	equ	0xFEE
 26452                           fsr0h	equ	0xFEA
 26453                           fsr0l	equ	0xFE9
 26454                           wreg	equ	0xFE8
 26455                           indf1	equ	0xFE7
 26456                           postinc1	equ	0xFE6
 26457                           postdec1	equ	0xFE5
 26458                           plusw1	equ	0xFE3
 26459                           fsr1h	equ	0xFE2
 26460                           fsr1l	equ	0xFE1
 26461                           bsr	equ	0xFE0
 26462                           indf2	equ	0xFDF
 26463                           postinc2	equ	0xFDE
 26464                           postdec2	equ	0xFDD
 26465                           plusw2	equ	0xFDB
 26466                           fsr2h	equ	0xFDA
 26467                           fsr2l	equ	0xFD9
 26468                           status	equ	0xFD8
 26469                           tosu	equ	0xFFF
 26470                           tosh	equ	0xFFE
 26471                           tosl	equ	0xFFD
 26472                           pclath	equ	0xFFA
 26473                           tblptru	equ	0xFF8
 26474                           tblptrh	equ	0xFF7
 26475                           tblptrl	equ	0xFF6
 26476                           tablat	equ	0xFF5
 26477                           prodh	equ	0xFF4
 26478                           prodl	equ	0xFF3
 26479                           intcon	equ	0xFF2
 26480                           intcon2	equ	0xFF1
 26481                           indf0	equ	0xFEF
 26482                           postinc0	equ	0xFEE
 26483                           fsr0h	equ	0xFEA
 26484                           fsr0l	equ	0xFE9
 26485                           wreg	equ	0xFE8
 26486                           indf1	equ	0xFE7
 26487                           postinc1	equ	0xFE6
 26488                           postdec1	equ	0xFE5
 26489                           plusw1	equ	0xFE3
 26490                           fsr1h	equ	0xFE2
 26491                           fsr1l	equ	0xFE1
 26492                           bsr	equ	0xFE0
 26493                           indf2	equ	0xFDF
 26494                           postinc2	equ	0xFDE
 26495                           postdec2	equ	0xFDD
 26496                           plusw2	equ	0xFDB
 26497                           fsr2h	equ	0xFDA
 26498                           fsr2l	equ	0xFD9
 26499                           status	equ	0xFD8
 26500                           
 26501                           	psect	text113
 26502  000000                     __ptext113:
 26503                           	opt stack 0
 26504                           tosu	equ	0xFFF
 26505                           tosh	equ	0xFFE
 26506                           tosl	equ	0xFFD
 26507                           pclath	equ	0xFFA
 26508                           tblptru	equ	0xFF8
 26509                           tblptrh	equ	0xFF7
 26510                           tblptrl	equ	0xFF6
 26511                           tablat	equ	0xFF5
 26512                           prodh	equ	0xFF4
 26513                           prodl	equ	0xFF3
 26514                           intcon	equ	0xFF2
 26515                           intcon2	equ	0xFF1
 26516                           indf0	equ	0xFEF
 26517                           postinc0	equ	0xFEE
 26518                           fsr0h	equ	0xFEA
 26519                           fsr0l	equ	0xFE9
 26520                           wreg	equ	0xFE8
 26521                           indf1	equ	0xFE7
 26522                           postinc1	equ	0xFE6
 26523                           postdec1	equ	0xFE5
 26524                           plusw1	equ	0xFE3
 26525                           fsr1h	equ	0xFE2
 26526                           fsr1l	equ	0xFE1
 26527                           bsr	equ	0xFE0
 26528                           indf2	equ	0xFDF
 26529                           postinc2	equ	0xFDE
 26530                           postdec2	equ	0xFDD
 26531                           plusw2	equ	0xFDB
 26532                           fsr2h	equ	0xFDA
 26533                           fsr2l	equ	0xFD9
 26534                           status	equ	0xFD8
 26535                           
 26536                           	psect	rparam
 26537  0000                     tosu	equ	0xFFF
 26538                           tosh	equ	0xFFE
 26539                           tosl	equ	0xFFD
 26540                           pclath	equ	0xFFA
 26541                           tblptru	equ	0xFF8
 26542                           tblptrh	equ	0xFF7
 26543                           tblptrl	equ	0xFF6
 26544                           tablat	equ	0xFF5
 26545                           prodh	equ	0xFF4
 26546                           prodl	equ	0xFF3
 26547                           intcon	equ	0xFF2
 26548                           intcon2	equ	0xFF1
 26549                           indf0	equ	0xFEF
 26550                           postinc0	equ	0xFEE
 26551                           fsr0h	equ	0xFEA
 26552                           fsr0l	equ	0xFE9
 26553                           wreg	equ	0xFE8
 26554                           indf1	equ	0xFE7
 26555                           postinc1	equ	0xFE6
 26556                           postdec1	equ	0xFE5
 26557                           plusw1	equ	0xFE3
 26558                           fsr1h	equ	0xFE2
 26559                           fsr1l	equ	0xFE1
 26560                           bsr	equ	0xFE0
 26561                           indf2	equ	0xFDF
 26562                           postinc2	equ	0xFDE
 26563                           postdec2	equ	0xFDD
 26564                           plusw2	equ	0xFDB
 26565                           fsr2h	equ	0xFDA
 26566                           fsr2l	equ	0xFD9
 26567                           status	equ	0xFD8
 26568                           
 26569                           	psect	temp
 26570  00005E                     btemp:
 26571                           	opt stack 0
 26572  00005E                     	ds	1
 26573  0000                     int$flags	set	btemp
 26574                           tosu	equ	0xFFF
 26575                           tosh	equ	0xFFE
 26576                           tosl	equ	0xFFD
 26577                           pclath	equ	0xFFA
 26578                           tblptru	equ	0xFF8
 26579                           tblptrh	equ	0xFF7
 26580                           tblptrl	equ	0xFF6
 26581                           tablat	equ	0xFF5
 26582                           prodh	equ	0xFF4
 26583                           prodl	equ	0xFF3
 26584                           intcon	equ	0xFF2
 26585                           intcon2	equ	0xFF1
 26586                           indf0	equ	0xFEF
 26587                           postinc0	equ	0xFEE
 26588                           fsr0h	equ	0xFEA
 26589                           fsr0l	equ	0xFE9
 26590                           wreg	equ	0xFE8
 26591                           indf1	equ	0xFE7
 26592                           postinc1	equ	0xFE6
 26593                           postdec1	equ	0xFE5
 26594                           plusw1	equ	0xFE3
 26595                           fsr1h	equ	0xFE2
 26596                           fsr1l	equ	0xFE1
 26597                           bsr	equ	0xFE0
 26598                           indf2	equ	0xFDF
 26599                           postinc2	equ	0xFDE
 26600                           postdec2	equ	0xFDD
 26601                           plusw2	equ	0xFDB
 26602                           fsr2h	equ	0xFDA
 26603                           fsr2l	equ	0xFD9
 26604                           status	equ	0xFD8


Data Sizes:
    Strings     112
    Constant    56
    Data        1
    BSS         346
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     92      93
    BANK0           160    158     160
    BANK1           256    131     212
    BANK2           256     45     212
    BANK3           256      0     104
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          128      0       0
    BANK15           96      0       0

Pointer List with Targets:

    F7391.nextTCB.prevTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    F7391.nextTCB.nextTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    F7391.nextTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    F7391.nextTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    F7391.nextTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    F7391.nextTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    F7391.prevTCB.prevTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    F7391.prevTCB.nextTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    F7391.prevTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    F7391.prevTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    F7391.prevTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    F7391.prevTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_6(CODE[12]), STR_1(CODE[8]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), ?_printf(COMRAM[2]), 

    sprintf@wh	PTR unsigned char  size(2) Largest target is 80
		 -> main@str(BANK2[32]), Network_Read@debug_str(BANK1[80]), 

    pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 80
		 -> main@str(BANK2[32]), Network_Read@debug_str(BANK1[80]), NULL(NULL[0]), 

    printf@f	PTR const unsigned char  size(1) Largest target is 28
		 -> STR_3(CODE[10]), STR_2(CODE[28]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), ?_printf(COMRAM[2]), 

    pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 80
		 -> main@str(BANK2[32]), Network_Read@debug_str(BANK1[80]), NULL(NULL[0]), 

    memset@p1	PTR void  size(2) Largest target is 32
		 -> main@str(BANK2[32]), 

    memset@p	PTR unsigned char  size(2) Largest target is 32
		 -> main@str(BANK2[32]), 

    memcmp@s2	PTR const void  size(1) Largest target is 6
		 -> DHCP_Handler@ethMAC(BANK0[6]), 

    memcmp@s1	PTR const void  size(1) Largest target is 6
		 -> DHCP_Handler@ethPktMAC(BANK0[6]), 

    _doprnt@f	PTR const unsigned char  size(1) Largest target is 28
		 -> STR_6(CODE[12]), STR_3(CODE[10]), STR_2(CODE[28]), STR_1(CODE[8]), 

    _doprnt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), printf@ap(COMRAM[1]), 

    _doprnt@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> ?_sprintf(COMRAM[2]), ?_printf(COMRAM[2]), STR_7(CODE[7]), main@str(BANK2[32]), 
		 -> STR_5(CODE[13]), STR_4(CODE[17]), Network_Read@debug_str(BANK1[80]), NULL(NULL[0]), 

    S4510__prbuf$func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> Absolute function(), putch(), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> Absolute function(), putch(), 

    S4510__prbuf$ptr	PTR unsigned char  size(2) Largest target is 80
		 -> main@str(BANK2[32]), Network_Read@debug_str(BANK1[80]), NULL(NULL[0]), 

    _doprnt@pb.ptr	PTR unsigned char  size(2) Largest target is 80
		 -> main@str(BANK2[32]), Network_Read@debug_str(BANK1[80]), NULL(NULL[0]), 

    _doprnt@pb	PTR struct __prbuf size(1) Largest target is 6
		 -> sprintf@pb(COMRAM[5]), printf@pb(COMRAM[5]), 

    sp__memset	PTR void  size(2) Largest target is 32
		 -> main@str(BANK2[32]), 

    F7391.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    F7391.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    F7391.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    F7391.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    F7391.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    F7391.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    UDP_Receive@hptr.callBack	PTR FTN(int ,)void  size(3) Largest target is 1
		 -> DHCP_Handler(), 

    UDP_Receive@hptr	PTR const struct . size(1) Largest target is 5
		 -> UDP_CallBackTable(CODE[5]), 

    TCP_Update@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Update@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Update@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Update@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Update@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Update@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Update@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> ?_sprintf(COMRAM[2]), ?_printf(COMRAM[2]), main@str(BANK2[32]), STR_5(CODE[13]), 
		 -> STR_4(CODE[17]), DEMO_TCP_EchoServer@port7TCB(BANK2[55]), Network_Read@debug_str(BANK1[80]), NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), 

    TCP_GetReceivedData@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), 

    TCP_InsertRxBuffer@data	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), 

    TCP_InsertRxBuffer@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), 

    TCP_SendDone@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_SendDone@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_SendDone@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_SendDone@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_SendDone@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_SendDone@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_SendDone@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), 

    TCP_Send@data	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), 

    TCP_Send@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Send@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Send@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Send@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Send@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Send@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Send@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), 

    TCP_Close@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Close@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Close@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Close@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Close@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Close@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Connect@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Connect@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Connect@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Connect@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Connect@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Connect@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Listen@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Listen@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Listen@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Listen@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Listen@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Listen@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Listen@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), 

    TCP_Bind@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Bind@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Bind@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Bind@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Bind@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Bind@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Bind@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), 

    TCP_SocketPoll@socket_ptr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr	PTR struct . size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), 

    TCP_SocketInit@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), 

    TCP_Recv@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Recv@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Recv@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Recv@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Recv@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Recv@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Recv@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> ?_sprintf(COMRAM[2]), ?_printf(COMRAM[2]), main@str(BANK2[32]), STR_5(CODE[13]), 
		 -> STR_4(CODE[17]), DEMO_TCP_EchoServer@port7TCB(BANK2[55]), Network_Read@debug_str(BANK1[80]), NULL(NULL[0]), 

    currentTCB.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    currentTCB.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    currentTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    currentTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    currentTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    currentTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    currentTCB	PTR struct . size(2) Largest target is 61
		 -> ?_sprintf(COMRAM[2]), ?_printf(COMRAM[2]), main@str(BANK2[32]), STR_5(CODE[13]), 
		 -> STR_4(CODE[17]), DEMO_TCP_EchoServer@port7TCB(BANK2[55]), Network_Read@debug_str(BANK1[80]), NULL(NULL[0]), 

    TCP_Snd@data	PTR unsigned char  size(2) Largest target is 20
		 -> ?_sprintf(COMRAM[2]), ?_printf(COMRAM[2]), main@str(BANK2[32]), STR_5(CODE[13]), 
		 -> STR_4(CODE[17]), DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), Network_Read@debug_str(BANK1[80]), NULL(NULL[0]), 

    TCP_Snd@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Snd@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Snd@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Snd@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Snd@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Snd@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCP_Snd@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> ?_sprintf(COMRAM[2]), ?_printf(COMRAM[2]), main@str(BANK2[32]), STR_5(CODE[13]), 
		 -> STR_4(CODE[17]), DEMO_TCP_EchoServer@port7TCB(BANK2[55]), Network_Read@debug_str(BANK1[80]), NULL(NULL[0]), 

    TCB_Check@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Check@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Check@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Check@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Check@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Check@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Check@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> ?_sprintf(COMRAM[2]), ?_printf(COMRAM[2]), main@str(BANK2[32]), STR_5(CODE[13]), 
		 -> STR_4(CODE[17]), DEMO_TCP_EchoServer@port7TCB(BANK2[55]), Network_Read@debug_str(BANK1[80]), NULL(NULL[0]), 

    TCB_Check@ptr	PTR struct . size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), 

    TCB_Reset@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Reset@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Reset@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Reset@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Reset@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Reset@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Reset@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> ?_sprintf(COMRAM[2]), ?_printf(COMRAM[2]), main@str(BANK2[32]), STR_5(CODE[13]), 
		 -> STR_4(CODE[17]), DEMO_TCP_EchoServer@port7TCB(BANK2[55]), Network_Read@debug_str(BANK1[80]), NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Remove@ptr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Remove@ptr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Remove@ptr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Remove@ptr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Insert@ptr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Insert@ptr.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Insert@ptr.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Insert@ptr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Insert@ptr.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    tcbList.prevTCB.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    tcbList.prevTCB.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    tcbList.prevTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    tcbList.prevTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    tcbList.prevTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    tcbList.prevTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    S3034$prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    tcbList.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    S3034$nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    tcbList.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    S3034$txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    tcbList.txBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    S3034$txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    tcbList.txBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), NULL(NULL[0]), 

    S3034$rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    tcbList.rxBufferPtr	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    S3034$rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    tcbList.rxBufferStart	PTR unsigned char  size(2) Largest target is 20
		 -> DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), NULL(NULL[0]), 

    TCB_Insert@ptr	PTR struct . size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), 

    tcbList	PTR struct . size(2) Largest target is 61
		 -> DEMO_TCP_EchoServer@port7TCB(BANK2[55]), NULL(NULL[0]), 

    SYSLOG_Write@message	PTR const unsigned char  size(2) Largest target is 32
		 -> main@str(BANK2[32]), STR_5(CODE[13]), STR_4(CODE[17]), 

    sp__MAC_getAddress	PTR const struct . size(1) Largest target is 6
		 -> macAddress(CODE[6]), 

    IPv4_Start@macAddress	PTR const struct . size(2) Largest target is 104
		 -> arpMap.macAddress(BANK3[6]), broadcastMAC(CODE[6]), arpMap(BANK3[104]), NULL(NULL[0]), 

    IPV4_PseudoHeaderChecksum@v	PTR unsigned int  size(1) Largest target is 12
		 -> IPV4_PseudoHeaderChecksum@tmp(COMRAM[12]), 

    ICMP_EchoReply@icmpHdr	PTR struct . size(1) Largest target is 8
		 -> ICMP_Receive@icmpHdr(BANK0[8]), 

    ICMP_EchoReply@ipv4Hdr	PTR struct . size(2) Largest target is 20
		 -> ipv4Header(BANK1[20]), 

    ICMP_Receive@ipv4Hdr	PTR struct . size(2) Largest target is 20
		 -> ipv4Header(BANK1[20]), 

    S2122$callBack	PTR FTN(int ,)void  size(3) Largest target is 1
		 -> DHCP_Handler(), 

    UDP_CallBackTable.callBack	PTR FTN(int ,)void  size(3) Largest target is 1
		 -> DHCP_Handler(), 

    sp__ARPV4_Lookup	PTR struct . size(2) Largest target is 104
		 -> arpMap.macAddress(BANK3[6]), arpMap(BANK3[104]), NULL(NULL[0]), 

    ARPV4_Lookup@entry_pointer	PTR struct . size(2) Largest target is 104
		 -> arpMap(BANK3[104]), 

    ARPV4_Update@entryPointer	PTR struct . size(2) Largest target is 104
		 -> arpMap(BANK3[104]), 

    ARPV4_Packet@arpPtr	PTR struct . size(2) Largest target is 104
		 -> arpMap(BANK3[104]), 

    ARPV4_Packet@entryPointer	PTR struct . size(2) Largest target is 104
		 -> arpMap(BANK3[104]), 

    ETH_Insert@data	PTR unsigned char  size(1) Largest target is 2
		 -> UDP_Send@cksm(COMRAM[2]), UDP_Send@udpLength(COMRAM[2]), TCP_Snd@cksm(BANK0[2]), IPV4_Send@cksm(COMRAM[2]), 
		 -> IPV4_Send@totalLength(COMRAM[2]), ICMP_EchoReply@cksm(BANK0[2]), 

    ETH_WriteBlock@data	PTR void  size(2) Largest target is 104
		 -> arpMap.macAddress(BANK3[6]), ?_sprintf(COMRAM[2]), ?_printf(COMRAM[2]), main@str(BANK2[32]), 
		 -> STR_5(CODE[13]), STR_4(CODE[17]), DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), TCP_Snd@txHeader(BANK0[20]), 
		 -> Network_Read@debug_str(BANK1[80]), dhcpName(CODE[21]), DHCP_Request@ethMAC(BANK0[6]), broadcastMAC(CODE[6]), 
		 -> ARPV4_Request@header(COMRAM[28]), header.sha(COMRAM[6]), ARPV4_Packet@header(COMRAM[28]), arpMap(BANK3[104]), 
		 -> ethMAC(BANK2[6]), NULL(NULL[0]), 

    ETH_WriteBlock@p	PTR unsigned char  size(2) Largest target is 104
		 -> arpMap.macAddress(BANK3[6]), ?_sprintf(COMRAM[2]), ?_printf(COMRAM[2]), main@str(BANK2[32]), 
		 -> STR_5(CODE[13]), STR_4(CODE[17]), DEMO_TCP_EchoServer@txdataPort7(BANK2[20]), TCP_Snd@txHeader(BANK0[20]), 
		 -> Network_Read@debug_str(BANK1[80]), dhcpName(CODE[21]), DHCP_Request@ethMAC(BANK0[6]), broadcastMAC(CODE[6]), 
		 -> ARPV4_Request@header(COMRAM[28]), header.sha(COMRAM[6]), ARPV4_Packet@header(COMRAM[28]), arpMap(BANK3[104]), 
		 -> ethMAC(BANK2[6]), NULL(NULL[0]), 

    ETH_ReadBlock@data	PTR void  size(2) Largest target is 28
		 -> ?_sprintf(COMRAM[2]), ?_printf(COMRAM[2]), main@str(BANK2[32]), STR_5(CODE[13]), 
		 -> STR_4(CODE[17]), DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), udpHeader(BANK2[8]), tcpHeader(BANK1[20]), 
		 -> Network_Read@debug_str(BANK1[80]), Network_Read@header(BANK1[14]), ipv4Header(BANK1[20]), ICMP_Receive@icmpHdr(BANK0[8]), 
		 -> DHCP_Handler@ethPktMAC(BANK0[6]), ARPV4_Packet@header(COMRAM[28]), NULL(NULL[0]), 

    ETH_ReadBlock@p	PTR unsigned char  size(2) Largest target is 28
		 -> ?_sprintf(COMRAM[2]), ?_printf(COMRAM[2]), main@str(BANK2[32]), STR_5(CODE[13]), 
		 -> STR_4(CODE[17]), DEMO_TCP_EchoServer@rxdataPort7(BANK2[20]), udpHeader(BANK2[8]), tcpHeader(BANK1[20]), 
		 -> Network_Read@debug_str(BANK1[80]), Network_Read@header(BANK1[14]), ipv4Header(BANK1[20]), ICMP_Receive@icmpHdr(BANK0[8]), 
		 -> DHCP_Handler@ethPktMAC(BANK0[6]), ARPV4_Packet@header(COMRAM[28]), NULL(NULL[0]), 

    ETH_GetMAC@macAddr	PTR unsigned char  size(2) Largest target is 28
		 -> DHCP_Handler@ethMAC(BANK0[6]), DHCP_Request@ethMAC(BANK0[6]), ARPV4_Request@header(COMRAM[28]), header.sha(COMRAM[6]), 
		 -> ARPV4_Packet@header(COMRAM[28]), ethMAC(BANK2[6]), 

    ETH_WriteStart@destMAC	PTR const struct . size(2) Largest target is 104
		 -> arpMap.macAddress(BANK3[6]), broadcastMAC(CODE[6]), header.sha(COMRAM[6]), ARPV4_Packet@header(COMRAM[28]), 
		 -> arpMap(BANK3[104]), NULL(NULL[0]), 

    time@t	PTR long  size(2) Largest target is 4
		 -> main@t(BANK2[4]), Network_Manage@now(BANK1[4]), arpTimer(BANK1[4]), NULL(NULL[0]), 

    lcd_puts@s	PTR const unsigned char  size(2) Largest target is 32
		 -> main@str(BANK2[32]), 


Critical Paths under _main in COMRAM

    _lcd_puts->_lcd_putch
    _lcd_putch->_lcd_write_data
    _lcd_goto1->_lcd_write_ctrl
    _initHW->_lcd_init
    _lcd_init->_lcd_write_ctrl
    _SYSLOG_Write->_printf
    _SYSLOG_Init->_printf
    _printf->__doprnt
    _Network_WaitForLink->_ETH_CheckLinkUp
    _sprintf->__doprnt
    __doprnt->___lwmod
    ___lwmod->___lwdiv
    _IPV4_Packet->_ICMP_Receive
    _UDP_Receive->_DHCP_Handler
    _ETH_Read32->_SPI_ExchangeByte
    _TCP_ParseTCPOptions->_ETH_Dump
    _ETH_Read8->_SPI_ExchangeByte
    _ETH_Read16->_SPI_ExchangeByte
    _ETH_Dump->_ENCx24_Read
    _ICMP_Receive->_ICMP_EchoReply
    _ICMP_EchoReply->_IPv4_Start
    _ETH_SaveRDPT->_ENCx24_Read
    _ETH_Copy->_waitForDMA
    _ETH_RxComputeChecksum->_waitForDMA
    _ETH_NextPacketUpdate->_ETH_SetRXptr
    _ETH_SetRXptr->_SPI_ExchangeByte
    _ETH_Flush->_ENCx24_Write
    _ETH_SetPktDec->_SPI_ExchangeByte
    _ARPV4_Packet->_ETH_WriteStart
    _ETH_EventHandler->_ENCx24_Read
    _ETH_ResetReceiver->_ENCx24_BFC
    _ETH_ResetReceiver->_ENCx24_BFS
    _ETH_ResetReceiver->_ENCx24_Write
    _DHCP_Request->_UDP_Start
    _UDP_Start->_IPv4_Start
    _ETH_ResetByteCount->_ENCx24_Read
    _UDP_Send->_IPV4_Send
    _ETH_GetByteCount->_ENCx24_Read
    _DHCP_WriteZeros->_ETH_Write8
    _Network_Init->_ETH_Init
    _ETH_Init->_ETH_CheckLinkUp
    _ETH_SendSystemReset->_ENCx24_Read
    _ETH_CheckLinkUp->_ETH_readLinkStatus
    _ETH_readLinkStatus->_ENCx24_Read
    _ENCx24_PhyRead->_ENCx24_Read
    _ENCx24_PHYWrite->_ENCx24_Read
    _DEMO_TCP_EchoServer->_TCP_Listen
    _TCP_SocketInit->_TCB_Check
    _TCP_SendDone->_TCB_Check
    _TCP_Send->_TCP_Snd
    _TCP_SocketPoll->_TCB_Check
    _TCP_FiniteStateMachine->_TCP_PayloadSave
    _TCP_PayloadSave->_TCP_Snd
    _TCP_Snd->_IPv4_Start
    _IPv4_Start->_ARPV4_Request
    _ETH_Write8->_SPI_ExchangeByte
    _ETH_Write32->_SPI_ExchangeByte
    _ARPV4_Request->_ETH_WriteStart
    _ETH_WriteStart->_ENCx24_Read
    _ETH_WriteBlock->_SPI_ExchangeByte
    _ETH_Write16->_SPI_ExchangeByte
    _ETH_GetMAC->_ETH_MACRead8
    _ETH_MACRead8->_ENCx24_BankselSPI
    _IPV4_Send->_ETH_TxComputeChecksum
    _ETH_TxComputeChecksum->_waitForDMA
    _waitForDMA->_ENCx24_Read
    _ENCx24_BFS->_ENCx24_BankselSPI
    _ENCx24_BFC->_ENCx24_BankselSPI
    _ETH_Send->_ENCx24_Write
    _ETH_Set_TXRTS->_SPI_ExchangeByte
    _ETH_Insert->_ENCx24_Read
    _ENCx24_Write->_ENCx24_BankselSPI
    _ENCx24_Read->_ENCx24_BankselSPI
    _ENCx24_BankselSPI->_SPI_ExchangeByte
    _ETH_ReadBlock->_SPI_ExchangeByte
    _TCP_InsertRxBuffer->_TCB_Check
    _TCP_GetRxLength->_TCB_Check
    _TCP_GetReceivedData->_TCB_Check
    _TCP_Bind->_TCB_Check

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _TCP_Update->_TCP_FiniteStateMachine
    _Network_Read->_IPV4_Packet
    _IPV4_Packet->_TCP_Recv
    _UDP_Receive->_DHCP_Handler
    _DHCP_Handler->_DHCP_Request
    _TCP_Recv->_TCP_FiniteStateMachine
    _ICMP_Receive->_ICMP_EchoReply
    _ICMP_EchoReply->_IPv4_Start
    _DHCP_Manage->_DHCP_Request
    _DHCP_Request->_UDP_Start
    _UDP_Start->_IPv4_Start
    _DEMO_TCP_EchoServer->_TCP_Listen
    _TCP_Send->_TCP_Snd
    _TCP_Listen->_TCP_FiniteStateMachine
    _TCP_FiniteStateMachine->_TCP_PayloadSave
    _TCP_PayloadSave->_TCP_Snd
    _TCP_Snd->_IPv4_Start

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Network_Manage
    _Network_Manage->_Network_Read
    _Network_Read->_IPV4_Packet

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _low_isr in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _low_isr in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _low_isr in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                45    45      0  792803
                                              0 BANK2     45    45      0
                _DEMO_TCP_EchoServer
                       _IPV4_GetMyIP
                       _Network_Init
                     _Network_Manage
                _Network_WaitForLink
                        _SYSLOG_Init
                       _SYSLOG_Write
                             _initHW
                          _lcd_goto1
                           _lcd_puts
                             _memset
                            _sprintf
                               _time
 ---------------------------------------------------------------------------------
 (1) _memset                                               8     2      6     407
                                              1 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             2     0      2     279
                                              3 COMRAM     2     0      2
                          _lcd_putch
 ---------------------------------------------------------------------------------
 (2) _lcd_putch                                            1     1      0     124
                                              2 COMRAM     1     1      0
                           _lcd_busy
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (3) _lcd_write_data                                       1     1      0      31
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _lcd_goto1                                            1     1      0      62
                                              2 COMRAM     1     1      0
                           _lcd_busy
                     _lcd_write_ctrl
 ---------------------------------------------------------------------------------
 (1) _initHW                                               0     0      0     133
                     _ADC_Initialize
                           _LED_Init
                           _lcd_init
                          _rtcc_init
                           _spi_init
                          _uart_init
 ---------------------------------------------------------------------------------
 (2) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _spi_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _rtcc_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             5     5      0      31
                                              2 COMRAM     1     1      0
                           _lcd_busy
                      _lcd_init_pins
                     _lcd_write_ctrl
 ---------------------------------------------------------------------------------
 (2) _lcd_write_ctrl                                       1     1      0      31
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _lcd_init_pins                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _lcd_busy                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_Init                                             1     1      0     102
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSLOG_Write                                         4     2      2    4599
                                             38 COMRAM     4     2      2
                             _printf
                               _time
 ---------------------------------------------------------------------------------
 (1) _SYSLOG_Init                                          4     4      0    4298
                                             38 COMRAM     4     4      0
                             _printf
                               _time
 ---------------------------------------------------------------------------------
 (2) _printf                                              11     6      5    3653
                                             27 COMRAM    11     6      5
                            __doprnt
 ---------------------------------------------------------------------------------
 (1) _Network_WaitForLink                                  0     0      0     520
                    _ETH_CheckLinkUp
 ---------------------------------------------------------------------------------
 (1) _Network_Manage                                       5     5      0  542320
                                            126 BANK1      5     5      0
                       _ARPV4_Update
                        _DHCP_Manage
                   _ETH_EventHandler
                       _Network_Read
                         _TCP_Update
                               _time
 ---------------------------------------------------------------------------------
 (2) _TCP_Update                                          12    12      0  132613
                                            116 BANK0     12    12      0
             _TCP_FiniteStateMachine
 ---------------------------------------------------------------------------------
 (2) _Network_Read                                        98    98      0  331201
                                             28 BANK1     98    98      0
                       _ARPV4_Packet
                          _ETH_Flush
               _ETH_NextPacketUpdate
                      _ETH_ReadBlock
                        _IPV4_Packet
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             17     6     11    3909
                                             27 COMRAM    17     6     11
                            __doprnt
 ---------------------------------------------------------------------------------
 (2) __doprnt                                             20    17      3    3259
                                             13 COMRAM    14    11      3
                   Absolute function *
                            ___lwdiv
                            ___lwmod
                              _putch *
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      62
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     412
                                              8 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     601
                                              1 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _IPV4_Packet                                         73    73      0  303141
                                            153 BANK0      5     5      0
                                              0 BANK1     28    28      0
                           _ETH_Dump
                      _ETH_ReadBlock
              _ETH_RxComputeChecksum
                       _ICMP_Receive
          _IPV4_PseudoHeaderChecksum
                           _TCP_Recv
                        _UDP_Receive
 ---------------------------------------------------------------------------------
 (4) _UDP_Receive                                         11     9      2   78511
                                             55 BANK0     11     9      2
                       _DHCP_Handler *
                      _ETH_ReadBlock
 ---------------------------------------------------------------------------------
 (5) _DHCP_Handler                                        36    34      2   76395
                                             88 COMRAM     4     2      2
                                             23 BANK0     32    32      0
                       _DHCP_Request
                           _ETH_Dump
                         _ETH_GetMAC
                         _ETH_Read16
                         _ETH_Read32
                          _ETH_Read8
                      _ETH_ReadBlock
                             _memcmp
 ---------------------------------------------------------------------------------
 (6) _memcmp                                               6     2      4     431
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _ETH_Read32                                           8     4      4     176
                                              2 COMRAM     8     4      4
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (4) _TCP_Recv                                            37    31      6  139981
                                            116 BANK0     37    31      6
                      _ETH_ReadBlock
             _TCP_FiniteStateMachine
                _TCP_ParseTCPOptions
 ---------------------------------------------------------------------------------
 (5) _TCP_ParseTCPOptions                                  6     6      0    5596
                                             14 COMRAM     6     6      0
                           _ETH_Dump
                         _ETH_Read16
                          _ETH_Read8
 ---------------------------------------------------------------------------------
 (6) _ETH_Read8                                            1     1      0      65
                                              2 COMRAM     1     1      0
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (6) _ETH_Read16                                           4     2      2     102
                                              2 COMRAM     4     2      2
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (6) _ETH_Dump                                             4     2      2    4929
                                             10 COMRAM     4     2      2
                        _ENCx24_Read
                       _ENCx24_Write
 ---------------------------------------------------------------------------------
 (4) _IPV4_PseudoHeaderChecksum                           24    22      2     578
                                              1 COMRAM    24    22      2
 ---------------------------------------------------------------------------------
 (4) _ICMP_Receive                                        15    13      2   69219
                                             90 COMRAM     2     0      2
                                             20 BANK0     13    13      0
                      _ETH_ReadBlock
                       _ETH_SaveRDPT
                     _ICMP_EchoReply
 ---------------------------------------------------------------------------------
 (5) _ICMP_EchoReply                                      16    13      3   66651
                                             87 COMRAM     3     0      3
                                              7 BANK0     13    13      0
                           _ETH_Copy
                         _ETH_Insert
                       _ETH_SaveRDPT
              _ETH_TxComputeChecksum
                        _ETH_Write16
                          _IPV4_Send
                         _IPv4_Start
 ---------------------------------------------------------------------------------
 (6) _ETH_SaveRDPT                                         0     0      0     449
                        _ENCx24_Read
 ---------------------------------------------------------------------------------
 (6) _ETH_Copy                                             4     2      2    6745
                                             12 COMRAM     4     2      2
                         _ENCx24_BFC
                         _ENCx24_BFS
                        _ENCx24_Read
                       _ENCx24_Write
                         _waitForDMA
 ---------------------------------------------------------------------------------
 (4) _ETH_RxComputeChecksum                               14    10      4    7551
                                             12 COMRAM    14    10      4
                         _ENCx24_BFC
                         _ENCx24_BFS
                        _ENCx24_Read
                       _ENCx24_Write
                         _waitForDMA
 ---------------------------------------------------------------------------------
 (3) _ETH_NextPacketUpdate                                 0     0      0     217
                       _ETH_SetRXptr
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (4) _ETH_SetRXptr                                         2     0      2     186
                                              2 COMRAM     2     0      2
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (3) _ETH_Flush                                            2     2      0    3394
                                              8 COMRAM     2     2      0
                       _ENCx24_Write
                      _ETH_SetPktDec
 ---------------------------------------------------------------------------------
 (4) _ETH_SetPktDec                                        0     0      0      31
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (3) _ARPV4_Packet                                        70    70      0   17309
                                             14 COMRAM    70    70      0
                         _ETH_GetMAC
                      _ETH_ReadBlock
                           _ETH_Send
                     _ETH_WriteBlock
                     _ETH_WriteStart
 ---------------------------------------------------------------------------------
 (2) _ETH_EventHandler                                     8     8      0   10803
                                             10 COMRAM     8     8      0
                         _ENCx24_BFC
                        _ENCx24_Read
                       _ENCx24_Write
                  _ETH_ResetReceiver
 ---------------------------------------------------------------------------------
 (3) _ETH_ResetReceiver                                    0     0      0    5562
                         _ENCx24_BFC
                         _ENCx24_BFS
                       _ENCx24_Write
 ---------------------------------------------------------------------------------
 (2) _DHCP_Manage                                          0     0      0   66857
                       _DHCP_Request
 ---------------------------------------------------------------------------------
 (6) _DHCP_Request                                        10    10      0   66857
                                             15 BANK0      8     8      0
                    _DHCP_WriteZeros
                         _ETH_GetMAC
                        _ETH_Write16
                        _ETH_Write32
                         _ETH_Write8
                     _ETH_WriteBlock
                           _UDP_Send
                          _UDP_Start
 ---------------------------------------------------------------------------------
 (7) _UDP_Start                                            9     1      8   28891
                                             87 COMRAM     1     1      0
                                              7 BANK0      8     0      8
                 _ETH_ResetByteCount
                        _ETH_Write16
                         _IPv4_Start
 ---------------------------------------------------------------------------------
 (8) _ETH_ResetByteCount                                   0     0      0     449
                        _ENCx24_Read
 ---------------------------------------------------------------------------------
 (7) _UDP_Send                                             9     9      0   31573
                                             39 COMRAM     9     9      0
                   _ETH_GetByteCount
                         _ETH_Insert
              _ETH_TxComputeChecksum
                          _IPV4_Send
 ---------------------------------------------------------------------------------
 (8) _ETH_GetByteCount                                     4     2      2     483
                                             10 COMRAM     4     2      2
                        _ENCx24_Read
 ---------------------------------------------------------------------------------
 (7) _DHCP_WriteZeros                                      2     0      2     183
                                              3 COMRAM     2     0      2
                         _ETH_Write8
 ---------------------------------------------------------------------------------
 (2) _ARPV4_Update                                         3     3      0     105
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Network_Init                                         0     0      0   22299
                         _ARPV4_Init
                           _ETH_Init
                          _IPV4_Init
                           _TCP_Init
                               _time
 ---------------------------------------------------------------------------------
 (1) _time                                                 9     5      4     611
                                              1 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (2) _TCP_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IPV4_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ETH_Init                                             4     4      0   21589
                                             19 COMRAM     4     4      0
                         _ENCx24_BFS
                    _ENCx24_PHYWrite
                     _ENCx24_PhyRead
                        _ENCx24_Read
                       _ENCx24_Write
                    _ETH_CheckLinkUp
                         _ETH_GetMAC
                _ETH_SendSystemReset
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (3) _ETH_SendSystemReset                                  2     2      0    4938
                                             10 COMRAM     2     2      0
                         _ENCx24_BFS
                        _ENCx24_Read
                       _ENCx24_Write
 ---------------------------------------------------------------------------------
 (2) _ETH_CheckLinkUp                                      5     5      0     520
                                             14 COMRAM     5     5      0
                 _ETH_readLinkStatus
 ---------------------------------------------------------------------------------
 (3) _ETH_readLinkStatus                                   4     0      4     449
                                             10 COMRAM     4     0      4
                        _ENCx24_Read
 ---------------------------------------------------------------------------------
 (3) _ENCx24_PhyRead                                       3     1      2    6042
                                             10 COMRAM     3     1      2
                         _ENCx24_BFC
                         _ENCx24_BFS
                        _ENCx24_Read
                       _ENCx24_Write
 ---------------------------------------------------------------------------------
 (3) _ENCx24_PHYWrite                                      3     1      2    4017
                                             10 COMRAM     3     1      2
                        _ENCx24_Read
                       _ENCx24_Write
 ---------------------------------------------------------------------------------
 (2) _ARPV4_Init                                           1     1      0      99
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _IPV4_GetMyIP                                         4     0      4       0
                                              1 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _DEMO_TCP_EchoServer                                  7     7      0  211811
                                            120 BANK0      7     7      0
                           _TCP_Bind
                _TCP_GetReceivedData
                    _TCP_GetRxLength
                 _TCP_InsertRxBuffer
                         _TCP_Listen
                           _TCP_Send
                       _TCP_SendDone
                     _TCP_SocketInit
                     _TCP_SocketPoll
 ---------------------------------------------------------------------------------
 (2) _TCP_SocketInit                                       3     1      2    3588
                                              9 COMRAM     3     1      2
                          _TCB_Check
                         _TCB_Insert
                          _TCB_Reset
 ---------------------------------------------------------------------------------
 (3) _TCB_Insert                                           2     0      2     214
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TCP_SendDone                                         3     1      2    1214
                                              9 COMRAM     3     1      2
                          _TCB_Check
 ---------------------------------------------------------------------------------
 (2) _TCP_Send                                             7     1      6   65977
                                             89 COMRAM     1     1      0
                                             84 BANK0      6     0      6
                            _TCP_Snd
                     _TCP_SocketPoll
 ---------------------------------------------------------------------------------
 (2) _TCP_SocketPoll                                       3     1      2    1444
                                              9 COMRAM     3     1      2
                          _TCB_Check
 ---------------------------------------------------------------------------------
 (2) _TCP_Listen                                           5     3      2  133478
                                             91 COMRAM     1     1      0
                                            116 BANK0      4     2      2
                          _TCB_Check
             _TCP_FiniteStateMachine
 ---------------------------------------------------------------------------------
 (3) _TCP_FiniteStateMachine                              17    17      0  132133
                                             99 BANK0     17    17      0
                          _TCB_Reset
                    _TCP_PayloadSave
                            _TCP_Snd
 ---------------------------------------------------------------------------------
 (4) _TCP_PayloadSave                                     17    15      2   65951
                                             89 COMRAM     2     0      2
                                             84 BANK0     15    15      0
                      _ETH_ReadBlock
                            _TCP_Snd
 ---------------------------------------------------------------------------------
 (4) _TCP_Snd                                             79    77      2   63816
                                             87 COMRAM     2     0      2
                                              7 BANK0     77    77      0
                         _ETH_Insert
              _ETH_TxComputeChecksum
                     _ETH_WriteBlock
                          _IPV4_Send
                         _IPv4_Start
 ---------------------------------------------------------------------------------
 (5) _IPv4_Start                                          20    15      5   26675
                                             74 COMRAM    13     8      5
                                              0 BANK0      7     7      0
                       _ARPV4_Lookup
                      _ARPV4_Request
                        _ETH_Write16
                        _ETH_Write32
                         _ETH_Write8
                     _ETH_WriteStart
 ---------------------------------------------------------------------------------
 (6) _ETH_Write8                                           1     1      0      62
                                              2 COMRAM     1     1      0
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (6) _ETH_Write32                                          4     0      4    1494
                                              2 COMRAM     4     0      4
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (6) _ARPV4_Request                                       60    56      4   14859
                                             14 COMRAM    60    56      4
                         _ETH_GetMAC
                           _ETH_Send
                     _ETH_WriteBlock
                     _ETH_WriteStart
 ---------------------------------------------------------------------------------
 (6) _ETH_WriteStart                                       4     0      4    7641
                                             10 COMRAM     4     0      4
                        _ENCx24_Read
                       _ENCx24_Write
                        _ETH_Write16
                     _ETH_WriteBlock
 ---------------------------------------------------------------------------------
 (7) _ETH_WriteBlock                                       6     2      4    1928
                                              2 COMRAM     6     2      4
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (7) _ETH_Write16                                          2     0      2    1336
                                              2 COMRAM     2     0      2
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (7) _ETH_GetMAC                                           2     0      2    1066
                                              7 COMRAM     2     0      2
                       _ETH_MACRead8
 ---------------------------------------------------------------------------------
 (8) _ETH_MACRead8                                         3     3      0     412
                                              4 COMRAM     3     3      0
                  _ENCx24_BankselSPI
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (6) _ARPV4_Lookup                                        11     7      4     257
                                              1 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (5) _IPV4_Send                                           11     9      2   17270
                                             28 COMRAM    11     9      2
                         _ETH_Insert
                           _ETH_Send
              _ETH_TxComputeChecksum
 ---------------------------------------------------------------------------------
 (6) _ETH_TxComputeChecksum                               16    10      6    7877
                                             12 COMRAM    16    10      6
                         _ENCx24_BFC
                         _ENCx24_BFS
                        _ENCx24_Read
                       _ENCx24_Write
                         _waitForDMA
 ---------------------------------------------------------------------------------
 (7) _waitForDMA                                           2     2      0     483
                                             10 COMRAM     2     2      0
                        _ENCx24_Read
 ---------------------------------------------------------------------------------
 (7) _ENCx24_BFS                                           4     2      2    1163
                                              4 COMRAM     4     2      2
                  _ENCx24_BankselSPI
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (7) _ENCx24_BFC                                           4     2      2    1073
                                              4 COMRAM     4     2      2
                  _ENCx24_BankselSPI
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (7) _ETH_Send                                             0     0      0    3357
                       _ENCx24_Write
                      _ETH_Set_TXRTS
 ---------------------------------------------------------------------------------
 (8) _ETH_Set_TXRTS                                        0     0      0      31
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (6) _ETH_Insert                                           7     2      5    5559
                                             10 COMRAM     7     2      5
                        _ENCx24_Read
                       _ENCx24_Write
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (7) _ENCx24_Write                                         4     2      2    3326
                                              4 COMRAM     4     2      2
                  _ENCx24_BankselSPI
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (4) _ENCx24_Read                                          6     4      2     449
                                              4 COMRAM     6     4      2
                  _ENCx24_BankselSPI
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (5) _ENCx24_BankselSPI                                    2     2      0     189
                                              2 COMRAM     2     2      0
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (5) _ETH_ReadBlock                                        9     5      4    1840
                                              2 COMRAM     9     5      4
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (5) _SPI_ExchangeByte                                     1     1      0      31
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _TCB_Reset                                            4     2      2    1843
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _TCP_InsertRxBuffer                                   7     1      6    1888
                                              9 COMRAM     7     1      6
                          _TCB_Check
 ---------------------------------------------------------------------------------
 (2) _TCP_GetRxLength                                      8     6      2    1276
                                              9 COMRAM     8     6      2
                          _TCB_Check
 ---------------------------------------------------------------------------------
 (2) _TCP_GetReceivedData                                  8     6      2    1369
                                              9 COMRAM     8     6      2
                          _TCB_Check
 ---------------------------------------------------------------------------------
 (2) _TCP_Bind                                             5     1      4    1311
                                              9 COMRAM     5     1      4
                          _TCB_Check
 ---------------------------------------------------------------------------------
 (3) _TCB_Check                                            8     6      2    1025
                                              1 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _low_isr                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _high_isr                                            0     0      0       0
                       _rtcc_handler
 ---------------------------------------------------------------------------------
 (16) _rtcc_handler                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DEMO_TCP_EchoServer
     _TCP_Bind
       _TCB_Check
     _TCP_GetReceivedData
       _TCB_Check
     _TCP_GetRxLength
       _TCB_Check
     _TCP_InsertRxBuffer
       _TCB_Check
     _TCP_Listen
       _TCB_Check
       _TCP_FiniteStateMachine
         _TCB_Reset
         _TCP_PayloadSave
           _ETH_ReadBlock
             _SPI_ExchangeByte
           _TCP_Snd
             _ETH_Insert
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ETH_TxComputeChecksum
               _ENCx24_BFC
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_BFS
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _waitForDMA
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
             _ETH_WriteBlock
               _SPI_ExchangeByte
             _IPV4_Send
               _ETH_Insert
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_Write
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ETH_Send
                 _ENCx24_Write
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ETH_Set_TXRTS
                   _SPI_ExchangeByte
               _ETH_TxComputeChecksum
                 _ENCx24_BFC
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_BFS
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_Write
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _waitForDMA
                   _ENCx24_Read
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
             _IPv4_Start
               _ARPV4_Lookup
               _ARPV4_Request
                 _ETH_GetMAC
                   _ETH_MACRead8
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                 _ETH_Send
                   _ENCx24_Write
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ETH_Set_TXRTS
                     _SPI_ExchangeByte
                 _ETH_WriteBlock
                   _SPI_ExchangeByte
                 _ETH_WriteStart
                   _ENCx24_Read
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ENCx24_Write
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ETH_Write16
                     _SPI_ExchangeByte
                   _ETH_WriteBlock
                     _SPI_ExchangeByte
               _ETH_Write16
                 _SPI_ExchangeByte
               _ETH_Write32
                 _SPI_ExchangeByte
               _ETH_Write8
                 _SPI_ExchangeByte
               _ETH_WriteStart
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_Write
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ETH_Write16
                   _SPI_ExchangeByte
                 _ETH_WriteBlock
                   _SPI_ExchangeByte
         _TCP_Snd
           _ETH_Insert
             _ENCx24_Read
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ENCx24_Write
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _SPI_ExchangeByte
           _ETH_TxComputeChecksum
             _ENCx24_BFC
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ENCx24_BFS
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ENCx24_Read
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ENCx24_Write
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _waitForDMA
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
           _ETH_WriteBlock
             _SPI_ExchangeByte
           _IPV4_Send
             _ETH_Insert
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ETH_Send
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ETH_Set_TXRTS
                 _SPI_ExchangeByte
             _ETH_TxComputeChecksum
               _ENCx24_BFC
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_BFS
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _waitForDMA
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
           _IPv4_Start
             _ARPV4_Lookup
             _ARPV4_Request
               _ETH_GetMAC
                 _ETH_MACRead8
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
               _ETH_Send
                 _ENCx24_Write
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ETH_Set_TXRTS
                   _SPI_ExchangeByte
               _ETH_WriteBlock
                 _SPI_ExchangeByte
               _ETH_WriteStart
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_Write
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ETH_Write16
                   _SPI_ExchangeByte
                 _ETH_WriteBlock
                   _SPI_ExchangeByte
             _ETH_Write16
               _SPI_ExchangeByte
             _ETH_Write32
               _SPI_ExchangeByte
             _ETH_Write8
               _SPI_ExchangeByte
             _ETH_WriteStart
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ETH_Write16
                 _SPI_ExchangeByte
               _ETH_WriteBlock
                 _SPI_ExchangeByte
     _TCP_Send
       _TCP_Snd
         _ETH_Insert
           _ENCx24_Read
             _ENCx24_BankselSPI
               _SPI_ExchangeByte
             _SPI_ExchangeByte
           _ENCx24_Write
             _ENCx24_BankselSPI
               _SPI_ExchangeByte
             _SPI_ExchangeByte
           _SPI_ExchangeByte
         _ETH_TxComputeChecksum
           _ENCx24_BFC
             _ENCx24_BankselSPI
               _SPI_ExchangeByte
             _SPI_ExchangeByte
           _ENCx24_BFS
             _ENCx24_BankselSPI
               _SPI_ExchangeByte
             _SPI_ExchangeByte
           _ENCx24_Read
             _ENCx24_BankselSPI
               _SPI_ExchangeByte
             _SPI_ExchangeByte
           _ENCx24_Write
             _ENCx24_BankselSPI
               _SPI_ExchangeByte
             _SPI_ExchangeByte
           _waitForDMA
             _ENCx24_Read
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
         _ETH_WriteBlock
           _SPI_ExchangeByte
         _IPV4_Send
           _ETH_Insert
             _ENCx24_Read
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ENCx24_Write
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _SPI_ExchangeByte
           _ETH_Send
             _ENCx24_Write
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ETH_Set_TXRTS
               _SPI_ExchangeByte
           _ETH_TxComputeChecksum
             _ENCx24_BFC
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ENCx24_BFS
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ENCx24_Read
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ENCx24_Write
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _waitForDMA
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
         _IPv4_Start
           _ARPV4_Lookup
           _ARPV4_Request
             _ETH_GetMAC
               _ETH_MACRead8
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
             _ETH_Send
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ETH_Set_TXRTS
                 _SPI_ExchangeByte
             _ETH_WriteBlock
               _SPI_ExchangeByte
             _ETH_WriteStart
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ETH_Write16
                 _SPI_ExchangeByte
               _ETH_WriteBlock
                 _SPI_ExchangeByte
           _ETH_Write16
             _SPI_ExchangeByte
           _ETH_Write32
             _SPI_ExchangeByte
           _ETH_Write8
             _SPI_ExchangeByte
           _ETH_WriteStart
             _ENCx24_Read
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ENCx24_Write
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ETH_Write16
               _SPI_ExchangeByte
             _ETH_WriteBlock
               _SPI_ExchangeByte
       _TCP_SocketPoll
         _TCB_Check
     _TCP_SendDone
       _TCB_Check
     _TCP_SocketInit
       _TCB_Check
       _TCB_Insert
       _TCB_Reset
     _TCP_SocketPoll
       _TCB_Check
   _IPV4_GetMyIP
   _Network_Init
     _ARPV4_Init
     _ETH_Init
       _ENCx24_BFS
         _ENCx24_BankselSPI
           _SPI_ExchangeByte
         _SPI_ExchangeByte
       _ENCx24_PHYWrite
         _ENCx24_Read
           _ENCx24_BankselSPI
             _SPI_ExchangeByte
           _SPI_ExchangeByte
         _ENCx24_Write
           _ENCx24_BankselSPI
             _SPI_ExchangeByte
           _SPI_ExchangeByte
       _ENCx24_PhyRead
         _ENCx24_BFC
           _ENCx24_BankselSPI
             _SPI_ExchangeByte
           _SPI_ExchangeByte
         _ENCx24_BFS
           _ENCx24_BankselSPI
             _SPI_ExchangeByte
           _SPI_ExchangeByte
         _ENCx24_Read
           _ENCx24_BankselSPI
             _SPI_ExchangeByte
           _SPI_ExchangeByte
         _ENCx24_Write
           _ENCx24_BankselSPI
             _SPI_ExchangeByte
           _SPI_ExchangeByte
       _ENCx24_Read
         _ENCx24_BankselSPI
           _SPI_ExchangeByte
         _SPI_ExchangeByte
       _ENCx24_Write
         _ENCx24_BankselSPI
           _SPI_ExchangeByte
         _SPI_ExchangeByte
       _ETH_CheckLinkUp
         _ETH_readLinkStatus
           _ENCx24_Read
             _ENCx24_BankselSPI
               _SPI_ExchangeByte
             _SPI_ExchangeByte
       _ETH_GetMAC
         _ETH_MACRead8
           _ENCx24_BankselSPI
             _SPI_ExchangeByte
           _SPI_ExchangeByte
       _ETH_SendSystemReset
         _ENCx24_BFS
           _ENCx24_BankselSPI
             _SPI_ExchangeByte
           _SPI_ExchangeByte
         _ENCx24_Read
           _ENCx24_BankselSPI
             _SPI_ExchangeByte
           _SPI_ExchangeByte
         _ENCx24_Write
           _ENCx24_BankselSPI
             _SPI_ExchangeByte
           _SPI_ExchangeByte
       _SPI_ExchangeByte
     _IPV4_Init
     _TCP_Init
     _time
   _Network_Manage
     _ARPV4_Update
     _DHCP_Manage
       _DHCP_Request
         _DHCP_WriteZeros
           _ETH_Write8
             _SPI_ExchangeByte
         _ETH_GetMAC
           _ETH_MACRead8
             _ENCx24_BankselSPI
               _SPI_ExchangeByte
             _SPI_ExchangeByte
         _ETH_Write16
           _SPI_ExchangeByte
         _ETH_Write32
           _SPI_ExchangeByte
         _ETH_Write8
           _SPI_ExchangeByte
         _ETH_WriteBlock
           _SPI_ExchangeByte
         _UDP_Send
           _ETH_GetByteCount
             _ENCx24_Read
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
           _ETH_Insert
             _ENCx24_Read
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ENCx24_Write
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _SPI_ExchangeByte
           _ETH_TxComputeChecksum
             _ENCx24_BFC
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ENCx24_BFS
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ENCx24_Read
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ENCx24_Write
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _waitForDMA
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
           _IPV4_Send
             _ETH_Insert
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ETH_Send
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ETH_Set_TXRTS
                 _SPI_ExchangeByte
             _ETH_TxComputeChecksum
               _ENCx24_BFC
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_BFS
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _waitForDMA
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
         _UDP_Start
           _ETH_ResetByteCount
             _ENCx24_Read
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
           _ETH_Write16
             _SPI_ExchangeByte
           _IPv4_Start
             _ARPV4_Lookup
             _ARPV4_Request
               _ETH_GetMAC
                 _ETH_MACRead8
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
               _ETH_Send
                 _ENCx24_Write
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ETH_Set_TXRTS
                   _SPI_ExchangeByte
               _ETH_WriteBlock
                 _SPI_ExchangeByte
               _ETH_WriteStart
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_Write
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ETH_Write16
                   _SPI_ExchangeByte
                 _ETH_WriteBlock
                   _SPI_ExchangeByte
             _ETH_Write16
               _SPI_ExchangeByte
             _ETH_Write32
               _SPI_ExchangeByte
             _ETH_Write8
               _SPI_ExchangeByte
             _ETH_WriteStart
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ETH_Write16
                 _SPI_ExchangeByte
               _ETH_WriteBlock
                 _SPI_ExchangeByte
     _ETH_EventHandler
       _ENCx24_BFC
         _ENCx24_BankselSPI
           _SPI_ExchangeByte
         _SPI_ExchangeByte
       _ENCx24_Read
         _ENCx24_BankselSPI
           _SPI_ExchangeByte
         _SPI_ExchangeByte
       _ENCx24_Write
         _ENCx24_BankselSPI
           _SPI_ExchangeByte
         _SPI_ExchangeByte
       _ETH_ResetReceiver
         _ENCx24_BFC
           _ENCx24_BankselSPI
             _SPI_ExchangeByte
           _SPI_ExchangeByte
         _ENCx24_BFS
           _ENCx24_BankselSPI
             _SPI_ExchangeByte
           _SPI_ExchangeByte
         _ENCx24_Write
           _ENCx24_BankselSPI
             _SPI_ExchangeByte
           _SPI_ExchangeByte
     _Network_Read
       _ARPV4_Packet
         _ETH_GetMAC
           _ETH_MACRead8
             _ENCx24_BankselSPI
               _SPI_ExchangeByte
             _SPI_ExchangeByte
         _ETH_ReadBlock
           _SPI_ExchangeByte
         _ETH_Send
           _ENCx24_Write
             _ENCx24_BankselSPI
               _SPI_ExchangeByte
             _SPI_ExchangeByte
           _ETH_Set_TXRTS
             _SPI_ExchangeByte
         _ETH_WriteBlock
           _SPI_ExchangeByte
         _ETH_WriteStart
           _ENCx24_Read
             _ENCx24_BankselSPI
               _SPI_ExchangeByte
             _SPI_ExchangeByte
           _ENCx24_Write
             _ENCx24_BankselSPI
               _SPI_ExchangeByte
             _SPI_ExchangeByte
           _ETH_Write16
             _SPI_ExchangeByte
           _ETH_WriteBlock
             _SPI_ExchangeByte
       _ETH_Flush
         _ENCx24_Write
           _ENCx24_BankselSPI
             _SPI_ExchangeByte
           _SPI_ExchangeByte
         _ETH_SetPktDec
           _SPI_ExchangeByte
       _ETH_NextPacketUpdate
         _ETH_SetRXptr
           _SPI_ExchangeByte
         _SPI_ExchangeByte
       _ETH_ReadBlock
         _SPI_ExchangeByte
       _IPV4_Packet
         _ETH_Dump
           _ENCx24_Read
             _ENCx24_BankselSPI
               _SPI_ExchangeByte
             _SPI_ExchangeByte
           _ENCx24_Write
             _ENCx24_BankselSPI
               _SPI_ExchangeByte
             _SPI_ExchangeByte
         _ETH_ReadBlock
           _SPI_ExchangeByte
         _ETH_RxComputeChecksum
           _ENCx24_BFC
             _ENCx24_BankselSPI
               _SPI_ExchangeByte
             _SPI_ExchangeByte
           _ENCx24_BFS
             _ENCx24_BankselSPI
               _SPI_ExchangeByte
             _SPI_ExchangeByte
           _ENCx24_Read
             _ENCx24_BankselSPI
               _SPI_ExchangeByte
             _SPI_ExchangeByte
           _ENCx24_Write
             _ENCx24_BankselSPI
               _SPI_ExchangeByte
             _SPI_ExchangeByte
           _waitForDMA
             _ENCx24_Read
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
         _ICMP_Receive
           _ETH_ReadBlock
             _SPI_ExchangeByte
           _ETH_SaveRDPT
             _ENCx24_Read
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
           _ICMP_EchoReply
             _ETH_Copy
               _ENCx24_BFC
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_BFS
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _waitForDMA
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
             _ETH_Insert
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ETH_SaveRDPT
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
             _ETH_TxComputeChecksum
               _ENCx24_BFC
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_BFS
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _waitForDMA
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
             _ETH_Write16
               _SPI_ExchangeByte
             _IPV4_Send
               _ETH_Insert
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_Write
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ETH_Send
                 _ENCx24_Write
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ETH_Set_TXRTS
                   _SPI_ExchangeByte
               _ETH_TxComputeChecksum
                 _ENCx24_BFC
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_BFS
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_Write
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _waitForDMA
                   _ENCx24_Read
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
             _IPv4_Start
               _ARPV4_Lookup
               _ARPV4_Request
                 _ETH_GetMAC
                   _ETH_MACRead8
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                 _ETH_Send
                   _ENCx24_Write
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ETH_Set_TXRTS
                     _SPI_ExchangeByte
                 _ETH_WriteBlock
                   _SPI_ExchangeByte
                 _ETH_WriteStart
                   _ENCx24_Read
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ENCx24_Write
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ETH_Write16
                     _SPI_ExchangeByte
                   _ETH_WriteBlock
                     _SPI_ExchangeByte
               _ETH_Write16
                 _SPI_ExchangeByte
               _ETH_Write32
                 _SPI_ExchangeByte
               _ETH_Write8
                 _SPI_ExchangeByte
               _ETH_WriteStart
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_Write
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ETH_Write16
                   _SPI_ExchangeByte
                 _ETH_WriteBlock
                   _SPI_ExchangeByte
         _IPV4_PseudoHeaderChecksum
         _TCP_Recv
           _ETH_ReadBlock
             _SPI_ExchangeByte
           _TCP_FiniteStateMachine
             _TCB_Reset
             _TCP_PayloadSave
               _ETH_ReadBlock
                 _SPI_ExchangeByte
               _TCP_Snd
                 _ETH_Insert
                   _ENCx24_Read
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ENCx24_Write
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ETH_TxComputeChecksum
                   _ENCx24_BFC
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ENCx24_BFS
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ENCx24_Read
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ENCx24_Write
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _waitForDMA
                     _ENCx24_Read
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                 _ETH_WriteBlock
                   _SPI_ExchangeByte
                 _IPV4_Send
                   _ETH_Insert
                     _ENCx24_Read
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _ENCx24_Write
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ETH_Send
                     _ENCx24_Write
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _ETH_Set_TXRTS
                       _SPI_ExchangeByte
                   _ETH_TxComputeChecksum
                     _ENCx24_BFC
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _ENCx24_BFS
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _ENCx24_Read
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _ENCx24_Write
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _waitForDMA
                       _ENCx24_Read
                         _ENCx24_BankselSPI
                           _SPI_ExchangeByte
                         _SPI_ExchangeByte
                 _IPv4_Start
                   _ARPV4_Lookup
                   _ARPV4_Request
                     _ETH_GetMAC
                       _ETH_MACRead8
                         _ENCx24_BankselSPI
                           _SPI_ExchangeByte
                         _SPI_ExchangeByte
                     _ETH_Send
                       _ENCx24_Write
                         _ENCx24_BankselSPI
                           _SPI_ExchangeByte
                         _SPI_ExchangeByte
                       _ETH_Set_TXRTS
                         _SPI_ExchangeByte
                     _ETH_WriteBlock
                       _SPI_ExchangeByte
                     _ETH_WriteStart
                       _ENCx24_Read
                         _ENCx24_BankselSPI
                           _SPI_ExchangeByte
                         _SPI_ExchangeByte
                       _ENCx24_Write
                         _ENCx24_BankselSPI
                           _SPI_ExchangeByte
                         _SPI_ExchangeByte
                       _ETH_Write16
                         _SPI_ExchangeByte
                       _ETH_WriteBlock
                         _SPI_ExchangeByte
                   _ETH_Write16
                     _SPI_ExchangeByte
                   _ETH_Write32
                     _SPI_ExchangeByte
                   _ETH_Write8
                     _SPI_ExchangeByte
                   _ETH_WriteStart
                     _ENCx24_Read
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _ENCx24_Write
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _ETH_Write16
                       _SPI_ExchangeByte
                     _ETH_WriteBlock
                       _SPI_ExchangeByte
             _TCP_Snd
               _ETH_Insert
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_Write
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ETH_TxComputeChecksum
                 _ENCx24_BFC
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_BFS
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_Write
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _waitForDMA
                   _ENCx24_Read
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
               _ETH_WriteBlock
                 _SPI_ExchangeByte
               _IPV4_Send
                 _ETH_Insert
                   _ENCx24_Read
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ENCx24_Write
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ETH_Send
                   _ENCx24_Write
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ETH_Set_TXRTS
                     _SPI_ExchangeByte
                 _ETH_TxComputeChecksum
                   _ENCx24_BFC
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ENCx24_BFS
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ENCx24_Read
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ENCx24_Write
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _waitForDMA
                     _ENCx24_Read
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
               _IPv4_Start
                 _ARPV4_Lookup
                 _ARPV4_Request
                   _ETH_GetMAC
                     _ETH_MACRead8
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                   _ETH_Send
                     _ENCx24_Write
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _ETH_Set_TXRTS
                       _SPI_ExchangeByte
                   _ETH_WriteBlock
                     _SPI_ExchangeByte
                   _ETH_WriteStart
                     _ENCx24_Read
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _ENCx24_Write
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _ETH_Write16
                       _SPI_ExchangeByte
                     _ETH_WriteBlock
                       _SPI_ExchangeByte
                 _ETH_Write16
                   _SPI_ExchangeByte
                 _ETH_Write32
                   _SPI_ExchangeByte
                 _ETH_Write8
                   _SPI_ExchangeByte
                 _ETH_WriteStart
                   _ENCx24_Read
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ENCx24_Write
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ETH_Write16
                     _SPI_ExchangeByte
                   _ETH_WriteBlock
                     _SPI_ExchangeByte
           _TCP_ParseTCPOptions
             _ETH_Dump
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
             _ETH_Read16
               _SPI_ExchangeByte
             _ETH_Read8
               _SPI_ExchangeByte
         _UDP_Receive
           _DHCP_Handler *
             _DHCP_Request
               _DHCP_WriteZeros
                 _ETH_Write8
                   _SPI_ExchangeByte
               _ETH_GetMAC
                 _ETH_MACRead8
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
               _ETH_Write16
                 _SPI_ExchangeByte
               _ETH_Write32
                 _SPI_ExchangeByte
               _ETH_Write8
                 _SPI_ExchangeByte
               _ETH_WriteBlock
                 _SPI_ExchangeByte
               _UDP_Send
                 _ETH_GetByteCount
                   _ENCx24_Read
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                 _ETH_Insert
                   _ENCx24_Read
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ENCx24_Write
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ETH_TxComputeChecksum
                   _ENCx24_BFC
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ENCx24_BFS
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ENCx24_Read
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ENCx24_Write
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _waitForDMA
                     _ENCx24_Read
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                 _IPV4_Send
                   _ETH_Insert
                     _ENCx24_Read
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _ENCx24_Write
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ETH_Send
                     _ENCx24_Write
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _ETH_Set_TXRTS
                       _SPI_ExchangeByte
                   _ETH_TxComputeChecksum
                     _ENCx24_BFC
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _ENCx24_BFS
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _ENCx24_Read
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _ENCx24_Write
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _waitForDMA
                       _ENCx24_Read
                         _ENCx24_BankselSPI
                           _SPI_ExchangeByte
                         _SPI_ExchangeByte
               _UDP_Start
                 _ETH_ResetByteCount
                   _ENCx24_Read
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                 _ETH_Write16
                   _SPI_ExchangeByte
                 _IPv4_Start
                   _ARPV4_Lookup
                   _ARPV4_Request
                     _ETH_GetMAC
                       _ETH_MACRead8
                         _ENCx24_BankselSPI
                           _SPI_ExchangeByte
                         _SPI_ExchangeByte
                     _ETH_Send
                       _ENCx24_Write
                         _ENCx24_BankselSPI
                           _SPI_ExchangeByte
                         _SPI_ExchangeByte
                       _ETH_Set_TXRTS
                         _SPI_ExchangeByte
                     _ETH_WriteBlock
                       _SPI_ExchangeByte
                     _ETH_WriteStart
                       _ENCx24_Read
                         _ENCx24_BankselSPI
                           _SPI_ExchangeByte
                         _SPI_ExchangeByte
                       _ENCx24_Write
                         _ENCx24_BankselSPI
                           _SPI_ExchangeByte
                         _SPI_ExchangeByte
                       _ETH_Write16
                         _SPI_ExchangeByte
                       _ETH_WriteBlock
                         _SPI_ExchangeByte
                   _ETH_Write16
                     _SPI_ExchangeByte
                   _ETH_Write32
                     _SPI_ExchangeByte
                   _ETH_Write8
                     _SPI_ExchangeByte
                   _ETH_WriteStart
                     _ENCx24_Read
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _ENCx24_Write
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _ETH_Write16
                       _SPI_ExchangeByte
                     _ETH_WriteBlock
                       _SPI_ExchangeByte
             _ETH_Dump
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
             _ETH_GetMAC
               _ETH_MACRead8
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
             _ETH_Read16
               _SPI_ExchangeByte
             _ETH_Read32
               _SPI_ExchangeByte
             _ETH_Read8
               _SPI_ExchangeByte
             _ETH_ReadBlock
               _SPI_ExchangeByte
             _memcmp
           _ETH_ReadBlock *
             _SPI_ExchangeByte
       _sprintf
         __doprnt
           Absolute function(Fake) *
           ___lwdiv *
           ___lwmod *
             ___lwdiv (ARG)
           _putch *
     _TCP_Update
       _TCP_FiniteStateMachine
         _TCB_Reset
         _TCP_PayloadSave
           _ETH_ReadBlock
             _SPI_ExchangeByte
           _TCP_Snd
             _ETH_Insert
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ETH_TxComputeChecksum
               _ENCx24_BFC
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_BFS
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _waitForDMA
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
             _ETH_WriteBlock
               _SPI_ExchangeByte
             _IPV4_Send
               _ETH_Insert
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_Write
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ETH_Send
                 _ENCx24_Write
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ETH_Set_TXRTS
                   _SPI_ExchangeByte
               _ETH_TxComputeChecksum
                 _ENCx24_BFC
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_BFS
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_Write
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _waitForDMA
                   _ENCx24_Read
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
             _IPv4_Start
               _ARPV4_Lookup
               _ARPV4_Request
                 _ETH_GetMAC
                   _ETH_MACRead8
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                 _ETH_Send
                   _ENCx24_Write
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ETH_Set_TXRTS
                     _SPI_ExchangeByte
                 _ETH_WriteBlock
                   _SPI_ExchangeByte
                 _ETH_WriteStart
                   _ENCx24_Read
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ENCx24_Write
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ETH_Write16
                     _SPI_ExchangeByte
                   _ETH_WriteBlock
                     _SPI_ExchangeByte
               _ETH_Write16
                 _SPI_ExchangeByte
               _ETH_Write32
                 _SPI_ExchangeByte
               _ETH_Write8
                 _SPI_ExchangeByte
               _ETH_WriteStart
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_Write
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ETH_Write16
                   _SPI_ExchangeByte
                 _ETH_WriteBlock
                   _SPI_ExchangeByte
         _TCP_Snd
           _ETH_Insert
             _ENCx24_Read
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ENCx24_Write
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _SPI_ExchangeByte
           _ETH_TxComputeChecksum
             _ENCx24_BFC
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ENCx24_BFS
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ENCx24_Read
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ENCx24_Write
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _waitForDMA
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
           _ETH_WriteBlock
             _SPI_ExchangeByte
           _IPV4_Send
             _ETH_Insert
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ETH_Send
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ETH_Set_TXRTS
                 _SPI_ExchangeByte
             _ETH_TxComputeChecksum
               _ENCx24_BFC
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_BFS
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _waitForDMA
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
           _IPv4_Start
             _ARPV4_Lookup
             _ARPV4_Request
               _ETH_GetMAC
                 _ETH_MACRead8
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
               _ETH_Send
                 _ENCx24_Write
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ETH_Set_TXRTS
                   _SPI_ExchangeByte
               _ETH_WriteBlock
                 _SPI_ExchangeByte
               _ETH_WriteStart
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_Write
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ETH_Write16
                   _SPI_ExchangeByte
                 _ETH_WriteBlock
                   _SPI_ExchangeByte
             _ETH_Write16
               _SPI_ExchangeByte
             _ETH_Write32
               _SPI_ExchangeByte
             _ETH_Write8
               _SPI_ExchangeByte
             _ETH_WriteStart
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ETH_Write16
                 _SPI_ExchangeByte
               _ETH_WriteBlock
                 _SPI_ExchangeByte
     _time
   _Network_WaitForLink
     _ETH_CheckLinkUp
       _ETH_readLinkStatus
         _ENCx24_Read
           _ENCx24_BankselSPI
             _SPI_ExchangeByte
           _SPI_ExchangeByte
   _SYSLOG_Init
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         _putch *
     _time
   _SYSLOG_Write
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         _putch *
     _time
   _initHW
     _ADC_Initialize
     _LED_Init
     _lcd_init
       _lcd_busy
       _lcd_init_pins
       _lcd_write_ctrl
     _rtcc_init
     _spi_init
     _uart_init
   _lcd_goto1
     _lcd_busy
     _lcd_write_ctrl
   _lcd_puts
     _lcd_putch
       _lcd_busy
       _lcd_write_data
   _memset
   _sprintf
     __doprnt
       Absolute function(Fake) *
       ___lwdiv *
       ___lwmod *
         ___lwdiv (ARG)
       _putch *
   _time

 _low_isr (ROOT)

 _high_isr (ROOT)
   _rtcc_handler

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E7F      0       0      38        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      30        0.0%
BANK12             100      0       0      28        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      68      11       40.6%
BITBANK2           100      0       0       8        0.0%
BANK2              100     2D      D4       9       82.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100     83      D4       7       82.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9E      A0       5      100.0%
BITBANK14           80      0       0      33        0.0%
BANK14              80      0       0      34        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BIGRAM_1            60      0       0      37        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5C      5D       1       98.9%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     30D      29        0.0%
DATA                 0      0     30D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Sat Sep 03 13:18:35 2016

                         __CFG_BW$16 000000                 __end_of_DHCP_Handler 62F8  
                waitForDMA@econ1_val 000B                                   bsr 000FE0  
                   ??_ICMP_EchoReply 0067           TCP_InsertRxBuffer@data_len 000E  
        ??_IPV4_PseudoHeaderChecksum 0004                       ??_ICMP_Receive 0074  
                       __CFG_CP0$OFF 000000                       ??_ENCx24_Write 0007  
                                l501 0000                                  l503 0016  
                                l351 869A                                  l354 86A2  
                                l283 87AA                                  l436 0012  
                                l454 7466                                  l439 833E  
                                l448 7456                                  l608 839C  
                                l473 7FB6                                  l617 8094  
                                l626 7B94                                  l635 7642  
                                l547 7CAE                                  l555 803A  
                                l491 751A                                  l556 802C  
                                l900 6260                                  l566 815A  
                                l902 6274                                  l567 814C  
                                l577 819A                                  l578 818C  
                                l738 8294                                  l739 8286  
                                l588 81DA                                  l860 6434  
                                l589 81CC                                  l859 6386  
                                l779 4D72                                  _GIE 007F97  
                        ?_ETH_GetMAC 0008                 __end_of_DHCP_Request 64D0  
                 ICMP_EchoReply@cksm 006F              IPv4_Start@targetAddress 0060  
                        ?_ETH_Read32 0003                          ?_ETH_Read16 0003  
                       UDP_Start@ret 0058                                  prod 000FF3  
               TCP_Snd@tcpDataLength 009E                                  tosl 000FFD  
                                wreg 000FE8                          ?_ETH_Insert 000B  
                       __CFG_IESO$ON 000000                         __CFG_MODE$MM 000000  
                        ?_ETH_Write8 0001                       _ipv4SubnetMask 0192  
          TCP_FiniteStateMachine@ret 00CF                      ?_Network_Manage 0001  
                       __CFG_WDT$OFF 000000                                 l1035 68AC  
                               l1212 4310                                 l1108 8798  
                               l1214 40CA                                 l1215 4150  
                               l1241 6C7C                                 l1242 6C76  
                               l1253 6CEC                                 l2133 7F24  
                               l1270 488E                                 l2143 825C  
                               l1185 7EB4                                 l1274 4902  
                               l1268 47D4                                 l1293 1482  
                               l1278 4976                                 l1455 84D0  
                               l1675 6D6E                                 l1694 53B6  
                               l1689 5026                                 l8001 75F2  
                               l8005 7624                                 l8103 451C  
                               l8023 8714                                 l8105 45D6  
                               l8025 871A                                 l8017 7E46  
                               l8113 7F8C                                 l9011 46C0  
                               l8045 730A                                 l9005 4672  
                               l9101 505A                                 l8207 6372  
                               l9015 4702                                 l8065 4000  
                               l9041 48CC                                 l9105 50B0  
                               l9113 5100                                 l9121 5168  
                               l8411 681A                                 l9051 49AE  
                               l9035 4858                                 l9019 471C  
                               l8251 7F60                                 l8331 61D6  
                               l9131 519C                                 l9115 512A  
                               l9107 50B6                                 l8245 7F30  
                               l8253 7F64                                 l8333 61EC  
                               l8325 6198                                 l9133 51B6  
                               l9063 7802                                 l7631 7C84  
                               l8271 5B76                                 l8503 1496  
                               l9231 7A16                                 l9047 4940  
                               l8351 624A                                 l8343 6226  
                               l9119 5130                                 l9073 7852  
                               l7633 7C8C                                 l8089 43DA  
                               l8097 4432                                 l8505 14A6  
                               l9241 8102                                 l8433 6C32  
                               l8425 6C14                                 l8345 622E  
                               l8329 61C0                                 l9153 51EC  
                               l7635 7C94                                 l8523 16EC  
                               l9227 79EA                                 l9323 4C30  
                               l9307 4BBC                                 l8435 6C38  
                               l8427 6C1C                                 l8363 628E  
                               l8371 62B0                                 l9171 5266  
                               l9147 51E8                                 l9139 51BA  
                               l9163 521A                                 l9083 4FC2  
                               l9069 7814                                 l9077 7868  
                               l7629 7C7C                                 l7901 6688  
                               l8269 5B3A                                 l9317 4C22  
                               l8365 629E                                 l8373 62CC  
                               l9421 56D4                                 l9413 5680  
                               l9405 563A                                 l9165 5228  
                               l9093 502A                                 l7639 7C9C  
                               l7911 7E54                                 l8623 254E  
                               l8607 2214                                 l8471 6CE8  
                               l8375 62DA                                 l8367 62A4  
                               l8359 6288                                 l9191 536C  
                               l9175 528C                                 l9095 502E  
                               l7817 7196                                 l8721 3476  
                               l8713 33FC                                 l8625 265E  
                               l8609 2240                                 l8545 1AEE  
                               l8537 1A54                                 l8481 1116  
                               l9249 844A                                 l9337 4D4C  
                               l9353 4EB0                                 l8449 6C84  
                               l8465 6CBE                                 l9433 5752  
                               l9185 5328                                 l9177 5292  
                               l9089 4FFE                                 l7675 7C20  
                               l8731 3532                                 l8715 342E  
                               l8651 2B92                                 l8635 2922  
                               l8627 2664                                 l9603 6B78  
                               l8467 6CCC                                 l8379 62E8  
                               l9179 52DA                                 l9187 5336  
                               l9195 5392                                 l7861 7D8E  
                               l7917 7E82                                 l8725 34E8  
                               l8653 2BC0                                 l8637 292A  
                               l8629 2674                                 l8557 1E42  
                               l8821 39B4                                 l9605 6B88  
                               l9701 7680                                 l9285 82F8  
                               l8469 6CDC                                 l9437 575E  
                               l9197 5398                                 l7791 0000  
                               l7679 7C4A                                 l7951 68F8  
                               l8815 3930                                 l8807 38B4  
                               l8751 35D4                                 l8583 1FBA  
                               l8567 1ED4                                 l8495 1470  
                               l8903 701A                                 l9391 53FE  
                               l9527 863C                                 l7857 7D80  
                               l7793 000E                                 l7945 68BC  
                               l7937 6834                                 l8745 35AC  
                               l8729 352C                                 l9553 7CF4  
                               l9721 76C8                                 l9705 768A  
                               l8921 7FD8                                 l9385 53E2  
                               l8833 7EF4                                 l7955 68FE  
                               l8771 365C                                 l8747 35C6  
                               l8691 3160                                 l8667 2FBA  
                               l8595 1FFC                                 l8819 3940  
                               l9467 8546                                 l9715 76AC  
                               l9635 7424                                 l9643 744E  
                               l8835 7EFC                                 l7957 690C  
                               l8781 3734                                 l8773 3668  
                               l8765 364E                                 l8685 312A  
                               l8677 30E8                                 l8597 2036  
                               l9549 7CD6                                 l9709 7692  
                               l8925 7FE8                                 l9397 55E0  
                               l8845 7F1A                                 l8837 7F00  
                               l8861 8252                                 l8853 8234  
                               l9741 7216                                 l9639 7432  
                               l8855 823C                                 l9743 721E  
                               l9665 86C8                                 l8865 0000  
                               l9657 746C                                 l8945 7584  
                               l8857 8240                                 l9745 7226  
                               l7995 75E0                                 l8795 37AE  
                               l8699 3382                                 l8939 7562  
                               l8963 6E0E                                 l9677 848A  
                               l8973 6E44                                 l9749 724A  
                               l8799 37C4                                 l9695 7672  
                               l9791 5A42                                 l9775 5796  
                               STR_1 109A                                 STR_2 1039  
                               l9937 77DC                                 l9777 57A0  
                               STR_3 1090                                 STR_4 1066  
                               l9699 767A                                 l8979 6EC0  
                               l9795 5A86                                 STR_5 1077  
                               STR_6 1084                                 l9949 7BFA  
                               STR_7 10A2                                 STR_8 1055  
                               l9995 8594                                 l9999 85A6  
                               _GIEH 007F97                                 _GIEL 007F96  
        __end_of_TCP_GetReceivedData 77E6                                 _LATE 000F8D  
                               _LATH 000F90                                 _LATJ 000F91  
                               _IPEN 007E87                                 _RBPU 007F8F  
                               _TMR1 000FCE                      lcd_write_data@d 0002  
                      ?_ETH_MACRead8 0001                         lcd_goto1@pos 0003  
                      __CFG_FCMEN$ON 000000                         __CFG_STVR$ON 000000  
             __end_of_lcd_write_data 8618                      __end_of_TCP_Snd 45DC  
             __end_of_lcd_write_ctrl 8638                      _TCP_PayloadSave 5AB0  
                    lcd_write_ctrl@c 0002                                 _main 6CF0  
                               _time 7CB2                                 fsr0h 000FEA  
                               fsr1h 000FE2                                 indf0 000FEF  
                               fsr0l 000FE9                                 fsr2h 000FDA  
                               indf1 000FE7                                 fsr1l 000FE1  
                               indf2 000FDF                                 fsr2l 000FD9  
                               btemp 005E                          _SYSLOG_Init 8342  
                               prodl 000FF3                                 start 0028  
                      __CFG_FOSC2$ON 000000                         ?_IPV4_Packet 0001  
                 __size_of_ETH_Read8 0030                   __size_of_ETH_Flush 0034  
             __size_of_ETH_ReadBlock 0096                    SPI_ExchangeByte@v 0002  
                       ___param_bank 000010                __size_of_SYSLOG_Write 0028  
                 __size_of_IPV4_Init 000C                   __size_of_IPV4_Send 0072  
                        ?_TCB_Insert 0002                     ??_ENCx24_PhyRead 000D  
                       ?_ETH_Write32 0003                         ?_ETH_Write16 0003  
                 ETH_Flush@newRXTail 0009                   ETH_Init@phcon1_val 0016  
                   ARPV4_Request@ret 002E                  __size_of_ARPV4_Init 001A  
           __size_of_ETH_CheckLinkUp 0034              ?_TCP_FiniteStateMachine 0001  
                   __end_of_LED_Init 8658                         _BAUDCON1bits 000F7E  
                      __CFG_WAIT$OFF 000000        ETH_TxComputeChecksum@econ1Val 001B  
                   _ETH_GetByteCount 8658                       __CFG_CCP2MX$ON 000000  
                              l10033 7930                                l10051 69CA  
                              l10019 879A                                l10131 6DDE  
                              l10213 7266                                l10037 795E  
                              l10109 6D2C                                l10071 6A70  
                              l10215 7270                                l10057 6A04  
                              l10049 69BE                                l10217 7274  
                              l10067 6A50                     __end_of_ETH_Copy 751E  
                              l10083 8460                                l10079 6ABA  
                              l10087 8470                     __end_of_ETH_Dump 7FC2  
                   __end_of_ETH_Init 6BE0                    _nextPacketPointer 019E  
                   __end_of_ETH_Send 85F8                   __size_of_TCB_Check 0086  
                              ?_main 0001                                ?_time 0002  
             __size_of_ETH_Set_TXRTS 000C  IPV4_PseudoHeaderChecksum@payloadLen 0002  
                              _CREN1 007D5C                                u11000 451A  
                              u11010 456C                                u11020 45D6  
                              u11007 450C                                u11200 5F38  
                              u12000 1AD8                                u11017 4554  
                              u11210 5F6C                                u10250 7C42  
                              u11027 45BE                                u11220 5FA0  
                              u10340 0016                                u11300 5B24  
                              u12100 1DD2                                u12020 1B22  
                              u10341 0014                                u11230 5FD4  
                              u11150 5E04                                u12110 1E10  
                              u12030 1B74                                u11070 8062  
                              u11207 5F28                                u12007 1ACC  
                              u11240 6002                                u11160 5E38  
                              u10520 7620                                u10600 3B20  
                              u11400 5DB8                                u11320 5B76  
                              u12120 1E3E                                u11080 7B4A  
                              u11217 5F60                                u10257 7C38  
                              u12041 1BB6                                u11250 6030  
                              u11170 5E78                                u10370 6550  
                              u10450 6842                                u10610 3B86  
                              u11330 5BB4                                u13010 315C  
                              u12210 1F80                                u12130 1E92  
                              u12050 1C08                                u11227 5F94  
                              u11307 5B14                                u12107 1DC2  
                              u12027 1B16                                u11260 6058  
                              u11180 5EB8                                u10380 65F6  
                              u10460 6852                                u10700 3ECA  
                              u10620 3BEC                                u11340 5BFE  
                              u13100 33B0                                u13020 31B0  
                              u12140 1EC6                                u12060 1C72  
                              u11237 5FC8                                u11157 5DF4  
                              u12301 212C                                u12117 1E00  
                              u12037 1B5C                                u11270 608A  
                              u11190 5EF8                                u10710 3F60  
                              u10630 3C56                                u11350 5C44  
                              u13030 3202                                u12310 216A  
                              u12230 1FB6                                u12070 1CA6  
                              u11247 5FF8                                u11167 5E2C  
                              u10527 7614                                u10375 6546  
                              u10607 3B10                                u11407 5DAC  
                              u11327 5B66                                u12127 1E3C  
                              u10800 4108                                u10720 3FA4  
                              u10640 3CC0                                u11360 5C82  
                              u11280 5AE0                                u13200 3560  
                              u13120 33EC                                u13040 326C  
                              u12400 2360                                u12240 1FEE  
                              u12160 1F02                                u12080 1CF8  
                              u11440 60A6                                u14000 50AE  
                              u11257 6026                                u11177 5E68  
                              u10385 65EC                                u10705 3EC0  
                              u10617 3B6E                                u11337 5BA4  
                              u13017 3150                                u12217 1F76  
                              u12137 1E7A                                u12057 1BF0  
                              u11521 62D8                                u10730 3FF0  
                              u10650 3CDA                                u10570 3A52  
                              u11370 5CC8                                u13050 32A0  
                              u12330 21CE                                u12090 1D70  
                              u14010 50EE                                u11267 604C  
                              u11187 5EA8                                u10627 3BD4  
                              u11347 5BEE                                u13107 33A6  
                              u13027 3198                                u12411 2388  
                              u12147 1EBA                                u12067 1C5A  
                              u11451 60BE                                u10900 4310  
                              u10820 4150                                u10660 3D76  
                              u10580 3A8A                                u11380 5D1A  
                              u13220 359C                                u13140 3460  
                              u13060 32DA                                u12500 25F0  
                              u12420 23DC                                u12260 2066  
                              u11700 1238                                u14020 5122  
                              u11277 607E                                u11197 5EE8  
                              u10717 3F50                                u10637 3C3E  
                              u11357 5C34                                u13301 36E0  
                              u13037 31EA                                u12317 215A  
                              u12237 1FB4                                u12077 1C9A  
                              u11461 60F8                                u10910 4340  
                              u10830 418E                                u10750 403C  
                              u10670 3DDC                                u10590 3ADC  
                              u11390 5D84                                u13310 371E  
                              u13070 3314                                u12510 262A  
                              u12350 223C                                u12190 1F48  
                              u11710 128A                                u10807 40F8  
                              u10727 3F94                                u10655 3CD0  
                              u10647 3CA8                                u11367 5C72  
                              u11287 5AD6                                u13207 3556  
                              u13127 33E0                                u13047 3254  
                              u12431 241E                                u12407 2348  
                              u12271 207A                                u12247 1FE2  
                              u12167 1EF8                                u12087 1CE0  
                              u14007 50A4                                u10920 43A0  
                              u10840 41CC                                u10680 3E46  
                              u13400 389E                                u13160 34AE  
                              u13080 3348                                u12600 2832  
                              u12520 265E                                u12440 2472  
                              u12360 2290                                u12280 20B2  
                              u11800 156E                                u11720 12F4  
                              u10737 3FE6                                u10577 3A42  
                              u11377 5CB8                                u13321 3732  
                              u13057 3294                                u12337 21B6  
                              u12097 1D58                                u11481 618C  
                              u14017 50E4                                u10850 4212  
                              u10770 4082                                u10690 3EB0  
                              u13410 38F4                                u13330 3762  
                              u13250 3602                                u13170 34E2  
                              u13090 337C                                u12610 2874  
                              u12530 26A4                                u12450 24DC  
                              u12290 2104                                u11810 15D0  
                              u11730 1356                                u11650 10DC  
                              u10907 4304                                u10827 4140  
                              u10667 3D5E                                u10587 3A7A  
                              u11387 5D02                                u13227 3590  
                              u13147 3454                                u13067 32CC  
                              u12507 25E2                                u12427 23C4  
                              u12371 22B8                                u12267 2056  
                              u11707 1220                                u14027 5118  
                              u10860 4250                                u13420 392A  
                              u13180 351A                                u12700 2A1C  
                              u12620 28B6                                u12460 2512  
                              u12380 22F8                                u11900 1806  
                              u11820 160E                                u11740 1394  
                              u11660 110E                                u14300 4CCC  
                              u10917 4336                                u10837 417E  
                              u10757 402C                                u10677 3DC4  
                              u10597 3ACC                                u11397 5D6C  
                              u13317 370E                                u13077 3306  
                              u12541 26B8                                u12517 261C  
                              u12357 223A                                u12197 1F3E  
                              u11717 1272                                u10870 4296  
                              u10790 40CA                                u13430 396E  
                              u13350 379E                                u13270 363E  
                              u12710 2A5E                                u12630 28EC  
                              u12550 270C                                u12470 254A  
                              u11910 1870                                u11830 1648  
                              u11750 13C8                                u11670 1166  
                              u11590 6C42                                u10927 4388  
                              u10847 41BC                                u10687 3E2E  
                              u13407 3892                                u13167 34A0  
                              u13087 333C                                u12607 2822  
                              u12527 2652                                u12447 245A  
                              u12391 230C                                u12367 2278  
                              u12287 20A6                                u11807 1556  
                              u11727 12DC                                u14311 4D30  
                              _LATB3 007C53                                u10960 4464  
                              u10880 42D4                                u13440 39E8  
                              u12720 2AA0                                u12640 2922  
                              u12480 2582                                u11920 18A4  
                              u11840 1682                                u11760 1402  
                              u11680 11A4                                u14400 4F5A  
                              u14128 5252                                u10857 4202  
                              u10777 4072                                u10697 3E98  
                              u13417 38E4                                u13337 3758  
                              u13257 35F8                                u13177 34D6  
                              u13097 3370                                u12801 2CB4  
                              u12617 2864                                u12561 2734  
                              u12537 2694                                u12457 24C4  
                              u12297 20EC                                u11817 15C0  
                              u11737 1346                                u11657 10D2  
                              u14305 4CC2                                u10970 449C  
                              u13450 3A1C                                u13370 37FC  
                              u13290 36B8                                u12810 2D08  
                              u12730 2AE2                                u12650 2958  
                              u12570 2778                                u12490 25B6  
                              u11930 18F6                                u11850 16B6  
                              u11770 143C                                u11690 11E6  
                              u13610 46A2                                u10867 4240  
                              u13427 391E                                u13187 350E  
                              u12707 2A10                                u12627 28A6  
                              u12467 2506                                u12387 22E8  
                              u11907 17EE                                u11827 15FE  
                              u11747 1384                                u11667 1104  
                              u10980 44DA                                u13380 3836  
                              u12900 2F50                                u12740 2B24  
                              u12580 27AE                                u11940 196E  
                              u11860 16EA                                u11780 1470  
                              u14148 5356                                u10877 4286  
                              u10797 40BA                                u13437 3964  
                              u13357 3792                                u13277 3632  
                              u12717 2A4E                                u12637 28E0  
                              u12557 26F4                                u12477 253E  
                              u11917 1858                                u11837 163A  
                              u11757 13BC                                u11677 114E  
                              u14405 4F50                                u13390 386A  
                              u12830 2D7E                                u12750 2B5A  
                              u12670 2992                                u12590 27F0  
                              u11950 19D0                                u11870 1720  
                              u11790 14F6                                u13630 46FE  
                              u14430 548E                                u10967 445A  
                              u10887 42C4                                u13447 39DC  
                              u12727 2A90                                u12647 2916  
                              u12487 2576                                u11927 1898  
                              u11847 1674                                u11767 13F4  
                              u11687 1194                                u14351 4D9C  
                              u14271 4C14                                u12920 2F86  
                              u12760 2B90                                u11960 1A0E  
                              u11880 1772                                u14360 4E34  
                              u14440 556A                                _LATH0 007C80  
                              u10977 4490                                u13457 3A10  
                              u13377 37EE                                u13297 36A0  
                              u12817 2CF0                                u12737 2AD2  
                              u12657 294E                                u12577 2768  
                              u12497 25AA                                u11937 18DE  
                              u11857 16AA                                u11777 142E  
                              u11697 11D6                                u13617 4692  
                              _LATH1 007C81                                u12850 2DF8  
                              u12770 2C10                                u12690 29E6  
                              u14450 55CE                                _LATH2 007C82  
                              u10987 44CA                                u13387 3828  
                              u12907 2F40                                u12747 2B14  
                              u12587 27A2                                u11947 1956  
                              u11891 17B4                                u11867 16DE  
                              u11787 1464                                u14435 5484  
                              u15307 7334                                u12940 2FBA  
                              u12860 2E48                                u11980 1A50  
                              u13820 493E                                u13740 4856  
                              u13397 385E                                u12837 2D66  
                              u12781 2C38                                u12757 2B4E  
                              u12677 2986                                u12597 27E0  
                              u11957 19C0                                u11877 1714  
                              u11797 14DE                                u14365 4E2A  
                              u13637 46EE                                u14461 55DE  
                              u14445 5560                                u15317 7344  
                              u13910 7850                                u12950 3028  
                              u12870 2E8E                                u12790 2C8C  
                              u11990 1AA4                                u14550 7CD4  
                              u13830 4974                                u13750 488C  
                              u13670 4762                                u15270 6D6E  
                              u12927 2F7C                                u12767 2B84  
                              u11967 19FE                                u11887 175A  
                              u15407 6AD2                                u14391 4EDC  
                              u15327 7354                                u12960 307A  
                              u12880 2ECC                                u13680 4776  
                              u12857 2DE8                                u12777 2BF8  
                              u12697 29D6                                u15417 6AE8  
                              u15337 7364                                u12890 2F12  
                              u13850 49AE                                u13690 47C6  
                              u12947 2FB0                                u12867 2E38  
                              u11987 1A4C          __size_of_ETH_readLinkStatus 0000  
                              u15427 6B7E                                u13827 4932  
                              u13747 484A                                u15347 737A  
                              u12980 30D8                                u13860 4A42  
                              u13780 48CA                                u13917 7840  
                              u12957 3010                                u12877 2E7E  
                              u12797 2C74                                u11997 1A8C  
                              u15437 7A38                                u13837 4968  
                              u13757 4880                                u13677 4752  
                              u15357 7390                                u12990 311A  
                              u13870 4B2E                                u13790 4900  
                              u14910 5918                                u14830 57DC  
                              u12967 3062                                u12887 2EBC  
                              u15447 7A52                                u15367 73CA  
                              u15287 8604                                u12897 2F02  
                              u13865 4A38                                u13857 49A2  
                              u13697 47AE                                u15377 8620  
                              u15297 860E                                u14930 595C  
                              u14850 5826                                u12987 30C0  
                              u13875 4B24                                u13787 48BE  
                              u15387 862E                                u14940 599A  
                              u14860 586C                                u12997 310E  
                              u13797 48F4                                u14917 590E  
                              u14837 57CC                                u15397 87EE  
                              u14950 59CA                                u14870 58AA  
             __size_of_ETH_SetPktDec 000C                                u13968 4FE8  
                              u14960 5A02                                u14937 594C  
                              u14857 5816                                u14970 5A36  
                              u14890 58E2                   __size_of_TCB_Reset 02C8  
                              u14947 598A                                u14867 585C  
                              u14980 5A80                                u14957 59C0  
                              u14877 589A                                u13998 507A  
                              u14967 59F6                                u14977 5A2A  
                              u14897 58D8                      __end_of___lwdiv 7F2E  
                              u14987 5A70                      __end_of___lwmod 8266  
                __size_of_ENCx24_BFC 0040                  __size_of_ENCx24_BFS 0040  
                              _SPEN1 007D5F                                _TX1IF 007CF4  
                    __end_of__doprnt 53BC                                _TRISA 000F92  
                              _TRISE 000F96                                _TRISH 000F99  
                              _TRISJ 000F9A                       __CFG_ECCPMX$ON 000000  
     __size_of_ETH_TxComputeChecksum 00AE        __end_of_ETH_TxComputeChecksum 71D2  
                  ??_ENCx24_PHYWrite 000D                 __size_of_DHCP_Manage 008E  
                   __end_of_TCP_Bind 8592                     __end_of_TCP_Init 86C6  
                   __end_of_TCP_Recv 4B8C                          ?_TCP_Listen 00D4  
                   __end_of_TCP_Send 7124                          ?_IPv4_Start 004B  
                    __end_of_dpowers 100B                     __end_of_UDP_Send 732A  
                  ETH_GetMAC@macAddr 0008                          ?_TCP_Update 0001  
                              _putch 8692                                main@t 02A3  
                  _ETH_ResetReceiver 7DAC                       ??_ETH_MACRead8 0005  
                   ?_TCP_GetRxLength 000A                   __size_of_UDP_Start 004E  
                    __end_of_low_isr 0028            __size_of_ETH_EventHandler 00A6  
          _IPV4_PseudoHeaderChecksum 751E                                pclath 000FFA  
    TCP_FiniteStateMachine@nextState 00D3                                tablat 000FF5  
             TCP_InsertRxBuffer@data 000C                                time@t 0002  
                              plusw1 000FE3                                plusw2 000FDB  
                       _SYSLOG_Write 84D4                      ?_lcd_write_data 0001  
                 ?_ETH_ResetReceiver 0001                      ??_lcd_init_pins 0002  
                    ?_lcd_write_ctrl 0001                                status 000FD8  
                 _TCP_InsertRxBuffer 76DA                      __end_of_sprintf 83D0  
                      ?_IPV4_GetMyIP 0002                        ?_ETH_SaveRDPT 0001  
         ETH_RxComputeChecksum@rxPtr 0017                        ?_ETH_SetRXptr 0003  
                __size_of_ETH_GetMAC 007A                       __CFG_ETHLED$ON 000000  
      ETH_TxComputeChecksum@position 000D                  __size_of_ETH_Read16 0048  
                __size_of_ETH_Read32 0064                 __end_of_ARPV4_Packet 4FC0  
                    __initialization 809E                  ??_ETH_ResetReceiver 0009  
    DEMO_TCP_EchoServer@socket_state 00DA                  __size_of_ETH_Insert 0052  
                    TCP_Send@dataLen 00B8                 __end_of_ARPV4_Lookup 7E98  
                ?_TCP_InsertRxBuffer 000A                         __end_of_main 6DE4  
               __end_of_ARPV4_Update 84AA                         __end_of_time 7D06  
     __end_of_TCP_FiniteStateMachine 3A22                  __size_of_ETH_Write8 001A  
                        ETH_Copy@len 000D                  _DEMO_TCP_EchoServer 69AC  
                    _DHCP_WriteZeros 8712                               ??_main 005D  
                             ??_time 0006                        __activetblptr 000003  
                    TCP_SendDone@ret 000C                  _TCP_ParseTCPOptions 6BE0  
               DEMO_TCP_EchoServer@i 00DD                        _ETH_ReadBlock 75B6  
                    TCP_Snd@txHeader 00A0                 ??_TCP_InsertRxBuffer 0010  
                  __end_of_ETH_Read8 83A2                    __end_of_ETH_Flush 830E  
          __end_of_ETH_ResetReceiver 7DFC              __end_of_TCP_PayloadSave 5DC4  
                  __end_of_IPV4_Init 87D6             __end_of_SPI_ExchangeByte 87B2  
                  __end_of_IPV4_Send 7ACE                            ??_TCP_Snd 0067  
                             _ADCON0 000FC2                               _ADCON1 000FC1  
                             _ADCON2 000FC0                               _ADRESH 000FC4  
                             _ADRESL 000FC3                       ETH_Dump@length 000B  
                             ?_putch 0001                  __size_of_TCB_Insert 004C  
                             _T1SYNC 007E6A                 ?_DEMO_TCP_EchoServer 0001  
        DEMO_TCP_EchoServer@port7TCB 0232                               _OSCCON 000FD3  
                     ??_IPV4_GetMyIP 0006                               _SPBRG1 000FAF  
                             _TMR1IE 007CE8                               _TMR1IF 007CF0  
                             _TMR1CS 007E69                       ??_ETH_SaveRDPT 000B  
                             _TMR1IP 007CF8                               _TMR1ON 007E68  
                      _ETH_Set_TXRTS 87D6                 __size_of_ENCx24_Read 004A  
                  __end_of_TCB_Check 786C                               _SSPBUF 000FC9  
               __end_of_ICMP_Receive 800C                       ??_ETH_SetRXptr 0005  
                      _ETH_SetPktDec 87BE                               _TXREG1 000FAD  
                             _TXSTA1 000FAC                     __end_of_dhcpName 1028  
               ?_TCP_ParseTCPOptions 0001                    __end_of_TCB_Reset 608C  
               __end_of_ENCx24_Write 816A                __size_of_DHCP_Handler 026C  
                  main@no_ip_display 02A7                       __CFG_XINST$OFF 000000  
                    __CFG_EASHFT$OFF 000000                  _ETH_SendSystemReset 79EA  
                   __end_of_lcd_busy 87F6                     __end_of_lcd_init 73D4  
                     ETH_ReadBlock@p 0008                     __end_of_high_isr 87FE  
              ICMP_EchoReply@icmpHdr 0058                     __end_of_lcd_puts 85B4  
                 _ETH_ResetByteCount 8778                 TCP_Snd@payloadLength 009B  
              ICMP_EchoReply@ipv4Hdr 0059                  __size_of_TCP_Listen 0084  
                __size_of_IPv4_Start 018E                               _ethMAC 0299  
                             _arpMap 0300                            ??___lwdiv 0006  
                          ??___lwmod 000D                __size_of_DHCP_Request 01D8  
                __size_of_TCP_Update 033E                               _initHW 81EA  
                             _memcmp 7F2E                            ??__doprnt 0011  
                             _memset 8456                  ETH_SetRXptr@address 0003  
                  __end_of_UDP_Start 7E4A                               clear_0 80B6  
                             clear_1 80C2                               clear_2 80CE  
                             _tcpMss 01A4                         __doprnt@flag 0018  
               __end_of_broadcastMAC 102E                               _printf 854A  
             ETH_EventHandler@eirVal 0011                  ?_ETH_ResetByteCount 0001  
                       __doprnt@prec 0015                               main@ip 02C8  
                    UDP_Start@destIP 0067                 ETH_GetByteCount@wPtr 000D  
                       __pdataCOMRAM 005D                TCP_GetRxLength@tcbPtr 000A  
                     ?_ETH_ReadBlock 0003                         ?_UDP_Receive 0097  
                       __mediumconst 0000                    ??_ETH_CheckLinkUp 000F  
               ?_ETH_SendSystemReset 0001                            ??_low_isr 0001  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8                     __end_of_spi_init 87BE  
       __size_of_Network_WaitForLink 000E                   ETH_CheckLinkUp@ret 0013  
                          ??_sprintf 0027                         ??_ARPV4_Init 0002  
              DHCP_WriteZeros@length 0004                         _DHCP_Handler 608C  
              ??_DEMO_TCP_EchoServer 005D                        DHCP_Handler@v 007F  
                     ETH_Insert@data 000B                      __CFG_FOSC$HSPLL 000000  
                     ?_ETH_Set_TXRTS 0001                           __accesstop 0060  
            __end_of__initialization 80DA                       ?_ETH_SetPktDec 0001  
               ??_ETH_ResetByteCount 000B                         ??_ENCx24_BFC 0007  
                       ??_ENCx24_BFS 0007                   TCP_SendDone@tcbPtr 000A  
                          ?_LED_Init 0001                ??_TCP_ParseTCPOptions 000F  
                ENCx24_PHYWrite@data 000B                            ?_ETH_Copy 000D  
                          ?_ETH_Dump 000B                            ?_ETH_Init 0001  
                          ?_ETH_Send 0001                        ___rparam_used 000001  
                       _DHCP_Request 62F8                        ?_Network_Init 0001  
                      ?_Network_Read 0001               IPV4_Send@payloadLength 001D  
              IPv4_Start@destAddress 004B              __end_of_DHCP_WriteZeros 872A  
                     __pcstackCOMRAM 0001                _ETH_RxComputeChecksum 6F9A  
            __size_of_ETH_WriteBlock 0058                 __size_of_IPV4_Packet 03B6  
                          ?_TCP_Bind 000A                __end_of_ARPV4_Request 668C  
                          LED_Init@x 0002                            ?_TCP_Init 0001  
                          ?_TCP_Recv 00D4                            ?_TCP_Send 00B4  
            __size_of_ETH_WriteStart 0054                            ?_UDP_Send 0001  
                      __end_of_putch 86AC                 __end_of_ETH_MACRead8 82A2  
               __size_of_ETH_Write16 0022                 __size_of_ETH_Write32 002E  
                 __end_of_ARPV4_Init 86E0    TCP_ParseTCPOptions@tcpOptionsSize 0013  
                       _TXPacketSize 019A         __end_of_ETH_NextPacketUpdate 7B3E  
                       ??_ETH_GetMAC 000A                         _dhcpServerId 0222  
                       ETH_Read8@ret 0003                         ??_ETH_Read32 0007  
                       ??_ETH_Read16 0005                     ??_Network_Manage 017E  
                 __end_of_ENCx24_BFC 81EA                   __end_of_ENCx24_BFS 81AA  
              ??_ETH_SendSystemReset 000B                         ??_ETH_Insert 0010  
                   TCP_Listen@tcbPtr 00D4                   __size_of_lcd_goto1 000E  
         __size_of_ETH_ResetReceiver 0050                        TCB_Insert@ptr 0002  
                       ??_ETH_Write8 0003             DHCP_Handler@optionLength 0092  
                   ?_TCP_PayloadSave 005A                           __doprnt@ap 0010  
                         __doprnt@cp 0016                           __doprnt@pb 000E  
                 __size_of_lcd_putch 001C                              ??_putch 0002  
                         __pbssBANK0 00FE                           __pbssBANK1 0183  
                         __pbssBANK2 0200                           __pbssBANK3 0300  
                   _ETH_EventHandler 73D4       DEMO_TCP_EchoServer@rxdataPort7 0269  
           __end_of_ETH_GetByteCount 8676                __size_of_ARPV4_Packet 0434  
                         ??_LED_Init 0002                       TCP_Bind@tcbPtr 000A  
              __size_of_ARPV4_Lookup 004E                         ?_SYSLOG_Init 0001  
                         ??_ETH_Copy 000F                           ??_ETH_Dump 000D  
                         ??_ETH_Init 0014                       ??_Network_Init 0018  
                     ??_Network_Read 011C                           ??_ETH_Send 0009  
              __size_of_ARPV4_Update 002A                   ENCx24_BankselSPI@a 0003  
                         _macAddress 102E                      TCB_Reset@tcbPtr 0002  
                 __end_of_ETH_GetMAC 79EA                        ETH_MACRead8@a 0007  
                      ETH_MACRead8@v 0005                   __end_of_ETH_Read16 809E  
                 __end_of_ETH_Read32 7BA2                         ??_TCB_Insert 0004  
                 __end_of_ETH_Insert 7DAC                         IPV4_Send@ret 0023  
                         ??_TCP_Bind 000E                           ??_TCP_Init 0002  
                         ??_TCP_Recv 00DA                           ??_TCP_Send 005A  
                    _ENCx24_PHYWrite 842A                   __end_of_ETH_Write8 86FA  
                            ?_initHW 0001                           ??_UDP_Send 0028  
                            ?_memcmp 0002                           _deviceTime 02CC  
                            ?_memset 0002            ETH_EventHandler@macon2Val 000D  
     DEMO_TCP_EchoServer@txdataPort7 027D             TCP_SocketPoll@socket_ptr 000A  
                            ?_printf 001C              __size_of_ADC_Initialize 0016  
                            _T1CKPS0 007E6C                              _T1CKPS1 007E6D  
               __end_of_IPV4_GetMyIP 8768                      ??_ETH_ReadBlock 0007  
               __end_of_ETH_SaveRDPT 8778                              _T1OSCEN 007E6B  
               __end_of_ETH_SetRXptr 8712                   __size_of_uart_init 0016  
             TCP_GetReceivedData@ret 0010                   __size_of_rtcc_init 0038  
                       SYSLOG_Init@t 0027                       TCB_Check@count 0007  
            __size_of_TCP_SocketInit 00C8              __size_of_TCP_SocketPoll 0026  
                         _ipv4Header 01A8                         _ARPV4_Packet 4B8C  
                            _OSCTUNE 000F9B                         ??_TCP_Listen 00D6  
                       ??_IPv4_Start 0050                     ??_lcd_write_data 0002  
                            _SSP1BUF 000FC9                     ??_lcd_write_ctrl 0002  
                       _ARPV4_Lookup 7E4A                              _TCP_Snd 3A22  
                       ??_TCP_Update 00D4                __size_of_ICMP_Receive 004A  
                       _ARPV4_Update 8480                            ?_lcd_busy 0001  
                          ?_lcd_init 0001                            ?_high_isr 0001  
                    ??_ETH_Set_TXRTS 0003                            ?_lcd_puts 0004  
                    ??_ETH_SetPktDec 0003                __size_of_ENCx24_Write 0042  
             ARPV4_Lookup@ip_address 0002                           _ipv4Router 0226  
                         _led_values 0200                   __end_of_TCB_Insert 7EE4  
                    TCP_Update@count 00DC                   UDP_Receive@udpcksm 0097  
                  ETH_Dump@newRXTail 000D                  SYSLOG_Write@message 0027  
               TCP_SocketInit@tcbPtr 000A                              __Hparam 0000  
       __size_of_TCP_GetReceivedData 0086                              __Lparam 0000  
             ?_ETH_RxComputeChecksum 000D                     ?_DHCP_WriteZeros 0004  
                  __end_of_lcd_goto1 8796                   TCP_GetRxLength@ret 0010  
                          ?_spi_init 0001                    __end_of_lcd_putch 8692  
                        time@gie_val 0006                              ___lwdiv 7EE4  
                            ___lwmod 8228                   __end_of_TCP_Listen 78F0  
                         _currentTCB 00FE                         __psmallconst 1000  
                      ?_TCP_SendDone 000A                   __end_of_IPv4_Start 69AC  
                            __doprnt 4FC0           __end_of_ETH_readLinkStatus 0000  
                    __size_of_initHW 003E                   __end_of_TCP_Update 5AB0  
                            __pcinit 809E                      __size_of_memcmp 004A  
                    __size_of_memset 002A                              __ramtop 1000  
                            __ptext0 6CF0                              __ptext1 8456  
                            __ptext2 8592                              __ptext3 8676  
                            __ptext4 85F8                              __ptext5 8788  
                            __ptext6 81EA                              __ptext7 872A  
                            __ptext8 87B2                              __ptext9 82A2  
                            _ethData 0183                              _ipv4DNS 0210  
                    __size_of_printf 0024    TCP_FiniteStateMachine@notAckBytes 00D0  
                      ??_DHCP_Manage 0059                    _ENCx24_BankselSPI 7C5C  
                       _ICMP_Receive 7FC2                    __end_of_hexpowers 1013  
                            _dpowers 1001                              _tcbList 01A2  
                       _ENCx24_Write 8128                   ?_ENCx24_BankselSPI 0001  
                            _low_isr 0018                 __size_of_UDP_Receive 00EE  
              _ETH_TxComputeChecksum 7124              __size_of_ICMP_EchoReply 0192  
                            _sprintf 83A2                    ?_SPI_ExchangeByte 0001  
                         ??_lcd_busy 0002                           ??_lcd_init 0003  
                            main@str 02A8                           ??_high_isr 0001  
                     __pintcode_body 87F6                           ??_lcd_puts 0006  
               end_of_initialization 80DA                  ??_ENCx24_BankselSPI 0003  
                        TCP_Snd@data 0097                          TCP_Snd@cksm 0099  
                          _ETH_Read8 8372                            _ETH_Flush 82DA  
                            memcmp@n 0004                   ??_SPI_ExchangeByte 0002  
                          _IPV4_Init 87CA                            _IPV4_Send 7A5C  
                 IPv4_Start@protocol 004F                              memset@c 0004  
                            memset@n 0006                              memset@p 0008  
                            int_func 87F6                         _broadcastMAC 1028  
                   UDP_Start@dstPort 006D                 _ETH_NextPacketUpdate 7ACE  
              __end_of_lcd_init_pins 87EC                  ETH_ReadBlock@length 0005  
            __end_of_ENCx24_PHYWrite 8456                    __end_of_uart_init 8740  
                         _waitForDMA 0000                       ETH_Write8@data 0003  
                      ?_rtcc_handler 0001                    __end_of_rtcc_init 82DA  
                   DHCP_Request@type 0070             TCP_InsertRxBuffer@tcbPtr 000A  
           __size_of_TCP_GetRxLength 0062                            _TCB_Check 77E6  
                   UDP_Start@srcPort 006B                __size_of_ETH_MACRead8 003C  
                            printf@f 001C                       _ETH_WriteBlock 7C04  
          TCP_GetReceivedData@tcbPtr 000A                  _Network_WaitForLink 8796  
                          _TCB_Reset 5DC4                              postdec1 000FE5  
                            postdec2 000FDD                           ??_spi_init 0002  
                            postinc0 000FEE                              postinc1 000FE6  
                            postinc2 000FDE                       ??_TCP_SendDone 000C  
                    _ETH_CheckLinkUp 830E                       _ETH_WriteStart 7D06  
                 TCP_PayloadSave@len 005A                ARPV4_Packet@mergeFlag 0031  
                 _nextSequenceNumber 022A            __end_of_ENCx24_BankselSPI 7CB2  
           ETH_RxComputeChecksum@len 000D                            _PORTBbits 000F81  
                     DHCP_Handler@ip 0077                            _UDP_Start 7DFC  
               __end_of_Network_Init 842A                 __end_of_Network_Read 727E  
            __size_of_ENCx24_PhyRead 0044                            _TRISAbits 000F92  
                          _TRISBbits 000F93                            _TRISCbits 000F94  
                          _TRISDbits 000F95                        _rcvPayloadLen 01A0  
               ?_Network_WaitForLink 0001          __size_of_TCP_InsertRxBuffer 0086  
                  IPV4_Packet@hdrLen 00F9                  __end_of_DHCP_Manage 76DA  
                      ??_ENCx24_Read 0007                    IPV4_Packet@length 00FA  
                  ICMP_EchoReply@ret 0073                           ?_ETH_Read8 0001  
                         ?_ETH_Flush 0001                           ?_IPV4_Init 0001  
                       _ETH_MACRead8 8266                           ?_IPV4_Send 001D  
              ?_ETH_NextPacketUpdate 0001                           main@old_ip 029F  
                     ??_rtcc_handler 0001                           lcd_putch@c 0003  
             __end_of_ETH_WriteBlock 7C5C                    __size_of_LED_Init 0020  
                      _dhcpLeaseTime 018A                     ENCx24_PHYWrite@a 000D  
               __size_of_SYSLOG_Init 0030                           ?_TCB_Check 0002  
                  __size_of_ETH_Copy 00A4                    __size_of_ETH_Dump 004A  
                  __size_of_ETH_Init 0118               __end_of_ETH_WriteStart 7D5A  
                  __size_of_ETH_Send 0022                           ?_TCB_Reset 0002  
              __size_of_IPV4_GetMyIP 0012                __size_of_ETH_SaveRDPT 0010  
              __size_of_ETH_SetRXptr 0018             __end_of_ETH_EventHandler 747A  
           ARPV4_Request@destAddress 000F                       TCP_Recv@length 00D8  
                      __pidataCOMRAM 87FE                    _UDP_CallBackTable 1034  
                     TCP_Recv@tcbPtr 00F7                    __size_of_TCP_Bind 0024  
                     _ADC_Initialize 8740                    __size_of_TCP_Init 001A  
                  __size_of_TCP_Recv 05B0                    __size_of_TCP_Send 00C4  
                     __end_of_initHW 8228                       __end_of_memcmp 7F78  
                     __end_of_memset 8480                    __size_of_UDP_Send 00AC  
                     __end_of_printf 856E            ETH_RxComputeChecksum@cksm 0015  
                         ?_UDP_Start 0067                  ICMP_Receive@icmpHdr 0079  
          ETH_RxComputeChecksum@seed 000F                       _TCP_SocketInit 6ED2  
                     _TCP_SocketPoll 8524                  ICMP_Receive@ipv4Hdr 005B  
        __end_of_DEMO_TCP_EchoServer 6AC8                  start_initialization 809E  
              ??_Network_WaitForLink 0014               ?_ETH_TxComputeChecksum 000D  
                      ETH_Read32@ret 0007                        ETH_Read16@ret 0005  
        __end_of_TCP_ParseTCPOptions 6CF0                       TCP_Send@tcbPtr 00B4  
       TCP_SocketPoll@tmpSocketState 000C          ETH_TxComputeChecksum@length 000F  
        __size_of_ETH_ResetByteCount 0010                    ?_ETH_GetByteCount 000B  
                       _IPV4_GetMyIP 8756                         _ETH_SaveRDPT 8768  
                       TCB_Check@ret 0006                         TCB_Check@ptr 0002  
           ??_TCP_FiniteStateMachine 00C3              __end_of_ETH_CheckLinkUp 8342  
                __end_of_ENCx24_Read 8056                         _ETH_SetRXptr 86FA  
                        ?_waitForDMA 0001                     ?_ENCx24_PHYWrite 000B  
                 ??_ETH_GetByteCount 000D                        ??_IPV4_Packet 0100  
                    ?_ETH_WriteBlock 0003                DHCP_Handler@ethPktMAC 0086  
                    ?_ETH_WriteStart 000B             DEMO_TCP_EchoServer@rxLen 00DB  
           DEMO_TCP_EchoServer@txLen 00D8                        ??_ETH_Write32 0007  
                      ??_ETH_Write16 0005            __end_of_UDP_CallBackTable 1039  
                        __doprnt@idx 0014               __end_of_ADC_Initialize 8756  
                        __doprnt@val 0019                  ARPV4_Request@header 002F  
                           ??_initHW 0004                             ??_memcmp 0006  
         __size_of_ENCx24_BankselSPI 0056                    ETH_ReadBlock@data 0003  
                           ??_memset 0008          __end_of_ETH_SendSystemReset 7A5C  
                  ??_TCP_GetRxLength 000C                             ??_printf 0021  
             __end_of_TCP_SocketInit 6F9A               __end_of_TCP_SocketPoll 854A  
              ENCx24_BankselSPI@bank 0004                          _DHCP_Manage 764C  
               IPv4_Start@macAddress 0064                        ETH_Insert@len 000C  
                    IPV4_Packet@cksm 00FC                  _TCP_GetReceivedData 7760  
                      __pcstackBANK0 0060                        __pcstackBANK1 0100  
                      __pcstackBANK2 029F                TCP_Recv@remoteAddress 00D4  
                     _ICMP_EchoReply 668C                             ?_TCP_Snd 0058  
               __end_of_TCP_SendDone 84D4               __size_of_ARPV4_Request 01BC  
                        ??_ETH_Read8 0003                          ??_ETH_Flush 0009  
             ??_ETH_NextPacketUpdate 0005                          ??_IPV4_Init 0002  
                      ?_SYSLOG_Write 0027                          ??_IPV4_Send 001F  
                  __size_of_lcd_busy 000A                    __size_of_lcd_init 00AA  
                  ENCx24_BFC@bitMask 0005                    __size_of_high_isr 87F6  
                          __doprnt@c 001B                            __doprnt@f 000F  
                  __size_of_lcd_puts 0022              ??_ETH_RxComputeChecksum 0011  
           __size_of_TCP_PayloadSave 0314                            __pnvBANK2 02CC  
               ?_TCP_GetReceivedData 000A      ICMP_EchoReply@ipv4PayloadLength 0071  
                   ___lwdiv@dividend 0002                          ??_TCB_Check 0004  
                          __pintcode 0008                          ??_TCB_Reset 0004  
                   ETH_MACRead8@bank 0006                            __ptext100 800C  
                          __ptext101 7C5C                            __ptext102 75B6  
                          __ptext103 87A4                            __ptext112 84FC  
                          __ptext104 5DC4                            __ptext113 0000  
                          __ptext105 76DA                            __ptext106 7BA2  
                          __ptext107 7760                            __ptext108 856E  
                          __ptext109 77E6                   ARPV4_Packet@x_2039 0036  
                           ?___lwdiv 0002                             ?___lwmod 0009  
                      IPV4_Send@cksm 0024                      ?_ADC_Initialize 0001  
                 ETH_WriteBlock@data 0003                             ?__doprnt 000E  
              __size_of_Network_Init 002C                __size_of_Network_Read 00AC  
                 ARPV4_Packet@header 0039                          __pintcodelo 0018  
                __end_of_IPV4_Packet 5772                   ARPV4_Packet@arpPtr 0033  
                  __size_of_spi_init 000C                            _lcd_goto1 8788  
                 ARPV4_Packet@length 002F         IPV4_PseudoHeaderChecksum@len 0009  
                          _lcd_putch 8676         IPV4_PseudoHeaderChecksum@tmp 000E  
                    ?_TCP_SocketInit 000A             ARPV4_Update@entryPointer 0002  
                    ?_TCP_SocketPoll 000A                  __end_of_ETH_Write16 85D6  
                __end_of_ETH_Write32 83FE                          __smallconst 1000  
                           _BAUDCON1 000F7E                          _clientState 005D  
                        ??_UDP_Start 0058           ETH_EventHandler@mabbipgVal 000B  
                     _ENCx24_PhyRead 80E4                __end_of_ETH_ReadBlock 764C  
               __end_of_rtcc_handler 8524               __end_of_ICMP_EchoReply 681E  
                           ?_low_isr 0001                  __size_of_waitForDMA 0000  
                          _last_bank 01A6                            _hexpowers 100B  
                   ___lwdiv@quotient 0007                            _localTime 02D0  
                DHCP_Request@started 006F                   _ETH_readLinkStatus 0000  
                           ?_sprintf 001C                       __size_of_putch 001A  
                        _ENCx24_Read 800C                       ??_SYSLOG_Write 0029  
                          _tcpHeader 01BC                __end_of_ETH_Set_TXRTS 87E2  
      ETH_RxComputeChecksum@econ1Val 0019                __end_of_ETH_SetPktDec 87CA  
            __size_of_Network_Manage 0080                    ENCx24_BFS@bitMask 0005  
                          _udpHeader 0291                             _LATBbits 000F8A  
                           _LED_Init 8638                             _LATDbits 000F8C  
                ?_ETH_readLinkStatus 000B                             _ETH_Copy 747A  
                         TCP_Snd@ret 009D                             _ETH_Dump 7F78  
                           _ETH_Init 6AC8                             _ETH_Send 85D6  
              ??_TCP_GetReceivedData 000C                     ?_ETH_CheckLinkUp 0001  
                    TCB_Check@tcbPtr 0008      __size_of_TCP_FiniteStateMachine 2978  
                        _ipv4Address 018E                         _Network_Init 83FE  
                       _Network_Read 71D2                    _nextAvailablePort 019C  
                   __CFG_WDTPS$32768 000000            __size_of_SPI_ExchangeByte 000E  
                          _uart_init 872A                             _SSP1CON1 000FC6  
                      ARPV4_Packet@x 0035                        SYSLOG_Write@t 0029  
                           _TCP_Bind 856E                             _TCP_Init 86AC  
                          _rtcc_init 82A2                             _TCP_Recv 45DC  
                           _TCP_Send 7060   __size_of_IPV4_PseudoHeaderChecksum 0098  
                      _ARPV4_Request 64D0                             _UDP_Send 727E  
         ?_IPV4_PseudoHeaderChecksum 0002                           ?_lcd_goto1 0001  
                         ?_lcd_putch 0001               __end_of_ENCx24_PhyRead 8128  
               ??_ETH_readLinkStatus 000F             __size_of_DHCP_WriteZeros 0018  
                      ARPV4_Lookup@x 000C          TCP_FiniteStateMachine@event 00D2  
                      ??_UDP_Receive 0099                      ?_ICMP_EchoReply 0058  
                          lcd_puts@s 0004                        ARPV4_Update@x 0004  
                 __end_of_macAddress 1034           IPV4_PseudoHeaderChecksum@v 0008  
                      TCP_Recv@count 00F6                     TCP_Update@tcbPtr 00DE  
                      ?_DHCP_Handler 0059                     __size_of_TCP_Snd 0BBA  
              ETH_WriteStart@destMAC 000B                        TCP_Snd@tcbPtr 0058  
                      ?_DHCP_Request 0001              __size_of_lcd_write_data 0020  
                      IPv4_Start@ret 0066              __size_of_lcd_write_ctrl 0020  
                           __Hrparam 0000                          _IPV4_Packet 53BC  
                           __Lrparam 0000                           ?_uart_init 0001  
                        _ETH_Write32 83D0                          _ETH_Write16 85B4  
                   ETH_ReadBlock@len 000A                       ?_ARPV4_Request 000F  
                  ??_TCP_PayloadSave 00B4                           ?_rtcc_init 0001  
                   __size_of___lwdiv 004A                     ENCx24_Write@bank 0007  
                   __size_of___lwmod 003E                     ENCx24_Write@data 0005  
                  ?_ETH_EventHandler 0001                     __size_of__doprnt 03FC  
  __end_of_IPV4_PseudoHeaderChecksum 75B6               TCP_ParseTCPOptions@ret 0011  
             TCP_ParseTCPOptions@opt 0012                      ?_ENCx24_PhyRead 000B  
                        _tcbListSize 01A7             ARPV4_Packet@entryPointer 0037  
            ??_ETH_TxComputeChecksum 0013                   DHCP_Handler@ethMAC 008C  
                 ??_ETH_EventHandler 000B               _TCP_FiniteStateMachine 10AA  
         __end_of_TCP_InsertRxBuffer 7760                   DHCP_Handler@length 0059  
                           _dhcpName 1013                __size_of_TCP_SendDone 002A  
             __size_of_lcd_init_pins 000A                       ENCx24_BFC@bank 0007  
                       TCP_Bind@port 000C                   DHCP_Handler@option 0085  
                    ___lwdiv@divisor 0004                      ___lwdiv@counter 0006  
                    ENCx24_Read@bank 0007                     __size_of_low_isr 0010  
                           __ptext10 732A                             __ptext11 8618  
                           __ptext20 78F0                             __ptext12 87E2  
                           __ptext21 5772                             __ptext13 87EC  
                           __ptext30 608C                             __ptext22 71D2  
                           __ptext14 8638                             __ptext31 7F2E  
                           __ptext23 83A2                             __ptext15 8740  
                           __ptext40 668C                             __ptext32 7B3E  
                           __ptext24 4FC0                             __ptext16 84D4  
                           _arpTimer 01D0                             __ptext41 8768  
                           __ptext33 45DC                             __ptext25 8692  
                           __ptext17 8342                             __ptext50 7DAC  
                           __ptext42 747A                             __ptext34 6BE0  
                           __ptext26 8228                             __ptext18 854A  
                           __ptext51 764C                             __ptext43 6F9A  
                           __ptext35 8372                             __ptext27 7EE4  
                           __ptext19 8796                             __ptext60 7CB2  
                           __ptext52 62F8                             __ptext44 7ACE  
                           __ptext36 8056                             __ptext28 53BC  
                           __ptext61 86AC                             __ptext53 7DFC  
                           __ptext45 86FA                             __ptext37 7F78  
                           __ptext29 6DE4                             __ptext70 8756  
                           __ptext62 87CA                             __ptext54 8778  
                           __ptext46 82DA                             __ptext38 751E  
                           __ptext71 69AC                             __ptext63 6AC8  
                           __ptext55 727E                             __ptext47 87BE  
                           __ptext39 7FC2                             __ptext80 3A22  
                           __ptext72 6ED2                             __ptext64 79EA  
                           __ptext56 8658                             __ptext48 4B8C  
                           __ptext81 681E                             __ptext73 7E98  
                           __ptext65 830E                             __ptext57 8712  
                           __ptext49 73D4                             __ptext90 7E4A  
                           __ptext82 86E0                             __ptext74 84AA  
                           __ptext66 0000                             __ptext58 8480  
                           __ptext91 7A5C                             __ptext83 83D0  
                           __ptext75 7060                             __ptext67 80E4  
                           __ptext59 83FE                             __ptext92 7124  
                           __ptext84 64D0                             __ptext76 8524  
                           __ptext68 842A                             __ptext93 0000  
                           __ptext85 7D06                             __ptext77 786C  
                           __ptext69 86C6                             __ptext94 816A  
                           __ptext86 7C04                             __ptext78 10AA  
                           __ptext95 81AA                             __ptext87 85B4  
                           __ptext79 5AB0                             __ptext96 85D6  
                           __ptext88 7970                             __ptext97 87D6  
                           __ptext89 8266                             __ptext98 7D5A  
                           __ptext99 8128                       ??_DHCP_Handler 005B  
                       _SSP1CON1bits 000FC6                       ENCx24_BFS@bank 0007  
                  ETH_WriteBlock@len 0005                             _lcd_busy 87EC  
                           _lcd_init 732A                   DHCP_Request@ethMAC 0071  
                           _high_isr 0008                           _ARPV4_Init 86C6  
                       time@the_time 0007                             _lcd_puts 8592  
                   __size_of_sprintf 002E                  __end_of_UDP_Receive 6ED2  
                   ??_ETH_WriteBlock 0007                    _remoteIpv4Address 022E  
                 ETH_WriteStart@type 000D            ARPV4_Lookup@entry_pointer 000A  
                         _ENCx24_BFC 81AA                           _ENCx24_BFS 816A  
                   ??_ETH_WriteStart 000F                        __size_of_main 00F4  
                      ??_SYSLOG_Init 0027                       ??_DHCP_Request 0059  
                      __size_of_time 0054                      ENCx24_PhyRead@a 000D  
                    _TCP_GetRxLength 7BA2                         ??_waitForDMA 000B  
              Network_Read@debug_str 0120                    UDP_Send@udpLength 002F  
       ETH_Insert@current_tx_pointer 0010                             _spi_init 87B2  
                           int$flags 005E                 _rxPacketStatusVector 0218  
                       _TCP_SendDone 84AA                         _SSP1STATbits 000FC7  
                        ??_lcd_goto1 0003                __size_of_rtcc_handler 0028  
               __end_of_SYSLOG_Write 84FC            __size_of_ETH_GetByteCount 001E  
        __end_of_Network_WaitForLink 87A4                          ??_lcd_putch 0003  
           ETH_EventHandler@estatVal 000F                         ?_DHCP_Manage 0001  
                         _ETH_GetMAC 7970                            putch@data 0002  
                       TCP_Send@data 00B6                  Network_Manage@nowPv 021E  
                         _ETH_Read32 7B3E                           _ETH_Read16 8056  
          ETH_TxComputeChecksum@cksm 0017            ETH_TxComputeChecksum@seed 0011  
                           memcmp@s1 0002                             memcmp@s2 0003  
                         _ETH_Insert 7D5A              ETH_Copy@txBufferAddress 000F  
                      ?_ARPV4_Packet 0001                      ETH_Write32@data 0003  
                    ETH_Write16@data 0003                        ?_ARPV4_Lookup 0002  
                 __end_of_waitForDMA 0000                             memset@p1 0002  
                         _ETH_Write8 86E0                    ??_DHCP_WriteZeros 0006  
                      ?_ARPV4_Update 0001                _receivedRemoteAddress 0196  
         __end_of_ETH_ResetByteCount 8788                             intlevel1 0000  
                           intlevel2 0000                            sprintf@ap 0027  
                          sprintf@pb 0028                            sprintf@wh 001C  
       __size_of_DEMO_TCP_EchoServer 011C                       _Network_Manage 78F0  
                   ___lwmod@dividend 0009                      UDP_Receive@hptr 00A1  
       __size_of_TCP_ParseTCPOptions 0110       __size_of_ETH_RxComputeChecksum 00C6  
                   ??_ADC_Initialize 0002                        _lcd_init_pins 87E2  
      __end_of_ETH_RxComputeChecksum 7060                         _rtcc_handler 84FC  
                    ??_ARPV4_Request 0013                          ARPV4_Init@x 0002  
                   _SPI_ExchangeByte 87A4                          ??_uart_init 0002  
                __end_of_SYSLOG_Init 8372                     ??_TCP_SocketInit 000C  
                           printf@ap 0021                           _TCB_Insert 7E98  
                           printf@pb 0022                     ??_TCP_SocketPoll 000C  
                        ??_rtcc_init 0002             __size_of_ENCx24_PHYWrite 002C  
               IPV4_Send@totalLength 0026                        ?_ICMP_Receive 005B  
                           sprintf@f 001E                 ETH_CheckLinkUp@value 000F  
                   DHCP_Handler@myip 0093                        ?_ENCx24_Write 0005  
                    ETH_WriteBlock@p 0007        IPV4_PseudoHeaderChecksum@cksm 000A  
                    ___lwmod@divisor 000B                      ARPV4_Packet@ret 0032  
                     ??_ARPV4_Packet 000F                      ___lwmod@counter 000D  
                        _UDP_Receive 6DE4                       ??_ARPV4_Lookup 0006  
       __size_of_ETH_SendSystemReset 0072           TCP_PayloadSave@buffer_size 00C1  
                     ??_ARPV4_Update 0002                           _TCP_Listen 786C  
                         _IPv4_Start 681E                    Network_Manage@now 017F  
                         _TCP_Update 5772               __end_of_Network_Manage 7970  
                        ?_ARPV4_Init 0001                      DHCP_Handler@v16 0083  
                      ENCx24_Write@a 0008                         ?_ENCx24_Read 0005  
            __end_of_TCP_GetRxLength 7C04                          ENCx24_BFC@a 0008  
                       ENCx24_Read@a 000A                         ENCx24_Read@v 0008  
                        ENCx24_BFS@a 0008                   Network_Read@header 0170  
                        ?_ENCx24_BFC 0005                          ?_ENCx24_BFS 0005  
      __size_of_ETH_NextPacketUpdate 0070                         UDP_Receive@x 009F  
                     _lcd_write_data 85F8                       ?_lcd_init_pins 0001  
                     _lcd_write_ctrl 8618                         UDP_Send@cksm 002D  
                   ETH_Insert@offset 000E  

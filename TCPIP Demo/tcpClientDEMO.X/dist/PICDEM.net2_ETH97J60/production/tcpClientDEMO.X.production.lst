

Microchip Technology PIC18 PRO Macro Assembler V1.35 build -356382666 
                                                                                               Wed Sep 09 15:15:38 2015

Microchip Technology Omniscient Code Generator v1.35 (PRO mode) build 201507080246
     1                           	processor	18F97J60
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1
    85                           	psect	text67,global,reloc=2,class=CODE,delta=1
    86                           	psect	text68,global,reloc=2,class=CODE,delta=1
    87                           	psect	text69,global,reloc=2,class=CODE,delta=1
    88                           	psect	text70,global,reloc=2,class=CODE,delta=1
    89                           	psect	text71,global,reloc=2,class=CODE,delta=1
    90                           	psect	text72,global,reloc=2,class=CODE,delta=1
    91                           	psect	text73,global,reloc=2,class=CODE,delta=1
    92                           	psect	text74,global,reloc=2,class=CODE,delta=1
    93                           	psect	text75,global,reloc=2,class=CODE,delta=1
    94                           	psect	text76,global,reloc=2,class=CODE,delta=1
    95                           	psect	text77,global,reloc=2,class=CODE,delta=1
    96                           	psect	text78,global,reloc=2,class=CODE,delta=1
    97                           	psect	text79,global,reloc=2,class=CODE,delta=1
    98                           	psect	text80,global,reloc=2,class=CODE,delta=1
    99                           	psect	text81,global,reloc=2,class=CODE,delta=1
   100                           	psect	text82,global,reloc=2,class=CODE,delta=1
   101                           	psect	text83,global,reloc=2,class=CODE,delta=1
   102                           	psect	text84,global,reloc=2,class=CODE,delta=1
   103                           	psect	text85,global,reloc=2,class=CODE,delta=1
   104                           	psect	text86,global,reloc=2,class=CODE,delta=1
   105                           	psect	text87,global,reloc=2,class=CODE,delta=1
   106                           	psect	text88,global,reloc=2,class=CODE,delta=1
   107                           	psect	text89,global,reloc=2,class=CODE,delta=1
   108                           	psect	text90,global,reloc=2,class=CODE,delta=1
   109                           	psect	text91,global,reloc=2,class=CODE,delta=1
   110                           	psect	text92,global,reloc=2,class=CODE,delta=1
   111                           	psect	text93,global,reloc=2,class=CODE,delta=1
   112                           	psect	text94,global,reloc=2,class=CODE,delta=1
   113                           	psect	text95,global,reloc=2,class=CODE,delta=1
   114                           	psect	text96,global,reloc=2,class=CODE,delta=1
   115                           	psect	text97,global,reloc=2,class=CODE,delta=1
   116                           	psect	text98,global,reloc=2,class=CODE,delta=1
   117                           	psect	text99,global,reloc=2,class=CODE,delta=1
   118                           	psect	text100,global,reloc=2,class=CODE,delta=1
   119                           	psect	text101,global,reloc=2,class=CODE,delta=1
   120                           	psect	text102,global,reloc=2,class=CODE,delta=1
   121                           	psect	text103,global,reloc=2,class=CODE,delta=1
   122                           	psect	text104,global,reloc=2,class=CODE,delta=1
   123                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   124                           	psect	text106,global,reloc=2,class=CODE,delta=1
   125                           	psect	text107,global,reloc=2,class=CODE,delta=1
   126                           	psect	text108,global,reloc=2,class=CODE,delta=1
   127                           	psect	text109,global,reloc=2,class=CODE,delta=1
   128                           	psect	text110,global,reloc=2,class=CODE,delta=1
   129                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   130                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   131                           	psect	text112,global,reloc=2,class=CODE,delta=1
   132                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   133                           	psect	text113,global,reloc=2,class=CODE,delta=1
   134                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   135                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   136                           	psect	pa_nodes,global,class=CODE,delta=1
   137                           	dabs	1,0xE7E,2,_errataTemp
   138  0000                     tosu	equ	0xFFF
   139                           tosh	equ	0xFFE
   140                           tosl	equ	0xFFD
   141                           pclath	equ	0xFFA
   142                           tblptru	equ	0xFF8
   143                           tblptrh	equ	0xFF7
   144                           tblptrl	equ	0xFF6
   145                           tablat	equ	0xFF5
   146                           prodh	equ	0xFF4
   147                           prodl	equ	0xFF3
   148                           intcon	equ	0xFF2
   149                           indf0	equ	0xFEF
   150                           postinc0	equ	0xFEE
   151                           fsr0h	equ	0xFEA
   152                           fsr0l	equ	0xFE9
   153                           wreg	equ	0xFE8
   154                           postinc1	equ	0xFE6
   155                           postdec1	equ	0xFE5
   156                           plusw1	equ	0xFE3
   157                           fsr1h	equ	0xFE2
   158                           fsr1l	equ	0xFE1
   159                           bsr	equ	0xFE0
   160                           indf2	equ	0xFDF
   161                           postinc2	equ	0xFDE
   162                           postdec2	equ	0xFDD
   163                           plusw2	equ	0xFDB
   164                           fsr2h	equ	0xFDA
   165                           fsr2l	equ	0xFD9
   166                           status	equ	0xFD8
   167                           
   168                           	psect	idataBANK0
   169  006746                     __pidataBANK0:
   170                           	opt stack 0
   171                           
   172                           ;initializer for _clientState
   173  006746  01                 	db	1
   174                           tosu	equ	0xFFF
   175                           tosh	equ	0xFFE
   176                           tosl	equ	0xFFD
   177                           pclath	equ	0xFFA
   178                           tblptru	equ	0xFF8
   179                           tblptrh	equ	0xFF7
   180                           tblptrl	equ	0xFF6
   181                           tablat	equ	0xFF5
   182                           prodh	equ	0xFF4
   183                           prodl	equ	0xFF3
   184                           intcon	equ	0xFF2
   185                           indf0	equ	0xFEF
   186                           postinc0	equ	0xFEE
   187                           fsr0h	equ	0xFEA
   188                           fsr0l	equ	0xFE9
   189                           wreg	equ	0xFE8
   190                           postinc1	equ	0xFE6
   191                           postdec1	equ	0xFE5
   192                           plusw1	equ	0xFE3
   193                           fsr1h	equ	0xFE2
   194                           fsr1l	equ	0xFE1
   195                           bsr	equ	0xFE0
   196                           indf2	equ	0xFDF
   197                           postinc2	equ	0xFDE
   198                           postdec2	equ	0xFDD
   199                           plusw2	equ	0xFDB
   200                           fsr2h	equ	0xFDA
   201                           fsr2l	equ	0xFD9
   202                           status	equ	0xFD8
   203                           
   204                           	psect	smallconst
   205  001000                     __psmallconst:
   206                           	opt stack 0
   207  001000  00                 	db	0
   208  001001                     _dpowers:
   209                           	opt stack 0
   210  001001  0001               	dw	1
   211  001003  000A               	dw	10
   212  001005  0064               	dw	100
   213  001007  03E8               	dw	1000
   214  001009  2710               	dw	10000
   215  00100B                     __end_of_dpowers:
   216                           	opt stack 0
   217  00100B                     _hexpowers:
   218                           	opt stack 0
   219  00100B  0001               	dw	1
   220  00100D  0010               	dw	16
   221  00100F  0100               	dw	256
   222  001011  1000               	dw	4096
   223  001013                     __end_of_hexpowers:
   224                           	opt stack 0
   225  001013                     _dhcpName:
   226                           	opt stack 0
   227  001013  50                 	db	80
   228  001014  49                 	db	73
   229  001015  43                 	db	67
   230  001016  31                 	db	49
   231  001017  38                 	db	56
   232  001018  46                 	db	70
   233  001019  39                 	db	57
   234  00101A  37                 	db	55
   235  00101B  4A                 	db	74
   236  00101C  36                 	db	54
   237  00101D  30                 	db	48
   238  00101E  20                 	db	32
   239  00101F  45                 	db	69
   240  001020  54                 	db	84
   241  001021  48                 	db	72
   242  001022  45                 	db	69
   243  001023  52                 	db	82
   244  001024  4E                 	db	78
   245  001025  45                 	db	69
   246  001026  54                 	db	84
   247  001027  00                 	db	0
   248  001028                     __end_of_dhcpName:
   249                           	opt stack 0
   250  001028                     _broadcastMAC:
   251                           	opt stack 0
   252  001028  FF                 	db	255
   253  001029  FF                 	db	255
   254  00102A  FF                 	db	255
   255  00102B  FF                 	db	255
   256  00102C  FF                 	db	255
   257  00102D  FF                 	db	255
   258  00102E                     __end_of_broadcastMAC:
   259                           	opt stack 0
   260  00102E                     _macAddress:
   261                           	opt stack 0
   262  00102E  00                 	db	0
   263  00102F  DE                 	db	222
   264  001030  AD                 	db	173
   265  001031  00                 	db	0
   266  001032  BE                 	db	190
   267  001033  EF                 	db	239
   268  001034                     __end_of_macAddress:
   269                           	opt stack 0
   270  001034                     _UDP_CallBackTable:
   271                           	opt stack 0
   272  001034  0044               	dw	68
   273  001036  BE                 	db	low _DHCP_Handler
   274  001037  3D                 	db	high _DHCP_Handler
   275  001038  00                 	db	low (_DHCP_Handler shr (0+16))
   276  001039                     __end_of_UDP_CallBackTable:
   277                           	opt stack 0
   278  001039                     STR_6:
   279                           
   280                           ; BSR set to: 14
   281  001039  54                 	db	84	;'T'
   282  00103A  65                 	db	101	;'e'
   283  00103B  6D                 	db	109	;'m'
   284  00103C  70                 	db	112	;'p'
   285  00103D  65                 	db	101	;'e'
   286  00103E  72                 	db	114	;'r'
   287  00103F  61                 	db	97	;'a'
   288  001040  74                 	db	116	;'t'
   289  001041  75                 	db	117	;'u'
   290  001042  72                 	db	114	;'r'
   291  001043  65                 	db	101	;'e'
   292  001044  3A                 	db	58	;':'
   293  001045  20                 	db	32
   294  001046  30                 	db	48	;'0'
   295  001047  78                 	db	120	;'x'
   296  001048  25                 	db	37
   297  001049  33                 	db	51	;'3'
   298  00104A  78                 	db	120	;'x'
   299  00104B  3B                 	db	59	;';'
   300  00104C  20                 	db	32
   301  00104D  4C                 	db	76	;'L'
   302  00104E  45                 	db	69	;'E'
   303  00104F  44                 	db	68	;'D'
   304  001050  3A                 	db	58	;':'
   305  001051  20                 	db	32
   306  001052  30                 	db	48	;'0'
   307  001053  78                 	db	120	;'x'
   308  001054  25                 	db	37
   309  001055  31                 	db	49	;'1'
   310  001056  78                 	db	120	;'x'
   311  001057  3B                 	db	59	;';'
   312  001058  20                 	db	32
   313  001059  42                 	db	66	;'B'
   314  00105A  75                 	db	117	;'u'
   315  00105B  74                 	db	116	;'t'
   316  00105C  74                 	db	116	;'t'
   317  00105D  6F                 	db	111	;'o'
   318  00105E  6E                 	db	110	;'n'
   319  00105F  73                 	db	115	;'s'
   320  001060  3A                 	db	58	;':'
   321  001061  20                 	db	32
   322  001062  30                 	db	48	;'0'
   323  001063  78                 	db	120	;'x'
   324  001064  25                 	db	37
   325  001065  31                 	db	49	;'1'
   326  001066  78                 	db	120	;'x'
   327  001067  3B                 	db	59	;';'
   328  001068  20                 	db	32
   329  001069  50                 	db	80	;'P'
   330  00106A  6F                 	db	111	;'o'
   331  00106B  74                 	db	116	;'t'
   332  00106C  3A                 	db	58	;':'
   333  00106D  20                 	db	32
   334  00106E  30                 	db	48	;'0'
   335  00106F  78                 	db	120	;'x'
   336  001070  25                 	db	37
   337  001071  33                 	db	51	;'3'
   338  001072  78                 	db	120	;'x'
   339  001073  20                 	db	32
   340  001074  0A                 	db	10
   341  001075  00                 	db	0
   342  001076                     STR_3:
   343                           
   344                           ; BSR set to: 14
   345  001076  0D                 	db	13
   346  001077  0A                 	db	10
   347  001078  0D                 	db	13
   348  001079  0A                 	db	10
   349  00107A  53                 	db	83	;'S'
   350  00107B  74                 	db	116	;'t'
   351  00107C  61                 	db	97	;'a'
   352  00107D  72                 	db	114	;'r'
   353  00107E  74                 	db	116	;'t'
   354  00107F  69                 	db	105	;'i'
   355  001080  6E                 	db	110	;'n'
   356  001081  67                 	db	103	;'g'
   357  001082  20                 	db	32
   358  001083  53                 	db	83	;'S'
   359  001084  79                 	db	121	;'y'
   360  001085  73                 	db	115	;'s'
   361  001086  6C                 	db	108	;'l'
   362  001087  6F                 	db	111	;'o'
   363  001088  67                 	db	103	;'g'
   364  001089  20                 	db	32
   365  00108A  61                 	db	97	;'a'
   366  00108B  74                 	db	116	;'t'
   367  00108C  20                 	db	32
   368  00108D  25                 	db	37
   369  00108E  75                 	db	117	;'u'
   370  00108F  0D                 	db	13
   371  001090  0A                 	db	10
   372  001091  00                 	db	0
   373  001092                     STR_11:
   374                           
   375                           ; BSR set to: 14
   376  001092  30                 	db	48	;'0'
   377  001093  31                 	db	49	;'1'
   378  001094  32                 	db	50	;'2'
   379  001095  33                 	db	51	;'3'
   380  001096  34                 	db	52	;'4'
   381  001097  35                 	db	53	;'5'
   382  001098  36                 	db	54	;'6'
   383  001099  37                 	db	55	;'7'
   384  00109A  38                 	db	56	;'8'
   385  00109B  39                 	db	57	;'9'
   386  00109C  61                 	db	97	;'a'
   387  00109D  62                 	db	98	;'b'
   388  00109E  63                 	db	99	;'c'
   389  00109F  64                 	db	100	;'d'
   390  0010A0  65                 	db	101	;'e'
   391  0010A1  66                 	db	102	;'f'
   392  0010A2  00                 	db	0
   393  0010A3                     STR_7:
   394                           
   395                           ; BSR set to: 14
   396  0010A3  57                 	db	87	;'W'
   397  0010A4  61                 	db	97	;'a'
   398  0010A5  69                 	db	105	;'i'
   399  0010A6  74                 	db	116	;'t'
   400  0010A7  69                 	db	105	;'i'
   401  0010A8  6E                 	db	110	;'n'
   402  0010A9  67                 	db	103	;'g'
   403  0010AA  20                 	db	32
   404  0010AB  66                 	db	102	;'f'
   405  0010AC  6F                 	db	111	;'o'
   406  0010AD  72                 	db	114	;'r'
   407  0010AE  20                 	db	32
   408  0010AF  4C                 	db	76	;'L'
   409  0010B0  69                 	db	105	;'i'
   410  0010B1  6E                 	db	110	;'n'
   411  0010B2  6B                 	db	107	;'k'
   412  0010B3  00                 	db	0
   413  0010B4                     STR_1:
   414                           
   415                           ; BSR set to: 14
   416  0010B4  44                 	db	68	;'D'
   417  0010B5  4D                 	db	77	;'M'
   418  0010B6  41                 	db	65	;'A'
   419  0010B7  20                 	db	32
   420  0010B8  54                 	db	84	;'T'
   421  0010B9  49                 	db	73	;'I'
   422  0010BA  4D                 	db	77	;'M'
   423  0010BB  45                 	db	69	;'E'
   424  0010BC  4F                 	db	79	;'O'
   425  0010BD  55                 	db	85	;'U'
   426  0010BE  54                 	db	84	;'T'
   427  0010BF  21                 	db	33
   428  0010C0  21                 	db	33
   429  0010C1  21                 	db	33
   430  0010C2  00                 	db	0
   431  0010C3                     STR_8:
   432                           
   433                           ; BSR set to: 14
   434  0010C3  4C                 	db	76	;'L'
   435  0010C4  69                 	db	105	;'i'
   436  0010C5  6E                 	db	110	;'n'
   437  0010C6  6B                 	db	107	;'k'
   438  0010C7  20                 	db	32
   439  0010C8  73                 	db	115	;'s'
   440  0010C9  74                 	db	116	;'t'
   441  0010CA  61                 	db	97	;'a'
   442  0010CB  72                 	db	114	;'r'
   443  0010CC  74                 	db	116	;'t'
   444  0010CD  65                 	db	101	;'e'
   445  0010CE  64                 	db	100	;'d'
   446  0010CF  00                 	db	0
   447  0010D0                     STR_9:
   448                           
   449                           ; BSR set to: 14
   450  0010D0  25                 	db	37
   451  0010D1  64                 	db	100	;'d'
   452  0010D2  2E                 	db	46
   453  0010D3  25                 	db	37
   454  0010D4  64                 	db	100	;'d'
   455  0010D5  2E                 	db	46
   456  0010D6  25                 	db	37
   457  0010D7  64                 	db	100	;'d'
   458  0010D8  2E                 	db	46
   459  0010D9  25                 	db	37
   460  0010DA  64                 	db	100	;'d'
   461  0010DB  00                 	db	0
   462  0010DC                     STR_4:
   463                           
   464                           ; BSR set to: 14
   465  0010DC  25                 	db	37
   466  0010DD  75                 	db	117	;'u'
   467  0010DE  20                 	db	32
   468  0010DF  3A                 	db	58	;':'
   469  0010E0  20                 	db	32
   470  0010E1  25                 	db	37
   471  0010E2  73                 	db	115	;'s'
   472  0010E3  0D                 	db	13
   473  0010E4  0A                 	db	10
   474  0010E5  00                 	db	0
   475  0010E6                     STR_2:
   476                           
   477                           ; BSR set to: 14
   478  0010E6  25                 	db	37
   479  0010E7  78                 	db	120	;'x'
   480  0010E8  20                 	db	32
   481  0010E9  3A                 	db	58	;':'
   482  0010EA  20                 	db	32
   483  0010EB  25                 	db	37
   484  0010EC  64                 	db	100	;'d'
   485  0010ED  00                 	db	0
   486  0010EE                     STR_10:
   487                           
   488                           ; BSR set to: 14
   489  0010EE  28                 	db	40
   490  0010EF  6E                 	db	110	;'n'
   491  0010F0  75                 	db	117	;'u'
   492  0010F1  6C                 	db	108	;'l'
   493  0010F2  6C                 	db	108	;'l'
   494  0010F3  29                 	db	41
   495  0010F4  00                 	db	0
   496  0010F5                     STR_5:
   497                           
   498                           ; BSR set to: 14
   499  0010F5  25                 	db	37
   500  0010F6  73                 	db	115	;'s'
   501  0010F7  00                 	db	0
   502                           
   503                           ; #config settings
   504  0010F8  00                 	db	0	; dummy byte at the end
   505  0000                     tosu	equ	0xFFF
   506                           tosh	equ	0xFFE
   507                           tosl	equ	0xFFD
   508                           pclath	equ	0xFFA
   509                           tblptru	equ	0xFF8
   510                           tblptrh	equ	0xFF7
   511                           tblptrl	equ	0xFF6
   512                           tablat	equ	0xFF5
   513                           prodh	equ	0xFF4
   514                           prodl	equ	0xFF3
   515                           intcon	equ	0xFF2
   516                           indf0	equ	0xFEF
   517                           postinc0	equ	0xFEE
   518                           fsr0h	equ	0xFEA
   519                           fsr0l	equ	0xFE9
   520                           wreg	equ	0xFE8
   521                           postinc1	equ	0xFE6
   522                           postdec1	equ	0xFE5
   523                           plusw1	equ	0xFE3
   524                           fsr1h	equ	0xFE2
   525                           fsr1l	equ	0xFE1
   526                           bsr	equ	0xFE0
   527                           indf2	equ	0xFDF
   528                           postinc2	equ	0xFDE
   529                           postdec2	equ	0xFDD
   530                           plusw2	equ	0xFDB
   531                           fsr2h	equ	0xFDA
   532                           fsr2l	equ	0xFD9
   533                           status	equ	0xFD8
   534                           
   535                           	psect	nvBANK2
   536  0002E8                     __pnvBANK2:
   537                           	opt stack 0
   538  0002E8                     _deviceTime:
   539                           	opt stack 0
   540  0002E8                     	ds	4
   541  0002EC                     _localTime:
   542                           	opt stack 0
   543  0002EC                     	ds	4
   544  0000                     _EDMADST	set	3828
   545  0000                     _EDMAND	set	3826
   546  0000                     _EDMAST	set	3824
   547  0000                     _ERXND	set	3818
   548  0000                     _ERXRDPT	set	3820
   549  0000                     _ERXST	set	3816
   550  0000                     _ETXND	set	3814
   551  0000                     _ETXST	set	3812
   552  0000                     _EWRPT	set	3810
   553  0000                     _MAIPG	set	3750
   554  0000                     _MAMXFL	set	3754
   555  0000                     _MIRD	set	3768
   556  0000                     _MIWR	set	3766
   557  0000                     _ECON2	set	3838
   558  0000                     _EIE	set	3835
   559  0000                     _EIEbits	set	3835
   560  0000                     _EPKTCNT	set	3801
   561  0000                     _ERXFCON	set	3800
   562  0000                     _ESTATbits	set	3837
   563  0000                     _MAADR1	set	3716
   564  0000                     _MAADR2	set	3717
   565  0000                     _MAADR3	set	3714
   566  0000                     _MAADR4	set	3715
   567  0000                     _MAADR5	set	3712
   568  0000                     _MAADR6	set	3713
   569  0000                     _MABBIPG	set	3748
   570  0000                     _MACON1	set	3744
   571  0000                     _MACON3	set	3746
   572  0000                     _MACON4	set	3747
   573  0000                     _MICMD	set	3762
   574  0000                     _MICMDbits	set	3762
   575  0000                     _MIREGADR	set	3764
   576  0000                     _MISTATbits	set	3722
   577  0000                     _ADRES	set	4035
   578  0000                     _ERDPT	set	3962
   579  0000                     _TMR1	set	4046
   580  0000                     _ADCON0	set	4034
   581  0000                     _ADCON0bits	set	4034
   582  0000                     _ADCON1	set	4033
   583  0000                     _ADCON2	set	4032
   584  0000                     _ADRESH	set	4036
   585  0000                     _ADRESL	set	4035
   586  0000                     _BAUDCON1	set	3966
   587  0000                     _BAUDCON1bits	set	3966
   588  0000                     _ECON1	set	4050
   589  0000                     _ECON1bits	set	4050
   590  0000                     _EIRbits	set	3936
   591  0000                     _INTCON	set	4082
   592  0000                     _IPR2bits	set	4002
   593  0000                     _LATDbits	set	3980
   594  0000                     _LATE	set	3981
   595  0000                     _LATH	set	3984
   596  0000                     _LATJ	set	3985
   597  0000                     _OSCCON	set	4051
   598  0000                     _OSCTUNE	set	3995
   599  0000                     _PIE2bits	set	4000
   600  0000                     _PIR2bits	set	4001
   601  0000                     _PORTB	set	3969
   602  0000                     _PORTJ	set	3976
   603  0000                     _SPBRG1	set	4015
   604  0000                     _SSP1CON1	set	4038
   605  0000                     _SSP1CON1bits	set	4038
   606  0000                     _SSP1STATbits	set	4039
   607  0000                     _TRISA	set	3986
   608  0000                     _TRISAbits	set	3986
   609  0000                     _TRISB	set	3987
   610  0000                     _TRISCbits	set	3988
   611  0000                     _TRISDbits	set	3989
   612  0000                     _TRISE	set	3990
   613  0000                     _TRISH	set	3993
   614  0000                     _TRISJ	set	3994
   615  0000                     _TXREG1	set	4013
   616  0000                     _TXSTA1	set	4012
   617  0000                     _CREN1	set	32092
   618  0000                     _GIE	set	32663
   619  0000                     _GIEH	set	32663
   620  0000                     _GIEL	set	32662
   621  0000                     _IPEN	set	32391
   622  0000                     _LATH0	set	31872
   623  0000                     _LATH1	set	31873
   624  0000                     _LATH2	set	31874
   625  0000                     _SPEN1	set	32095
   626  0000                     _T1CKPS0	set	32364
   627  0000                     _T1CKPS1	set	32365
   628  0000                     _T1OSCEN	set	32363
   629  0000                     _T1SYNC	set	32362
   630  0000                     _TMR1CS	set	32361
   631  0000                     _TMR1IE	set	31976
   632  0000                     _TMR1IF	set	31984
   633  0000                     _TMR1IP	set	31992
   634  0000                     _TMR1ON	set	32360
   635  0000                     _TX1IF	set	31988
   636                           tosu	equ	0xFFF
   637                           tosh	equ	0xFFE
   638                           tosl	equ	0xFFD
   639                           pclath	equ	0xFFA
   640                           tblptru	equ	0xFF8
   641                           tblptrh	equ	0xFF7
   642                           tblptrl	equ	0xFF6
   643                           tablat	equ	0xFF5
   644                           prodh	equ	0xFF4
   645                           prodl	equ	0xFF3
   646                           intcon	equ	0xFF2
   647                           indf0	equ	0xFEF
   648                           postinc0	equ	0xFEE
   649                           fsr0h	equ	0xFEA
   650                           fsr0l	equ	0xFE9
   651                           wreg	equ	0xFE8
   652                           postinc1	equ	0xFE6
   653                           postdec1	equ	0xFE5
   654                           plusw1	equ	0xFE3
   655                           fsr1h	equ	0xFE2
   656                           fsr1l	equ	0xFE1
   657                           bsr	equ	0xFE0
   658                           indf2	equ	0xFDF
   659                           postinc2	equ	0xFDE
   660                           postdec2	equ	0xFDD
   661                           plusw2	equ	0xFDB
   662                           fsr2h	equ	0xFDA
   663                           fsr2l	equ	0xFD9
   664                           status	equ	0xFD8
   665                           
   666                           	psect	cinit
   667  005E34                     __pcinit:
   668                           	opt stack 0
   669  005E34                     start_initialization:
   670                           	opt stack 0
   671  005E34                     __initialization:
   672                           	opt stack 0
   673                           
   674                           ; Clear objects allocated to BANK3 (184 bytes)
   675  005E34  EE03  F000         	lfsr	0,__pbssBANK3
   676  005E38  0EB8               	movlw	184
   677  005E3A                     clear_0:
   678  005E3A  6AEE               	clrf	postinc0,c
   679  005E3C  06E8               	decf	wreg,f,c
   680  005E3E  E1FD               	bnz	clear_0
   681                           
   682                           ; Clear objects allocated to BANK2 (187 bytes)
   683  005E40  EE02  F000         	lfsr	0,__pbssBANK2
   684  005E44  0EBB               	movlw	187
   685  005E46                     clear_1:
   686  005E46  6AEE               	clrf	postinc0,c
   687  005E48  06E8               	decf	wreg,f,c
   688  005E4A  E1FD               	bnz	clear_1
   689                           
   690                           ; Clear objects allocated to BANK1 (47 bytes)
   691  005E4C  EE01  F0BE         	lfsr	0,__pbssBANK1
   692  005E50  0E2F               	movlw	47
   693  005E52                     clear_2:
   694  005E52  6AEE               	clrf	postinc0,c
   695  005E54  06E8               	decf	wreg,f,c
   696  005E56  E1FD               	bnz	clear_2
   697                           
   698                           ; Clear objects allocated to COMRAM (21 bytes)
   699  005E58  EE00  F034         	lfsr	0,__pbssCOMRAM
   700  005E5C  0E15               	movlw	21
   701  005E5E                     clear_3:
   702  005E5E  6AEE               	clrf	postinc0,c
   703  005E60  06E8               	decf	wreg,f,c
   704  005E62  E1FD               	bnz	clear_3
   705                           
   706                           ; Initialize objects allocated to BANK0 (1 bytes)
   707                           ; load TBLPTR registers with __pidataBANK0
   708  005E64  0E46               	movlw	low __pidataBANK0
   709  005E66  6EF6               	movwf	tblptrl,c
   710  005E68  0E67               	movlw	high __pidataBANK0
   711  005E6A  6EF7               	movwf	tblptrh,c
   712  005E6C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   713  005E6E  6EF8               	movwf	tblptru,c
   714  005E70  0009               	tblrd		*+	;fetch initializer
   715  005E72  CFF5 F0FF          	movff	tablat,__pdataBANK0
   716  005E76                     end_of_initialization:
   717                           	opt stack 0
   718  005E76                     __end_of__initialization:
   719                           	opt stack 0
   720  005E76  9049               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   721  005E78  9249               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   722  005E7A  0100               	movlb	0
   723  005E7C  EFA1  F027         	goto	_main	;jump to C main() function
   724                           tosu	equ	0xFFF
   725                           tosh	equ	0xFFE
   726                           tosl	equ	0xFFD
   727                           pclath	equ	0xFFA
   728                           tblptru	equ	0xFF8
   729                           tblptrh	equ	0xFF7
   730                           tblptrl	equ	0xFF6
   731                           tablat	equ	0xFF5
   732                           prodh	equ	0xFF4
   733                           prodl	equ	0xFF3
   734                           intcon	equ	0xFF2
   735                           indf0	equ	0xFEF
   736                           postinc0	equ	0xFEE
   737                           fsr0h	equ	0xFEA
   738                           fsr0l	equ	0xFE9
   739                           wreg	equ	0xFE8
   740                           postinc1	equ	0xFE6
   741                           postdec1	equ	0xFE5
   742                           plusw1	equ	0xFE3
   743                           fsr1h	equ	0xFE2
   744                           fsr1l	equ	0xFE1
   745                           bsr	equ	0xFE0
   746                           indf2	equ	0xFDF
   747                           postinc2	equ	0xFDE
   748                           postdec2	equ	0xFDD
   749                           plusw2	equ	0xFDB
   750                           fsr2h	equ	0xFDA
   751                           fsr2l	equ	0xFD9
   752                           status	equ	0xFD8
   753                           
   754                           	psect	bssCOMRAM
   755  000034                     __pbssCOMRAM:
   756                           	opt stack 0
   757  000034                     _dhcpLeaseTime:
   758                           	opt stack 0
   759  000034                     	ds	4
   760  000038                     _ipv4Address:
   761                           	opt stack 0
   762  000038                     	ds	4
   763  00003C                     _receivedRemoteAddress:
   764                           	opt stack 0
   765  00003C                     	ds	4
   766  000040                     _currentTCB:
   767                           	opt stack 0
   768  000040                     	ds	2
   769  000042                     _nextPacketPointer:
   770                           	opt stack 0
   771  000042                     	ds	2
   772  000044                     _tcbList:
   773                           	opt stack 0
   774  000044                     	ds	2
   775  000046                     _tcpMss:
   776                           	opt stack 0
   777  000046                     	ds	2
   778  000048                     _tcbListSize:
   779                           	opt stack 0
   780  000048                     	ds	1
   781                           tosu	equ	0xFFF
   782                           tosh	equ	0xFFE
   783                           tosl	equ	0xFFD
   784                           pclath	equ	0xFFA
   785                           tblptru	equ	0xFF8
   786                           tblptrh	equ	0xFF7
   787                           tblptrl	equ	0xFF6
   788                           tablat	equ	0xFF5
   789                           prodh	equ	0xFF4
   790                           prodl	equ	0xFF3
   791                           intcon	equ	0xFF2
   792                           indf0	equ	0xFEF
   793                           postinc0	equ	0xFEE
   794                           fsr0h	equ	0xFEA
   795                           fsr0l	equ	0xFE9
   796                           wreg	equ	0xFE8
   797                           postinc1	equ	0xFE6
   798                           postdec1	equ	0xFE5
   799                           plusw1	equ	0xFE3
   800                           fsr1h	equ	0xFE2
   801                           fsr1l	equ	0xFE1
   802                           bsr	equ	0xFE0
   803                           indf2	equ	0xFDF
   804                           postinc2	equ	0xFDE
   805                           postdec2	equ	0xFDD
   806                           plusw2	equ	0xFDB
   807                           fsr2h	equ	0xFDA
   808                           fsr2l	equ	0xFD9
   809                           status	equ	0xFD8
   810                           
   811                           	psect	dataBANK0
   812  0000FF                     __pdataBANK0:
   813                           	opt stack 0
   814  0000FF                     _clientState:
   815                           	opt stack 0
   816  0000FF                     	ds	1
   817                           tosu	equ	0xFFF
   818                           tosh	equ	0xFFE
   819                           tosl	equ	0xFFD
   820                           pclath	equ	0xFFA
   821                           tblptru	equ	0xFF8
   822                           tblptrh	equ	0xFF7
   823                           tblptrl	equ	0xFF6
   824                           tablat	equ	0xFF5
   825                           prodh	equ	0xFF4
   826                           prodl	equ	0xFF3
   827                           intcon	equ	0xFF2
   828                           indf0	equ	0xFEF
   829                           postinc0	equ	0xFEE
   830                           fsr0h	equ	0xFEA
   831                           fsr0l	equ	0xFE9
   832                           wreg	equ	0xFE8
   833                           postinc1	equ	0xFE6
   834                           postdec1	equ	0xFE5
   835                           plusw1	equ	0xFE3
   836                           fsr1h	equ	0xFE2
   837                           fsr1l	equ	0xFE1
   838                           bsr	equ	0xFE0
   839                           indf2	equ	0xFDF
   840                           postinc2	equ	0xFDE
   841                           postdec2	equ	0xFDD
   842                           plusw2	equ	0xFDB
   843                           fsr2h	equ	0xFDA
   844                           fsr2l	equ	0xFD9
   845                           status	equ	0xFD8
   846                           
   847                           	psect	bssBANK1
   848  0001BE                     __pbssBANK1:
   849                           	opt stack 0
   850  0001BE                     _ethData:
   851                           	opt stack 0
   852  0001BE                     	ds	7
   853  0001C5                     _ipv4SubnetMask:
   854                           	opt stack 0
   855  0001C5                     	ds	4
   856  0001C9                     _rxPacketStatusVector:
   857                           	opt stack 0
   858  0001C9                     	ds	4
   859  0001CD                     _nextAvailablePort:
   860                           	opt stack 0
   861  0001CD                     	ds	2
   862  0001CF                     _rcvPayloadLen:
   863                           	opt stack 0
   864  0001CF                     	ds	2
   865  0001D1                     _tcpHeader:
   866                           	opt stack 0
   867  0001D1                     	ds	20
   868  0001E5                     DEMO_TCP_Client@t_client:
   869                           	opt stack 0
   870  0001E5                     	ds	4
   871  0001E9                     _arpTimer:
   872                           	opt stack 0
   873  0001E9                     	ds	4
   874                           tosu	equ	0xFFF
   875                           tosh	equ	0xFFE
   876                           tosl	equ	0xFFD
   877                           pclath	equ	0xFFA
   878                           tblptru	equ	0xFF8
   879                           tblptrh	equ	0xFF7
   880                           tblptrl	equ	0xFF6
   881                           tablat	equ	0xFF5
   882                           prodh	equ	0xFF4
   883                           prodl	equ	0xFF3
   884                           intcon	equ	0xFF2
   885                           indf0	equ	0xFEF
   886                           postinc0	equ	0xFEE
   887                           fsr0h	equ	0xFEA
   888                           fsr0l	equ	0xFE9
   889                           wreg	equ	0xFE8
   890                           postinc1	equ	0xFE6
   891                           postdec1	equ	0xFE5
   892                           plusw1	equ	0xFE3
   893                           fsr1h	equ	0xFE2
   894                           fsr1l	equ	0xFE1
   895                           bsr	equ	0xFE0
   896                           indf2	equ	0xFDF
   897                           postinc2	equ	0xFDE
   898                           postdec2	equ	0xFDD
   899                           plusw2	equ	0xFDB
   900                           fsr2h	equ	0xFDA
   901                           fsr2l	equ	0xFD9
   902                           status	equ	0xFD8
   903                           
   904                           	psect	bssBANK2
   905  000200                     __pbssBANK2:
   906                           	opt stack 0
   907  000200                     _led_values:
   908                           	opt stack 0
   909  000200                     	ds	16
   910  000210                     _ipv4DNS:
   911                           	opt stack 0
   912  000210                     	ds	8
   913  000218                     DEMO_TCP_Client@t_clientOld:
   914                           	opt stack 0
   915  000218                     	ds	4
   916  00021C                     Network_Manage@nowPv:
   917                           	opt stack 0
   918  00021C                     	ds	4
   919  000220                     _dhcpServerId:
   920                           	opt stack 0
   921  000220                     	ds	4
   922  000224                     _ipv4Router:
   923                           	opt stack 0
   924  000224                     	ds	4
   925  000228                     _nextSequenceNumber:
   926                           	opt stack 0
   927  000228                     	ds	4
   928  00022C                     _remoteIpv4Address:
   929                           	opt stack 0
   930  00022C                     	ds	4
   931  000230                     DEMO_TCP_Client@port60TCB:
   932                           	opt stack 0
   933  000230                     	ds	55
   934  000267                     DEMO_TCP_Client@rxdataPort60:
   935                           	opt stack 0
   936  000267                     	ds	50
   937  000299                     _ipv4Header:
   938                           	opt stack 0
   939  000299                     	ds	20
   940  0002AD                     _udpHeader:
   941                           	opt stack 0
   942  0002AD                     	ds	8
   943  0002B5                     _remoteSocket:
   944                           	opt stack 0
   945  0002B5                     	ds	6
   946                           tosu	equ	0xFFF
   947                           tosh	equ	0xFFE
   948                           tosl	equ	0xFFD
   949                           pclath	equ	0xFFA
   950                           tblptru	equ	0xFF8
   951                           tblptrh	equ	0xFF7
   952                           tblptrl	equ	0xFF6
   953                           tablat	equ	0xFF5
   954                           prodh	equ	0xFF4
   955                           prodl	equ	0xFF3
   956                           intcon	equ	0xFF2
   957                           indf0	equ	0xFEF
   958                           postinc0	equ	0xFEE
   959                           fsr0h	equ	0xFEA
   960                           fsr0l	equ	0xFE9
   961                           wreg	equ	0xFE8
   962                           postinc1	equ	0xFE6
   963                           postdec1	equ	0xFE5
   964                           plusw1	equ	0xFE3
   965                           fsr1h	equ	0xFE2
   966                           fsr1l	equ	0xFE1
   967                           bsr	equ	0xFE0
   968                           indf2	equ	0xFDF
   969                           postinc2	equ	0xFDE
   970                           postdec2	equ	0xFDD
   971                           plusw2	equ	0xFDB
   972                           fsr2h	equ	0xFDA
   973                           fsr2l	equ	0xFD9
   974                           status	equ	0xFD8
   975                           
   976                           	psect	bssBANK3
   977  000300                     __pbssBANK3:
   978                           	opt stack 0
   979  000300                     _arpMap:
   980                           	opt stack 0
   981  000300                     	ds	104
   982  000368                     DEMO_TCP_Client@txdataPort60:
   983                           	opt stack 0
   984  000368                     	ds	80
   985                           tosu	equ	0xFFF
   986                           tosh	equ	0xFFE
   987                           tosl	equ	0xFFD
   988                           pclath	equ	0xFFA
   989                           tblptru	equ	0xFF8
   990                           tblptrh	equ	0xFF7
   991                           tblptrl	equ	0xFF6
   992                           tablat	equ	0xFF5
   993                           prodh	equ	0xFF4
   994                           prodl	equ	0xFF3
   995                           intcon	equ	0xFF2
   996                           indf0	equ	0xFEF
   997                           postinc0	equ	0xFEE
   998                           fsr0h	equ	0xFEA
   999                           fsr0l	equ	0xFE9
  1000                           wreg	equ	0xFE8
  1001                           postinc1	equ	0xFE6
  1002                           postdec1	equ	0xFE5
  1003                           plusw1	equ	0xFE3
  1004                           fsr1h	equ	0xFE2
  1005                           fsr1l	equ	0xFE1
  1006                           bsr	equ	0xFE0
  1007                           indf2	equ	0xFDF
  1008                           postinc2	equ	0xFDE
  1009                           postdec2	equ	0xFDD
  1010                           plusw2	equ	0xFDB
  1011                           fsr2h	equ	0xFDA
  1012                           fsr2l	equ	0xFD9
  1013                           status	equ	0xFD8
  1014                           
  1015                           	psect	cstackBANK2
  1016  0002BB                     __pcstackBANK2:
  1017                           	opt stack 0
  1018  0002BB                     main@old_ip:
  1019                           	opt stack 0
  1020                           
  1021                           ; 4 bytes @ 0x0
  1022  0002BB                     	ds	4
  1023  0002BF                     main@now_p:
  1024                           	opt stack 0
  1025                           
  1026                           ; 4 bytes @ 0x4
  1027  0002BF                     	ds	4
  1028  0002C3                     main@no_ip_display:
  1029                           	opt stack 0
  1030                           
  1031                           ; 1 bytes @ 0x8
  1032  0002C3                     	ds	1
  1033  0002C4                     main@str:
  1034                           	opt stack 0
  1035                           
  1036                           ; 32 bytes @ 0x9
  1037  0002C4                     	ds	32
  1038  0002E4                     main@ip:
  1039                           	opt stack 0
  1040                           
  1041                           ; 4 bytes @ 0x29
  1042  0002E4                     	ds	4
  1043                           tosu	equ	0xFFF
  1044                           tosh	equ	0xFFE
  1045                           tosl	equ	0xFFD
  1046                           pclath	equ	0xFFA
  1047                           tblptru	equ	0xFF8
  1048                           tblptrh	equ	0xFF7
  1049                           tblptrl	equ	0xFF6
  1050                           tablat	equ	0xFF5
  1051                           prodh	equ	0xFF4
  1052                           prodl	equ	0xFF3
  1053                           intcon	equ	0xFF2
  1054                           indf0	equ	0xFEF
  1055                           postinc0	equ	0xFEE
  1056                           fsr0h	equ	0xFEA
  1057                           fsr0l	equ	0xFE9
  1058                           wreg	equ	0xFE8
  1059                           postinc1	equ	0xFE6
  1060                           postdec1	equ	0xFE5
  1061                           plusw1	equ	0xFE3
  1062                           fsr1h	equ	0xFE2
  1063                           fsr1l	equ	0xFE1
  1064                           bsr	equ	0xFE0
  1065                           indf2	equ	0xFDF
  1066                           postinc2	equ	0xFDE
  1067                           postdec2	equ	0xFDD
  1068                           plusw2	equ	0xFDB
  1069                           fsr2h	equ	0xFDA
  1070                           fsr2l	equ	0xFD9
  1071                           status	equ	0xFD8
  1072                           
  1073                           	psect	cstackBANK1
  1074  000100                     __pcstackBANK1:
  1075                           	opt stack 0
  1076  000100                     ??_TCP_FiniteStateMachine:
  1077                           
  1078                           ; 0 bytes @ 0x0
  1079  000100                     	ds	12
  1080  00010C                     TCP_FiniteStateMachine@ret:
  1081                           	opt stack 0
  1082                           
  1083                           ; 1 bytes @ 0xC
  1084  00010C                     	ds	1
  1085  00010D                     TCP_FiniteStateMachine@notAckBytes:
  1086                           	opt stack 0
  1087                           
  1088                           ; 2 bytes @ 0xD
  1089  00010D                     	ds	2
  1090  00010F                     TCP_FiniteStateMachine@event:
  1091                           	opt stack 0
  1092                           
  1093                           ; 1 bytes @ 0xF
  1094  00010F                     	ds	1
  1095  000110                     TCP_FiniteStateMachine@nextState:
  1096                           	opt stack 0
  1097                           
  1098                           ; 1 bytes @ 0x10
  1099  000110                     	ds	1
  1100  000111                     ??_TCP_Update:
  1101  000111                     TCP_Connect@tcbPtr:
  1102                           	opt stack 0
  1103  000111                     TCP_Recv@remoteAddress:
  1104                           	opt stack 0
  1105                           
  1106                           ; 4 bytes @ 0x11
  1107  000111                     	ds	2
  1108  000113                     TCP_Connect@srvaddr:
  1109                           	opt stack 0
  1110                           
  1111                           ; 2 bytes @ 0x13
  1112  000113                     	ds	2
  1113  000115                     TCP_Recv@length:
  1114                           	opt stack 0
  1115                           
  1116                           ; 2 bytes @ 0x15
  1117  000115                     	ds	2
  1118  000117                     ??_TCP_Recv:
  1119  000117                     ??_DEMO_TCP_Client:
  1120                           
  1121                           ; 0 bytes @ 0x17
  1122  000117                     	ds	2
  1123  000119                     TCP_Update@count:
  1124                           	opt stack 0
  1125  000119                     DEMO_TCP_Client@temperature:
  1126                           	opt stack 0
  1127                           
  1128                           ; 2 bytes @ 0x19
  1129  000119                     	ds	2
  1130  00011B                     TCP_Update@tcbPtr:
  1131                           	opt stack 0
  1132  00011B                     DEMO_TCP_Client@pot:
  1133                           	opt stack 0
  1134                           
  1135                           ; 2 bytes @ 0x1B
  1136  00011B                     	ds	2
  1137  00011D                     DEMO_TCP_Client@socketState:
  1138                           	opt stack 0
  1139                           
  1140                           ; 1 bytes @ 0x1D
  1141  00011D                     	ds	1
  1142  00011E                     DEMO_TCP_Client@rx_len:
  1143                           	opt stack 0
  1144                           
  1145                           ; 2 bytes @ 0x1E
  1146  00011E                     	ds	2
  1147  000120                     DEMO_TCP_Client@ledNr:
  1148                           	opt stack 0
  1149                           
  1150                           ; 1 bytes @ 0x20
  1151  000120                     	ds	1
  1152  000121                     DEMO_TCP_Client@strTmp:
  1153                           	opt stack 0
  1154                           
  1155                           ; 17 bytes @ 0x21
  1156  000121                     	ds	18
  1157  000133                     TCP_Recv@count:
  1158                           	opt stack 0
  1159                           
  1160                           ; 1 bytes @ 0x33
  1161  000133                     	ds	1
  1162  000134                     TCP_Recv@tcbPtr:
  1163                           	opt stack 0
  1164                           
  1165                           ; 2 bytes @ 0x34
  1166  000134                     	ds	2
  1167  000136                     ??_IPV4_Packet:
  1168                           
  1169                           ; 0 bytes @ 0x36
  1170  000136                     	ds	28
  1171  000152                     IPV4_Packet@hdrLen:
  1172                           	opt stack 0
  1173                           
  1174                           ; 1 bytes @ 0x52
  1175  000152                     	ds	1
  1176  000153                     IPV4_Packet@length:
  1177                           	opt stack 0
  1178                           
  1179                           ; 2 bytes @ 0x53
  1180  000153                     	ds	2
  1181  000155                     IPV4_Packet@cksm:
  1182                           	opt stack 0
  1183                           
  1184                           ; 2 bytes @ 0x55
  1185  000155                     	ds	2
  1186  000157                     ??_Network_Read:
  1187                           
  1188                           ; 0 bytes @ 0x57
  1189  000157                     	ds	4
  1190  00015B                     Network_Read@debug_str:
  1191                           	opt stack 0
  1192                           
  1193                           ; 80 bytes @ 0x5B
  1194  00015B                     	ds	80
  1195  0001AB                     Network_Read@header:
  1196                           	opt stack 0
  1197                           
  1198                           ; 14 bytes @ 0xAB
  1199  0001AB                     	ds	14
  1200  0001B9                     ??_Network_Manage:
  1201                           
  1202                           ; 0 bytes @ 0xB9
  1203  0001B9                     	ds	1
  1204  0001BA                     Network_Manage@now:
  1205                           	opt stack 0
  1206                           
  1207                           ; 4 bytes @ 0xBA
  1208  0001BA                     	ds	4
  1209                           tosu	equ	0xFFF
  1210                           tosh	equ	0xFFE
  1211                           tosl	equ	0xFFD
  1212                           pclath	equ	0xFFA
  1213                           tblptru	equ	0xFF8
  1214                           tblptrh	equ	0xFF7
  1215                           tblptrl	equ	0xFF6
  1216                           tablat	equ	0xFF5
  1217                           prodh	equ	0xFF4
  1218                           prodl	equ	0xFF3
  1219                           intcon	equ	0xFF2
  1220                           indf0	equ	0xFEF
  1221                           postinc0	equ	0xFEE
  1222                           fsr0h	equ	0xFEA
  1223                           fsr0l	equ	0xFE9
  1224                           wreg	equ	0xFE8
  1225                           postinc1	equ	0xFE6
  1226                           postdec1	equ	0xFE5
  1227                           plusw1	equ	0xFE3
  1228                           fsr1h	equ	0xFE2
  1229                           fsr1l	equ	0xFE1
  1230                           bsr	equ	0xFE0
  1231                           indf2	equ	0xFDF
  1232                           postinc2	equ	0xFDE
  1233                           postdec2	equ	0xFDD
  1234                           plusw2	equ	0xFDB
  1235                           fsr2h	equ	0xFDA
  1236                           fsr2l	equ	0xFD9
  1237                           status	equ	0xFD8
  1238                           
  1239                           	psect	cstackBANK0
  1240  000060                     __pcstackBANK0:
  1241                           	opt stack 0
  1242  000060                     ??_ETH_TxComputeChecksum:
  1243  000060                     ??_ARPV4_Packet:
  1244  000060                     ??_ARPV4_Request:
  1245  000060                     __doprnt@idx:
  1246                           	opt stack 0
  1247                           
  1248                           ; 1 bytes @ 0x0
  1249  000060                     	ds	1
  1250  000061                     __doprnt@prec:
  1251                           	opt stack 0
  1252                           
  1253                           ; 1 bytes @ 0x1
  1254  000061                     	ds	1
  1255  000062                     __doprnt@len:
  1256                           	opt stack 0
  1257                           
  1258                           ; 2 bytes @ 0x2
  1259  000062                     	ds	2
  1260  000064                     __doprnt@cp:
  1261                           	opt stack 0
  1262                           
  1263                           ; 2 bytes @ 0x4
  1264  000064                     	ds	2
  1265  000066                     __doprnt@flag:
  1266                           	opt stack 0
  1267                           
  1268                           ; 1 bytes @ 0x6
  1269  000066                     	ds	1
  1270  000067                     __doprnt@val:
  1271                           	opt stack 0
  1272                           
  1273                           ; 2 bytes @ 0x7
  1274  000067                     	ds	2
  1275  000069                     __doprnt@width:
  1276                           	opt stack 0
  1277                           
  1278                           ; 2 bytes @ 0x9
  1279  000069                     	ds	2
  1280  00006B                     ??_IPV4_Send:
  1281  00006B                     __doprnt@c:
  1282                           	opt stack 0
  1283                           
  1284                           ; 1 bytes @ 0xB
  1285  00006B                     	ds	1
  1286  00006C                     __doprnt@pb:
  1287                           	opt stack 0
  1288                           
  1289                           ; 1 bytes @ 0xC
  1290  00006C                     	ds	1
  1291  00006D                     sprintf@ap:
  1292                           	opt stack 0
  1293  00006D                     SYSLOG_Write@message:
  1294                           	opt stack 0
  1295  00006D                     SYSLOG_Init@t:
  1296                           	opt stack 0
  1297                           
  1298                           ; 4 bytes @ 0xD
  1299  00006D                     	ds	1
  1300  00006E                     sprintf@pb:
  1301                           	opt stack 0
  1302                           
  1303                           ; 5 bytes @ 0xE
  1304  00006E                     	ds	1
  1305  00006F                     IPV4_Send@ret:
  1306                           	opt stack 0
  1307  00006F                     SYSLOG_Write@t:
  1308                           	opt stack 0
  1309                           
  1310                           ; 2 bytes @ 0xF
  1311  00006F                     	ds	1
  1312  000070                     IPV4_Send@cksm:
  1313                           	opt stack 0
  1314                           
  1315                           ; 2 bytes @ 0x10
  1316  000070                     	ds	1
  1317  000071                     ETH_Copy@len:
  1318                           	opt stack 0
  1319                           
  1320                           ; 2 bytes @ 0x11
  1321  000071                     	ds	1
  1322  000072                     IPV4_Send@totalLength:
  1323                           	opt stack 0
  1324                           
  1325                           ; 2 bytes @ 0x12
  1326  000072                     	ds	1
  1327  000073                     ETH_Copy@timer:
  1328                           	opt stack 0
  1329                           
  1330                           ; 2 bytes @ 0x13
  1331  000073                     	ds	1
  1332  000074                     ??_UDP_Send:
  1333                           
  1334                           ; 0 bytes @ 0x14
  1335  000074                     	ds	1
  1336  000075                     ETH_Copy@tmp_len:
  1337                           	opt stack 0
  1338                           
  1339                           ; 2 bytes @ 0x15
  1340  000075                     	ds	4
  1341  000079                     UDP_Send@cksm:
  1342                           	opt stack 0
  1343                           
  1344                           ; 2 bytes @ 0x19
  1345  000079                     	ds	2
  1346  00007B                     ARPV4_Request@ret:
  1347                           	opt stack 0
  1348  00007B                     UDP_Send@udpLength:
  1349                           	opt stack 0
  1350                           
  1351                           ; 2 bytes @ 0x1B
  1352  00007B                     	ds	1
  1353  00007C                     ARPV4_Request@header:
  1354                           	opt stack 0
  1355                           
  1356                           ; 28 bytes @ 0x1C
  1357  00007C                     	ds	4
  1358  000080                     ARPV4_Packet@length:
  1359                           	opt stack 0
  1360                           
  1361                           ; 2 bytes @ 0x20
  1362  000080                     	ds	2
  1363  000082                     ARPV4_Packet@mergeFlag:
  1364                           	opt stack 0
  1365                           
  1366                           ; 1 bytes @ 0x22
  1367  000082                     	ds	1
  1368  000083                     ARPV4_Packet@ret:
  1369                           	opt stack 0
  1370                           
  1371                           ; 1 bytes @ 0x23
  1372  000083                     	ds	1
  1373  000084                     ARPV4_Packet@arpPtr:
  1374                           	opt stack 0
  1375                           
  1376                           ; 2 bytes @ 0x24
  1377  000084                     	ds	2
  1378  000086                     ARPV4_Packet@x:
  1379                           	opt stack 0
  1380                           
  1381                           ; 1 bytes @ 0x26
  1382  000086                     	ds	1
  1383  000087                     ARPV4_Packet@x_1672:
  1384                           	opt stack 0
  1385                           
  1386                           ; 1 bytes @ 0x27
  1387  000087                     	ds	1
  1388  000088                     ARPV4_Packet@entryPointer:
  1389                           	opt stack 0
  1390                           
  1391                           ; 2 bytes @ 0x28
  1392  000088                     	ds	2
  1393  00008A                     ARPV4_Packet@header:
  1394                           	opt stack 0
  1395                           
  1396                           ; 28 bytes @ 0x2A
  1397  00008A                     	ds	14
  1398  000098                     IPv4_Start@targetAddress:
  1399                           	opt stack 0
  1400                           
  1401                           ; 4 bytes @ 0x38
  1402  000098                     	ds	4
  1403  00009C                     IPv4_Start@macAddress:
  1404                           	opt stack 0
  1405                           
  1406                           ; 2 bytes @ 0x3C
  1407  00009C                     	ds	2
  1408  00009E                     IPv4_Start@ret:
  1409                           	opt stack 0
  1410                           
  1411                           ; 1 bytes @ 0x3E
  1412  00009E                     	ds	1
  1413  00009F                     ICMP_EchoReply@ipv4Hdr:
  1414                           	opt stack 0
  1415  00009F                     TCP_Snd@tcbPtr:
  1416                           	opt stack 0
  1417  00009F                     UDP_Start@destIP:
  1418                           	opt stack 0
  1419                           
  1420                           ; 4 bytes @ 0x3F
  1421  00009F                     	ds	2
  1422  0000A1                     ??_ICMP_EchoReply:
  1423  0000A1                     ??_TCP_Snd:
  1424                           
  1425                           ; 0 bytes @ 0x41
  1426  0000A1                     	ds	2
  1427  0000A3                     UDP_Start@srcPort:
  1428                           	opt stack 0
  1429                           
  1430                           ; 2 bytes @ 0x43
  1431  0000A3                     	ds	2
  1432  0000A5                     UDP_Start@dstPort:
  1433                           	opt stack 0
  1434                           
  1435                           ; 2 bytes @ 0x45
  1436  0000A5                     	ds	2
  1437  0000A7                     DHCP_Request@started:
  1438                           	opt stack 0
  1439                           
  1440                           ; 1 bytes @ 0x47
  1441  0000A7                     	ds	1
  1442  0000A8                     DHCP_Request@type:
  1443                           	opt stack 0
  1444                           
  1445                           ; 1 bytes @ 0x48
  1446  0000A8                     	ds	1
  1447  0000A9                     ICMP_EchoReply@cksm:
  1448                           	opt stack 0
  1449  0000A9                     DHCP_Request@ethMAC:
  1450                           	opt stack 0
  1451                           
  1452                           ; 6 bytes @ 0x49
  1453  0000A9                     	ds	2
  1454  0000AB                     ICMP_EchoReply@ipv4PayloadLength:
  1455                           	opt stack 0
  1456                           
  1457                           ; 2 bytes @ 0x4B
  1458  0000AB                     	ds	2
  1459  0000AD                     ICMP_EchoReply@ret:
  1460                           	opt stack 0
  1461                           
  1462                           ; 1 bytes @ 0x4D
  1463  0000AD                     	ds	1
  1464  0000AE                     ICMP_EchoReply@icmpHdr:
  1465                           	opt stack 0
  1466                           
  1467                           ; 1 bytes @ 0x4E
  1468  0000AE                     	ds	1
  1469  0000AF                     DHCP_Handler@length:
  1470                           	opt stack 0
  1471  0000AF                     ICMP_Receive@ipv4Hdr:
  1472                           	opt stack 0
  1473                           
  1474                           ; 2 bytes @ 0x4F
  1475  0000AF                     	ds	2
  1476  0000B1                     ??_DHCP_Handler:
  1477  0000B1                     ??_ICMP_Receive:
  1478                           
  1479                           ; 0 bytes @ 0x51
  1480  0000B1                     	ds	2
  1481  0000B3                     DHCP_Handler@ip:
  1482                           	opt stack 0
  1483                           
  1484                           ; 8 bytes @ 0x53
  1485  0000B3                     	ds	3
  1486  0000B6                     ICMP_Receive@icmpHdr:
  1487                           	opt stack 0
  1488                           
  1489                           ; 8 bytes @ 0x56
  1490  0000B6                     	ds	5
  1491  0000BB                     DHCP_Handler@v:
  1492                           	opt stack 0
  1493                           
  1494                           ; 4 bytes @ 0x5B
  1495  0000BB                     	ds	4
  1496  0000BF                     DHCP_Handler@v16:
  1497                           	opt stack 0
  1498                           
  1499                           ; 2 bytes @ 0x5F
  1500  0000BF                     	ds	2
  1501  0000C1                     DHCP_Handler@option:
  1502                           	opt stack 0
  1503                           
  1504                           ; 1 bytes @ 0x61
  1505  0000C1                     	ds	1
  1506  0000C2                     DHCP_Handler@ethPktMAC:
  1507                           	opt stack 0
  1508                           
  1509                           ; 6 bytes @ 0x62
  1510  0000C2                     	ds	6
  1511  0000C8                     DHCP_Handler@ethMAC:
  1512                           	opt stack 0
  1513                           
  1514                           ; 6 bytes @ 0x68
  1515  0000C8                     	ds	6
  1516  0000CE                     DHCP_Handler@optionLength:
  1517                           	opt stack 0
  1518                           
  1519                           ; 1 bytes @ 0x6E
  1520  0000CE                     	ds	1
  1521  0000CF                     DHCP_Handler@myip:
  1522                           	opt stack 0
  1523                           
  1524                           ; 4 bytes @ 0x6F
  1525  0000CF                     	ds	2
  1526  0000D1                     TCP_Snd@data:
  1527                           	opt stack 0
  1528                           
  1529                           ; 2 bytes @ 0x71
  1530  0000D1                     	ds	2
  1531  0000D3                     TCP_Snd@cksm:
  1532                           	opt stack 0
  1533  0000D3                     UDP_Receive@udpcksm:
  1534                           	opt stack 0
  1535                           
  1536                           ; 2 bytes @ 0x73
  1537  0000D3                     	ds	2
  1538  0000D5                     ??_UDP_Receive:
  1539  0000D5                     TCP_Snd@payloadLength:
  1540                           	opt stack 0
  1541                           
  1542                           ; 2 bytes @ 0x75
  1543  0000D5                     	ds	2
  1544  0000D7                     TCP_Snd@ret:
  1545                           	opt stack 0
  1546                           
  1547                           ; 1 bytes @ 0x77
  1548  0000D7                     	ds	1
  1549  0000D8                     TCP_Snd@tcpDataLength:
  1550                           	opt stack 0
  1551                           
  1552                           ; 2 bytes @ 0x78
  1553  0000D8                     	ds	2
  1554  0000DA                     TCP_Snd@txHeader:
  1555                           	opt stack 0
  1556                           
  1557                           ; 20 bytes @ 0x7A
  1558  0000DA                     	ds	1
  1559  0000DB                     UDP_Receive@x:
  1560                           	opt stack 0
  1561                           
  1562                           ; 2 bytes @ 0x7B
  1563  0000DB                     	ds	2
  1564  0000DD                     UDP_Receive@hptr:
  1565                           	opt stack 0
  1566                           
  1567                           ; 1 bytes @ 0x7D
  1568  0000DD                     	ds	17
  1569  0000EE                     TCP_PayloadSave@len:
  1570                           	opt stack 0
  1571  0000EE                     TCP_Send@tcbPtr:
  1572                           	opt stack 0
  1573                           
  1574                           ; 2 bytes @ 0x8E
  1575  0000EE                     	ds	2
  1576  0000F0                     ??_TCP_PayloadSave:
  1577  0000F0                     TCP_Send@data:
  1578                           	opt stack 0
  1579                           
  1580                           ; 2 bytes @ 0x90
  1581  0000F0                     	ds	2
  1582  0000F2                     TCP_Send@dataLen:
  1583                           	opt stack 0
  1584                           
  1585                           ; 2 bytes @ 0x92
  1586  0000F2                     	ds	11
  1587  0000FD                     TCP_PayloadSave@buffer_size:
  1588                           	opt stack 0
  1589                           
  1590                           ; 2 bytes @ 0x9D
  1591  0000FD                     	ds	2
  1592                           tosu	equ	0xFFF
  1593                           tosh	equ	0xFFE
  1594                           tosl	equ	0xFFD
  1595                           pclath	equ	0xFFA
  1596                           tblptru	equ	0xFF8
  1597                           tblptrh	equ	0xFF7
  1598                           tblptrl	equ	0xFF6
  1599                           tablat	equ	0xFF5
  1600                           prodh	equ	0xFF4
  1601                           prodl	equ	0xFF3
  1602                           intcon	equ	0xFF2
  1603                           indf0	equ	0xFEF
  1604                           postinc0	equ	0xFEE
  1605                           fsr0h	equ	0xFEA
  1606                           fsr0l	equ	0xFE9
  1607                           wreg	equ	0xFE8
  1608                           postinc1	equ	0xFE6
  1609                           postdec1	equ	0xFE5
  1610                           plusw1	equ	0xFE3
  1611                           fsr1h	equ	0xFE2
  1612                           fsr1l	equ	0xFE1
  1613                           bsr	equ	0xFE0
  1614                           indf2	equ	0xFDF
  1615                           postinc2	equ	0xFDE
  1616                           postdec2	equ	0xFDD
  1617                           plusw2	equ	0xFDB
  1618                           fsr2h	equ	0xFDA
  1619                           fsr2l	equ	0xFD9
  1620                           status	equ	0xFD8
  1621                           
  1622                           	psect	cstackCOMRAM
  1623  000001                     __pcstackCOMRAM:
  1624                           	opt stack 0
  1625  000001                     i1PHY_WaitForBusy@ret:
  1626                           	opt stack 0
  1627                           
  1628                           ; 1 bytes @ 0x0
  1629  000001                     	ds	1
  1630  000002                     i1PHY_WaitForBusy@timeout:
  1631                           	opt stack 0
  1632                           
  1633                           ; 1 bytes @ 0x1
  1634  000002                     	ds	1
  1635  000003                     ?i1_PHY_Read:
  1636                           	opt stack 0
  1637                           
  1638                           ; 4 bytes @ 0x2
  1639  000003                     	ds	4
  1640  000007                     i1PHY_Read@reg:
  1641                           	opt stack 0
  1642                           
  1643                           ; 1 bytes @ 0x6
  1644  000007                     	ds	1
  1645  000008                     i1PHY_Read@ret:
  1646                           	opt stack 0
  1647                           
  1648                           ; 4 bytes @ 0x7
  1649  000008                     	ds	4
  1650  00000C                     ?i1_ETH_readLinkStatus:
  1651                           	opt stack 0
  1652                           
  1653                           ; 4 bytes @ 0xB
  1654  00000C                     	ds	4
  1655  000010                     i1ETH_CheckLinkUp@value:
  1656                           	opt stack 0
  1657                           
  1658                           ; 4 bytes @ 0xF
  1659  000010                     	ds	4
  1660  000014                     ??_low_isr:
  1661  000014                     
  1662                           ; 0 bytes @ 0x13
  1663  000014                     	ds	3
  1664  000017                     ??_isdigit:
  1665  000017                     ??_ETH_Flush:
  1666  000017                     ?_memcmp:
  1667                           	opt stack 0
  1668  000017                     ?_strlen:
  1669                           	opt stack 0
  1670  000017                     ?_ADC_GetConversion:
  1671                           	opt stack 0
  1672  000017                     ?_ETH_Read16:
  1673                           	opt stack 0
  1674  000017                     ?_ETH_ReadBlock:
  1675                           	opt stack 0
  1676  000017                     ?_ETH_ComputeChecksum:
  1677                           	opt stack 0
  1678  000017                     ?_ETH_GetByteCount:
  1679                           	opt stack 0
  1680  000017                     ?_ARPV4_Lookup:
  1681                           	opt stack 0
  1682  000017                     ?_IPV4_PseudoHeaderChecksum:
  1683                           	opt stack 0
  1684  000017                     ?___wmul:
  1685                           	opt stack 0
  1686  000017                     ?___lwdiv:
  1687                           	opt stack 0
  1688  000017                     ?_time:
  1689                           	opt stack 0
  1690  000017                     ?_ETH_Read32:
  1691                           	opt stack 0
  1692  000017                     ?_IPV4_GetMyIP:
  1693                           	opt stack 0
  1694  000017                     lcd_write_ctrl@c:
  1695                           	opt stack 0
  1696  000017                     lcd_write_data@d:
  1697                           	opt stack 0
  1698  000017                     LED_Init@x:
  1699                           	opt stack 0
  1700  000017                     putch@data:
  1701                           	opt stack 0
  1702  000017                     PHY_WaitForBusy@ret:
  1703                           	opt stack 0
  1704  000017                     ETH_Read8@ret:
  1705                           	opt stack 0
  1706  000017                     ETH_Write8@data:
  1707                           	opt stack 0
  1708  000017                     ETH_GetMAC@mac:
  1709                           	opt stack 0
  1710  000017                     ARPV4_Init@x:
  1711                           	opt stack 0
  1712  000017                     memcmp@s2:
  1713                           	opt stack 0
  1714  000017                     time@t:
  1715                           	opt stack 0
  1716  000017                     ETH_ReadBlock@buffer:
  1717                           	opt stack 0
  1718  000017                     ETH_Write16@data:
  1719                           	opt stack 0
  1720  000017                     ETH_WriteBlock@buffer:
  1721                           	opt stack 0
  1722  000017                     ETH_WriteStart@dest_mac:
  1723                           	opt stack 0
  1724  000017                     ETH_Send@packetEnd:
  1725                           	opt stack 0
  1726  000017                     ETH_Insert@len:
  1727                           	opt stack 0
  1728  000017                     ETH_Dump@length:
  1729                           	opt stack 0
  1730  000017                     ETH_ComputeChecksum@len:
  1731                           	opt stack 0
  1732  000017                     ARPV4_Update@entryPointer:
  1733                           	opt stack 0
  1734  000017                     IPV4_PseudoHeaderChecksum@payloadLen:
  1735                           	opt stack 0
  1736  000017                     TCB_Insert@ptr:
  1737                           	opt stack 0
  1738  000017                     TCB_Reset@tcbPtr:
  1739                           	opt stack 0
  1740  000017                     TCB_Check@ptr:
  1741                           	opt stack 0
  1742  000017                     ___wmul@multiplier:
  1743                           	opt stack 0
  1744  000017                     ___lwdiv@dividend:
  1745                           	opt stack 0
  1746  000017                     memset@p1:
  1747                           	opt stack 0
  1748  000017                     strlen@s:
  1749                           	opt stack 0
  1750  000017                     ETH_Write32@data:
  1751                           	opt stack 0
  1752  000017                     ARPV4_Lookup@ip_address:
  1753                           	opt stack 0
  1754                           
  1755                           ; 4 bytes @ 0x16
  1756  000017                     	ds	1
  1757  000018                     ??_lcd_init:
  1758  000018                     lcd_putch@c:
  1759                           	opt stack 0
  1760  000018                     lcd_goto1@pos:
  1761                           	opt stack 0
  1762  000018                     lcd_goto2@pos:
  1763                           	opt stack 0
  1764  000018                     PHY_WaitForBusy@timeout:
  1765                           	opt stack 0
  1766  000018                     _isdigit$4432:
  1767                           	opt stack 0
  1768  000018                     DHCP_WriteZeros@length:
  1769                           	opt stack 0
  1770  000018                     memcmp@n:
  1771                           	opt stack 0
  1772                           
  1773                           ; 2 bytes @ 0x17
  1774  000018                     	ds	1
  1775  000019                     ??_ADC_GetConversion:
  1776  000019                     ??_IPV4_PseudoHeaderChecksum:
  1777  000019                     ??_TCB_Reset:
  1778  000019                     ??_TCB_Check:
  1779  000019                     ?_PHY_Read:
  1780                           	opt stack 0
  1781  000019                     ARPV4_Update@x:
  1782                           	opt stack 0
  1783  000019                     isdigit@c:
  1784                           	opt stack 0
  1785  000019                     lcd_puts@s:
  1786                           	opt stack 0
  1787  000019                     PHY_Write@data:
  1788                           	opt stack 0
  1789  000019                     ETH_Read16@ret:
  1790                           	opt stack 0
  1791  000019                     ETH_ReadBlock@length:
  1792                           	opt stack 0
  1793  000019                     ETH_WriteBlock@length:
  1794                           	opt stack 0
  1795  000019                     ETH_WriteStart@type:
  1796                           	opt stack 0
  1797  000019                     ETH_Insert@offset:
  1798                           	opt stack 0
  1799  000019                     ETH_ComputeChecksum@seed:
  1800                           	opt stack 0
  1801  000019                     ETH_GetByteCount@val:
  1802                           	opt stack 0
  1803  000019                     ___wmul@multiplicand:
  1804                           	opt stack 0
  1805  000019                     ___lwdiv@divisor:
  1806                           	opt stack 0
  1807  000019                     memset@c:
  1808                           	opt stack 0
  1809  000019                     strlen@cp:
  1810                           	opt stack 0
  1811                           
  1812                           ; 2 bytes @ 0x18
  1813  000019                     	ds	1
  1814  00001A                     ??_memcmp:
  1815  00001A                     ADC_GetConversion@channel:
  1816                           	opt stack 0
  1817                           
  1818                           ; 1 bytes @ 0x19
  1819  00001A                     	ds	1
  1820  00001B                     ??_ETH_ReadBlock:
  1821  00001B                     ??_ETH_WriteStart:
  1822  00001B                     ??_ETH_ComputeChecksum:
  1823  00001B                     ??_TCP_ParseTCPOptions:
  1824  00001B                     time@gie_val:
  1825                           	opt stack 0
  1826  00001B                     PHY_Write@reg:
  1827                           	opt stack 0
  1828  00001B                     TCB_Check@ret:
  1829                           	opt stack 0
  1830  00001B                     ___lwdiv@counter:
  1831                           	opt stack 0
  1832  00001B                     ETH_WriteBlock@p:
  1833                           	opt stack 0
  1834  00001B                     ETH_Insert@current_tx_ptr:
  1835                           	opt stack 0
  1836  00001B                     ___wmul@product:
  1837                           	opt stack 0
  1838  00001B                     memset@n:
  1839                           	opt stack 0
  1840  00001B                     ETH_Read32@ret:
  1841                           	opt stack 0
  1842                           
  1843                           ; 4 bytes @ 0x1A
  1844  00001B                     	ds	1
  1845  00001C                     PHY_Write@GIESave:
  1846                           	opt stack 0
  1847  00001C                     TCB_Check@count:
  1848                           	opt stack 0
  1849  00001C                     memcmp@s1:
  1850                           	opt stack 0
  1851  00001C                     ETH_ReadBlock@len:
  1852                           	opt stack 0
  1853  00001C                     ___lwdiv@quotient:
  1854                           	opt stack 0
  1855  00001C                     time@the_time:
  1856                           	opt stack 0
  1857                           
  1858                           ; 4 bytes @ 0x1B
  1859  00001C                     	ds	1
  1860  00001D                     PHY_Read@reg:
  1861                           	opt stack 0
  1862  00001D                     ETH_Insert@data:
  1863                           	opt stack 0
  1864  00001D                     IPV4_PseudoHeaderChecksum@v:
  1865                           	opt stack 0
  1866  00001D                     TCP_ParseTCPOptions@ret:
  1867                           	opt stack 0
  1868  00001D                     TCB_Check@tcbPtr:
  1869                           	opt stack 0
  1870  00001D                     memset@p:
  1871                           	opt stack 0
  1872  00001D                     ARPV4_Request@destAddress:
  1873                           	opt stack 0
  1874                           
  1875                           ; 4 bytes @ 0x1C
  1876  00001D                     	ds	1
  1877  00001E                     ?___lwmod:
  1878                           	opt stack 0
  1879  00001E                     IPV4_PseudoHeaderChecksum@len:
  1880                           	opt stack 0
  1881  00001E                     TCP_ParseTCPOptions@opt:
  1882                           	opt stack 0
  1883  00001E                     ETH_ReadBlock@p:
  1884                           	opt stack 0
  1885  00001E                     ___lwmod@dividend:
  1886                           	opt stack 0
  1887  00001E                     PHY_Read@ret:
  1888                           	opt stack 0
  1889                           
  1890                           ; 4 bytes @ 0x1D
  1891  00001E                     	ds	1
  1892  00001F                     ?_TCP_GetReceivedData:
  1893                           	opt stack 0
  1894  00001F                     ARPV4_Lookup@entry_pointer:
  1895                           	opt stack 0
  1896  00001F                     TCP_ParseTCPOptions@tcpOptionsSize:
  1897                           	opt stack 0
  1898  00001F                     TCP_SocketInit@tcbPtr:
  1899                           	opt stack 0
  1900  00001F                     TCP_SocketPoll@socket_ptr:
  1901                           	opt stack 0
  1902  00001F                     TCP_SendDone@tcbPtr:
  1903                           	opt stack 0
  1904  00001F                     TCP_InsertRxBuffer@tcbPtr:
  1905                           	opt stack 0
  1906  00001F                     TCP_GetReceivedData@tcbPtr:
  1907                           	opt stack 0
  1908  00001F                     ETH_ComputeChecksum@cksm:
  1909                           	opt stack 0
  1910  00001F                     IPV4_PseudoHeaderChecksum@cksm:
  1911                           	opt stack 0
  1912                           
  1913                           ; 4 bytes @ 0x1E
  1914  00001F                     	ds	1
  1915  000020                     ___lwmod@divisor:
  1916                           	opt stack 0
  1917                           
  1918                           ; 2 bytes @ 0x1F
  1919  000020                     	ds	1
  1920  000021                     ??_TCP_GetReceivedData:
  1921  000021                     ARPV4_Lookup@x:
  1922                           	opt stack 0
  1923  000021                     TCP_SocketPoll@tmpSocketState:
  1924                           	opt stack 0
  1925  000021                     TCP_SendDone@ret:
  1926                           	opt stack 0
  1927  000021                     TCP_InsertRxBuffer@data:
  1928                           	opt stack 0
  1929                           
  1930                           ; 2 bytes @ 0x20
  1931  000021                     	ds	1
  1932  000022                     ?_ETH_readLinkStatus:
  1933                           	opt stack 0
  1934  000022                     ___lwmod@counter:
  1935                           	opt stack 0
  1936  000022                     IPv4_Start@destAddress:
  1937                           	opt stack 0
  1938                           
  1939                           ; 4 bytes @ 0x21
  1940  000022                     	ds	1
  1941  000023                     ?__doprnt:
  1942                           	opt stack 0
  1943  000023                     __doprnt@f:
  1944                           	opt stack 0
  1945  000023                     ETH_ComputeChecksum@v:
  1946                           	opt stack 0
  1947  000023                     TCP_InsertRxBuffer@data_len:
  1948                           	opt stack 0
  1949  000023                     IPV4_PseudoHeaderChecksum@tmp:
  1950                           	opt stack 0
  1951                           
  1952                           ; 12 bytes @ 0x22
  1953  000023                     	ds	1
  1954  000024                     __doprnt@ap:
  1955                           	opt stack 0
  1956                           
  1957                           ; 1 bytes @ 0x23
  1958  000024                     	ds	1
  1959  000025                     ??__doprnt:
  1960  000025                     ?_ETH_TxComputeChecksum:
  1961                           	opt stack 0
  1962  000025                     ?_ETH_RxComputeChecksum:
  1963                           	opt stack 0
  1964  000025                     ETH_TxComputeChecksum@position:
  1965                           	opt stack 0
  1966  000025                     ETH_RxComputeChecksum@len:
  1967                           	opt stack 0
  1968  000025                     TCP_GetReceivedData@ret:
  1969                           	opt stack 0
  1970                           
  1971                           ; 2 bytes @ 0x24
  1972  000025                     	ds	1
  1973  000026                     IPv4_Start@protocol:
  1974                           	opt stack 0
  1975  000026                     ETH_CheckLinkUp@value:
  1976                           	opt stack 0
  1977                           
  1978                           ; 4 bytes @ 0x25
  1979  000026                     	ds	1
  1980  000027                     ??_IPv4_Start:
  1981  000027                     ETH_TxComputeChecksum@len:
  1982                           	opt stack 0
  1983  000027                     ETH_RxComputeChecksum@seed:
  1984                           	opt stack 0
  1985                           
  1986                           ; 2 bytes @ 0x26
  1987  000027                     	ds	2
  1988  000029                     ??_ETH_RxComputeChecksum:
  1989  000029                     ?_sprintf:
  1990                           	opt stack 0
  1991  000029                     ?_printf:
  1992                           	opt stack 0
  1993  000029                     ETH_TxComputeChecksum@seed:
  1994                           	opt stack 0
  1995  000029                     sprintf@wh:
  1996                           	opt stack 0
  1997                           
  1998                           ; 2 bytes @ 0x28
  1999  000029                     	ds	1
  2000  00002A                     ??_ETH_Init:
  2001  00002A                     
  2002                           ; 0 bytes @ 0x29
  2003  00002A                     	ds	1
  2004  00002B                     sprintf@f:
  2005                           	opt stack 0
  2006  00002B                     ETH_TxComputeChecksum@rxptr:
  2007                           	opt stack 0
  2008                           
  2009                           ; 2 bytes @ 0x2A
  2010  00002B                     	ds	2
  2011  00002D                     ETH_Init@mac:
  2012                           	opt stack 0
  2013  00002D                     printf@f:
  2014                           	opt stack 0
  2015  00002D                     ETH_RxComputeChecksum@rxptr:
  2016                           	opt stack 0
  2017  00002D                     ETH_TxComputeChecksum@cksm:
  2018                           	opt stack 0
  2019                           
  2020                           ; 4 bytes @ 0x2C
  2021  00002D                     	ds	1
  2022  00002E                     printf@ap:
  2023                           	opt stack 0
  2024                           
  2025                           ; 1 bytes @ 0x2D
  2026  00002E                     	ds	1
  2027  00002F                     UDP_Start@ret:
  2028                           	opt stack 0
  2029  00002F                     ETH_RxComputeChecksum@cksm:
  2030                           	opt stack 0
  2031  00002F                     printf@pb:
  2032                           	opt stack 0
  2033                           
  2034                           ; 5 bytes @ 0x2E
  2035  00002F                     	ds	2
  2036  000031                     IPV4_Send@payloadLength:
  2037                           	opt stack 0
  2038                           
  2039                           ; 2 bytes @ 0x30
  2040  000031                     	ds	2
  2041  000033                     
  2042                           ; 0 bytes @ 0x32
  2043  000033                     	ds	1
  2044  000034                     tosu	equ	0xFFF
  2045                           tosh	equ	0xFFE
  2046                           tosl	equ	0xFFD
  2047                           pclath	equ	0xFFA
  2048                           tblptru	equ	0xFF8
  2049                           tblptrh	equ	0xFF7
  2050                           tblptrl	equ	0xFF6
  2051                           tablat	equ	0xFF5
  2052                           prodh	equ	0xFF4
  2053                           prodl	equ	0xFF3
  2054                           intcon	equ	0xFF2
  2055                           indf0	equ	0xFEF
  2056                           postinc0	equ	0xFEE
  2057                           fsr0h	equ	0xFEA
  2058                           fsr0l	equ	0xFE9
  2059                           wreg	equ	0xFE8
  2060                           postinc1	equ	0xFE6
  2061                           postdec1	equ	0xFE5
  2062                           plusw1	equ	0xFE3
  2063                           fsr1h	equ	0xFE2
  2064                           fsr1l	equ	0xFE1
  2065                           bsr	equ	0xFE0
  2066                           indf2	equ	0xFDF
  2067                           postinc2	equ	0xFDE
  2068                           postdec2	equ	0xFDD
  2069                           plusw2	equ	0xFDB
  2070                           fsr2h	equ	0xFDA
  2071                           fsr2l	equ	0xFD9
  2072                           status	equ	0xFD8
  2073                           
  2074                           ; 0 bytes @ 0x33
  2075 ;;
  2076 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2077 ;;
  2078 ;; *************** function _main *****************
  2079 ;; Defined at:
  2080 ;;		line 180 in file "main.c"
  2081 ;; Parameters:    Size  Location     Type
  2082 ;;		None
  2083 ;; Auto vars:     Size  Location     Type
  2084 ;;  now_p           4    4[BANK2 ] long 
  2085 ;;  str            32    9[BANK2 ] unsigned char [32]
  2086 ;;  ip              4   41[BANK2 ] unsigned long 
  2087 ;;  old_ip          4    0[BANK2 ] unsigned long 
  2088 ;;  no_ip_displa    1    8[BANK2 ] unsigned char 
  2089 ;; Return value:  Size  Location     Type
  2090 ;;		None               void
  2091 ;; Registers used:
  2092 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  2093 ;; Tracked objects:
  2094 ;;		On entry : 0/0
  2095 ;;		On exit  : 0/0
  2096 ;;		Unchanged: 0/0
  2097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2099 ;;      Locals:         0       0       0      45       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2101 ;;      Totals:         0       0       0      45       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2102 ;;Total ram usage:       45 bytes
  2103 ;; Hardware stack levels required when called:   19
  2104 ;; This function calls:
  2105 ;;		_DEMO_TCP_Client
  2106 ;;		_IPV4_GetMyIP
  2107 ;;		_Network_Init
  2108 ;;		_Network_Manage
  2109 ;;		_Network_WaitForLink
  2110 ;;		_SYSLOG_Init
  2111 ;;		_SYSLOG_Write
  2112 ;;		_initHW
  2113 ;;		_lcd_goto1
  2114 ;;		_lcd_puts
  2115 ;;		_memset
  2116 ;;		_sprintf
  2117 ;;		_time
  2118 ;; This function is called by:
  2119 ;;		Startup code after reset
  2120 ;; This function uses a non-reentrant model
  2121 ;;
  2122                           
  2123                           	psect	text0
  2124  004F42                     __ptext0:
  2125                           	opt stack 0
  2126  004F42                     _main:
  2127                           	opt stack 12
  2128                           
  2129                           ;main.c: 182: unsigned long ip, old_ip;
  2130                           ;main.c: 183: char str[32];
  2131                           ;main.c: 184: bool no_ip_display = 1;
  2132                           
  2133                           ; BSR set to: 14
  2134                           ;incstack = 0
  2135  004F42  0E01               	movlw	1
  2136  004F44  0102               	movlb	2	; () banked
  2137  004F46  6FC3               	movwf	main@no_ip_display& (0+255),b
  2138                           
  2139                           ; BSR set to: 2
  2140                           ;main.c: 186: initHW();
  2141  004F48  ECC1  F030         	call	_initHW	;wreg free
  2142                           
  2143                           ;main.c: 187: Network_Init();
  2144  004F4C  EC48  F032         	call	_Network_Init	;wreg free
  2145                           
  2146                           ; BSR set to: 1
  2147                           ;main.c: 188: SYSLOG_Init();
  2148  004F50  EC46  F031         	call	_SYSLOG_Init	;wreg free
  2149                           
  2150                           ; BSR set to: 0
  2151                           ;main.c: 191: IPEN = 1;
  2152  004F54  8ED0               	bsf	4048,7,c	;volatile
  2153                           
  2154                           ; BSR set to: 0
  2155                           ;main.c: 192: GIEH = 1;
  2156  004F56  8EF2               	bsf	intcon,7,c	;volatile
  2157                           
  2158                           ; BSR set to: 0
  2159                           ;main.c: 193: GIEL = 1;
  2160  004F58  8CF2               	bsf	intcon,6,c	;volatile
  2161                           
  2162                           ; BSR set to: 0
  2163                           ;main.c: 195: SYSLOG_Write("Waiting for Link");
  2164  004F5A  0EA3               	movlw	low STR_7
  2165  004F5C  D872               	call	PL621	;call to abstracted procedure
  2166  004F5E  EC35  F032         	call	_SYSLOG_Write	;wreg free
  2167                           
  2168                           ; BSR set to: 0
  2169                           ;main.c: 196: Network_WaitForLink();
  2170  004F62  EC64  F033         	call	_Network_WaitForLink	;wreg free
  2171                           
  2172                           ;main.c: 197: SYSLOG_Write("Link started");
  2173  004F66  0EC3               	movlw	low STR_8
  2174  004F68  0100               	movlb	0	; () banked
  2175  004F6A  D86B               	call	PL621	;call to abstracted procedure
  2176  004F6C  EC35  F032         	call	_SYSLOG_Write	;wreg free
  2177                           
  2178                           ; BSR set to: 0
  2179                           ;main.c: 201: remoteSocket.addr.s_addr = ((uint32_t)(((uint32_t)10 << 24) | ((uint32_t)1
      +                          4<<16) | ((uint32_t)5 << 8) | (uint32_t)141));
  2180  004F70  0E8D               	movlw	141
  2181  004F72  0102               	movlb	2	; () banked
  2182  004F74  6FB7               	movwf	(_remoteSocket+2)& (0+255),b
  2183  004F76  0E05               	movlw	5
  2184  004F78  6FB8               	movwf	(_remoteSocket+3)& (0+255),b
  2185  004F7A  0E0E               	movlw	14
  2186  004F7C  6FB9               	movwf	(_remoteSocket+4)& (0+255),b
  2187  004F7E  0E0A               	movlw	10
  2188  004F80  6FBA               	movwf	(_remoteSocket+5)& (0+255),b
  2189                           
  2190                           ; BSR set to: 2
  2191                           ;main.c: 202: remoteSocket.port = 60;
  2192  004F82  6BB6               	clrf	(_remoteSocket+1)& (0+255),b
  2193  004F84  0E3C               	movlw	60
  2194  004F86  6FB5               	movwf	_remoteSocket& (0+255),b
  2195  004F88                     l10323:
  2196                           
  2197                           ;main.c: 206: {
  2198                           ;main.c: 207: time_t now_p;
  2199                           ;main.c: 208: time(&now_p);
  2200  004F88  0EBF               	movlw	low main@now_p
  2201  004F8A  6E17               	movwf	time@t,c
  2202  004F8C  0E02               	movlw	high main@now_p
  2203  004F8E  6E18               	movwf	time@t+1,c
  2204  004F90  EC52  F02E         	call	_time	;wreg free
  2205                           
  2206                           ;main.c: 209: Network_Manage();
  2207  004F94  EC9A  F02C         	call	_Network_Manage	;wreg free
  2208                           
  2209                           ; BSR set to: 1
  2210                           ;main.c: 210: ip = IPV4_GetMyIP();
  2211  004F98  EC54  F033         	call	_IPV4_GetMyIP	;wreg free
  2212  004F9C  C017  F2E4         	movff	?_IPV4_GetMyIP,main@ip
  2213  004FA0  C018  F2E5         	movff	?_IPV4_GetMyIP+1,main@ip+1
  2214  004FA4  C019  F2E6         	movff	?_IPV4_GetMyIP+2,main@ip+2
  2215  004FA8  C01A  F2E7         	movff	?_IPV4_GetMyIP+3,main@ip+3
  2216                           
  2217                           ; BSR set to: 1
  2218                           ;main.c: 212: if((no_ip_display) || (old_ip != ip))
  2219  004FAC  0102               	movlb	2	; () banked
  2220  004FAE  51C3               	movf	main@no_ip_display& (0+255),w,b
  2221  004FB0  E10C               	bnz	l1595
  2222                           
  2223                           ; BSR set to: 2
  2224  004FB2  51E4               	movf	main@ip& (0+255),w,b
  2225  004FB4  19BB               	xorwf	main@old_ip& (0+255),w,b
  2226  004FB6  E109               	bnz	u16460
  2227  004FB8  51E5               	movf	(main@ip+1)& (0+255),w,b
  2228  004FBA  19BC               	xorwf	(main@old_ip+1)& (0+255),w,b
  2229  004FBC  E106               	bnz	u16460
  2230  004FBE  51E6               	movf	(main@ip+2)& (0+255),w,b
  2231  004FC0  19BD               	xorwf	(main@old_ip+2)& (0+255),w,b
  2232  004FC2  E103               	bnz	u16460
  2233  004FC4  51E7               	movf	(main@ip+3)& (0+255),w,b
  2234  004FC6  19BE               	xorwf	(main@old_ip+3)& (0+255),w,b
  2235  004FC8  E039               	bz	l10345
  2236  004FCA                     u16460:
  2237  004FCA                     l1595:
  2238                           
  2239                           ; BSR set to: 2
  2240                           ;main.c: 213: {
  2241                           ;main.c: 214: old_ip = ip;
  2242  004FCA  C2E4  F2BB         	movff	main@ip,main@old_ip
  2243  004FCE  C2E5  F2BC         	movff	main@ip+1,main@old_ip+1
  2244  004FD2  C2E6  F2BD         	movff	main@ip+2,main@old_ip+2
  2245  004FD6  C2E7  F2BE         	movff	main@ip+3,main@old_ip+3
  2246                           
  2247                           ; BSR set to: 2
  2248                           ;main.c: 215: memset(str,0,sizeof(str));
  2249  004FDA  0EC4               	movlw	low main@str
  2250  004FDC  6E17               	movwf	memset@p1,c
  2251  004FDE  0E02               	movlw	high main@str
  2252  004FE0  6E18               	movwf	memset@p1+1,c
  2253  004FE2  6A1A               	clrf	memset@c+1,c
  2254  004FE4  6A19               	clrf	memset@c,c
  2255  004FE6  6A1C               	clrf	memset@n+1,c
  2256  004FE8  0E20               	movlw	32
  2257  004FEA  6E1B               	movwf	memset@n,c
  2258  004FEC  ECE3  F031         	call	_memset	;wreg free
  2259                           
  2260                           ; BSR set to: 2
  2261                           ;main.c: 216: sprintf(str,"%d.%d.%d.%d",((char*)&ip)[3],((char*)&ip)[2],((char*)&ip)[1],
      +                          ((char*)&ip)[0]);
  2262  004FF0  0EC4               	movlw	low main@str
  2263  004FF2  6E29               	movwf	sprintf@wh,c
  2264  004FF4  0E02               	movlw	high main@str
  2265  004FF6  6E2A               	movwf	sprintf@wh+1,c
  2266  004FF8  0ED0               	movlw	low STR_9
  2267  004FFA  6E2B               	movwf	sprintf@f,c
  2268  004FFC  C2E7  F02C         	movff	main@ip+3,?_sprintf+3
  2269  005000  6A2D               	clrf	?_sprintf+4,c
  2270  005002  C2E6  F02E         	movff	main@ip+2,?_sprintf+5
  2271  005006  6A2F               	clrf	?_sprintf+6,c
  2272  005008  C2E5  F030         	movff	main@ip+1,?_sprintf+7
  2273  00500C  6A31               	clrf	?_sprintf+8,c
  2274  00500E  C2E4  F032         	movff	main@ip,?_sprintf+9
  2275  005012  6A33               	clrf	?_sprintf+10,c
  2276  005014  EC74  F031         	call	_sprintf	;wreg free
  2277                           
  2278                           ; BSR set to: 0
  2279                           ;main.c: 217: lcd_goto1(0);
  2280  005018  0E00               	movlw	0
  2281  00501A  EC5D  F033         	call	_lcd_goto1
  2282                           
  2283                           ;main.c: 218: lcd_puts(str);
  2284  00501E  0EC4               	movlw	low main@str
  2285  005020  6E19               	movwf	lcd_puts@s,c
  2286  005022  0E02               	movlw	high main@str
  2287  005024  6E1A               	movwf	lcd_puts@s+1,c
  2288  005026  ECD2  F032         	call	_lcd_puts	;wreg free
  2289                           
  2290                           ;main.c: 219: SYSLOG_Write(str);
  2291  00502A  0EC4               	movlw	low main@str
  2292  00502C  0100               	movlb	0	; () banked
  2293  00502E  6F6D               	movwf	SYSLOG_Write@message& (0+255),b
  2294  005030  0E02               	movlw	high main@str
  2295  005032  6F6E               	movwf	(SYSLOG_Write@message+1)& (0+255),b
  2296  005034  EC35  F032         	call	_SYSLOG_Write	;wreg free
  2297                           
  2298                           ; BSR set to: 0
  2299                           ;main.c: 220: no_ip_display = 0;
  2300  005038  0102               	movlb	2	; () banked
  2301  00503A  6BC3               	clrf	main@no_ip_display& (0+255),b
  2302  00503C                     l10345:
  2303                           
  2304                           ; BSR set to: 2
  2305                           ;main.c: 221: }
  2306                           ;main.c: 222: DEMO_TCP_Client();
  2307  00503C  ECA8  F01D         	call	_DEMO_TCP_Client	;wreg free
  2308  005040  D7A3               	goto	l10323
  2309  005042                     __end_of_main:
  2310                           	opt stack 0
  2311  005042                     PL621:
  2312                           	opt stack 12
  2313  005042  6F6D               	movwf	SYSLOG_Write@message& (0+255),b
  2314  005044  516D               	movf	SYSLOG_Write@message& (0+255),w,b
  2315  005046  A4D8               	btfss	status,2,c
  2316  005048  0E10               	movlw	high __smallconst
  2317  00504A  6F6E               	movwf	(SYSLOG_Write@message+1)& (0+255),b
  2318  00504C  0012               	return	
  2319  00504E                     __end_ofPL621:
  2320                           	opt stack 0
  2321                           tosu	equ	0xFFF
  2322                           tosh	equ	0xFFE
  2323                           tosl	equ	0xFFD
  2324                           pclath	equ	0xFFA
  2325                           tblptru	equ	0xFF8
  2326                           tblptrh	equ	0xFF7
  2327                           tblptrl	equ	0xFF6
  2328                           tablat	equ	0xFF5
  2329                           prodh	equ	0xFF4
  2330                           prodl	equ	0xFF3
  2331                           intcon	equ	0xFF2
  2332                           indf0	equ	0xFEF
  2333                           postinc0	equ	0xFEE
  2334                           fsr0h	equ	0xFEA
  2335                           fsr0l	equ	0xFE9
  2336                           wreg	equ	0xFE8
  2337                           postinc1	equ	0xFE6
  2338                           postdec1	equ	0xFE5
  2339                           plusw1	equ	0xFE3
  2340                           fsr1h	equ	0xFE2
  2341                           fsr1l	equ	0xFE1
  2342                           bsr	equ	0xFE0
  2343                           indf2	equ	0xFDF
  2344                           postinc2	equ	0xFDE
  2345                           postdec2	equ	0xFDD
  2346                           plusw2	equ	0xFDB
  2347                           fsr2h	equ	0xFDA
  2348                           fsr2l	equ	0xFD9
  2349                           status	equ	0xFD8
  2350                           
  2351 ;; *************** function _lcd_goto1 *****************
  2352 ;; Defined at:
  2353 ;;		line 96 in file "../board_support_package/picdem2_net/lcd.c"
  2354 ;; Parameters:    Size  Location     Type
  2355 ;;  pos             1    wreg     unsigned char 
  2356 ;; Auto vars:     Size  Location     Type
  2357 ;;  pos             1   23[COMRAM] unsigned char 
  2358 ;; Return value:  Size  Location     Type
  2359 ;;		None               void
  2360 ;; Registers used:
  2361 ;;		wreg, status,2, status,0, cstack
  2362 ;; Tracked objects:
  2363 ;;		On entry : F/0
  2364 ;;		On exit  : 0/0
  2365 ;;		Unchanged: 0/0
  2366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2368 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2370 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2371 ;;Total ram usage:        1 bytes
  2372 ;; Hardware stack levels used:    1
  2373 ;; Hardware stack levels required when called:    9
  2374 ;; This function calls:
  2375 ;;		_lcd_busy
  2376 ;;		_lcd_write_ctrl
  2377 ;; This function is called by:
  2378 ;;		_main
  2379 ;; This function uses a non-reentrant model
  2380 ;;
  2381                           
  2382                           	psect	text1
  2383  0066BA                     __ptext1:
  2384                           	opt stack 0
  2385  0066BA                     _lcd_goto1:
  2386                           	opt stack 21
  2387                           
  2388                           ;incstack = 0
  2389                           ;lcd_goto1@pos stored from wreg
  2390  0066BA  6E18               	movwf	lcd_goto1@pos,c
  2391                           
  2392                           ;lcd.c: 98: lcd_write_ctrl(0x80+pos);
  2393  0066BC  5018               	movf	lcd_goto1@pos,w,c
  2394  0066BE  0F80               	addlw	128
  2395  0066C0  ECB3  F032         	call	_lcd_write_ctrl
  2396                           
  2397                           ;lcd.c: 99: lcd_busy();
  2398  0066C4  EF8E  F033         	goto	_lcd_busy	;wreg free
  2399  0066C8                     __end_of_lcd_goto1:
  2400                           	opt stack 0
  2401                           tosu	equ	0xFFF
  2402                           tosh	equ	0xFFE
  2403                           tosl	equ	0xFFD
  2404                           pclath	equ	0xFFA
  2405                           tblptru	equ	0xFF8
  2406                           tblptrh	equ	0xFF7
  2407                           tblptrl	equ	0xFF6
  2408                           tablat	equ	0xFF5
  2409                           prodh	equ	0xFF4
  2410                           prodl	equ	0xFF3
  2411                           intcon	equ	0xFF2
  2412                           indf0	equ	0xFEF
  2413                           postinc0	equ	0xFEE
  2414                           fsr0h	equ	0xFEA
  2415                           fsr0l	equ	0xFE9
  2416                           wreg	equ	0xFE8
  2417                           postinc1	equ	0xFE6
  2418                           postdec1	equ	0xFE5
  2419                           plusw1	equ	0xFE3
  2420                           fsr1h	equ	0xFE2
  2421                           fsr1l	equ	0xFE1
  2422                           bsr	equ	0xFE0
  2423                           indf2	equ	0xFDF
  2424                           postinc2	equ	0xFDE
  2425                           postdec2	equ	0xFDD
  2426                           plusw2	equ	0xFDB
  2427                           fsr2h	equ	0xFDA
  2428                           fsr2l	equ	0xFD9
  2429                           status	equ	0xFD8
  2430                           
  2431 ;; *************** function _initHW *****************
  2432 ;; Defined at:
  2433 ;;		line 50 in file "../board_support_package/picdem2_net/hardware.c"
  2434 ;; Parameters:    Size  Location     Type
  2435 ;;		None
  2436 ;; Auto vars:     Size  Location     Type
  2437 ;;		None
  2438 ;; Return value:  Size  Location     Type
  2439 ;;		None               void
  2440 ;; Registers used:
  2441 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2442 ;; Tracked objects:
  2443 ;;		On entry : F/2
  2444 ;;		On exit  : 0/0
  2445 ;;		Unchanged: 0/0
  2446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2451 ;;Total ram usage:        0 bytes
  2452 ;; Hardware stack levels used:    1
  2453 ;; Hardware stack levels required when called:   10
  2454 ;; This function calls:
  2455 ;;		_ADC_Initialize
  2456 ;;		_LED_Init
  2457 ;;		_lcd_init
  2458 ;;		_rtcc_init
  2459 ;;		_spi_init
  2460 ;;		_uart_init
  2461 ;; This function is called by:
  2462 ;;		_main
  2463 ;; This function uses a non-reentrant model
  2464 ;;
  2465                           
  2466                           	psect	text2
  2467  006182                     __ptext2:
  2468                           	opt stack 0
  2469  006182                     _initHW:
  2470                           	opt stack 20
  2471                           
  2472                           ; BSR set to: 2
  2473                           ;hardware.c: 53: OSCCON = 0x02;
  2474                           
  2475                           ;incstack = 0
  2476  006182  0E02               	movlw	2
  2477  006184  6ED3               	movwf	4051,c	;volatile
  2478                           
  2479                           ;hardware.c: 56: OSCTUNE = 0x40;
  2480  006186  0E40               	movlw	64
  2481  006188  6E9B               	movwf	3995,c	;volatile
  2482                           
  2483                           ; BSR set to: 2
  2484                           ;hardware.c: 59: TRISJ = 0;
  2485  00618A  6A9A               	clrf	3994,c	;volatile
  2486                           
  2487                           ; BSR set to: 2
  2488                           ;hardware.c: 60: LATJ = 0;
  2489  00618C  6A91               	clrf	3985,c	;volatile
  2490                           
  2491                           ; BSR set to: 2
  2492                           ;hardware.c: 62: TRISDbits.TRISD3 = 0;
  2493  00618E  9695               	bcf	3989,3,c	;volatile
  2494                           
  2495                           ; BSR set to: 2
  2496                           ;hardware.c: 63: LATDbits.LATD3 = 1;
  2497  006190  868C               	bsf	3980,3,c	;volatile
  2498                           
  2499                           ; BSR set to: 2
  2500                           ;hardware.c: 65: TRISCbits.TRISC3 = 0;
  2501  006192  9694               	bcf	3988,3,c	;volatile
  2502                           
  2503                           ; BSR set to: 2
  2504                           ;hardware.c: 66: TRISCbits.TRISC4 = 1;
  2505  006194  8894               	bsf	3988,4,c	;volatile
  2506                           
  2507                           ; BSR set to: 2
  2508                           ;hardware.c: 67: TRISCbits.TRISC5 = 0;
  2509  006196  9A94               	bcf	3988,5,c	;volatile
  2510                           
  2511                           ;hardware.c: 69: TRISA = 0b11111100;
  2512  006198  0EFC               	movlw	252
  2513  00619A  6E92               	movwf	3986,c	;volatile
  2514                           
  2515                           ;hardware.c: 98: TRISB = 0x0F;
  2516  00619C  0E0F               	movlw	15
  2517  00619E  6E93               	movwf	3987,c	;volatile
  2518                           
  2519                           ; BSR set to: 2
  2520                           ;hardware.c: 104: rtcc_init();
  2521  0061A0  ECA5  F030         	call	_rtcc_init	;wreg free
  2522                           
  2523                           ; BSR set to: 2
  2524                           ;hardware.c: 107: spi_init();
  2525  0061A4  EC79  F033         	call	_spi_init	;wreg free
  2526                           
  2527                           ; BSR set to: 2
  2528                           ;hardware.c: 110: uart_init();
  2529  0061A8  EC3E  F033         	call	_uart_init	;wreg free
  2530                           
  2531                           ; BSR set to: 2
  2532                           ;hardware.c: 113: lcd_init();
  2533  0061AC  EC98  F02A         	call	_lcd_init	;wreg free
  2534                           
  2535                           ;hardware.c: 119: ADC_Initialize();
  2536  0061B0  EC49  F033         	call	_ADC_Initialize	;wreg free
  2537                           
  2538                           ;hardware.c: 121: LED_Init();
  2539  0061B4  EF93  F032         	goto	_LED_Init	;wreg free
  2540  0061B8                     __end_of_initHW:
  2541                           	opt stack 0
  2542                           tosu	equ	0xFFF
  2543                           tosh	equ	0xFFE
  2544                           tosl	equ	0xFFD
  2545                           pclath	equ	0xFFA
  2546                           tblptru	equ	0xFF8
  2547                           tblptrh	equ	0xFF7
  2548                           tblptrl	equ	0xFF6
  2549                           tablat	equ	0xFF5
  2550                           prodh	equ	0xFF4
  2551                           prodl	equ	0xFF3
  2552                           intcon	equ	0xFF2
  2553                           indf0	equ	0xFEF
  2554                           postinc0	equ	0xFEE
  2555                           fsr0h	equ	0xFEA
  2556                           fsr0l	equ	0xFE9
  2557                           wreg	equ	0xFE8
  2558                           postinc1	equ	0xFE6
  2559                           postdec1	equ	0xFE5
  2560                           plusw1	equ	0xFE3
  2561                           fsr1h	equ	0xFE2
  2562                           fsr1l	equ	0xFE1
  2563                           bsr	equ	0xFE0
  2564                           indf2	equ	0xFDF
  2565                           postinc2	equ	0xFDE
  2566                           postdec2	equ	0xFDD
  2567                           plusw2	equ	0xFDB
  2568                           fsr2h	equ	0xFDA
  2569                           fsr2l	equ	0xFD9
  2570                           status	equ	0xFD8
  2571                           
  2572 ;; *************** function _uart_init *****************
  2573 ;; Defined at:
  2574 ;;		line 55 in file "../board_support_package/picdem2_net/uart.c"
  2575 ;; Parameters:    Size  Location     Type
  2576 ;;		None
  2577 ;; Auto vars:     Size  Location     Type
  2578 ;;		None
  2579 ;; Return value:  Size  Location     Type
  2580 ;;		None               void
  2581 ;; Registers used:
  2582 ;;		wreg, status,2
  2583 ;; Tracked objects:
  2584 ;;		On entry : F/2
  2585 ;;		On exit  : F/2
  2586 ;;		Unchanged: F/0
  2587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2592 ;;Total ram usage:        0 bytes
  2593 ;; Hardware stack levels used:    1
  2594 ;; Hardware stack levels required when called:    8
  2595 ;; This function calls:
  2596 ;;		Nothing
  2597 ;; This function is called by:
  2598 ;;		_initHW
  2599 ;; This function uses a non-reentrant model
  2600 ;;
  2601                           
  2602                           	psect	text3
  2603  00667C                     __ptext3:
  2604                           	opt stack 0
  2605  00667C                     _uart_init:
  2606                           	opt stack 21
  2607                           
  2608                           ; BSR set to: 2
  2609                           ;uart.c: 58: TRISCbits.TRISC7 = 1;
  2610                           
  2611                           ;incstack = 0
  2612  00667C  8E94               	bsf	3988,7,c	;volatile
  2613                           
  2614                           ;uart.c: 59: TRISCbits.TRISC6 = 0;
  2615  00667E  9C94               	bcf	3988,6,c	;volatile
  2616                           
  2617                           ;uart.c: 62: BAUDCON1 = 0x00;
  2618  006680  6A7E               	clrf	3966,c	;volatile
  2619                           
  2620                           ; BSR set to: 2
  2621                           ;uart.c: 69: SPBRG1 = 89;
  2622  006682  0E59               	movlw	89
  2623  006684  6EAF               	movwf	4015,c	;volatile
  2624                           
  2625                           ; BSR set to: 2
  2626                           ;uart.c: 70: BAUDCON1bits.BRG16 = 1;
  2627  006686  867E               	bsf	3966,3,c	;volatile
  2628                           
  2629                           ;uart.c: 71: TXSTA1 = 0x26;
  2630  006688  0E26               	movlw	38
  2631  00668A  6EAC               	movwf	4012,c	;volatile
  2632                           
  2633                           ; BSR set to: 2
  2634                           ;uart.c: 73: CREN1 = 1;
  2635  00668C  88AB               	bsf	4011,4,c	;volatile
  2636                           
  2637                           ; BSR set to: 2
  2638                           ;uart.c: 74: SPEN1 = 1;
  2639  00668E  8EAB               	bsf	4011,7,c	;volatile
  2640                           
  2641                           ; BSR set to: 2
  2642  006690  0C26               	retlw	38	;funcret
  2643  006692                     __end_of_uart_init:
  2644                           	opt stack 0
  2645                           tosu	equ	0xFFF
  2646                           tosh	equ	0xFFE
  2647                           tosl	equ	0xFFD
  2648                           pclath	equ	0xFFA
  2649                           tblptru	equ	0xFF8
  2650                           tblptrh	equ	0xFF7
  2651                           tblptrl	equ	0xFF6
  2652                           tablat	equ	0xFF5
  2653                           prodh	equ	0xFF4
  2654                           prodl	equ	0xFF3
  2655                           intcon	equ	0xFF2
  2656                           indf0	equ	0xFEF
  2657                           postinc0	equ	0xFEE
  2658                           fsr0h	equ	0xFEA
  2659                           fsr0l	equ	0xFE9
  2660                           wreg	equ	0xFE8
  2661                           postinc1	equ	0xFE6
  2662                           postdec1	equ	0xFE5
  2663                           plusw1	equ	0xFE3
  2664                           fsr1h	equ	0xFE2
  2665                           fsr1l	equ	0xFE1
  2666                           bsr	equ	0xFE0
  2667                           indf2	equ	0xFDF
  2668                           postinc2	equ	0xFDE
  2669                           postdec2	equ	0xFDD
  2670                           plusw2	equ	0xFDB
  2671                           fsr2h	equ	0xFDA
  2672                           fsr2l	equ	0xFD9
  2673                           status	equ	0xFD8
  2674                           
  2675 ;; *************** function _spi_init *****************
  2676 ;; Defined at:
  2677 ;;		line 46 in file "../board_support_package/picdem2_net/mssp_spi_master.c"
  2678 ;; Parameters:    Size  Location     Type
  2679 ;;		None
  2680 ;; Auto vars:     Size  Location     Type
  2681 ;;		None
  2682 ;; Return value:  Size  Location     Type
  2683 ;;		None               void
  2684 ;; Registers used:
  2685 ;;		wreg, status,2
  2686 ;; Tracked objects:
  2687 ;;		On entry : F/2
  2688 ;;		On exit  : F/2
  2689 ;;		Unchanged: F/0
  2690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2695 ;;Total ram usage:        0 bytes
  2696 ;; Hardware stack levels used:    1
  2697 ;; Hardware stack levels required when called:    8
  2698 ;; This function calls:
  2699 ;;		Nothing
  2700 ;; This function is called by:
  2701 ;;		_initHW
  2702 ;; This function uses a non-reentrant model
  2703 ;;
  2704                           
  2705                           	psect	text4
  2706  0066F2                     __ptext4:
  2707                           	opt stack 0
  2708  0066F2                     _spi_init:
  2709                           	opt stack 21
  2710                           
  2711                           ; BSR set to: 2
  2712                           ;mssp_spi_master.c: 48: SSP1STATbits.CKE = 1;
  2713                           
  2714                           ; BSR set to: 2
  2715                           ;incstack = 0
  2716  0066F2  8CC7               	bsf	4039,6,c	;volatile
  2717                           
  2718                           ;mssp_spi_master.c: 49: SSP1STATbits.SMP = 0;
  2719  0066F4  9EC7               	bcf	4039,7,c	;volatile
  2720                           
  2721                           ; BSR set to: 2
  2722                           ;mssp_spi_master.c: 51: SSP1CON1 = 0x01;
  2723  0066F6  0E01               	movlw	1
  2724  0066F8  6EC6               	movwf	4038,c	;volatile
  2725                           
  2726                           ; BSR set to: 2
  2727                           ;mssp_spi_master.c: 52: SSP1CON1bits.SSPEN = 1;
  2728  0066FA  8AC6               	bsf	4038,5,c	;volatile
  2729                           
  2730                           ; BSR set to: 2
  2731  0066FC  0C01               	retlw	1	;funcret
  2732  0066FE                     __end_of_spi_init:
  2733                           	opt stack 0
  2734                           tosu	equ	0xFFF
  2735                           tosh	equ	0xFFE
  2736                           tosl	equ	0xFFD
  2737                           pclath	equ	0xFFA
  2738                           tblptru	equ	0xFF8
  2739                           tblptrh	equ	0xFF7
  2740                           tblptrl	equ	0xFF6
  2741                           tablat	equ	0xFF5
  2742                           prodh	equ	0xFF4
  2743                           prodl	equ	0xFF3
  2744                           intcon	equ	0xFF2
  2745                           indf0	equ	0xFEF
  2746                           postinc0	equ	0xFEE
  2747                           fsr0h	equ	0xFEA
  2748                           fsr0l	equ	0xFE9
  2749                           wreg	equ	0xFE8
  2750                           postinc1	equ	0xFE6
  2751                           postdec1	equ	0xFE5
  2752                           plusw1	equ	0xFE3
  2753                           fsr1h	equ	0xFE2
  2754                           fsr1l	equ	0xFE1
  2755                           bsr	equ	0xFE0
  2756                           indf2	equ	0xFDF
  2757                           postinc2	equ	0xFDE
  2758                           postdec2	equ	0xFDD
  2759                           plusw2	equ	0xFDB
  2760                           fsr2h	equ	0xFDA
  2761                           fsr2l	equ	0xFD9
  2762                           status	equ	0xFD8
  2763                           
  2764 ;; *************** function _rtcc_init *****************
  2765 ;; Defined at:
  2766 ;;		line 77 in file "../board_support_package/picdem2_net/rtcc.c"
  2767 ;; Parameters:    Size  Location     Type
  2768 ;;		None
  2769 ;; Auto vars:     Size  Location     Type
  2770 ;;		None
  2771 ;; Return value:  Size  Location     Type
  2772 ;;		None               void
  2773 ;; Registers used:
  2774 ;;		wreg, status,2
  2775 ;; Tracked objects:
  2776 ;;		On entry : F/2
  2777 ;;		On exit  : F/2
  2778 ;;		Unchanged: 0/0
  2779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2784 ;;Total ram usage:        0 bytes
  2785 ;; Hardware stack levels used:    1
  2786 ;; Hardware stack levels required when called:    8
  2787 ;; This function calls:
  2788 ;;		Nothing
  2789 ;; This function is called by:
  2790 ;;		_initHW
  2791 ;; This function uses a non-reentrant model
  2792 ;;
  2793                           
  2794                           	psect	text5
  2795  00614A                     __ptext5:
  2796                           	opt stack 0
  2797  00614A                     _rtcc_init:
  2798                           	opt stack 21
  2799                           
  2800                           ; BSR set to: 2
  2801                           ;rtcc.c: 79: TMR1CS = 1;
  2802                           
  2803                           ; BSR set to: 2
  2804                           ;incstack = 0
  2805  00614A  82CD               	bsf	4045,1,c	;volatile
  2806                           
  2807                           ;rtcc.c: 80: T1OSCEN = 1;
  2808  00614C  86CD               	bsf	4045,3,c	;volatile
  2809                           
  2810                           ;rtcc.c: 81: T1CKPS0 = 0;
  2811  00614E  98CD               	bcf	4045,4,c	;volatile
  2812                           
  2813                           ;rtcc.c: 82: T1CKPS1 = 0;
  2814  006150  9ACD               	bcf	4045,5,c	;volatile
  2815                           
  2816                           ;rtcc.c: 83: T1SYNC = 1;
  2817  006152  84CD               	bsf	4045,2,c	;volatile
  2818                           
  2819                           ;rtcc.c: 84: TMR1ON = 1;
  2820  006154  80CD               	bsf	4045,0,c	;volatile
  2821                           
  2822                           ; BSR set to: 2
  2823                           ;rtcc.c: 86: TMR1 = 32768UL;
  2824  006156  0E80               	movlw	128
  2825  006158  6ECF               	movwf	4047,c	;volatile
  2826  00615A  6ACE               	clrf	4046,c	;volatile
  2827                           
  2828                           ;rtcc.c: 87: deviceTime = 1293861600;
  2829  00615C  0EE0               	movlw	224
  2830  00615E  6FE8               	movwf	_deviceTime& (0+255),b	;volatile
  2831  006160  0EC2               	movlw	194
  2832  006162  6FE9               	movwf	(_deviceTime+1)& (0+255),b	;volatile
  2833  006164  0E1E               	movlw	30
  2834  006166  6FEA               	movwf	(_deviceTime+2)& (0+255),b	;volatile
  2835  006168  0E4D               	movlw	77
  2836  00616A  6FEB               	movwf	(_deviceTime+3)& (0+255),b	;volatile
  2837                           
  2838                           ;rtcc.c: 88: localTime = 1293861600 + 2208988800;
  2839  00616C  0E60               	movlw	96
  2840  00616E  6FEC               	movwf	_localTime& (0+255),b	;volatile
  2841  006170  0E41               	movlw	65
  2842  006172  6FED               	movwf	(_localTime+1)& (0+255),b	;volatile
  2843  006174  0EC9               	movlw	201
  2844  006176  6FEE               	movwf	(_localTime+2)& (0+255),b	;volatile
  2845  006178  0ED0               	movlw	208
  2846  00617A  6FEF               	movwf	(_localTime+3)& (0+255),b	;volatile
  2847                           
  2848                           ; BSR set to: 2
  2849                           ;rtcc.c: 90: TMR1IP = 1;
  2850  00617C  809F               	bsf	3999,0,c	;volatile
  2851                           
  2852                           ; BSR set to: 2
  2853                           ;rtcc.c: 91: TMR1IE = 1;
  2854  00617E  809D               	bsf	3997,0,c	;volatile
  2855                           
  2856                           ; BSR set to: 2
  2857  006180  0CD0               	retlw	208	;funcret
  2858  006182                     __end_of_rtcc_init:
  2859                           	opt stack 0
  2860                           tosu	equ	0xFFF
  2861                           tosh	equ	0xFFE
  2862                           tosl	equ	0xFFD
  2863                           pclath	equ	0xFFA
  2864                           tblptru	equ	0xFF8
  2865                           tblptrh	equ	0xFF7
  2866                           tblptrl	equ	0xFF6
  2867                           tablat	equ	0xFF5
  2868                           prodh	equ	0xFF4
  2869                           prodl	equ	0xFF3
  2870                           intcon	equ	0xFF2
  2871                           indf0	equ	0xFEF
  2872                           postinc0	equ	0xFEE
  2873                           fsr0h	equ	0xFEA
  2874                           fsr0l	equ	0xFE9
  2875                           wreg	equ	0xFE8
  2876                           postinc1	equ	0xFE6
  2877                           postdec1	equ	0xFE5
  2878                           plusw1	equ	0xFE3
  2879                           fsr1h	equ	0xFE2
  2880                           fsr1l	equ	0xFE1
  2881                           bsr	equ	0xFE0
  2882                           indf2	equ	0xFDF
  2883                           postinc2	equ	0xFDE
  2884                           postdec2	equ	0xFDD
  2885                           plusw2	equ	0xFDB
  2886                           fsr2h	equ	0xFDA
  2887                           fsr2l	equ	0xFD9
  2888                           status	equ	0xFD8
  2889                           
  2890 ;; *************** function _lcd_init *****************
  2891 ;; Defined at:
  2892 ;;		line 110 in file "../board_support_package/picdem2_net/lcd.c"
  2893 ;; Parameters:    Size  Location     Type
  2894 ;;		None
  2895 ;; Auto vars:     Size  Location     Type
  2896 ;;  y               2    0        volatile int 
  2897 ;;  x               2    0        volatile int 
  2898 ;; Return value:  Size  Location     Type
  2899 ;;		None               void
  2900 ;; Registers used:
  2901 ;;		wreg, cstack
  2902 ;; Tracked objects:
  2903 ;;		On entry : F/2
  2904 ;;		On exit  : 0/0
  2905 ;;		Unchanged: 0/0
  2906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2909 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2910 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2911 ;;Total ram usage:        1 bytes
  2912 ;; Hardware stack levels used:    1
  2913 ;; Hardware stack levels required when called:    9
  2914 ;; This function calls:
  2915 ;;		_lcd_busy
  2916 ;;		_lcd_init_pins
  2917 ;;		_lcd_write_ctrl
  2918 ;; This function is called by:
  2919 ;;		_initHW
  2920 ;; This function uses a non-reentrant model
  2921 ;;
  2922                           
  2923                           	psect	text6
  2924  005530                     __ptext6:
  2925                           	opt stack 0
  2926  005530                     _lcd_init:
  2927                           	opt stack 20
  2928                           
  2929                           ; BSR set to: 2
  2930                           ;lcd.c: 112: volatile int x,y;
  2931                           ;lcd.c: 114: lcd_init_pins();
  2932                           
  2933                           ; BSR set to: 2
  2934                           ;incstack = 0
  2935  005530  EC7F  F033         	call	_lcd_init_pins	;wreg free
  2936                           
  2937                           ; BSR set to: 2
  2938                           ;lcd.c: 116: _delay((unsigned long)((10)*(41666667UL/4000.0)));
  2939  005534  D846               	call	PL725	;call to abstracted procedure
  2940  005536                     u16477:
  2941  005536  2EE8               	decfsz	wreg,f,c
  2942  005538  D7FE               	goto	u16477
  2943  00553A  2E18               	decfsz	??_lcd_init& (0+255),f,c
  2944  00553C  D7FC               	goto	u16477
  2945  00553E  D000               	nop2	
  2946                           
  2947                           ;lcd.c: 117: _delay((unsigned long)((10)*(41666667UL/4000.0)));
  2948  005540  D840               	call	PL725	;call to abstracted procedure
  2949  005542                     u16487:
  2950  005542  2EE8               	decfsz	wreg,f,c
  2951  005544  D7FE               	goto	u16487
  2952  005546  2E18               	decfsz	??_lcd_init& (0+255),f,c
  2953  005548  D7FC               	goto	u16487
  2954  00554A  D000               	nop2	
  2955                           
  2956                           ;lcd.c: 118: _delay((unsigned long)((10)*(41666667UL/4000.0)));
  2957  00554C  D83A               	call	PL725	;call to abstracted procedure
  2958  00554E                     u16497:
  2959  00554E  2EE8               	decfsz	wreg,f,c
  2960  005550  D7FE               	goto	u16497
  2961  005552  2E18               	decfsz	??_lcd_init& (0+255),f,c
  2962  005554  D7FC               	goto	u16497
  2963  005556  D000               	nop2	
  2964                           
  2965                           ;lcd.c: 119: _delay((unsigned long)((10)*(41666667UL/4000.0)));
  2966  005558  D834               	call	PL725	;call to abstracted procedure
  2967  00555A                     u16507:
  2968  00555A  2EE8               	decfsz	wreg,f,c
  2969  00555C  D7FE               	goto	u16507
  2970  00555E  2E18               	decfsz	??_lcd_init& (0+255),f,c
  2971  005560  D7FC               	goto	u16507
  2972  005562  D000               	nop2	
  2973                           
  2974                           ;lcd.c: 122: lcd_write_ctrl(0x03);
  2975  005564  0E03               	movlw	3
  2976  005566  ECB3  F032         	call	_lcd_write_ctrl
  2977                           
  2978                           ;lcd.c: 123: _delay((unsigned long)((4)*(41666667UL/4000.0)));
  2979  00556A  D82E               	call	PL747	;call to abstracted procedure
  2980  00556C                     u16517:
  2981  00556C  2EE8               	decfsz	wreg,f,c
  2982  00556E  D7FE               	goto	u16517
  2983  005570  2E18               	decfsz	??_lcd_init& (0+255),f,c
  2984  005572  D7FC               	goto	u16517
  2985  005574  F000               	nop	
  2986                           
  2987                           ;lcd.c: 124: lcd_write_ctrl(0x03);
  2988  005576  0E03               	movlw	3
  2989  005578  ECB3  F032         	call	_lcd_write_ctrl
  2990                           
  2991                           ;lcd.c: 125: _delay((unsigned long)((4)*(41666667UL/4000.0)));
  2992  00557C  D825               	call	PL747	;call to abstracted procedure
  2993  00557E                     u16527:
  2994  00557E  2EE8               	decfsz	wreg,f,c
  2995  005580  D7FE               	goto	u16527
  2996  005582  2E18               	decfsz	??_lcd_init& (0+255),f,c
  2997  005584  D7FC               	goto	u16527
  2998  005586  F000               	nop	
  2999                           
  3000                           ;lcd.c: 126: lcd_write_ctrl(0x03);
  3001  005588  0E03               	movlw	3
  3002  00558A  ECB3  F032         	call	_lcd_write_ctrl
  3003                           
  3004                           ;lcd.c: 129: lcd_write_ctrl(0x38);
  3005  00558E  0E38               	movlw	56
  3006  005590  ECB3  F032         	call	_lcd_write_ctrl
  3007                           
  3008                           ;lcd.c: 131: lcd_busy();
  3009  005594  EC8E  F033         	call	_lcd_busy	;wreg free
  3010                           
  3011                           ;lcd.c: 132: lcd_write_ctrl(0x0C);
  3012  005598  0E0C               	movlw	12
  3013  00559A  ECB3  F032         	call	_lcd_write_ctrl
  3014                           
  3015                           ;lcd.c: 133: lcd_busy();
  3016  00559E  EC8E  F033         	call	_lcd_busy	;wreg free
  3017                           
  3018                           ;lcd.c: 134: lcd_write_ctrl(0x01);
  3019  0055A2  0E01               	movlw	1
  3020  0055A4  ECB3  F032         	call	_lcd_write_ctrl
  3021                           
  3022                           ;lcd.c: 135: lcd_busy();
  3023  0055A8  EC8E  F033         	call	_lcd_busy	;wreg free
  3024                           
  3025                           ;lcd.c: 138: lcd_write_ctrl(0x01);
  3026  0055AC  0E01               	movlw	1
  3027  0055AE  ECB3  F032         	call	_lcd_write_ctrl
  3028                           
  3029                           ;lcd.c: 139: _delay((unsigned long)((2)*(41666667UL/4000.0)));
  3030  0055B2  0E1C               	movlw	28
  3031  0055B4  6E18               	movwf	??_lcd_init& (0+255),c
  3032  0055B6  0E0D               	movlw	13
  3033  0055B8                     u16537:
  3034  0055B8  2EE8               	decfsz	wreg,f,c
  3035  0055BA  D7FE               	goto	u16537
  3036  0055BC  2E18               	decfsz	??_lcd_init& (0+255),f,c
  3037  0055BE  D7FC               	goto	u16537
  3038  0055C0  0012               	return		;funcret
  3039  0055C2                     __end_of_lcd_init:
  3040                           	opt stack 0
  3041  0055C2                     PL725:
  3042                           	opt stack 20
  3043  0055C2  0E88               	movlw	136
  3044  0055C4  6E18               	movwf	??_lcd_init& (0+255),c
  3045  0055C6  0C46               	retlw	70
  3046  0055C8                     __end_ofPL725:
  3047                           	opt stack 0
  3048  0055C8                     PL747:
  3049                           	opt stack 20
  3050  0055C8  0E37               	movlw	55
  3051  0055CA  6E18               	movwf	??_lcd_init& (0+255),c
  3052  0055CC  0C1B               	retlw	27
  3053  0055CE                     __end_ofPL747:
  3054                           	opt stack 0
  3055                           tosu	equ	0xFFF
  3056                           tosh	equ	0xFFE
  3057                           tosl	equ	0xFFD
  3058                           pclath	equ	0xFFA
  3059                           tblptru	equ	0xFF8
  3060                           tblptrh	equ	0xFF7
  3061                           tblptrl	equ	0xFF6
  3062                           tablat	equ	0xFF5
  3063                           prodh	equ	0xFF4
  3064                           prodl	equ	0xFF3
  3065                           intcon	equ	0xFF2
  3066                           indf0	equ	0xFEF
  3067                           postinc0	equ	0xFEE
  3068                           fsr0h	equ	0xFEA
  3069                           fsr0l	equ	0xFE9
  3070                           wreg	equ	0xFE8
  3071                           postinc1	equ	0xFE6
  3072                           postdec1	equ	0xFE5
  3073                           plusw1	equ	0xFE3
  3074                           fsr1h	equ	0xFE2
  3075                           fsr1l	equ	0xFE1
  3076                           bsr	equ	0xFE0
  3077                           indf2	equ	0xFDF
  3078                           postinc2	equ	0xFDE
  3079                           postdec2	equ	0xFDD
  3080                           plusw2	equ	0xFDB
  3081                           fsr2h	equ	0xFDA
  3082                           fsr2l	equ	0xFD9
  3083                           status	equ	0xFD8
  3084                           
  3085 ;; *************** function _lcd_init_pins *****************
  3086 ;; Defined at:
  3087 ;;		line 50 in file "../board_support_package/picdem2_net/lcd_hw.c"
  3088 ;; Parameters:    Size  Location     Type
  3089 ;;		None
  3090 ;; Auto vars:     Size  Location     Type
  3091 ;;		None
  3092 ;; Return value:  Size  Location     Type
  3093 ;;		None               void
  3094 ;; Registers used:
  3095 ;;		None
  3096 ;; Tracked objects:
  3097 ;;		On entry : F/2
  3098 ;;		On exit  : F/2
  3099 ;;		Unchanged: F/0
  3100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3105 ;;Total ram usage:        0 bytes
  3106 ;; Hardware stack levels used:    1
  3107 ;; Hardware stack levels required when called:    8
  3108 ;; This function calls:
  3109 ;;		Nothing
  3110 ;; This function is called by:
  3111 ;;		_lcd_init
  3112 ;; This function uses a non-reentrant model
  3113 ;;
  3114                           
  3115                           	psect	text7
  3116  0066FE                     __ptext7:
  3117                           	opt stack 0
  3118  0066FE                     _lcd_init_pins:
  3119                           	opt stack 20
  3120                           
  3121                           ; BSR set to: 2
  3122                           ;lcd_hw.c: 52: TRISE = 0;
  3123                           
  3124                           ;incstack = 0
  3125  0066FE  6A96               	clrf	3990,c	;volatile
  3126                           
  3127                           ;lcd_hw.c: 53: TRISH = 0x00;
  3128  006700  6A99               	clrf	3993,c	;volatile
  3129                           
  3130                           ;lcd_hw.c: 54: LATE = 0;
  3131  006702  6A8D               	clrf	3981,c	;volatile
  3132                           
  3133                           ;lcd_hw.c: 55: LATH = 0;
  3134  006704  6A90               	clrf	3984,c	;volatile
  3135                           
  3136                           ; BSR set to: 2
  3137  006706  0012               	return		;funcret
  3138  006708                     __end_of_lcd_init_pins:
  3139                           	opt stack 0
  3140                           tosu	equ	0xFFF
  3141                           tosh	equ	0xFFE
  3142                           tosl	equ	0xFFD
  3143                           pclath	equ	0xFFA
  3144                           tblptru	equ	0xFF8
  3145                           tblptrh	equ	0xFF7
  3146                           tblptrl	equ	0xFF6
  3147                           tablat	equ	0xFF5
  3148                           prodh	equ	0xFF4
  3149                           prodl	equ	0xFF3
  3150                           intcon	equ	0xFF2
  3151                           indf0	equ	0xFEF
  3152                           postinc0	equ	0xFEE
  3153                           fsr0h	equ	0xFEA
  3154                           fsr0l	equ	0xFE9
  3155                           wreg	equ	0xFE8
  3156                           postinc1	equ	0xFE6
  3157                           postdec1	equ	0xFE5
  3158                           plusw1	equ	0xFE3
  3159                           fsr1h	equ	0xFE2
  3160                           fsr1l	equ	0xFE1
  3161                           bsr	equ	0xFE0
  3162                           indf2	equ	0xFDF
  3163                           postinc2	equ	0xFDE
  3164                           postdec2	equ	0xFDD
  3165                           plusw2	equ	0xFDB
  3166                           fsr2h	equ	0xFDA
  3167                           fsr2l	equ	0xFD9
  3168                           status	equ	0xFD8
  3169                           
  3170 ;; *************** function _LED_Init *****************
  3171 ;; Defined at:
  3172 ;;		line 55 in file "../board_support_package/picdem2_net/led_driver.c"
  3173 ;; Parameters:    Size  Location     Type
  3174 ;;		None
  3175 ;; Auto vars:     Size  Location     Type
  3176 ;;  x               1   22[COMRAM] unsigned char 
  3177 ;; Return value:  Size  Location     Type
  3178 ;;		None               void
  3179 ;; Registers used:
  3180 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3181 ;; Tracked objects:
  3182 ;;		On entry : 0/2
  3183 ;;		On exit  : 0/0
  3184 ;;		Unchanged: 0/0
  3185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3187 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3189 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3190 ;;Total ram usage:        1 bytes
  3191 ;; Hardware stack levels used:    1
  3192 ;; Hardware stack levels required when called:    8
  3193 ;; This function calls:
  3194 ;;		Nothing
  3195 ;; This function is called by:
  3196 ;;		_initHW
  3197 ;; This function uses a non-reentrant model
  3198 ;;
  3199                           
  3200                           	psect	text8
  3201  006526                     __ptext8:
  3202                           	opt stack 0
  3203  006526                     _LED_Init:
  3204                           	opt stack 21
  3205                           
  3206                           ;led_driver.c: 57: uint8_t x = 0;
  3207                           
  3208                           ; BSR set to: 2
  3209                           ;incstack = 0
  3210  006526  6A17               	clrf	LED_Init@x,c
  3211                           
  3212                           ;led_driver.c: 58: for(x = 0; x < 8; x++)
  3213  006528  6A17               	clrf	LED_Init@x,c
  3214  00652A                     l9747:
  3215                           
  3216                           ;led_driver.c: 59: {
  3217                           ;led_driver.c: 60: led_values[x].value = 0;
  3218  00652A  5017               	movf	LED_Init@x,w,c
  3219  00652C  0D02               	mullw	2
  3220  00652E  0E00               	movlw	low _led_values
  3221  006530  24F3               	addwf	prodl,w,c
  3222  006532  6ED9               	movwf	fsr2l,c
  3223  006534  0E02               	movlw	high _led_values
  3224  006536  20F4               	addwfc	prodh,w,c
  3225  006538  6EDA               	movwf	fsr2h,c
  3226  00653A  6ADF               	clrf	indf2,c
  3227  00653C  2A17               	incf	LED_Init@x,f,c
  3228  00653E  0E07               	movlw	7
  3229  006540  6417               	cpfsgt	LED_Init@x,c
  3230  006542  D7F3               	goto	l9747
  3231  006544  0C07               	retlw	7
  3232  006546                     __end_of_LED_Init:
  3233                           	opt stack 0
  3234                           tosu	equ	0xFFF
  3235                           tosh	equ	0xFFE
  3236                           tosl	equ	0xFFD
  3237                           pclath	equ	0xFFA
  3238                           tblptru	equ	0xFF8
  3239                           tblptrh	equ	0xFF7
  3240                           tblptrl	equ	0xFF6
  3241                           tablat	equ	0xFF5
  3242                           prodh	equ	0xFF4
  3243                           prodl	equ	0xFF3
  3244                           intcon	equ	0xFF2
  3245                           indf0	equ	0xFEF
  3246                           postinc0	equ	0xFEE
  3247                           fsr0h	equ	0xFEA
  3248                           fsr0l	equ	0xFE9
  3249                           wreg	equ	0xFE8
  3250                           postinc1	equ	0xFE6
  3251                           postdec1	equ	0xFE5
  3252                           plusw1	equ	0xFE3
  3253                           fsr1h	equ	0xFE2
  3254                           fsr1l	equ	0xFE1
  3255                           bsr	equ	0xFE0
  3256                           indf2	equ	0xFDF
  3257                           postinc2	equ	0xFDE
  3258                           postdec2	equ	0xFDD
  3259                           plusw2	equ	0xFDB
  3260                           fsr2h	equ	0xFDA
  3261                           fsr2l	equ	0xFD9
  3262                           status	equ	0xFD8
  3263                           
  3264 ;; *************** function _ADC_Initialize *****************
  3265 ;; Defined at:
  3266 ;;		line 55 in file "../board_support_package/picdem2_net/adc.c"
  3267 ;; Parameters:    Size  Location     Type
  3268 ;;		None
  3269 ;; Auto vars:     Size  Location     Type
  3270 ;;		None
  3271 ;; Return value:  Size  Location     Type
  3272 ;;		None               void
  3273 ;; Registers used:
  3274 ;;		wreg, status,2
  3275 ;; Tracked objects:
  3276 ;;		On entry : 0/2
  3277 ;;		On exit  : 0/0
  3278 ;;		Unchanged: 0/0
  3279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3284 ;;Total ram usage:        0 bytes
  3285 ;; Hardware stack levels used:    1
  3286 ;; Hardware stack levels required when called:    8
  3287 ;; This function calls:
  3288 ;;		Nothing
  3289 ;; This function is called by:
  3290 ;;		_initHW
  3291 ;; This function uses a non-reentrant model
  3292 ;;
  3293                           
  3294                           	psect	text9
  3295  006692                     __ptext9:
  3296                           	opt stack 0
  3297  006692                     _ADC_Initialize:
  3298                           	opt stack 21
  3299                           
  3300                           ;adc.c: 59: TRISAbits.RA2 = 1;
  3301                           
  3302                           ;incstack = 0
  3303  006692  8492               	bsf	3986,2,c	;volatile
  3304                           
  3305                           ;adc.c: 60: TRISAbits.RA3 = 1;
  3306  006694  8692               	bsf	3986,3,c	;volatile
  3307                           
  3308                           ;adc.c: 63: ADCON0 = 0x0D;
  3309  006696  0E0D               	movlw	13
  3310  006698  6EC2               	movwf	4034,c	;volatile
  3311                           
  3312                           ;adc.c: 66: ADCON1 = 0x06;
  3313  00669A  0E06               	movlw	6
  3314  00669C  6EC1               	movwf	4033,c	;volatile
  3315                           
  3316                           ;adc.c: 69: ADCON2 = 0xBE;
  3317  00669E  0EBE               	movlw	190
  3318  0066A0  6EC0               	movwf	4032,c	;volatile
  3319                           
  3320                           ;adc.c: 72: ADRESL = 0x00;
  3321  0066A2  6AC3               	clrf	4035,c	;volatile
  3322                           
  3323                           ;adc.c: 75: ADRESH = 0x00;
  3324  0066A4  6AC4               	clrf	4036,c	;volatile
  3325  0066A6  0012               	return		;funcret
  3326  0066A8                     __end_of_ADC_Initialize:
  3327                           	opt stack 0
  3328                           tosu	equ	0xFFF
  3329                           tosh	equ	0xFFE
  3330                           tosl	equ	0xFFD
  3331                           pclath	equ	0xFFA
  3332                           tblptru	equ	0xFF8
  3333                           tblptrh	equ	0xFF7
  3334                           tblptrl	equ	0xFF6
  3335                           tablat	equ	0xFF5
  3336                           prodh	equ	0xFF4
  3337                           prodl	equ	0xFF3
  3338                           intcon	equ	0xFF2
  3339                           indf0	equ	0xFEF
  3340                           postinc0	equ	0xFEE
  3341                           fsr0h	equ	0xFEA
  3342                           fsr0l	equ	0xFE9
  3343                           wreg	equ	0xFE8
  3344                           postinc1	equ	0xFE6
  3345                           postdec1	equ	0xFE5
  3346                           plusw1	equ	0xFE3
  3347                           fsr1h	equ	0xFE2
  3348                           fsr1l	equ	0xFE1
  3349                           bsr	equ	0xFE0
  3350                           indf2	equ	0xFDF
  3351                           postinc2	equ	0xFDE
  3352                           postdec2	equ	0xFDD
  3353                           plusw2	equ	0xFDB
  3354                           fsr2h	equ	0xFDA
  3355                           fsr2l	equ	0xFD9
  3356                           status	equ	0xFD8
  3357                           
  3358 ;; *************** function _SYSLOG_Init *****************
  3359 ;; Defined at:
  3360 ;;		line 43 in file "../../TCPIP Library/source/syslog.c"
  3361 ;; Parameters:    Size  Location     Type
  3362 ;;		None
  3363 ;; Auto vars:     Size  Location     Type
  3364 ;;  t               4   13[BANK0 ] unsigned long 
  3365 ;; Return value:  Size  Location     Type
  3366 ;;		None               void
  3367 ;; Registers used:
  3368 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3369 ;; Tracked objects:
  3370 ;;		On entry : F/1
  3371 ;;		On exit  : F/0
  3372 ;;		Unchanged: 0/0
  3373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3375 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3377 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3378 ;;Total ram usage:        4 bytes
  3379 ;; Hardware stack levels used:    1
  3380 ;; Hardware stack levels required when called:   11
  3381 ;; This function calls:
  3382 ;;		_printf
  3383 ;;		_time
  3384 ;; This function is called by:
  3385 ;;		_main
  3386 ;; This function uses a non-reentrant model
  3387 ;;
  3388                           
  3389                           	psect	text10
  3390  00628C                     __ptext10:
  3391                           	opt stack 0
  3392  00628C                     _SYSLOG_Init:
  3393                           	opt stack 19
  3394                           
  3395                           ; BSR set to: 1
  3396                           ;syslog.c: 45: unsigned long t = time(0);
  3397                           
  3398                           ;incstack = 0
  3399  00628C  6A17               	clrf	time@t,c
  3400  00628E  6A18               	clrf	time@t+1,c
  3401  006290  EC52  F02E         	call	_time	;wreg free
  3402  006294  C017  F06D         	movff	?_time,SYSLOG_Init@t
  3403  006298  C018  F06E         	movff	?_time+1,SYSLOG_Init@t+1
  3404  00629C  C019  F06F         	movff	?_time+2,SYSLOG_Init@t+2
  3405  0062A0  C01A  F070         	movff	?_time+3,SYSLOG_Init@t+3
  3406                           
  3407                           ;syslog.c: 47: printf("\r\n\r\nStarting Syslog at %u\r\n",t);
  3408  0062A4  C06D  F029         	movff	SYSLOG_Init@t,?_printf
  3409  0062A8  C06E  F02A         	movff	SYSLOG_Init@t+1,?_printf+1
  3410  0062AC  C06F  F02B         	movff	SYSLOG_Init@t+2,?_printf+2
  3411  0062B0  C070  F02C         	movff	SYSLOG_Init@t+3,?_printf+3
  3412  0062B4  0E76               	movlw	STR_3& (0+255)
  3413  0062B6  EF81  F032         	goto	_printf
  3414  0062BA                     __end_of_SYSLOG_Init:
  3415                           	opt stack 0
  3416                           tosu	equ	0xFFF
  3417                           tosh	equ	0xFFE
  3418                           tosl	equ	0xFFD
  3419                           pclath	equ	0xFFA
  3420                           tblptru	equ	0xFF8
  3421                           tblptrh	equ	0xFF7
  3422                           tblptrl	equ	0xFF6
  3423                           tablat	equ	0xFF5
  3424                           prodh	equ	0xFF4
  3425                           prodl	equ	0xFF3
  3426                           intcon	equ	0xFF2
  3427                           indf0	equ	0xFEF
  3428                           postinc0	equ	0xFEE
  3429                           fsr0h	equ	0xFEA
  3430                           fsr0l	equ	0xFE9
  3431                           wreg	equ	0xFE8
  3432                           postinc1	equ	0xFE6
  3433                           postdec1	equ	0xFE5
  3434                           plusw1	equ	0xFE3
  3435                           fsr1h	equ	0xFE2
  3436                           fsr1l	equ	0xFE1
  3437                           bsr	equ	0xFE0
  3438                           indf2	equ	0xFDF
  3439                           postinc2	equ	0xFDE
  3440                           postdec2	equ	0xFDD
  3441                           plusw2	equ	0xFDB
  3442                           fsr2h	equ	0xFDA
  3443                           fsr2l	equ	0xFD9
  3444                           status	equ	0xFD8
  3445                           
  3446 ;; *************** function _Network_WaitForLink *****************
  3447 ;; Defined at:
  3448 ;;		line 76 in file "../../TCPIP Library/source/network.c"
  3449 ;; Parameters:    Size  Location     Type
  3450 ;;		None
  3451 ;; Auto vars:     Size  Location     Type
  3452 ;;		None
  3453 ;; Return value:  Size  Location     Type
  3454 ;;		None               void
  3455 ;; Registers used:
  3456 ;;		wreg, status,2, status,0, cstack
  3457 ;; Tracked objects:
  3458 ;;		On entry : F/0
  3459 ;;		On exit  : 0/0
  3460 ;;		Unchanged: 0/0
  3461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3466 ;;Total ram usage:        0 bytes
  3467 ;; Hardware stack levels used:    1
  3468 ;; Hardware stack levels required when called:   12
  3469 ;; This function calls:
  3470 ;;		_ETH_CheckLinkUp
  3471 ;; This function is called by:
  3472 ;;		_main
  3473 ;; This function uses a non-reentrant model
  3474 ;;
  3475                           
  3476                           	psect	text11
  3477  0066C8                     __ptext11:
  3478                           	opt stack 0
  3479  0066C8                     _Network_WaitForLink:
  3480                           	opt stack 18
  3481                           
  3482                           ; BSR set to: 0
  3483                           ;network.c: 78: while(!ETH_CheckLinkUp()) __nop();
  3484                           
  3485                           ; BSR set to: 0
  3486                           ;incstack = 0
  3487  0066C8  D001               	goto	l10191
  3488  0066CA                     l1009:
  3489  0066CA  F000               	nop	
  3490  0066CC                     l10191:
  3491  0066CC  EC2D  F031         	call	_ETH_CheckLinkUp	;wreg free
  3492  0066D0  0900               	iorlw	0
  3493  0066D2  E0FB               	bz	l1009
  3494  0066D4  0012               	return		;funcret
  3495  0066D6                     __end_of_Network_WaitForLink:
  3496                           	opt stack 0
  3497                           tosu	equ	0xFFF
  3498                           tosh	equ	0xFFE
  3499                           tosl	equ	0xFFD
  3500                           pclath	equ	0xFFA
  3501                           tblptru	equ	0xFF8
  3502                           tblptrh	equ	0xFF7
  3503                           tblptrl	equ	0xFF6
  3504                           tablat	equ	0xFF5
  3505                           prodh	equ	0xFF4
  3506                           prodl	equ	0xFF3
  3507                           intcon	equ	0xFF2
  3508                           indf0	equ	0xFEF
  3509                           postinc0	equ	0xFEE
  3510                           fsr0h	equ	0xFEA
  3511                           fsr0l	equ	0xFE9
  3512                           wreg	equ	0xFE8
  3513                           postinc1	equ	0xFE6
  3514                           postdec1	equ	0xFE5
  3515                           plusw1	equ	0xFE3
  3516                           fsr1h	equ	0xFE2
  3517                           fsr1l	equ	0xFE1
  3518                           bsr	equ	0xFE0
  3519                           indf2	equ	0xFDF
  3520                           postinc2	equ	0xFDE
  3521                           postdec2	equ	0xFDD
  3522                           plusw2	equ	0xFDB
  3523                           fsr2h	equ	0xFDA
  3524                           fsr2l	equ	0xFD9
  3525                           status	equ	0xFD8
  3526                           
  3527 ;; *************** function _Network_Manage *****************
  3528 ;; Defined at:
  3529 ;;		line 81 in file "../../TCPIP Library/source/network.c"
  3530 ;; Parameters:    Size  Location     Type
  3531 ;;		None
  3532 ;; Auto vars:     Size  Location     Type
  3533 ;;  now             4  186[BANK1 ] long 
  3534 ;; Return value:  Size  Location     Type
  3535 ;;		None               void
  3536 ;; Registers used:
  3537 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  3538 ;; Tracked objects:
  3539 ;;		On entry : 0/2
  3540 ;;		On exit  : F/1
  3541 ;;		Unchanged: 0/0
  3542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3544 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3545 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3546 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3547 ;;Total ram usage:        5 bytes
  3548 ;; Hardware stack levels used:    1
  3549 ;; Hardware stack levels required when called:   18
  3550 ;; This function calls:
  3551 ;;		_ARPV4_Update
  3552 ;;		_DHCP_Manage
  3553 ;;		_ETH_EventHandler
  3554 ;;		_Network_Read
  3555 ;;		_TCP_Update
  3556 ;;		_time
  3557 ;; This function is called by:
  3558 ;;		_main
  3559 ;; This function uses a non-reentrant model
  3560 ;;
  3561                           
  3562                           	psect	text12
  3563  005934                     __ptext12:
  3564                           	opt stack 0
  3565  005934                     _Network_Manage:
  3566                           	opt stack 12
  3567                           
  3568                           ;network.c: 83: time_t now;
  3569                           ;network.c: 84: static time_t nowPv = 0;
  3570                           ;network.c: 86: ETH_EventHandler();
  3571                           
  3572                           ;incstack = 0
  3573  005934  EC8C  F02F         	call	_ETH_EventHandler	;wreg free
  3574                           
  3575                           ;network.c: 87: Network_Read();
  3576  005938  EC48  F029         	call	_Network_Read	;wreg free
  3577                           
  3578                           ;network.c: 90: time(&now);
  3579  00593C  0EBA               	movlw	low Network_Manage@now
  3580  00593E  6E17               	movwf	time@t,c
  3581  005940  0E01               	movlw	high Network_Manage@now
  3582  005942  6E18               	movwf	time@t+1,c
  3583  005944  EC52  F02E         	call	_time	;wreg free
  3584                           
  3585                           ;network.c: 91: if(now >= arpTimer)
  3586  005948  0101               	movlb	1	; () banked
  3587  00594A  51E9               	movf	_arpTimer& (0+255),w,b
  3588  00594C  5DBA               	subwf	Network_Manage@now& (0+255),w,b
  3589  00594E  51EA               	movf	(_arpTimer+1)& (0+255),w,b
  3590  005950  59BB               	subwfb	(Network_Manage@now+1)& (0+255),w,b
  3591  005952  51EB               	movf	(_arpTimer+2)& (0+255),w,b
  3592  005954  59BC               	subwfb	(Network_Manage@now+2)& (0+255),w,b
  3593  005956  51BD               	movf	(Network_Manage@now+3)& (0+255),w,b
  3594  005958  0A80               	xorlw	128
  3595  00595A  6FB9               	movwf	??_Network_Manage& (0+255),b
  3596  00595C  51EC               	movf	(_arpTimer+3)& (0+255),w,b
  3597  00595E  0A80               	xorlw	128
  3598  005960  59B9               	subwfb	??_Network_Manage& (0+255),w,b
  3599  005962  E304               	bnc	l10205
  3600                           
  3601                           ; BSR set to: 1
  3602                           ;network.c: 92: {
  3603                           ;network.c: 93: ARPV4_Update();
  3604  005964  ECCE  F031         	call	_ARPV4_Update	;wreg free
  3605                           
  3606                           ; BSR set to: 1
  3607                           ;network.c: 94: arpTimer += 10;
  3608  005968  0E0A               	movlw	10
  3609  00596A  D820               	call	PL675	;call to abstracted procedure
  3610  00596C                     l10205:
  3611                           
  3612                           ; BSR set to: 1
  3613                           ;network.c: 95: }
  3614                           ;network.c: 96: if(now > nowPv)
  3615  00596C  51BA               	movf	Network_Manage@now& (0+255),w,b
  3616  00596E  0102               	movlb	2	; () banked
  3617  005970  5D1C               	subwf	Network_Manage@nowPv& (0+255),w,b
  3618  005972  0101               	movlb	1	; () banked
  3619  005974  51BB               	movf	(Network_Manage@now+1)& (0+255),w,b
  3620  005976  0102               	movlb	2	; () banked
  3621  005978  591D               	subwfb	(Network_Manage@nowPv+1)& (0+255),w,b
  3622  00597A  0101               	movlb	1	; () banked
  3623  00597C  51BC               	movf	(Network_Manage@now+2)& (0+255),w,b
  3624  00597E  0102               	movlb	2	; () banked
  3625  005980  591E               	subwfb	(Network_Manage@nowPv+2)& (0+255),w,b
  3626  005982  511F               	movf	(Network_Manage@nowPv+3)& (0+255),w,b
  3627  005984  0A80               	xorlw	128
  3628  005986  0101               	movlb	1	; () banked
  3629  005988  6FB9               	movwf	??_Network_Manage& (0+255),b
  3630  00598A  51BD               	movf	(Network_Manage@now+3)& (0+255),w,b
  3631  00598C  0A80               	xorlw	128
  3632  00598E  59B9               	subwfb	??_Network_Manage& (0+255),w,b
  3633  005990  E204               	bc	l10209
  3634                           
  3635                           ; BSR set to: 1
  3636                           ;network.c: 97: {
  3637                           ;network.c: 98: DHCP_Manage();
  3638  005992  EC55  F02C         	call	_DHCP_Manage	;wreg free
  3639                           
  3640                           ;network.c: 100: TCP_Update();
  3641  005996  EC12  F020         	call	_TCP_Update	;wreg free
  3642  00599A                     l10209:
  3643                           
  3644                           ; BSR set to: 1
  3645                           ;network.c: 101: }
  3646                           ;network.c: 102: nowPv = now;
  3647  00599A  C1BA  F21C         	movff	Network_Manage@now,Network_Manage@nowPv
  3648  00599E  C1BB  F21D         	movff	Network_Manage@now+1,Network_Manage@nowPv+1
  3649  0059A2  C1BC  F21E         	movff	Network_Manage@now+2,Network_Manage@nowPv+2
  3650  0059A6  C1BD  F21F         	movff	Network_Manage@now+3,Network_Manage@nowPv+3
  3651                           
  3652                           ; BSR set to: 1
  3653  0059AA  0012               	return		;funcret
  3654  0059AC                     __end_of_Network_Manage:
  3655                           	opt stack 0
  3656  0059AC                     PL675:
  3657                           	opt stack 17
  3658  0059AC  27E9               	addwf	_arpTimer& (0+255),f,b
  3659  0059AE  0E00               	movlw	0
  3660  0059B0  23EA               	addwfc	(_arpTimer+1)& (0+255),f,b
  3661  0059B2  23EB               	addwfc	(_arpTimer+2)& (0+255),f,b
  3662  0059B4  23EC               	addwfc	(_arpTimer+3)& (0+255),f,b
  3663  0059B6  0C00               	retlw	0
  3664  0059B8                     __end_ofPL675:
  3665                           	opt stack 0
  3666                           tosu	equ	0xFFF
  3667                           tosh	equ	0xFFE
  3668                           tosl	equ	0xFFD
  3669                           pclath	equ	0xFFA
  3670                           tblptru	equ	0xFF8
  3671                           tblptrh	equ	0xFF7
  3672                           tblptrl	equ	0xFF6
  3673                           tablat	equ	0xFF5
  3674                           prodh	equ	0xFF4
  3675                           prodl	equ	0xFF3
  3676                           intcon	equ	0xFF2
  3677                           indf0	equ	0xFEF
  3678                           postinc0	equ	0xFEE
  3679                           fsr0h	equ	0xFEA
  3680                           fsr0l	equ	0xFE9
  3681                           wreg	equ	0xFE8
  3682                           postinc1	equ	0xFE6
  3683                           postdec1	equ	0xFE5
  3684                           plusw1	equ	0xFE3
  3685                           fsr1h	equ	0xFE2
  3686                           fsr1l	equ	0xFE1
  3687                           bsr	equ	0xFE0
  3688                           indf2	equ	0xFDF
  3689                           postinc2	equ	0xFDE
  3690                           postdec2	equ	0xFDD
  3691                           plusw2	equ	0xFDB
  3692                           fsr2h	equ	0xFDA
  3693                           fsr2l	equ	0xFD9
  3694                           status	equ	0xFD8
  3695                           
  3696 ;; *************** function _TCP_Update *****************
  3697 ;; Defined at:
  3698 ;;		line 1417 in file "../../TCPIP Library/source/tcpv4.c"
  3699 ;; Parameters:    Size  Location     Type
  3700 ;;		None
  3701 ;; Auto vars:     Size  Location     Type
  3702 ;;  tcbPtr          2   27[BANK1 ] PTR struct .
  3703 ;;		 -> ?_sprintf(2), ?_printf(2), main@str(32), STR_8(13), 
  3704 ;;		 -> STR_7(17), DEMO_TCP_Client@txdataPort60(80), DEMO_TCP_Client@strTmp(17), DEMO_TCP_Client@rxdataPort60(50), 
  3705 ;;		 -> DEMO_TCP_Client@port60TCB(55), Network_Read@debug_str(80), STR_1(15), NULL(0), 
  3706 ;;  count           2   25[BANK1 ] int 
  3707 ;; Return value:  Size  Location     Type
  3708 ;;		None               void
  3709 ;; Registers used:
  3710 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3711 ;; Tracked objects:
  3712 ;;		On entry : E/1
  3713 ;;		On exit  : F/1
  3714 ;;		Unchanged: 0/0
  3715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3717 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3718 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3719 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3720 ;;Total ram usage:       12 bytes
  3721 ;; Hardware stack levels used:    1
  3722 ;; Hardware stack levels required when called:   15
  3723 ;; This function calls:
  3724 ;;		_TCP_FiniteStateMachine
  3725 ;; This function is called by:
  3726 ;;		_Network_Manage
  3727 ;; This function uses a non-reentrant model
  3728 ;;
  3729                           
  3730                           	psect	text13
  3731  004024                     __ptext13:
  3732                           	opt stack 0
  3733  004024                     _TCP_Update:
  3734                           	opt stack 14
  3735                           
  3736                           ;tcpv4.c: 1421: int count = 0;
  3737                           
  3738                           ; BSR set to: 1
  3739                           ;incstack = 0
  3740  004024  0101               	movlb	1	; () banked
  3741  004026  6B19               	clrf	TCP_Update@count& (0+255),b
  3742  004028  6B1A               	clrf	(TCP_Update@count+1)& (0+255),b
  3743                           
  3744                           ; BSR set to: 1
  3745                           ;tcpv4.c: 1425: nextSequenceNumber++;
  3746  00402A  0102               	movlb	2	; () banked
  3747  00402C  2B28               	incf	_nextSequenceNumber& (0+255),f,b
  3748  00402E  0E00               	movlw	0
  3749  004030  2329               	addwfc	(_nextSequenceNumber+1)& (0+255),f,b
  3750  004032  232A               	addwfc	(_nextSequenceNumber+2)& (0+255),f,b
  3751  004034  232B               	addwfc	(_nextSequenceNumber+3)& (0+255),f,b
  3752                           
  3753                           ; BSR set to: 2
  3754                           ;tcpv4.c: 1428: nextAvailablePort = nextAvailablePort + 1;
  3755  004036  0101               	movlb	1	; () banked
  3756  004038  4BCD               	infsnz	_nextAvailablePort& (0+255),f,b
  3757  00403A  2BCE               	incf	(_nextAvailablePort+1)& (0+255),f,b
  3758                           
  3759                           ; BSR set to: 1
  3760                           ;tcpv4.c: 1429: if (nextAvailablePort < (1024u))
  3761  00403C  0E04               	movlw	4
  3762  00403E  5DCE               	subwf	(_nextAvailablePort+1)& (0+255),w,b
  3763  004040  E203               	bc	l9971
  3764                           
  3765                           ; BSR set to: 1
  3766                           ;tcpv4.c: 1430: {
  3767                           ;tcpv4.c: 1431: nextAvailablePort = (1024u);
  3768  004042  0E04               	movlw	4
  3769  004044  6FCE               	movwf	(_nextAvailablePort+1)& (0+255),b
  3770  004046  6BCD               	clrf	_nextAvailablePort& (0+255),b
  3771  004048                     l9971:
  3772                           
  3773                           ; BSR set to: 1
  3774                           ;tcpv4.c: 1432: }
  3775                           ;tcpv4.c: 1435: tcbPtr = tcbList;
  3776  004048  C044  F11B         	movff	_tcbList,TCP_Update@tcbPtr
  3777  00404C  C045  F11C         	movff	_tcbList+1,TCP_Update@tcbPtr+1
  3778                           
  3779                           ;tcpv4.c: 1436: while((tcbPtr != (0)) && (count < tcbListSize))
  3780  004050  D0E8               	goto	l9991
  3781  004052                     l9973:
  3782                           
  3783                           ; BSR set to: 1
  3784                           ;tcpv4.c: 1437: {
  3785                           ;tcpv4.c: 1438: if (tcbPtr->timeout > 0)
  3786  004052  0E30               	movlw	48
  3787  004054  D8FA               	call	PL411	;call to abstracted procedure
  3788  004056  64F7               	cpfsgt	tblptrh,c
  3789  004058  D002               	bra	u15917
  3790  00405A  D904               	call	PL597	;call to abstracted procedure
  3791  00405C  D003               	bra	u15910
  3792  00405E                     u15917:
  3793  00405E  EC86  F011         	call	PL389	;call to abstracted procedure
  3794  004062  D907               	call	PL661	;call to abstracted procedure
  3795  004064                     u15910:
  3796  004064  0101               	movlb	1	; () banked
  3797  004066  5113               	movf	(??_TCP_Update+2)& (0+255),w,b
  3798  004068  1114               	iorwf	(??_TCP_Update+3)& (0+255),w,b
  3799  00406A  E101 D0C5          	bz	l9987
  3800                           
  3801                           ; BSR set to: 1
  3802                           ;tcpv4.c: 1439: {
  3803                           ;tcpv4.c: 1440: ;
  3804                           ;tcpv4.c: 1441: tcbPtr->timeout = tcbPtr->timeout - 1;
  3805  00406E  6911               	setf	??_TCP_Update& (0+255),b
  3806  004070  6912               	setf	(??_TCP_Update+1)& (0+255),b
  3807  004072  0E30               	movlw	48
  3808  004074  251B               	addwf	TCP_Update@tcbPtr& (0+255),w,b
  3809  004076  6F13               	movwf	(??_TCP_Update+2)& (0+255),b
  3810  004078  0E00               	movlw	0
  3811  00407A  211C               	addwfc	(TCP_Update@tcbPtr+1)& (0+255),w,b
  3812  00407C  6F14               	movwf	(??_TCP_Update+3)& (0+255),b
  3813  00407E  C113  FFF6         	movff	??_TCP_Update+2,tblptrl
  3814  004082  C114  FFF7         	movff	??_TCP_Update+3,tblptrh
  3815  004086  0E00               	movlw	low (__smallconst shr (0+16))
  3816  004088  6EF8               	movwf	tblptru,c
  3817  00408A  0E0F               	movlw	(high __ramtop+-1)
  3818  00408C  64F7               	cpfsgt	tblptrh,c
  3819  00408E  D007               	bra	u15937
  3820  004090  0009               	tblrd		*+
  3821  004092  CFF5 F115          	movff	tablat,??_TCP_Update+4
  3822  004096  0009               	tblrd		*+
  3823  004098  CFF5 F116          	movff	tablat,??_TCP_Update+5
  3824  00409C  D006               	bra	u15930
  3825  00409E                     u15937:
  3826  00409E  EC86  F011         	call	PL389	;call to abstracted procedure
  3827  0040A2  CFEE F115          	movff	postinc0,??_TCP_Update+4
  3828  0040A6  CFEE F116          	movff	postinc0,??_TCP_Update+5
  3829  0040AA                     u15930:
  3830  0040AA  0101               	movlb	1	; () banked
  3831  0040AC  5111               	movf	??_TCP_Update& (0+255),w,b
  3832  0040AE  2715               	addwf	(??_TCP_Update+4)& (0+255),f,b
  3833  0040B0  5112               	movf	(??_TCP_Update+1)& (0+255),w,b
  3834  0040B2  2316               	addwfc	(??_TCP_Update+5)& (0+255),f,b
  3835  0040B4  0E30               	movlw	48
  3836  0040B6  251B               	addwf	TCP_Update@tcbPtr& (0+255),w,b
  3837  0040B8  6F17               	movwf	(??_TCP_Update+6)& (0+255),b
  3838  0040BA  0E00               	movlw	0
  3839  0040BC  211C               	addwfc	(TCP_Update@tcbPtr+1)& (0+255),w,b
  3840  0040BE  6F18               	movwf	(??_TCP_Update+7)& (0+255),b
  3841  0040C0  C117  FFF6         	movff	??_TCP_Update+6,tblptrl
  3842  0040C4  C118  FFF7         	movff	??_TCP_Update+7,tblptrh
  3843  0040C8  0E00               	movlw	low (__smallconst shr (0+16))
  3844  0040CA  6EF8               	movwf	tblptru,c
  3845  0040CC  0E0F               	movlw	(high __ramtop+-1)
  3846  0040CE  64F7               	cpfsgt	tblptrh,c
  3847  0040D0  D007               	bra	u15947
  3848  0040D2  C115  FFF5         	movff	??_TCP_Update+4,tablat
  3849  0040D6  000D               	tblwt		*+
  3850  0040D8  C116  FFF5         	movff	??_TCP_Update+5,tablat
  3851  0040DC  000C               	tblwt		*
  3852  0040DE  D006               	bra	u15940
  3853  0040E0                     u15947:
  3854  0040E0  EC86  F011         	call	PL389	;call to abstracted procedure
  3855  0040E4  C115  FFEE         	movff	??_TCP_Update+4,postinc0
  3856  0040E8  C116  FFEF         	movff	??_TCP_Update+5,indf0
  3857  0040EC                     u15940:
  3858                           
  3859                           ;tcpv4.c: 1443: if (tcbPtr->timeout == 0)
  3860  0040EC  0E30               	movlw	48
  3861  0040EE  0101               	movlb	1	; () banked
  3862  0040F0  D8AC               	call	PL411	;call to abstracted procedure
  3863  0040F2  64F7               	cpfsgt	tblptrh,c
  3864  0040F4  D002               	bra	u15957
  3865  0040F6  D8B6               	call	PL597	;call to abstracted procedure
  3866  0040F8  D003               	bra	u15950
  3867  0040FA                     u15957:
  3868  0040FA  EC86  F011         	call	PL389	;call to abstracted procedure
  3869  0040FE  D8B9               	call	PL661	;call to abstracted procedure
  3870  004100                     u15950:
  3871  004100  0101               	movlb	1	; () banked
  3872  004102  5113               	movf	(??_TCP_Update+2)& (0+255),w,b
  3873  004104  1114               	iorwf	(??_TCP_Update+3)& (0+255),w,b
  3874  004106  E178               	bnz	l9987
  3875                           
  3876                           ; BSR set to: 1
  3877                           ;tcpv4.c: 1444: {
  3878                           ;tcpv4.c: 1445: if (tcbPtr->timeoutsCount > 0)
  3879  004108  0E34               	movlw	52
  3880  00410A  D89F               	call	PL411	;call to abstracted procedure
  3881  00410C  64F7               	cpfsgt	tblptrh,c
  3882  00410E  D003               	bra	u15977
  3883  004110  0008               	tblrd		*
  3884  004112  50F5               	movf	tablat,w,c
  3885  004114  D003               	bra	u15970
  3886  004116                     u15977:
  3887  004116  EC86  F011         	call	PL389	;call to abstracted procedure
  3888  00411A  50EF               	movf	indf0,w,c
  3889  00411C                     u15970:
  3890  00411C  0900               	iorlw	0
  3891  00411E  E06C               	bz	l9987
  3892                           
  3893                           ;tcpv4.c: 1446: {
  3894                           ;tcpv4.c: 1448: if (tcbPtr->connectionEvent == NOP)
  3895  004120  0E2B               	movlw	43
  3896  004122  0101               	movlb	1	; () banked
  3897  004124  D892               	call	PL411	;call to abstracted procedure
  3898  004126  64F7               	cpfsgt	tblptrh,c
  3899  004128  D003               	bra	u15997
  3900  00412A  0008               	tblrd		*
  3901  00412C  50F5               	movf	tablat,w,c
  3902  00412E  D003               	bra	u15990
  3903  004130                     u15997:
  3904  004130  EC86  F011         	call	PL389	;call to abstracted procedure
  3905  004134  50EF               	movf	indf0,w,c
  3906  004136                     u15990:
  3907  004136  0A0D               	xorlw	13
  3908  004138  E15F               	bnz	l9987
  3909                           
  3910                           ;tcpv4.c: 1449: {
  3911                           ;tcpv4.c: 1450: tcbPtr->timeout = tcbPtr->timeoutReloadValue;
  3912  00413A  0E32               	movlw	50
  3913  00413C  0101               	movlb	1	; () banked
  3914  00413E  D885               	call	PL411	;call to abstracted procedure
  3915  004140  64F7               	cpfsgt	tblptrh,c
  3916  004142  D002               	bra	u16017
  3917  004144  D88F               	call	PL597	;call to abstracted procedure
  3918  004146  D003               	bra	u16010
  3919  004148                     u16017:
  3920  004148  EC86  F011         	call	PL389	;call to abstracted procedure
  3921  00414C  D892               	call	PL661	;call to abstracted procedure
  3922  00414E                     u16010:
  3923  00414E  0E30               	movlw	48
  3924  004150  0101               	movlb	1	; () banked
  3925  004152  251B               	addwf	TCP_Update@tcbPtr& (0+255),w,b
  3926  004154  6F15               	movwf	(??_TCP_Update+4)& (0+255),b
  3927  004156  0E00               	movlw	0
  3928  004158  211C               	addwfc	(TCP_Update@tcbPtr+1)& (0+255),w,b
  3929  00415A  6F16               	movwf	(??_TCP_Update+5)& (0+255),b
  3930  00415C  C115  FFF6         	movff	??_TCP_Update+4,tblptrl
  3931  004160  C116  FFF7         	movff	??_TCP_Update+5,tblptrh
  3932  004164  0E00               	movlw	low (__smallconst shr (0+16))
  3933  004166  6EF8               	movwf	tblptru,c
  3934  004168  0E0F               	movlw	(high __ramtop+-1)
  3935  00416A  64F7               	cpfsgt	tblptrh,c
  3936  00416C  D007               	bra	u16027
  3937  00416E  C113  FFF5         	movff	??_TCP_Update+2,tablat
  3938  004172  000D               	tblwt		*+
  3939  004174  C114  FFF5         	movff	??_TCP_Update+3,tablat
  3940  004178  000C               	tblwt		*
  3941  00417A  D006               	bra	u16020
  3942  00417C                     u16027:
  3943  00417C  EC86  F011         	call	PL389	;call to abstracted procedure
  3944  004180  C113  FFEE         	movff	??_TCP_Update+2,postinc0
  3945  004184  C114  FFEF         	movff	??_TCP_Update+3,indf0
  3946  004188                     u16020:
  3947                           
  3948                           ;tcpv4.c: 1451: tcbPtr->timeoutsCount = tcbPtr->timeoutsCount - 1;
  3949  004188  0E34               	movlw	52
  3950  00418A  0101               	movlb	1	; () banked
  3951  00418C  D85E               	call	PL411	;call to abstracted procedure
  3952  00418E  64F7               	cpfsgt	tblptrh,c
  3953  004190  D003               	bra	u16037
  3954  004192  0008               	tblrd		*
  3955  004194  50F5               	movf	tablat,w,c
  3956  004196  D003               	bra	u16030
  3957  004198                     u16037:
  3958  004198  EC86  F011         	call	PL389	;call to abstracted procedure
  3959  00419C  50EF               	movf	indf0,w,c
  3960  00419E                     u16030:
  3961  00419E  0101               	movlb	1	; () banked
  3962  0041A0  6F13               	movwf	(??_TCP_Update+2)& (0+255),b
  3963  0041A2  0713               	decf	(??_TCP_Update+2)& (0+255),f,b
  3964  0041A4  0E34               	movlw	52
  3965  0041A6  251B               	addwf	TCP_Update@tcbPtr& (0+255),w,b
  3966  0041A8  6F14               	movwf	(??_TCP_Update+3)& (0+255),b
  3967  0041AA  0E00               	movlw	0
  3968  0041AC  211C               	addwfc	(TCP_Update@tcbPtr+1)& (0+255),w,b
  3969  0041AE  6F15               	movwf	(??_TCP_Update+4)& (0+255),b
  3970  0041B0  C114  FFF6         	movff	??_TCP_Update+3,tblptrl
  3971  0041B4  C115  FFF7         	movff	??_TCP_Update+4,tblptrh
  3972  0041B8  0E00               	movlw	low (__smallconst shr (0+16))
  3973  0041BA  6EF8               	movwf	tblptru,c
  3974  0041BC  0E0F               	movlw	(high __ramtop+-1)
  3975  0041BE  64F7               	cpfsgt	tblptrh,c
  3976  0041C0  D004               	bra	u16047
  3977  0041C2  C113  FFF5         	movff	??_TCP_Update+2,tablat
  3978  0041C6  000C               	tblwt		*
  3979  0041C8  D004               	bra	u16040
  3980  0041CA                     u16047:
  3981  0041CA  EC86  F011         	call	PL389	;call to abstracted procedure
  3982  0041CE  C113  FFEF         	movff	??_TCP_Update+2,indf0
  3983  0041D2                     u16040:
  3984                           
  3985                           ;tcpv4.c: 1452: tcbPtr->connectionEvent = TIMEOUT;
  3986  0041D2  0E2B               	movlw	43
  3987  0041D4  0101               	movlb	1	; () banked
  3988  0041D6  D839               	call	PL411	;call to abstracted procedure
  3989  0041D8  64F7               	cpfsgt	tblptrh,c
  3990  0041DA  D004               	bra	u16057
  3991  0041DC  0E0C               	movlw	12
  3992  0041DE  6EF5               	movwf	tablat,c
  3993  0041E0  000C               	tblwt		*
  3994  0041E2  D004               	bra	u16050
  3995  0041E4                     u16057:
  3996  0041E4  EC86  F011         	call	PL389	;call to abstracted procedure
  3997  0041E8  0E0C               	movlw	12
  3998  0041EA  6EEF               	movwf	indf0,c
  3999  0041EC                     u16050:
  4000                           
  4001                           ;tcpv4.c: 1453: currentTCB = tcbPtr;
  4002  0041EC  C11B  F040         	movff	TCP_Update@tcbPtr,_currentTCB
  4003  0041F0  C11C  F041         	movff	TCP_Update@tcbPtr+1,_currentTCB+1
  4004                           
  4005                           ;tcpv4.c: 1454: TCP_FiniteStateMachine();
  4006  0041F4  EC7D  F008         	call	_TCP_FiniteStateMachine	;wreg free
  4007  0041F8                     l9987:
  4008                           
  4009                           ;tcpv4.c: 1455: }
  4010                           ;tcpv4.c: 1456: }
  4011                           ;tcpv4.c: 1457: }
  4012                           ;tcpv4.c: 1458: }
  4013                           ;tcpv4.c: 1459: tcbPtr = tcbPtr->nextTCB;
  4014  0041F8  0E2C               	movlw	44
  4015  0041FA  0101               	movlb	1	; () banked
  4016  0041FC  D826               	call	PL411	;call to abstracted procedure
  4017  0041FE  64F7               	cpfsgt	tblptrh,c
  4018  004200  D007               	bra	u16067
  4019  004202  0009               	tblrd		*+
  4020  004204  CFF5 F11B          	movff	tablat,TCP_Update@tcbPtr
  4021  004208  0009               	tblrd		*+
  4022  00420A  CFF5 F11C          	movff	tablat,TCP_Update@tcbPtr+1
  4023  00420E  D006               	bra	u16060
  4024  004210                     u16067:
  4025  004210  EC86  F011         	call	PL389	;call to abstracted procedure
  4026  004214  CFEE F11B          	movff	postinc0,TCP_Update@tcbPtr
  4027  004218  CFEE F11C          	movff	postinc0,TCP_Update@tcbPtr+1
  4028  00421C                     u16060:
  4029                           
  4030                           ;tcpv4.c: 1460: count ++;
  4031  00421C  0101               	movlb	1	; () banked
  4032  00421E  4B19               	infsnz	TCP_Update@count& (0+255),f,b
  4033  004220  2B1A               	incf	(TCP_Update@count+1)& (0+255),f,b
  4034  004222                     l9991:
  4035                           
  4036                           ; BSR set to: 1
  4037  004222  511B               	movf	TCP_Update@tcbPtr& (0+255),w,b
  4038  004224  111C               	iorwf	(TCP_Update@tcbPtr+1)& (0+255),w,b
  4039  004226  B4D8               	btfsc	status,2,c
  4040  004228  0012               	return	
  4041                           
  4042                           ; BSR set to: 1
  4043  00422A  C048  F111         	movff	_tcbListSize,??_TCP_Update
  4044  00422E  6B12               	clrf	(??_TCP_Update+1)& (0+255),b
  4045  004230  BF11               	btfsc	??_TCP_Update& (0+255),7,b
  4046  004232  0712               	decf	(??_TCP_Update+1)& (0+255),f,b
  4047  004234  5111               	movf	??_TCP_Update& (0+255),w,b
  4048  004236  5D19               	subwf	TCP_Update@count& (0+255),w,b
  4049  004238  511A               	movf	(TCP_Update@count+1)& (0+255),w,b
  4050  00423A  0A80               	xorlw	128
  4051  00423C  6F13               	movwf	(??_TCP_Update+2)& (0+255),b
  4052  00423E  5112               	movf	(??_TCP_Update+1)& (0+255),w,b
  4053  004240  0A80               	xorlw	128
  4054  004242  5913               	subwfb	(??_TCP_Update+2)& (0+255),w,b
  4055  004244  E201 D705          	bnc	l9973
  4056                           
  4057                           ; BSR set to: 1
  4058  004248  0012               	return		;funcret
  4059  00424A                     __end_of_TCP_Update:
  4060                           	opt stack 0
  4061  00424A                     PL411:
  4062                           	opt stack 14
  4063  00424A  251B               	addwf	TCP_Update@tcbPtr& (0+255),w,b
  4064  00424C  6F11               	movwf	??_TCP_Update& (0+255),b
  4065  00424E  0E00               	movlw	0
  4066  004250  211C               	addwfc	(TCP_Update@tcbPtr+1)& (0+255),w,b
  4067  004252  6F12               	movwf	(??_TCP_Update+1)& (0+255),b
  4068  004254  C111  FFF6         	movff	??_TCP_Update,tblptrl
  4069  004258  C112  FFF7         	movff	??_TCP_Update+1,tblptrh
  4070  00425C  0E00               	movlw	low (__smallconst shr (0+16))
  4071  00425E  6EF8               	movwf	tblptru,c
  4072  004260  0E0F               	movlw	(high __ramtop+-1)
  4073  004262  0012               	return	
  4074  004264                     __end_ofPL411:
  4075                           	opt stack 0
  4076  004264                     PL597:
  4077                           	opt stack 14
  4078  004264  0009               	tblrd		*+
  4079  004266  CFF5 F113          	movff	tablat,??_TCP_Update+2
  4080  00426A  0009               	tblrd		*+
  4081  00426C  CFF5 F114          	movff	tablat,??_TCP_Update+3
  4082  004270  0012               	return	
  4083  004272                     __end_ofPL597:
  4084                           	opt stack 0
  4085  004272                     PL661:
  4086                           	opt stack 14
  4087  004272  CFEE F113          	movff	postinc0,??_TCP_Update+2
  4088  004276  CFEE F114          	movff	postinc0,??_TCP_Update+3
  4089  00427A  0012               	return	
  4090  00427C                     __end_ofPL661:
  4091                           	opt stack 0
  4092                           tosu	equ	0xFFF
  4093                           tosh	equ	0xFFE
  4094                           tosl	equ	0xFFD
  4095                           pclath	equ	0xFFA
  4096                           tblptru	equ	0xFF8
  4097                           tblptrh	equ	0xFF7
  4098                           tblptrl	equ	0xFF6
  4099                           tablat	equ	0xFF5
  4100                           prodh	equ	0xFF4
  4101                           prodl	equ	0xFF3
  4102                           intcon	equ	0xFF2
  4103                           indf0	equ	0xFEF
  4104                           postinc0	equ	0xFEE
  4105                           fsr0h	equ	0xFEA
  4106                           fsr0l	equ	0xFE9
  4107                           wreg	equ	0xFE8
  4108                           postinc1	equ	0xFE6
  4109                           postdec1	equ	0xFE5
  4110                           plusw1	equ	0xFE3
  4111                           fsr1h	equ	0xFE2
  4112                           fsr1l	equ	0xFE1
  4113                           bsr	equ	0xFE0
  4114                           indf2	equ	0xFDF
  4115                           postinc2	equ	0xFDE
  4116                           postdec2	equ	0xFDD
  4117                           plusw2	equ	0xFDB
  4118                           fsr2h	equ	0xFDA
  4119                           fsr2l	equ	0xFD9
  4120                           status	equ	0xFD8
  4121                           
  4122 ;; *************** function _Network_Read *****************
  4123 ;; Defined at:
  4124 ;;		line 105 in file "../../TCPIP Library/source/network.c"
  4125 ;; Parameters:    Size  Location     Type
  4126 ;;		None
  4127 ;; Auto vars:     Size  Location     Type
  4128 ;;  debug_str      80   91[BANK1 ] unsigned char [80]
  4129 ;;  header         14  171[BANK1 ] struct .
  4130 ;; Return value:  Size  Location     Type
  4131 ;;		None               void
  4132 ;; Registers used:
  4133 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  4134 ;; Tracked objects:
  4135 ;;		On entry : 0/2
  4136 ;;		On exit  : 0/0
  4137 ;;		Unchanged: 0/0
  4138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4140 ;;      Locals:         0       0      94       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4141 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4142 ;;      Totals:         0       0      98       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4143 ;;Total ram usage:       98 bytes
  4144 ;; Hardware stack levels used:    1
  4145 ;; Hardware stack levels required when called:   17
  4146 ;; This function calls:
  4147 ;;		_ARPV4_Packet
  4148 ;;		_ETH_Flush
  4149 ;;		_ETH_NextPacketUpdate
  4150 ;;		_ETH_ReadBlock
  4151 ;;		_IPV4_Packet
  4152 ;;		_sprintf
  4153 ;; This function is called by:
  4154 ;;		_Network_Manage
  4155 ;; This function uses a non-reentrant model
  4156 ;;
  4157                           
  4158                           	psect	text14
  4159  005290                     __ptext14:
  4160                           	opt stack 0
  4161  005290                     _Network_Read:
  4162                           	opt stack 12
  4163                           
  4164                           ;network.c: 107: ethernetFrame_t header;
  4165                           ;network.c: 108: char debug_str[80];
  4166                           ;network.c: 110: if(ethData.pktReady)
  4167                           
  4168                           ; BSR set to: 1
  4169                           ;incstack = 0
  4170  005290  0101               	movlb	1	; () banked
  4171  005292  A3BE               	btfss	_ethData& (0+255),1,b	;volatile
  4172  005294  0012               	return	
  4173                           
  4174                           ; BSR set to: 1
  4175                           ;network.c: 111: {
  4176                           ;network.c: 112: ETH_NextPacketUpdate();
  4177  005296  EC27  F02E         	call	_ETH_NextPacketUpdate	;wreg free
  4178                           
  4179                           ; BSR set to: 1
  4180                           ;network.c: 113: ETH_ReadBlock((char *)&header, sizeof(header));
  4181  00529A  0EAB               	movlw	low Network_Read@header
  4182  00529C  6E17               	movwf	ETH_ReadBlock@buffer,c
  4183  00529E  0E01               	movlw	high Network_Read@header
  4184  0052A0  6E18               	movwf	ETH_ReadBlock@buffer+1,c
  4185  0052A2  6A1A               	clrf	ETH_ReadBlock@length+1,c
  4186  0052A4  0E0E               	movlw	14
  4187  0052A6  6E19               	movwf	ETH_ReadBlock@length,c
  4188  0052A8  ECC9  F02D         	call	_ETH_ReadBlock	;wreg free
  4189                           
  4190                           ; BSR set to: 1
  4191                           ;network.c: 114: header.id.type = ((((uint16_t)header.id.type & (uint16_t)0xFF00) >> 8) 
      +                          | (((uint16_t)header.id.type & (uint16_t)0x00FF) << 8));
  4192  0052AC  51B7               	movf	(Network_Read@header+12)& (0+255),w,b
  4193  0052AE  6F58               	movwf	(??_Network_Read+1)& (0+255),b
  4194  0052B0  6B57               	clrf	??_Network_Read& (0+255),b
  4195  0052B2  EE21  F0B7         	lfsr	2,Network_Read@header+12
  4196  0052B6  CFDE F159          	movff	postinc2,??_Network_Read+2
  4197  0052BA  CFDD F15A          	movff	postdec2,??_Network_Read+3
  4198  0052BE  C15A  F159         	movff	??_Network_Read+3,??_Network_Read+2
  4199  0052C2  6B5A               	clrf	(??_Network_Read+3)& (0+255),b
  4200  0052C4  6B5A               	clrf	(??_Network_Read+3)& (0+255),b
  4201  0052C6  5157               	movf	??_Network_Read& (0+255),w,b
  4202  0052C8  1159               	iorwf	(??_Network_Read+2)& (0+255),w,b
  4203  0052CA  6FB7               	movwf	(Network_Read@header+12)& (0+255),b
  4204  0052CC  5158               	movf	(??_Network_Read+1)& (0+255),w,b
  4205  0052CE  115A               	iorwf	(??_Network_Read+3)& (0+255),w,b
  4206  0052D0  6FB8               	movwf	(Network_Read@header+13)& (0+255),b
  4207                           
  4208                           ;network.c: 115: switch (header.id.type)
  4209  0052D2  D01A               	goto	l9939
  4210  0052D4                     l9931:
  4211                           
  4212                           ; BSR set to: 1
  4213                           ;network.c: 121: ;
  4214                           ;network.c: 122: ARPV4_Packet();
  4215  0052D4  EC8B  F01A         	call	_ARPV4_Packet	;wreg free
  4216                           
  4217                           ;network.c: 123: break;
  4218  0052D8  EF7C  F02E         	goto	_ETH_Flush
  4219  0052DC                     l9933:
  4220                           
  4221                           ; BSR set to: 1
  4222                           ;network.c: 125: ;
  4223                           ;network.c: 126: IPV4_Packet();
  4224  0052DC  EC2C  F01C         	call	_IPV4_Packet	;wreg free
  4225                           
  4226                           ;network.c: 127: break;
  4227  0052E0  EF7C  F02E         	goto	_ETH_Flush
  4228  0052E4                     l9935:
  4229                           
  4230                           ; BSR set to: 1
  4231                           ;network.c: 132: sprintf(debug_str,"%x : %d",header.id.type,header.id.length);
  4232  0052E4  0E5B               	movlw	low Network_Read@debug_str
  4233  0052E6  6E29               	movwf	sprintf@wh,c
  4234  0052E8  0E01               	movlw	high Network_Read@debug_str
  4235  0052EA  6E2A               	movwf	sprintf@wh+1,c
  4236  0052EC  0EE6               	movlw	low STR_2
  4237  0052EE  6E2B               	movwf	sprintf@f,c
  4238  0052F0  C1B7  F02C         	movff	Network_Read@header+12,?_sprintf+3
  4239  0052F4  C1B8  F02D         	movff	Network_Read@header+13,?_sprintf+4
  4240  0052F8  C1B7  F02E         	movff	Network_Read@header+12,?_sprintf+5
  4241  0052FC  C1B8  F02F         	movff	Network_Read@header+13,?_sprintf+6
  4242  005300  EC74  F031         	call	_sprintf	;wreg free
  4243                           
  4244                           ;network.c: 133: ;
  4245                           ;network.c: 134: break;
  4246  005304  EF7C  F02E         	goto	_ETH_Flush
  4247  005308                     l9939:
  4248                           
  4249                           ; BSR set to: 1
  4250  005308  EE21  F0B7         	lfsr	2,Network_Read@header+12
  4251  00530C  CFDE F157          	movff	postinc2,??_Network_Read
  4252  005310  CFDD F158          	movff	postdec2,??_Network_Read+1
  4253                           
  4254                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 3 sub-sw
      +                          itches
  4255                           ; Switch size 1, requested type "space"
  4256                           ; Number of cases is 3, Range of values is 8 to 134
  4257                           ; switch strategies available:
  4258                           ; Name         Instructions Cycles
  4259                           ; simple_byte           10     6 (average)
  4260                           ;	Chosen strategy is simple_byte
  4261  005314  5158               	movf	(??_Network_Read+1)& (0+255),w,b
  4262  005316  0A08               	xorlw	8	; case 8
  4263  005318  E005               	bz	l10457
  4264  00531A  0A89               	xorlw	137	; case 129
  4265  00531C  E008               	bz	l10459
  4266  00531E  0A07               	xorlw	7	; case 134
  4267  005320  E008               	bz	l10461
  4268  005322  D7E0               	goto	l9935
  4269  005324                     l10457:
  4270                           
  4271                           ; BSR set to: 1
  4272                           ; Switch size 1, requested type "space"
  4273                           ; Number of cases is 2, Range of values is 0 to 6
  4274                           ; switch strategies available:
  4275                           ; Name         Instructions Cycles
  4276                           ; simple_byte            7     4 (average)
  4277                           ;	Chosen strategy is simple_byte
  4278  005324  5157               	movf	??_Network_Read& (0+255),w,b
  4279  005326  E0DA               	bz	l9933
  4280  005328  0A06               	xorlw	6	; case 6
  4281  00532A  E0D4               	bz	l9931
  4282  00532C  D7DB               	goto	l9935
  4283  00532E                     l10459:
  4284                           
  4285                           ; BSR set to: 1
  4286                           ; Switch size 1, requested type "space"
  4287                           ; Number of cases is 1, Range of values is 0 to 0
  4288                           ; switch strategies available:
  4289                           ; Name         Instructions Cycles
  4290                           ; simple_byte            4     3 (average)
  4291                           ;	Chosen strategy is simple_byte
  4292  00532E  5157               	movf	??_Network_Read& (0+255),w,b
  4293  005330  D002               	goto	L1
  4294  005332                     l10461:
  4295                           
  4296                           ; BSR set to: 1
  4297                           ; Switch size 1, requested type "space"
  4298                           ; Number of cases is 1, Range of values is 221 to 221
  4299                           ; switch strategies available:
  4300                           ; Name         Instructions Cycles
  4301                           ; simple_byte            4     3 (average)
  4302                           ;	Chosen strategy is simple_byte
  4303  005332  5157               	movf	??_Network_Read& (0+255),w,b
  4304  005334  0ADD               	xorlw	221	; case 221
  4305  005336                     L1:
  4306  005336  E1D6               	bnz	l9935
  4307                           
  4308                           ;network.c: 136: ETH_Flush();
  4309  005338  EF7C  F02E         	goto	_ETH_Flush	;wreg free
  4310  00533C                     __end_of_Network_Read:
  4311                           	opt stack 0
  4312                           tosu	equ	0xFFF
  4313                           tosh	equ	0xFFE
  4314                           tosl	equ	0xFFD
  4315                           pclath	equ	0xFFA
  4316                           tblptru	equ	0xFF8
  4317                           tblptrh	equ	0xFF7
  4318                           tblptrl	equ	0xFF6
  4319                           tablat	equ	0xFF5
  4320                           prodh	equ	0xFF4
  4321                           prodl	equ	0xFF3
  4322                           intcon	equ	0xFF2
  4323                           indf0	equ	0xFEF
  4324                           postinc0	equ	0xFEE
  4325                           fsr0h	equ	0xFEA
  4326                           fsr0l	equ	0xFE9
  4327                           wreg	equ	0xFE8
  4328                           postinc1	equ	0xFE6
  4329                           postdec1	equ	0xFE5
  4330                           plusw1	equ	0xFE3
  4331                           fsr1h	equ	0xFE2
  4332                           fsr1l	equ	0xFE1
  4333                           bsr	equ	0xFE0
  4334                           indf2	equ	0xFDF
  4335                           postinc2	equ	0xFDE
  4336                           postdec2	equ	0xFDD
  4337                           plusw2	equ	0xFDB
  4338                           fsr2h	equ	0xFDA
  4339                           fsr2l	equ	0xFD9
  4340                           status	equ	0xFD8
  4341                           
  4342 ;; *************** function _IPV4_Packet *****************
  4343 ;; Defined at:
  4344 ;;		line 115 in file "../../TCPIP Library/source/ipv4.c"
  4345 ;; Parameters:    Size  Location     Type
  4346 ;;		None
  4347 ;; Auto vars:     Size  Location     Type
  4348 ;;  msg            40    0        unsigned char [40]
  4349 ;;  cksm            2   85[BANK1 ] unsigned int 
  4350 ;;  length          2   83[BANK1 ] unsigned int 
  4351 ;;  hdrLen          1   82[BANK1 ] unsigned char 
  4352 ;; Return value:  Size  Location     Type
  4353 ;;                  1    wreg      enum E6944
  4354 ;; Registers used:
  4355 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  4356 ;; Tracked objects:
  4357 ;;		On entry : 0/1
  4358 ;;		On exit  : 0/0
  4359 ;;		Unchanged: 0/0
  4360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4362 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4363 ;;      Temps:          0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4364 ;;      Totals:         0       0      33       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4365 ;;Total ram usage:       33 bytes
  4366 ;; Hardware stack levels used:    1
  4367 ;; Hardware stack levels required when called:   16
  4368 ;; This function calls:
  4369 ;;		_ETH_Dump
  4370 ;;		_ETH_ReadBlock
  4371 ;;		_ETH_RxComputeChecksum
  4372 ;;		_ICMP_Receive
  4373 ;;		_IPV4_PseudoHeaderChecksum
  4374 ;;		_TCP_Recv
  4375 ;;		_UDP_Receive
  4376 ;; This function is called by:
  4377 ;;		_Network_Read
  4378 ;; This function uses a non-reentrant model
  4379 ;;
  4380                           
  4381                           	psect	text15
  4382  003858                     __ptext15:
  4383                           	opt stack 0
  4384  003858                     _IPV4_Packet:
  4385                           	opt stack 12
  4386                           
  4387                           ;ipv4.c: 118: uint16_t length = 0;
  4388                           
  4389                           ;incstack = 0
  4390  003858  0101               	movlb	1	; () banked
  4391  00385A  6B53               	clrf	IPV4_Packet@length& (0+255),b
  4392  00385C  6B54               	clrf	(IPV4_Packet@length+1)& (0+255),b
  4393                           
  4394                           ; BSR set to: 1
  4395                           ;ipv4.c: 119: char msg[40];
  4396                           ;ipv4.c: 120: uint8_t hdrLen;
  4397                           ;ipv4.c: 123: cksm = ETH_RxComputeChecksum(sizeof(ipv4Header_t), 0);
  4398  00385E  6A26               	clrf	ETH_RxComputeChecksum@len+1,c
  4399  003860  0E14               	movlw	20
  4400  003862  6E25               	movwf	ETH_RxComputeChecksum@len,c
  4401  003864  6A28               	clrf	ETH_RxComputeChecksum@seed+1,c
  4402  003866  6A27               	clrf	ETH_RxComputeChecksum@seed,c
  4403  003868  ECFD  F02F         	call	_ETH_RxComputeChecksum	;wreg free
  4404                           
  4405                           ;ipv4.c: 124: if (cksm != 0)
  4406  00386C  D945               	call	PL571	;call to abstracted procedure
  4407  00386E  E001               	bz	l9597
  4408  003870  0012               	return	
  4409  003872                     l9597:
  4410                           
  4411                           ; BSR set to: 1
  4412                           ;ipv4.c: 128: }
  4413                           ;ipv4.c: 130: ETH_ReadBlock((char *)&ipv4Header, sizeof(ipv4Header_t));
  4414  003872  0E99               	movlw	low _ipv4Header
  4415  003874  6E17               	movwf	ETH_ReadBlock@buffer,c
  4416  003876  0E02               	movlw	high _ipv4Header
  4417  003878  EC86  F01A         	call	PL705	;call to abstracted procedure
  4418  00387C  ECC9  F02D         	call	_ETH_ReadBlock	;wreg free
  4419                           
  4420                           ; BSR set to: 1
  4421                           ;ipv4.c: 131: if(ipv4Header.version != 4)
  4422  003880  0102               	movlb	2	; () banked
  4423  003882  3999               	swapf	_ipv4Header& (0+255),w,b
  4424  003884  0B0F               	andlw	15
  4425  003886  0A04               	xorlw	4
  4426  003888  E001               	bz	l9603
  4427  00388A  0012               	return	
  4428  00388C                     l9603:
  4429                           
  4430                           ; BSR set to: 2
  4431                           ;ipv4.c: 134: }
  4432                           ;ipv4.c: 136: ipv4Header.dstIpAddress = ((((uint32_t)ipv4Header.dstIpAddress&(uint32_t)0
      +                          xff000000) >> 24) | (((uint32_t)ipv4Header.dstIpAddress&(uint32_t)0x00ff0000) >> 8) | ((
      +                          (uint32_t)ipv4Header.dstIpAddress&(uint32_t)0x0000ff00) << 8) | (((uint32_t)ipv4Header.d
  4433  00388C  51A9               	movf	(_ipv4Header+16)& (0+255),w,b
  4434  00388E  D93C               	call	PL593	;call to abstracted procedure
  4435  003890  EE22  F0A9         	lfsr	2,_ipv4Header+16
  4436  003894  D8FA               	call	PL501	;call to abstracted procedure
  4437  003896  C2A9  F13E         	movff	_ipv4Header+16,??_IPV4_Packet+8
  4438  00389A  C2AA  F13F         	movff	_ipv4Header+17,??_IPV4_Packet+9
  4439  00389E  C2AB  F140         	movff	_ipv4Header+18,??_IPV4_Packet+10
  4440  0038A2  C2AC  F141         	movff	_ipv4Header+19,??_IPV4_Packet+11
  4441  0038A6  D90E               	call	PL541	;call to abstracted procedure
  4442  0038A8  EE22  F0A9         	lfsr	2,_ipv4Header+16
  4443  0038AC  D8BE               	call	PL433	;call to abstracted procedure
  4444  0038AE  6FA9               	movwf	(_ipv4Header+16)& (0+255),b
  4445  0038B0  D94A               	call	PL741	;call to abstracted procedure
  4446  0038B2  6FAA               	movwf	(_ipv4Header+17)& (0+255),b
  4447  0038B4  D939               	call	PL699	;call to abstracted procedure
  4448  0038B6  6FAB               	movwf	(_ipv4Header+18)& (0+255),b
  4449  0038B8  D941               	call	PL739	;call to abstracted procedure
  4450  0038BA  6FAC               	movwf	(_ipv4Header+19)& (0+255),b
  4451                           
  4452                           ;ipv4.c: 137: ipv4Header.srcIpAddress = ((((uint32_t)ipv4Header.srcIpAddress&(uint32_t)0
      +                          xff000000) >> 24) | (((uint32_t)ipv4Header.srcIpAddress&(uint32_t)0x00ff0000) >> 8) | ((
      +                          (uint32_t)ipv4Header.srcIpAddress&(uint32_t)0x0000ff00) << 8) | (((uint32_t)ipv4Header.s
  4453  0038BC  51A5               	movf	(_ipv4Header+12)& (0+255),w,b
  4454  0038BE  D924               	call	PL593	;call to abstracted procedure
  4455  0038C0  EE22  F0A5         	lfsr	2,_ipv4Header+12
  4456  0038C4  D8E2               	call	PL501	;call to abstracted procedure
  4457  0038C6  C2A5  F13E         	movff	_ipv4Header+12,??_IPV4_Packet+8
  4458  0038CA  C2A6  F13F         	movff	_ipv4Header+13,??_IPV4_Packet+9
  4459  0038CE  C2A7  F140         	movff	_ipv4Header+14,??_IPV4_Packet+10
  4460  0038D2  C2A8  F141         	movff	_ipv4Header+15,??_IPV4_Packet+11
  4461  0038D6  D8F6               	call	PL541	;call to abstracted procedure
  4462  0038D8  EE22  F0A5         	lfsr	2,_ipv4Header+12
  4463  0038DC  D8A6               	call	PL433	;call to abstracted procedure
  4464  0038DE  6FA5               	movwf	(_ipv4Header+12)& (0+255),b
  4465  0038E0  D932               	call	PL741	;call to abstracted procedure
  4466  0038E2  6FA6               	movwf	(_ipv4Header+13)& (0+255),b
  4467  0038E4  D921               	call	PL699	;call to abstracted procedure
  4468  0038E6  6FA7               	movwf	(_ipv4Header+14)& (0+255),b
  4469  0038E8  D929               	call	PL739	;call to abstracted procedure
  4470  0038EA  6FA8               	movwf	(_ipv4Header+15)& (0+255),b
  4471                           
  4472                           ; BSR set to: 2
  4473                           ;ipv4.c: 139: if((ipv4Header.dstIpAddress == ipv4Address) ||( ipv4Header.dstIpAddress ==
      +                           0xFFFFFFFF))
  4474  0038EC  5038               	movf	_ipv4Address,w,c
  4475  0038EE  19A9               	xorwf	(_ipv4Header+16)& (0+255),w,b
  4476  0038F0  E109               	bnz	u15590
  4477  0038F2  5039               	movf	_ipv4Address+1,w,c
  4478  0038F4  19AA               	xorwf	(_ipv4Header+17)& (0+255),w,b
  4479  0038F6  E106               	bnz	u15590
  4480  0038F8  503A               	movf	_ipv4Address+2,w,c
  4481  0038FA  19AB               	xorwf	(_ipv4Header+18)& (0+255),w,b
  4482  0038FC  E103               	bnz	u15590
  4483  0038FE  503B               	movf	_ipv4Address+3,w,c
  4484  003900  19AC               	xorwf	(_ipv4Header+19)& (0+255),w,b
  4485  003902  E009               	bz	l9609
  4486  003904                     u15590:
  4487                           
  4488                           ; BSR set to: 2
  4489  003904  29A9               	incf	(_ipv4Header+16)& (0+255),w,b
  4490  003906  E106               	bnz	u15601
  4491  003908  29AA               	incf	(_ipv4Header+17)& (0+255),w,b
  4492  00390A  E104               	bnz	u15601
  4493  00390C  29AB               	incf	(_ipv4Header+18)& (0+255),w,b
  4494  00390E  E102               	bnz	u15601
  4495  003910  29AC               	incf	(_ipv4Header+19)& (0+255),w,b
  4496  003912  A4D8               	btfss	status,2,c
  4497  003914                     u15601:
  4498  003914  0012               	return	
  4499  003916                     l9609:
  4500                           
  4501                           ; BSR set to: 2
  4502                           ;ipv4.c: 140: {
  4503                           ;ipv4.c: 141: ipv4Header.length = ((((uint16_t)ipv4Header.length & (uint16_t)0xFF00) >> 
      +                          8) | (((uint16_t)ipv4Header.length & (uint16_t)0x00FF) << 8));
  4504  003916  519B               	movf	(_ipv4Header+2)& (0+255),w,b
  4505  003918  0101               	movlb	1	; () banked
  4506  00391A  6F37               	movwf	(??_IPV4_Packet+1)& (0+255),b
  4507  00391C  6B36               	clrf	??_IPV4_Packet& (0+255),b
  4508  00391E  EE22  F09B         	lfsr	2,_ipv4Header+2
  4509  003922  CFDE F138          	movff	postinc2,??_IPV4_Packet+2
  4510  003926  CFDD F139          	movff	postdec2,??_IPV4_Packet+3
  4511  00392A  C139  F138         	movff	??_IPV4_Packet+3,??_IPV4_Packet+2
  4512  00392E  6B39               	clrf	(??_IPV4_Packet+3)& (0+255),b
  4513  003930  6B39               	clrf	(??_IPV4_Packet+3)& (0+255),b
  4514  003932  5136               	movf	??_IPV4_Packet& (0+255),w,b
  4515  003934  1138               	iorwf	(??_IPV4_Packet+2)& (0+255),w,b
  4516  003936  0102               	movlb	2	; () banked
  4517  003938  6F9B               	movwf	(_ipv4Header+2)& (0+255),b
  4518  00393A  0101               	movlb	1	; () banked
  4519  00393C  5137               	movf	(??_IPV4_Packet+1)& (0+255),w,b
  4520  00393E  1139               	iorwf	(??_IPV4_Packet+3)& (0+255),w,b
  4521  003940  0102               	movlb	2	; () banked
  4522  003942  6F9C               	movwf	(_ipv4Header+3)& (0+255),b
  4523                           
  4524                           ; BSR set to: 2
  4525                           ;ipv4.c: 143: hdrLen = (uint8_t)(ipv4Header.ihl << 2);
  4526  003944  D8F6               	call	PL709	;call to abstracted procedure
  4527  003946  90D8               	bcf	status,0,c
  4528  003948  3736               	rlcf	??_IPV4_Packet& (0+255),f,b
  4529  00394A  90D8               	bcf	status,0,c
  4530  00394C  3536               	rlcf	??_IPV4_Packet& (0+255),w,b
  4531  00394E  6F52               	movwf	IPV4_Packet@hdrLen& (0+255),b
  4532                           
  4533                           ; BSR set to: 1
  4534                           ;ipv4.c: 145: if (ipv4Header.ihl > 5)
  4535  003950  0102               	movlb	2	; () banked
  4536  003952  D8EF               	call	PL709	;call to abstracted procedure
  4537  003954  0E05               	movlw	5
  4538  003956  6536               	cpfsgt	??_IPV4_Packet& (0+255),b
  4539  003958  D05F               	goto	l9649
  4540                           
  4541                           ; BSR set to: 1
  4542                           ;ipv4.c: 146: {
  4543                           ;ipv4.c: 148: ETH_Dump((uint16_t)(hdrLen - sizeof(ipv4Header_t)));
  4544  00395A  0EEC               	movlw	236
  4545  00395C  2552               	addwf	IPV4_Packet@hdrLen& (0+255),w,b
  4546  00395E  6E17               	movwf	ETH_Dump@length,c
  4547  003960  6A18               	clrf	ETH_Dump@length+1,c
  4548  003962  0EFF               	movlw	255
  4549  003964  2218               	addwfc	ETH_Dump@length+1,f,c
  4550  003966  EC5D  F031         	call	_ETH_Dump	;wreg free
  4551  00396A  D056               	goto	l9649
  4552  00396C                     l9617:
  4553                           
  4554                           ; BSR set to: 2
  4555                           ;ipv4.c: 154: {
  4556                           ;ipv4.c: 156: ;
  4557                           ;ipv4.c: 157: length = ipv4Header.length - hdrLen;
  4558  00396C  0101               	movlb	1	; () banked
  4559  00396E  5152               	movf	IPV4_Packet@hdrLen& (0+255),w,b
  4560  003970  0102               	movlb	2	; () banked
  4561  003972  5D9B               	subwf	(_ipv4Header+2)& (0+255),w,b
  4562  003974  D89E               	call	PL523	;call to abstracted procedure
  4563                           
  4564                           ; BSR set to: 1
  4565                           ;ipv4.c: 158: cksm = ETH_RxComputeChecksum(length, 0);
  4566  003976  C153  F025         	movff	IPV4_Packet@length,ETH_RxComputeChecksum@len
  4567  00397A  C154  F026         	movff	IPV4_Packet@length+1,ETH_RxComputeChecksum@len+1
  4568  00397E  6A28               	clrf	ETH_RxComputeChecksum@seed+1,c
  4569  003980  6A27               	clrf	ETH_RxComputeChecksum@seed,c
  4570  003982  ECFD  F02F         	call	_ETH_RxComputeChecksum	;wreg free
  4571                           
  4572                           ;ipv4.c: 160: if (cksm == 0)
  4573  003986  D8B8               	call	PL571	;call to abstracted procedure
  4574  003988  A4D8               	btfss	status,2,c
  4575  00398A  0012               	return	
  4576                           
  4577                           ; BSR set to: 1
  4578                           ;ipv4.c: 161: {
  4579                           ;ipv4.c: 162: ICMP_Receive(&ipv4Header);
  4580  00398C  0E99               	movlw	low _ipv4Header
  4581  00398E  0100               	movlb	0	; () banked
  4582  003990  6FAF               	movwf	ICMP_Receive@ipv4Hdr& (0+255),b
  4583  003992  0E02               	movlw	high _ipv4Header
  4584  003994  6FB0               	movwf	(ICMP_Receive@ipv4Hdr+1)& (0+255),b
  4585  003996  EF66  F02F         	goto	_ICMP_Receive	;wreg free
  4586  00399A                     l9625:
  4587                           
  4588                           ; BSR set to: 2
  4589                           ;ipv4.c: 174: ;
  4590                           ;ipv4.c: 175: length = ipv4Header.length - hdrLen;
  4591  00399A  0101               	movlb	1	; () banked
  4592  00399C  5152               	movf	IPV4_Packet@hdrLen& (0+255),w,b
  4593  00399E  0102               	movlb	2	; () banked
  4594  0039A0  5D9B               	subwf	(_ipv4Header+2)& (0+255),w,b
  4595  0039A2  D887               	call	PL523	;call to abstracted procedure
  4596                           
  4597                           ; BSR set to: 1
  4598                           ;ipv4.c: 176: cksm = IPV4_PseudoHeaderChecksum(length);
  4599  0039A4  D8BC               	call	PL685	;call to abstracted procedure
  4600  0039A6  ECE7  F02A         	call	_IPV4_PseudoHeaderChecksum	;wreg free
  4601                           
  4602                           ; BSR set to: 1
  4603                           ;ipv4.c: 177: cksm = ETH_RxComputeChecksum(length, cksm);
  4604  0039AA  D899               	call	PL569	;call to abstracted procedure
  4605  0039AC  ECFD  F02F         	call	_ETH_RxComputeChecksum	;wreg free
  4606  0039B0  C025  F155         	movff	?_ETH_RxComputeChecksum,IPV4_Packet@cksm
  4607  0039B4  C026  F156         	movff	?_ETH_RxComputeChecksum+1,IPV4_Packet@cksm+1
  4608                           
  4609                           ;ipv4.c: 178: UDP_Receive(cksm);
  4610  0039B8  C155  F0D3         	movff	IPV4_Packet@cksm,UDP_Receive@udpcksm
  4611  0039BC  C156  F0D4         	movff	IPV4_Packet@cksm+1,UDP_Receive@udpcksm+1
  4612  0039C0  EF27  F028         	goto	_UDP_Receive	;wreg free
  4613  0039C4                     l9633:
  4614                           
  4615                           ; BSR set to: 2
  4616                           ;ipv4.c: 183: ;
  4617                           ;ipv4.c: 184: length = ipv4Header.length - hdrLen;
  4618  0039C4  0101               	movlb	1	; () banked
  4619  0039C6  5152               	movf	IPV4_Packet@hdrLen& (0+255),w,b
  4620  0039C8  0102               	movlb	2	; () banked
  4621  0039CA  5D9B               	subwf	(_ipv4Header+2)& (0+255),w,b
  4622  0039CC  D872               	call	PL523	;call to abstracted procedure
  4623                           
  4624                           ; BSR set to: 1
  4625                           ;ipv4.c: 185: cksm = IPV4_PseudoHeaderChecksum(length);
  4626  0039CE  D8A7               	call	PL685	;call to abstracted procedure
  4627  0039D0  ECE7  F02A         	call	_IPV4_PseudoHeaderChecksum	;wreg free
  4628                           
  4629                           ; BSR set to: 1
  4630                           ;ipv4.c: 186: cksm = ETH_RxComputeChecksum(length, cksm);
  4631  0039D4  D884               	call	PL569	;call to abstracted procedure
  4632  0039D6  ECFD  F02F         	call	_ETH_RxComputeChecksum	;wreg free
  4633                           
  4634                           ;ipv4.c: 189: if (cksm == 0)
  4635  0039DA  D88E               	call	PL571	;call to abstracted procedure
  4636  0039DC  A4D8               	btfss	status,2,c
  4637  0039DE  0012               	return	
  4638                           
  4639                           ; BSR set to: 1
  4640                           ;ipv4.c: 190: {
  4641                           ;ipv4.c: 191: remoteIpv4Address = ipv4Header.srcIpAddress;
  4642  0039E0  C2A5  F22C         	movff	_ipv4Header+12,_remoteIpv4Address
  4643  0039E4  C2A6  F22D         	movff	_ipv4Header+13,_remoteIpv4Address+1
  4644  0039E8  C2A7  F22E         	movff	_ipv4Header+14,_remoteIpv4Address+2
  4645  0039EC  C2A8  F22F         	movff	_ipv4Header+15,_remoteIpv4Address+3
  4646                           
  4647                           ; BSR set to: 1
  4648                           ;ipv4.c: 192: TCP_Recv(remoteIpv4Address, length);
  4649  0039F0  C22C  F111         	movff	_remoteIpv4Address,TCP_Recv@remoteAddress
  4650  0039F4  C22D  F112         	movff	_remoteIpv4Address+1,TCP_Recv@remoteAddress+1
  4651  0039F8  C22E  F113         	movff	_remoteIpv4Address+2,TCP_Recv@remoteAddress+2
  4652  0039FC  C22F  F114         	movff	_remoteIpv4Address+3,TCP_Recv@remoteAddress+3
  4653  003A00  C153  F115         	movff	IPV4_Packet@length,TCP_Recv@length
  4654  003A04  C154  F116         	movff	IPV4_Packet@length+1,TCP_Recv@length+1
  4655  003A08  EFA2  F018         	goto	_TCP_Recv	;wreg free
  4656  003A0C                     l9645:
  4657                           
  4658                           ; BSR set to: 2
  4659                           ;ipv4.c: 199: ETH_Dump(ipv4Header.length);
  4660  003A0C  C29B  F017         	movff	_ipv4Header+2,ETH_Dump@length
  4661  003A10  C29C  F018         	movff	_ipv4Header+3,ETH_Dump@length+1
  4662  003A14  EF5D  F031         	goto	_ETH_Dump	;wreg free
  4663  003A18                     l9649:
  4664                           
  4665                           ; BSR set to: 1
  4666  003A18  0102               	movlb	2	; () banked
  4667  003A1A  51A2               	movf	(_ipv4Header+9)& (0+255),w,b
  4668                           
  4669                           ; Switch size 1, requested type "space"
  4670                           ; Number of cases is 3, Range of values is 1 to 17
  4671                           ; switch strategies available:
  4672                           ; Name         Instructions Cycles
  4673                           ; simple_byte           10     6 (average)
  4674                           ;	Chosen strategy is simple_byte
  4675  003A1C  0A01               	xorlw	1	; case 1
  4676  003A1E  E0A6               	bz	l9617
  4677  003A20  0A07               	xorlw	7	; case 6
  4678  003A22  E0D0               	bz	l9633
  4679  003A24  0A17               	xorlw	23	; case 17
  4680  003A26  E0B9               	bz	l9625
  4681  003A28  D7F1               	goto	l9645
  4682  003A2A                     __end_of_IPV4_Packet:
  4683                           	opt stack 0
  4684  003A2A                     PL433:
  4685                           	opt stack 12
  4686  003A2A  14DE               	andwf	postinc2,w,c
  4687  003A2C  6F46               	movwf	(??_IPV4_Packet+16)& (0+255),b
  4688  003A2E  0E00               	movlw	0
  4689  003A30  14DE               	andwf	postinc2,w,c
  4690  003A32  6F47               	movwf	(??_IPV4_Packet+17)& (0+255),b
  4691  003A34  0E00               	movlw	0
  4692  003A36  14DE               	andwf	postinc2,w,c
  4693  003A38  6F48               	movwf	(??_IPV4_Packet+18)& (0+255),b
  4694  003A3A  0EFF               	movlw	255
  4695  003A3C  14DE               	andwf	postinc2,w,c
  4696  003A3E  6F49               	movwf	(??_IPV4_Packet+19)& (0+255),b
  4697  003A40  0E19               	movlw	25
  4698  003A42  D005               	goto	u15570
  4699  003A44                     u15575:
  4700  003A44  90D8               	bcf	status,0,c
  4701  003A46  3349               	rrcf	(??_IPV4_Packet+19)& (0+255),f,b
  4702  003A48  3348               	rrcf	(??_IPV4_Packet+18)& (0+255),f,b
  4703  003A4A  3347               	rrcf	(??_IPV4_Packet+17)& (0+255),f,b
  4704  003A4C  3346               	rrcf	(??_IPV4_Packet+16)& (0+255),f,b
  4705  003A4E                     u15570:
  4706  003A4E  2EE8               	decfsz	wreg,f,c
  4707  003A50  D7F9               	goto	u15575
  4708  003A52  5142               	movf	(??_IPV4_Packet+12)& (0+255),w,b
  4709  003A54  1146               	iorwf	(??_IPV4_Packet+16)& (0+255),w,b
  4710  003A56  6F4A               	movwf	(??_IPV4_Packet+20)& (0+255),b
  4711  003A58  5143               	movf	(??_IPV4_Packet+13)& (0+255),w,b
  4712  003A5A  1147               	iorwf	(??_IPV4_Packet+17)& (0+255),w,b
  4713  003A5C  6F4B               	movwf	(??_IPV4_Packet+21)& (0+255),b
  4714  003A5E  5144               	movf	(??_IPV4_Packet+14)& (0+255),w,b
  4715  003A60  1148               	iorwf	(??_IPV4_Packet+18)& (0+255),w,b
  4716  003A62  6F4C               	movwf	(??_IPV4_Packet+22)& (0+255),b
  4717  003A64  5145               	movf	(??_IPV4_Packet+15)& (0+255),w,b
  4718  003A66  1149               	iorwf	(??_IPV4_Packet+19)& (0+255),w,b
  4719  003A68  6F4D               	movwf	(??_IPV4_Packet+23)& (0+255),b
  4720  003A6A  513A               	movf	(??_IPV4_Packet+4)& (0+255),w,b
  4721  003A6C  114A               	iorwf	(??_IPV4_Packet+20)& (0+255),w,b
  4722  003A6E  6F4E               	movwf	(??_IPV4_Packet+24)& (0+255),b
  4723  003A70  513B               	movf	(??_IPV4_Packet+5)& (0+255),w,b
  4724  003A72  114B               	iorwf	(??_IPV4_Packet+21)& (0+255),w,b
  4725  003A74  6F4F               	movwf	(??_IPV4_Packet+25)& (0+255),b
  4726  003A76  513C               	movf	(??_IPV4_Packet+6)& (0+255),w,b
  4727  003A78  114C               	iorwf	(??_IPV4_Packet+22)& (0+255),w,b
  4728  003A7A  6F50               	movwf	(??_IPV4_Packet+26)& (0+255),b
  4729  003A7C  513D               	movf	(??_IPV4_Packet+7)& (0+255),w,b
  4730  003A7E  114D               	iorwf	(??_IPV4_Packet+23)& (0+255),w,b
  4731  003A80  6F51               	movwf	(??_IPV4_Packet+27)& (0+255),b
  4732  003A82  5136               	movf	??_IPV4_Packet& (0+255),w,b
  4733  003A84  114E               	iorwf	(??_IPV4_Packet+24)& (0+255),w,b
  4734  003A86  0102               	movlb	2	; () banked
  4735  003A88  0012               	return	
  4736  003A8A                     __end_ofPL433:
  4737                           	opt stack 0
  4738  003A8A                     PL501:
  4739                           	opt stack 12
  4740  003A8A  0E00               	movlw	0
  4741  003A8C  14DE               	andwf	postinc2,w,c
  4742  003A8E  6F3A               	movwf	(??_IPV4_Packet+4)& (0+255),b
  4743  003A90  0EFF               	movlw	255
  4744  003A92  14DE               	andwf	postinc2,w,c
  4745  003A94  6F3B               	movwf	(??_IPV4_Packet+5)& (0+255),b
  4746  003A96  0E00               	movlw	0
  4747  003A98  14DE               	andwf	postinc2,w,c
  4748  003A9A  6F3C               	movwf	(??_IPV4_Packet+6)& (0+255),b
  4749  003A9C  0E00               	movlw	0
  4750  003A9E  14DE               	andwf	postinc2,w,c
  4751  003AA0  6F3D               	movwf	(??_IPV4_Packet+7)& (0+255),b
  4752  003AA2  C13C  F13D         	movff	??_IPV4_Packet+6,??_IPV4_Packet+7
  4753  003AA6  C13B  F13C         	movff	??_IPV4_Packet+5,??_IPV4_Packet+6
  4754  003AAA  C13A  F13B         	movff	??_IPV4_Packet+4,??_IPV4_Packet+5
  4755  003AAE  6B3A               	clrf	(??_IPV4_Packet+4)& (0+255),b
  4756  003AB0  0012               	return	
  4757  003AB2                     __end_ofPL501:
  4758                           	opt stack 0
  4759  003AB2                     PL523:
  4760                           	opt stack 12
  4761  003AB2  0101               	movlb	1	; () banked
  4762  003AB4  6F53               	movwf	IPV4_Packet@length& (0+255),b
  4763  003AB6  0102               	movlb	2	; () banked
  4764  003AB8  519C               	movf	(_ipv4Header+3)& (0+255),w,b
  4765  003ABA  A0D8               	btfss	status,0,c
  4766  003ABC  059C               	decf	(_ipv4Header+3)& (0+255),w,b
  4767  003ABE  0101               	movlb	1	; () banked
  4768  003AC0  6F54               	movwf	(IPV4_Packet@length+1)& (0+255),b
  4769  003AC2  0012               	return	
  4770  003AC4                     __end_ofPL523:
  4771                           	opt stack 0
  4772  003AC4                     PL541:
  4773                           	opt stack 12
  4774  003AC4  C13F  F13E         	movff	??_IPV4_Packet+9,??_IPV4_Packet+8
  4775  003AC8  C140  F13F         	movff	??_IPV4_Packet+10,??_IPV4_Packet+9
  4776  003ACC  C141  F140         	movff	??_IPV4_Packet+11,??_IPV4_Packet+10
  4777  003AD0  6B41               	clrf	(??_IPV4_Packet+11)& (0+255),b
  4778  003AD2  6B42               	clrf	(??_IPV4_Packet+12)& (0+255),b
  4779  003AD4  513F               	movf	(??_IPV4_Packet+9)& (0+255),w,b
  4780  003AD6  6F43               	movwf	(??_IPV4_Packet+13)& (0+255),b
  4781  003AD8  6B44               	clrf	(??_IPV4_Packet+14)& (0+255),b
  4782  003ADA  6B45               	clrf	(??_IPV4_Packet+15)& (0+255),b
  4783  003ADC  0C00               	retlw	0
  4784  003ADE                     __end_ofPL541:
  4785                           	opt stack 0
  4786  003ADE                     PL569:
  4787                           	opt stack 12
  4788  003ADE  C017  F155         	movff	?_IPV4_PseudoHeaderChecksum,IPV4_Packet@cksm
  4789  003AE2  C018  F156         	movff	?_IPV4_PseudoHeaderChecksum+1,IPV4_Packet@cksm+1
  4790  003AE6  C153  F025         	movff	IPV4_Packet@length,ETH_RxComputeChecksum@len
  4791  003AEA  C154  F026         	movff	IPV4_Packet@length+1,ETH_RxComputeChecksum@len+1
  4792  003AEE  C155  F027         	movff	IPV4_Packet@cksm,ETH_RxComputeChecksum@seed
  4793  003AF2  C156  F028         	movff	IPV4_Packet@cksm+1,ETH_RxComputeChecksum@seed+1
  4794  003AF6  0012               	return	
  4795  003AF8                     __end_ofPL569:
  4796                           	opt stack 0
  4797  003AF8                     PL571:
  4798                           	opt stack 12
  4799  003AF8  C025  F155         	movff	?_ETH_RxComputeChecksum,IPV4_Packet@cksm
  4800  003AFC  C026  F156         	movff	?_ETH_RxComputeChecksum+1,IPV4_Packet@cksm+1
  4801  003B00  0101               	movlb	1	; () banked
  4802  003B02  5155               	movf	IPV4_Packet@cksm& (0+255),w,b
  4803  003B04  1156               	iorwf	(IPV4_Packet@cksm+1)& (0+255),w,b
  4804  003B06  0012               	return	
  4805  003B08                     __end_ofPL571:
  4806                           	opt stack 0
  4807  003B08                     PL593:
  4808                           	opt stack 12
  4809  003B08  0101               	movlb	1	; () banked
  4810  003B0A  6F36               	movwf	??_IPV4_Packet& (0+255),b
  4811  003B0C  6B37               	clrf	(??_IPV4_Packet+1)& (0+255),b
  4812  003B0E  6B38               	clrf	(??_IPV4_Packet+2)& (0+255),b
  4813  003B10  6B39               	clrf	(??_IPV4_Packet+3)& (0+255),b
  4814  003B12  C136  F139         	movff	??_IPV4_Packet,??_IPV4_Packet+3
  4815  003B16  6B38               	clrf	(??_IPV4_Packet+2)& (0+255),b
  4816  003B18  6B37               	clrf	(??_IPV4_Packet+1)& (0+255),b
  4817  003B1A  6B36               	clrf	??_IPV4_Packet& (0+255),b
  4818  003B1C  0012               	return	
  4819  003B1E                     __end_ofPL593:
  4820                           	opt stack 0
  4821  003B1E                     PL685:
  4822                           	opt stack 12
  4823  003B1E  C153  F017         	movff	IPV4_Packet@length,IPV4_PseudoHeaderChecksum@payloadLen
  4824  003B22  C154  F018         	movff	IPV4_Packet@length+1,IPV4_PseudoHeaderChecksum@payloadLen+1
  4825  003B26  0012               	return	
  4826  003B28                     __end_ofPL685:
  4827                           	opt stack 0
  4828  003B28                     PL699:
  4829                           	opt stack 12
  4830  003B28  0101               	movlb	1	; () banked
  4831  003B2A  5138               	movf	(??_IPV4_Packet+2)& (0+255),w,b
  4832  003B2C  1150               	iorwf	(??_IPV4_Packet+26)& (0+255),w,b
  4833  003B2E  0102               	movlb	2	; () banked
  4834  003B30  0012               	return	
  4835  003B32                     __end_ofPL699:
  4836                           	opt stack 0
  4837  003B32                     PL709:
  4838                           	opt stack 12
  4839  003B32  5199               	movf	_ipv4Header& (0+255),w,b
  4840  003B34  0B0F               	andlw	15
  4841  003B36  0101               	movlb	1	; () banked
  4842  003B38  6F36               	movwf	??_IPV4_Packet& (0+255),b
  4843  003B3A  0012               	return	
  4844  003B3C                     __end_ofPL709:
  4845                           	opt stack 0
  4846  003B3C                     PL739:
  4847                           	opt stack 12
  4848  003B3C  0101               	movlb	1	; () banked
  4849  003B3E  5139               	movf	(??_IPV4_Packet+3)& (0+255),w,b
  4850  003B40  1151               	iorwf	(??_IPV4_Packet+27)& (0+255),w,b
  4851  003B42  0102               	movlb	2	; () banked
  4852  003B44  0012               	return	
  4853  003B46                     __end_ofPL739:
  4854                           	opt stack 0
  4855  003B46                     PL741:
  4856                           	opt stack 12
  4857  003B46  0101               	movlb	1	; () banked
  4858  003B48  5137               	movf	(??_IPV4_Packet+1)& (0+255),w,b
  4859  003B4A  114F               	iorwf	(??_IPV4_Packet+25)& (0+255),w,b
  4860  003B4C  0102               	movlb	2	; () banked
  4861  003B4E  0012               	return	
  4862  003B50                     __end_ofPL741:
  4863                           	opt stack 0
  4864                           tosu	equ	0xFFF
  4865                           tosh	equ	0xFFE
  4866                           tosl	equ	0xFFD
  4867                           pclath	equ	0xFFA
  4868                           tblptru	equ	0xFF8
  4869                           tblptrh	equ	0xFF7
  4870                           tblptrl	equ	0xFF6
  4871                           tablat	equ	0xFF5
  4872                           prodh	equ	0xFF4
  4873                           prodl	equ	0xFF3
  4874                           intcon	equ	0xFF2
  4875                           indf0	equ	0xFEF
  4876                           postinc0	equ	0xFEE
  4877                           fsr0h	equ	0xFEA
  4878                           fsr0l	equ	0xFE9
  4879                           wreg	equ	0xFE8
  4880                           postinc1	equ	0xFE6
  4881                           postdec1	equ	0xFE5
  4882                           plusw1	equ	0xFE3
  4883                           fsr1h	equ	0xFE2
  4884                           fsr1l	equ	0xFE1
  4885                           bsr	equ	0xFE0
  4886                           indf2	equ	0xFDF
  4887                           postinc2	equ	0xFDE
  4888                           postdec2	equ	0xFDD
  4889                           plusw2	equ	0xFDB
  4890                           fsr2h	equ	0xFDA
  4891                           fsr2l	equ	0xFD9
  4892                           status	equ	0xFD8
  4893                           
  4894 ;; *************** function _UDP_Receive *****************
  4895 ;; Defined at:
  4896 ;;		line 126 in file "../../TCPIP Library/source/udpv4.c"
  4897 ;; Parameters:    Size  Location     Type
  4898 ;;  udpcksm         2  115[BANK0 ] unsigned int 
  4899 ;; Auto vars:     Size  Location     Type
  4900 ;;  x               2  123[BANK0 ] unsigned int 
  4901 ;;  hptr            1  125[BANK0 ] PTR const struct .
  4902 ;;		 -> UDP_CallBackTable(5), 
  4903 ;;  ret             1    0        enum E367
  4904 ;; Return value:  Size  Location     Type
  4905 ;;                  1    wreg      enum E6944
  4906 ;; Registers used:
  4907 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  4908 ;; Tracked objects:
  4909 ;;		On entry : 0/1
  4910 ;;		On exit  : 0/0
  4911 ;;		Unchanged: 0/0
  4912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4913 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4914 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4915 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4916 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4917 ;;Total ram usage:       11 bytes
  4918 ;; Hardware stack levels used:    1
  4919 ;; Hardware stack levels required when called:   15
  4920 ;; This function calls:
  4921 ;;		_DHCP_Handler
  4922 ;;		_ETH_ReadBlock
  4923 ;; This function is called by:
  4924 ;;		_IPV4_Packet
  4925 ;; This function uses a non-reentrant model
  4926 ;;
  4927                           
  4928                           	psect	text16
  4929  00504E                     __ptext16:
  4930                           	opt stack 0
  4931  00504E                     _UDP_Receive:
  4932                           	opt stack 12
  4933                           
  4934                           ;udpv4.c: 129: const udp_handler_t *hptr;
  4935                           ;udpv4.c: 130: uint16_t x;
  4936                           ;udpv4.c: 132: hptr = UDP_CallBackTable;
  4937                           
  4938                           ;incstack = 0
  4939  00504E  0E34               	movlw	low _UDP_CallBackTable
  4940  005050  0100               	movlb	0	; () banked
  4941  005052  6FDD               	movwf	UDP_Receive@hptr& (0+255),b
  4942                           
  4943                           ; BSR set to: 0
  4944                           ;udpv4.c: 133: ETH_ReadBlock((char *)&udpHeader,sizeof(udpHeader));
  4945  005054  0EAD               	movlw	low _udpHeader
  4946  005056  6E17               	movwf	ETH_ReadBlock@buffer,c
  4947  005058  0E02               	movlw	high _udpHeader
  4948  00505A  6E18               	movwf	ETH_ReadBlock@buffer+1,c
  4949  00505C  EC88  F02F         	call	PL757	;call to abstracted procedure
  4950  005060  ECC9  F02D         	call	_ETH_ReadBlock	;wreg free
  4951                           
  4952                           ; BSR set to: 1
  4953                           ;udpv4.c: 135: if((udpHeader.checksum == 0) || (udpcksm == 0))
  4954  005064  0102               	movlb	2	; () banked
  4955  005066  51B3               	movf	(_udpHeader+6)& (0+255),w,b
  4956  005068  11B4               	iorwf	(_udpHeader+7)& (0+255),w,b
  4957  00506A  E005               	bz	l9309
  4958                           
  4959                           ; BSR set to: 2
  4960  00506C  0100               	movlb	0	; () banked
  4961  00506E  51D3               	movf	UDP_Receive@udpcksm& (0+255),w,b
  4962  005070  11D4               	iorwf	(UDP_Receive@udpcksm+1)& (0+255),w,b
  4963  005072  A4D8               	btfss	status,2,c
  4964  005074  0012               	return	
  4965  005076                     l9309:
  4966                           
  4967                           ;udpv4.c: 138: destPort = ((((uint16_t)udpHeader.srcPort & (uint16_t)0xFF00) >> 8) | (((
      +                          uint16_t)udpHeader.srcPort & (uint16_t)0x00FF) << 8));
  4968  005076  0102               	movlb	2	; () banked
  4969  005078  51AF               	movf	(_udpHeader+2)& (0+255),w,b
  4970  00507A  0100               	movlb	0	; () banked
  4971  00507C  6FD6               	movwf	(??_UDP_Receive+1)& (0+255),b
  4972  00507E  6BD5               	clrf	??_UDP_Receive& (0+255),b
  4973  005080  EE22  F0AF         	lfsr	2,_udpHeader+2
  4974  005084  D846               	call	PL601	;call to abstracted procedure
  4975  005086  11D7               	iorwf	(??_UDP_Receive+2)& (0+255),w,b
  4976  005088  0102               	movlb	2	; () banked
  4977  00508A  6FAF               	movwf	(_udpHeader+2)& (0+255),b
  4978  00508C  0100               	movlb	0	; () banked
  4979  00508E  51D6               	movf	(??_UDP_Receive+1)& (0+255),w,b
  4980  005090  11D8               	iorwf	(??_UDP_Receive+3)& (0+255),w,b
  4981  005092  0102               	movlb	2	; () banked
  4982  005094  6FB0               	movwf	(_udpHeader+3)& (0+255),b
  4983                           
  4984                           ; BSR set to: 2
  4985                           ;udpv4.c: 142: for(x = 0; x < (sizeof(UDP_CallBackTable) / sizeof(*(UDP_CallBackTable)))
      +                          ;x++)
  4986                           
  4987                           ; BSR set to: 2
  4988  005096  0100               	movlb	0	; () banked
  4989  005098  6BDB               	clrf	UDP_Receive@x& (0+255),b
  4990  00509A  6BDC               	clrf	(UDP_Receive@x+1)& (0+255),b
  4991  00509C                     l9319:
  4992                           
  4993                           ; BSR set to: 0
  4994                           ;udpv4.c: 143: {
  4995                           ;udpv4.c: 144: if(hptr->portNumber == udpHeader.dstPort)
  4996  00509C  C0DD  FFF6         	movff	UDP_Receive@hptr,tblptrl
  4997  0050A0  EC59  F018         	call	PL463	;call to abstracted procedure
  4998  0050A4  0102               	movlb	2	; () banked
  4999  0050A6  51AF               	movf	(_udpHeader+2)& (0+255),w,b
  5000  0050A8  0009               	tblrd		*+
  5001  0050AA  18F5               	xorwf	tablat,w,c
  5002  0050AC  E129               	bnz	l9325
  5003  0050AE  51B0               	movf	(_udpHeader+3)& (0+255),w,b
  5004  0050B0  0009               	tblrd		*+
  5005  0050B2  18F5               	xorwf	tablat,w,c
  5006  0050B4  E125               	bnz	l9325
  5007                           
  5008                           ; BSR set to: 2
  5009                           ;udpv4.c: 145: {
  5010                           ;udpv4.c: 146: hptr->callBack(((((uint16_t)udpHeader.length & (uint16_t)0xFF00) >> 8) | 
      +                          (((uint16_t)udpHeader.length & (uint16_t)0x00FF) << 8)) - sizeof(udpHeader));
  5011  0050B6  51B1               	movf	(_udpHeader+4)& (0+255),w,b
  5012  0050B8  0100               	movlb	0	; () banked
  5013  0050BA  6FD6               	movwf	(??_UDP_Receive+1)& (0+255),b
  5014  0050BC  6BD5               	clrf	??_UDP_Receive& (0+255),b
  5015  0050BE  EE22  F0B1         	lfsr	2,_udpHeader+4
  5016  0050C2  D827               	call	PL601	;call to abstracted procedure
  5017  0050C4  13D7               	iorwf	(??_UDP_Receive+2)& (0+255),f,b
  5018  0050C6  51D6               	movf	(??_UDP_Receive+1)& (0+255),w,b
  5019  0050C8  13D8               	iorwf	(??_UDP_Receive+3)& (0+255),f,b
  5020  0050CA  0EF8               	movlw	248
  5021  0050CC  25D7               	addwf	(??_UDP_Receive+2)& (0+255),w,b
  5022  0050CE  6FAF               	movwf	DHCP_Handler@length& (0+255),b
  5023  0050D0  0EFF               	movlw	255
  5024  0050D2  21D8               	addwfc	(??_UDP_Receive+3)& (0+255),w,b
  5025  0050D4  6FB0               	movwf	(DHCP_Handler@length+1)& (0+255),b
  5026  0050D6  C0DD  F0D9         	movff	UDP_Receive@hptr,??_UDP_Receive+4
  5027  0050DA  0E02               	movlw	2
  5028  0050DC  27D9               	addwf	(??_UDP_Receive+4)& (0+255),f,b
  5029  0050DE  C0D9  FFF6         	movff	??_UDP_Receive+4,tblptrl
  5030  0050E2  EC59  F018         	call	PL463	;call to abstracted procedure
  5031  0050E6  0005               	push	
  5032  0050E8  6EFA               	movwf	pclath,c
  5033  0050EA  0009               	tblrd		*+
  5034  0050EC  50F5               	movf	tablat,w,c
  5035  0050EE  6EFD               	movwf	tosl,c
  5036  0050F0  0009               	tblrd		*+
  5037  0050F2  50F5               	movf	tablat,w,c
  5038  0050F4  6EFE               	movwf	tosh,c
  5039  0050F6  0009               	tblrd		*+
  5040  0050F8  50F5               	movf	tablat,w,c
  5041  0050FA  6EFF               	movwf	tosu,c
  5042  0050FC  50FA               	movf	pclath,w,c
  5043  0050FE  0012               	return		;indir
  5044  005100                     l9325:
  5045                           
  5046                           ; BSR set to: 2
  5047                           ;udpv4.c: 149: }
  5048                           ;udpv4.c: 150: hptr ++;
  5049  005100  0E05               	movlw	5
  5050  005102  0100               	movlb	0	; () banked
  5051  005104  27DD               	addwf	UDP_Receive@hptr& (0+255),f,b
  5052                           
  5053                           ; BSR set to: 0
  5054  005106  4BDB               	infsnz	UDP_Receive@x& (0+255),f,b
  5055  005108  2BDC               	incf	(UDP_Receive@x+1)& (0+255),f,b
  5056                           
  5057                           ; BSR set to: 0
  5058  00510A  51DB               	movf	UDP_Receive@x& (0+255),w,b
  5059  00510C  11DC               	iorwf	(UDP_Receive@x+1)& (0+255),w,b
  5060  00510E  E0C6               	bz	l9319
  5061  005110  0012               	return	
  5062  005112                     __end_of_UDP_Receive:
  5063                           	opt stack 0
  5064  005112                     PL601:
  5065                           	opt stack 12
  5066  005112  CFDE F0D7          	movff	postinc2,??_UDP_Receive+2
  5067  005116  CFDD F0D8          	movff	postdec2,??_UDP_Receive+3
  5068  00511A  C0D8  F0D7         	movff	??_UDP_Receive+3,??_UDP_Receive+2
  5069  00511E  6BD8               	clrf	(??_UDP_Receive+3)& (0+255),b
  5070  005120  6BD8               	clrf	(??_UDP_Receive+3)& (0+255),b
  5071  005122  51D5               	movf	??_UDP_Receive& (0+255),w,b
  5072  005124  0012               	return	
  5073  005126                     __end_ofPL601:
  5074                           	opt stack 0
  5075                           tosu	equ	0xFFF
  5076                           tosh	equ	0xFFE
  5077                           tosl	equ	0xFFD
  5078                           pclath	equ	0xFFA
  5079                           tblptru	equ	0xFF8
  5080                           tblptrh	equ	0xFF7
  5081                           tblptrl	equ	0xFF6
  5082                           tablat	equ	0xFF5
  5083                           prodh	equ	0xFF4
  5084                           prodl	equ	0xFF3
  5085                           intcon	equ	0xFF2
  5086                           indf0	equ	0xFEF
  5087                           postinc0	equ	0xFEE
  5088                           fsr0h	equ	0xFEA
  5089                           fsr0l	equ	0xFE9
  5090                           wreg	equ	0xFE8
  5091                           postinc1	equ	0xFE6
  5092                           postdec1	equ	0xFE5
  5093                           plusw1	equ	0xFE3
  5094                           fsr1h	equ	0xFE2
  5095                           fsr1l	equ	0xFE1
  5096                           bsr	equ	0xFE0
  5097                           indf2	equ	0xFDF
  5098                           postinc2	equ	0xFDE
  5099                           postdec2	equ	0xFDD
  5100                           plusw2	equ	0xFDB
  5101                           fsr2h	equ	0xFDA
  5102                           fsr2l	equ	0xFD9
  5103                           status	equ	0xFD8
  5104                           
  5105 ;; *************** function _DHCP_Handler *****************
  5106 ;; Defined at:
  5107 ;;		line 162 in file "../../TCPIP Library/source/dhcp_client.c"
  5108 ;; Parameters:    Size  Location     Type
  5109 ;;  length          2   79[BANK0 ] int 
  5110 ;; Auto vars:     Size  Location     Type
  5111 ;;  optionLength    1  110[BANK0 ] unsigned char 
  5112 ;;  option          1   97[BANK0 ] unsigned char 
  5113 ;;  ip              8   83[BANK0 ] unsigned int [4]
  5114 ;;  ethMAC          6  104[BANK0 ] struct .
  5115 ;;  ethPktMAC       6   98[BANK0 ] struct .
  5116 ;;  myip            4  111[BANK0 ] unsigned long 
  5117 ;;  v               4   91[BANK0 ] unsigned long 
  5118 ;;  v16             2   95[BANK0 ] unsigned int 
  5119 ;; Return value:  Size  Location     Type
  5120 ;;		None               void
  5121 ;; Registers used:
  5122 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5123 ;; Tracked objects:
  5124 ;;		On entry : F/0
  5125 ;;		On exit  : E/0
  5126 ;;		Unchanged: 0/0
  5127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5128 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5129 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5130 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5131 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5132 ;;Total ram usage:       36 bytes
  5133 ;; Hardware stack levels used:    1
  5134 ;; Hardware stack levels required when called:   14
  5135 ;; This function calls:
  5136 ;;		_DHCP_Request
  5137 ;;		_ETH_Dump
  5138 ;;		_ETH_GetMAC
  5139 ;;		_ETH_Read16
  5140 ;;		_ETH_Read32
  5141 ;;		_ETH_Read8
  5142 ;;		_ETH_ReadBlock
  5143 ;;		_memcmp
  5144 ;; This function is called by:
  5145 ;;		_UDP_Receive
  5146 ;; This function uses a non-reentrant model
  5147 ;;
  5148                           
  5149                           	psect	text17
  5150  003DBE                     __ptext17:
  5151                           	opt stack 0
  5152  003DBE                     _DHCP_Handler:
  5153                           	opt stack 12
  5154                           
  5155                           ; BSR set to: 0
  5156                           ;dhcp_client.c: 165: uint32_t myip,v;
  5157                           ;dhcp_client.c: 166: uint16_t v16;
  5158                           ;dhcp_client.c: 167: uint16_t ip[4];
  5159                           ;dhcp_client.c: 169: mac48Address_t ethPktMAC;
  5160                           ;dhcp_client.c: 170: mac48Address_t ethMAC;
  5161                           ;dhcp_client.c: 172: ETH_GetMAC((char*)&ethMAC);
  5162                           
  5163                           ;incstack = 0
  5164  003DBE  0EC8               	movlw	DHCP_Handler@ethMAC& (0+255)
  5165  003DC0  ECDC  F030         	call	_ETH_GetMAC
  5166                           
  5167                           ;dhcp_client.c: 178: if(length > 240)
  5168  003DC4  0100               	movlb	0	; () banked
  5169  003DC6  BFB0               	btfsc	(DHCP_Handler@length+1)& (0+255),7,b
  5170  003DC8  0012               	return	
  5171  003DCA  51B0               	movf	(DHCP_Handler@length+1)& (0+255),w,b
  5172  003DCC  E104               	bnz	u12900
  5173  003DCE  0EF1               	movlw	241
  5174  003DD0  5DAF               	subwf	DHCP_Handler@length& (0+255),w,b
  5175  003DD2  A0D8               	btfss	status,0,c
  5176  003DD4  0012               	return	
  5177  003DD6                     u12900:
  5178                           
  5179                           ; BSR set to: 0
  5180                           ;dhcp_client.c: 179: {
  5181                           ;dhcp_client.c: 180: v16 = ETH_Read16();
  5182  003DD6  EC45  F030         	call	_ETH_Read16	;wreg free
  5183  003DDA  C017  F0BF         	movff	?_ETH_Read16,DHCP_Handler@v16
  5184  003DDE  C018  F0C0         	movff	?_ETH_Read16+1,DHCP_Handler@v16+1
  5185                           
  5186                           ; BSR set to: 1
  5187                           ;dhcp_client.c: 181: if(v16 == 0x0201)
  5188  003DE2  0100               	movlb	0	; () banked
  5189  003DE4  05BF               	decf	DHCP_Handler@v16& (0+255),w,b
  5190  003DE6  E103               	bnz	u12911
  5191  003DE8  0E02               	movlw	2
  5192  003DEA  19C0               	xorwf	(DHCP_Handler@v16+1)& (0+255),w,b
  5193  003DEC  A4D8               	btfss	status,2,c
  5194  003DEE                     u12911:
  5195  003DEE  0012               	return	
  5196                           
  5197                           ; BSR set to: 0
  5198                           ;dhcp_client.c: 182: {
  5199                           ;dhcp_client.c: 183: ETH_Dump(2);
  5200  003DF0  6A18               	clrf	ETH_Dump@length+1,c
  5201  003DF2  0E02               	movlw	2
  5202  003DF4  6E17               	movwf	ETH_Dump@length,c
  5203  003DF6  EC5D  F031         	call	_ETH_Dump	;wreg free
  5204                           
  5205                           ;dhcp_client.c: 184: v = ETH_Read32();
  5206  003DFA  ECFB  F02D         	call	_ETH_Read32	;wreg free
  5207  003DFE  C017  F0BB         	movff	?_ETH_Read32,DHCP_Handler@v
  5208  003E02  C018  F0BC         	movff	?_ETH_Read32+1,DHCP_Handler@v+1
  5209  003E06  C019  F0BD         	movff	?_ETH_Read32+2,DHCP_Handler@v+2
  5210  003E0A  C01A  F0BE         	movff	?_ETH_Read32+3,DHCP_Handler@v+3
  5211                           
  5212                           ; BSR set to: 1
  5213                           ;dhcp_client.c: 185: if(v == xidValue)
  5214  003E0E  0E50               	movlw	80
  5215  003E10  0100               	movlb	0	; () banked
  5216  003E12  19BB               	xorwf	DHCP_Handler@v& (0+255),w,b
  5217  003E14  E109               	bnz	u12921
  5218  003E16  0E48               	movlw	72
  5219  003E18  19BC               	xorwf	(DHCP_Handler@v+1)& (0+255),w,b
  5220  003E1A  E106               	bnz	u12921
  5221  003E1C  0E43               	movlw	67
  5222  003E1E  19BD               	xorwf	(DHCP_Handler@v+2)& (0+255),w,b
  5223  003E20  E103               	bnz	u12921
  5224  003E22  0E4D               	movlw	77
  5225  003E24  19BE               	xorwf	(DHCP_Handler@v+3)& (0+255),w,b
  5226  003E26  A4D8               	btfss	status,2,c
  5227  003E28                     u12921:
  5228  003E28  0012               	return	
  5229                           
  5230                           ; BSR set to: 0
  5231                           ;dhcp_client.c: 186: {
  5232                           ;dhcp_client.c: 187: ETH_Dump(8);
  5233  003E2A  D8F8               	call	PL743	;call to abstracted procedure
  5234  003E2C  EC5D  F031         	call	_ETH_Dump	;wreg free
  5235                           
  5236                           ;dhcp_client.c: 188: myip = ETH_Read32();
  5237  003E30  ECFB  F02D         	call	_ETH_Read32	;wreg free
  5238  003E34  C017  F0CF         	movff	?_ETH_Read32,DHCP_Handler@myip
  5239  003E38  C018  F0D0         	movff	?_ETH_Read32+1,DHCP_Handler@myip+1
  5240  003E3C  C019  F0D1         	movff	?_ETH_Read32+2,DHCP_Handler@myip+2
  5241  003E40  C01A  F0D2         	movff	?_ETH_Read32+3,DHCP_Handler@myip+3
  5242                           
  5243                           ; BSR set to: 1
  5244                           ;dhcp_client.c: 189: ip[0] = myip & 0x00FF;
  5245  003E44  0100               	movlb	0	; () banked
  5246  003E46  51CF               	movf	DHCP_Handler@myip& (0+255),w,b
  5247  003E48  6FB3               	movwf	DHCP_Handler@ip& (0+255),b
  5248  003E4A  6BB4               	clrf	(DHCP_Handler@ip+1)& (0+255),b
  5249                           
  5250                           ; BSR set to: 0
  5251                           ;dhcp_client.c: 190: ip[1] = (myip >> 8) & 0x00FF;
  5252  003E4C  51D0               	movf	(DHCP_Handler@myip+1)& (0+255),w,b
  5253  003E4E  6FB5               	movwf	(DHCP_Handler@ip+2)& (0+255),b
  5254  003E50  6BB6               	clrf	(DHCP_Handler@ip+3)& (0+255),b
  5255                           
  5256                           ; BSR set to: 0
  5257                           ;dhcp_client.c: 191: ip[2] = (myip >> 16) & 0x00FF;
  5258  003E52  51D1               	movf	(DHCP_Handler@myip+2)& (0+255),w,b
  5259  003E54  6FB7               	movwf	(DHCP_Handler@ip+4)& (0+255),b
  5260  003E56  6BB8               	clrf	(DHCP_Handler@ip+5)& (0+255),b
  5261                           
  5262                           ; BSR set to: 0
  5263                           ;dhcp_client.c: 192: ip[3] = (myip >> 24) & 0x00FF;
  5264  003E58  C0D2  F0B9         	movff	DHCP_Handler@myip+3,DHCP_Handler@ip+6
  5265  003E5C  6BBA               	clrf	(DHCP_Handler@ip+7)& (0+255),b
  5266                           
  5267                           ; BSR set to: 0
  5268                           ;dhcp_client.c: 193: ETH_Dump(8);
  5269  003E5E  D8DE               	call	PL743	;call to abstracted procedure
  5270  003E60  EC5D  F031         	call	_ETH_Dump	;wreg free
  5271                           
  5272                           ; BSR set to: 1
  5273                           ;dhcp_client.c: 194: ETH_ReadBlock((char *)&ethPktMAC, sizeof(ethPktMAC.s));
  5274  003E64  0EC2               	movlw	low DHCP_Handler@ethPktMAC
  5275  003E66  6E17               	movwf	ETH_ReadBlock@buffer,c
  5276  003E68  6A18               	clrf	ETH_ReadBlock@buffer+1,c
  5277  003E6A  6A1A               	clrf	ETH_ReadBlock@length+1,c
  5278  003E6C  0E06               	movlw	6
  5279  003E6E  6E19               	movwf	ETH_ReadBlock@length,c
  5280  003E70  ECC9  F02D         	call	_ETH_ReadBlock	;wreg free
  5281                           
  5282                           ; BSR set to: 1
  5283                           ;dhcp_client.c: 196: if(memcmp(&ethPktMAC.s, &ethMAC.s, 6)== 0)
  5284  003E74  0EC8               	movlw	low DHCP_Handler@ethMAC
  5285  003E76  6E17               	movwf	memcmp@s2,c
  5286  003E78  6A19               	clrf	memcmp@n+1,c
  5287  003E7A  0E06               	movlw	6
  5288  003E7C  6E18               	movwf	memcmp@n,c
  5289  003E7E  0EC2               	movlw	DHCP_Handler@ethPktMAC& (0+255)
  5290  003E80  EC40  F02F         	call	_memcmp
  5291  003E84  5017               	movf	?_memcmp,w,c
  5292  003E86  1018               	iorwf	?_memcmp+1,w,c
  5293  003E88  E001 D0B6          	bnz	l8783
  5294                           
  5295                           ;dhcp_client.c: 197: {
  5296                           ;dhcp_client.c: 198: ETH_Dump(202);
  5297  003E8C  6A18               	clrf	ETH_Dump@length+1,c
  5298  003E8E  0ECA               	movlw	202
  5299  003E90  6E17               	movwf	ETH_Dump@length,c
  5300  003E92  EC5D  F031         	call	_ETH_Dump	;wreg free
  5301                           
  5302                           ;dhcp_client.c: 199: if(ETH_Read32() == 0x63825363)
  5303  003E96  ECFB  F02D         	call	_ETH_Read32	;wreg free
  5304  003E9A  0E63               	movlw	99
  5305  003E9C  1817               	xorwf	?_ETH_Read32,w,c
  5306  003E9E  E109               	bnz	u12941
  5307  003EA0  0E53               	movlw	83
  5308  003EA2  1818               	xorwf	?_ETH_Read32+1,w,c
  5309  003EA4  E106               	bnz	u12941
  5310  003EA6  0E82               	movlw	130
  5311  003EA8  1819               	xorwf	?_ETH_Read32+2,w,c
  5312  003EAA  E103               	bnz	u12941
  5313  003EAC  0E63               	movlw	99
  5314  003EAE  181A               	xorwf	?_ETH_Read32+3,w,c
  5315  003EB0  A4D8               	btfss	status,2,c
  5316  003EB2                     u12941:
  5317  003EB2  0012               	return	
  5318                           
  5319                           ; BSR set to: 1
  5320                           ;dhcp_client.c: 200: {
  5321                           ;dhcp_client.c: 201: length -= 240;
  5322  003EB4  0100               	movlb	0	; () banked
  5323  003EB6  0E10               	movlw	16
  5324  003EB8  27AF               	addwf	DHCP_Handler@length& (0+255),f,b
  5325  003EBA  0EFF               	movlw	255
  5326  003EBC  23B0               	addwfc	(DHCP_Handler@length+1)& (0+255),f,b
  5327                           
  5328                           ;dhcp_client.c: 202: while(length>0)
  5329  003EBE  D08D               	goto	l8777
  5330  003EC0                     l8729:
  5331                           
  5332                           ; BSR set to: 0
  5333                           ;dhcp_client.c: 203: {
  5334                           ;dhcp_client.c: 205: uint8_t option, optionLength;
  5335                           ;dhcp_client.c: 206: option = ETH_Read8();
  5336  003EC0  ECB9  F031         	call	_ETH_Read8	;wreg free
  5337  003EC4  0100               	movlb	0	; () banked
  5338  003EC6  6FC1               	movwf	DHCP_Handler@option& (0+255),b
  5339                           
  5340                           ;dhcp_client.c: 207: optionLength = ETH_Read8();
  5341  003EC8  ECB9  F031         	call	_ETH_Read8	;wreg free
  5342  003ECC  0100               	movlb	0	; () banked
  5343  003ECE  6FCE               	movwf	DHCP_Handler@optionLength& (0+255),b
  5344                           
  5345                           ; BSR set to: 0
  5346                           ;dhcp_client.c: 208: length -= 2 + optionLength;
  5347  003ED0  51CE               	movf	DHCP_Handler@optionLength& (0+255),w,b
  5348  003ED2  6FB1               	movwf	??_DHCP_Handler& (0+255),b
  5349  003ED4  6BB2               	clrf	(??_DHCP_Handler+1)& (0+255),b
  5350  003ED6  0E02               	movlw	2
  5351  003ED8  27B1               	addwf	??_DHCP_Handler& (0+255),f,b
  5352  003EDA  0E00               	movlw	0
  5353  003EDC  23B2               	addwfc	(??_DHCP_Handler+1)& (0+255),f,b
  5354  003EDE  51B1               	movf	??_DHCP_Handler& (0+255),w,b
  5355  003EE0  5FAF               	subwf	DHCP_Handler@length& (0+255),f,b
  5356  003EE2  51B2               	movf	(??_DHCP_Handler+1)& (0+255),w,b
  5357  003EE4  5BB0               	subwfb	(DHCP_Handler@length+1)& (0+255),f,b
  5358                           
  5359                           ;dhcp_client.c: 209: switch(option)
  5360  003EE6  D06B               	goto	l8775
  5361  003EE8                     l8733:
  5362                           
  5363                           ; BSR set to: 0
  5364                           ;dhcp_client.c: 212: ipv4SubnetMask = ETH_Read32();
  5365  003EE8  ECFB  F02D         	call	_ETH_Read32	;wreg free
  5366  003EEC  C017  F1C5         	movff	?_ETH_Read32,_ipv4SubnetMask
  5367  003EF0  C018  F1C6         	movff	?_ETH_Read32+1,_ipv4SubnetMask+1
  5368  003EF4  C019  F1C7         	movff	?_ETH_Read32+2,_ipv4SubnetMask+2
  5369  003EF8  C01A  F1C8         	movff	?_ETH_Read32+3,_ipv4SubnetMask+3
  5370                           
  5371                           ;dhcp_client.c: 213: break;
  5372  003EFC  D06E               	goto	l8777
  5373  003EFE                     l8735:
  5374                           
  5375                           ; BSR set to: 0
  5376                           ;dhcp_client.c: 215: ipv4Router = ETH_Read32();
  5377  003EFE  ECFB  F02D         	call	_ETH_Read32	;wreg free
  5378  003F02  C017  F224         	movff	?_ETH_Read32,_ipv4Router
  5379  003F06  C018  F225         	movff	?_ETH_Read32+1,_ipv4Router+1
  5380  003F0A  C019  F226         	movff	?_ETH_Read32+2,_ipv4Router+2
  5381  003F0E  C01A  F227         	movff	?_ETH_Read32+3,_ipv4Router+3
  5382                           
  5383                           ;dhcp_client.c: 216: break;
  5384  003F12  D063               	goto	l8777
  5385  003F14                     l8737:
  5386                           
  5387                           ; BSR set to: 0
  5388                           ;dhcp_client.c: 219: if(optionLength >= 4)
  5389  003F14  0E03               	movlw	3
  5390  003F16  65CE               	cpfsgt	DHCP_Handler@optionLength& (0+255),b
  5391  003F18  D060               	goto	l8777
  5392                           
  5393                           ; BSR set to: 0
  5394                           ;dhcp_client.c: 220: {
  5395                           ;dhcp_client.c: 221: ipv4DNS[0] = ETH_Read32();
  5396  003F1A  ECFB  F02D         	call	_ETH_Read32	;wreg free
  5397  003F1E  C017  F210         	movff	?_ETH_Read32,_ipv4DNS
  5398  003F22  C018  F211         	movff	?_ETH_Read32+1,_ipv4DNS+1
  5399  003F26  C019  F212         	movff	?_ETH_Read32+2,_ipv4DNS+2
  5400  003F2A  C01A  F213         	movff	?_ETH_Read32+3,_ipv4DNS+3
  5401                           
  5402                           ; BSR set to: 1
  5403                           ;dhcp_client.c: 222: optionLength -= 4;
  5404  003F2E  0E04               	movlw	4
  5405  003F30  0100               	movlb	0	; () banked
  5406  003F32  5FCE               	subwf	DHCP_Handler@optionLength& (0+255),f,b
  5407                           
  5408                           ; BSR set to: 0
  5409                           ;dhcp_client.c: 223: if(optionLength >= 4)
  5410  003F34  0E03               	movlw	3
  5411  003F36  65CE               	cpfsgt	DHCP_Handler@optionLength& (0+255),b
  5412  003F38  D050               	goto	l8777
  5413                           
  5414                           ; BSR set to: 0
  5415                           ;dhcp_client.c: 224: {
  5416                           ;dhcp_client.c: 225: ipv4DNS[1] = ETH_Read32();
  5417  003F3A  ECFB  F02D         	call	_ETH_Read32	;wreg free
  5418  003F3E  C017  F214         	movff	?_ETH_Read32,_ipv4DNS+4
  5419  003F42  C018  F215         	movff	?_ETH_Read32+1,_ipv4DNS+5
  5420  003F46  C019  F216         	movff	?_ETH_Read32+2,_ipv4DNS+6
  5421  003F4A  C01A  F217         	movff	?_ETH_Read32+3,_ipv4DNS+7
  5422  003F4E                     l8747:
  5423                           
  5424                           ; BSR set to: 1
  5425                           ;dhcp_client.c: 226: optionLength -= 4;
  5426  003F4E  0E04               	movlw	4
  5427  003F50  0100               	movlb	0	; () banked
  5428  003F52  5FCE               	subwf	DHCP_Handler@optionLength& (0+255),f,b
  5429  003F54  D042               	goto	l8777
  5430  003F56                     l8749:
  5431                           
  5432                           ; BSR set to: 0
  5433                           ;dhcp_client.c: 231: if(optionLength >= 4)
  5434  003F56  0E03               	movlw	3
  5435  003F58  65CE               	cpfsgt	DHCP_Handler@optionLength& (0+255),b
  5436  003F5A  D03F               	goto	l8777
  5437                           
  5438                           ; BSR set to: 0
  5439                           ;dhcp_client.c: 232: {
  5440                           ;dhcp_client.c: 233: dhcpLeaseTime = ETH_Read32();
  5441  003F5C  ECFB  F02D         	call	_ETH_Read32	;wreg free
  5442  003F60  C017  F034         	movff	?_ETH_Read32,_dhcpLeaseTime
  5443  003F64  C018  F035         	movff	?_ETH_Read32+1,_dhcpLeaseTime+1
  5444  003F68  C019  F036         	movff	?_ETH_Read32+2,_dhcpLeaseTime+2
  5445  003F6C  C01A  F037         	movff	?_ETH_Read32+3,_dhcpLeaseTime+3
  5446  003F70  D7EE               	goto	l8747
  5447  003F72                     l8755:
  5448                           
  5449                           ; BSR set to: 0
  5450                           ;dhcp_client.c: 238: dhcpServerId = ETH_Read32();
  5451  003F72  ECFB  F02D         	call	_ETH_Read32	;wreg free
  5452  003F76  C017  F220         	movff	?_ETH_Read32,_dhcpServerId
  5453  003F7A  C018  F221         	movff	?_ETH_Read32+1,_dhcpServerId+1
  5454  003F7E  C019  F222         	movff	?_ETH_Read32+2,_dhcpServerId+2
  5455  003F82  C01A  F223         	movff	?_ETH_Read32+3,_dhcpServerId+3
  5456  003F86  D7E3               	goto	l8747
  5457  003F88                     l801:
  5458                           
  5459                           ; BSR set to: 1
  5460                           ;dhcp_client.c: 245: ipv4Address = myip;
  5461  003F88  D840               	call	PL609	;call to abstracted procedure
  5462                           
  5463                           ; BSR set to: 1
  5464                           ;dhcp_client.c: 246: clientState = REQUESTING;
  5465  003F8A  0E04               	movlw	4
  5466  003F8C  D004               	goto	L3
  5467  003F8E                     l803:
  5468                           
  5469                           ; BSR set to: 1
  5470                           ;dhcp_client.c: 249: ipv4Address = myip;
  5471  003F8E  D83D               	call	PL609	;call to abstracted procedure
  5472                           
  5473                           ; BSR set to: 1
  5474                           ;dhcp_client.c: 250: clientState = BOUND;
  5475  003F90  0E05               	movlw	5
  5476  003F92  D001               	goto	L3
  5477  003F94                     l8763:
  5478                           
  5479                           ; BSR set to: 1
  5480                           ;dhcp_client.c: 254: clientState = INIT;
  5481  003F94  0E01               	movlw	1
  5482  003F96                     L3:
  5483  003F96  0100               	movlb	0	; () banked
  5484  003F98  6FFF               	movwf	_clientState& (0+255),b
  5485                           
  5486                           ;dhcp_client.c: 255: break;
  5487  003F9A  D008               	goto	l8769
  5488  003F9C                     l8767:
  5489                           
  5490                           ; BSR set to: 0
  5491  003F9C  ECB9  F031         	call	_ETH_Read8	;wreg free
  5492                           
  5493                           ; Switch size 1, requested type "space"
  5494                           ; Number of cases is 3, Range of values is 2 to 6
  5495                           ; switch strategies available:
  5496                           ; Name         Instructions Cycles
  5497                           ; simple_byte           10     6 (average)
  5498                           ;	Chosen strategy is simple_byte
  5499  003FA0  0A02               	xorlw	2	; case 2
  5500  003FA2  E0F2               	bz	l801
  5501  003FA4  0A07               	xorlw	7	; case 5
  5502  003FA6  E0F3               	bz	l803
  5503  003FA8  0A03               	xorlw	3	; case 6
  5504  003FAA  E0F4               	bz	l8763
  5505  003FAC                     l8769:
  5506                           
  5507                           ;dhcp_client.c: 259: optionLength -=1;
  5508  003FAC  0100               	movlb	0	; () banked
  5509  003FAE  07CE               	decf	DHCP_Handler@optionLength& (0+255),f,b
  5510                           
  5511                           ;dhcp_client.c: 260: break;
  5512  003FB0  D014               	goto	l8777
  5513  003FB2                     l8771:
  5514                           
  5515                           ; BSR set to: 0
  5516                           ;dhcp_client.c: 262: ETH_Dump(optionLength);
  5517  003FB2  C0CE  F017         	movff	DHCP_Handler@optionLength,ETH_Dump@length
  5518  003FB6  6A18               	clrf	ETH_Dump@length+1,c
  5519  003FB8  EC5D  F031         	call	_ETH_Dump	;wreg free
  5520                           
  5521                           ;dhcp_client.c: 263: break;
  5522  003FBC  D00E               	goto	l8777
  5523  003FBE                     l8775:
  5524                           
  5525                           ; BSR set to: 0
  5526  003FBE  51C1               	movf	DHCP_Handler@option& (0+255),w,b
  5527                           
  5528                           ; Switch size 1, requested type "space"
  5529                           ; Number of cases is 6, Range of values is 1 to 54
  5530                           ; switch strategies available:
  5531                           ; Name         Instructions Cycles
  5532                           ; simple_byte           19    10 (average)
  5533                           ;	Chosen strategy is simple_byte
  5534  003FC0  0A01               	xorlw	1	; case 1
  5535  003FC2  E092               	bz	l8733
  5536  003FC4  0A02               	xorlw	2	; case 3
  5537  003FC6  E09B               	bz	l8735
  5538  003FC8  0A05               	xorlw	5	; case 6
  5539  003FCA  E0A4               	bz	l8737
  5540  003FCC  0A35               	xorlw	53	; case 51
  5541  003FCE  E0C3               	bz	l8749
  5542  003FD0  0A06               	xorlw	6	; case 53
  5543  003FD2  E0E4               	bz	l8767
  5544  003FD4  0A03               	xorlw	3	; case 54
  5545  003FD6  E0CD               	bz	l8755
  5546  003FD8  D7EC               	goto	l8771
  5547  003FDA                     l8777:
  5548  003FDA  0100               	movlb	0	; () banked
  5549  003FDC  BFB0               	btfsc	(DHCP_Handler@length+1)& (0+255),7,b
  5550  003FDE  D005               	goto	l8779
  5551  003FE0  51B0               	movf	(DHCP_Handler@length+1)& (0+255),w,b
  5552  003FE2  E102               	bnz	u12981
  5553  003FE4  05AF               	decf	DHCP_Handler@length& (0+255),w,b
  5554  003FE6  B0D8               	btfsc	status,0,c
  5555  003FE8                     u12981:
  5556  003FE8  D76B               	goto	l8729
  5557  003FEA                     l8779:
  5558                           
  5559                           ; BSR set to: 0
  5560                           ;dhcp_client.c: 265: }
  5561                           ;dhcp_client.c: 266: if (clientState == REQUESTING)
  5562  003FEA  0E04               	movlw	4
  5563  003FEC  19FF               	xorwf	_clientState& (0+255),w,b
  5564  003FEE  A4D8               	btfss	status,2,c
  5565  003FF0  0012               	return	
  5566                           
  5567                           ; BSR set to: 0
  5568                           ;dhcp_client.c: 267: DHCP_Request( DHCP_REQUEST );
  5569  003FF2  0E03               	movlw	3
  5570  003FF4  EF49  F022         	goto	_DHCP_Request
  5571  003FF8                     l8783:
  5572                           
  5573                           ;dhcp_client.c: 270: else
  5574                           ;dhcp_client.c: 271: ETH_Dump(length - 34);
  5575  003FF8  0EDE               	movlw	222
  5576  003FFA  0100               	movlb	0	; () banked
  5577  003FFC  25AF               	addwf	DHCP_Handler@length& (0+255),w,b
  5578  003FFE  6E17               	movwf	ETH_Dump@length,c
  5579  004000  0EFF               	movlw	255
  5580  004002  21B0               	addwfc	(DHCP_Handler@length+1)& (0+255),w,b
  5581  004004  6E18               	movwf	ETH_Dump@length+1,c
  5582  004006  EF5D  F031         	goto	_ETH_Dump	;wreg free
  5583  00400A                     __end_of_DHCP_Handler:
  5584                           	opt stack 0
  5585  00400A                     PL609:
  5586                           	opt stack 12
  5587  00400A  C0CF  F038         	movff	DHCP_Handler@myip,_ipv4Address
  5588  00400E  C0D0  F039         	movff	DHCP_Handler@myip+1,_ipv4Address+1
  5589  004012  C0D1  F03A         	movff	DHCP_Handler@myip+2,_ipv4Address+2
  5590  004016  C0D2  F03B         	movff	DHCP_Handler@myip+3,_ipv4Address+3
  5591  00401A  0012               	return	
  5592  00401C                     __end_ofPL609:
  5593                           	opt stack 0
  5594  00401C                     PL743:
  5595                           	opt stack 12
  5596  00401C  6A18               	clrf	ETH_Dump@length+1,c
  5597  00401E  0E08               	movlw	8
  5598  004020  6E17               	movwf	ETH_Dump@length,c
  5599  004022  0C08               	retlw	8
  5600  004024                     __end_ofPL743:
  5601                           	opt stack 0
  5602                           tosu	equ	0xFFF
  5603                           tosh	equ	0xFFE
  5604                           tosl	equ	0xFFD
  5605                           pclath	equ	0xFFA
  5606                           tblptru	equ	0xFF8
  5607                           tblptrh	equ	0xFF7
  5608                           tblptrl	equ	0xFF6
  5609                           tablat	equ	0xFF5
  5610                           prodh	equ	0xFF4
  5611                           prodl	equ	0xFF3
  5612                           intcon	equ	0xFF2
  5613                           indf0	equ	0xFEF
  5614                           postinc0	equ	0xFEE
  5615                           fsr0h	equ	0xFEA
  5616                           fsr0l	equ	0xFE9
  5617                           wreg	equ	0xFE8
  5618                           postinc1	equ	0xFE6
  5619                           postdec1	equ	0xFE5
  5620                           plusw1	equ	0xFE3
  5621                           fsr1h	equ	0xFE2
  5622                           fsr1l	equ	0xFE1
  5623                           bsr	equ	0xFE0
  5624                           indf2	equ	0xFDF
  5625                           postinc2	equ	0xFDE
  5626                           postdec2	equ	0xFDD
  5627                           plusw2	equ	0xFDB
  5628                           fsr2h	equ	0xFDA
  5629                           fsr2l	equ	0xFD9
  5630                           status	equ	0xFD8
  5631                           
  5632 ;; *************** function _memcmp *****************
  5633 ;; Defined at:
  5634 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memcmp.c"
  5635 ;; Parameters:    Size  Location     Type
  5636 ;;  s1              1    wreg     PTR const void 
  5637 ;;		 -> DHCP_Handler@ethPktMAC(6), 
  5638 ;;  s2              1   22[COMRAM] PTR const void 
  5639 ;;		 -> DHCP_Handler@ethMAC(6), 
  5640 ;;  n               2   23[COMRAM] unsigned int 
  5641 ;; Auto vars:     Size  Location     Type
  5642 ;;  s1              1   27[COMRAM] PTR const void 
  5643 ;;		 -> DHCP_Handler@ethPktMAC(6), 
  5644 ;; Return value:  Size  Location     Type
  5645 ;;                  2   22[COMRAM] int 
  5646 ;; Registers used:
  5647 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5648 ;; Tracked objects:
  5649 ;;		On entry : F/1
  5650 ;;		On exit  : 0/0
  5651 ;;		Unchanged: 0/0
  5652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5653 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5654 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5655 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5656 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5657 ;;Total ram usage:        6 bytes
  5658 ;; Hardware stack levels used:    1
  5659 ;; Hardware stack levels required when called:    8
  5660 ;; This function calls:
  5661 ;;		Nothing
  5662 ;; This function is called by:
  5663 ;;		_DHCP_Handler
  5664 ;; This function uses a non-reentrant model
  5665 ;;
  5666                           
  5667                           	psect	text18
  5668  005E80                     __ptext18:
  5669                           	opt stack 0
  5670  005E80                     _memcmp:
  5671                           	opt stack 17
  5672                           
  5673                           ;incstack = 0
  5674                           ;memcmp@s1 stored from wreg
  5675  005E80  6E1C               	movwf	memcmp@s1,c
  5676  005E82  D01A               	goto	l8651
  5677  005E84                     l8643:
  5678  005E84  5017               	movf	memcmp@s2,w,c
  5679  005E86  6ED9               	movwf	fsr2l,c
  5680  005E88  6ADA               	clrf	fsr2h,c
  5681  005E8A  501C               	movf	memcmp@s1,w,c
  5682  005E8C  6EE1               	movwf	fsr1l,c
  5683  005E8E  6AE2               	clrf	fsr1h,c
  5684  005E90  50DE               	movf	postinc2,w,c
  5685  005E92  18E6               	xorwf	postinc1,w,c
  5686  005E94  E00F               	bz	l8649
  5687  005E96  501C               	movf	memcmp@s1,w,c
  5688  005E98  6ED9               	movwf	fsr2l,c
  5689  005E9A  6ADA               	clrf	fsr2h,c
  5690  005E9C  50DF               	movf	indf2,w,c
  5691  005E9E  6E1A               	movwf	??_memcmp& (0+255),c
  5692  005EA0  5017               	movf	memcmp@s2,w,c
  5693  005EA2  6ED9               	movwf	fsr2l,c
  5694  005EA4  6ADA               	clrf	fsr2h,c
  5695  005EA6  50DF               	movf	indf2,w,c
  5696  005EA8  5C1A               	subwf	??_memcmp,w,c
  5697  005EAA  6E17               	movwf	?_memcmp,c
  5698  005EAC  6A18               	clrf	?_memcmp+1,c
  5699  005EAE  A0D8               	btfss	status,0,c
  5700  005EB0  0618               	decf	?_memcmp+1,f,c
  5701  005EB2  0012               	return	
  5702  005EB4                     l8649:
  5703  005EB4  2A1C               	incf	memcmp@s1,f,c
  5704  005EB6  2A17               	incf	memcmp@s2,f,c
  5705  005EB8                     l8651:
  5706  005EB8  0618               	decf	memcmp@n,f,c
  5707  005EBA  A0D8               	btfss	status,0,c
  5708  005EBC  0619               	decf	memcmp@n+1,f,c
  5709  005EBE  2818               	incf	memcmp@n,w,c
  5710  005EC0  E1E1               	bnz	l8643
  5711  005EC2  2819               	incf	memcmp@n+1,w,c
  5712  005EC4  E1DF               	bnz	l8643
  5713  005EC6  6A17               	clrf	?_memcmp,c
  5714  005EC8  6A18               	clrf	?_memcmp+1,c
  5715  005ECA  0012               	return		;funcret
  5716  005ECC                     __end_of_memcmp:
  5717                           	opt stack 0
  5718                           tosu	equ	0xFFF
  5719                           tosh	equ	0xFFE
  5720                           tosl	equ	0xFFD
  5721                           pclath	equ	0xFFA
  5722                           tblptru	equ	0xFF8
  5723                           tblptrh	equ	0xFF7
  5724                           tblptrl	equ	0xFF6
  5725                           tablat	equ	0xFF5
  5726                           prodh	equ	0xFF4
  5727                           prodl	equ	0xFF3
  5728                           intcon	equ	0xFF2
  5729                           indf0	equ	0xFEF
  5730                           postinc0	equ	0xFEE
  5731                           fsr0h	equ	0xFEA
  5732                           fsr0l	equ	0xFE9
  5733                           wreg	equ	0xFE8
  5734                           postinc1	equ	0xFE6
  5735                           postdec1	equ	0xFE5
  5736                           plusw1	equ	0xFE3
  5737                           fsr1h	equ	0xFE2
  5738                           fsr1l	equ	0xFE1
  5739                           bsr	equ	0xFE0
  5740                           indf2	equ	0xFDF
  5741                           postinc2	equ	0xFDE
  5742                           postdec2	equ	0xFDD
  5743                           plusw2	equ	0xFDB
  5744                           fsr2h	equ	0xFDA
  5745                           fsr2l	equ	0xFD9
  5746                           status	equ	0xFD8
  5747                           
  5748 ;; *************** function _ETH_Read32 *****************
  5749 ;; Defined at:
  5750 ;;		line 420 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
  5751 ;; Parameters:    Size  Location     Type
  5752 ;;		None
  5753 ;; Auto vars:     Size  Location     Type
  5754 ;;  ret             4   26[COMRAM] unsigned long 
  5755 ;; Return value:  Size  Location     Type
  5756 ;;                  4   22[COMRAM] unsigned long 
  5757 ;; Registers used:
  5758 ;;		wreg, status,2, status,0, cstack
  5759 ;; Tracked objects:
  5760 ;;		On entry : E/1
  5761 ;;		On exit  : F/1
  5762 ;;		Unchanged: 0/0
  5763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5764 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5765 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5767 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5768 ;;Total ram usage:        8 bytes
  5769 ;; Hardware stack levels used:    1
  5770 ;; Hardware stack levels required when called:    9
  5771 ;; This function calls:
  5772 ;;		_ETH_EdataRead
  5773 ;; This function is called by:
  5774 ;;		_DHCP_Handler
  5775 ;; This function uses a non-reentrant model
  5776 ;;
  5777                           
  5778                           	psect	text19
  5779  005BF6                     __ptext19:
  5780                           	opt stack 0
  5781  005BF6                     _ETH_Read32:
  5782                           	opt stack 16
  5783                           
  5784                           ;j60_driver.c: 422: uint32_t ret = 0;
  5785                           
  5786                           ;incstack = 0
  5787  005BF6  6A1B               	clrf	ETH_Read32@ret,c
  5788  005BF8  6A1C               	clrf	ETH_Read32@ret+1,c
  5789  005BFA  6A1D               	clrf	ETH_Read32@ret+2,c
  5790  005BFC  6A1E               	clrf	ETH_Read32@ret+3,c
  5791                           
  5792                           ;j60_driver.c: 423: if(rxPacketStatusVector.byteCount >= sizeof(ret))
  5793  005BFE  0101               	movlb	1	; () banked
  5794  005C00  51CA               	movf	(_rxPacketStatusVector+1)& (0+255),w,b
  5795  005C02  E103               	bnz	u12460
  5796  005C04  0E04               	movlw	4
  5797  005C06  5DC9               	subwf	_rxPacketStatusVector& (0+255),w,b
  5798  005C08  E318               	bnc	l535
  5799  005C0A                     u12460:
  5800  005C0A                     i1L__ptext102:
  5801                           	opt stack 0
  5802  005C0A                     i1L_ETH_EdataRead:
  5803                           	opt stack 0
  5804  005C0A                     i1Ll7815:
  5805                           	opt stack 15
  5806  005C0A  CF61 FE7E          	movff	3937,_errataTemp	;# 
  5807  005C0E                     i1Ll7817:
  5808                           	opt stack 15
  5809                           
  5810                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
  5811  005C0E  010E               	movlb	14	; () banked
  5812  005C10  517E               	movf	126,w,b
  5813  005C12                     i1Ll460:
  5814                           	opt stack 16
  5815  005C12  6E1E               	movwf	ETH_Read32@ret+3,c
  5816  005C14                     i2L__ptext102:
  5817                           	opt stack 0
  5818  005C14                     i2L_ETH_EdataRead:
  5819                           	opt stack 0
  5820  005C14                     i2Ll7815:
  5821                           	opt stack 15
  5822  005C14  CF61 FE7E          	movff	3937,_errataTemp	;# 
  5823  005C18                     i2Ll7817:
  5824                           	opt stack 15
  5825                           
  5826                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
  5827  005C18  010E               	movlb	14	; () banked
  5828  005C1A  517E               	movf	126,w,b
  5829  005C1C                     i2Ll460:
  5830                           	opt stack 16
  5831  005C1C  6E1D               	movwf	ETH_Read32@ret+2,c
  5832  005C1E                     i3L__ptext102:
  5833                           	opt stack 0
  5834  005C1E                     i3L_ETH_EdataRead:
  5835                           	opt stack 0
  5836  005C1E                     i3Ll7815:
  5837                           	opt stack 15
  5838  005C1E  CF61 FE7E          	movff	3937,_errataTemp	;# 
  5839  005C22                     i3Ll7817:
  5840                           	opt stack 15
  5841                           
  5842                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
  5843  005C22  010E               	movlb	14	; () banked
  5844  005C24  517E               	movf	126,w,b
  5845  005C26                     i3Ll460:
  5846                           	opt stack 16
  5847  005C26  6E1C               	movwf	ETH_Read32@ret+1,c
  5848  005C28                     i4L__ptext102:
  5849                           	opt stack 0
  5850  005C28                     i4L_ETH_EdataRead:
  5851                           	opt stack 0
  5852  005C28                     i4Ll7815:
  5853                           	opt stack 15
  5854  005C28  CF61 FE7E          	movff	3937,_errataTemp	;# 
  5855  005C2C                     i4Ll7817:
  5856                           	opt stack 15
  5857                           
  5858                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
  5859  005C2C  010E               	movlb	14	; () banked
  5860  005C2E  517E               	movf	126,w,b
  5861  005C30                     i4Ll460:
  5862                           	opt stack 16
  5863  005C30  6E1B               	movwf	ETH_Read32@ret,c
  5864                           
  5865                           ; BSR set to: 14
  5866                           ;j60_driver.c: 429: rxPacketStatusVector.byteCount -= sizeof(ret);
  5867  005C32  0E04               	movlw	4
  5868                           
  5869                           ; BSR set to: 1
  5870                           ;j60_driver.c: 430: ethData.error = 0;
  5871  005C34  EC60  F030         	call	PL679	;call to abstracted procedure
  5872                           
  5873                           ;j60_driver.c: 431: }
  5874  005C38  D001               	goto	l536
  5875  005C3A                     l535:
  5876                           
  5877                           ; BSR set to: 1
  5878                           ;j60_driver.c: 432: else
  5879                           ;j60_driver.c: 433: {
  5880                           ;j60_driver.c: 434: ethData.error = 1;
  5881  005C3A  81BE               	bsf	_ethData& (0+255),0,b	;volatile
  5882  005C3C                     l536:
  5883                           
  5884                           ; BSR set to: 1
  5885                           ;j60_driver.c: 435: }
  5886                           ;j60_driver.c: 436: return ret;
  5887  005C3C  C01B  F017         	movff	ETH_Read32@ret,?_ETH_Read32
  5888  005C40  C01C  F018         	movff	ETH_Read32@ret+1,?_ETH_Read32+1
  5889  005C44  C01D  F019         	movff	ETH_Read32@ret+2,?_ETH_Read32+2
  5890  005C48  C01E  F01A         	movff	ETH_Read32@ret+3,?_ETH_Read32+3
  5891                           
  5892                           ; BSR set to: 1
  5893  005C4C  0012               	return		;funcret
  5894  005C4E                     __end_of_ETH_Read32:
  5895                           	opt stack 0
  5896                           tosu	equ	0xFFF
  5897                           tosh	equ	0xFFE
  5898                           tosl	equ	0xFFD
  5899                           pclath	equ	0xFFA
  5900                           tblptru	equ	0xFF8
  5901                           tblptrh	equ	0xFF7
  5902                           tblptrl	equ	0xFF6
  5903                           tablat	equ	0xFF5
  5904                           prodh	equ	0xFF4
  5905                           prodl	equ	0xFF3
  5906                           intcon	equ	0xFF2
  5907                           indf0	equ	0xFEF
  5908                           postinc0	equ	0xFEE
  5909                           fsr0h	equ	0xFEA
  5910                           fsr0l	equ	0xFE9
  5911                           wreg	equ	0xFE8
  5912                           postinc1	equ	0xFE6
  5913                           postdec1	equ	0xFE5
  5914                           plusw1	equ	0xFE3
  5915                           fsr1h	equ	0xFE2
  5916                           fsr1l	equ	0xFE1
  5917                           bsr	equ	0xFE0
  5918                           indf2	equ	0xFDF
  5919                           postinc2	equ	0xFDE
  5920                           postdec2	equ	0xFDD
  5921                           plusw2	equ	0xFDB
  5922                           fsr2h	equ	0xFDA
  5923                           fsr2l	equ	0xFD9
  5924                           status	equ	0xFD8
  5925                           
  5926 ;; *************** function _TCP_Recv *****************
  5927 ;; Defined at:
  5928 ;;		line 483 in file "../../TCPIP Library/source/tcpv4.c"
  5929 ;; Parameters:    Size  Location     Type
  5930 ;;  remoteAddres    4   17[BANK1 ] unsigned long 
  5931 ;;  length          2   21[BANK1 ] unsigned int 
  5932 ;; Auto vars:     Size  Location     Type
  5933 ;;  tcbPtr          2   52[BANK1 ] PTR struct .
  5934 ;;		 -> ?_sprintf(2), ?_printf(2), main@str(32), STR_8(13), 
  5935 ;;		 -> STR_7(17), DEMO_TCP_Client@txdataPort60(80), DEMO_TCP_Client@strTmp(17), DEMO_TCP_Client@rxdataPort60(50), 
  5936 ;;		 -> DEMO_TCP_Client@port60TCB(55), Network_Read@debug_str(80), STR_1(15), NULL(0), 
  5937 ;;  count           1   51[BANK1 ] char 
  5938 ;; Return value:  Size  Location     Type
  5939 ;;		None               void
  5940 ;; Registers used:
  5941 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5942 ;; Tracked objects:
  5943 ;;		On entry : F/1
  5944 ;;		On exit  : F/1
  5945 ;;		Unchanged: 0/0
  5946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5947 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5948 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5949 ;;      Temps:          0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5950 ;;      Totals:         0       0      37       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5951 ;;Total ram usage:       37 bytes
  5952 ;; Hardware stack levels used:    1
  5953 ;; Hardware stack levels required when called:   15
  5954 ;; This function calls:
  5955 ;;		_ETH_ReadBlock
  5956 ;;		_TCP_FiniteStateMachine
  5957 ;;		_TCP_ParseTCPOptions
  5958 ;; This function is called by:
  5959 ;;		_IPV4_Packet
  5960 ;; This function uses a non-reentrant model
  5961 ;;
  5962                           
  5963                           	psect	text20
  5964  003144                     __ptext20:
  5965                           	opt stack 0
  5966  003144                     _TCP_Recv:
  5967                           	opt stack 12
  5968                           
  5969                           ; BSR set to: 1
  5970                           ;tcpv4.c: 485: tcpTCB_t *tcbPtr;
  5971                           ;tcpv4.c: 486: socklistsize_t count = 0;
  5972                           
  5973                           ; BSR set to: 1
  5974                           ;incstack = 0
  5975  003144  6B33               	clrf	TCP_Recv@count& (0+255),b
  5976                           
  5977                           ;tcpv4.c: 490: receivedRemoteAddress = 0;
  5978  003146  6A3C               	clrf	_receivedRemoteAddress,c
  5979  003148  6A3D               	clrf	_receivedRemoteAddress+1,c
  5980  00314A  6A3E               	clrf	_receivedRemoteAddress+2,c
  5981  00314C  6A3F               	clrf	_receivedRemoteAddress+3,c
  5982                           
  5983                           ;tcpv4.c: 491: rcvPayloadLen = 0;
  5984  00314E  6BCF               	clrf	_rcvPayloadLen& (0+255),b
  5985  003150  6BD0               	clrf	(_rcvPayloadLen+1)& (0+255),b
  5986                           
  5987                           ; BSR set to: 1
  5988                           ;tcpv4.c: 493: ETH_ReadBlock((char *)&tcpHeader,sizeof(tcpHeader_t));
  5989  003152  0ED1               	movlw	low _tcpHeader
  5990  003154  6E17               	movwf	ETH_ReadBlock@buffer,c
  5991  003156  0E01               	movlw	high _tcpHeader
  5992  003158  D9D9               	call	PL705	;call to abstracted procedure
  5993  00315A  ECC9  F02D         	call	_ETH_ReadBlock	;wreg free
  5994                           
  5995                           ; BSR set to: 1
  5996                           ;tcpv4.c: 495: currentTCB = (0);
  5997  00315E  6A40               	clrf	_currentTCB,c
  5998  003160  6A41               	clrf	_currentTCB+1,c
  5999                           
  6000                           ; BSR set to: 1
  6001                           ;tcpv4.c: 498: if ((tcpHeader.destPort != 0) && (tcpHeader.sourcePort != 0))
  6002  003162  51D3               	movf	(_tcpHeader+2)& (0+255),w,b
  6003  003164  11D4               	iorwf	(_tcpHeader+3)& (0+255),w,b
  6004  003166  B4D8               	btfsc	status,2,c
  6005  003168  0012               	return	
  6006                           
  6007                           ; BSR set to: 1
  6008  00316A  51D1               	movf	_tcpHeader& (0+255),w,b
  6009  00316C  11D2               	iorwf	(_tcpHeader+1)& (0+255),w,b
  6010  00316E  B4D8               	btfsc	status,2,c
  6011  003170  0012               	return	
  6012                           
  6013                           ; BSR set to: 1
  6014                           ;tcpv4.c: 499: {
  6015                           ;tcpv4.c: 500: tcpHeader.sourcePort = ((((uint16_t)tcpHeader.sourcePort & (uint16_t)0xFF
      +                          00) >> 8) | (((uint16_t)tcpHeader.sourcePort & (uint16_t)0x00FF) << 8));
  6016  003172  51D1               	movf	_tcpHeader& (0+255),w,b
  6017  003174  6F18               	movwf	(??_TCP_Recv+1)& (0+255),b
  6018  003176  6B17               	clrf	??_TCP_Recv& (0+255),b
  6019  003178  51D2               	movf	(_tcpHeader+1)& (0+255),w,b
  6020  00317A  6F19               	movwf	(??_TCP_Recv+2)& (0+255),b
  6021  00317C  6B1A               	clrf	(??_TCP_Recv+3)& (0+255),b
  6022  00317E  5117               	movf	??_TCP_Recv& (0+255),w,b
  6023  003180  1119               	iorwf	(??_TCP_Recv+2)& (0+255),w,b
  6024  003182  6FD1               	movwf	_tcpHeader& (0+255),b
  6025  003184  5118               	movf	(??_TCP_Recv+1)& (0+255),w,b
  6026  003186  111A               	iorwf	(??_TCP_Recv+3)& (0+255),w,b
  6027  003188  6FD2               	movwf	(_tcpHeader+1)& (0+255),b
  6028                           
  6029                           ; BSR set to: 1
  6030                           ;tcpv4.c: 501: tcpHeader.destPort = ((((uint16_t)tcpHeader.destPort & (uint16_t)0xFF00) 
      +                          >> 8) | (((uint16_t)tcpHeader.destPort & (uint16_t)0x00FF) << 8));
  6031  00318A  51D3               	movf	(_tcpHeader+2)& (0+255),w,b
  6032  00318C  6F18               	movwf	(??_TCP_Recv+1)& (0+255),b
  6033  00318E  6B17               	clrf	??_TCP_Recv& (0+255),b
  6034  003190  EE21  F0D3         	lfsr	2,_tcpHeader+2
  6035  003194  CFDE F119          	movff	postinc2,??_TCP_Recv+2
  6036  003198  CFDD F11A          	movff	postdec2,??_TCP_Recv+3
  6037  00319C  C11A  F119         	movff	??_TCP_Recv+3,??_TCP_Recv+2
  6038  0031A0  6B1A               	clrf	(??_TCP_Recv+3)& (0+255),b
  6039  0031A2  6B1A               	clrf	(??_TCP_Recv+3)& (0+255),b
  6040  0031A4  5117               	movf	??_TCP_Recv& (0+255),w,b
  6041  0031A6  1119               	iorwf	(??_TCP_Recv+2)& (0+255),w,b
  6042  0031A8  6FD3               	movwf	(_tcpHeader+2)& (0+255),b
  6043  0031AA  5118               	movf	(??_TCP_Recv+1)& (0+255),w,b
  6044  0031AC  111A               	iorwf	(??_TCP_Recv+3)& (0+255),w,b
  6045  0031AE  6FD4               	movwf	(_tcpHeader+3)& (0+255),b
  6046                           
  6047                           ; BSR set to: 1
  6048                           ;tcpv4.c: 504: tcbPtr = tcbList;
  6049  0031B0  C044  F134         	movff	_tcbList,TCP_Recv@tcbPtr
  6050  0031B4  C045  F135         	movff	_tcbList+1,TCP_Recv@tcbPtr+1
  6051                           
  6052                           ;tcpv4.c: 505: while((tcbPtr != (0)) && (count < tcbListSize))
  6053  0031B8  D040               	goto	l9361
  6054  0031BA                     l9351:
  6055                           
  6056                           ; BSR set to: 1
  6057                           ;tcpv4.c: 506: {
  6058                           ;tcpv4.c: 507: if (tcpHeader.destPort == tcbPtr->localPort)
  6059  0031BA  C134  FFF6         	movff	TCP_Recv@tcbPtr,tblptrl
  6060  0031BE  C135  FFF7         	movff	TCP_Recv@tcbPtr+1,tblptrh
  6061  0031C2  0E00               	movlw	low (__smallconst shr (0+16))
  6062  0031C4  6EF8               	movwf	tblptru,c
  6063  0031C6  0E0F               	movlw	(high __ramtop+-1)
  6064  0031C8  64F7               	cpfsgt	tblptrh,c
  6065  0031CA  D007               	bra	u15007
  6066  0031CC  0009               	tblrd		*+
  6067  0031CE  CFF5 F117          	movff	tablat,??_TCP_Recv
  6068  0031D2  0009               	tblrd		*+
  6069  0031D4  CFF5 F118          	movff	tablat,??_TCP_Recv+1
  6070  0031D8  D006               	bra	u15000
  6071  0031DA                     u15007:
  6072  0031DA  EC86  F011         	call	PL389	;call to abstracted procedure
  6073  0031DE  CFEE F117          	movff	postinc0,??_TCP_Recv
  6074  0031E2  CFEE F118          	movff	postinc0,??_TCP_Recv+1
  6075  0031E6                     u15000:
  6076  0031E6  0101               	movlb	1	; () banked
  6077  0031E8  5117               	movf	??_TCP_Recv& (0+255),w,b
  6078  0031EA  19D3               	xorwf	(_tcpHeader+2)& (0+255),w,b
  6079  0031EC  E108               	bnz	l9357
  6080  0031EE  5118               	movf	(??_TCP_Recv+1)& (0+255),w,b
  6081  0031F0  19D4               	xorwf	(_tcpHeader+3)& (0+255),w,b
  6082  0031F2  E105               	bnz	l9357
  6083                           
  6084                           ; BSR set to: 1
  6085                           ;tcpv4.c: 508: {
  6086                           ;tcpv4.c: 509: currentTCB = tcbPtr;
  6087  0031F4  C134  F040         	movff	TCP_Recv@tcbPtr,_currentTCB
  6088  0031F8  C135  F041         	movff	TCP_Recv@tcbPtr+1,_currentTCB+1
  6089                           
  6090                           ;tcpv4.c: 510: break;
  6091  0031FC  D028               	goto	l9365
  6092  0031FE                     l9357:
  6093                           
  6094                           ; BSR set to: 1
  6095                           ;tcpv4.c: 512: else
  6096                           ;tcpv4.c: 513: {
  6097                           ;tcpv4.c: 514: tcbPtr = tcbPtr->nextTCB;
  6098  0031FE  0E2C               	movlw	44
  6099  003200  2534               	addwf	TCP_Recv@tcbPtr& (0+255),w,b
  6100  003202  6F17               	movwf	??_TCP_Recv& (0+255),b
  6101  003204  0E00               	movlw	0
  6102  003206  2135               	addwfc	(TCP_Recv@tcbPtr+1)& (0+255),w,b
  6103  003208  6F18               	movwf	(??_TCP_Recv+1)& (0+255),b
  6104  00320A  C117  FFF6         	movff	??_TCP_Recv,tblptrl
  6105  00320E  C118  FFF7         	movff	??_TCP_Recv+1,tblptrh
  6106  003212  0E00               	movlw	low (__smallconst shr (0+16))
  6107  003214  6EF8               	movwf	tblptru,c
  6108  003216  0E0F               	movlw	(high __ramtop+-1)
  6109  003218  64F7               	cpfsgt	tblptrh,c
  6110  00321A  D007               	bra	u15027
  6111  00321C  0009               	tblrd		*+
  6112  00321E  CFF5 F134          	movff	tablat,TCP_Recv@tcbPtr
  6113  003222  0009               	tblrd		*+
  6114  003224  CFF5 F135          	movff	tablat,TCP_Recv@tcbPtr+1
  6115  003228  D006               	bra	u15020
  6116  00322A                     u15027:
  6117  00322A  EC86  F011         	call	PL389	;call to abstracted procedure
  6118  00322E  CFEE F134          	movff	postinc0,TCP_Recv@tcbPtr
  6119  003232  CFEE F135          	movff	postinc0,TCP_Recv@tcbPtr+1
  6120  003236                     u15020:
  6121                           
  6122                           ;tcpv4.c: 515: count ++;
  6123  003236  0101               	movlb	1	; () banked
  6124  003238  2B33               	incf	TCP_Recv@count& (0+255),f,b
  6125  00323A                     l9361:
  6126                           
  6127                           ; BSR set to: 1
  6128  00323A  5134               	movf	TCP_Recv@tcbPtr& (0+255),w,b
  6129  00323C  1135               	iorwf	(TCP_Recv@tcbPtr+1)& (0+255),w,b
  6130  00323E  E007               	bz	l9365
  6131                           
  6132                           ; BSR set to: 1
  6133  003240  5133               	movf	TCP_Recv@count& (0+255),w,b
  6134  003242  0A80               	xorlw	128
  6135  003244  6F17               	movwf	??_TCP_Recv& (0+255),b
  6136  003246  5048               	movf	_tcbListSize,w,c
  6137  003248  0A80               	xorlw	128
  6138  00324A  5D17               	subwf	??_TCP_Recv& (0+255),w,b
  6139  00324C  E3B6               	bnc	l9351
  6140  00324E                     l9365:
  6141                           
  6142                           ; BSR set to: 1
  6143                           ;tcpv4.c: 516: }
  6144                           ;tcpv4.c: 517: }
  6145                           ;tcpv4.c: 519: if (currentTCB != (0))
  6146  00324E  5040               	movf	_currentTCB,w,c
  6147  003250  1041               	iorwf	_currentTCB+1,w,c
  6148  003252  B4D8               	btfsc	status,2,c
  6149  003254  0012               	return	
  6150                           
  6151                           ; BSR set to: 1
  6152                           ;tcpv4.c: 520: {
  6153                           ;tcpv4.c: 521: if((tcpHeader.sourcePort == currentTCB->destPort) ||
  6154                           ;tcpv4.c: 522: (currentTCB->destIP == 0))
  6155  003256  0E06               	movlw	6
  6156  003258  D8E6               	call	PL409	;call to abstracted procedure
  6157  00325A  64F7               	cpfsgt	tblptrh,c
  6158  00325C  D002               	bra	u15067
  6159  00325E  D94A               	call	PL657	;call to abstracted procedure
  6160  003260  D003               	bra	u15060
  6161  003262                     u15067:
  6162  003262  EC86  F011         	call	PL389	;call to abstracted procedure
  6163  003266  D94D               	call	PL703	;call to abstracted procedure
  6164  003268                     u15060:
  6165  003268  0101               	movlb	1	; () banked
  6166  00326A  51D1               	movf	_tcpHeader& (0+255),w,b
  6167  00326C  1919               	xorwf	(??_TCP_Recv+2)& (0+255),w,b
  6168  00326E  E103               	bnz	u15070
  6169  003270  51D2               	movf	(_tcpHeader+1)& (0+255),w,b
  6170  003272  191A               	xorwf	(??_TCP_Recv+3)& (0+255),w,b
  6171  003274  E01A               	bz	l1169
  6172  003276                     u15070:
  6173                           
  6174                           ; BSR set to: 1
  6175  003276  0E02               	movlw	2
  6176  003278  D8D6               	call	PL409	;call to abstracted procedure
  6177  00327A  64F7               	cpfsgt	tblptrh,c
  6178  00327C  D008               	bra	u15087
  6179  00327E  D93A               	call	PL657	;call to abstracted procedure
  6180  003280  0009               	tblrd		*+
  6181  003282  CFF5 F11B          	movff	tablat,??_TCP_Recv+4
  6182  003286  0009               	tblrd		*+
  6183  003288  CFF5 F11C          	movff	tablat,??_TCP_Recv+5
  6184  00328C  D007               	bra	u15080
  6185  00328E                     u15087:
  6186  00328E  EC86  F011         	call	PL389	;call to abstracted procedure
  6187  003292  D937               	call	PL703	;call to abstracted procedure
  6188  003294  CFEE F11B          	movff	postinc0,??_TCP_Recv+4
  6189  003298  CFEE F11C          	movff	postinc0,??_TCP_Recv+5
  6190  00329C                     u15080:
  6191  00329C  0101               	movlb	1	; () banked
  6192  00329E  5119               	movf	(??_TCP_Recv+2)& (0+255),w,b
  6193  0032A0  111A               	iorwf	(??_TCP_Recv+3)& (0+255),w,b
  6194  0032A2  111B               	iorwf	(??_TCP_Recv+4)& (0+255),w,b
  6195  0032A4  111C               	iorwf	(??_TCP_Recv+5)& (0+255),w,b
  6196  0032A6  A4D8               	btfss	status,2,c
  6197  0032A8  0012               	return	
  6198  0032AA                     l1169:
  6199                           
  6200                           ; BSR set to: 1
  6201                           ;tcpv4.c: 523: {
  6202                           ;tcpv4.c: 526: receivedRemoteAddress = remoteAddress;
  6203  0032AA  C111  F03C         	movff	TCP_Recv@remoteAddress,_receivedRemoteAddress
  6204  0032AE  C112  F03D         	movff	TCP_Recv@remoteAddress+1,_receivedRemoteAddress+1
  6205  0032B2  C113  F03E         	movff	TCP_Recv@remoteAddress+2,_receivedRemoteAddress+2
  6206  0032B6  C114  F03F         	movff	TCP_Recv@remoteAddress+3,_receivedRemoteAddress+3
  6207                           
  6208                           ; BSR set to: 1
  6209                           ;tcpv4.c: 527: rcvPayloadLen = length - (uint16_t)(tcpHeader.dataOffset << 2);
  6210  0032BA  39DD               	swapf	(_tcpHeader+12)& (0+255),w,b
  6211  0032BC  0B0F               	andlw	15
  6212  0032BE  6F17               	movwf	??_TCP_Recv& (0+255),b
  6213  0032C0  6B18               	clrf	(??_TCP_Recv+1)& (0+255),b
  6214  0032C2  90D8               	bcf	status,0,c
  6215  0032C4  3717               	rlcf	??_TCP_Recv& (0+255),f,b
  6216  0032C6  3718               	rlcf	(??_TCP_Recv+1)& (0+255),f,b
  6217  0032C8  90D8               	bcf	status,0,c
  6218  0032CA  3717               	rlcf	??_TCP_Recv& (0+255),f,b
  6219  0032CC  3718               	rlcf	(??_TCP_Recv+1)& (0+255),f,b
  6220  0032CE  5117               	movf	??_TCP_Recv& (0+255),w,b
  6221  0032D0  5D15               	subwf	TCP_Recv@length& (0+255),w,b
  6222  0032D2  6FCF               	movwf	_rcvPayloadLen& (0+255),b
  6223  0032D4  5118               	movf	(??_TCP_Recv+1)& (0+255),w,b
  6224  0032D6  5916               	subwfb	(TCP_Recv@length+1)& (0+255),w,b
  6225  0032D8  6FD0               	movwf	(_rcvPayloadLen+1)& (0+255),b
  6226                           
  6227                           ; BSR set to: 1
  6228                           ;tcpv4.c: 530: if (TCP_ParseTCPOptions() == 1)
  6229  0032DA  EC1A  F027         	call	_TCP_ParseTCPOptions	;wreg free
  6230  0032DE  06E8               	decf	wreg,f,c
  6231  0032E0  A4D8               	btfss	status,2,c
  6232  0032E2  0012               	return	
  6233                           
  6234                           ; BSR set to: 1
  6235                           ;tcpv4.c: 531: {
  6236                           ;tcpv4.c: 534: if(tcpHeader.syn)
  6237  0032E4  A3DE               	btfss	(_tcpHeader+13)& (0+255),1,b
  6238  0032E6  D01C               	goto	l1171
  6239                           
  6240                           ; BSR set to: 1
  6241                           ;tcpv4.c: 535: {
  6242                           ;tcpv4.c: 536: if(tcpHeader.ack)
  6243  0032E8  A9DE               	btfss	(_tcpHeader+13)& (0+255),4,b
  6244  0032EA  D00D               	goto	l9381
  6245                           
  6246                           ; BSR set to: 1
  6247                           ;tcpv4.c: 537: {
  6248                           ;tcpv4.c: 538: ;
  6249                           ;tcpv4.c: 539: currentTCB->connectionEvent = RCV_SYNACK;
  6250  0032EC  0E2B               	movlw	43
  6251  0032EE  D89B               	call	PL409	;call to abstracted procedure
  6252  0032F0  64F7               	cpfsgt	tblptrh,c
  6253  0032F2  D004               	bra	u15137
  6254  0032F4  0E05               	movlw	5
  6255  0032F6  6EF5               	movwf	tablat,c
  6256  0032F8  000C               	tblwt		*
  6257  0032FA  D004               	bra	u15130
  6258  0032FC                     u15137:
  6259  0032FC  EC86  F011         	call	PL389	;call to abstracted procedure
  6260  003300  0E05               	movlw	5
  6261  003302  D048               	goto	L8
  6262  003304                     u15130:
  6263                           
  6264                           ;tcpv4.c: 540: } else
  6265  003304  D057               	goto	l9397
  6266  003306                     l9381:
  6267                           
  6268                           ; BSR set to: 1
  6269                           ;tcpv4.c: 541: {
  6270                           ;tcpv4.c: 542: ;
  6271                           ;tcpv4.c: 543: currentTCB->connectionEvent = RCV_SYN;
  6272  003306  0E2B               	movlw	43
  6273  003308  D88E               	call	PL409	;call to abstracted procedure
  6274  00330A  64F7               	cpfsgt	tblptrh,c
  6275  00330C  D004               	bra	u15147
  6276  00330E  0E03               	movlw	3
  6277  003310  6EF5               	movwf	tablat,c
  6278  003312  000C               	tblwt		*
  6279  003314  D004               	bra	u15140
  6280  003316                     u15147:
  6281  003316  EC86  F011         	call	PL389	;call to abstracted procedure
  6282  00331A  0E03               	movlw	3
  6283  00331C  D03B               	goto	L8
  6284  00331E                     u15140:
  6285  00331E  D04A               	goto	l9397
  6286  003320                     l1171:
  6287                           
  6288                           ; BSR set to: 1
  6289  003320  A1DE               	btfss	(_tcpHeader+13)& (0+255),0,b
  6290  003322  D01C               	goto	l1175
  6291                           
  6292                           ; BSR set to: 1
  6293                           ;tcpv4.c: 546: {
  6294                           ;tcpv4.c: 547: if(tcpHeader.ack)
  6295  003324  A9DE               	btfss	(_tcpHeader+13)& (0+255),4,b
  6296  003326  D00D               	goto	l9387
  6297                           
  6298                           ; BSR set to: 1
  6299                           ;tcpv4.c: 548: {
  6300                           ;tcpv4.c: 549: ;
  6301                           ;tcpv4.c: 550: currentTCB->connectionEvent = RCV_FINACK;
  6302  003328  0E2B               	movlw	43
  6303  00332A  D87D               	call	PL409	;call to abstracted procedure
  6304  00332C  64F7               	cpfsgt	tblptrh,c
  6305  00332E  D004               	bra	u15177
  6306  003330  0E07               	movlw	7
  6307  003332  6EF5               	movwf	tablat,c
  6308  003334  000C               	tblwt		*
  6309  003336  D004               	bra	u15170
  6310  003338                     u15177:
  6311  003338  EC86  F011         	call	PL389	;call to abstracted procedure
  6312  00333C  0E07               	movlw	7
  6313  00333E  D02A               	goto	L8
  6314  003340                     u15170:
  6315                           
  6316                           ;tcpv4.c: 551: } else
  6317  003340  D039               	goto	l9397
  6318  003342                     l9387:
  6319                           
  6320                           ; BSR set to: 1
  6321                           ;tcpv4.c: 552: {
  6322                           ;tcpv4.c: 553: ;
  6323                           ;tcpv4.c: 554: currentTCB->connectionEvent = RCV_FIN;
  6324  003342  0E2B               	movlw	43
  6325  003344  D870               	call	PL409	;call to abstracted procedure
  6326  003346  64F7               	cpfsgt	tblptrh,c
  6327  003348  D004               	bra	u15187
  6328  00334A  0E06               	movlw	6
  6329  00334C  6EF5               	movwf	tablat,c
  6330  00334E  000C               	tblwt		*
  6331  003350  D004               	bra	u15180
  6332  003352                     u15187:
  6333  003352  EC86  F011         	call	PL389	;call to abstracted procedure
  6334  003356  0E06               	movlw	6
  6335  003358  D01D               	goto	L8
  6336  00335A                     u15180:
  6337  00335A  D02C               	goto	l9397
  6338  00335C                     l1175:
  6339                           
  6340                           ; BSR set to: 1
  6341  00335C  A5DE               	btfss	(_tcpHeader+13)& (0+255),2,b
  6342  00335E  D01C               	goto	l1179
  6343                           
  6344                           ; BSR set to: 1
  6345                           ;tcpv4.c: 557: {
  6346                           ;tcpv4.c: 558: if(tcpHeader.ack)
  6347  003360  A9DE               	btfss	(_tcpHeader+13)& (0+255),4,b
  6348  003362  D00D               	goto	l9393
  6349                           
  6350                           ; BSR set to: 1
  6351                           ;tcpv4.c: 559: {
  6352                           ;tcpv4.c: 560: ;
  6353                           ;tcpv4.c: 561: currentTCB->connectionEvent = RCV_RSTACK;
  6354  003364  0E2B               	movlw	43
  6355  003366  D85F               	call	PL409	;call to abstracted procedure
  6356  003368  64F7               	cpfsgt	tblptrh,c
  6357  00336A  D004               	bra	u15217
  6358  00336C  0E0A               	movlw	10
  6359  00336E  6EF5               	movwf	tablat,c
  6360  003370  000C               	tblwt		*
  6361  003372  D004               	bra	u15210
  6362  003374                     u15217:
  6363  003374  EC86  F011         	call	PL389	;call to abstracted procedure
  6364  003378  0E0A               	movlw	10
  6365  00337A  D00C               	goto	L8
  6366  00337C                     u15210:
  6367                           
  6368                           ;tcpv4.c: 562: } else
  6369  00337C  D01B               	goto	l9397
  6370  00337E                     l9393:
  6371                           
  6372                           ; BSR set to: 1
  6373                           ;tcpv4.c: 563: {
  6374                           ;tcpv4.c: 564: ;
  6375                           ;tcpv4.c: 565: currentTCB->connectionEvent = RCV_RST;
  6376  00337E  0E2B               	movlw	43
  6377  003380  D852               	call	PL409	;call to abstracted procedure
  6378  003382  64F7               	cpfsgt	tblptrh,c
  6379  003384  D004               	bra	u15227
  6380  003386  0E09               	movlw	9
  6381  003388  6EF5               	movwf	tablat,c
  6382  00338A  000C               	tblwt		*
  6383  00338C  D004               	bra	u15220
  6384  00338E                     u15227:
  6385  00338E  EC86  F011         	call	PL389	;call to abstracted procedure
  6386  003392  0E09               	movlw	9
  6387  003394                     L8:
  6388  003394  6EEF               	movwf	indf0,c
  6389  003396                     u15220:
  6390  003396  D00E               	goto	l9397
  6391  003398                     l1179:
  6392                           
  6393                           ; BSR set to: 1
  6394  003398  A9DE               	btfss	(_tcpHeader+13)& (0+255),4,b
  6395  00339A  D00C               	goto	l9397
  6396                           
  6397                           ; BSR set to: 1
  6398                           ;tcpv4.c: 568: {
  6399                           ;tcpv4.c: 569: ;
  6400                           ;tcpv4.c: 570: currentTCB->connectionEvent = RCV_ACK;
  6401  00339C  0E2B               	movlw	43
  6402  00339E  D843               	call	PL409	;call to abstracted procedure
  6403  0033A0  64F7               	cpfsgt	tblptrh,c
  6404  0033A2  D004               	bra	u15247
  6405  0033A4  0E04               	movlw	4
  6406  0033A6  6EF5               	movwf	tablat,c
  6407  0033A8  000C               	tblwt		*
  6408  0033AA  D004               	bra	u15240
  6409  0033AC                     u15247:
  6410  0033AC  EC86  F011         	call	PL389	;call to abstracted procedure
  6411  0033B0  0E04               	movlw	4
  6412  0033B2  6EEF               	movwf	indf0,c
  6413  0033B4                     u15240:
  6414  0033B4                     l9397:
  6415                           
  6416                           ;tcpv4.c: 575: }
  6417                           ;tcpv4.c: 577: tcpHeader.ackNumber = ((((uint32_t)tcpHeader.ackNumber&(uint32_t)0xff0000
      +                          00) >> 24) | (((uint32_t)tcpHeader.ackNumber&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)t
      +                          cpHeader.ackNumber&(uint32_t)0x0000ff00) << 8) | (((uint32_t)tcpHeader.ackNumber&(uint32
      +                          _
  6418  0033B4  0101               	movlb	1	; () banked
  6419  0033B6  51D9               	movf	(_tcpHeader+8)& (0+255),w,b
  6420  0033B8  D893               	call	PL599	;call to abstracted procedure
  6421  0033BA  EE21  F0D9         	lfsr	2,_tcpHeader+8
  6422  0033BE  D86F               	call	PL495	;call to abstracted procedure
  6423  0033C0  C1D9  F11F         	movff	_tcpHeader+8,??_TCP_Recv+8
  6424  0033C4  C1DA  F120         	movff	_tcpHeader+9,??_TCP_Recv+9
  6425  0033C8  C1DB  F121         	movff	_tcpHeader+10,??_TCP_Recv+10
  6426  0033CC  C1DC  F122         	movff	_tcpHeader+11,??_TCP_Recv+11
  6427  0033D0  D87A               	call	PL535	;call to abstracted procedure
  6428  0033D2  EE21  F0D9         	lfsr	2,_tcpHeader+8
  6429  0033D6  D834               	call	PL435	;call to abstracted procedure
  6430  0033D8  6FD9               	movwf	(_tcpHeader+8)& (0+255),b
  6431  0033DA  5118               	movf	(??_TCP_Recv+1)& (0+255),w,b
  6432  0033DC  1130               	iorwf	(??_TCP_Recv+25)& (0+255),w,b
  6433  0033DE  6FDA               	movwf	(_tcpHeader+9)& (0+255),b
  6434  0033E0  5119               	movf	(??_TCP_Recv+2)& (0+255),w,b
  6435  0033E2  1131               	iorwf	(??_TCP_Recv+26)& (0+255),w,b
  6436  0033E4  6FDB               	movwf	(_tcpHeader+10)& (0+255),b
  6437  0033E6  511A               	movf	(??_TCP_Recv+3)& (0+255),w,b
  6438  0033E8  1132               	iorwf	(??_TCP_Recv+27)& (0+255),w,b
  6439  0033EA  6FDC               	movwf	(_tcpHeader+11)& (0+255),b
  6440                           
  6441                           ;tcpv4.c: 578: tcpHeader.sequenceNumber = ((((uint32_t)tcpHeader.sequenceNumber&(uint32_
      +                          t)0xff000000) >> 24) | (((uint32_t)tcpHeader.sequenceNumber&(uint32_t)0x00ff0000) >> 8) 
      +                          | (((uint32_t)tcpHeader.sequenceNumber&(uint32_t)0x0000ff00) << 8) | (((uint32_t)tcpHead
      +                          e
  6442  0033EC  51D5               	movf	(_tcpHeader+4)& (0+255),w,b
  6443  0033EE  D878               	call	PL599	;call to abstracted procedure
  6444  0033F0  EE21  F0D5         	lfsr	2,_tcpHeader+4
  6445  0033F4  D854               	call	PL495	;call to abstracted procedure
  6446  0033F6  C1D5  F11F         	movff	_tcpHeader+4,??_TCP_Recv+8
  6447  0033FA  C1D6  F120         	movff	_tcpHeader+5,??_TCP_Recv+9
  6448  0033FE  C1D7  F121         	movff	_tcpHeader+6,??_TCP_Recv+10
  6449  003402  C1D8  F122         	movff	_tcpHeader+7,??_TCP_Recv+11
  6450  003406  D85F               	call	PL535	;call to abstracted procedure
  6451  003408  EE21  F0D5         	lfsr	2,_tcpHeader+4
  6452  00340C  D819               	call	PL435	;call to abstracted procedure
  6453  00340E  6FD5               	movwf	(_tcpHeader+4)& (0+255),b
  6454  003410  5118               	movf	(??_TCP_Recv+1)& (0+255),w,b
  6455  003412  1130               	iorwf	(??_TCP_Recv+25)& (0+255),w,b
  6456  003414  6FD6               	movwf	(_tcpHeader+5)& (0+255),b
  6457  003416  5119               	movf	(??_TCP_Recv+2)& (0+255),w,b
  6458  003418  1131               	iorwf	(??_TCP_Recv+26)& (0+255),w,b
  6459  00341A  6FD7               	movwf	(_tcpHeader+6)& (0+255),b
  6460  00341C  511A               	movf	(??_TCP_Recv+3)& (0+255),w,b
  6461  00341E  1132               	iorwf	(??_TCP_Recv+27)& (0+255),w,b
  6462  003420  6FD8               	movwf	(_tcpHeader+7)& (0+255),b
  6463                           
  6464                           ; BSR set to: 1
  6465                           ;tcpv4.c: 580: TCP_FiniteStateMachine();
  6466  003422  EF7D  F008         	goto	_TCP_FiniteStateMachine	;wreg free
  6467  003426                     __end_of_TCP_Recv:
  6468                           	opt stack 0
  6469  003426                     PL409:
  6470                           	opt stack 12
  6471  003426  2440               	addwf	_currentTCB,w,c
  6472  003428  6F17               	movwf	??_TCP_Recv& (0+255),b
  6473  00342A  0E00               	movlw	0
  6474  00342C  2041               	addwfc	_currentTCB+1,w,c
  6475  00342E  6F18               	movwf	(??_TCP_Recv+1)& (0+255),b
  6476  003430  C117  FFF6         	movff	??_TCP_Recv,tblptrl
  6477  003434  C118  FFF7         	movff	??_TCP_Recv+1,tblptrh
  6478  003438  0E00               	movlw	low (__smallconst shr (0+16))
  6479  00343A  6EF8               	movwf	tblptru,c
  6480  00343C  0E0F               	movlw	(high __ramtop+-1)
  6481  00343E  0012               	return	
  6482  003440                     __end_ofPL409:
  6483                           	opt stack 0
  6484  003440                     PL435:
  6485                           	opt stack 12
  6486  003440  14DE               	andwf	postinc2,w,c
  6487  003442  6F27               	movwf	(??_TCP_Recv+16)& (0+255),b
  6488  003444  0E00               	movlw	0
  6489  003446  14DE               	andwf	postinc2,w,c
  6490  003448  6F28               	movwf	(??_TCP_Recv+17)& (0+255),b
  6491  00344A  0E00               	movlw	0
  6492  00344C  14DE               	andwf	postinc2,w,c
  6493  00344E  6F29               	movwf	(??_TCP_Recv+18)& (0+255),b
  6494  003450  0EFF               	movlw	255
  6495  003452  14DE               	andwf	postinc2,w,c
  6496  003454  6F2A               	movwf	(??_TCP_Recv+19)& (0+255),b
  6497  003456  0E19               	movlw	25
  6498  003458  D005               	goto	u15250
  6499  00345A                     u15255:
  6500  00345A  90D8               	bcf	status,0,c
  6501  00345C  332A               	rrcf	(??_TCP_Recv+19)& (0+255),f,b
  6502  00345E  3329               	rrcf	(??_TCP_Recv+18)& (0+255),f,b
  6503  003460  3328               	rrcf	(??_TCP_Recv+17)& (0+255),f,b
  6504  003462  3327               	rrcf	(??_TCP_Recv+16)& (0+255),f,b
  6505  003464                     u15250:
  6506  003464  2EE8               	decfsz	wreg,f,c
  6507  003466  D7F9               	goto	u15255
  6508  003468  5123               	movf	(??_TCP_Recv+12)& (0+255),w,b
  6509  00346A  1127               	iorwf	(??_TCP_Recv+16)& (0+255),w,b
  6510  00346C  6F2B               	movwf	(??_TCP_Recv+20)& (0+255),b
  6511  00346E  5124               	movf	(??_TCP_Recv+13)& (0+255),w,b
  6512  003470  1128               	iorwf	(??_TCP_Recv+17)& (0+255),w,b
  6513  003472  6F2C               	movwf	(??_TCP_Recv+21)& (0+255),b
  6514  003474  5125               	movf	(??_TCP_Recv+14)& (0+255),w,b
  6515  003476  1129               	iorwf	(??_TCP_Recv+18)& (0+255),w,b
  6516  003478  6F2D               	movwf	(??_TCP_Recv+22)& (0+255),b
  6517  00347A  5126               	movf	(??_TCP_Recv+15)& (0+255),w,b
  6518  00347C  112A               	iorwf	(??_TCP_Recv+19)& (0+255),w,b
  6519  00347E  6F2E               	movwf	(??_TCP_Recv+23)& (0+255),b
  6520  003480  511B               	movf	(??_TCP_Recv+4)& (0+255),w,b
  6521  003482  112B               	iorwf	(??_TCP_Recv+20)& (0+255),w,b
  6522  003484  6F2F               	movwf	(??_TCP_Recv+24)& (0+255),b
  6523  003486  511C               	movf	(??_TCP_Recv+5)& (0+255),w,b
  6524  003488  112C               	iorwf	(??_TCP_Recv+21)& (0+255),w,b
  6525  00348A  6F30               	movwf	(??_TCP_Recv+25)& (0+255),b
  6526  00348C  511D               	movf	(??_TCP_Recv+6)& (0+255),w,b
  6527  00348E  112D               	iorwf	(??_TCP_Recv+22)& (0+255),w,b
  6528  003490  6F31               	movwf	(??_TCP_Recv+26)& (0+255),b
  6529  003492  511E               	movf	(??_TCP_Recv+7)& (0+255),w,b
  6530  003494  112E               	iorwf	(??_TCP_Recv+23)& (0+255),w,b
  6531  003496  6F32               	movwf	(??_TCP_Recv+27)& (0+255),b
  6532  003498  5117               	movf	??_TCP_Recv& (0+255),w,b
  6533  00349A  112F               	iorwf	(??_TCP_Recv+24)& (0+255),w,b
  6534  00349C  0012               	return	
  6535  00349E                     __end_ofPL435:
  6536                           	opt stack 0
  6537  00349E                     PL495:
  6538                           	opt stack 12
  6539  00349E  0E00               	movlw	0
  6540  0034A0  14DE               	andwf	postinc2,w,c
  6541  0034A2  6F1B               	movwf	(??_TCP_Recv+4)& (0+255),b
  6542  0034A4  0EFF               	movlw	255
  6543  0034A6  14DE               	andwf	postinc2,w,c
  6544  0034A8  6F1C               	movwf	(??_TCP_Recv+5)& (0+255),b
  6545  0034AA  0E00               	movlw	0
  6546  0034AC  14DE               	andwf	postinc2,w,c
  6547  0034AE  6F1D               	movwf	(??_TCP_Recv+6)& (0+255),b
  6548  0034B0  0E00               	movlw	0
  6549  0034B2  14DE               	andwf	postinc2,w,c
  6550  0034B4  6F1E               	movwf	(??_TCP_Recv+7)& (0+255),b
  6551  0034B6  C11D  F11E         	movff	??_TCP_Recv+6,??_TCP_Recv+7
  6552  0034BA  C11C  F11D         	movff	??_TCP_Recv+5,??_TCP_Recv+6
  6553  0034BE  C11B  F11C         	movff	??_TCP_Recv+4,??_TCP_Recv+5
  6554  0034C2  6B1B               	clrf	(??_TCP_Recv+4)& (0+255),b
  6555  0034C4  0012               	return	
  6556  0034C6                     __end_ofPL495:
  6557                           	opt stack 0
  6558  0034C6                     PL535:
  6559                           	opt stack 12
  6560  0034C6  C120  F11F         	movff	??_TCP_Recv+9,??_TCP_Recv+8
  6561  0034CA  C121  F120         	movff	??_TCP_Recv+10,??_TCP_Recv+9
  6562  0034CE  C122  F121         	movff	??_TCP_Recv+11,??_TCP_Recv+10
  6563  0034D2  6B22               	clrf	(??_TCP_Recv+11)& (0+255),b
  6564  0034D4  6B23               	clrf	(??_TCP_Recv+12)& (0+255),b
  6565  0034D6  5120               	movf	(??_TCP_Recv+9)& (0+255),w,b
  6566  0034D8  6F24               	movwf	(??_TCP_Recv+13)& (0+255),b
  6567  0034DA  6B25               	clrf	(??_TCP_Recv+14)& (0+255),b
  6568  0034DC  6B26               	clrf	(??_TCP_Recv+15)& (0+255),b
  6569  0034DE  0C00               	retlw	0
  6570  0034E0                     __end_ofPL535:
  6571                           	opt stack 0
  6572  0034E0                     PL599:
  6573                           	opt stack 12
  6574  0034E0  6F17               	movwf	??_TCP_Recv& (0+255),b
  6575  0034E2  6B18               	clrf	(??_TCP_Recv+1)& (0+255),b
  6576  0034E4  6B19               	clrf	(??_TCP_Recv+2)& (0+255),b
  6577  0034E6  6B1A               	clrf	(??_TCP_Recv+3)& (0+255),b
  6578  0034E8  C117  F11A         	movff	??_TCP_Recv,??_TCP_Recv+3
  6579  0034EC  6B19               	clrf	(??_TCP_Recv+2)& (0+255),b
  6580  0034EE  6B18               	clrf	(??_TCP_Recv+1)& (0+255),b
  6581  0034F0  6B17               	clrf	??_TCP_Recv& (0+255),b
  6582  0034F2  0012               	return	
  6583  0034F4                     __end_ofPL599:
  6584                           	opt stack 0
  6585  0034F4                     PL657:
  6586                           	opt stack 12
  6587  0034F4  0009               	tblrd		*+
  6588  0034F6  CFF5 F119          	movff	tablat,??_TCP_Recv+2
  6589  0034FA  0009               	tblrd		*+
  6590  0034FC  CFF5 F11A          	movff	tablat,??_TCP_Recv+3
  6591  003500  0012               	return	
  6592  003502                     __end_ofPL657:
  6593                           	opt stack 0
  6594  003502                     PL703:
  6595                           	opt stack 12
  6596  003502  CFEE F119          	movff	postinc0,??_TCP_Recv+2
  6597  003506  CFEE F11A          	movff	postinc0,??_TCP_Recv+3
  6598  00350A  0012               	return	
  6599  00350C                     __end_ofPL703:
  6600                           	opt stack 0
  6601  00350C                     PL705:
  6602                           	opt stack 12
  6603  00350C  6E18               	movwf	ETH_ReadBlock@buffer+1,c
  6604  00350E  6A1A               	clrf	ETH_ReadBlock@length+1,c
  6605  003510  0E14               	movlw	20
  6606  003512  6E19               	movwf	ETH_ReadBlock@length,c
  6607  003514  0C14               	retlw	20
  6608  003516                     __end_ofPL705:
  6609                           	opt stack 0
  6610                           tosu	equ	0xFFF
  6611                           tosh	equ	0xFFE
  6612                           tosl	equ	0xFFD
  6613                           pclath	equ	0xFFA
  6614                           tblptru	equ	0xFF8
  6615                           tblptrh	equ	0xFF7
  6616                           tblptrl	equ	0xFF6
  6617                           tablat	equ	0xFF5
  6618                           prodh	equ	0xFF4
  6619                           prodl	equ	0xFF3
  6620                           intcon	equ	0xFF2
  6621                           indf0	equ	0xFEF
  6622                           postinc0	equ	0xFEE
  6623                           fsr0h	equ	0xFEA
  6624                           fsr0l	equ	0xFE9
  6625                           wreg	equ	0xFE8
  6626                           postinc1	equ	0xFE6
  6627                           postdec1	equ	0xFE5
  6628                           plusw1	equ	0xFE3
  6629                           fsr1h	equ	0xFE2
  6630                           fsr1l	equ	0xFE1
  6631                           bsr	equ	0xFE0
  6632                           indf2	equ	0xFDF
  6633                           postinc2	equ	0xFDE
  6634                           postdec2	equ	0xFDD
  6635                           plusw2	equ	0xFDB
  6636                           fsr2h	equ	0xFDA
  6637                           fsr2l	equ	0xFD9
  6638                           status	equ	0xFD8
  6639                           
  6640 ;; *************** function _TCP_ParseTCPOptions *****************
  6641 ;; Defined at:
  6642 ;;		line 356 in file "../../TCPIP Library/source/tcpv4.c"
  6643 ;; Parameters:    Size  Location     Type
  6644 ;;		None
  6645 ;; Auto vars:     Size  Location     Type
  6646 ;;  tcpOptionsSi    2   30[COMRAM] unsigned int 
  6647 ;;  opt             1   29[COMRAM] unsigned char 
  6648 ;;  ret             1   28[COMRAM] unsigned char 
  6649 ;; Return value:  Size  Location     Type
  6650 ;;                  1    wreg      unsigned char 
  6651 ;; Registers used:
  6652 ;;		wreg, status,2, status,0, cstack
  6653 ;; Tracked objects:
  6654 ;;		On entry : F/1
  6655 ;;		On exit  : F/1
  6656 ;;		Unchanged: 0/0
  6657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6659 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6660 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6661 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6662 ;;Total ram usage:        6 bytes
  6663 ;; Hardware stack levels used:    1
  6664 ;; Hardware stack levels required when called:   10
  6665 ;; This function calls:
  6666 ;;		_ETH_Dump
  6667 ;;		_ETH_Read16
  6668 ;;		_ETH_Read8
  6669 ;; This function is called by:
  6670 ;;		_TCP_Recv
  6671 ;; This function uses a non-reentrant model
  6672 ;;
  6673                           
  6674                           	psect	text21
  6675  004E34                     __ptext21:
  6676                           	opt stack 0
  6677  004E34                     _TCP_ParseTCPOptions:
  6678                           	opt stack 16
  6679                           
  6680                           ; BSR set to: 1
  6681                           ;tcpv4.c: 358: uint8_t opt;
  6682                           ;tcpv4.c: 359: uint16_t tcpOptionsSize;
  6683                           ;tcpv4.c: 360: bool ret;
  6684                           ;tcpv4.c: 362: ret = 0;
  6685                           
  6686                           ; BSR set to: 1
  6687                           ;incstack = 0
  6688  004E34  6A1D               	clrf	TCP_ParseTCPOptions@ret,c
  6689                           
  6690                           ; BSR set to: 1
  6691                           ;tcpv4.c: 364: tcpOptionsSize = (uint16_t)((tcpHeader.dataOffset << 2) - sizeof(tcpHeade
      +                          r_t));
  6692  004E36  39DD               	swapf	(_tcpHeader+12)& (0+255),w,b
  6693  004E38  0B0F               	andlw	15
  6694  004E3A  6E1B               	movwf	??_TCP_ParseTCPOptions& (0+255),c
  6695  004E3C  6A1C               	clrf	(??_TCP_ParseTCPOptions+1)& (0+255),c
  6696  004E3E  90D8               	bcf	status,0,c
  6697  004E40  361B               	rlcf	??_TCP_ParseTCPOptions,f,c
  6698  004E42  361C               	rlcf	??_TCP_ParseTCPOptions+1,f,c
  6699  004E44  90D8               	bcf	status,0,c
  6700  004E46  361B               	rlcf	??_TCP_ParseTCPOptions,f,c
  6701  004E48  361C               	rlcf	??_TCP_ParseTCPOptions+1,f,c
  6702  004E4A  0EEC               	movlw	236
  6703  004E4C  241B               	addwf	??_TCP_ParseTCPOptions,w,c
  6704  004E4E  6E1F               	movwf	TCP_ParseTCPOptions@tcpOptionsSize,c
  6705  004E50  0EFF               	movlw	255
  6706  004E52  201C               	addwfc	??_TCP_ParseTCPOptions+1,w,c
  6707  004E54  6E20               	movwf	TCP_ParseTCPOptions@tcpOptionsSize+1,c
  6708                           
  6709                           ;tcpv4.c: 366: if (tcpOptionsSize > 0)
  6710  004E56  101F               	iorwf	TCP_ParseTCPOptions@tcpOptionsSize,w,c
  6711  004E58  E06B               	bz	l8877
  6712                           
  6713                           ; BSR set to: 1
  6714                           ;tcpv4.c: 367: {
  6715                           ;tcpv4.c: 370: tcpMss = 536;
  6716  004E5A  0E02               	movlw	2
  6717  004E5C  6E47               	movwf	_tcpMss+1,c
  6718  004E5E  0E18               	movlw	24
  6719  004E60  6E46               	movwf	_tcpMss,c
  6720                           
  6721                           ; BSR set to: 1
  6722                           ;tcpv4.c: 372: if(tcpHeader.syn)
  6723  004E62  A3DE               	btfss	(_tcpHeader+13)& (0+255),1,b
  6724  004E64  D062               	goto	l8875
  6725  004E66  D059               	goto	l8873
  6726  004E68                     l8831:
  6727                           
  6728                           ; BSR set to: 1
  6729                           ;tcpv4.c: 376: {
  6730                           ;tcpv4.c: 377: opt = ETH_Read8();
  6731  004E68  ECB9  F031         	call	_ETH_Read8	;wreg free
  6732  004E6C  6E1E               	movwf	TCP_ParseTCPOptions@opt,c
  6733                           
  6734                           ;tcpv4.c: 378: switch (opt)
  6735  004E6E  D04E               	goto	l8871
  6736  004E70                     l8833:
  6737                           
  6738                           ; BSR set to: 1
  6739                           ;tcpv4.c: 382: if (tcpOptionsSize)
  6740  004E70  501F               	movf	TCP_ParseTCPOptions@tcpOptionsSize,w,c
  6741  004E72  1020               	iorwf	TCP_ParseTCPOptions@tcpOptionsSize+1,w,c
  6742  004E74  E005               	bz	l8839
  6743                           
  6744                           ; BSR set to: 1
  6745                           ;tcpv4.c: 383: {
  6746                           ;tcpv4.c: 385: ETH_Dump(tcpOptionsSize);
  6747  004E76  D860               	call	PL697	;call to abstracted procedure
  6748  004E78  EC5D  F031         	call	_ETH_Dump	;wreg free
  6749                           
  6750                           ; BSR set to: 1
  6751                           ;tcpv4.c: 386: tcpOptionsSize = 0;
  6752  004E7C  6A1F               	clrf	TCP_ParseTCPOptions@tcpOptionsSize,c
  6753  004E7E  6A20               	clrf	TCP_ParseTCPOptions@tcpOptionsSize+1,c
  6754  004E80                     l8839:
  6755                           
  6756                           ; BSR set to: 1
  6757                           ;tcpv4.c: 387: }
  6758                           ;tcpv4.c: 388: ret = 1;
  6759  004E80  0E01               	movlw	1
  6760  004E82  6E1D               	movwf	TCP_ParseTCPOptions@ret,c
  6761                           
  6762                           ;tcpv4.c: 389: break;
  6763  004E84  D04A               	goto	l8873
  6764  004E86                     l8841:
  6765                           
  6766                           ; BSR set to: 1
  6767                           ;tcpv4.c: 394: if (tcpOptionsSize >= 3)
  6768  004E86  5020               	movf	TCP_ParseTCPOptions@tcpOptionsSize+1,w,c
  6769  004E88  E103               	bnz	u13050
  6770  004E8A  0E03               	movlw	3
  6771  004E8C  5C1F               	subwf	TCP_ParseTCPOptions@tcpOptionsSize,w,c
  6772  004E8E  E31D               	bnc	l1142
  6773  004E90                     u13050:
  6774                           
  6775                           ; BSR set to: 1
  6776                           ;tcpv4.c: 395: {
  6777                           ;tcpv4.c: 396: opt = ETH_Read8();
  6778  004E90  ECB9  F031         	call	_ETH_Read8	;wreg free
  6779  004E94  6E1E               	movwf	TCP_ParseTCPOptions@opt,c
  6780                           
  6781                           ; BSR set to: 1
  6782                           ;tcpv4.c: 397: if (opt == 0x04)
  6783  004E96  0E04               	movlw	4
  6784  004E98  181E               	xorwf	TCP_ParseTCPOptions@opt,w,c
  6785  004E9A  E114               	bnz	l1143
  6786                           
  6787                           ; BSR set to: 1
  6788                           ;tcpv4.c: 398: {
  6789                           ;tcpv4.c: 400: tcpMss = ETH_Read16();
  6790  004E9C  EC45  F030         	call	_ETH_Read16	;wreg free
  6791  004EA0  C017  F046         	movff	?_ETH_Read16,_tcpMss
  6792  004EA4  C018  F047         	movff	?_ETH_Read16+1,_tcpMss+1
  6793                           
  6794                           ; BSR set to: 1
  6795                           ;tcpv4.c: 402: tcpOptionsSize = tcpOptionsSize - 3;
  6796  004EA8  0EFD               	movlw	253
  6797  004EAA  261F               	addwf	TCP_ParseTCPOptions@tcpOptionsSize,f,c
  6798  004EAC  0EFF               	movlw	255
  6799  004EAE  2220               	addwfc	TCP_ParseTCPOptions@tcpOptionsSize+1,f,c
  6800                           
  6801                           ; BSR set to: 1
  6802                           ;tcpv4.c: 405: if (tcpMss > 1460u)
  6803  004EB0  0EB5               	movlw	181
  6804  004EB2  5C46               	subwf	_tcpMss,w,c
  6805  004EB4  0E05               	movlw	5
  6806  004EB6  5847               	subwfb	_tcpMss+1,w,c
  6807  004EB8  E3E3               	bnc	l8839
  6808                           
  6809                           ; BSR set to: 1
  6810                           ;tcpv4.c: 406: {
  6811                           ;tcpv4.c: 407: tcpMss = 1460u;
  6812  004EBA  0E05               	movlw	5
  6813  004EBC  6E47               	movwf	_tcpMss+1,c
  6814  004EBE  0EB4               	movlw	180
  6815  004EC0  6E46               	movwf	_tcpMss,c
  6816  004EC2  D7DE               	goto	l8839
  6817  004EC4                     l1143:
  6818                           
  6819                           ; BSR set to: 1
  6820                           ;tcpv4.c: 412: {
  6821                           ;tcpv4.c: 414: ;
  6822                           ;tcpv4.c: 416: tcpOptionsSize = 0;
  6823  004EC4  6A1F               	clrf	TCP_ParseTCPOptions@tcpOptionsSize,c
  6824  004EC6  6A20               	clrf	TCP_ParseTCPOptions@tcpOptionsSize+1,c
  6825  004EC8  D028               	goto	l8873
  6826  004ECA                     l1142:
  6827                           
  6828                           ; BSR set to: 1
  6829                           ;tcpv4.c: 419: {
  6830                           ;tcpv4.c: 421: tcpOptionsSize = 0;
  6831  004ECA  6A1F               	clrf	TCP_ParseTCPOptions@tcpOptionsSize,c
  6832  004ECC  6A20               	clrf	TCP_ParseTCPOptions@tcpOptionsSize+1,c
  6833                           
  6834                           ;tcpv4.c: 422: ret = 0;
  6835  004ECE  6A1D               	clrf	TCP_ParseTCPOptions@ret,c
  6836  004ED0  D024               	goto	l8873
  6837  004ED2                     l8855:
  6838                           
  6839                           ; BSR set to: 1
  6840                           ;tcpv4.c: 426: ;
  6841                           ;tcpv4.c: 427: opt = ETH_Read8();
  6842  004ED2  ECB9  F031         	call	_ETH_Read8	;wreg free
  6843  004ED6  6E1E               	movwf	TCP_ParseTCPOptions@opt,c
  6844                           
  6845                           ; BSR set to: 1
  6846                           ;tcpv4.c: 428: tcpOptionsSize--;
  6847  004ED8  061F               	decf	TCP_ParseTCPOptions@tcpOptionsSize,f,c
  6848  004EDA  A0D8               	btfss	status,0,c
  6849  004EDC  0620               	decf	TCP_ParseTCPOptions@tcpOptionsSize+1,f,c
  6850                           
  6851                           ; BSR set to: 1
  6852                           ;tcpv4.c: 430: if (opt > 1)
  6853  004EDE  0E01               	movlw	1
  6854  004EE0  641E               	cpfsgt	TCP_ParseTCPOptions@opt,c
  6855  004EE2  D7F3               	goto	l1142
  6856                           
  6857                           ; BSR set to: 1
  6858                           ;tcpv4.c: 431: {
  6859                           ;tcpv4.c: 433: opt = opt - 2;
  6860  004EE4  0EFE               	movlw	254
  6861  004EE6  261E               	addwf	TCP_ParseTCPOptions@opt,f,c
  6862                           
  6863                           ;tcpv4.c: 434: if (opt <= tcpOptionsSize)
  6864  004EE8  501E               	movf	TCP_ParseTCPOptions@opt,w,c
  6865  004EEA  6E1B               	movwf	??_TCP_ParseTCPOptions& (0+255),c
  6866  004EEC  6A1C               	clrf	(??_TCP_ParseTCPOptions+1)& (0+255),c
  6867  004EEE  501B               	movf	??_TCP_ParseTCPOptions,w,c
  6868  004EF0  5C1F               	subwf	TCP_ParseTCPOptions@tcpOptionsSize,w,c
  6869  004EF2  501C               	movf	??_TCP_ParseTCPOptions+1,w,c
  6870  004EF4  5820               	subwfb	TCP_ParseTCPOptions@tcpOptionsSize+1,w,c
  6871  004EF6  E3E9               	bnc	l1142
  6872                           
  6873                           ; BSR set to: 1
  6874                           ;tcpv4.c: 435: {
  6875                           ;tcpv4.c: 437: ETH_Dump(opt);
  6876  004EF8  C01E  F017         	movff	TCP_ParseTCPOptions@opt,ETH_Dump@length
  6877  004EFC  6A18               	clrf	ETH_Dump@length+1,c
  6878  004EFE  EC5D  F031         	call	_ETH_Dump	;wreg free
  6879                           
  6880                           ; BSR set to: 1
  6881                           ;tcpv4.c: 438: tcpOptionsSize = tcpOptionsSize - opt;
  6882  004F02  501E               	movf	TCP_ParseTCPOptions@opt,w,c
  6883  004F04  5E1F               	subwf	TCP_ParseTCPOptions@tcpOptionsSize,f,c
  6884  004F06  0E00               	movlw	0
  6885  004F08  5A20               	subwfb	TCP_ParseTCPOptions@tcpOptionsSize+1,f,c
  6886  004F0A  D7BA               	goto	l8839
  6887  004F0C                     l8871:
  6888                           
  6889                           ; BSR set to: 1
  6890  004F0C  501E               	movf	TCP_ParseTCPOptions@opt,w,c
  6891                           
  6892                           ; Switch size 1, requested type "space"
  6893                           ; Number of cases is 3, Range of values is 0 to 2
  6894                           ; switch strategies available:
  6895                           ; Name         Instructions Cycles
  6896                           ; simple_byte           10     6 (average)
  6897                           ;	Chosen strategy is simple_byte
  6898  004F0E  E0B0               	bz	l8833
  6899  004F10  0A01               	xorlw	1	; case 1
  6900  004F12  E003               	bz	l8873
  6901  004F14  0A03               	xorlw	3	; case 2
  6902  004F16  E0B7               	bz	l8841
  6903  004F18  D7DC               	goto	l8855
  6904  004F1A                     l8873:
  6905                           
  6906                           ; BSR set to: 1
  6907  004F1A  061F               	decf	TCP_ParseTCPOptions@tcpOptionsSize,f,c
  6908  004F1C  A0D8               	btfss	status,0,c
  6909  004F1E  0620               	decf	TCP_ParseTCPOptions@tcpOptionsSize+1,f,c
  6910  004F20  281F               	incf	TCP_ParseTCPOptions@tcpOptionsSize,w,c
  6911  004F22  E1A2               	bnz	l8831
  6912  004F24  2820               	incf	TCP_ParseTCPOptions@tcpOptionsSize+1,w,c
  6913  004F26  E006               	bz	l1154
  6914  004F28  D79F               	goto	l8831
  6915  004F2A                     l8875:
  6916                           
  6917                           ; BSR set to: 1
  6918                           ;tcpv4.c: 459: {
  6919                           ;tcpv4.c: 460: ETH_Dump(tcpOptionsSize);
  6920  004F2A  D806               	call	PL697	;call to abstracted procedure
  6921  004F2C  EC5D  F031         	call	_ETH_Dump	;wreg free
  6922  004F30                     l8877:
  6923                           
  6924                           ; BSR set to: 1
  6925                           ;tcpv4.c: 461: ret = 1;
  6926  004F30  0E01               	movlw	1
  6927  004F32  6E1D               	movwf	TCP_ParseTCPOptions@ret,c
  6928  004F34                     l1154:
  6929                           
  6930                           ; BSR set to: 1
  6931                           ;tcpv4.c: 466: }
  6932                           ;tcpv4.c: 468: return ret;
  6933  004F34  501D               	movf	TCP_ParseTCPOptions@ret,w,c
  6934                           
  6935                           ; BSR set to: 1
  6936  004F36  0012               	return		;funcret
  6937  004F38                     __end_of_TCP_ParseTCPOptions:
  6938                           	opt stack 0
  6939  004F38                     PL697:
  6940                           	opt stack 16
  6941  004F38  C01F  F017         	movff	TCP_ParseTCPOptions@tcpOptionsSize,ETH_Dump@length
  6942  004F3C  C020  F018         	movff	TCP_ParseTCPOptions@tcpOptionsSize+1,ETH_Dump@length+1
  6943  004F40  0012               	return	
  6944  004F42                     __end_ofPL697:
  6945                           	opt stack 0
  6946                           tosu	equ	0xFFF
  6947                           tosh	equ	0xFFE
  6948                           tosl	equ	0xFFD
  6949                           pclath	equ	0xFFA
  6950                           tblptru	equ	0xFF8
  6951                           tblptrh	equ	0xFF7
  6952                           tblptrl	equ	0xFF6
  6953                           tablat	equ	0xFF5
  6954                           prodh	equ	0xFF4
  6955                           prodl	equ	0xFF3
  6956                           intcon	equ	0xFF2
  6957                           indf0	equ	0xFEF
  6958                           postinc0	equ	0xFEE
  6959                           fsr0h	equ	0xFEA
  6960                           fsr0l	equ	0xFE9
  6961                           wreg	equ	0xFE8
  6962                           postinc1	equ	0xFE6
  6963                           postdec1	equ	0xFE5
  6964                           plusw1	equ	0xFE3
  6965                           fsr1h	equ	0xFE2
  6966                           fsr1l	equ	0xFE1
  6967                           bsr	equ	0xFE0
  6968                           indf2	equ	0xFDF
  6969                           postinc2	equ	0xFDE
  6970                           postdec2	equ	0xFDD
  6971                           plusw2	equ	0xFDB
  6972                           fsr2h	equ	0xFDA
  6973                           fsr2l	equ	0xFD9
  6974                           status	equ	0xFD8
  6975                           
  6976 ;; *************** function _ETH_Read8 *****************
  6977 ;; Defined at:
  6978 ;;		line 380 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
  6979 ;; Parameters:    Size  Location     Type
  6980 ;;		None
  6981 ;; Auto vars:     Size  Location     Type
  6982 ;;  ret             1   22[COMRAM] unsigned char 
  6983 ;; Return value:  Size  Location     Type
  6984 ;;                  1    wreg      unsigned char 
  6985 ;; Registers used:
  6986 ;;		wreg, status,2, status,0, cstack
  6987 ;; Tracked objects:
  6988 ;;		On entry : E/0
  6989 ;;		On exit  : F/1
  6990 ;;		Unchanged: 0/0
  6991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6993 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6995 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6996 ;;Total ram usage:        1 bytes
  6997 ;; Hardware stack levels used:    1
  6998 ;; Hardware stack levels required when called:    9
  6999 ;; This function calls:
  7000 ;;		_ETH_EdataRead
  7001 ;; This function is called by:
  7002 ;;		_DHCP_Handler
  7003 ;;		_TCP_ParseTCPOptions
  7004 ;; This function uses a non-reentrant model
  7005 ;;
  7006                           
  7007                           	psect	text22
  7008  006372                     __ptext22:
  7009                           	opt stack 0
  7010  006372                     _ETH_Read8:
  7011                           	opt stack 16
  7012                           
  7013                           ;j60_driver.c: 382: uint8_t ret = 0;
  7014                           
  7015                           ; BSR set to: 1
  7016                           ;incstack = 0
  7017  006372  6A17               	clrf	ETH_Read8@ret,c
  7018                           
  7019                           ;j60_driver.c: 383: if(rxPacketStatusVector.byteCount >= sizeof(ret))
  7020  006374  0101               	movlb	1	; () banked
  7021  006376  51C9               	movf	_rxPacketStatusVector& (0+255),w,b
  7022  006378  11CA               	iorwf	(_rxPacketStatusVector+1)& (0+255),w,b
  7023  00637A  E007               	bz	l525
  7024  00637C                     i5L__ptext102:
  7025                           	opt stack 0
  7026  00637C                     i5L_ETH_EdataRead:
  7027                           	opt stack 0
  7028  00637C                     i5Ll7815:
  7029                           	opt stack 15
  7030  00637C  CF61 FE7E          	movff	3937,_errataTemp	;# 
  7031  006380                     i5Ll7817:
  7032                           	opt stack 15
  7033                           
  7034                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
  7035  006380  010E               	movlb	14	; () banked
  7036  006382  517E               	movf	126,w,b
  7037  006384                     i5Ll460:
  7038                           	opt stack 16
  7039  006384  6E17               	movwf	ETH_Read8@ret,c
  7040                           
  7041                           ; BSR set to: 14
  7042                           ;j60_driver.c: 386: rxPacketStatusVector.byteCount -= sizeof(ret);
  7043                           
  7044                           ; BSR set to: 1
  7045                           ;j60_driver.c: 387: ethData.error = 0;
  7046  006386  D804               	call	PL681	;call to abstracted procedure
  7047                           
  7048                           ;j60_driver.c: 388: }
  7049  006388  D001               	goto	l8527
  7050  00638A                     l525:
  7051                           
  7052                           ; BSR set to: 1
  7053                           ;j60_driver.c: 389: else
  7054                           ;j60_driver.c: 390: {
  7055                           ;j60_driver.c: 391: ethData.error = 1;
  7056  00638A  81BE               	bsf	_ethData& (0+255),0,b	;volatile
  7057  00638C                     l8527:
  7058                           
  7059                           ; BSR set to: 1
  7060                           ;j60_driver.c: 392: }
  7061                           ;j60_driver.c: 393: return ret;
  7062  00638C  5017               	movf	ETH_Read8@ret,w,c
  7063                           
  7064                           ; BSR set to: 1
  7065  00638E  0012               	return		;funcret
  7066  006390                     __end_of_ETH_Read8:
  7067                           	opt stack 0
  7068  006390                     PL681:
  7069                           	opt stack 17
  7070  006390  0101               	movlb	1	; () banked
  7071  006392  07C9               	decf	_rxPacketStatusVector& (0+255),f,b
  7072  006394  A0D8               	btfss	status,0,c
  7073  006396  07CA               	decf	(_rxPacketStatusVector+1)& (0+255),f,b
  7074  006398  91BE               	bcf	_ethData& (0+255),0,b	;volatile
  7075  00639A  0012               	return	
  7076  00639C                     __end_ofPL681:
  7077                           	opt stack 0
  7078                           tosu	equ	0xFFF
  7079                           tosh	equ	0xFFE
  7080                           tosl	equ	0xFFD
  7081                           pclath	equ	0xFFA
  7082                           tblptru	equ	0xFF8
  7083                           tblptrh	equ	0xFF7
  7084                           tblptrl	equ	0xFF6
  7085                           tablat	equ	0xFF5
  7086                           prodh	equ	0xFF4
  7087                           prodl	equ	0xFF3
  7088                           intcon	equ	0xFF2
  7089                           indf0	equ	0xFEF
  7090                           postinc0	equ	0xFEE
  7091                           fsr0h	equ	0xFEA
  7092                           fsr0l	equ	0xFE9
  7093                           wreg	equ	0xFE8
  7094                           postinc1	equ	0xFE6
  7095                           postdec1	equ	0xFE5
  7096                           plusw1	equ	0xFE3
  7097                           fsr1h	equ	0xFE2
  7098                           fsr1l	equ	0xFE1
  7099                           bsr	equ	0xFE0
  7100                           indf2	equ	0xFDF
  7101                           postinc2	equ	0xFDE
  7102                           postdec2	equ	0xFDD
  7103                           plusw2	equ	0xFDB
  7104                           fsr2h	equ	0xFDA
  7105                           fsr2l	equ	0xFD9
  7106                           status	equ	0xFD8
  7107                           
  7108 ;; *************** function _ETH_Read16 *****************
  7109 ;; Defined at:
  7110 ;;		line 399 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
  7111 ;; Parameters:    Size  Location     Type
  7112 ;;		None
  7113 ;; Auto vars:     Size  Location     Type
  7114 ;;  ret             2   24[COMRAM] unsigned int 
  7115 ;; Return value:  Size  Location     Type
  7116 ;;                  2   22[COMRAM] unsigned int 
  7117 ;; Registers used:
  7118 ;;		wreg, status,2, status,0, cstack
  7119 ;; Tracked objects:
  7120 ;;		On entry : E/0
  7121 ;;		On exit  : F/1
  7122 ;;		Unchanged: 0/0
  7123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7124 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7125 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7127 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7128 ;;Total ram usage:        4 bytes
  7129 ;; Hardware stack levels used:    1
  7130 ;; Hardware stack levels required when called:    9
  7131 ;; This function calls:
  7132 ;;		_ETH_EdataRead
  7133 ;; This function is called by:
  7134 ;;		_DHCP_Handler
  7135 ;;		_TCP_ParseTCPOptions
  7136 ;; This function uses a non-reentrant model
  7137 ;;
  7138                           
  7139                           	psect	text23
  7140  00608A                     __ptext23:
  7141                           	opt stack 0
  7142  00608A                     _ETH_Read16:
  7143                           	opt stack 16
  7144                           
  7145                           ;j60_driver.c: 401: uint16_t ret = 0;
  7146                           
  7147                           ; BSR set to: 1
  7148                           ;incstack = 0
  7149  00608A  6A19               	clrf	ETH_Read16@ret,c
  7150  00608C  6A1A               	clrf	ETH_Read16@ret+1,c
  7151                           
  7152                           ;j60_driver.c: 402: if(rxPacketStatusVector.byteCount >= sizeof(ret))
  7153  00608E  0101               	movlb	1	; () banked
  7154  006090  51CA               	movf	(_rxPacketStatusVector+1)& (0+255),w,b
  7155  006092  E103               	bnz	u12450
  7156  006094  0E02               	movlw	2
  7157  006096  5DC9               	subwf	_rxPacketStatusVector& (0+255),w,b
  7158  006098  E30D               	bnc	l530
  7159  00609A                     u12450:
  7160  00609A                     i6L__ptext102:
  7161                           	opt stack 0
  7162  00609A                     i6L_ETH_EdataRead:
  7163                           	opt stack 0
  7164  00609A                     i6Ll7815:
  7165                           	opt stack 15
  7166  00609A  CF61 FE7E          	movff	3937,_errataTemp	;# 
  7167  00609E                     i6Ll7817:
  7168                           	opt stack 15
  7169                           
  7170                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
  7171  00609E  010E               	movlb	14	; () banked
  7172  0060A0  517E               	movf	126,w,b
  7173  0060A2                     i6Ll460:
  7174                           	opt stack 16
  7175  0060A2  6E1A               	movwf	ETH_Read16@ret+1,c
  7176  0060A4                     i7L__ptext102:
  7177                           	opt stack 0
  7178  0060A4                     i7L_ETH_EdataRead:
  7179                           	opt stack 0
  7180  0060A4                     i7Ll7815:
  7181                           	opt stack 15
  7182  0060A4  CF61 FE7E          	movff	3937,_errataTemp	;# 
  7183  0060A8                     i7Ll7817:
  7184                           	opt stack 15
  7185                           
  7186                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
  7187  0060A8  010E               	movlb	14	; () banked
  7188  0060AA  517E               	movf	126,w,b
  7189  0060AC                     i7Ll460:
  7190                           	opt stack 16
  7191  0060AC  6E19               	movwf	ETH_Read16@ret,c
  7192                           
  7193                           ; BSR set to: 14
  7194                           ;j60_driver.c: 406: rxPacketStatusVector.byteCount -= sizeof(ret);
  7195  0060AE  0E02               	movlw	2
  7196                           
  7197                           ; BSR set to: 1
  7198                           ;j60_driver.c: 407: ethData.error = 0;
  7199  0060B0  D807               	call	PL679	;call to abstracted procedure
  7200                           
  7201                           ;j60_driver.c: 408: }
  7202  0060B2  D001               	goto	l531
  7203  0060B4                     l530:
  7204                           
  7205                           ; BSR set to: 1
  7206                           ;j60_driver.c: 409: else
  7207                           ;j60_driver.c: 410: {
  7208                           ;j60_driver.c: 411: ethData.error = 1;
  7209  0060B4  81BE               	bsf	_ethData& (0+255),0,b	;volatile
  7210  0060B6                     l531:
  7211                           
  7212                           ; BSR set to: 1
  7213                           ;j60_driver.c: 412: }
  7214                           ;j60_driver.c: 413: return ret;
  7215  0060B6  C019  F017         	movff	ETH_Read16@ret,?_ETH_Read16
  7216  0060BA  C01A  F018         	movff	ETH_Read16@ret+1,?_ETH_Read16+1
  7217                           
  7218                           ; BSR set to: 1
  7219  0060BE  0012               	return		;funcret
  7220  0060C0                     __end_of_ETH_Read16:
  7221                           	opt stack 0
  7222  0060C0                     PL679:
  7223                           	opt stack 16
  7224  0060C0  0101               	movlb	1	; () banked
  7225  0060C2  5FC9               	subwf	_rxPacketStatusVector& (0+255),f,b
  7226  0060C4  0E00               	movlw	0
  7227  0060C6  5BCA               	subwfb	(_rxPacketStatusVector+1)& (0+255),f,b
  7228  0060C8  91BE               	bcf	_ethData& (0+255),0,b	;volatile
  7229  0060CA  0C00               	retlw	0
  7230  0060CC                     __end_ofPL679:
  7231                           	opt stack 0
  7232                           tosu	equ	0xFFF
  7233                           tosh	equ	0xFFE
  7234                           tosl	equ	0xFFD
  7235                           pclath	equ	0xFFA
  7236                           tblptru	equ	0xFF8
  7237                           tblptrh	equ	0xFF7
  7238                           tblptrl	equ	0xFF6
  7239                           tablat	equ	0xFF5
  7240                           prodh	equ	0xFF4
  7241                           prodl	equ	0xFF3
  7242                           intcon	equ	0xFF2
  7243                           indf0	equ	0xFEF
  7244                           postinc0	equ	0xFEE
  7245                           fsr0h	equ	0xFEA
  7246                           fsr0l	equ	0xFE9
  7247                           wreg	equ	0xFE8
  7248                           postinc1	equ	0xFE6
  7249                           postdec1	equ	0xFE5
  7250                           plusw1	equ	0xFE3
  7251                           fsr1h	equ	0xFE2
  7252                           fsr1l	equ	0xFE1
  7253                           bsr	equ	0xFE0
  7254                           indf2	equ	0xFDF
  7255                           postinc2	equ	0xFDE
  7256                           postdec2	equ	0xFDD
  7257                           plusw2	equ	0xFDB
  7258                           fsr2h	equ	0xFDA
  7259                           fsr2l	equ	0xFD9
  7260                           status	equ	0xFD8
  7261                           
  7262 ;; *************** function _ETH_Dump *****************
  7263 ;; Defined at:
  7264 ;;		line 611 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
  7265 ;; Parameters:    Size  Location     Type
  7266 ;;  length          2   22[COMRAM] unsigned int 
  7267 ;; Auto vars:     Size  Location     Type
  7268 ;;		None
  7269 ;; Return value:  Size  Location     Type
  7270 ;;		None               void
  7271 ;; Registers used:
  7272 ;;		wreg, status,2, status,0
  7273 ;; Tracked objects:
  7274 ;;		On entry : 0/1
  7275 ;;		On exit  : F/1
  7276 ;;		Unchanged: 0/0
  7277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7278 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7281 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7282 ;;Total ram usage:        2 bytes
  7283 ;; Hardware stack levels used:    1
  7284 ;; Hardware stack levels required when called:    8
  7285 ;; This function calls:
  7286 ;;		Nothing
  7287 ;; This function is called by:
  7288 ;;		_DHCP_Handler
  7289 ;;		_IPV4_Packet
  7290 ;;		_TCP_ParseTCPOptions
  7291 ;; This function uses a non-reentrant model
  7292 ;;
  7293                           
  7294                           	psect	text24
  7295  0062BA                     __ptext24:
  7296                           	opt stack 0
  7297  0062BA                     _ETH_Dump:
  7298                           	opt stack 17
  7299                           
  7300                           ;j60_driver.c: 613: length = (rxPacketStatusVector.byteCount <= length) ? rxPacketStatus
      +                          Vector.byteCount : length;
  7301                           
  7302                           ; BSR set to: 1
  7303                           ;incstack = 0
  7304  0062BA  0101               	movlb	1	; () banked
  7305  0062BC  51C9               	movf	_rxPacketStatusVector& (0+255),w,b
  7306  0062BE  5C17               	subwf	ETH_Dump@length,w,c
  7307  0062C0  51CA               	movf	(_rxPacketStatusVector+1)& (0+255),w,b
  7308  0062C2  5818               	subwfb	ETH_Dump@length+1,w,c
  7309  0062C4  E304               	bnc	l8555
  7310                           
  7311                           ; BSR set to: 1
  7312  0062C6  C1C9  F017         	movff	_rxPacketStatusVector,ETH_Dump@length
  7313  0062CA  C1CA  F018         	movff	_rxPacketStatusVector+1,ETH_Dump@length+1
  7314  0062CE                     l8555:
  7315                           
  7316                           ; BSR set to: 1
  7317                           ;j60_driver.c: 614: if (length)
  7318  0062CE  5017               	movf	ETH_Dump@length,w,c
  7319  0062D0  1018               	iorwf	ETH_Dump@length+1,w,c
  7320  0062D2  B4D8               	btfsc	status,2,c
  7321  0062D4  0012               	return	
  7322                           
  7323                           ; BSR set to: 1
  7324                           ;j60_driver.c: 615: {
  7325                           ;j60_driver.c: 617: ERDPT += length;
  7326  0062D6  5017               	movf	ETH_Dump@length,w,c
  7327  0062D8  267A               	addwf	3962,f,c	;volatile
  7328  0062DA  5018               	movf	ETH_Dump@length+1,w,c
  7329  0062DC  227B               	addwfc	3963,f,c	;volatile
  7330                           
  7331                           ;j60_driver.c: 618: rxPacketStatusVector.byteCount -= length;
  7332  0062DE  5017               	movf	ETH_Dump@length,w,c
  7333  0062E0  5FC9               	subwf	_rxPacketStatusVector& (0+255),f,b
  7334  0062E2  5018               	movf	ETH_Dump@length+1,w,c
  7335  0062E4  5BCA               	subwfb	(_rxPacketStatusVector+1)& (0+255),f,b
  7336                           
  7337                           ; BSR set to: 1
  7338  0062E6  0012               	return		;funcret
  7339  0062E8                     __end_of_ETH_Dump:
  7340                           	opt stack 0
  7341                           tosu	equ	0xFFF
  7342                           tosh	equ	0xFFE
  7343                           tosl	equ	0xFFD
  7344                           pclath	equ	0xFFA
  7345                           tblptru	equ	0xFF8
  7346                           tblptrh	equ	0xFF7
  7347                           tblptrl	equ	0xFF6
  7348                           tablat	equ	0xFF5
  7349                           prodh	equ	0xFF4
  7350                           prodl	equ	0xFF3
  7351                           intcon	equ	0xFF2
  7352                           indf0	equ	0xFEF
  7353                           postinc0	equ	0xFEE
  7354                           fsr0h	equ	0xFEA
  7355                           fsr0l	equ	0xFE9
  7356                           wreg	equ	0xFE8
  7357                           postinc1	equ	0xFE6
  7358                           postdec1	equ	0xFE5
  7359                           plusw1	equ	0xFE3
  7360                           fsr1h	equ	0xFE2
  7361                           fsr1l	equ	0xFE1
  7362                           bsr	equ	0xFE0
  7363                           indf2	equ	0xFDF
  7364                           postinc2	equ	0xFDE
  7365                           postdec2	equ	0xFDD
  7366                           plusw2	equ	0xFDB
  7367                           fsr2h	equ	0xFDA
  7368                           fsr2l	equ	0xFD9
  7369                           status	equ	0xFD8
  7370                           
  7371 ;; *************** function _IPV4_PseudoHeaderChecksum *****************
  7372 ;; Defined at:
  7373 ;;		line 83 in file "../../TCPIP Library/source/ipv4.c"
  7374 ;; Parameters:    Size  Location     Type
  7375 ;;  payloadLen      2   22[COMRAM] unsigned int 
  7376 ;; Auto vars:     Size  Location     Type
  7377 ;;  tmp            12   34[COMRAM] struct .
  7378 ;;  cksm            4   30[COMRAM] unsigned long 
  7379 ;;  len             1   29[COMRAM] unsigned char 
  7380 ;;  v               1   28[COMRAM] PTR unsigned int 
  7381 ;;		 -> IPV4_PseudoHeaderChecksum@tmp(12), 
  7382 ;; Return value:  Size  Location     Type
  7383 ;;                  2   22[COMRAM] unsigned int 
  7384 ;; Registers used:
  7385 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7386 ;; Tracked objects:
  7387 ;;		On entry : F/1
  7388 ;;		On exit  : F/1
  7389 ;;		Unchanged: F/0
  7390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7391 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7392 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7393 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7394 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7395 ;;Total ram usage:       24 bytes
  7396 ;; Hardware stack levels used:    1
  7397 ;; Hardware stack levels required when called:    8
  7398 ;; This function calls:
  7399 ;;		Nothing
  7400 ;; This function is called by:
  7401 ;;		_IPV4_Packet
  7402 ;; This function uses a non-reentrant model
  7403 ;;
  7404                           
  7405                           	psect	text25
  7406  0055CE                     __ptext25:
  7407                           	opt stack 0
  7408  0055CE                     _IPV4_PseudoHeaderChecksum:
  7409                           	opt stack 19
  7410                           
  7411                           ; BSR set to: 1
  7412                           ;ipv4.c: 85: ipv4_pseudo_header_t tmp;
  7413                           ;ipv4.c: 86: uint8_t len;
  7414                           ;ipv4.c: 87: uint32_t cksm = 0;
  7415                           
  7416                           ; BSR set to: 1
  7417                           ;incstack = 0
  7418  0055CE  6A1F               	clrf	IPV4_PseudoHeaderChecksum@cksm,c
  7419  0055D0  6A20               	clrf	IPV4_PseudoHeaderChecksum@cksm+1,c
  7420  0055D2  6A21               	clrf	IPV4_PseudoHeaderChecksum@cksm+2,c
  7421  0055D4  6A22               	clrf	IPV4_PseudoHeaderChecksum@cksm+3,c
  7422                           
  7423                           ;ipv4.c: 88: uint16_t *v;
  7424                           ;ipv4.c: 90: tmp.srcIpAddress = ipv4Header.srcIpAddress;
  7425  0055D6  C2A5  F023         	movff	_ipv4Header+12,IPV4_PseudoHeaderChecksum@tmp
  7426  0055DA  C2A6  F024         	movff	_ipv4Header+13,IPV4_PseudoHeaderChecksum@tmp+1
  7427  0055DE  C2A7  F025         	movff	_ipv4Header+14,IPV4_PseudoHeaderChecksum@tmp+2
  7428  0055E2  C2A8  F026         	movff	_ipv4Header+15,IPV4_PseudoHeaderChecksum@tmp+3
  7429                           
  7430                           ;ipv4.c: 91: tmp.dstIpAddress = ipv4Header.dstIpAddress;
  7431  0055E6  C2A9  F027         	movff	_ipv4Header+16,IPV4_PseudoHeaderChecksum@tmp+4
  7432  0055EA  C2AA  F028         	movff	_ipv4Header+17,IPV4_PseudoHeaderChecksum@tmp+5
  7433  0055EE  C2AB  F029         	movff	_ipv4Header+18,IPV4_PseudoHeaderChecksum@tmp+6
  7434  0055F2  C2AC  F02A         	movff	_ipv4Header+19,IPV4_PseudoHeaderChecksum@tmp+7
  7435                           
  7436                           ;ipv4.c: 92: tmp.protocol = ipv4Header.protocol;
  7437  0055F6  C2A2  F02B         	movff	_ipv4Header+9,IPV4_PseudoHeaderChecksum@tmp+8
  7438                           
  7439                           ;ipv4.c: 93: tmp.z = 0;
  7440  0055FA  6A2C               	clrf	IPV4_PseudoHeaderChecksum@tmp+9,c
  7441                           
  7442                           ;ipv4.c: 94: tmp.length = payloadLen;
  7443  0055FC  C017  F02D         	movff	IPV4_PseudoHeaderChecksum@payloadLen,IPV4_PseudoHeaderChecksum@tmp+10
  7444  005600  C018  F02E         	movff	IPV4_PseudoHeaderChecksum@payloadLen+1,IPV4_PseudoHeaderChecksum@tmp+11
  7445                           
  7446                           ; BSR set to: 1
  7447                           ;ipv4.c: 96: len = sizeof(tmp);
  7448  005604  0E0C               	movlw	12
  7449  005606  6E1E               	movwf	IPV4_PseudoHeaderChecksum@len,c
  7450                           
  7451                           ; BSR set to: 1
  7452                           ;ipv4.c: 97: len = len >> 1;
  7453  005608  90D8               	bcf	status,0,c
  7454  00560A  321E               	rrcf	IPV4_PseudoHeaderChecksum@len,f,c
  7455                           
  7456                           ; BSR set to: 1
  7457                           ;ipv4.c: 99: v = (uint16_t *) &tmp;
  7458  00560C  0E23               	movlw	low IPV4_PseudoHeaderChecksum@tmp
  7459  00560E  6E1D               	movwf	IPV4_PseudoHeaderChecksum@v,c
  7460                           
  7461                           ;ipv4.c: 101: while(len)
  7462  005610  D011               	goto	l9291
  7463  005612                     l9285:
  7464                           
  7465                           ; BSR set to: 1
  7466                           ;ipv4.c: 102: {
  7467                           ;ipv4.c: 103: cksm += *v;
  7468  005612  501D               	movf	IPV4_PseudoHeaderChecksum@v,w,c
  7469  005614  6ED9               	movwf	fsr2l,c
  7470  005616  6ADA               	clrf	fsr2h,c
  7471  005618  CFDE F019          	movff	postinc2,??_IPV4_PseudoHeaderChecksum
  7472  00561C  CFDD F01A          	movff	postdec2,??_IPV4_PseudoHeaderChecksum+1
  7473  005620  5019               	movf	??_IPV4_PseudoHeaderChecksum,w,c
  7474  005622  261F               	addwf	IPV4_PseudoHeaderChecksum@cksm,f,c
  7475  005624  501A               	movf	??_IPV4_PseudoHeaderChecksum+1,w,c
  7476  005626  2220               	addwfc	IPV4_PseudoHeaderChecksum@cksm+1,f,c
  7477  005628  0E00               	movlw	0
  7478  00562A  2221               	addwfc	IPV4_PseudoHeaderChecksum@cksm+2,f,c
  7479  00562C  2222               	addwfc	IPV4_PseudoHeaderChecksum@cksm+3,f,c
  7480                           
  7481                           ; BSR set to: 1
  7482                           ;ipv4.c: 104: len--;
  7483  00562E  061E               	decf	IPV4_PseudoHeaderChecksum@len,f,c
  7484                           
  7485                           ; BSR set to: 1
  7486                           ;ipv4.c: 105: v++;
  7487  005630  0E02               	movlw	2
  7488  005632  261D               	addwf	IPV4_PseudoHeaderChecksum@v,f,c
  7489  005634                     l9291:
  7490                           
  7491                           ; BSR set to: 1
  7492  005634  501E               	movf	IPV4_PseudoHeaderChecksum@len,w,c
  7493  005636  E1ED               	bnz	l9285
  7494                           
  7495                           ; BSR set to: 1
  7496                           ;ipv4.c: 106: }
  7497                           ;ipv4.c: 109: cksm = (cksm & 0x0FFFF) + (cksm>>16);
  7498  005638  501F               	movf	IPV4_PseudoHeaderChecksum@cksm,w,c
  7499  00563A  6E19               	movwf	??_IPV4_PseudoHeaderChecksum& (0+255),c
  7500  00563C  5020               	movf	IPV4_PseudoHeaderChecksum@cksm+1,w,c
  7501  00563E  6E1A               	movwf	(??_IPV4_PseudoHeaderChecksum+1)& (0+255),c
  7502  005640  6A1B               	clrf	(??_IPV4_PseudoHeaderChecksum+2)& (0+255),c
  7503  005642  6A1C               	clrf	(??_IPV4_PseudoHeaderChecksum+3)& (0+255),c
  7504  005644  5021               	movf	IPV4_PseudoHeaderChecksum@cksm+2,w,c
  7505  005646  2419               	addwf	??_IPV4_PseudoHeaderChecksum,w,c
  7506  005648  6E1F               	movwf	IPV4_PseudoHeaderChecksum@cksm,c
  7507  00564A  5022               	movf	IPV4_PseudoHeaderChecksum@cksm+3,w,c
  7508  00564C  201A               	addwfc	??_IPV4_PseudoHeaderChecksum+1,w,c
  7509  00564E  6E20               	movwf	IPV4_PseudoHeaderChecksum@cksm+1,c
  7510  005650  0E00               	movlw	0
  7511  005652  201B               	addwfc	??_IPV4_PseudoHeaderChecksum+2,w,c
  7512  005654  6E21               	movwf	IPV4_PseudoHeaderChecksum@cksm+2,c
  7513  005656  0E00               	movlw	0
  7514  005658  201C               	addwfc	??_IPV4_PseudoHeaderChecksum+3,w,c
  7515  00565A  6E22               	movwf	IPV4_PseudoHeaderChecksum@cksm+3,c
  7516                           
  7517                           ; BSR set to: 1
  7518                           ;ipv4.c: 112: return cksm;
  7519  00565C  C01F  F017         	movff	IPV4_PseudoHeaderChecksum@cksm,?_IPV4_PseudoHeaderChecksum
  7520  005660  C020  F018         	movff	IPV4_PseudoHeaderChecksum@cksm+1,?_IPV4_PseudoHeaderChecksum+1
  7521                           
  7522                           ; BSR set to: 1
  7523  005664  0012               	return		;funcret
  7524  005666                     __end_of_IPV4_PseudoHeaderChecksum:
  7525                           	opt stack 0
  7526                           tosu	equ	0xFFF
  7527                           tosh	equ	0xFFE
  7528                           tosl	equ	0xFFD
  7529                           pclath	equ	0xFFA
  7530                           tblptru	equ	0xFF8
  7531                           tblptrh	equ	0xFF7
  7532                           tblptrl	equ	0xFF6
  7533                           tablat	equ	0xFF5
  7534                           prodh	equ	0xFF4
  7535                           prodl	equ	0xFF3
  7536                           intcon	equ	0xFF2
  7537                           indf0	equ	0xFEF
  7538                           postinc0	equ	0xFEE
  7539                           fsr0h	equ	0xFEA
  7540                           fsr0l	equ	0xFE9
  7541                           wreg	equ	0xFE8
  7542                           postinc1	equ	0xFE6
  7543                           postdec1	equ	0xFE5
  7544                           plusw1	equ	0xFE3
  7545                           fsr1h	equ	0xFE2
  7546                           fsr1l	equ	0xFE1
  7547                           bsr	equ	0xFE0
  7548                           indf2	equ	0xFDF
  7549                           postinc2	equ	0xFDE
  7550                           postdec2	equ	0xFDD
  7551                           plusw2	equ	0xFDB
  7552                           fsr2h	equ	0xFDA
  7553                           fsr2l	equ	0xFD9
  7554                           status	equ	0xFD8
  7555                           
  7556 ;; *************** function _ICMP_Receive *****************
  7557 ;; Defined at:
  7558 ;;		line 56 in file "../../TCPIP Library/source/icmp.c"
  7559 ;; Parameters:    Size  Location     Type
  7560 ;;  ipv4Hdr         2   79[BANK0 ] PTR struct .
  7561 ;;		 -> ipv4Header(20), 
  7562 ;; Auto vars:     Size  Location     Type
  7563 ;;  icmpHdr         8   86[BANK0 ] struct .
  7564 ;;  ret             1    0        enum E366
  7565 ;; Return value:  Size  Location     Type
  7566 ;;                  1    wreg      enum E366
  7567 ;; Registers used:
  7568 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7569 ;; Tracked objects:
  7570 ;;		On entry : F/0
  7571 ;;		On exit  : F/0
  7572 ;;		Unchanged: 0/0
  7573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7574 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7575 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7576 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7577 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7578 ;;Total ram usage:       15 bytes
  7579 ;; Hardware stack levels used:    1
  7580 ;; Hardware stack levels required when called:   14
  7581 ;; This function calls:
  7582 ;;		_ETH_ReadBlock
  7583 ;;		_ETH_SaveRDPT
  7584 ;;		_ICMP_EchoReply
  7585 ;; This function is called by:
  7586 ;;		_IPV4_Packet
  7587 ;; This function uses a non-reentrant model
  7588 ;;
  7589                           
  7590                           	psect	text26
  7591  005ECC                     __ptext26:
  7592                           	opt stack 0
  7593  005ECC                     _ICMP_Receive:
  7594                           	opt stack 13
  7595                           
  7596                           ; BSR set to: 0
  7597                           ;icmp.c: 60: ETH_ReadBlock((char *)&icmpHdr, sizeof(icmpHeader_t));
  7598                           
  7599                           ; BSR set to: 0
  7600                           
  7601                           ; BSR set to: 1
  7602                           ;incstack = 0
  7603  005ECC  0EB6               	movlw	low ICMP_Receive@icmpHdr
  7604  005ECE  6E17               	movwf	ETH_ReadBlock@buffer,c
  7605  005ED0  6A18               	clrf	ETH_ReadBlock@buffer+1,c
  7606  005ED2  D81E               	call	PL757	;call to abstracted procedure
  7607  005ED4  ECC9  F02D         	call	_ETH_ReadBlock	;wreg free
  7608                           
  7609                           ; BSR set to: 1
  7610                           ;icmp.c: 61: ETH_SaveRDPT();
  7611  005ED8  EC84  F033         	call	_ETH_SaveRDPT	;wreg free
  7612                           
  7613                           ;icmp.c: 63: switch(((((uint16_t)(icmpTypeCodes_t)icmpHdr.typeCode & (uint16_t)0xFF00) >
      +                          > 8) | (((uint16_t)(icmpTypeCodes_t)icmpHdr.typeCode & (uint16_t)0x00FF) << 8)))
  7614  005EDC  D007               	goto	l9271
  7615  005EDE                     l9267:
  7616                           
  7617                           ; BSR set to: 0
  7618  005EDE  C0AF  F09F         	movff	ICMP_Receive@ipv4Hdr,ICMP_EchoReply@ipv4Hdr
  7619  005EE2  C0B0  F0A0         	movff	ICMP_Receive@ipv4Hdr+1,ICMP_EchoReply@ipv4Hdr+1
  7620  005EE6  0EB6               	movlw	ICMP_Receive@icmpHdr& (0+255)
  7621  005EE8  EF4A  F025         	goto	_ICMP_EchoReply
  7622  005EEC                     l9271:
  7623  005EEC  0100               	movlb	0	; () banked
  7624  005EEE  51B6               	movf	ICMP_Receive@icmpHdr& (0+255),w,b
  7625  005EF0  6FB2               	movwf	(??_ICMP_Receive+1)& (0+255),b
  7626  005EF2  6BB1               	clrf	??_ICMP_Receive& (0+255),b
  7627  005EF4  51B7               	movf	(ICMP_Receive@icmpHdr+1)& (0+255),w,b
  7628  005EF6  6FB3               	movwf	(??_ICMP_Receive+2)& (0+255),b
  7629  005EF8  6BB4               	clrf	(??_ICMP_Receive+3)& (0+255),b
  7630  005EFA  51B1               	movf	??_ICMP_Receive& (0+255),w,b
  7631  005EFC  13B3               	iorwf	(??_ICMP_Receive+2)& (0+255),f,b
  7632  005EFE  51B2               	movf	(??_ICMP_Receive+1)& (0+255),w,b
  7633  005F00  13B4               	iorwf	(??_ICMP_Receive+3)& (0+255),f,b
  7634                           
  7635                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7636                           ; Switch size 1, requested type "space"
  7637                           ; Number of cases is 1, Range of values is 8 to 8
  7638                           ; switch strategies available:
  7639                           ; Name         Instructions Cycles
  7640                           ; simple_byte            4     3 (average)
  7641                           ;	Chosen strategy is simple_byte
  7642  005F02  51B4               	movf	(??_ICMP_Receive+3)& (0+255),w,b
  7643  005F04  0A08               	xorlw	8	; case 8
  7644  005F06  A4D8               	btfss	status,2,c
  7645  005F08  0012               	return	
  7646                           
  7647                           ; BSR set to: 0
  7648                           ; Switch size 1, requested type "space"
  7649                           ; Number of cases is 1, Range of values is 0 to 0
  7650                           ; switch strategies available:
  7651                           ; Name         Instructions Cycles
  7652                           ; simple_byte            4     3 (average)
  7653                           ;	Chosen strategy is simple_byte
  7654  005F0A  51B3               	movf	(??_ICMP_Receive+2)& (0+255),w,b
  7655  005F0C  E0E8               	bz	l9267
  7656                           
  7657                           ; BSR set to: 0
  7658  005F0E  0012               	return		;funcret
  7659  005F10                     __end_of_ICMP_Receive:
  7660                           	opt stack 0
  7661  005F10                     PL757:
  7662                           	opt stack 12
  7663  005F10  6A1A               	clrf	ETH_ReadBlock@length+1,c
  7664  005F12  0E08               	movlw	8
  7665  005F14  6E19               	movwf	ETH_ReadBlock@length,c
  7666  005F16  0C08               	retlw	8
  7667  005F18                     __end_ofPL757:
  7668                           	opt stack 0
  7669                           tosu	equ	0xFFF
  7670                           tosh	equ	0xFFE
  7671                           tosl	equ	0xFFD
  7672                           pclath	equ	0xFFA
  7673                           tblptru	equ	0xFF8
  7674                           tblptrh	equ	0xFF7
  7675                           tblptrl	equ	0xFF6
  7676                           tablat	equ	0xFF5
  7677                           prodh	equ	0xFF4
  7678                           prodl	equ	0xFF3
  7679                           intcon	equ	0xFF2
  7680                           indf0	equ	0xFEF
  7681                           postinc0	equ	0xFEE
  7682                           fsr0h	equ	0xFEA
  7683                           fsr0l	equ	0xFE9
  7684                           wreg	equ	0xFE8
  7685                           postinc1	equ	0xFE6
  7686                           postdec1	equ	0xFE5
  7687                           plusw1	equ	0xFE3
  7688                           fsr1h	equ	0xFE2
  7689                           fsr1l	equ	0xFE1
  7690                           bsr	equ	0xFE0
  7691                           indf2	equ	0xFDF
  7692                           postinc2	equ	0xFDE
  7693                           postdec2	equ	0xFDD
  7694                           plusw2	equ	0xFDB
  7695                           fsr2h	equ	0xFDA
  7696                           fsr2l	equ	0xFD9
  7697                           status	equ	0xFD8
  7698                           
  7699 ;; *************** function _ICMP_EchoReply *****************
  7700 ;; Defined at:
  7701 ;;		line 86 in file "../../TCPIP Library/source/icmp.c"
  7702 ;; Parameters:    Size  Location     Type
  7703 ;;  icmpHdr         1    wreg     PTR struct .
  7704 ;;		 -> ICMP_Receive@icmpHdr(8), 
  7705 ;;  ipv4Hdr         2   63[BANK0 ] PTR struct .
  7706 ;;		 -> ipv4Header(20), 
  7707 ;; Auto vars:     Size  Location     Type
  7708 ;;  icmpHdr         1   78[BANK0 ] PTR struct .
  7709 ;;		 -> ICMP_Receive@icmpHdr(8), 
  7710 ;;  ipv4PayloadL    2   75[BANK0 ] unsigned int 
  7711 ;;  icmp_cksm_st    2    0        unsigned int 
  7712 ;;  cksm            2   73[BANK0 ] unsigned int 
  7713 ;;  ret             1   77[BANK0 ] enum E366
  7714 ;; Return value:  Size  Location     Type
  7715 ;;                  1    wreg      enum E366
  7716 ;; Registers used:
  7717 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7718 ;; Tracked objects:
  7719 ;;		On entry : F/0
  7720 ;;		On exit  : F/0
  7721 ;;		Unchanged: 0/0
  7722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7723 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7724 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7725 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7726 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7727 ;;Total ram usage:       16 bytes
  7728 ;; Hardware stack levels used:    1
  7729 ;; Hardware stack levels required when called:   13
  7730 ;; This function calls:
  7731 ;;		_ETH_Copy
  7732 ;;		_ETH_Insert
  7733 ;;		_ETH_SaveRDPT
  7734 ;;		_ETH_TxComputeChecksum
  7735 ;;		_ETH_Write16
  7736 ;;		_IPV4_Send
  7737 ;;		_IPv4_Start
  7738 ;; This function is called by:
  7739 ;;		_ICMP_Receive
  7740 ;; This function uses a non-reentrant model
  7741 ;;
  7742                           
  7743                           	psect	text27
  7744  004A94                     __ptext27:
  7745                           	opt stack 0
  7746  004A94                     _ICMP_EchoReply:
  7747                           	opt stack 13
  7748                           
  7749                           ; BSR set to: 0
  7750                           ;incstack = 0
  7751                           ;ICMP_EchoReply@icmpHdr stored from wreg
  7752  004A94  6FAE               	movwf	ICMP_EchoReply@icmpHdr& (0+255),b
  7753                           
  7754                           ;icmp.c: 89: error_msg ret = ERROR;
  7755  004A96  0100               	movlb	0	; () banked
  7756  004A98  6BAD               	clrf	ICMP_EchoReply@ret& (0+255),b
  7757                           
  7758                           ; BSR set to: 0
  7759                           ;icmp.c: 91: ret = IPv4_Start(ipv4Hdr->srcIpAddress, ipv4Hdr->protocol);
  7760  004A9A  EE20 F00C          	lfsr	2,12
  7761  004A9E  D89A               	call	PL627	;call to abstracted procedure
  7762  004AA0  CFDE F022          	movff	postinc2,IPv4_Start@destAddress
  7763  004AA4  CFDE F023          	movff	postinc2,IPv4_Start@destAddress+1
  7764  004AA8  CFDE F024          	movff	postinc2,IPv4_Start@destAddress+2
  7765  004AAC  CFDE F025          	movff	postinc2,IPv4_Start@destAddress+3
  7766  004AB0  EE20 F009          	lfsr	2,9
  7767  004AB4  D88F               	call	PL627	;call to abstracted procedure
  7768  004AB6  50DF               	movf	indf2,w,c
  7769  004AB8  6E26               	movwf	IPv4_Start@protocol,c
  7770  004ABA  EC22  F023         	call	_IPv4_Start	;wreg free
  7771  004ABE  6FAD               	movwf	ICMP_EchoReply@ret& (0+255),b
  7772                           
  7773                           ; BSR set to: 0
  7774                           ;icmp.c: 92: if(ret == SUCCESS)
  7775  004AC0  05AD               	decf	ICMP_EchoReply@ret& (0+255),w,b
  7776  004AC2  E16A               	bnz	l8817
  7777                           
  7778                           ; BSR set to: 0
  7779                           ;icmp.c: 93: {
  7780                           ;icmp.c: 94: uint16_t icmp_cksm_start;
  7781                           ;icmp.c: 95: uint16_t ipv4PayloadLength = ipv4Hdr->length - sizeof(ipv4Header_t);
  7782  004AC4  EE20 F002          	lfsr	2,2
  7783  004AC8  D885               	call	PL627	;call to abstracted procedure
  7784  004ACA  CFDE F0A1          	movff	postinc2,??_ICMP_EchoReply
  7785  004ACE  CFDD F0A2          	movff	postdec2,??_ICMP_EchoReply+1
  7786  004AD2  0EEC               	movlw	236
  7787  004AD4  25A1               	addwf	??_ICMP_EchoReply& (0+255),w,b
  7788  004AD6  6FAB               	movwf	ICMP_EchoReply@ipv4PayloadLength& (0+255),b
  7789  004AD8  0EFF               	movlw	255
  7790  004ADA  21A2               	addwfc	(??_ICMP_EchoReply+1)& (0+255),w,b
  7791  004ADC  6FAC               	movwf	(ICMP_EchoReply@ipv4PayloadLength+1)& (0+255),b
  7792                           
  7793                           ;icmp.c: 97: ipv4PayloadLength = ipv4Hdr->length - (uint16_t)(ipv4Hdr->ihl << 2);
  7794  004ADE  C09F  FFD9         	movff	ICMP_EchoReply@ipv4Hdr,fsr2l
  7795  004AE2  C0A0  FFDA         	movff	ICMP_EchoReply@ipv4Hdr+1,fsr2h
  7796  004AE6  50DF               	movf	223,w,c
  7797  004AE8  0B0F               	andlw	15
  7798  004AEA  6FA1               	movwf	??_ICMP_EchoReply& (0+255),b
  7799  004AEC  6BA2               	clrf	(??_ICMP_EchoReply+1)& (0+255),b
  7800  004AEE  90D8               	bcf	status,0,c
  7801  004AF0  37A1               	rlcf	??_ICMP_EchoReply& (0+255),f,b
  7802  004AF2  37A2               	rlcf	(??_ICMP_EchoReply+1)& (0+255),f,b
  7803  004AF4  90D8               	bcf	status,0,c
  7804  004AF6  37A1               	rlcf	??_ICMP_EchoReply& (0+255),f,b
  7805  004AF8  37A2               	rlcf	(??_ICMP_EchoReply+1)& (0+255),f,b
  7806  004AFA  EE20 F002          	lfsr	2,2
  7807  004AFE  D86A               	call	PL627	;call to abstracted procedure
  7808  004B00  CFDE F0A3          	movff	postinc2,??_ICMP_EchoReply+2
  7809  004B04  CFDD F0A4          	movff	postdec2,??_ICMP_EchoReply+3
  7810  004B08  51A1               	movf	??_ICMP_EchoReply& (0+255),w,b
  7811  004B0A  5DA3               	subwf	(??_ICMP_EchoReply+2)& (0+255),w,b
  7812  004B0C  6FAB               	movwf	ICMP_EchoReply@ipv4PayloadLength& (0+255),b
  7813  004B0E  51A2               	movf	(??_ICMP_EchoReply+1)& (0+255),w,b
  7814  004B10  59A4               	subwfb	(??_ICMP_EchoReply+3)& (0+255),w,b
  7815  004B12  6FAC               	movwf	(ICMP_EchoReply@ipv4PayloadLength+1)& (0+255),b
  7816                           
  7817                           ; BSR set to: 0
  7818                           ;icmp.c: 99: ETH_Write16(ECHO_REPLY);
  7819  004B14  6A18               	clrf	ETH_Write16@data+1,c
  7820  004B16  6A17               	clrf	ETH_Write16@data,c
  7821  004B18  EC72  F033         	call	_ETH_Write16	;wreg free
  7822                           
  7823                           ;icmp.c: 100: ETH_Write16(0);
  7824  004B1C  6A18               	clrf	ETH_Write16@data+1,c
  7825  004B1E  6A17               	clrf	ETH_Write16@data,c
  7826  004B20  EC72  F033         	call	_ETH_Write16	;wreg free
  7827                           
  7828                           ;icmp.c: 101: ETH_Write16(((((uint16_t)icmpHdr->identifier & (uint16_t)0xFF00) >> 8) | (
      +                          ((uint16_t)icmpHdr->identifier & (uint16_t)0x00FF) << 8)));
  7829  004B24  D85C               	call	PL729	;call to abstracted procedure
  7830  004B26  0E04               	movlw	4
  7831  004B28  D849               	call	PL579	;call to abstracted procedure
  7832  004B2A  0E04               	movlw	4
  7833  004B2C  D837               	call	PL511	;call to abstracted procedure
  7834  004B2E  EC72  F033         	call	_ETH_Write16	;wreg free
  7835                           
  7836                           ;icmp.c: 102: ETH_Write16(((((uint16_t)icmpHdr->sequence & (uint16_t)0xFF00) >> 8) | (((
      +                          uint16_t)icmpHdr->sequence & (uint16_t)0x00FF) << 8)));
  7837  004B32  D855               	call	PL729	;call to abstracted procedure
  7838  004B34  0E06               	movlw	6
  7839  004B36  D842               	call	PL579	;call to abstracted procedure
  7840  004B38  0E06               	movlw	6
  7841  004B3A  D830               	call	PL511	;call to abstracted procedure
  7842  004B3C  EC72  F033         	call	_ETH_Write16	;wreg free
  7843                           
  7844                           ;icmp.c: 105: ret = ETH_Copy(ipv4PayloadLength - sizeof(icmpHeader_t));
  7845  004B40  0EF8               	movlw	248
  7846  004B42  0100               	movlb	0	; () banked
  7847  004B44  25AB               	addwf	ICMP_EchoReply@ipv4PayloadLength& (0+255),w,b
  7848  004B46  6F71               	movwf	ETH_Copy@len& (0+255),b
  7849  004B48  0EFF               	movlw	255
  7850  004B4A  21AC               	addwfc	(ICMP_EchoReply@ipv4PayloadLength+1)& (0+255),w,b
  7851  004B4C  6F72               	movwf	(ETH_Copy@len+1)& (0+255),b
  7852  004B4E  EC93  F028         	call	_ETH_Copy	;wreg free
  7853  004B52  0100               	movlb	0	; () banked
  7854  004B54  6FAD               	movwf	ICMP_EchoReply@ret& (0+255),b
  7855                           
  7856                           ; BSR set to: 0
  7857                           ;icmp.c: 106: if(ret==SUCCESS)
  7858  004B56  05AD               	decf	ICMP_EchoReply@ret& (0+255),w,b
  7859  004B58  E11F               	bnz	l8817
  7860                           
  7861                           ; BSR set to: 0
  7862                           ;icmp.c: 107: {
  7863                           ;icmp.c: 108: ETH_SaveRDPT();
  7864  004B5A  EC84  F033         	call	_ETH_SaveRDPT	;wreg free
  7865                           
  7866                           ;icmp.c: 112: cksm = ETH_TxComputeChecksum(icmp_cksm_start, ipv4PayloadLength, 0);
  7867  004B5E  6A26               	clrf	ETH_TxComputeChecksum@position+1,c
  7868  004B60  0E22               	movlw	34
  7869  004B62  6E25               	movwf	ETH_TxComputeChecksum@position,c
  7870  004B64  C0AB  F027         	movff	ICMP_EchoReply@ipv4PayloadLength,ETH_TxComputeChecksum@len
  7871  004B68  C0AC  F028         	movff	ICMP_EchoReply@ipv4PayloadLength+1,ETH_TxComputeChecksum@len+1
  7872  004B6C  6A2A               	clrf	ETH_TxComputeChecksum@seed+1,c
  7873  004B6E  6A29               	clrf	ETH_TxComputeChecksum@seed,c
  7874  004B70  ECC8  F02B         	call	_ETH_TxComputeChecksum	;wreg free
  7875  004B74  C025  F0A9         	movff	?_ETH_TxComputeChecksum,ICMP_EchoReply@cksm
  7876  004B78  C026  F0AA         	movff	?_ETH_TxComputeChecksum+1,ICMP_EchoReply@cksm+1
  7877                           
  7878                           ; BSR set to: 0
  7879                           ;icmp.c: 113: ETH_Insert((char *)&cksm,sizeof(cksm),sizeof(ethernetFrame_t) + sizeof(ipv
      +                          4Header_t) + (int)(((char*)&((icmpHeader_t *)1)->checksum)-1));
  7880  004B7C  ECC4  F02D         	call	PL587	;call to abstracted procedure
  7881  004B80  0E24               	movlw	36
  7882  004B82  6E19               	movwf	ETH_Insert@offset,c
  7883  004B84  0EA9               	movlw	ICMP_EchoReply@cksm& (0+255)
  7884  004B86  EC66  F030         	call	_ETH_Insert
  7885                           
  7886                           ;icmp.c: 114: ret = IPV4_Send(ipv4PayloadLength);
  7887  004B8A  C0AB  F031         	movff	ICMP_EchoReply@ipv4PayloadLength,IPV4_Send@payloadLength
  7888  004B8E  C0AC  F032         	movff	ICMP_EchoReply@ipv4PayloadLength+1,IPV4_Send@payloadLength+1
  7889  004B92  EC91  F02D         	call	_IPV4_Send	;wreg free
  7890  004B96  6FAD               	movwf	ICMP_EchoReply@ret& (0+255),b
  7891  004B98                     l8817:
  7892                           
  7893                           ; BSR set to: 0
  7894                           ;icmp.c: 115: }
  7895                           ;icmp.c: 116: }
  7896                           ;icmp.c: 117: return ret;
  7897  004B98  51AD               	movf	ICMP_EchoReply@ret& (0+255),w,b
  7898                           
  7899                           ; BSR set to: 0
  7900  004B9A  0012               	return		;funcret
  7901  004B9C                     __end_of_ICMP_EchoReply:
  7902                           	opt stack 0
  7903  004B9C                     PL511:
  7904                           	opt stack 13
  7905  004B9C  26D9               	addwf	fsr2l,f,c
  7906  004B9E  CFDE F0A5          	movff	postinc2,??_ICMP_EchoReply+4
  7907  004BA2  CFDD F0A6          	movff	postdec2,??_ICMP_EchoReply+5
  7908  004BA6  C0A6  F0A5         	movff	??_ICMP_EchoReply+5,??_ICMP_EchoReply+4
  7909  004BAA  6BA6               	clrf	(??_ICMP_EchoReply+5)& (0+255),b
  7910  004BAC  6BA6               	clrf	(??_ICMP_EchoReply+5)& (0+255),b
  7911  004BAE  51A3               	movf	(??_ICMP_EchoReply+2)& (0+255),w,b
  7912  004BB0  11A5               	iorwf	(??_ICMP_EchoReply+4)& (0+255),w,b
  7913  004BB2  6E17               	movwf	ETH_Write16@data,c
  7914  004BB4  51A4               	movf	(??_ICMP_EchoReply+3)& (0+255),w,b
  7915  004BB6  11A6               	iorwf	(??_ICMP_EchoReply+5)& (0+255),w,b
  7916  004BB8  6E18               	movwf	ETH_Write16@data+1,c
  7917  004BBA  0012               	return	
  7918  004BBC                     __end_ofPL511:
  7919                           	opt stack 0
  7920  004BBC                     PL579:
  7921                           	opt stack 13
  7922  004BBC  26D9               	addwf	fsr2l,f,c
  7923  004BBE  CFDE F0A1          	movff	postinc2,??_ICMP_EchoReply
  7924  004BC2  CFDD F0A2          	movff	postdec2,??_ICMP_EchoReply+1
  7925  004BC6  51A1               	movf	??_ICMP_EchoReply& (0+255),w,b
  7926  004BC8  6FA4               	movwf	(??_ICMP_EchoReply+3)& (0+255),b
  7927  004BCA  6BA3               	clrf	(??_ICMP_EchoReply+2)& (0+255),b
  7928  004BCC  51AE               	movf	ICMP_EchoReply@icmpHdr& (0+255),w,b
  7929  004BCE  6ED9               	movwf	fsr2l,c
  7930  004BD0  6ADA               	clrf	fsr2h,c
  7931  004BD2  0012               	return	
  7932  004BD4                     __end_ofPL579:
  7933                           	opt stack 0
  7934  004BD4                     PL627:
  7935                           	opt stack 13
  7936  004BD4  519F               	movf	ICMP_EchoReply@ipv4Hdr& (0+255),w,b
  7937  004BD6  26D9               	addwf	fsr2l,f,c
  7938  004BD8  51A0               	movf	(ICMP_EchoReply@ipv4Hdr+1)& (0+255),w,b
  7939  004BDA  22DA               	addwfc	fsr2h,f,c
  7940  004BDC  0012               	return	
  7941  004BDE                     __end_ofPL627:
  7942                           	opt stack 0
  7943  004BDE                     PL729:
  7944                           	opt stack 13
  7945  004BDE  0100               	movlb	0	; () banked
  7946  004BE0  51AE               	movf	ICMP_EchoReply@icmpHdr& (0+255),w,b
  7947  004BE2  6ED9               	movwf	fsr2l,c
  7948  004BE4  6ADA               	clrf	fsr2h,c
  7949  004BE6  0012               	return	
  7950  004BE8                     __end_ofPL729:
  7951                           	opt stack 0
  7952                           tosu	equ	0xFFF
  7953                           tosh	equ	0xFFE
  7954                           tosl	equ	0xFFD
  7955                           pclath	equ	0xFFA
  7956                           tblptru	equ	0xFF8
  7957                           tblptrh	equ	0xFF7
  7958                           tblptrl	equ	0xFF6
  7959                           tablat	equ	0xFF5
  7960                           prodh	equ	0xFF4
  7961                           prodl	equ	0xFF3
  7962                           intcon	equ	0xFF2
  7963                           indf0	equ	0xFEF
  7964                           postinc0	equ	0xFEE
  7965                           fsr0h	equ	0xFEA
  7966                           fsr0l	equ	0xFE9
  7967                           wreg	equ	0xFE8
  7968                           postinc1	equ	0xFE6
  7969                           postdec1	equ	0xFE5
  7970                           plusw1	equ	0xFE3
  7971                           fsr1h	equ	0xFE2
  7972                           fsr1l	equ	0xFE1
  7973                           bsr	equ	0xFE0
  7974                           indf2	equ	0xFDF
  7975                           postinc2	equ	0xFDE
  7976                           postdec2	equ	0xFDD
  7977                           plusw2	equ	0xFDB
  7978                           fsr2h	equ	0xFDA
  7979                           fsr2l	equ	0xFD9
  7980                           status	equ	0xFD8
  7981                           
  7982 ;; *************** function _ETH_SaveRDPT *****************
  7983 ;; Defined at:
  7984 ;;		line 828 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
  7985 ;; Parameters:    Size  Location     Type
  7986 ;;		None
  7987 ;; Auto vars:     Size  Location     Type
  7988 ;;		None
  7989 ;; Return value:  Size  Location     Type
  7990 ;;		None               void
  7991 ;; Registers used:
  7992 ;;		None
  7993 ;; Tracked objects:
  7994 ;;		On entry : E/1
  7995 ;;		On exit  : E/0
  7996 ;;		Unchanged: E/0
  7997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8002 ;;Total ram usage:        0 bytes
  8003 ;; Hardware stack levels used:    1
  8004 ;; Hardware stack levels required when called:    8
  8005 ;; This function calls:
  8006 ;;		Nothing
  8007 ;; This function is called by:
  8008 ;;		_ICMP_Receive
  8009 ;;		_ICMP_EchoReply
  8010 ;; This function uses a non-reentrant model
  8011 ;;
  8012                           
  8013                           	psect	text28
  8014  006708                     __ptext28:
  8015                           	opt stack 0
  8016  006708                     _ETH_SaveRDPT:
  8017                           	opt stack 17
  8018                           
  8019                           ;j60_driver.c: 830: ethData.saveRDPT = ERDPT;
  8020                           
  8021                           ; BSR set to: 0
  8022                           ;incstack = 0
  8023  006708  CF7A F1C1          	movff	3962,_ethData+3	;volatile
  8024  00670C  CF7B F1C2          	movff	3963,_ethData+4	;volatile
  8025  006710  0012               	return		;funcret
  8026  006712                     __end_of_ETH_SaveRDPT:
  8027                           	opt stack 0
  8028                           tosu	equ	0xFFF
  8029                           tosh	equ	0xFFE
  8030                           tosl	equ	0xFFD
  8031                           pclath	equ	0xFFA
  8032                           tblptru	equ	0xFF8
  8033                           tblptrh	equ	0xFF7
  8034                           tblptrl	equ	0xFF6
  8035                           tablat	equ	0xFF5
  8036                           prodh	equ	0xFF4
  8037                           prodl	equ	0xFF3
  8038                           intcon	equ	0xFF2
  8039                           indf0	equ	0xFEF
  8040                           postinc0	equ	0xFEE
  8041                           fsr0h	equ	0xFEA
  8042                           fsr0l	equ	0xFE9
  8043                           wreg	equ	0xFE8
  8044                           postinc1	equ	0xFE6
  8045                           postdec1	equ	0xFE5
  8046                           plusw1	equ	0xFE3
  8047                           fsr1h	equ	0xFE2
  8048                           fsr1l	equ	0xFE1
  8049                           bsr	equ	0xFE0
  8050                           indf2	equ	0xFDF
  8051                           postinc2	equ	0xFDE
  8052                           postdec2	equ	0xFDD
  8053                           plusw2	equ	0xFDB
  8054                           fsr2h	equ	0xFDA
  8055                           fsr2l	equ	0xFD9
  8056                           status	equ	0xFD8
  8057                           
  8058 ;; *************** function _ETH_Copy *****************
  8059 ;; Defined at:
  8060 ;;		line 668 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
  8061 ;; Parameters:    Size  Location     Type
  8062 ;;  len             2   17[BANK0 ] unsigned int 
  8063 ;; Auto vars:     Size  Location     Type
  8064 ;;  tmp_len         2   21[BANK0 ] unsigned int 
  8065 ;;  timer           2   19[BANK0 ] unsigned int 
  8066 ;; Return value:  Size  Location     Type
  8067 ;;                  1    wreg      enum E6944
  8068 ;; Registers used:
  8069 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8070 ;; Tracked objects:
  8071 ;;		On entry : F/0
  8072 ;;		On exit  : 0/0
  8073 ;;		Unchanged: 0/0
  8074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8075 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8076 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8078 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8079 ;;Total ram usage:        6 bytes
  8080 ;; Hardware stack levels used:    1
  8081 ;; Hardware stack levels required when called:   12
  8082 ;; This function calls:
  8083 ;;		_SYSLOG_Write
  8084 ;;		___wmul
  8085 ;; This function is called by:
  8086 ;;		_ICMP_EchoReply
  8087 ;; This function uses a non-reentrant model
  8088 ;;
  8089                           
  8090                           	psect	text29
  8091  005126                     __ptext29:
  8092                           	opt stack 0
  8093  005126                     _ETH_Copy:
  8094                           	opt stack 13
  8095                           
  8096                           ; BSR set to: 0
  8097                           ;j60_driver.c: 670: uint16_t timer;
  8098                           ;j60_driver.c: 671: uint16_t tmp_len;
  8099                           ;j60_driver.c: 673: timer = 2 * len;
  8100                           
  8101                           ;incstack = 0
  8102  005126  90D8               	bcf	status,0,c
  8103  005128  3571               	rlcf	ETH_Copy@len& (0+255),w,b
  8104  00512A  6F73               	movwf	ETH_Copy@timer& (0+255),b
  8105  00512C  3572               	rlcf	(ETH_Copy@len+1)& (0+255),w,b
  8106  00512E  6F74               	movwf	(ETH_Copy@timer+1)& (0+255),b
  8107                           
  8108                           ;j60_driver.c: 674: while(ECON1bits.DMAST!=0 && --timer) __nop();
  8109  005130  D001               	goto	l599
  8110  005132                     l600:
  8111                           
  8112                           ; BSR set to: 0
  8113  005132  F000               	nop	
  8114  005134                     l599:
  8115  005134  AAD2               	btfss	4050,5,c	;volatile
  8116  005136  D002               	goto	l603
  8117  005138  D84B               	call	PL643	;call to abstracted procedure
  8118  00513A  E1FB               	bnz	l600
  8119  00513C                     l603:
  8120                           
  8121                           ;j60_driver.c: 675: if(ECON1bits.DMAST==0)
  8122  00513C  BAD2               	btfsc	4050,5,c	;volatile
  8123  00513E  D040               	goto	l8581
  8124                           
  8125                           ;j60_driver.c: 676: {
  8126                           ;j60_driver.c: 677: EDMADST = EWRPT;
  8127  005140  CEE2 FEF4          	movff	3810,3828	;volatile
  8128  005144  CEE3 FEF5          	movff	3811,3829	;volatile
  8129                           
  8130                           ;j60_driver.c: 678: EDMAST = ethData.saveRDPT;
  8131  005148  C1C1  FEF0         	movff	_ethData+3,3824	;volatile
  8132  00514C  C1C2  FEF1         	movff	_ethData+4,3825	;volatile
  8133                           
  8134                           ;j60_driver.c: 680: tmp_len = ethData.saveRDPT + len;
  8135  005150  0100               	movlb	0	; () banked
  8136  005152  5171               	movf	ETH_Copy@len& (0+255),w,b
  8137  005154  0101               	movlb	1	; () banked
  8138  005156  25C1               	addwf	(_ethData+3)& (0+255),w,b	;volatile
  8139  005158  0100               	movlb	0	; () banked
  8140  00515A  6F75               	movwf	ETH_Copy@tmp_len& (0+255),b
  8141  00515C  5172               	movf	(ETH_Copy@len+1)& (0+255),w,b
  8142  00515E  0101               	movlb	1	; () banked
  8143  005160  21C2               	addwfc	(_ethData+4)& (0+255),w,b	;volatile
  8144  005162  0100               	movlb	0	; () banked
  8145  005164  6F76               	movwf	(ETH_Copy@tmp_len+1)& (0+255),b
  8146                           
  8147                           ;j60_driver.c: 682: if (tmp_len > ((((8192) - (1518)) - 2)) )
  8148  005166  0E11               	movlw	17
  8149  005168  5D75               	subwf	ETH_Copy@tmp_len& (0+255),w,b
  8150  00516A  0E1A               	movlw	26
  8151  00516C  5976               	subwfb	(ETH_Copy@tmp_len+1)& (0+255),w,b
  8152  00516E  E304               	bnc	l8569
  8153                           
  8154                           ; BSR set to: 0
  8155                           ;j60_driver.c: 683: {
  8156                           ;j60_driver.c: 684: tmp_len = tmp_len - ((((8192) - (1518)) - 2));
  8157  005170  0EF0               	movlw	240
  8158  005172  2775               	addwf	ETH_Copy@tmp_len& (0+255),f,b
  8159  005174  0EE5               	movlw	229
  8160  005176  2376               	addwfc	(ETH_Copy@tmp_len+1)& (0+255),f,b
  8161  005178                     l8569:
  8162                           
  8163                           ; BSR set to: 0
  8164                           ;j60_driver.c: 685: EDMAND = (0) + tmp_len;
  8165  005178  C075  FEF2         	movff	ETH_Copy@tmp_len,3826	;volatile
  8166  00517C  C076  FEF3         	movff	ETH_Copy@tmp_len+1,3827	;volatile
  8167                           
  8168                           ; BSR set to: 0
  8169                           ;j60_driver.c: 690: }
  8170                           ;j60_driver.c: 692: ECON1bits.CSUMEN = 0;
  8171                           
  8172                           ;j60_driver.c: 687: }else
  8173  005180  98D2               	bcf	4050,4,c	;volatile
  8174                           
  8175                           ;j60_driver.c: 693: ECON1bits.DMAST = 1;
  8176  005182  8AD2               	bsf	4050,5,c	;volatile
  8177                           
  8178                           ; BSR set to: 0
  8179                           ;j60_driver.c: 695: timer = 40 * len;
  8180  005184  C071  F017         	movff	ETH_Copy@len,___wmul@multiplier
  8181  005188  C072  F018         	movff	ETH_Copy@len+1,___wmul@multiplier+1
  8182  00518C  6A1A               	clrf	___wmul@multiplicand+1,c
  8183  00518E  0E28               	movlw	40
  8184  005190  6E19               	movwf	___wmul@multiplicand,c
  8185  005192  EC5B  F032         	call	___wmul	;wreg free
  8186  005196  C017  F073         	movff	?___wmul,ETH_Copy@timer
  8187  00519A  C018  F074         	movff	?___wmul+1,ETH_Copy@timer+1
  8188                           
  8189                           ;j60_driver.c: 696: while(ECON1bits.DMAST!=0 && --timer) __nop();
  8190  00519E  D001               	goto	l607
  8191  0051A0                     l608:
  8192                           
  8193                           ; BSR set to: 0
  8194  0051A0  F000               	nop	
  8195  0051A2                     l607:
  8196  0051A2  AAD2               	btfss	4050,5,c	;volatile
  8197  0051A4  D002               	goto	l611
  8198  0051A6  D814               	call	PL643	;call to abstracted procedure
  8199  0051A8  E1FB               	bnz	l608
  8200  0051AA                     l611:
  8201                           
  8202                           ;j60_driver.c: 697: if(ECON1bits.DMAST == 0)
  8203  0051AA  BAD2               	btfsc	4050,5,c	;volatile
  8204  0051AC  D009               	goto	l8581
  8205                           
  8206                           ;j60_driver.c: 698: {
  8207                           ;j60_driver.c: 699: EWRPT += len;
  8208  0051AE  0100               	movlb	0	; () banked
  8209  0051B0  5171               	movf	ETH_Copy@len& (0+255),w,b
  8210  0051B2  010E               	movlb	14	; () banked
  8211  0051B4  27E2               	addwf	226,f,b	;volatile
  8212  0051B6  0100               	movlb	0	; () banked
  8213  0051B8  5172               	movf	(ETH_Copy@len+1)& (0+255),w,b
  8214  0051BA  010E               	movlb	14	; () banked
  8215  0051BC  23E3               	addwfc	227,f,b	;volatile
  8216                           
  8217                           ; BSR set to: 14
  8218                           ;j60_driver.c: 700: return SUCCESS;
  8219  0051BE  0C01               	retlw	1
  8220  0051C0                     l8581:
  8221                           
  8222                           ;j60_driver.c: 701: }
  8223                           ;j60_driver.c: 702: }
  8224                           ;j60_driver.c: 704: SYSLOG_Write("DMA TIMEOUT!!!");
  8225  0051C0  0EB4               	movlw	low STR_1
  8226  0051C2  0100               	movlb	0	; () banked
  8227  0051C4  EC21  F028         	call	PL621	;call to abstracted procedure
  8228  0051C8  EC35  F032         	call	_SYSLOG_Write	;wreg free
  8229  0051CC  00FF               	reset		;# 
  8230                           
  8231                           ;j60_driver.c: 706: return DMA_TIMEOUT;
  8232  0051CE  0C0C               	retlw	12	;funcret
  8233  0051D0                     __end_of_ETH_Copy:
  8234                           	opt stack 0
  8235  0051D0                     PL643:
  8236                           	opt stack 13
  8237  0051D0  0100               	movlb	0	; () banked
  8238  0051D2  0773               	decf	ETH_Copy@timer& (0+255),f,b
  8239  0051D4  A0D8               	btfss	status,0,c
  8240  0051D6  0774               	decf	(ETH_Copy@timer+1)& (0+255),f,b
  8241  0051D8  5173               	movf	ETH_Copy@timer& (0+255),w,b
  8242  0051DA  1174               	iorwf	(ETH_Copy@timer+1)& (0+255),w,b
  8243  0051DC  0012               	return	
  8244  0051DE                     __end_ofPL643:
  8245                           	opt stack 0
  8246                           tosu	equ	0xFFF
  8247                           tosh	equ	0xFFE
  8248                           tosl	equ	0xFFD
  8249                           pclath	equ	0xFFA
  8250                           tblptru	equ	0xFF8
  8251                           tblptrh	equ	0xFF7
  8252                           tblptrl	equ	0xFF6
  8253                           tablat	equ	0xFF5
  8254                           prodh	equ	0xFF4
  8255                           prodl	equ	0xFF3
  8256                           intcon	equ	0xFF2
  8257                           indf0	equ	0xFEF
  8258                           postinc0	equ	0xFEE
  8259                           fsr0h	equ	0xFEA
  8260                           fsr0l	equ	0xFE9
  8261                           wreg	equ	0xFE8
  8262                           postinc1	equ	0xFE6
  8263                           postdec1	equ	0xFE5
  8264                           plusw1	equ	0xFE3
  8265                           fsr1h	equ	0xFE2
  8266                           fsr1l	equ	0xFE1
  8267                           bsr	equ	0xFE0
  8268                           indf2	equ	0xFDF
  8269                           postinc2	equ	0xFDE
  8270                           postdec2	equ	0xFDD
  8271                           plusw2	equ	0xFDB
  8272                           fsr2h	equ	0xFDA
  8273                           fsr2l	equ	0xFD9
  8274                           status	equ	0xFD8
  8275                           
  8276 ;; *************** function _SYSLOG_Write *****************
  8277 ;; Defined at:
  8278 ;;		line 50 in file "../../TCPIP Library/source/syslog.c"
  8279 ;; Parameters:    Size  Location     Type
  8280 ;;  message         2   13[BANK0 ] PTR const unsigned char 
  8281 ;;		 -> main@str(32), STR_8(13), STR_7(17), STR_1(15), 
  8282 ;; Auto vars:     Size  Location     Type
  8283 ;;  t               2   15[BANK0 ] unsigned int 
  8284 ;; Return value:  Size  Location     Type
  8285 ;;		None               void
  8286 ;; Registers used:
  8287 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8288 ;; Tracked objects:
  8289 ;;		On entry : F/0
  8290 ;;		On exit  : F/0
  8291 ;;		Unchanged: 0/0
  8292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8293 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8294 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8296 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8297 ;;Total ram usage:        4 bytes
  8298 ;; Hardware stack levels used:    1
  8299 ;; Hardware stack levels required when called:   11
  8300 ;; This function calls:
  8301 ;;		_printf
  8302 ;;		_time
  8303 ;; This function is called by:
  8304 ;;		_ETH_Copy
  8305 ;;		_main
  8306 ;; This function uses a non-reentrant model
  8307 ;;
  8308                           
  8309                           	psect	text30
  8310  00646A                     __ptext30:
  8311                           	opt stack 0
  8312  00646A                     _SYSLOG_Write:
  8313                           	opt stack 19
  8314                           
  8315                           ; BSR set to: 0
  8316                           ;syslog.c: 52: unsigned int t = (unsigned int) time(0);
  8317                           
  8318                           ;incstack = 0
  8319  00646A  6A17               	clrf	time@t,c
  8320  00646C  6A18               	clrf	time@t+1,c
  8321  00646E  EC52  F02E         	call	_time	;wreg free
  8322  006472  C017  F06F         	movff	?_time,SYSLOG_Write@t
  8323  006476  C018  F070         	movff	?_time+1,SYSLOG_Write@t+1
  8324                           
  8325                           ;syslog.c: 53: printf("%u : %s\r\n",t,message);
  8326  00647A  C06F  F029         	movff	SYSLOG_Write@t,?_printf
  8327  00647E  C070  F02A         	movff	SYSLOG_Write@t+1,?_printf+1
  8328  006482  C06D  F02B         	movff	SYSLOG_Write@message,?_printf+2
  8329  006486  C06E  F02C         	movff	SYSLOG_Write@message+1,?_printf+3
  8330  00648A  0EDC               	movlw	STR_4& (0+255)
  8331  00648C  EF81  F032         	goto	_printf
  8332  006490                     __end_of_SYSLOG_Write:
  8333                           	opt stack 0
  8334                           tosu	equ	0xFFF
  8335                           tosh	equ	0xFFE
  8336                           tosl	equ	0xFFD
  8337                           pclath	equ	0xFFA
  8338                           tblptru	equ	0xFF8
  8339                           tblptrh	equ	0xFF7
  8340                           tblptrl	equ	0xFF6
  8341                           tablat	equ	0xFF5
  8342                           prodh	equ	0xFF4
  8343                           prodl	equ	0xFF3
  8344                           intcon	equ	0xFF2
  8345                           indf0	equ	0xFEF
  8346                           postinc0	equ	0xFEE
  8347                           fsr0h	equ	0xFEA
  8348                           fsr0l	equ	0xFE9
  8349                           wreg	equ	0xFE8
  8350                           postinc1	equ	0xFE6
  8351                           postdec1	equ	0xFE5
  8352                           plusw1	equ	0xFE3
  8353                           fsr1h	equ	0xFE2
  8354                           fsr1l	equ	0xFE1
  8355                           bsr	equ	0xFE0
  8356                           indf2	equ	0xFDF
  8357                           postinc2	equ	0xFDE
  8358                           postdec2	equ	0xFDD
  8359                           plusw2	equ	0xFDB
  8360                           fsr2h	equ	0xFDA
  8361                           fsr2l	equ	0xFD9
  8362                           status	equ	0xFD8
  8363                           
  8364 ;; *************** function _printf *****************
  8365 ;; Defined at:
  8366 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\printf.c"
  8367 ;; Parameters:    Size  Location     Type
  8368 ;;  f               1    wreg     PTR const unsigned char 
  8369 ;;		 -> STR_4(10), STR_3(28), 
  8370 ;; Auto vars:     Size  Location     Type
  8371 ;;  f               1   44[COMRAM] PTR const unsigned char 
  8372 ;;		 -> STR_4(10), STR_3(28), 
  8373 ;;  pb              5   46[COMRAM] struct __prbuf
  8374 ;;  ap              1   45[COMRAM] PTR void [1]
  8375 ;;		 -> ?_sprintf(2), ?_printf(2), 
  8376 ;; Return value:  Size  Location     Type
  8377 ;;                  2   40[COMRAM] int 
  8378 ;; Registers used:
  8379 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8380 ;; Tracked objects:
  8381 ;;		On entry : 0/1
  8382 ;;		On exit  : F/0
  8383 ;;		Unchanged: 0/0
  8384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8385 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8386 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8388 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8389 ;;Total ram usage:       11 bytes
  8390 ;; Hardware stack levels used:    1
  8391 ;; Hardware stack levels required when called:   10
  8392 ;; This function calls:
  8393 ;;		__doprnt
  8394 ;; This function is called by:
  8395 ;;		_SYSLOG_Init
  8396 ;;		_SYSLOG_Write
  8397 ;; This function uses a non-reentrant model
  8398 ;;
  8399                           
  8400                           	psect	text31
  8401  006502                     __ptext31:
  8402                           	opt stack 0
  8403  006502                     _printf:
  8404                           	opt stack 19
  8405                           
  8406                           ; BSR set to: 0
  8407                           ;incstack = 0
  8408                           ;printf@f stored from wreg
  8409  006502  6E2D               	movwf	printf@f,c
  8410  006504  6A2F               	clrf	printf@pb,c
  8411  006506  6A30               	clrf	printf@pb+1,c
  8412  006508  0E30               	movlw	low _putch
  8413  00650A  6E31               	movwf	printf@pb+2,c
  8414  00650C  0E66               	movlw	high _putch
  8415  00650E  6E32               	movwf	printf@pb+3,c
  8416  006510  0E00               	movlw	low (_putch shr (0+16))
  8417  006512  6E33               	movwf	printf@pb+4,c
  8418  006514  0E29               	movlw	low ?_printf
  8419  006516  6E2E               	movwf	printf@ap,c
  8420                           
  8421                           ;	Return value of _printf is never used
  8422  006518  C02D  F023         	movff	printf@f,__doprnt@f
  8423  00651C  0E2E               	movlw	low printf@ap
  8424  00651E  6E24               	movwf	__doprnt@ap,c
  8425  006520  0E2F               	movlw	printf@pb& (0+255)
  8426  006522  EF61  F016         	goto	__doprnt
  8427  006526                     __end_of_printf:
  8428                           	opt stack 0
  8429                           tosu	equ	0xFFF
  8430                           tosh	equ	0xFFE
  8431                           tosl	equ	0xFFD
  8432                           pclath	equ	0xFFA
  8433                           tblptru	equ	0xFF8
  8434                           tblptrh	equ	0xFF7
  8435                           tblptrl	equ	0xFF6
  8436                           tablat	equ	0xFF5
  8437                           prodh	equ	0xFF4
  8438                           prodl	equ	0xFF3
  8439                           intcon	equ	0xFF2
  8440                           indf0	equ	0xFEF
  8441                           postinc0	equ	0xFEE
  8442                           fsr0h	equ	0xFEA
  8443                           fsr0l	equ	0xFE9
  8444                           wreg	equ	0xFE8
  8445                           postinc1	equ	0xFE6
  8446                           postdec1	equ	0xFE5
  8447                           plusw1	equ	0xFE3
  8448                           fsr1h	equ	0xFE2
  8449                           fsr1l	equ	0xFE1
  8450                           bsr	equ	0xFE0
  8451                           indf2	equ	0xFDF
  8452                           postinc2	equ	0xFDE
  8453                           postdec2	equ	0xFDD
  8454                           plusw2	equ	0xFDB
  8455                           fsr2h	equ	0xFDA
  8456                           fsr2l	equ	0xFD9
  8457                           status	equ	0xFD8
  8458                           
  8459 ;; *************** function _ETH_RxComputeChecksum *****************
  8460 ;; Defined at:
  8461 ;;		line 781 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
  8462 ;; Parameters:    Size  Location     Type
  8463 ;;  len             2   36[COMRAM] unsigned int 
  8464 ;;  seed            2   38[COMRAM] unsigned int 
  8465 ;; Auto vars:     Size  Location     Type
  8466 ;;  cksm            4   46[COMRAM] unsigned long 
  8467 ;;  rxptr           2   44[COMRAM] unsigned int 
  8468 ;; Return value:  Size  Location     Type
  8469 ;;                  2   36[COMRAM] unsigned int 
  8470 ;; Registers used:
  8471 ;;		wreg, status,2, status,0, cstack
  8472 ;; Tracked objects:
  8473 ;;		On entry : F/1
  8474 ;;		On exit  : 0/0
  8475 ;;		Unchanged: 0/0
  8476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8477 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8478 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8479 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8480 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8481 ;;Total ram usage:       14 bytes
  8482 ;; Hardware stack levels used:    1
  8483 ;; Hardware stack levels required when called:   10
  8484 ;; This function calls:
  8485 ;;		_ETH_ComputeChecksum
  8486 ;; This function is called by:
  8487 ;;		_IPV4_Packet
  8488 ;; This function uses a non-reentrant model
  8489 ;;
  8490                           
  8491                           	psect	text32
  8492  005FFA                     __ptext32:
  8493                           	opt stack 0
  8494  005FFA                     _ETH_RxComputeChecksum:
  8495                           	opt stack 17
  8496                           
  8497                           ; BSR set to: 1
  8498                           ;j60_driver.c: 783: uint16_t rxptr;
  8499                           ;j60_driver.c: 784: uint32_t cksm;
  8500                           ;j60_driver.c: 787: rxptr = ERDPT;
  8501                           
  8502                           ; BSR set to: 0
  8503                           ;incstack = 0
  8504  005FFA  CF7A F02D          	movff	3962,ETH_RxComputeChecksum@rxptr	;volatile
  8505  005FFE  CF7B F02E          	movff	3963,ETH_RxComputeChecksum@rxptr+1	;volatile
  8506                           
  8507                           ; BSR set to: 1
  8508                           ;j60_driver.c: 789: cksm = ETH_ComputeChecksum( len, seed);
  8509  006002  C025  F017         	movff	ETH_RxComputeChecksum@len,ETH_ComputeChecksum@len
  8510  006006  C026  F018         	movff	ETH_RxComputeChecksum@len+1,ETH_ComputeChecksum@len+1
  8511  00600A  C027  F019         	movff	ETH_RxComputeChecksum@seed,ETH_ComputeChecksum@seed
  8512  00600E  C028  F01A         	movff	ETH_RxComputeChecksum@seed+1,ETH_ComputeChecksum@seed+1
  8513  006012  EC48  F02A         	call	_ETH_ComputeChecksum	;wreg free
  8514  006016  C017  F02F         	movff	?_ETH_ComputeChecksum,ETH_RxComputeChecksum@cksm
  8515  00601A  C018  F030         	movff	?_ETH_ComputeChecksum+1,ETH_RxComputeChecksum@cksm+1
  8516  00601E  6A31               	clrf	ETH_RxComputeChecksum@cksm+2,c
  8517  006020  6A32               	clrf	ETH_RxComputeChecksum@cksm+3,c
  8518                           
  8519                           ;j60_driver.c: 792: ERDPT = rxptr;
  8520  006022  C02D  FF7A         	movff	ETH_RxComputeChecksum@rxptr,3962	;volatile
  8521  006026  C02E  FF7B         	movff	ETH_RxComputeChecksum@rxptr+1,3963	;volatile
  8522                           
  8523                           ;j60_driver.c: 795: return ((cksm & 0xFF00) >> 8) | ((cksm & 0x00FF) << 8);
  8524  00602A  502F               	movf	ETH_RxComputeChecksum@cksm,w,c
  8525  00602C  6E2A               	movwf	(??_ETH_RxComputeChecksum+1)& (0+255),c
  8526  00602E  6A29               	clrf	??_ETH_RxComputeChecksum& (0+255),c
  8527  006030  5030               	movf	ETH_RxComputeChecksum@cksm+1,w,c
  8528  006032  6E2B               	movwf	(??_ETH_RxComputeChecksum+2)& (0+255),c
  8529  006034  6A2C               	clrf	(??_ETH_RxComputeChecksum+3)& (0+255),c
  8530  006036  1029               	iorwf	??_ETH_RxComputeChecksum,w,c
  8531  006038  6E25               	movwf	?_ETH_RxComputeChecksum,c
  8532  00603A  502A               	movf	??_ETH_RxComputeChecksum+1,w,c
  8533  00603C  102C               	iorwf	??_ETH_RxComputeChecksum+3,w,c
  8534  00603E  6E26               	movwf	?_ETH_RxComputeChecksum+1,c
  8535  006040  0012               	return		;funcret
  8536  006042                     __end_of_ETH_RxComputeChecksum:
  8537                           	opt stack 0
  8538                           tosu	equ	0xFFF
  8539                           tosh	equ	0xFFE
  8540                           tosl	equ	0xFFD
  8541                           pclath	equ	0xFFA
  8542                           tblptru	equ	0xFF8
  8543                           tblptrh	equ	0xFF7
  8544                           tblptrl	equ	0xFF6
  8545                           tablat	equ	0xFF5
  8546                           prodh	equ	0xFF4
  8547                           prodl	equ	0xFF3
  8548                           intcon	equ	0xFF2
  8549                           indf0	equ	0xFEF
  8550                           postinc0	equ	0xFEE
  8551                           fsr0h	equ	0xFEA
  8552                           fsr0l	equ	0xFE9
  8553                           wreg	equ	0xFE8
  8554                           postinc1	equ	0xFE6
  8555                           postdec1	equ	0xFE5
  8556                           plusw1	equ	0xFE3
  8557                           fsr1h	equ	0xFE2
  8558                           fsr1l	equ	0xFE1
  8559                           bsr	equ	0xFE0
  8560                           indf2	equ	0xFDF
  8561                           postinc2	equ	0xFDE
  8562                           postdec2	equ	0xFDD
  8563                           plusw2	equ	0xFDB
  8564                           fsr2h	equ	0xFDA
  8565                           fsr2l	equ	0xFD9
  8566                           status	equ	0xFD8
  8567                           
  8568 ;; *************** function _ETH_NextPacketUpdate *****************
  8569 ;; Defined at:
  8570 ;;		line 266 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
  8571 ;; Parameters:    Size  Location     Type
  8572 ;;		None
  8573 ;; Auto vars:     Size  Location     Type
  8574 ;;		None
  8575 ;; Return value:  Size  Location     Type
  8576 ;;		None               void
  8577 ;; Registers used:
  8578 ;;		wreg, status,2, status,0, cstack
  8579 ;; Tracked objects:
  8580 ;;		On entry : F/1
  8581 ;;		On exit  : F/1
  8582 ;;		Unchanged: 0/0
  8583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8588 ;;Total ram usage:        0 bytes
  8589 ;; Hardware stack levels used:    1
  8590 ;; Hardware stack levels required when called:    9
  8591 ;; This function calls:
  8592 ;;		_ETH_EdataRead
  8593 ;; This function is called by:
  8594 ;;		_Network_Read
  8595 ;; This function uses a non-reentrant model
  8596 ;;
  8597                           
  8598                           	psect	text33
  8599  005C4E                     __ptext33:
  8600                           	opt stack 0
  8601  005C4E                     _ETH_NextPacketUpdate:
  8602                           	opt stack 19
  8603                           
  8604                           ; BSR set to: 1
  8605                           ;j60_driver.c: 269: ERDPT = nextPacketPointer;
  8606                           
  8607                           ;incstack = 0
  8608  005C4E  C042  FF7A         	movff	_nextPacketPointer,3962	;volatile
  8609  005C52  C043  FF7B         	movff	_nextPacketPointer+1,3963	;volatile
  8610  005C56                     i8L__ptext102:
  8611                           	opt stack 0
  8612  005C56                     i8L_ETH_EdataRead:
  8613                           	opt stack 0
  8614  005C56                     i8Ll7815:
  8615                           	opt stack 15
  8616  005C56  CF61 FE7E          	movff	3937,_errataTemp	;# 
  8617  005C5A                     i8Ll7817:
  8618                           	opt stack 15
  8619                           
  8620                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
  8621  005C5A  010E               	movlb	14	; () banked
  8622  005C5C  517E               	movf	126,w,b
  8623  005C5E                     i8Ll460:
  8624                           	opt stack 19
  8625  005C5E  6E42               	movwf	_nextPacketPointer,c
  8626  005C60                     i9L__ptext102:
  8627                           	opt stack 0
  8628  005C60                     i9L_ETH_EdataRead:
  8629                           	opt stack 0
  8630  005C60                     i9Ll7815:
  8631                           	opt stack 15
  8632  005C60  CF61 FE7E          	movff	3937,_errataTemp	;# 
  8633  005C64                     i9Ll7817:
  8634                           	opt stack 15
  8635                           
  8636                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
  8637  005C64  010E               	movlb	14	; () banked
  8638  005C66  517E               	movf	126,w,b
  8639  005C68                     i9Ll460:
  8640                           	opt stack 19
  8641  005C68  6E43               	movwf	_nextPacketPointer+1,c
  8642  005C6A                     i10L__ptext102:
  8643                           	opt stack 0
  8644  005C6A                     i10L_ETH_EdataRead:
  8645                           	opt stack 0
  8646  005C6A                     i10Ll7815:
  8647                           	opt stack 15
  8648  005C6A  CF61 FE7E          	movff	3937,_errataTemp	;# 
  8649  005C6E                     i10Ll7817:
  8650                           	opt stack 15
  8651                           
  8652                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
  8653  005C6E  010E               	movlb	14	; () banked
  8654  005C70  517E               	movf	126,w,b
  8655  005C72                     i10Ll460:
  8656                           	opt stack 19
  8657  005C72  0101               	movlb	1	; () banked
  8658  005C74  6FC9               	movwf	_rxPacketStatusVector& (0+255),b
  8659  005C76                     i11L__ptext102:
  8660                           	opt stack 0
  8661  005C76                     i11L_ETH_EdataRead:
  8662                           	opt stack 0
  8663  005C76                     i11Ll7815:
  8664                           	opt stack 15
  8665  005C76  CF61 FE7E          	movff	3937,_errataTemp	;# 
  8666  005C7A                     i11Ll7817:
  8667                           	opt stack 15
  8668                           
  8669                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
  8670  005C7A  010E               	movlb	14	; () banked
  8671  005C7C  517E               	movf	126,w,b
  8672  005C7E                     i11Ll460:
  8673                           	opt stack 19
  8674  005C7E  0101               	movlb	1	; () banked
  8675  005C80  6FCA               	movwf	(_rxPacketStatusVector+1)& (0+255),b
  8676  005C82                     i12L__ptext102:
  8677                           	opt stack 0
  8678  005C82                     i12L_ETH_EdataRead:
  8679                           	opt stack 0
  8680  005C82                     i12Ll7815:
  8681                           	opt stack 15
  8682  005C82  CF61 FE7E          	movff	3937,_errataTemp	;# 
  8683  005C86                     i12Ll7817:
  8684                           	opt stack 15
  8685                           
  8686                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
  8687  005C86  010E               	movlb	14	; () banked
  8688  005C88  517E               	movf	126,w,b
  8689  005C8A                     i12Ll460:
  8690                           	opt stack 19
  8691  005C8A  0101               	movlb	1	; () banked
  8692  005C8C  6FCB               	movwf	(_rxPacketStatusVector+2)& (0+255),b
  8693  005C8E                     i13L__ptext102:
  8694                           	opt stack 0
  8695  005C8E                     i13L_ETH_EdataRead:
  8696                           	opt stack 0
  8697  005C8E                     i13Ll7815:
  8698                           	opt stack 15
  8699  005C8E  CF61 FE7E          	movff	3937,_errataTemp	;# 
  8700  005C92                     i13Ll7817:
  8701                           	opt stack 15
  8702                           
  8703                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
  8704  005C92  010E               	movlb	14	; () banked
  8705  005C94  517E               	movf	126,w,b
  8706  005C96                     i13Ll460:
  8707                           	opt stack 19
  8708  005C96  0101               	movlb	1	; () banked
  8709  005C98  6FCC               	movwf	(_rxPacketStatusVector+3)& (0+255),b
  8710                           
  8711                           ; BSR set to: 1
  8712                           ;j60_driver.c: 281: rxPacketStatusVector.byteCount -= 4;
  8713  005C9A  0E04               	movlw	4
  8714  005C9C  5FC9               	subwf	_rxPacketStatusVector& (0+255),f,b
  8715  005C9E  0E00               	movlw	0
  8716  005CA0  5BCA               	subwfb	(_rxPacketStatusVector+1)& (0+255),f,b
  8717                           
  8718                           ; BSR set to: 1
  8719  005CA2  0C00               	retlw	0	;funcret
  8720  005CA4                     __end_of_ETH_NextPacketUpdate:
  8721                           	opt stack 0
  8722                           tosu	equ	0xFFF
  8723                           tosh	equ	0xFFE
  8724                           tosl	equ	0xFFD
  8725                           pclath	equ	0xFFA
  8726                           tblptru	equ	0xFF8
  8727                           tblptrh	equ	0xFF7
  8728                           tblptrl	equ	0xFF6
  8729                           tablat	equ	0xFF5
  8730                           prodh	equ	0xFF4
  8731                           prodl	equ	0xFF3
  8732                           intcon	equ	0xFF2
  8733                           indf0	equ	0xFEF
  8734                           postinc0	equ	0xFEE
  8735                           fsr0h	equ	0xFEA
  8736                           fsr0l	equ	0xFE9
  8737                           wreg	equ	0xFE8
  8738                           postinc1	equ	0xFE6
  8739                           postdec1	equ	0xFE5
  8740                           plusw1	equ	0xFE3
  8741                           fsr1h	equ	0xFE2
  8742                           fsr1l	equ	0xFE1
  8743                           bsr	equ	0xFE0
  8744                           indf2	equ	0xFDF
  8745                           postinc2	equ	0xFDE
  8746                           postdec2	equ	0xFDD
  8747                           plusw2	equ	0xFDB
  8748                           fsr2h	equ	0xFDA
  8749                           fsr2l	equ	0xFD9
  8750                           status	equ	0xFD8
  8751                           
  8752 ;; *************** function _ETH_Flush *****************
  8753 ;; Defined at:
  8754 ;;		line 625 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
  8755 ;; Parameters:    Size  Location     Type
  8756 ;;		None
  8757 ;; Auto vars:     Size  Location     Type
  8758 ;;		None
  8759 ;; Return value:  Size  Location     Type
  8760 ;;		None               void
  8761 ;; Registers used:
  8762 ;;		wreg, status,2, status,0
  8763 ;; Tracked objects:
  8764 ;;		On entry : 0/1
  8765 ;;		On exit  : F/E
  8766 ;;		Unchanged: 0/0
  8767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8770 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8771 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8772 ;;Total ram usage:        4 bytes
  8773 ;; Hardware stack levels used:    1
  8774 ;; Hardware stack levels required when called:    8
  8775 ;; This function calls:
  8776 ;;		Nothing
  8777 ;; This function is called by:
  8778 ;;		_Network_Read
  8779 ;; This function uses a non-reentrant model
  8780 ;;
  8781                           
  8782                           	psect	text34
  8783  005CF8                     __ptext34:
  8784                           	opt stack 0
  8785  005CF8                     _ETH_Flush:
  8786                           	opt stack 20
  8787                           
  8788                           ;j60_driver.c: 627: ethData.pktReady = 0;
  8789                           
  8790                           ; BSR set to: 1
  8791                           ;incstack = 0
  8792  005CF8  0101               	movlb	1	; () banked
  8793  005CFA  93BE               	bcf	_ethData& (0+255),1,b	;volatile
  8794                           
  8795                           ; BSR set to: 1
  8796                           ;j60_driver.c: 629: ECON2 = ECON2 | 0x40;
  8797  005CFC  010E               	movlb	14	; () banked
  8798  005CFE  8DFE               	bsf	254,6,b	;volatile
  8799                           
  8800                           ; BSR set to: 14
  8801                           ;j60_driver.c: 635: if (((nextPacketPointer - 1) < ERXST) ||
  8802                           ;j60_driver.c: 636: ((nextPacketPointer - 1) > ERXND))
  8803  005D00  D818               	call	PL585	;call to abstracted procedure
  8804  005D02  51E8               	movf	232,w,b	;volatile
  8805  005D04  5C19               	subwf	??_ETH_Flush+2,w,c
  8806  005D06  51E9               	movf	233,w,b	;volatile
  8807  005D08  581A               	subwfb	??_ETH_Flush+3,w,c
  8808  005D0A  E306               	bnc	l594
  8809                           
  8810                           ; BSR set to: 14
  8811  005D0C  D812               	call	PL585	;call to abstracted procedure
  8812  005D0E  5019               	movf	??_ETH_Flush+2,w,c
  8813  005D10  5DEA               	subwf	234,w,b	;volatile
  8814  005D12  501A               	movf	??_ETH_Flush+3,w,c
  8815  005D14  59EB               	subwfb	235,w,b	;volatile
  8816  005D16  E205               	bc	l9499
  8817  005D18                     l594:
  8818                           
  8819                           ; BSR set to: 14
  8820                           ;j60_driver.c: 637: ERXRDPT = ERXND;
  8821  005D18  CEEA FEEC          	movff	3818,3820	;volatile
  8822  005D1C  CEEB FEED          	movff	3819,3821	;volatile
  8823  005D20  D006               	goto	l9501
  8824  005D22                     l9499:
  8825                           
  8826                           ; BSR set to: 14
  8827                           ;j60_driver.c: 638: else
  8828                           ;j60_driver.c: 639: ERXRDPT = nextPacketPointer - 1;
  8829  005D22  0EFF               	movlw	255
  8830  005D24  2442               	addwf	_nextPacketPointer,w,c
  8831  005D26  6FEC               	movwf	236,b	;volatile
  8832  005D28  0EFF               	movlw	255
  8833  005D2A  2043               	addwfc	_nextPacketPointer+1,w,c
  8834  005D2C  6FED               	movwf	237,b	;volatile
  8835  005D2E                     l9501:
  8836                           
  8837                           ; BSR set to: 14
  8838                           ;j60_driver.c: 641: EIEbits.PKTIE = 1;
  8839  005D2E  8DFB               	bsf	251,6,b	;volatile
  8840                           
  8841                           ; BSR set to: 14
  8842  005D30  0012               	return		;funcret
  8843  005D32                     __end_of_ETH_Flush:
  8844                           	opt stack 0
  8845  005D32                     PL585:
  8846                           	opt stack 20
  8847  005D32  6817               	setf	??_ETH_Flush& (0+255),c
  8848  005D34  6818               	setf	(??_ETH_Flush+1)& (0+255),c
  8849  005D36  C042  F019         	movff	_nextPacketPointer,??_ETH_Flush+2
  8850  005D3A  C043  F01A         	movff	_nextPacketPointer+1,??_ETH_Flush+3
  8851  005D3E  5017               	movf	??_ETH_Flush,w,c
  8852  005D40  2619               	addwf	??_ETH_Flush+2,f,c
  8853  005D42  5018               	movf	??_ETH_Flush+1,w,c
  8854  005D44  221A               	addwfc	??_ETH_Flush+3,f,c
  8855  005D46  0012               	return	
  8856  005D48                     __end_ofPL585:
  8857                           	opt stack 0
  8858                           tosu	equ	0xFFF
  8859                           tosh	equ	0xFFE
  8860                           tosl	equ	0xFFD
  8861                           pclath	equ	0xFFA
  8862                           tblptru	equ	0xFF8
  8863                           tblptrh	equ	0xFF7
  8864                           tblptrl	equ	0xFF6
  8865                           tablat	equ	0xFF5
  8866                           prodh	equ	0xFF4
  8867                           prodl	equ	0xFF3
  8868                           intcon	equ	0xFF2
  8869                           indf0	equ	0xFEF
  8870                           postinc0	equ	0xFEE
  8871                           fsr0h	equ	0xFEA
  8872                           fsr0l	equ	0xFE9
  8873                           wreg	equ	0xFE8
  8874                           postinc1	equ	0xFE6
  8875                           postdec1	equ	0xFE5
  8876                           plusw1	equ	0xFE3
  8877                           fsr1h	equ	0xFE2
  8878                           fsr1l	equ	0xFE1
  8879                           bsr	equ	0xFE0
  8880                           indf2	equ	0xFDF
  8881                           postinc2	equ	0xFDE
  8882                           postdec2	equ	0xFDD
  8883                           plusw2	equ	0xFDB
  8884                           fsr2h	equ	0xFDA
  8885                           fsr2l	equ	0xFD9
  8886                           status	equ	0xFD8
  8887                           
  8888 ;; *************** function _ARPV4_Packet *****************
  8889 ;; Defined at:
  8890 ;;		line 97 in file "../../TCPIP Library/source/arpv4.c"
  8891 ;; Parameters:    Size  Location     Type
  8892 ;;		None
  8893 ;; Auto vars:     Size  Location     Type
  8894 ;;  x               1   39[BANK0 ] unsigned char 
  8895 ;;  arpPtr          2   36[BANK0 ] PTR struct .
  8896 ;;		 -> arpMap(104), 
  8897 ;;  x               1   38[BANK0 ] unsigned char 
  8898 ;;  header         28   42[BANK0 ] struct .
  8899 ;;  entryPointer    2   40[BANK0 ] PTR struct .
  8900 ;;		 -> arpMap(104), 
  8901 ;;  length          2   32[BANK0 ] unsigned int 
  8902 ;;  ret             1   35[BANK0 ] enum E450
  8903 ;;  mergeFlag       1   34[BANK0 ] unsigned char 
  8904 ;; Return value:  Size  Location     Type
  8905 ;;                  1    wreg      enum E450
  8906 ;; Registers used:
  8907 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8908 ;; Tracked objects:
  8909 ;;		On entry : 0/1
  8910 ;;		On exit  : 0/0
  8911 ;;		Unchanged: 0/0
  8912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8914 ;;      Locals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8915 ;;      Temps:          0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8916 ;;      Totals:         0      70       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8917 ;;Total ram usage:       70 bytes
  8918 ;; Hardware stack levels used:    1
  8919 ;; Hardware stack levels required when called:   10
  8920 ;; This function calls:
  8921 ;;		_ETH_GetMAC
  8922 ;;		_ETH_ReadBlock
  8923 ;;		_ETH_Send
  8924 ;;		_ETH_WriteBlock
  8925 ;;		_ETH_WriteStart
  8926 ;; This function is called by:
  8927 ;;		_Network_Read
  8928 ;; This function uses a non-reentrant model
  8929 ;;
  8930                           
  8931                           	psect	text35
  8932  003516                     __ptext35:
  8933                           	opt stack 0
  8934  003516                     _ARPV4_Packet:
  8935                           	opt stack 18
  8936                           
  8937                           ;arpv4.c: 107: length = ETH_ReadBlock((char*)&header,sizeof(arpHeader_t));
  8938                           
  8939                           ; BSR set to: 14
  8940                           ;incstack = 0
  8941  003516  0E8A               	movlw	low ARPV4_Packet@header
  8942  003518  6E17               	movwf	ETH_ReadBlock@buffer,c
  8943  00351A  6A18               	clrf	ETH_ReadBlock@buffer+1,c
  8944  00351C  6A1A               	clrf	ETH_ReadBlock@length+1,c
  8945  00351E  0E1C               	movlw	28
  8946  003520  6E19               	movwf	ETH_ReadBlock@length,c
  8947  003522  ECC9  F02D         	call	_ETH_ReadBlock	;wreg free
  8948  003526  C017  F080         	movff	?_ETH_ReadBlock,ARPV4_Packet@length
  8949  00352A  C018  F081         	movff	?_ETH_ReadBlock+1,ARPV4_Packet@length+1
  8950                           
  8951                           ; BSR set to: 1
  8952                           ;arpv4.c: 108: if(length == sizeof(arpHeader_t))
  8953  00352E  0E1C               	movlw	28
  8954  003530  0100               	movlb	0	; () banked
  8955  003532  1980               	xorwf	ARPV4_Packet@length& (0+255),w,b
  8956  003534  1181               	iorwf	(ARPV4_Packet@length+1)& (0+255),w,b
  8957  003536  A4D8               	btfss	status,2,c
  8958  003538  0012               	return	
  8959                           
  8960                           ; BSR set to: 0
  8961                           ;arpv4.c: 109: {
  8962                           ;arpv4.c: 111: mergeFlag = 0;
  8963  00353A  6B82               	clrf	ARPV4_Packet@mergeFlag& (0+255),b
  8964                           
  8965                           ; BSR set to: 0
  8966                           ;arpv4.c: 112: entryPointer = arpMap;
  8967  00353C  D988               	call	PL711	;call to abstracted procedure
  8968                           
  8969                           ; BSR set to: 0
  8970                           ;arpv4.c: 114: for(uint8_t x=8; x > 0; x--)
  8971  00353E  0E08               	movlw	8
  8972  003540  6F86               	movwf	ARPV4_Packet@x& (0+255),b
  8973  003542                     l9519:
  8974                           
  8975                           ; BSR set to: 0
  8976                           ;arpv4.c: 115: {
  8977                           ;arpv4.c: 116: if( (header.spa == entryPointer->ipAddress) && (header.ptype == entryPoin
      +                          ter->protocolType) )
  8978  003542  EE20 F006          	lfsr	2,6
  8979  003546  D97E               	call	PL591	;call to abstracted procedure
  8980  003548  50DE               	movf	postinc2,w,c
  8981  00354A  1998               	xorwf	(ARPV4_Packet@header+14)& (0+255),w,b
  8982  00354C  E11A               	bnz	l9529
  8983  00354E  50DE               	movf	postinc2,w,c
  8984  003550  1999               	xorwf	(ARPV4_Packet@header+15)& (0+255),w,b
  8985  003552  E117               	bnz	l9529
  8986  003554  50DE               	movf	postinc2,w,c
  8987  003556  199A               	xorwf	(ARPV4_Packet@header+16)& (0+255),w,b
  8988  003558  E114               	bnz	l9529
  8989  00355A  50DE               	movf	postinc2,w,c
  8990  00355C  199B               	xorwf	(ARPV4_Packet@header+17)& (0+255),w,b
  8991  00355E  E111               	bnz	l9529
  8992                           
  8993                           ; BSR set to: 0
  8994  003560  EE20 F00A          	lfsr	2,10
  8995  003564  D96F               	call	PL591	;call to abstracted procedure
  8996  003566  50DE               	movf	postinc2,w,c
  8997  003568  198C               	xorwf	(ARPV4_Packet@header+2)& (0+255),w,b
  8998  00356A  E10B               	bnz	l9529
  8999  00356C  50DE               	movf	postinc2,w,c
  9000  00356E  198D               	xorwf	(ARPV4_Packet@header+3)& (0+255),w,b
  9001  003570  E108               	bnz	l9529
  9002                           
  9003                           ; BSR set to: 0
  9004                           ;arpv4.c: 117: {
  9005                           ;arpv4.c: 118: entryPointer->age = 0;
  9006                           
  9007                           ; BSR set to: 0
  9008                           ;arpv4.c: 119: entryPointer->macAddress.s = header.sha.s;
  9009  003572  D94D               	call	PL517	;call to abstracted procedure
  9010  003574                     u15411:
  9011  003574  CFDB FFE3          	movff	plusw2,plusw1
  9012  003578  06E8               	decf	wreg,f,c
  9013  00357A  E2FC               	bc	u15411
  9014                           
  9015                           ; BSR set to: 0
  9016                           ;arpv4.c: 120: mergeFlag = 1;
  9017  00357C  0E01               	movlw	1
  9018  00357E  6F82               	movwf	ARPV4_Packet@mergeFlag& (0+255),b
  9019                           
  9020                           ;arpv4.c: 121: break;
  9021  003580  D007               	goto	l9535
  9022  003582                     l9529:
  9023                           
  9024                           ; BSR set to: 0
  9025                           ;arpv4.c: 122: }
  9026                           ;arpv4.c: 123: entryPointer++;
  9027  003582  0E0D               	movlw	13
  9028  003584  2788               	addwf	ARPV4_Packet@entryPointer& (0+255),f,b
  9029  003586  0E00               	movlw	0
  9030  003588  2389               	addwfc	(ARPV4_Packet@entryPointer+1)& (0+255),f,b
  9031                           
  9032                           ; BSR set to: 0
  9033  00358A  0786               	decf	ARPV4_Packet@x& (0+255),f,b
  9034                           
  9035                           ; BSR set to: 0
  9036  00358C  5186               	movf	ARPV4_Packet@x& (0+255),w,b
  9037  00358E  E1D9               	bnz	l9519
  9038  003590                     l9535:
  9039                           
  9040                           ; BSR set to: 0
  9041                           ;arpv4.c: 124: }
  9042                           ;arpv4.c: 126: if(ipv4Address && (ipv4Address == ((((uint32_t)header.tpa&(uint32_t)0xff0
      +                          00000) >> 24) | (((uint32_t)header.tpa&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)header.
      +                          tpa&(uint32_t)0x0000ff00) << 8) | (((uint32_t)header.tpa&(uint32_t)0x000000ff) << 24) ))
      +                          )
  9043  003590  ECDE  F023         	call	PL695	;call to abstracted procedure
  9044  003594  B4D8               	btfsc	status,2,c
  9045  003596  0012               	return	
  9046                           
  9047                           ; BSR set to: 0
  9048  003598  51A2               	movf	(ARPV4_Packet@header+24)& (0+255),w,b
  9049  00359A  D92F               	call	PL509	;call to abstracted procedure
  9050  00359C  EE20  F0A2         	lfsr	2,ARPV4_Packet@header+24
  9051  0035A0  D918               	call	PL497	;call to abstracted procedure
  9052  0035A2  C0A2  F068         	movff	ARPV4_Packet@header+24,??_ARPV4_Packet+8
  9053  0035A6  C0A3  F069         	movff	ARPV4_Packet@header+25,??_ARPV4_Packet+9
  9054  0035AA  C0A4  F06A         	movff	ARPV4_Packet@header+26,??_ARPV4_Packet+10
  9055  0035AE  C0A5  F06B         	movff	ARPV4_Packet@header+27,??_ARPV4_Packet+11
  9056  0035B2  D93B               	call	PL529	;call to abstracted procedure
  9057  0035B4  EE20  F0A2         	lfsr	2,ARPV4_Packet@header+24
  9058  0035B8  D8D3               	call	PL421	;call to abstracted procedure
  9059  0035BA  5038               	movf	_ipv4Address,w,c
  9060  0035BC  197C               	xorwf	(??_ARPV4_Packet+28)& (0+255),w,b
  9061  0035BE  E109               	bnz	u15451
  9062  0035C0  5039               	movf	_ipv4Address+1,w,c
  9063  0035C2  197D               	xorwf	(??_ARPV4_Packet+29)& (0+255),w,b
  9064  0035C4  E106               	bnz	u15451
  9065  0035C6  503A               	movf	_ipv4Address+2,w,c
  9066  0035C8  197E               	xorwf	(??_ARPV4_Packet+30)& (0+255),w,b
  9067  0035CA  E103               	bnz	u15451
  9068  0035CC  503B               	movf	_ipv4Address+3,w,c
  9069  0035CE  197F               	xorwf	(??_ARPV4_Packet+31)& (0+255),w,b
  9070  0035D0  A4D8               	btfss	status,2,c
  9071  0035D2                     u15451:
  9072  0035D2  0012               	return	
  9073                           
  9074                           ; BSR set to: 0
  9075                           ;arpv4.c: 127: {
  9076                           ;arpv4.c: 128: if(!mergeFlag)
  9077  0035D4  5182               	movf	ARPV4_Packet@mergeFlag& (0+255),w,b
  9078  0035D6  E149               	bnz	l9565
  9079                           
  9080                           ; BSR set to: 0
  9081                           ;arpv4.c: 129: {
  9082                           ;arpv4.c: 131: entryPointer = arpMap;
  9083  0035D8  D93A               	call	PL711	;call to abstracted procedure
  9084                           
  9085                           ;arpv4.c: 132: arpMap_t *arpPtr = arpMap;
  9086  0035DA  0E00               	movlw	low _arpMap
  9087  0035DC  6F84               	movwf	ARPV4_Packet@arpPtr& (0+255),b
  9088  0035DE  0E03               	movlw	high _arpMap
  9089  0035E0  6F85               	movwf	(ARPV4_Packet@arpPtr+1)& (0+255),b
  9090                           
  9091                           ; BSR set to: 0
  9092                           ;arpv4.c: 133: for(uint8_t x=8; x !=0; x--)
  9093  0035E2  0E08               	movlw	8
  9094  0035E4  6F87               	movwf	ARPV4_Packet@x_1672& (0+255),b
  9095  0035E6                     l9549:
  9096                           
  9097                           ; BSR set to: 0
  9098                           ;arpv4.c: 134: {
  9099                           ;arpv4.c: 135: if(entryPointer->age < arpPtr->age)
  9100  0035E6  EE20 F00C          	lfsr	2,12
  9101  0035EA  5184               	movf	ARPV4_Packet@arpPtr& (0+255),w,b
  9102  0035EC  26D9               	addwf	fsr2l,f,c
  9103  0035EE  5185               	movf	(ARPV4_Packet@arpPtr+1)& (0+255),w,b
  9104  0035F0  22DA               	addwfc	fsr2h,f,c
  9105  0035F2  EE10 F00C          	lfsr	1,12
  9106  0035F6  5188               	movf	ARPV4_Packet@entryPointer& (0+255),w,b
  9107  0035F8  26E1               	addwf	fsr1l,f,c
  9108  0035FA  5189               	movf	(ARPV4_Packet@entryPointer+1)& (0+255),w,b
  9109  0035FC  22E2               	addwfc	fsr1h,f,c
  9110  0035FE  50DE               	movf	postinc2,w,c
  9111  003600  5CE6               	subwf	postinc1,w,c
  9112  003602  E204               	bc	l680
  9113                           
  9114                           ; BSR set to: 0
  9115                           ;arpv4.c: 136: {
  9116                           ;arpv4.c: 137: entryPointer = arpPtr;
  9117  003604  C084  F088         	movff	ARPV4_Packet@arpPtr,ARPV4_Packet@entryPointer
  9118  003608  C085  F089         	movff	ARPV4_Packet@arpPtr+1,ARPV4_Packet@entryPointer+1
  9119  00360C                     l680:
  9120                           
  9121                           ; BSR set to: 0
  9122                           ;arpv4.c: 138: }
  9123                           ;arpv4.c: 140: arpPtr++;
  9124  00360C  0E0D               	movlw	13
  9125  00360E  2784               	addwf	ARPV4_Packet@arpPtr& (0+255),f,b
  9126  003610  0E00               	movlw	0
  9127  003612  2385               	addwfc	(ARPV4_Packet@arpPtr+1)& (0+255),f,b
  9128                           
  9129                           ; BSR set to: 0
  9130  003614  0787               	decf	ARPV4_Packet@x_1672& (0+255),f,b
  9131                           
  9132                           ; BSR set to: 0
  9133  003616  5187               	movf	ARPV4_Packet@x_1672& (0+255),w,b
  9134  003618  E1E6               	bnz	l9549
  9135                           
  9136                           ; BSR set to: 0
  9137                           ;arpv4.c: 141: }
  9138                           ;arpv4.c: 144: entryPointer->age = 0;
  9139                           
  9140                           ; BSR set to: 0
  9141                           ;arpv4.c: 145: entryPointer->macAddress.s = header.sha.s;
  9142  00361A  D8F9               	call	PL517	;call to abstracted procedure
  9143  00361C                     u15491:
  9144  00361C  CFDB FFE3          	movff	plusw2,plusw1
  9145  003620  06E8               	decf	wreg,f,c
  9146  003622  E2FC               	bc	u15491
  9147                           
  9148                           ; BSR set to: 0
  9149                           ;arpv4.c: 146: entryPointer->ipAddress = ((((uint32_t)header.spa&(uint32_t)0xff000000) >
      +                          > 24) | (((uint32_t)header.spa&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)header.spa&(uin
      +                          t32_t)0x0000ff00) << 8) | (((uint32_t)header.spa&(uint32_t)0x000000ff) << 24) );
  9150  003624  5198               	movf	(ARPV4_Packet@header+14)& (0+255),w,b
  9151  003626  D8E9               	call	PL509	;call to abstracted procedure
  9152  003628  EE20  F098         	lfsr	2,ARPV4_Packet@header+14
  9153  00362C  D8D2               	call	PL497	;call to abstracted procedure
  9154  00362E  C098  F068         	movff	ARPV4_Packet@header+14,??_ARPV4_Packet+8
  9155  003632  C099  F069         	movff	ARPV4_Packet@header+15,??_ARPV4_Packet+9
  9156  003636  C09A  F06A         	movff	ARPV4_Packet@header+16,??_ARPV4_Packet+10
  9157  00363A  C09B  F06B         	movff	ARPV4_Packet@header+17,??_ARPV4_Packet+11
  9158  00363E  D8F5               	call	PL529	;call to abstracted procedure
  9159  003640  EE20  F098         	lfsr	2,ARPV4_Packet@header+14
  9160  003644  D88D               	call	PL421	;call to abstracted procedure
  9161  003646  EE20 F006          	lfsr	2,6
  9162  00364A  D8FC               	call	PL591	;call to abstracted procedure
  9163  00364C  C07C  FFDE         	movff	??_ARPV4_Packet+28,postinc2
  9164  003650  C07D  FFDE         	movff	??_ARPV4_Packet+29,postinc2
  9165  003654  C07E  FFDE         	movff	??_ARPV4_Packet+30,postinc2
  9166  003658  C07F  FFDE         	movff	??_ARPV4_Packet+31,postinc2
  9167                           
  9168                           ; BSR set to: 0
  9169                           ;arpv4.c: 147: entryPointer->protocolType = header.ptype;
  9170  00365C  EE20 F00A          	lfsr	2,10
  9171  003660  D8F1               	call	PL591	;call to abstracted procedure
  9172  003662  C08C  FFDE         	movff	ARPV4_Packet@header+2,postinc2
  9173  003666  C08D  FFDD         	movff	ARPV4_Packet@header+3,postdec2
  9174  00366A                     l9565:
  9175                           
  9176                           ; BSR set to: 0
  9177                           ;arpv4.c: 148: }
  9178                           ;arpv4.c: 149: if(header.oper == ((((uint16_t)1 & (uint16_t)0xFF00) >> 8) | (((uint16_t)
      +                          1 & (uint16_t)0x00FF) << 8)))
  9179  00366A  0591               	decf	(ARPV4_Packet@header+7)& (0+255),w,b
  9180  00366C  1190               	iorwf	(ARPV4_Packet@header+6)& (0+255),w,b
  9181  00366E  A4D8               	btfss	status,2,c
  9182  003670  0012               	return	
  9183                           
  9184                           ; BSR set to: 0
  9185                           ;arpv4.c: 150: {
  9186                           ;arpv4.c: 151: ret = ETH_WriteStart(&header.sha ,0x0806);
  9187  003672  0E92               	movlw	low (ARPV4_Packet@header+8)
  9188  003674  6E17               	movwf	ETH_WriteStart@dest_mac,c
  9189  003676  6A18               	clrf	ETH_WriteStart@dest_mac+1,c
  9190  003678  EC45  F025         	call	PL731	;call to abstracted procedure
  9191  00367C  EC8A  F026         	call	_ETH_WriteStart	;wreg free
  9192  003680  0100               	movlb	0	; () banked
  9193  003682  6F83               	movwf	ARPV4_Packet@ret& (0+255),b
  9194                           
  9195                           ; BSR set to: 0
  9196                           ;arpv4.c: 152: if(ret == SUCCESS)
  9197  003684  0583               	decf	ARPV4_Packet@ret& (0+255),w,b
  9198  003686  A4D8               	btfss	status,2,c
  9199  003688  0012               	return	
  9200                           
  9201                           ; BSR set to: 0
  9202                           ;arpv4.c: 153: {
  9203                           ;arpv4.c: 155: header.tha.s = header.sha.s;
  9204  00368A  EE20  F092         	lfsr	2,ARPV4_Packet@header+8
  9205  00368E  EE10  F09C         	lfsr	1,ARPV4_Packet@header+18
  9206  003692  0E05               	movlw	5
  9207  003694                     u15531:
  9208  003694  CFDB FFE3          	movff	plusw2,plusw1
  9209  003698  06E8               	decf	wreg,f,c
  9210  00369A  E2FC               	bc	u15531
  9211                           
  9212                           ; BSR set to: 0
  9213                           ;arpv4.c: 156: ETH_GetMAC((char*)&header.sha.s);
  9214  00369C  0E8A               	movlw	ARPV4_Packet@header& (0+255)
  9215  00369E  0F08               	addlw	8
  9216  0036A0  ECDC  F030         	call	_ETH_GetMAC
  9217                           
  9218                           ;arpv4.c: 157: header.tpa = header.spa;
  9219  0036A4  C098  F0A2         	movff	ARPV4_Packet@header+14,ARPV4_Packet@header+24
  9220  0036A8  C099  F0A3         	movff	ARPV4_Packet@header+15,ARPV4_Packet@header+25
  9221  0036AC  C09A  F0A4         	movff	ARPV4_Packet@header+16,ARPV4_Packet@header+26
  9222  0036B0  C09B  F0A5         	movff	ARPV4_Packet@header+17,ARPV4_Packet@header+27
  9223                           
  9224                           ;arpv4.c: 158: header.spa = ((((uint32_t)ipv4Address&(uint32_t)0xff000000) >> 24) | (((u
      +                          int32_t)ipv4Address&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)ipv4Address&(uint32_t)0x00
      +                          00ff00) << 8) | (((uint32_t)ipv4Address&(uint32_t)0x000000ff) << 24) );
  9225  0036B4  5038               	movf	_ipv4Address,w,c
  9226  0036B6  0100               	movlb	0	; () banked
  9227  0036B8  D8A0               	call	PL509	;call to abstracted procedure
  9228  0036BA  6B64               	clrf	(??_ARPV4_Packet+4)& (0+255),b
  9229  0036BC  5039               	movf	_ipv4Address+1,w,c
  9230  0036BE  6F65               	movwf	(??_ARPV4_Packet+5)& (0+255),b
  9231  0036C0  6B66               	clrf	(??_ARPV4_Packet+6)& (0+255),b
  9232  0036C2  6B67               	clrf	(??_ARPV4_Packet+7)& (0+255),b
  9233  0036C4  C066  F067         	movff	??_ARPV4_Packet+6,??_ARPV4_Packet+7
  9234  0036C8  C065  F066         	movff	??_ARPV4_Packet+5,??_ARPV4_Packet+6
  9235  0036CC  C064  F065         	movff	??_ARPV4_Packet+4,??_ARPV4_Packet+5
  9236  0036D0  6B64               	clrf	(??_ARPV4_Packet+4)& (0+255),b
  9237  0036D2  6B68               	clrf	(??_ARPV4_Packet+8)& (0+255),b
  9238  0036D4  503A               	movf	_ipv4Address+2,w,c
  9239  0036D6  6F69               	movwf	(??_ARPV4_Packet+9)& (0+255),b
  9240  0036D8  6B6A               	clrf	(??_ARPV4_Packet+10)& (0+255),b
  9241  0036DA  5168               	movf	(??_ARPV4_Packet+8)& (0+255),w,b
  9242  0036DC  6F6B               	movwf	(??_ARPV4_Packet+11)& (0+255),b
  9243  0036DE  5169               	movf	(??_ARPV4_Packet+9)& (0+255),w,b
  9244  0036E0  6F6C               	movwf	(??_ARPV4_Packet+12)& (0+255),b
  9245  0036E2  516A               	movf	(??_ARPV4_Packet+10)& (0+255),w,b
  9246  0036E4  6F6D               	movwf	(??_ARPV4_Packet+13)& (0+255),b
  9247  0036E6  6B6E               	clrf	(??_ARPV4_Packet+14)& (0+255),b
  9248  0036E8  6B6F               	clrf	(??_ARPV4_Packet+15)& (0+255),b
  9249  0036EA  6B70               	clrf	(??_ARPV4_Packet+16)& (0+255),b
  9250  0036EC  6B71               	clrf	(??_ARPV4_Packet+17)& (0+255),b
  9251  0036EE  503B               	movf	_ipv4Address+3,w,c
  9252  0036F0  6F72               	movwf	(??_ARPV4_Packet+18)& (0+255),b
  9253  0036F2  0E19               	movlw	25
  9254  0036F4  D005               	goto	u15540
  9255  0036F6                     u15545:
  9256  0036F6  90D8               	bcf	status,0,c
  9257  0036F8  3372               	rrcf	(??_ARPV4_Packet+18)& (0+255),f,b
  9258  0036FA  3371               	rrcf	(??_ARPV4_Packet+17)& (0+255),f,b
  9259  0036FC  3370               	rrcf	(??_ARPV4_Packet+16)& (0+255),f,b
  9260  0036FE  336F               	rrcf	(??_ARPV4_Packet+15)& (0+255),f,b
  9261  003700                     u15540:
  9262  003700  2EE8               	decfsz	wreg,f,c
  9263  003702  D7F9               	goto	u15545
  9264  003704  516B               	movf	(??_ARPV4_Packet+11)& (0+255),w,b
  9265  003706  116F               	iorwf	(??_ARPV4_Packet+15)& (0+255),w,b
  9266  003708  6F73               	movwf	(??_ARPV4_Packet+19)& (0+255),b
  9267  00370A  516C               	movf	(??_ARPV4_Packet+12)& (0+255),w,b
  9268  00370C  1170               	iorwf	(??_ARPV4_Packet+16)& (0+255),w,b
  9269  00370E  6F74               	movwf	(??_ARPV4_Packet+20)& (0+255),b
  9270  003710  516D               	movf	(??_ARPV4_Packet+13)& (0+255),w,b
  9271  003712  1171               	iorwf	(??_ARPV4_Packet+17)& (0+255),w,b
  9272  003714  6F75               	movwf	(??_ARPV4_Packet+21)& (0+255),b
  9273  003716  516E               	movf	(??_ARPV4_Packet+14)& (0+255),w,b
  9274  003718  1172               	iorwf	(??_ARPV4_Packet+18)& (0+255),w,b
  9275  00371A  6F76               	movwf	(??_ARPV4_Packet+22)& (0+255),b
  9276  00371C  5164               	movf	(??_ARPV4_Packet+4)& (0+255),w,b
  9277  00371E  1173               	iorwf	(??_ARPV4_Packet+19)& (0+255),w,b
  9278  003720  6F77               	movwf	(??_ARPV4_Packet+23)& (0+255),b
  9279  003722  5165               	movf	(??_ARPV4_Packet+5)& (0+255),w,b
  9280  003724  1174               	iorwf	(??_ARPV4_Packet+20)& (0+255),w,b
  9281  003726  6F78               	movwf	(??_ARPV4_Packet+24)& (0+255),b
  9282  003728  5166               	movf	(??_ARPV4_Packet+6)& (0+255),w,b
  9283  00372A  1175               	iorwf	(??_ARPV4_Packet+21)& (0+255),w,b
  9284  00372C  6F79               	movwf	(??_ARPV4_Packet+25)& (0+255),b
  9285  00372E  5167               	movf	(??_ARPV4_Packet+7)& (0+255),w,b
  9286  003730  1176               	iorwf	(??_ARPV4_Packet+22)& (0+255),w,b
  9287  003732  6F7A               	movwf	(??_ARPV4_Packet+26)& (0+255),b
  9288  003734  5160               	movf	??_ARPV4_Packet& (0+255),w,b
  9289  003736  1177               	iorwf	(??_ARPV4_Packet+23)& (0+255),w,b
  9290  003738  6F98               	movwf	(ARPV4_Packet@header+14)& (0+255),b
  9291  00373A  5161               	movf	(??_ARPV4_Packet+1)& (0+255),w,b
  9292  00373C  1178               	iorwf	(??_ARPV4_Packet+24)& (0+255),w,b
  9293  00373E  6F99               	movwf	(ARPV4_Packet@header+15)& (0+255),b
  9294  003740  5162               	movf	(??_ARPV4_Packet+2)& (0+255),w,b
  9295  003742  1179               	iorwf	(??_ARPV4_Packet+25)& (0+255),w,b
  9296  003744  6F9A               	movwf	(ARPV4_Packet@header+16)& (0+255),b
  9297  003746  5163               	movf	(??_ARPV4_Packet+3)& (0+255),w,b
  9298  003748  117A               	iorwf	(??_ARPV4_Packet+26)& (0+255),w,b
  9299  00374A  6F9B               	movwf	(ARPV4_Packet@header+17)& (0+255),b
  9300                           
  9301                           ; BSR set to: 0
  9302                           ;arpv4.c: 159: header.oper = ((((uint16_t)2 & (uint16_t)0xFF00) >> 8) | (((uint16_t)2 & 
      +                          (uint16_t)0x00FF) << 8));
  9303  00374C  0E02               	movlw	2
  9304  00374E  6F91               	movwf	(ARPV4_Packet@header+7)& (0+255),b
  9305  003750  6B90               	clrf	(ARPV4_Packet@header+6)& (0+255),b
  9306                           
  9307                           ; BSR set to: 0
  9308                           ;arpv4.c: 160: ETH_WriteBlock((char*)&header,sizeof(header));
  9309  003752  0E8A               	movlw	low ARPV4_Packet@header
  9310  003754  EC3F  F025         	call	PL683	;call to abstracted procedure
  9311  003758  ECB2  F02F         	call	_ETH_WriteBlock	;wreg free
  9312  00375C  EFF7  F030         	goto	_ETH_Send	;wreg free
  9313  003760                     __end_of_ARPV4_Packet:
  9314                           	opt stack 0
  9315  003760                     PL421:
  9316                           	opt stack 18
  9317  003760  14DE               	andwf	postinc2,w,c
  9318  003762  6F70               	movwf	(??_ARPV4_Packet+16)& (0+255),b
  9319  003764  0E00               	movlw	0
  9320  003766  14DE               	andwf	postinc2,w,c
  9321  003768  6F71               	movwf	(??_ARPV4_Packet+17)& (0+255),b
  9322  00376A  0E00               	movlw	0
  9323  00376C  14DE               	andwf	postinc2,w,c
  9324  00376E  6F72               	movwf	(??_ARPV4_Packet+18)& (0+255),b
  9325  003770  0EFF               	movlw	255
  9326  003772  14DE               	andwf	postinc2,w,c
  9327  003774  6F73               	movwf	(??_ARPV4_Packet+19)& (0+255),b
  9328  003776  0E19               	movlw	25
  9329  003778  D005               	goto	u15440
  9330  00377A                     u15445:
  9331  00377A  90D8               	bcf	status,0,c
  9332  00377C  3373               	rrcf	(??_ARPV4_Packet+19)& (0+255),f,b
  9333  00377E  3372               	rrcf	(??_ARPV4_Packet+18)& (0+255),f,b
  9334  003780  3371               	rrcf	(??_ARPV4_Packet+17)& (0+255),f,b
  9335  003782  3370               	rrcf	(??_ARPV4_Packet+16)& (0+255),f,b
  9336  003784                     u15440:
  9337  003784  2EE8               	decfsz	wreg,f,c
  9338  003786  D7F9               	goto	u15445
  9339  003788  516C               	movf	(??_ARPV4_Packet+12)& (0+255),w,b
  9340  00378A  1170               	iorwf	(??_ARPV4_Packet+16)& (0+255),w,b
  9341  00378C  6F74               	movwf	(??_ARPV4_Packet+20)& (0+255),b
  9342  00378E  516D               	movf	(??_ARPV4_Packet+13)& (0+255),w,b
  9343  003790  1171               	iorwf	(??_ARPV4_Packet+17)& (0+255),w,b
  9344  003792  6F75               	movwf	(??_ARPV4_Packet+21)& (0+255),b
  9345  003794  516E               	movf	(??_ARPV4_Packet+14)& (0+255),w,b
  9346  003796  1172               	iorwf	(??_ARPV4_Packet+18)& (0+255),w,b
  9347  003798  6F76               	movwf	(??_ARPV4_Packet+22)& (0+255),b
  9348  00379A  516F               	movf	(??_ARPV4_Packet+15)& (0+255),w,b
  9349  00379C  1173               	iorwf	(??_ARPV4_Packet+19)& (0+255),w,b
  9350  00379E  6F77               	movwf	(??_ARPV4_Packet+23)& (0+255),b
  9351  0037A0  5164               	movf	(??_ARPV4_Packet+4)& (0+255),w,b
  9352  0037A2  1174               	iorwf	(??_ARPV4_Packet+20)& (0+255),w,b
  9353  0037A4  6F78               	movwf	(??_ARPV4_Packet+24)& (0+255),b
  9354  0037A6  5165               	movf	(??_ARPV4_Packet+5)& (0+255),w,b
  9355  0037A8  1175               	iorwf	(??_ARPV4_Packet+21)& (0+255),w,b
  9356  0037AA  6F79               	movwf	(??_ARPV4_Packet+25)& (0+255),b
  9357  0037AC  5166               	movf	(??_ARPV4_Packet+6)& (0+255),w,b
  9358  0037AE  1176               	iorwf	(??_ARPV4_Packet+22)& (0+255),w,b
  9359  0037B0  6F7A               	movwf	(??_ARPV4_Packet+26)& (0+255),b
  9360  0037B2  5167               	movf	(??_ARPV4_Packet+7)& (0+255),w,b
  9361  0037B4  1177               	iorwf	(??_ARPV4_Packet+23)& (0+255),w,b
  9362  0037B6  6F7B               	movwf	(??_ARPV4_Packet+27)& (0+255),b
  9363  0037B8  5160               	movf	??_ARPV4_Packet& (0+255),w,b
  9364  0037BA  1178               	iorwf	(??_ARPV4_Packet+24)& (0+255),w,b
  9365  0037BC  6F7C               	movwf	(??_ARPV4_Packet+28)& (0+255),b
  9366  0037BE  5161               	movf	(??_ARPV4_Packet+1)& (0+255),w,b
  9367  0037C0  1179               	iorwf	(??_ARPV4_Packet+25)& (0+255),w,b
  9368  0037C2  6F7D               	movwf	(??_ARPV4_Packet+29)& (0+255),b
  9369  0037C4  5162               	movf	(??_ARPV4_Packet+2)& (0+255),w,b
  9370  0037C6  117A               	iorwf	(??_ARPV4_Packet+26)& (0+255),w,b
  9371  0037C8  6F7E               	movwf	(??_ARPV4_Packet+30)& (0+255),b
  9372  0037CA  5163               	movf	(??_ARPV4_Packet+3)& (0+255),w,b
  9373  0037CC  117B               	iorwf	(??_ARPV4_Packet+27)& (0+255),w,b
  9374  0037CE  6F7F               	movwf	(??_ARPV4_Packet+31)& (0+255),b
  9375  0037D0  0012               	return	
  9376  0037D2                     __end_ofPL421:
  9377                           	opt stack 0
  9378  0037D2                     PL497:
  9379                           	opt stack 18
  9380  0037D2  0E00               	movlw	0
  9381  0037D4  14DE               	andwf	postinc2,w,c
  9382  0037D6  6F64               	movwf	(??_ARPV4_Packet+4)& (0+255),b
  9383  0037D8  0EFF               	movlw	255
  9384  0037DA  14DE               	andwf	postinc2,w,c
  9385  0037DC  6F65               	movwf	(??_ARPV4_Packet+5)& (0+255),b
  9386  0037DE  0E00               	movlw	0
  9387  0037E0  14DE               	andwf	postinc2,w,c
  9388  0037E2  6F66               	movwf	(??_ARPV4_Packet+6)& (0+255),b
  9389  0037E4  0E00               	movlw	0
  9390  0037E6  14DE               	andwf	postinc2,w,c
  9391  0037E8  6F67               	movwf	(??_ARPV4_Packet+7)& (0+255),b
  9392  0037EA  C066  F067         	movff	??_ARPV4_Packet+6,??_ARPV4_Packet+7
  9393  0037EE  C065  F066         	movff	??_ARPV4_Packet+5,??_ARPV4_Packet+6
  9394  0037F2  C064  F065         	movff	??_ARPV4_Packet+4,??_ARPV4_Packet+5
  9395  0037F6  6B64               	clrf	(??_ARPV4_Packet+4)& (0+255),b
  9396  0037F8  0012               	return	
  9397  0037FA                     __end_ofPL497:
  9398                           	opt stack 0
  9399  0037FA                     PL509:
  9400                           	opt stack 18
  9401  0037FA  6F60               	movwf	??_ARPV4_Packet& (0+255),b
  9402  0037FC  6B61               	clrf	(??_ARPV4_Packet+1)& (0+255),b
  9403  0037FE  6B62               	clrf	(??_ARPV4_Packet+2)& (0+255),b
  9404  003800  6B63               	clrf	(??_ARPV4_Packet+3)& (0+255),b
  9405  003802  C060  F063         	movff	??_ARPV4_Packet,??_ARPV4_Packet+3
  9406  003806  6B62               	clrf	(??_ARPV4_Packet+2)& (0+255),b
  9407  003808  6B61               	clrf	(??_ARPV4_Packet+1)& (0+255),b
  9408  00380A  6B60               	clrf	??_ARPV4_Packet& (0+255),b
  9409  00380C  0012               	return	
  9410  00380E                     __end_ofPL509:
  9411                           	opt stack 0
  9412  00380E                     PL517:
  9413                           	opt stack 18
  9414  00380E  EE20 F00C          	lfsr	2,12
  9415  003812  5188               	movf	ARPV4_Packet@entryPointer& (0+255),w,b
  9416  003814  26D9               	addwf	fsr2l,f,c
  9417  003816  5189               	movf	(ARPV4_Packet@entryPointer+1)& (0+255),w,b
  9418  003818  22DA               	addwfc	fsr2h,f,c
  9419  00381A  6ADF               	clrf	indf2,c
  9420  00381C  EE20  F092         	lfsr	2,ARPV4_Packet@header+8
  9421  003820  C088  FFE1         	movff	ARPV4_Packet@entryPointer,fsr1l
  9422  003824  C089  FFE2         	movff	ARPV4_Packet@entryPointer+1,fsr1h
  9423  003828  0C05               	retlw	5
  9424  00382A                     __end_ofPL517:
  9425                           	opt stack 0
  9426  00382A                     PL529:
  9427                           	opt stack 18
  9428  00382A  C069  F068         	movff	??_ARPV4_Packet+9,??_ARPV4_Packet+8
  9429  00382E  C06A  F069         	movff	??_ARPV4_Packet+10,??_ARPV4_Packet+9
  9430  003832  C06B  F06A         	movff	??_ARPV4_Packet+11,??_ARPV4_Packet+10
  9431  003836  6B6B               	clrf	(??_ARPV4_Packet+11)& (0+255),b
  9432  003838  6B6C               	clrf	(??_ARPV4_Packet+12)& (0+255),b
  9433  00383A  5169               	movf	(??_ARPV4_Packet+9)& (0+255),w,b
  9434  00383C  6F6D               	movwf	(??_ARPV4_Packet+13)& (0+255),b
  9435  00383E  6B6E               	clrf	(??_ARPV4_Packet+14)& (0+255),b
  9436  003840  6B6F               	clrf	(??_ARPV4_Packet+15)& (0+255),b
  9437  003842  0C00               	retlw	0
  9438  003844                     __end_ofPL529:
  9439                           	opt stack 0
  9440  003844                     PL591:
  9441                           	opt stack 18
  9442  003844  5188               	movf	ARPV4_Packet@entryPointer& (0+255),w,b
  9443  003846  26D9               	addwf	fsr2l,f,c
  9444  003848  5189               	movf	(ARPV4_Packet@entryPointer+1)& (0+255),w,b
  9445  00384A  22DA               	addwfc	fsr2h,f,c
  9446  00384C  0012               	return	
  9447  00384E                     __end_ofPL591:
  9448                           	opt stack 0
  9449  00384E                     PL711:
  9450                           	opt stack 18
  9451  00384E  0E00               	movlw	low _arpMap
  9452  003850  6F88               	movwf	ARPV4_Packet@entryPointer& (0+255),b
  9453  003852  0E03               	movlw	high _arpMap
  9454  003854  6F89               	movwf	(ARPV4_Packet@entryPointer+1)& (0+255),b
  9455  003856  0012               	return	
  9456  003858                     __end_ofPL711:
  9457                           	opt stack 0
  9458                           tosu	equ	0xFFF
  9459                           tosh	equ	0xFFE
  9460                           tosl	equ	0xFFD
  9461                           pclath	equ	0xFFA
  9462                           tblptru	equ	0xFF8
  9463                           tblptrh	equ	0xFF7
  9464                           tblptrl	equ	0xFF6
  9465                           tablat	equ	0xFF5
  9466                           prodh	equ	0xFF4
  9467                           prodl	equ	0xFF3
  9468                           intcon	equ	0xFF2
  9469                           indf0	equ	0xFEF
  9470                           postinc0	equ	0xFEE
  9471                           fsr0h	equ	0xFEA
  9472                           fsr0l	equ	0xFE9
  9473                           wreg	equ	0xFE8
  9474                           postinc1	equ	0xFE6
  9475                           postdec1	equ	0xFE5
  9476                           plusw1	equ	0xFE3
  9477                           fsr1h	equ	0xFE2
  9478                           fsr1l	equ	0xFE1
  9479                           bsr	equ	0xFE0
  9480                           indf2	equ	0xFDF
  9481                           postinc2	equ	0xFDE
  9482                           postdec2	equ	0xFDD
  9483                           plusw2	equ	0xFDB
  9484                           fsr2h	equ	0xFDA
  9485                           fsr2l	equ	0xFD9
  9486                           status	equ	0xFD8
  9487                           
  9488 ;; *************** function _ETH_EventHandler *****************
  9489 ;; Defined at:
  9490 ;;		line 215 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
  9491 ;; Parameters:    Size  Location     Type
  9492 ;;		None
  9493 ;; Auto vars:     Size  Location     Type
  9494 ;;		None
  9495 ;; Return value:  Size  Location     Type
  9496 ;;		None               void
  9497 ;; Registers used:
  9498 ;;		wreg, status,2, status,0, cstack
  9499 ;; Tracked objects:
  9500 ;;		On entry : 0/2
  9501 ;;		On exit  : 0/0
  9502 ;;		Unchanged: 0/0
  9503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9508 ;;Total ram usage:        0 bytes
  9509 ;; Hardware stack levels used:    1
  9510 ;; Hardware stack levels required when called:   12
  9511 ;; This function calls:
  9512 ;;		_ETH_CheckLinkUp
  9513 ;;		_PHY_Read
  9514 ;; This function is called by:
  9515 ;;		_Network_Manage
  9516 ;; This function uses a non-reentrant model
  9517 ;;
  9518                           
  9519                           	psect	text36
  9520  005F18                     __ptext36:
  9521                           	opt stack 0
  9522  005F18                     _ETH_EventHandler:
  9523                           	opt stack 0
  9524                           
  9525                           ;j60_driver.c: 218: PIR2bits.ETHIF = 0;
  9526                           
  9527                           ;incstack = 0
  9528                           
  9529                           ;j60_driver.c: 219: if(EPKTCNT >= 3)
  9530  005F18  D822               	call	PL755	;call to abstracted procedure
  9531  005F1A  65D9               	cpfsgt	217,b	;volatile
  9532  005F1C  D008               	goto	l484
  9533                           
  9534                           ; BSR set to: 14
  9535                           ;j60_driver.c: 222: if (EIRbits.LINKIF)
  9536  005F1E  A860               	btfss	3936,4,c	;volatile
  9537  005F20  D006               	goto	l484
  9538                           
  9539                           ; BSR set to: 14
  9540                           ;j60_driver.c: 223: {
  9541                           ;j60_driver.c: 224: PHY_Read(PHIR);
  9542  005F22  0E13               	movlw	19
  9543  005F24  EC9E  F029         	call	_PHY_Read
  9544                           
  9545                           ; BSR set to: 14
  9546                           ;j60_driver.c: 226: ethData.linkChange = 1;
  9547                           
  9548                           ; BSR set to: 1
  9549                           ;j60_driver.c: 227: ethData.up = 0;
  9550  005F28  D812               	call	PL745	;call to abstracted procedure
  9551                           
  9552                           ;j60_driver.c: 230: if(ETH_CheckLinkUp())
  9553  005F2A  EC2D  F031         	call	_ETH_CheckLinkUp	;wreg free
  9554  005F2E                     l484:
  9555                           
  9556                           ;j60_driver.c: 233: }
  9557                           ;j60_driver.c: 234: }
  9558                           ;j60_driver.c: 236: if(EIRbits.RXERIF)
  9559  005F2E  B060               	btfsc	3936,0,c	;volatile
  9560                           
  9561                           ;j60_driver.c: 237: {
  9562                           ;j60_driver.c: 239: EIRbits.RXERIF = 0;
  9563  005F30  9060               	bcf	3936,0,c	;volatile
  9564                           
  9565                           ;j60_driver.c: 240: }
  9566                           ;j60_driver.c: 242: if (EIRbits.TXERIF)
  9567  005F32  B260               	btfsc	3936,1,c	;volatile
  9568                           
  9569                           ;j60_driver.c: 243: {
  9570                           ;j60_driver.c: 245: EIRbits.TXERIF = 0;
  9571  005F34  9260               	bcf	3936,1,c	;volatile
  9572                           
  9573                           ;j60_driver.c: 246: }
  9574                           ;j60_driver.c: 248: if(EIRbits.TXIF)
  9575  005F36  B660               	btfsc	3936,3,c	;volatile
  9576                           
  9577                           ;j60_driver.c: 249: {
  9578                           ;j60_driver.c: 251: EIRbits.TXIF = 0;
  9579                           
  9580                           ;j60_driver.c: 252: ethData.bufferBusy = 0;
  9581  005F38  D80E               	call	PL753	;call to abstracted procedure
  9582  005F3A                     l489:
  9583                           
  9584                           ;j60_driver.c: 253: }
  9585                           ;j60_driver.c: 255: if (EIRbits.PKTIF)
  9586  005F3A  AC60               	btfss	3936,6,c	;volatile
  9587  005F3C  0012               	return	
  9588                           
  9589                           ;j60_driver.c: 256: {
  9590                           ;j60_driver.c: 257: if(ethData.pktReady == 0)
  9591  005F3E  0101               	movlb	1	; () banked
  9592  005F40  B3BE               	btfsc	_ethData& (0+255),1,b	;volatile
  9593  005F42  0012               	return	
  9594                           
  9595                           ; BSR set to: 1
  9596                           ;j60_driver.c: 258: {
  9597                           ;j60_driver.c: 260: ethData.pktReady = 1;
  9598                           
  9599                           ;j60_driver.c: 261: EIEbits.PKTIE = 0;
  9600  005F44  D000               	goto	PL713	;call to abstracted procedure
  9601  005F46                     __end_of_ETH_EventHandler:
  9602                           	opt stack 0
  9603  005F46                     PL713:
  9604                           	opt stack 12
  9605  005F46  83BE               	bsf	_ethData& (0+255),1,b	;volatile
  9606  005F48  010E               	movlb	14	; () banked
  9607  005F4A  9DFB               	bcf	251,6,b	;volatile
  9608  005F4C  0012               	return		;funcret
  9609  005F4E                     __end_ofPL713:
  9610                           	opt stack 0
  9611  005F4E                     PL745:
  9612                           	opt stack 12
  9613  005F4E  0101               	movlb	1	; () banked
  9614  005F50  89BE               	bsf	_ethData& (0+255),4,b	;volatile
  9615  005F52  95BE               	bcf	_ethData& (0+255),2,b	;volatile
  9616  005F54  0012               	return	
  9617  005F56                     __end_ofPL745:
  9618                           	opt stack 0
  9619  005F56                     PL753:
  9620                           	opt stack 12
  9621  005F56  9660               	bcf	3936,3,c	;volatile
  9622  005F58  0101               	movlb	1	; () banked
  9623  005F5A  9BBE               	bcf	_ethData& (0+255),5,b	;volatile
  9624  005F5C  0012               	return	
  9625  005F5E                     __end_ofPL753:
  9626                           	opt stack 0
  9627  005F5E                     PL755:
  9628                           	opt stack 12
  9629  005F5E  9AA1               	bcf	4001,5,c	;volatile
  9630  005F60  010E               	movlb	14	; () banked
  9631  005F62  0C02               	retlw	2
  9632  005F64                     __end_ofPL755:
  9633                           	opt stack 0
  9634                           tosu	equ	0xFFF
  9635                           tosh	equ	0xFFE
  9636                           tosl	equ	0xFFD
  9637                           pclath	equ	0xFFA
  9638                           tblptru	equ	0xFF8
  9639                           tblptrh	equ	0xFF7
  9640                           tblptrl	equ	0xFF6
  9641                           tablat	equ	0xFF5
  9642                           prodh	equ	0xFF4
  9643                           prodl	equ	0xFF3
  9644                           intcon	equ	0xFF2
  9645                           indf0	equ	0xFEF
  9646                           postinc0	equ	0xFEE
  9647                           fsr0h	equ	0xFEA
  9648                           fsr0l	equ	0xFE9
  9649                           wreg	equ	0xFE8
  9650                           postinc1	equ	0xFE6
  9651                           postdec1	equ	0xFE5
  9652                           plusw1	equ	0xFE3
  9653                           fsr1h	equ	0xFE2
  9654                           fsr1l	equ	0xFE1
  9655                           bsr	equ	0xFE0
  9656                           indf2	equ	0xFDF
  9657                           postinc2	equ	0xFDE
  9658                           postdec2	equ	0xFDD
  9659                           plusw2	equ	0xFDB
  9660                           fsr2h	equ	0xFDA
  9661                           fsr2l	equ	0xFD9
  9662                           status	equ	0xFD8
  9663                           
  9664 ;; *************** function _DHCP_Manage *****************
  9665 ;; Defined at:
  9666 ;;		line 130 in file "../../TCPIP Library/source/dhcp_client.c"
  9667 ;; Parameters:    Size  Location     Type
  9668 ;;		None
  9669 ;; Auto vars:     Size  Location     Type
  9670 ;;		None
  9671 ;; Return value:  Size  Location     Type
  9672 ;;		None               void
  9673 ;; Registers used:
  9674 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9675 ;; Tracked objects:
  9676 ;;		On entry : F/1
  9677 ;;		On exit  : E/0
  9678 ;;		Unchanged: 0/0
  9679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9684 ;;Total ram usage:        0 bytes
  9685 ;; Hardware stack levels used:    1
  9686 ;; Hardware stack levels required when called:   14
  9687 ;; This function calls:
  9688 ;;		_DHCP_Request
  9689 ;; This function is called by:
  9690 ;;		_Network_Manage
  9691 ;; This function uses a non-reentrant model
  9692 ;;
  9693                           
  9694                           	psect	text37
  9695  0058AA                     __ptext37:
  9696                           	opt stack 0
  9697  0058AA                     _DHCP_Manage:
  9698                           	opt stack 15
  9699                           
  9700                           ; BSR set to: 1
  9701                           ;dhcp_client.c: 132: if(ethData.linkChange)
  9702                           
  9703                           ;incstack = 0
  9704  0058AA  A9BE               	btfss	_ethData& (0+255),4,b	;volatile
  9705  0058AC  D016               	goto	l9891
  9706                           
  9707                           ; BSR set to: 1
  9708                           ;dhcp_client.c: 133: {
  9709                           ;dhcp_client.c: 134: if (clientState == BOUND && dhcpLeaseTime)
  9710  0058AE  0E05               	movlw	5
  9711  0058B0  0100               	movlb	0	; () banked
  9712  0058B2  19FF               	xorwf	_clientState& (0+255),w,b
  9713  0058B4  E10B               	bnz	l9885
  9714                           
  9715                           ; BSR set to: 0
  9716  0058B6  D839               	call	PL667	;call to abstracted procedure
  9717  0058B8  E009               	bz	l9885
  9718                           
  9719                           ; BSR set to: 0
  9720                           ;dhcp_client.c: 135: {
  9721                           ;dhcp_client.c: 136: dhcpServerId = 0xFFFFFFFF;
  9722  0058BA  0102               	movlb	2	; () banked
  9723  0058BC  6920               	setf	_dhcpServerId& (0+255),b
  9724  0058BE  6921               	setf	(_dhcpServerId+1)& (0+255),b
  9725  0058C0  6922               	setf	(_dhcpServerId+2)& (0+255),b
  9726  0058C2  6923               	setf	(_dhcpServerId+3)& (0+255),b
  9727                           
  9728                           ; BSR set to: 2
  9729                           ;dhcp_client.c: 137: DHCP_Request(DHCP_REQUEST);
  9730  0058C4  0E03               	movlw	3
  9731  0058C6  EC49  F022         	call	_DHCP_Request
  9732                           
  9733                           ;dhcp_client.c: 138: }
  9734  0058CA  D004               	goto	l9889
  9735  0058CC                     l9885:
  9736                           
  9737                           ; BSR set to: 0
  9738                           ;dhcp_client.c: 139: else
  9739                           ;dhcp_client.c: 140: {
  9740                           ;dhcp_client.c: 141: clientState = INIT;
  9741  0058CC  0E01               	movlw	1
  9742  0058CE  6FFF               	movwf	_clientState& (0+255),b
  9743                           
  9744                           ; BSR set to: 0
  9745                           ;dhcp_client.c: 142: DHCP_Request(DHCP_DISCOVER);
  9746  0058D0  EC49  F022         	call	_DHCP_Request
  9747  0058D4                     l9889:
  9748                           
  9749                           ; BSR set to: 0
  9750                           ;dhcp_client.c: 143: }
  9751                           ;dhcp_client.c: 144: ethData.linkChange=0;
  9752  0058D4  0101               	movlb	1	; () banked
  9753  0058D6  99BE               	bcf	_ethData& (0+255),4,b	;volatile
  9754                           
  9755                           ;dhcp_client.c: 145: }
  9756  0058D8  0012               	return	
  9757  0058DA                     l9891:
  9758                           
  9759                           ; BSR set to: 1
  9760                           ;dhcp_client.c: 146: else if (clientState == INIT || clientState == INIT_REBOOT)
  9761  0058DA  0100               	movlb	0	; () banked
  9762  0058DC  05FF               	decf	_clientState& (0+255),w,b
  9763  0058DE  E003               	bz	l9895
  9764                           
  9765                           ; BSR set to: 0
  9766  0058E0  0E02               	movlw	2
  9767  0058E2  19FF               	xorwf	_clientState& (0+255),w,b
  9768  0058E4  E104               	bnz	l9899
  9769  0058E6                     l9895:
  9770                           
  9771                           ; BSR set to: 0
  9772                           ;dhcp_client.c: 147: {
  9773                           ;dhcp_client.c: 148: clientState = INIT;
  9774  0058E6  0E01               	movlw	1
  9775  0058E8  6FFF               	movwf	_clientState& (0+255),b
  9776                           
  9777                           ; BSR set to: 0
  9778                           ;dhcp_client.c: 149: DHCP_Request(DHCP_DISCOVER);
  9779  0058EA  EF49  F022         	goto	_DHCP_Request
  9780  0058EE                     l9899:
  9781                           
  9782                           ; BSR set to: 0
  9783                           ;dhcp_client.c: 151: else if ((dhcpLeaseTime < 100)&& clientState == BOUND)
  9784  0058EE  5037               	movf	_dhcpLeaseTime+3,w,c
  9785  0058F0  1036               	iorwf	_dhcpLeaseTime+2,w,c
  9786  0058F2  1035               	iorwf	_dhcpLeaseTime+1,w,c
  9787  0058F4  E109               	bnz	l9905
  9788  0058F6  0E64               	movlw	100
  9789  0058F8  5C34               	subwf	_dhcpLeaseTime,w,c
  9790  0058FA  E206               	bc	l9905
  9791                           
  9792                           ; BSR set to: 0
  9793  0058FC  0E05               	movlw	5
  9794  0058FE  19FF               	xorwf	_clientState& (0+255),w,b
  9795  005900  E103               	bnz	l9905
  9796                           
  9797                           ; BSR set to: 0
  9798                           ;dhcp_client.c: 152: {
  9799                           ;dhcp_client.c: 153: DHCP_Request(DHCP_REQUEST);
  9800  005902  0E03               	movlw	3
  9801  005904  EF49  F022         	goto	_DHCP_Request
  9802  005908                     l9905:
  9803                           
  9804                           ; BSR set to: 0
  9805                           ;dhcp_client.c: 155: else
  9806                           ;dhcp_client.c: 156: {
  9807                           ;dhcp_client.c: 157: if(clientState == BOUND && dhcpLeaseTime) dhcpLeaseTime --;
  9808  005908  0E05               	movlw	5
  9809  00590A  19FF               	xorwf	_clientState& (0+255),w,b
  9810  00590C  E108               	bnz	l9911
  9811                           
  9812                           ; BSR set to: 0
  9813  00590E  D80D               	call	PL667	;call to abstracted procedure
  9814  005910  E006               	bz	l9911
  9815                           
  9816                           ; BSR set to: 0
  9817  005912  0634               	decf	_dhcpLeaseTime,f,c
  9818  005914  0E00               	movlw	0
  9819  005916  5A35               	subwfb	_dhcpLeaseTime+1,f,c
  9820  005918  5A36               	subwfb	_dhcpLeaseTime+2,f,c
  9821  00591A  5A37               	subwfb	_dhcpLeaseTime+3,f,c
  9822  00591C  0C00               	retlw	0
  9823  00591E                     l9911:
  9824                           
  9825                           ; BSR set to: 0
  9826                           ;dhcp_client.c: 158: else if (!dhcpLeaseTime) clientState = INIT_REBOOT;
  9827  00591E  D805               	call	PL667	;call to abstracted procedure
  9828  005920  A4D8               	btfss	status,2,c
  9829  005922  0012               	return	
  9830                           
  9831                           ; BSR set to: 0
  9832  005924  0E02               	movlw	2
  9833  005926  6FFF               	movwf	_clientState& (0+255),b
  9834  005928  0C02               	retlw	2
  9835  00592A                     __end_of_DHCP_Manage:
  9836                           	opt stack 0
  9837  00592A                     PL667:
  9838                           	opt stack 15
  9839  00592A  5034               	movf	_dhcpLeaseTime,w,c
  9840  00592C  1035               	iorwf	_dhcpLeaseTime+1,w,c
  9841  00592E  1036               	iorwf	_dhcpLeaseTime+2,w,c
  9842  005930  1037               	iorwf	_dhcpLeaseTime+3,w,c
  9843  005932  0012               	return	
  9844  005934                     __end_ofPL667:
  9845                           	opt stack 0
  9846                           tosu	equ	0xFFF
  9847                           tosh	equ	0xFFE
  9848                           tosl	equ	0xFFD
  9849                           pclath	equ	0xFFA
  9850                           tblptru	equ	0xFF8
  9851                           tblptrh	equ	0xFF7
  9852                           tblptrl	equ	0xFF6
  9853                           tablat	equ	0xFF5
  9854                           prodh	equ	0xFF4
  9855                           prodl	equ	0xFF3
  9856                           intcon	equ	0xFF2
  9857                           indf0	equ	0xFEF
  9858                           postinc0	equ	0xFEE
  9859                           fsr0h	equ	0xFEA
  9860                           fsr0l	equ	0xFE9
  9861                           wreg	equ	0xFE8
  9862                           postinc1	equ	0xFE6
  9863                           postdec1	equ	0xFE5
  9864                           plusw1	equ	0xFE3
  9865                           fsr1h	equ	0xFE2
  9866                           fsr1l	equ	0xFE1
  9867                           bsr	equ	0xFE0
  9868                           indf2	equ	0xFDF
  9869                           postinc2	equ	0xFDE
  9870                           postdec2	equ	0xFDD
  9871                           plusw2	equ	0xFDB
  9872                           fsr2h	equ	0xFDA
  9873                           fsr2l	equ	0xFD9
  9874                           status	equ	0xFD8
  9875                           
  9876 ;; *************** function _DHCP_Request *****************
  9877 ;; Defined at:
  9878 ;;		line 71 in file "../../TCPIP Library/source/dhcp_client.c"
  9879 ;; Parameters:    Size  Location     Type
  9880 ;;  type            1    wreg     enum E592
  9881 ;; Auto vars:     Size  Location     Type
  9882 ;;  type            1   72[BANK0 ] enum E592
  9883 ;;  ethMAC          6   73[BANK0 ] struct .
  9884 ;;  msglength       2    0        unsigned int 
  9885 ;;  started         1   71[BANK0 ] unsigned char 
  9886 ;; Return value:  Size  Location     Type
  9887 ;;		None               void
  9888 ;; Registers used:
  9889 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9890 ;; Tracked objects:
  9891 ;;		On entry : D/0
  9892 ;;		On exit  : F/0
  9893 ;;		Unchanged: 0/0
  9894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9896 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9898 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9899 ;;Total ram usage:        8 bytes
  9900 ;; Hardware stack levels used:    1
  9901 ;; Hardware stack levels required when called:   13
  9902 ;; This function calls:
  9903 ;;		_DHCP_WriteZeros
  9904 ;;		_ETH_GetMAC
  9905 ;;		_ETH_Write16
  9906 ;;		_ETH_Write32
  9907 ;;		_ETH_Write8
  9908 ;;		_ETH_WriteBlock
  9909 ;;		_UDP_Send
  9910 ;;		_UDP_Start
  9911 ;; This function is called by:
  9912 ;;		_DHCP_Manage
  9913 ;;		_DHCP_Handler
  9914 ;; This function uses a non-reentrant model
  9915 ;;
  9916                           
  9917                           	psect	text38
  9918  004492                     __ptext38:
  9919                           	opt stack 0
  9920  004492                     _DHCP_Request:
  9921                           	opt stack 12
  9922                           
  9923                           ;incstack = 0
  9924                           ;DHCP_Request@type stored from wreg
  9925  004492  0100               	movlb	0	; () banked
  9926  004494  6FA8               	movwf	DHCP_Request@type& (0+255),b
  9927                           
  9928                           ;dhcp_client.c: 78: ETH_GetMAC((char*)&ethMAC);
  9929  004496  0EA9               	movlw	DHCP_Request@ethMAC& (0+255)
  9930  004498  ECDC  F030         	call	_ETH_GetMAC
  9931                           
  9932                           ;dhcp_client.c: 83: }
  9933                           ;dhcp_client.c: 85: started = UDP_Start(0xFFFFFFFF,68,67);
  9934  00449C  0100               	movlb	0	; () banked
  9935  00449E  699F               	setf	UDP_Start@destIP& (0+255),b
  9936  0044A0  69A0               	setf	(UDP_Start@destIP+1)& (0+255),b
  9937  0044A2  69A1               	setf	(UDP_Start@destIP+2)& (0+255),b
  9938  0044A4  69A2               	setf	(UDP_Start@destIP+3)& (0+255),b
  9939  0044A6  6BA4               	clrf	(UDP_Start@srcPort+1)& (0+255),b
  9940  0044A8  0E44               	movlw	68
  9941  0044AA  6FA3               	movwf	UDP_Start@srcPort& (0+255),b
  9942  0044AC  6BA6               	clrf	(UDP_Start@dstPort+1)& (0+255),b
  9943  0044AE  0E43               	movlw	67
  9944  0044B0  6FA5               	movwf	UDP_Start@dstPort& (0+255),b
  9945  0044B2  ECCC  F02E         	call	_UDP_Start	;wreg free
  9946  0044B6  0100               	movlb	0	; () banked
  9947  0044B8  6FA7               	movwf	DHCP_Request@started& (0+255),b
  9948                           
  9949                           ; BSR set to: 0
  9950                           ;dhcp_client.c: 87: if(started==SUCCESS)
  9951  0044BA  05A7               	decf	DHCP_Request@started& (0+255),w,b
  9952  0044BC  A4D8               	btfss	status,2,c
  9953  0044BE  0012               	return	
  9954                           
  9955                           ; BSR set to: 0
  9956                           ;dhcp_client.c: 88: {
  9957                           ;dhcp_client.c: 89: ETH_Write32(0x01010600);
  9958  0044C0  6A17               	clrf	ETH_Write32@data,c
  9959  0044C2  0E06               	movlw	6
  9960  0044C4  6E18               	movwf	ETH_Write32@data+1,c
  9961  0044C6  0E01               	movlw	1
  9962  0044C8  6E19               	movwf	ETH_Write32@data+2,c
  9963  0044CA  6E1A               	movwf	ETH_Write32@data+3,c
  9964  0044CC  EC25  F033         	call	_ETH_Write32	;wreg free
  9965                           
  9966                           ;dhcp_client.c: 90: ETH_Write32(xidValue);
  9967  0044D0  0E50               	movlw	80
  9968  0044D2  6E17               	movwf	ETH_Write32@data,c
  9969  0044D4  0E48               	movlw	72
  9970  0044D6  6E18               	movwf	ETH_Write32@data+1,c
  9971  0044D8  0E43               	movlw	67
  9972  0044DA  6E19               	movwf	ETH_Write32@data+2,c
  9973  0044DC  0E4D               	movlw	77
  9974  0044DE  6E1A               	movwf	ETH_Write32@data+3,c
  9975  0044E0  EC25  F033         	call	_ETH_Write32	;wreg free
  9976                           
  9977                           ;dhcp_client.c: 91: ETH_Write32(0x00008000);
  9978  0044E4  6A17               	clrf	ETH_Write32@data,c
  9979  0044E6  0E80               	movlw	128
  9980  0044E8  6E18               	movwf	ETH_Write32@data+1,c
  9981  0044EA  6A19               	clrf	ETH_Write32@data+2,c
  9982  0044EC  6A1A               	clrf	ETH_Write32@data+3,c
  9983  0044EE  EC25  F033         	call	_ETH_Write32	;wreg free
  9984                           
  9985                           ;dhcp_client.c: 92: if (type == DHCP_REQUEST)
  9986  0044F2  0E03               	movlw	3
  9987  0044F4  0100               	movlb	0	; () banked
  9988  0044F6  19A8               	xorwf	DHCP_Request@type& (0+255),w,b
  9989  0044F8  E104               	bnz	l8605
  9990                           
  9991                           ; BSR set to: 0
  9992                           ;dhcp_client.c: 93: {
  9993                           ;dhcp_client.c: 94: ETH_Write32(0);
  9994  0044FA  D898               	call	PL635	;call to abstracted procedure
  9995  0044FC  EC25  F033         	call	_ETH_Write32	;wreg free
  9996                           
  9997                           ;dhcp_client.c: 95: }
  9998  004500  D003               	goto	l760
  9999  004502                     l8605:
 10000                           
 10001                           ; BSR set to: 0
 10002                           ;dhcp_client.c: 96: else
 10003                           ;dhcp_client.c: 97: {
 10004                           ;dhcp_client.c: 98: ETH_Write32(ipv4Address);
 10005  004502  D88B               	call	PL525	;call to abstracted procedure
 10006  004504  EC25  F033         	call	_ETH_Write32	;wreg free
 10007  004508                     l760:
 10008                           
 10009                           ;dhcp_client.c: 99: }
 10010                           ;dhcp_client.c: 100: ETH_Write32(0);
 10011  004508  D891               	call	PL635	;call to abstracted procedure
 10012  00450A  EC25  F033         	call	_ETH_Write32	;wreg free
 10013                           
 10014                           ;dhcp_client.c: 101: ETH_Write32(0);
 10015  00450E  D88E               	call	PL635	;call to abstracted procedure
 10016  004510  EC25  F033         	call	_ETH_Write32	;wreg free
 10017                           
 10018                           ;dhcp_client.c: 102: ETH_Write32(0);
 10019  004514  D88B               	call	PL635	;call to abstracted procedure
 10020  004516  EC25  F033         	call	_ETH_Write32	;wreg free
 10021                           
 10022                           ;dhcp_client.c: 103: ETH_WriteBlock((char *)&ethMAC,6);
 10023  00451A  D88D               	call	PL653	;call to abstracted procedure
 10024  00451C  ECB2  F02F         	call	_ETH_WriteBlock	;wreg free
 10025                           
 10026                           ;dhcp_client.c: 104: DHCP_WriteZeros(202);
 10027  004520  6A19               	clrf	DHCP_WriteZeros@length+1,c
 10028  004522  0ECA               	movlw	202
 10029  004524  6E18               	movwf	DHCP_WriteZeros@length,c
 10030  004526  EC32  F033         	call	_DHCP_WriteZeros	;wreg free
 10031                           
 10032                           ;dhcp_client.c: 105: ETH_Write32(0x63825363);
 10033  00452A  0E63               	movlw	99
 10034  00452C  6E17               	movwf	ETH_Write32@data,c
 10035  00452E  0E53               	movlw	83
 10036  004530  6E18               	movwf	ETH_Write32@data+1,c
 10037  004532  0E82               	movlw	130
 10038  004534  6E19               	movwf	ETH_Write32@data+2,c
 10039  004536  0E63               	movlw	99
 10040  004538  6E1A               	movwf	ETH_Write32@data+3,c
 10041  00453A  EC25  F033         	call	_ETH_Write32	;wreg free
 10042                           
 10043                           ;dhcp_client.c: 107: ETH_Write8(53);
 10044  00453E  0E35               	movlw	53
 10045  004540  EC93  F033         	call	_ETH_Write8
 10046                           
 10047                           ;dhcp_client.c: 108: ETH_Write8(1);
 10048  004544  0E01               	movlw	1
 10049  004546  EC93  F033         	call	_ETH_Write8
 10050                           
 10051                           ;dhcp_client.c: 109: ETH_Write8(type);
 10052  00454A  0100               	movlb	0	; () banked
 10053  00454C  51A8               	movf	DHCP_Request@type& (0+255),w,b
 10054  00454E  EC93  F033         	call	_ETH_Write8
 10055                           
 10056                           ;dhcp_client.c: 110: if(type == DHCP_REQUEST)
 10057  004552  0E03               	movlw	3
 10058  004554  0100               	movlb	0	; () banked
 10059  004556  19A8               	xorwf	DHCP_Request@type& (0+255),w,b
 10060  004558  E119               	bnz	l761
 10061                           
 10062                           ; BSR set to: 0
 10063                           ;dhcp_client.c: 111: {
 10064                           ;dhcp_client.c: 112: ETH_Write8(54);ETH_Write8(4);ETH_Write32(dhcpServerId);
 10065  00455A  0E36               	movlw	54
 10066  00455C  EC93  F033         	call	_ETH_Write8
 10067  004560  0E04               	movlw	4
 10068  004562  EC93  F033         	call	_ETH_Write8
 10069  004566  C220  F017         	movff	_dhcpServerId,ETH_Write32@data
 10070  00456A  C221  F018         	movff	_dhcpServerId+1,ETH_Write32@data+1
 10071  00456E  C222  F019         	movff	_dhcpServerId+2,ETH_Write32@data+2
 10072  004572  C223  F01A         	movff	_dhcpServerId+3,ETH_Write32@data+3
 10073  004576  EC25  F033         	call	_ETH_Write32	;wreg free
 10074                           
 10075                           ;dhcp_client.c: 113: ETH_Write8(50);ETH_Write8(4);ETH_Write32(ipv4Address);
 10076  00457A  0E32               	movlw	50
 10077  00457C  EC93  F033         	call	_ETH_Write8
 10078  004580  0E04               	movlw	4
 10079  004582  EC93  F033         	call	_ETH_Write8
 10080  004586  D849               	call	PL525	;call to abstracted procedure
 10081  004588  EC25  F033         	call	_ETH_Write32	;wreg free
 10082  00458C                     l761:
 10083                           
 10084                           ;dhcp_client.c: 114: }
 10085                           ;dhcp_client.c: 115: ETH_Write8(55); ETH_Write8(4); ETH_Write8(1); ETH_Write8(3); ETH_Wr
      +                          ite8(6); ETH_Write8(15);
 10086  00458C  0E37               	movlw	55
 10087  00458E  EC93  F033         	call	_ETH_Write8
 10088  004592  0E04               	movlw	4
 10089  004594  EC93  F033         	call	_ETH_Write8
 10090  004598  0E01               	movlw	1
 10091  00459A  EC93  F033         	call	_ETH_Write8
 10092  00459E  0E03               	movlw	3
 10093  0045A0  EC93  F033         	call	_ETH_Write8
 10094  0045A4  0E06               	movlw	6
 10095  0045A6  EC93  F033         	call	_ETH_Write8
 10096  0045AA  0E0F               	movlw	15
 10097  0045AC  EC93  F033         	call	_ETH_Write8
 10098                           
 10099                           ;dhcp_client.c: 116: ETH_Write8(57); ETH_Write8(2); ETH_Write16(512);
 10100  0045B0  0E39               	movlw	57
 10101  0045B2  EC93  F033         	call	_ETH_Write8
 10102  0045B6  0E02               	movlw	2
 10103  0045B8  EC93  F033         	call	_ETH_Write8
 10104  0045BC  0E02               	movlw	2
 10105  0045BE  6E18               	movwf	ETH_Write16@data+1,c
 10106  0045C0  6A17               	clrf	ETH_Write16@data,c
 10107  0045C2  EC72  F033         	call	_ETH_Write16	;wreg free
 10108                           
 10109                           ;dhcp_client.c: 117: ETH_Write8(12); ETH_Write8(20); ETH_WriteBlock((char *)dhcpName,20)
      +                          ;
 10110  0045C6  0E0C               	movlw	12
 10111  0045C8  EC93  F033         	call	_ETH_Write8
 10112  0045CC  0E14               	movlw	20
 10113  0045CE  EC93  F033         	call	_ETH_Write8
 10114  0045D2  0E13               	movlw	low _dhcpName
 10115  0045D4  6E17               	movwf	ETH_WriteBlock@buffer,c
 10116  0045D6  5017               	movf	ETH_WriteBlock@buffer,w,c
 10117  0045D8  A4D8               	btfss	status,2,c
 10118  0045DA  0E10               	movlw	high __smallconst
 10119  0045DC  6E18               	movwf	ETH_WriteBlock@buffer+1,c
 10120  0045DE  EC5D  F016         	call	PL761	;call to abstracted procedure
 10121  0045E2  ECB2  F02F         	call	_ETH_WriteBlock	;wreg free
 10122                           
 10123                           ;dhcp_client.c: 119: ETH_Write8(61); ETH_Write8(7); ETH_Write8(1); ETH_WriteBlock((char 
      +                          *)&ethMAC,6);
 10124  0045E6  0E3D               	movlw	61
 10125  0045E8  EC93  F033         	call	_ETH_Write8
 10126  0045EC  0E07               	movlw	7
 10127  0045EE  EC93  F033         	call	_ETH_Write8
 10128  0045F2  0E01               	movlw	1
 10129  0045F4  EC93  F033         	call	_ETH_Write8
 10130  0045F8  D81E               	call	PL653	;call to abstracted procedure
 10131  0045FA  ECB2  F02F         	call	_ETH_WriteBlock	;wreg free
 10132                           
 10133                           ;dhcp_client.c: 120: ETH_Write8(255);
 10134  0045FE  0EFF               	movlw	255
 10135  004600  EC93  F033         	call	_ETH_Write8
 10136                           
 10137                           ;dhcp_client.c: 122: ETH_Write8(0);
 10138  004604  0E00               	movlw	0
 10139  004606  EC93  F033         	call	_ETH_Write8
 10140                           
 10141                           ;dhcp_client.c: 124: UDP_Send();
 10142  00460A  EC0F  F02C         	call	_UDP_Send	;wreg free
 10143                           
 10144                           ; BSR set to: 0
 10145                           ;dhcp_client.c: 125: if (type == DHCP_DISCOVER)
 10146  00460E  05A8               	decf	DHCP_Request@type& (0+255),w,b
 10147  004610  A4D8               	btfss	status,2,c
 10148  004612  0012               	return	
 10149                           
 10150                           ; BSR set to: 0
 10151                           ;dhcp_client.c: 126: clientState=SELECTING;
 10152  004614  0E03               	movlw	3
 10153  004616  6FFF               	movwf	_clientState& (0+255),b
 10154                           
 10155                           ; BSR set to: 0
 10156  004618  0C03               	retlw	3	;funcret
 10157  00461A                     __end_of_DHCP_Request:
 10158                           	opt stack 0
 10159  00461A                     PL525:
 10160                           	opt stack 12
 10161  00461A  C038  F017         	movff	_ipv4Address,ETH_Write32@data
 10162  00461E  C039  F018         	movff	_ipv4Address+1,ETH_Write32@data+1
 10163  004622  C03A  F019         	movff	_ipv4Address+2,ETH_Write32@data+2
 10164  004626  C03B  F01A         	movff	_ipv4Address+3,ETH_Write32@data+3
 10165  00462A  0012               	return	
 10166  00462C                     __end_ofPL525:
 10167                           	opt stack 0
 10168  00462C                     PL635:
 10169                           	opt stack 12
 10170  00462C  6A17               	clrf	ETH_Write32@data,c
 10171  00462E  6A18               	clrf	ETH_Write32@data+1,c
 10172  004630  6A19               	clrf	ETH_Write32@data+2,c
 10173  004632  6A1A               	clrf	ETH_Write32@data+3,c
 10174  004634  0012               	return	
 10175  004636                     __end_ofPL635:
 10176                           	opt stack 0
 10177  004636                     PL653:
 10178                           	opt stack 12
 10179  004636  0EA9               	movlw	low DHCP_Request@ethMAC
 10180  004638  6E17               	movwf	ETH_WriteBlock@buffer,c
 10181  00463A  6A18               	clrf	ETH_WriteBlock@buffer+1,c
 10182  00463C  6A1A               	clrf	ETH_WriteBlock@length+1,c
 10183  00463E  0E06               	movlw	6
 10184  004640  6E19               	movwf	ETH_WriteBlock@length,c
 10185  004642  0C06               	retlw	6
 10186  004644                     __end_ofPL653:
 10187                           	opt stack 0
 10188                           tosu	equ	0xFFF
 10189                           tosh	equ	0xFFE
 10190                           tosl	equ	0xFFD
 10191                           pclath	equ	0xFFA
 10192                           tblptru	equ	0xFF8
 10193                           tblptrh	equ	0xFF7
 10194                           tblptrl	equ	0xFF6
 10195                           tablat	equ	0xFF5
 10196                           prodh	equ	0xFF4
 10197                           prodl	equ	0xFF3
 10198                           intcon	equ	0xFF2
 10199                           indf0	equ	0xFEF
 10200                           postinc0	equ	0xFEE
 10201                           fsr0h	equ	0xFEA
 10202                           fsr0l	equ	0xFE9
 10203                           wreg	equ	0xFE8
 10204                           postinc1	equ	0xFE6
 10205                           postdec1	equ	0xFE5
 10206                           plusw1	equ	0xFE3
 10207                           fsr1h	equ	0xFE2
 10208                           fsr1l	equ	0xFE1
 10209                           bsr	equ	0xFE0
 10210                           indf2	equ	0xFDF
 10211                           postinc2	equ	0xFDE
 10212                           postdec2	equ	0xFDD
 10213                           plusw2	equ	0xFDB
 10214                           fsr2h	equ	0xFDA
 10215                           fsr2l	equ	0xFD9
 10216                           status	equ	0xFD8
 10217                           
 10218 ;; *************** function _UDP_Start *****************
 10219 ;; Defined at:
 10220 ;;		line 71 in file "../../TCPIP Library/source/udpv4.c"
 10221 ;; Parameters:    Size  Location     Type
 10222 ;;  destIP          4   63[BANK0 ] unsigned long 
 10223 ;;  srcPort         2   67[BANK0 ] unsigned int 
 10224 ;;  dstPort         2   69[BANK0 ] unsigned int 
 10225 ;; Auto vars:     Size  Location     Type
 10226 ;;  ret             1   46[COMRAM] enum E367
 10227 ;; Return value:  Size  Location     Type
 10228 ;;                  1    wreg      enum E449
 10229 ;; Registers used:
 10230 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10231 ;; Tracked objects:
 10232 ;;		On entry : F/0
 10233 ;;		On exit  : 0/0
 10234 ;;		Unchanged: 0/0
 10235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10236 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10237 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10239 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10240 ;;Total ram usage:        9 bytes
 10241 ;; Hardware stack levels used:    1
 10242 ;; Hardware stack levels required when called:   12
 10243 ;; This function calls:
 10244 ;;		_ETH_ResetByteCount
 10245 ;;		_ETH_Write16
 10246 ;;		_IPv4_Start
 10247 ;; This function is called by:
 10248 ;;		_DHCP_Request
 10249 ;; This function uses a non-reentrant model
 10250 ;;
 10251                           
 10252                           	psect	text39
 10253  005D98                     __ptext39:
 10254                           	opt stack 0
 10255  005D98                     _UDP_Start:
 10256                           	opt stack 12
 10257                           
 10258                           ; BSR set to: 0
 10259                           ;udpv4.c: 77: ret = IPv4_Start(destIP,UDP);
 10260                           
 10261                           ; BSR set to: 0
 10262                           
 10263                           ; BSR set to: 0
 10264                           ;incstack = 0
 10265  005D98  C09F  F022         	movff	UDP_Start@destIP,IPv4_Start@destAddress
 10266  005D9C  C0A0  F023         	movff	UDP_Start@destIP+1,IPv4_Start@destAddress+1
 10267  005DA0  C0A1  F024         	movff	UDP_Start@destIP+2,IPv4_Start@destAddress+2
 10268  005DA4  C0A2  F025         	movff	UDP_Start@destIP+3,IPv4_Start@destAddress+3
 10269  005DA8  0E11               	movlw	17
 10270  005DAA  6E26               	movwf	IPv4_Start@protocol,c
 10271  005DAC  EC22  F023         	call	_IPv4_Start	;wreg free
 10272  005DB0  6E2F               	movwf	UDP_Start@ret,c
 10273                           
 10274                           ; BSR set to: 0
 10275                           ;udpv4.c: 78: if(ret == SUCCESS)
 10276  005DB2  042F               	decf	UDP_Start@ret,w,c
 10277  005DB4  E116               	bnz	l8403
 10278                           
 10279                           ; BSR set to: 0
 10280                           ;udpv4.c: 79: {
 10281                           ;udpv4.c: 81: ETH_ResetByteCount();
 10282  005DB6  EC98  F033         	call	_ETH_ResetByteCount	;wreg free
 10283                           
 10284                           ;udpv4.c: 84: ETH_Write16(srcPort);
 10285  005DBA  C0A3  F017         	movff	UDP_Start@srcPort,ETH_Write16@data
 10286  005DBE  C0A4  F018         	movff	UDP_Start@srcPort+1,ETH_Write16@data+1
 10287  005DC2  EC72  F033         	call	_ETH_Write16	;wreg free
 10288                           
 10289                           ;udpv4.c: 87: ETH_Write16(dstPort);
 10290  005DC6  C0A5  F017         	movff	UDP_Start@dstPort,ETH_Write16@data
 10291  005DCA  C0A6  F018         	movff	UDP_Start@dstPort+1,ETH_Write16@data+1
 10292  005DCE  EC72  F033         	call	_ETH_Write16	;wreg free
 10293                           
 10294                           ;udpv4.c: 90: ETH_Write16(0);
 10295  005DD2  6A18               	clrf	ETH_Write16@data+1,c
 10296  005DD4  6A17               	clrf	ETH_Write16@data,c
 10297  005DD6  EC72  F033         	call	_ETH_Write16	;wreg free
 10298                           
 10299                           ;udpv4.c: 93: ETH_Write16(0);
 10300  005DDA  6A18               	clrf	ETH_Write16@data+1,c
 10301  005DDC  6A17               	clrf	ETH_Write16@data,c
 10302  005DDE  EC72  F033         	call	_ETH_Write16	;wreg free
 10303  005DE2                     l8403:
 10304                           
 10305                           ;udpv4.c: 95: }
 10306                           ;udpv4.c: 96: return ret;
 10307  005DE2  502F               	movf	UDP_Start@ret,w,c
 10308  005DE4  0012               	return		;funcret
 10309  005DE6                     __end_of_UDP_Start:
 10310                           	opt stack 0
 10311                           tosu	equ	0xFFF
 10312                           tosh	equ	0xFFE
 10313                           tosl	equ	0xFFD
 10314                           pclath	equ	0xFFA
 10315                           tblptru	equ	0xFF8
 10316                           tblptrh	equ	0xFF7
 10317                           tblptrl	equ	0xFF6
 10318                           tablat	equ	0xFF5
 10319                           prodh	equ	0xFF4
 10320                           prodl	equ	0xFF3
 10321                           intcon	equ	0xFF2
 10322                           indf0	equ	0xFEF
 10323                           postinc0	equ	0xFEE
 10324                           fsr0h	equ	0xFEA
 10325                           fsr0l	equ	0xFE9
 10326                           wreg	equ	0xFE8
 10327                           postinc1	equ	0xFE6
 10328                           postdec1	equ	0xFE5
 10329                           plusw1	equ	0xFE3
 10330                           fsr1h	equ	0xFE2
 10331                           fsr1l	equ	0xFE1
 10332                           bsr	equ	0xFE0
 10333                           indf2	equ	0xFDF
 10334                           postinc2	equ	0xFDE
 10335                           postdec2	equ	0xFDD
 10336                           plusw2	equ	0xFDB
 10337                           fsr2h	equ	0xFDA
 10338                           fsr2l	equ	0xFD9
 10339                           status	equ	0xFD8
 10340                           
 10341 ;; *************** function _UDP_Send *****************
 10342 ;; Defined at:
 10343 ;;		line 99 in file "../../TCPIP Library/source/udpv4.c"
 10344 ;; Parameters:    Size  Location     Type
 10345 ;;		None
 10346 ;; Auto vars:     Size  Location     Type
 10347 ;;  udpLength       2   27[BANK0 ] unsigned int 
 10348 ;;  cksm            2   25[BANK0 ] unsigned int 
 10349 ;;  ret             1    0        enum E367
 10350 ;; Return value:  Size  Location     Type
 10351 ;;                  1    wreg      enum E449
 10352 ;; Registers used:
 10353 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10354 ;; Tracked objects:
 10355 ;;		On entry : 0/0
 10356 ;;		On exit  : F/0
 10357 ;;		Unchanged: 0/0
 10358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10360 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10361 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10362 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10363 ;;Total ram usage:        9 bytes
 10364 ;; Hardware stack levels used:    1
 10365 ;; Hardware stack levels required when called:   12
 10366 ;; This function calls:
 10367 ;;		_ETH_GetByteCount
 10368 ;;		_ETH_Insert
 10369 ;;		_ETH_TxComputeChecksum
 10370 ;;		_IPV4_Send
 10371 ;; This function is called by:
 10372 ;;		_DHCP_Request
 10373 ;; This function uses a non-reentrant model
 10374 ;;
 10375                           
 10376                           	psect	text40
 10377  00581E                     __ptext40:
 10378                           	opt stack 0
 10379  00581E                     _UDP_Send:
 10380                           	opt stack 12
 10381                           
 10382                           ;udpv4.c: 105: udpLength = ETH_GetByteCount();
 10383                           
 10384                           ;incstack = 0
 10385  00581E  ECC3  F032         	call	_ETH_GetByteCount	;wreg free
 10386  005822  C017  F07B         	movff	?_ETH_GetByteCount,UDP_Send@udpLength
 10387  005826  C018  F07C         	movff	?_ETH_GetByteCount+1,UDP_Send@udpLength+1
 10388                           
 10389                           ; BSR set to: 14
 10390                           ;udpv4.c: 106: udpLength = ((((uint16_t)udpLength & (uint16_t)0xFF00) >> 8) | (((uint16_
      +                          t)udpLength & (uint16_t)0x00FF) << 8));
 10391  00582A  D831               	call	PL533	;call to abstracted procedure
 10392                           
 10393                           ; BSR set to: 0
 10394                           ;udpv4.c: 107: ETH_Insert((char *)&udpLength, 2, sizeof(ethernetFrame_t) + sizeof(ipv4He
      +                          ader_t) + (int)(((char*)&((udpHeader_t *)1)->length)-1));
 10395  00582C  ECC4  F02D         	call	PL587	;call to abstracted procedure
 10396  005830  0E26               	movlw	38
 10397  005832  6E19               	movwf	ETH_Insert@offset,c
 10398  005834  0E7B               	movlw	UDP_Send@udpLength& (0+255)
 10399  005836  EC66  F030         	call	_ETH_Insert
 10400                           
 10401                           ;udpv4.c: 108: udpLength = ((((uint16_t)udpLength & (uint16_t)0xFF00) >> 8) | (((uint16_
      +                          t)udpLength & (uint16_t)0x00FF) << 8));
 10402  00583A  D829               	call	PL533	;call to abstracted procedure
 10403                           
 10404                           ; BSR set to: 0
 10405                           ;udpv4.c: 111: cksm = udpLength + UDP;
 10406  00583C  0E11               	movlw	17
 10407  00583E  257B               	addwf	UDP_Send@udpLength& (0+255),w,b
 10408  005840  6F79               	movwf	UDP_Send@cksm& (0+255),b
 10409  005842  0E00               	movlw	0
 10410  005844  217C               	addwfc	(UDP_Send@udpLength+1)& (0+255),w,b
 10411  005846  6F7A               	movwf	(UDP_Send@cksm+1)& (0+255),b
 10412                           
 10413                           ; BSR set to: 0
 10414                           ;udpv4.c: 112: cksm = ETH_TxComputeChecksum(sizeof(ethernetFrame_t) + sizeof(ipv4Header_
      +                          t) - 8, udpLength + 8, cksm);
 10415  005848  EC54  F016         	call	PL723	;call to abstracted procedure
 10416  00584C  257B               	addwf	UDP_Send@udpLength& (0+255),w,b
 10417  00584E  6E27               	movwf	ETH_TxComputeChecksum@len,c
 10418  005850  0E00               	movlw	0
 10419  005852  217C               	addwfc	(UDP_Send@udpLength+1)& (0+255),w,b
 10420  005854  6E28               	movwf	ETH_TxComputeChecksum@len+1,c
 10421  005856  C079  F029         	movff	UDP_Send@cksm,ETH_TxComputeChecksum@seed
 10422  00585A  C07A  F02A         	movff	UDP_Send@cksm+1,ETH_TxComputeChecksum@seed+1
 10423  00585E  ECC8  F02B         	call	_ETH_TxComputeChecksum	;wreg free
 10424  005862  C025  F079         	movff	?_ETH_TxComputeChecksum,UDP_Send@cksm
 10425  005866  C026  F07A         	movff	?_ETH_TxComputeChecksum+1,UDP_Send@cksm+1
 10426                           
 10427                           ; BSR set to: 0
 10428                           ;udpv4.c: 115: if (cksm == 0){
 10429  00586A  5179               	movf	UDP_Send@cksm& (0+255),w,b
 10430  00586C  117A               	iorwf	(UDP_Send@cksm+1)& (0+255),w,b
 10431  00586E  E102               	bnz	l8431
 10432                           
 10433                           ; BSR set to: 0
 10434                           ;udpv4.c: 116: cksm = 0xffff;
 10435  005870  6979               	setf	UDP_Send@cksm& (0+255),b
 10436  005872  697A               	setf	(UDP_Send@cksm+1)& (0+255),b
 10437  005874                     l8431:
 10438                           
 10439                           ; BSR set to: 0
 10440                           ;udpv4.c: 117: }
 10441                           ;udpv4.c: 119: ETH_Insert((char *)&cksm, 2, sizeof(ethernetFrame_t) + sizeof(ipv4Header_
      +                          t) + (int)(((char*)&((udpHeader_t *)1)->checksum)-1));
 10442  005874  ECC4  F02D         	call	PL587	;call to abstracted procedure
 10443  005878  0E28               	movlw	40
 10444  00587A  6E19               	movwf	ETH_Insert@offset,c
 10445  00587C  0E79               	movlw	UDP_Send@cksm& (0+255)
 10446  00587E  EC66  F030         	call	_ETH_Insert
 10447  005882  C07B  F031         	movff	UDP_Send@udpLength,IPV4_Send@payloadLength
 10448  005886  C07C  F032         	movff	UDP_Send@udpLength+1,IPV4_Send@payloadLength+1
 10449  00588A  EF91  F02D         	goto	_IPV4_Send	;wreg free
 10450  00588E                     __end_of_UDP_Send:
 10451                           	opt stack 0
 10452  00588E                     PL533:
 10453                           	opt stack 12
 10454  00588E  0100               	movlb	0	; () banked
 10455  005890  517B               	movf	UDP_Send@udpLength& (0+255),w,b
 10456  005892  6F75               	movwf	(??_UDP_Send+1)& (0+255),b
 10457  005894  6B74               	clrf	??_UDP_Send& (0+255),b
 10458  005896  517C               	movf	(UDP_Send@udpLength+1)& (0+255),w,b
 10459  005898  6F76               	movwf	(??_UDP_Send+2)& (0+255),b
 10460  00589A  6B77               	clrf	(??_UDP_Send+3)& (0+255),b
 10461  00589C  5174               	movf	??_UDP_Send& (0+255),w,b
 10462  00589E  1176               	iorwf	(??_UDP_Send+2)& (0+255),w,b
 10463  0058A0  6F7B               	movwf	UDP_Send@udpLength& (0+255),b
 10464  0058A2  5175               	movf	(??_UDP_Send+1)& (0+255),w,b
 10465  0058A4  1177               	iorwf	(??_UDP_Send+3)& (0+255),w,b
 10466  0058A6  6F7C               	movwf	(UDP_Send@udpLength+1)& (0+255),b
 10467  0058A8  0012               	return	
 10468  0058AA                     __end_ofPL533:
 10469                           	opt stack 0
 10470                           tosu	equ	0xFFF
 10471                           tosh	equ	0xFFE
 10472                           tosl	equ	0xFFD
 10473                           pclath	equ	0xFFA
 10474                           tblptru	equ	0xFF8
 10475                           tblptrh	equ	0xFF7
 10476                           tblptrl	equ	0xFF6
 10477                           tablat	equ	0xFF5
 10478                           prodh	equ	0xFF4
 10479                           prodl	equ	0xFF3
 10480                           intcon	equ	0xFF2
 10481                           indf0	equ	0xFEF
 10482                           postinc0	equ	0xFEE
 10483                           fsr0h	equ	0xFEA
 10484                           fsr0l	equ	0xFE9
 10485                           wreg	equ	0xFE8
 10486                           postinc1	equ	0xFE6
 10487                           postdec1	equ	0xFE5
 10488                           plusw1	equ	0xFE3
 10489                           fsr1h	equ	0xFE2
 10490                           fsr1l	equ	0xFE1
 10491                           bsr	equ	0xFE0
 10492                           indf2	equ	0xFDF
 10493                           postinc2	equ	0xFDE
 10494                           postdec2	equ	0xFDD
 10495                           plusw2	equ	0xFDB
 10496                           fsr2h	equ	0xFDA
 10497                           fsr2l	equ	0xFD9
 10498                           status	equ	0xFD8
 10499                           
 10500 ;; *************** function _ETH_GetByteCount *****************
 10501 ;; Defined at:
 10502 ;;		line 843 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 10503 ;; Parameters:    Size  Location     Type
 10504 ;;		None
 10505 ;; Auto vars:     Size  Location     Type
 10506 ;;  val             2   24[COMRAM] unsigned int 
 10507 ;; Return value:  Size  Location     Type
 10508 ;;                  2   22[COMRAM] unsigned int 
 10509 ;; Registers used:
 10510 ;;		wreg, status,2, status,0
 10511 ;; Tracked objects:
 10512 ;;		On entry : 0/0
 10513 ;;		On exit  : F/E
 10514 ;;		Unchanged: 0/0
 10515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10516 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10517 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10519 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10520 ;;Total ram usage:        4 bytes
 10521 ;; Hardware stack levels used:    1
 10522 ;; Hardware stack levels required when called:    8
 10523 ;; This function calls:
 10524 ;;		Nothing
 10525 ;; This function is called by:
 10526 ;;		_UDP_Send
 10527 ;; This function uses a non-reentrant model
 10528 ;;
 10529                           
 10530                           	psect	text41
 10531  006586                     __ptext41:
 10532                           	opt stack 0
 10533  006586                     _ETH_GetByteCount:
 10534                           	opt stack 15
 10535                           
 10536                           ;j60_driver.c: 845: uint16_t val;
 10537                           ;j60_driver.c: 846: val = EWRPT - ethData.saveWRPT;
 10538                           
 10539                           ; BSR set to: 0
 10540                           ;incstack = 0
 10541  006586  0101               	movlb	1	; () banked
 10542  006588  51C3               	movf	(_ethData+5)& (0+255),w,b	;volatile
 10543  00658A  010E               	movlb	14	; () banked
 10544  00658C  5DE2               	subwf	226,w,b	;volatile
 10545  00658E  6E19               	movwf	ETH_GetByteCount@val,c
 10546  006590  0101               	movlb	1	; () banked
 10547  006592  51C4               	movf	(_ethData+6)& (0+255),w,b	;volatile
 10548  006594  010E               	movlb	14	; () banked
 10549  006596  59E3               	subwfb	227,w,b	;volatile
 10550  006598  6E1A               	movwf	ETH_GetByteCount@val+1,c
 10551                           
 10552                           ; BSR set to: 14
 10553                           ;j60_driver.c: 847: return val ;
 10554  00659A  C019  F017         	movff	ETH_GetByteCount@val,?_ETH_GetByteCount
 10555  00659E  C01A  F018         	movff	ETH_GetByteCount@val+1,?_ETH_GetByteCount+1
 10556                           
 10557                           ; BSR set to: 14
 10558  0065A2  0012               	return		;funcret
 10559  0065A4                     __end_of_ETH_GetByteCount:
 10560                           	opt stack 0
 10561                           tosu	equ	0xFFF
 10562                           tosh	equ	0xFFE
 10563                           tosl	equ	0xFFD
 10564                           pclath	equ	0xFFA
 10565                           tblptru	equ	0xFF8
 10566                           tblptrh	equ	0xFF7
 10567                           tblptrl	equ	0xFF6
 10568                           tablat	equ	0xFF5
 10569                           prodh	equ	0xFF4
 10570                           prodl	equ	0xFF3
 10571                           intcon	equ	0xFF2
 10572                           indf0	equ	0xFEF
 10573                           postinc0	equ	0xFEE
 10574                           fsr0h	equ	0xFEA
 10575                           fsr0l	equ	0xFE9
 10576                           wreg	equ	0xFE8
 10577                           postinc1	equ	0xFE6
 10578                           postdec1	equ	0xFE5
 10579                           plusw1	equ	0xFE3
 10580                           fsr1h	equ	0xFE2
 10581                           fsr1l	equ	0xFE1
 10582                           bsr	equ	0xFE0
 10583                           indf2	equ	0xFDF
 10584                           postinc2	equ	0xFDE
 10585                           postdec2	equ	0xFDD
 10586                           plusw2	equ	0xFDB
 10587                           fsr2h	equ	0xFDA
 10588                           fsr2l	equ	0xFD9
 10589                           status	equ	0xFD8
 10590                           
 10591 ;; *************** function _DHCP_WriteZeros *****************
 10592 ;; Defined at:
 10593 ;;		line 277 in file "../../TCPIP Library/source/dhcp_client.c"
 10594 ;; Parameters:    Size  Location     Type
 10595 ;;  length          2   23[COMRAM] unsigned int 
 10596 ;; Auto vars:     Size  Location     Type
 10597 ;;		None
 10598 ;; Return value:  Size  Location     Type
 10599 ;;		None               void
 10600 ;; Registers used:
 10601 ;;		wreg, status,2, status,0, cstack
 10602 ;; Tracked objects:
 10603 ;;		On entry : 0/0
 10604 ;;		On exit  : 0/0
 10605 ;;		Unchanged: 0/0
 10606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10607 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10610 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10611 ;;Total ram usage:        2 bytes
 10612 ;; Hardware stack levels used:    1
 10613 ;; Hardware stack levels required when called:   10
 10614 ;; This function calls:
 10615 ;;		_ETH_Write8
 10616 ;; This function is called by:
 10617 ;;		_DHCP_Request
 10618 ;; This function uses a non-reentrant model
 10619 ;;
 10620                           
 10621                           	psect	text42
 10622  006664                     __ptext42:
 10623                           	opt stack 0
 10624  006664                     _DHCP_WriteZeros:
 10625                           	opt stack 14
 10626                           
 10627                           ;dhcp_client.c: 279: while(length--)
 10628                           
 10629                           ; BSR set to: 14
 10630                           ;incstack = 0
 10631  006664  D003               	goto	l8411
 10632  006666                     l8409:
 10633                           
 10634                           ;dhcp_client.c: 280: {
 10635                           ;dhcp_client.c: 281: ETH_Write8(0);
 10636  006666  0E00               	movlw	0
 10637  006668  EC93  F033         	call	_ETH_Write8
 10638  00666C                     l8411:
 10639  00666C  0618               	decf	DHCP_WriteZeros@length,f,c
 10640  00666E  A0D8               	btfss	status,0,c
 10641  006670  0619               	decf	DHCP_WriteZeros@length+1,f,c
 10642  006672  2818               	incf	DHCP_WriteZeros@length,w,c
 10643  006674  E1F8               	bnz	l8409
 10644  006676  2819               	incf	DHCP_WriteZeros@length+1,w,c
 10645  006678  E1F6               	bnz	l8409
 10646  00667A  0012               	return		;funcret
 10647  00667C                     __end_of_DHCP_WriteZeros:
 10648                           	opt stack 0
 10649                           tosu	equ	0xFFF
 10650                           tosh	equ	0xFFE
 10651                           tosl	equ	0xFFD
 10652                           pclath	equ	0xFFA
 10653                           tblptru	equ	0xFF8
 10654                           tblptrh	equ	0xFF7
 10655                           tblptrl	equ	0xFF6
 10656                           tablat	equ	0xFF5
 10657                           prodh	equ	0xFF4
 10658                           prodl	equ	0xFF3
 10659                           intcon	equ	0xFF2
 10660                           indf0	equ	0xFEF
 10661                           postinc0	equ	0xFEE
 10662                           fsr0h	equ	0xFEA
 10663                           fsr0l	equ	0xFE9
 10664                           wreg	equ	0xFE8
 10665                           postinc1	equ	0xFE6
 10666                           postdec1	equ	0xFE5
 10667                           plusw1	equ	0xFE3
 10668                           fsr1h	equ	0xFE2
 10669                           fsr1l	equ	0xFE1
 10670                           bsr	equ	0xFE0
 10671                           indf2	equ	0xFDF
 10672                           postinc2	equ	0xFDE
 10673                           postdec2	equ	0xFDD
 10674                           plusw2	equ	0xFDB
 10675                           fsr2h	equ	0xFDA
 10676                           fsr2l	equ	0xFD9
 10677                           status	equ	0xFD8
 10678                           
 10679 ;; *************** function _ARPV4_Update *****************
 10680 ;; Defined at:
 10681 ;;		line 179 in file "../../TCPIP Library/source/arpv4.c"
 10682 ;; Parameters:    Size  Location     Type
 10683 ;;		None
 10684 ;; Auto vars:     Size  Location     Type
 10685 ;;  x               1   24[COMRAM] unsigned char 
 10686 ;;  entryPointer    2   22[COMRAM] PTR struct .
 10687 ;;		 -> arpMap(104), 
 10688 ;; Return value:  Size  Location     Type
 10689 ;;		None               void
 10690 ;; Registers used:
 10691 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10692 ;; Tracked objects:
 10693 ;;		On entry : F/1
 10694 ;;		On exit  : F/1
 10695 ;;		Unchanged: F/0
 10696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10698 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10700 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10701 ;;Total ram usage:        3 bytes
 10702 ;; Hardware stack levels used:    1
 10703 ;; Hardware stack levels required when called:    8
 10704 ;; This function calls:
 10705 ;;		Nothing
 10706 ;; This function is called by:
 10707 ;;		_Network_Manage
 10708 ;; This function uses a non-reentrant model
 10709 ;;
 10710                           
 10711                           	psect	text43
 10712  00639C                     __ptext43:
 10713                           	opt stack 0
 10714  00639C                     _ARPV4_Update:
 10715                           	opt stack 21
 10716                           
 10717                           ; BSR set to: 1
 10718                           ;arpv4.c: 181: arpMap_t *entryPointer = arpMap;
 10719                           
 10720                           ;incstack = 0
 10721  00639C  0E00               	movlw	low _arpMap
 10722  00639E  6E17               	movwf	ARPV4_Update@entryPointer,c
 10723  0063A0  0E03               	movlw	high _arpMap
 10724  0063A2  6E18               	movwf	ARPV4_Update@entryPointer+1,c
 10725                           
 10726                           ; BSR set to: 1
 10727                           ;arpv4.c: 182: for(uint8_t x=0; x < 8; x++)
 10728  0063A4  6A19               	clrf	ARPV4_Update@x,c
 10729  0063A6                     l9867:
 10730                           
 10731                           ; BSR set to: 1
 10732                           ;arpv4.c: 183: {
 10733                           ;arpv4.c: 184: entryPointer->age ++;
 10734  0063A6  EE20 F00C          	lfsr	2,12
 10735  0063AA  5017               	movf	ARPV4_Update@entryPointer,w,c
 10736  0063AC  26D9               	addwf	fsr2l,f,c
 10737  0063AE  5018               	movf	ARPV4_Update@entryPointer+1,w,c
 10738  0063B0  22DA               	addwfc	fsr2h,f,c
 10739  0063B2  2ADF               	incf	indf2,f,c
 10740                           
 10741                           ; BSR set to: 1
 10742                           ;arpv4.c: 185: entryPointer ++;
 10743  0063B4  0E0D               	movlw	13
 10744  0063B6  2617               	addwf	ARPV4_Update@entryPointer,f,c
 10745  0063B8  0E00               	movlw	0
 10746  0063BA  2218               	addwfc	ARPV4_Update@entryPointer+1,f,c
 10747                           
 10748                           ; BSR set to: 1
 10749  0063BC  2A19               	incf	ARPV4_Update@x,f,c
 10750                           
 10751                           ; BSR set to: 1
 10752  0063BE  0E07               	movlw	7
 10753  0063C0  6419               	cpfsgt	ARPV4_Update@x,c
 10754  0063C2  D7F1               	goto	l9867
 10755  0063C4  0C07               	retlw	7
 10756  0063C6                     __end_of_ARPV4_Update:
 10757                           	opt stack 0
 10758                           tosu	equ	0xFFF
 10759                           tosh	equ	0xFFE
 10760                           tosl	equ	0xFFD
 10761                           pclath	equ	0xFFA
 10762                           tblptru	equ	0xFF8
 10763                           tblptrh	equ	0xFF7
 10764                           tblptrl	equ	0xFF6
 10765                           tablat	equ	0xFF5
 10766                           prodh	equ	0xFF4
 10767                           prodl	equ	0xFF3
 10768                           intcon	equ	0xFF2
 10769                           indf0	equ	0xFEF
 10770                           postinc0	equ	0xFEE
 10771                           fsr0h	equ	0xFEA
 10772                           fsr0l	equ	0xFE9
 10773                           wreg	equ	0xFE8
 10774                           postinc1	equ	0xFE6
 10775                           postdec1	equ	0xFE5
 10776                           plusw1	equ	0xFE3
 10777                           fsr1h	equ	0xFE2
 10778                           fsr1l	equ	0xFE1
 10779                           bsr	equ	0xFE0
 10780                           indf2	equ	0xFDF
 10781                           postinc2	equ	0xFDE
 10782                           postdec2	equ	0xFDD
 10783                           plusw2	equ	0xFDB
 10784                           fsr2h	equ	0xFDA
 10785                           fsr2l	equ	0xFD9
 10786                           status	equ	0xFD8
 10787                           
 10788 ;; *************** function _Network_Init *****************
 10789 ;; Defined at:
 10790 ;;		line 65 in file "../../TCPIP Library/source/network.c"
 10791 ;; Parameters:    Size  Location     Type
 10792 ;;		None
 10793 ;; Auto vars:     Size  Location     Type
 10794 ;;		None
 10795 ;; Return value:  Size  Location     Type
 10796 ;;		None               void
 10797 ;; Registers used:
 10798 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10799 ;; Tracked objects:
 10800 ;;		On entry : 0/2
 10801 ;;		On exit  : F/1
 10802 ;;		Unchanged: 0/0
 10803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10808 ;;Total ram usage:        0 bytes
 10809 ;; Hardware stack levels used:    1
 10810 ;; Hardware stack levels required when called:   13
 10811 ;; This function calls:
 10812 ;;		_ARPV4_Init
 10813 ;;		_ETH_Init
 10814 ;;		_IPV4_Init
 10815 ;;		_TCP_Init
 10816 ;;		_time
 10817 ;; This function is called by:
 10818 ;;		_main
 10819 ;; This function uses a non-reentrant model
 10820 ;;
 10821                           
 10822                           	psect	text44
 10823  006490                     __ptext44:
 10824                           	opt stack 0
 10825  006490                     _Network_Init:
 10826                           	opt stack 17
 10827                           
 10828                           ;network.c: 67: ETH_Init();
 10829                           
 10830                           ; BSR set to: 1
 10831                           ;incstack = 0
 10832  006490  ECF4  F025         	call	_ETH_Init	;wreg free
 10833                           
 10834                           ; BSR set to: 14
 10835                           ;network.c: 68: ARPV4_Init();
 10836  006494  EC0B  F033         	call	_ARPV4_Init	;wreg free
 10837                           
 10838                           ; BSR set to: 14
 10839                           ;network.c: 69: IPV4_Init();
 10840  006498  EC89  F033         	call	_IPV4_Init	;wreg free
 10841                           
 10842                           ; BSR set to: 14
 10843                           ;network.c: 70: TCP_Init();
 10844  00649C  ECE1  F032         	call	_TCP_Init	;wreg free
 10845                           
 10846                           ; BSR set to: 2
 10847                           ;network.c: 72: time(&arpTimer);
 10848  0064A0  0EE9               	movlw	low _arpTimer
 10849  0064A2  6E17               	movwf	time@t,c
 10850  0064A4  0E01               	movlw	high _arpTimer
 10851  0064A6  6E18               	movwf	time@t+1,c
 10852  0064A8  EC52  F02E         	call	_time	;wreg free
 10853                           
 10854                           ;network.c: 73: arpTimer += 10;
 10855  0064AC  0E0A               	movlw	10
 10856  0064AE  0101               	movlb	1	; () banked
 10857  0064B0  ECD6  F02C         	call	PL675	;call to abstracted procedure
 10858                           
 10859                           ; BSR set to: 1
 10860  0064B4  0C00               	retlw	0	;funcret
 10861  0064B6                     __end_of_Network_Init:
 10862                           	opt stack 0
 10863                           tosu	equ	0xFFF
 10864                           tosh	equ	0xFFE
 10865                           tosl	equ	0xFFD
 10866                           pclath	equ	0xFFA
 10867                           tblptru	equ	0xFF8
 10868                           tblptrh	equ	0xFF7
 10869                           tblptrl	equ	0xFF6
 10870                           tablat	equ	0xFF5
 10871                           prodh	equ	0xFF4
 10872                           prodl	equ	0xFF3
 10873                           intcon	equ	0xFF2
 10874                           indf0	equ	0xFEF
 10875                           postinc0	equ	0xFEE
 10876                           fsr0h	equ	0xFEA
 10877                           fsr0l	equ	0xFE9
 10878                           wreg	equ	0xFE8
 10879                           postinc1	equ	0xFE6
 10880                           postdec1	equ	0xFE5
 10881                           plusw1	equ	0xFE3
 10882                           fsr1h	equ	0xFE2
 10883                           fsr1l	equ	0xFE1
 10884                           bsr	equ	0xFE0
 10885                           indf2	equ	0xFDF
 10886                           postinc2	equ	0xFDE
 10887                           postdec2	equ	0xFDD
 10888                           plusw2	equ	0xFDB
 10889                           fsr2h	equ	0xFDA
 10890                           fsr2l	equ	0xFD9
 10891                           status	equ	0xFD8
 10892                           
 10893 ;; *************** function _TCP_Init *****************
 10894 ;; Defined at:
 10895 ;;		line 1173 in file "../../TCPIP Library/source/tcpv4.c"
 10896 ;; Parameters:    Size  Location     Type
 10897 ;;		None
 10898 ;; Auto vars:     Size  Location     Type
 10899 ;;		None
 10900 ;; Return value:  Size  Location     Type
 10901 ;;		None               void
 10902 ;; Registers used:
 10903 ;;		wreg, status,2
 10904 ;; Tracked objects:
 10905 ;;		On entry : F/E
 10906 ;;		On exit  : F/2
 10907 ;;		Unchanged: 0/0
 10908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10913 ;;Total ram usage:        0 bytes
 10914 ;; Hardware stack levels used:    1
 10915 ;; Hardware stack levels required when called:    8
 10916 ;; This function calls:
 10917 ;;		Nothing
 10918 ;; This function is called by:
 10919 ;;		_Network_Init
 10920 ;; This function uses a non-reentrant model
 10921 ;;
 10922                           
 10923                           	psect	text45
 10924  0065C2                     __ptext45:
 10925                           	opt stack 0
 10926  0065C2                     _TCP_Init:
 10927                           	opt stack 21
 10928                           
 10929                           ; BSR set to: 14
 10930                           ;tcpv4.c: 1175: tcbList = (0);
 10931                           
 10932                           ; BSR set to: 1
 10933                           ;incstack = 0
 10934  0065C2  6A44               	clrf	_tcbList,c
 10935  0065C4  6A45               	clrf	_tcbList+1,c
 10936                           
 10937                           ;tcpv4.c: 1176: tcbListSize = 0;
 10938  0065C6  6A48               	clrf	_tcbListSize,c
 10939                           
 10940                           ; BSR set to: 14
 10941                           ;tcpv4.c: 1177: nextAvailablePort = (1024u);
 10942  0065C8  0E04               	movlw	4
 10943  0065CA  0101               	movlb	1	; () banked
 10944  0065CC  6FCE               	movwf	(_nextAvailablePort+1)& (0+255),b
 10945  0065CE  0E00               	movlw	0
 10946  0065D0  6BCD               	clrf	_nextAvailablePort& (0+255),b
 10947                           
 10948                           ; BSR set to: 1
 10949                           ;tcpv4.c: 1178: nextSequenceNumber = 0;
 10950  0065D2  0102               	movlb	2	; () banked
 10951  0065D4  6B28               	clrf	_nextSequenceNumber& (0+255),b
 10952  0065D6  6B29               	clrf	(_nextSequenceNumber+1)& (0+255),b
 10953  0065D8  6B2A               	clrf	(_nextSequenceNumber+2)& (0+255),b
 10954  0065DA  6B2B               	clrf	(_nextSequenceNumber+3)& (0+255),b
 10955                           
 10956                           ; BSR set to: 2
 10957  0065DC  0012               	return		;funcret
 10958  0065DE                     __end_of_TCP_Init:
 10959                           	opt stack 0
 10960                           tosu	equ	0xFFF
 10961                           tosh	equ	0xFFE
 10962                           tosl	equ	0xFFD
 10963                           pclath	equ	0xFFA
 10964                           tblptru	equ	0xFF8
 10965                           tblptrh	equ	0xFF7
 10966                           tblptrl	equ	0xFF6
 10967                           tablat	equ	0xFF5
 10968                           prodh	equ	0xFF4
 10969                           prodl	equ	0xFF3
 10970                           intcon	equ	0xFF2
 10971                           indf0	equ	0xFEF
 10972                           postinc0	equ	0xFEE
 10973                           fsr0h	equ	0xFEA
 10974                           fsr0l	equ	0xFE9
 10975                           wreg	equ	0xFE8
 10976                           postinc1	equ	0xFE6
 10977                           postdec1	equ	0xFE5
 10978                           plusw1	equ	0xFE3
 10979                           fsr1h	equ	0xFE2
 10980                           fsr1l	equ	0xFE1
 10981                           bsr	equ	0xFE0
 10982                           indf2	equ	0xFDF
 10983                           postinc2	equ	0xFDE
 10984                           postdec2	equ	0xFDD
 10985                           plusw2	equ	0xFDB
 10986                           fsr2h	equ	0xFDA
 10987                           fsr2l	equ	0xFD9
 10988                           status	equ	0xFD8
 10989                           
 10990 ;; *************** function _IPV4_Init *****************
 10991 ;; Defined at:
 10992 ;;		line 78 in file "../../TCPIP Library/source/ipv4.c"
 10993 ;; Parameters:    Size  Location     Type
 10994 ;;		None
 10995 ;; Auto vars:     Size  Location     Type
 10996 ;;		None
 10997 ;; Return value:  Size  Location     Type
 10998 ;;		None               void
 10999 ;; Registers used:
 11000 ;;		None
 11001 ;; Tracked objects:
 11002 ;;		On entry : F/E
 11003 ;;		On exit  : F/E
 11004 ;;		Unchanged: F/0
 11005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11010 ;;Total ram usage:        0 bytes
 11011 ;; Hardware stack levels used:    1
 11012 ;; Hardware stack levels required when called:    8
 11013 ;; This function calls:
 11014 ;;		Nothing
 11015 ;; This function is called by:
 11016 ;;		_Network_Init
 11017 ;; This function uses a non-reentrant model
 11018 ;;
 11019                           
 11020                           	psect	text46
 11021  006712                     __ptext46:
 11022                           	opt stack 0
 11023  006712                     _IPV4_Init:
 11024                           	opt stack 21
 11025                           
 11026                           ; BSR set to: 14
 11027                           ;ipv4.c: 80: ipv4Address = 0;
 11028                           
 11029                           ; BSR set to: 2
 11030                           ;incstack = 0
 11031  006712  6A38               	clrf	_ipv4Address,c
 11032  006714  6A39               	clrf	_ipv4Address+1,c
 11033  006716  6A3A               	clrf	_ipv4Address+2,c
 11034  006718  6A3B               	clrf	_ipv4Address+3,c
 11035                           
 11036                           ; BSR set to: 14
 11037  00671A  0012               	return		;funcret
 11038  00671C                     __end_of_IPV4_Init:
 11039                           	opt stack 0
 11040                           tosu	equ	0xFFF
 11041                           tosh	equ	0xFFE
 11042                           tosl	equ	0xFFD
 11043                           pclath	equ	0xFFA
 11044                           tblptru	equ	0xFF8
 11045                           tblptrh	equ	0xFF7
 11046                           tblptrl	equ	0xFF6
 11047                           tablat	equ	0xFF5
 11048                           prodh	equ	0xFF4
 11049                           prodl	equ	0xFF3
 11050                           intcon	equ	0xFF2
 11051                           indf0	equ	0xFEF
 11052                           postinc0	equ	0xFEE
 11053                           fsr0h	equ	0xFEA
 11054                           fsr0l	equ	0xFE9
 11055                           wreg	equ	0xFE8
 11056                           postinc1	equ	0xFE6
 11057                           postdec1	equ	0xFE5
 11058                           plusw1	equ	0xFE3
 11059                           fsr1h	equ	0xFE2
 11060                           fsr1l	equ	0xFE1
 11061                           bsr	equ	0xFE0
 11062                           indf2	equ	0xFDF
 11063                           postinc2	equ	0xFDE
 11064                           postdec2	equ	0xFDD
 11065                           plusw2	equ	0xFDB
 11066                           fsr2h	equ	0xFDA
 11067                           fsr2l	equ	0xFD9
 11068                           status	equ	0xFD8
 11069                           
 11070 ;; *************** function _ETH_Init *****************
 11071 ;; Defined at:
 11072 ;;		line 100 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 11073 ;; Parameters:    Size  Location     Type
 11074 ;;		None
 11075 ;; Auto vars:     Size  Location     Type
 11076 ;;  phycon1_valu    2    0        unsigned int 
 11077 ;;  mac             1   44[COMRAM] PTR const struct .
 11078 ;;		 -> macAddress(6), 
 11079 ;; Return value:  Size  Location     Type
 11080 ;;		None               void
 11081 ;; Registers used:
 11082 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11083 ;; Tracked objects:
 11084 ;;		On entry : 0/2
 11085 ;;		On exit  : F/E
 11086 ;;		Unchanged: 0/0
 11087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11089 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11090 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11091 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11092 ;;Total ram usage:        4 bytes
 11093 ;; Hardware stack levels used:    1
 11094 ;; Hardware stack levels required when called:   12
 11095 ;; This function calls:
 11096 ;;		_ETH_CheckLinkUp
 11097 ;;		_MAC_getAddress
 11098 ;;		_PHY_Write
 11099 ;; This function is called by:
 11100 ;;		_Network_Init
 11101 ;; This function uses a non-reentrant model
 11102 ;;
 11103                           
 11104                           	psect	text47
 11105  004BE8                     __ptext47:
 11106                           	opt stack 0
 11107  004BE8                     _ETH_Init:
 11108                           	opt stack 17
 11109                           
 11110                           ;j60_driver.c: 102: const mac48Address_t *mac;
 11111                           ;j60_driver.c: 103: uint16_t phycon1_value;
 11112                           ;j60_driver.c: 106: ethData.error = 0;
 11113                           
 11114                           ; BSR set to: 14
 11115                           ;incstack = 0
 11116  004BE8  0101               	movlb	1	; () banked
 11117  004BEA  91BE               	bcf	_ethData& (0+255),0,b	;volatile
 11118                           
 11119                           ;j60_driver.c: 107: ethData.up = 0;
 11120  004BEC  95BE               	bcf	_ethData& (0+255),2,b	;volatile
 11121                           
 11122                           ;j60_driver.c: 108: ethData.linkChange = 0;
 11123  004BEE  99BE               	bcf	_ethData& (0+255),4,b	;volatile
 11124                           
 11125                           ;j60_driver.c: 109: ethData.bufferBusy = 0;
 11126  004BF0  9BBE               	bcf	_ethData& (0+255),5,b	;volatile
 11127                           
 11128                           ;j60_driver.c: 110: ethData.saveRDPT = 0;
 11129  004BF2  6BC1               	clrf	(_ethData+3)& (0+255),b	;volatile
 11130  004BF4  6BC2               	clrf	(_ethData+4)& (0+255),b	;volatile
 11131                           
 11132                           ;j60_driver.c: 112: nextPacketPointer = (0);
 11133  004BF6  6A42               	clrf	_nextPacketPointer,c
 11134  004BF8  6A43               	clrf	_nextPacketPointer+1,c
 11135                           
 11136                           ; BSR set to: 1
 11137                           ;j60_driver.c: 115: ECON2 = 0xA0;
 11138  004BFA  0EA0               	movlw	160
 11139  004BFC  010E               	movlb	14	; () banked
 11140  004BFE  6FFE               	movwf	254,b	;volatile
 11141  004C00                     l470:
 11142                           
 11143                           ; BSR set to: 14
 11144  004C00  A1FD               	btfss	253,0,b	;volatile
 11145  004C02  D7FE               	goto	l470
 11146                           
 11147                           ; BSR set to: 14
 11148                           ;j60_driver.c: 122: MACON1 = 0b00001101; __nop();
 11149  004C04  0E0D               	movlw	13
 11150  004C06  6FA0               	movwf	160,b	;volatile
 11151                           
 11152                           ; BSR set to: 14
 11153  004C08  F000               	nop	
 11154                           
 11155                           ;j60_driver.c: 123: MACON3 = 0b10110011; __nop();
 11156  004C0A  0EB3               	movlw	179
 11157  004C0C  010E               	movlb	14	; () banked
 11158  004C0E  6FA2               	movwf	162,b	;volatile
 11159                           
 11160                           ; BSR set to: 14
 11161  004C10  F000               	nop	
 11162                           
 11163                           ;j60_driver.c: 124: MACON4 = 0b00000000; __nop();
 11164  004C12  6BA3               	clrf	163,b	;volatile
 11165                           
 11166                           ; BSR set to: 14
 11167  004C14  F000               	nop	
 11168                           
 11169                           ;j60_driver.c: 125: MABBIPG = 0x15; __nop();
 11170  004C16  0E15               	movlw	21
 11171  004C18  6FA4               	movwf	164,b	;volatile
 11172                           
 11173                           ; BSR set to: 14
 11174  004C1A  F000               	nop	
 11175                           
 11176                           ;j60_driver.c: 126: MAIPG = 0x0012; __nop();
 11177  004C1C  6BA7               	clrf	167,b	;volatile
 11178  004C1E  0E12               	movlw	18
 11179  004C20  6FA6               	movwf	166,b	;volatile
 11180                           
 11181                           ; BSR set to: 14
 11182  004C22  F000               	nop	
 11183                           
 11184                           ;j60_driver.c: 142: ETXST = ((8192) - (1518));
 11185  004C24  0E1A               	movlw	26
 11186  004C26  6FE5               	movwf	229,b	;volatile
 11187  004C28  0E12               	movlw	18
 11188  004C2A  6FE4               	movwf	228,b	;volatile
 11189                           
 11190                           ;j60_driver.c: 143: ETXND = ((8192)-1);
 11191  004C2C  0E1F               	movlw	31
 11192  004C2E  6FE7               	movwf	231,b	;volatile
 11193  004C30  69E6               	setf	230,b	;volatile
 11194                           
 11195                           ; BSR set to: 14
 11196                           ;j60_driver.c: 144: ERXST = (0);
 11197  004C32  6BE8               	clrf	232,b	;volatile
 11198  004C34  6BE9               	clrf	233,b	;volatile
 11199                           
 11200                           ;j60_driver.c: 145: ERXND = (((8192) - (1518)) - 2);
 11201  004C36  0E1A               	movlw	26
 11202  004C38  6FEB               	movwf	235,b	;volatile
 11203  004C3A  0E10               	movlw	16
 11204  004C3C  6FEA               	movwf	234,b	;volatile
 11205                           
 11206                           ; BSR set to: 14
 11207                           ;j60_driver.c: 148: ERDPT = (0);
 11208  004C3E  6A7A               	clrf	3962,c	;volatile
 11209  004C40  6A7B               	clrf	3963,c	;volatile
 11210                           
 11211                           ;j60_driver.c: 149: EWRPT = ((8192) - (1518));
 11212  004C42  EC15  F027         	call	PL717	;call to abstracted procedure
 11213                           
 11214                           ; BSR set to: 14
 11215                           ;j60_driver.c: 152: ERXRDPT = -1;
 11216  004C46  69EC               	setf	236,b	;volatile
 11217  004C48  69ED               	setf	237,b	;volatile
 11218                           
 11219                           ;j60_driver.c: 154: MAMXFL = (1518);
 11220  004C4A  0E05               	movlw	5
 11221  004C4C  6FAB               	movwf	171,b	;volatile
 11222  004C4E  0EEE               	movlw	238
 11223  004C50  6FAA               	movwf	170,b	;volatile
 11224                           
 11225                           ; BSR set to: 14
 11226                           ;j60_driver.c: 157: mac = MAC_getAddress();
 11227  004C52  ECA1  F033         	call	_MAC_getAddress	;wreg free
 11228  004C56  6E2D               	movwf	ETH_Init@mac,c
 11229                           
 11230                           ; BSR set to: 14
 11231                           ;j60_driver.c: 158: MAADR1 = mac->mac_array[0]; __nop();
 11232  004C58  C02D  FFF6         	movff	ETH_Init@mac,tblptrl
 11233  004C5C                     	if	1	;There is more than 1 active tblptr byte
 11234  004C5C  EC53  F018         	call	PL461	;call to abstracted procedure
 11235  004C60  CFF5 FE84          	movff	tablat,3716	;volatile
 11236                           
 11237                           ; BSR set to: 14
 11238  004C64  F000               	nop	
 11239                           
 11240                           ;j60_driver.c: 159: MAADR2 = mac->mac_array[1]; __nop();
 11241  004C66  C02D  F02A         	movff	ETH_Init@mac,??_ETH_Init
 11242  004C6A  2A2A               	incf	??_ETH_Init,f,c
 11243  004C6C  C02A  FFF6         	movff	??_ETH_Init,tblptrl
 11244  004C70                     	if	1	;There is more than 1 active tblptr byte
 11245  004C70  EC53  F018         	call	PL461	;call to abstracted procedure
 11246  004C74  CFF5 FE85          	movff	tablat,3717	;volatile
 11247  004C78  F000               	nop	
 11248                           
 11249                           ;j60_driver.c: 160: MAADR3 = mac->mac_array[2]; __nop();
 11250  004C7A  C02D  F02A         	movff	ETH_Init@mac,??_ETH_Init
 11251  004C7E  0E02               	movlw	2
 11252  004C80  D845               	call	PL489	;call to abstracted procedure
 11253  004C82  EC53  F018         	call	PL461	;call to abstracted procedure
 11254  004C86  CFF5 FE82          	movff	tablat,3714	;volatile
 11255  004C8A  F000               	nop	
 11256                           
 11257                           ;j60_driver.c: 161: MAADR4 = mac->mac_array[3]; __nop();
 11258  004C8C  C02D  F02A         	movff	ETH_Init@mac,??_ETH_Init
 11259  004C90  0E03               	movlw	3
 11260  004C92  D83C               	call	PL489	;call to abstracted procedure
 11261  004C94  EC53  F018         	call	PL461	;call to abstracted procedure
 11262  004C98  CFF5 FE83          	movff	tablat,3715	;volatile
 11263  004C9C  F000               	nop	
 11264                           
 11265                           ;j60_driver.c: 162: MAADR5 = mac->mac_array[4]; __nop();
 11266  004C9E  C02D  F02A         	movff	ETH_Init@mac,??_ETH_Init
 11267  004CA2  0E04               	movlw	4
 11268  004CA4  D833               	call	PL489	;call to abstracted procedure
 11269  004CA6  EC53  F018         	call	PL461	;call to abstracted procedure
 11270  004CAA  CFF5 FE80          	movff	tablat,3712	;volatile
 11271  004CAE  F000               	nop	
 11272                           
 11273                           ;j60_driver.c: 163: MAADR6 = mac->mac_array[5]; __nop();
 11274  004CB0  C02D  F02A         	movff	ETH_Init@mac,??_ETH_Init
 11275  004CB4  0E05               	movlw	5
 11276  004CB6  D82A               	call	PL489	;call to abstracted procedure
 11277  004CB8  EC53  F018         	call	PL461	;call to abstracted procedure
 11278  004CBC  CFF5 FE81          	movff	tablat,3713	;volatile
 11279  004CC0  F000               	nop	
 11280                           
 11281                           ;j60_driver.c: 167: ERXFCON = 0b10101011;
 11282  004CC2  0EAB               	movlw	171
 11283  004CC4  010E               	movlb	14	; () banked
 11284  004CC6  6FD8               	movwf	216,b	;volatile
 11285                           
 11286                           ; BSR set to: 14
 11287                           ;j60_driver.c: 170: ECON1=0x04;
 11288  004CC8  0E04               	movlw	4
 11289  004CCA  6ED2               	movwf	4050,c	;volatile
 11290                           
 11291                           ;j60_driver.c: 173: PHY_Write(PHCON1, phycon1_value);
 11292  004CCC  0E01               	movlw	1
 11293  004CCE  6E1A               	movwf	PHY_Write@data+1,c
 11294  004CD0  0E00               	movlw	0
 11295  004CD2  6A19               	clrf	PHY_Write@data,c
 11296  004CD4  ECA4  F02E         	call	_PHY_Write
 11297                           
 11298                           ;j60_driver.c: 174: PHY_Write(PHCON2, 0x0110);
 11299  004CD8  0E01               	movlw	1
 11300  004CDA  6E1A               	movwf	PHY_Write@data+1,c
 11301  004CDC  0E10               	movlw	16
 11302  004CDE  6E19               	movwf	PHY_Write@data,c
 11303  004CE0  ECA4  F02E         	call	_PHY_Write
 11304                           
 11305                           ;j60_driver.c: 175: PHY_Write(PHLCON, 0b01110101001010);
 11306  004CE4  0E1D               	movlw	29
 11307  004CE6  6E1A               	movwf	PHY_Write@data+1,c
 11308  004CE8  0E4A               	movlw	74
 11309  004CEA  6E19               	movwf	PHY_Write@data,c
 11310  004CEC  0E14               	movlw	20
 11311  004CEE  ECA4  F02E         	call	_PHY_Write
 11312                           
 11313                           ;j60_driver.c: 178: ETH_CheckLinkUp();
 11314  004CF2  EC2D  F031         	call	_ETH_CheckLinkUp	;wreg free
 11315                           
 11316                           ;j60_driver.c: 181: EIE = 0b01011001;
 11317  004CF6  0E59               	movlw	89
 11318  004CF8  010E               	movlb	14	; () banked
 11319  004CFA  6FFB               	movwf	251,b	;volatile
 11320                           
 11321                           ; BSR set to: 14
 11322                           ;j60_driver.c: 182: PHY_Write(PHIE,0x0012);
 11323  004CFC  6A1A               	clrf	PHY_Write@data+1,c
 11324  004CFE  0E12               	movlw	18
 11325  004D00  6E19               	movwf	PHY_Write@data,c
 11326  004D02  ECA4  F02E         	call	_PHY_Write
 11327                           
 11328                           ; BSR set to: 14
 11329                           ;j60_driver.c: 185: IPR2bits.ETHIP = 0;
 11330  004D06  9AA2               	bcf	4002,5,c	;volatile
 11331                           
 11332                           ; BSR set to: 14
 11333                           ;j60_driver.c: 186: PIE2bits.ETHIE = 1;
 11334  004D08  8AA0               	bsf	4000,5,c	;volatile
 11335                           
 11336                           ; BSR set to: 14
 11337  004D0A  0012               	return		;funcret
 11338  004D0C                     __end_of_ETH_Init:
 11339                           	opt stack 0
 11340  004D0C                     PL489:
 11341                           	opt stack 17
 11342  004D0C  262A               	addwf	??_ETH_Init,f,c
 11343  004D0E  C02A  FFF6         	movff	??_ETH_Init,tblptrl
 11344  004D12                     	if	1	;There is more than 1 active tblptr byte
 11345  004D12  0012               	return	
 11346  004D14                     __end_ofPL489:
 11347                           	opt stack 0
 11348                           tosu	equ	0xFFF
 11349                           tosh	equ	0xFFE
 11350                           tosl	equ	0xFFD
 11351                           pclath	equ	0xFFA
 11352                           tblptru	equ	0xFF8
 11353                           tblptrh	equ	0xFF7
 11354                           tblptrl	equ	0xFF6
 11355                           tablat	equ	0xFF5
 11356                           prodh	equ	0xFF4
 11357                           prodl	equ	0xFF3
 11358                           intcon	equ	0xFF2
 11359                           indf0	equ	0xFEF
 11360                           postinc0	equ	0xFEE
 11361                           fsr0h	equ	0xFEA
 11362                           fsr0l	equ	0xFE9
 11363                           wreg	equ	0xFE8
 11364                           postinc1	equ	0xFE6
 11365                           postdec1	equ	0xFE5
 11366                           plusw1	equ	0xFE3
 11367                           fsr1h	equ	0xFE2
 11368                           fsr1l	equ	0xFE1
 11369                           bsr	equ	0xFE0
 11370                           indf2	equ	0xFDF
 11371                           postinc2	equ	0xFDE
 11372                           postdec2	equ	0xFDD
 11373                           plusw2	equ	0xFDB
 11374                           fsr2h	equ	0xFDA
 11375                           fsr2l	equ	0xFD9
 11376                           status	equ	0xFD8
 11377                           
 11378 ;; *************** function _PHY_Write *****************
 11379 ;; Defined at:
 11380 ;;		line 317 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 11381 ;; Parameters:    Size  Location     Type
 11382 ;;  reg             1    wreg     enum E7098
 11383 ;;  data            2   24[COMRAM] unsigned int 
 11384 ;; Auto vars:     Size  Location     Type
 11385 ;;  reg             1   26[COMRAM] enum E7098
 11386 ;;  GIESave         1   27[COMRAM] unsigned char 
 11387 ;; Return value:  Size  Location     Type
 11388 ;;                  1    wreg      enum E7107
 11389 ;; Registers used:
 11390 ;;		wreg, status,2, status,0, cstack
 11391 ;; Tracked objects:
 11392 ;;		On entry : F/E
 11393 ;;		On exit  : F/E
 11394 ;;		Unchanged: 0/0
 11395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11396 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11397 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11399 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11400 ;;Total ram usage:        4 bytes
 11401 ;; Hardware stack levels used:    1
 11402 ;; Hardware stack levels required when called:    9
 11403 ;; This function calls:
 11404 ;;		_PHY_WaitForBusy
 11405 ;; This function is called by:
 11406 ;;		_ETH_Init
 11407 ;; This function uses a non-reentrant model
 11408 ;;
 11409                           
 11410                           	psect	text48
 11411  005D48                     __ptext48:
 11412                           	opt stack 0
 11413  005D48                     _PHY_Write:
 11414                           	opt stack 19
 11415                           
 11416                           ; BSR set to: 14
 11417                           ;incstack = 0
 11418                           ;PHY_Write@reg stored from wreg
 11419  005D48  6E1B               	movwf	PHY_Write@reg,c
 11420                           
 11421                           ;j60_driver.c: 319: uint8_t GIESave;
 11422                           ;j60_driver.c: 321: MIREGADR = reg;
 11423  005D4A  C01B  FEB4         	movff	PHY_Write@reg,3764	;volatile
 11424                           
 11425                           ;j60_driver.c: 333: errataTemp = data;
 11426  005D4E  C019  FE7E         	movff	PHY_Write@data,3710
 11427  005D52  C01A  FE7F         	movff	PHY_Write@data+1,3711
 11428                           
 11429                           ;j60_driver.c: 334: GIESave = INTCON;
 11430  005D56  CFF2 F01C          	movff	intcon,PHY_Write@GIESave	;volatile
 11431                           
 11432                           ;j60_driver.c: 335: INTCON = 0;
 11433  005D5A  6AF2               	clrf	intcon,c	;volatile
 11434                           
 11435                           ;j60_driver.c: 336: MIWR = errataTemp;
 11436  005D5C  CE7E FEB6          	movff	3710,3766	;volatile
 11437  005D60  CE7F FEB7          	movff	3711,3767	;volatile
 11438                           
 11439                           ;j60_driver.c: 337: INTCON = GIESave;
 11440  005D64  C01C  FFF2         	movff	PHY_Write@GIESave,intcon	;volatile
 11441  005D68                     i14L__ptext53:
 11442                           	opt stack 0
 11443  005D68                     i14L_PHY_WaitForBusy:
 11444                           	opt stack 0
 11445  005D68                     i14Ll8495:
 11446                           	opt stack 18
 11447                           
 11448                           ;j60_driver.c: 300: phyError_t ret = NOERROR;
 11449  005D68  6A17               	clrf	PHY_WaitForBusy@ret,c
 11450                           
 11451                           ;j60_driver.c: 301: uint8_t timeout;
 11452                           ;j60_driver.c: 303: for(timeout = 0; timeout < 10;timeout++) __nop();
 11453  005D6A  6A18               	clrf	PHY_WaitForBusy@timeout,c
 11454  005D6C                     i14Ll504:
 11455                           	opt stack 18
 11456  005D6C  F000               	nop	
 11457  005D6E                     i14Ll8501:
 11458                           	opt stack 18
 11459  005D6E  2A18               	incf	PHY_WaitForBusy@timeout,f,c
 11460  005D70                     i14Ll8503:
 11461                           	opt stack 18
 11462  005D70  0E09               	movlw	9
 11463  005D72  6418               	cpfsgt	PHY_WaitForBusy@timeout,c
 11464  005D74  D7FB               	goto	i14Ll504
 11465  005D76  D001               	goto	i14Lu12410
 11466  005D78                     i14Lu12411:
 11467                           	opt stack 0
 11468  005D78  D7F9               	goto	i14Ll504
 11469  005D7A                     i14Lu12410:
 11470                           	opt stack 0
 11471  005D7A                     i14Ll8505:
 11472                           	opt stack 18
 11473                           
 11474                           ;j60_driver.c: 304: timeout = 90;
 11475  005D7A  0E5A               	movlw	90
 11476  005D7C  6E18               	movwf	PHY_WaitForBusy@timeout,c
 11477  005D7E  D001               	goto	i14Ll506
 11478  005D80                     i14Ll507:
 11479                           	opt stack 18
 11480                           
 11481                           ; BSR set to: 14
 11482  005D80  F000               	nop	
 11483  005D82                     i14Ll506:
 11484                           	opt stack 18
 11485  005D82  010E               	movlb	14	; () banked
 11486  005D84  A18A               	btfss	138,0,b	;volatile
 11487  005D86                     i14Lu12421:
 11488                           	opt stack 0
 11489  005D86  D002               	goto	i14Ll8509
 11490  005D88                     i14Lu12420:
 11491                           	opt stack 0
 11492  005D88                     i14Ll8507:
 11493                           	opt stack 18
 11494                           
 11495                           ; BSR set to: 14
 11496  005D88  2E18               	decfsz	PHY_WaitForBusy@timeout,f,c
 11497  005D8A  D7FA               	goto	i14Ll507
 11498  005D8C                     i14Ll8509:
 11499                           	opt stack 18
 11500                           
 11501                           ; BSR set to: 14
 11502                           ;j60_driver.c: 307: if(timeout == 0) ret = BUSY_TIMEOUT;
 11503  005D8C  5018               	movf	PHY_WaitForBusy@timeout,w,c
 11504  005D8E  A4D8               	btfss	status,2,c
 11505  005D90                     i14Lu12431:
 11506                           	opt stack 0
 11507  005D90  D001               	goto	i14Ll8513
 11508  005D92                     i14Lu12430:
 11509                           	opt stack 0
 11510  005D92                     i14Ll8511:
 11511                           	opt stack 18
 11512                           
 11513                           ; BSR set to: 14
 11514  005D92  6817               	setf	PHY_WaitForBusy@ret,c
 11515  005D94                     i14Ll8513:
 11516                           	opt stack 18
 11517                           
 11518                           ; BSR set to: 14
 11519                           ;j60_driver.c: 308: return ret;
 11520  005D94  5017               	movf	PHY_WaitForBusy@ret,w,c
 11521  005D96                     i14Ll512:
 11522                           	opt stack 0
 11523  005D96  0012               	return	
 11524  005D98                     __end_of_PHY_Write:
 11525                           	opt stack 0
 11526                           tosu	equ	0xFFF
 11527                           tosh	equ	0xFFE
 11528                           tosl	equ	0xFFD
 11529                           pclath	equ	0xFFA
 11530                           tblptru	equ	0xFF8
 11531                           tblptrh	equ	0xFF7
 11532                           tblptrl	equ	0xFF6
 11533                           tablat	equ	0xFF5
 11534                           prodh	equ	0xFF4
 11535                           prodl	equ	0xFF3
 11536                           intcon	equ	0xFF2
 11537                           indf0	equ	0xFEF
 11538                           postinc0	equ	0xFEE
 11539                           fsr0h	equ	0xFEA
 11540                           fsr0l	equ	0xFE9
 11541                           wreg	equ	0xFE8
 11542                           postinc1	equ	0xFE6
 11543                           postdec1	equ	0xFE5
 11544                           plusw1	equ	0xFE3
 11545                           fsr1h	equ	0xFE2
 11546                           fsr1l	equ	0xFE1
 11547                           bsr	equ	0xFE0
 11548                           indf2	equ	0xFDF
 11549                           postinc2	equ	0xFDE
 11550                           postdec2	equ	0xFDD
 11551                           plusw2	equ	0xFDB
 11552                           fsr2h	equ	0xFDA
 11553                           fsr2l	equ	0xFD9
 11554                           status	equ	0xFD8
 11555                           
 11556 ;; *************** function _MAC_getAddress *****************
 11557 ;; Defined at:
 11558 ;;		line 46 in file "../../TCPIP Library/source/mac_address.c"
 11559 ;; Parameters:    Size  Location     Type
 11560 ;;		None
 11561 ;; Auto vars:     Size  Location     Type
 11562 ;;		None
 11563 ;; Return value:  Size  Location     Type
 11564 ;;                  1    wreg      PTR const struct .
 11565 ;; Registers used:
 11566 ;;		wreg
 11567 ;; Tracked objects:
 11568 ;;		On entry : F/E
 11569 ;;		On exit  : F/E
 11570 ;;		Unchanged: F/0
 11571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11572 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11575 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11576 ;;Total ram usage:        2 bytes
 11577 ;; Hardware stack levels used:    1
 11578 ;; Hardware stack levels required when called:    8
 11579 ;; This function calls:
 11580 ;;		Nothing
 11581 ;; This function is called by:
 11582 ;;		_ETH_Init
 11583 ;; This function uses a non-reentrant model
 11584 ;;
 11585                           
 11586                           	psect	text49
 11587  006742                     __ptext49:
 11588                           	opt stack 0
 11589  006742                     _MAC_getAddress:
 11590                           	opt stack 20
 11591                           
 11592                           ; BSR set to: 14
 11593                           ;mac_address.c: 48: return &macAddress;
 11594                           
 11595                           ; BSR set to: 14
 11596                           ;incstack = 0
 11597  006742  0E2E               	movlw	_macAddress& (0+255)
 11598                           
 11599                           ; BSR set to: 14
 11600  006744  0012               	return		;funcret
 11601  006746                     __end_of_MAC_getAddress:
 11602                           	opt stack 0
 11603                           tosu	equ	0xFFF
 11604                           tosh	equ	0xFFE
 11605                           tosl	equ	0xFFD
 11606                           pclath	equ	0xFFA
 11607                           tblptru	equ	0xFF8
 11608                           tblptrh	equ	0xFF7
 11609                           tblptrl	equ	0xFF6
 11610                           tablat	equ	0xFF5
 11611                           prodh	equ	0xFF4
 11612                           prodl	equ	0xFF3
 11613                           intcon	equ	0xFF2
 11614                           indf0	equ	0xFEF
 11615                           postinc0	equ	0xFEE
 11616                           fsr0h	equ	0xFEA
 11617                           fsr0l	equ	0xFE9
 11618                           wreg	equ	0xFE8
 11619                           postinc1	equ	0xFE6
 11620                           postdec1	equ	0xFE5
 11621                           plusw1	equ	0xFE3
 11622                           fsr1h	equ	0xFE2
 11623                           fsr1l	equ	0xFE1
 11624                           bsr	equ	0xFE0
 11625                           indf2	equ	0xFDF
 11626                           postinc2	equ	0xFDE
 11627                           postdec2	equ	0xFDD
 11628                           plusw2	equ	0xFDB
 11629                           fsr2h	equ	0xFDA
 11630                           fsr2l	equ	0xFD9
 11631                           status	equ	0xFD8
 11632                           
 11633 ;; *************** function _ETH_CheckLinkUp *****************
 11634 ;; Defined at:
 11635 ;;		line 198 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 11636 ;; Parameters:    Size  Location     Type
 11637 ;;		None
 11638 ;; Auto vars:     Size  Location     Type
 11639 ;;  value           4   37[COMRAM] unsigned long 
 11640 ;; Return value:  Size  Location     Type
 11641 ;;                  1    wreg      unsigned char 
 11642 ;; Registers used:
 11643 ;;		wreg, status,2, status,0, cstack
 11644 ;; Tracked objects:
 11645 ;;		On entry : 0/0
 11646 ;;		On exit  : 0/0
 11647 ;;		Unchanged: 0/0
 11648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11650 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11652 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11653 ;;Total ram usage:        4 bytes
 11654 ;; Hardware stack levels used:    1
 11655 ;; Hardware stack levels required when called:   11
 11656 ;; This function calls:
 11657 ;;		_ETH_readLinkStatus
 11658 ;; This function is called by:
 11659 ;;		_ETH_Init
 11660 ;;		_ETH_EventHandler
 11661 ;;		_Network_WaitForLink
 11662 ;; This function uses a non-reentrant model
 11663 ;;
 11664                           
 11665                           	psect	text50
 11666  00625A                     __ptext50:
 11667                           	opt stack 0
 11668  00625A                     _ETH_CheckLinkUp:
 11669                           	opt stack 0
 11670  00625A                     i15L__ptext51:
 11671                           	opt stack 0
 11672  00625A                     i15L_ETH_readLinkStatus:
 11673                           	opt stack 0
 11674  00625A                     i15Ll9247:
 11675                           	opt stack 18
 11676                           
 11677                           ;j60_driver.c: 195: return (PHY_Read(PHSTAT2));
 11678  00625A  0E11               	movlw	17
 11679  00625C  EC9E  F029         	call	_PHY_Read
 11680  006260  C019  F022         	movff	?_PHY_Read,?_ETH_readLinkStatus
 11681  006264  C01A  F023         	movff	?_PHY_Read+1,?_ETH_readLinkStatus+1
 11682  006268  C01B  F024         	movff	?_PHY_Read+2,?_ETH_readLinkStatus+2
 11683  00626C  C01C  F025         	movff	?_PHY_Read+3,?_ETH_readLinkStatus+3
 11684  006270                     i15Ll476:
 11685                           	opt stack 18
 11686  006270  C022  F026         	movff	?_ETH_readLinkStatus,ETH_CheckLinkUp@value
 11687  006274  C023  F027         	movff	?_ETH_readLinkStatus+1,ETH_CheckLinkUp@value+1
 11688  006278  C024  F028         	movff	?_ETH_readLinkStatus+2,ETH_CheckLinkUp@value+2
 11689  00627C  C025  F029         	movff	?_ETH_readLinkStatus+3,ETH_CheckLinkUp@value+3
 11690                           
 11691                           ; BSR set to: 14
 11692                           ;j60_driver.c: 203: if(value & 0x0400)
 11693  006280  A427               	btfss	ETH_CheckLinkUp@value+1,2,c
 11694  006282  0C00               	retlw	0
 11695                           
 11696                           ; BSR set to: 14
 11697                           ;j60_driver.c: 204: {
 11698                           ;j60_driver.c: 205: ethData.up = 1;
 11699                           
 11700                           ; BSR set to: 1
 11701                           ;j60_driver.c: 206: return 1;
 11702  006284  D000               	goto	PL751	;call to abstracted procedure
 11703  006286                     __end_of_ETH_CheckLinkUp:
 11704                           	opt stack 0
 11705  006286                     PL751:
 11706                           	opt stack 12
 11707  006286  0101               	movlb	1	; () banked
 11708  006288  85BE               	bsf	_ethData& (0+255),2,b	;volatile
 11709  00628A  0C01               	retlw	1
 11710  00628C                     __end_ofPL751:
 11711                           	opt stack 0
 11712                           tosu	equ	0xFFF
 11713                           tosh	equ	0xFFE
 11714                           tosl	equ	0xFFD
 11715                           pclath	equ	0xFFA
 11716                           tblptru	equ	0xFF8
 11717                           tblptrh	equ	0xFF7
 11718                           tblptrl	equ	0xFF6
 11719                           tablat	equ	0xFF5
 11720                           prodh	equ	0xFF4
 11721                           prodl	equ	0xFF3
 11722                           intcon	equ	0xFF2
 11723                           indf0	equ	0xFEF
 11724                           postinc0	equ	0xFEE
 11725                           fsr0h	equ	0xFEA
 11726                           fsr0l	equ	0xFE9
 11727                           wreg	equ	0xFE8
 11728                           postinc1	equ	0xFE6
 11729                           postdec1	equ	0xFE5
 11730                           plusw1	equ	0xFE3
 11731                           fsr1h	equ	0xFE2
 11732                           fsr1l	equ	0xFE1
 11733                           bsr	equ	0xFE0
 11734                           indf2	equ	0xFDF
 11735                           postinc2	equ	0xFDE
 11736                           postdec2	equ	0xFDD
 11737                           plusw2	equ	0xFDB
 11738                           fsr2h	equ	0xFDA
 11739                           fsr2l	equ	0xFD9
 11740                           status	equ	0xFD8
 11741                           
 11742 ;; *************** function _ETH_readLinkStatus *****************
 11743 ;; Defined at:
 11744 ;;		line 193 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 11745 ;; Parameters:    Size  Location     Type
 11746 ;;		None
 11747 ;; Auto vars:     Size  Location     Type
 11748 ;;		None
 11749 ;; Return value:  Size  Location     Type
 11750 ;;                  4   33[COMRAM] unsigned long 
 11751 ;; Registers used:
 11752 ;;		wreg, status,2, status,0, cstack
 11753 ;; Tracked objects:
 11754 ;;		On entry : 0/0
 11755 ;;		On exit  : F/E
 11756 ;;		Unchanged: 0/0
 11757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11758 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11761 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11762 ;;Total ram usage:        4 bytes
 11763 ;; Hardware stack levels used:    1
 11764 ;; Hardware stack levels required when called:   10
 11765 ;; This function calls:
 11766 ;;		_PHY_Read
 11767 ;; This function is called by:
 11768 ;;		_ETH_CheckLinkUp
 11769 ;; This function uses a non-reentrant model
 11770 ;;
 11771                           
 11772                           	psect	text51
 11773  000000                     __ptext51:
 11774                           	opt stack 0
 11775  000000                     _ETH_readLinkStatus:
 11776                           	opt stack 0
 11777  000000                     __end_of_ETH_readLinkStatus:
 11778                           	opt stack 0
 11779                           tosu	equ	0xFFF
 11780                           tosh	equ	0xFFE
 11781                           tosl	equ	0xFFD
 11782                           pclath	equ	0xFFA
 11783                           tblptru	equ	0xFF8
 11784                           tblptrh	equ	0xFF7
 11785                           tblptrl	equ	0xFF6
 11786                           tablat	equ	0xFF5
 11787                           prodh	equ	0xFF4
 11788                           prodl	equ	0xFF3
 11789                           intcon	equ	0xFF2
 11790                           indf0	equ	0xFEF
 11791                           postinc0	equ	0xFEE
 11792                           fsr0h	equ	0xFEA
 11793                           fsr0l	equ	0xFE9
 11794                           wreg	equ	0xFE8
 11795                           postinc1	equ	0xFE6
 11796                           postdec1	equ	0xFE5
 11797                           plusw1	equ	0xFE3
 11798                           fsr1h	equ	0xFE2
 11799                           fsr1l	equ	0xFE1
 11800                           bsr	equ	0xFE0
 11801                           indf2	equ	0xFDF
 11802                           postinc2	equ	0xFDE
 11803                           postdec2	equ	0xFDD
 11804                           plusw2	equ	0xFDB
 11805                           fsr2h	equ	0xFDA
 11806                           fsr2l	equ	0xFD9
 11807                           status	equ	0xFD8
 11808                           
 11809 ;; *************** function _PHY_Read *****************
 11810 ;; Defined at:
 11811 ;;		line 350 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 11812 ;; Parameters:    Size  Location     Type
 11813 ;;  reg             1    wreg     enum E7098
 11814 ;; Auto vars:     Size  Location     Type
 11815 ;;  reg             1   28[COMRAM] enum E7098
 11816 ;;  ret             4   29[COMRAM] long 
 11817 ;; Return value:  Size  Location     Type
 11818 ;;                  4   24[COMRAM] long 
 11819 ;; Registers used:
 11820 ;;		wreg, status,2, status,0, cstack
 11821 ;; Tracked objects:
 11822 ;;		On entry : 0/E
 11823 ;;		On exit  : F/E
 11824 ;;		Unchanged: 0/0
 11825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11826 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11827 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11829 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11830 ;;Total ram usage:        9 bytes
 11831 ;; Hardware stack levels used:    1
 11832 ;; Hardware stack levels required when called:    9
 11833 ;; This function calls:
 11834 ;;		_PHY_WaitForBusy
 11835 ;; This function is called by:
 11836 ;;		_ETH_readLinkStatus
 11837 ;;		_ETH_EventHandler
 11838 ;; This function uses a non-reentrant model
 11839 ;;
 11840                           
 11841                           	psect	text52
 11842  00533C                     __ptext52:
 11843                           	opt stack 0
 11844  00533C                     _PHY_Read:
 11845                           	opt stack 18
 11846                           
 11847                           ; BSR set to: 14
 11848                           ;incstack = 0
 11849                           ;PHY_Read@reg stored from wreg
 11850  00533C  6E1D               	movwf	PHY_Read@reg,c
 11851  00533E                     i16L__ptext53:
 11852                           	opt stack 0
 11853  00533E                     i16L_PHY_WaitForBusy:
 11854                           	opt stack 0
 11855  00533E                     i16Ll8495:
 11856                           	opt stack 18
 11857                           
 11858                           ;j60_driver.c: 300: phyError_t ret = NOERROR;
 11859  00533E  6A17               	clrf	PHY_WaitForBusy@ret,c
 11860                           
 11861                           ;j60_driver.c: 301: uint8_t timeout;
 11862                           ;j60_driver.c: 303: for(timeout = 0; timeout < 10;timeout++) __nop();
 11863  005340  6A18               	clrf	PHY_WaitForBusy@timeout,c
 11864  005342                     i16Ll504:
 11865                           	opt stack 18
 11866  005342  F000               	nop	
 11867  005344                     i16Ll8501:
 11868                           	opt stack 18
 11869  005344  2A18               	incf	PHY_WaitForBusy@timeout,f,c
 11870  005346                     i16Ll8503:
 11871                           	opt stack 18
 11872  005346  0E09               	movlw	9
 11873  005348  6418               	cpfsgt	PHY_WaitForBusy@timeout,c
 11874  00534A  D7FB               	goto	i16Ll504
 11875  00534C  D001               	goto	i16Lu12410
 11876  00534E                     i16Lu12411:
 11877                           	opt stack 0
 11878  00534E  D7F9               	goto	i16Ll504
 11879  005350                     i16Lu12410:
 11880                           	opt stack 0
 11881  005350                     i16Ll8505:
 11882                           	opt stack 18
 11883                           
 11884                           ;j60_driver.c: 304: timeout = 90;
 11885  005350  0E5A               	movlw	90
 11886  005352  6E18               	movwf	PHY_WaitForBusy@timeout,c
 11887  005354  D001               	goto	i16Ll506
 11888  005356                     i16Ll507:
 11889                           	opt stack 18
 11890                           
 11891                           ; BSR set to: 14
 11892  005356  F000               	nop	
 11893  005358                     i16Ll506:
 11894                           	opt stack 18
 11895  005358  010E               	movlb	14	; () banked
 11896  00535A  A18A               	btfss	138,0,b	;volatile
 11897  00535C                     i16Lu12421:
 11898                           	opt stack 0
 11899  00535C  D002               	goto	i16Ll8509
 11900  00535E                     i16Lu12420:
 11901                           	opt stack 0
 11902  00535E                     i16Ll8507:
 11903                           	opt stack 18
 11904                           
 11905                           ; BSR set to: 14
 11906  00535E  2E18               	decfsz	PHY_WaitForBusy@timeout,f,c
 11907  005360  D7FA               	goto	i16Ll507
 11908  005362                     i16Ll8509:
 11909                           	opt stack 18
 11910                           
 11911                           ; BSR set to: 14
 11912                           ;j60_driver.c: 307: if(timeout == 0) ret = BUSY_TIMEOUT;
 11913  005362  5018               	movf	PHY_WaitForBusy@timeout,w,c
 11914  005364  A4D8               	btfss	status,2,c
 11915  005366                     i16Lu12431:
 11916                           	opt stack 0
 11917  005366  D001               	goto	i16Ll8513
 11918  005368                     i16Lu12430:
 11919                           	opt stack 0
 11920  005368                     i16Ll8511:
 11921                           	opt stack 18
 11922                           
 11923                           ; BSR set to: 14
 11924  005368  6817               	setf	PHY_WaitForBusy@ret,c
 11925  00536A                     i16Ll8513:
 11926                           	opt stack 18
 11927                           
 11928                           ; BSR set to: 14
 11929                           ;j60_driver.c: 308: return ret;
 11930  00536A  5017               	movf	PHY_WaitForBusy@ret,w,c
 11931  00536C                     i16Ll512:
 11932                           	opt stack 18
 11933  00536C  0900               	iorlw	0
 11934  00536E  E12C               	bnz	l518
 11935                           
 11936                           ; BSR set to: 14
 11937                           ;j60_driver.c: 354: {
 11938                           ;j60_driver.c: 355: MIREGADR = reg;
 11939  005370  C01D  FEB4         	movff	PHY_Read@reg,3764	;volatile
 11940                           
 11941                           ;j60_driver.c: 356: MICMD = 0;
 11942  005374  6BB2               	clrf	178,b	;volatile
 11943                           
 11944                           ;j60_driver.c: 357: MICMDbits.MIIRD = 1;
 11945  005376  81B2               	bsf	178,0,b	;volatile
 11946                           
 11947                           ;j60_driver.c: 358: __nop(); __nop();
 11948  005378  F000               	nop	
 11949  00537A  F000               	nop	
 11950  00537C                     i17L__ptext53:
 11951                           	opt stack 0
 11952  00537C                     i17L_PHY_WaitForBusy:
 11953                           	opt stack 0
 11954  00537C                     i17Ll8495:
 11955                           	opt stack 18
 11956                           
 11957                           ;j60_driver.c: 300: phyError_t ret = NOERROR;
 11958  00537C  6A17               	clrf	PHY_WaitForBusy@ret,c
 11959                           
 11960                           ;j60_driver.c: 301: uint8_t timeout;
 11961                           ;j60_driver.c: 303: for(timeout = 0; timeout < 10;timeout++) __nop();
 11962  00537E  6A18               	clrf	PHY_WaitForBusy@timeout,c
 11963  005380                     i17Ll504:
 11964                           	opt stack 18
 11965  005380  F000               	nop	
 11966  005382                     i17Ll8501:
 11967                           	opt stack 18
 11968  005382  2A18               	incf	PHY_WaitForBusy@timeout,f,c
 11969  005384                     i17Ll8503:
 11970                           	opt stack 18
 11971  005384  0E09               	movlw	9
 11972  005386  6418               	cpfsgt	PHY_WaitForBusy@timeout,c
 11973  005388  D7FB               	goto	i17Ll504
 11974  00538A  D001               	goto	i17Lu12410
 11975  00538C                     i17Lu12411:
 11976                           	opt stack 0
 11977  00538C  D7F9               	goto	i17Ll504
 11978  00538E                     i17Lu12410:
 11979                           	opt stack 0
 11980  00538E                     i17Ll8505:
 11981                           	opt stack 18
 11982                           
 11983                           ;j60_driver.c: 304: timeout = 90;
 11984  00538E  0E5A               	movlw	90
 11985  005390  6E18               	movwf	PHY_WaitForBusy@timeout,c
 11986  005392  D001               	goto	i17Ll506
 11987  005394                     i17Ll507:
 11988                           	opt stack 18
 11989                           
 11990                           ; BSR set to: 14
 11991  005394  F000               	nop	
 11992  005396                     i17Ll506:
 11993                           	opt stack 18
 11994  005396  010E               	movlb	14	; () banked
 11995  005398  A18A               	btfss	138,0,b	;volatile
 11996  00539A                     i17Lu12421:
 11997                           	opt stack 0
 11998  00539A  D002               	goto	i17Ll8509
 11999  00539C                     i17Lu12420:
 12000                           	opt stack 0
 12001  00539C                     i17Ll8507:
 12002                           	opt stack 18
 12003                           
 12004                           ; BSR set to: 14
 12005  00539C  2E18               	decfsz	PHY_WaitForBusy@timeout,f,c
 12006  00539E  D7FA               	goto	i17Ll507
 12007  0053A0                     i17Ll8509:
 12008                           	opt stack 18
 12009                           
 12010                           ; BSR set to: 14
 12011                           ;j60_driver.c: 307: if(timeout == 0) ret = BUSY_TIMEOUT;
 12012  0053A0  5018               	movf	PHY_WaitForBusy@timeout,w,c
 12013  0053A2  A4D8               	btfss	status,2,c
 12014  0053A4                     i17Lu12431:
 12015                           	opt stack 0
 12016  0053A4  D001               	goto	i17Ll8513
 12017  0053A6                     i17Lu12430:
 12018                           	opt stack 0
 12019  0053A6                     i17Ll8511:
 12020                           	opt stack 18
 12021                           
 12022                           ; BSR set to: 14
 12023  0053A6  6817               	setf	PHY_WaitForBusy@ret,c
 12024  0053A8                     i17Ll8513:
 12025                           	opt stack 18
 12026                           
 12027                           ; BSR set to: 14
 12028                           ;j60_driver.c: 308: return ret;
 12029  0053A8  5017               	movf	PHY_WaitForBusy@ret,w,c
 12030  0053AA                     i17Ll512:
 12031                           	opt stack 18
 12032  0053AA  0AFF               	xorlw	-1
 12033  0053AC  E105               	bnz	l519
 12034                           
 12035                           ; BSR set to: 14
 12036                           ;j60_driver.c: 360: {
 12037                           ;j60_driver.c: 361: ret = READ_FAIL;
 12038  0053AE  0EFD               	movlw	253
 12039  0053B0  6E1E               	movwf	PHY_Read@ret,c
 12040  0053B2  0EFF               	movlw	255
 12041  0053B4  D814               	call	PL749	;call to abstracted procedure
 12042                           
 12043                           ;j60_driver.c: 362: }
 12044  0053B6  D00A               	goto	l521
 12045  0053B8                     l519:
 12046                           
 12047                           ; BSR set to: 14
 12048                           ;j60_driver.c: 363: else
 12049                           ;j60_driver.c: 364: {
 12050                           ;j60_driver.c: 365: MICMDbits.MIIRD = 0;
 12051  0053B8  91B2               	bcf	178,0,b	;volatile
 12052                           
 12053                           ; BSR set to: 14
 12054                           ;j60_driver.c: 366: ret = MIRD;
 12055  0053BA  CEB8 F01E          	movff	3768,PHY_Read@ret	;volatile
 12056  0053BE  CEB9 F01F          	movff	3769,PHY_Read@ret+1	;volatile
 12057  0053C2  6A20               	clrf	PHY_Read@ret+2,c
 12058  0053C4  6A21               	clrf	PHY_Read@ret+3,c
 12059  0053C6  D002               	goto	l521
 12060  0053C8                     l518:
 12061                           
 12062                           ; BSR set to: 14
 12063                           ;j60_driver.c: 369: else
 12064                           ;j60_driver.c: 370: {
 12065                           ;j60_driver.c: 371: ret = BUSY_TIMEOUT;
 12066  0053C8  681E               	setf	PHY_Read@ret,c
 12067  0053CA  D809               	call	PL749	;call to abstracted procedure
 12068  0053CC                     l521:
 12069                           
 12070                           ; BSR set to: 14
 12071                           ;j60_driver.c: 372: }
 12072                           ;j60_driver.c: 373: return ret;
 12073  0053CC  C01E  F019         	movff	PHY_Read@ret,?_PHY_Read
 12074  0053D0  C01F  F01A         	movff	PHY_Read@ret+1,?_PHY_Read+1
 12075  0053D4  C020  F01B         	movff	PHY_Read@ret+2,?_PHY_Read+2
 12076  0053D8  C021  F01C         	movff	PHY_Read@ret+3,?_PHY_Read+3
 12077                           
 12078                           ; BSR set to: 14
 12079  0053DC  0012               	return		;funcret
 12080  0053DE                     __end_of_PHY_Read:
 12081                           	opt stack 0
 12082  0053DE                     PL749:
 12083                           	opt stack 18
 12084  0053DE  681F               	setf	PHY_Read@ret+1,c
 12085  0053E0  6820               	setf	PHY_Read@ret+2,c
 12086  0053E2  6821               	setf	PHY_Read@ret+3,c
 12087  0053E4  0012               	return	
 12088  0053E6                     __end_ofPL749:
 12089                           	opt stack 0
 12090                           tosu	equ	0xFFF
 12091                           tosh	equ	0xFFE
 12092                           tosl	equ	0xFFD
 12093                           pclath	equ	0xFFA
 12094                           tblptru	equ	0xFF8
 12095                           tblptrh	equ	0xFF7
 12096                           tblptrl	equ	0xFF6
 12097                           tablat	equ	0xFF5
 12098                           prodh	equ	0xFF4
 12099                           prodl	equ	0xFF3
 12100                           intcon	equ	0xFF2
 12101                           indf0	equ	0xFEF
 12102                           postinc0	equ	0xFEE
 12103                           fsr0h	equ	0xFEA
 12104                           fsr0l	equ	0xFE9
 12105                           wreg	equ	0xFE8
 12106                           postinc1	equ	0xFE6
 12107                           postdec1	equ	0xFE5
 12108                           plusw1	equ	0xFE3
 12109                           fsr1h	equ	0xFE2
 12110                           fsr1l	equ	0xFE1
 12111                           bsr	equ	0xFE0
 12112                           indf2	equ	0xFDF
 12113                           postinc2	equ	0xFDE
 12114                           postdec2	equ	0xFDD
 12115                           plusw2	equ	0xFDB
 12116                           fsr2h	equ	0xFDA
 12117                           fsr2l	equ	0xFD9
 12118                           status	equ	0xFD8
 12119                           
 12120 ;; *************** function _PHY_WaitForBusy *****************
 12121 ;; Defined at:
 12122 ;;		line 298 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 12123 ;; Parameters:    Size  Location     Type
 12124 ;;		None
 12125 ;; Auto vars:     Size  Location     Type
 12126 ;;  timeout         1   23[COMRAM] unsigned char 
 12127 ;;  ret             1   22[COMRAM] enum E7107
 12128 ;; Return value:  Size  Location     Type
 12129 ;;                  1    wreg      enum E7107
 12130 ;; Registers used:
 12131 ;;		wreg, status,2, status,0
 12132 ;; Tracked objects:
 12133 ;;		On entry : 0/E
 12134 ;;		On exit  : F/E
 12135 ;;		Unchanged: 0/0
 12136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12138 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12140 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12141 ;;Total ram usage:        2 bytes
 12142 ;; Hardware stack levels used:    1
 12143 ;; Hardware stack levels required when called:    8
 12144 ;; This function calls:
 12145 ;;		Nothing
 12146 ;; This function is called by:
 12147 ;;		_PHY_Write
 12148 ;;		_PHY_Read
 12149 ;; This function uses a non-reentrant model
 12150 ;;
 12151                           
 12152                           	psect	text53
 12153  000000                     __ptext53:
 12154                           	opt stack 0
 12155  000000                     _PHY_WaitForBusy:
 12156                           	opt stack 0
 12157  000000                     __end_of_PHY_WaitForBusy:
 12158                           	opt stack 0
 12159                           tosu	equ	0xFFF
 12160                           tosh	equ	0xFFE
 12161                           tosl	equ	0xFFD
 12162                           pclath	equ	0xFFA
 12163                           tblptru	equ	0xFF8
 12164                           tblptrh	equ	0xFF7
 12165                           tblptrl	equ	0xFF6
 12166                           tablat	equ	0xFF5
 12167                           prodh	equ	0xFF4
 12168                           prodl	equ	0xFF3
 12169                           intcon	equ	0xFF2
 12170                           indf0	equ	0xFEF
 12171                           postinc0	equ	0xFEE
 12172                           fsr0h	equ	0xFEA
 12173                           fsr0l	equ	0xFE9
 12174                           wreg	equ	0xFE8
 12175                           postinc1	equ	0xFE6
 12176                           postdec1	equ	0xFE5
 12177                           plusw1	equ	0xFE3
 12178                           fsr1h	equ	0xFE2
 12179                           fsr1l	equ	0xFE1
 12180                           bsr	equ	0xFE0
 12181                           indf2	equ	0xFDF
 12182                           postinc2	equ	0xFDE
 12183                           postdec2	equ	0xFDD
 12184                           plusw2	equ	0xFDB
 12185                           fsr2h	equ	0xFDA
 12186                           fsr2l	equ	0xFD9
 12187                           status	equ	0xFD8
 12188                           
 12189 ;; *************** function _ARPV4_Init *****************
 12190 ;; Defined at:
 12191 ;;		line 86 in file "../../TCPIP Library/source/arpv4.c"
 12192 ;; Parameters:    Size  Location     Type
 12193 ;;		None
 12194 ;; Auto vars:     Size  Location     Type
 12195 ;;  x               1   22[COMRAM] unsigned char 
 12196 ;; Return value:  Size  Location     Type
 12197 ;;		None               void
 12198 ;; Registers used:
 12199 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12200 ;; Tracked objects:
 12201 ;;		On entry : F/E
 12202 ;;		On exit  : F/E
 12203 ;;		Unchanged: F/0
 12204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12206 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12208 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12209 ;;Total ram usage:        1 bytes
 12210 ;; Hardware stack levels used:    1
 12211 ;; Hardware stack levels required when called:    8
 12212 ;; This function calls:
 12213 ;;		Nothing
 12214 ;; This function is called by:
 12215 ;;		_Network_Init
 12216 ;; This function uses a non-reentrant model
 12217 ;;
 12218                           
 12219                           	psect	text54
 12220  006616                     __ptext54:
 12221                           	opt stack 0
 12222  006616                     _ARPV4_Init:
 12223                           	opt stack 21
 12224                           
 12225                           ; BSR set to: 14
 12226                           ;arpv4.c: 88: for(uint8_t x= 0 ; x < sizeof(arpMap); x++)
 12227                           
 12228                           ; BSR set to: 14
 12229                           ;incstack = 0
 12230  006616  6A17               	clrf	ARPV4_Init@x,c
 12231  006618                     l9855:
 12232                           
 12233                           ; BSR set to: 14
 12234                           ;arpv4.c: 89: ((char *)arpMap)[x] = 0;
 12235  006618  0E00               	movlw	low _arpMap
 12236  00661A  2417               	addwf	ARPV4_Init@x,w,c
 12237  00661C  6ED9               	movwf	fsr2l,c
 12238  00661E  6ADA               	clrf	fsr2h,c
 12239  006620  0E03               	movlw	high _arpMap
 12240  006622  22DA               	addwfc	fsr2h,f,c
 12241  006624  6ADF               	clrf	indf2,c
 12242                           
 12243                           ; BSR set to: 14
 12244  006626  2A17               	incf	ARPV4_Init@x,f,c
 12245                           
 12246                           ; BSR set to: 14
 12247  006628  0E67               	movlw	103
 12248  00662A  6417               	cpfsgt	ARPV4_Init@x,c
 12249  00662C  D7F5               	goto	l9855
 12250  00662E  0C67               	retlw	103
 12251  006630                     __end_of_ARPV4_Init:
 12252                           	opt stack 0
 12253                           tosu	equ	0xFFF
 12254                           tosh	equ	0xFFE
 12255                           tosl	equ	0xFFD
 12256                           pclath	equ	0xFFA
 12257                           tblptru	equ	0xFF8
 12258                           tblptrh	equ	0xFF7
 12259                           tblptrl	equ	0xFF6
 12260                           tablat	equ	0xFF5
 12261                           prodh	equ	0xFF4
 12262                           prodl	equ	0xFF3
 12263                           intcon	equ	0xFF2
 12264                           indf0	equ	0xFEF
 12265                           postinc0	equ	0xFEE
 12266                           fsr0h	equ	0xFEA
 12267                           fsr0l	equ	0xFE9
 12268                           wreg	equ	0xFE8
 12269                           postinc1	equ	0xFE6
 12270                           postdec1	equ	0xFE5
 12271                           plusw1	equ	0xFE3
 12272                           fsr1h	equ	0xFE2
 12273                           fsr1l	equ	0xFE1
 12274                           bsr	equ	0xFE0
 12275                           indf2	equ	0xFDF
 12276                           postinc2	equ	0xFDE
 12277                           postdec2	equ	0xFDD
 12278                           plusw2	equ	0xFDB
 12279                           fsr2h	equ	0xFDA
 12280                           fsr2l	equ	0xFD9
 12281                           status	equ	0xFD8
 12282                           
 12283 ;; *************** function _IPV4_GetMyIP *****************
 12284 ;; Defined at:
 12285 ;;		line 288 in file "../../TCPIP Library/source/ipv4.c"
 12286 ;; Parameters:    Size  Location     Type
 12287 ;;		None
 12288 ;; Auto vars:     Size  Location     Type
 12289 ;;		None
 12290 ;; Return value:  Size  Location     Type
 12291 ;;                  4   22[COMRAM] unsigned long 
 12292 ;; Registers used:
 12293 ;;		None
 12294 ;; Tracked objects:
 12295 ;;		On entry : F/1
 12296 ;;		On exit  : F/1
 12297 ;;		Unchanged: F/0
 12298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12299 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12302 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12303 ;;Total ram usage:        4 bytes
 12304 ;; Hardware stack levels used:    1
 12305 ;; Hardware stack levels required when called:    8
 12306 ;; This function calls:
 12307 ;;		Nothing
 12308 ;; This function is called by:
 12309 ;;		_main
 12310 ;; This function uses a non-reentrant model
 12311 ;;
 12312                           
 12313                           	psect	text55
 12314  0066A8                     __ptext55:
 12315                           	opt stack 0
 12316  0066A8                     _IPV4_GetMyIP:
 12317                           	opt stack 22
 12318                           
 12319                           ; BSR set to: 1
 12320                           ;ipv4.c: 290: return(ipv4Address);
 12321                           
 12322                           ; BSR set to: 14
 12323                           ;incstack = 0
 12324  0066A8  C038  F017         	movff	_ipv4Address,?_IPV4_GetMyIP
 12325  0066AC  C039  F018         	movff	_ipv4Address+1,?_IPV4_GetMyIP+1
 12326  0066B0  C03A  F019         	movff	_ipv4Address+2,?_IPV4_GetMyIP+2
 12327  0066B4  C03B  F01A         	movff	_ipv4Address+3,?_IPV4_GetMyIP+3
 12328                           
 12329                           ; BSR set to: 1
 12330  0066B8  0012               	return		;funcret
 12331  0066BA                     __end_of_IPV4_GetMyIP:
 12332                           	opt stack 0
 12333                           tosu	equ	0xFFF
 12334                           tosh	equ	0xFFE
 12335                           tosl	equ	0xFFD
 12336                           pclath	equ	0xFFA
 12337                           tblptru	equ	0xFF8
 12338                           tblptrh	equ	0xFF7
 12339                           tblptrl	equ	0xFF6
 12340                           tablat	equ	0xFF5
 12341                           prodh	equ	0xFF4
 12342                           prodl	equ	0xFF3
 12343                           intcon	equ	0xFF2
 12344                           indf0	equ	0xFEF
 12345                           postinc0	equ	0xFEE
 12346                           fsr0h	equ	0xFEA
 12347                           fsr0l	equ	0xFE9
 12348                           wreg	equ	0xFE8
 12349                           postinc1	equ	0xFE6
 12350                           postdec1	equ	0xFE5
 12351                           plusw1	equ	0xFE3
 12352                           fsr1h	equ	0xFE2
 12353                           fsr1l	equ	0xFE1
 12354                           bsr	equ	0xFE0
 12355                           indf2	equ	0xFDF
 12356                           postinc2	equ	0xFDE
 12357                           postdec2	equ	0xFDD
 12358                           plusw2	equ	0xFDB
 12359                           fsr2h	equ	0xFDA
 12360                           fsr2l	equ	0xFD9
 12361                           status	equ	0xFD8
 12362                           
 12363 ;; *************** function _DEMO_TCP_Client *****************
 12364 ;; Defined at:
 12365 ;;		line 81 in file "main.c"
 12366 ;; Parameters:    Size  Location     Type
 12367 ;;		None
 12368 ;; Auto vars:     Size  Location     Type
 12369 ;;  strTmp         17   33[BANK1 ] unsigned char [17]
 12370 ;;  rx_len          2   30[BANK1 ] unsigned int 
 12371 ;;  pot             2   27[BANK1 ] unsigned int 
 12372 ;;  temperature     2   25[BANK1 ] unsigned int 
 12373 ;;  ledNr           1   32[BANK1 ] unsigned char 
 12374 ;;  socketState     1   29[BANK1 ] enum E7369
 12375 ;; Return value:  Size  Location     Type
 12376 ;;		None               void
 12377 ;; Registers used:
 12378 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 12379 ;; Tracked objects:
 12380 ;;		On entry : F/2
 12381 ;;		On exit  : 0/0
 12382 ;;		Unchanged: 0/0
 12383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12385 ;;      Locals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12386 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12387 ;;      Totals:         0       0      27       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12388 ;;Total ram usage:       27 bytes
 12389 ;; Hardware stack levels used:    1
 12390 ;; Hardware stack levels required when called:   16
 12391 ;; This function calls:
 12392 ;;		_ADC_GetConversion
 12393 ;;		_TCP_Connect
 12394 ;;		_TCP_GetReceivedData
 12395 ;;		_TCP_InsertRxBuffer
 12396 ;;		_TCP_Send
 12397 ;;		_TCP_SendDone
 12398 ;;		_TCP_SocketInit
 12399 ;;		_TCP_SocketPoll
 12400 ;;		_lcd_goto2
 12401 ;;		_lcd_puts
 12402 ;;		_memset
 12403 ;;		_sprintf
 12404 ;;		_strlen
 12405 ;;		_time
 12406 ;; This function is called by:
 12407 ;;		_main
 12408 ;; This function uses a non-reentrant model
 12409 ;;
 12410                           
 12411                           	psect	text56
 12412  003B50                     __ptext56:
 12413                           	opt stack 0
 12414  003B50                     _DEMO_TCP_Client:
 12415                           	opt stack 14
 12416                           
 12417                           ; BSR set to: 2
 12418                           ;main.c: 95: uint16_t temperature, pot;
 12419                           ;main.c: 96: char strTmp[17];
 12420                           ;main.c: 97: uint8_t ledNr;
 12421                           ;main.c: 99: socketState = TCP_SocketPoll(&port60TCB);
 12422                           
 12423                           ; BSR set to: 2
 12424                           
 12425                           ; BSR set to: 1
 12426                           ;incstack = 0
 12427  003B50  0E30               	movlw	low DEMO_TCP_Client@port60TCB
 12428  003B52  6E1F               	movwf	TCP_SocketPoll@socket_ptr,c
 12429  003B54  0E02               	movlw	high DEMO_TCP_Client@port60TCB
 12430  003B56  6E20               	movwf	TCP_SocketPoll@socket_ptr+1,c
 12431  003B58  EC6E  F032         	call	_TCP_SocketPoll	;wreg free
 12432  003B5C  0101               	movlb	1	; () banked
 12433  003B5E  6F1D               	movwf	DEMO_TCP_Client@socketState& (0+255),b
 12434                           
 12435                           ; BSR set to: 1
 12436                           ;main.c: 101: time(&t_client);
 12437  003B60  0EE5               	movlw	low DEMO_TCP_Client@t_client
 12438  003B62  6E17               	movwf	time@t,c
 12439  003B64  0E01               	movlw	high DEMO_TCP_Client@t_client
 12440  003B66  6E18               	movwf	time@t+1,c
 12441  003B68  EC52  F02E         	call	_time	;wreg free
 12442                           
 12443                           ;main.c: 103: switch(socketState)
 12444  003B6C  D0DE               	goto	l10297
 12445  003B6E                     l10221:
 12446                           
 12447                           ; BSR set to: 1
 12448                           ;main.c: 107: TCP_SocketInit(&port60TCB);
 12449  003B6E  0E30               	movlw	low DEMO_TCP_Client@port60TCB
 12450  003B70  6E1F               	movwf	TCP_SocketInit@tcbPtr,c
 12451  003B72  0E02               	movlw	high DEMO_TCP_Client@port60TCB
 12452  003B74  6E20               	movwf	TCP_SocketInit@tcbPtr+1,c
 12453  003B76  EF7F  F02B         	goto	_TCP_SocketInit	;wreg free
 12454  003B7A                     l10223:
 12455                           
 12456                           ; BSR set to: 1
 12457                           ;main.c: 111: if(t_client >= t_clientOld)
 12458  003B7A  0102               	movlb	2	; () banked
 12459  003B7C  5118               	movf	DEMO_TCP_Client@t_clientOld& (0+255),w,b
 12460  003B7E  0101               	movlb	1	; () banked
 12461  003B80  5DE5               	subwf	DEMO_TCP_Client@t_client& (0+255),w,b
 12462  003B82  0102               	movlb	2	; () banked
 12463  003B84  5119               	movf	(DEMO_TCP_Client@t_clientOld+1)& (0+255),w,b
 12464  003B86  0101               	movlb	1	; () banked
 12465  003B88  59E6               	subwfb	(DEMO_TCP_Client@t_client+1)& (0+255),w,b
 12466  003B8A  D8FB               	call	PL567	;call to abstracted procedure
 12467  003B8C  A0D8               	btfss	status,0,c
 12468  003B8E  0012               	return	
 12469                           
 12470                           ; BSR set to: 1
 12471                           ;main.c: 112: {
 12472                           ;main.c: 114: t_clientOld = t_client + 2;
 12473  003B90  D8D7               	call	PL493	;call to abstracted procedure
 12474                           
 12475                           ; BSR set to: 2
 12476                           ;main.c: 115: TCP_InsertRxBuffer(&port60TCB, rxdataPort60, sizeof(rxdataPort60));
 12477  003B92  D904               	call	PL573	;call to abstracted procedure
 12478  003B94  EC1B  F02D         	call	_TCP_InsertRxBuffer	;wreg free
 12479                           
 12480                           ;main.c: 116: TCP_Connect(&port60TCB, &remoteSocket);
 12481  003B98  0E30               	movlw	low DEMO_TCP_Client@port60TCB
 12482  003B9A  0101               	movlb	1	; () banked
 12483  003B9C  6F11               	movwf	TCP_Connect@tcbPtr& (0+255),b
 12484  003B9E  0E02               	movlw	high DEMO_TCP_Client@port60TCB
 12485  003BA0  6F12               	movwf	(TCP_Connect@tcbPtr+1)& (0+255),b
 12486  003BA2  0EB5               	movlw	low _remoteSocket
 12487  003BA4  6F13               	movwf	TCP_Connect@srvaddr& (0+255),b
 12488  003BA6  0E02               	movlw	high _remoteSocket
 12489  003BA8  6F14               	movwf	(TCP_Connect@srvaddr+1)& (0+255),b
 12490  003BAA  EFEF  F028         	goto	_TCP_Connect	;wreg free
 12491  003BAE                     l10231:
 12492                           
 12493                           ; BSR set to: 1
 12494                           ;main.c: 122: if (TCP_SendDone(&port60TCB))
 12495  003BAE  0E30               	movlw	low DEMO_TCP_Client@port60TCB
 12496  003BB0  6E1F               	movwf	TCP_SendDone@tcbPtr,c
 12497  003BB2  0E02               	movlw	high DEMO_TCP_Client@port60TCB
 12498  003BB4  6E20               	movwf	TCP_SendDone@tcbPtr+1,c
 12499  003BB6  ECF8  F031         	call	_TCP_SendDone	;wreg free
 12500  003BBA  0900               	iorlw	0
 12501  003BBC  B4D8               	btfsc	status,2,c
 12502  003BBE  0012               	return	
 12503                           
 12504                           ;main.c: 123: {
 12505                           ;main.c: 124: rx_len = TCP_GetReceivedData(&port60TCB);
 12506  003BC0  0E30               	movlw	low DEMO_TCP_Client@port60TCB
 12507  003BC2  6E1F               	movwf	TCP_GetReceivedData@tcbPtr,c
 12508  003BC4  0E02               	movlw	high DEMO_TCP_Client@port60TCB
 12509  003BC6  6E20               	movwf	TCP_GetReceivedData@tcbPtr+1,c
 12510  003BC8  EC56  F02D         	call	_TCP_GetReceivedData	;wreg free
 12511  003BCC  C01F  F11E         	movff	?_TCP_GetReceivedData,DEMO_TCP_Client@rx_len
 12512  003BD0  C020  F11F         	movff	?_TCP_GetReceivedData+1,DEMO_TCP_Client@rx_len+1
 12513                           
 12514                           ;main.c: 126: if(rx_len > 0)
 12515  003BD4  0101               	movlb	1	; () banked
 12516  003BD6  511E               	movf	DEMO_TCP_Client@rx_len& (0+255),w,b
 12517  003BD8  111F               	iorwf	(DEMO_TCP_Client@rx_len+1)& (0+255),w,b
 12518  003BDA  E062               	bz	l10283
 12519                           
 12520                           ; BSR set to: 1
 12521                           ;main.c: 127: {
 12522                           ;main.c: 129: if (rx_len > 16) {
 12523  003BDC  511F               	movf	(DEMO_TCP_Client@rx_len+1)& (0+255),w,b
 12524  003BDE  E103               	bnz	u16310
 12525  003BE0  0E11               	movlw	17
 12526  003BE2  5D1E               	subwf	DEMO_TCP_Client@rx_len& (0+255),w,b
 12527  003BE4  E303               	bnc	l10241
 12528  003BE6                     u16310:
 12529                           
 12530                           ; BSR set to: 1
 12531                           ;main.c: 130: rxdataPort60[16] = 0;
 12532  003BE6  0102               	movlb	2	; () banked
 12533  003BE8  6B77               	clrf	(DEMO_TCP_Client@rxdataPort60+16)& (0+255),b
 12534                           
 12535                           ;main.c: 131: } else {
 12536  003BEA  D007               	goto	l10243
 12537  003BEC                     l10241:
 12538                           
 12539                           ; BSR set to: 1
 12540                           ;main.c: 132: rxdataPort60[rx_len] = 0;
 12541  003BEC  0E67               	movlw	low DEMO_TCP_Client@rxdataPort60
 12542  003BEE  251E               	addwf	DEMO_TCP_Client@rx_len& (0+255),w,b
 12543  003BF0  6ED9               	movwf	fsr2l,c
 12544  003BF2  0E02               	movlw	high DEMO_TCP_Client@rxdataPort60
 12545  003BF4  211F               	addwfc	(DEMO_TCP_Client@rx_len+1)& (0+255),w,b
 12546  003BF6  6EDA               	movwf	fsr2h,c
 12547  003BF8  6ADF               	clrf	indf2,c
 12548  003BFA                     l10243:
 12549                           
 12550                           ;main.c: 133: }
 12551                           ;main.c: 135: ledNr = rxdataPort60[4];
 12552  003BFA  C26B  F120         	movff	DEMO_TCP_Client@rxdataPort60+4,DEMO_TCP_Client@ledNr
 12553                           
 12554                           ;main.c: 136: if((ledNr >= '0') && (ledNr < '8')) {
 12555  003BFE  0E2F               	movlw	47
 12556  003C00  0101               	movlb	1	; () banked
 12557  003C02  6520               	cpfsgt	DEMO_TCP_Client@ledNr& (0+255),b
 12558  003C04  D005               	goto	l1581
 12559                           
 12560                           ; BSR set to: 1
 12561  003C06  0E38               	movlw	56
 12562  003C08  6120               	cpfslt	DEMO_TCP_Client@ledNr& (0+255),b
 12563  003C0A  D002               	goto	l1581
 12564                           
 12565                           ; BSR set to: 1
 12566                           ;main.c: 137: ledNr = ledNr - '0';
 12567  003C0C  0ED0               	movlw	208
 12568  003C0E  2720               	addwf	DEMO_TCP_Client@ledNr& (0+255),f,b
 12569  003C10                     l1581:
 12570                           
 12571                           ; BSR set to: 1
 12572                           ;main.c: 138: }
 12573                           ;main.c: 140: if(rxdataPort60[0] == 'l' && rxdataPort60[1] == 'e' && rxdataPort60[2] == 
      +                          'd') {
 12574  003C10  0E6C               	movlw	108
 12575  003C12  0102               	movlb	2	; () banked
 12576  003C14  1967               	xorwf	DEMO_TCP_Client@rxdataPort60& (0+255),w,b
 12577  003C16  E11D               	bnz	l10269
 12578                           
 12579                           ; BSR set to: 2
 12580  003C18  0E65               	movlw	101
 12581  003C1A  1968               	xorwf	(DEMO_TCP_Client@rxdataPort60+1)& (0+255),w,b
 12582  003C1C  E11A               	bnz	l10269
 12583                           
 12584                           ; BSR set to: 2
 12585  003C1E  0E64               	movlw	100
 12586  003C20  1969               	xorwf	(DEMO_TCP_Client@rxdataPort60+2)& (0+255),w,b
 12587  003C22  E117               	bnz	l10269
 12588                           
 12589                           ; BSR set to: 2
 12590                           ;main.c: 141: if(rxdataPort60[6] == 'o' && rxdataPort60[7] == 'n') {
 12591  003C24  0E6F               	movlw	111
 12592  003C26  196D               	xorwf	(DEMO_TCP_Client@rxdataPort60+6)& (0+255),w,b
 12593  003C28  E107               	bnz	l10261
 12594                           
 12595                           ; BSR set to: 2
 12596  003C2A  0E6E               	movlw	110
 12597  003C2C  196E               	xorwf	(DEMO_TCP_Client@rxdataPort60+7)& (0+255),w,b
 12598  003C2E  E104               	bnz	l10261
 12599                           
 12600                           ; BSR set to: 2
 12601                           ;main.c: 142: PORTJ = PORTJ | (1 << ledNr);
 12602  003C30  D89B               	call	PL551	;call to abstracted procedure
 12603  003C32  5118               	movf	(??_DEMO_TCP_Client+1)& (0+255),w,b
 12604  003C34  1288               	iorwf	3976,f,c	;volatile
 12605                           
 12606                           ;main.c: 143: }else {
 12607  003C36  D031               	goto	l10281
 12608  003C38                     l10261:
 12609                           
 12610                           ; BSR set to: 2
 12611                           ;main.c: 144: if(rxdataPort60[6] == 'o' && rxdataPort60[7] == 'f' && rxdataPort60[8] == 
      +                          'f') {
 12612  003C38  0E6F               	movlw	111
 12613  003C3A  196D               	xorwf	(DEMO_TCP_Client@rxdataPort60+6)& (0+255),w,b
 12614  003C3C  E12E               	bnz	l10281
 12615                           
 12616                           ; BSR set to: 2
 12617  003C3E  0E66               	movlw	102
 12618  003C40  196E               	xorwf	(DEMO_TCP_Client@rxdataPort60+7)& (0+255),w,b
 12619  003C42  E12B               	bnz	l10281
 12620                           
 12621                           ; BSR set to: 2
 12622  003C44  0E66               	movlw	102
 12623  003C46  196F               	xorwf	(DEMO_TCP_Client@rxdataPort60+8)& (0+255),w,b
 12624  003C48  E128               	bnz	l10281
 12625                           
 12626                           ; BSR set to: 2
 12627                           ;main.c: 145: PORTJ = PORTJ & (~(1 << ledNr));
 12628  003C4A  D88E               	call	PL551	;call to abstracted procedure
 12629  003C4C  1D18               	comf	(??_DEMO_TCP_Client+1)& (0+255),w,b
 12630  003C4E  1688               	andwf	3976,f,c	;volatile
 12631  003C50  D024               	goto	l10281
 12632  003C52                     l10269:
 12633                           
 12634                           ; BSR set to: 2
 12635                           ;main.c: 150: memset(strTmp,' ',sizeof(strTmp));
 12636  003C52  0E21               	movlw	low DEMO_TCP_Client@strTmp
 12637  003C54  6E17               	movwf	memset@p1,c
 12638  003C56  0E01               	movlw	high DEMO_TCP_Client@strTmp
 12639  003C58  6E18               	movwf	memset@p1+1,c
 12640  003C5A  6A1A               	clrf	memset@c+1,c
 12641  003C5C  0E20               	movlw	32
 12642  003C5E  6E19               	movwf	memset@c,c
 12643  003C60  6A1C               	clrf	memset@n+1,c
 12644  003C62  0E11               	movlw	17
 12645  003C64  6E1B               	movwf	memset@n,c
 12646  003C66  ECE3  F031         	call	_memset	;wreg free
 12647                           
 12648                           ; BSR set to: 2
 12649                           ;main.c: 151: lcd_goto2(0);
 12650  003C6A  0E00               	movlw	0
 12651  003C6C  EC6B  F033         	call	_lcd_goto2
 12652                           
 12653                           ;main.c: 152: lcd_puts(strTmp);
 12654  003C70  D8A1               	call	PL737	;call to abstracted procedure
 12655  003C72  ECD2  F032         	call	_lcd_puts	;wreg free
 12656                           
 12657                           ;main.c: 153: sprintf(strTmp,"%s",rxdataPort60);
 12658  003C76  0E21               	movlw	low DEMO_TCP_Client@strTmp
 12659  003C78  6E29               	movwf	sprintf@wh,c
 12660  003C7A  0E01               	movlw	high DEMO_TCP_Client@strTmp
 12661  003C7C  6E2A               	movwf	sprintf@wh+1,c
 12662  003C7E  0EF5               	movlw	low STR_5
 12663  003C80  6E2B               	movwf	sprintf@f,c
 12664  003C82  0E67               	movlw	low DEMO_TCP_Client@rxdataPort60
 12665  003C84  6E2C               	movwf	?_sprintf+3,c
 12666  003C86  0E02               	movlw	high DEMO_TCP_Client@rxdataPort60
 12667  003C88  6E2D               	movwf	?_sprintf+4,c
 12668  003C8A  EC74  F031         	call	_sprintf	;wreg free
 12669                           
 12670                           ; BSR set to: 0
 12671                           ;main.c: 154: lcd_goto2(0);
 12672  003C8E  0E00               	movlw	0
 12673  003C90  EC6B  F033         	call	_lcd_goto2
 12674                           
 12675                           ;main.c: 155: lcd_puts(strTmp);
 12676  003C94  D88F               	call	PL737	;call to abstracted procedure
 12677  003C96  ECD2  F032         	call	_lcd_puts	;wreg free
 12678  003C9A                     l10281:
 12679                           
 12680                           ;main.c: 156: }
 12681                           ;main.c: 159: TCP_InsertRxBuffer(&port60TCB, rxdataPort60, sizeof(rxdataPort60));
 12682  003C9A  D880               	call	PL573	;call to abstracted procedure
 12683  003C9C  EC1B  F02D         	call	_TCP_InsertRxBuffer	;wreg free
 12684  003CA0                     l10283:
 12685                           
 12686                           ;main.c: 160: }
 12687                           ;main.c: 162: if(t_client >= t_clientOld)
 12688  003CA0  0102               	movlb	2	; () banked
 12689  003CA2  5118               	movf	DEMO_TCP_Client@t_clientOld& (0+255),w,b
 12690  003CA4  0101               	movlb	1	; () banked
 12691  003CA6  5DE5               	subwf	DEMO_TCP_Client@t_client& (0+255),w,b
 12692  003CA8  0102               	movlb	2	; () banked
 12693  003CAA  5119               	movf	(DEMO_TCP_Client@t_clientOld+1)& (0+255),w,b
 12694  003CAC  0101               	movlb	1	; () banked
 12695  003CAE  59E6               	subwfb	(DEMO_TCP_Client@t_client+1)& (0+255),w,b
 12696  003CB0  D868               	call	PL567	;call to abstracted procedure
 12697  003CB2  A0D8               	btfss	status,0,c
 12698  003CB4  0012               	return	
 12699                           
 12700                           ; BSR set to: 1
 12701                           ;main.c: 163: {
 12702                           ;main.c: 165: t_clientOld = t_client + 2;
 12703  003CB6  D844               	call	PL493	;call to abstracted procedure
 12704                           
 12705                           ; BSR set to: 2
 12706                           ;main.c: 166: temperature = ADC_GetConversion(channel_AN3);
 12707  003CB8  0E03               	movlw	3
 12708  003CBA  EC8B  F031         	call	_ADC_GetConversion
 12709  003CBE  C017  F119         	movff	?_ADC_GetConversion,DEMO_TCP_Client@temperature
 12710  003CC2  C018  F11A         	movff	?_ADC_GetConversion+1,DEMO_TCP_Client@temperature+1
 12711                           
 12712                           ;main.c: 167: pot = ADC_GetConversion(channel_AN2);
 12713  003CC6  0E02               	movlw	2
 12714  003CC8  EC8B  F031         	call	_ADC_GetConversion
 12715  003CCC  C017  F11B         	movff	?_ADC_GetConversion,DEMO_TCP_Client@pot
 12716  003CD0  C018  F11C         	movff	?_ADC_GetConversion+1,DEMO_TCP_Client@pot+1
 12717                           
 12718                           ;main.c: 168: sprintf(txdataPort60,"Temperature: 0x%3x; LED: 0x%1x; Buttons: 0x%1x; Pot:
      +                           0x%3x \n", temperature, PORTJ, (PORTB & 0x0F), pot);
 12719  003CD4  0E68               	movlw	low DEMO_TCP_Client@txdataPort60
 12720  003CD6  6E29               	movwf	sprintf@wh,c
 12721  003CD8  0E03               	movlw	high DEMO_TCP_Client@txdataPort60
 12722  003CDA  6E2A               	movwf	sprintf@wh+1,c
 12723  003CDC  0E39               	movlw	low STR_6
 12724  003CDE  6E2B               	movwf	sprintf@f,c
 12725  003CE0  C119  F02C         	movff	DEMO_TCP_Client@temperature,?_sprintf+3
 12726  003CE4  C11A  F02D         	movff	DEMO_TCP_Client@temperature+1,?_sprintf+4
 12727  003CE8  CF88 F02E          	movff	3976,?_sprintf+5	;volatile
 12728  003CEC  6A2F               	clrf	?_sprintf+6,c
 12729  003CEE  5081               	movf	3969,w,c	;volatile
 12730  003CF0  0B0F               	andlw	15
 12731  003CF2  6E30               	movwf	?_sprintf+7,c
 12732  003CF4  6A31               	clrf	?_sprintf+8,c
 12733  003CF6  C11B  F032         	movff	DEMO_TCP_Client@pot,?_sprintf+9
 12734  003CFA  C11C  F033         	movff	DEMO_TCP_Client@pot+1,?_sprintf+10
 12735  003CFE  EC74  F031         	call	_sprintf	;wreg free
 12736                           
 12737                           ; BSR set to: 0
 12738                           ;main.c: 170: TCP_Send(&port60TCB, txdataPort60, strlen(txdataPort60));
 12739  003D02  0E30               	movlw	low DEMO_TCP_Client@port60TCB
 12740  003D04  6FEE               	movwf	TCP_Send@tcbPtr& (0+255),b
 12741  003D06  0E02               	movlw	high DEMO_TCP_Client@port60TCB
 12742  003D08  6FEF               	movwf	(TCP_Send@tcbPtr+1)& (0+255),b
 12743  003D0A  0E68               	movlw	low DEMO_TCP_Client@txdataPort60
 12744  003D0C  6FF0               	movwf	TCP_Send@data& (0+255),b
 12745  003D0E  0E03               	movlw	high DEMO_TCP_Client@txdataPort60
 12746  003D10  6FF1               	movwf	(TCP_Send@data+1)& (0+255),b
 12747  003D12  0E68               	movlw	low DEMO_TCP_Client@txdataPort60
 12748  003D14  6E17               	movwf	strlen@s,c
 12749  003D16  0E03               	movlw	high DEMO_TCP_Client@txdataPort60
 12750  003D18  6E18               	movwf	strlen@s+1,c
 12751  003D1A  EC0D  F032         	call	_strlen	;wreg free
 12752  003D1E  C017  F0F2         	movff	?_strlen,TCP_Send@dataLen
 12753  003D22  C018  F0F3         	movff	?_strlen+1,TCP_Send@dataLen+1
 12754  003D26  EF33  F02B         	goto	_TCP_Send	;wreg free
 12755  003D2A                     l10297:
 12756  003D2A  0101               	movlb	1	; () banked
 12757  003D2C  511D               	movf	DEMO_TCP_Client@socketState& (0+255),w,b
 12758                           
 12759                           ; Switch size 1, requested type "space"
 12760                           ; Number of cases is 3, Range of values is 0 to 3
 12761                           ; switch strategies available:
 12762                           ; Name         Instructions Cycles
 12763                           ; simple_byte           10     6 (average)
 12764                           ;	Chosen strategy is simple_byte
 12765  003D2E  E101 D71E          	bz	l10221
 12766  003D32  0A01               	xorlw	1	; case 1
 12767  003D34  E101 D721          	bz	l10223
 12768  003D38  0A02               	xorlw	2	; case 3
 12769  003D3A  E101 D738          	bz	l10231
 12770  003D3E  0012               	return		;funcret
 12771  003D40                     __end_of_DEMO_TCP_Client:
 12772                           	opt stack 0
 12773  003D40                     PL493:
 12774                           	opt stack 14
 12775  003D40  0E02               	movlw	2
 12776  003D42  25E5               	addwf	DEMO_TCP_Client@t_client& (0+255),w,b
 12777  003D44  0102               	movlb	2	; () banked
 12778  003D46  6F18               	movwf	DEMO_TCP_Client@t_clientOld& (0+255),b
 12779  003D48  0E00               	movlw	0
 12780  003D4A  0101               	movlb	1	; () banked
 12781  003D4C  21E6               	addwfc	(DEMO_TCP_Client@t_client+1)& (0+255),w,b
 12782  003D4E  0102               	movlb	2	; () banked
 12783  003D50  6F19               	movwf	(DEMO_TCP_Client@t_clientOld+1)& (0+255),b
 12784  003D52  0E00               	movlw	0
 12785  003D54  0101               	movlb	1	; () banked
 12786  003D56  21E7               	addwfc	(DEMO_TCP_Client@t_client+2)& (0+255),w,b
 12787  003D58  0102               	movlb	2	; () banked
 12788  003D5A  6F1A               	movwf	(DEMO_TCP_Client@t_clientOld+2)& (0+255),b
 12789  003D5C  0E00               	movlw	0
 12790  003D5E  0101               	movlb	1	; () banked
 12791  003D60  21E8               	addwfc	(DEMO_TCP_Client@t_client+3)& (0+255),w,b
 12792  003D62  0102               	movlb	2	; () banked
 12793  003D64  6F1B               	movwf	(DEMO_TCP_Client@t_clientOld+3)& (0+255),b
 12794  003D66  0012               	return	
 12795  003D68                     __end_ofPL493:
 12796                           	opt stack 0
 12797  003D68                     PL551:
 12798                           	opt stack 14
 12799  003D68  C120  F117         	movff	DEMO_TCP_Client@ledNr,??_DEMO_TCP_Client
 12800  003D6C  0E01               	movlw	1
 12801  003D6E  0101               	movlb	1	; () banked
 12802  003D70  6F18               	movwf	(??_DEMO_TCP_Client+1)& (0+255),b
 12803  003D72  2B17               	incf	??_DEMO_TCP_Client& (0+255),f,b
 12804  003D74  D002               	goto	u16394
 12805  003D76                     u16395:
 12806  003D76  90D8               	bcf	status,0,c
 12807  003D78  3718               	rlcf	(??_DEMO_TCP_Client+1)& (0+255),f,b
 12808  003D7A                     u16394:
 12809  003D7A  2F17               	decfsz	??_DEMO_TCP_Client& (0+255),f,b
 12810  003D7C  D7FC               	goto	u16395
 12811  003D7E  0101               	movlb	1	; () banked
 12812  003D80  0012               	return	
 12813  003D82                     __end_ofPL551:
 12814                           	opt stack 0
 12815  003D82                     PL567:
 12816                           	opt stack 14
 12817  003D82  0102               	movlb	2	; () banked
 12818  003D84  511A               	movf	(DEMO_TCP_Client@t_clientOld+2)& (0+255),w,b
 12819  003D86  0101               	movlb	1	; () banked
 12820  003D88  59E7               	subwfb	(DEMO_TCP_Client@t_client+2)& (0+255),w,b
 12821  003D8A  51E8               	movf	(DEMO_TCP_Client@t_client+3)& (0+255),w,b
 12822  003D8C  0A80               	xorlw	128
 12823  003D8E  6F17               	movwf	??_DEMO_TCP_Client& (0+255),b
 12824  003D90  0102               	movlb	2	; () banked
 12825  003D92  511B               	movf	(DEMO_TCP_Client@t_clientOld+3)& (0+255),w,b
 12826  003D94  0A80               	xorlw	128
 12827  003D96  0101               	movlb	1	; () banked
 12828  003D98  5917               	subwfb	??_DEMO_TCP_Client& (0+255),w,b
 12829  003D9A  0012               	return	
 12830  003D9C                     __end_ofPL567:
 12831                           	opt stack 0
 12832  003D9C                     PL573:
 12833                           	opt stack 14
 12834  003D9C  0E30               	movlw	low DEMO_TCP_Client@port60TCB
 12835  003D9E  6E1F               	movwf	TCP_InsertRxBuffer@tcbPtr,c
 12836  003DA0  0E02               	movlw	high DEMO_TCP_Client@port60TCB
 12837  003DA2  6E20               	movwf	TCP_InsertRxBuffer@tcbPtr+1,c
 12838  003DA4  0E67               	movlw	low DEMO_TCP_Client@rxdataPort60
 12839  003DA6  6E21               	movwf	TCP_InsertRxBuffer@data,c
 12840  003DA8  0E02               	movlw	high DEMO_TCP_Client@rxdataPort60
 12841  003DAA  6E22               	movwf	TCP_InsertRxBuffer@data+1,c
 12842  003DAC  6A24               	clrf	TCP_InsertRxBuffer@data_len+1,c
 12843  003DAE  0E32               	movlw	50
 12844  003DB0  6E23               	movwf	TCP_InsertRxBuffer@data_len,c
 12845  003DB2  0C32               	retlw	50
 12846  003DB4                     __end_ofPL573:
 12847                           	opt stack 0
 12848  003DB4                     PL737:
 12849                           	opt stack 14
 12850  003DB4  0E21               	movlw	low DEMO_TCP_Client@strTmp
 12851  003DB6  6E19               	movwf	lcd_puts@s,c
 12852  003DB8  0E01               	movlw	high DEMO_TCP_Client@strTmp
 12853  003DBA  6E1A               	movwf	lcd_puts@s+1,c
 12854  003DBC  0012               	return	
 12855  003DBE                     __end_ofPL737:
 12856                           	opt stack 0
 12857                           tosu	equ	0xFFF
 12858                           tosh	equ	0xFFE
 12859                           tosl	equ	0xFFD
 12860                           pclath	equ	0xFFA
 12861                           tblptru	equ	0xFF8
 12862                           tblptrh	equ	0xFF7
 12863                           tblptrl	equ	0xFF6
 12864                           tablat	equ	0xFF5
 12865                           prodh	equ	0xFF4
 12866                           prodl	equ	0xFF3
 12867                           intcon	equ	0xFF2
 12868                           indf0	equ	0xFEF
 12869                           postinc0	equ	0xFEE
 12870                           fsr0h	equ	0xFEA
 12871                           fsr0l	equ	0xFE9
 12872                           wreg	equ	0xFE8
 12873                           postinc1	equ	0xFE6
 12874                           postdec1	equ	0xFE5
 12875                           plusw1	equ	0xFE3
 12876                           fsr1h	equ	0xFE2
 12877                           fsr1l	equ	0xFE1
 12878                           bsr	equ	0xFE0
 12879                           indf2	equ	0xFDF
 12880                           postinc2	equ	0xFDE
 12881                           postdec2	equ	0xFDD
 12882                           plusw2	equ	0xFDB
 12883                           fsr2h	equ	0xFDA
 12884                           fsr2l	equ	0xFD9
 12885                           status	equ	0xFD8
 12886                           
 12887 ;; *************** function _time *****************
 12888 ;; Defined at:
 12889 ;;		line 198 in file "../board_support_package/picdem2_net/rtcc.c"
 12890 ;; Parameters:    Size  Location     Type
 12891 ;;  t               2   22[COMRAM] PTR long 
 12892 ;;		 -> main@now_p(4), DEMO_TCP_Client@t_client(4), Network_Manage@now(4), arpTimer(4), 
 12893 ;;		 -> NULL(0), 
 12894 ;; Auto vars:     Size  Location     Type
 12895 ;;  the_time        4   27[COMRAM] long 
 12896 ;;  gie_val         1   26[COMRAM] unsigned char 
 12897 ;; Return value:  Size  Location     Type
 12898 ;;                  4   22[COMRAM] long 
 12899 ;; Registers used:
 12900 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12901 ;; Tracked objects:
 12902 ;;		On entry : 0/2
 12903 ;;		On exit  : 0/0
 12904 ;;		Unchanged: 0/0
 12905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12906 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12907 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12909 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12910 ;;Total ram usage:        9 bytes
 12911 ;; Hardware stack levels used:    1
 12912 ;; Hardware stack levels required when called:    8
 12913 ;; This function calls:
 12914 ;;		Nothing
 12915 ;; This function is called by:
 12916 ;;		_Network_Init
 12917 ;;		_Network_Manage
 12918 ;;		_SYSLOG_Init
 12919 ;;		_SYSLOG_Write
 12920 ;;		_DEMO_TCP_Client
 12921 ;;		_main
 12922 ;; This function uses a non-reentrant model
 12923 ;;
 12924                           
 12925                           	psect	text57
 12926  005CA4                     __ptext57:
 12927                           	opt stack 0
 12928  005CA4                     _time:
 12929                           	opt stack 22
 12930                           
 12931                           ;rtcc.c: 200: bool gie_val;
 12932                           ;rtcc.c: 201: time_t the_time;
 12933                           ;rtcc.c: 203: gie_val = GIE;
 12934                           
 12935                           ;incstack = 0
 12936  005CA4  0E00               	movlw	0
 12937  005CA6  BEF2               	btfsc	intcon,7,c	;volatile
 12938  005CA8  0E01               	movlw	1
 12939  005CAA  6E1B               	movwf	time@gie_val,c
 12940                           
 12941                           ;rtcc.c: 204: GIE = 0;
 12942  005CAC  9EF2               	bcf	intcon,7,c	;volatile
 12943                           
 12944                           ;rtcc.c: 205: the_time = deviceTime;
 12945  005CAE  C2E8  F01C         	movff	_deviceTime,time@the_time	;volatile
 12946  005CB2  C2E9  F01D         	movff	_deviceTime+1,time@the_time+1	;volatile
 12947  005CB6  C2EA  F01E         	movff	_deviceTime+2,time@the_time+2	;volatile
 12948  005CBA  C2EB  F01F         	movff	_deviceTime+3,time@the_time+3	;volatile
 12949                           
 12950                           ;rtcc.c: 206: GIE = gie_val;
 12951  005CBE  A01B               	btfss	time@gie_val,0,c
 12952  005CC0  D002               	goto	u11790
 12953  005CC2  8EF2               	bsf	intcon,7,c	;volatile
 12954  005CC4  D001               	goto	l8285
 12955  005CC6                     u11790:
 12956  005CC6  9EF2               	bcf	intcon,7,c	;volatile
 12957  005CC8                     l8285:
 12958                           
 12959                           ;rtcc.c: 208: if(t)
 12960  005CC8  5017               	movf	time@t,w,c
 12961  005CCA  1018               	iorwf	time@t+1,w,c
 12962  005CCC  E00C               	bz	l8289
 12963                           
 12964                           ;rtcc.c: 209: {
 12965                           ;rtcc.c: 210: *t = the_time;
 12966  005CCE  C017  FFD9         	movff	time@t,fsr2l
 12967  005CD2  C018  FFDA         	movff	time@t+1,fsr2h
 12968  005CD6  C01C  FFDE         	movff	time@the_time,postinc2
 12969  005CDA  C01D  FFDE         	movff	time@the_time+1,postinc2
 12970  005CDE  C01E  FFDE         	movff	time@the_time+2,postinc2
 12971  005CE2  C01F  FFDE         	movff	time@the_time+3,postinc2
 12972  005CE6                     l8289:
 12973                           
 12974                           ;rtcc.c: 211: }
 12975                           ;rtcc.c: 213: return (the_time);
 12976  005CE6  C01C  F017         	movff	time@the_time,?_time
 12977  005CEA  C01D  F018         	movff	time@the_time+1,?_time+1
 12978  005CEE  C01E  F019         	movff	time@the_time+2,?_time+2
 12979  005CF2  C01F  F01A         	movff	time@the_time+3,?_time+3
 12980  005CF6  0012               	return		;funcret
 12981  005CF8                     __end_of_time:
 12982                           	opt stack 0
 12983                           tosu	equ	0xFFF
 12984                           tosh	equ	0xFFE
 12985                           tosl	equ	0xFFD
 12986                           pclath	equ	0xFFA
 12987                           tblptru	equ	0xFF8
 12988                           tblptrh	equ	0xFF7
 12989                           tblptrl	equ	0xFF6
 12990                           tablat	equ	0xFF5
 12991                           prodh	equ	0xFF4
 12992                           prodl	equ	0xFF3
 12993                           intcon	equ	0xFF2
 12994                           indf0	equ	0xFEF
 12995                           postinc0	equ	0xFEE
 12996                           fsr0h	equ	0xFEA
 12997                           fsr0l	equ	0xFE9
 12998                           wreg	equ	0xFE8
 12999                           postinc1	equ	0xFE6
 13000                           postdec1	equ	0xFE5
 13001                           plusw1	equ	0xFE3
 13002                           fsr1h	equ	0xFE2
 13003                           fsr1l	equ	0xFE1
 13004                           bsr	equ	0xFE0
 13005                           indf2	equ	0xFDF
 13006                           postinc2	equ	0xFDE
 13007                           postdec2	equ	0xFDD
 13008                           plusw2	equ	0xFDB
 13009                           fsr2h	equ	0xFDA
 13010                           fsr2l	equ	0xFD9
 13011                           status	equ	0xFD8
 13012                           
 13013 ;; *************** function _strlen *****************
 13014 ;; Defined at:
 13015 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strlen.c"
 13016 ;; Parameters:    Size  Location     Type
 13017 ;;  s               2   22[COMRAM] PTR const unsigned char 
 13018 ;;		 -> DEMO_TCP_Client@txdataPort60(80), 
 13019 ;; Auto vars:     Size  Location     Type
 13020 ;;  cp              2   24[COMRAM] PTR const unsigned char 
 13021 ;;		 -> DEMO_TCP_Client@txdataPort60(80), 
 13022 ;; Return value:  Size  Location     Type
 13023 ;;                  2   22[COMRAM] unsigned int 
 13024 ;; Registers used:
 13025 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13026 ;; Tracked objects:
 13027 ;;		On entry : F/0
 13028 ;;		On exit  : F/0
 13029 ;;		Unchanged: F/0
 13030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13031 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13032 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13034 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13035 ;;Total ram usage:        4 bytes
 13036 ;; Hardware stack levels used:    1
 13037 ;; Hardware stack levels required when called:    8
 13038 ;; This function calls:
 13039 ;;		Nothing
 13040 ;; This function is called by:
 13041 ;;		_DEMO_TCP_Client
 13042 ;; This function uses a non-reentrant model
 13043 ;;
 13044                           
 13045                           	psect	text58
 13046  00641A                     __ptext58:
 13047                           	opt stack 0
 13048  00641A                     _strlen:
 13049                           	opt stack 21
 13050                           
 13051                           ; BSR set to: 0
 13052                           
 13053                           ;incstack = 0
 13054  00641A  C017  F019         	movff	strlen@s,strlen@cp
 13055  00641E  C018  F01A         	movff	strlen@s+1,strlen@cp+1
 13056  006422  D002               	goto	l10137
 13057  006424                     l10135:
 13058                           
 13059                           ; BSR set to: 0
 13060  006424  4A19               	infsnz	strlen@cp,f,c
 13061  006426  2A1A               	incf	strlen@cp+1,f,c
 13062  006428                     l10137:
 13063                           
 13064                           ; BSR set to: 0
 13065  006428  C019  FFD9         	movff	strlen@cp,fsr2l
 13066  00642C  C01A  FFDA         	movff	strlen@cp+1,fsr2h
 13067  006430  50DF               	movf	indf2,w,c
 13068  006432  E1F8               	bnz	l10135
 13069                           
 13070                           ; BSR set to: 0
 13071  006434  5017               	movf	strlen@s,w,c
 13072  006436  5C19               	subwf	strlen@cp,w,c
 13073  006438  6E17               	movwf	?_strlen,c
 13074  00643A  5018               	movf	strlen@s+1,w,c
 13075  00643C  581A               	subwfb	strlen@cp+1,w,c
 13076  00643E  6E18               	movwf	?_strlen+1,c
 13077                           
 13078                           ; BSR set to: 0
 13079  006440  0012               	return		;funcret
 13080  006442                     __end_of_strlen:
 13081                           	opt stack 0
 13082                           tosu	equ	0xFFF
 13083                           tosh	equ	0xFFE
 13084                           tosl	equ	0xFFD
 13085                           pclath	equ	0xFFA
 13086                           tblptru	equ	0xFF8
 13087                           tblptrh	equ	0xFF7
 13088                           tblptrl	equ	0xFF6
 13089                           tablat	equ	0xFF5
 13090                           prodh	equ	0xFF4
 13091                           prodl	equ	0xFF3
 13092                           intcon	equ	0xFF2
 13093                           indf0	equ	0xFEF
 13094                           postinc0	equ	0xFEE
 13095                           fsr0h	equ	0xFEA
 13096                           fsr0l	equ	0xFE9
 13097                           wreg	equ	0xFE8
 13098                           postinc1	equ	0xFE6
 13099                           postdec1	equ	0xFE5
 13100                           plusw1	equ	0xFE3
 13101                           fsr1h	equ	0xFE2
 13102                           fsr1l	equ	0xFE1
 13103                           bsr	equ	0xFE0
 13104                           indf2	equ	0xFDF
 13105                           postinc2	equ	0xFDE
 13106                           postdec2	equ	0xFDD
 13107                           plusw2	equ	0xFDB
 13108                           fsr2h	equ	0xFDA
 13109                           fsr2l	equ	0xFD9
 13110                           status	equ	0xFD8
 13111                           
 13112 ;; *************** function _sprintf *****************
 13113 ;; Defined at:
 13114 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprintf.c"
 13115 ;; Parameters:    Size  Location     Type
 13116 ;;  wh              2   40[COMRAM] PTR unsigned char 
 13117 ;;		 -> main@str(32), DEMO_TCP_Client@txdataPort60(80), DEMO_TCP_Client@strTmp(17), Network_Read@debug_str(80), 
 13118 ;;  f               1   42[COMRAM] PTR const unsigned char 
 13119 ;;		 -> STR_9(12), STR_6(61), STR_5(3), STR_2(8), 
 13120 ;; Auto vars:     Size  Location     Type
 13121 ;;  pb              5   14[BANK0 ] struct __prbuf
 13122 ;;  ap              1   13[BANK0 ] PTR void [1]
 13123 ;;		 -> ?_sprintf(2), ?_printf(2), 
 13124 ;; Return value:  Size  Location     Type
 13125 ;;                  2   40[COMRAM] int 
 13126 ;; Registers used:
 13127 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13128 ;; Tracked objects:
 13129 ;;		On entry : 0/2
 13130 ;;		On exit  : F/0
 13131 ;;		Unchanged: 0/0
 13132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13133 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13134 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13136 ;;      Totals:        11       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13137 ;;Total ram usage:       17 bytes
 13138 ;; Hardware stack levels used:    1
 13139 ;; Hardware stack levels required when called:   10
 13140 ;; This function calls:
 13141 ;;		__doprnt
 13142 ;; This function is called by:
 13143 ;;		_Network_Read
 13144 ;;		_DEMO_TCP_Client
 13145 ;;		_main
 13146 ;; This function uses a non-reentrant model
 13147 ;;
 13148                           
 13149                           	psect	text59
 13150  0062E8                     __ptext59:
 13151                           	opt stack 0
 13152  0062E8                     _sprintf:
 13153                           	opt stack 20
 13154                           
 13155                           ; BSR set to: 0
 13156                           ;incstack = 0
 13157  0062E8  C029  F06E         	movff	sprintf@wh,sprintf@pb
 13158  0062EC  C02A  F06F         	movff	sprintf@wh+1,sprintf@pb+1
 13159  0062F0  0100               	movlb	0	; () banked
 13160  0062F2  6B70               	clrf	(sprintf@pb+2)& (0+255),b
 13161  0062F4  6B71               	clrf	(sprintf@pb+3)& (0+255),b
 13162  0062F6  6B72               	clrf	(sprintf@pb+4)& (0+255),b
 13163  0062F8  0E2C               	movlw	low (?_sprintf+3)
 13164  0062FA  6F6D               	movwf	sprintf@ap& (0+255),b
 13165                           
 13166                           ; BSR set to: 0
 13167  0062FC  C02B  F023         	movff	sprintf@f,__doprnt@f
 13168  006300  0E6D               	movlw	low sprintf@ap
 13169  006302  6E24               	movwf	__doprnt@ap,c
 13170  006304  0E6E               	movlw	sprintf@pb& (0+255)
 13171  006306  EC61  F016         	call	__doprnt
 13172                           
 13173                           ; BSR set to: 0
 13174  00630A  C06E  FFD9         	movff	sprintf@pb,fsr2l
 13175  00630E  C06F  FFDA         	movff	sprintf@pb+1,fsr2h
 13176  006312  6ADF               	clrf	indf2,c
 13177                           
 13178                           ; BSR set to: 0
 13179  006314  0C00               	retlw	0	;funcret
 13180  006316                     __end_of_sprintf:
 13181                           	opt stack 0
 13182                           tosu	equ	0xFFF
 13183                           tosh	equ	0xFFE
 13184                           tosl	equ	0xFFD
 13185                           pclath	equ	0xFFA
 13186                           tblptru	equ	0xFF8
 13187                           tblptrh	equ	0xFF7
 13188                           tblptrl	equ	0xFF6
 13189                           tablat	equ	0xFF5
 13190                           prodh	equ	0xFF4
 13191                           prodl	equ	0xFF3
 13192                           intcon	equ	0xFF2
 13193                           indf0	equ	0xFEF
 13194                           postinc0	equ	0xFEE
 13195                           fsr0h	equ	0xFEA
 13196                           fsr0l	equ	0xFE9
 13197                           wreg	equ	0xFE8
 13198                           postinc1	equ	0xFE6
 13199                           postdec1	equ	0xFE5
 13200                           plusw1	equ	0xFE3
 13201                           fsr1h	equ	0xFE2
 13202                           fsr1l	equ	0xFE1
 13203                           bsr	equ	0xFE0
 13204                           indf2	equ	0xFDF
 13205                           postinc2	equ	0xFDE
 13206                           postdec2	equ	0xFDD
 13207                           plusw2	equ	0xFDB
 13208                           fsr2h	equ	0xFDA
 13209                           fsr2l	equ	0xFD9
 13210                           status	equ	0xFD8
 13211                           
 13212 ;; *************** function __doprnt *****************
 13213 ;; Defined at:
 13214 ;;		line 458 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
 13215 ;; Parameters:    Size  Location     Type
 13216 ;;  pb              1    wreg     PTR struct __prbuf
 13217 ;;		 -> sprintf@pb(5), printf@pb(5), 
 13218 ;;  f               1   34[COMRAM] PTR const unsigned char 
 13219 ;;		 -> STR_9(12), STR_6(61), STR_5(3), STR_4(10), 
 13220 ;;		 -> STR_3(28), STR_2(8), 
 13221 ;;  ap              1   35[COMRAM] PTR PTR void 
 13222 ;;		 -> sprintf@ap(1), printf@ap(1), 
 13223 ;; Auto vars:     Size  Location     Type
 13224 ;;  pb              1   12[BANK0 ] PTR struct __prbuf
 13225 ;;		 -> sprintf@pb(5), printf@pb(5), 
 13226 ;;  idx             1    0[BANK0 ] unsigned char 
 13227 ;;  tmpval          4    0        struct .
 13228 ;;  width           2    9[BANK0 ] int 
 13229 ;;  val             2    7[BANK0 ] unsigned int 
 13230 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
 13231 ;;		 -> ?_sprintf(2), ?_printf(2), STR_10(7), main@str(32), 
 13232 ;;		 -> STR_8(13), STR_7(17), DEMO_TCP_Client@txdataPort60(80), DEMO_TCP_Client@strTmp(17), 
 13233 ;;		 -> DEMO_TCP_Client@rxdataPort60(50), Network_Read@debug_str(80), STR_1(15), NULL(0), 
 13234 ;;  len             2    2[BANK0 ] unsigned int 
 13235 ;;  c               1   11[BANK0 ] char 
 13236 ;;  flag            1    6[BANK0 ] unsigned char 
 13237 ;;  prec            1    1[BANK0 ] char 
 13238 ;; Return value:  Size  Location     Type
 13239 ;;                  2   34[COMRAM] int 
 13240 ;; Registers used:
 13241 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13242 ;; Tracked objects:
 13243 ;;		On entry : 0/1
 13244 ;;		On exit  : F/0
 13245 ;;		Unchanged: 0/0
 13246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13247 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13248 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13249 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13250 ;;      Totals:         6      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13251 ;;Total ram usage:       19 bytes
 13252 ;; Hardware stack levels used:    1
 13253 ;; Hardware stack levels required when called:    9
 13254 ;; This function calls:
 13255 ;;		Absolute function
 13256 ;;		___lwdiv
 13257 ;;		___lwmod
 13258 ;;		___wmul
 13259 ;;		_isdigit
 13260 ;;		_putch
 13261 ;; This function is called by:
 13262 ;;		_printf
 13263 ;;		_sprintf
 13264 ;; This function uses a non-reentrant model
 13265 ;;
 13266                           
 13267                           	psect	text60
 13268  002CC2                     __ptext60:
 13269                           	opt stack 0
 13270  002CC2                     __doprnt:
 13271                           	opt stack 20
 13272                           
 13273                           ; BSR set to: 0
 13274                           ;incstack = 0
 13275                           ;__doprnt@pb stored from wreg
 13276  002CC2  0100               	movlb	0	; () banked
 13277  002CC4  6F6C               	movwf	__doprnt@pb& (0+255),b
 13278                           
 13279                           ;doprnt.c: 499: signed char c;
 13280                           ;doprnt.c: 501: int width;
 13281                           ;doprnt.c: 506: signed char prec;
 13282                           ;doprnt.c: 508: unsigned char flag;
 13283                           ;doprnt.c: 523: union {
 13284                           ;doprnt.c: 524: unsigned long vd;
 13285                           ;doprnt.c: 525: double integ;
 13286                           ;doprnt.c: 526: } tmpval;
 13287                           ;doprnt.c: 528: unsigned int val;
 13288                           ;doprnt.c: 529: unsigned len;
 13289                           ;doprnt.c: 530: const char * cp;
 13290                           ;doprnt.c: 536: while(c = *f++) {
 13291  002CC6  D1D9               	goto	l8275
 13292  002CC8                     l8107:
 13293                           
 13294                           ; BSR set to: 0
 13295                           ;doprnt.c: 538: if(c != '%')
 13296  002CC8  0E25               	movlw	37
 13297  002CCA  196B               	xorwf	__doprnt@c& (0+255),w,b
 13298  002CCC  E018               	bz	l1611
 13299                           
 13300                           ; BSR set to: 0
 13301                           ;doprnt.c: 540: {
 13302                           ;doprnt.c: 541: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 13303  002CCE  D9F6               	call	PL465	;call to abstracted procedure
 13304  002CD0  50DE               	movf	postinc2,w,c
 13305  002CD2  10DE               	iorwf	postinc2,w,c
 13306  002CD4  10DE               	iorwf	postinc2,w,c
 13307  002CD6  E00E               	bz	l8113
 13308                           
 13309                           ; BSR set to: 0
 13310  002CD8  D9F1               	call	PL465	;call to abstracted procedure
 13311  002CDA  D801               	call	u11448
 13312  002CDC  D1CE               	goto	l8275
 13313  002CDE                     u11448:
 13314  002CDE  0005               	push	
 13315  002CE0  6EFA               	movwf	pclath,c
 13316  002CE2  50DE               	movf	postinc2,w,c
 13317  002CE4  6EFD               	movwf	tosl,c
 13318  002CE6  50DE               	movf	postinc2,w,c
 13319  002CE8  6EFE               	movwf	tosh,c
 13320  002CEA  50DE               	movf	postinc2,w,c
 13321  002CEC  6EFF               	movwf	tosu,c
 13322  002CEE  50FA               	movf	pclath,w,c
 13323  002CF0  516B               	movf	__doprnt@c& (0+255),w,b
 13324  002CF2  0012               	return		;indir
 13325  002CF4                     l8113:
 13326                           
 13327                           ; BSR set to: 0
 13328  002CF4  D9CC               	call	PL437	;call to abstracted procedure
 13329  002CF6  C06B  FFDF         	movff	__doprnt@c,indf2
 13330                           
 13331                           ; BSR set to: 0
 13332  002CFA  D9EA               	call	PL487	;call to abstracted procedure
 13333  002CFC  D1BE               	goto	l8275
 13334  002CFE                     l1611:
 13335                           
 13336                           ; BSR set to: 0
 13337                           ;doprnt.c: 543: }
 13338                           ;doprnt.c: 546: width = 0;
 13339  002CFE  6B69               	clrf	__doprnt@width& (0+255),b
 13340  002D00  6B6A               	clrf	(__doprnt@width+1)& (0+255),b
 13341                           
 13342                           ;doprnt.c: 548: flag = 0;
 13343  002D02  6B66               	clrf	__doprnt@flag& (0+255),b
 13344                           
 13345                           ; BSR set to: 0
 13346                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 13347  002D04  C023  FFF6         	movff	__doprnt@f,tblptrl
 13348  002D08                     	if	1	;There is more than 1 active tblptr byte
 13349  002D08  D9CE               	call	PL461	;call to abstracted procedure
 13350  002D0A  50F5               	movf	tablat,w,c
 13351  002D0C  ECEF  F032         	call	_isdigit
 13352  002D10  E201 D0C2          	bnc	l8175
 13353                           
 13354                           ;doprnt.c: 598: width = 0;
 13355  002D14  0100               	movlb	0	; () banked
 13356  002D16  6B69               	clrf	__doprnt@width& (0+255),b
 13357  002D18  6B6A               	clrf	(__doprnt@width+1)& (0+255),b
 13358  002D1A                     l8121:
 13359                           
 13360                           ;doprnt.c: 600: width *= 10;
 13361  002D1A  C069  F017         	movff	__doprnt@width,___wmul@multiplier
 13362  002D1E  C06A  F018         	movff	__doprnt@width+1,___wmul@multiplier+1
 13363  002D22  6A1A               	clrf	___wmul@multiplicand+1,c
 13364  002D24  0E0A               	movlw	10
 13365  002D26  6E19               	movwf	___wmul@multiplicand,c
 13366  002D28  EC5B  F032         	call	___wmul	;wreg free
 13367  002D2C  C017  F069         	movff	?___wmul,__doprnt@width
 13368  002D30  C018  F06A         	movff	?___wmul+1,__doprnt@width+1
 13369                           
 13370                           ;doprnt.c: 601: width += *f++ - '0';
 13371  002D34  0ED0               	movlw	208
 13372  002D36  6E25               	movwf	??__doprnt& (0+255),c
 13373  002D38  6826               	setf	(??__doprnt+1)& (0+255),c
 13374  002D3A  C023  FFF6         	movff	__doprnt@f,tblptrl
 13375  002D3E                     	if	1	;There is more than 1 active tblptr byte
 13376  002D3E  D9B3               	call	PL461	;call to abstracted procedure
 13377  002D40  50F5               	movf	tablat,w,c
 13378  002D42  6E27               	movwf	(??__doprnt+2)& (0+255),c
 13379  002D44  6A28               	clrf	(??__doprnt+3)& (0+255),c
 13380  002D46  5025               	movf	??__doprnt,w,c
 13381  002D48  2627               	addwf	??__doprnt+2,f,c
 13382  002D4A  5026               	movf	??__doprnt+1,w,c
 13383  002D4C  2228               	addwfc	??__doprnt+3,f,c
 13384  002D4E  5027               	movf	??__doprnt+2,w,c
 13385  002D50  0100               	movlb	0	; () banked
 13386  002D52  2769               	addwf	__doprnt@width& (0+255),f,b
 13387  002D54  5028               	movf	??__doprnt+3,w,c
 13388  002D56  236A               	addwfc	(__doprnt@width+1)& (0+255),f,b
 13389                           
 13390                           ; BSR set to: 0
 13391  002D58  2A23               	incf	__doprnt@f,f,c
 13392                           
 13393                           ; BSR set to: 0
 13394                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 13395  002D5A  C023  FFF6         	movff	__doprnt@f,tblptrl
 13396  002D5E                     	if	1	;There is more than 1 active tblptr byte
 13397  002D5E  D9A3               	call	PL461	;call to abstracted procedure
 13398  002D60  50F5               	movf	tablat,w,c
 13399  002D62  ECEF  F032         	call	_isdigit
 13400  002D66  E201 D097          	bnc	l8175
 13401  002D6A  D7D7               	goto	l8121
 13402  002D6C                     l8129:
 13403                           
 13404                           ; BSR set to: 0
 13405                           ;doprnt.c: 721: flag |= 0x80;
 13406  002D6C  8F66               	bsf	__doprnt@flag& (0+255),7,b
 13407                           
 13408                           ;doprnt.c: 723: break;
 13409  002D6E  D0A8               	goto	l8177
 13410  002D70                     l8131:
 13411                           
 13412                           ; BSR set to: 0
 13413                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 13414  002D70  D9B6               	call	PL521	;call to abstracted procedure
 13415  002D72  CFDE F064          	movff	postinc2,__doprnt@cp
 13416  002D76  CFDE F065          	movff	postinc2,__doprnt@cp+1
 13417                           
 13418                           ; BSR set to: 0
 13419                           ;doprnt.c: 740: if(!cp)
 13420  002D7A  5164               	movf	__doprnt@cp& (0+255),w,b
 13421  002D7C  1165               	iorwf	(__doprnt@cp+1)& (0+255),w,b
 13422  002D7E  E106               	bnz	l8137
 13423                           
 13424                           ; BSR set to: 0
 13425                           ;doprnt.c: 741: cp = "(null)";
 13426  002D80  0EEE               	movlw	low STR_10
 13427  002D82  6F64               	movwf	__doprnt@cp& (0+255),b
 13428  002D84  5164               	movf	__doprnt@cp& (0+255),w,b
 13429  002D86  A4D8               	btfss	status,2,c
 13430  002D88  0E10               	movlw	high __smallconst
 13431  002D8A  6F65               	movwf	(__doprnt@cp+1)& (0+255),b
 13432  002D8C                     l8137:
 13433                           
 13434                           ; BSR set to: 0
 13435                           ;doprnt.c: 745: len = 0;
 13436  002D8C  6B62               	clrf	__doprnt@len& (0+255),b
 13437  002D8E  6B63               	clrf	(__doprnt@len+1)& (0+255),b
 13438                           
 13439                           ;doprnt.c: 746: while(cp[len])
 13440  002D90  D003               	goto	l8141
 13441  002D92                     l8139:
 13442                           
 13443                           ;doprnt.c: 747: len++;
 13444  002D92  0100               	movlb	0	; () banked
 13445  002D94  4B62               	infsnz	__doprnt@len& (0+255),f,b
 13446  002D96  2B63               	incf	(__doprnt@len+1)& (0+255),f,b
 13447  002D98                     l8141:
 13448                           
 13449                           ; BSR set to: 0
 13450  002D98  5162               	movf	__doprnt@len& (0+255),w,b
 13451  002D9A  2564               	addwf	__doprnt@cp& (0+255),w,b
 13452  002D9C  6E25               	movwf	??__doprnt& (0+255),c
 13453  002D9E  5163               	movf	(__doprnt@len+1)& (0+255),w,b
 13454  002DA0  2165               	addwfc	(__doprnt@cp+1)& (0+255),w,b
 13455  002DA2  6E26               	movwf	(??__doprnt+1)& (0+255),c
 13456  002DA4  C025  FFF6         	movff	??__doprnt,tblptrl
 13457  002DA8  C026  FFF7         	movff	??__doprnt+1,tblptrh
 13458  002DAC  0E00               	movlw	low (__smallconst shr (0+16))
 13459  002DAE  6EF8               	movwf	tblptru,c
 13460  002DB0  0E0F               	movlw	(high __ramtop+-1)
 13461  002DB2  64F7               	cpfsgt	tblptrh,c
 13462  002DB4  D003               	bra	u11487
 13463  002DB6  0008               	tblrd		*
 13464  002DB8  50F5               	movf	tablat,w,c
 13465  002DBA  D003               	bra	u11480
 13466  002DBC                     u11487:
 13467  002DBC  EC86  F011         	call	PL389	;call to abstracted procedure
 13468  002DC0  50EF               	movf	indf0,w,c
 13469  002DC2                     u11480:
 13470  002DC2  0900               	iorlw	0
 13471  002DC4  E1E6               	bnz	l8139
 13472                           
 13473                           ;doprnt.c: 757: if(width > len)
 13474  002DC6  0100               	movlb	0	; () banked
 13475  002DC8  5169               	movf	__doprnt@width& (0+255),w,b
 13476  002DCA  5D62               	subwf	__doprnt@len& (0+255),w,b
 13477  002DCC  516A               	movf	(__doprnt@width+1)& (0+255),w,b
 13478  002DCE  5963               	subwfb	(__doprnt@len+1)& (0+255),w,b
 13479  002DD0  E205               	bc	l1629
 13480                           
 13481                           ; BSR set to: 0
 13482                           ;doprnt.c: 758: width -= len;
 13483  002DD2  5162               	movf	__doprnt@len& (0+255),w,b
 13484  002DD4  5F69               	subwf	__doprnt@width& (0+255),f,b
 13485  002DD6  5163               	movf	(__doprnt@len+1)& (0+255),w,b
 13486  002DD8  5B6A               	subwfb	(__doprnt@width+1)& (0+255),f,b
 13487  002DDA  D019               	goto	l8155
 13488  002DDC                     l1629:
 13489                           
 13490                           ; BSR set to: 0
 13491                           ;doprnt.c: 759: else
 13492                           ;doprnt.c: 760: width = 0;
 13493  002DDC  6B69               	clrf	__doprnt@width& (0+255),b
 13494  002DDE  6B6A               	clrf	(__doprnt@width+1)& (0+255),b
 13495  002DE0  D016               	goto	l8155
 13496  002DE2                     l8147:
 13497                           
 13498                           ; BSR set to: 0
 13499                           ;doprnt.c: 765: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 13500  002DE2  D96C               	call	PL465	;call to abstracted procedure
 13501  002DE4  50DE               	movf	postinc2,w,c
 13502  002DE6  10DE               	iorwf	postinc2,w,c
 13503  002DE8  10DE               	iorwf	postinc2,w,c
 13504  002DEA  E00D               	bz	l8151
 13505                           
 13506                           ; BSR set to: 0
 13507  002DEC  D967               	call	PL465	;call to abstracted procedure
 13508  002DEE  D801               	call	u11528
 13509  002DF0  D00E               	goto	l8155
 13510  002DF2                     u11528:
 13511  002DF2  0005               	push	
 13512  002DF4  6EFA               	movwf	pclath,c
 13513  002DF6  50DE               	movf	postinc2,w,c
 13514  002DF8  6EFD               	movwf	tosl,c
 13515  002DFA  50DE               	movf	postinc2,w,c
 13516  002DFC  6EFE               	movwf	tosh,c
 13517  002DFE  50DE               	movf	postinc2,w,c
 13518  002E00  6EFF               	movwf	tosu,c
 13519  002E02  50FA               	movf	pclath,w,c
 13520  002E04  0C20               	retlw	32	;indir
 13521  002E06                     l8151:
 13522                           
 13523                           ; BSR set to: 0
 13524  002E06  D943               	call	PL437	;call to abstracted procedure
 13525  002E08  0E20               	movlw	32
 13526  002E0A  6EDF               	movwf	indf2,c
 13527                           
 13528                           ; BSR set to: 0
 13529  002E0C  D961               	call	PL487	;call to abstracted procedure
 13530  002E0E                     l8155:
 13531  002E0E  0100               	movlb	0	; () banked
 13532  002E10  0769               	decf	__doprnt@width& (0+255),f,b
 13533  002E12  A0D8               	btfss	status,0,c
 13534  002E14  076A               	decf	(__doprnt@width+1)& (0+255),f,b
 13535  002E16  2969               	incf	__doprnt@width& (0+255),w,b
 13536  002E18  E1E4               	bnz	l8147
 13537  002E1A  296A               	incf	(__doprnt@width+1)& (0+255),w,b
 13538  002E1C  E031               	bz	l8169
 13539  002E1E  D7E1               	goto	l8147
 13540  002E20                     l8157:
 13541                           
 13542                           ; BSR set to: 0
 13543                           ;doprnt.c: 768: if(pb->func) (pb->func(*cp++)); else ((*pb->ptr++ = *cp++));
 13544  002E20  D94D               	call	PL465	;call to abstracted procedure
 13545  002E22  50DE               	movf	postinc2,w,c
 13546  002E24  10DE               	iorwf	postinc2,w,c
 13547  002E26  10DE               	iorwf	postinc2,w,c
 13548  002E28  E01B               	bz	l8163
 13549                           
 13550                           ; BSR set to: 0
 13551  002E2A  D948               	call	PL465	;call to abstracted procedure
 13552  002E2C  D801               	call	u11558
 13553  002E2E  D014               	goto	l8161
 13554  002E30                     u11558:
 13555  002E30  0005               	push	
 13556  002E32  6EFA               	movwf	pclath,c
 13557  002E34  50DE               	movf	postinc2,w,c
 13558  002E36  6EFD               	movwf	tosl,c
 13559  002E38  50DE               	movf	postinc2,w,c
 13560  002E3A  6EFE               	movwf	tosh,c
 13561  002E3C  50DE               	movf	postinc2,w,c
 13562  002E3E  6EFF               	movwf	tosu,c
 13563  002E40  50FA               	movf	pclath,w,c
 13564  002E42  D95E               	call	PL655	;call to abstracted procedure
 13565  002E44  0E0F               	movlw	(high __ramtop+-1)
 13566  002E46  64F7               	cpfsgt	tblptrh,c
 13567  002E48  D003               	bra	u11567
 13568  002E4A  0008               	tblrd		*
 13569  002E4C  50F5               	movf	tablat,w,c
 13570  002E4E  D003               	bra	u11560
 13571  002E50                     u11567:
 13572  002E50  EC86  F011         	call	PL389	;call to abstracted procedure
 13573  002E54  50EF               	movf	indf0,w,c
 13574  002E56                     u11560:
 13575  002E56  0012               	return		;indir
 13576  002E58                     l8161:
 13577  002E58  0100               	movlb	0	; () banked
 13578  002E5A  4B64               	infsnz	__doprnt@cp& (0+255),f,b
 13579  002E5C  2B65               	incf	(__doprnt@cp+1)& (0+255),f,b
 13580  002E5E  D010               	goto	l8169
 13581  002E60                     l8163:
 13582                           
 13583                           ; BSR set to: 0
 13584  002E60  D94F               	call	PL655	;call to abstracted procedure
 13585  002E62  D915               	call	PL437	;call to abstracted procedure
 13586  002E64  0E0F               	movlw	(high __ramtop+-1)
 13587  002E66  64F7               	cpfsgt	tblptrh,c
 13588  002E68  D003               	bra	u11577
 13589  002E6A  0008               	tblrd		*
 13590  002E6C  50F5               	movf	tablat,w,c
 13591  002E6E  D003               	bra	u11570
 13592  002E70                     u11577:
 13593  002E70  EC86  F011         	call	PL389	;call to abstracted procedure
 13594  002E74  50EF               	movf	indf0,w,c
 13595  002E76                     u11570:
 13596  002E76  6EDF               	movwf	indf2,c
 13597  002E78  0100               	movlb	0	; () banked
 13598  002E7A  4B64               	infsnz	__doprnt@cp& (0+255),f,b
 13599  002E7C  2B65               	incf	(__doprnt@cp+1)& (0+255),f,b
 13600                           
 13601                           ; BSR set to: 0
 13602  002E7E  D928               	call	PL487	;call to abstracted procedure
 13603  002E80                     l8169:
 13604                           
 13605                           ; BSR set to: 0
 13606  002E80  0762               	decf	__doprnt@len& (0+255),f,b
 13607  002E82  A0D8               	btfss	status,0,c
 13608  002E84  0763               	decf	(__doprnt@len+1)& (0+255),f,b
 13609  002E86  2962               	incf	__doprnt@len& (0+255),w,b
 13610  002E88  E1CB               	bnz	l8157
 13611  002E8A  2963               	incf	(__doprnt@len+1)& (0+255),w,b
 13612  002E8C  E101 D0F5          	bz	l8275
 13613  002E90  D7C7               	goto	l8157
 13614  002E92                     l8171:
 13615                           
 13616                           ; BSR set to: 0
 13617                           ;doprnt.c: 818: flag |= 0xC0;
 13618  002E92  0EC0               	movlw	192
 13619  002E94  1366               	iorwf	__doprnt@flag& (0+255),f,b
 13620                           
 13621                           ;doprnt.c: 819: break;
 13622  002E96  D014               	goto	l8177
 13623  002E98                     l8175:
 13624  002E98  2A23               	incf	__doprnt@f,f,c
 13625  002E9A  0423               	decf	__doprnt@f,w,c
 13626  002E9C  D915               	call	PL469	;call to abstracted procedure
 13627  002E9E                     	if	1	;There is more than 1 active tblptr byte
 13628  002E9E  D903               	call	PL461	;call to abstracted procedure
 13629  002EA0  D942               	call	PL689	;call to abstracted procedure
 13630                           
 13631                           ; Switch size 1, requested type "space"
 13632                           ; Number of cases is 6, Range of values is 0 to 120
 13633                           ; switch strategies available:
 13634                           ; Name         Instructions Cycles
 13635                           ; simple_byte           19    10 (average)
 13636                           ;	Chosen strategy is simple_byte
 13637  002EA2  E101 D0F1          	bz	l1619
 13638  002EA6  0A64               	xorlw	100	; case 100
 13639  002EA8  E00B               	bz	l8177
 13640  002EAA  0A0D               	xorlw	13	; case 105
 13641  002EAC  E009               	bz	l8177
 13642  002EAE  0A1A               	xorlw	26	; case 115
 13643  002EB0  E101 D75E          	bz	l8131
 13644  002EB4  0A06               	xorlw	6	; case 117
 13645  002EB6  E0ED               	bz	l8171
 13646  002EB8  0A0D               	xorlw	13	; case 120
 13647  002EBA  E101 D757          	bz	l8129
 13648  002EBE  D0DD               	goto	l8275
 13649  002EC0                     l8177:
 13650                           
 13651                           ; BSR set to: 0
 13652                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 13653  002EC0  C066  F025         	movff	__doprnt@flag,??__doprnt
 13654  002EC4  0EC0               	movlw	192
 13655  002EC6  1625               	andwf	??__doprnt,f,c
 13656  002EC8  E10B               	bnz	l8187
 13657                           
 13658                           ; BSR set to: 0
 13659                           ;doprnt.c: 1253: {
 13660                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
 13661  002ECA  D909               	call	PL521	;call to abstracted procedure
 13662  002ECC  D936               	call	PL735	;call to abstracted procedure
 13663                           
 13664                           ; BSR set to: 0
 13665                           ;doprnt.c: 1261: if((int)val < 0) {
 13666  002ECE  AF68               	btfss	(__doprnt@val+1)& (0+255),7,b
 13667  002ED0  D02E               	goto	l8219
 13668                           
 13669                           ; BSR set to: 0
 13670                           ;doprnt.c: 1262: flag |= 0x03;
 13671  002ED2  0E03               	movlw	3
 13672  002ED4  1366               	iorwf	__doprnt@flag& (0+255),f,b
 13673                           
 13674                           ; BSR set to: 0
 13675                           ;doprnt.c: 1263: val = -val;
 13676  002ED6  6D67               	negf	__doprnt@val& (0+255),b
 13677  002ED8  1F68               	comf	(__doprnt@val+1)& (0+255),f,b
 13678  002EDA  B0D8               	btfsc	status,0,c
 13679  002EDC  2B68               	incf	(__doprnt@val+1)& (0+255),f,b
 13680  002EDE  D027               	goto	l8219
 13681  002EE0                     l8187:
 13682                           
 13683                           ; BSR set to: 0
 13684                           ;doprnt.c: 1268: else
 13685                           ;doprnt.c: 1273: {
 13686                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 13687  002EE0  D8FE               	call	PL521	;call to abstracted procedure
 13688  002EE2  D92B               	call	PL735	;call to abstracted procedure
 13689  002EE4  D024               	goto	l8219
 13690  002EE6                     l8189:
 13691                           
 13692                           ; BSR set to: 0
 13693                           ;doprnt.c: 1302: case 0xC0:
 13694                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 13695  002EE6  0E01               	movlw	1
 13696  002EE8  6F6B               	movwf	__doprnt@c& (0+255),b
 13697  002EEA                     l8195:
 13698                           
 13699                           ; BSR set to: 0
 13700                           ;doprnt.c: 1306: if(val < dpowers[c])
 13701  002EEA  516B               	movf	__doprnt@c& (0+255),w,b
 13702  002EEC  D901               	call	PL577	;call to abstracted procedure
 13703  002EEE  D8EC               	call	PL469	;call to abstracted procedure
 13704  002EF0  D8E0               	call	PL463	;call to abstracted procedure
 13705  002EF2  0009               	tblrd		*+
 13706  002EF4  50F5               	movf	tablat,w,c
 13707  002EF6  5D67               	subwf	__doprnt@val& (0+255),w,b
 13708  002EF8  0009               	tblrd		*+
 13709  002EFA  50F5               	movf	tablat,w,c
 13710  002EFC  5968               	subwfb	(__doprnt@val+1)& (0+255),w,b
 13711  002EFE  E31E               	bnc	l8221
 13712                           
 13713                           ; BSR set to: 0
 13714  002F00  2B6B               	incf	__doprnt@c& (0+255),f,b
 13715                           
 13716                           ; BSR set to: 0
 13717  002F02  0E05               	movlw	5
 13718  002F04  196B               	xorwf	__doprnt@c& (0+255),w,b
 13719  002F06  E01A               	bz	l8221
 13720  002F08  D7F0               	goto	l8195
 13721  002F0A                     l8203:
 13722                           
 13723                           ; BSR set to: 0
 13724                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 13725  002F0A  0E01               	movlw	1
 13726  002F0C  6F6B               	movwf	__doprnt@c& (0+255),b
 13727  002F0E                     l8209:
 13728                           
 13729                           ; BSR set to: 0
 13730                           ;doprnt.c: 1317: if(val < hexpowers[c])
 13731  002F0E  516B               	movf	__doprnt@c& (0+255),w,b
 13732  002F10  D8F3               	call	PL583	;call to abstracted procedure
 13733  002F12  D8DA               	call	PL469	;call to abstracted procedure
 13734  002F14  D8CE               	call	PL463	;call to abstracted procedure
 13735  002F16  0009               	tblrd		*+
 13736  002F18  50F5               	movf	tablat,w,c
 13737  002F1A  5D67               	subwf	__doprnt@val& (0+255),w,b
 13738  002F1C  0009               	tblrd		*+
 13739  002F1E  50F5               	movf	tablat,w,c
 13740  002F20  5968               	subwfb	(__doprnt@val+1)& (0+255),w,b
 13741  002F22  E30C               	bnc	l8221
 13742                           
 13743                           ; BSR set to: 0
 13744  002F24  2B6B               	incf	__doprnt@c& (0+255),f,b
 13745                           
 13746                           ; BSR set to: 0
 13747  002F26  0E04               	movlw	4
 13748  002F28  196B               	xorwf	__doprnt@c& (0+255),w,b
 13749  002F2A  E008               	bz	l8221
 13750  002F2C  D7F0               	goto	l8209
 13751  002F2E                     l8219:
 13752                           
 13753                           ; BSR set to: 0
 13754  002F2E  5166               	movf	__doprnt@flag& (0+255),w,b
 13755  002F30  0BC0               	andlw	192
 13756                           
 13757                           ; Switch size 1, requested type "space"
 13758                           ; Number of cases is 3, Range of values is 0 to 192
 13759                           ; switch strategies available:
 13760                           ; Name         Instructions Cycles
 13761                           ; simple_byte           10     6 (average)
 13762                           ;	Chosen strategy is simple_byte
 13763  002F32  E0D9               	bz	l8189
 13764  002F34  0A80               	xorlw	128	; case 128
 13765  002F36  E0E9               	bz	l8203
 13766  002F38  0A40               	xorlw	64	; case 192
 13767  002F3A  E0D5               	bz	l8189
 13768  002F3C                     l8221:
 13769                           
 13770                           ; BSR set to: 0
 13771                           ;doprnt.c: 1345: if(width && flag & 0x03)
 13772  002F3C  5169               	movf	__doprnt@width& (0+255),w,b
 13773  002F3E  116A               	iorwf	(__doprnt@width+1)& (0+255),w,b
 13774  002F40  E005               	bz	l8227
 13775                           
 13776                           ; BSR set to: 0
 13777  002F42  D8EC               	call	PL687	;call to abstracted procedure
 13778  002F44  E003               	bz	l8227
 13779                           
 13780                           ; BSR set to: 0
 13781                           ;doprnt.c: 1346: width--;
 13782  002F46  0769               	decf	__doprnt@width& (0+255),f,b
 13783  002F48  A0D8               	btfss	status,0,c
 13784  002F4A  076A               	decf	(__doprnt@width+1)& (0+255),f,b
 13785  002F4C                     l8227:
 13786                           
 13787                           ; BSR set to: 0
 13788                           ;doprnt.c: 1381: if(width > c)
 13789  002F4C  0E80               	movlw	128
 13790  002F4E  BF6B               	btfsc	__doprnt@c& (0+255),7,b
 13791  002F50  0E7F               	movlw	127
 13792  002F52  6E25               	movwf	??__doprnt& (0+255),c
 13793  002F54  5169               	movf	__doprnt@width& (0+255),w,b
 13794  002F56  5D6B               	subwf	__doprnt@c& (0+255),w,b
 13795  002F58  516A               	movf	(__doprnt@width+1)& (0+255),w,b
 13796  002F5A  0A80               	xorlw	128
 13797  002F5C  5825               	subwfb	??__doprnt& (0+255),w,c
 13798  002F5E  E207               	bc	l1658
 13799                           
 13800                           ; BSR set to: 0
 13801                           ;doprnt.c: 1382: width -= c;
 13802  002F60  516B               	movf	__doprnt@c& (0+255),w,b
 13803  002F62  5F69               	subwf	__doprnt@width& (0+255),f,b
 13804  002F64  0E00               	movlw	0
 13805  002F66  BF6B               	btfsc	__doprnt@c& (0+255),7,b
 13806  002F68  0EFF               	movlw	255
 13807  002F6A  5B6A               	subwfb	(__doprnt@width+1)& (0+255),f,b
 13808  002F6C  D002               	goto	l8231
 13809  002F6E                     l1658:
 13810                           
 13811                           ; BSR set to: 0
 13812                           ;doprnt.c: 1383: else
 13813                           ;doprnt.c: 1384: width = 0;
 13814  002F6E  6B69               	clrf	__doprnt@width& (0+255),b
 13815  002F70  6B6A               	clrf	(__doprnt@width+1)& (0+255),b
 13816  002F72                     l8231:
 13817                           
 13818                           ; BSR set to: 0
 13819                           ;doprnt.c: 1422: {
 13820                           ;doprnt.c: 1424: if(width
 13821                           ;doprnt.c: 1428: )
 13822  002F72  5169               	movf	__doprnt@width& (0+255),w,b
 13823  002F74  116A               	iorwf	(__doprnt@width+1)& (0+255),w,b
 13824  002F76  E01D               	bz	l8243
 13825  002F78                     l8233:
 13826                           
 13827                           ; BSR set to: 0
 13828                           ;doprnt.c: 1430: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 13829  002F78  D8A1               	call	PL465	;call to abstracted procedure
 13830  002F7A  50DE               	movf	postinc2,w,c
 13831  002F7C  10DE               	iorwf	postinc2,w,c
 13832  002F7E  10DE               	iorwf	postinc2,w,c
 13833  002F80  E00D               	bz	l8237
 13834                           
 13835                           ; BSR set to: 0
 13836  002F82  D89C               	call	PL465	;call to abstracted procedure
 13837  002F84  D801               	call	u11708
 13838  002F86  D00E               	goto	l8241
 13839  002F88                     u11708:
 13840  002F88  0005               	push	
 13841  002F8A  6EFA               	movwf	pclath,c
 13842  002F8C  50DE               	movf	postinc2,w,c
 13843  002F8E  6EFD               	movwf	tosl,c
 13844  002F90  50DE               	movf	postinc2,w,c
 13845  002F92  6EFE               	movwf	tosh,c
 13846  002F94  50DE               	movf	postinc2,w,c
 13847  002F96  6EFF               	movwf	tosu,c
 13848  002F98  50FA               	movf	pclath,w,c
 13849  002F9A  0C20               	retlw	32	;indir
 13850  002F9C                     l8237:
 13851                           
 13852                           ; BSR set to: 0
 13853  002F9C  D878               	call	PL437	;call to abstracted procedure
 13854  002F9E  0E20               	movlw	32
 13855  002FA0  6EDF               	movwf	indf2,c
 13856                           
 13857                           ; BSR set to: 0
 13858  002FA2  D896               	call	PL487	;call to abstracted procedure
 13859  002FA4                     l8241:
 13860                           
 13861                           ;doprnt.c: 1431: while(--width);
 13862  002FA4  0100               	movlb	0	; () banked
 13863  002FA6  0769               	decf	__doprnt@width& (0+255),f,b
 13864  002FA8  A0D8               	btfss	status,0,c
 13865  002FAA  076A               	decf	(__doprnt@width+1)& (0+255),f,b
 13866  002FAC  5169               	movf	__doprnt@width& (0+255),w,b
 13867  002FAE  116A               	iorwf	(__doprnt@width+1)& (0+255),w,b
 13868  002FB0  E1E3               	bnz	l8233
 13869  002FB2                     l8243:
 13870                           
 13871                           ; BSR set to: 0
 13872                           ;doprnt.c: 1438: if(flag & 0x03)
 13873  002FB2  D8B4               	call	PL687	;call to abstracted procedure
 13874  002FB4  E016               	bz	l8253
 13875                           
 13876                           ; BSR set to: 0
 13877                           ;doprnt.c: 1439: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 13878  002FB6  D882               	call	PL465	;call to abstracted procedure
 13879  002FB8  50DE               	movf	postinc2,w,c
 13880  002FBA  10DE               	iorwf	postinc2,w,c
 13881  002FBC  10DE               	iorwf	postinc2,w,c
 13882  002FBE  E00D               	bz	l8249
 13883                           
 13884                           ; BSR set to: 0
 13885  002FC0  D87D               	call	PL465	;call to abstracted procedure
 13886  002FC2  D801               	call	u11748
 13887  002FC4  D00E               	goto	l8253
 13888  002FC6                     u11748:
 13889  002FC6  0005               	push	
 13890  002FC8  6EFA               	movwf	pclath,c
 13891  002FCA  50DE               	movf	postinc2,w,c
 13892  002FCC  6EFD               	movwf	tosl,c
 13893  002FCE  50DE               	movf	postinc2,w,c
 13894  002FD0  6EFE               	movwf	tosh,c
 13895  002FD2  50DE               	movf	postinc2,w,c
 13896  002FD4  6EFF               	movwf	tosu,c
 13897  002FD6  50FA               	movf	pclath,w,c
 13898  002FD8  0C2D               	retlw	45	;indir
 13899  002FDA                     l8249:
 13900                           
 13901                           ; BSR set to: 0
 13902  002FDA  D859               	call	PL437	;call to abstracted procedure
 13903  002FDC  0E2D               	movlw	45
 13904  002FDE  6EDF               	movwf	indf2,c
 13905                           
 13906                           ; BSR set to: 0
 13907  002FE0  D877               	call	PL487	;call to abstracted procedure
 13908  002FE2                     l8253:
 13909                           
 13910                           ;doprnt.c: 1469: }
 13911                           ;doprnt.c: 1472: prec = c;
 13912  002FE2  C06B  F061         	movff	__doprnt@c,__doprnt@prec
 13913                           
 13914                           ;doprnt.c: 1474: while(prec--) {
 13915  002FE6  D045               	goto	l8273
 13916  002FE8                     l8255:
 13917                           
 13918                           ; BSR set to: 0
 13919                           ;doprnt.c: 1486: case 0xC0:
 13920                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 13921  002FE8  5161               	movf	__doprnt@prec& (0+255),w,b
 13922  002FEA  D882               	call	PL577	;call to abstracted procedure
 13923  002FEC  D86D               	call	PL469	;call to abstracted procedure
 13924  002FEE  D861               	call	PL463	;call to abstracted procedure
 13925  002FF0  D88E               	call	PL659	;call to abstracted procedure
 13926  002FF2  D89E               	call	PL733	;call to abstracted procedure
 13927  002FF4  ECD8  F02F         	call	___lwdiv
 13928  002FF8  C017  F01E         	movff	?___lwdiv,___lwmod@dividend
 13929  002FFC  C018  F01F         	movff	?___lwdiv+1,___lwmod@dividend+1
 13930  003000  6A21               	clrf	___lwmod@divisor+1,c
 13931  003002  0E0A               	movlw	10
 13932  003004  6E20               	movwf	___lwmod@divisor,c
 13933  003006  EC86  F030         	call	___lwmod	;wreg free
 13934  00300A  501E               	movf	?___lwmod,w,c
 13935  00300C  0F30               	addlw	48
 13936  00300E  6F6B               	movwf	__doprnt@c& (0+255),b
 13937                           
 13938                           ;doprnt.c: 1491: break;
 13939  003010  D019               	goto	l8265
 13940  003012                     l8257:
 13941                           
 13942                           ; BSR set to: 0
 13943                           ;doprnt.c: 1499: {
 13944                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 13945  003012  D88E               	call	PL733	;call to abstracted procedure
 13946  003014  5161               	movf	__doprnt@prec& (0+255),w,b
 13947  003016  D870               	call	PL583	;call to abstracted procedure
 13948  003018  D857               	call	PL469	;call to abstracted procedure
 13949  00301A  D84B               	call	PL463	;call to abstracted procedure
 13950  00301C  D878               	call	PL659	;call to abstracted procedure
 13951  00301E  ECD8  F02F         	call	___lwdiv	;wreg free
 13952  003022  5017               	movf	?___lwdiv,w,c
 13953  003024  0B0F               	andlw	15
 13954  003026  6F60               	movwf	__doprnt@idx& (0+255),b
 13955                           
 13956                           ; BSR set to: 0
 13957                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
 13958  003028  5160               	movf	__doprnt@idx& (0+255),w,b
 13959  00302A  0F92               	addlw	low STR_11
 13960  00302C  D84D               	call	PL469	;call to abstracted procedure
 13961  00302E                     	if	1	;There is more than 1 active tblptr byte
 13962  00302E  D83B               	call	PL461	;call to abstracted procedure
 13963  003030  CFF5 F06B          	movff	tablat,__doprnt@c
 13964                           
 13965                           ;doprnt.c: 1508: }
 13966                           ;doprnt.c: 1510: break;
 13967  003034  D007               	goto	l8265
 13968  003036                     l8263:
 13969                           
 13970                           ; BSR set to: 0
 13971  003036  5166               	movf	__doprnt@flag& (0+255),w,b
 13972  003038  0BC0               	andlw	192
 13973                           
 13974                           ; Switch size 1, requested type "space"
 13975                           ; Number of cases is 3, Range of values is 0 to 192
 13976                           ; switch strategies available:
 13977                           ; Name         Instructions Cycles
 13978                           ; simple_byte           10     6 (average)
 13979                           ;	Chosen strategy is simple_byte
 13980  00303A  E0D6               	bz	l8255
 13981  00303C  0A80               	xorlw	128	; case 128
 13982  00303E  E0E9               	bz	l8257
 13983  003040  0A40               	xorlw	64	; case 192
 13984  003042  E0D2               	bz	l8255
 13985  003044                     l8265:
 13986                           
 13987                           ; BSR set to: 0
 13988                           ;doprnt.c: 1524: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 13989  003044  D83B               	call	PL465	;call to abstracted procedure
 13990  003046  50DE               	movf	postinc2,w,c
 13991  003048  10DE               	iorwf	postinc2,w,c
 13992  00304A  10DE               	iorwf	postinc2,w,c
 13993  00304C  E00E               	bz	l8269
 13994                           
 13995                           ; BSR set to: 0
 13996  00304E  D836               	call	PL465	;call to abstracted procedure
 13997  003050  D801               	call	u11768
 13998  003052  D00F               	goto	l8273
 13999  003054                     u11768:
 14000  003054  0005               	push	
 14001  003056  6EFA               	movwf	pclath,c
 14002  003058  50DE               	movf	postinc2,w,c
 14003  00305A  6EFD               	movwf	tosl,c
 14004  00305C  50DE               	movf	postinc2,w,c
 14005  00305E  6EFE               	movwf	tosh,c
 14006  003060  50DE               	movf	postinc2,w,c
 14007  003062  6EFF               	movwf	tosu,c
 14008  003064  50FA               	movf	pclath,w,c
 14009  003066  516B               	movf	__doprnt@c& (0+255),w,b
 14010  003068  0012               	return		;indir
 14011  00306A                     l8269:
 14012                           
 14013                           ; BSR set to: 0
 14014  00306A  D811               	call	PL437	;call to abstracted procedure
 14015  00306C  C06B  FFDF         	movff	__doprnt@c,indf2
 14016                           
 14017                           ; BSR set to: 0
 14018  003070  D82F               	call	PL487	;call to abstracted procedure
 14019  003072                     l8273:
 14020  003072  0100               	movlb	0	; () banked
 14021  003074  0761               	decf	__doprnt@prec& (0+255),f,b
 14022  003076  2961               	incf	__doprnt@prec& (0+255),w,b
 14023  003078  E1DE               	bnz	l8263
 14024  00307A                     l8275:
 14025  00307A  2A23               	incf	__doprnt@f,f,c
 14026  00307C  0423               	decf	__doprnt@f,w,c
 14027  00307E  D824               	call	PL469	;call to abstracted procedure
 14028  003080                     	if	1	;There is more than 1 active tblptr byte
 14029  003080  D812               	call	PL461	;call to abstracted procedure
 14030  003082  D851               	call	PL689	;call to abstracted procedure
 14031  003084  E001 D620          	bnz	l8107
 14032  003088                     l1619:
 14033                           
 14034                           ; BSR set to: 0
 14035                           ;doprnt.c: 1540: return 0;
 14036  003088  6A23               	clrf	?__doprnt,c
 14037  00308A  6A24               	clrf	?__doprnt+1,c
 14038                           
 14039                           ; BSR set to: 0
 14040  00308C  0012               	return		;funcret
 14041  00308E                     __end_of__doprnt:
 14042                           	opt stack 0
 14043  00308E                     PL437:
 14044                           	opt stack 20
 14045  00308E  516C               	movf	__doprnt@pb& (0+255),w,b
 14046  003090  6ED9               	movwf	fsr2l,c
 14047  003092  6ADA               	clrf	fsr2h,c
 14048  003094  CFDE F025          	movff	postinc2,??__doprnt
 14049  003098  CFDD F026          	movff	postdec2,??__doprnt+1
 14050  00309C  C025  FFD9         	movff	??__doprnt,fsr2l
 14051  0030A0  C026  FFDA         	movff	??__doprnt+1,fsr2h
 14052  0030A4  0012               	return	
 14053  0030A6                     __end_ofPL437:
 14054                           	opt stack 0
 14055  0030A6                     PL461:
 14056                           	opt stack 17
 14057  0030A6  0E10               	movlw	high __smallconst
 14058  0030A8  6EF7               	movwf	tblptrh,c
 14059  0030AA                     	endif
 14060  0030AA                     	if	0	;tblptru may be non-zero
 14061  0030AA                     	endif
 14062  0030AA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14063  0030AA  0E00               	movlw	low (__smallconst shr (0+16))
 14064  0030AC  6EF8               	movwf	tblptru,c
 14065  0030AE                     	endif
 14066  0030AE  0008               	tblrd		*
 14067  0030B0  0012               	return	
 14068  0030B2                     __end_ofPL461:
 14069                           	opt stack 0
 14070  0030B2                     PL463:
 14071                           	opt stack 20
 14072  0030B2                     	if	1	;There is more than 1 active tblptr byte
 14073  0030B2  0E10               	movlw	high __smallconst
 14074  0030B4  6EF7               	movwf	tblptrh,c
 14075  0030B6                     	endif
 14076  0030B6                     	if	0	;tblptru may be non-zero
 14077  0030B6                     	endif
 14078  0030B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14079  0030B6  0E00               	movlw	low (__smallconst shr (0+16))
 14080  0030B8  6EF8               	movwf	tblptru,c
 14081  0030BA                     	endif
 14082  0030BA  0012               	return	
 14083  0030BC                     __end_ofPL463:
 14084                           	opt stack 0
 14085  0030BC                     PL465:
 14086                           	opt stack 20
 14087  0030BC  516C               	movf	__doprnt@pb& (0+255),w,b
 14088  0030BE  6ED9               	movwf	fsr2l,c
 14089  0030C0  6ADA               	clrf	fsr2h,c
 14090  0030C2  0E02               	movlw	2
 14091  0030C4  26D9               	addwf	fsr2l,f,c
 14092  0030C6  0C02               	retlw	2
 14093  0030C8                     __end_ofPL465:
 14094                           	opt stack 0
 14095  0030C8                     PL469:
 14096                           	opt stack 20
 14097  0030C8  6E25               	movwf	??__doprnt& (0+255),c
 14098  0030CA  C025  FFF6         	movff	??__doprnt,tblptrl
 14099  0030CE  0012               	return	
 14100  0030D0                     __end_ofPL469:
 14101                           	opt stack 0
 14102  0030D0                     PL487:
 14103                           	opt stack 20
 14104  0030D0  516C               	movf	__doprnt@pb& (0+255),w,b
 14105  0030D2  6ED9               	movwf	fsr2l,c
 14106  0030D4  6ADA               	clrf	fsr2h,c
 14107  0030D6  2ADE               	incf	postinc2,f,c
 14108  0030D8  0E00               	movlw	0
 14109  0030DA  22DD               	addwfc	postdec2,f,c
 14110  0030DC  0C00               	retlw	0
 14111  0030DE                     __end_ofPL487:
 14112                           	opt stack 0
 14113  0030DE                     PL521:
 14114                           	opt stack 20
 14115  0030DE  5024               	movf	__doprnt@ap,w,c
 14116  0030E0  6ED9               	movwf	fsr2l,c
 14117  0030E2  6ADA               	clrf	fsr2h,c
 14118  0030E4  0E02               	movlw	2
 14119  0030E6  26DF               	addwf	indf2,f,c
 14120  0030E8  5CDF               	subwf	indf2,w,c
 14121  0030EA  6ED9               	movwf	fsr2l,c
 14122  0030EC  6ADA               	clrf	fsr2h,c
 14123  0030EE  0012               	return	
 14124  0030F0                     __end_ofPL521:
 14125                           	opt stack 0
 14126  0030F0                     PL577:
 14127                           	opt stack 20
 14128  0030F0  0D02               	mullw	2
 14129  0030F2  50F3               	movf	prodl,w,c
 14130  0030F4  0F01               	addlw	low _dpowers
 14131  0030F6  0012               	return	
 14132  0030F8                     __end_ofPL577:
 14133                           	opt stack 0
 14134  0030F8                     PL583:
 14135                           	opt stack 20
 14136  0030F8  0D02               	mullw	2
 14137  0030FA  50F3               	movf	prodl,w,c
 14138  0030FC  0F0B               	addlw	low _hexpowers
 14139  0030FE  0012               	return	
 14140  003100                     __end_ofPL583:
 14141                           	opt stack 0
 14142  003100                     PL655:
 14143                           	opt stack 20
 14144  003100  C064  FFF6         	movff	__doprnt@cp,tblptrl
 14145  003104  C065  FFF7         	movff	__doprnt@cp+1,tblptrh
 14146  003108  0E00               	movlw	low (__smallconst shr (0+16))
 14147  00310A  6EF8               	movwf	tblptru,c
 14148  00310C  0012               	return	
 14149  00310E                     __end_ofPL655:
 14150                           	opt stack 0
 14151  00310E                     PL659:
 14152                           	opt stack 20
 14153  00310E  0009               	tblrd		*+
 14154  003110  CFF5 F019          	movff	tablat,___lwdiv@divisor
 14155  003114  000A               	tblrd		*-
 14156  003116  CFF5 F01A          	movff	tablat,___lwdiv@divisor+1
 14157  00311A  0012               	return	
 14158  00311C                     __end_ofPL659:
 14159                           	opt stack 0
 14160  00311C                     PL687:
 14161                           	opt stack 20
 14162  00311C  C066  F025         	movff	__doprnt@flag,??__doprnt
 14163  003120  0E03               	movlw	3
 14164  003122  1625               	andwf	??__doprnt,f,c
 14165  003124  0C03               	retlw	3
 14166  003126                     __end_ofPL687:
 14167                           	opt stack 0
 14168  003126                     PL689:
 14169                           	opt stack 20
 14170  003126  CFF5 F06B          	movff	tablat,__doprnt@c
 14171  00312A  0100               	movlb	0	; () banked
 14172  00312C  516B               	movf	__doprnt@c& (0+255),w,b
 14173  00312E  0012               	return	
 14174  003130                     __end_ofPL689:
 14175                           	opt stack 0
 14176  003130                     PL733:
 14177                           	opt stack 20
 14178  003130  C067  F017         	movff	__doprnt@val,___lwdiv@dividend
 14179  003134  C068  F018         	movff	__doprnt@val+1,___lwdiv@dividend+1
 14180  003138  0012               	return	
 14181  00313A                     __end_ofPL733:
 14182                           	opt stack 0
 14183  00313A                     PL735:
 14184                           	opt stack 20
 14185  00313A  CFDE F067          	movff	postinc2,__doprnt@val
 14186  00313E  CFDE F068          	movff	postinc2,__doprnt@val+1
 14187  003142  0012               	return	
 14188  003144                     __end_ofPL735:
 14189                           	opt stack 0
 14190                           tosu	equ	0xFFF
 14191                           tosh	equ	0xFFE
 14192                           tosl	equ	0xFFD
 14193                           pclath	equ	0xFFA
 14194                           tblptru	equ	0xFF8
 14195                           tblptrh	equ	0xFF7
 14196                           tblptrl	equ	0xFF6
 14197                           tablat	equ	0xFF5
 14198                           prodh	equ	0xFF4
 14199                           prodl	equ	0xFF3
 14200                           intcon	equ	0xFF2
 14201                           indf0	equ	0xFEF
 14202                           postinc0	equ	0xFEE
 14203                           fsr0h	equ	0xFEA
 14204                           fsr0l	equ	0xFE9
 14205                           wreg	equ	0xFE8
 14206                           postinc1	equ	0xFE6
 14207                           postdec1	equ	0xFE5
 14208                           plusw1	equ	0xFE3
 14209                           fsr1h	equ	0xFE2
 14210                           fsr1l	equ	0xFE1
 14211                           bsr	equ	0xFE0
 14212                           indf2	equ	0xFDF
 14213                           postinc2	equ	0xFDE
 14214                           postdec2	equ	0xFDD
 14215                           plusw2	equ	0xFDB
 14216                           fsr2h	equ	0xFDA
 14217                           fsr2l	equ	0xFD9
 14218                           status	equ	0xFD8
 14219                           
 14220 ;; *************** function _putch *****************
 14221 ;; Defined at:
 14222 ;;		line 77 in file "../board_support_package/picdem2_net/uart.c"
 14223 ;; Parameters:    Size  Location     Type
 14224 ;;  data            1    wreg     unsigned char 
 14225 ;; Auto vars:     Size  Location     Type
 14226 ;;  data            1   22[COMRAM] unsigned char 
 14227 ;; Return value:  Size  Location     Type
 14228 ;;		None               void
 14229 ;; Registers used:
 14230 ;;		wreg, status,2, status,0
 14231 ;; Tracked objects:
 14232 ;;		On entry : 0/0
 14233 ;;		On exit  : 0/0
 14234 ;;		Unchanged: 0/0
 14235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14237 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14239 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14240 ;;Total ram usage:        1 bytes
 14241 ;; Hardware stack levels used:    1
 14242 ;; Hardware stack levels required when called:    8
 14243 ;; This function calls:
 14244 ;;		Nothing
 14245 ;; This function is called by:
 14246 ;;		_printf
 14247 ;;		__doprnt
 14248 ;; This function uses a non-reentrant model
 14249 ;;
 14250                           
 14251                           	psect	text61
 14252  006630                     __ptext61:
 14253                           	opt stack 0
 14254  006630                     _putch:
 14255                           	opt stack 20
 14256                           
 14257                           ; BSR set to: 0
 14258                           ;incstack = 0
 14259                           ;putch@data stored from wreg
 14260  006630  6E17               	movwf	putch@data,c
 14261                           
 14262                           ;uart.c: 79: if(data == '\n')
 14263  006632  0E0A               	movlw	10
 14264  006634  1817               	xorwf	putch@data,w,c
 14265  006636  E104               	bnz	l350
 14266  006638                     l347:
 14267  006638  A89E               	btfss	3998,4,c	;volatile
 14268  00663A  D7FE               	goto	l347
 14269                           
 14270                           ;uart.c: 83: TXREG1 = '\r';
 14271  00663C  0E0D               	movlw	13
 14272  00663E  6EAD               	movwf	4013,c	;volatile
 14273  006640                     l350:
 14274  006640  A89E               	btfss	3998,4,c	;volatile
 14275  006642  D7FE               	goto	l350
 14276                           
 14277                           ;uart.c: 87: TXREG1 = data;
 14278  006644  C017  FFAD         	movff	putch@data,4013	;volatile
 14279  006648  0012               	return		;funcret
 14280  00664A                     __end_of_putch:
 14281                           	opt stack 0
 14282                           tosu	equ	0xFFF
 14283                           tosh	equ	0xFFE
 14284                           tosl	equ	0xFFD
 14285                           pclath	equ	0xFFA
 14286                           tblptru	equ	0xFF8
 14287                           tblptrh	equ	0xFF7
 14288                           tblptrl	equ	0xFF6
 14289                           tablat	equ	0xFF5
 14290                           prodh	equ	0xFF4
 14291                           prodl	equ	0xFF3
 14292                           intcon	equ	0xFF2
 14293                           indf0	equ	0xFEF
 14294                           postinc0	equ	0xFEE
 14295                           fsr0h	equ	0xFEA
 14296                           fsr0l	equ	0xFE9
 14297                           wreg	equ	0xFE8
 14298                           postinc1	equ	0xFE6
 14299                           postdec1	equ	0xFE5
 14300                           plusw1	equ	0xFE3
 14301                           fsr1h	equ	0xFE2
 14302                           fsr1l	equ	0xFE1
 14303                           bsr	equ	0xFE0
 14304                           indf2	equ	0xFDF
 14305                           postinc2	equ	0xFDE
 14306                           postdec2	equ	0xFDD
 14307                           plusw2	equ	0xFDB
 14308                           fsr2h	equ	0xFDA
 14309                           fsr2l	equ	0xFD9
 14310                           status	equ	0xFD8
 14311                           
 14312 ;; *************** function _isdigit *****************
 14313 ;; Defined at:
 14314 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
 14315 ;; Parameters:    Size  Location     Type
 14316 ;;  c               1    wreg     unsigned char 
 14317 ;; Auto vars:     Size  Location     Type
 14318 ;;  c               1   24[COMRAM] unsigned char 
 14319 ;; Return value:  Size  Location     Type
 14320 ;;		None               void
 14321 ;; Registers used:
 14322 ;;		wreg, status,2, status,0
 14323 ;; Tracked objects:
 14324 ;;		On entry : F/0
 14325 ;;		On exit  : 0/0
 14326 ;;		Unchanged: 0/0
 14327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14329 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14330 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14331 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14332 ;;Total ram usage:        3 bytes
 14333 ;; Hardware stack levels used:    1
 14334 ;; Hardware stack levels required when called:    8
 14335 ;; This function calls:
 14336 ;;		Nothing
 14337 ;; This function is called by:
 14338 ;;		__doprnt
 14339 ;; This function uses a non-reentrant model
 14340 ;;
 14341                           
 14342                           	psect	text62
 14343  0065DE                     __ptext62:
 14344                           	opt stack 0
 14345  0065DE                     _isdigit:
 14346                           	opt stack 20
 14347                           
 14348                           ;incstack = 0
 14349                           ;isdigit@c stored from wreg
 14350  0065DE  6E19               	movwf	isdigit@c,c
 14351  0065E0  6A18               	clrf	_isdigit$4432,c
 14352  0065E2  0E3A               	movlw	58
 14353  0065E4  6019               	cpfslt	isdigit@c,c
 14354  0065E6  D005               	goto	l7969
 14355  0065E8  0E2F               	movlw	47
 14356  0065EA  6419               	cpfsgt	isdigit@c,c
 14357  0065EC  D002               	goto	l7969
 14358  0065EE  0E01               	movlw	1
 14359  0065F0  6E18               	movwf	_isdigit$4432,c
 14360  0065F2                     l7969:
 14361  0065F2  C018  F017         	movff	_isdigit$4432,??_isdigit
 14362  0065F6  3017               	rrcf	??_isdigit,w,c
 14363  0065F8  0012               	return		;funcret
 14364  0065FA                     __end_of_isdigit:
 14365                           	opt stack 0
 14366                           tosu	equ	0xFFF
 14367                           tosh	equ	0xFFE
 14368                           tosl	equ	0xFFD
 14369                           pclath	equ	0xFFA
 14370                           tblptru	equ	0xFF8
 14371                           tblptrh	equ	0xFF7
 14372                           tblptrl	equ	0xFF6
 14373                           tablat	equ	0xFF5
 14374                           prodh	equ	0xFF4
 14375                           prodl	equ	0xFF3
 14376                           intcon	equ	0xFF2
 14377                           indf0	equ	0xFEF
 14378                           postinc0	equ	0xFEE
 14379                           fsr0h	equ	0xFEA
 14380                           fsr0l	equ	0xFE9
 14381                           wreg	equ	0xFE8
 14382                           postinc1	equ	0xFE6
 14383                           postdec1	equ	0xFE5
 14384                           plusw1	equ	0xFE3
 14385                           fsr1h	equ	0xFE2
 14386                           fsr1l	equ	0xFE1
 14387                           bsr	equ	0xFE0
 14388                           indf2	equ	0xFDF
 14389                           postinc2	equ	0xFDE
 14390                           postdec2	equ	0xFDD
 14391                           plusw2	equ	0xFDB
 14392                           fsr2h	equ	0xFDA
 14393                           fsr2l	equ	0xFD9
 14394                           status	equ	0xFD8
 14395                           
 14396 ;; *************** function ___wmul *****************
 14397 ;; Defined at:
 14398 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 14399 ;; Parameters:    Size  Location     Type
 14400 ;;  multiplier      2   22[COMRAM] unsigned int 
 14401 ;;  multiplicand    2   24[COMRAM] unsigned int 
 14402 ;; Auto vars:     Size  Location     Type
 14403 ;;  product         2   26[COMRAM] unsigned int 
 14404 ;; Return value:  Size  Location     Type
 14405 ;;                  2   22[COMRAM] unsigned int 
 14406 ;; Registers used:
 14407 ;;		wreg, status,2, status,0, prodl, prodh
 14408 ;; Tracked objects:
 14409 ;;		On entry : 0/0
 14410 ;;		On exit  : 0/0
 14411 ;;		Unchanged: 0/0
 14412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14413 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14414 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14416 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14417 ;;Total ram usage:        6 bytes
 14418 ;; Hardware stack levels used:    1
 14419 ;; Hardware stack levels required when called:    8
 14420 ;; This function calls:
 14421 ;;		Nothing
 14422 ;; This function is called by:
 14423 ;;		_ETH_Copy
 14424 ;;		__doprnt
 14425 ;; This function uses a non-reentrant model
 14426 ;;
 14427                           
 14428                           	psect	text63
 14429  0064B6                     __ptext63:
 14430                           	opt stack 0
 14431  0064B6                     ___wmul:
 14432                           	opt stack 20
 14433                           
 14434                           ;incstack = 0
 14435  0064B6  5017               	movf	___wmul@multiplier,w,c
 14436  0064B8  0219               	mulwf	___wmul@multiplicand,c
 14437  0064BA  CFF3 F01B          	movff	prodl,___wmul@product
 14438  0064BE  CFF4 F01C          	movff	prodh,___wmul@product+1
 14439  0064C2  5017               	movf	___wmul@multiplier,w,c
 14440  0064C4  021A               	mulwf	___wmul@multiplicand+1,c
 14441  0064C6  50F3               	movf	prodl,w,c
 14442  0064C8  261C               	addwf	___wmul@product+1,f,c
 14443  0064CA  5018               	movf	___wmul@multiplier+1,w,c
 14444  0064CC  0219               	mulwf	___wmul@multiplicand,c
 14445  0064CE  50F3               	movf	prodl,w,c
 14446  0064D0  261C               	addwf	___wmul@product+1,f,c
 14447  0064D2  C01B  F017         	movff	___wmul@product,?___wmul
 14448  0064D6  C01C  F018         	movff	___wmul@product+1,?___wmul+1
 14449  0064DA  0012               	return		;funcret
 14450  0064DC                     __end_of___wmul:
 14451                           	opt stack 0
 14452                           tosu	equ	0xFFF
 14453                           tosh	equ	0xFFE
 14454                           tosl	equ	0xFFD
 14455                           pclath	equ	0xFFA
 14456                           tblptru	equ	0xFF8
 14457                           tblptrh	equ	0xFF7
 14458                           tblptrl	equ	0xFF6
 14459                           tablat	equ	0xFF5
 14460                           prodh	equ	0xFF4
 14461                           prodl	equ	0xFF3
 14462                           intcon	equ	0xFF2
 14463                           indf0	equ	0xFEF
 14464                           postinc0	equ	0xFEE
 14465                           fsr0h	equ	0xFEA
 14466                           fsr0l	equ	0xFE9
 14467                           wreg	equ	0xFE8
 14468                           postinc1	equ	0xFE6
 14469                           postdec1	equ	0xFE5
 14470                           plusw1	equ	0xFE3
 14471                           fsr1h	equ	0xFE2
 14472                           fsr1l	equ	0xFE1
 14473                           bsr	equ	0xFE0
 14474                           indf2	equ	0xFDF
 14475                           postinc2	equ	0xFDE
 14476                           postdec2	equ	0xFDD
 14477                           plusw2	equ	0xFDB
 14478                           fsr2h	equ	0xFDA
 14479                           fsr2l	equ	0xFD9
 14480                           status	equ	0xFD8
 14481                           
 14482 ;; *************** function ___lwmod *****************
 14483 ;; Defined at:
 14484 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
 14485 ;; Parameters:    Size  Location     Type
 14486 ;;  dividend        2   29[COMRAM] unsigned int 
 14487 ;;  divisor         2   31[COMRAM] unsigned int 
 14488 ;; Auto vars:     Size  Location     Type
 14489 ;;  counter         1   33[COMRAM] unsigned char 
 14490 ;; Return value:  Size  Location     Type
 14491 ;;                  2   29[COMRAM] unsigned int 
 14492 ;; Registers used:
 14493 ;;		wreg, status,2, status,0
 14494 ;; Tracked objects:
 14495 ;;		On entry : F/0
 14496 ;;		On exit  : F/0
 14497 ;;		Unchanged: F/0
 14498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14499 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14500 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14502 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14503 ;;Total ram usage:        5 bytes
 14504 ;; Hardware stack levels used:    1
 14505 ;; Hardware stack levels required when called:    8
 14506 ;; This function calls:
 14507 ;;		Nothing
 14508 ;; This function is called by:
 14509 ;;		__doprnt
 14510 ;; This function uses a non-reentrant model
 14511 ;;
 14512                           
 14513                           	psect	text64
 14514  00610C                     __ptext64:
 14515                           	opt stack 0
 14516  00610C                     ___lwmod:
 14517                           	opt stack 20
 14518                           
 14519                           ; BSR set to: 0
 14520                           
 14521                           ;incstack = 0
 14522  00610C  5020               	movf	___lwmod@divisor,w,c
 14523  00610E  1021               	iorwf	___lwmod@divisor+1,w,c
 14524  006110  E017               	bz	l2097
 14525                           
 14526                           ; BSR set to: 0
 14527  006112  0E01               	movlw	1
 14528  006114  6E22               	movwf	___lwmod@counter,c
 14529  006116  D004               	goto	l8007
 14530  006118                     l8005:
 14531                           
 14532                           ; BSR set to: 0
 14533  006118  90D8               	bcf	status,0,c
 14534  00611A  3620               	rlcf	___lwmod@divisor,f,c
 14535  00611C  3621               	rlcf	___lwmod@divisor+1,f,c
 14536  00611E  2A22               	incf	___lwmod@counter,f,c
 14537  006120                     l8007:
 14538                           
 14539                           ; BSR set to: 0
 14540  006120  AE21               	btfss	___lwmod@divisor+1,7,c
 14541  006122  D7FA               	goto	l8005
 14542  006124                     l8009:
 14543                           
 14544                           ; BSR set to: 0
 14545  006124  5020               	movf	___lwmod@divisor,w,c
 14546  006126  5C1E               	subwf	___lwmod@dividend,w,c
 14547  006128  5021               	movf	___lwmod@divisor+1,w,c
 14548  00612A  581F               	subwfb	___lwmod@dividend+1,w,c
 14549  00612C  E304               	bnc	l8013
 14550                           
 14551                           ; BSR set to: 0
 14552  00612E  5020               	movf	___lwmod@divisor,w,c
 14553  006130  5E1E               	subwf	___lwmod@dividend,f,c
 14554  006132  5021               	movf	___lwmod@divisor+1,w,c
 14555  006134  5A1F               	subwfb	___lwmod@dividend+1,f,c
 14556  006136                     l8013:
 14557                           
 14558                           ; BSR set to: 0
 14559  006136  90D8               	bcf	status,0,c
 14560  006138  3221               	rrcf	___lwmod@divisor+1,f,c
 14561  00613A  3220               	rrcf	___lwmod@divisor,f,c
 14562                           
 14563                           ; BSR set to: 0
 14564  00613C  2E22               	decfsz	___lwmod@counter,f,c
 14565  00613E  D7F2               	goto	l8009
 14566  006140                     l2097:
 14567                           
 14568                           ; BSR set to: 0
 14569  006140  C01E  F01E         	movff	___lwmod@dividend,?___lwmod
 14570  006144  C01F  F01F         	movff	___lwmod@dividend+1,?___lwmod+1
 14571                           
 14572                           ; BSR set to: 0
 14573  006148  0012               	return		;funcret
 14574  00614A                     __end_of___lwmod:
 14575                           	opt stack 0
 14576                           tosu	equ	0xFFF
 14577                           tosh	equ	0xFFE
 14578                           tosl	equ	0xFFD
 14579                           pclath	equ	0xFFA
 14580                           tblptru	equ	0xFF8
 14581                           tblptrh	equ	0xFF7
 14582                           tblptrl	equ	0xFF6
 14583                           tablat	equ	0xFF5
 14584                           prodh	equ	0xFF4
 14585                           prodl	equ	0xFF3
 14586                           intcon	equ	0xFF2
 14587                           indf0	equ	0xFEF
 14588                           postinc0	equ	0xFEE
 14589                           fsr0h	equ	0xFEA
 14590                           fsr0l	equ	0xFE9
 14591                           wreg	equ	0xFE8
 14592                           postinc1	equ	0xFE6
 14593                           postdec1	equ	0xFE5
 14594                           plusw1	equ	0xFE3
 14595                           fsr1h	equ	0xFE2
 14596                           fsr1l	equ	0xFE1
 14597                           bsr	equ	0xFE0
 14598                           indf2	equ	0xFDF
 14599                           postinc2	equ	0xFDE
 14600                           postdec2	equ	0xFDD
 14601                           plusw2	equ	0xFDB
 14602                           fsr2h	equ	0xFDA
 14603                           fsr2l	equ	0xFD9
 14604                           status	equ	0xFD8
 14605                           
 14606 ;; *************** function ___lwdiv *****************
 14607 ;; Defined at:
 14608 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 14609 ;; Parameters:    Size  Location     Type
 14610 ;;  dividend        2   22[COMRAM] unsigned int 
 14611 ;;  divisor         2   24[COMRAM] unsigned int 
 14612 ;; Auto vars:     Size  Location     Type
 14613 ;;  quotient        2   27[COMRAM] unsigned int 
 14614 ;;  counter         1   26[COMRAM] unsigned char 
 14615 ;; Return value:  Size  Location     Type
 14616 ;;                  2   22[COMRAM] unsigned int 
 14617 ;; Registers used:
 14618 ;;		wreg, status,2, status,0
 14619 ;; Tracked objects:
 14620 ;;		On entry : F/0
 14621 ;;		On exit  : F/0
 14622 ;;		Unchanged: F/0
 14623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14624 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14625 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14627 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14628 ;;Total ram usage:        7 bytes
 14629 ;; Hardware stack levels used:    1
 14630 ;; Hardware stack levels required when called:    8
 14631 ;; This function calls:
 14632 ;;		Nothing
 14633 ;; This function is called by:
 14634 ;;		__doprnt
 14635 ;; This function uses a non-reentrant model
 14636 ;;
 14637                           
 14638                           	psect	text65
 14639  005FB0                     __ptext65:
 14640                           	opt stack 0
 14641  005FB0                     ___lwdiv:
 14642                           	opt stack 20
 14643                           
 14644                           ; BSR set to: 0
 14645                           
 14646                           ; BSR set to: 0
 14647                           ;incstack = 0
 14648  005FB0  6A1C               	clrf	___lwdiv@quotient,c
 14649  005FB2  6A1D               	clrf	___lwdiv@quotient+1,c
 14650                           
 14651                           ; BSR set to: 0
 14652  005FB4  5019               	movf	___lwdiv@divisor,w,c
 14653  005FB6  101A               	iorwf	___lwdiv@divisor+1,w,c
 14654  005FB8  E01B               	bz	l2087
 14655                           
 14656                           ; BSR set to: 0
 14657  005FBA  0E01               	movlw	1
 14658  005FBC  6E1B               	movwf	___lwdiv@counter,c
 14659  005FBE  D004               	goto	l7987
 14660  005FC0                     l7985:
 14661                           
 14662                           ; BSR set to: 0
 14663  005FC0  90D8               	bcf	status,0,c
 14664  005FC2  3619               	rlcf	___lwdiv@divisor,f,c
 14665  005FC4  361A               	rlcf	___lwdiv@divisor+1,f,c
 14666  005FC6  2A1B               	incf	___lwdiv@counter,f,c
 14667  005FC8                     l7987:
 14668                           
 14669                           ; BSR set to: 0
 14670  005FC8  AE1A               	btfss	___lwdiv@divisor+1,7,c
 14671  005FCA  D7FA               	goto	l7985
 14672  005FCC                     l7989:
 14673                           
 14674                           ; BSR set to: 0
 14675  005FCC  90D8               	bcf	status,0,c
 14676  005FCE  361C               	rlcf	___lwdiv@quotient,f,c
 14677  005FD0  361D               	rlcf	___lwdiv@quotient+1,f,c
 14678                           
 14679                           ; BSR set to: 0
 14680  005FD2  5019               	movf	___lwdiv@divisor,w,c
 14681  005FD4  5C17               	subwf	___lwdiv@dividend,w,c
 14682  005FD6  501A               	movf	___lwdiv@divisor+1,w,c
 14683  005FD8  5818               	subwfb	___lwdiv@dividend+1,w,c
 14684  005FDA  E305               	bnc	l7997
 14685                           
 14686                           ; BSR set to: 0
 14687  005FDC  5019               	movf	___lwdiv@divisor,w,c
 14688  005FDE  5E17               	subwf	___lwdiv@dividend,f,c
 14689  005FE0  501A               	movf	___lwdiv@divisor+1,w,c
 14690  005FE2  5A18               	subwfb	___lwdiv@dividend+1,f,c
 14691                           
 14692                           ; BSR set to: 0
 14693  005FE4  801C               	bsf	___lwdiv@quotient,0,c
 14694  005FE6                     l7997:
 14695                           
 14696                           ; BSR set to: 0
 14697  005FE6  90D8               	bcf	status,0,c
 14698  005FE8  321A               	rrcf	___lwdiv@divisor+1,f,c
 14699  005FEA  3219               	rrcf	___lwdiv@divisor,f,c
 14700                           
 14701                           ; BSR set to: 0
 14702  005FEC  2E1B               	decfsz	___lwdiv@counter,f,c
 14703  005FEE  D7EE               	goto	l7989
 14704  005FF0                     l2087:
 14705                           
 14706                           ; BSR set to: 0
 14707  005FF0  C01C  F017         	movff	___lwdiv@quotient,?___lwdiv
 14708  005FF4  C01D  F018         	movff	___lwdiv@quotient+1,?___lwdiv+1
 14709                           
 14710                           ; BSR set to: 0
 14711  005FF8  0012               	return		;funcret
 14712  005FFA                     __end_of___lwdiv:
 14713                           	opt stack 0
 14714                           tosu	equ	0xFFF
 14715                           tosh	equ	0xFFE
 14716                           tosl	equ	0xFFD
 14717                           pclath	equ	0xFFA
 14718                           tblptru	equ	0xFF8
 14719                           tblptrh	equ	0xFF7
 14720                           tblptrl	equ	0xFF6
 14721                           tablat	equ	0xFF5
 14722                           prodh	equ	0xFF4
 14723                           prodl	equ	0xFF3
 14724                           intcon	equ	0xFF2
 14725                           indf0	equ	0xFEF
 14726                           postinc0	equ	0xFEE
 14727                           fsr0h	equ	0xFEA
 14728                           fsr0l	equ	0xFE9
 14729                           wreg	equ	0xFE8
 14730                           postinc1	equ	0xFE6
 14731                           postdec1	equ	0xFE5
 14732                           plusw1	equ	0xFE3
 14733                           fsr1h	equ	0xFE2
 14734                           fsr1l	equ	0xFE1
 14735                           bsr	equ	0xFE0
 14736                           indf2	equ	0xFDF
 14737                           postinc2	equ	0xFDE
 14738                           postdec2	equ	0xFDD
 14739                           plusw2	equ	0xFDB
 14740                           fsr2h	equ	0xFDA
 14741                           fsr2l	equ	0xFD9
 14742                           status	equ	0xFD8
 14743                           
 14744 ;; *************** function _memset *****************
 14745 ;; Defined at:
 14746 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 14747 ;; Parameters:    Size  Location     Type
 14748 ;;  p1              2   22[COMRAM] PTR void 
 14749 ;;		 -> main@str(32), DEMO_TCP_Client@strTmp(17), 
 14750 ;;  c               2   24[COMRAM] int 
 14751 ;;  n               2   26[COMRAM] unsigned int 
 14752 ;; Auto vars:     Size  Location     Type
 14753 ;;  p               2   28[COMRAM] PTR unsigned char 
 14754 ;;		 -> main@str(32), DEMO_TCP_Client@strTmp(17), 
 14755 ;; Return value:  Size  Location     Type
 14756 ;;                  2   22[COMRAM] PTR void 
 14757 ;; Registers used:
 14758 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14759 ;; Tracked objects:
 14760 ;;		On entry : F/2
 14761 ;;		On exit  : F/2
 14762 ;;		Unchanged: F/0
 14763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14764 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14765 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14767 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14768 ;;Total ram usage:        8 bytes
 14769 ;; Hardware stack levels used:    1
 14770 ;; Hardware stack levels required when called:    8
 14771 ;; This function calls:
 14772 ;;		Nothing
 14773 ;; This function is called by:
 14774 ;;		_DEMO_TCP_Client
 14775 ;;		_main
 14776 ;; This function uses a non-reentrant model
 14777 ;;
 14778                           
 14779                           	psect	text66
 14780  0063C6                     __ptext66:
 14781                           	opt stack 0
 14782  0063C6                     _memset:
 14783                           	opt stack 22
 14784                           
 14785                           ; BSR set to: 2
 14786                           
 14787                           ; BSR set to: 0
 14788                           ;incstack = 0
 14789  0063C6  C017  F01D         	movff	memset@p1,memset@p
 14790  0063CA  C018  F01E         	movff	memset@p1+1,memset@p+1
 14791  0063CE  D008               	goto	l10131
 14792  0063D0                     l10127:
 14793                           
 14794                           ; BSR set to: 2
 14795  0063D0  C01D  FFD9         	movff	memset@p,fsr2l
 14796  0063D4  C01E  FFDA         	movff	memset@p+1,fsr2h
 14797  0063D8  C019  FFDF         	movff	memset@c,indf2
 14798                           
 14799                           ; BSR set to: 2
 14800  0063DC  4A1D               	infsnz	memset@p,f,c
 14801  0063DE  2A1E               	incf	memset@p+1,f,c
 14802  0063E0                     l10131:
 14803                           
 14804                           ; BSR set to: 2
 14805  0063E0  061B               	decf	memset@n,f,c
 14806  0063E2  A0D8               	btfss	status,0,c
 14807  0063E4  061C               	decf	memset@n+1,f,c
 14808  0063E6  281B               	incf	memset@n,w,c
 14809  0063E8  E1F3               	bnz	l10127
 14810  0063EA  281C               	incf	memset@n+1,w,c
 14811  0063EC  E1F1               	bnz	l10127
 14812                           
 14813                           ; BSR set to: 2
 14814  0063EE  0012               	return		;funcret
 14815  0063F0                     __end_of_memset:
 14816                           	opt stack 0
 14817                           tosu	equ	0xFFF
 14818                           tosh	equ	0xFFE
 14819                           tosl	equ	0xFFD
 14820                           pclath	equ	0xFFA
 14821                           tblptru	equ	0xFF8
 14822                           tblptrh	equ	0xFF7
 14823                           tblptrl	equ	0xFF6
 14824                           tablat	equ	0xFF5
 14825                           prodh	equ	0xFF4
 14826                           prodl	equ	0xFF3
 14827                           intcon	equ	0xFF2
 14828                           indf0	equ	0xFEF
 14829                           postinc0	equ	0xFEE
 14830                           fsr0h	equ	0xFEA
 14831                           fsr0l	equ	0xFE9
 14832                           wreg	equ	0xFE8
 14833                           postinc1	equ	0xFE6
 14834                           postdec1	equ	0xFE5
 14835                           plusw1	equ	0xFE3
 14836                           fsr1h	equ	0xFE2
 14837                           fsr1l	equ	0xFE1
 14838                           bsr	equ	0xFE0
 14839                           indf2	equ	0xFDF
 14840                           postinc2	equ	0xFDE
 14841                           postdec2	equ	0xFDD
 14842                           plusw2	equ	0xFDB
 14843                           fsr2h	equ	0xFDA
 14844                           fsr2l	equ	0xFD9
 14845                           status	equ	0xFD8
 14846                           
 14847 ;; *************** function _lcd_puts *****************
 14848 ;; Defined at:
 14849 ;;		line 86 in file "../board_support_package/picdem2_net/lcd.c"
 14850 ;; Parameters:    Size  Location     Type
 14851 ;;  s               2   24[COMRAM] PTR const unsigned char 
 14852 ;;		 -> main@str(32), DEMO_TCP_Client@strTmp(17), 
 14853 ;; Auto vars:     Size  Location     Type
 14854 ;;		None
 14855 ;; Return value:  Size  Location     Type
 14856 ;;		None               void
 14857 ;; Registers used:
 14858 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14859 ;; Tracked objects:
 14860 ;;		On entry : 0/0
 14861 ;;		On exit  : 0/0
 14862 ;;		Unchanged: 0/0
 14863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14864 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14867 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14868 ;;Total ram usage:        2 bytes
 14869 ;; Hardware stack levels used:    1
 14870 ;; Hardware stack levels required when called:   10
 14871 ;; This function calls:
 14872 ;;		_lcd_putch
 14873 ;; This function is called by:
 14874 ;;		_DEMO_TCP_Client
 14875 ;;		_main
 14876 ;; This function uses a non-reentrant model
 14877 ;;
 14878                           
 14879                           	psect	text67
 14880  0065A4                     __ptext67:
 14881                           	opt stack 0
 14882  0065A4                     _lcd_puts:
 14883                           	opt stack 20
 14884                           
 14885                           ;lcd.c: 88: while(*s)
 14886                           
 14887                           ; BSR set to: 2
 14888                           ;incstack = 0
 14889  0065A4  D005               	goto	l9759
 14890  0065A6                     l9755:
 14891                           
 14892                           ;lcd.c: 89: lcd_putch(*s++);
 14893  0065A6  D807               	call	PL677	;call to abstracted procedure
 14894  0065A8  ECFD  F032         	call	_lcd_putch
 14895  0065AC  4A19               	infsnz	lcd_puts@s,f,c
 14896  0065AE  2A1A               	incf	lcd_puts@s+1,f,c
 14897  0065B0                     l9759:
 14898  0065B0  D802               	call	PL677	;call to abstracted procedure
 14899  0065B2  E1F9               	bnz	l9755
 14900  0065B4  0012               	return		;funcret
 14901  0065B6                     __end_of_lcd_puts:
 14902                           	opt stack 0
 14903  0065B6                     PL677:
 14904                           	opt stack 20
 14905  0065B6  C019  FFD9         	movff	lcd_puts@s,fsr2l
 14906  0065BA  C01A  FFDA         	movff	lcd_puts@s+1,fsr2h
 14907  0065BE  50DF               	movf	indf2,w,c
 14908  0065C0  0012               	return	
 14909  0065C2                     __end_ofPL677:
 14910                           	opt stack 0
 14911                           tosu	equ	0xFFF
 14912                           tosh	equ	0xFFE
 14913                           tosl	equ	0xFFD
 14914                           pclath	equ	0xFFA
 14915                           tblptru	equ	0xFF8
 14916                           tblptrh	equ	0xFF7
 14917                           tblptrl	equ	0xFF6
 14918                           tablat	equ	0xFF5
 14919                           prodh	equ	0xFF4
 14920                           prodl	equ	0xFF3
 14921                           intcon	equ	0xFF2
 14922                           indf0	equ	0xFEF
 14923                           postinc0	equ	0xFEE
 14924                           fsr0h	equ	0xFEA
 14925                           fsr0l	equ	0xFE9
 14926                           wreg	equ	0xFE8
 14927                           postinc1	equ	0xFE6
 14928                           postdec1	equ	0xFE5
 14929                           plusw1	equ	0xFE3
 14930                           fsr1h	equ	0xFE2
 14931                           fsr1l	equ	0xFE1
 14932                           bsr	equ	0xFE0
 14933                           indf2	equ	0xFDF
 14934                           postinc2	equ	0xFDE
 14935                           postdec2	equ	0xFDD
 14936                           plusw2	equ	0xFDB
 14937                           fsr2h	equ	0xFDA
 14938                           fsr2l	equ	0xFD9
 14939                           status	equ	0xFD8
 14940                           
 14941 ;; *************** function _lcd_putch *****************
 14942 ;; Defined at:
 14943 ;;		line 76 in file "../board_support_package/picdem2_net/lcd.c"
 14944 ;; Parameters:    Size  Location     Type
 14945 ;;  c               1    wreg     unsigned char 
 14946 ;; Auto vars:     Size  Location     Type
 14947 ;;  c               1   23[COMRAM] unsigned char 
 14948 ;; Return value:  Size  Location     Type
 14949 ;;		None               void
 14950 ;; Registers used:
 14951 ;;		wreg, status,2, status,0, cstack
 14952 ;; Tracked objects:
 14953 ;;		On entry : 0/0
 14954 ;;		On exit  : 0/0
 14955 ;;		Unchanged: 0/0
 14956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14958 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14960 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14961 ;;Total ram usage:        1 bytes
 14962 ;; Hardware stack levels used:    1
 14963 ;; Hardware stack levels required when called:    9
 14964 ;; This function calls:
 14965 ;;		_lcd_busy
 14966 ;;		_lcd_write_data
 14967 ;; This function is called by:
 14968 ;;		_lcd_puts
 14969 ;; This function uses a non-reentrant model
 14970 ;;
 14971                           
 14972                           	psect	text68
 14973  0065FA                     __ptext68:
 14974                           	opt stack 0
 14975  0065FA                     _lcd_putch:
 14976                           	opt stack 20
 14977                           
 14978                           ;incstack = 0
 14979                           ;lcd_putch@c stored from wreg
 14980  0065FA  6E18               	movwf	lcd_putch@c,c
 14981                           
 14982                           ;lcd.c: 78: if(c >= ' ' && c < 127)
 14983  0065FC  0E1F               	movlw	31
 14984  0065FE  6418               	cpfsgt	lcd_putch@c,c
 14985  006600  EF8E  F033         	goto	_lcd_busy
 14986  006604  0E7F               	movlw	127
 14987  006606  6018               	cpfslt	lcd_putch@c,c
 14988  006608  EF8E  F033         	goto	_lcd_busy
 14989                           
 14990                           ;lcd.c: 79: {
 14991                           ;lcd.c: 80: lcd_write_data(c);
 14992  00660C  5018               	movf	lcd_putch@c,w,c
 14993  00660E  ECA3  F032         	call	_lcd_write_data
 14994                           
 14995                           ;lcd.c: 81: }
 14996                           ;lcd.c: 82: lcd_busy();
 14997  006612  EF8E  F033         	goto	_lcd_busy	;wreg free
 14998  006616                     __end_of_lcd_putch:
 14999                           	opt stack 0
 15000                           tosu	equ	0xFFF
 15001                           tosh	equ	0xFFE
 15002                           tosl	equ	0xFFD
 15003                           pclath	equ	0xFFA
 15004                           tblptru	equ	0xFF8
 15005                           tblptrh	equ	0xFF7
 15006                           tblptrl	equ	0xFF6
 15007                           tablat	equ	0xFF5
 15008                           prodh	equ	0xFF4
 15009                           prodl	equ	0xFF3
 15010                           intcon	equ	0xFF2
 15011                           indf0	equ	0xFEF
 15012                           postinc0	equ	0xFEE
 15013                           fsr0h	equ	0xFEA
 15014                           fsr0l	equ	0xFE9
 15015                           wreg	equ	0xFE8
 15016                           postinc1	equ	0xFE6
 15017                           postdec1	equ	0xFE5
 15018                           plusw1	equ	0xFE3
 15019                           fsr1h	equ	0xFE2
 15020                           fsr1l	equ	0xFE1
 15021                           bsr	equ	0xFE0
 15022                           indf2	equ	0xFDF
 15023                           postinc2	equ	0xFDE
 15024                           postdec2	equ	0xFDD
 15025                           plusw2	equ	0xFDB
 15026                           fsr2h	equ	0xFDA
 15027                           fsr2l	equ	0xFD9
 15028                           status	equ	0xFD8
 15029                           
 15030 ;; *************** function _lcd_write_data *****************
 15031 ;; Defined at:
 15032 ;;		line 71 in file "../board_support_package/picdem2_net/lcd_hw.c"
 15033 ;; Parameters:    Size  Location     Type
 15034 ;;  d               1    wreg     unsigned char 
 15035 ;; Auto vars:     Size  Location     Type
 15036 ;;  d               1   22[COMRAM] unsigned char 
 15037 ;; Return value:  Size  Location     Type
 15038 ;;		None               void
 15039 ;; Registers used:
 15040 ;;		wreg
 15041 ;; Tracked objects:
 15042 ;;		On entry : 0/0
 15043 ;;		On exit  : 0/0
 15044 ;;		Unchanged: 0/0
 15045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15047 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15049 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15050 ;;Total ram usage:        1 bytes
 15051 ;; Hardware stack levels used:    1
 15052 ;; Hardware stack levels required when called:    8
 15053 ;; This function calls:
 15054 ;;		Nothing
 15055 ;; This function is called by:
 15056 ;;		_lcd_putch
 15057 ;; This function uses a non-reentrant model
 15058 ;;
 15059                           
 15060                           	psect	text69
 15061  006546                     __ptext69:
 15062                           	opt stack 0
 15063  006546                     _lcd_write_data:
 15064                           	opt stack 20
 15065                           
 15066                           ;incstack = 0
 15067                           ;lcd_write_data@d stored from wreg
 15068  006546  6E17               	movwf	lcd_write_data@d,c
 15069                           
 15070                           ;lcd_hw.c: 73: LATH1 = 0;
 15071  006548  9290               	bcf	3984,1,c	;volatile
 15072                           
 15073                           ;lcd_hw.c: 74: LATH2 = 1;
 15074  00654A  8490               	bsf	3984,2,c	;volatile
 15075                           
 15076                           ;lcd_hw.c: 75: LATE = d;
 15077  00654C  C017  FF8D         	movff	lcd_write_data@d,3981	;volatile
 15078                           
 15079                           ;lcd_hw.c: 76: _delay((unsigned long)((1)*(41666667UL/4000000.0)));
 15080  006550  0E03               	movlw	3
 15081  006552                     u16547:
 15082  006552  2EE8               	decfsz	wreg,f,c
 15083  006554  D7FE               	goto	u16547
 15084  006556  F000               	nop	
 15085                           
 15086                           ;lcd_hw.c: 77: LATH0 = 1;
 15087  006558  8090               	bsf	3984,0,c	;volatile
 15088                           
 15089                           ;lcd_hw.c: 78: _delay((unsigned long)((1)*(41666667UL/4000000.0)));
 15090  00655A  0E03               	movlw	3
 15091  00655C                     u16557:
 15092  00655C  2EE8               	decfsz	wreg,f,c
 15093  00655E  D7FE               	goto	u16557
 15094  006560  F000               	nop	
 15095                           
 15096                           ;lcd_hw.c: 79: LATH0 = 0;
 15097  006562  9090               	bcf	3984,0,c	;volatile
 15098  006564  0012               	return		;funcret
 15099  006566                     __end_of_lcd_write_data:
 15100                           	opt stack 0
 15101                           tosu	equ	0xFFF
 15102                           tosh	equ	0xFFE
 15103                           tosl	equ	0xFFD
 15104                           pclath	equ	0xFFA
 15105                           tblptru	equ	0xFF8
 15106                           tblptrh	equ	0xFF7
 15107                           tblptrl	equ	0xFF6
 15108                           tablat	equ	0xFF5
 15109                           prodh	equ	0xFF4
 15110                           prodl	equ	0xFF3
 15111                           intcon	equ	0xFF2
 15112                           indf0	equ	0xFEF
 15113                           postinc0	equ	0xFEE
 15114                           fsr0h	equ	0xFEA
 15115                           fsr0l	equ	0xFE9
 15116                           wreg	equ	0xFE8
 15117                           postinc1	equ	0xFE6
 15118                           postdec1	equ	0xFE5
 15119                           plusw1	equ	0xFE3
 15120                           fsr1h	equ	0xFE2
 15121                           fsr1l	equ	0xFE1
 15122                           bsr	equ	0xFE0
 15123                           indf2	equ	0xFDF
 15124                           postinc2	equ	0xFDE
 15125                           postdec2	equ	0xFDD
 15126                           plusw2	equ	0xFDB
 15127                           fsr2h	equ	0xFDA
 15128                           fsr2l	equ	0xFD9
 15129                           status	equ	0xFD8
 15130                           
 15131 ;; *************** function _lcd_goto2 *****************
 15132 ;; Defined at:
 15133 ;;		line 102 in file "../board_support_package/picdem2_net/lcd.c"
 15134 ;; Parameters:    Size  Location     Type
 15135 ;;  pos             1    wreg     unsigned char 
 15136 ;; Auto vars:     Size  Location     Type
 15137 ;;  pos             1   23[COMRAM] unsigned char 
 15138 ;; Return value:  Size  Location     Type
 15139 ;;		None               void
 15140 ;; Registers used:
 15141 ;;		wreg, status,2, status,0, cstack
 15142 ;; Tracked objects:
 15143 ;;		On entry : D/2
 15144 ;;		On exit  : 0/0
 15145 ;;		Unchanged: 0/0
 15146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15148 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15150 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15151 ;;Total ram usage:        1 bytes
 15152 ;; Hardware stack levels used:    1
 15153 ;; Hardware stack levels required when called:    9
 15154 ;; This function calls:
 15155 ;;		_lcd_busy
 15156 ;;		_lcd_write_ctrl
 15157 ;; This function is called by:
 15158 ;;		_DEMO_TCP_Client
 15159 ;; This function uses a non-reentrant model
 15160 ;;
 15161                           
 15162                           	psect	text70
 15163  0066D6                     __ptext70:
 15164                           	opt stack 0
 15165  0066D6                     _lcd_goto2:
 15166                           	opt stack 20
 15167                           
 15168                           ;incstack = 0
 15169                           ;lcd_goto2@pos stored from wreg
 15170  0066D6  6E18               	movwf	lcd_goto2@pos,c
 15171                           
 15172                           ;lcd.c: 104: lcd_write_ctrl(0xC0+pos);
 15173  0066D8  5018               	movf	lcd_goto2@pos,w,c
 15174  0066DA  0FC0               	addlw	192
 15175  0066DC  ECB3  F032         	call	_lcd_write_ctrl
 15176                           
 15177                           ;lcd.c: 105: lcd_busy();
 15178  0066E0  EF8E  F033         	goto	_lcd_busy	;wreg free
 15179  0066E4                     __end_of_lcd_goto2:
 15180                           	opt stack 0
 15181                           tosu	equ	0xFFF
 15182                           tosh	equ	0xFFE
 15183                           tosl	equ	0xFFD
 15184                           pclath	equ	0xFFA
 15185                           tblptru	equ	0xFF8
 15186                           tblptrh	equ	0xFF7
 15187                           tblptrl	equ	0xFF6
 15188                           tablat	equ	0xFF5
 15189                           prodh	equ	0xFF4
 15190                           prodl	equ	0xFF3
 15191                           intcon	equ	0xFF2
 15192                           indf0	equ	0xFEF
 15193                           postinc0	equ	0xFEE
 15194                           fsr0h	equ	0xFEA
 15195                           fsr0l	equ	0xFE9
 15196                           wreg	equ	0xFE8
 15197                           postinc1	equ	0xFE6
 15198                           postdec1	equ	0xFE5
 15199                           plusw1	equ	0xFE3
 15200                           fsr1h	equ	0xFE2
 15201                           fsr1l	equ	0xFE1
 15202                           bsr	equ	0xFE0
 15203                           indf2	equ	0xFDF
 15204                           postinc2	equ	0xFDE
 15205                           postdec2	equ	0xFDD
 15206                           plusw2	equ	0xFDB
 15207                           fsr2h	equ	0xFDA
 15208                           fsr2l	equ	0xFD9
 15209                           status	equ	0xFD8
 15210                           
 15211 ;; *************** function _lcd_write_ctrl *****************
 15212 ;; Defined at:
 15213 ;;		line 59 in file "../board_support_package/picdem2_net/lcd_hw.c"
 15214 ;; Parameters:    Size  Location     Type
 15215 ;;  c               1    wreg     unsigned char 
 15216 ;; Auto vars:     Size  Location     Type
 15217 ;;  c               1   22[COMRAM] unsigned char 
 15218 ;; Return value:  Size  Location     Type
 15219 ;;		None               void
 15220 ;; Registers used:
 15221 ;;		wreg
 15222 ;; Tracked objects:
 15223 ;;		On entry : 0/0
 15224 ;;		On exit  : 0/0
 15225 ;;		Unchanged: 0/0
 15226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15228 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15230 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15231 ;;Total ram usage:        1 bytes
 15232 ;; Hardware stack levels used:    1
 15233 ;; Hardware stack levels required when called:    8
 15234 ;; This function calls:
 15235 ;;		Nothing
 15236 ;; This function is called by:
 15237 ;;		_lcd_goto1
 15238 ;;		_lcd_goto2
 15239 ;;		_lcd_init
 15240 ;; This function uses a non-reentrant model
 15241 ;;
 15242                           
 15243                           	psect	text71
 15244  006566                     __ptext71:
 15245                           	opt stack 0
 15246  006566                     _lcd_write_ctrl:
 15247                           	opt stack 21
 15248                           
 15249                           ;incstack = 0
 15250                           ;lcd_write_ctrl@c stored from wreg
 15251  006566  6E17               	movwf	lcd_write_ctrl@c,c
 15252                           
 15253                           ;lcd_hw.c: 61: LATH1 = 0;
 15254  006568  9290               	bcf	3984,1,c	;volatile
 15255                           
 15256                           ;lcd_hw.c: 62: LATH2 = 0;
 15257  00656A  9490               	bcf	3984,2,c	;volatile
 15258                           
 15259                           ;lcd_hw.c: 64: _delay((unsigned long)((50)*(41666667UL/4000000.0)));
 15260  00656C  0EAD               	movlw	173
 15261  00656E                     u16567:
 15262  00656E  2EE8               	decfsz	wreg,f,c
 15263  006570  D7FE               	goto	u16567
 15264  006572  F000               	nop	
 15265                           
 15266                           ;lcd_hw.c: 65: LATE = c;
 15267  006574  C017  FF8D         	movff	lcd_write_ctrl@c,3981	;volatile
 15268                           
 15269                           ;lcd_hw.c: 66: LATH0 = 1;
 15270  006578  8090               	bsf	3984,0,c	;volatile
 15271                           
 15272                           ;lcd_hw.c: 67: _delay((unsigned long)((50)*(41666667UL/4000000.0)));
 15273  00657A  0EAD               	movlw	173
 15274  00657C                     u16577:
 15275  00657C  2EE8               	decfsz	wreg,f,c
 15276  00657E  D7FE               	goto	u16577
 15277  006580  F000               	nop	
 15278                           
 15279                           ;lcd_hw.c: 68: LATH0 = 0;
 15280  006582  9090               	bcf	3984,0,c	;volatile
 15281  006584  0012               	return		;funcret
 15282  006586                     __end_of_lcd_write_ctrl:
 15283                           	opt stack 0
 15284                           tosu	equ	0xFFF
 15285                           tosh	equ	0xFFE
 15286                           tosl	equ	0xFFD
 15287                           pclath	equ	0xFFA
 15288                           tblptru	equ	0xFF8
 15289                           tblptrh	equ	0xFF7
 15290                           tblptrl	equ	0xFF6
 15291                           tablat	equ	0xFF5
 15292                           prodh	equ	0xFF4
 15293                           prodl	equ	0xFF3
 15294                           intcon	equ	0xFF2
 15295                           indf0	equ	0xFEF
 15296                           postinc0	equ	0xFEE
 15297                           fsr0h	equ	0xFEA
 15298                           fsr0l	equ	0xFE9
 15299                           wreg	equ	0xFE8
 15300                           postinc1	equ	0xFE6
 15301                           postdec1	equ	0xFE5
 15302                           plusw1	equ	0xFE3
 15303                           fsr1h	equ	0xFE2
 15304                           fsr1l	equ	0xFE1
 15305                           bsr	equ	0xFE0
 15306                           indf2	equ	0xFDF
 15307                           postinc2	equ	0xFDE
 15308                           postdec2	equ	0xFDD
 15309                           plusw2	equ	0xFDB
 15310                           fsr2h	equ	0xFDA
 15311                           fsr2l	equ	0xFD9
 15312                           status	equ	0xFD8
 15313                           
 15314 ;; *************** function _lcd_busy *****************
 15315 ;; Defined at:
 15316 ;;		line 82 in file "../board_support_package/picdem2_net/lcd_hw.c"
 15317 ;; Parameters:    Size  Location     Type
 15318 ;;		None
 15319 ;; Auto vars:     Size  Location     Type
 15320 ;;		None
 15321 ;; Return value:  Size  Location     Type
 15322 ;;		None               void
 15323 ;; Registers used:
 15324 ;;		wreg
 15325 ;; Tracked objects:
 15326 ;;		On entry : 0/0
 15327 ;;		On exit  : 0/0
 15328 ;;		Unchanged: 0/0
 15329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15334 ;;Total ram usage:        0 bytes
 15335 ;; Hardware stack levels used:    1
 15336 ;; Hardware stack levels required when called:    8
 15337 ;; This function calls:
 15338 ;;		Nothing
 15339 ;; This function is called by:
 15340 ;;		_lcd_putch
 15341 ;;		_lcd_goto1
 15342 ;;		_lcd_goto2
 15343 ;;		_lcd_init
 15344 ;; This function uses a non-reentrant model
 15345 ;;
 15346                           
 15347                           	psect	text72
 15348  00671C                     __ptext72:
 15349                           	opt stack 0
 15350  00671C                     _lcd_busy:
 15351                           	opt stack 20
 15352                           
 15353                           ;lcd_hw.c: 84: _delay((unsigned long)((50)*(41666667UL/4000000.0)));
 15354                           
 15355                           ;incstack = 0
 15356  00671C  0EAD               	movlw	173
 15357  00671E                     u16587:
 15358  00671E  2EE8               	decfsz	wreg,f,c
 15359  006720  D7FE               	goto	u16587
 15360  006722  F000               	nop	
 15361  006724  0012               	return		;funcret
 15362  006726                     __end_of_lcd_busy:
 15363                           	opt stack 0
 15364                           tosu	equ	0xFFF
 15365                           tosh	equ	0xFFE
 15366                           tosl	equ	0xFFD
 15367                           pclath	equ	0xFFA
 15368                           tblptru	equ	0xFF8
 15369                           tblptrh	equ	0xFF7
 15370                           tblptrl	equ	0xFF6
 15371                           tablat	equ	0xFF5
 15372                           prodh	equ	0xFF4
 15373                           prodl	equ	0xFF3
 15374                           intcon	equ	0xFF2
 15375                           indf0	equ	0xFEF
 15376                           postinc0	equ	0xFEE
 15377                           fsr0h	equ	0xFEA
 15378                           fsr0l	equ	0xFE9
 15379                           wreg	equ	0xFE8
 15380                           postinc1	equ	0xFE6
 15381                           postdec1	equ	0xFE5
 15382                           plusw1	equ	0xFE3
 15383                           fsr1h	equ	0xFE2
 15384                           fsr1l	equ	0xFE1
 15385                           bsr	equ	0xFE0
 15386                           indf2	equ	0xFDF
 15387                           postinc2	equ	0xFDE
 15388                           postdec2	equ	0xFDD
 15389                           plusw2	equ	0xFDB
 15390                           fsr2h	equ	0xFDA
 15391                           fsr2l	equ	0xFD9
 15392                           status	equ	0xFD8
 15393                           
 15394 ;; *************** function _TCP_SocketInit *****************
 15395 ;; Defined at:
 15396 ;;		line 1181 in file "../../TCPIP Library/source/tcpv4.c"
 15397 ;; Parameters:    Size  Location     Type
 15398 ;;  tcbPtr          2   30[COMRAM] PTR struct .
 15399 ;;		 -> DEMO_TCP_Client@port60TCB(55), 
 15400 ;; Auto vars:     Size  Location     Type
 15401 ;;  ret             1    0        enum E177
 15402 ;; Return value:  Size  Location     Type
 15403 ;;                  1    wreg      enum E177
 15404 ;; Registers used:
 15405 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15406 ;; Tracked objects:
 15407 ;;		On entry : C/1
 15408 ;;		On exit  : 0/0
 15409 ;;		Unchanged: 0/0
 15410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15411 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15412 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15414 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15415 ;;Total ram usage:        3 bytes
 15416 ;; Hardware stack levels used:    1
 15417 ;; Hardware stack levels required when called:    9
 15418 ;; This function calls:
 15419 ;;		_TCB_Check
 15420 ;;		_TCB_Insert
 15421 ;;		_TCB_Reset
 15422 ;; This function is called by:
 15423 ;;		_DEMO_TCP_Client
 15424 ;; This function uses a non-reentrant model
 15425 ;;
 15426                           
 15427                           	psect	text73
 15428  0056FE                     __ptext73:
 15429                           	opt stack 0
 15430  0056FE                     _TCP_SocketInit:
 15431                           	opt stack 20
 15432                           
 15433                           ;tcpv4.c: 1186: if(TCB_Check(tcbPtr) == 0)
 15434                           
 15435                           ;incstack = 0
 15436  0056FE  C01F  F017         	movff	TCP_SocketInit@tcbPtr,TCB_Check@ptr
 15437  005702  C020  F018         	movff	TCP_SocketInit@tcbPtr+1,TCB_Check@ptr+1
 15438  005706  ECDC  F02C         	call	_TCB_Check	;wreg free
 15439  00570A  0900               	iorlw	0
 15440  00570C  A4D8               	btfss	status,2,c
 15441  00570E  0012               	return	
 15442                           
 15443                           ;tcpv4.c: 1187: {
 15444                           ;tcpv4.c: 1188: TCB_Reset(tcbPtr);
 15445  005710  C01F  F017         	movff	TCP_SocketInit@tcbPtr,TCB_Reset@tcbPtr
 15446  005714  C020  F018         	movff	TCP_SocketInit@tcbPtr+1,TCB_Reset@tcbPtr+1
 15447  005718  ECE3  F023         	call	_TCB_Reset	;wreg free
 15448                           
 15449                           ;tcpv4.c: 1190: tcbPtr->localWnd = 0;
 15450  00571C  EE20 F01A          	lfsr	2,26
 15451  005720  D832               	call	PL505	;call to abstracted procedure
 15452  005722  6ADE               	clrf	postinc2,c
 15453  005724  6ADD               	clrf	postdec2,c
 15454                           
 15455                           ;tcpv4.c: 1191: tcbPtr->mss = 1460u;
 15456  005726  EE20 F01C          	lfsr	2,28
 15457  00572A  D82D               	call	PL505	;call to abstracted procedure
 15458  00572C  0EB4               	movlw	180
 15459  00572E  6EDE               	movwf	postinc2,c
 15460  005730  0E05               	movlw	5
 15461  005732  6EDD               	movwf	postdec2,c
 15462                           
 15463                           ;tcpv4.c: 1192: tcbPtr->fsmState = CLOSED;
 15464  005734  EE20 F02A          	lfsr	2,42
 15465  005738  D826               	call	PL505	;call to abstracted procedure
 15466  00573A  6ADF               	clrf	indf2,c
 15467                           
 15468                           ;tcpv4.c: 1193: tcbPtr->connectionEvent = NOP;
 15469  00573C  EE20 F02B          	lfsr	2,43
 15470  005740  D822               	call	PL505	;call to abstracted procedure
 15471  005742  0E0D               	movlw	13
 15472  005744  6EDF               	movwf	indf2,c
 15473                           
 15474                           ;tcpv4.c: 1194: tcbPtr->rxBufferStart = (0);
 15475  005746  EE20 F01E          	lfsr	2,30
 15476  00574A  D81D               	call	PL505	;call to abstracted procedure
 15477                           
 15478                           ;tcpv4.c: 1195: tcbPtr->rxBufState = NO_BUFF;
 15479  00574C  EC8C  F02D         	call	PL719	;call to abstracted procedure
 15480  005750  D81A               	call	PL505	;call to abstracted procedure
 15481  005752  6ADF               	clrf	indf2,c
 15482                           
 15483                           ;tcpv4.c: 1196: tcbPtr->txBufferStart = (0);
 15484  005754  EE20 F023          	lfsr	2,35
 15485  005758  D816               	call	PL505	;call to abstracted procedure
 15486  00575A  6ADE               	clrf	postinc2,c
 15487  00575C  6ADD               	clrf	postdec2,c
 15488                           
 15489                           ;tcpv4.c: 1197: tcbPtr->txBufferPtr = (0);
 15490  00575E  EE20 F025          	lfsr	2,37
 15491  005762  D811               	call	PL505	;call to abstracted procedure
 15492  005764  6ADE               	clrf	postinc2,c
 15493  005766  6ADD               	clrf	postdec2,c
 15494                           
 15495                           ;tcpv4.c: 1198: tcbPtr->bytesToSend = 0;
 15496  005768  EE20 F027          	lfsr	2,39
 15497  00576C  D80C               	call	PL505	;call to abstracted procedure
 15498  00576E  6ADE               	clrf	postinc2,c
 15499  005770  6ADD               	clrf	postdec2,c
 15500                           
 15501                           ;tcpv4.c: 1199: tcbPtr->txBufState = NO_BUFF;
 15502  005772  EE20 F029          	lfsr	2,41
 15503  005776  D807               	call	PL505	;call to abstracted procedure
 15504  005778  6ADF               	clrf	indf2,c
 15505                           
 15506                           ;tcpv4.c: 1201: TCB_Insert(tcbPtr);
 15507  00577A  C01F  F017         	movff	TCP_SocketInit@tcbPtr,TCB_Insert@ptr
 15508  00577E  C020  F018         	movff	TCP_SocketInit@tcbPtr+1,TCB_Insert@ptr+1
 15509  005782  EF21  F030         	goto	_TCB_Insert	;wreg free
 15510  005786                     __end_of_TCP_SocketInit:
 15511                           	opt stack 0
 15512  005786                     PL505:
 15513                           	opt stack 20
 15514  005786  501F               	movf	TCP_SocketInit@tcbPtr,w,c
 15515  005788  26D9               	addwf	fsr2l,f,c
 15516  00578A  5020               	movf	TCP_SocketInit@tcbPtr+1,w,c
 15517  00578C  22DA               	addwfc	fsr2h,f,c
 15518  00578E  0012               	return	
 15519  005790                     __end_ofPL505:
 15520                           	opt stack 0
 15521                           tosu	equ	0xFFF
 15522                           tosh	equ	0xFFE
 15523                           tosl	equ	0xFFD
 15524                           pclath	equ	0xFFA
 15525                           tblptru	equ	0xFF8
 15526                           tblptrh	equ	0xFF7
 15527                           tblptrl	equ	0xFF6
 15528                           tablat	equ	0xFF5
 15529                           prodh	equ	0xFF4
 15530                           prodl	equ	0xFF3
 15531                           intcon	equ	0xFF2
 15532                           indf0	equ	0xFEF
 15533                           postinc0	equ	0xFEE
 15534                           fsr0h	equ	0xFEA
 15535                           fsr0l	equ	0xFE9
 15536                           wreg	equ	0xFE8
 15537                           postinc1	equ	0xFE6
 15538                           postdec1	equ	0xFE5
 15539                           plusw1	equ	0xFE3
 15540                           fsr1h	equ	0xFE2
 15541                           fsr1l	equ	0xFE1
 15542                           bsr	equ	0xFE0
 15543                           indf2	equ	0xFDF
 15544                           postinc2	equ	0xFDE
 15545                           postdec2	equ	0xFDD
 15546                           plusw2	equ	0xFDB
 15547                           fsr2h	equ	0xFDA
 15548                           fsr2l	equ	0xFD9
 15549                           status	equ	0xFD8
 15550                           
 15551 ;; *************** function _TCB_Insert *****************
 15552 ;; Defined at:
 15553 ;;		line 80 in file "../../TCPIP Library/source/tcpv4.c"
 15554 ;; Parameters:    Size  Location     Type
 15555 ;;  ptr             2   22[COMRAM] PTR struct .
 15556 ;;		 -> DEMO_TCP_Client@port60TCB(55), 
 15557 ;; Auto vars:     Size  Location     Type
 15558 ;;		None
 15559 ;; Return value:  Size  Location     Type
 15560 ;;		None               void
 15561 ;; Registers used:
 15562 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15563 ;; Tracked objects:
 15564 ;;		On entry : 0/1
 15565 ;;		On exit  : 0/0
 15566 ;;		Unchanged: 0/0
 15567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15568 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15571 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15572 ;;Total ram usage:        2 bytes
 15573 ;; Hardware stack levels used:    1
 15574 ;; Hardware stack levels required when called:    8
 15575 ;; This function calls:
 15576 ;;		Nothing
 15577 ;; This function is called by:
 15578 ;;		_TCP_SocketInit
 15579 ;; This function uses a non-reentrant model
 15580 ;;
 15581                           
 15582                           	psect	text74
 15583  006042                     __ptext74:
 15584                           	opt stack 0
 15585  006042                     _TCB_Insert:
 15586                           	opt stack 20
 15587                           
 15588                           ;tcpv4.c: 84: if(tcbList != (0))
 15589                           
 15590                           ;incstack = 0
 15591  006042  5044               	movf	_tcbList,w,c
 15592  006044  1045               	iorwf	_tcbList+1,w,c
 15593  006046  E00A               	bz	l1086
 15594                           
 15595                           ;tcpv4.c: 85: {
 15596                           ;tcpv4.c: 87: tcbList->prevTCB = ptr;
 15597  006048  EE20 F02E          	lfsr	2,46
 15598  00604C  5044               	movf	_tcbList,w,c
 15599  00604E  26D9               	addwf	fsr2l,f,c
 15600  006050  5045               	movf	_tcbList+1,w,c
 15601  006052  22DA               	addwfc	fsr2h,f,c
 15602  006054  C017  FFDE         	movff	TCB_Insert@ptr,postinc2
 15603  006058  C018  FFDD         	movff	TCB_Insert@ptr+1,postdec2
 15604  00605C                     l1086:
 15605                           
 15606                           ;tcpv4.c: 88: }
 15607                           ;tcpv4.c: 89: ptr->nextTCB = tcbList;
 15608  00605C  EE20 F02C          	lfsr	2,44
 15609  006060  D80F               	call	PL721	;call to abstracted procedure
 15610  006062  C044  FFDE         	movff	_tcbList,postinc2
 15611  006066  C045  FFDD         	movff	_tcbList+1,postdec2
 15612                           
 15613                           ;tcpv4.c: 90: tcbList = ptr;
 15614  00606A  C017  F044         	movff	TCB_Insert@ptr,_tcbList
 15615  00606E  C018  F045         	movff	TCB_Insert@ptr+1,_tcbList+1
 15616                           
 15617                           ;tcpv4.c: 91: ptr->prevTCB = (0);
 15618  006072  EE20 F02E          	lfsr	2,46
 15619  006076  D804               	call	PL721	;call to abstracted procedure
 15620  006078  6ADE               	clrf	postinc2,c
 15621  00607A  6ADD               	clrf	postdec2,c
 15622                           
 15623                           ;tcpv4.c: 92: tcbListSize ++;
 15624  00607C  2A48               	incf	_tcbListSize,f,c
 15625  00607E  0C00               	retlw	0	;funcret
 15626  006080                     __end_of_TCB_Insert:
 15627                           	opt stack 0
 15628  006080                     PL721:
 15629                           	opt stack 20
 15630  006080  5017               	movf	TCB_Insert@ptr,w,c
 15631  006082  26D9               	addwf	fsr2l,f,c
 15632  006084  5018               	movf	TCB_Insert@ptr+1,w,c
 15633  006086  22DA               	addwfc	fsr2h,f,c
 15634  006088  0012               	return	
 15635  00608A                     __end_ofPL721:
 15636                           	opt stack 0
 15637                           tosu	equ	0xFFF
 15638                           tosh	equ	0xFFE
 15639                           tosl	equ	0xFFD
 15640                           pclath	equ	0xFFA
 15641                           tblptru	equ	0xFF8
 15642                           tblptrh	equ	0xFF7
 15643                           tblptrl	equ	0xFF6
 15644                           tablat	equ	0xFF5
 15645                           prodh	equ	0xFF4
 15646                           prodl	equ	0xFF3
 15647                           intcon	equ	0xFF2
 15648                           indf0	equ	0xFEF
 15649                           postinc0	equ	0xFEE
 15650                           fsr0h	equ	0xFEA
 15651                           fsr0l	equ	0xFE9
 15652                           wreg	equ	0xFE8
 15653                           postinc1	equ	0xFE6
 15654                           postdec1	equ	0xFE5
 15655                           plusw1	equ	0xFE3
 15656                           fsr1h	equ	0xFE2
 15657                           fsr1l	equ	0xFE1
 15658                           bsr	equ	0xFE0
 15659                           indf2	equ	0xFDF
 15660                           postinc2	equ	0xFDE
 15661                           postdec2	equ	0xFDD
 15662                           plusw2	equ	0xFDB
 15663                           fsr2h	equ	0xFDA
 15664                           fsr2l	equ	0xFD9
 15665                           status	equ	0xFD8
 15666                           
 15667 ;; *************** function _TCP_SendDone *****************
 15668 ;; Defined at:
 15669 ;;		line 1347 in file "../../TCPIP Library/source/tcpv4.c"
 15670 ;; Parameters:    Size  Location     Type
 15671 ;;  tcbPtr          2   30[COMRAM] PTR struct .
 15672 ;;		 -> DEMO_TCP_Client@port60TCB(55), 
 15673 ;; Auto vars:     Size  Location     Type
 15674 ;;  ret             1   32[COMRAM] unsigned char 
 15675 ;; Return value:  Size  Location     Type
 15676 ;;                  1    wreg      unsigned char 
 15677 ;; Registers used:
 15678 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15679 ;; Tracked objects:
 15680 ;;		On entry : C/1
 15681 ;;		On exit  : 0/0
 15682 ;;		Unchanged: 0/0
 15683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15684 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15685 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15687 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15688 ;;Total ram usage:        3 bytes
 15689 ;; Hardware stack levels used:    1
 15690 ;; Hardware stack levels required when called:    9
 15691 ;; This function calls:
 15692 ;;		_TCB_Check
 15693 ;; This function is called by:
 15694 ;;		_DEMO_TCP_Client
 15695 ;; This function uses a non-reentrant model
 15696 ;;
 15697                           
 15698                           	psect	text75
 15699  0063F0                     __ptext75:
 15700                           	opt stack 0
 15701  0063F0                     _TCP_SendDone:
 15702                           	opt stack 20
 15703                           
 15704                           ;tcpv4.c: 1349: bool ret = 0;
 15705                           
 15706                           ;incstack = 0
 15707  0063F0  6A21               	clrf	TCP_SendDone@ret,c
 15708                           
 15709                           ;tcpv4.c: 1351: if(TCB_Check(tcbPtr))
 15710  0063F2  C01F  F017         	movff	TCP_SendDone@tcbPtr,TCB_Check@ptr
 15711  0063F6  C020  F018         	movff	TCP_SendDone@tcbPtr+1,TCB_Check@ptr+1
 15712  0063FA  ECDC  F02C         	call	_TCB_Check	;wreg free
 15713  0063FE  0900               	iorlw	0
 15714  006400  E00A               	bz	l1356
 15715                           
 15716                           ;tcpv4.c: 1352: {
 15717                           ;tcpv4.c: 1353: if (tcbPtr->txBufState == NO_BUFF)
 15718  006402  EE20 F029          	lfsr	2,41
 15719  006406  501F               	movf	TCP_SendDone@tcbPtr,w,c
 15720  006408  26D9               	addwf	fsr2l,f,c
 15721  00640A  5020               	movf	TCP_SendDone@tcbPtr+1,w,c
 15722  00640C  22DA               	addwfc	fsr2h,f,c
 15723  00640E  50DF               	movf	indf2,w,c
 15724  006410  E102               	bnz	l1356
 15725                           
 15726                           ;tcpv4.c: 1354: {
 15727                           ;tcpv4.c: 1355: ret = 1;
 15728  006412  0E01               	movlw	1
 15729  006414  6E21               	movwf	TCP_SendDone@ret,c
 15730  006416                     l1356:
 15731                           
 15732                           ;tcpv4.c: 1356: }
 15733                           ;tcpv4.c: 1357: }
 15734                           ;tcpv4.c: 1358: return ret;
 15735  006416  5021               	movf	TCP_SendDone@ret,w,c
 15736  006418  0012               	return		;funcret
 15737  00641A                     __end_of_TCP_SendDone:
 15738                           	opt stack 0
 15739                           tosu	equ	0xFFF
 15740                           tosh	equ	0xFFE
 15741                           tosl	equ	0xFFD
 15742                           pclath	equ	0xFFA
 15743                           tblptru	equ	0xFF8
 15744                           tblptrh	equ	0xFF7
 15745                           tblptrl	equ	0xFF6
 15746                           tablat	equ	0xFF5
 15747                           prodh	equ	0xFF4
 15748                           prodl	equ	0xFF3
 15749                           intcon	equ	0xFF2
 15750                           indf0	equ	0xFEF
 15751                           postinc0	equ	0xFEE
 15752                           fsr0h	equ	0xFEA
 15753                           fsr0l	equ	0xFE9
 15754                           wreg	equ	0xFE8
 15755                           postinc1	equ	0xFE6
 15756                           postdec1	equ	0xFE5
 15757                           plusw1	equ	0xFE3
 15758                           fsr1h	equ	0xFE2
 15759                           fsr1l	equ	0xFE1
 15760                           bsr	equ	0xFE0
 15761                           indf2	equ	0xFDF
 15762                           postinc2	equ	0xFDE
 15763                           postdec2	equ	0xFDD
 15764                           plusw2	equ	0xFDB
 15765                           fsr2h	equ	0xFDA
 15766                           fsr2l	equ	0xFD9
 15767                           status	equ	0xFD8
 15768                           
 15769 ;; *************** function _TCP_Send *****************
 15770 ;; Defined at:
 15771 ;;		line 1318 in file "../../TCPIP Library/source/tcpv4.c"
 15772 ;; Parameters:    Size  Location     Type
 15773 ;;  tcbPtr          2  142[BANK0 ] PTR struct .
 15774 ;;		 -> DEMO_TCP_Client@port60TCB(55), 
 15775 ;;  data            2  144[BANK0 ] PTR unsigned char 
 15776 ;;		 -> DEMO_TCP_Client@txdataPort60(80), 
 15777 ;;  dataLen         2  146[BANK0 ] unsigned int 
 15778 ;; Auto vars:     Size  Location     Type
 15779 ;;  ret             1    0        unsigned char 
 15780 ;; Return value:  Size  Location     Type
 15781 ;;                  1    wreg      unsigned char 
 15782 ;; Registers used:
 15783 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15784 ;; Tracked objects:
 15785 ;;		On entry : F/0
 15786 ;;		On exit  : 0/0
 15787 ;;		Unchanged: 0/0
 15788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15789 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15790 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15792 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15793 ;;Total ram usage:        7 bytes
 15794 ;; Hardware stack levels used:    1
 15795 ;; Hardware stack levels required when called:   13
 15796 ;; This function calls:
 15797 ;;		_TCP_Snd
 15798 ;;		_TCP_SocketPoll
 15799 ;; This function is called by:
 15800 ;;		_DEMO_TCP_Client
 15801 ;; This function uses a non-reentrant model
 15802 ;;
 15803                           
 15804                           	psect	text76
 15805  005666                     __ptext76:
 15806                           	opt stack 0
 15807  005666                     _TCP_Send:
 15808                           	opt stack 16
 15809                           
 15810                           ; BSR set to: 0
 15811                           ;tcpv4.c: 1322: if (TCP_SocketPoll(tcbPtr) == SOCKET_CONNECTED)
 15812                           
 15813                           ; BSR set to: 0
 15814                           
 15815                           ;incstack = 0
 15816  005666  C0EE  F01F         	movff	TCP_Send@tcbPtr,TCP_SocketPoll@socket_ptr
 15817  00566A  C0EF  F020         	movff	TCP_Send@tcbPtr+1,TCP_SocketPoll@socket_ptr+1
 15818  00566E  EC6E  F032         	call	_TCP_SocketPoll	;wreg free
 15819  005672  0A03               	xorlw	3
 15820  005674  A4D8               	btfss	status,2,c
 15821  005676  0012               	return	
 15822                           
 15823                           ;tcpv4.c: 1323: {
 15824                           ;tcpv4.c: 1324: if (tcbPtr->txBufState == NO_BUFF)
 15825  005678  0100               	movlb	0	; () banked
 15826  00567A  EE20 F029          	lfsr	2,41
 15827  00567E  D83A               	call	PL537	;call to abstracted procedure
 15828  005680  50DF               	movf	indf2,w,c
 15829  005682  A4D8               	btfss	status,2,c
 15830  005684  0012               	return	
 15831                           
 15832                           ; BSR set to: 0
 15833                           ;tcpv4.c: 1325: {
 15834                           ;tcpv4.c: 1326: if (data != (0))
 15835  005686  51F0               	movf	TCP_Send@data& (0+255),w,b
 15836  005688  11F1               	iorwf	(TCP_Send@data+1)& (0+255),w,b
 15837  00568A  B4D8               	btfsc	status,2,c
 15838  00568C  0012               	return	
 15839                           
 15840                           ; BSR set to: 0
 15841                           ;tcpv4.c: 1327: {
 15842                           ;tcpv4.c: 1328: tcbPtr->txBufferStart = data;
 15843  00568E  EE20 F023          	lfsr	2,35
 15844  005692  D830               	call	PL537	;call to abstracted procedure
 15845  005694  C0F0  FFDE         	movff	TCP_Send@data,postinc2
 15846  005698  C0F1  FFDD         	movff	TCP_Send@data+1,postdec2
 15847                           
 15848                           ; BSR set to: 0
 15849                           ;tcpv4.c: 1329: tcbPtr->txBufferPtr = tcbPtr->txBufferStart;
 15850  00569C  EE20 F023          	lfsr	2,35
 15851  0056A0  D829               	call	PL537	;call to abstracted procedure
 15852  0056A2  EE10 F025          	lfsr	1,37
 15853  0056A6  51EE               	movf	TCP_Send@tcbPtr& (0+255),w,b
 15854  0056A8  26E1               	addwf	fsr1l,f,c
 15855  0056AA  51EF               	movf	(TCP_Send@tcbPtr+1)& (0+255),w,b
 15856  0056AC  EC50  F02D         	call	PL619	;call to abstracted procedure
 15857                           
 15858                           ; BSR set to: 0
 15859                           ;tcpv4.c: 1330: tcbPtr->bytesToSend = dataLen;
 15860  0056B0  EE20 F027          	lfsr	2,39
 15861  0056B4  D81F               	call	PL537	;call to abstracted procedure
 15862  0056B6  C0F2  FFDE         	movff	TCP_Send@dataLen,postinc2
 15863  0056BA  C0F3  FFDD         	movff	TCP_Send@dataLen+1,postdec2
 15864                           
 15865                           ; BSR set to: 0
 15866                           ;tcpv4.c: 1331: tcbPtr->txBufState = TX_BUFF_IN_USE;
 15867  0056BE  EE20 F029          	lfsr	2,41
 15868  0056C2  D818               	call	PL537	;call to abstracted procedure
 15869  0056C4  0E02               	movlw	2
 15870  0056C6  6EDF               	movwf	indf2,c
 15871                           
 15872                           ; BSR set to: 0
 15873                           ;tcpv4.c: 1333: tcbPtr->timeoutReloadValue = ((unsigned long)1*2);
 15874  0056C8  EE20 F032          	lfsr	2,50
 15875  0056CC  D813               	call	PL537	;call to abstracted procedure
 15876  0056CE  0E02               	movlw	2
 15877  0056D0  6EDE               	movwf	postinc2,c
 15878  0056D2  6ADD               	clrf	postdec2,c
 15879                           
 15880                           ; BSR set to: 0
 15881                           ;tcpv4.c: 1334: tcbPtr->timeoutsCount = (5u);
 15882  0056D4  EE20 F034          	lfsr	2,52
 15883  0056D8  D80D               	call	PL537	;call to abstracted procedure
 15884  0056DA  0E05               	movlw	5
 15885  0056DC  6EDF               	movwf	indf2,c
 15886                           
 15887                           ; BSR set to: 0
 15888                           ;tcpv4.c: 1336: tcbPtr->flags = 0x10U;
 15889  0056DE  EE20 F035          	lfsr	2,53
 15890  0056E2  D808               	call	PL537	;call to abstracted procedure
 15891  0056E4  0E10               	movlw	16
 15892  0056E6  6EDF               	movwf	indf2,c
 15893                           
 15894                           ; BSR set to: 0
 15895                           ;tcpv4.c: 1338: TCP_Snd(tcbPtr);
 15896  0056E8  C0EE  F09F         	movff	TCP_Send@tcbPtr,TCP_Snd@tcbPtr
 15897  0056EC  C0EF  F0A0         	movff	TCP_Send@tcbPtr+1,TCP_Snd@tcbPtr+1
 15898  0056F0  EFCC  F012         	goto	_TCP_Snd	;wreg free
 15899  0056F4                     __end_of_TCP_Send:
 15900                           	opt stack 0
 15901  0056F4                     PL537:
 15902                           	opt stack 16
 15903  0056F4  51EE               	movf	TCP_Send@tcbPtr& (0+255),w,b
 15904  0056F6  26D9               	addwf	fsr2l,f,c
 15905  0056F8  51EF               	movf	(TCP_Send@tcbPtr+1)& (0+255),w,b
 15906  0056FA  22DA               	addwfc	fsr2h,f,c
 15907  0056FC  0012               	return	
 15908  0056FE                     __end_ofPL537:
 15909                           	opt stack 0
 15910                           tosu	equ	0xFFF
 15911                           tosh	equ	0xFFE
 15912                           tosl	equ	0xFFD
 15913                           pclath	equ	0xFFA
 15914                           tblptru	equ	0xFF8
 15915                           tblptrh	equ	0xFF7
 15916                           tblptrl	equ	0xFF6
 15917                           tablat	equ	0xFF5
 15918                           prodh	equ	0xFF4
 15919                           prodl	equ	0xFF3
 15920                           intcon	equ	0xFF2
 15921                           indf0	equ	0xFEF
 15922                           postinc0	equ	0xFEE
 15923                           fsr0h	equ	0xFEA
 15924                           fsr0l	equ	0xFE9
 15925                           wreg	equ	0xFE8
 15926                           postinc1	equ	0xFE6
 15927                           postdec1	equ	0xFE5
 15928                           plusw1	equ	0xFE3
 15929                           fsr1h	equ	0xFE2
 15930                           fsr1l	equ	0xFE1
 15931                           bsr	equ	0xFE0
 15932                           indf2	equ	0xFDF
 15933                           postinc2	equ	0xFDE
 15934                           postdec2	equ	0xFDD
 15935                           plusw2	equ	0xFDB
 15936                           fsr2h	equ	0xFDA
 15937                           fsr2l	equ	0xFD9
 15938                           status	equ	0xFD8
 15939                           
 15940 ;; *************** function _TCP_InsertRxBuffer *****************
 15941 ;; Defined at:
 15942 ;;		line 1361 in file "../../TCPIP Library/source/tcpv4.c"
 15943 ;; Parameters:    Size  Location     Type
 15944 ;;  tcbPtr          2   30[COMRAM] PTR struct .
 15945 ;;		 -> DEMO_TCP_Client@port60TCB(55), 
 15946 ;;  data            2   32[COMRAM] PTR unsigned char 
 15947 ;;		 -> DEMO_TCP_Client@rxdataPort60(50), 
 15948 ;;  data_len        2   34[COMRAM] unsigned int 
 15949 ;; Auto vars:     Size  Location     Type
 15950 ;;  ret             1    0        unsigned char 
 15951 ;; Return value:  Size  Location     Type
 15952 ;;                  1    wreg      unsigned char 
 15953 ;; Registers used:
 15954 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15955 ;; Tracked objects:
 15956 ;;		On entry : 0/2
 15957 ;;		On exit  : 0/0
 15958 ;;		Unchanged: 0/0
 15959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15960 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15961 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15963 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15964 ;;Total ram usage:        7 bytes
 15965 ;; Hardware stack levels used:    1
 15966 ;; Hardware stack levels required when called:    9
 15967 ;; This function calls:
 15968 ;;		_TCB_Check
 15969 ;; This function is called by:
 15970 ;;		_DEMO_TCP_Client
 15971 ;; This function uses a non-reentrant model
 15972 ;;
 15973                           
 15974                           	psect	text77
 15975  005A36                     __ptext77:
 15976                           	opt stack 0
 15977  005A36                     _TCP_InsertRxBuffer:
 15978                           	opt stack 20
 15979                           
 15980                           ;tcpv4.c: 1365: if (TCB_Check(tcbPtr))
 15981                           
 15982                           ;incstack = 0
 15983  005A36  C01F  F017         	movff	TCP_InsertRxBuffer@tcbPtr,TCB_Check@ptr
 15984  005A3A  C020  F018         	movff	TCP_InsertRxBuffer@tcbPtr+1,TCB_Check@ptr+1
 15985  005A3E  ECDC  F02C         	call	_TCB_Check	;wreg free
 15986  005A42  0900               	iorlw	0
 15987  005A44  B4D8               	btfsc	status,2,c
 15988  005A46  0012               	return	
 15989                           
 15990                           ;tcpv4.c: 1366: {
 15991                           ;tcpv4.c: 1367: if (tcbPtr->rxBufState == NO_BUFF)
 15992  005A48  EE20 F022          	lfsr	2,34
 15993  005A4C  D824               	call	PL607	;call to abstracted procedure
 15994  005A4E  50DF               	movf	indf2,w,c
 15995  005A50  A4D8               	btfss	status,2,c
 15996  005A52  0012               	return	
 15997                           
 15998                           ;tcpv4.c: 1368: {
 15999                           ;tcpv4.c: 1369: if (data != (0))
 16000  005A54  5021               	movf	TCP_InsertRxBuffer@data,w,c
 16001  005A56  1022               	iorwf	TCP_InsertRxBuffer@data+1,w,c
 16002  005A58  B4D8               	btfsc	status,2,c
 16003  005A5A  0012               	return	
 16004                           
 16005                           ;tcpv4.c: 1370: {
 16006                           ;tcpv4.c: 1371: tcbPtr->rxBufferStart = data;
 16007  005A5C  EE20 F01E          	lfsr	2,30
 16008  005A60  D81A               	call	PL607	;call to abstracted procedure
 16009  005A62  C021  FFDE         	movff	TCP_InsertRxBuffer@data,postinc2
 16010  005A66  C022  FFDD         	movff	TCP_InsertRxBuffer@data+1,postdec2
 16011                           
 16012                           ;tcpv4.c: 1372: tcbPtr->rxBufferPtr = tcbPtr->rxBufferStart;
 16013  005A6A  EE20 F01E          	lfsr	2,30
 16014  005A6E  D813               	call	PL607	;call to abstracted procedure
 16015  005A70  EE10 F020          	lfsr	1,32
 16016  005A74  501F               	movf	TCP_InsertRxBuffer@tcbPtr,w,c
 16017  005A76  26E1               	addwf	fsr1l,f,c
 16018  005A78  5020               	movf	TCP_InsertRxBuffer@tcbPtr+1,w,c
 16019  005A7A  D812               	call	PL619	;call to abstracted procedure
 16020                           
 16021                           ;tcpv4.c: 1373: tcbPtr->localWnd = data_len;
 16022  005A7C  EE20 F01A          	lfsr	2,26
 16023  005A80  D80A               	call	PL607	;call to abstracted procedure
 16024  005A82  C023  FFDE         	movff	TCP_InsertRxBuffer@data_len,postinc2
 16025  005A86  C024  FFDD         	movff	TCP_InsertRxBuffer@data_len+1,postdec2
 16026                           
 16027                           ;tcpv4.c: 1374: tcbPtr->rxBufState = RX_BUFF_IN_USE;
 16028  005A8A  EE20 F022          	lfsr	2,34
 16029  005A8E  D803               	call	PL607	;call to abstracted procedure
 16030  005A90  0E01               	movlw	1
 16031  005A92  6EDF               	movwf	indf2,c
 16032  005A94  0C01               	retlw	1
 16033  005A96                     __end_of_TCP_InsertRxBuffer:
 16034                           	opt stack 0
 16035  005A96                     PL607:
 16036                           	opt stack 20
 16037  005A96  501F               	movf	TCP_InsertRxBuffer@tcbPtr,w,c
 16038  005A98  26D9               	addwf	fsr2l,f,c
 16039  005A9A  5020               	movf	TCP_InsertRxBuffer@tcbPtr+1,w,c
 16040  005A9C  22DA               	addwfc	fsr2h,f,c
 16041  005A9E  0012               	return	
 16042  005AA0                     __end_ofPL607:
 16043                           	opt stack 0
 16044  005AA0                     PL619:
 16045                           	opt stack 16
 16046  005AA0  22E2               	addwfc	fsr1h,f,c
 16047  005AA2  CFDE FFE6          	movff	postinc2,postinc1
 16048  005AA6  CFDD FFE5          	movff	postdec2,postdec1
 16049  005AAA  0012               	return	
 16050  005AAC                     __end_ofPL619:
 16051                           	opt stack 0
 16052                           tosu	equ	0xFFF
 16053                           tosh	equ	0xFFE
 16054                           tosl	equ	0xFFD
 16055                           pclath	equ	0xFFA
 16056                           tblptru	equ	0xFF8
 16057                           tblptrh	equ	0xFF7
 16058                           tblptrl	equ	0xFF6
 16059                           tablat	equ	0xFF5
 16060                           prodh	equ	0xFF4
 16061                           prodl	equ	0xFF3
 16062                           intcon	equ	0xFF2
 16063                           indf0	equ	0xFEF
 16064                           postinc0	equ	0xFEE
 16065                           fsr0h	equ	0xFEA
 16066                           fsr0l	equ	0xFE9
 16067                           wreg	equ	0xFE8
 16068                           postinc1	equ	0xFE6
 16069                           postdec1	equ	0xFE5
 16070                           plusw1	equ	0xFE3
 16071                           fsr1h	equ	0xFE2
 16072                           fsr1l	equ	0xFE1
 16073                           bsr	equ	0xFE0
 16074                           indf2	equ	0xFDF
 16075                           postinc2	equ	0xFDE
 16076                           postdec2	equ	0xFDD
 16077                           plusw2	equ	0xFDB
 16078                           fsr2h	equ	0xFDA
 16079                           fsr2l	equ	0xFD9
 16080                           status	equ	0xFD8
 16081                           
 16082 ;; *************** function _TCP_GetReceivedData *****************
 16083 ;; Defined at:
 16084 ;;		line 1383 in file "../../TCPIP Library/source/tcpv4.c"
 16085 ;; Parameters:    Size  Location     Type
 16086 ;;  tcbPtr          2   30[COMRAM] PTR struct .
 16087 ;;		 -> DEMO_TCP_Client@port60TCB(55), 
 16088 ;; Auto vars:     Size  Location     Type
 16089 ;;  ret             2   36[COMRAM] int 
 16090 ;; Return value:  Size  Location     Type
 16091 ;;                  2   30[COMRAM] int 
 16092 ;; Registers used:
 16093 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16094 ;; Tracked objects:
 16095 ;;		On entry : 0/1
 16096 ;;		On exit  : 0/0
 16097 ;;		Unchanged: 0/0
 16098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16099 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16100 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16101 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16102 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16103 ;;Total ram usage:        8 bytes
 16104 ;; Hardware stack levels used:    1
 16105 ;; Hardware stack levels required when called:    9
 16106 ;; This function calls:
 16107 ;;		_TCB_Check
 16108 ;; This function is called by:
 16109 ;;		_DEMO_TCP_Client
 16110 ;; This function uses a non-reentrant model
 16111 ;;
 16112                           
 16113                           	psect	text78
 16114  005AAC                     __ptext78:
 16115                           	opt stack 0
 16116  005AAC                     _TCP_GetReceivedData:
 16117                           	opt stack 20
 16118                           
 16119                           ;tcpv4.c: 1385: int16_t ret = 0;
 16120                           
 16121                           ;incstack = 0
 16122  005AAC  6A25               	clrf	TCP_GetReceivedData@ret,c
 16123  005AAE  6A26               	clrf	TCP_GetReceivedData@ret+1,c
 16124                           
 16125                           ;tcpv4.c: 1387: if (TCB_Check(tcbPtr))
 16126  005AB0  C01F  F017         	movff	TCP_GetReceivedData@tcbPtr,TCB_Check@ptr
 16127  005AB4  C020  F018         	movff	TCP_GetReceivedData@tcbPtr+1,TCB_Check@ptr+1
 16128  005AB8  ECDC  F02C         	call	_TCB_Check	;wreg free
 16129  005ABC  0900               	iorlw	0
 16130  005ABE  E022               	bz	l10121
 16131                           
 16132                           ;tcpv4.c: 1388: {
 16133                           ;tcpv4.c: 1389: if (tcbPtr->rxBufState == RX_BUFF_IN_USE)
 16134  005AC0  EE20 F022          	lfsr	2,34
 16135  005AC4  D824               	call	PL605	;call to abstracted procedure
 16136  005AC6  04DE               	decf	postinc2,w,c
 16137  005AC8  E11D               	bnz	l10121
 16138                           
 16139                           ;tcpv4.c: 1390: {
 16140                           ;tcpv4.c: 1391: ret = tcbPtr->rxBufferPtr - tcbPtr->rxBufferStart;
 16141  005ACA  EE20 F01E          	lfsr	2,30
 16142  005ACE  D81F               	call	PL605	;call to abstracted procedure
 16143  005AD0  CFDE F021          	movff	postinc2,??_TCP_GetReceivedData
 16144  005AD4  CFDD F022          	movff	postdec2,??_TCP_GetReceivedData+1
 16145  005AD8  EE20 F020          	lfsr	2,32
 16146  005ADC  D818               	call	PL605	;call to abstracted procedure
 16147  005ADE  CFDE F023          	movff	postinc2,??_TCP_GetReceivedData+2
 16148  005AE2  CFDD F024          	movff	postdec2,??_TCP_GetReceivedData+3
 16149  005AE6  5021               	movf	??_TCP_GetReceivedData,w,c
 16150  005AE8  5C23               	subwf	??_TCP_GetReceivedData+2,w,c
 16151  005AEA  6E25               	movwf	TCP_GetReceivedData@ret,c
 16152  005AEC  5022               	movf	??_TCP_GetReceivedData+1,w,c
 16153  005AEE  5824               	subwfb	??_TCP_GetReceivedData+3,w,c
 16154  005AF0  6E26               	movwf	TCP_GetReceivedData@ret+1,c
 16155                           
 16156                           ;tcpv4.c: 1393: if (ret != 0)
 16157  005AF2  1025               	iorwf	TCP_GetReceivedData@ret,w,c
 16158  005AF4  E007               	bz	l10121
 16159                           
 16160                           ;tcpv4.c: 1394: {
 16161                           ;tcpv4.c: 1395: tcbPtr->localWnd = 0;
 16162  005AF6  EE20 F01A          	lfsr	2,26
 16163  005AFA  D809               	call	PL605	;call to abstracted procedure
 16164                           
 16165                           ;tcpv4.c: 1396: tcbPtr->rxBufState = NO_BUFF;
 16166  005AFC  D80D               	call	PL719	;call to abstracted procedure
 16167  005AFE  D807               	call	PL605	;call to abstracted procedure
 16168  005B00  0E00               	movlw	0
 16169  005B02  6ADF               	clrf	indf2,c
 16170  005B04                     l10121:
 16171                           
 16172                           ;tcpv4.c: 1397: }
 16173                           ;tcpv4.c: 1398: }
 16174                           ;tcpv4.c: 1399: }
 16175                           ;tcpv4.c: 1400: return ret;
 16176  005B04  C025  F01F         	movff	TCP_GetReceivedData@ret,?_TCP_GetReceivedData
 16177  005B08  C026  F020         	movff	TCP_GetReceivedData@ret+1,?_TCP_GetReceivedData+1
 16178  005B0C  0012               	return		;funcret
 16179  005B0E                     __end_of_TCP_GetReceivedData:
 16180                           	opt stack 0
 16181  005B0E                     PL605:
 16182                           	opt stack 20
 16183  005B0E  501F               	movf	TCP_GetReceivedData@tcbPtr,w,c
 16184  005B10  26D9               	addwf	fsr2l,f,c
 16185  005B12  5020               	movf	TCP_GetReceivedData@tcbPtr+1,w,c
 16186  005B14  22DA               	addwfc	fsr2h,f,c
 16187  005B16  0012               	return	
 16188  005B18                     __end_ofPL605:
 16189                           	opt stack 0
 16190  005B18                     PL719:
 16191                           	opt stack 20
 16192  005B18  6ADE               	clrf	postinc2,c
 16193  005B1A  6ADD               	clrf	postdec2,c
 16194  005B1C  EE20 F022          	lfsr	2,34
 16195  005B20  0012               	return	
 16196  005B22                     __end_ofPL719:
 16197                           	opt stack 0
 16198                           tosu	equ	0xFFF
 16199                           tosh	equ	0xFFE
 16200                           tosl	equ	0xFFD
 16201                           pclath	equ	0xFFA
 16202                           tblptru	equ	0xFF8
 16203                           tblptrh	equ	0xFF7
 16204                           tblptrl	equ	0xFF6
 16205                           tablat	equ	0xFF5
 16206                           prodh	equ	0xFF4
 16207                           prodl	equ	0xFF3
 16208                           intcon	equ	0xFF2
 16209                           indf0	equ	0xFEF
 16210                           postinc0	equ	0xFEE
 16211                           fsr0h	equ	0xFEA
 16212                           fsr0l	equ	0xFE9
 16213                           wreg	equ	0xFE8
 16214                           postinc1	equ	0xFE6
 16215                           postdec1	equ	0xFE5
 16216                           plusw1	equ	0xFE3
 16217                           fsr1h	equ	0xFE2
 16218                           fsr1l	equ	0xFE1
 16219                           bsr	equ	0xFE0
 16220                           indf2	equ	0xFDF
 16221                           postinc2	equ	0xFDE
 16222                           postdec2	equ	0xFDD
 16223                           plusw2	equ	0xFDB
 16224                           fsr2h	equ	0xFDA
 16225                           fsr2l	equ	0xFD9
 16226                           status	equ	0xFD8
 16227                           
 16228 ;; *************** function _TCP_Connect *****************
 16229 ;; Defined at:
 16230 ;;		line 1272 in file "../../TCPIP Library/source/tcpv4.c"
 16231 ;; Parameters:    Size  Location     Type
 16232 ;;  tcbPtr          2   17[BANK1 ] PTR struct .
 16233 ;;		 -> DEMO_TCP_Client@port60TCB(55), 
 16234 ;;  srvaddr         2   19[BANK1 ] PTR struct .
 16235 ;;		 -> remoteSocket(6), 
 16236 ;; Auto vars:     Size  Location     Type
 16237 ;;  ret             1    0        unsigned char 
 16238 ;; Return value:  Size  Location     Type
 16239 ;;                  1    wreg      unsigned char 
 16240 ;; Registers used:
 16241 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16242 ;; Tracked objects:
 16243 ;;		On entry : F/1
 16244 ;;		On exit  : 0/0
 16245 ;;		Unchanged: 0/0
 16246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16247 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16248 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16249 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16250 ;;      Totals:         1       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16251 ;;Total ram usage:        7 bytes
 16252 ;; Hardware stack levels used:    1
 16253 ;; Hardware stack levels required when called:   15
 16254 ;; This function calls:
 16255 ;;		_TCP_FiniteStateMachine
 16256 ;;		_TCP_SocketPoll
 16257 ;; This function is called by:
 16258 ;;		_DEMO_TCP_Client
 16259 ;; This function uses a non-reentrant model
 16260 ;;
 16261                           
 16262                           	psect	text79
 16263  0051DE                     __ptext79:
 16264                           	opt stack 0
 16265  0051DE                     _TCP_Connect:
 16266                           	opt stack 14
 16267                           
 16268                           ; BSR set to: 1
 16269                           ;tcpv4.c: 1276: if (TCP_SocketPoll(tcbPtr) == SOCKET_CLOSED)
 16270                           
 16271                           ; BSR set to: 1
 16272                           
 16273                           ;incstack = 0
 16274  0051DE  C111  F01F         	movff	TCP_Connect@tcbPtr,TCP_SocketPoll@socket_ptr
 16275  0051E2  C112  F020         	movff	TCP_Connect@tcbPtr+1,TCP_SocketPoll@socket_ptr+1
 16276  0051E6  EC6E  F032         	call	_TCP_SocketPoll	;wreg free
 16277  0051EA  06E8               	decf	wreg,f,c
 16278  0051EC  A4D8               	btfss	status,2,c
 16279  0051EE  0012               	return	
 16280                           
 16281                           ;tcpv4.c: 1277: {
 16282                           ;tcpv4.c: 1278: tcbPtr->destIP = srvaddr->addr.s_addr;
 16283  0051F0  0101               	movlb	1	; () banked
 16284  0051F2  EE20 F002          	lfsr	2,2
 16285  0051F6  5113               	movf	TCP_Connect@srvaddr& (0+255),w,b
 16286  0051F8  26D9               	addwf	fsr2l,f,c
 16287  0051FA  5114               	movf	(TCP_Connect@srvaddr+1)& (0+255),w,b
 16288  0051FC  22DA               	addwfc	fsr2h,f,c
 16289  0051FE  EE10 F002          	lfsr	1,2
 16290  005202  D838               	call	PL645	;call to abstracted procedure
 16291  005204  22E2               	addwfc	fsr1h,f,c
 16292  005206  CFDE FFE6          	movff	postinc2,postinc1
 16293  00520A  CFDE FFE6          	movff	postinc2,postinc1
 16294  00520E  CFDE FFE6          	movff	postinc2,postinc1
 16295  005212  CFDE FFE6          	movff	postinc2,postinc1
 16296                           
 16297                           ;tcpv4.c: 1279: tcbPtr->destPort = srvaddr->port;
 16298  005216  C113  FFD9         	movff	TCP_Connect@srvaddr,fsr2l
 16299  00521A  C114  FFDA         	movff	TCP_Connect@srvaddr+1,fsr2h
 16300  00521E  EE10 F006          	lfsr	1,6
 16301  005222  D828               	call	PL645	;call to abstracted procedure
 16302  005224  EC50  F02D         	call	PL619	;call to abstracted procedure
 16303                           
 16304                           ; BSR set to: 1
 16305                           ;tcpv4.c: 1280: if(tcbPtr->localPort == 0)
 16306  005228  D82E               	call	PL715	;call to abstracted procedure
 16307  00522A  50DE               	movf	postinc2,w,c
 16308  00522C  10DE               	iorwf	postinc2,w,c
 16309  00522E  E107               	bnz	l10039
 16310                           
 16311                           ; BSR set to: 1
 16312                           ;tcpv4.c: 1281: {
 16313                           ;tcpv4.c: 1283: tcbPtr->localPort = nextAvailablePort++;
 16314  005230  D82A               	call	PL715	;call to abstracted procedure
 16315  005232  C1CD  FFDE         	movff	_nextAvailablePort,postinc2
 16316  005236  C1CE  FFDD         	movff	_nextAvailablePort+1,postdec2
 16317                           
 16318                           ; BSR set to: 1
 16319  00523A  4BCD               	infsnz	_nextAvailablePort& (0+255),f,b
 16320  00523C  2BCE               	incf	(_nextAvailablePort+1)& (0+255),f,b
 16321  00523E                     l10039:
 16322                           
 16323                           ; BSR set to: 1
 16324                           ;tcpv4.c: 1284: }
 16325                           ;tcpv4.c: 1286: tcbPtr->socketState = SOCKET_IN_PROGRESS;
 16326  00523E  EE20 F036          	lfsr	2,54
 16327  005242  D81C               	call	PL663	;call to abstracted procedure
 16328  005244  0E02               	movlw	2
 16329  005246  6EDF               	movwf	indf2,c
 16330                           
 16331                           ; BSR set to: 1
 16332                           ;tcpv4.c: 1287: tcbPtr->localSeqno = nextSequenceNumber;
 16333  005248  EE20 F010          	lfsr	2,16
 16334  00524C  D817               	call	PL663	;call to abstracted procedure
 16335  00524E  C228  FFDE         	movff	_nextSequenceNumber,postinc2
 16336  005252  C229  FFDE         	movff	_nextSequenceNumber+1,postinc2
 16337  005256  C22A  FFDE         	movff	_nextSequenceNumber+2,postinc2
 16338  00525A  C22B  FFDE         	movff	_nextSequenceNumber+3,postinc2
 16339                           
 16340                           ; BSR set to: 1
 16341                           ;tcpv4.c: 1288: tcbPtr->connectionEvent = ACTIVE_OPEN;
 16342  00525E  EE20 F02B          	lfsr	2,43
 16343  005262  D80C               	call	PL663	;call to abstracted procedure
 16344  005264  0E01               	movlw	1
 16345  005266  6EDF               	movwf	indf2,c
 16346                           
 16347                           ; BSR set to: 1
 16348                           ;tcpv4.c: 1290: currentTCB = tcbPtr;
 16349  005268  C111  F040         	movff	TCP_Connect@tcbPtr,_currentTCB
 16350  00526C  C112  F041         	movff	TCP_Connect@tcbPtr+1,_currentTCB+1
 16351                           
 16352                           ; BSR set to: 1
 16353  005270  EF7D  F008         	goto	_TCP_FiniteStateMachine	;wreg free
 16354  005274                     __end_of_TCP_Connect:
 16355                           	opt stack 0
 16356  005274                     PL645:
 16357                           	opt stack 14
 16358  005274  5111               	movf	TCP_Connect@tcbPtr& (0+255),w,b
 16359  005276  26E1               	addwf	fsr1l,f,c
 16360  005278  5112               	movf	(TCP_Connect@tcbPtr+1)& (0+255),w,b
 16361  00527A  0012               	return	
 16362  00527C                     __end_ofPL645:
 16363                           	opt stack 0
 16364  00527C                     PL663:
 16365                           	opt stack 14
 16366  00527C  5111               	movf	TCP_Connect@tcbPtr& (0+255),w,b
 16367  00527E  26D9               	addwf	fsr2l,f,c
 16368  005280  5112               	movf	(TCP_Connect@tcbPtr+1)& (0+255),w,b
 16369  005282  22DA               	addwfc	fsr2h,f,c
 16370  005284  0012               	return	
 16371  005286                     __end_ofPL663:
 16372                           	opt stack 0
 16373  005286                     PL715:
 16374                           	opt stack 14
 16375  005286  C111  FFD9         	movff	TCP_Connect@tcbPtr,fsr2l
 16376  00528A  C112  FFDA         	movff	TCP_Connect@tcbPtr+1,fsr2h
 16377  00528E  0012               	return	
 16378  005290                     __end_ofPL715:
 16379                           	opt stack 0
 16380                           tosu	equ	0xFFF
 16381                           tosh	equ	0xFFE
 16382                           tosl	equ	0xFFD
 16383                           pclath	equ	0xFFA
 16384                           tblptru	equ	0xFF8
 16385                           tblptrh	equ	0xFF7
 16386                           tblptrl	equ	0xFF6
 16387                           tablat	equ	0xFF5
 16388                           prodh	equ	0xFF4
 16389                           prodl	equ	0xFF3
 16390                           intcon	equ	0xFF2
 16391                           indf0	equ	0xFEF
 16392                           postinc0	equ	0xFEE
 16393                           fsr0h	equ	0xFEA
 16394                           fsr0l	equ	0xFE9
 16395                           wreg	equ	0xFE8
 16396                           postinc1	equ	0xFE6
 16397                           postdec1	equ	0xFE5
 16398                           plusw1	equ	0xFE3
 16399                           fsr1h	equ	0xFE2
 16400                           fsr1l	equ	0xFE1
 16401                           bsr	equ	0xFE0
 16402                           indf2	equ	0xFDF
 16403                           postinc2	equ	0xFDE
 16404                           postdec2	equ	0xFDD
 16405                           plusw2	equ	0xFDB
 16406                           fsr2h	equ	0xFDA
 16407                           fsr2l	equ	0xFD9
 16408                           status	equ	0xFD8
 16409                           
 16410 ;; *************** function _TCP_SocketPoll *****************
 16411 ;; Defined at:
 16412 ;;		line 1220 in file "../../TCPIP Library/source/tcpv4.c"
 16413 ;; Parameters:    Size  Location     Type
 16414 ;;  socket_ptr      2   30[COMRAM] PTR struct .
 16415 ;;		 -> DEMO_TCP_Client@port60TCB(55), 
 16416 ;; Auto vars:     Size  Location     Type
 16417 ;;  tmpSocketSta    1   32[COMRAM] enum E667
 16418 ;; Return value:  Size  Location     Type
 16419 ;;                  1    wreg      enum E667
 16420 ;; Registers used:
 16421 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16422 ;; Tracked objects:
 16423 ;;		On entry : C/2
 16424 ;;		On exit  : 0/0
 16425 ;;		Unchanged: 0/0
 16426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16427 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16428 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16430 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16431 ;;Total ram usage:        3 bytes
 16432 ;; Hardware stack levels used:    1
 16433 ;; Hardware stack levels required when called:    9
 16434 ;; This function calls:
 16435 ;;		_TCB_Check
 16436 ;; This function is called by:
 16437 ;;		_TCP_Connect
 16438 ;;		_TCP_Send
 16439 ;;		_DEMO_TCP_Client
 16440 ;; This function uses a non-reentrant model
 16441 ;;
 16442                           
 16443                           	psect	text80
 16444  0064DC                     __ptext80:
 16445                           	opt stack 0
 16446  0064DC                     _TCP_SocketPoll:
 16447                           	opt stack 20
 16448                           
 16449                           ;tcpv4.c: 1222: socketState_t tmpSocketState;
 16450                           ;tcpv4.c: 1224: tmpSocketState = NOT_A_SOCKET;
 16451                           
 16452                           ;incstack = 0
 16453  0064DC  6A21               	clrf	TCP_SocketPoll@tmpSocketState,c
 16454                           
 16455                           ;tcpv4.c: 1226: if(TCB_Check(socket_ptr))
 16456  0064DE  C01F  F017         	movff	TCP_SocketPoll@socket_ptr,TCB_Check@ptr
 16457  0064E2  C020  F018         	movff	TCP_SocketPoll@socket_ptr+1,TCB_Check@ptr+1
 16458  0064E6  ECDC  F02C         	call	_TCB_Check	;wreg free
 16459  0064EA  0900               	iorlw	0
 16460  0064EC  E008               	bz	l9679
 16461                           
 16462                           ;tcpv4.c: 1227: {
 16463                           ;tcpv4.c: 1228: tmpSocketState = socket_ptr->socketState;
 16464  0064EE  EE20 F036          	lfsr	2,54
 16465  0064F2  501F               	movf	TCP_SocketPoll@socket_ptr,w,c
 16466  0064F4  26D9               	addwf	fsr2l,f,c
 16467  0064F6  5020               	movf	TCP_SocketPoll@socket_ptr+1,w,c
 16468  0064F8  22DA               	addwfc	fsr2h,f,c
 16469  0064FA  50DF               	movf	indf2,w,c
 16470  0064FC  6E21               	movwf	TCP_SocketPoll@tmpSocketState,c
 16471  0064FE                     l9679:
 16472                           
 16473                           ;tcpv4.c: 1229: }
 16474                           ;tcpv4.c: 1231: return tmpSocketState;
 16475  0064FE  5021               	movf	TCP_SocketPoll@tmpSocketState,w,c
 16476  006500  0012               	return		;funcret
 16477  006502                     __end_of_TCP_SocketPoll:
 16478                           	opt stack 0
 16479                           tosu	equ	0xFFF
 16480                           tosh	equ	0xFFE
 16481                           tosl	equ	0xFFD
 16482                           pclath	equ	0xFFA
 16483                           tblptru	equ	0xFF8
 16484                           tblptrh	equ	0xFF7
 16485                           tblptrl	equ	0xFF6
 16486                           tablat	equ	0xFF5
 16487                           prodh	equ	0xFF4
 16488                           prodl	equ	0xFF3
 16489                           intcon	equ	0xFF2
 16490                           indf0	equ	0xFEF
 16491                           postinc0	equ	0xFEE
 16492                           fsr0h	equ	0xFEA
 16493                           fsr0l	equ	0xFE9
 16494                           wreg	equ	0xFE8
 16495                           postinc1	equ	0xFE6
 16496                           postdec1	equ	0xFE5
 16497                           plusw1	equ	0xFE3
 16498                           fsr1h	equ	0xFE2
 16499                           fsr1l	equ	0xFE1
 16500                           bsr	equ	0xFE0
 16501                           indf2	equ	0xFDF
 16502                           postinc2	equ	0xFDE
 16503                           postdec2	equ	0xFDD
 16504                           plusw2	equ	0xFDB
 16505                           fsr2h	equ	0xFDA
 16506                           fsr2l	equ	0xFD9
 16507                           status	equ	0xFD8
 16508                           
 16509 ;; *************** function _TCB_Check *****************
 16510 ;; Defined at:
 16511 ;;		line 162 in file "../../TCPIP Library/source/tcpv4.c"
 16512 ;; Parameters:    Size  Location     Type
 16513 ;;  ptr             2   22[COMRAM] PTR struct .
 16514 ;;		 -> DEMO_TCP_Client@port60TCB(55), 
 16515 ;; Auto vars:     Size  Location     Type
 16516 ;;  tcbPtr          2   28[COMRAM] PTR struct .
 16517 ;;		 -> ?_sprintf(2), ?_printf(2), main@str(32), STR_8(13), 
 16518 ;;		 -> STR_7(17), DEMO_TCP_Client@txdataPort60(80), DEMO_TCP_Client@strTmp(17), DEMO_TCP_Client@rxdataPort60(50), 
 16519 ;;		 -> DEMO_TCP_Client@port60TCB(55), Network_Read@debug_str(80), STR_1(15), NULL(0), 
 16520 ;;  count           1   27[COMRAM] char 
 16521 ;;  ret             1   26[COMRAM] unsigned char 
 16522 ;; Return value:  Size  Location     Type
 16523 ;;                  1    wreg      unsigned char 
 16524 ;; Registers used:
 16525 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 16526 ;; Tracked objects:
 16527 ;;		On entry : 0/1
 16528 ;;		On exit  : 0/0
 16529 ;;		Unchanged: 0/0
 16530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16531 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16532 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16533 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16534 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16535 ;;Total ram usage:        8 bytes
 16536 ;; Hardware stack levels used:    1
 16537 ;; Hardware stack levels required when called:    8
 16538 ;; This function calls:
 16539 ;;		Nothing
 16540 ;; This function is called by:
 16541 ;;		_TCP_SocketInit
 16542 ;;		_TCP_SocketPoll
 16543 ;;		_TCP_SendDone
 16544 ;;		_TCP_InsertRxBuffer
 16545 ;;		_TCP_GetReceivedData
 16546 ;; This function uses a non-reentrant model
 16547 ;;
 16548                           
 16549                           	psect	text81
 16550  0059B8                     __ptext81:
 16551                           	opt stack 0
 16552  0059B8                     _TCB_Check:
 16553                           	opt stack 20
 16554                           
 16555                           ;tcpv4.c: 164: tcpTCB_t *tcbPtr;
 16556                           ;tcpv4.c: 165: bool ret = 0;
 16557                           
 16558                           ;incstack = 0
 16559  0059B8  6A1B               	clrf	TCB_Check@ret,c
 16560                           
 16561                           ;tcpv4.c: 166: socklistsize_t count = 0;
 16562  0059BA  6A1C               	clrf	TCB_Check@count,c
 16563                           
 16564                           ;tcpv4.c: 168: if((tcbList != (0)) && (ptr != (0)))
 16565  0059BC  5044               	movf	_tcbList,w,c
 16566  0059BE  1045               	iorwf	_tcbList+1,w,c
 16567  0059C0  E038               	bz	l9423
 16568  0059C2  5017               	movf	TCB_Check@ptr,w,c
 16569  0059C4  1018               	iorwf	TCB_Check@ptr+1,w,c
 16570  0059C6  E035               	bz	l9423
 16571                           
 16572                           ;tcpv4.c: 169: {
 16573                           ;tcpv4.c: 171: tcbPtr = tcbList;
 16574  0059C8  C044  F01D         	movff	_tcbList,TCB_Check@tcbPtr
 16575  0059CC  C045  F01E         	movff	_tcbList+1,TCB_Check@tcbPtr+1
 16576                           
 16577                           ;tcpv4.c: 172: while((tcbPtr != (0)) && (count < tcbListSize))
 16578  0059D0  D026               	goto	l9419
 16579  0059D2                     l9409:
 16580                           
 16581                           ;tcpv4.c: 173: {
 16582                           ;tcpv4.c: 174: if (tcbPtr == ptr)
 16583  0059D2  5017               	movf	TCB_Check@ptr,w,c
 16584  0059D4  181D               	xorwf	TCB_Check@tcbPtr,w,c
 16585  0059D6  E106               	bnz	l9415
 16586  0059D8  5018               	movf	TCB_Check@ptr+1,w,c
 16587  0059DA  181E               	xorwf	TCB_Check@tcbPtr+1,w,c
 16588  0059DC  E103               	bnz	l9415
 16589                           
 16590                           ;tcpv4.c: 175: {
 16591                           ;tcpv4.c: 176: ret = 1;
 16592  0059DE  0E01               	movlw	1
 16593  0059E0  6E1B               	movwf	TCB_Check@ret,c
 16594                           
 16595                           ;tcpv4.c: 177: break;
 16596  0059E2  D027               	goto	l9423
 16597  0059E4                     l9415:
 16598                           
 16599                           ;tcpv4.c: 179: else
 16600                           ;tcpv4.c: 180: {
 16601                           ;tcpv4.c: 181: tcbPtr = tcbPtr->nextTCB;
 16602  0059E4  0E2C               	movlw	44
 16603  0059E6  241D               	addwf	TCB_Check@tcbPtr,w,c
 16604  0059E8  6E19               	movwf	??_TCB_Check& (0+255),c
 16605  0059EA  0E00               	movlw	0
 16606  0059EC  201E               	addwfc	TCB_Check@tcbPtr+1,w,c
 16607  0059EE  6E1A               	movwf	(??_TCB_Check+1)& (0+255),c
 16608  0059F0  C019  FFF6         	movff	??_TCB_Check,tblptrl
 16609  0059F4  C01A  FFF7         	movff	??_TCB_Check+1,tblptrh
 16610  0059F8  0E00               	movlw	low (__smallconst shr (0+16))
 16611  0059FA  6EF8               	movwf	tblptru,c
 16612  0059FC  0E0F               	movlw	(high __ramtop+-1)
 16613  0059FE  64F7               	cpfsgt	tblptrh,c
 16614  005A00  D007               	bra	u15307
 16615  005A02  0009               	tblrd		*+
 16616  005A04  CFF5 F01D          	movff	tablat,TCB_Check@tcbPtr
 16617  005A08  0009               	tblrd		*+
 16618  005A0A  CFF5 F01E          	movff	tablat,TCB_Check@tcbPtr+1
 16619  005A0E  D006               	bra	u15300
 16620  005A10                     u15307:
 16621  005A10  EC86  F011         	call	PL389	;call to abstracted procedure
 16622  005A14  CFEE F01D          	movff	postinc0,TCB_Check@tcbPtr
 16623  005A18  CFEE F01E          	movff	postinc0,TCB_Check@tcbPtr+1
 16624  005A1C                     u15300:
 16625                           
 16626                           ;tcpv4.c: 182: count ++;
 16627  005A1C  2A1C               	incf	TCB_Check@count,f,c
 16628  005A1E                     l9419:
 16629  005A1E  501D               	movf	TCB_Check@tcbPtr,w,c
 16630  005A20  101E               	iorwf	TCB_Check@tcbPtr+1,w,c
 16631  005A22  E007               	bz	l9423
 16632  005A24  501C               	movf	TCB_Check@count,w,c
 16633  005A26  0A80               	xorlw	128
 16634  005A28  6E19               	movwf	??_TCB_Check& (0+255),c
 16635  005A2A  5048               	movf	_tcbListSize,w,c
 16636  005A2C  0A80               	xorlw	128
 16637  005A2E  5C19               	subwf	??_TCB_Check& (0+255),w,c
 16638  005A30  E3D0               	bnc	l9409
 16639  005A32                     l9423:
 16640                           
 16641                           ;tcpv4.c: 183: }
 16642                           ;tcpv4.c: 184: }
 16643                           ;tcpv4.c: 185: }
 16644                           ;tcpv4.c: 186: return ret;
 16645  005A32  501B               	movf	TCB_Check@ret,w,c
 16646  005A34  0012               	return		;funcret
 16647  005A36                     __end_of_TCB_Check:
 16648                           	opt stack 0
 16649                           tosu	equ	0xFFF
 16650                           tosh	equ	0xFFE
 16651                           tosl	equ	0xFFD
 16652                           pclath	equ	0xFFA
 16653                           tblptru	equ	0xFF8
 16654                           tblptrh	equ	0xFF7
 16655                           tblptrl	equ	0xFF6
 16656                           tablat	equ	0xFF5
 16657                           prodh	equ	0xFF4
 16658                           prodl	equ	0xFF3
 16659                           intcon	equ	0xFF2
 16660                           indf0	equ	0xFEF
 16661                           postinc0	equ	0xFEE
 16662                           fsr0h	equ	0xFEA
 16663                           fsr0l	equ	0xFE9
 16664                           wreg	equ	0xFE8
 16665                           postinc1	equ	0xFE6
 16666                           postdec1	equ	0xFE5
 16667                           plusw1	equ	0xFE3
 16668                           fsr1h	equ	0xFE2
 16669                           fsr1l	equ	0xFE1
 16670                           bsr	equ	0xFE0
 16671                           indf2	equ	0xFDF
 16672                           postinc2	equ	0xFDE
 16673                           postdec2	equ	0xFDD
 16674                           plusw2	equ	0xFDB
 16675                           fsr2h	equ	0xFDA
 16676                           fsr2l	equ	0xFD9
 16677                           status	equ	0xFD8
 16678                           
 16679 ;; *************** function _TCP_FiniteStateMachine *****************
 16680 ;; Defined at:
 16681 ;;		line 602 in file "../../TCPIP Library/source/tcpv4.c"
 16682 ;; Parameters:    Size  Location     Type
 16683 ;;		None
 16684 ;; Auto vars:     Size  Location     Type
 16685 ;;  notAckBytes     2   13[BANK1 ] unsigned int 
 16686 ;;  nextState       1   16[BANK1 ] enum E638
 16687 ;;  event           1   15[BANK1 ] enum E651
 16688 ;;  ret             1   12[BANK1 ] unsigned char 
 16689 ;; Return value:  Size  Location     Type
 16690 ;;                  1    wreg      unsigned char 
 16691 ;; Registers used:
 16692 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16693 ;; Tracked objects:
 16694 ;;		On entry : 0/1
 16695 ;;		On exit  : F/1
 16696 ;;		Unchanged: 0/0
 16697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16699 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16700 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16701 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16702 ;;Total ram usage:       17 bytes
 16703 ;; Hardware stack levels used:    1
 16704 ;; Hardware stack levels required when called:   14
 16705 ;; This function calls:
 16706 ;;		_TCB_Reset
 16707 ;;		_TCP_PayloadSave
 16708 ;;		_TCP_Snd
 16709 ;; This function is called by:
 16710 ;;		_TCP_Recv
 16711 ;;		_TCP_Connect
 16712 ;;		_TCP_Update
 16713 ;; This function uses a non-reentrant model
 16714 ;;
 16715                           
 16716                           	psect	text82
 16717  0010FA                     __ptext82:
 16718                           	opt stack 0
 16719  0010FA                     _TCP_FiniteStateMachine:
 16720                           	opt stack 14
 16721                           
 16722                           ;tcpv4.c: 604: uint16_t notAckBytes;
 16723                           ;tcpv4.c: 605: bool ret = 0;
 16724                           
 16725                           ;incstack = 0
 16726  0010FA  0101               	movlb	1	; () banked
 16727  0010FC  6B0C               	clrf	TCP_FiniteStateMachine@ret& (0+255),b
 16728                           
 16729                           ; BSR set to: 1
 16730                           ;tcpv4.c: 607: tcp_fsm_states_t nextState = currentTCB->fsmState;
 16731  0010FE  0E2A               	movlw	42
 16732  001100  2440               	addwf	_currentTCB,w,c
 16733  001102  EC7A  F011         	call	PL387	;call to abstracted procedure
 16734  001106  64F7               	cpfsgt	tblptrh,c
 16735  001108  D003               	bra	u13117
 16736  00110A  0008               	tblrd		*
 16737  00110C  50F5               	movf	tablat,w,c
 16738  00110E  D003               	bra	u13110
 16739  001110                     u13117:
 16740  001110  EC86  F011         	call	PL389	;call to abstracted procedure
 16741  001114  50EF               	movf	indf0,w,c
 16742  001116                     u13110:
 16743  001116  0101               	movlb	1	; () banked
 16744  001118  6F10               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 16745                           
 16746                           ;tcpv4.c: 608: tcpEvent_t event = currentTCB->connectionEvent;
 16747  00111A  0E2B               	movlw	43
 16748  00111C  2440               	addwf	_currentTCB,w,c
 16749  00111E  EC7A  F011         	call	PL387	;call to abstracted procedure
 16750  001122  64F7               	cpfsgt	tblptrh,c
 16751  001124  D003               	bra	u13127
 16752  001126  0008               	tblrd		*
 16753  001128  50F5               	movf	tablat,w,c
 16754  00112A  D003               	bra	u13120
 16755  00112C                     u13127:
 16756  00112C  EC86  F011         	call	PL389	;call to abstracted procedure
 16757  001130  50EF               	movf	indf0,w,c
 16758  001132                     u13120:
 16759  001132  0101               	movlb	1	; () banked
 16760  001134  6F0F               	movwf	TCP_FiniteStateMachine@event& (0+255),b
 16761                           
 16762                           ;tcpv4.c: 610: switch (currentTCB->fsmState)
 16763  001136  EF32  F011         	goto	l9225
 16764  00113A                     l8887:
 16765                           
 16766                           ; BSR set to: 1
 16767                           ;tcpv4.c: 616: ;
 16768                           ;tcpv4.c: 619: currentTCB->destIP = receivedRemoteAddress;
 16769  00113A  0E02               	movlw	2
 16770  00113C  2440               	addwf	_currentTCB,w,c
 16771  00113E  EC7A  F011         	call	PL387	;call to abstracted procedure
 16772  001142  64F7               	cpfsgt	tblptrh,c
 16773  001144  D00D               	bra	u13137
 16774  001146  C03C  FFF5         	movff	_receivedRemoteAddress,tablat
 16775  00114A  000D               	tblwt		*+
 16776  00114C  C03D  FFF5         	movff	_receivedRemoteAddress+1,tablat
 16777  001150  000D               	tblwt		*+
 16778  001152  C03E  FFF5         	movff	_receivedRemoteAddress+2,tablat
 16779  001156  000D               	tblwt		*+
 16780  001158  C03F  FFF5         	movff	_receivedRemoteAddress+3,tablat
 16781  00115C  000C               	tblwt		*
 16782  00115E  D00A               	bra	u13130
 16783  001160                     u13137:
 16784  001160  EC86  F011         	call	PL389	;call to abstracted procedure
 16785  001164  C03C  FFEE         	movff	_receivedRemoteAddress,postinc0
 16786  001168  C03D  FFEE         	movff	_receivedRemoteAddress+1,postinc0
 16787  00116C  C03E  FFEE         	movff	_receivedRemoteAddress+2,postinc0
 16788  001170  C03F  FFEF         	movff	_receivedRemoteAddress+3,indf0
 16789  001174                     u13130:
 16790                           
 16791                           ;tcpv4.c: 620: currentTCB->destPort = tcpHeader.sourcePort;
 16792  001174  EC3C  F012         	call	PL451	;call to abstracted procedure
 16793  001178  EC7A  F011         	call	PL387	;call to abstracted procedure
 16794  00117C  64F7               	cpfsgt	tblptrh,c
 16795  00117E  D007               	bra	u13147
 16796  001180  C1D1  FFF5         	movff	_tcpHeader,tablat
 16797  001184  000D               	tblwt		*+
 16798  001186  C1D2  FFF5         	movff	_tcpHeader+1,tablat
 16799  00118A  000C               	tblwt		*
 16800  00118C  D006               	bra	u13140
 16801  00118E                     u13147:
 16802  00118E  EC86  F011         	call	PL389	;call to abstracted procedure
 16803  001192  C1D1  FFEE         	movff	_tcpHeader,postinc0
 16804  001196  C1D2  FFEF         	movff	_tcpHeader+1,indf0
 16805  00119A                     u13140:
 16806                           
 16807                           ;tcpv4.c: 623: currentTCB->localLastAck = 0;
 16808  00119A  EC6F  F012         	call	PL479	;call to abstracted procedure
 16809  00119E  EC7A  F011         	call	PL387	;call to abstracted procedure
 16810  0011A2  64F7               	cpfsgt	tblptrh,c
 16811  0011A4  D007               	bra	u13157
 16812  0011A6  6AF5               	clrf	tablat,c
 16813  0011A8  000D               	tblwt		*+
 16814  0011AA  6AF5               	clrf	tablat,c
 16815  0011AC  000D               	tblwt		*+
 16816  0011AE  ECF2  F011         	call	PL423	;call to abstracted procedure
 16817  0011B2  D004               	bra	u13150
 16818  0011B4                     u13157:
 16819  0011B4  EC86  F011         	call	PL389	;call to abstracted procedure
 16820  0011B8  EC66  F012         	call	PL473	;call to abstracted procedure
 16821  0011BC                     u13150:
 16822                           
 16823                           ;tcpv4.c: 625: currentTCB->remoteSeqno = tcpHeader.sequenceNumber;
 16824  0011BC  ECE6  F011         	call	PL415	;call to abstracted procedure
 16825  0011C0  EC7A  F011         	call	PL387	;call to abstracted procedure
 16826  0011C4  64F7               	cpfsgt	tblptrh,c
 16827  0011C6  D003               	bra	u13167
 16828  0011C8  EC11  F012         	call	PL441	;call to abstracted procedure
 16829  0011CC  D004               	bra	u13160
 16830  0011CE                     u13167:
 16831  0011CE  EC86  F011         	call	PL389	;call to abstracted procedure
 16832  0011D2  EC7C  F012         	call	PL483	;call to abstracted procedure
 16833  0011D6                     u13160:
 16834                           
 16835                           ;tcpv4.c: 626: currentTCB->remoteAck = currentTCB->remoteSeqno + 1;
 16836  0011D6  ECE6  F011         	call	PL415	;call to abstracted procedure
 16837  0011DA  EC7A  F011         	call	PL387	;call to abstracted procedure
 16838  0011DE  64F7               	cpfsgt	tblptrh,c
 16839  0011E0  D003               	bra	u13177
 16840  0011E2  EC8F  F011         	call	PL395	;call to abstracted procedure
 16841  0011E6  D004               	bra	u13170
 16842  0011E8                     u13177:
 16843  0011E8  EC86  F011         	call	PL389	;call to abstracted procedure
 16844  0011EC  ECB0  F011         	call	PL403	;call to abstracted procedure
 16845  0011F0                     u13170:
 16846  0011F0  ECA2  F011         	call	PL401	;call to abstracted procedure
 16847  0011F4  0E0C               	movlw	12
 16848  0011F6  EC2B  F012         	call	PL445	;call to abstracted procedure
 16849  0011FA  64F7               	cpfsgt	tblptrh,c
 16850  0011FC  D003               	bra	u13187
 16851  0011FE  EC1E  F012         	call	PL443	;call to abstracted procedure
 16852  001202  D004               	bra	u13180
 16853  001204                     u13187:
 16854  001204  EC86  F011         	call	PL389	;call to abstracted procedure
 16855  001208  EC73  F012         	call	PL481	;call to abstracted procedure
 16856  00120C                     u13180:
 16857                           
 16858                           ;tcpv4.c: 629: currentTCB->remoteWnd = ((((uint16_t)tcpHeader.windowSize & (uint16_t)0xF
      +                          F00) >> 8) | (((uint16_t)tcpHeader.windowSize & (uint16_t)0x00FF) << 8));
 16859  00120C  ECB9  F011         	call	PL405	;call to abstracted procedure
 16860  001210  64F7               	cpfsgt	tblptrh,c
 16861  001212  D003               	bra	u13197
 16862  001214  EC40  F012         	call	PL455	;call to abstracted procedure
 16863  001218  D004               	bra	u13190
 16864  00121A                     u13197:
 16865  00121A  EC86  F011         	call	PL389	;call to abstracted procedure
 16866  00121E  EC97  F012         	call	PL507	;call to abstracted procedure
 16867  001222                     u13190:
 16868                           
 16869                           ;tcpv4.c: 630: currentTCB->mss = tcpMss;
 16870  001222  ECEE  F011         	call	PL419	;call to abstracted procedure
 16871  001226  EC7A  F011         	call	PL387	;call to abstracted procedure
 16872  00122A  64F7               	cpfsgt	tblptrh,c
 16873  00122C  D003               	bra	u13207
 16874  00122E  ECA8  F012         	call	PL545	;call to abstracted procedure
 16875  001232  D004               	bra	u13200
 16876  001234                     u13207:
 16877  001234  EC86  F011         	call	PL389	;call to abstracted procedure
 16878  001238  ECBB  F012         	call	PL639	;call to abstracted procedure
 16879  00123C                     u13200:
 16880                           
 16881                           ;tcpv4.c: 633: currentTCB->flags = 0x02U | 0x10U;
 16882  00123C  EC8B  F011         	call	PL393	;call to abstracted procedure
 16883  001240  EC7A  F011         	call	PL387	;call to abstracted procedure
 16884  001244  64F7               	cpfsgt	tblptrh,c
 16885  001246  D004               	bra	u13217
 16886  001248  0E12               	movlw	18
 16887  00124A  6EF5               	movwf	tablat,c
 16888  00124C  000C               	tblwt		*
 16889  00124E  D004               	bra	u13210
 16890  001250                     u13217:
 16891  001250  EC86  F011         	call	PL389	;call to abstracted procedure
 16892  001254  0E12               	movlw	18
 16893  001256  6EEF               	movwf	indf0,c
 16894  001258                     u13210:
 16895                           
 16896                           ;tcpv4.c: 634: currentTCB->timeout = ((unsigned long)1*2);
 16897  001258  EC0D  F012         	call	PL431	;call to abstracted procedure
 16898  00125C  EC7A  F011         	call	PL387	;call to abstracted procedure
 16899  001260  64F7               	cpfsgt	tblptrh,c
 16900  001262  D003               	bra	u13227
 16901  001264  EC5B  F012         	call	PL467	;call to abstracted procedure
 16902  001268  D004               	bra	u13220
 16903  00126A                     u13227:
 16904  00126A  EC86  F011         	call	PL389	;call to abstracted procedure
 16905  00126E  ECAF  F012         	call	PL617	;call to abstracted procedure
 16906  001272                     u13220:
 16907                           
 16908                           ;tcpv4.c: 635: currentTCB->timeoutReloadValue = ((unsigned long)1*2);
 16909  001272  EC09  F012         	call	PL429	;call to abstracted procedure
 16910  001276  EC7A  F011         	call	PL387	;call to abstracted procedure
 16911  00127A  64F7               	cpfsgt	tblptrh,c
 16912  00127C  D003               	bra	u13237
 16913  00127E  EC5B  F012         	call	PL467	;call to abstracted procedure
 16914  001282  D004               	bra	u13230
 16915  001284                     u13237:
 16916  001284  EC86  F011         	call	PL389	;call to abstracted procedure
 16917  001288  ECAF  F012         	call	PL617	;call to abstracted procedure
 16918  00128C                     u13230:
 16919                           
 16920                           ;tcpv4.c: 636: currentTCB->timeoutsCount = (3u);
 16921  00128C  ECEA  F011         	call	PL417	;call to abstracted procedure
 16922  001290  EC7A  F011         	call	PL387	;call to abstracted procedure
 16923  001294  64F7               	cpfsgt	tblptrh,c
 16924  001296  D004               	bra	u13247
 16925  001298  0E03               	movlw	3
 16926  00129A  6EF5               	movwf	tablat,c
 16927  00129C  000C               	tblwt		*
 16928  00129E  D004               	bra	u13240
 16929  0012A0                     u13247:
 16930  0012A0  EC86  F011         	call	PL389	;call to abstracted procedure
 16931  0012A4  0E03               	movlw	3
 16932  0012A6  6EEF               	movwf	indf0,c
 16933  0012A8                     u13240:
 16934  0012A8                     l8901:
 16935                           
 16936                           ;tcpv4.c: 638: TCP_Snd(currentTCB);
 16937  0012A8  EC61  F012         	call	PL471	;call to abstracted procedure
 16938  0012AC  ECCC  F012         	call	_TCP_Snd	;wreg free
 16939                           
 16940                           ; BSR set to: 0
 16941                           ;tcpv4.c: 639: nextState = SYN_RECEIVED;
 16942  0012B0  0E03               	movlw	3
 16943  0012B2  EF39  F010         	goto	L14
 16944  0012B6                     l1194:
 16945                           
 16946                           ;tcpv4.c: 642: ;
 16947                           ;tcpv4.c: 643: nextState = CLOSE;
 16948  0012B6  0101               	movlb	1	; () banked
 16949  0012B8  6B10               	clrf	TCP_FiniteStateMachine@nextState& (0+255),b
 16950                           
 16951                           ; BSR set to: 1
 16952                           ;tcpv4.c: 644: TCB_Reset(currentTCB);
 16953  0012BA  C040  F017         	movff	_currentTCB,TCB_Reset@tcbPtr
 16954  0012BE  C041  F018         	movff	_currentTCB+1,TCB_Reset@tcbPtr+1
 16955  0012C2  ECE3  F023         	call	_TCB_Reset	;wreg free
 16956                           
 16957                           ;tcpv4.c: 645: break;
 16958  0012C6  EF5D  F011         	goto	l9227
 16959  0012CA                     l8909:
 16960  0012CA  0101               	movlb	1	; () banked
 16961  0012CC  510F               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 16962                           
 16963                           ; Switch size 1, requested type "space"
 16964                           ; Number of cases is 2, Range of values is 0 to 3
 16965                           ; switch strategies available:
 16966                           ; Name         Instructions Cycles
 16967                           ; simple_byte            7     4 (average)
 16968                           ;	Chosen strategy is simple_byte
 16969  0012CE  E0F3               	bz	l1194
 16970  0012D0  0A03               	xorlw	3	; case 3
 16971  0012D2  E101 D732          	bz	l8887
 16972                           
 16973                           ;tcpv4.c: 650: break;
 16974  0012D6  EF5D  F011         	goto	l9227
 16975  0012DA                     l8911:
 16976                           
 16977                           ; BSR set to: 1
 16978                           ;tcpv4.c: 655: ;
 16979                           ;tcpv4.c: 657: currentTCB->remoteSeqno = tcpHeader.sequenceNumber;
 16980  0012DA  0E08               	movlw	8
 16981  0012DC  2440               	addwf	_currentTCB,w,c
 16982  0012DE  EC7A  F011         	call	PL387	;call to abstracted procedure
 16983  0012E2  64F7               	cpfsgt	tblptrh,c
 16984  0012E4  D003               	bra	u13257
 16985  0012E6  EC11  F012         	call	PL441	;call to abstracted procedure
 16986  0012EA  D004               	bra	u13250
 16987  0012EC                     u13257:
 16988  0012EC  EC86  F011         	call	PL389	;call to abstracted procedure
 16989  0012F0  EC7C  F012         	call	PL483	;call to abstracted procedure
 16990  0012F4                     u13250:
 16991                           
 16992                           ;tcpv4.c: 658: currentTCB->remoteAck = tcpHeader.sequenceNumber + 1;
 16993  0012F4  ECF7  F011         	call	PL425	;call to abstracted procedure
 16994  0012F8  ECD9  F011         	call	PL407	;call to abstracted procedure
 16995  0012FC  64F7               	cpfsgt	tblptrh,c
 16996  0012FE  D005               	bra	u13267
 16997  001300  EC47  F012         	call	PL457	;call to abstracted procedure
 16998  001304  EC40  F012         	call	PL455	;call to abstracted procedure
 16999  001308  D004               	bra	u13260
 17000  00130A                     u13267:
 17001  00130A  EC86  F011         	call	PL389	;call to abstracted procedure
 17002  00130E  EC85  F012         	call	PL491	;call to abstracted procedure
 17003  001312                     u13260:
 17004                           
 17005                           ;tcpv4.c: 661: currentTCB->remoteWnd = ((((uint16_t)tcpHeader.windowSize & (uint16_t)0xF
      +                          F00) >> 8) | (((uint16_t)tcpHeader.windowSize & (uint16_t)0x00FF) << 8));
 17006  001312  ECB9  F011         	call	PL405	;call to abstracted procedure
 17007  001316  64F7               	cpfsgt	tblptrh,c
 17008  001318  D003               	bra	u13277
 17009  00131A  EC40  F012         	call	PL455	;call to abstracted procedure
 17010  00131E  D004               	bra	u13270
 17011  001320                     u13277:
 17012  001320  EC86  F011         	call	PL389	;call to abstracted procedure
 17013  001324  EC97  F012         	call	PL507	;call to abstracted procedure
 17014  001328                     u13270:
 17015                           
 17016                           ;tcpv4.c: 662: currentTCB->mss = tcpMss;
 17017  001328  ECEE  F011         	call	PL419	;call to abstracted procedure
 17018  00132C  EC7A  F011         	call	PL387	;call to abstracted procedure
 17019  001330  64F7               	cpfsgt	tblptrh,c
 17020  001332  D003               	bra	u13287
 17021  001334  ECA8  F012         	call	PL545	;call to abstracted procedure
 17022  001338  D004               	bra	u13280
 17023  00133A                     u13287:
 17024  00133A  EC86  F011         	call	PL389	;call to abstracted procedure
 17025  00133E  ECBB  F012         	call	PL639	;call to abstracted procedure
 17026  001342                     u13280:
 17027                           
 17028                           ;tcpv4.c: 665: currentTCB->timeout = ((unsigned long)1*2);
 17029  001342  EC0D  F012         	call	PL431	;call to abstracted procedure
 17030  001346  EC7A  F011         	call	PL387	;call to abstracted procedure
 17031  00134A  64F7               	cpfsgt	tblptrh,c
 17032  00134C  D003               	bra	u13297
 17033  00134E  EC5B  F012         	call	PL467	;call to abstracted procedure
 17034  001352  D004               	bra	u13290
 17035  001354                     u13297:
 17036  001354  EC86  F011         	call	PL389	;call to abstracted procedure
 17037  001358  ECAF  F012         	call	PL617	;call to abstracted procedure
 17038  00135C                     u13290:
 17039                           
 17040                           ;tcpv4.c: 666: currentTCB->timeoutReloadValue = ((unsigned long)1*2);
 17041  00135C  EC09  F012         	call	PL429	;call to abstracted procedure
 17042  001360  EC7A  F011         	call	PL387	;call to abstracted procedure
 17043  001364  64F7               	cpfsgt	tblptrh,c
 17044  001366  D003               	bra	u13307
 17045  001368  EC5B  F012         	call	PL467	;call to abstracted procedure
 17046  00136C  D004               	bra	u13300
 17047  00136E                     u13307:
 17048  00136E  EC86  F011         	call	PL389	;call to abstracted procedure
 17049  001372  ECAF  F012         	call	PL617	;call to abstracted procedure
 17050  001376                     u13300:
 17051                           
 17052                           ;tcpv4.c: 667: currentTCB->timeoutsCount = (3u);
 17053  001376  ECEA  F011         	call	PL417	;call to abstracted procedure
 17054  00137A  EC7A  F011         	call	PL387	;call to abstracted procedure
 17055  00137E  64F7               	cpfsgt	tblptrh,c
 17056  001380  D004               	bra	u13317
 17057  001382  0E03               	movlw	3
 17058  001384  6EF5               	movwf	tablat,c
 17059  001386  000C               	tblwt		*
 17060  001388  D004               	bra	u13310
 17061  00138A                     u13317:
 17062  00138A  EC86  F011         	call	PL389	;call to abstracted procedure
 17063  00138E  0E03               	movlw	3
 17064  001390  6EEF               	movwf	indf0,c
 17065  001392                     u13310:
 17066                           
 17067                           ;tcpv4.c: 668: currentTCB->flags = 0x02U | 0x10U;
 17068  001392  EC8B  F011         	call	PL393	;call to abstracted procedure
 17069  001396  EC7A  F011         	call	PL387	;call to abstracted procedure
 17070  00139A  64F7               	cpfsgt	tblptrh,c
 17071  00139C  D004               	bra	u13327
 17072  00139E  0E12               	movlw	18
 17073  0013A0  6EF5               	movwf	tablat,c
 17074  0013A2  000C               	tblwt		*
 17075  0013A4  D004               	bra	u13320
 17076  0013A6                     u13327:
 17077  0013A6  EC86  F011         	call	PL389	;call to abstracted procedure
 17078  0013AA  0E12               	movlw	18
 17079  0013AC  6EEF               	movwf	indf0,c
 17080  0013AE                     u13320:
 17081  0013AE  D77C               	goto	l8901
 17082  0013B0                     l8929:
 17083                           
 17084                           ; BSR set to: 1
 17085                           ;tcpv4.c: 676: ;
 17086                           ;tcpv4.c: 678: currentTCB->timeout = 0;
 17087  0013B0  0E30               	movlw	48
 17088  0013B2  2440               	addwf	_currentTCB,w,c
 17089  0013B4  EC7A  F011         	call	PL387	;call to abstracted procedure
 17090  0013B8  64F7               	cpfsgt	tblptrh,c
 17091  0013BA  D003               	bra	u13337
 17092  0013BC  ECF2  F011         	call	PL423	;call to abstracted procedure
 17093  0013C0  D004               	bra	u13330
 17094  0013C2                     u13337:
 17095  0013C2  EC86  F011         	call	PL389	;call to abstracted procedure
 17096  0013C6  6AEE               	clrf	postinc0,c
 17097  0013C8  6AEF               	clrf	indf0,c
 17098  0013CA                     u13330:
 17099                           
 17100                           ;tcpv4.c: 680: if ((currentTCB->localSeqno + 1) == tcpHeader.ackNumber)
 17101  0013CA  EC05  F012         	call	PL427	;call to abstracted procedure
 17102  0013CE  EC7A  F011         	call	PL387	;call to abstracted procedure
 17103  0013D2  64F7               	cpfsgt	tblptrh,c
 17104  0013D4  D003               	bra	u13347
 17105  0013D6  EC8F  F011         	call	PL395	;call to abstracted procedure
 17106  0013DA  D004               	bra	u13340
 17107  0013DC                     u13347:
 17108  0013DC  EC86  F011         	call	PL389	;call to abstracted procedure
 17109  0013E0  ECB0  F011         	call	PL403	;call to abstracted procedure
 17110  0013E4                     u13340:
 17111  0013E4  ECA2  F011         	call	PL401	;call to abstracted procedure
 17112  0013E8  51D9               	movf	(_tcpHeader+8)& (0+255),w,b
 17113  0013EA  1906               	xorwf	(??_TCP_FiniteStateMachine+6)& (0+255),w,b
 17114  0013EC  E17E               	bnz	l8943
 17115  0013EE  51DA               	movf	(_tcpHeader+9)& (0+255),w,b
 17116  0013F0  1907               	xorwf	(??_TCP_FiniteStateMachine+7)& (0+255),w,b
 17117  0013F2  E17B               	bnz	l8943
 17118  0013F4  51DB               	movf	(_tcpHeader+10)& (0+255),w,b
 17119  0013F6  1908               	xorwf	(??_TCP_FiniteStateMachine+8)& (0+255),w,b
 17120  0013F8  E178               	bnz	l8943
 17121  0013FA  51DC               	movf	(_tcpHeader+11)& (0+255),w,b
 17122  0013FC  1909               	xorwf	(??_TCP_FiniteStateMachine+9)& (0+255),w,b
 17123  0013FE  A4D8               	btfss	status,2,c
 17124  001400                     u13351:
 17125  001400  D074               	goto	l8943
 17126                           
 17127                           ; BSR set to: 1
 17128                           ;tcpv4.c: 681: {
 17129                           ;tcpv4.c: 683: currentTCB->localSeqno = currentTCB->localSeqno + 1;
 17130  001402  0E10               	movlw	16
 17131  001404  2440               	addwf	_currentTCB,w,c
 17132  001406  EC7A  F011         	call	PL387	;call to abstracted procedure
 17133  00140A  64F7               	cpfsgt	tblptrh,c
 17134  00140C  D003               	bra	u13367
 17135  00140E  EC8F  F011         	call	PL395	;call to abstracted procedure
 17136  001412  D004               	bra	u13360
 17137  001414                     u13367:
 17138  001414  EC86  F011         	call	PL389	;call to abstracted procedure
 17139  001418  ECB0  F011         	call	PL403	;call to abstracted procedure
 17140  00141C                     u13360:
 17141  00141C  ECA2  F011         	call	PL401	;call to abstracted procedure
 17142  001420  0E10               	movlw	16
 17143  001422  EC2B  F012         	call	PL445	;call to abstracted procedure
 17144  001426  64F7               	cpfsgt	tblptrh,c
 17145  001428  D003               	bra	u13377
 17146  00142A  EC1E  F012         	call	PL443	;call to abstracted procedure
 17147  00142E  D004               	bra	u13370
 17148  001430                     u13377:
 17149  001430  EC86  F011         	call	PL389	;call to abstracted procedure
 17150  001434  EC73  F012         	call	PL481	;call to abstracted procedure
 17151  001438                     u13370:
 17152                           
 17153                           ;tcpv4.c: 684: currentTCB->flags = 0x10U;
 17154  001438  EC8B  F011         	call	PL393	;call to abstracted procedure
 17155  00143C  EC7A  F011         	call	PL387	;call to abstracted procedure
 17156  001440  64F7               	cpfsgt	tblptrh,c
 17157  001442  D004               	bra	u13387
 17158  001444  0E10               	movlw	16
 17159  001446  6EF5               	movwf	tablat,c
 17160  001448  000C               	tblwt		*
 17161  00144A  D004               	bra	u13380
 17162  00144C                     u13387:
 17163  00144C  EC86  F011         	call	PL389	;call to abstracted procedure
 17164  001450  0E10               	movlw	16
 17165  001452  6EEF               	movwf	indf0,c
 17166  001454                     u13380:
 17167                           
 17168                           ;tcpv4.c: 687: currentTCB->remoteSeqno = tcpHeader.sequenceNumber;
 17169  001454  ECE6  F011         	call	PL415	;call to abstracted procedure
 17170  001458  EC7A  F011         	call	PL387	;call to abstracted procedure
 17171  00145C  64F7               	cpfsgt	tblptrh,c
 17172  00145E  D003               	bra	u13397
 17173  001460  EC11  F012         	call	PL441	;call to abstracted procedure
 17174  001464  D004               	bra	u13390
 17175  001466                     u13397:
 17176  001466  EC86  F011         	call	PL389	;call to abstracted procedure
 17177  00146A  EC7C  F012         	call	PL483	;call to abstracted procedure
 17178  00146E                     u13390:
 17179                           
 17180                           ;tcpv4.c: 689: currentTCB->remoteAck = tcpHeader.sequenceNumber + 1;
 17181  00146E  ECF7  F011         	call	PL425	;call to abstracted procedure
 17182  001472  ECD9  F011         	call	PL407	;call to abstracted procedure
 17183  001476  64F7               	cpfsgt	tblptrh,c
 17184  001478  D005               	bra	u13407
 17185  00147A  EC47  F012         	call	PL457	;call to abstracted procedure
 17186  00147E  EC40  F012         	call	PL455	;call to abstracted procedure
 17187  001482  D004               	bra	u13400
 17188  001484                     u13407:
 17189  001484  EC86  F011         	call	PL389	;call to abstracted procedure
 17190  001488  EC85  F012         	call	PL491	;call to abstracted procedure
 17191  00148C                     u13400:
 17192                           
 17193                           ;tcpv4.c: 691: currentTCB->remoteWnd = ((((uint16_t)tcpHeader.windowSize & (uint16_t)0xF
      +                          F00) >> 8) | (((uint16_t)tcpHeader.windowSize & (uint16_t)0x00FF) << 8));
 17194  00148C  ECB9  F011         	call	PL405	;call to abstracted procedure
 17195  001490  64F7               	cpfsgt	tblptrh,c
 17196  001492  D003               	bra	u13417
 17197  001494  EC40  F012         	call	PL455	;call to abstracted procedure
 17198  001498  D004               	bra	u13410
 17199  00149A                     u13417:
 17200  00149A  EC86  F011         	call	PL389	;call to abstracted procedure
 17201  00149E  EC97  F012         	call	PL507	;call to abstracted procedure
 17202  0014A2                     u13410:
 17203                           
 17204                           ;tcpv4.c: 692: currentTCB->mss = tcpMss;
 17205  0014A2  ECEE  F011         	call	PL419	;call to abstracted procedure
 17206  0014A6  EC7A  F011         	call	PL387	;call to abstracted procedure
 17207  0014AA  64F7               	cpfsgt	tblptrh,c
 17208  0014AC  D003               	bra	u13427
 17209  0014AE  ECA8  F012         	call	PL545	;call to abstracted procedure
 17210  0014B2  D004               	bra	u13420
 17211  0014B4                     u13427:
 17212  0014B4  EC86  F011         	call	PL389	;call to abstracted procedure
 17213  0014B8  ECBB  F012         	call	PL639	;call to abstracted procedure
 17214  0014BC                     u13420:
 17215                           
 17216                           ;tcpv4.c: 694: if(TCP_Snd(currentTCB))
 17217  0014BC  EC61  F012         	call	PL471	;call to abstracted procedure
 17218  0014C0  ECCC  F012         	call	_TCP_Snd	;wreg free
 17219  0014C4  0900               	iorlw	0
 17220  0014C6  E102 EF5D  F011    	bz	l9227
 17221                           
 17222                           ; BSR set to: 0
 17223                           ;tcpv4.c: 695: {
 17224                           ;tcpv4.c: 696: nextState = ESTABLISHED;
 17225  0014CC  0E04               	movlw	4
 17226  0014CE  0101               	movlb	1	; () banked
 17227                           
 17228                           ; BSR set to: 1
 17229                           ;tcpv4.c: 697: currentTCB->socketState = SOCKET_CONNECTED;
 17230  0014D0  EC38  F012         	call	PL449	;call to abstracted procedure
 17231  0014D4  EC7A  F011         	call	PL387	;call to abstracted procedure
 17232  0014D8  64F7               	cpfsgt	tblptrh,c
 17233  0014DA  D004               	bra	u13447
 17234  0014DC  0E03               	movlw	3
 17235  0014DE  6EF5               	movwf	tablat,c
 17236  0014E0  000C               	tblwt		*
 17237  0014E2  D001               	bra	u13440
 17238  0014E4                     u13447:
 17239  0014E4  D268               	goto	u13937
 17240  0014E6                     u13440:
 17241  0014E6  EF5D  F011         	goto	l9227
 17242  0014EA                     l8943:
 17243                           
 17244                           ; BSR set to: 1
 17245                           ;tcpv4.c: 700: else
 17246                           ;tcpv4.c: 701: {
 17247                           ;tcpv4.c: 703: currentTCB->localSeqno = tcpHeader.ackNumber;
 17248  0014EA  0E10               	movlw	16
 17249  0014EC  2440               	addwf	_currentTCB,w,c
 17250  0014EE  EC7A  F011         	call	PL387	;call to abstracted procedure
 17251  0014F2  64F7               	cpfsgt	tblptrh,c
 17252  0014F4  D003               	bra	u13457
 17253  0014F6  EC4E  F012         	call	PL459	;call to abstracted procedure
 17254  0014FA  D004               	bra	u13450
 17255  0014FC                     u13457:
 17256  0014FC  EC86  F011         	call	PL389	;call to abstracted procedure
 17257  001500  EC8E  F012         	call	PL499	;call to abstracted procedure
 17258  001504                     u13450:
 17259                           
 17260                           ;tcpv4.c: 704: currentTCB->flags = 0x04U | 0x10U;
 17261  001504  EC8B  F011         	call	PL393	;call to abstracted procedure
 17262  001508  EC7A  F011         	call	PL387	;call to abstracted procedure
 17263  00150C  64F7               	cpfsgt	tblptrh,c
 17264  00150E  D004               	bra	u13467
 17265  001510  0E14               	movlw	20
 17266  001512  6EF5               	movwf	tablat,c
 17267  001514  000C               	tblwt		*
 17268  001516  D004               	bra	u13460
 17269  001518                     u13467:
 17270  001518  EC86  F011         	call	PL389	;call to abstracted procedure
 17271  00151C  0E14               	movlw	20
 17272  00151E  6EEF               	movwf	indf0,c
 17273  001520                     u13460:
 17274                           
 17275                           ;tcpv4.c: 705: if(TCP_Snd(currentTCB))
 17276  001520  EC61  F012         	call	PL471	;call to abstracted procedure
 17277  001524  ECCC  F012         	call	_TCP_Snd	;wreg free
 17278  001528                     L10:
 17279  001528  0900               	iorlw	0
 17280  00152A  E001 D6C4          	bnz	l1194
 17281  00152E  EF5D  F011         	goto	l9227
 17282  001532                     l8951:
 17283                           
 17284                           ; BSR set to: 1
 17285                           ;tcpv4.c: 713: ;
 17286                           ;tcpv4.c: 715: currentTCB->timeout = 0;
 17287  001532  0E30               	movlw	48
 17288  001534  2440               	addwf	_currentTCB,w,c
 17289  001536  EC7A  F011         	call	PL387	;call to abstracted procedure
 17290  00153A  64F7               	cpfsgt	tblptrh,c
 17291  00153C  D003               	bra	u13487
 17292  00153E  ECF2  F011         	call	PL423	;call to abstracted procedure
 17293  001542  D004               	bra	u13480
 17294  001544                     u13487:
 17295  001544  EC86  F011         	call	PL389	;call to abstracted procedure
 17296  001548  6AEE               	clrf	postinc0,c
 17297  00154A  6AEF               	clrf	indf0,c
 17298  00154C                     u13480:
 17299                           
 17300                           ;tcpv4.c: 717: if ((currentTCB->localSeqno + 1) == tcpHeader.ackNumber)
 17301  00154C  EC05  F012         	call	PL427	;call to abstracted procedure
 17302  001550  EC7A  F011         	call	PL387	;call to abstracted procedure
 17303  001554  64F7               	cpfsgt	tblptrh,c
 17304  001556  D003               	bra	u13497
 17305  001558  EC8F  F011         	call	PL395	;call to abstracted procedure
 17306  00155C  D004               	bra	u13490
 17307  00155E                     u13497:
 17308  00155E  EC86  F011         	call	PL389	;call to abstracted procedure
 17309  001562  ECB0  F011         	call	PL403	;call to abstracted procedure
 17310  001566                     u13490:
 17311  001566  ECA2  F011         	call	PL401	;call to abstracted procedure
 17312  00156A  51D9               	movf	(_tcpHeader+8)& (0+255),w,b
 17313  00156C  1906               	xorwf	(??_TCP_FiniteStateMachine+6)& (0+255),w,b
 17314  00156E  E176               	bnz	l8963
 17315  001570  51DA               	movf	(_tcpHeader+9)& (0+255),w,b
 17316  001572  1907               	xorwf	(??_TCP_FiniteStateMachine+7)& (0+255),w,b
 17317  001574  E173               	bnz	l8963
 17318  001576  51DB               	movf	(_tcpHeader+10)& (0+255),w,b
 17319  001578  1908               	xorwf	(??_TCP_FiniteStateMachine+8)& (0+255),w,b
 17320  00157A  E170               	bnz	l8963
 17321  00157C  51DC               	movf	(_tcpHeader+11)& (0+255),w,b
 17322  00157E  1909               	xorwf	(??_TCP_FiniteStateMachine+9)& (0+255),w,b
 17323  001580  A4D8               	btfss	status,2,c
 17324  001582                     u13501:
 17325  001582  D06C               	goto	l8963
 17326                           
 17327                           ; BSR set to: 1
 17328                           ;tcpv4.c: 718: {
 17329                           ;tcpv4.c: 720: currentTCB->localSeqno = currentTCB->localSeqno + 1;
 17330  001584  0E10               	movlw	16
 17331  001586  2440               	addwf	_currentTCB,w,c
 17332  001588  EC7A  F011         	call	PL387	;call to abstracted procedure
 17333  00158C  64F7               	cpfsgt	tblptrh,c
 17334  00158E  D003               	bra	u13517
 17335  001590  EC8F  F011         	call	PL395	;call to abstracted procedure
 17336  001594  D004               	bra	u13510
 17337  001596                     u13517:
 17338  001596  EC86  F011         	call	PL389	;call to abstracted procedure
 17339  00159A  ECB0  F011         	call	PL403	;call to abstracted procedure
 17340  00159E                     u13510:
 17341  00159E  ECA2  F011         	call	PL401	;call to abstracted procedure
 17342  0015A2  0E10               	movlw	16
 17343  0015A4  EC2B  F012         	call	PL445	;call to abstracted procedure
 17344  0015A8  64F7               	cpfsgt	tblptrh,c
 17345  0015AA  D003               	bra	u13527
 17346  0015AC  EC1E  F012         	call	PL443	;call to abstracted procedure
 17347  0015B0  D004               	bra	u13520
 17348  0015B2                     u13527:
 17349  0015B2  EC86  F011         	call	PL389	;call to abstracted procedure
 17350  0015B6  EC73  F012         	call	PL481	;call to abstracted procedure
 17351  0015BA                     u13520:
 17352                           
 17353                           ;tcpv4.c: 721: currentTCB->flags = 0x10U;
 17354  0015BA  EC8B  F011         	call	PL393	;call to abstracted procedure
 17355  0015BE  EC7A  F011         	call	PL387	;call to abstracted procedure
 17356  0015C2  64F7               	cpfsgt	tblptrh,c
 17357  0015C4  D004               	bra	u13537
 17358  0015C6  0E10               	movlw	16
 17359  0015C8  6EF5               	movwf	tablat,c
 17360  0015CA  000C               	tblwt		*
 17361  0015CC  D004               	bra	u13530
 17362  0015CE                     u13537:
 17363  0015CE  EC86  F011         	call	PL389	;call to abstracted procedure
 17364  0015D2  0E10               	movlw	16
 17365  0015D4  6EEF               	movwf	indf0,c
 17366  0015D6                     u13530:
 17367                           
 17368                           ;tcpv4.c: 724: currentTCB->remoteSeqno = tcpHeader.sequenceNumber;
 17369  0015D6  ECE6  F011         	call	PL415	;call to abstracted procedure
 17370  0015DA  EC7A  F011         	call	PL387	;call to abstracted procedure
 17371  0015DE  64F7               	cpfsgt	tblptrh,c
 17372  0015E0  D003               	bra	u13547
 17373  0015E2  EC11  F012         	call	PL441	;call to abstracted procedure
 17374  0015E6  D004               	bra	u13540
 17375  0015E8                     u13547:
 17376  0015E8  EC86  F011         	call	PL389	;call to abstracted procedure
 17377  0015EC  EC7C  F012         	call	PL483	;call to abstracted procedure
 17378  0015F0                     u13540:
 17379                           
 17380                           ;tcpv4.c: 725: currentTCB->remoteAck = tcpHeader.sequenceNumber + 1;
 17381  0015F0  ECF7  F011         	call	PL425	;call to abstracted procedure
 17382  0015F4  ECD9  F011         	call	PL407	;call to abstracted procedure
 17383  0015F8  64F7               	cpfsgt	tblptrh,c
 17384  0015FA  D005               	bra	u13557
 17385  0015FC  EC47  F012         	call	PL457	;call to abstracted procedure
 17386  001600  EC40  F012         	call	PL455	;call to abstracted procedure
 17387  001604  D004               	bra	u13550
 17388  001606                     u13557:
 17389  001606  EC86  F011         	call	PL389	;call to abstracted procedure
 17390  00160A  EC85  F012         	call	PL491	;call to abstracted procedure
 17391  00160E                     u13550:
 17392                           
 17393                           ;tcpv4.c: 727: currentTCB->remoteWnd = ((((uint16_t)tcpHeader.windowSize & (uint16_t)0xF
      +                          F00) >> 8) | (((uint16_t)tcpHeader.windowSize & (uint16_t)0x00FF) << 8));
 17394  00160E  ECB9  F011         	call	PL405	;call to abstracted procedure
 17395  001612  64F7               	cpfsgt	tblptrh,c
 17396  001614  D003               	bra	u13567
 17397  001616  EC40  F012         	call	PL455	;call to abstracted procedure
 17398  00161A  D004               	bra	u13560
 17399  00161C                     u13567:
 17400  00161C  EC86  F011         	call	PL389	;call to abstracted procedure
 17401  001620  EC97  F012         	call	PL507	;call to abstracted procedure
 17402  001624                     u13560:
 17403                           
 17404                           ;tcpv4.c: 728: currentTCB->mss = tcpMss;
 17405  001624  ECEE  F011         	call	PL419	;call to abstracted procedure
 17406  001628  EC7A  F011         	call	PL387	;call to abstracted procedure
 17407  00162C  64F7               	cpfsgt	tblptrh,c
 17408  00162E  D003               	bra	u13577
 17409  001630  ECA8  F012         	call	PL545	;call to abstracted procedure
 17410  001634  D004               	bra	u13570
 17411  001636                     u13577:
 17412  001636  EC86  F011         	call	PL389	;call to abstracted procedure
 17413  00163A  ECBB  F012         	call	PL639	;call to abstracted procedure
 17414  00163E                     u13570:
 17415                           
 17416                           ;tcpv4.c: 730: nextState = ESTABLISHED;
 17417  00163E  0E04               	movlw	4
 17418  001640  0101               	movlb	1	; () banked
 17419                           
 17420                           ; BSR set to: 1
 17421                           ;tcpv4.c: 731: currentTCB->socketState = SOCKET_CONNECTED;
 17422  001642  EC38  F012         	call	PL449	;call to abstracted procedure
 17423  001646  EC7A  F011         	call	PL387	;call to abstracted procedure
 17424  00164A  64F7               	cpfsgt	tblptrh,c
 17425  00164C  D004               	bra	u13587
 17426  00164E  0E03               	movlw	3
 17427  001650  6EF5               	movwf	tablat,c
 17428  001652  000C               	tblwt		*
 17429  001654  D001               	bra	u13580
 17430  001656                     u13587:
 17431  001656  D1AF               	goto	u13937
 17432  001658                     u13580:
 17433                           
 17434                           ;tcpv4.c: 732: }
 17435  001658  EF5D  F011         	goto	l9227
 17436  00165C                     l8963:
 17437                           
 17438                           ; BSR set to: 1
 17439                           ;tcpv4.c: 733: else
 17440                           ;tcpv4.c: 734: {
 17441                           ;tcpv4.c: 736: currentTCB->localSeqno = tcpHeader.ackNumber;
 17442  00165C  0E10               	movlw	16
 17443  00165E  2440               	addwf	_currentTCB,w,c
 17444  001660  EC7A  F011         	call	PL387	;call to abstracted procedure
 17445  001664  64F7               	cpfsgt	tblptrh,c
 17446  001666  D003               	bra	u13597
 17447  001668  EC4E  F012         	call	PL459	;call to abstracted procedure
 17448  00166C  D004               	bra	u13590
 17449  00166E                     u13597:
 17450  00166E  EC86  F011         	call	PL389	;call to abstracted procedure
 17451  001672  EC8E  F012         	call	PL499	;call to abstracted procedure
 17452  001676                     u13590:
 17453                           
 17454                           ;tcpv4.c: 737: currentTCB->flags = 0x04U;
 17455  001676  EC8B  F011         	call	PL393	;call to abstracted procedure
 17456  00167A  EC7A  F011         	call	PL387	;call to abstracted procedure
 17457  00167E  64F7               	cpfsgt	tblptrh,c
 17458  001680  D004               	bra	u13607
 17459  001682  0E04               	movlw	4
 17460  001684  6EF5               	movwf	tablat,c
 17461  001686  000C               	tblwt		*
 17462  001688  D004               	bra	u13600
 17463  00168A                     u13607:
 17464  00168A  EC86  F011         	call	PL389	;call to abstracted procedure
 17465  00168E  0E04               	movlw	4
 17466  001690  6EEF               	movwf	indf0,c
 17467  001692                     u13600:
 17468                           
 17469                           ;tcpv4.c: 738: if(TCP_Snd(currentTCB))
 17470  001692  EC61  F012         	call	PL471	;call to abstracted procedure
 17471  001696  ECCC  F012         	call	_TCP_Snd	;wreg free
 17472  00169A  D746               	goto	L10
 17473  00169C                     l8973:
 17474                           
 17475                           ; BSR set to: 1
 17476                           ;tcpv4.c: 752: ;
 17477                           ;tcpv4.c: 755: if (currentTCB->timeoutsCount)
 17478  00169C  0E34               	movlw	52
 17479  00169E  2440               	addwf	_currentTCB,w,c
 17480  0016A0  EC7A  F011         	call	PL387	;call to abstracted procedure
 17481  0016A4  64F7               	cpfsgt	tblptrh,c
 17482  0016A6  D003               	bra	u13627
 17483  0016A8  0008               	tblrd		*
 17484  0016AA  50F5               	movf	tablat,w,c
 17485  0016AC  D003               	bra	u13620
 17486  0016AE                     u13627:
 17487  0016AE  EC86  F011         	call	PL389	;call to abstracted procedure
 17488  0016B2  50EF               	movf	indf0,w,c
 17489  0016B4                     u13620:
 17490  0016B4  0900               	iorlw	0
 17491  0016B6  E037               	bz	l8989
 17492                           
 17493                           ;tcpv4.c: 756: {
 17494                           ;tcpv4.c: 757: if(TCP_Snd(currentTCB))
 17495  0016B8  EC61  F012         	call	PL471	;call to abstracted procedure
 17496  0016BC  ECCC  F012         	call	_TCP_Snd	;wreg free
 17497  0016C0  0900               	iorlw	0
 17498  0016C2  E102 EF5D  F011    	bz	l9227
 17499                           
 17500                           ; BSR set to: 0
 17501                           ;tcpv4.c: 758: {
 17502                           ;tcpv4.c: 759: if (currentTCB->flags & 0x04U)
 17503  0016C8  EC8B  F011         	call	PL393	;call to abstracted procedure
 17504  0016CC  EC7A  F011         	call	PL387	;call to abstracted procedure
 17505  0016D0  64F7               	cpfsgt	tblptrh,c
 17506  0016D2  D003               	bra	u13657
 17507  0016D4  0008               	tblrd		*
 17508  0016D6  50F5               	movf	tablat,w,c
 17509  0016D8  D003               	bra	u13650
 17510  0016DA                     u13657:
 17511  0016DA  EC86  F011         	call	PL389	;call to abstracted procedure
 17512  0016DE  50EF               	movf	indf0,w,c
 17513  0016E0                     u13650:
 17514  0016E0  0101               	movlb	1	; () banked
 17515  0016E2  6F02               	movwf	(??_TCP_FiniteStateMachine+2)& (0+255),b
 17516  0016E4  B502               	btfsc	(??_TCP_FiniteStateMachine+2)& (0+255),2,b
 17517  0016E6  D5E7               	goto	l1194
 17518                           
 17519                           ; BSR set to: 1
 17520                           ;tcpv4.c: 764: if(currentTCB->flags & 0x10U)
 17521  0016E8  0E35               	movlw	53
 17522  0016EA  2440               	addwf	_currentTCB,w,c
 17523  0016EC  EC7A  F011         	call	PL387	;call to abstracted procedure
 17524  0016F0  64F7               	cpfsgt	tblptrh,c
 17525  0016F2  D003               	bra	u13677
 17526  0016F4  0008               	tblrd		*
 17527  0016F6  50F5               	movf	tablat,w,c
 17528  0016F8  D003               	bra	u13670
 17529  0016FA                     u13677:
 17530  0016FA  EC86  F011         	call	PL389	;call to abstracted procedure
 17531  0016FE  50EF               	movf	indf0,w,c
 17532  001700                     u13670:
 17533  001700  0101               	movlb	1	; () banked
 17534  001702  6F02               	movwf	(??_TCP_FiniteStateMachine+2)& (0+255),b
 17535  001704  A902               	btfss	(??_TCP_FiniteStateMachine+2)& (0+255),4,b
 17536  001706  EF5D  F011         	goto	l9227
 17537                           
 17538                           ; BSR set to: 1
 17539                           ;tcpv4.c: 765: {
 17540                           ;tcpv4.c: 766: nextState = ESTABLISHED;
 17541  00170A  0E04               	movlw	4
 17542                           
 17543                           ; BSR set to: 1
 17544                           ;tcpv4.c: 767: currentTCB->socketState = SOCKET_CONNECTED;
 17545  00170C  EC38  F012         	call	PL449	;call to abstracted procedure
 17546  001710  EC7A  F011         	call	PL387	;call to abstracted procedure
 17547  001714  64F7               	cpfsgt	tblptrh,c
 17548  001716  D004               	bra	u13697
 17549  001718  0E03               	movlw	3
 17550  00171A  6EF5               	movwf	tablat,c
 17551  00171C  000C               	tblwt		*
 17552  00171E  D001               	bra	u13690
 17553  001720                     u13697:
 17554  001720  D14A               	goto	u13937
 17555  001722                     u13690:
 17556  001722  EF5D  F011         	goto	l9227
 17557  001726                     l8989:
 17558                           
 17559                           ;tcpv4.c: 771: {
 17560                           ;tcpv4.c: 773: currentTCB->flags = 0x04U;
 17561  001726  EC8B  F011         	call	PL393	;call to abstracted procedure
 17562  00172A  EC7A  F011         	call	PL387	;call to abstracted procedure
 17563  00172E  64F7               	cpfsgt	tblptrh,c
 17564  001730  D004               	bra	u13707
 17565  001732  0E04               	movlw	4
 17566  001734  6EF5               	movwf	tablat,c
 17567  001736  000C               	tblwt		*
 17568  001738  D004               	bra	u13700
 17569  00173A                     u13707:
 17570  00173A  EC86  F011         	call	PL389	;call to abstracted procedure
 17571  00173E  0E04               	movlw	4
 17572  001740  6EEF               	movwf	indf0,c
 17573  001742                     u13700:
 17574                           
 17575                           ;tcpv4.c: 774: if(TCP_Snd(currentTCB))
 17576  001742  EC61  F012         	call	PL471	;call to abstracted procedure
 17577  001746  ECCC  F012         	call	_TCP_Snd	;wreg free
 17578  00174A  D6EE               	goto	L10
 17579  00174C                     l9001:
 17580  00174C  0101               	movlb	1	; () banked
 17581  00174E  510F               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 17582                           
 17583                           ; Switch size 1, requested type "space"
 17584                           ; Number of cases is 7, Range of values is 0 to 12
 17585                           ; switch strategies available:
 17586                           ; Name         Instructions Cycles
 17587                           ; simple_byte           22    12 (average)
 17588                           ;	Chosen strategy is simple_byte
 17589  001750  E101 D5B1          	bz	l1194
 17590  001754  0A03               	xorlw	3	; case 3
 17591  001756  E101 D5C0          	bz	l8911
 17592  00175A  0A07               	xorlw	7	; case 4
 17593  00175C  E101 D6E9          	bz	l8951
 17594  001760  0A01               	xorlw	1	; case 5
 17595  001762  E101 D625          	bz	l8929
 17596  001766  0A0C               	xorlw	12	; case 9
 17597  001768  E101 D5A5          	bz	l1194
 17598  00176C  0A03               	xorlw	3	; case 10
 17599  00176E  E101 D5A2          	bz	l1194
 17600  001772  0A06               	xorlw	6	; case 12
 17601  001774  E093               	bz	l8973
 17602  001776  EF5D  F011         	goto	l9227
 17603  00177A                     l9003:
 17604                           
 17605                           ; BSR set to: 1
 17606                           ;tcpv4.c: 796: ;
 17607                           ;tcpv4.c: 797: if (currentTCB->localPort == tcpHeader.destPort)
 17608  00177A  ECB3  F012         	call	PL623	;call to abstracted procedure
 17609  00177E  64F7               	cpfsgt	tblptrh,c
 17610  001780  D003               	bra	u13727
 17611  001782  ECC0  F012         	call	PL641	;call to abstracted procedure
 17612  001786  D004               	bra	u13720
 17613  001788                     u13727:
 17614  001788  EC86  F011         	call	PL389	;call to abstracted procedure
 17615  00178C  ECC7  F012         	call	PL693	;call to abstracted procedure
 17616  001790                     u13720:
 17617  001790  0101               	movlb	1	; () banked
 17618  001792  51D3               	movf	(_tcpHeader+2)& (0+255),w,b
 17619  001794  1900               	xorwf	??_TCP_FiniteStateMachine& (0+255),w,b
 17620  001796  E103               	bnz	u13731
 17621  001798  51D4               	movf	(_tcpHeader+3)& (0+255),w,b
 17622  00179A  1901               	xorwf	(??_TCP_FiniteStateMachine+1)& (0+255),w,b
 17623  00179C  A4D8               	btfss	status,2,c
 17624  00179E                     u13731:
 17625  00179E  EF5D  F011         	goto	l9227
 17626                           
 17627                           ; BSR set to: 1
 17628                           ;tcpv4.c: 798: {
 17629                           ;tcpv4.c: 800: currentTCB->timeout = 0;
 17630  0017A2  0E30               	movlw	48
 17631  0017A4  2440               	addwf	_currentTCB,w,c
 17632  0017A6  EC7A  F011         	call	PL387	;call to abstracted procedure
 17633  0017AA  64F7               	cpfsgt	tblptrh,c
 17634  0017AC  D003               	bra	u13747
 17635  0017AE  ECF2  F011         	call	PL423	;call to abstracted procedure
 17636  0017B2  D004               	bra	u13740
 17637  0017B4                     u13747:
 17638  0017B4  EC86  F011         	call	PL389	;call to abstracted procedure
 17639  0017B8  6AEE               	clrf	postinc0,c
 17640  0017BA  6AEF               	clrf	indf0,c
 17641  0017BC                     u13740:
 17642                           
 17643                           ;tcpv4.c: 804: if ((currentTCB->destIP == receivedRemoteAddress) && (currentTCB->destPor
      +                          t == tcpHeader.sourcePort))
 17644  0017BC  ECA0  F012         	call	PL515	;call to abstracted procedure
 17645  0017C0  EC7A  F011         	call	PL387	;call to abstracted procedure
 17646  0017C4  64F7               	cpfsgt	tblptrh,c
 17647  0017C6  D003               	bra	u13757
 17648  0017C8  EC8F  F011         	call	PL395	;call to abstracted procedure
 17649  0017CC  D004               	bra	u13750
 17650  0017CE                     u13757:
 17651  0017CE  EC86  F011         	call	PL389	;call to abstracted procedure
 17652  0017D2  ECB0  F011         	call	PL403	;call to abstracted procedure
 17653  0017D6                     u13750:
 17654  0017D6  503C               	movf	_receivedRemoteAddress,w,c
 17655  0017D8  0101               	movlb	1	; () banked
 17656  0017DA  1902               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 17657  0017DC  E13D               	bnz	l9013
 17658  0017DE  503D               	movf	_receivedRemoteAddress+1,w,c
 17659  0017E0  1903               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 17660  0017E2  E13A               	bnz	l9013
 17661  0017E4  503E               	movf	_receivedRemoteAddress+2,w,c
 17662  0017E6  1904               	xorwf	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 17663  0017E8  E137               	bnz	l9013
 17664  0017EA  503F               	movf	_receivedRemoteAddress+3,w,c
 17665  0017EC  1905               	xorwf	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 17666  0017EE  E134               	bnz	l9013
 17667                           
 17668                           ; BSR set to: 1
 17669  0017F0  0E06               	movlw	6
 17670  0017F2  2440               	addwf	_currentTCB,w,c
 17671  0017F4  EC7A  F011         	call	PL387	;call to abstracted procedure
 17672  0017F8  64F7               	cpfsgt	tblptrh,c
 17673  0017FA  D004               	bra	u13777
 17674  0017FC  0009               	tblrd		*+
 17675  0017FE  EC9C  F011         	call	PL397	;call to abstracted procedure
 17676  001802  D006               	bra	u13770
 17677  001804                     u13777:
 17678  001804  EC86  F011         	call	PL389	;call to abstracted procedure
 17679  001808  CFEE F102          	movff	postinc0,??_TCP_FiniteStateMachine+2
 17680  00180C  CFEE F103          	movff	postinc0,??_TCP_FiniteStateMachine+3
 17681  001810                     u13770:
 17682  001810  0101               	movlb	1	; () banked
 17683  001812  51D1               	movf	_tcpHeader& (0+255),w,b
 17684  001814  1902               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 17685  001816  E120               	bnz	l9013
 17686  001818  51D2               	movf	(_tcpHeader+1)& (0+255),w,b
 17687  00181A  1903               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 17688  00181C  E11D               	bnz	l9013
 17689                           
 17690                           ; BSR set to: 1
 17691                           ;tcpv4.c: 805: if ((currentTCB->localSeqno + 1) == tcpHeader.ackNumber)
 17692  00181E  0E10               	movlw	16
 17693  001820  2440               	addwf	_currentTCB,w,c
 17694  001822  EC7A  F011         	call	PL387	;call to abstracted procedure
 17695  001826  64F7               	cpfsgt	tblptrh,c
 17696  001828  D003               	bra	u13797
 17697  00182A  EC8F  F011         	call	PL395	;call to abstracted procedure
 17698  00182E  D004               	bra	u13790
 17699  001830                     u13797:
 17700  001830  EC86  F011         	call	PL389	;call to abstracted procedure
 17701  001834  ECB0  F011         	call	PL403	;call to abstracted procedure
 17702  001838                     u13790:
 17703  001838  ECA2  F011         	call	PL401	;call to abstracted procedure
 17704  00183C  51D9               	movf	(_tcpHeader+8)& (0+255),w,b
 17705  00183E  1906               	xorwf	(??_TCP_FiniteStateMachine+6)& (0+255),w,b
 17706  001840  E10B               	bnz	l9013
 17707  001842  51DA               	movf	(_tcpHeader+9)& (0+255),w,b
 17708  001844  1907               	xorwf	(??_TCP_FiniteStateMachine+7)& (0+255),w,b
 17709  001846  E108               	bnz	l9013
 17710  001848  51DB               	movf	(_tcpHeader+10)& (0+255),w,b
 17711  00184A  1908               	xorwf	(??_TCP_FiniteStateMachine+8)& (0+255),w,b
 17712  00184C  E105               	bnz	l9013
 17713  00184E  51DC               	movf	(_tcpHeader+11)& (0+255),w,b
 17714  001850  1909               	xorwf	(??_TCP_FiniteStateMachine+9)& (0+255),w,b
 17715  001852  E102               	bnz	l9013
 17716                           
 17717                           ; BSR set to: 1
 17718                           ;tcpv4.c: 807: nextState = ESTABLISHED;
 17719  001854  0E04               	movlw	4
 17720  001856  6F10               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 17721  001858                     l9013:
 17722                           
 17723                           ; BSR set to: 1
 17724                           ;tcpv4.c: 808: currentTCB->socketState = SOCKET_CONNECTED;
 17725  001858  0E36               	movlw	54
 17726  00185A  2440               	addwf	_currentTCB,w,c
 17727  00185C  EC7A  F011         	call	PL387	;call to abstracted procedure
 17728  001860  64F7               	cpfsgt	tblptrh,c
 17729  001862  D004               	bra	u13817
 17730  001864  0E03               	movlw	3
 17731  001866  6EF5               	movwf	tablat,c
 17732  001868  000C               	tblwt		*
 17733  00186A  D001               	bra	u13810
 17734  00186C                     u13817:
 17735  00186C  D0A4               	goto	u13937
 17736  00186E                     u13810:
 17737  00186E  EF5D  F011         	goto	l9227
 17738  001872                     l9015:
 17739                           
 17740                           ; BSR set to: 1
 17741                           ;tcpv4.c: 812: ;
 17742                           ;tcpv4.c: 816: if ((currentTCB->destIP == receivedRemoteAddress) && (currentTCB->destPor
      +                          t == tcpHeader.sourcePort))
 17743  001872  0E02               	movlw	2
 17744  001874  2440               	addwf	_currentTCB,w,c
 17745  001876  EC7A  F011         	call	PL387	;call to abstracted procedure
 17746  00187A  64F7               	cpfsgt	tblptrh,c
 17747  00187C  D003               	bra	u13827
 17748  00187E  EC8F  F011         	call	PL395	;call to abstracted procedure
 17749  001882  D004               	bra	u13820
 17750  001884                     u13827:
 17751  001884  EC86  F011         	call	PL389	;call to abstracted procedure
 17752  001888  ECB0  F011         	call	PL403	;call to abstracted procedure
 17753  00188C                     u13820:
 17754  00188C  503C               	movf	_receivedRemoteAddress,w,c
 17755  00188E  0101               	movlb	1	; () banked
 17756  001890  1902               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 17757  001892  E109               	bnz	u13831
 17758  001894  503D               	movf	_receivedRemoteAddress+1,w,c
 17759  001896  1903               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 17760  001898  E106               	bnz	u13831
 17761  00189A  503E               	movf	_receivedRemoteAddress+2,w,c
 17762  00189C  1904               	xorwf	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 17763  00189E  E103               	bnz	u13831
 17764  0018A0  503F               	movf	_receivedRemoteAddress+3,w,c
 17765  0018A2  1905               	xorwf	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 17766  0018A4  A4D8               	btfss	status,2,c
 17767  0018A6                     u13831:
 17768  0018A6  EF5D  F011         	goto	l9227
 17769                           
 17770                           ; BSR set to: 1
 17771  0018AA  0E06               	movlw	6
 17772  0018AC  2440               	addwf	_currentTCB,w,c
 17773  0018AE  EC7A  F011         	call	PL387	;call to abstracted procedure
 17774  0018B2  64F7               	cpfsgt	tblptrh,c
 17775  0018B4  D004               	bra	u13847
 17776  0018B6  0009               	tblrd		*+
 17777  0018B8  EC9C  F011         	call	PL397	;call to abstracted procedure
 17778  0018BC  D006               	bra	u13840
 17779  0018BE                     u13847:
 17780  0018BE  EC86  F011         	call	PL389	;call to abstracted procedure
 17781  0018C2  CFEE F102          	movff	postinc0,??_TCP_FiniteStateMachine+2
 17782  0018C6  CFEE F103          	movff	postinc0,??_TCP_FiniteStateMachine+3
 17783  0018CA                     u13840:
 17784  0018CA  0101               	movlb	1	; () banked
 17785  0018CC  51D1               	movf	_tcpHeader& (0+255),w,b
 17786  0018CE  1902               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 17787  0018D0  E103               	bnz	u13851
 17788  0018D2  51D2               	movf	(_tcpHeader+1)& (0+255),w,b
 17789  0018D4  1903               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 17790  0018D6  A4D8               	btfss	status,2,c
 17791  0018D8                     u13851:
 17792  0018D8  EF5D  F011         	goto	l9227
 17793                           
 17794                           ; BSR set to: 1
 17795                           ;tcpv4.c: 817: {
 17796                           ;tcpv4.c: 820: if (currentTCB->remoteAck == tcpHeader.sequenceNumber)
 17797  0018DC  0E0C               	movlw	12
 17798  0018DE  2440               	addwf	_currentTCB,w,c
 17799  0018E0  EC7A  F011         	call	PL387	;call to abstracted procedure
 17800  0018E4  64F7               	cpfsgt	tblptrh,c
 17801  0018E6  D003               	bra	u13867
 17802  0018E8  EC8F  F011         	call	PL395	;call to abstracted procedure
 17803  0018EC  D004               	bra	u13860
 17804  0018EE                     u13867:
 17805  0018EE  EC86  F011         	call	PL389	;call to abstracted procedure
 17806  0018F2  ECB0  F011         	call	PL403	;call to abstracted procedure
 17807  0018F6                     u13860:
 17808  0018F6  0101               	movlb	1	; () banked
 17809  0018F8  51D5               	movf	(_tcpHeader+4)& (0+255),w,b
 17810  0018FA  1902               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 17811  0018FC  E109               	bnz	u13871
 17812  0018FE  51D6               	movf	(_tcpHeader+5)& (0+255),w,b
 17813  001900  1903               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 17814  001902  E106               	bnz	u13871
 17815  001904  51D7               	movf	(_tcpHeader+6)& (0+255),w,b
 17816  001906  1904               	xorwf	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 17817  001908  E103               	bnz	u13871
 17818  00190A  51D8               	movf	(_tcpHeader+7)& (0+255),w,b
 17819  00190C  1905               	xorwf	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 17820  00190E  A4D8               	btfss	status,2,c
 17821  001910                     u13871:
 17822  001910  EF5D  F011         	goto	l9227
 17823                           
 17824                           ; BSR set to: 1
 17825                           ;tcpv4.c: 821: {
 17826                           ;tcpv4.c: 823: if ((currentTCB->localSeqno + 1) == tcpHeader.ackNumber)
 17827  001914  0E10               	movlw	16
 17828  001916  2440               	addwf	_currentTCB,w,c
 17829  001918  EC7A  F011         	call	PL387	;call to abstracted procedure
 17830  00191C  64F7               	cpfsgt	tblptrh,c
 17831  00191E  D003               	bra	u13887
 17832  001920  EC8F  F011         	call	PL395	;call to abstracted procedure
 17833  001924  D004               	bra	u13880
 17834  001926                     u13887:
 17835  001926  EC86  F011         	call	PL389	;call to abstracted procedure
 17836  00192A  ECB0  F011         	call	PL403	;call to abstracted procedure
 17837  00192E                     u13880:
 17838  00192E  ECA2  F011         	call	PL401	;call to abstracted procedure
 17839  001932  51D9               	movf	(_tcpHeader+8)& (0+255),w,b
 17840  001934  1906               	xorwf	(??_TCP_FiniteStateMachine+6)& (0+255),w,b
 17841  001936  E109               	bnz	u13891
 17842  001938  51DA               	movf	(_tcpHeader+9)& (0+255),w,b
 17843  00193A  1907               	xorwf	(??_TCP_FiniteStateMachine+7)& (0+255),w,b
 17844  00193C  E106               	bnz	u13891
 17845  00193E  51DB               	movf	(_tcpHeader+10)& (0+255),w,b
 17846  001940  1908               	xorwf	(??_TCP_FiniteStateMachine+8)& (0+255),w,b
 17847  001942  E103               	bnz	u13891
 17848  001944  51DC               	movf	(_tcpHeader+11)& (0+255),w,b
 17849  001946  1909               	xorwf	(??_TCP_FiniteStateMachine+9)& (0+255),w,b
 17850  001948  A4D8               	btfss	status,2,c
 17851  00194A                     u13891:
 17852  00194A  EF5D  F011         	goto	l9227
 17853                           
 17854                           ; BSR set to: 1
 17855                           ;tcpv4.c: 824: {
 17856                           ;tcpv4.c: 825: currentTCB->localSeqno = currentTCB->localSeqno + 1;
 17857  00194E  0E10               	movlw	16
 17858  001950  2440               	addwf	_currentTCB,w,c
 17859  001952  EC7A  F011         	call	PL387	;call to abstracted procedure
 17860  001956  64F7               	cpfsgt	tblptrh,c
 17861  001958  D003               	bra	u13907
 17862  00195A  EC8F  F011         	call	PL395	;call to abstracted procedure
 17863  00195E  D004               	bra	u13900
 17864  001960                     u13907:
 17865  001960  EC86  F011         	call	PL389	;call to abstracted procedure
 17866  001964  ECB0  F011         	call	PL403	;call to abstracted procedure
 17867  001968                     u13900:
 17868  001968  ECA2  F011         	call	PL401	;call to abstracted procedure
 17869  00196C  0E10               	movlw	16
 17870  00196E  EC2B  F012         	call	PL445	;call to abstracted procedure
 17871  001972  64F7               	cpfsgt	tblptrh,c
 17872  001974  D003               	bra	u13917
 17873  001976  EC1E  F012         	call	PL443	;call to abstracted procedure
 17874  00197A  D004               	bra	u13910
 17875  00197C                     u13917:
 17876  00197C  EC86  F011         	call	PL389	;call to abstracted procedure
 17877  001980  EC73  F012         	call	PL481	;call to abstracted procedure
 17878  001984                     u13910:
 17879                           
 17880                           ;tcpv4.c: 827: currentTCB->timeout = 0;
 17881  001984  EC0D  F012         	call	PL431	;call to abstracted procedure
 17882  001988  EC7A  F011         	call	PL387	;call to abstracted procedure
 17883  00198C  64F7               	cpfsgt	tblptrh,c
 17884  00198E  D003               	bra	u13927
 17885  001990  ECF2  F011         	call	PL423	;call to abstracted procedure
 17886  001994  D004               	bra	u13920
 17887  001996                     u13927:
 17888  001996  EC86  F011         	call	PL389	;call to abstracted procedure
 17889  00199A  6AEE               	clrf	postinc0,c
 17890  00199C  6AEF               	clrf	indf0,c
 17891  00199E                     u13920:
 17892                           
 17893                           ;tcpv4.c: 829: nextState = ESTABLISHED;
 17894  00199E  0E04               	movlw	4
 17895  0019A0  0101               	movlb	1	; () banked
 17896                           
 17897                           ; BSR set to: 1
 17898                           ;tcpv4.c: 830: currentTCB->socketState = SOCKET_CONNECTED;
 17899  0019A2  EC38  F012         	call	PL449	;call to abstracted procedure
 17900  0019A6  EC7A  F011         	call	PL387	;call to abstracted procedure
 17901  0019AA  64F7               	cpfsgt	tblptrh,c
 17902  0019AC  D004               	bra	u13937
 17903  0019AE  0E03               	movlw	3
 17904  0019B0  6EF5               	movwf	tablat,c
 17905  0019B2  000C               	tblwt		*
 17906  0019B4  D004               	bra	u13930
 17907  0019B6                     u13937:
 17908  0019B6  EC86  F011         	call	PL389	;call to abstracted procedure
 17909  0019BA  0E03               	movlw	3
 17910  0019BC  6EEF               	movwf	indf0,c
 17911  0019BE                     u13930:
 17912  0019BE  EF5D  F011         	goto	l9227
 17913  0019C2                     l9029:
 17914                           
 17915                           ; BSR set to: 1
 17916                           ;tcpv4.c: 836: ;
 17917                           ;tcpv4.c: 838: currentTCB->timeout = 0;
 17918  0019C2  0E30               	movlw	48
 17919  0019C4  2440               	addwf	_currentTCB,w,c
 17920  0019C6  EC7A  F011         	call	PL387	;call to abstracted procedure
 17921  0019CA  64F7               	cpfsgt	tblptrh,c
 17922  0019CC  D003               	bra	u13947
 17923  0019CE  ECF2  F011         	call	PL423	;call to abstracted procedure
 17924  0019D2  D004               	bra	u13940
 17925  0019D4                     u13947:
 17926  0019D4  EC86  F011         	call	PL389	;call to abstracted procedure
 17927  0019D8  6AEE               	clrf	postinc0,c
 17928  0019DA  6AEF               	clrf	indf0,c
 17929  0019DC                     u13940:
 17930                           
 17931                           ;tcpv4.c: 840: currentTCB->flags = 0x01U;
 17932  0019DC  EC8B  F011         	call	PL393	;call to abstracted procedure
 17933  0019E0  EC7A  F011         	call	PL387	;call to abstracted procedure
 17934  0019E4  64F7               	cpfsgt	tblptrh,c
 17935  0019E6  D004               	bra	u13957
 17936  0019E8  0E01               	movlw	1
 17937  0019EA  6EF5               	movwf	tablat,c
 17938  0019EC  000C               	tblwt		*
 17939  0019EE  D004               	bra	u13950
 17940  0019F0                     u13957:
 17941  0019F0  EC86  F011         	call	PL389	;call to abstracted procedure
 17942  0019F4  0E01               	movlw	1
 17943  0019F6  6EEF               	movwf	indf0,c
 17944  0019F8                     u13950:
 17945                           
 17946                           ;tcpv4.c: 841: currentTCB->timeout = ((unsigned long)1*2);
 17947  0019F8  EC0D  F012         	call	PL431	;call to abstracted procedure
 17948  0019FC  EC7A  F011         	call	PL387	;call to abstracted procedure
 17949  001A00  64F7               	cpfsgt	tblptrh,c
 17950  001A02  D003               	bra	u13967
 17951  001A04  EC5B  F012         	call	PL467	;call to abstracted procedure
 17952  001A08  D004               	bra	u13960
 17953  001A0A                     u13967:
 17954  001A0A  EC86  F011         	call	PL389	;call to abstracted procedure
 17955  001A0E  ECAF  F012         	call	PL617	;call to abstracted procedure
 17956  001A12                     u13960:
 17957                           
 17958                           ;tcpv4.c: 842: currentTCB->timeoutReloadValue = ((unsigned long)1*2);
 17959  001A12  EC09  F012         	call	PL429	;call to abstracted procedure
 17960  001A16  EC7A  F011         	call	PL387	;call to abstracted procedure
 17961  001A1A  64F7               	cpfsgt	tblptrh,c
 17962  001A1C  D003               	bra	u13977
 17963  001A1E  EC5B  F012         	call	PL467	;call to abstracted procedure
 17964  001A22  D004               	bra	u13970
 17965  001A24                     u13977:
 17966  001A24  EC86  F011         	call	PL389	;call to abstracted procedure
 17967  001A28  ECAF  F012         	call	PL617	;call to abstracted procedure
 17968  001A2C                     u13970:
 17969                           
 17970                           ;tcpv4.c: 843: currentTCB->timeoutsCount = (5u);
 17971  001A2C  ECEA  F011         	call	PL417	;call to abstracted procedure
 17972  001A30  EC7A  F011         	call	PL387	;call to abstracted procedure
 17973  001A34  64F7               	cpfsgt	tblptrh,c
 17974  001A36  D004               	bra	u13987
 17975  001A38  0E05               	movlw	5
 17976  001A3A  6EF5               	movwf	tablat,c
 17977  001A3C  000C               	tblwt		*
 17978  001A3E  D004               	bra	u13980
 17979  001A40                     u13987:
 17980  001A40  EC86  F011         	call	PL389	;call to abstracted procedure
 17981  001A44  0E05               	movlw	5
 17982  001A46  6EEF               	movwf	indf0,c
 17983  001A48                     u13980:
 17984  001A48                     l9031:
 17985                           
 17986                           ;tcpv4.c: 845: nextState = FIN_WAIT_1;
 17987  001A48  0E05               	movlw	5
 17988  001A4A  0101               	movlb	1	; () banked
 17989  001A4C  6F10               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 17990  001A4E                     l9033:
 17991                           
 17992                           ;tcpv4.c: 846: TCP_Snd(currentTCB);
 17993  001A4E  EC61  F012         	call	PL471	;call to abstracted procedure
 17994  001A52  ECCC  F012         	call	_TCP_Snd	;wreg free
 17995                           
 17996                           ;tcpv4.c: 847: break;
 17997  001A56  EF5D  F011         	goto	l9227
 17998  001A5A                     l9035:
 17999                           
 18000                           ; BSR set to: 1
 18001                           ;tcpv4.c: 849: case RCV_RST:
 18002                           ;tcpv4.c: 851: ;
 18003                           ;tcpv4.c: 853: if (currentTCB->localPort == tcpHeader.destPort)
 18004  001A5A  ECB3  F012         	call	PL623	;call to abstracted procedure
 18005  001A5E  64F7               	cpfsgt	tblptrh,c
 18006  001A60  D003               	bra	u13997
 18007  001A62  ECC0  F012         	call	PL641	;call to abstracted procedure
 18008  001A66  D004               	bra	u13990
 18009  001A68                     u13997:
 18010  001A68  EC86  F011         	call	PL389	;call to abstracted procedure
 18011  001A6C  ECC7  F012         	call	PL693	;call to abstracted procedure
 18012  001A70                     u13990:
 18013  001A70  0101               	movlb	1	; () banked
 18014  001A72  51D3               	movf	(_tcpHeader+2)& (0+255),w,b
 18015  001A74  1900               	xorwf	??_TCP_FiniteStateMachine& (0+255),w,b
 18016  001A76  E103               	bnz	u14001
 18017  001A78  51D4               	movf	(_tcpHeader+3)& (0+255),w,b
 18018  001A7A  1901               	xorwf	(??_TCP_FiniteStateMachine+1)& (0+255),w,b
 18019  001A7C  A4D8               	btfss	status,2,c
 18020  001A7E                     u14001:
 18021  001A7E  EF5D  F011         	goto	l9227
 18022                           
 18023                           ; BSR set to: 1
 18024                           ;tcpv4.c: 854: {
 18025                           ;tcpv4.c: 855: if (currentTCB->remoteAck == tcpHeader.sequenceNumber)
 18026  001A82  0E0C               	movlw	12
 18027  001A84  2440               	addwf	_currentTCB,w,c
 18028  001A86  EC7A  F011         	call	PL387	;call to abstracted procedure
 18029  001A8A  64F7               	cpfsgt	tblptrh,c
 18030  001A8C  D003               	bra	u14017
 18031  001A8E  EC8F  F011         	call	PL395	;call to abstracted procedure
 18032  001A92  D004               	bra	u14010
 18033  001A94                     u14017:
 18034  001A94  EC86  F011         	call	PL389	;call to abstracted procedure
 18035  001A98  ECB0  F011         	call	PL403	;call to abstracted procedure
 18036  001A9C                     u14010:
 18037  001A9C  0101               	movlb	1	; () banked
 18038  001A9E  51D5               	movf	(_tcpHeader+4)& (0+255),w,b
 18039  001AA0  1902               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 18040  001AA2  E109               	bnz	u14021
 18041  001AA4  51D6               	movf	(_tcpHeader+5)& (0+255),w,b
 18042  001AA6  1903               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 18043  001AA8  E106               	bnz	u14021
 18044  001AAA  51D7               	movf	(_tcpHeader+6)& (0+255),w,b
 18045  001AAC  1904               	xorwf	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 18046  001AAE  E103               	bnz	u14021
 18047  001AB0  51D8               	movf	(_tcpHeader+7)& (0+255),w,b
 18048  001AB2  1905               	xorwf	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 18049  001AB4  A4D8               	btfss	status,2,c
 18050  001AB6                     u14021:
 18051  001AB6  EF5D  F011         	goto	l9227
 18052                           
 18053                           ; BSR set to: 1
 18054                           ;tcpv4.c: 856: {
 18055                           ;tcpv4.c: 857: ;
 18056                           ;tcpv4.c: 858: currentTCB->destIP = 0;
 18057  001ABA  0E02               	movlw	2
 18058  001ABC  2440               	addwf	_currentTCB,w,c
 18059  001ABE  EC7A  F011         	call	PL387	;call to abstracted procedure
 18060  001AC2  64F7               	cpfsgt	tblptrh,c
 18061  001AC4  D007               	bra	u14037
 18062  001AC6  6AF5               	clrf	tablat,c
 18063  001AC8  000D               	tblwt		*+
 18064  001ACA  6AF5               	clrf	tablat,c
 18065  001ACC  000D               	tblwt		*+
 18066  001ACE  ECF2  F011         	call	PL423	;call to abstracted procedure
 18067  001AD2  D004               	bra	u14030
 18068  001AD4                     u14037:
 18069  001AD4  EC86  F011         	call	PL389	;call to abstracted procedure
 18070  001AD8  EC66  F012         	call	PL473	;call to abstracted procedure
 18071  001ADC                     u14030:
 18072                           
 18073                           ;tcpv4.c: 859: currentTCB->destPort = 0;
 18074  001ADC  EC3C  F012         	call	PL451	;call to abstracted procedure
 18075  001AE0  EC7A  F011         	call	PL387	;call to abstracted procedure
 18076  001AE4  64F7               	cpfsgt	tblptrh,c
 18077  001AE6  D003               	bra	u14047
 18078  001AE8  ECF2  F011         	call	PL423	;call to abstracted procedure
 18079  001AEC  D004               	bra	u14040
 18080  001AEE                     u14047:
 18081  001AEE  EC86  F011         	call	PL389	;call to abstracted procedure
 18082  001AF2  6AEE               	clrf	postinc0,c
 18083  001AF4  6AEF               	clrf	indf0,c
 18084  001AF6                     u14040:
 18085                           
 18086                           ;tcpv4.c: 860: currentTCB->localSeqno = 0;
 18087  001AF6  EC05  F012         	call	PL427	;call to abstracted procedure
 18088  001AFA  DBFC               	call	PL387	;call to abstracted procedure
 18089  001AFC  64F7               	cpfsgt	tblptrh,c
 18090  001AFE  D007               	bra	u14057
 18091  001B00  6AF5               	clrf	tablat,c
 18092  001B02  000D               	tblwt		*+
 18093  001B04  6AF5               	clrf	tablat,c
 18094  001B06  000D               	tblwt		*+
 18095  001B08  ECF2  F011         	call	PL423	;call to abstracted procedure
 18096  001B0C  D003               	bra	u14050
 18097  001B0E                     u14057:
 18098  001B0E  DBFE               	call	PL389	;call to abstracted procedure
 18099  001B10  EC66  F012         	call	PL473	;call to abstracted procedure
 18100  001B14                     u14050:
 18101                           
 18102                           ;tcpv4.c: 861: currentTCB->localLastAck = 0;
 18103  001B14  EC6F  F012         	call	PL479	;call to abstracted procedure
 18104  001B18  DBED               	call	PL387	;call to abstracted procedure
 18105  001B1A  64F7               	cpfsgt	tblptrh,c
 18106  001B1C  D007               	bra	u14067
 18107  001B1E  6AF5               	clrf	tablat,c
 18108  001B20  000D               	tblwt		*+
 18109  001B22  6AF5               	clrf	tablat,c
 18110  001B24  000D               	tblwt		*+
 18111  001B26  ECF2  F011         	call	PL423	;call to abstracted procedure
 18112  001B2A  D003               	bra	u14060
 18113  001B2C                     u14067:
 18114  001B2C  DBEF               	call	PL389	;call to abstracted procedure
 18115  001B2E  EC66  F012         	call	PL473	;call to abstracted procedure
 18116  001B32                     u14060:
 18117                           
 18118                           ;tcpv4.c: 862: currentTCB->remoteSeqno = 0;
 18119  001B32  ECE6  F011         	call	PL415	;call to abstracted procedure
 18120  001B36  DBDE               	call	PL387	;call to abstracted procedure
 18121  001B38  64F7               	cpfsgt	tblptrh,c
 18122  001B3A  D007               	bra	u14077
 18123  001B3C  6AF5               	clrf	tablat,c
 18124  001B3E  000D               	tblwt		*+
 18125  001B40  6AF5               	clrf	tablat,c
 18126  001B42  000D               	tblwt		*+
 18127  001B44  ECF2  F011         	call	PL423	;call to abstracted procedure
 18128  001B48  D003               	bra	u14070
 18129  001B4A                     u14077:
 18130  001B4A  DBE0               	call	PL389	;call to abstracted procedure
 18131  001B4C  EC66  F012         	call	PL473	;call to abstracted procedure
 18132  001B50                     u14070:
 18133                           
 18134                           ;tcpv4.c: 863: currentTCB->remoteAck = 0;
 18135  001B50  EC6B  F012         	call	PL477	;call to abstracted procedure
 18136  001B54  DBCF               	call	PL387	;call to abstracted procedure
 18137  001B56  64F7               	cpfsgt	tblptrh,c
 18138  001B58  D007               	bra	u14087
 18139  001B5A  6AF5               	clrf	tablat,c
 18140  001B5C  000D               	tblwt		*+
 18141  001B5E  6AF5               	clrf	tablat,c
 18142  001B60  000D               	tblwt		*+
 18143  001B62  ECF2  F011         	call	PL423	;call to abstracted procedure
 18144  001B66  D003               	bra	u14080
 18145  001B68                     u14087:
 18146  001B68  DBD1               	call	PL389	;call to abstracted procedure
 18147  001B6A  EC66  F012         	call	PL473	;call to abstracted procedure
 18148  001B6E                     u14080:
 18149                           
 18150                           ;tcpv4.c: 864: currentTCB->remoteWnd = 0;
 18151  001B6E  EC9C  F012         	call	PL513	;call to abstracted procedure
 18152  001B72  DBC0               	call	PL387	;call to abstracted procedure
 18153  001B74  64F7               	cpfsgt	tblptrh,c
 18154  001B76  D003               	bra	u14097
 18155  001B78  ECF2  F011         	call	PL423	;call to abstracted procedure
 18156  001B7C  D003               	bra	u14090
 18157  001B7E                     u14097:
 18158  001B7E  DBC6               	call	PL389	;call to abstracted procedure
 18159  001B80  6AEE               	clrf	postinc0,c
 18160  001B82  6AEF               	clrf	indf0,c
 18161  001B84                     u14090:
 18162                           
 18163                           ;tcpv4.c: 865: currentTCB->mss = 0;
 18164  001B84  ECEE  F011         	call	PL419	;call to abstracted procedure
 18165  001B88  DBB5               	call	PL387	;call to abstracted procedure
 18166  001B8A  64F7               	cpfsgt	tblptrh,c
 18167  001B8C  D003               	bra	u14107
 18168  001B8E  ECF2  F011         	call	PL423	;call to abstracted procedure
 18169  001B92  D003               	bra	u14100
 18170  001B94                     u14107:
 18171  001B94  DBBB               	call	PL389	;call to abstracted procedure
 18172  001B96  6AEE               	clrf	postinc0,c
 18173  001B98  6AEF               	clrf	indf0,c
 18174  001B9A                     u14100:
 18175  001B9A                     l9041:
 18176                           
 18177                           ;tcpv4.c: 867: nextState = LISTEN;
 18178  001B9A  0E01               	movlw	1
 18179  001B9C  D26A               	goto	L14
 18180  001B9E                     l9043:
 18181                           
 18182                           ; BSR set to: 1
 18183                           ;tcpv4.c: 872: ;
 18184                           ;tcpv4.c: 873: if (currentTCB->timeoutsCount)
 18185  001B9E  0E34               	movlw	52
 18186  001BA0  2440               	addwf	_currentTCB,w,c
 18187  001BA2  DBA8               	call	PL387	;call to abstracted procedure
 18188  001BA4  64F7               	cpfsgt	tblptrh,c
 18189  001BA6  D003               	bra	u14117
 18190  001BA8  0008               	tblrd		*
 18191  001BAA  50F5               	movf	tablat,w,c
 18192  001BAC  D002               	bra	u14110
 18193  001BAE                     u14117:
 18194  001BAE  DBAE               	call	PL389	;call to abstracted procedure
 18195  001BB0  50EF               	movf	indf0,w,c
 18196  001BB2                     u14110:
 18197  001BB2  0900               	iorlw	0
 18198  001BB4  E001 D74B          	bnz	l9033
 18199                           
 18200                           ;tcpv4.c: 877: else
 18201                           ;tcpv4.c: 878: {
 18202                           ;tcpv4.c: 880: currentTCB->flags = 0x04U;
 18203  001BB8  DBAE               	call	PL393	;call to abstracted procedure
 18204  001BBA  DB9C               	call	PL387	;call to abstracted procedure
 18205  001BBC  64F7               	cpfsgt	tblptrh,c
 18206  001BBE  D004               	bra	u14137
 18207  001BC0  0E04               	movlw	4
 18208  001BC2  6EF5               	movwf	tablat,c
 18209  001BC4  000C               	tblwt		*
 18210  001BC6  D003               	bra	u14130
 18211  001BC8                     u14137:
 18212  001BC8  DBA1               	call	PL389	;call to abstracted procedure
 18213  001BCA  0E04               	movlw	4
 18214  001BCC  6EEF               	movwf	indf0,c
 18215  001BCE                     u14130:
 18216                           
 18217                           ;tcpv4.c: 881: if(TCP_Snd(currentTCB))
 18218  001BCE  EC61  F012         	call	PL471	;call to abstracted procedure
 18219  001BD2  ECCC  F012         	call	_TCP_Snd	;wreg free
 18220  001BD6  0900               	iorlw	0
 18221  001BD8  E101 D36F          	bz	l9227
 18222                           
 18223                           ; BSR set to: 0
 18224                           ;tcpv4.c: 882: {
 18225                           ;tcpv4.c: 883: currentTCB->destIP = 0;
 18226  001BDC  ECA0  F012         	call	PL515	;call to abstracted procedure
 18227  001BE0  DB89               	call	PL387	;call to abstracted procedure
 18228  001BE2  64F7               	cpfsgt	tblptrh,c
 18229  001BE4  D006               	bra	u14157
 18230  001BE6  6AF5               	clrf	tablat,c
 18231  001BE8  000D               	tblwt		*+
 18232  001BEA  6AF5               	clrf	tablat,c
 18233  001BEC  000D               	tblwt		*+
 18234  001BEE  DBFA               	call	PL423	;call to abstracted procedure
 18235  001BF0  D003               	bra	u14150
 18236  001BF2                     u14157:
 18237  001BF2  DB8C               	call	PL389	;call to abstracted procedure
 18238  001BF4  EC66  F012         	call	PL473	;call to abstracted procedure
 18239  001BF8                     u14150:
 18240                           
 18241                           ;tcpv4.c: 884: currentTCB->destPort = 0;
 18242  001BF8  EC3C  F012         	call	PL451	;call to abstracted procedure
 18243  001BFC  DB7B               	call	PL387	;call to abstracted procedure
 18244  001BFE  64F7               	cpfsgt	tblptrh,c
 18245  001C00  D002               	bra	u14167
 18246  001C02  DBF0               	call	PL423	;call to abstracted procedure
 18247  001C04  D003               	bra	u14160
 18248  001C06                     u14167:
 18249  001C06  DB82               	call	PL389	;call to abstracted procedure
 18250  001C08  6AEE               	clrf	postinc0,c
 18251  001C0A  6AEF               	clrf	indf0,c
 18252  001C0C                     u14160:
 18253                           
 18254                           ;tcpv4.c: 885: currentTCB->localSeqno = 0;
 18255  001C0C  DBFE               	call	PL427	;call to abstracted procedure
 18256  001C0E  DB72               	call	PL387	;call to abstracted procedure
 18257  001C10  64F7               	cpfsgt	tblptrh,c
 18258  001C12  D006               	bra	u14177
 18259  001C14  6AF5               	clrf	tablat,c
 18260  001C16  000D               	tblwt		*+
 18261  001C18  6AF5               	clrf	tablat,c
 18262  001C1A  000D               	tblwt		*+
 18263  001C1C  DBE3               	call	PL423	;call to abstracted procedure
 18264  001C1E  D003               	bra	u14170
 18265  001C20                     u14177:
 18266  001C20  DB75               	call	PL389	;call to abstracted procedure
 18267  001C22  EC66  F012         	call	PL473	;call to abstracted procedure
 18268  001C26                     u14170:
 18269                           
 18270                           ;tcpv4.c: 886: currentTCB->localLastAck = 0;
 18271  001C26  EC6F  F012         	call	PL479	;call to abstracted procedure
 18272  001C2A  DB64               	call	PL387	;call to abstracted procedure
 18273  001C2C  64F7               	cpfsgt	tblptrh,c
 18274  001C2E  D006               	bra	u14187
 18275  001C30  6AF5               	clrf	tablat,c
 18276  001C32  000D               	tblwt		*+
 18277  001C34  6AF5               	clrf	tablat,c
 18278  001C36  000D               	tblwt		*+
 18279  001C38  DBD5               	call	PL423	;call to abstracted procedure
 18280  001C3A  D003               	bra	u14180
 18281  001C3C                     u14187:
 18282  001C3C  DB67               	call	PL389	;call to abstracted procedure
 18283  001C3E  EC66  F012         	call	PL473	;call to abstracted procedure
 18284  001C42                     u14180:
 18285                           
 18286                           ;tcpv4.c: 887: currentTCB->remoteSeqno = 0;
 18287  001C42  DBC4               	call	PL415	;call to abstracted procedure
 18288  001C44  DB57               	call	PL387	;call to abstracted procedure
 18289  001C46  64F7               	cpfsgt	tblptrh,c
 18290  001C48  D006               	bra	u14197
 18291  001C4A  6AF5               	clrf	tablat,c
 18292  001C4C  000D               	tblwt		*+
 18293  001C4E  6AF5               	clrf	tablat,c
 18294  001C50  000D               	tblwt		*+
 18295  001C52  DBC8               	call	PL423	;call to abstracted procedure
 18296  001C54  D003               	bra	u14190
 18297  001C56                     u14197:
 18298  001C56  DB5A               	call	PL389	;call to abstracted procedure
 18299  001C58  EC66  F012         	call	PL473	;call to abstracted procedure
 18300  001C5C                     u14190:
 18301                           
 18302                           ;tcpv4.c: 888: currentTCB->remoteAck = 0;
 18303  001C5C  EC6B  F012         	call	PL477	;call to abstracted procedure
 18304  001C60  DB49               	call	PL387	;call to abstracted procedure
 18305  001C62  64F7               	cpfsgt	tblptrh,c
 18306  001C64  D006               	bra	u14207
 18307  001C66  6AF5               	clrf	tablat,c
 18308  001C68  000D               	tblwt		*+
 18309  001C6A  6AF5               	clrf	tablat,c
 18310  001C6C  000D               	tblwt		*+
 18311  001C6E  DBBA               	call	PL423	;call to abstracted procedure
 18312  001C70  D003               	bra	u14200
 18313  001C72                     u14207:
 18314  001C72  DB4C               	call	PL389	;call to abstracted procedure
 18315  001C74  EC66  F012         	call	PL473	;call to abstracted procedure
 18316  001C78                     u14200:
 18317                           
 18318                           ;tcpv4.c: 889: currentTCB->remoteWnd = 0;
 18319  001C78  EC9C  F012         	call	PL513	;call to abstracted procedure
 18320  001C7C  DB3B               	call	PL387	;call to abstracted procedure
 18321  001C7E  64F7               	cpfsgt	tblptrh,c
 18322  001C80  D002               	bra	u14217
 18323  001C82  DBB0               	call	PL423	;call to abstracted procedure
 18324  001C84  D003               	bra	u14210
 18325  001C86                     u14217:
 18326  001C86  DB42               	call	PL389	;call to abstracted procedure
 18327  001C88  6AEE               	clrf	postinc0,c
 18328  001C8A  6AEF               	clrf	indf0,c
 18329  001C8C                     u14210:
 18330                           
 18331                           ;tcpv4.c: 890: currentTCB->mss = 0;
 18332  001C8C  DBA7               	call	PL419	;call to abstracted procedure
 18333  001C8E  DB32               	call	PL387	;call to abstracted procedure
 18334  001C90  64F7               	cpfsgt	tblptrh,c
 18335  001C92  D002               	bra	u14227
 18336  001C94  DBA7               	call	PL423	;call to abstracted procedure
 18337  001C96  D003               	bra	u14220
 18338  001C98                     u14227:
 18339  001C98  DB39               	call	PL389	;call to abstracted procedure
 18340  001C9A  6AEE               	clrf	postinc0,c
 18341  001C9C  6AEF               	clrf	indf0,c
 18342  001C9E                     u14220:
 18343  001C9E  D77D               	goto	l9041
 18344  001CA0                     l9057:
 18345  001CA0  0101               	movlb	1	; () banked
 18346  001CA2  510F               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 18347                           
 18348                           ; Switch size 1, requested type "space"
 18349                           ; Number of cases is 6, Range of values is 0 to 12
 18350                           ; switch strategies available:
 18351                           ; Name         Instructions Cycles
 18352                           ; simple_byte           19    10 (average)
 18353                           ;	Chosen strategy is simple_byte
 18354  001CA4  E101 D68D          	bz	l9029
 18355  001CA8  0A04               	xorlw	4	; case 4
 18356  001CAA  E101 D5E2          	bz	l9015
 18357  001CAE  0A01               	xorlw	1	; case 5
 18358  001CB0  E101 D563          	bz	l9003
 18359  001CB4  0A0C               	xorlw	12	; case 9
 18360  001CB6  E101 D6D0          	bz	l9035
 18361  001CBA  0A03               	xorlw	3	; case 10
 18362  001CBC  E101 D6CD          	bz	l9035
 18363  001CC0  0A06               	xorlw	6	; case 12
 18364  001CC2  E101 D76C          	bz	l9043
 18365  001CC6  D2F9               	goto	l9227
 18366  001CC8                     l9059:
 18367                           
 18368                           ; BSR set to: 1
 18369                           ;tcpv4.c: 904: ;
 18370                           ;tcpv4.c: 905: if (currentTCB->destIP == receivedRemoteAddress)
 18371  001CC8  0E02               	movlw	2
 18372  001CCA  2440               	addwf	_currentTCB,w,c
 18373  001CCC  DB13               	call	PL387	;call to abstracted procedure
 18374  001CCE  64F7               	cpfsgt	tblptrh,c
 18375  001CD0  D002               	bra	u14237
 18376  001CD2  DB25               	call	PL395	;call to abstracted procedure
 18377  001CD4  D002               	bra	u14230
 18378  001CD6                     u14237:
 18379  001CD6  DB1A               	call	PL389	;call to abstracted procedure
 18380  001CD8  DB43               	call	PL403	;call to abstracted procedure
 18381  001CDA                     u14230:
 18382  001CDA  503C               	movf	_receivedRemoteAddress,w,c
 18383  001CDC  0101               	movlb	1	; () banked
 18384  001CDE  1902               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 18385  001CE0  E109               	bnz	u14241
 18386  001CE2  503D               	movf	_receivedRemoteAddress+1,w,c
 18387  001CE4  1903               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 18388  001CE6  E106               	bnz	u14241
 18389  001CE8  503E               	movf	_receivedRemoteAddress+2,w,c
 18390  001CEA  1904               	xorwf	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 18391  001CEC  E103               	bnz	u14241
 18392  001CEE  503F               	movf	_receivedRemoteAddress+3,w,c
 18393  001CF0  1905               	xorwf	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 18394  001CF2  A4D8               	btfss	status,2,c
 18395  001CF4                     u14241:
 18396  001CF4  D2E2               	goto	l9227
 18397                           
 18398                           ; BSR set to: 1
 18399                           ;tcpv4.c: 906: {
 18400                           ;tcpv4.c: 910: if (currentTCB->remoteAck == tcpHeader.sequenceNumber)
 18401  001CF6  0E0C               	movlw	12
 18402  001CF8  2440               	addwf	_currentTCB,w,c
 18403  001CFA  DAFC               	call	PL387	;call to abstracted procedure
 18404  001CFC  64F7               	cpfsgt	tblptrh,c
 18405  001CFE  D002               	bra	u14257
 18406  001D00  DB0E               	call	PL395	;call to abstracted procedure
 18407  001D02  D002               	bra	u14250
 18408  001D04                     u14257:
 18409  001D04  DB03               	call	PL389	;call to abstracted procedure
 18410  001D06  DB2C               	call	PL403	;call to abstracted procedure
 18411  001D08                     u14250:
 18412  001D08  0101               	movlb	1	; () banked
 18413  001D0A  51D5               	movf	(_tcpHeader+4)& (0+255),w,b
 18414  001D0C  1902               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 18415  001D0E  E109               	bnz	u14261
 18416  001D10  51D6               	movf	(_tcpHeader+5)& (0+255),w,b
 18417  001D12  1903               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 18418  001D14  E106               	bnz	u14261
 18419  001D16  51D7               	movf	(_tcpHeader+6)& (0+255),w,b
 18420  001D18  1904               	xorwf	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 18421  001D1A  E103               	bnz	u14261
 18422  001D1C  51D8               	movf	(_tcpHeader+7)& (0+255),w,b
 18423  001D1E  1905               	xorwf	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 18424  001D20  A4D8               	btfss	status,2,c
 18425  001D22                     u14261:
 18426  001D22  D2CB               	goto	l9227
 18427                           
 18428                           ; BSR set to: 1
 18429                           ;tcpv4.c: 911: {
 18430                           ;tcpv4.c: 915: if (currentTCB->localLastAck < tcpHeader.ackNumber)
 18431  001D24  0E14               	movlw	20
 18432  001D26  2440               	addwf	_currentTCB,w,c
 18433  001D28  DAE5               	call	PL387	;call to abstracted procedure
 18434  001D2A  64F7               	cpfsgt	tblptrh,c
 18435  001D2C  D002               	bra	u14277
 18436  001D2E  DAF7               	call	PL395	;call to abstracted procedure
 18437  001D30  D002               	bra	u14270
 18438  001D32                     u14277:
 18439  001D32  DAEC               	call	PL389	;call to abstracted procedure
 18440  001D34  DB15               	call	PL403	;call to abstracted procedure
 18441  001D36                     u14270:
 18442  001D36  0101               	movlb	1	; () banked
 18443  001D38  51D9               	movf	(_tcpHeader+8)& (0+255),w,b
 18444  001D3A  5D02               	subwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 18445  001D3C  51DA               	movf	(_tcpHeader+9)& (0+255),w,b
 18446  001D3E  5903               	subwfb	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 18447  001D40  51DB               	movf	(_tcpHeader+10)& (0+255),w,b
 18448  001D42  5904               	subwfb	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 18449  001D44  51DC               	movf	(_tcpHeader+11)& (0+255),w,b
 18450  001D46  5905               	subwfb	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 18451  001D48  E301 D2B7          	bc	l9227
 18452                           
 18453                           ; BSR set to: 1
 18454                           ;tcpv4.c: 916: {
 18455                           ;tcpv4.c: 918: if ((currentTCB->localSeqno + 1) >= tcpHeader.ackNumber)
 18456  001D4C  0E10               	movlw	16
 18457  001D4E  2440               	addwf	_currentTCB,w,c
 18458  001D50  DAD1               	call	PL387	;call to abstracted procedure
 18459  001D52  64F7               	cpfsgt	tblptrh,c
 18460  001D54  D002               	bra	u14297
 18461  001D56  DAE3               	call	PL395	;call to abstracted procedure
 18462  001D58  D002               	bra	u14290
 18463  001D5A                     u14297:
 18464  001D5A  DAD8               	call	PL389	;call to abstracted procedure
 18465  001D5C  DB01               	call	PL403	;call to abstracted procedure
 18466  001D5E                     u14290:
 18467  001D5E  DAF2               	call	PL401	;call to abstracted procedure
 18468  001D60  51D9               	movf	(_tcpHeader+8)& (0+255),w,b
 18469  001D62  5D06               	subwf	(??_TCP_FiniteStateMachine+6)& (0+255),w,b
 18470  001D64  51DA               	movf	(_tcpHeader+9)& (0+255),w,b
 18471  001D66  5907               	subwfb	(??_TCP_FiniteStateMachine+7)& (0+255),w,b
 18472  001D68  51DB               	movf	(_tcpHeader+10)& (0+255),w,b
 18473  001D6A  5908               	subwfb	(??_TCP_FiniteStateMachine+8)& (0+255),w,b
 18474  001D6C  51DC               	movf	(_tcpHeader+11)& (0+255),w,b
 18475  001D6E  5909               	subwfb	(??_TCP_FiniteStateMachine+9)& (0+255),w,b
 18476  001D70  E201 D0A3          	bnc	l9083
 18477                           
 18478                           ; BSR set to: 1
 18479                           ;tcpv4.c: 919: {
 18480                           ;tcpv4.c: 920: notAckBytes = currentTCB->localSeqno - tcpHeader.ackNumber;
 18481  001D74  0E10               	movlw	16
 18482  001D76  2440               	addwf	_currentTCB,w,c
 18483  001D78  DABD               	call	PL387	;call to abstracted procedure
 18484  001D7A  64F7               	cpfsgt	tblptrh,c
 18485  001D7C  D003               	bra	u14317
 18486  001D7E  0009               	tblrd		*+
 18487  001D80  DADB               	call	PL397	;call to abstracted procedure
 18488  001D82  D005               	bra	u14310
 18489  001D84                     u14317:
 18490  001D84  DAC3               	call	PL389	;call to abstracted procedure
 18491  001D86  CFEE F102          	movff	postinc0,??_TCP_FiniteStateMachine+2
 18492  001D8A  CFEE F103          	movff	postinc0,??_TCP_FiniteStateMachine+3
 18493  001D8E                     u14310:
 18494  001D8E  0101               	movlb	1	; () banked
 18495  001D90  51D9               	movf	(_tcpHeader+8)& (0+255),w,b
 18496  001D92  5D02               	subwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 18497  001D94  6F0D               	movwf	TCP_FiniteStateMachine@notAckBytes& (0+255),b
 18498  001D96  51DA               	movf	(_tcpHeader+9)& (0+255),w,b
 18499  001D98  5903               	subwfb	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 18500  001D9A  6F0E               	movwf	(TCP_FiniteStateMachine@notAckBytes+1)& (0+255),b
 18501                           
 18502                           ;tcpv4.c: 923: currentTCB->txBufferPtr = currentTCB->txBufferPtr - notAckBytes;
 18503  001D9C  0E25               	movlw	37
 18504  001D9E  2440               	addwf	_currentTCB,w,c
 18505  001DA0  DAA9               	call	PL387	;call to abstracted procedure
 18506  001DA2  64F7               	cpfsgt	tblptrh,c
 18507  001DA4  D003               	bra	u14327
 18508  001DA6  0009               	tblrd		*+
 18509  001DA8  DAC7               	call	PL397	;call to abstracted procedure
 18510  001DAA  D005               	bra	u14320
 18511  001DAC                     u14327:
 18512  001DAC  DAAF               	call	PL389	;call to abstracted procedure
 18513  001DAE  CFEE F102          	movff	postinc0,??_TCP_FiniteStateMachine+2
 18514  001DB2  CFEE F103          	movff	postinc0,??_TCP_FiniteStateMachine+3
 18515  001DB6                     u14320:
 18516  001DB6  0101               	movlb	1	; () banked
 18517  001DB8  510D               	movf	TCP_FiniteStateMachine@notAckBytes& (0+255),w,b
 18518  001DBA  5F02               	subwf	(??_TCP_FiniteStateMachine+2)& (0+255),f,b
 18519  001DBC  510E               	movf	(TCP_FiniteStateMachine@notAckBytes+1)& (0+255),w,b
 18520  001DBE  5B03               	subwfb	(??_TCP_FiniteStateMachine+3)& (0+255),f,b
 18521  001DC0  0E25               	movlw	37
 18522  001DC2  DAF7               	call	PL407	;call to abstracted procedure
 18523  001DC4  64F7               	cpfsgt	tblptrh,c
 18524  001DC6  D002               	bra	u14337
 18525  001DC8  DB5B               	call	PL455	;call to abstracted procedure
 18526  001DCA  D002               	bra	u14330
 18527  001DCC                     u14337:
 18528  001DCC  DA9F               	call	PL389	;call to abstracted procedure
 18529  001DCE  DBAF               	call	PL507	;call to abstracted procedure
 18530  001DD0                     u14330:
 18531                           
 18532                           ;tcpv4.c: 924: currentTCB->bytesToSend = currentTCB->bytesToSend + notAckBytes;
 18533  001DD0  DBBB               	call	PL519	;call to abstracted procedure
 18534  001DD2  DA90               	call	PL387	;call to abstracted procedure
 18535  001DD4  64F7               	cpfsgt	tblptrh,c
 18536  001DD6  D003               	bra	u14347
 18537  001DD8  0009               	tblrd		*+
 18538  001DDA  DAAE               	call	PL397	;call to abstracted procedure
 18539  001DDC  D005               	bra	u14340
 18540  001DDE                     u14347:
 18541  001DDE  DA96               	call	PL389	;call to abstracted procedure
 18542  001DE0  CFEE F102          	movff	postinc0,??_TCP_FiniteStateMachine+2
 18543  001DE4  CFEE F103          	movff	postinc0,??_TCP_FiniteStateMachine+3
 18544  001DE8                     u14340:
 18545  001DE8  0101               	movlb	1	; () banked
 18546  001DEA  510D               	movf	TCP_FiniteStateMachine@notAckBytes& (0+255),w,b
 18547  001DEC  2702               	addwf	(??_TCP_FiniteStateMachine+2)& (0+255),f,b
 18548  001DEE  510E               	movf	(TCP_FiniteStateMachine@notAckBytes+1)& (0+255),w,b
 18549  001DF0  2303               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),f,b
 18550  001DF2  0E27               	movlw	39
 18551  001DF4  DADE               	call	PL407	;call to abstracted procedure
 18552  001DF6  64F7               	cpfsgt	tblptrh,c
 18553  001DF8  D002               	bra	u14357
 18554  001DFA  DB42               	call	PL455	;call to abstracted procedure
 18555  001DFC  D002               	bra	u14350
 18556  001DFE                     u14357:
 18557  001DFE  DA86               	call	PL389	;call to abstracted procedure
 18558  001E00  DB96               	call	PL507	;call to abstracted procedure
 18559  001E02                     u14350:
 18560                           
 18561                           ;tcpv4.c: 927: if(currentTCB->bytesToSend == 0)
 18562  001E02  DBA2               	call	PL519	;call to abstracted procedure
 18563  001E04  DA77               	call	PL387	;call to abstracted procedure
 18564  001E06  64F7               	cpfsgt	tblptrh,c
 18565  001E08  D003               	bra	u14367
 18566  001E0A  0009               	tblrd		*+
 18567  001E0C  DA95               	call	PL397	;call to abstracted procedure
 18568  001E0E  D005               	bra	u14360
 18569  001E10                     u14367:
 18570  001E10  DA7D               	call	PL389	;call to abstracted procedure
 18571  001E12  CFEE F102          	movff	postinc0,??_TCP_FiniteStateMachine+2
 18572  001E16  CFEE F103          	movff	postinc0,??_TCP_FiniteStateMachine+3
 18573  001E1A                     u14360:
 18574  001E1A  0101               	movlb	1	; () banked
 18575  001E1C  5102               	movf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 18576  001E1E  1103               	iorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 18577  001E20  E117               	bnz	l9073
 18578                           
 18579                           ; BSR set to: 1
 18580                           ;tcpv4.c: 928: {
 18581                           ;tcpv4.c: 929: if (currentTCB->txBufState == TX_BUFF_IN_USE)
 18582  001E22  0E29               	movlw	41
 18583  001E24  2440               	addwf	_currentTCB,w,c
 18584  001E26  DA66               	call	PL387	;call to abstracted procedure
 18585  001E28  64F7               	cpfsgt	tblptrh,c
 18586  001E2A  D003               	bra	u14387
 18587  001E2C  0008               	tblrd		*
 18588  001E2E  50F5               	movf	tablat,w,c
 18589  001E30  D002               	bra	u14380
 18590  001E32                     u14387:
 18591  001E32  DA6C               	call	PL389	;call to abstracted procedure
 18592  001E34  50EF               	movf	indf0,w,c
 18593  001E36                     u14380:
 18594  001E36  0A02               	xorlw	2
 18595  001E38  E10B               	bnz	l9073
 18596                           
 18597                           ;tcpv4.c: 930: {
 18598                           ;tcpv4.c: 931: currentTCB->txBufState = NO_BUFF;
 18599  001E3A  0E29               	movlw	41
 18600  001E3C  2440               	addwf	_currentTCB,w,c
 18601  001E3E  0101               	movlb	1	; () banked
 18602  001E40  DA59               	call	PL387	;call to abstracted procedure
 18603  001E42  64F7               	cpfsgt	tblptrh,c
 18604  001E44  D003               	bra	u14407
 18605  001E46  6AF5               	clrf	tablat,c
 18606  001E48  000C               	tblwt		*
 18607  001E4A  D002               	bra	u14400
 18608  001E4C                     u14407:
 18609  001E4C  DA5F               	call	PL389	;call to abstracted procedure
 18610  001E4E  6AEF               	clrf	indf0,c
 18611  001E50                     u14400:
 18612  001E50                     l9073:
 18613                           
 18614                           ;tcpv4.c: 932: }
 18615                           ;tcpv4.c: 933: }
 18616                           ;tcpv4.c: 935: currentTCB->localLastAck = tcpHeader.ackNumber - 1;
 18617  001E50  EE21  F0D9         	lfsr	2,_tcpHeader+8
 18618  001E54  0EFF               	movlw	255
 18619  001E56  24DE               	addwf	postinc2,w,c
 18620  001E58  0101               	movlb	1	; () banked
 18621  001E5A  6F00               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18622  001E5C  0EFF               	movlw	255
 18623  001E5E  20DE               	addwfc	postinc2,w,c
 18624  001E60  6F01               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18625  001E62  0EFF               	movlw	255
 18626  001E64  20DE               	addwfc	postinc2,w,c
 18627  001E66  6F02               	movwf	(??_TCP_FiniteStateMachine+2)& (0+255),b
 18628  001E68  0EFF               	movlw	255
 18629  001E6A  20DE               	addwfc	postinc2,w,c
 18630  001E6C  6F03               	movwf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 18631  001E6E  0E14               	movlw	20
 18632  001E70  DAA0               	call	PL407	;call to abstracted procedure
 18633  001E72  64F7               	cpfsgt	tblptrh,c
 18634  001E74  D003               	bra	u14417
 18635  001E76  DB0B               	call	PL457	;call to abstracted procedure
 18636  001E78  DB03               	call	PL455	;call to abstracted procedure
 18637  001E7A  D002               	bra	u14410
 18638  001E7C                     u14417:
 18639  001E7C  DA47               	call	PL389	;call to abstracted procedure
 18640  001E7E  DB45               	call	PL491	;call to abstracted procedure
 18641  001E80                     u14410:
 18642                           
 18643                           ;tcpv4.c: 936: currentTCB->localSeqno = tcpHeader.ackNumber;
 18644  001E80  DAC4               	call	PL427	;call to abstracted procedure
 18645  001E82  DA38               	call	PL387	;call to abstracted procedure
 18646  001E84  64F7               	cpfsgt	tblptrh,c
 18647  001E86  D002               	bra	u14427
 18648  001E88  DB09               	call	PL459	;call to abstracted procedure
 18649  001E8A  D002               	bra	u14420
 18650  001E8C                     u14427:
 18651  001E8C  DA3F               	call	PL389	;call to abstracted procedure
 18652  001E8E  DB46               	call	PL499	;call to abstracted procedure
 18653  001E90                     u14420:
 18654                           
 18655                           ;tcpv4.c: 939: if(rcvPayloadLen > 0)
 18656  001E90  0101               	movlb	1	; () banked
 18657  001E92  51CF               	movf	_rcvPayloadLen& (0+255),w,b
 18658  001E94  11D0               	iorwf	(_rcvPayloadLen+1)& (0+255),w,b
 18659  001E96  E101 D210          	bz	l9227
 18660                           
 18661                           ; BSR set to: 1
 18662                           ;tcpv4.c: 940: {
 18663                           ;tcpv4.c: 941: currentTCB->remoteSeqno = tcpHeader.sequenceNumber;
 18664  001E9A  0E08               	movlw	8
 18665  001E9C  2440               	addwf	_currentTCB,w,c
 18666  001E9E  DA2A               	call	PL387	;call to abstracted procedure
 18667  001EA0  64F7               	cpfsgt	tblptrh,c
 18668  001EA2  D002               	bra	u14447
 18669  001EA4  DABE               	call	PL441	;call to abstracted procedure
 18670  001EA6  D002               	bra	u14440
 18671  001EA8                     u14447:
 18672  001EA8  DA31               	call	PL389	;call to abstracted procedure
 18673  001EAA  DB26               	call	PL483	;call to abstracted procedure
 18674  001EAC                     u14440:
 18675                           
 18676                           ;tcpv4.c: 944: TCP_PayloadSave(rcvPayloadLen);
 18677  001EAC  C1CF  F0EE         	movff	_rcvPayloadLen,TCP_PayloadSave@len
 18678  001EB0  C1D0  F0EF         	movff	_rcvPayloadLen+1,TCP_PayloadSave@len+1
 18679  001EB4  EC3E  F021         	call	_TCP_PayloadSave	;wreg free
 18680  001EB8  D200               	goto	l9227
 18681  001EBA                     l9083:
 18682                           
 18683                           ; BSR set to: 1
 18684                           ;tcpv4.c: 947: {
 18685                           ;tcpv4.c: 951: currentTCB->flags = 0x04U | 0x10U;
 18686  001EBA  0E35               	movlw	53
 18687  001EBC  2440               	addwf	_currentTCB,w,c
 18688  001EBE  DA1A               	call	PL387	;call to abstracted procedure
 18689  001EC0  64F7               	cpfsgt	tblptrh,c
 18690  001EC2  D004               	bra	u14457
 18691  001EC4  0E14               	movlw	20
 18692  001EC6  6EF5               	movwf	tablat,c
 18693  001EC8  000C               	tblwt		*
 18694  001ECA  D003               	bra	u14450
 18695  001ECC                     u14457:
 18696  001ECC  DA1F               	call	PL389	;call to abstracted procedure
 18697  001ECE  0E14               	movlw	20
 18698  001ED0  6EEF               	movwf	indf0,c
 18699  001ED2                     u14450:
 18700                           
 18701                           ;tcpv4.c: 952: if (TCP_Snd(currentTCB))
 18702  001ED2  DAF7               	call	PL471	;call to abstracted procedure
 18703  001ED4  ECCC  F012         	call	_TCP_Snd	;wreg free
 18704  001ED8  EF94  F00A         	goto	L10
 18705  001EDC                     l9091:
 18706                           
 18707                           ; BSR set to: 1
 18708                           ;tcpv4.c: 963: ;
 18709                           ;tcpv4.c: 964: currentTCB->flags = 0x01U;
 18710  001EDC  0E35               	movlw	53
 18711  001EDE  2440               	addwf	_currentTCB,w,c
 18712  001EE0  DA09               	call	PL387	;call to abstracted procedure
 18713  001EE2  64F7               	cpfsgt	tblptrh,c
 18714  001EE4  D004               	bra	u14477
 18715  001EE6  0E01               	movlw	1
 18716  001EE8  6EF5               	movwf	tablat,c
 18717  001EEA  000C               	tblwt		*
 18718  001EEC  D003               	bra	u14470
 18719  001EEE                     u14477:
 18720  001EEE  DA0E               	call	PL389	;call to abstracted procedure
 18721  001EF0  0E01               	movlw	1
 18722  001EF2  6EEF               	movwf	indf0,c
 18723  001EF4                     u14470:
 18724  001EF4  D5A9               	goto	l9031
 18725  001EF6                     l9097:
 18726                           
 18727                           ; BSR set to: 1
 18728                           ;tcpv4.c: 971: ;
 18729                           ;tcpv4.c: 974: currentTCB->localSeqno = tcpHeader.ackNumber;
 18730  001EF6  0E10               	movlw	16
 18731  001EF8  2440               	addwf	_currentTCB,w,c
 18732  001EFA  D9FC               	call	PL387	;call to abstracted procedure
 18733  001EFC  64F7               	cpfsgt	tblptrh,c
 18734  001EFE  D002               	bra	u14487
 18735  001F00  DACD               	call	PL459	;call to abstracted procedure
 18736  001F02  D002               	bra	u14480
 18737  001F04                     u14487:
 18738  001F04  DA03               	call	PL389	;call to abstracted procedure
 18739  001F06  DB0A               	call	PL499	;call to abstracted procedure
 18740  001F08                     u14480:
 18741                           
 18742                           ;tcpv4.c: 975: currentTCB->remoteAck = currentTCB->remoteAck + 1;
 18743  001F08  DAE6               	call	PL477	;call to abstracted procedure
 18744  001F0A  D9F4               	call	PL387	;call to abstracted procedure
 18745  001F0C  64F7               	cpfsgt	tblptrh,c
 18746  001F0E  D002               	bra	u14497
 18747  001F10  DA06               	call	PL395	;call to abstracted procedure
 18748  001F12  D002               	bra	u14490
 18749  001F14                     u14497:
 18750  001F14  D9FB               	call	PL389	;call to abstracted procedure
 18751  001F16  DA24               	call	PL403	;call to abstracted procedure
 18752  001F18                     u14490:
 18753  001F18  DA15               	call	PL401	;call to abstracted procedure
 18754  001F1A  0E0C               	movlw	12
 18755  001F1C  DA9C               	call	PL445	;call to abstracted procedure
 18756  001F1E  64F7               	cpfsgt	tblptrh,c
 18757  001F20  D002               	bra	u14507
 18758  001F22  DA8C               	call	PL443	;call to abstracted procedure
 18759  001F24  D002               	bra	u14500
 18760  001F26                     u14507:
 18761  001F26  D9F2               	call	PL389	;call to abstracted procedure
 18762  001F28  DADE               	call	PL481	;call to abstracted procedure
 18763  001F2A                     u14500:
 18764                           
 18765                           ;tcpv4.c: 977: currentTCB->socketState = SOCKET_CLOSING;
 18766  001F2A  0E36               	movlw	54
 18767  001F2C  2440               	addwf	_currentTCB,w,c
 18768  001F2E  0101               	movlb	1	; () banked
 18769  001F30  D9E1               	call	PL387	;call to abstracted procedure
 18770  001F32  64F7               	cpfsgt	tblptrh,c
 18771  001F34  D004               	bra	u14517
 18772  001F36  0E04               	movlw	4
 18773  001F38  6EF5               	movwf	tablat,c
 18774  001F3A  000C               	tblwt		*
 18775  001F3C  D003               	bra	u14510
 18776  001F3E                     u14517:
 18777  001F3E  D9E6               	call	PL389	;call to abstracted procedure
 18778  001F40  0E04               	movlw	4
 18779  001F42  6EEF               	movwf	indf0,c
 18780  001F44                     u14510:
 18781                           
 18782                           ;tcpv4.c: 978: currentTCB->timeout = ((unsigned long)1*2);
 18783  001F44  DA6A               	call	PL431	;call to abstracted procedure
 18784  001F46  D9D6               	call	PL387	;call to abstracted procedure
 18785  001F48  64F7               	cpfsgt	tblptrh,c
 18786  001F4A  D002               	bra	u14527
 18787  001F4C  DAB4               	call	PL467	;call to abstracted procedure
 18788  001F4E  D002               	bra	u14520
 18789  001F50                     u14527:
 18790  001F50  D9DD               	call	PL389	;call to abstracted procedure
 18791  001F52  DB05               	call	PL617	;call to abstracted procedure
 18792  001F54                     u14520:
 18793                           
 18794                           ;tcpv4.c: 979: currentTCB->timeoutReloadValue = ((unsigned long)1*2);
 18795  001F54  DA5E               	call	PL429	;call to abstracted procedure
 18796  001F56  D9CE               	call	PL387	;call to abstracted procedure
 18797  001F58  64F7               	cpfsgt	tblptrh,c
 18798  001F5A  D002               	bra	u14537
 18799  001F5C  DAAC               	call	PL467	;call to abstracted procedure
 18800  001F5E  D002               	bra	u14530
 18801  001F60                     u14537:
 18802  001F60  D9D5               	call	PL389	;call to abstracted procedure
 18803  001F62  DAFD               	call	PL617	;call to abstracted procedure
 18804  001F64                     u14530:
 18805                           
 18806                           ;tcpv4.c: 980: currentTCB->timeoutsCount = (5u);
 18807  001F64  DA37               	call	PL417	;call to abstracted procedure
 18808  001F66  D9C6               	call	PL387	;call to abstracted procedure
 18809  001F68  64F7               	cpfsgt	tblptrh,c
 18810  001F6A  D004               	bra	u14547
 18811  001F6C  0E05               	movlw	5
 18812  001F6E  6EF5               	movwf	tablat,c
 18813  001F70  000C               	tblwt		*
 18814  001F72  D003               	bra	u14540
 18815  001F74                     u14547:
 18816  001F74  D9CB               	call	PL389	;call to abstracted procedure
 18817  001F76  0E05               	movlw	5
 18818  001F78  6EEF               	movwf	indf0,c
 18819  001F7A                     u14540:
 18820                           
 18821                           ;tcpv4.c: 982: currentTCB->flags = 0x01U | 0x10U;
 18822  001F7A  D9CD               	call	PL393	;call to abstracted procedure
 18823  001F7C  D9BB               	call	PL387	;call to abstracted procedure
 18824  001F7E  64F7               	cpfsgt	tblptrh,c
 18825  001F80  D004               	bra	u14557
 18826  001F82  0E11               	movlw	17
 18827  001F84  6EF5               	movwf	tablat,c
 18828  001F86  000C               	tblwt		*
 18829  001F88  D003               	bra	u14550
 18830  001F8A                     u14557:
 18831  001F8A  D9C0               	call	PL389	;call to abstracted procedure
 18832  001F8C  0E11               	movlw	17
 18833  001F8E  6EEF               	movwf	indf0,c
 18834  001F90                     u14550:
 18835                           
 18836                           ;tcpv4.c: 984: nextState = LAST_ACK;
 18837  001F90  0E09               	movlw	9
 18838  001F92  D55B               	goto	L12
 18839  001F94                     l9105:
 18840                           
 18841                           ; BSR set to: 1
 18842                           ;tcpv4.c: 993: ;
 18843                           ;tcpv4.c: 994: if (currentTCB->timeoutsCount)
 18844  001F94  0E34               	movlw	52
 18845  001F96  2440               	addwf	_currentTCB,w,c
 18846  001F98  D9AD               	call	PL387	;call to abstracted procedure
 18847  001F9A  64F7               	cpfsgt	tblptrh,c
 18848  001F9C  D003               	bra	u14567
 18849  001F9E  0008               	tblrd		*
 18850  001FA0  50F5               	movf	tablat,w,c
 18851  001FA2  D002               	bra	u14560
 18852  001FA4                     u14567:
 18853  001FA4  D9B3               	call	PL389	;call to abstracted procedure
 18854  001FA6  50EF               	movf	indf0,w,c
 18855  001FA8                     u14560:
 18856  001FA8  0900               	iorlw	0
 18857  001FAA  E001 D550          	bnz	l9033
 18858                           
 18859                           ;tcpv4.c: 998: {
 18860                           ;tcpv4.c: 1000: currentTCB->flags = 0x04U;
 18861  001FAE  D9B3               	call	PL393	;call to abstracted procedure
 18862  001FB0  D9A1               	call	PL387	;call to abstracted procedure
 18863  001FB2  64F7               	cpfsgt	tblptrh,c
 18864  001FB4  D004               	bra	u14587
 18865  001FB6  0E04               	movlw	4
 18866  001FB8  6EF5               	movwf	tablat,c
 18867  001FBA  000C               	tblwt		*
 18868  001FBC  D003               	bra	u14580
 18869  001FBE                     u14587:
 18870  001FBE  D9A6               	call	PL389	;call to abstracted procedure
 18871  001FC0  0E04               	movlw	4
 18872  001FC2  6EEF               	movwf	indf0,c
 18873  001FC4                     u14580:
 18874                           
 18875                           ;tcpv4.c: 1001: if(TCP_Snd(currentTCB))
 18876  001FC4  DA7E               	call	PL471	;call to abstracted procedure
 18877  001FC6  ECCC  F012         	call	_TCP_Snd	;wreg free
 18878  001FCA  EF94  F00A         	goto	L10
 18879  001FCE                     l9119:
 18880  001FCE  0101               	movlb	1	; () banked
 18881  001FD0  510F               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 18882                           
 18883                           ; Switch size 1, requested type "space"
 18884                           ; Number of cases is 7, Range of values is 0 to 12
 18885                           ; switch strategies available:
 18886                           ; Name         Instructions Cycles
 18887                           ; simple_byte           22    12 (average)
 18888                           ;	Chosen strategy is simple_byte
 18889  001FD2  E084               	bz	l9091
 18890  001FD4  0A04               	xorlw	4	; case 4
 18891  001FD6  E101 D677          	bz	l9059
 18892  001FDA  0A02               	xorlw	2	; case 6
 18893  001FDC  E08C               	bz	l9097
 18894  001FDE  0A01               	xorlw	1	; case 7
 18895  001FE0  E08A               	bz	l9097
 18896  001FE2  0A0E               	xorlw	14	; case 9
 18897  001FE4  E102 EF5B  F009    	bz	l1194
 18898  001FEA  0A03               	xorlw	3	; case 10
 18899  001FEC  E102 EF5B  F009    	bz	l1194
 18900  001FF2  0A06               	xorlw	6	; case 12
 18901  001FF4  E0CF               	bz	l9105
 18902  001FF6  D161               	goto	l9227
 18903  001FF8                     l9121:
 18904                           
 18905                           ; BSR set to: 1
 18906                           ;tcpv4.c: 1016: ;
 18907                           ;tcpv4.c: 1017: currentTCB->flags = 0x10U;
 18908  001FF8  0E35               	movlw	53
 18909  001FFA  2440               	addwf	_currentTCB,w,c
 18910  001FFC  D97B               	call	PL387	;call to abstracted procedure
 18911  001FFE  64F7               	cpfsgt	tblptrh,c
 18912  002000  D004               	bra	u14607
 18913  002002  0E10               	movlw	16
 18914  002004  6EF5               	movwf	tablat,c
 18915  002006  000C               	tblwt		*
 18916  002008  D003               	bra	u14600
 18917  00200A                     u14607:
 18918  00200A  D980               	call	PL389	;call to abstracted procedure
 18919  00200C  0E10               	movlw	16
 18920  00200E  6EEF               	movwf	indf0,c
 18921  002010                     u14600:
 18922                           
 18923                           ;tcpv4.c: 1018: if(TCP_Snd(currentTCB))
 18924  002010  DA58               	call	PL471	;call to abstracted procedure
 18925  002012  ECCC  F012         	call	_TCP_Snd	;wreg free
 18926  002016  0900               	iorlw	0
 18927  002018  E101 D14F          	bz	l9227
 18928                           
 18929                           ; BSR set to: 0
 18930                           ;tcpv4.c: 1019: {
 18931                           ;tcpv4.c: 1020: nextState = CLOSING;
 18932  00201C  0E08               	movlw	8
 18933  00201E  D029               	goto	L14
 18934  002020                     l9127:
 18935                           
 18936                           ; BSR set to: 1
 18937                           ;tcpv4.c: 1024: ;
 18938                           ;tcpv4.c: 1026: currentTCB->timeout = ((unsigned long)1*2);
 18939  002020  0E30               	movlw	48
 18940  002022  2440               	addwf	_currentTCB,w,c
 18941  002024  D967               	call	PL387	;call to abstracted procedure
 18942  002026  64F7               	cpfsgt	tblptrh,c
 18943  002028  D002               	bra	u14627
 18944  00202A  DA45               	call	PL467	;call to abstracted procedure
 18945  00202C  D002               	bra	u14620
 18946  00202E                     u14627:
 18947  00202E  D96E               	call	PL389	;call to abstracted procedure
 18948  002030  DA96               	call	PL617	;call to abstracted procedure
 18949  002032                     u14620:
 18950                           
 18951                           ;tcpv4.c: 1027: currentTCB->timeoutsCount = 1;
 18952  002032  D9D0               	call	PL417	;call to abstracted procedure
 18953  002034  D95F               	call	PL387	;call to abstracted procedure
 18954  002036  64F7               	cpfsgt	tblptrh,c
 18955  002038  D004               	bra	u14637
 18956  00203A  0E01               	movlw	1
 18957  00203C  6EF5               	movwf	tablat,c
 18958  00203E  000C               	tblwt		*
 18959  002040  D003               	bra	u14630
 18960  002042                     u14637:
 18961  002042  D964               	call	PL389	;call to abstracted procedure
 18962  002044  0E01               	movlw	1
 18963  002046  6EEF               	movwf	indf0,c
 18964  002048                     u14630:
 18965                           
 18966                           ;tcpv4.c: 1028: nextState = FIN_WAIT_2;
 18967  002048  0E06               	movlw	6
 18968  00204A  D013               	goto	L14
 18969  00204C                     l9131:
 18970                           
 18971                           ; BSR set to: 1
 18972                           ;tcpv4.c: 1031: ;
 18973                           ;tcpv4.c: 1032: currentTCB->flags = 0x10U;
 18974  00204C  0E35               	movlw	53
 18975  00204E  2440               	addwf	_currentTCB,w,c
 18976  002050  D951               	call	PL387	;call to abstracted procedure
 18977  002052  64F7               	cpfsgt	tblptrh,c
 18978  002054  D004               	bra	u14647
 18979  002056  0E10               	movlw	16
 18980  002058  6EF5               	movwf	tablat,c
 18981  00205A  000C               	tblwt		*
 18982  00205C  D003               	bra	u14640
 18983  00205E                     u14647:
 18984  00205E  D956               	call	PL389	;call to abstracted procedure
 18985  002060  0E10               	movlw	16
 18986  002062  6EEF               	movwf	indf0,c
 18987  002064                     u14640:
 18988                           
 18989                           ;tcpv4.c: 1033: if(TCP_Snd(currentTCB))
 18990  002064  DA2E               	call	PL471	;call to abstracted procedure
 18991  002066  ECCC  F012         	call	_TCP_Snd	;wreg free
 18992  00206A  0900               	iorlw	0
 18993  00206C  E101 D125          	bz	l9227
 18994  002070                     l9135:
 18995                           
 18996                           ;tcpv4.c: 1034: {
 18997                           ;tcpv4.c: 1035: nextState = TIME_WAIT;
 18998  002070  0E0A               	movlw	10
 18999  002072                     L14:
 19000  002072  0101               	movlb	1	; () banked
 19001  002074  6F10               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 19002  002076  D121               	goto	l9227
 19003  002078                     l9137:
 19004                           
 19005                           ; BSR set to: 1
 19006                           ;tcpv4.c: 1039: ;
 19007                           ;tcpv4.c: 1040: if (currentTCB->timeoutsCount)
 19008  002078  0E34               	movlw	52
 19009  00207A  2440               	addwf	_currentTCB,w,c
 19010  00207C  D93B               	call	PL387	;call to abstracted procedure
 19011  00207E  64F7               	cpfsgt	tblptrh,c
 19012  002080  D003               	bra	u14667
 19013  002082  0008               	tblrd		*
 19014  002084  50F5               	movf	tablat,w,c
 19015  002086  D002               	bra	u14660
 19016  002088                     u14667:
 19017  002088  D941               	call	PL389	;call to abstracted procedure
 19018  00208A  50EF               	movf	indf0,w,c
 19019  00208C                     u14660:
 19020  00208C  0900               	iorlw	0
 19021  00208E  E001 D4DE          	bnz	l9033
 19022                           
 19023                           ;tcpv4.c: 1044: {
 19024                           ;tcpv4.c: 1046: currentTCB->flags = 0x04U;
 19025  002092  D941               	call	PL393	;call to abstracted procedure
 19026  002094  D92F               	call	PL387	;call to abstracted procedure
 19027  002096  64F7               	cpfsgt	tblptrh,c
 19028  002098  D004               	bra	u14687
 19029  00209A  0E04               	movlw	4
 19030  00209C  6EF5               	movwf	tablat,c
 19031  00209E  000C               	tblwt		*
 19032  0020A0  D003               	bra	u14680
 19033  0020A2                     u14687:
 19034  0020A2  D934               	call	PL389	;call to abstracted procedure
 19035  0020A4  0E04               	movlw	4
 19036  0020A6  6EEF               	movwf	indf0,c
 19037  0020A8                     u14680:
 19038                           
 19039                           ;tcpv4.c: 1047: if(TCP_Snd(currentTCB))
 19040  0020A8  DA0C               	call	PL471	;call to abstracted procedure
 19041  0020AA  ECCC  F012         	call	_TCP_Snd	;wreg free
 19042  0020AE  EF94  F00A         	goto	L10
 19043  0020B2                     l9151:
 19044  0020B2  0101               	movlb	1	; () banked
 19045  0020B4  510F               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 19046                           
 19047                           ; Switch size 1, requested type "space"
 19048                           ; Number of cases is 4, Range of values is 4 to 12
 19049                           ; switch strategies available:
 19050                           ; Name         Instructions Cycles
 19051                           ; simple_byte           13     7 (average)
 19052                           ;	Chosen strategy is simple_byte
 19053  0020B6  0A04               	xorlw	4	; case 4
 19054  0020B8  E0B3               	bz	l9127
 19055  0020BA  0A02               	xorlw	2	; case 6
 19056  0020BC  E09D               	bz	l9121
 19057  0020BE  0A01               	xorlw	1	; case 7
 19058  0020C0  E0C5               	bz	l9131
 19059  0020C2  0A0B               	xorlw	11	; case 12
 19060  0020C4  E0D9               	bz	l9137
 19061  0020C6  D0F9               	goto	l9227
 19062  0020C8                     l9153:
 19063                           
 19064                           ; BSR set to: 1
 19065                           ;tcpv4.c: 1062: ;
 19066                           ;tcpv4.c: 1063: if(TCP_Snd(currentTCB))
 19067  0020C8  D9FC               	call	PL471	;call to abstracted procedure
 19068  0020CA  ECCC  F012         	call	_TCP_Snd	;wreg free
 19069  0020CE  D7CD               	goto	L15
 19070  0020D0                     l9157:
 19071                           
 19072                           ; BSR set to: 1
 19073                           ;tcpv4.c: 1069: ;
 19074                           ;tcpv4.c: 1070: if (currentTCB->timeoutsCount)
 19075  0020D0  0E34               	movlw	52
 19076  0020D2  2440               	addwf	_currentTCB,w,c
 19077  0020D4  D90F               	call	PL387	;call to abstracted procedure
 19078  0020D6  64F7               	cpfsgt	tblptrh,c
 19079  0020D8  D003               	bra	u14717
 19080  0020DA  0008               	tblrd		*
 19081  0020DC  50F5               	movf	tablat,w,c
 19082  0020DE  D002               	bra	u14710
 19083  0020E0                     u14717:
 19084  0020E0  D915               	call	PL389	;call to abstracted procedure
 19085  0020E2  50EF               	movf	indf0,w,c
 19086  0020E4                     u14710:
 19087  0020E4  0900               	iorlw	0
 19088  0020E6  E001 D4B2          	bnz	l9033
 19089                           
 19090                           ;tcpv4.c: 1074: {
 19091                           ;tcpv4.c: 1076: currentTCB->flags = 0x04U;
 19092  0020EA  D915               	call	PL393	;call to abstracted procedure
 19093  0020EC  D903               	call	PL387	;call to abstracted procedure
 19094  0020EE  64F7               	cpfsgt	tblptrh,c
 19095  0020F0  D004               	bra	u14737
 19096  0020F2  0E04               	movlw	4
 19097  0020F4  6EF5               	movwf	tablat,c
 19098  0020F6  000C               	tblwt		*
 19099  0020F8  D003               	bra	u14730
 19100  0020FA                     u14737:
 19101  0020FA  D908               	call	PL389	;call to abstracted procedure
 19102  0020FC  0E04               	movlw	4
 19103  0020FE  6EEF               	movwf	indf0,c
 19104  002100                     u14730:
 19105                           
 19106                           ;tcpv4.c: 1077: if(TCP_Snd(currentTCB))
 19107  002100  D9E0               	call	PL471	;call to abstracted procedure
 19108  002102  ECCC  F012         	call	_TCP_Snd	;wreg free
 19109  002106  EF94  F00A         	goto	L10
 19110  00210A                     l9171:
 19111  00210A  0101               	movlb	1	; () banked
 19112  00210C  510F               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 19113                           
 19114                           ; Switch size 1, requested type "space"
 19115                           ; Number of cases is 2, Range of values is 6 to 12
 19116                           ; switch strategies available:
 19117                           ; Name         Instructions Cycles
 19118                           ; simple_byte            7     4 (average)
 19119                           ;	Chosen strategy is simple_byte
 19120  00210E  0A06               	xorlw	6	; case 6
 19121  002110  E0DB               	bz	l9153
 19122  002112  0A0A               	xorlw	10	; case 12
 19123  002114  E0DD               	bz	l9157
 19124  002116  D0D1               	goto	l9227
 19125  002118                     l9177:
 19126  002118  0101               	movlb	1	; () banked
 19127  00211A  510F               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 19128                           
 19129                           ; Switch size 1, requested type "space"
 19130                           ; Number of cases is 1, Range of values is 4 to 4
 19131                           ; switch strategies available:
 19132                           ; Name         Instructions Cycles
 19133                           ; simple_byte            4     3 (average)
 19134                           ;	Chosen strategy is simple_byte
 19135  00211C  0A04               	xorlw	4	; case 4
 19136  00211E  E0A8               	bz	l9135
 19137  002120  D0CC               	goto	l9227
 19138  002122                     l9179:
 19139                           
 19140                           ; BSR set to: 1
 19141                           ;tcpv4.c: 1107: case RCV_ACK:
 19142                           ;tcpv4.c: 1108: if ((currentTCB->destIP == receivedRemoteAddress) &&
 19143                           ;tcpv4.c: 1109: (currentTCB->destPort == tcpHeader.sourcePort))
 19144  002122  0E02               	movlw	2
 19145  002124  2440               	addwf	_currentTCB,w,c
 19146  002126  D8E6               	call	PL387	;call to abstracted procedure
 19147  002128  64F7               	cpfsgt	tblptrh,c
 19148  00212A  D002               	bra	u14757
 19149  00212C  D8F8               	call	PL395	;call to abstracted procedure
 19150  00212E  D002               	bra	u14750
 19151  002130                     u14757:
 19152  002130  D8ED               	call	PL389	;call to abstracted procedure
 19153  002132  D916               	call	PL403	;call to abstracted procedure
 19154  002134                     u14750:
 19155  002134  503C               	movf	_receivedRemoteAddress,w,c
 19156  002136  0101               	movlb	1	; () banked
 19157  002138  1902               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 19158  00213A  E109               	bnz	u14761
 19159  00213C  503D               	movf	_receivedRemoteAddress+1,w,c
 19160  00213E  1903               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 19161  002140  E106               	bnz	u14761
 19162  002142  503E               	movf	_receivedRemoteAddress+2,w,c
 19163  002144  1904               	xorwf	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 19164  002146  E103               	bnz	u14761
 19165  002148  503F               	movf	_receivedRemoteAddress+3,w,c
 19166  00214A  1905               	xorwf	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 19167  00214C  A4D8               	btfss	status,2,c
 19168  00214E                     u14761:
 19169  00214E  D0B5               	goto	l9227
 19170                           
 19171                           ; BSR set to: 1
 19172  002150  0E06               	movlw	6
 19173  002152  2440               	addwf	_currentTCB,w,c
 19174  002154  D8CF               	call	PL387	;call to abstracted procedure
 19175  002156  64F7               	cpfsgt	tblptrh,c
 19176  002158  D003               	bra	u14777
 19177  00215A  0009               	tblrd		*+
 19178  00215C  D8ED               	call	PL397	;call to abstracted procedure
 19179  00215E  D005               	bra	u14770
 19180  002160                     u14777:
 19181  002160  D8D5               	call	PL389	;call to abstracted procedure
 19182  002162  CFEE F102          	movff	postinc0,??_TCP_FiniteStateMachine+2
 19183  002166  CFEE F103          	movff	postinc0,??_TCP_FiniteStateMachine+3
 19184  00216A                     u14770:
 19185  00216A  0101               	movlb	1	; () banked
 19186  00216C  51D1               	movf	_tcpHeader& (0+255),w,b
 19187  00216E  1902               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 19188  002170  E103               	bnz	u14781
 19189  002172  51D2               	movf	(_tcpHeader+1)& (0+255),w,b
 19190  002174  1903               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 19191  002176  D09E               	goto	L16
 19192  002178                     u14781:
 19193  002178  D0A0               	goto	l9227
 19194  00217A                     l9187:
 19195                           
 19196                           ; BSR set to: 1
 19197                           ;tcpv4.c: 1117: if (currentTCB->timeoutsCount)
 19198  00217A  0E34               	movlw	52
 19199  00217C  2440               	addwf	_currentTCB,w,c
 19200  00217E  D8BA               	call	PL387	;call to abstracted procedure
 19201  002180  64F7               	cpfsgt	tblptrh,c
 19202  002182  D003               	bra	u14797
 19203  002184  0008               	tblrd		*
 19204  002186  50F5               	movf	tablat,w,c
 19205  002188  D002               	bra	u14790
 19206  00218A                     u14797:
 19207  00218A  D8C0               	call	PL389	;call to abstracted procedure
 19208  00218C  50EF               	movf	indf0,w,c
 19209  00218E                     u14790:
 19210  00218E  0900               	iorlw	0
 19211  002190  E001 D45D          	bnz	l9033
 19212                           
 19213                           ;tcpv4.c: 1121: {
 19214                           ;tcpv4.c: 1123: currentTCB->flags = 0x04U;
 19215  002194  D8C0               	call	PL393	;call to abstracted procedure
 19216  002196  D8AE               	call	PL387	;call to abstracted procedure
 19217  002198  64F7               	cpfsgt	tblptrh,c
 19218  00219A  D004               	bra	u14817
 19219  00219C  0E04               	movlw	4
 19220  00219E  6EF5               	movwf	tablat,c
 19221  0021A0  000C               	tblwt		*
 19222  0021A2  D003               	bra	u14810
 19223  0021A4                     u14817:
 19224  0021A4  D8B3               	call	PL389	;call to abstracted procedure
 19225  0021A6  0E04               	movlw	4
 19226  0021A8  6EEF               	movwf	indf0,c
 19227  0021AA                     u14810:
 19228                           
 19229                           ;tcpv4.c: 1124: if(TCP_Snd(currentTCB))
 19230  0021AA  D98B               	call	PL471	;call to abstracted procedure
 19231  0021AC  ECCC  F012         	call	_TCP_Snd	;wreg free
 19232  0021B0  EF94  F00A         	goto	L10
 19233  0021B4                     l9201:
 19234  0021B4  0101               	movlb	1	; () banked
 19235  0021B6  510F               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 19236                           
 19237                           ; Switch size 1, requested type "space"
 19238                           ; Number of cases is 3, Range of values is 4 to 12
 19239                           ; switch strategies available:
 19240                           ; Name         Instructions Cycles
 19241                           ; simple_byte           10     6 (average)
 19242                           ;	Chosen strategy is simple_byte
 19243  0021B8  0A04               	xorlw	4	; case 4
 19244  0021BA  E0B3               	bz	l9179
 19245  0021BC  0A03               	xorlw	3	; case 7
 19246  0021BE  E0B1               	bz	l9179
 19247  0021C0  0A0B               	xorlw	11	; case 12
 19248  0021C2  E0DB               	bz	l9187
 19249  0021C4  D07A               	goto	l9227
 19250  0021C6                     l9205:
 19251                           
 19252                           ; BSR set to: 1
 19253                           ;tcpv4.c: 1143: ;
 19254                           ;tcpv4.c: 1145: currentTCB->timeout = ((unsigned long)1*2);
 19255  0021C6  0E30               	movlw	48
 19256  0021C8  2440               	addwf	_currentTCB,w,c
 19257  0021CA  D894               	call	PL387	;call to abstracted procedure
 19258  0021CC  64F7               	cpfsgt	tblptrh,c
 19259  0021CE  D002               	bra	u14837
 19260  0021D0  D972               	call	PL467	;call to abstracted procedure
 19261  0021D2  D002               	bra	u14830
 19262  0021D4                     u14837:
 19263  0021D4  D89B               	call	PL389	;call to abstracted procedure
 19264  0021D6  D9C3               	call	PL617	;call to abstracted procedure
 19265  0021D8                     u14830:
 19266                           
 19267                           ;tcpv4.c: 1146: currentTCB->timeoutReloadValue = ((unsigned long)1*2);
 19268  0021D8  D91C               	call	PL429	;call to abstracted procedure
 19269  0021DA  D88C               	call	PL387	;call to abstracted procedure
 19270  0021DC  64F7               	cpfsgt	tblptrh,c
 19271  0021DE  D002               	bra	u14847
 19272  0021E0  D96A               	call	PL467	;call to abstracted procedure
 19273  0021E2  D002               	bra	u14840
 19274  0021E4                     u14847:
 19275  0021E4  D893               	call	PL389	;call to abstracted procedure
 19276  0021E6  D9BB               	call	PL617	;call to abstracted procedure
 19277  0021E8                     u14840:
 19278                           
 19279                           ;tcpv4.c: 1147: currentTCB->timeoutsCount = (3u);
 19280  0021E8  D8F5               	call	PL417	;call to abstracted procedure
 19281  0021EA  D884               	call	PL387	;call to abstracted procedure
 19282  0021EC  64F7               	cpfsgt	tblptrh,c
 19283  0021EE  D004               	bra	u14857
 19284  0021F0  0E03               	movlw	3
 19285  0021F2  6EF5               	movwf	tablat,c
 19286  0021F4  000C               	tblwt		*
 19287  0021F6  D003               	bra	u14850
 19288  0021F8                     u14857:
 19289  0021F8  D889               	call	PL389	;call to abstracted procedure
 19290  0021FA  0E03               	movlw	3
 19291  0021FC  6EEF               	movwf	indf0,c
 19292  0021FE                     u14850:
 19293                           
 19294                           ;tcpv4.c: 1148: currentTCB->flags = 0x02U;
 19295  0021FE  D88B               	call	PL393	;call to abstracted procedure
 19296  002200  D879               	call	PL387	;call to abstracted procedure
 19297  002202  64F7               	cpfsgt	tblptrh,c
 19298  002204  D004               	bra	u14867
 19299  002206  0E02               	movlw	2
 19300  002208  6EF5               	movwf	tablat,c
 19301  00220A  000C               	tblwt		*
 19302  00220C  D003               	bra	u14860
 19303  00220E                     u14867:
 19304  00220E  D87E               	call	PL389	;call to abstracted procedure
 19305  002210  0E02               	movlw	2
 19306  002212  6EEF               	movwf	indf0,c
 19307  002214                     u14860:
 19308                           
 19309                           ;tcpv4.c: 1149: TCP_Snd(currentTCB);
 19310  002214  D956               	call	PL471	;call to abstracted procedure
 19311  002216  ECCC  F012         	call	_TCP_Snd	;wreg free
 19312                           
 19313                           ; BSR set to: 0
 19314                           ;tcpv4.c: 1150: nextState = SYN_SENT;
 19315  00221A  0E02               	movlw	2
 19316  00221C  0101               	movlb	1	; () banked
 19317  00221E  6F10               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 19318                           
 19319                           ; BSR set to: 1
 19320                           ;tcpv4.c: 1151: ret = 1;
 19321  002220  0E01               	movlw	1
 19322  002222  6F0C               	movwf	TCP_FiniteStateMachine@ret& (0+255),b
 19323                           
 19324                           ;tcpv4.c: 1152: break;
 19325  002224  D04A               	goto	l9227
 19326  002226                     l9213:
 19327                           
 19328                           ; BSR set to: 1
 19329                           ;tcpv4.c: 1154: ;
 19330                           ;tcpv4.c: 1155: currentTCB->destIP = 0;
 19331  002226  0E02               	movlw	2
 19332  002228  2440               	addwf	_currentTCB,w,c
 19333  00222A  D864               	call	PL387	;call to abstracted procedure
 19334  00222C  64F7               	cpfsgt	tblptrh,c
 19335  00222E  D006               	bra	u14877
 19336  002230  6AF5               	clrf	tablat,c
 19337  002232  000D               	tblwt		*+
 19338  002234  6AF5               	clrf	tablat,c
 19339  002236  000D               	tblwt		*+
 19340  002238  D8D5               	call	PL423	;call to abstracted procedure
 19341  00223A  D002               	bra	u14870
 19342  00223C                     u14877:
 19343  00223C  D867               	call	PL389	;call to abstracted procedure
 19344  00223E  D946               	call	PL473	;call to abstracted procedure
 19345  002240                     u14870:
 19346                           
 19347                           ;tcpv4.c: 1156: currentTCB->destPort = 0;
 19348  002240  D91B               	call	PL451	;call to abstracted procedure
 19349  002242  D858               	call	PL387	;call to abstracted procedure
 19350  002244  64F7               	cpfsgt	tblptrh,c
 19351  002246  D002               	bra	u14887
 19352  002248  D8CD               	call	PL423	;call to abstracted procedure
 19353  00224A  D003               	bra	u14880
 19354  00224C                     u14887:
 19355  00224C  D85F               	call	PL389	;call to abstracted procedure
 19356  00224E  6AEE               	clrf	postinc0,c
 19357  002250  6AEF               	clrf	indf0,c
 19358  002252                     u14880:
 19359                           
 19360                           ;tcpv4.c: 1157: nextState = LISTEN;
 19361  002252  0E01               	movlw	1
 19362  002254  D7E3               	goto	L17
 19363  002256                     l9221:
 19364  002256  0101               	movlb	1	; () banked
 19365  002258  510F               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 19366                           
 19367                           ; Switch size 1, requested type "space"
 19368                           ; Number of cases is 2, Range of values is 1 to 2
 19369                           ; switch strategies available:
 19370                           ; Name         Instructions Cycles
 19371                           ; simple_byte            7     4 (average)
 19372                           ;	Chosen strategy is simple_byte
 19373  00225A  0A01               	xorlw	1	; case 1
 19374  00225C  E0B4               	bz	l9205
 19375  00225E  0A03               	xorlw	3	; case 2
 19376  002260  E0E2               	bz	l9213
 19377  002262  D02B               	goto	l9227
 19378  002264                     l9225:
 19379                           
 19380                           ; BSR set to: 1
 19381  002264  0E2A               	movlw	42
 19382  002266  2440               	addwf	_currentTCB,w,c
 19383  002268  D845               	call	PL387	;call to abstracted procedure
 19384  00226A  64F7               	cpfsgt	tblptrh,c
 19385  00226C  D003               	bra	u14897
 19386  00226E  0008               	tblrd		*
 19387  002270  50F5               	movf	tablat,w,c
 19388  002272  D002               	bra	u14890
 19389  002274                     u14897:
 19390  002274  D84B               	call	PL389	;call to abstracted procedure
 19391  002276  50EF               	movf	indf0,w,c
 19392  002278                     u14890:
 19393                           
 19394                           ; Switch size 1, requested type "space"
 19395                           ; Number of cases is 11, Range of values is 0 to 10
 19396                           ; switch strategies available:
 19397                           ; Name         Instructions Cycles
 19398                           ; simple_byte           34    18 (average)
 19399                           ;	Chosen strategy is simple_byte
 19400  002278  0A00               	xorlw	0	; case 0
 19401  00227A  E0ED               	bz	l9221
 19402  00227C  0A01               	xorlw	1	; case 1
 19403  00227E  E102 EF65  F009    	bz	l8909
 19404  002284  0A03               	xorlw	3	; case 2
 19405  002286  E102 EFA6  F00B    	bz	l9001
 19406  00228C  0A01               	xorlw	1	; case 3
 19407  00228E  E101 D507          	bz	l9057
 19408  002292  0A07               	xorlw	7	; case 4
 19409  002294  E101 D69B          	bz	l9119
 19410  002298  0A01               	xorlw	1	; case 5
 19411  00229A  E101 D70A          	bz	l9151
 19412  00229E  0A03               	xorlw	3	; case 6
 19413  0022A0  E101 D733          	bz	l9171
 19414  0022A4  0A01               	xorlw	1	; case 7
 19415  0022A6  E009               	bz	l9227
 19416  0022A8  0A0F               	xorlw	15	; case 8
 19417  0022AA  E101 D735          	bz	l9177
 19418  0022AE  0A01               	xorlw	1	; case 9
 19419  0022B0  E081               	bz	l9201
 19420  0022B2  0A03               	xorlw	3	; case 10
 19421  0022B4                     L16:
 19422  0022B4  E102 EF5B  F009    	bz	l1194
 19423  0022BA                     l9227:
 19424                           
 19425                           ;tcpv4.c: 1167: currentTCB->connectionEvent = NOP;
 19426  0022BA  0E2B               	movlw	43
 19427  0022BC  2440               	addwf	_currentTCB,w,c
 19428  0022BE  0101               	movlb	1	; () banked
 19429  0022C0  D819               	call	PL387	;call to abstracted procedure
 19430  0022C2  64F7               	cpfsgt	tblptrh,c
 19431  0022C4  D004               	bra	u14907
 19432  0022C6  0E0D               	movlw	13
 19433  0022C8  6EF5               	movwf	tablat,c
 19434  0022CA  000C               	tblwt		*
 19435  0022CC  D003               	bra	u14900
 19436  0022CE                     u14907:
 19437  0022CE  D81E               	call	PL389	;call to abstracted procedure
 19438  0022D0  0E0D               	movlw	13
 19439  0022D2  6EEF               	movwf	indf0,c
 19440  0022D4                     u14900:
 19441                           
 19442                           ;tcpv4.c: 1168: currentTCB->fsmState = nextState;
 19443  0022D4  0E2A               	movlw	42
 19444  0022D6  2440               	addwf	_currentTCB,w,c
 19445  0022D8  0101               	movlb	1	; () banked
 19446  0022DA  D80C               	call	PL387	;call to abstracted procedure
 19447  0022DC  64F7               	cpfsgt	tblptrh,c
 19448  0022DE  D004               	bra	u14917
 19449  0022E0  C110  FFF5         	movff	TCP_FiniteStateMachine@nextState,tablat
 19450  0022E4  000C               	tblwt		*
 19451  0022E6  D003               	bra	u14910
 19452  0022E8                     u14917:
 19453  0022E8  D811               	call	PL389	;call to abstracted procedure
 19454  0022EA  C110  FFEF         	movff	TCP_FiniteStateMachine@nextState,indf0
 19455  0022EE                     u14910:
 19456                           
 19457                           ;tcpv4.c: 1169: return ret;
 19458  0022EE  0101               	movlb	1	; () banked
 19459  0022F0  510C               	movf	TCP_FiniteStateMachine@ret& (0+255),w,b
 19460                           
 19461                           ; BSR set to: 1
 19462  0022F2  0012               	return		;funcret
 19463  0022F4                     __end_of_TCP_FiniteStateMachine:
 19464                           	opt stack 0
 19465  0022F4                     PL387:
 19466                           	opt stack 14
 19467  0022F4  6F00               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19468  0022F6  0E00               	movlw	0
 19469  0022F8  2041               	addwfc	_currentTCB+1,w,c
 19470  0022FA  6F01               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19471  0022FC  C100  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19472  002300  C101  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19473  002304  0E00               	movlw	low (__smallconst shr (0+16))
 19474  002306  6EF8               	movwf	tblptru,c
 19475  002308  0E0F               	movlw	(high __ramtop+-1)
 19476  00230A  0012               	return	
 19477  00230C                     __end_ofPL387:
 19478                           	opt stack 0
 19479  00230C                     PL389:
 19480                           	opt stack 19
 19481  00230C  CFF6 FFE9          	movff	tblptrl,fsr0l
 19482  002310  CFF7 FFEA          	movff	tblptrh,fsr0h
 19483  002314  0012               	return	
 19484  002316                     __end_ofPL389:
 19485                           	opt stack 0
 19486  002316                     PL393:
 19487                           	opt stack 14
 19488  002316  0E35               	movlw	53
 19489  002318  2440               	addwf	_currentTCB,w,c
 19490  00231A  0101               	movlb	1	; () banked
 19491  00231C  0012               	return	
 19492  00231E                     __end_ofPL393:
 19493                           	opt stack 0
 19494  00231E                     PL395:
 19495                           	opt stack 14
 19496  00231E  0009               	tblrd		*+
 19497  002320  CFF5 F102          	movff	tablat,??_TCP_FiniteStateMachine+2
 19498  002324  0009               	tblrd		*+
 19499  002326  CFF5 F103          	movff	tablat,??_TCP_FiniteStateMachine+3
 19500  00232A  0009               	tblrd		*+
 19501  00232C  CFF5 F104          	movff	tablat,??_TCP_FiniteStateMachine+4
 19502  002330  0009               	tblrd		*+
 19503  002332  CFF5 F105          	movff	tablat,??_TCP_FiniteStateMachine+5
 19504  002336  0012               	return	
 19505  002338                     __end_ofPL395:
 19506                           	opt stack 0
 19507  002338                     PL397:
 19508                           	opt stack 14
 19509  002338  CFF5 F102          	movff	tablat,??_TCP_FiniteStateMachine+2
 19510  00233C  0009               	tblrd		*+
 19511  00233E  CFF5 F103          	movff	tablat,??_TCP_FiniteStateMachine+3
 19512  002342  0012               	return	
 19513  002344                     __end_ofPL397:
 19514                           	opt stack 0
 19515  002344                     PL401:
 19516                           	opt stack 14
 19517  002344  0E01               	movlw	1
 19518  002346  0101               	movlb	1	; () banked
 19519  002348  2502               	addwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 19520  00234A  6F06               	movwf	(??_TCP_FiniteStateMachine+6)& (0+255),b
 19521  00234C  0E00               	movlw	0
 19522  00234E  2103               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 19523  002350  6F07               	movwf	(??_TCP_FiniteStateMachine+7)& (0+255),b
 19524  002352  0E00               	movlw	0
 19525  002354  2104               	addwfc	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 19526  002356  6F08               	movwf	(??_TCP_FiniteStateMachine+8)& (0+255),b
 19527  002358  0E00               	movlw	0
 19528  00235A  2105               	addwfc	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 19529  00235C  6F09               	movwf	(??_TCP_FiniteStateMachine+9)& (0+255),b
 19530  00235E  0012               	return	
 19531  002360                     __end_ofPL401:
 19532                           	opt stack 0
 19533  002360                     PL403:
 19534                           	opt stack 14
 19535  002360  CFEE F102          	movff	postinc0,??_TCP_FiniteStateMachine+2
 19536  002364  CFEE F103          	movff	postinc0,??_TCP_FiniteStateMachine+3
 19537  002368  CFEE F104          	movff	postinc0,??_TCP_FiniteStateMachine+4
 19538  00236C  CFEE F105          	movff	postinc0,??_TCP_FiniteStateMachine+5
 19539  002370  0012               	return	
 19540  002372                     __end_ofPL403:
 19541                           	opt stack 0
 19542  002372                     PL405:
 19543                           	opt stack 14
 19544  002372  0101               	movlb	1	; () banked
 19545  002374  51DF               	movf	(_tcpHeader+14)& (0+255),w,b
 19546  002376  6F01               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19547  002378  6B00               	clrf	??_TCP_FiniteStateMachine& (0+255),b
 19548  00237A  EE21  F0DF         	lfsr	2,_tcpHeader+14
 19549  00237E  CFDE F102          	movff	postinc2,??_TCP_FiniteStateMachine+2
 19550  002382  CFDD F103          	movff	postdec2,??_TCP_FiniteStateMachine+3
 19551  002386  C103  F102         	movff	??_TCP_FiniteStateMachine+3,??_TCP_FiniteStateMachine+2
 19552  00238A  6B03               	clrf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 19553  00238C  6B03               	clrf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 19554  00238E  5100               	movf	??_TCP_FiniteStateMachine& (0+255),w,b
 19555  002390  1302               	iorwf	(??_TCP_FiniteStateMachine+2)& (0+255),f,b
 19556  002392  5101               	movf	(??_TCP_FiniteStateMachine+1)& (0+255),w,b
 19557  002394  1303               	iorwf	(??_TCP_FiniteStateMachine+3)& (0+255),f,b
 19558  002396  0E18               	movlw	24
 19559  002398  2440               	addwf	_currentTCB,w,c
 19560  00239A  6F04               	movwf	(??_TCP_FiniteStateMachine+4)& (0+255),b
 19561  00239C  0E00               	movlw	0
 19562  00239E  2041               	addwfc	_currentTCB+1,w,c
 19563  0023A0  6F05               	movwf	(??_TCP_FiniteStateMachine+5)& (0+255),b
 19564  0023A2  C104  FFF6         	movff	??_TCP_FiniteStateMachine+4,tblptrl
 19565  0023A6  C105  FFF7         	movff	??_TCP_FiniteStateMachine+5,tblptrh
 19566  0023AA  0E00               	movlw	low (__smallconst shr (0+16))
 19567  0023AC  6EF8               	movwf	tblptru,c
 19568  0023AE  0E0F               	movlw	(high __ramtop+-1)
 19569  0023B0  0012               	return	
 19570  0023B2                     __end_ofPL405:
 19571                           	opt stack 0
 19572  0023B2                     PL407:
 19573                           	opt stack 14
 19574  0023B2  2440               	addwf	_currentTCB,w,c
 19575  0023B4  6F04               	movwf	(??_TCP_FiniteStateMachine+4)& (0+255),b
 19576  0023B6  0E00               	movlw	0
 19577  0023B8  2041               	addwfc	_currentTCB+1,w,c
 19578  0023BA  6F05               	movwf	(??_TCP_FiniteStateMachine+5)& (0+255),b
 19579  0023BC  C104  FFF6         	movff	??_TCP_FiniteStateMachine+4,tblptrl
 19580  0023C0  C105  FFF7         	movff	??_TCP_FiniteStateMachine+5,tblptrh
 19581  0023C4  0E00               	movlw	low (__smallconst shr (0+16))
 19582  0023C6  6EF8               	movwf	tblptru,c
 19583  0023C8  0E0F               	movlw	(high __ramtop+-1)
 19584  0023CA  0012               	return	
 19585  0023CC                     __end_ofPL407:
 19586                           	opt stack 0
 19587  0023CC                     PL415:
 19588                           	opt stack 14
 19589  0023CC  0E08               	movlw	8
 19590  0023CE  2440               	addwf	_currentTCB,w,c
 19591  0023D0  0101               	movlb	1	; () banked
 19592  0023D2  0012               	return	
 19593  0023D4                     __end_ofPL415:
 19594                           	opt stack 0
 19595  0023D4                     PL417:
 19596                           	opt stack 14
 19597  0023D4  0E34               	movlw	52
 19598  0023D6  2440               	addwf	_currentTCB,w,c
 19599  0023D8  0101               	movlb	1	; () banked
 19600  0023DA  0012               	return	
 19601  0023DC                     __end_ofPL417:
 19602                           	opt stack 0
 19603  0023DC                     PL419:
 19604                           	opt stack 14
 19605  0023DC  0E1C               	movlw	28
 19606  0023DE  2440               	addwf	_currentTCB,w,c
 19607  0023E0  0101               	movlb	1	; () banked
 19608  0023E2  0012               	return	
 19609  0023E4                     __end_ofPL419:
 19610                           	opt stack 0
 19611  0023E4                     PL423:
 19612                           	opt stack 19
 19613  0023E4  6AF5               	clrf	tablat,c
 19614  0023E6  000D               	tblwt		*+
 19615  0023E8  6AF5               	clrf	tablat,c
 19616  0023EA  000C               	tblwt		*
 19617  0023EC  0012               	return	
 19618  0023EE                     __end_ofPL423:
 19619                           	opt stack 0
 19620  0023EE                     PL425:
 19621                           	opt stack 14
 19622  0023EE  0E01               	movlw	1
 19623  0023F0  0101               	movlb	1	; () banked
 19624  0023F2  25D5               	addwf	(_tcpHeader+4)& (0+255),w,b
 19625  0023F4  6F00               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19626  0023F6  0E00               	movlw	0
 19627  0023F8  21D6               	addwfc	(_tcpHeader+5)& (0+255),w,b
 19628  0023FA  6F01               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19629  0023FC  0E00               	movlw	0
 19630  0023FE  21D7               	addwfc	(_tcpHeader+6)& (0+255),w,b
 19631  002400  6F02               	movwf	(??_TCP_FiniteStateMachine+2)& (0+255),b
 19632  002402  0E00               	movlw	0
 19633  002404  21D8               	addwfc	(_tcpHeader+7)& (0+255),w,b
 19634  002406  6F03               	movwf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 19635  002408  0C0C               	retlw	12
 19636  00240A                     __end_ofPL425:
 19637                           	opt stack 0
 19638  00240A                     PL427:
 19639                           	opt stack 14
 19640  00240A  0E10               	movlw	16
 19641  00240C  2440               	addwf	_currentTCB,w,c
 19642  00240E  0101               	movlb	1	; () banked
 19643  002410  0012               	return	
 19644  002412                     __end_ofPL427:
 19645                           	opt stack 0
 19646  002412                     PL429:
 19647                           	opt stack 14
 19648  002412  0E32               	movlw	50
 19649  002414  2440               	addwf	_currentTCB,w,c
 19650  002416  0101               	movlb	1	; () banked
 19651  002418  0012               	return	
 19652  00241A                     __end_ofPL429:
 19653                           	opt stack 0
 19654  00241A                     PL431:
 19655                           	opt stack 14
 19656  00241A  0E30               	movlw	48
 19657  00241C  2440               	addwf	_currentTCB,w,c
 19658  00241E  0101               	movlb	1	; () banked
 19659  002420  0012               	return	
 19660  002422                     __end_ofPL431:
 19661                           	opt stack 0
 19662  002422                     PL441:
 19663                           	opt stack 14
 19664  002422  C1D5  FFF5         	movff	_tcpHeader+4,tablat
 19665  002426  000D               	tblwt		*+
 19666  002428  C1D6  FFF5         	movff	_tcpHeader+5,tablat
 19667  00242C  000D               	tblwt		*+
 19668  00242E  C1D7  FFF5         	movff	_tcpHeader+6,tablat
 19669  002432  000D               	tblwt		*+
 19670  002434  C1D8  FFF5         	movff	_tcpHeader+7,tablat
 19671  002438  000C               	tblwt		*
 19672  00243A  0012               	return	
 19673  00243C                     __end_ofPL441:
 19674                           	opt stack 0
 19675  00243C                     PL443:
 19676                           	opt stack 14
 19677  00243C  C106  FFF5         	movff	??_TCP_FiniteStateMachine+6,tablat
 19678  002440  000D               	tblwt		*+
 19679  002442  C107  FFF5         	movff	??_TCP_FiniteStateMachine+7,tablat
 19680  002446  000D               	tblwt		*+
 19681  002448  C108  FFF5         	movff	??_TCP_FiniteStateMachine+8,tablat
 19682  00244C  000D               	tblwt		*+
 19683  00244E  C109  FFF5         	movff	??_TCP_FiniteStateMachine+9,tablat
 19684  002452  000C               	tblwt		*
 19685  002454  0012               	return	
 19686  002456                     __end_ofPL443:
 19687                           	opt stack 0
 19688  002456                     PL445:
 19689                           	opt stack 14
 19690  002456  2440               	addwf	_currentTCB,w,c
 19691  002458  6F0A               	movwf	(??_TCP_FiniteStateMachine+10)& (0+255),b
 19692  00245A  0E00               	movlw	0
 19693  00245C  2041               	addwfc	_currentTCB+1,w,c
 19694  00245E  6F0B               	movwf	(??_TCP_FiniteStateMachine+11)& (0+255),b
 19695  002460  C10A  FFF6         	movff	??_TCP_FiniteStateMachine+10,tblptrl
 19696  002464  C10B  FFF7         	movff	??_TCP_FiniteStateMachine+11,tblptrh
 19697  002468  0E00               	movlw	low (__smallconst shr (0+16))
 19698  00246A  6EF8               	movwf	tblptru,c
 19699  00246C  0E0F               	movlw	(high __ramtop+-1)
 19700  00246E  0012               	return	
 19701  002470                     __end_ofPL445:
 19702                           	opt stack 0
 19703  002470                     PL449:
 19704                           	opt stack 14
 19705  002470  6F10               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 19706  002472  0E36               	movlw	54
 19707  002474  2440               	addwf	_currentTCB,w,c
 19708  002476  0012               	return	
 19709  002478                     __end_ofPL449:
 19710                           	opt stack 0
 19711  002478                     PL451:
 19712                           	opt stack 14
 19713  002478  0E06               	movlw	6
 19714  00247A  2440               	addwf	_currentTCB,w,c
 19715  00247C  0101               	movlb	1	; () banked
 19716  00247E  0012               	return	
 19717  002480                     __end_ofPL451:
 19718                           	opt stack 0
 19719  002480                     PL455:
 19720                           	opt stack 14
 19721  002480  C102  FFF5         	movff	??_TCP_FiniteStateMachine+2,tablat
 19722  002484  000D               	tblwt		*+
 19723  002486  C103  FFF5         	movff	??_TCP_FiniteStateMachine+3,tablat
 19724  00248A  000C               	tblwt		*
 19725  00248C  0012               	return	
 19726  00248E                     __end_ofPL455:
 19727                           	opt stack 0
 19728  00248E                     PL457:
 19729                           	opt stack 14
 19730  00248E  C100  FFF5         	movff	??_TCP_FiniteStateMachine,tablat
 19731  002492  000D               	tblwt		*+
 19732  002494  C101  FFF5         	movff	??_TCP_FiniteStateMachine+1,tablat
 19733  002498  000D               	tblwt		*+
 19734  00249A  0012               	return	
 19735  00249C                     __end_ofPL457:
 19736                           	opt stack 0
 19737  00249C                     PL459:
 19738                           	opt stack 14
 19739  00249C  C1D9  FFF5         	movff	_tcpHeader+8,tablat
 19740  0024A0  000D               	tblwt		*+
 19741  0024A2  C1DA  FFF5         	movff	_tcpHeader+9,tablat
 19742  0024A6  000D               	tblwt		*+
 19743  0024A8  C1DB  FFF5         	movff	_tcpHeader+10,tablat
 19744  0024AC  000D               	tblwt		*+
 19745  0024AE  C1DC  FFF5         	movff	_tcpHeader+11,tablat
 19746  0024B2  000C               	tblwt		*
 19747  0024B4  0012               	return	
 19748  0024B6                     __end_ofPL459:
 19749                           	opt stack 0
 19750  0024B6                     PL467:
 19751                           	opt stack 14
 19752  0024B6  0E02               	movlw	2
 19753  0024B8  6EF5               	movwf	tablat,c
 19754  0024BA  000D               	tblwt		*+
 19755  0024BC  6AF5               	clrf	tablat,c
 19756  0024BE  000C               	tblwt		*
 19757  0024C0  0C02               	retlw	2
 19758  0024C2                     __end_ofPL467:
 19759                           	opt stack 0
 19760  0024C2                     PL471:
 19761                           	opt stack 14
 19762  0024C2  C040  F09F         	movff	_currentTCB,TCP_Snd@tcbPtr
 19763  0024C6  C041  F0A0         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 19764  0024CA  0012               	return	
 19765  0024CC                     __end_ofPL471:
 19766                           	opt stack 0
 19767  0024CC                     PL473:
 19768                           	opt stack 19
 19769  0024CC  6AEE               	clrf	postinc0,c
 19770  0024CE  6AEE               	clrf	postinc0,c
 19771  0024D0  6AEE               	clrf	postinc0,c
 19772  0024D2  6AEF               	clrf	indf0,c
 19773  0024D4  0012               	return	
 19774  0024D6                     __end_ofPL473:
 19775                           	opt stack 0
 19776  0024D6                     PL477:
 19777                           	opt stack 14
 19778  0024D6  0E0C               	movlw	12
 19779  0024D8  2440               	addwf	_currentTCB,w,c
 19780  0024DA  0101               	movlb	1	; () banked
 19781  0024DC  0012               	return	
 19782  0024DE                     __end_ofPL477:
 19783                           	opt stack 0
 19784  0024DE                     PL479:
 19785                           	opt stack 14
 19786  0024DE  0E14               	movlw	20
 19787  0024E0  2440               	addwf	_currentTCB,w,c
 19788  0024E2  0101               	movlb	1	; () banked
 19789  0024E4  0012               	return	
 19790  0024E6                     __end_ofPL479:
 19791                           	opt stack 0
 19792  0024E6                     PL481:
 19793                           	opt stack 14
 19794  0024E6  C106  FFEE         	movff	??_TCP_FiniteStateMachine+6,postinc0
 19795  0024EA  C107  FFEE         	movff	??_TCP_FiniteStateMachine+7,postinc0
 19796  0024EE  C108  FFEE         	movff	??_TCP_FiniteStateMachine+8,postinc0
 19797  0024F2  C109  FFEF         	movff	??_TCP_FiniteStateMachine+9,indf0
 19798  0024F6  0012               	return	
 19799  0024F8                     __end_ofPL481:
 19800                           	opt stack 0
 19801  0024F8                     PL483:
 19802                           	opt stack 14
 19803  0024F8  C1D5  FFEE         	movff	_tcpHeader+4,postinc0
 19804  0024FC  C1D6  FFEE         	movff	_tcpHeader+5,postinc0
 19805  002500  C1D7  FFEE         	movff	_tcpHeader+6,postinc0
 19806  002504  C1D8  FFEF         	movff	_tcpHeader+7,indf0
 19807  002508  0012               	return	
 19808  00250A                     __end_ofPL483:
 19809                           	opt stack 0
 19810  00250A                     PL491:
 19811                           	opt stack 14
 19812  00250A  C100  FFEE         	movff	??_TCP_FiniteStateMachine,postinc0
 19813  00250E  C101  FFEE         	movff	??_TCP_FiniteStateMachine+1,postinc0
 19814  002512  C102  FFEE         	movff	??_TCP_FiniteStateMachine+2,postinc0
 19815  002516  C103  FFEF         	movff	??_TCP_FiniteStateMachine+3,indf0
 19816  00251A  0012               	return	
 19817  00251C                     __end_ofPL491:
 19818                           	opt stack 0
 19819  00251C                     PL499:
 19820                           	opt stack 14
 19821  00251C  C1D9  FFEE         	movff	_tcpHeader+8,postinc0
 19822  002520  C1DA  FFEE         	movff	_tcpHeader+9,postinc0
 19823  002524  C1DB  FFEE         	movff	_tcpHeader+10,postinc0
 19824  002528  C1DC  FFEF         	movff	_tcpHeader+11,indf0
 19825  00252C  0012               	return	
 19826  00252E                     __end_ofPL499:
 19827                           	opt stack 0
 19828  00252E                     PL507:
 19829                           	opt stack 14
 19830  00252E  C102  FFEE         	movff	??_TCP_FiniteStateMachine+2,postinc0
 19831  002532  C103  FFEF         	movff	??_TCP_FiniteStateMachine+3,indf0
 19832  002536  0012               	return	
 19833  002538                     __end_ofPL507:
 19834                           	opt stack 0
 19835  002538                     PL513:
 19836                           	opt stack 14
 19837  002538  0E18               	movlw	24
 19838  00253A  2440               	addwf	_currentTCB,w,c
 19839  00253C  0101               	movlb	1	; () banked
 19840  00253E  0012               	return	
 19841  002540                     __end_ofPL513:
 19842                           	opt stack 0
 19843  002540                     PL515:
 19844                           	opt stack 14
 19845  002540  0E02               	movlw	2
 19846  002542  2440               	addwf	_currentTCB,w,c
 19847  002544  0101               	movlb	1	; () banked
 19848  002546  0012               	return	
 19849  002548                     __end_ofPL515:
 19850                           	opt stack 0
 19851  002548                     PL519:
 19852                           	opt stack 14
 19853  002548  0E27               	movlw	39
 19854  00254A  2440               	addwf	_currentTCB,w,c
 19855  00254C  0101               	movlb	1	; () banked
 19856  00254E  0012               	return	
 19857  002550                     __end_ofPL519:
 19858                           	opt stack 0
 19859  002550                     PL545:
 19860                           	opt stack 14
 19861  002550  C046  FFF5         	movff	_tcpMss,tablat
 19862  002554  000D               	tblwt		*+
 19863  002556  C047  FFF5         	movff	_tcpMss+1,tablat
 19864  00255A  000C               	tblwt		*
 19865  00255C  0012               	return	
 19866  00255E                     __end_ofPL545:
 19867                           	opt stack 0
 19868  00255E                     PL617:
 19869                           	opt stack 14
 19870  00255E  0E02               	movlw	2
 19871  002560  6EEE               	movwf	postinc0,c
 19872  002562  6AEF               	clrf	indf0,c
 19873  002564  0C02               	retlw	2
 19874  002566                     __end_ofPL617:
 19875                           	opt stack 0
 19876  002566                     PL623:
 19877                           	opt stack 14
 19878  002566  C040  FFF6         	movff	_currentTCB,tblptrl
 19879  00256A  C041  FFF7         	movff	_currentTCB+1,tblptrh
 19880  00256E  0E00               	movlw	low (__smallconst shr (0+16))
 19881  002570  6EF8               	movwf	tblptru,c
 19882  002572  0E0F               	movlw	(high __ramtop+-1)
 19883  002574  0012               	return	
 19884  002576                     __end_ofPL623:
 19885                           	opt stack 0
 19886  002576                     PL639:
 19887                           	opt stack 14
 19888  002576  C046  FFEE         	movff	_tcpMss,postinc0
 19889  00257A  C047  FFEF         	movff	_tcpMss+1,indf0
 19890  00257E  0012               	return	
 19891  002580                     __end_ofPL639:
 19892                           	opt stack 0
 19893  002580                     PL641:
 19894                           	opt stack 14
 19895  002580  0009               	tblrd		*+
 19896  002582  CFF5 F100          	movff	tablat,??_TCP_FiniteStateMachine
 19897  002586  0009               	tblrd		*+
 19898  002588  CFF5 F101          	movff	tablat,??_TCP_FiniteStateMachine+1
 19899  00258C  0012               	return	
 19900  00258E                     __end_ofPL641:
 19901                           	opt stack 0
 19902  00258E                     PL693:
 19903                           	opt stack 14
 19904  00258E  CFEE F100          	movff	postinc0,??_TCP_FiniteStateMachine
 19905  002592  CFEE F101          	movff	postinc0,??_TCP_FiniteStateMachine+1
 19906  002596  0012               	return	
 19907  002598                     __end_ofPL693:
 19908                           	opt stack 0
 19909                           tosu	equ	0xFFF
 19910                           tosh	equ	0xFFE
 19911                           tosl	equ	0xFFD
 19912                           pclath	equ	0xFFA
 19913                           tblptru	equ	0xFF8
 19914                           tblptrh	equ	0xFF7
 19915                           tblptrl	equ	0xFF6
 19916                           tablat	equ	0xFF5
 19917                           prodh	equ	0xFF4
 19918                           prodl	equ	0xFF3
 19919                           intcon	equ	0xFF2
 19920                           indf0	equ	0xFEF
 19921                           postinc0	equ	0xFEE
 19922                           fsr0h	equ	0xFEA
 19923                           fsr0l	equ	0xFE9
 19924                           wreg	equ	0xFE8
 19925                           postinc1	equ	0xFE6
 19926                           postdec1	equ	0xFE5
 19927                           plusw1	equ	0xFE3
 19928                           fsr1h	equ	0xFE2
 19929                           fsr1l	equ	0xFE1
 19930                           bsr	equ	0xFE0
 19931                           indf2	equ	0xFDF
 19932                           postinc2	equ	0xFDE
 19933                           postdec2	equ	0xFDD
 19934                           plusw2	equ	0xFDB
 19935                           fsr2h	equ	0xFDA
 19936                           fsr2l	equ	0xFD9
 19937                           status	equ	0xFD8
 19938                           
 19939 ;; *************** function _TCP_PayloadSave *****************
 19940 ;; Defined at:
 19941 ;;		line 310 in file "../../TCPIP Library/source/tcpv4.c"
 19942 ;; Parameters:    Size  Location     Type
 19943 ;;  len             2  142[BANK0 ] unsigned int 
 19944 ;; Auto vars:     Size  Location     Type
 19945 ;;  buffer_size     2  157[BANK0 ] unsigned int 
 19946 ;;  ret             1    0        unsigned char 
 19947 ;; Return value:  Size  Location     Type
 19948 ;;                  1    wreg      unsigned char 
 19949 ;; Registers used:
 19950 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19951 ;; Tracked objects:
 19952 ;;		On entry : 0/1
 19953 ;;		On exit  : 0/0
 19954 ;;		Unchanged: 0/0
 19955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19956 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19957 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19958 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19959 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19960 ;;Total ram usage:       17 bytes
 19961 ;; Hardware stack levels used:    1
 19962 ;; Hardware stack levels required when called:   13
 19963 ;; This function calls:
 19964 ;;		_ETH_ReadBlock
 19965 ;;		_TCP_Snd
 19966 ;; This function is called by:
 19967 ;;		_TCP_FiniteStateMachine
 19968 ;; This function uses a non-reentrant model
 19969 ;;
 19970                           
 19971                           	psect	text83
 19972  00427C                     __ptext83:
 19973                           	opt stack 0
 19974  00427C                     _TCP_PayloadSave:
 19975                           	opt stack 14
 19976                           
 19977                           ;tcpv4.c: 313: uint16_t buffer_size;
 19978                           ;tcpv4.c: 316: if (currentTCB->rxBufState == RX_BUFF_IN_USE)
 19979                           
 19980                           ; BSR set to: 1
 19981                           ;incstack = 0
 19982  00427C  0E22               	movlw	34
 19983  00427E  D8D6               	call	PL413	;call to abstracted procedure
 19984  004280  64F7               	cpfsgt	tblptrh,c
 19985  004282  D003               	bra	u12757
 19986  004284  0008               	tblrd		*
 19987  004286  50F5               	movf	tablat,w,c
 19988  004288  D003               	bra	u12750
 19989  00428A                     u12757:
 19990  00428A  EC86  F011         	call	PL389	;call to abstracted procedure
 19991  00428E  50EF               	movf	indf0,w,c
 19992  004290                     u12750:
 19993  004290  06E8               	decf	wreg,f,c
 19994  004292  A4D8               	btfss	status,2,c
 19995  004294  0012               	return	
 19996                           
 19997                           ;tcpv4.c: 317: {
 19998                           ;tcpv4.c: 319: if (currentTCB->localWnd >= len)
 19999  004296  0E1A               	movlw	26
 20000  004298  D8C9               	call	PL413	;call to abstracted procedure
 20001  00429A  64F7               	cpfsgt	tblptrh,c
 20002  00429C  D002               	bra	u12777
 20003  00429E  D8D4               	call	PL543	;call to abstracted procedure
 20004  0042A0  D003               	bra	u12770
 20005  0042A2                     u12777:
 20006  0042A2  EC86  F011         	call	PL389	;call to abstracted procedure
 20007  0042A6  D8E4               	call	PL637	;call to abstracted procedure
 20008  0042A8                     u12770:
 20009  0042A8  0100               	movlb	0	; () banked
 20010  0042AA  51EE               	movf	TCP_PayloadSave@len& (0+255),w,b
 20011  0042AC  5DF2               	subwf	(??_TCP_PayloadSave+2)& (0+255),w,b
 20012  0042AE  51EF               	movf	(TCP_PayloadSave@len+1)& (0+255),w,b
 20013  0042B0  59F3               	subwfb	(??_TCP_PayloadSave+3)& (0+255),w,b
 20014  0042B2  E305               	bnc	l8667
 20015                           
 20016                           ; BSR set to: 0
 20017                           ;tcpv4.c: 320: {
 20018                           ;tcpv4.c: 321: buffer_size = len;
 20019  0042B4  C0EE  F0FD         	movff	TCP_PayloadSave@len,TCP_PayloadSave@buffer_size
 20020  0042B8  C0EF  F0FE         	movff	TCP_PayloadSave@len+1,TCP_PayloadSave@buffer_size+1
 20021                           
 20022                           ;tcpv4.c: 322: }else
 20023  0042BC  D01C               	goto	l8669
 20024  0042BE                     l8667:
 20025                           
 20026                           ; BSR set to: 0
 20027                           ;tcpv4.c: 323: {
 20028                           ;tcpv4.c: 324: buffer_size = currentTCB->localWnd;
 20029  0042BE  0E1A               	movlw	26
 20030  0042C0  2440               	addwf	_currentTCB,w,c
 20031  0042C2  6FF0               	movwf	??_TCP_PayloadSave& (0+255),b
 20032  0042C4  0E00               	movlw	0
 20033  0042C6  2041               	addwfc	_currentTCB+1,w,c
 20034  0042C8  6FF1               	movwf	(??_TCP_PayloadSave+1)& (0+255),b
 20035  0042CA  C0F0  FFF6         	movff	??_TCP_PayloadSave,tblptrl
 20036  0042CE  C0F1  FFF7         	movff	??_TCP_PayloadSave+1,tblptrh
 20037  0042D2  0E00               	movlw	low (__smallconst shr (0+16))
 20038  0042D4  6EF8               	movwf	tblptru,c
 20039  0042D6  0E0F               	movlw	(high __ramtop+-1)
 20040  0042D8  64F7               	cpfsgt	tblptrh,c
 20041  0042DA  D007               	bra	u12797
 20042  0042DC  0009               	tblrd		*+
 20043  0042DE  CFF5 F0FD          	movff	tablat,TCP_PayloadSave@buffer_size
 20044  0042E2  0009               	tblrd		*+
 20045  0042E4  CFF5 F0FE          	movff	tablat,TCP_PayloadSave@buffer_size+1
 20046  0042E8  D006               	bra	u12790
 20047  0042EA                     u12797:
 20048  0042EA  EC86  F011         	call	PL389	;call to abstracted procedure
 20049  0042EE  CFEE F0FD          	movff	postinc0,TCP_PayloadSave@buffer_size
 20050  0042F2  CFEE F0FE          	movff	postinc0,TCP_PayloadSave@buffer_size+1
 20051  0042F6                     u12790:
 20052  0042F6                     l8669:
 20053                           
 20054                           ;tcpv4.c: 325: }
 20055                           ;tcpv4.c: 327: ETH_ReadBlock(currentTCB->rxBufferPtr, buffer_size);
 20056  0042F6  0E20               	movlw	32
 20057  0042F8  D899               	call	PL413	;call to abstracted procedure
 20058  0042FA  64F7               	cpfsgt	tblptrh,c
 20059  0042FC  D007               	bra	u12807
 20060  0042FE  0009               	tblrd		*+
 20061  004300  CFF5 F017          	movff	tablat,ETH_ReadBlock@buffer
 20062  004304  0009               	tblrd		*+
 20063  004306  CFF5 F018          	movff	tablat,ETH_ReadBlock@buffer+1
 20064  00430A  D006               	bra	u12800
 20065  00430C                     u12807:
 20066  00430C  EC86  F011         	call	PL389	;call to abstracted procedure
 20067  004310  CFEE F017          	movff	postinc0,ETH_ReadBlock@buffer
 20068  004314  CFEE F018          	movff	postinc0,ETH_ReadBlock@buffer+1
 20069  004318                     u12800:
 20070  004318  C0FD  F019         	movff	TCP_PayloadSave@buffer_size,ETH_ReadBlock@length
 20071  00431C  C0FE  F01A         	movff	TCP_PayloadSave@buffer_size+1,ETH_ReadBlock@length+1
 20072  004320  ECC9  F02D         	call	_ETH_ReadBlock	;wreg free
 20073                           
 20074                           ; BSR set to: 1
 20075                           ;tcpv4.c: 328: currentTCB->rxBufferPtr = currentTCB->rxBufferPtr + buffer_size;
 20076  004324  0E20               	movlw	32
 20077  004326  D882               	call	PL413	;call to abstracted procedure
 20078  004328  64F7               	cpfsgt	tblptrh,c
 20079  00432A  D002               	bra	u12817
 20080  00432C  D88D               	call	PL543	;call to abstracted procedure
 20081  00432E  D003               	bra	u12810
 20082  004330                     u12817:
 20083  004330  EC86  F011         	call	PL389	;call to abstracted procedure
 20084  004334  D89D               	call	PL637	;call to abstracted procedure
 20085  004336                     u12810:
 20086  004336  0100               	movlb	0	; () banked
 20087  004338  51FD               	movf	TCP_PayloadSave@buffer_size& (0+255),w,b
 20088  00433A  27F2               	addwf	(??_TCP_PayloadSave+2)& (0+255),f,b
 20089  00433C  51FE               	movf	(TCP_PayloadSave@buffer_size+1)& (0+255),w,b
 20090  00433E  23F3               	addwfc	(??_TCP_PayloadSave+3)& (0+255),f,b
 20091  004340  0E20               	movlw	32
 20092  004342  D889               	call	PL549	;call to abstracted procedure
 20093  004344  64F7               	cpfsgt	tblptrh,c
 20094  004346  D002               	bra	u12827
 20095  004348  D898               	call	PL649	;call to abstracted procedure
 20096  00434A  D003               	bra	u12820
 20097  00434C                     u12827:
 20098  00434C  EC86  F011         	call	PL389	;call to abstracted procedure
 20099  004350  D89B               	call	PL691	;call to abstracted procedure
 20100  004352                     u12820:
 20101                           
 20102                           ;tcpv4.c: 331: currentTCB->localWnd = currentTCB->localWnd - buffer_size;
 20103  004352  0E1A               	movlw	26
 20104  004354  D86B               	call	PL413	;call to abstracted procedure
 20105  004356  64F7               	cpfsgt	tblptrh,c
 20106  004358  D002               	bra	u12837
 20107  00435A  D876               	call	PL543	;call to abstracted procedure
 20108  00435C  D003               	bra	u12830
 20109  00435E                     u12837:
 20110  00435E  EC86  F011         	call	PL389	;call to abstracted procedure
 20111  004362  D886               	call	PL637	;call to abstracted procedure
 20112  004364                     u12830:
 20113  004364  0100               	movlb	0	; () banked
 20114  004366  51FD               	movf	TCP_PayloadSave@buffer_size& (0+255),w,b
 20115  004368  5FF2               	subwf	(??_TCP_PayloadSave+2)& (0+255),f,b
 20116  00436A  51FE               	movf	(TCP_PayloadSave@buffer_size+1)& (0+255),w,b
 20117  00436C  5BF3               	subwfb	(??_TCP_PayloadSave+3)& (0+255),f,b
 20118  00436E  0E1A               	movlw	26
 20119  004370  D872               	call	PL549	;call to abstracted procedure
 20120  004372  64F7               	cpfsgt	tblptrh,c
 20121  004374  D002               	bra	u12847
 20122  004376  D881               	call	PL649	;call to abstracted procedure
 20123  004378  D003               	bra	u12840
 20124  00437A                     u12847:
 20125  00437A  EC86  F011         	call	PL389	;call to abstracted procedure
 20126  00437E  D884               	call	PL691	;call to abstracted procedure
 20127  004380                     u12840:
 20128                           
 20129                           ;tcpv4.c: 332: currentTCB->remoteAck = currentTCB->remoteSeqno + buffer_size;
 20130  004380  0E08               	movlw	8
 20131  004382  D854               	call	PL413	;call to abstracted procedure
 20132  004384  64F7               	cpfsgt	tblptrh,c
 20133  004386  D008               	bra	u12857
 20134  004388  D85F               	call	PL543	;call to abstracted procedure
 20135  00438A  0009               	tblrd		*+
 20136  00438C  CFF5 F0F4          	movff	tablat,??_TCP_PayloadSave+4
 20137  004390  0009               	tblrd		*+
 20138  004392  CFF5 F0F5          	movff	tablat,??_TCP_PayloadSave+5
 20139  004396  D007               	bra	u12850
 20140  004398                     u12857:
 20141  004398  EC86  F011         	call	PL389	;call to abstracted procedure
 20142  00439C  D869               	call	PL637	;call to abstracted procedure
 20143  00439E  CFEE F0F4          	movff	postinc0,??_TCP_PayloadSave+4
 20144  0043A2  CFEE F0F5          	movff	postinc0,??_TCP_PayloadSave+5
 20145  0043A6                     u12850:
 20146  0043A6  0100               	movlb	0	; () banked
 20147  0043A8  51FD               	movf	TCP_PayloadSave@buffer_size& (0+255),w,b
 20148  0043AA  25F2               	addwf	(??_TCP_PayloadSave+2)& (0+255),w,b
 20149  0043AC  6FF6               	movwf	(??_TCP_PayloadSave+6)& (0+255),b
 20150  0043AE  51FE               	movf	(TCP_PayloadSave@buffer_size+1)& (0+255),w,b
 20151  0043B0  21F3               	addwfc	(??_TCP_PayloadSave+3)& (0+255),w,b
 20152  0043B2  6FF7               	movwf	(??_TCP_PayloadSave+7)& (0+255),b
 20153  0043B4  0E00               	movlw	0
 20154  0043B6  21F4               	addwfc	(??_TCP_PayloadSave+4)& (0+255),w,b
 20155  0043B8  6FF8               	movwf	(??_TCP_PayloadSave+8)& (0+255),b
 20156  0043BA  0E00               	movlw	0
 20157  0043BC  21F5               	addwfc	(??_TCP_PayloadSave+5)& (0+255),w,b
 20158  0043BE  6FF9               	movwf	(??_TCP_PayloadSave+9)& (0+255),b
 20159  0043C0  0E0C               	movlw	12
 20160  0043C2  2440               	addwf	_currentTCB,w,c
 20161  0043C4  6FFA               	movwf	(??_TCP_PayloadSave+10)& (0+255),b
 20162  0043C6  0E00               	movlw	0
 20163  0043C8  2041               	addwfc	_currentTCB+1,w,c
 20164  0043CA  6FFB               	movwf	(??_TCP_PayloadSave+11)& (0+255),b
 20165  0043CC  C0FA  FFF6         	movff	??_TCP_PayloadSave+10,tblptrl
 20166  0043D0  C0FB  FFF7         	movff	??_TCP_PayloadSave+11,tblptrh
 20167  0043D4  0E00               	movlw	low (__smallconst shr (0+16))
 20168  0043D6  6EF8               	movwf	tblptru,c
 20169  0043D8  0E0F               	movlw	(high __ramtop+-1)
 20170  0043DA  64F7               	cpfsgt	tblptrh,c
 20171  0043DC  D00D               	bra	u12867
 20172  0043DE  C0F6  FFF5         	movff	??_TCP_PayloadSave+6,tablat
 20173  0043E2  000D               	tblwt		*+
 20174  0043E4  C0F7  FFF5         	movff	??_TCP_PayloadSave+7,tablat
 20175  0043E8  000D               	tblwt		*+
 20176  0043EA  C0F8  FFF5         	movff	??_TCP_PayloadSave+8,tablat
 20177  0043EE  000D               	tblwt		*+
 20178  0043F0  C0F9  FFF5         	movff	??_TCP_PayloadSave+9,tablat
 20179  0043F4  000C               	tblwt		*
 20180  0043F6  D00A               	bra	u12860
 20181  0043F8                     u12867:
 20182  0043F8  EC86  F011         	call	PL389	;call to abstracted procedure
 20183  0043FC  C0F6  FFEE         	movff	??_TCP_PayloadSave+6,postinc0
 20184  004400  C0F7  FFEE         	movff	??_TCP_PayloadSave+7,postinc0
 20185  004404  C0F8  FFEE         	movff	??_TCP_PayloadSave+8,postinc0
 20186  004408  C0F9  FFEF         	movff	??_TCP_PayloadSave+9,indf0
 20187  00440C                     u12860:
 20188                           
 20189                           ;tcpv4.c: 335: currentTCB->flags = 0x10U;
 20190  00440C  0E35               	movlw	53
 20191  00440E  D80E               	call	PL413	;call to abstracted procedure
 20192  004410  64F7               	cpfsgt	tblptrh,c
 20193  004412  D004               	bra	u12877
 20194  004414  0E10               	movlw	16
 20195  004416  6EF5               	movwf	tablat,c
 20196  004418  000C               	tblwt		*
 20197  00441A  D004               	bra	u12870
 20198  00441C                     u12877:
 20199  00441C  EC86  F011         	call	PL389	;call to abstracted procedure
 20200  004420  0E10               	movlw	16
 20201  004422  6EEF               	movwf	indf0,c
 20202  004424                     u12870:
 20203                           
 20204                           ;tcpv4.c: 336: TCP_Snd(currentTCB);
 20205  004424  EC61  F012         	call	PL471	;call to abstracted procedure
 20206  004428  EFCC  F012         	goto	_TCP_Snd	;wreg free
 20207  00442C                     __end_of_TCP_PayloadSave:
 20208                           	opt stack 0
 20209  00442C                     PL413:
 20210                           	opt stack 14
 20211  00442C  2440               	addwf	_currentTCB,w,c
 20212  00442E  0100               	movlb	0	; () banked
 20213  004430  6FF0               	movwf	??_TCP_PayloadSave& (0+255),b
 20214  004432  0E00               	movlw	0
 20215  004434  2041               	addwfc	_currentTCB+1,w,c
 20216  004436  6FF1               	movwf	(??_TCP_PayloadSave+1)& (0+255),b
 20217  004438  C0F0  FFF6         	movff	??_TCP_PayloadSave,tblptrl
 20218  00443C  C0F1  FFF7         	movff	??_TCP_PayloadSave+1,tblptrh
 20219  004440  0E00               	movlw	low (__smallconst shr (0+16))
 20220  004442  6EF8               	movwf	tblptru,c
 20221  004444  0E0F               	movlw	(high __ramtop+-1)
 20222  004446  0012               	return	
 20223  004448                     __end_ofPL413:
 20224                           	opt stack 0
 20225  004448                     PL543:
 20226                           	opt stack 14
 20227  004448  0009               	tblrd		*+
 20228  00444A  CFF5 F0F2          	movff	tablat,??_TCP_PayloadSave+2
 20229  00444E  0009               	tblrd		*+
 20230  004450  CFF5 F0F3          	movff	tablat,??_TCP_PayloadSave+3
 20231  004454  0012               	return	
 20232  004456                     __end_ofPL543:
 20233                           	opt stack 0
 20234  004456                     PL549:
 20235                           	opt stack 14
 20236  004456  2440               	addwf	_currentTCB,w,c
 20237  004458  6FF4               	movwf	(??_TCP_PayloadSave+4)& (0+255),b
 20238  00445A  0E00               	movlw	0
 20239  00445C  2041               	addwfc	_currentTCB+1,w,c
 20240  00445E  6FF5               	movwf	(??_TCP_PayloadSave+5)& (0+255),b
 20241  004460  C0F4  FFF6         	movff	??_TCP_PayloadSave+4,tblptrl
 20242  004464  C0F5  FFF7         	movff	??_TCP_PayloadSave+5,tblptrh
 20243  004468  0E00               	movlw	low (__smallconst shr (0+16))
 20244  00446A  6EF8               	movwf	tblptru,c
 20245  00446C  0E0F               	movlw	(high __ramtop+-1)
 20246  00446E  0012               	return	
 20247  004470                     __end_ofPL549:
 20248                           	opt stack 0
 20249  004470                     PL637:
 20250                           	opt stack 14
 20251  004470  CFEE F0F2          	movff	postinc0,??_TCP_PayloadSave+2
 20252  004474  CFEE F0F3          	movff	postinc0,??_TCP_PayloadSave+3
 20253  004478  0012               	return	
 20254  00447A                     __end_ofPL637:
 20255                           	opt stack 0
 20256  00447A                     PL649:
 20257                           	opt stack 14
 20258  00447A  C0F2  FFF5         	movff	??_TCP_PayloadSave+2,tablat
 20259  00447E  000D               	tblwt		*+
 20260  004480  C0F3  FFF5         	movff	??_TCP_PayloadSave+3,tablat
 20261  004484  000C               	tblwt		*
 20262  004486  0012               	return	
 20263  004488                     __end_ofPL649:
 20264                           	opt stack 0
 20265  004488                     PL691:
 20266                           	opt stack 14
 20267  004488  C0F2  FFEE         	movff	??_TCP_PayloadSave+2,postinc0
 20268  00448C  C0F3  FFEF         	movff	??_TCP_PayloadSave+3,indf0
 20269  004490  0012               	return	
 20270  004492                     __end_ofPL691:
 20271                           	opt stack 0
 20272                           tosu	equ	0xFFF
 20273                           tosh	equ	0xFFE
 20274                           tosl	equ	0xFFD
 20275                           pclath	equ	0xFFA
 20276                           tblptru	equ	0xFF8
 20277                           tblptrh	equ	0xFF7
 20278                           tblptrl	equ	0xFF6
 20279                           tablat	equ	0xFF5
 20280                           prodh	equ	0xFF4
 20281                           prodl	equ	0xFF3
 20282                           intcon	equ	0xFF2
 20283                           indf0	equ	0xFEF
 20284                           postinc0	equ	0xFEE
 20285                           fsr0h	equ	0xFEA
 20286                           fsr0l	equ	0xFE9
 20287                           wreg	equ	0xFE8
 20288                           postinc1	equ	0xFE6
 20289                           postdec1	equ	0xFE5
 20290                           plusw1	equ	0xFE3
 20291                           fsr1h	equ	0xFE2
 20292                           fsr1l	equ	0xFE1
 20293                           bsr	equ	0xFE0
 20294                           indf2	equ	0xFDF
 20295                           postinc2	equ	0xFDE
 20296                           postdec2	equ	0xFDD
 20297                           plusw2	equ	0xFDB
 20298                           fsr2h	equ	0xFDA
 20299                           fsr2l	equ	0xFD9
 20300                           status	equ	0xFD8
 20301                           
 20302 ;; *************** function _TCP_Snd *****************
 20303 ;; Defined at:
 20304 ;;		line 200 in file "../../TCPIP Library/source/tcpv4.c"
 20305 ;; Parameters:    Size  Location     Type
 20306 ;;  tcbPtr          2   63[BANK0 ] PTR struct .
 20307 ;;		 -> ?_sprintf(2), ?_printf(2), main@str(32), STR_8(13), 
 20308 ;;		 -> STR_7(17), DEMO_TCP_Client@txdataPort60(80), DEMO_TCP_Client@strTmp(17), DEMO_TCP_Client@rxdataPort60(50), 
 20309 ;;		 -> DEMO_TCP_Client@port60TCB(55), Network_Read@debug_str(80), STR_1(15), NULL(0), 
 20310 ;; Auto vars:     Size  Location     Type
 20311 ;;  txHeader       20  122[BANK0 ] struct .
 20312 ;;  tcpDataLengt    2  120[BANK0 ] unsigned int 
 20313 ;;  payloadLengt    2  117[BANK0 ] unsigned int 
 20314 ;;  cksm            2  115[BANK0 ] unsigned int 
 20315 ;;  data            2  113[BANK0 ] PTR unsigned char 
 20316 ;;		 -> ?_sprintf(2), ?_printf(2), main@str(32), STR_8(13), 
 20317 ;;		 -> STR_7(17), DEMO_TCP_Client@txdataPort60(80), DEMO_TCP_Client@strTmp(17), DEMO_TCP_Client@rxdataPort60(50), 
 20318 ;;		 -> Network_Read@debug_str(80), STR_1(15), NULL(0), 
 20319 ;;  ret             1  119[BANK0 ] unsigned char 
 20320 ;; Return value:  Size  Location     Type
 20321 ;;                  1    wreg      unsigned char 
 20322 ;; Registers used:
 20323 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20324 ;; Tracked objects:
 20325 ;;		On entry : 0/0
 20326 ;;		On exit  : F/0
 20327 ;;		Unchanged: 0/0
 20328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20329 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20330 ;;      Locals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20331 ;;      Temps:          0      48       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20332 ;;      Totals:         0      79       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20333 ;;Total ram usage:       79 bytes
 20334 ;; Hardware stack levels used:    1
 20335 ;; Hardware stack levels required when called:   12
 20336 ;; This function calls:
 20337 ;;		_ETH_Insert
 20338 ;;		_ETH_TxComputeChecksum
 20339 ;;		_ETH_WriteBlock
 20340 ;;		_IPV4_Send
 20341 ;;		_IPv4_Start
 20342 ;; This function is called by:
 20343 ;;		_TCP_PayloadSave
 20344 ;;		_TCP_FiniteStateMachine
 20345 ;;		_TCP_Send
 20346 ;; This function uses a non-reentrant model
 20347 ;;
 20348                           
 20349                           	psect	text84
 20350  002598                     __ptext84:
 20351                           	opt stack 0
 20352  002598                     _TCP_Snd:
 20353                           	opt stack 0
 20354                           
 20355                           ;tcpv4.c: 203: tcpHeader_t txHeader;
 20356                           ;tcpv4.c: 204: uint16_t payloadLength;
 20357                           ;tcpv4.c: 205: uint16_t cksm;
 20358                           ;tcpv4.c: 206: uint16_t tcpDataLength;
 20359                           ;tcpv4.c: 207: uint8_t *data;
 20360                           ;tcpv4.c: 209: txHeader.sourcePort = ((((uint16_t)tcbPtr->localPort & (uint16_t)0xFF00) 
      +                          >> 8) | (((uint16_t)tcbPtr->localPort & (uint16_t)0x00FF) << 8));
 20361                           
 20362                           ;incstack = 0
 20363  002598  DB4F               	call	PL625	;call to abstracted procedure
 20364  00259A  64F7               	cpfsgt	tblptrh,c
 20365  00259C  D007               	bra	u11957
 20366  00259E  0009               	tblrd		*+
 20367  0025A0  CFF5 F0A1          	movff	tablat,??_TCP_Snd
 20368  0025A4  0009               	tblrd		*+
 20369  0025A6  CFF5 F0A2          	movff	tablat,??_TCP_Snd+1
 20370  0025AA  D006               	bra	u11950
 20371  0025AC                     u11957:
 20372  0025AC  EC86  F011         	call	PL389	;call to abstracted procedure
 20373  0025B0  CFEE F0A1          	movff	postinc0,??_TCP_Snd
 20374  0025B4  CFEE F0A2          	movff	postinc0,??_TCP_Snd+1
 20375  0025B8                     u11950:
 20376  0025B8  0100               	movlb	0	; () banked
 20377  0025BA  51A1               	movf	??_TCP_Snd& (0+255),w,b
 20378  0025BC  6FA4               	movwf	(??_TCP_Snd+3)& (0+255),b
 20379  0025BE  6BA3               	clrf	(??_TCP_Snd+2)& (0+255),b
 20380  0025C0  DB3B               	call	PL625	;call to abstracted procedure
 20381  0025C2  64F7               	cpfsgt	tblptrh,c
 20382  0025C4  D002               	bra	u11967
 20383  0025C6  DA8C               	call	PL527	;call to abstracted procedure
 20384  0025C8  D003               	bra	u11960
 20385  0025CA                     u11967:
 20386  0025CA  EC86  F011         	call	PL389	;call to abstracted procedure
 20387  0025CE  DB3C               	call	PL631	;call to abstracted procedure
 20388  0025D0                     u11960:
 20389  0025D0  C0A6  F0A5         	movff	??_TCP_Snd+5,??_TCP_Snd+4
 20390  0025D4  0100               	movlb	0	; () banked
 20391  0025D6  6BA6               	clrf	(??_TCP_Snd+5)& (0+255),b
 20392  0025D8  6BA6               	clrf	(??_TCP_Snd+5)& (0+255),b
 20393  0025DA  51A3               	movf	(??_TCP_Snd+2)& (0+255),w,b
 20394  0025DC  11A5               	iorwf	(??_TCP_Snd+4)& (0+255),w,b
 20395  0025DE  6FDA               	movwf	TCP_Snd@txHeader& (0+255),b
 20396  0025E0  51A4               	movf	(??_TCP_Snd+3)& (0+255),w,b
 20397  0025E2  11A6               	iorwf	(??_TCP_Snd+5)& (0+255),w,b
 20398  0025E4  6FDB               	movwf	(TCP_Snd@txHeader+1)& (0+255),b
 20399                           
 20400                           ;tcpv4.c: 210: txHeader.destPort = ((((uint16_t)tcbPtr->destPort & (uint16_t)0xFF00) >> 
      +                          8) | (((uint16_t)tcbPtr->destPort & (uint16_t)0x00FF) << 8));
 20401  0025E6  0E06               	movlw	6
 20402  0025E8  DA2B               	call	PL391	;call to abstracted procedure
 20403  0025EA  64F7               	cpfsgt	tblptrh,c
 20404  0025EC  D002               	bra	u11977
 20405  0025EE  DA5F               	call	PL447	;call to abstracted procedure
 20406  0025F0  D003               	bra	u11970
 20407  0025F2                     u11977:
 20408  0025F2  EC86  F011         	call	PL389	;call to abstracted procedure
 20409  0025F6  DA6F               	call	PL503	;call to abstracted procedure
 20410  0025F8                     u11970:
 20411  0025F8  DB4D               	call	PL701	;call to abstracted procedure
 20412  0025FA  0E06               	movlw	6
 20413  0025FC  DAA1               	call	PL553	;call to abstracted procedure
 20414  0025FE  64F7               	cpfsgt	tblptrh,c
 20415  002600  D002               	bra	u11987
 20416  002602  DB36               	call	PL651	;call to abstracted procedure
 20417  002604  D003               	bra	u11980
 20418  002606                     u11987:
 20419  002606  EC86  F011         	call	PL389	;call to abstracted procedure
 20420  00260A  DB49               	call	PL707	;call to abstracted procedure
 20421  00260C                     u11980:
 20422  00260C  DB22               	call	PL633	;call to abstracted procedure
 20423  00260E  6FDC               	movwf	(TCP_Snd@txHeader+2)& (0+255),b
 20424  002610  51A6               	movf	(??_TCP_Snd+5)& (0+255),w,b
 20425  002612  11AA               	iorwf	(??_TCP_Snd+9)& (0+255),w,b
 20426  002614  6FDD               	movwf	(TCP_Snd@txHeader+3)& (0+255),b
 20427                           
 20428                           ;tcpv4.c: 212: txHeader.sequenceNumber = ((((uint32_t)tcbPtr->localSeqno&(uint32_t)0xff0
      +                          00000) >> 24) | (((uint32_t)tcbPtr->localSeqno&(uint32_t)0x00ff0000) >> 8) | (((uint32_t
      +                          )tcbPtr->localSeqno&(uint32_t)0x0000ff00) << 8) | (((uint32_t)tcbPtr->localSeqno&(uint32
      +                          _
 20429  002616  0E10               	movlw	16
 20430  002618  DA13               	call	PL391	;call to abstracted procedure
 20431  00261A  64F7               	cpfsgt	tblptrh,c
 20432  00261C  D003               	bra	u11997
 20433  00261E  DA47               	call	PL447	;call to abstracted procedure
 20434  002620  DA5F               	call	PL527	;call to abstracted procedure
 20435  002622  D004               	bra	u11990
 20436  002624                     u11997:
 20437  002624  EC86  F011         	call	PL389	;call to abstracted procedure
 20438  002628  DA56               	call	PL503	;call to abstracted procedure
 20439  00262A  DB0E               	call	PL631	;call to abstracted procedure
 20440  00262C                     u11990:
 20441  00262C  DAD7               	call	PL581	;call to abstracted procedure
 20442  00262E  0E10               	movlw	16
 20443  002630  DA45               	call	PL485	;call to abstracted procedure
 20444  002632  64F7               	cpfsgt	tblptrh,c
 20445  002634  D002               	bra	u12007
 20446  002636  DA9E               	call	PL557	;call to abstracted procedure
 20447  002638  D003               	bra	u12000
 20448  00263A                     u12007:
 20449  00263A  EC86  F011         	call	PL389	;call to abstracted procedure
 20450  00263E  DAE1               	call	PL611	;call to abstracted procedure
 20451  002640                     u12000:
 20452  002640  DA56               	call	PL531	;call to abstracted procedure
 20453  002642  0E10               	movlw	16
 20454  002644  DA8A               	call	PL555	;call to abstracted procedure
 20455  002646  64F7               	cpfsgt	tblptrh,c
 20456  002648  D002               	bra	u12017
 20457  00264A  DAA1               	call	PL559	;call to abstracted procedure
 20458  00264C  D003               	bra	u12010
 20459  00264E                     u12017:
 20460  00264E  EC86  F011         	call	PL389	;call to abstracted procedure
 20461  002652  DAE0               	call	PL613	;call to abstracted procedure
 20462  002654                     u12010:
 20463  002654  DA5A               	call	PL539	;call to abstracted procedure
 20464  002656  0E10               	movlw	16
 20465  002658  DAB4               	call	PL563	;call to abstracted procedure
 20466  00265A  64F7               	cpfsgt	tblptrh,c
 20467  00265C  D002               	bra	u12027
 20468  00265E  DAA4               	call	PL561	;call to abstracted procedure
 20469  002660  D003               	bra	u12020
 20470  002662                     u12027:
 20471  002662  EC86  F011         	call	PL389	;call to abstracted procedure
 20472  002666  DADF               	call	PL615	;call to abstracted procedure
 20473  002668                     u12020:
 20474  002668  D9F8               	call	PL439	;call to abstracted procedure
 20475  00266A  6FDE               	movwf	(TCP_Snd@txHeader+4)& (0+255),b
 20476  00266C  51A8               	movf	(??_TCP_Snd+7)& (0+255),w,b
 20477  00266E  11CE               	iorwf	(??_TCP_Snd+45)& (0+255),w,b
 20478  002670  6FDF               	movwf	(TCP_Snd@txHeader+5)& (0+255),b
 20479  002672  51A9               	movf	(??_TCP_Snd+8)& (0+255),w,b
 20480  002674  11CF               	iorwf	(??_TCP_Snd+46)& (0+255),w,b
 20481  002676  6FE0               	movwf	(TCP_Snd@txHeader+6)& (0+255),b
 20482  002678  51AA               	movf	(??_TCP_Snd+9)& (0+255),w,b
 20483  00267A  11D0               	iorwf	(??_TCP_Snd+47)& (0+255),w,b
 20484  00267C  6FE1               	movwf	(TCP_Snd@txHeader+7)& (0+255),b
 20485                           
 20486                           ;tcpv4.c: 214: txHeader.ackNumber = ((((uint32_t)tcbPtr->remoteAck&(uint32_t)0xff000000)
      +                           >> 24) | (((uint32_t)tcbPtr->remoteAck&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)tcbPtr
      +                          ->remoteAck&(uint32_t)0x0000ff00) << 8) | (((uint32_t)tcbPtr->remoteAck&(uint32_t)0x0000
      +                          0
 20487  00267E  0E0C               	movlw	12
 20488  002680  D9DF               	call	PL391	;call to abstracted procedure
 20489  002682  64F7               	cpfsgt	tblptrh,c
 20490  002684  D003               	bra	u12047
 20491  002686  DA13               	call	PL447	;call to abstracted procedure
 20492  002688  DA2B               	call	PL527	;call to abstracted procedure
 20493  00268A  D004               	bra	u12040
 20494  00268C                     u12047:
 20495  00268C  EC86  F011         	call	PL389	;call to abstracted procedure
 20496  002690  DA22               	call	PL503	;call to abstracted procedure
 20497  002692  DADA               	call	PL631	;call to abstracted procedure
 20498  002694                     u12040:
 20499  002694  DAA3               	call	PL581	;call to abstracted procedure
 20500  002696  0E0C               	movlw	12
 20501  002698  DA11               	call	PL485	;call to abstracted procedure
 20502  00269A  64F7               	cpfsgt	tblptrh,c
 20503  00269C  D002               	bra	u12057
 20504  00269E  DA6A               	call	PL557	;call to abstracted procedure
 20505  0026A0  D003               	bra	u12050
 20506  0026A2                     u12057:
 20507  0026A2  EC86  F011         	call	PL389	;call to abstracted procedure
 20508  0026A6  DAAD               	call	PL611	;call to abstracted procedure
 20509  0026A8                     u12050:
 20510  0026A8  DA22               	call	PL531	;call to abstracted procedure
 20511  0026AA  0E0C               	movlw	12
 20512  0026AC  DA56               	call	PL555	;call to abstracted procedure
 20513  0026AE  64F7               	cpfsgt	tblptrh,c
 20514  0026B0  D002               	bra	u12067
 20515  0026B2  DA6D               	call	PL559	;call to abstracted procedure
 20516  0026B4  D003               	bra	u12060
 20517  0026B6                     u12067:
 20518  0026B6  EC86  F011         	call	PL389	;call to abstracted procedure
 20519  0026BA  DAAC               	call	PL613	;call to abstracted procedure
 20520  0026BC                     u12060:
 20521  0026BC  DA26               	call	PL539	;call to abstracted procedure
 20522  0026BE  0E0C               	movlw	12
 20523  0026C0  DA80               	call	PL563	;call to abstracted procedure
 20524  0026C2  64F7               	cpfsgt	tblptrh,c
 20525  0026C4  D002               	bra	u12077
 20526  0026C6  DA70               	call	PL561	;call to abstracted procedure
 20527  0026C8  D003               	bra	u12070
 20528  0026CA                     u12077:
 20529  0026CA  EC86  F011         	call	PL389	;call to abstracted procedure
 20530  0026CE  DAAB               	call	PL615	;call to abstracted procedure
 20531  0026D0                     u12070:
 20532  0026D0  D9C4               	call	PL439	;call to abstracted procedure
 20533  0026D2  6FE2               	movwf	(TCP_Snd@txHeader+8)& (0+255),b
 20534  0026D4  51A8               	movf	(??_TCP_Snd+7)& (0+255),w,b
 20535  0026D6  11CE               	iorwf	(??_TCP_Snd+45)& (0+255),w,b
 20536  0026D8  6FE3               	movwf	(TCP_Snd@txHeader+9)& (0+255),b
 20537  0026DA  51A9               	movf	(??_TCP_Snd+8)& (0+255),w,b
 20538  0026DC  11CF               	iorwf	(??_TCP_Snd+46)& (0+255),w,b
 20539  0026DE  6FE4               	movwf	(TCP_Snd@txHeader+10)& (0+255),b
 20540  0026E0  51AA               	movf	(??_TCP_Snd+9)& (0+255),w,b
 20541  0026E2  11D0               	iorwf	(??_TCP_Snd+47)& (0+255),w,b
 20542  0026E4  6FE5               	movwf	(TCP_Snd@txHeader+11)& (0+255),b
 20543                           
 20544                           ; BSR set to: 0
 20545                           ;tcpv4.c: 216: txHeader.ns = 0;
 20546  0026E6  91E6               	bcf	(TCP_Snd@txHeader+12)& (0+255),0,b
 20547                           
 20548                           ; BSR set to: 0
 20549                           ;tcpv4.c: 217: txHeader.reserved = 0;
 20550  0026E8  0EF1               	movlw	-15
 20551  0026EA  17E6               	andwf	(TCP_Snd@txHeader+12)& (0+255),f,b
 20552                           
 20553                           ; BSR set to: 0
 20554                           ;tcpv4.c: 218: txHeader.dataOffset = 5;
 20555  0026EC  51E6               	movf	(TCP_Snd@txHeader+12)& (0+255),w,b
 20556  0026EE  0B0F               	andlw	-241
 20557  0026F0  0950               	iorlw	80
 20558  0026F2  6FE6               	movwf	(TCP_Snd@txHeader+12)& (0+255),b
 20559                           
 20560                           ;tcpv4.c: 219: txHeader.windowSize = ((((uint16_t)tcbPtr->localWnd & (uint16_t)0xFF00) >
      +                          > 8) | (((uint16_t)tcbPtr->localWnd & (uint16_t)0x00FF) << 8));
 20561  0026F4  0E1A               	movlw	26
 20562  0026F6  D9A4               	call	PL391	;call to abstracted procedure
 20563  0026F8  64F7               	cpfsgt	tblptrh,c
 20564  0026FA  D002               	bra	u12097
 20565  0026FC  D9D8               	call	PL447	;call to abstracted procedure
 20566  0026FE  D003               	bra	u12090
 20567  002700                     u12097:
 20568  002700  EC86  F011         	call	PL389	;call to abstracted procedure
 20569  002704  D9E8               	call	PL503	;call to abstracted procedure
 20570  002706                     u12090:
 20571  002706  DAC6               	call	PL701	;call to abstracted procedure
 20572  002708  0E1A               	movlw	26
 20573  00270A  DA1A               	call	PL553	;call to abstracted procedure
 20574  00270C  64F7               	cpfsgt	tblptrh,c
 20575  00270E  D002               	bra	u12107
 20576  002710  DAAF               	call	PL651	;call to abstracted procedure
 20577  002712  D003               	bra	u12100
 20578  002714                     u12107:
 20579  002714  EC86  F011         	call	PL389	;call to abstracted procedure
 20580  002718  DAC2               	call	PL707	;call to abstracted procedure
 20581  00271A                     u12100:
 20582  00271A  DA9B               	call	PL633	;call to abstracted procedure
 20583  00271C  6FE8               	movwf	(TCP_Snd@txHeader+14)& (0+255),b
 20584  00271E  51A6               	movf	(??_TCP_Snd+5)& (0+255),w,b
 20585  002720  11AA               	iorwf	(??_TCP_Snd+9)& (0+255),w,b
 20586  002722  6FE9               	movwf	(TCP_Snd@txHeader+15)& (0+255),b
 20587                           
 20588                           ; BSR set to: 0
 20589                           ;tcpv4.c: 220: txHeader.checksum = 0;
 20590  002724  6BEA               	clrf	(TCP_Snd@txHeader+16)& (0+255),b
 20591  002726  6BEB               	clrf	(TCP_Snd@txHeader+17)& (0+255),b
 20592                           
 20593                           ; BSR set to: 0
 20594                           ;tcpv4.c: 221: txHeader.urgentPtr = 0;
 20595  002728  6BEC               	clrf	(TCP_Snd@txHeader+18)& (0+255),b
 20596  00272A  6BED               	clrf	(TCP_Snd@txHeader+19)& (0+255),b
 20597                           
 20598                           ;tcpv4.c: 223: if ((tcbPtr->flags) & (0x02U | 0x04U))
 20599  00272C  0E35               	movlw	53
 20600  00272E  D988               	call	PL391	;call to abstracted procedure
 20601  002730  64F7               	cpfsgt	tblptrh,c
 20602  002732  D003               	bra	u12117
 20603  002734  0008               	tblrd		*
 20604  002736  50F5               	movf	tablat,w,c
 20605  002738  D003               	bra	u12110
 20606  00273A                     u12117:
 20607  00273A  EC86  F011         	call	PL389	;call to abstracted procedure
 20608  00273E  50EF               	movf	indf0,w,c
 20609  002740                     u12110:
 20610  002740  0100               	movlb	0	; () banked
 20611  002742  6FA3               	movwf	(??_TCP_Snd+2)& (0+255),b
 20612  002744  0E06               	movlw	6
 20613  002746  17A3               	andwf	(??_TCP_Snd+2)& (0+255),f,b
 20614  002748  E003               	bz	l8451
 20615                           
 20616                           ; BSR set to: 0
 20617                           ;tcpv4.c: 224: {
 20618                           ;tcpv4.c: 225: tcpDataLength = 0;
 20619  00274A  6BD8               	clrf	TCP_Snd@tcpDataLength& (0+255),b
 20620  00274C  6BD9               	clrf	(TCP_Snd@tcpDataLength+1)& (0+255),b
 20621                           
 20622                           ;tcpv4.c: 226: } else
 20623  00274E  D094               	goto	l1113
 20624  002750                     l8451:
 20625                           
 20626                           ; BSR set to: 0
 20627                           ;tcpv4.c: 227: {
 20628                           ;tcpv4.c: 228: tcpDataLength = tcbPtr->bytesToSend;
 20629  002750  0E27               	movlw	39
 20630  002752  D976               	call	PL391	;call to abstracted procedure
 20631  002754  64F7               	cpfsgt	tblptrh,c
 20632  002756  D002               	bra	u12137
 20633  002758  DA4D               	call	PL595	;call to abstracted procedure
 20634  00275A  D003               	bra	u12130
 20635  00275C                     u12137:
 20636  00275C  EC86  F011         	call	PL389	;call to abstracted procedure
 20637  002760  DA8E               	call	PL665	;call to abstracted procedure
 20638  002762                     u12130:
 20639                           
 20640                           ;tcpv4.c: 230: if (tcpDataLength != 0)
 20641  002762  0100               	movlb	0	; () banked
 20642  002764  51D8               	movf	TCP_Snd@tcpDataLength& (0+255),w,b
 20643  002766  11D9               	iorwf	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 20644  002768  E101 D086          	bz	l1113
 20645                           
 20646                           ; BSR set to: 0
 20647                           ;tcpv4.c: 231: {
 20648                           ;tcpv4.c: 232: if(tcpDataLength > tcbPtr->remoteWnd)
 20649  00276C  0E18               	movlw	24
 20650  00276E  D968               	call	PL391	;call to abstracted procedure
 20651  002770  64F7               	cpfsgt	tblptrh,c
 20652  002772  D002               	bra	u12157
 20653  002774  D99C               	call	PL447	;call to abstracted procedure
 20654  002776  D003               	bra	u12150
 20655  002778                     u12157:
 20656  002778  EC86  F011         	call	PL389	;call to abstracted procedure
 20657  00277C  D9AC               	call	PL503	;call to abstracted procedure
 20658  00277E                     u12150:
 20659  00277E  DA84               	call	PL671	;call to abstracted procedure
 20660  002780  E209               	bc	l1115
 20661                           
 20662                           ; BSR set to: 0
 20663                           ;tcpv4.c: 233: {
 20664                           ;tcpv4.c: 234: tcpDataLength = tcbPtr->remoteWnd;
 20665  002782  0E18               	movlw	24
 20666  002784  D95D               	call	PL391	;call to abstracted procedure
 20667  002786  64F7               	cpfsgt	tblptrh,c
 20668  002788  D002               	bra	u12177
 20669  00278A  DA34               	call	PL595	;call to abstracted procedure
 20670  00278C  D003               	bra	u12170
 20671  00278E                     u12177:
 20672  00278E  EC86  F011         	call	PL389	;call to abstracted procedure
 20673  002792  DA75               	call	PL665	;call to abstracted procedure
 20674  002794                     u12170:
 20675  002794                     l1115:
 20676                           
 20677                           ;tcpv4.c: 235: }
 20678                           ;tcpv4.c: 237: if(tcpDataLength > tcbPtr->mss)
 20679  002794  0E1C               	movlw	28
 20680  002796  0100               	movlb	0	; () banked
 20681  002798  D953               	call	PL391	;call to abstracted procedure
 20682  00279A  64F7               	cpfsgt	tblptrh,c
 20683  00279C  D002               	bra	u12187
 20684  00279E  D987               	call	PL447	;call to abstracted procedure
 20685  0027A0  D003               	bra	u12180
 20686  0027A2                     u12187:
 20687  0027A2  EC86  F011         	call	PL389	;call to abstracted procedure
 20688  0027A6  D997               	call	PL503	;call to abstracted procedure
 20689  0027A8                     u12180:
 20690  0027A8  DA6F               	call	PL671	;call to abstracted procedure
 20691  0027AA  E209               	bc	l1116
 20692                           
 20693                           ; BSR set to: 0
 20694                           ;tcpv4.c: 238: {
 20695                           ;tcpv4.c: 239: tcpDataLength = tcbPtr->mss;
 20696  0027AC  0E1C               	movlw	28
 20697  0027AE  D948               	call	PL391	;call to abstracted procedure
 20698  0027B0  64F7               	cpfsgt	tblptrh,c
 20699  0027B2  D002               	bra	u12207
 20700  0027B4  DA1F               	call	PL595	;call to abstracted procedure
 20701  0027B6  D003               	bra	u12200
 20702  0027B8                     u12207:
 20703  0027B8  EC86  F011         	call	PL389	;call to abstracted procedure
 20704  0027BC  DA60               	call	PL665	;call to abstracted procedure
 20705  0027BE                     u12200:
 20706  0027BE                     l1116:
 20707                           
 20708                           ;tcpv4.c: 240: }
 20709                           ;tcpv4.c: 241: data = tcbPtr->txBufferPtr;
 20710  0027BE  0E25               	movlw	37
 20711  0027C0  0100               	movlb	0	; () banked
 20712  0027C2  D93E               	call	PL391	;call to abstracted procedure
 20713  0027C4  64F7               	cpfsgt	tblptrh,c
 20714  0027C6  D007               	bra	u12217
 20715  0027C8  0009               	tblrd		*+
 20716  0027CA  CFF5 F0D1          	movff	tablat,TCP_Snd@data
 20717  0027CE  0009               	tblrd		*+
 20718  0027D0  CFF5 F0D2          	movff	tablat,TCP_Snd@data+1
 20719  0027D4  D006               	bra	u12210
 20720  0027D6                     u12217:
 20721  0027D6  EC86  F011         	call	PL389	;call to abstracted procedure
 20722  0027DA  CFEE F0D1          	movff	postinc0,TCP_Snd@data
 20723  0027DE  CFEE F0D2          	movff	postinc0,TCP_Snd@data+1
 20724  0027E2                     u12210:
 20725                           
 20726                           ;tcpv4.c: 244: tcbPtr->txBufferPtr = tcbPtr->txBufferPtr + tcpDataLength;
 20727  0027E2  0E25               	movlw	37
 20728  0027E4  0100               	movlb	0	; () banked
 20729  0027E6  D92C               	call	PL391	;call to abstracted procedure
 20730  0027E8  64F7               	cpfsgt	tblptrh,c
 20731  0027EA  D002               	bra	u12227
 20732  0027EC  D960               	call	PL447	;call to abstracted procedure
 20733  0027EE  D003               	bra	u12220
 20734  0027F0                     u12227:
 20735  0027F0  EC86  F011         	call	PL389	;call to abstracted procedure
 20736  0027F4  D970               	call	PL503	;call to abstracted procedure
 20737  0027F6                     u12220:
 20738  0027F6  0100               	movlb	0	; () banked
 20739  0027F8  51D8               	movf	TCP_Snd@tcpDataLength& (0+255),w,b
 20740  0027FA  27A3               	addwf	(??_TCP_Snd+2)& (0+255),f,b
 20741  0027FC  51D9               	movf	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 20742  0027FE  23A4               	addwfc	(??_TCP_Snd+3)& (0+255),f,b
 20743  002800  0E25               	movlw	37
 20744  002802  D991               	call	PL547	;call to abstracted procedure
 20745  002804  64F7               	cpfsgt	tblptrh,c
 20746  002806  D002               	bra	u12237
 20747  002808  DA2C               	call	PL647	;call to abstracted procedure
 20748  00280A  D003               	bra	u12230
 20749  00280C                     u12237:
 20750  00280C  EC86  F011         	call	PL389	;call to abstracted procedure
 20751  002810  DA4F               	call	PL727	;call to abstracted procedure
 20752  002812                     u12230:
 20753                           
 20754                           ;tcpv4.c: 245: tcbPtr->bytesToSend = tcbPtr->bytesToSend - tcpDataLength;
 20755  002812  0E27               	movlw	39
 20756  002814  0100               	movlb	0	; () banked
 20757  002816  D914               	call	PL391	;call to abstracted procedure
 20758  002818  64F7               	cpfsgt	tblptrh,c
 20759  00281A  D002               	bra	u12247
 20760  00281C  D948               	call	PL447	;call to abstracted procedure
 20761  00281E  D003               	bra	u12240
 20762  002820                     u12247:
 20763  002820  EC86  F011         	call	PL389	;call to abstracted procedure
 20764  002824  D958               	call	PL503	;call to abstracted procedure
 20765  002826                     u12240:
 20766  002826  0100               	movlb	0	; () banked
 20767  002828  51D8               	movf	TCP_Snd@tcpDataLength& (0+255),w,b
 20768  00282A  5FA3               	subwf	(??_TCP_Snd+2)& (0+255),f,b
 20769  00282C  51D9               	movf	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 20770  00282E  5BA4               	subwfb	(??_TCP_Snd+3)& (0+255),f,b
 20771  002830  0E27               	movlw	39
 20772  002832  D979               	call	PL547	;call to abstracted procedure
 20773  002834  64F7               	cpfsgt	tblptrh,c
 20774  002836  D002               	bra	u12257
 20775  002838  DA14               	call	PL647	;call to abstracted procedure
 20776  00283A  D003               	bra	u12250
 20777  00283C                     u12257:
 20778  00283C  EC86  F011         	call	PL389	;call to abstracted procedure
 20779  002840  DA37               	call	PL727	;call to abstracted procedure
 20780  002842                     u12250:
 20781                           
 20782                           ;tcpv4.c: 247: if (tcbPtr->bytesToSend == 0)
 20783  002842  0E27               	movlw	39
 20784  002844  0100               	movlb	0	; () banked
 20785  002846  D8FC               	call	PL391	;call to abstracted procedure
 20786  002848  64F7               	cpfsgt	tblptrh,c
 20787  00284A  D002               	bra	u12267
 20788  00284C  D930               	call	PL447	;call to abstracted procedure
 20789  00284E  D003               	bra	u12260
 20790  002850                     u12267:
 20791  002850  EC86  F011         	call	PL389	;call to abstracted procedure
 20792  002854  D940               	call	PL503	;call to abstracted procedure
 20793  002856                     u12260:
 20794  002856  0100               	movlb	0	; () banked
 20795  002858  51A3               	movf	(??_TCP_Snd+2)& (0+255),w,b
 20796  00285A  11A4               	iorwf	(??_TCP_Snd+3)& (0+255),w,b
 20797  00285C  E10D               	bnz	l1113
 20798                           
 20799                           ; BSR set to: 0
 20800                           ;tcpv4.c: 248: {
 20801                           ;tcpv4.c: 249: tcbPtr->flags |= 0x08U;
 20802  00285E  0E35               	movlw	53
 20803  002860  D8EF               	call	PL391	;call to abstracted procedure
 20804  002862  64F7               	cpfsgt	tblptrh,c
 20805  002864  D005               	bra	u12287
 20806  002866  0E08               	movlw	8
 20807  002868  0008               	tblrd		*
 20808  00286A  12F5               	iorwf	tablat,f,c
 20809  00286C  000C               	tblwt		*
 20810  00286E  D004               	bra	u12280
 20811  002870                     u12287:
 20812  002870  EC86  F011         	call	PL389	;call to abstracted procedure
 20813  002874  0E08               	movlw	8
 20814  002876  12EF               	iorwf	indf0,f,c
 20815  002878                     u12280:
 20816  002878                     l1113:
 20817                           
 20818                           ;tcpv4.c: 250: }
 20819                           ;tcpv4.c: 251: }
 20820                           ;tcpv4.c: 252: }
 20821                           ;tcpv4.c: 254: txHeader.flags = tcbPtr->flags;
 20822  002878  0E35               	movlw	53
 20823  00287A  0100               	movlb	0	; () banked
 20824  00287C  D8E1               	call	PL391	;call to abstracted procedure
 20825  00287E  64F7               	cpfsgt	tblptrh,c
 20826  002880  D003               	bra	u12297
 20827  002882  0008               	tblrd		*
 20828  002884  50F5               	movf	tablat,w,c
 20829  002886  D003               	bra	u12290
 20830  002888                     u12297:
 20831  002888  EC86  F011         	call	PL389	;call to abstracted procedure
 20832  00288C  50EF               	movf	indf0,w,c
 20833  00288E                     u12290:
 20834  00288E  0100               	movlb	0	; () banked
 20835  002890  6FE7               	movwf	(TCP_Snd@txHeader+13)& (0+255),b
 20836                           
 20837                           ; BSR set to: 0
 20838                           ;tcpv4.c: 255: payloadLength = sizeof(tcpHeader_t) + tcpDataLength;
 20839  002892  0E14               	movlw	20
 20840  002894  25D8               	addwf	TCP_Snd@tcpDataLength& (0+255),w,b
 20841  002896  6FD5               	movwf	TCP_Snd@payloadLength& (0+255),b
 20842  002898  0E00               	movlw	0
 20843  00289A  21D9               	addwfc	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 20844  00289C  6FD6               	movwf	(TCP_Snd@payloadLength+1)& (0+255),b
 20845                           
 20846                           ; BSR set to: 0
 20847                           ;tcpv4.c: 257: ret = IPv4_Start(tcbPtr->destIP, TCP);
 20848  00289E  0E02               	movlw	2
 20849  0028A0  D8CF               	call	PL391	;call to abstracted procedure
 20850  0028A2  64F7               	cpfsgt	tblptrh,c
 20851  0028A4  D00D               	bra	u12307
 20852  0028A6  0009               	tblrd		*+
 20853  0028A8  CFF5 F022          	movff	tablat,IPv4_Start@destAddress
 20854  0028AC  0009               	tblrd		*+
 20855  0028AE  CFF5 F023          	movff	tablat,IPv4_Start@destAddress+1
 20856  0028B2  0009               	tblrd		*+
 20857  0028B4  CFF5 F024          	movff	tablat,IPv4_Start@destAddress+2
 20858  0028B8  0009               	tblrd		*+
 20859  0028BA  CFF5 F025          	movff	tablat,IPv4_Start@destAddress+3
 20860  0028BE  D00A               	bra	u12300
 20861  0028C0                     u12307:
 20862  0028C0  EC86  F011         	call	PL389	;call to abstracted procedure
 20863  0028C4  CFEE F022          	movff	postinc0,IPv4_Start@destAddress
 20864  0028C8  CFEE F023          	movff	postinc0,IPv4_Start@destAddress+1
 20865  0028CC  CFEE F024          	movff	postinc0,IPv4_Start@destAddress+2
 20866  0028D0  CFEE F025          	movff	postinc0,IPv4_Start@destAddress+3
 20867  0028D4                     u12300:
 20868  0028D4  0E06               	movlw	6
 20869  0028D6  6E26               	movwf	IPv4_Start@protocol,c
 20870  0028D8  EC22  F023         	call	_IPv4_Start	;wreg free
 20871  0028DC  6FD7               	movwf	TCP_Snd@ret& (0+255),b
 20872                           
 20873                           ; BSR set to: 0
 20874                           ;tcpv4.c: 258: if (ret)
 20875  0028DE  51D7               	movf	TCP_Snd@ret& (0+255),w,b
 20876  0028E0  E039               	bz	l8483
 20877                           
 20878                           ; BSR set to: 0
 20879                           ;tcpv4.c: 259: {
 20880                           ;tcpv4.c: 260: ETH_WriteBlock((uint8_t *) &txHeader, sizeof(tcpHeader_t));
 20881  0028E2  0EDA               	movlw	low TCP_Snd@txHeader
 20882  0028E4  6E17               	movwf	ETH_WriteBlock@buffer,c
 20883  0028E6  6A18               	clrf	ETH_WriteBlock@buffer+1,c
 20884  0028E8  D9E8               	call	PL761	;call to abstracted procedure
 20885  0028EA  ECB2  F02F         	call	_ETH_WriteBlock	;wreg free
 20886                           
 20887                           ;tcpv4.c: 262: if (tcpDataLength > 0)
 20888  0028EE  0100               	movlb	0	; () banked
 20889  0028F0  51D8               	movf	TCP_Snd@tcpDataLength& (0+255),w,b
 20890  0028F2  11D9               	iorwf	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 20891  0028F4  E00A               	bz	l8475
 20892                           
 20893                           ; BSR set to: 0
 20894                           ;tcpv4.c: 263: {
 20895                           ;tcpv4.c: 264: ETH_WriteBlock( data, tcpDataLength);
 20896  0028F6  C0D1  F017         	movff	TCP_Snd@data,ETH_WriteBlock@buffer
 20897  0028FA  C0D2  F018         	movff	TCP_Snd@data+1,ETH_WriteBlock@buffer+1
 20898  0028FE  C0D8  F019         	movff	TCP_Snd@tcpDataLength,ETH_WriteBlock@length
 20899  002902  C0D9  F01A         	movff	TCP_Snd@tcpDataLength+1,ETH_WriteBlock@length+1
 20900  002906  ECB2  F02F         	call	_ETH_WriteBlock	;wreg free
 20901  00290A                     l8475:
 20902                           
 20903                           ;tcpv4.c: 265: }
 20904                           ;tcpv4.c: 267: cksm = payloadLength + TCP;
 20905  00290A  0E06               	movlw	6
 20906  00290C  0100               	movlb	0	; () banked
 20907  00290E  25D5               	addwf	TCP_Snd@payloadLength& (0+255),w,b
 20908  002910  6FD3               	movwf	TCP_Snd@cksm& (0+255),b
 20909  002912  0E00               	movlw	0
 20910  002914  21D6               	addwfc	(TCP_Snd@payloadLength+1)& (0+255),w,b
 20911  002916  6FD4               	movwf	(TCP_Snd@cksm+1)& (0+255),b
 20912                           
 20913                           ; BSR set to: 0
 20914                           ;tcpv4.c: 269: cksm = ETH_TxComputeChecksum(sizeof(ethernetFrame_t) + sizeof(ipv4Header_
      +                          t) - 8, payloadLength + 8, cksm);
 20915  002918  D9C7               	call	PL723	;call to abstracted procedure
 20916  00291A  25D5               	addwf	TCP_Snd@payloadLength& (0+255),w,b
 20917  00291C  6E27               	movwf	ETH_TxComputeChecksum@len,c
 20918  00291E  0E00               	movlw	0
 20919  002920  21D6               	addwfc	(TCP_Snd@payloadLength+1)& (0+255),w,b
 20920  002922  6E28               	movwf	ETH_TxComputeChecksum@len+1,c
 20921  002924  C0D3  F029         	movff	TCP_Snd@cksm,ETH_TxComputeChecksum@seed
 20922  002928  C0D4  F02A         	movff	TCP_Snd@cksm+1,ETH_TxComputeChecksum@seed+1
 20923  00292C  ECC8  F02B         	call	_ETH_TxComputeChecksum	;wreg free
 20924  002930  C025  F0D3         	movff	?_ETH_TxComputeChecksum,TCP_Snd@cksm
 20925  002934  C026  F0D4         	movff	?_ETH_TxComputeChecksum+1,TCP_Snd@cksm+1
 20926                           
 20927                           ; BSR set to: 0
 20928                           ;tcpv4.c: 270: ETH_Insert((char *)&cksm, 2, sizeof(ethernetFrame_t) + sizeof(ipv4Header_
      +                          t) + (int)(((char*)&((tcpHeader_t *)1)->checksum)-1));
 20929  002938  ECC4  F02D         	call	PL587	;call to abstracted procedure
 20930  00293C  0E32               	movlw	50
 20931  00293E  6E19               	movwf	ETH_Insert@offset,c
 20932  002940  0ED3               	movlw	TCP_Snd@cksm& (0+255)
 20933  002942  EC66  F030         	call	_ETH_Insert
 20934                           
 20935                           ;tcpv4.c: 272: ret = IPV4_Send(payloadLength);
 20936  002946  C0D5  F031         	movff	TCP_Snd@payloadLength,IPV4_Send@payloadLength
 20937  00294A  C0D6  F032         	movff	TCP_Snd@payloadLength+1,IPV4_Send@payloadLength+1
 20938  00294E  EC91  F02D         	call	_IPV4_Send	;wreg free
 20939  002952  6FD7               	movwf	TCP_Snd@ret& (0+255),b
 20940  002954                     l8483:
 20941                           
 20942                           ; BSR set to: 0
 20943                           ;tcpv4.c: 273: }
 20944                           ;tcpv4.c: 277: if (ret == 0)
 20945  002954  51D7               	movf	TCP_Snd@ret& (0+255),w,b
 20946  002956  E13E               	bnz	l8489
 20947                           
 20948                           ; BSR set to: 0
 20949                           ;tcpv4.c: 278: {
 20950                           ;tcpv4.c: 281: tcbPtr->timeoutsCount = tcbPtr->timeoutsCount + 1;
 20951  002958  0E34               	movlw	52
 20952  00295A  D872               	call	PL391	;call to abstracted procedure
 20953  00295C  64F7               	cpfsgt	tblptrh,c
 20954  00295E  D003               	bra	u12347
 20955  002960  0008               	tblrd		*
 20956  002962  50F5               	movf	tablat,w,c
 20957  002964  D003               	bra	u12340
 20958  002966                     u12347:
 20959  002966  EC86  F011         	call	PL389	;call to abstracted procedure
 20960  00296A  50EF               	movf	indf0,w,c
 20961  00296C                     u12340:
 20962  00296C  0100               	movlb	0	; () banked
 20963  00296E  6FA3               	movwf	(??_TCP_Snd+2)& (0+255),b
 20964  002970  2BA3               	incf	(??_TCP_Snd+2)& (0+255),f,b
 20965  002972  0E34               	movlw	52
 20966  002974  259F               	addwf	TCP_Snd@tcbPtr& (0+255),w,b
 20967  002976  6FA4               	movwf	(??_TCP_Snd+3)& (0+255),b
 20968  002978  0E00               	movlw	0
 20969  00297A  21A0               	addwfc	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 20970  00297C  6FA5               	movwf	(??_TCP_Snd+4)& (0+255),b
 20971  00297E  C0A4  FFF6         	movff	??_TCP_Snd+3,tblptrl
 20972  002982  C0A5  FFF7         	movff	??_TCP_Snd+4,tblptrh
 20973  002986  0E00               	movlw	low (__smallconst shr (0+16))
 20974  002988  6EF8               	movwf	tblptru,c
 20975  00298A  0E0F               	movlw	(high __ramtop+-1)
 20976  00298C  64F7               	cpfsgt	tblptrh,c
 20977  00298E  D004               	bra	u12357
 20978  002990  C0A3  FFF5         	movff	??_TCP_Snd+2,tablat
 20979  002994  000C               	tblwt		*
 20980  002996  D004               	bra	u12350
 20981  002998                     u12357:
 20982  002998  EC86  F011         	call	PL389	;call to abstracted procedure
 20983  00299C  C0A3  FFEF         	movff	??_TCP_Snd+2,indf0
 20984  0029A0                     u12350:
 20985                           
 20986                           ;tcpv4.c: 283: if (tcbPtr->timeout == 0)
 20987  0029A0  0E30               	movlw	48
 20988  0029A2  0100               	movlb	0	; () banked
 20989  0029A4  D84D               	call	PL391	;call to abstracted procedure
 20990  0029A6  64F7               	cpfsgt	tblptrh,c
 20991  0029A8  D002               	bra	u12367
 20992  0029AA  D881               	call	PL447	;call to abstracted procedure
 20993  0029AC  D003               	bra	u12360
 20994  0029AE                     u12367:
 20995  0029AE  EC86  F011         	call	PL389	;call to abstracted procedure
 20996  0029B2  D891               	call	PL503	;call to abstracted procedure
 20997  0029B4                     u12360:
 20998  0029B4  0100               	movlb	0	; () banked
 20999  0029B6  51A3               	movf	(??_TCP_Snd+2)& (0+255),w,b
 21000  0029B8  11A4               	iorwf	(??_TCP_Snd+3)& (0+255),w,b
 21001  0029BA  E13F               	bnz	l8491
 21002                           
 21003                           ; BSR set to: 0
 21004                           ;tcpv4.c: 284: {
 21005                           ;tcpv4.c: 285: tcbPtr->timeout = ((unsigned long)1*2);
 21006  0029BC  0E30               	movlw	48
 21007  0029BE  D840               	call	PL391	;call to abstracted procedure
 21008  0029C0  64F7               	cpfsgt	tblptrh,c
 21009  0029C2  D003               	bra	u12387
 21010  0029C4  EC5B  F012         	call	PL467	;call to abstracted procedure
 21011  0029C8  D004               	bra	u12380
 21012  0029CA                     u12387:
 21013  0029CA  EC86  F011         	call	PL389	;call to abstracted procedure
 21014  0029CE  ECAF  F012         	call	PL617	;call to abstracted procedure
 21015  0029D2                     u12380:
 21016  0029D2  D033               	goto	l8491
 21017  0029D4                     l8489:
 21018                           
 21019                           ; BSR set to: 0
 21020                           ;tcpv4.c: 288: else
 21021                           ;tcpv4.c: 289: {
 21022                           ;tcpv4.c: 291: tcbPtr->localSeqno = tcbPtr->localSeqno + tcpDataLength;
 21023  0029D4  0E10               	movlw	16
 21024  0029D6  D834               	call	PL391	;call to abstracted procedure
 21025  0029D8  64F7               	cpfsgt	tblptrh,c
 21026  0029DA  D003               	bra	u12397
 21027  0029DC  D868               	call	PL447	;call to abstracted procedure
 21028  0029DE  D880               	call	PL527	;call to abstracted procedure
 21029  0029E0  D004               	bra	u12390
 21030  0029E2                     u12397:
 21031  0029E2  EC86  F011         	call	PL389	;call to abstracted procedure
 21032  0029E6  D877               	call	PL503	;call to abstracted procedure
 21033  0029E8  D92F               	call	PL631	;call to abstracted procedure
 21034  0029EA                     u12390:
 21035  0029EA  0100               	movlb	0	; () banked
 21036  0029EC  51D8               	movf	TCP_Snd@tcpDataLength& (0+255),w,b
 21037  0029EE  25A3               	addwf	(??_TCP_Snd+2)& (0+255),w,b
 21038  0029F0  6FA7               	movwf	(??_TCP_Snd+6)& (0+255),b
 21039  0029F2  51D9               	movf	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 21040  0029F4  21A4               	addwfc	(??_TCP_Snd+3)& (0+255),w,b
 21041  0029F6  6FA8               	movwf	(??_TCP_Snd+7)& (0+255),b
 21042  0029F8  0E00               	movlw	0
 21043  0029FA  21A5               	addwfc	(??_TCP_Snd+4)& (0+255),w,b
 21044  0029FC  6FA9               	movwf	(??_TCP_Snd+8)& (0+255),b
 21045  0029FE  0E00               	movlw	0
 21046  002A00  21A6               	addwfc	(??_TCP_Snd+5)& (0+255),w,b
 21047  002A02  6FAA               	movwf	(??_TCP_Snd+9)& (0+255),b
 21048  002A04  0E10               	movlw	16
 21049  002A06  D85A               	call	PL485	;call to abstracted procedure
 21050  002A08  64F7               	cpfsgt	tblptrh,c
 21051  002A0A  D00D               	bra	u12407
 21052  002A0C  C0A7  FFF5         	movff	??_TCP_Snd+6,tablat
 21053  002A10  000D               	tblwt		*+
 21054  002A12  C0A8  FFF5         	movff	??_TCP_Snd+7,tablat
 21055  002A16  000D               	tblwt		*+
 21056  002A18  C0A9  FFF5         	movff	??_TCP_Snd+8,tablat
 21057  002A1C  000D               	tblwt		*+
 21058  002A1E  C0AA  FFF5         	movff	??_TCP_Snd+9,tablat
 21059  002A22  000C               	tblwt		*
 21060  002A24  D00A               	bra	u12400
 21061  002A26                     u12407:
 21062  002A26  EC86  F011         	call	PL389	;call to abstracted procedure
 21063  002A2A  C0A7  FFEE         	movff	??_TCP_Snd+6,postinc0
 21064  002A2E  C0A8  FFEE         	movff	??_TCP_Snd+7,postinc0
 21065  002A32  C0A9  FFEE         	movff	??_TCP_Snd+8,postinc0
 21066  002A36  C0AA  FFEF         	movff	??_TCP_Snd+9,indf0
 21067  002A3A                     u12400:
 21068  002A3A                     l8491:
 21069                           
 21070                           ;tcpv4.c: 293: }
 21071                           ;tcpv4.c: 295: return ret;
 21072  002A3A  0100               	movlb	0	; () banked
 21073  002A3C  51D7               	movf	TCP_Snd@ret& (0+255),w,b
 21074                           
 21075                           ; BSR set to: 0
 21076  002A3E  0012               	return		;funcret
 21077  002A40                     __end_of_TCP_Snd:
 21078                           	opt stack 0
 21079  002A40                     PL391:
 21080                           	opt stack 15
 21081  002A40  259F               	addwf	TCP_Snd@tcbPtr& (0+255),w,b
 21082  002A42  6FA1               	movwf	??_TCP_Snd& (0+255),b
 21083  002A44  0E00               	movlw	0
 21084  002A46  21A0               	addwfc	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 21085  002A48  6FA2               	movwf	(??_TCP_Snd+1)& (0+255),b
 21086  002A4A  C0A1  FFF6         	movff	??_TCP_Snd,tblptrl
 21087  002A4E  C0A2  FFF7         	movff	??_TCP_Snd+1,tblptrh
 21088  002A52  0E00               	movlw	low (__smallconst shr (0+16))
 21089  002A54  6EF8               	movwf	tblptru,c
 21090  002A56  0E0F               	movlw	(high __ramtop+-1)
 21091  002A58  0012               	return	
 21092  002A5A                     __end_ofPL391:
 21093                           	opt stack 0
 21094  002A5A                     PL439:
 21095                           	opt stack 15
 21096  002A5A  0100               	movlb	0	; () banked
 21097  002A5C  6BC5               	clrf	(??_TCP_Snd+36)& (0+255),b
 21098  002A5E  6BC6               	clrf	(??_TCP_Snd+37)& (0+255),b
 21099  002A60  6BC7               	clrf	(??_TCP_Snd+38)& (0+255),b
 21100  002A62  51C4               	movf	(??_TCP_Snd+35)& (0+255),w,b
 21101  002A64  6FC8               	movwf	(??_TCP_Snd+39)& (0+255),b
 21102  002A66  0E19               	movlw	25
 21103  002A68  D005               	goto	u12030
 21104  002A6A                     u12035:
 21105  002A6A  90D8               	bcf	status,0,c
 21106  002A6C  33C8               	rrcf	(??_TCP_Snd+39)& (0+255),f,b
 21107  002A6E  33C7               	rrcf	(??_TCP_Snd+38)& (0+255),f,b
 21108  002A70  33C6               	rrcf	(??_TCP_Snd+37)& (0+255),f,b
 21109  002A72  33C5               	rrcf	(??_TCP_Snd+36)& (0+255),f,b
 21110  002A74                     u12030:
 21111  002A74  2EE8               	decfsz	wreg,f,c
 21112  002A76  D7F9               	goto	u12035
 21113  002A78  51BB               	movf	(??_TCP_Snd+26)& (0+255),w,b
 21114  002A7A  11C5               	iorwf	(??_TCP_Snd+36)& (0+255),w,b
 21115  002A7C  6FC9               	movwf	(??_TCP_Snd+40)& (0+255),b
 21116  002A7E  51BC               	movf	(??_TCP_Snd+27)& (0+255),w,b
 21117  002A80  11C6               	iorwf	(??_TCP_Snd+37)& (0+255),w,b
 21118  002A82  6FCA               	movwf	(??_TCP_Snd+41)& (0+255),b
 21119  002A84  51BD               	movf	(??_TCP_Snd+28)& (0+255),w,b
 21120  002A86  11C7               	iorwf	(??_TCP_Snd+38)& (0+255),w,b
 21121  002A88  6FCB               	movwf	(??_TCP_Snd+42)& (0+255),b
 21122  002A8A  51BE               	movf	(??_TCP_Snd+29)& (0+255),w,b
 21123  002A8C  11C8               	iorwf	(??_TCP_Snd+39)& (0+255),w,b
 21124  002A8E  6FCC               	movwf	(??_TCP_Snd+43)& (0+255),b
 21125  002A90  51B1               	movf	(??_TCP_Snd+16)& (0+255),w,b
 21126  002A92  11C9               	iorwf	(??_TCP_Snd+40)& (0+255),w,b
 21127  002A94  6FCD               	movwf	(??_TCP_Snd+44)& (0+255),b
 21128  002A96  51B2               	movf	(??_TCP_Snd+17)& (0+255),w,b
 21129  002A98  11CA               	iorwf	(??_TCP_Snd+41)& (0+255),w,b
 21130  002A9A  6FCE               	movwf	(??_TCP_Snd+45)& (0+255),b
 21131  002A9C  51B3               	movf	(??_TCP_Snd+18)& (0+255),w,b
 21132  002A9E  11CB               	iorwf	(??_TCP_Snd+42)& (0+255),w,b
 21133  002AA0  6FCF               	movwf	(??_TCP_Snd+46)& (0+255),b
 21134  002AA2  51B4               	movf	(??_TCP_Snd+19)& (0+255),w,b
 21135  002AA4  11CC               	iorwf	(??_TCP_Snd+43)& (0+255),w,b
 21136  002AA6  6FD0               	movwf	(??_TCP_Snd+47)& (0+255),b
 21137  002AA8  51A7               	movf	(??_TCP_Snd+6)& (0+255),w,b
 21138  002AAA  11CD               	iorwf	(??_TCP_Snd+44)& (0+255),w,b
 21139  002AAC  0012               	return	
 21140  002AAE                     __end_ofPL439:
 21141                           	opt stack 0
 21142  002AAE                     PL447:
 21143                           	opt stack 15
 21144  002AAE  0009               	tblrd		*+
 21145  002AB0  CFF5 F0A3          	movff	tablat,??_TCP_Snd+2
 21146  002AB4  0009               	tblrd		*+
 21147  002AB6  CFF5 F0A4          	movff	tablat,??_TCP_Snd+3
 21148  002ABA  0012               	return	
 21149  002ABC                     __end_ofPL447:
 21150                           	opt stack 0
 21151  002ABC                     PL485:
 21152                           	opt stack 15
 21153  002ABC  259F               	addwf	TCP_Snd@tcbPtr& (0+255),w,b
 21154  002ABE  6FAB               	movwf	(??_TCP_Snd+10)& (0+255),b
 21155  002AC0  0E00               	movlw	0
 21156  002AC2  21A0               	addwfc	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 21157  002AC4  6FAC               	movwf	(??_TCP_Snd+11)& (0+255),b
 21158  002AC6  C0AB  FFF6         	movff	??_TCP_Snd+10,tblptrl
 21159  002ACA  C0AC  FFF7         	movff	??_TCP_Snd+11,tblptrh
 21160  002ACE  0E00               	movlw	low (__smallconst shr (0+16))
 21161  002AD0  6EF8               	movwf	tblptru,c
 21162  002AD2  0E0F               	movlw	(high __ramtop+-1)
 21163  002AD4  0012               	return	
 21164  002AD6                     __end_ofPL485:
 21165                           	opt stack 0
 21166  002AD6                     PL503:
 21167                           	opt stack 15
 21168  002AD6  CFEE F0A3          	movff	postinc0,??_TCP_Snd+2
 21169  002ADA  CFEE F0A4          	movff	postinc0,??_TCP_Snd+3
 21170  002ADE  0012               	return	
 21171  002AE0                     __end_ofPL503:
 21172                           	opt stack 0
 21173  002AE0                     PL527:
 21174                           	opt stack 15
 21175  002AE0  0009               	tblrd		*+
 21176  002AE2  CFF5 F0A5          	movff	tablat,??_TCP_Snd+4
 21177  002AE6  0009               	tblrd		*+
 21178  002AE8  CFF5 F0A6          	movff	tablat,??_TCP_Snd+5
 21179  002AEC  0012               	return	
 21180  002AEE                     __end_ofPL527:
 21181                           	opt stack 0
 21182  002AEE                     PL531:
 21183                           	opt stack 15
 21184  002AEE  0100               	movlb	0	; () banked
 21185  002AF0  6BB1               	clrf	(??_TCP_Snd+16)& (0+255),b
 21186  002AF2  51AE               	movf	(??_TCP_Snd+13)& (0+255),w,b
 21187  002AF4  6FB2               	movwf	(??_TCP_Snd+17)& (0+255),b
 21188  002AF6  6BB3               	clrf	(??_TCP_Snd+18)& (0+255),b
 21189  002AF8  6BB4               	clrf	(??_TCP_Snd+19)& (0+255),b
 21190  002AFA  C0B3  F0B4         	movff	??_TCP_Snd+18,??_TCP_Snd+19
 21191  002AFE  C0B2  F0B3         	movff	??_TCP_Snd+17,??_TCP_Snd+18
 21192  002B02  C0B1  F0B2         	movff	??_TCP_Snd+16,??_TCP_Snd+17
 21193  002B06  6BB1               	clrf	(??_TCP_Snd+16)& (0+255),b
 21194  002B08  0012               	return	
 21195  002B0A                     __end_ofPL531:
 21196                           	opt stack 0
 21197  002B0A                     PL539:
 21198                           	opt stack 15
 21199  002B0A  C0B8  F0B7         	movff	??_TCP_Snd+23,??_TCP_Snd+22
 21200  002B0E  C0B9  F0B8         	movff	??_TCP_Snd+24,??_TCP_Snd+23
 21201  002B12  C0BA  F0B9         	movff	??_TCP_Snd+25,??_TCP_Snd+24
 21202  002B16  0100               	movlb	0	; () banked
 21203  002B18  6BBA               	clrf	(??_TCP_Snd+25)& (0+255),b
 21204  002B1A  6BBB               	clrf	(??_TCP_Snd+26)& (0+255),b
 21205  002B1C  51B8               	movf	(??_TCP_Snd+23)& (0+255),w,b
 21206  002B1E  6FBC               	movwf	(??_TCP_Snd+27)& (0+255),b
 21207  002B20  6BBD               	clrf	(??_TCP_Snd+28)& (0+255),b
 21208  002B22  6BBE               	clrf	(??_TCP_Snd+29)& (0+255),b
 21209  002B24  0012               	return	
 21210  002B26                     __end_ofPL539:
 21211                           	opt stack 0
 21212  002B26                     PL547:
 21213                           	opt stack 15
 21214  002B26  259F               	addwf	TCP_Snd@tcbPtr& (0+255),w,b
 21215  002B28  6FA5               	movwf	(??_TCP_Snd+4)& (0+255),b
 21216  002B2A  0E00               	movlw	0
 21217  002B2C  21A0               	addwfc	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 21218  002B2E  6FA6               	movwf	(??_TCP_Snd+5)& (0+255),b
 21219  002B30  C0A5  FFF6         	movff	??_TCP_Snd+4,tblptrl
 21220  002B34  C0A6  FFF7         	movff	??_TCP_Snd+5,tblptrh
 21221  002B38  0E00               	movlw	low (__smallconst shr (0+16))
 21222  002B3A  6EF8               	movwf	tblptru,c
 21223  002B3C  0E0F               	movlw	(high __ramtop+-1)
 21224  002B3E  0012               	return	
 21225  002B40                     __end_ofPL547:
 21226                           	opt stack 0
 21227  002B40                     PL553:
 21228                           	opt stack 15
 21229  002B40  259F               	addwf	TCP_Snd@tcbPtr& (0+255),w,b
 21230  002B42  6FA7               	movwf	(??_TCP_Snd+6)& (0+255),b
 21231  002B44  0E00               	movlw	0
 21232  002B46  21A0               	addwfc	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 21233  002B48  6FA8               	movwf	(??_TCP_Snd+7)& (0+255),b
 21234  002B4A  C0A7  FFF6         	movff	??_TCP_Snd+6,tblptrl
 21235  002B4E  C0A8  FFF7         	movff	??_TCP_Snd+7,tblptrh
 21236  002B52  0E00               	movlw	low (__smallconst shr (0+16))
 21237  002B54  6EF8               	movwf	tblptru,c
 21238  002B56  0E0F               	movlw	(high __ramtop+-1)
 21239  002B58  0012               	return	
 21240  002B5A                     __end_ofPL553:
 21241                           	opt stack 0
 21242  002B5A                     PL555:
 21243                           	opt stack 15
 21244  002B5A  259F               	addwf	TCP_Snd@tcbPtr& (0+255),w,b
 21245  002B5C  6FB5               	movwf	(??_TCP_Snd+20)& (0+255),b
 21246  002B5E  0E00               	movlw	0
 21247  002B60  21A0               	addwfc	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 21248  002B62  6FB6               	movwf	(??_TCP_Snd+21)& (0+255),b
 21249  002B64  C0B5  FFF6         	movff	??_TCP_Snd+20,tblptrl
 21250  002B68  C0B6  FFF7         	movff	??_TCP_Snd+21,tblptrh
 21251  002B6C  0E00               	movlw	low (__smallconst shr (0+16))
 21252  002B6E  6EF8               	movwf	tblptru,c
 21253  002B70  0E0F               	movlw	(high __ramtop+-1)
 21254  002B72  0012               	return	
 21255  002B74                     __end_ofPL555:
 21256                           	opt stack 0
 21257  002B74                     PL557:
 21258                           	opt stack 15
 21259  002B74  0009               	tblrd		*+
 21260  002B76  CFF5 F0AD          	movff	tablat,??_TCP_Snd+12
 21261  002B7A  0009               	tblrd		*+
 21262  002B7C  CFF5 F0AE          	movff	tablat,??_TCP_Snd+13
 21263  002B80  0009               	tblrd		*+
 21264  002B82  CFF5 F0AF          	movff	tablat,??_TCP_Snd+14
 21265  002B86  0009               	tblrd		*+
 21266  002B88  CFF5 F0B0          	movff	tablat,??_TCP_Snd+15
 21267  002B8C  0012               	return	
 21268  002B8E                     __end_ofPL557:
 21269                           	opt stack 0
 21270  002B8E                     PL559:
 21271                           	opt stack 15
 21272  002B8E  0009               	tblrd		*+
 21273  002B90  CFF5 F0B7          	movff	tablat,??_TCP_Snd+22
 21274  002B94  0009               	tblrd		*+
 21275  002B96  CFF5 F0B8          	movff	tablat,??_TCP_Snd+23
 21276  002B9A  0009               	tblrd		*+
 21277  002B9C  CFF5 F0B9          	movff	tablat,??_TCP_Snd+24
 21278  002BA0  0009               	tblrd		*+
 21279  002BA2  CFF5 F0BA          	movff	tablat,??_TCP_Snd+25
 21280  002BA6  0012               	return	
 21281  002BA8                     __end_ofPL559:
 21282                           	opt stack 0
 21283  002BA8                     PL561:
 21284                           	opt stack 15
 21285  002BA8  0009               	tblrd		*+
 21286  002BAA  CFF5 F0C1          	movff	tablat,??_TCP_Snd+32
 21287  002BAE  0009               	tblrd		*+
 21288  002BB0  CFF5 F0C2          	movff	tablat,??_TCP_Snd+33
 21289  002BB4  0009               	tblrd		*+
 21290  002BB6  CFF5 F0C3          	movff	tablat,??_TCP_Snd+34
 21291  002BBA  0009               	tblrd		*+
 21292  002BBC  CFF5 F0C4          	movff	tablat,??_TCP_Snd+35
 21293  002BC0  0012               	return	
 21294  002BC2                     __end_ofPL561:
 21295                           	opt stack 0
 21296  002BC2                     PL563:
 21297                           	opt stack 15
 21298  002BC2  259F               	addwf	TCP_Snd@tcbPtr& (0+255),w,b
 21299  002BC4  6FBF               	movwf	(??_TCP_Snd+30)& (0+255),b
 21300  002BC6  0E00               	movlw	0
 21301  002BC8  21A0               	addwfc	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 21302  002BCA  6FC0               	movwf	(??_TCP_Snd+31)& (0+255),b
 21303  002BCC  C0BF  FFF6         	movff	??_TCP_Snd+30,tblptrl
 21304  002BD0  C0C0  FFF7         	movff	??_TCP_Snd+31,tblptrh
 21305  002BD4  0E00               	movlw	low (__smallconst shr (0+16))
 21306  002BD6  6EF8               	movwf	tblptru,c
 21307  002BD8  0E0F               	movlw	(high __ramtop+-1)
 21308  002BDA  0012               	return	
 21309  002BDC                     __end_ofPL563:
 21310                           	opt stack 0
 21311  002BDC                     PL581:
 21312                           	opt stack 15
 21313  002BDC  0100               	movlb	0	; () banked
 21314  002BDE  51A3               	movf	(??_TCP_Snd+2)& (0+255),w,b
 21315  002BE0  6FA7               	movwf	(??_TCP_Snd+6)& (0+255),b
 21316  002BE2  6BA8               	clrf	(??_TCP_Snd+7)& (0+255),b
 21317  002BE4  6BA9               	clrf	(??_TCP_Snd+8)& (0+255),b
 21318  002BE6  6BAA               	clrf	(??_TCP_Snd+9)& (0+255),b
 21319  002BE8  C0A7  F0AA         	movff	??_TCP_Snd+6,??_TCP_Snd+9
 21320  002BEC  6BA9               	clrf	(??_TCP_Snd+8)& (0+255),b
 21321  002BEE  6BA8               	clrf	(??_TCP_Snd+7)& (0+255),b
 21322  002BF0  6BA7               	clrf	(??_TCP_Snd+6)& (0+255),b
 21323  002BF2  0012               	return	
 21324  002BF4                     __end_ofPL581:
 21325                           	opt stack 0
 21326  002BF4                     PL595:
 21327                           	opt stack 15
 21328  002BF4  0009               	tblrd		*+
 21329  002BF6  CFF5 F0D8          	movff	tablat,TCP_Snd@tcpDataLength
 21330  002BFA  0009               	tblrd		*+
 21331  002BFC  CFF5 F0D9          	movff	tablat,TCP_Snd@tcpDataLength+1
 21332  002C00  0012               	return	
 21333  002C02                     __end_ofPL595:
 21334                           	opt stack 0
 21335  002C02                     PL611:
 21336                           	opt stack 15
 21337  002C02  CFEE F0AD          	movff	postinc0,??_TCP_Snd+12
 21338  002C06  CFEE F0AE          	movff	postinc0,??_TCP_Snd+13
 21339  002C0A  CFEE F0AF          	movff	postinc0,??_TCP_Snd+14
 21340  002C0E  CFEE F0B0          	movff	postinc0,??_TCP_Snd+15
 21341  002C12  0012               	return	
 21342  002C14                     __end_ofPL611:
 21343                           	opt stack 0
 21344  002C14                     PL613:
 21345                           	opt stack 15
 21346  002C14  CFEE F0B7          	movff	postinc0,??_TCP_Snd+22
 21347  002C18  CFEE F0B8          	movff	postinc0,??_TCP_Snd+23
 21348  002C1C  CFEE F0B9          	movff	postinc0,??_TCP_Snd+24
 21349  002C20  CFEE F0BA          	movff	postinc0,??_TCP_Snd+25
 21350  002C24  0012               	return	
 21351  002C26                     __end_ofPL613:
 21352                           	opt stack 0
 21353  002C26                     PL615:
 21354                           	opt stack 15
 21355  002C26  CFEE F0C1          	movff	postinc0,??_TCP_Snd+32
 21356  002C2A  CFEE F0C2          	movff	postinc0,??_TCP_Snd+33
 21357  002C2E  CFEE F0C3          	movff	postinc0,??_TCP_Snd+34
 21358  002C32  CFEE F0C4          	movff	postinc0,??_TCP_Snd+35
 21359  002C36  0012               	return	
 21360  002C38                     __end_ofPL615:
 21361                           	opt stack 0
 21362  002C38                     PL625:
 21363                           	opt stack 15
 21364  002C38  C09F  FFF6         	movff	TCP_Snd@tcbPtr,tblptrl
 21365  002C3C  C0A0  FFF7         	movff	TCP_Snd@tcbPtr+1,tblptrh
 21366  002C40  0E00               	movlw	low (__smallconst shr (0+16))
 21367  002C42  6EF8               	movwf	tblptru,c
 21368  002C44  0E0F               	movlw	(high __ramtop+-1)
 21369  002C46  0012               	return	
 21370  002C48                     __end_ofPL625:
 21371                           	opt stack 0
 21372  002C48                     PL631:
 21373                           	opt stack 15
 21374  002C48  CFEE F0A5          	movff	postinc0,??_TCP_Snd+4
 21375  002C4C  CFEE F0A6          	movff	postinc0,??_TCP_Snd+5
 21376  002C50  0012               	return	
 21377  002C52                     __end_ofPL631:
 21378                           	opt stack 0
 21379  002C52                     PL633:
 21380                           	opt stack 15
 21381  002C52  C0AA  F0A9         	movff	??_TCP_Snd+9,??_TCP_Snd+8
 21382  002C56  0100               	movlb	0	; () banked
 21383  002C58  6BAA               	clrf	(??_TCP_Snd+9)& (0+255),b
 21384  002C5A  6BAA               	clrf	(??_TCP_Snd+9)& (0+255),b
 21385  002C5C  51A5               	movf	(??_TCP_Snd+4)& (0+255),w,b
 21386  002C5E  11A9               	iorwf	(??_TCP_Snd+8)& (0+255),w,b
 21387  002C60  0012               	return	
 21388  002C62                     __end_ofPL633:
 21389                           	opt stack 0
 21390  002C62                     PL647:
 21391                           	opt stack 15
 21392  002C62  C0A3  FFF5         	movff	??_TCP_Snd+2,tablat
 21393  002C66  000D               	tblwt		*+
 21394  002C68  C0A4  FFF5         	movff	??_TCP_Snd+3,tablat
 21395  002C6C  000C               	tblwt		*
 21396  002C6E  0012               	return	
 21397  002C70                     __end_ofPL647:
 21398                           	opt stack 0
 21399  002C70                     PL651:
 21400                           	opt stack 15
 21401  002C70  0009               	tblrd		*+
 21402  002C72  CFF5 F0A9          	movff	tablat,??_TCP_Snd+8
 21403  002C76  0009               	tblrd		*+
 21404  002C78  CFF5 F0AA          	movff	tablat,??_TCP_Snd+9
 21405  002C7C  0012               	return	
 21406  002C7E                     __end_ofPL651:
 21407                           	opt stack 0
 21408  002C7E                     PL665:
 21409                           	opt stack 15
 21410  002C7E  CFEE F0D8          	movff	postinc0,TCP_Snd@tcpDataLength
 21411  002C82  CFEE F0D9          	movff	postinc0,TCP_Snd@tcpDataLength+1
 21412  002C86  0012               	return	
 21413  002C88                     __end_ofPL665:
 21414                           	opt stack 0
 21415  002C88                     PL671:
 21416                           	opt stack 15
 21417  002C88  0100               	movlb	0	; () banked
 21418  002C8A  51D8               	movf	TCP_Snd@tcpDataLength& (0+255),w,b
 21419  002C8C  5DA3               	subwf	(??_TCP_Snd+2)& (0+255),w,b
 21420  002C8E  51D9               	movf	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 21421  002C90  59A4               	subwfb	(??_TCP_Snd+3)& (0+255),w,b
 21422  002C92  0012               	return	
 21423  002C94                     __end_ofPL671:
 21424                           	opt stack 0
 21425  002C94                     PL701:
 21426                           	opt stack 15
 21427  002C94  0100               	movlb	0	; () banked
 21428  002C96  51A3               	movf	(??_TCP_Snd+2)& (0+255),w,b
 21429  002C98  6FA6               	movwf	(??_TCP_Snd+5)& (0+255),b
 21430  002C9A  6BA5               	clrf	(??_TCP_Snd+4)& (0+255),b
 21431  002C9C  0012               	return	
 21432  002C9E                     __end_ofPL701:
 21433                           	opt stack 0
 21434  002C9E                     PL707:
 21435                           	opt stack 15
 21436  002C9E  CFEE F0A9          	movff	postinc0,??_TCP_Snd+8
 21437  002CA2  CFEE F0AA          	movff	postinc0,??_TCP_Snd+9
 21438  002CA6  0012               	return	
 21439  002CA8                     __end_ofPL707:
 21440                           	opt stack 0
 21441  002CA8                     PL723:
 21442                           	opt stack 12
 21443  002CA8  6A26               	clrf	ETH_TxComputeChecksum@position+1,c
 21444  002CAA  0E1A               	movlw	26
 21445  002CAC  6E25               	movwf	ETH_TxComputeChecksum@position,c
 21446  002CAE  0C08               	retlw	8
 21447  002CB0                     __end_ofPL723:
 21448                           	opt stack 0
 21449  002CB0                     PL727:
 21450                           	opt stack 15
 21451  002CB0  C0A3  FFEE         	movff	??_TCP_Snd+2,postinc0
 21452  002CB4  C0A4  FFEF         	movff	??_TCP_Snd+3,indf0
 21453  002CB8  0012               	return	
 21454  002CBA                     __end_ofPL727:
 21455                           	opt stack 0
 21456  002CBA                     PL761:
 21457                           	opt stack 12
 21458  002CBA  6A1A               	clrf	ETH_WriteBlock@length+1,c
 21459  002CBC  0E14               	movlw	20
 21460  002CBE  6E19               	movwf	ETH_WriteBlock@length,c
 21461  002CC0  0C14               	retlw	20
 21462  002CC2                     __end_ofPL761:
 21463                           	opt stack 0
 21464                           tosu	equ	0xFFF
 21465                           tosh	equ	0xFFE
 21466                           tosl	equ	0xFFD
 21467                           pclath	equ	0xFFA
 21468                           tblptru	equ	0xFF8
 21469                           tblptrh	equ	0xFF7
 21470                           tblptrl	equ	0xFF6
 21471                           tablat	equ	0xFF5
 21472                           prodh	equ	0xFF4
 21473                           prodl	equ	0xFF3
 21474                           intcon	equ	0xFF2
 21475                           indf0	equ	0xFEF
 21476                           postinc0	equ	0xFEE
 21477                           fsr0h	equ	0xFEA
 21478                           fsr0l	equ	0xFE9
 21479                           wreg	equ	0xFE8
 21480                           postinc1	equ	0xFE6
 21481                           postdec1	equ	0xFE5
 21482                           plusw1	equ	0xFE3
 21483                           fsr1h	equ	0xFE2
 21484                           fsr1l	equ	0xFE1
 21485                           bsr	equ	0xFE0
 21486                           indf2	equ	0xFDF
 21487                           postinc2	equ	0xFDE
 21488                           postdec2	equ	0xFDD
 21489                           plusw2	equ	0xFDB
 21490                           fsr2h	equ	0xFDA
 21491                           fsr2l	equ	0xFD9
 21492                           status	equ	0xFD8
 21493                           
 21494 ;; *************** function _IPv4_Start *****************
 21495 ;; Defined at:
 21496 ;;		line 213 in file "../../TCPIP Library/source/ipv4.c"
 21497 ;; Parameters:    Size  Location     Type
 21498 ;;  destAddress     4   33[COMRAM] unsigned long 
 21499 ;;  protocol        1   37[COMRAM] enum E6803
 21500 ;; Auto vars:     Size  Location     Type
 21501 ;;  targetAddres    4   56[BANK0 ] unsigned long 
 21502 ;;  macAddress      2   60[BANK0 ] PTR const struct .
 21503 ;;		 -> arpMap.macAddress(6), broadcastMAC(6), arpMap(104), NULL(0), 
 21504 ;;  ret             1   62[BANK0 ] enum E6944
 21505 ;; Return value:  Size  Location     Type
 21506 ;;                  1    wreg      enum E366
 21507 ;; Registers used:
 21508 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21509 ;; Tracked objects:
 21510 ;;		On entry : 0/0
 21511 ;;		On exit  : F/0
 21512 ;;		Unchanged: 0/0
 21513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21514 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21515 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21516 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21517 ;;      Totals:        13       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21518 ;;Total ram usage:       20 bytes
 21519 ;; Hardware stack levels used:    1
 21520 ;; Hardware stack levels required when called:   11
 21521 ;; This function calls:
 21522 ;;		_ARPV4_Lookup
 21523 ;;		_ARPV4_Request
 21524 ;;		_ETH_Write16
 21525 ;;		_ETH_Write32
 21526 ;;		_ETH_Write8
 21527 ;;		_ETH_WriteStart
 21528 ;; This function is called by:
 21529 ;;		_ICMP_EchoReply
 21530 ;;		_TCP_Snd
 21531 ;;		_UDP_Start
 21532 ;; This function uses a non-reentrant model
 21533 ;;
 21534                           
 21535                           	psect	text85
 21536  004644                     __ptext85:
 21537                           	opt stack 0
 21538  004644                     _IPv4_Start:
 21539                           	opt stack 15
 21540                           
 21541                           ;ipv4.c: 215: error_msg ret = ERROR;
 21542                           
 21543                           ; BSR set to: 0
 21544                           ;incstack = 0
 21545  004644  0100               	movlb	0	; () banked
 21546  004646  6B9E               	clrf	IPv4_Start@ret& (0+255),b
 21547                           
 21548                           ; BSR set to: 0
 21549                           ;ipv4.c: 217: const mac48Address_t *macAddress;
 21550                           ;ipv4.c: 218: uint32_t targetAddress;
 21551                           ;ipv4.c: 221: if(((ipv4Address != 0) || (protocol == UDP))
 21552                           ;ipv4.c: 222: && (ipv4Address != 0x7F000001))
 21553  004648  D8B9               	call	PL695	;call to abstracted procedure
 21554  00464A  E103               	bnz	l8305
 21555                           
 21556                           ; BSR set to: 0
 21557  00464C  0E11               	movlw	17
 21558  00464E  1826               	xorwf	IPv4_Start@protocol,w,c
 21559  004650  E162               	bnz	l8319
 21560  004652                     l8305:
 21561                           
 21562                           ; BSR set to: 0
 21563  004652  0438               	decf	_ipv4Address,w,c
 21564  004654  E105               	bnz	u11840
 21565  004656  0E7F               	movlw	127
 21566  004658  183B               	xorwf	_ipv4Address+3,w,c
 21567  00465A  1039               	iorwf	_ipv4Address+1,w,c
 21568  00465C  103A               	iorwf	_ipv4Address+2,w,c
 21569  00465E  E05B               	bz	l8319
 21570  004660                     u11840:
 21571                           
 21572                           ; BSR set to: 0
 21573                           ;ipv4.c: 223: {
 21574                           ;ipv4.c: 224: if(destAddress != 0xFFFFFFFF)
 21575  004660  2822               	incf	IPv4_Start@destAddress,w,c
 21576  004662  E106               	bnz	u11850
 21577  004664  2823               	incf	IPv4_Start@destAddress+1,w,c
 21578  004666  E104               	bnz	u11850
 21579  004668  2824               	incf	IPv4_Start@destAddress+2,w,c
 21580  00466A  E102               	bnz	u11850
 21581  00466C  2825               	incf	IPv4_Start@destAddress+3,w,c
 21582  00466E  E056               	bz	l8323
 21583  004670                     u11850:
 21584                           
 21585                           ; BSR set to: 0
 21586                           ;ipv4.c: 225: {
 21587                           ;ipv4.c: 226: if((ipv4SubnetMask & destAddress) == (ipv4SubnetMask & ipv4Address))
 21588  004670  5038               	movf	_ipv4Address,w,c
 21589  004672  0101               	movlb	1	; () banked
 21590  004674  15C5               	andwf	_ipv4SubnetMask& (0+255),w,b
 21591  004676  6E27               	movwf	??_IPv4_Start& (0+255),c
 21592  004678  5039               	movf	_ipv4Address+1,w,c
 21593  00467A  15C6               	andwf	(_ipv4SubnetMask+1)& (0+255),w,b
 21594  00467C  6E28               	movwf	(??_IPv4_Start+1)& (0+255),c
 21595  00467E  503A               	movf	_ipv4Address+2,w,c
 21596  004680  15C7               	andwf	(_ipv4SubnetMask+2)& (0+255),w,b
 21597  004682  6E29               	movwf	(??_IPv4_Start+2)& (0+255),c
 21598  004684  503B               	movf	_ipv4Address+3,w,c
 21599  004686  15C8               	andwf	(_ipv4SubnetMask+3)& (0+255),w,b
 21600  004688  6E2A               	movwf	(??_IPv4_Start+3)& (0+255),c
 21601  00468A  5022               	movf	IPv4_Start@destAddress,w,c
 21602  00468C  15C5               	andwf	_ipv4SubnetMask& (0+255),w,b
 21603  00468E  6E2B               	movwf	(??_IPv4_Start+4)& (0+255),c
 21604  004690  5023               	movf	IPv4_Start@destAddress+1,w,c
 21605  004692  15C6               	andwf	(_ipv4SubnetMask+1)& (0+255),w,b
 21606  004694  6E2C               	movwf	(??_IPv4_Start+5)& (0+255),c
 21607  004696  5024               	movf	IPv4_Start@destAddress+2,w,c
 21608  004698  15C7               	andwf	(_ipv4SubnetMask+2)& (0+255),w,b
 21609  00469A  6E2D               	movwf	(??_IPv4_Start+6)& (0+255),c
 21610  00469C  5025               	movf	IPv4_Start@destAddress+3,w,c
 21611  00469E  15C8               	andwf	(_ipv4SubnetMask+3)& (0+255),w,b
 21612  0046A0  6E2E               	movwf	(??_IPv4_Start+7)& (0+255),c
 21613  0046A2  5027               	movf	??_IPv4_Start,w,c
 21614  0046A4  182B               	xorwf	??_IPv4_Start+4,w,c
 21615  0046A6  E112               	bnz	l936
 21616  0046A8  5028               	movf	??_IPv4_Start+1,w,c
 21617  0046AA  182C               	xorwf	??_IPv4_Start+5,w,c
 21618  0046AC  E10F               	bnz	l936
 21619  0046AE  5029               	movf	??_IPv4_Start+2,w,c
 21620  0046B0  182D               	xorwf	??_IPv4_Start+6,w,c
 21621  0046B2  E10C               	bnz	l936
 21622  0046B4  502A               	movf	??_IPv4_Start+3,w,c
 21623  0046B6  182E               	xorwf	??_IPv4_Start+7,w,c
 21624  0046B8  E109               	bnz	l936
 21625                           
 21626                           ; BSR set to: 1
 21627                           ;ipv4.c: 227: {
 21628                           ;ipv4.c: 228: targetAddress = destAddress;
 21629  0046BA  C022  F098         	movff	IPv4_Start@destAddress,IPv4_Start@targetAddress
 21630  0046BE  C023  F099         	movff	IPv4_Start@destAddress+1,IPv4_Start@targetAddress+1
 21631  0046C2  C024  F09A         	movff	IPv4_Start@destAddress+2,IPv4_Start@targetAddress+2
 21632  0046C6  C025  F09B         	movff	IPv4_Start@destAddress+3,IPv4_Start@targetAddress+3
 21633                           
 21634                           ;ipv4.c: 229: }
 21635  0046CA  D008               	goto	l8313
 21636  0046CC                     l936:
 21637                           
 21638                           ; BSR set to: 1
 21639                           ;ipv4.c: 230: else
 21640                           ;ipv4.c: 231: {
 21641                           ;ipv4.c: 232: targetAddress = ipv4Router;
 21642  0046CC  C224  F098         	movff	_ipv4Router,IPv4_Start@targetAddress
 21643  0046D0  C225  F099         	movff	_ipv4Router+1,IPv4_Start@targetAddress+1
 21644  0046D4  C226  F09A         	movff	_ipv4Router+2,IPv4_Start@targetAddress+2
 21645  0046D8  C227  F09B         	movff	_ipv4Router+3,IPv4_Start@targetAddress+3
 21646  0046DC                     l8313:
 21647                           
 21648                           ; BSR set to: 1
 21649                           ;ipv4.c: 233: }
 21650                           ;ipv4.c: 235: macAddress= ARPV4_Lookup(targetAddress);
 21651  0046DC  C098  F017         	movff	IPv4_Start@targetAddress,ARPV4_Lookup@ip_address
 21652  0046E0  C099  F018         	movff	IPv4_Start@targetAddress+1,ARPV4_Lookup@ip_address+1
 21653  0046E4  C09A  F019         	movff	IPv4_Start@targetAddress+2,ARPV4_Lookup@ip_address+2
 21654  0046E8  C09B  F01A         	movff	IPv4_Start@targetAddress+3,ARPV4_Lookup@ip_address+3
 21655  0046EC  ECF3  F02E         	call	_ARPV4_Lookup	;wreg free
 21656  0046F0  C017  F09C         	movff	?_ARPV4_Lookup,IPv4_Start@macAddress
 21657  0046F4  C018  F09D         	movff	?_ARPV4_Lookup+1,IPv4_Start@macAddress+1
 21658                           
 21659                           ; BSR set to: 1
 21660                           ;ipv4.c: 236: if(macAddress == 0)
 21661  0046F8  0100               	movlb	0	; () banked
 21662  0046FA  519C               	movf	IPv4_Start@macAddress& (0+255),w,b
 21663  0046FC  119D               	iorwf	(IPv4_Start@macAddress+1)& (0+255),w,b
 21664  0046FE  E114               	bnz	l8325
 21665                           
 21666                           ; BSR set to: 0
 21667                           ;ipv4.c: 237: {
 21668                           ;ipv4.c: 238: ret = ARPV4_Request(targetAddress);
 21669  004700  C098  F01D         	movff	IPv4_Start@targetAddress,ARPV4_Request@destAddress
 21670  004704  C099  F01E         	movff	IPv4_Start@targetAddress+1,ARPV4_Request@destAddress+1
 21671  004708  C09A  F01F         	movff	IPv4_Start@targetAddress+2,ARPV4_Request@destAddress+2
 21672  00470C  C09B  F020         	movff	IPv4_Start@targetAddress+3,ARPV4_Request@destAddress+3
 21673  004710  EC98  F024         	call	_ARPV4_Request	;wreg free
 21674  004714  6F9E               	movwf	IPv4_Start@ret& (0+255),b
 21675  004716                     l8319:
 21676                           
 21677                           ;ipv4.c: 239: return ret;
 21678  004716  0100               	movlb	0	; () banked
 21679  004718  519E               	movf	IPv4_Start@ret& (0+255),w,b
 21680  00471A  0012               	return	
 21681  00471C                     l8323:
 21682                           
 21683                           ; BSR set to: 0
 21684                           ;ipv4.c: 242: else
 21685                           ;ipv4.c: 243: {
 21686                           ;ipv4.c: 244: macAddress = &broadcastMAC;
 21687  00471C  0E28               	movlw	low _broadcastMAC
 21688  00471E  6F9C               	movwf	IPv4_Start@macAddress& (0+255),b
 21689  004720  519C               	movf	IPv4_Start@macAddress& (0+255),w,b
 21690  004722  A4D8               	btfss	status,2,c
 21691  004724  0E10               	movlw	high __smallconst
 21692  004726  6F9D               	movwf	(IPv4_Start@macAddress+1)& (0+255),b
 21693  004728                     l8325:
 21694                           
 21695                           ; BSR set to: 0
 21696                           ;ipv4.c: 245: }
 21697                           ;ipv4.c: 246: ret = ETH_WriteStart(macAddress, 0x0800);
 21698  004728  C09C  F017         	movff	IPv4_Start@macAddress,ETH_WriteStart@dest_mac
 21699  00472C  C09D  F018         	movff	IPv4_Start@macAddress+1,ETH_WriteStart@dest_mac+1
 21700  004730  0E08               	movlw	8
 21701  004732  6E1A               	movwf	ETH_WriteStart@type+1,c
 21702  004734  6A19               	clrf	ETH_WriteStart@type,c
 21703  004736  EC8A  F026         	call	_ETH_WriteStart	;wreg free
 21704  00473A  0100               	movlb	0	; () banked
 21705  00473C  6F9E               	movwf	IPv4_Start@ret& (0+255),b
 21706                           
 21707                           ; BSR set to: 0
 21708                           ;ipv4.c: 247: if(ret == SUCCESS)
 21709  00473E  059E               	decf	IPv4_Start@ret& (0+255),w,b
 21710  004740  E1EA               	bnz	l8319
 21711                           
 21712                           ; BSR set to: 0
 21713                           ;ipv4.c: 248: {
 21714                           ;ipv4.c: 249: ETH_Write16(0x4500);
 21715  004742  0E45               	movlw	69
 21716  004744  6E18               	movwf	ETH_Write16@data+1,c
 21717  004746  6A17               	clrf	ETH_Write16@data,c
 21718  004748  EC72  F033         	call	_ETH_Write16	;wreg free
 21719                           
 21720                           ;ipv4.c: 250: ETH_Write16(0);
 21721  00474C  6A18               	clrf	ETH_Write16@data+1,c
 21722  00474E  6A17               	clrf	ETH_Write16@data,c
 21723  004750  EC72  F033         	call	_ETH_Write16	;wreg free
 21724                           
 21725                           ;ipv4.c: 251: ETH_Write32(0xAA554000);
 21726  004754  6A17               	clrf	ETH_Write32@data,c
 21727  004756  0E40               	movlw	64
 21728  004758  6E18               	movwf	ETH_Write32@data+1,c
 21729  00475A  0E55               	movlw	85
 21730  00475C  6E19               	movwf	ETH_Write32@data+2,c
 21731  00475E  0EAA               	movlw	170
 21732  004760  6E1A               	movwf	ETH_Write32@data+3,c
 21733  004762  EC25  F033         	call	_ETH_Write32	;wreg free
 21734                           
 21735                           ;ipv4.c: 252: ETH_Write8(64u);
 21736  004766  0E40               	movlw	64
 21737  004768  EC93  F033         	call	_ETH_Write8
 21738                           
 21739                           ;ipv4.c: 253: ETH_Write8(protocol);
 21740  00476C  5026               	movf	IPv4_Start@protocol,w,c
 21741  00476E  EC93  F033         	call	_ETH_Write8
 21742                           
 21743                           ;ipv4.c: 254: ETH_Write16(0);
 21744  004772  6A18               	clrf	ETH_Write16@data+1,c
 21745  004774  6A17               	clrf	ETH_Write16@data,c
 21746  004776  EC72  F033         	call	_ETH_Write16	;wreg free
 21747                           
 21748                           ;ipv4.c: 255: ETH_Write32(ipv4Address);
 21749  00477A  EC0D  F023         	call	PL525	;call to abstracted procedure
 21750  00477E  EC25  F033         	call	_ETH_Write32	;wreg free
 21751                           
 21752                           ;ipv4.c: 256: ETH_Write32(destAddress);
 21753  004782  C022  F017         	movff	IPv4_Start@destAddress,ETH_Write32@data
 21754  004786  C023  F018         	movff	IPv4_Start@destAddress+1,ETH_Write32@data+1
 21755  00478A  C024  F019         	movff	IPv4_Start@destAddress+2,ETH_Write32@data+2
 21756  00478E  C025  F01A         	movff	IPv4_Start@destAddress+3,ETH_Write32@data+3
 21757  004792  EC25  F033         	call	_ETH_Write32	;wreg free
 21758                           
 21759                           ;ipv4.c: 259: ipv4Header.srcIpAddress = ipv4Address;
 21760  004796  C038  F2A5         	movff	_ipv4Address,_ipv4Header+12
 21761  00479A  C039  F2A6         	movff	_ipv4Address+1,_ipv4Header+13
 21762  00479E  C03A  F2A7         	movff	_ipv4Address+2,_ipv4Header+14
 21763  0047A2  C03B  F2A8         	movff	_ipv4Address+3,_ipv4Header+15
 21764                           
 21765                           ;ipv4.c: 260: ipv4Header.dstIpAddress = destAddress;
 21766  0047A6  C022  F2A9         	movff	IPv4_Start@destAddress,_ipv4Header+16
 21767  0047AA  C023  F2AA         	movff	IPv4_Start@destAddress+1,_ipv4Header+17
 21768  0047AE  C024  F2AB         	movff	IPv4_Start@destAddress+2,_ipv4Header+18
 21769  0047B2  C025  F2AC         	movff	IPv4_Start@destAddress+3,_ipv4Header+19
 21770                           
 21771                           ;ipv4.c: 261: ipv4Header.protocol = protocol;
 21772  0047B6  C026  F2A2         	movff	IPv4_Start@protocol,_ipv4Header+9
 21773  0047BA  D7AD               	goto	l8319
 21774  0047BC                     __end_of_IPv4_Start:
 21775                           	opt stack 0
 21776  0047BC                     PL695:
 21777                           	opt stack 18
 21778  0047BC  5038               	movf	_ipv4Address,w,c
 21779  0047BE  1039               	iorwf	_ipv4Address+1,w,c
 21780  0047C0  103A               	iorwf	_ipv4Address+2,w,c
 21781  0047C2  103B               	iorwf	_ipv4Address+3,w,c
 21782  0047C4  0012               	return	
 21783  0047C6                     __end_ofPL695:
 21784                           	opt stack 0
 21785                           tosu	equ	0xFFF
 21786                           tosh	equ	0xFFE
 21787                           tosl	equ	0xFFD
 21788                           pclath	equ	0xFFA
 21789                           tblptru	equ	0xFF8
 21790                           tblptrh	equ	0xFF7
 21791                           tblptrl	equ	0xFF6
 21792                           tablat	equ	0xFF5
 21793                           prodh	equ	0xFF4
 21794                           prodl	equ	0xFF3
 21795                           intcon	equ	0xFF2
 21796                           indf0	equ	0xFEF
 21797                           postinc0	equ	0xFEE
 21798                           fsr0h	equ	0xFEA
 21799                           fsr0l	equ	0xFE9
 21800                           wreg	equ	0xFE8
 21801                           postinc1	equ	0xFE6
 21802                           postdec1	equ	0xFE5
 21803                           plusw1	equ	0xFE3
 21804                           fsr1h	equ	0xFE2
 21805                           fsr1l	equ	0xFE1
 21806                           bsr	equ	0xFE0
 21807                           indf2	equ	0xFDF
 21808                           postinc2	equ	0xFDE
 21809                           postdec2	equ	0xFDD
 21810                           plusw2	equ	0xFDB
 21811                           fsr2h	equ	0xFDA
 21812                           fsr2l	equ	0xFD9
 21813                           status	equ	0xFD8
 21814                           
 21815 ;; *************** function _ETH_Write8 *****************
 21816 ;; Defined at:
 21817 ;;		line 465 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 21818 ;; Parameters:    Size  Location     Type
 21819 ;;  data            1    wreg     unsigned char 
 21820 ;; Auto vars:     Size  Location     Type
 21821 ;;  data            1   22[COMRAM] unsigned char 
 21822 ;; Return value:  Size  Location     Type
 21823 ;;		None               void
 21824 ;; Registers used:
 21825 ;;		wreg, status,2, cstack
 21826 ;; Tracked objects:
 21827 ;;		On entry : 0/0
 21828 ;;		On exit  : 0/0
 21829 ;;		Unchanged: 0/0
 21830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21832 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21834 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21835 ;;Total ram usage:        1 bytes
 21836 ;; Hardware stack levels used:    1
 21837 ;; Hardware stack levels required when called:    9
 21838 ;; This function calls:
 21839 ;;		_ETH_EdataWrite
 21840 ;; This function is called by:
 21841 ;;		_DHCP_Request
 21842 ;;		_DHCP_WriteZeros
 21843 ;;		_IPv4_Start
 21844 ;; This function uses a non-reentrant model
 21845 ;;
 21846                           
 21847                           	psect	text86
 21848  006726                     __ptext86:
 21849                           	opt stack 0
 21850  006726                     _ETH_Write8:
 21851                           	opt stack 16
 21852                           
 21853                           ; BSR set to: 0
 21854                           ;incstack = 0
 21855                           ;ETH_Write8@data stored from wreg
 21856  006726  6E17               	movwf	ETH_Write8@data,c
 21857                           
 21858                           ;j60_driver.c: 467: ETH_EdataWrite(data);
 21859  006728  5017               	movf	ETH_Write8@data,w,c
 21860  00672A                     i18L__ptext100:
 21861                           	opt stack 0
 21862  00672A                     i18L_ETH_EdataWrite:
 21863                           	opt stack 0
 21864  00672A                     i18Ll7821:
 21865                           	opt stack 16
 21866  00672A  CFE8 FF61          	movff	wreg,3937	;# 
 21867  00672E                     i18Ll463:
 21868                           	opt stack 0
 21869  00672E  0012               	return	
 21870  006730                     __end_of_ETH_Write8:
 21871                           	opt stack 0
 21872                           tosu	equ	0xFFF
 21873                           tosh	equ	0xFFE
 21874                           tosl	equ	0xFFD
 21875                           pclath	equ	0xFFA
 21876                           tblptru	equ	0xFF8
 21877                           tblptrh	equ	0xFF7
 21878                           tblptrl	equ	0xFF6
 21879                           tablat	equ	0xFF5
 21880                           prodh	equ	0xFF4
 21881                           prodl	equ	0xFF3
 21882                           intcon	equ	0xFF2
 21883                           indf0	equ	0xFEF
 21884                           postinc0	equ	0xFEE
 21885                           fsr0h	equ	0xFEA
 21886                           fsr0l	equ	0xFE9
 21887                           wreg	equ	0xFE8
 21888                           postinc1	equ	0xFE6
 21889                           postdec1	equ	0xFE5
 21890                           plusw1	equ	0xFE3
 21891                           fsr1h	equ	0xFE2
 21892                           fsr1l	equ	0xFE1
 21893                           bsr	equ	0xFE0
 21894                           indf2	equ	0xFDF
 21895                           postinc2	equ	0xFDE
 21896                           postdec2	equ	0xFDD
 21897                           plusw2	equ	0xFDB
 21898                           fsr2h	equ	0xFDA
 21899                           fsr2l	equ	0xFD9
 21900                           status	equ	0xFD8
 21901                           
 21902 ;; *************** function _ETH_Write32 *****************
 21903 ;; Defined at:
 21904 ;;		line 495 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 21905 ;; Parameters:    Size  Location     Type
 21906 ;;  data            4   22[COMRAM] unsigned long 
 21907 ;; Auto vars:     Size  Location     Type
 21908 ;;		None
 21909 ;; Return value:  Size  Location     Type
 21910 ;;		None               void
 21911 ;; Registers used:
 21912 ;;		wreg, status,2, cstack
 21913 ;; Tracked objects:
 21914 ;;		On entry : 0/0
 21915 ;;		On exit  : 0/0
 21916 ;;		Unchanged: 0/0
 21917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21918 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21921 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21922 ;;Total ram usage:        4 bytes
 21923 ;; Hardware stack levels used:    1
 21924 ;; Hardware stack levels required when called:    9
 21925 ;; This function calls:
 21926 ;;		_ETH_EdataWrite
 21927 ;; This function is called by:
 21928 ;;		_DHCP_Request
 21929 ;;		_IPv4_Start
 21930 ;; This function uses a non-reentrant model
 21931 ;;
 21932                           
 21933                           	psect	text87
 21934  00664A                     __ptext87:
 21935                           	opt stack 0
 21936  00664A                     _ETH_Write32:
 21937                           	opt stack 16
 21938                           
 21939                           ;j60_driver.c: 497: ETH_EdataWrite(data >> 24);
 21940                           
 21941                           ;incstack = 0
 21942  00664A  501A               	movf	ETH_Write32@data+3,w,c
 21943  00664C                     i19L__ptext100:
 21944                           	opt stack 0
 21945  00664C                     i19L_ETH_EdataWrite:
 21946                           	opt stack 0
 21947  00664C                     i19Ll7821:
 21948                           	opt stack 16
 21949  00664C  CFE8 FF61          	movff	wreg,3937	;# 
 21950  006650                     i19Ll463:
 21951                           	opt stack 16
 21952                           
 21953                           ;j60_driver.c: 498: ETH_EdataWrite(data >> 16);
 21954  006650  5019               	movf	ETH_Write32@data+2,w,c
 21955  006652                     i20L__ptext100:
 21956                           	opt stack 0
 21957  006652                     i20L_ETH_EdataWrite:
 21958                           	opt stack 0
 21959  006652                     i20Ll7821:
 21960                           	opt stack 16
 21961  006652  CFE8 FF61          	movff	wreg,3937	;# 
 21962  006656                     i20Ll463:
 21963                           	opt stack 16
 21964                           
 21965                           ;j60_driver.c: 499: ETH_EdataWrite(data >> 8);
 21966  006656  5018               	movf	ETH_Write32@data+1,w,c
 21967  006658                     i21L__ptext100:
 21968                           	opt stack 0
 21969  006658                     i21L_ETH_EdataWrite:
 21970                           	opt stack 0
 21971  006658                     i21Ll7821:
 21972                           	opt stack 16
 21973  006658  CFE8 FF61          	movff	wreg,3937	;# 
 21974  00665C                     i21Ll463:
 21975                           	opt stack 16
 21976                           
 21977                           ;j60_driver.c: 500: ETH_EdataWrite(data);
 21978  00665C  5017               	movf	ETH_Write32@data,w,c
 21979  00665E                     i22L__ptext100:
 21980                           	opt stack 0
 21981  00665E                     i22L_ETH_EdataWrite:
 21982                           	opt stack 0
 21983  00665E                     i22Ll7821:
 21984                           	opt stack 16
 21985  00665E  CFE8 FF61          	movff	wreg,3937	;# 
 21986  006662                     i22Ll463:
 21987                           	opt stack 0
 21988  006662  0012               	return	
 21989  006664                     __end_of_ETH_Write32:
 21990                           	opt stack 0
 21991                           tosu	equ	0xFFF
 21992                           tosh	equ	0xFFE
 21993                           tosl	equ	0xFFD
 21994                           pclath	equ	0xFFA
 21995                           tblptru	equ	0xFF8
 21996                           tblptrh	equ	0xFF7
 21997                           tblptrl	equ	0xFF6
 21998                           tablat	equ	0xFF5
 21999                           prodh	equ	0xFF4
 22000                           prodl	equ	0xFF3
 22001                           intcon	equ	0xFF2
 22002                           indf0	equ	0xFEF
 22003                           postinc0	equ	0xFEE
 22004                           fsr0h	equ	0xFEA
 22005                           fsr0l	equ	0xFE9
 22006                           wreg	equ	0xFE8
 22007                           postinc1	equ	0xFE6
 22008                           postdec1	equ	0xFE5
 22009                           plusw1	equ	0xFE3
 22010                           fsr1h	equ	0xFE2
 22011                           fsr1l	equ	0xFE1
 22012                           bsr	equ	0xFE0
 22013                           indf2	equ	0xFDF
 22014                           postinc2	equ	0xFDE
 22015                           postdec2	equ	0xFDD
 22016                           plusw2	equ	0xFDB
 22017                           fsr2h	equ	0xFDA
 22018                           fsr2l	equ	0xFD9
 22019                           status	equ	0xFD8
 22020                           
 22021 ;; *************** function _ETH_Write16 *****************
 22022 ;; Defined at:
 22023 ;;		line 474 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 22024 ;; Parameters:    Size  Location     Type
 22025 ;;  data            2   22[COMRAM] unsigned int 
 22026 ;; Auto vars:     Size  Location     Type
 22027 ;;		None
 22028 ;; Return value:  Size  Location     Type
 22029 ;;		None               void
 22030 ;; Registers used:
 22031 ;;		wreg, status,2, cstack
 22032 ;; Tracked objects:
 22033 ;;		On entry : 0/0
 22034 ;;		On exit  : 0/0
 22035 ;;		Unchanged: 0/0
 22036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22037 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22040 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22041 ;;Total ram usage:        2 bytes
 22042 ;; Hardware stack levels used:    1
 22043 ;; Hardware stack levels required when called:    9
 22044 ;; This function calls:
 22045 ;;		_ETH_EdataWrite
 22046 ;; This function is called by:
 22047 ;;		_DHCP_Request
 22048 ;;		_ICMP_EchoReply
 22049 ;;		_IPv4_Start
 22050 ;;		_UDP_Start
 22051 ;; This function uses a non-reentrant model
 22052 ;;
 22053                           
 22054                           	psect	text88
 22055  0066E4                     __ptext88:
 22056                           	opt stack 0
 22057  0066E4                     _ETH_Write16:
 22058                           	opt stack 16
 22059                           
 22060                           ;j60_driver.c: 476: ETH_EdataWrite(data >> 8);
 22061                           
 22062                           ;incstack = 0
 22063  0066E4  5018               	movf	ETH_Write16@data+1,w,c
 22064  0066E6                     i23L__ptext100:
 22065                           	opt stack 0
 22066  0066E6                     i23L_ETH_EdataWrite:
 22067                           	opt stack 0
 22068  0066E6                     i23Ll7821:
 22069                           	opt stack 16
 22070  0066E6  CFE8 FF61          	movff	wreg,3937	;# 
 22071  0066EA                     i23Ll463:
 22072                           	opt stack 16
 22073                           
 22074                           ;j60_driver.c: 477: ETH_EdataWrite(data);
 22075  0066EA  5017               	movf	ETH_Write16@data,w,c
 22076  0066EC                     i24L__ptext100:
 22077                           	opt stack 0
 22078  0066EC                     i24L_ETH_EdataWrite:
 22079                           	opt stack 0
 22080  0066EC                     i24Ll7821:
 22081                           	opt stack 16
 22082  0066EC  CFE8 FF61          	movff	wreg,3937	;# 
 22083  0066F0                     i24Ll463:
 22084                           	opt stack 0
 22085  0066F0  0012               	return	
 22086  0066F2                     __end_of_ETH_Write16:
 22087                           	opt stack 0
 22088                           tosu	equ	0xFFF
 22089                           tosh	equ	0xFFE
 22090                           tosl	equ	0xFFD
 22091                           pclath	equ	0xFFA
 22092                           tblptru	equ	0xFF8
 22093                           tblptrh	equ	0xFF7
 22094                           tblptrl	equ	0xFF6
 22095                           tablat	equ	0xFF5
 22096                           prodh	equ	0xFF4
 22097                           prodl	equ	0xFF3
 22098                           intcon	equ	0xFF2
 22099                           indf0	equ	0xFEF
 22100                           postinc0	equ	0xFEE
 22101                           fsr0h	equ	0xFEA
 22102                           fsr0l	equ	0xFE9
 22103                           wreg	equ	0xFE8
 22104                           postinc1	equ	0xFE6
 22105                           postdec1	equ	0xFE5
 22106                           plusw1	equ	0xFE3
 22107                           fsr1h	equ	0xFE2
 22108                           fsr1l	equ	0xFE1
 22109                           bsr	equ	0xFE0
 22110                           indf2	equ	0xFDF
 22111                           postinc2	equ	0xFDE
 22112                           postdec2	equ	0xFDD
 22113                           plusw2	equ	0xFDB
 22114                           fsr2h	equ	0xFDA
 22115                           fsr2l	equ	0xFD9
 22116                           status	equ	0xFD8
 22117                           
 22118 ;; *************** function _ARPV4_Request *****************
 22119 ;; Defined at:
 22120 ;;		line 194 in file "../../TCPIP Library/source/arpv4.c"
 22121 ;; Parameters:    Size  Location     Type
 22122 ;;  destAddress     4   28[COMRAM] unsigned long 
 22123 ;; Auto vars:     Size  Location     Type
 22124 ;;  header         28   28[BANK0 ] struct .
 22125 ;;  ret             1   27[BANK0 ] enum E450
 22126 ;; Return value:  Size  Location     Type
 22127 ;;                  1    wreg      enum E450
 22128 ;; Registers used:
 22129 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22130 ;; Tracked objects:
 22131 ;;		On entry : F/0
 22132 ;;		On exit  : F/0
 22133 ;;		Unchanged: 0/0
 22134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22135 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22136 ;;      Locals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22137 ;;      Temps:          0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22138 ;;      Totals:         4      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22139 ;;Total ram usage:       60 bytes
 22140 ;; Hardware stack levels used:    1
 22141 ;; Hardware stack levels required when called:   10
 22142 ;; This function calls:
 22143 ;;		_ETH_GetMAC
 22144 ;;		_ETH_Send
 22145 ;;		_ETH_WriteBlock
 22146 ;;		_ETH_WriteStart
 22147 ;; This function is called by:
 22148 ;;		_IPv4_Start
 22149 ;; This function uses a non-reentrant model
 22150 ;;
 22151                           
 22152                           	psect	text89
 22153  004930                     __ptext89:
 22154                           	opt stack 0
 22155  004930                     _ARPV4_Request:
 22156                           	opt stack 15
 22157                           
 22158                           ; BSR set to: 0
 22159                           ;arpv4.c: 200: arpHeader_t header;
 22160                           ;arpv4.c: 201: header.htype = ((((uint16_t)1 & (uint16_t)0xFF00) >> 8) | (((uint16_t)1 &
      +                           (uint16_t)0x00FF) << 8));
 22161                           
 22162                           ; BSR set to: 0
 22163                           
 22164                           ;incstack = 0
 22165  004930  0E01               	movlw	1
 22166  004932  6F7D               	movwf	(ARPV4_Request@header+1)& (0+255),b
 22167  004934  6B7C               	clrf	ARPV4_Request@header& (0+255),b
 22168                           
 22169                           ;arpv4.c: 202: header.ptype = ((((uint16_t)0x0800 & (uint16_t)0xFF00) >> 8) | (((uint16_
      +                          t)0x0800 & (uint16_t)0x00FF) << 8));
 22170  004936  6B7F               	clrf	(ARPV4_Request@header+3)& (0+255),b
 22171  004938  0E08               	movlw	8
 22172  00493A  6F7E               	movwf	(ARPV4_Request@header+2)& (0+255),b
 22173                           
 22174                           ;arpv4.c: 203: header.hlen = 6;
 22175  00493C  0E06               	movlw	6
 22176  00493E  6F80               	movwf	(ARPV4_Request@header+4)& (0+255),b
 22177                           
 22178                           ;arpv4.c: 204: header.plen = 4;
 22179  004940  0E04               	movlw	4
 22180  004942  6F81               	movwf	(ARPV4_Request@header+5)& (0+255),b
 22181                           
 22182                           ;arpv4.c: 205: header.oper = ((((uint16_t)1 & (uint16_t)0xFF00) >> 8) | (((uint16_t)1 & 
      +                          (uint16_t)0x00FF) << 8));
 22183  004944  0E01               	movlw	1
 22184  004946  6F83               	movwf	(ARPV4_Request@header+7)& (0+255),b
 22185  004948  6B82               	clrf	(ARPV4_Request@header+6)& (0+255),b
 22186                           
 22187                           ; BSR set to: 0
 22188                           ;arpv4.c: 206: ETH_GetMAC((char*)&header.sha);
 22189  00494A  0E7C               	movlw	ARPV4_Request@header& (0+255)
 22190  00494C  0F08               	addlw	8
 22191  00494E  ECDC  F030         	call	_ETH_GetMAC
 22192                           
 22193                           ;arpv4.c: 207: header.spa = ((((uint32_t)ipv4Address&(uint32_t)0xff000000) >> 24) | (((u
      +                          int32_t)ipv4Address&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)ipv4Address&(uint32_t)0x00
      +                          00ff00) << 8) | (((uint32_t)ipv4Address&(uint32_t)0x000000ff) << 24) );
 22194  004952  5038               	movf	_ipv4Address,w,c
 22195  004954  0100               	movlb	0	; () banked
 22196  004956  D882               	call	PL589	;call to abstracted procedure
 22197  004958  5039               	movf	_ipv4Address+1,w,c
 22198  00495A  D874               	call	PL575	;call to abstracted procedure
 22199  00495C  503A               	movf	_ipv4Address+2,w,c
 22200  00495E  D865               	call	PL565	;call to abstracted procedure
 22201  004960  503B               	movf	_ipv4Address+3,w,c
 22202  004962  6F72               	movwf	(??_ARPV4_Request+18)& (0+255),b
 22203  004964  0E19               	movlw	25
 22204  004966  D001               	goto	u11360
 22205  004968                     u11365:
 22206  004968  D884               	call	PL669	;call to abstracted procedure
 22207  00496A                     u11360:
 22208  00496A  2EE8               	decfsz	wreg,f,c
 22209  00496C  D7FD               	goto	u11365
 22210  00496E  D842               	call	PL475	;call to abstracted procedure
 22211  004970  6F8A               	movwf	(ARPV4_Request@header+14)& (0+255),b
 22212  004972  5161               	movf	(??_ARPV4_Request+1)& (0+255),w,b
 22213  004974  1178               	iorwf	(??_ARPV4_Request+24)& (0+255),w,b
 22214  004976  6F8B               	movwf	(ARPV4_Request@header+15)& (0+255),b
 22215  004978  5162               	movf	(??_ARPV4_Request+2)& (0+255),w,b
 22216  00497A  1179               	iorwf	(??_ARPV4_Request+25)& (0+255),w,b
 22217  00497C  6F8C               	movwf	(ARPV4_Request@header+16)& (0+255),b
 22218  00497E  5163               	movf	(??_ARPV4_Request+3)& (0+255),w,b
 22219  004980  117A               	iorwf	(??_ARPV4_Request+26)& (0+255),w,b
 22220  004982  6F8D               	movwf	(ARPV4_Request@header+17)& (0+255),b
 22221                           
 22222                           ; BSR set to: 0
 22223                           ;arpv4.c: 208: header.tpa= ((((uint32_t)destAddress&(uint32_t)0xff000000) >> 24) | (((ui
      +                          nt32_t)destAddress&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)destAddress&(uint32_t)0x000
      +                          0ff00) << 8) | (((uint32_t)destAddress&(uint32_t)0x000000ff) << 24) );
 22224  004984  501D               	movf	ARPV4_Request@destAddress,w,c
 22225  004986  D86A               	call	PL589	;call to abstracted procedure
 22226  004988  501E               	movf	ARPV4_Request@destAddress+1,w,c
 22227  00498A  D85C               	call	PL575	;call to abstracted procedure
 22228  00498C  501F               	movf	ARPV4_Request@destAddress+2,w,c
 22229  00498E  D84D               	call	PL565	;call to abstracted procedure
 22230  004990  5020               	movf	ARPV4_Request@destAddress+3,w,c
 22231  004992  6F72               	movwf	(??_ARPV4_Request+18)& (0+255),b
 22232  004994  0E19               	movlw	25
 22233  004996  D001               	goto	u11370
 22234  004998                     u11375:
 22235  004998  D86C               	call	PL669	;call to abstracted procedure
 22236  00499A                     u11370:
 22237  00499A  2EE8               	decfsz	wreg,f,c
 22238  00499C  D7FD               	goto	u11375
 22239  00499E  D82A               	call	PL475	;call to abstracted procedure
 22240  0049A0  6F94               	movwf	(ARPV4_Request@header+24)& (0+255),b
 22241  0049A2  5161               	movf	(??_ARPV4_Request+1)& (0+255),w,b
 22242  0049A4  1178               	iorwf	(??_ARPV4_Request+24)& (0+255),w,b
 22243  0049A6  6F95               	movwf	(ARPV4_Request@header+25)& (0+255),b
 22244  0049A8  5162               	movf	(??_ARPV4_Request+2)& (0+255),w,b
 22245  0049AA  1179               	iorwf	(??_ARPV4_Request+25)& (0+255),w,b
 22246  0049AC  6F96               	movwf	(ARPV4_Request@header+26)& (0+255),b
 22247  0049AE  5163               	movf	(??_ARPV4_Request+3)& (0+255),w,b
 22248  0049B0  117A               	iorwf	(??_ARPV4_Request+26)& (0+255),w,b
 22249  0049B2  6F97               	movwf	(ARPV4_Request@header+27)& (0+255),b
 22250                           
 22251                           ; BSR set to: 0
 22252                           ;arpv4.c: 209: header.tha.s.byte1 = 0;
 22253  0049B4  6B8E               	clrf	(ARPV4_Request@header+18)& (0+255),b
 22254                           
 22255                           ; BSR set to: 0
 22256                           ;arpv4.c: 210: header.tha.s.byte2 = 0;
 22257  0049B6  6B8F               	clrf	(ARPV4_Request@header+19)& (0+255),b
 22258                           
 22259                           ; BSR set to: 0
 22260                           ;arpv4.c: 211: header.tha.s.byte3 = 0;
 22261  0049B8  6B90               	clrf	(ARPV4_Request@header+20)& (0+255),b
 22262                           
 22263                           ; BSR set to: 0
 22264                           ;arpv4.c: 212: header.tha.s.byte4 = 0;
 22265  0049BA  6B91               	clrf	(ARPV4_Request@header+21)& (0+255),b
 22266                           
 22267                           ; BSR set to: 0
 22268                           ;arpv4.c: 213: header.tha.s.byte5 = 0;
 22269  0049BC  6B92               	clrf	(ARPV4_Request@header+22)& (0+255),b
 22270                           
 22271                           ; BSR set to: 0
 22272                           ;arpv4.c: 214: header.tha.s.byte6 = 0;
 22273  0049BE  6B93               	clrf	(ARPV4_Request@header+23)& (0+255),b
 22274                           
 22275                           ; BSR set to: 0
 22276                           ;arpv4.c: 216: ret = ETH_WriteStart(&broadcastMAC,0x0806);
 22277  0049C0  0E28               	movlw	low _broadcastMAC
 22278  0049C2  6E17               	movwf	ETH_WriteStart@dest_mac,c
 22279  0049C4  5017               	movf	ETH_WriteStart@dest_mac,w,c
 22280  0049C6  A4D8               	btfss	status,2,c
 22281  0049C8  0E10               	movlw	high __smallconst
 22282  0049CA  6E18               	movwf	ETH_WriteStart@dest_mac+1,c
 22283  0049CC  D85E               	call	PL731	;call to abstracted procedure
 22284  0049CE  EC8A  F026         	call	_ETH_WriteStart	;wreg free
 22285  0049D2  0100               	movlb	0	; () banked
 22286  0049D4  6F7B               	movwf	ARPV4_Request@ret& (0+255),b
 22287                           
 22288                           ; BSR set to: 0
 22289                           ;arpv4.c: 217: if(ret == SUCCESS)
 22290  0049D6  057B               	decf	ARPV4_Request@ret& (0+255),w,b
 22291  0049D8  E10B               	bnz	l8083
 22292                           
 22293                           ; BSR set to: 0
 22294                           ;arpv4.c: 218: {
 22295                           ;arpv4.c: 219: ETH_WriteBlock((char*)&header,sizeof(arpHeader_t));
 22296  0049DA  0E7C               	movlw	low ARPV4_Request@header
 22297  0049DC  D850               	call	PL683	;call to abstracted procedure
 22298  0049DE  ECB2  F02F         	call	_ETH_WriteBlock	;wreg free
 22299                           
 22300                           ;arpv4.c: 220: ret = ETH_Send();
 22301  0049E2  ECF7  F030         	call	_ETH_Send	;wreg free
 22302  0049E6  0100               	movlb	0	; () banked
 22303  0049E8  6F7B               	movwf	ARPV4_Request@ret& (0+255),b
 22304                           
 22305                           ; BSR set to: 0
 22306                           ;arpv4.c: 221: if(ret == SUCCESS)
 22307  0049EA  057B               	decf	ARPV4_Request@ret& (0+255),w,b
 22308  0049EC  E101               	bnz	l8083
 22309                           
 22310                           ; BSR set to: 0
 22311                           ;arpv4.c: 222: {
 22312                           ;arpv4.c: 223: return MAC_NOT_FOUND;
 22313  0049EE  0C05               	retlw	5
 22314  0049F0                     l8083:
 22315                           
 22316                           ; BSR set to: 0
 22317                           ;arpv4.c: 224: }
 22318                           ;arpv4.c: 225: }
 22319                           ;arpv4.c: 226: return ret;
 22320  0049F0  517B               	movf	ARPV4_Request@ret& (0+255),w,b
 22321                           
 22322                           ; BSR set to: 0
 22323  0049F2  0012               	return		;funcret
 22324  0049F4                     __end_of_ARPV4_Request:
 22325                           	opt stack 0
 22326  0049F4                     PL475:
 22327                           	opt stack 15
 22328  0049F4  516B               	movf	(??_ARPV4_Request+11)& (0+255),w,b
 22329  0049F6  116F               	iorwf	(??_ARPV4_Request+15)& (0+255),w,b
 22330  0049F8  6F73               	movwf	(??_ARPV4_Request+19)& (0+255),b
 22331  0049FA  516C               	movf	(??_ARPV4_Request+12)& (0+255),w,b
 22332  0049FC  1170               	iorwf	(??_ARPV4_Request+16)& (0+255),w,b
 22333  0049FE  6F74               	movwf	(??_ARPV4_Request+20)& (0+255),b
 22334  004A00  516D               	movf	(??_ARPV4_Request+13)& (0+255),w,b
 22335  004A02  1171               	iorwf	(??_ARPV4_Request+17)& (0+255),w,b
 22336  004A04  6F75               	movwf	(??_ARPV4_Request+21)& (0+255),b
 22337  004A06  516E               	movf	(??_ARPV4_Request+14)& (0+255),w,b
 22338  004A08  1172               	iorwf	(??_ARPV4_Request+18)& (0+255),w,b
 22339  004A0A  6F76               	movwf	(??_ARPV4_Request+22)& (0+255),b
 22340  004A0C  5164               	movf	(??_ARPV4_Request+4)& (0+255),w,b
 22341  004A0E  1173               	iorwf	(??_ARPV4_Request+19)& (0+255),w,b
 22342  004A10  6F77               	movwf	(??_ARPV4_Request+23)& (0+255),b
 22343  004A12  5165               	movf	(??_ARPV4_Request+5)& (0+255),w,b
 22344  004A14  1174               	iorwf	(??_ARPV4_Request+20)& (0+255),w,b
 22345  004A16  6F78               	movwf	(??_ARPV4_Request+24)& (0+255),b
 22346  004A18  5166               	movf	(??_ARPV4_Request+6)& (0+255),w,b
 22347  004A1A  1175               	iorwf	(??_ARPV4_Request+21)& (0+255),w,b
 22348  004A1C  6F79               	movwf	(??_ARPV4_Request+25)& (0+255),b
 22349  004A1E  5167               	movf	(??_ARPV4_Request+7)& (0+255),w,b
 22350  004A20  1176               	iorwf	(??_ARPV4_Request+22)& (0+255),w,b
 22351  004A22  6F7A               	movwf	(??_ARPV4_Request+26)& (0+255),b
 22352  004A24  5160               	movf	??_ARPV4_Request& (0+255),w,b
 22353  004A26  1177               	iorwf	(??_ARPV4_Request+23)& (0+255),w,b
 22354  004A28  0012               	return	
 22355  004A2A                     __end_ofPL475:
 22356                           	opt stack 0
 22357  004A2A                     PL565:
 22358                           	opt stack 15
 22359  004A2A  6F69               	movwf	(??_ARPV4_Request+9)& (0+255),b
 22360  004A2C  6B6A               	clrf	(??_ARPV4_Request+10)& (0+255),b
 22361  004A2E  5168               	movf	(??_ARPV4_Request+8)& (0+255),w,b
 22362  004A30  6F6B               	movwf	(??_ARPV4_Request+11)& (0+255),b
 22363  004A32  5169               	movf	(??_ARPV4_Request+9)& (0+255),w,b
 22364  004A34  6F6C               	movwf	(??_ARPV4_Request+12)& (0+255),b
 22365  004A36  516A               	movf	(??_ARPV4_Request+10)& (0+255),w,b
 22366  004A38  6F6D               	movwf	(??_ARPV4_Request+13)& (0+255),b
 22367  004A3A  6B6E               	clrf	(??_ARPV4_Request+14)& (0+255),b
 22368  004A3C  6B6F               	clrf	(??_ARPV4_Request+15)& (0+255),b
 22369  004A3E  6B70               	clrf	(??_ARPV4_Request+16)& (0+255),b
 22370  004A40  6B71               	clrf	(??_ARPV4_Request+17)& (0+255),b
 22371  004A42  0012               	return	
 22372  004A44                     __end_ofPL565:
 22373                           	opt stack 0
 22374  004A44                     PL575:
 22375                           	opt stack 15
 22376  004A44  6F65               	movwf	(??_ARPV4_Request+5)& (0+255),b
 22377  004A46  6B66               	clrf	(??_ARPV4_Request+6)& (0+255),b
 22378  004A48  6B67               	clrf	(??_ARPV4_Request+7)& (0+255),b
 22379  004A4A  C066  F067         	movff	??_ARPV4_Request+6,??_ARPV4_Request+7
 22380  004A4E  C065  F066         	movff	??_ARPV4_Request+5,??_ARPV4_Request+6
 22381  004A52  C064  F065         	movff	??_ARPV4_Request+4,??_ARPV4_Request+5
 22382  004A56  6B64               	clrf	(??_ARPV4_Request+4)& (0+255),b
 22383  004A58  6B68               	clrf	(??_ARPV4_Request+8)& (0+255),b
 22384  004A5A  0012               	return	
 22385  004A5C                     __end_ofPL575:
 22386                           	opt stack 0
 22387  004A5C                     PL589:
 22388                           	opt stack 15
 22389  004A5C  6F60               	movwf	??_ARPV4_Request& (0+255),b
 22390  004A5E  6B61               	clrf	(??_ARPV4_Request+1)& (0+255),b
 22391  004A60  6B62               	clrf	(??_ARPV4_Request+2)& (0+255),b
 22392  004A62  6B63               	clrf	(??_ARPV4_Request+3)& (0+255),b
 22393  004A64  C060  F063         	movff	??_ARPV4_Request,??_ARPV4_Request+3
 22394  004A68  6B62               	clrf	(??_ARPV4_Request+2)& (0+255),b
 22395  004A6A  6B61               	clrf	(??_ARPV4_Request+1)& (0+255),b
 22396  004A6C  6B60               	clrf	??_ARPV4_Request& (0+255),b
 22397  004A6E  6B64               	clrf	(??_ARPV4_Request+4)& (0+255),b
 22398  004A70  0012               	return	
 22399  004A72                     __end_ofPL589:
 22400                           	opt stack 0
 22401  004A72                     PL669:
 22402                           	opt stack 15
 22403  004A72  90D8               	bcf	status,0,c
 22404  004A74  3372               	rrcf	(??_ARPV4_Request+18)& (0+255),f,b
 22405  004A76  3371               	rrcf	(??_ARPV4_Request+17)& (0+255),f,b
 22406  004A78  3370               	rrcf	(??_ARPV4_Request+16)& (0+255),f,b
 22407  004A7A  336F               	rrcf	(??_ARPV4_Request+15)& (0+255),f,b
 22408  004A7C  0012               	return	
 22409  004A7E                     __end_ofPL669:
 22410                           	opt stack 0
 22411  004A7E                     PL683:
 22412                           	opt stack 18
 22413  004A7E  6E17               	movwf	ETH_WriteBlock@buffer,c
 22414  004A80  6A18               	clrf	ETH_WriteBlock@buffer+1,c
 22415  004A82  6A1A               	clrf	ETH_WriteBlock@length+1,c
 22416  004A84  0E1C               	movlw	28
 22417  004A86  6E19               	movwf	ETH_WriteBlock@length,c
 22418  004A88  0C1C               	retlw	28
 22419  004A8A                     __end_ofPL683:
 22420                           	opt stack 0
 22421  004A8A                     PL731:
 22422                           	opt stack 18
 22423  004A8A  0E08               	movlw	8
 22424  004A8C  6E1A               	movwf	ETH_WriteStart@type+1,c
 22425  004A8E  0E06               	movlw	6
 22426  004A90  6E19               	movwf	ETH_WriteStart@type,c
 22427  004A92  0C06               	retlw	6
 22428  004A94                     __end_ofPL731:
 22429                           	opt stack 0
 22430                           tosu	equ	0xFFF
 22431                           tosh	equ	0xFFE
 22432                           tosl	equ	0xFFD
 22433                           pclath	equ	0xFFA
 22434                           tblptru	equ	0xFF8
 22435                           tblptrh	equ	0xFF7
 22436                           tblptrl	equ	0xFF6
 22437                           tablat	equ	0xFF5
 22438                           prodh	equ	0xFF4
 22439                           prodl	equ	0xFF3
 22440                           intcon	equ	0xFF2
 22441                           indf0	equ	0xFEF
 22442                           postinc0	equ	0xFEE
 22443                           fsr0h	equ	0xFEA
 22444                           fsr0l	equ	0xFE9
 22445                           wreg	equ	0xFE8
 22446                           postinc1	equ	0xFE6
 22447                           postdec1	equ	0xFE5
 22448                           plusw1	equ	0xFE3
 22449                           fsr1h	equ	0xFE2
 22450                           fsr1l	equ	0xFE1
 22451                           bsr	equ	0xFE0
 22452                           indf2	equ	0xFDF
 22453                           postinc2	equ	0xFDE
 22454                           postdec2	equ	0xFDD
 22455                           plusw2	equ	0xFDB
 22456                           fsr2h	equ	0xFDA
 22457                           fsr2l	equ	0xFD9
 22458                           status	equ	0xFD8
 22459                           
 22460 ;; *************** function _ETH_WriteStart *****************
 22461 ;; Defined at:
 22462 ;;		line 526 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 22463 ;; Parameters:    Size  Location     Type
 22464 ;;  dest_mac        2   22[COMRAM] PTR const struct .
 22465 ;;		 -> arpMap.macAddress(6), broadcastMAC(6), header.sha(6), ARPV4_Packet@header(28), 
 22466 ;;		 -> arpMap(104), NULL(0), 
 22467 ;;  type            2   24[COMRAM] unsigned int 
 22468 ;; Auto vars:     Size  Location     Type
 22469 ;;		None
 22470 ;; Return value:  Size  Location     Type
 22471 ;;                  1    wreg      enum E6944
 22472 ;; Registers used:
 22473 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22474 ;; Tracked objects:
 22475 ;;		On entry : F/0
 22476 ;;		On exit  : F/1
 22477 ;;		Unchanged: 0/0
 22478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22479 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22481 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22482 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22483 ;;Total ram usage:        6 bytes
 22484 ;; Hardware stack levels used:    1
 22485 ;; Hardware stack levels required when called:    9
 22486 ;; This function calls:
 22487 ;;		_ETH_EdataWrite
 22488 ;;		_ETH_ResetByteCount
 22489 ;; This function is called by:
 22490 ;;		_ARPV4_Packet
 22491 ;;		_ARPV4_Request
 22492 ;;		_IPv4_Start
 22493 ;; This function uses a non-reentrant model
 22494 ;;
 22495                           
 22496                           	psect	text90
 22497  004D14                     __ptext90:
 22498                           	opt stack 0
 22499  004D14                     _ETH_WriteStart:
 22500                           	opt stack 16
 22501                           
 22502                           ; BSR set to: 0
 22503                           ;j60_driver.c: 528: if(ethData.bufferBusy)
 22504                           
 22505                           ; BSR set to: 0
 22506                           ;incstack = 0
 22507  004D14  0101               	movlb	1	; () banked
 22508  004D16  BBBE               	btfsc	_ethData& (0+255),5,b	;volatile
 22509                           
 22510                           ; BSR set to: 1
 22511                           ;j60_driver.c: 529: {
 22512                           ;j60_driver.c: 530: return BUFFER_BUSY;
 22513  004D18  0C03               	retlw	3
 22514                           
 22515                           ; BSR set to: 1
 22516                           ;j60_driver.c: 531: }
 22517                           ;j60_driver.c: 533: if(ECON1bits.TXRTS)
 22518  004D1A  B6D2               	btfsc	4050,3,c	;volatile
 22519                           
 22520                           ; BSR set to: 1
 22521                           ;j60_driver.c: 534: {
 22522                           ;j60_driver.c: 535: return TX_LOGIC_NOT_IDLE;
 22523  004D1C  0C04               	retlw	4
 22524                           
 22525                           ; BSR set to: 1
 22526                           ;j60_driver.c: 536: }
 22527                           ;j60_driver.c: 537: ETXST = ((8192) - (1518));
 22528  004D1E  EC0C  F031         	call	PL673	;call to abstracted procedure
 22529                           
 22530                           ;j60_driver.c: 538: EWRPT = ((8192) - (1518));
 22531  004D22  D883               	call	PL717	;call to abstracted procedure
 22532                           
 22533                           ; BSR set to: 14
 22534                           ;j60_driver.c: 540: ETH_ResetByteCount();
 22535  004D24  EC98  F033         	call	_ETH_ResetByteCount	;wreg free
 22536                           
 22537                           ;j60_driver.c: 542: ETH_EdataWrite(0x06);
 22538  004D28  0E06               	movlw	6
 22539  004D2A                     i25L__ptext100:
 22540                           	opt stack 0
 22541  004D2A                     i25L_ETH_EdataWrite:
 22542                           	opt stack 0
 22543  004D2A                     i25Ll7821:
 22544                           	opt stack 16
 22545  004D2A  CFE8 FF61          	movff	wreg,3937	;# 
 22546  004D2E                     i25Ll463:
 22547                           	opt stack 16
 22548                           
 22549                           ;j60_driver.c: 543: ETH_EdataWrite(dest_mac->mac_array[0]);
 22550  004D2E  C017  FFF6         	movff	ETH_WriteStart@dest_mac,tblptrl
 22551  004D32  C018  FFF7         	movff	ETH_WriteStart@dest_mac+1,tblptrh
 22552  004D36  0E00               	movlw	low (__smallconst shr (0+16))
 22553  004D38  6EF8               	movwf	tblptru,c
 22554  004D3A  0E0F               	movlw	(high __ramtop+-1)
 22555  004D3C  64F7               	cpfsgt	tblptrh,c
 22556  004D3E  D003               	bra	u11167
 22557  004D40  0008               	tblrd		*
 22558  004D42  50F5               	movf	tablat,w,c
 22559  004D44  D003               	bra	u11160
 22560  004D46                     u11167:
 22561  004D46  EC86  F011         	call	PL389	;call to abstracted procedure
 22562  004D4A  50EF               	movf	indf0,w,c
 22563  004D4C                     u11160:
 22564  004D4C                     i26L__ptext100:
 22565                           	opt stack 0
 22566  004D4C                     i26L_ETH_EdataWrite:
 22567                           	opt stack 0
 22568  004D4C                     i26Ll7821:
 22569                           	opt stack 16
 22570  004D4C  CFE8 FF61          	movff	wreg,3937	;# 
 22571  004D50                     i26Ll463:
 22572                           	opt stack 16
 22573                           
 22574                           ;j60_driver.c: 544: ETH_EdataWrite(dest_mac->mac_array[1]);
 22575  004D50  2817               	incf	ETH_WriteStart@dest_mac,w,c
 22576  004D52  D85F               	call	PL453	;call to abstracted procedure
 22577  004D54  64F7               	cpfsgt	tblptrh,c
 22578  004D56  D003               	bra	u11177
 22579  004D58  0008               	tblrd		*
 22580  004D5A  50F5               	movf	tablat,w,c
 22581  004D5C  D003               	bra	u11170
 22582  004D5E                     u11177:
 22583  004D5E  EC86  F011         	call	PL389	;call to abstracted procedure
 22584  004D62  50EF               	movf	indf0,w,c
 22585  004D64                     u11170:
 22586  004D64                     i27L__ptext100:
 22587                           	opt stack 0
 22588  004D64                     i27L_ETH_EdataWrite:
 22589                           	opt stack 0
 22590  004D64                     i27Ll7821:
 22591                           	opt stack 16
 22592  004D64  CFE8 FF61          	movff	wreg,3937	;# 
 22593  004D68                     i27Ll463:
 22594                           	opt stack 16
 22595                           
 22596                           ;j60_driver.c: 545: ETH_EdataWrite(dest_mac->mac_array[2]);
 22597  004D68  0E02               	movlw	2
 22598  004D6A  2417               	addwf	ETH_WriteStart@dest_mac,w,c
 22599  004D6C  D852               	call	PL453	;call to abstracted procedure
 22600  004D6E  64F7               	cpfsgt	tblptrh,c
 22601  004D70  D003               	bra	u11187
 22602  004D72  0008               	tblrd		*
 22603  004D74  50F5               	movf	tablat,w,c
 22604  004D76  D003               	bra	u11180
 22605  004D78                     u11187:
 22606  004D78  EC86  F011         	call	PL389	;call to abstracted procedure
 22607  004D7C  50EF               	movf	indf0,w,c
 22608  004D7E                     u11180:
 22609  004D7E                     i28L__ptext100:
 22610                           	opt stack 0
 22611  004D7E                     i28L_ETH_EdataWrite:
 22612                           	opt stack 0
 22613  004D7E                     i28Ll7821:
 22614                           	opt stack 16
 22615  004D7E  CFE8 FF61          	movff	wreg,3937	;# 
 22616  004D82                     i28Ll463:
 22617                           	opt stack 16
 22618                           
 22619                           ;j60_driver.c: 546: ETH_EdataWrite(dest_mac->mac_array[3]);
 22620  004D82  0E03               	movlw	3
 22621  004D84  2417               	addwf	ETH_WriteStart@dest_mac,w,c
 22622  004D86  D845               	call	PL453	;call to abstracted procedure
 22623  004D88  64F7               	cpfsgt	tblptrh,c
 22624  004D8A  D003               	bra	u11197
 22625  004D8C  0008               	tblrd		*
 22626  004D8E  50F5               	movf	tablat,w,c
 22627  004D90  D003               	bra	u11190
 22628  004D92                     u11197:
 22629  004D92  EC86  F011         	call	PL389	;call to abstracted procedure
 22630  004D96  50EF               	movf	indf0,w,c
 22631  004D98                     u11190:
 22632  004D98                     i29L__ptext100:
 22633                           	opt stack 0
 22634  004D98                     i29L_ETH_EdataWrite:
 22635                           	opt stack 0
 22636  004D98                     i29Ll7821:
 22637                           	opt stack 16
 22638  004D98  CFE8 FF61          	movff	wreg,3937	;# 
 22639  004D9C                     i29Ll463:
 22640                           	opt stack 16
 22641                           
 22642                           ;j60_driver.c: 547: ETH_EdataWrite(dest_mac->mac_array[4]);
 22643  004D9C  0E04               	movlw	4
 22644  004D9E  2417               	addwf	ETH_WriteStart@dest_mac,w,c
 22645  004DA0  D838               	call	PL453	;call to abstracted procedure
 22646  004DA2  64F7               	cpfsgt	tblptrh,c
 22647  004DA4  D003               	bra	u11207
 22648  004DA6  0008               	tblrd		*
 22649  004DA8  50F5               	movf	tablat,w,c
 22650  004DAA  D003               	bra	u11200
 22651  004DAC                     u11207:
 22652  004DAC  EC86  F011         	call	PL389	;call to abstracted procedure
 22653  004DB0  50EF               	movf	indf0,w,c
 22654  004DB2                     u11200:
 22655  004DB2                     i30L__ptext100:
 22656                           	opt stack 0
 22657  004DB2                     i30L_ETH_EdataWrite:
 22658                           	opt stack 0
 22659  004DB2                     i30Ll7821:
 22660                           	opt stack 16
 22661  004DB2  CFE8 FF61          	movff	wreg,3937	;# 
 22662  004DB6                     i30Ll463:
 22663                           	opt stack 16
 22664                           
 22665                           ;j60_driver.c: 548: ETH_EdataWrite(dest_mac->mac_array[5]);
 22666  004DB6  0E05               	movlw	5
 22667  004DB8  2417               	addwf	ETH_WriteStart@dest_mac,w,c
 22668  004DBA  D82B               	call	PL453	;call to abstracted procedure
 22669  004DBC  64F7               	cpfsgt	tblptrh,c
 22670  004DBE  D003               	bra	u11217
 22671  004DC0  0008               	tblrd		*
 22672  004DC2  50F5               	movf	tablat,w,c
 22673  004DC4  D003               	bra	u11210
 22674  004DC6                     u11217:
 22675  004DC6  EC86  F011         	call	PL389	;call to abstracted procedure
 22676  004DCA  50EF               	movf	indf0,w,c
 22677  004DCC                     u11210:
 22678  004DCC                     i31L__ptext100:
 22679                           	opt stack 0
 22680  004DCC                     i31L_ETH_EdataWrite:
 22681                           	opt stack 0
 22682  004DCC                     i31Ll7821:
 22683                           	opt stack 16
 22684  004DCC  CFE8 FF61          	movff	wreg,3937	;# 
 22685  004DD0                     i31Ll463:
 22686                           	opt stack 16
 22687                           
 22688                           ;j60_driver.c: 550: ETH_EdataWrite(MAADR1);
 22689  004DD0  010E               	movlb	14	; () banked
 22690  004DD2  5184               	movf	132,w,b	;volatile
 22691  004DD4                     i32L__ptext100:
 22692                           	opt stack 0
 22693  004DD4                     i32L_ETH_EdataWrite:
 22694                           	opt stack 0
 22695  004DD4                     i32Ll7821:
 22696                           	opt stack 16
 22697  004DD4  CFE8 FF61          	movff	wreg,3937	;# 
 22698  004DD8                     i32Ll463:
 22699                           	opt stack 16
 22700                           
 22701                           ;j60_driver.c: 551: ETH_EdataWrite(MAADR2);
 22702  004DD8  010E               	movlb	14	; () banked
 22703  004DDA  5185               	movf	133,w,b	;volatile
 22704  004DDC                     i33L__ptext100:
 22705                           	opt stack 0
 22706  004DDC                     i33L_ETH_EdataWrite:
 22707                           	opt stack 0
 22708  004DDC                     i33Ll7821:
 22709                           	opt stack 16
 22710  004DDC  CFE8 FF61          	movff	wreg,3937	;# 
 22711  004DE0                     i33Ll463:
 22712                           	opt stack 16
 22713                           
 22714                           ;j60_driver.c: 552: ETH_EdataWrite(MAADR3);
 22715  004DE0  010E               	movlb	14	; () banked
 22716  004DE2  5182               	movf	130,w,b	;volatile
 22717  004DE4                     i34L__ptext100:
 22718                           	opt stack 0
 22719  004DE4                     i34L_ETH_EdataWrite:
 22720                           	opt stack 0
 22721  004DE4                     i34Ll7821:
 22722                           	opt stack 16
 22723  004DE4  CFE8 FF61          	movff	wreg,3937	;# 
 22724  004DE8                     i34Ll463:
 22725                           	opt stack 16
 22726                           
 22727                           ;j60_driver.c: 553: ETH_EdataWrite(MAADR4);
 22728  004DE8  010E               	movlb	14	; () banked
 22729  004DEA  5183               	movf	131,w,b	;volatile
 22730  004DEC                     i35L__ptext100:
 22731                           	opt stack 0
 22732  004DEC                     i35L_ETH_EdataWrite:
 22733                           	opt stack 0
 22734  004DEC                     i35Ll7821:
 22735                           	opt stack 16
 22736  004DEC  CFE8 FF61          	movff	wreg,3937	;# 
 22737  004DF0                     i35Ll463:
 22738                           	opt stack 16
 22739                           
 22740                           ;j60_driver.c: 554: ETH_EdataWrite(MAADR5);
 22741  004DF0  010E               	movlb	14	; () banked
 22742  004DF2  5180               	movf	128,w,b	;volatile
 22743  004DF4                     i36L__ptext100:
 22744                           	opt stack 0
 22745  004DF4                     i36L_ETH_EdataWrite:
 22746                           	opt stack 0
 22747  004DF4                     i36Ll7821:
 22748                           	opt stack 16
 22749  004DF4  CFE8 FF61          	movff	wreg,3937	;# 
 22750  004DF8                     i36Ll463:
 22751                           	opt stack 16
 22752                           
 22753                           ;j60_driver.c: 555: ETH_EdataWrite(MAADR6);
 22754  004DF8  010E               	movlb	14	; () banked
 22755  004DFA  5181               	movf	129,w,b	;volatile
 22756  004DFC                     i37L__ptext100:
 22757                           	opt stack 0
 22758  004DFC                     i37L_ETH_EdataWrite:
 22759                           	opt stack 0
 22760  004DFC                     i37Ll7821:
 22761                           	opt stack 16
 22762  004DFC  CFE8 FF61          	movff	wreg,3937	;# 
 22763  004E00                     i37Ll463:
 22764                           	opt stack 16
 22765                           
 22766                           ;j60_driver.c: 556: ETH_EdataWrite(((char *)&type)[1]);
 22767  004E00  501A               	movf	ETH_WriteStart@type+1,w,c
 22768  004E02                     i38L__ptext100:
 22769                           	opt stack 0
 22770  004E02                     i38L_ETH_EdataWrite:
 22771                           	opt stack 0
 22772  004E02                     i38Ll7821:
 22773                           	opt stack 16
 22774  004E02  CFE8 FF61          	movff	wreg,3937	;# 
 22775  004E06                     i38Ll463:
 22776                           	opt stack 16
 22777                           
 22778                           ;j60_driver.c: 557: ETH_EdataWrite(((char *)&type)[0]);
 22779  004E06  5019               	movf	ETH_WriteStart@type,w,c
 22780  004E08                     i39L__ptext100:
 22781                           	opt stack 0
 22782  004E08                     i39L_ETH_EdataWrite:
 22783                           	opt stack 0
 22784  004E08                     i39Ll7821:
 22785                           	opt stack 16
 22786  004E08  CFE8 FF61          	movff	wreg,3937	;# 
 22787  004E0C                     i39Ll463:
 22788                           	opt stack 16
 22789                           
 22790                           ;j60_driver.c: 559: ethData.bufferBusy = 1;
 22791  004E0C  0101               	movlb	1	; () banked
 22792  004E0E  8BBE               	bsf	_ethData& (0+255),5,b	;volatile
 22793                           
 22794                           ; BSR set to: 1
 22795                           
 22796                           ; BSR set to: 1
 22797                           ;j60_driver.c: 560: return SUCCESS;
 22798  004E10  0C01               	retlw	1	;funcret
 22799  004E12                     __end_of_ETH_WriteStart:
 22800                           	opt stack 0
 22801  004E12                     PL453:
 22802                           	opt stack 16
 22803  004E12  6E1B               	movwf	??_ETH_WriteStart& (0+255),c
 22804  004E14  0E00               	movlw	0
 22805  004E16  2018               	addwfc	ETH_WriteStart@dest_mac+1,w,c
 22806  004E18  6E1C               	movwf	(??_ETH_WriteStart+1)& (0+255),c
 22807  004E1A  C01B  FFF6         	movff	??_ETH_WriteStart,tblptrl
 22808  004E1E  C01C  FFF7         	movff	??_ETH_WriteStart+1,tblptrh
 22809  004E22  0E00               	movlw	low (__smallconst shr (0+16))
 22810  004E24  6EF8               	movwf	tblptru,c
 22811  004E26  0E0F               	movlw	(high __ramtop+-1)
 22812  004E28  0012               	return	
 22813  004E2A                     __end_ofPL453:
 22814                           	opt stack 0
 22815  004E2A                     PL717:
 22816                           	opt stack 17
 22817  004E2A  0E1A               	movlw	26
 22818  004E2C  6FE3               	movwf	227,b	;volatile
 22819  004E2E  0E12               	movlw	18
 22820  004E30  6FE2               	movwf	226,b	;volatile
 22821  004E32  0C12               	retlw	18
 22822  004E34                     __end_ofPL717:
 22823                           	opt stack 0
 22824                           tosu	equ	0xFFF
 22825                           tosh	equ	0xFFE
 22826                           tosl	equ	0xFFD
 22827                           pclath	equ	0xFFA
 22828                           tblptru	equ	0xFF8
 22829                           tblptrh	equ	0xFF7
 22830                           tblptrl	equ	0xFF6
 22831                           tablat	equ	0xFF5
 22832                           prodh	equ	0xFF4
 22833                           prodl	equ	0xFF3
 22834                           intcon	equ	0xFF2
 22835                           indf0	equ	0xFEF
 22836                           postinc0	equ	0xFEE
 22837                           fsr0h	equ	0xFEA
 22838                           fsr0l	equ	0xFE9
 22839                           wreg	equ	0xFE8
 22840                           postinc1	equ	0xFE6
 22841                           postdec1	equ	0xFE5
 22842                           plusw1	equ	0xFE3
 22843                           fsr1h	equ	0xFE2
 22844                           fsr1l	equ	0xFE1
 22845                           bsr	equ	0xFE0
 22846                           indf2	equ	0xFDF
 22847                           postinc2	equ	0xFDE
 22848                           postdec2	equ	0xFDD
 22849                           plusw2	equ	0xFDB
 22850                           fsr2h	equ	0xFDA
 22851                           fsr2l	equ	0xFD9
 22852                           status	equ	0xFD8
 22853                           
 22854 ;; *************** function _ETH_ResetByteCount *****************
 22855 ;; Defined at:
 22856 ;;		line 833 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 22857 ;; Parameters:    Size  Location     Type
 22858 ;;		None
 22859 ;; Auto vars:     Size  Location     Type
 22860 ;;		None
 22861 ;; Return value:  Size  Location     Type
 22862 ;;		None               void
 22863 ;; Registers used:
 22864 ;;		None
 22865 ;; Tracked objects:
 22866 ;;		On entry : 1/0
 22867 ;;		On exit  : 1/0
 22868 ;;		Unchanged: 1/0
 22869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22874 ;;Total ram usage:        0 bytes
 22875 ;; Hardware stack levels used:    1
 22876 ;; Hardware stack levels required when called:    8
 22877 ;; This function calls:
 22878 ;;		Nothing
 22879 ;; This function is called by:
 22880 ;;		_ETH_WriteStart
 22881 ;;		_UDP_Start
 22882 ;; This function uses a non-reentrant model
 22883 ;;
 22884                           
 22885                           	psect	text91
 22886  006730                     __ptext91:
 22887                           	opt stack 0
 22888  006730                     _ETH_ResetByteCount:
 22889                           	opt stack 16
 22890                           
 22891                           ;j60_driver.c: 835: ethData.saveWRPT = EWRPT;
 22892                           
 22893                           ; BSR set to: 1
 22894                           ;incstack = 0
 22895  006730  CEE2 F1C3          	movff	3810,_ethData+5	;volatile
 22896  006734  CEE3 F1C4          	movff	3811,_ethData+6	;volatile
 22897  006738  0012               	return		;funcret
 22898  00673A                     __end_of_ETH_ResetByteCount:
 22899                           	opt stack 0
 22900                           tosu	equ	0xFFF
 22901                           tosh	equ	0xFFE
 22902                           tosl	equ	0xFFD
 22903                           pclath	equ	0xFFA
 22904                           tblptru	equ	0xFF8
 22905                           tblptrh	equ	0xFF7
 22906                           tblptrl	equ	0xFF6
 22907                           tablat	equ	0xFF5
 22908                           prodh	equ	0xFF4
 22909                           prodl	equ	0xFF3
 22910                           intcon	equ	0xFF2
 22911                           indf0	equ	0xFEF
 22912                           postinc0	equ	0xFEE
 22913                           fsr0h	equ	0xFEA
 22914                           fsr0l	equ	0xFE9
 22915                           wreg	equ	0xFE8
 22916                           postinc1	equ	0xFE6
 22917                           postdec1	equ	0xFE5
 22918                           plusw1	equ	0xFE3
 22919                           fsr1h	equ	0xFE2
 22920                           fsr1l	equ	0xFE1
 22921                           bsr	equ	0xFE0
 22922                           indf2	equ	0xFDF
 22923                           postinc2	equ	0xFDE
 22924                           postdec2	equ	0xFDD
 22925                           plusw2	equ	0xFDB
 22926                           fsr2h	equ	0xFDA
 22927                           fsr2l	equ	0xFD9
 22928                           status	equ	0xFD8
 22929                           
 22930 ;; *************** function _ETH_WriteBlock *****************
 22931 ;; Defined at:
 22932 ;;		line 509 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 22933 ;; Parameters:    Size  Location     Type
 22934 ;;  buffer          2   22[COMRAM] PTR void 
 22935 ;;		 -> ?_sprintf(2), ?_printf(2), main@str(32), STR_8(13), 
 22936 ;;		 -> STR_7(17), DEMO_TCP_Client@txdataPort60(80), DEMO_TCP_Client@strTmp(17), DEMO_TCP_Client@rxdataPort60(50), 
 22937 ;;		 -> TCP_Snd@txHeader(20), Network_Read@debug_str(80), dhcpName(21), DHCP_Request@ethMAC(6), 
 22938 ;;		 -> ARPV4_Request@header(28), ARPV4_Packet@header(28), STR_1(15), NULL(0), 
 22939 ;;  length          2   24[COMRAM] unsigned int 
 22940 ;; Auto vars:     Size  Location     Type
 22941 ;;  p               2   26[COMRAM] PTR unsigned char 
 22942 ;;		 -> ?_sprintf(2), ?_printf(2), main@str(32), STR_8(13), 
 22943 ;;		 -> STR_7(17), DEMO_TCP_Client@txdataPort60(80), DEMO_TCP_Client@strTmp(17), DEMO_TCP_Client@rxdataPort60(50), 
 22944 ;;		 -> TCP_Snd@txHeader(20), Network_Read@debug_str(80), dhcpName(21), DHCP_Request@ethMAC(6), 
 22945 ;;		 -> ARPV4_Request@header(28), ARPV4_Packet@header(28), STR_1(15), NULL(0), 
 22946 ;; Return value:  Size  Location     Type
 22947 ;;                  2   22[COMRAM] unsigned int 
 22948 ;; Registers used:
 22949 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22950 ;; Tracked objects:
 22951 ;;		On entry : 0/0
 22952 ;;		On exit  : 0/0
 22953 ;;		Unchanged: 0/0
 22954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22955 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22956 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22958 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22959 ;;Total ram usage:        6 bytes
 22960 ;; Hardware stack levels used:    1
 22961 ;; Hardware stack levels required when called:    9
 22962 ;; This function calls:
 22963 ;;		_ETH_EdataWrite
 22964 ;; This function is called by:
 22965 ;;		_ARPV4_Packet
 22966 ;;		_ARPV4_Request
 22967 ;;		_DHCP_Request
 22968 ;;		_TCP_Snd
 22969 ;; This function uses a non-reentrant model
 22970 ;;
 22971                           
 22972                           	psect	text92
 22973  005F64                     __ptext92:
 22974                           	opt stack 0
 22975  005F64                     _ETH_WriteBlock:
 22976                           	opt stack 15
 22977                           
 22978                           ;j60_driver.c: 511: char *p = buffer;
 22979                           
 22980                           ;incstack = 0
 22981  005F64  C017  F01B         	movff	ETH_WriteBlock@buffer,ETH_WriteBlock@p
 22982  005F68  C018  F01C         	movff	ETH_WriteBlock@buffer+1,ETH_WriteBlock@p+1
 22983                           
 22984                           ;j60_driver.c: 512: while(length-- && (EWRPT < ((8192)-1)))
 22985  005F6C  D013               	goto	l7837
 22986  005F6E                     l7833:
 22987                           
 22988                           ; BSR set to: 14
 22989                           ;j60_driver.c: 513: {
 22990                           ;j60_driver.c: 514: ETH_EdataWrite(*p++);
 22991  005F6E  C01B  FFF6         	movff	ETH_WriteBlock@p,tblptrl
 22992  005F72  C01C  FFF7         	movff	ETH_WriteBlock@p+1,tblptrh
 22993  005F76  0E00               	movlw	low (__smallconst shr (0+16))
 22994  005F78  6EF8               	movwf	tblptru,c
 22995  005F7A  0E0F               	movlw	(high __ramtop+-1)
 22996  005F7C  64F7               	cpfsgt	tblptrh,c
 22997  005F7E  D003               	bra	u11117
 22998  005F80  0008               	tblrd		*
 22999  005F82  50F5               	movf	tablat,w,c
 23000  005F84  D003               	bra	u11110
 23001  005F86                     u11117:
 23002  005F86  EC86  F011         	call	PL389	;call to abstracted procedure
 23003  005F8A  50EF               	movf	indf0,w,c
 23004  005F8C                     u11110:
 23005  005F8C                     i40L__ptext100:
 23006                           	opt stack 0
 23007  005F8C                     i40L_ETH_EdataWrite:
 23008                           	opt stack 0
 23009  005F8C                     i40Ll7821:
 23010                           	opt stack 16
 23011  005F8C  CFE8 FF61          	movff	wreg,3937	;# 
 23012  005F90                     i40Ll463:
 23013                           	opt stack 15
 23014  005F90  4A1B               	infsnz	ETH_WriteBlock@p,f,c
 23015  005F92  2A1C               	incf	ETH_WriteBlock@p+1,f,c
 23016  005F94                     l7837:
 23017  005F94  0619               	decf	ETH_WriteBlock@length,f,c
 23018  005F96  A0D8               	btfss	status,0,c
 23019  005F98  061A               	decf	ETH_WriteBlock@length+1,f,c
 23020  005F9A  2819               	incf	ETH_WriteBlock@length,w,c
 23021  005F9C  E103               	bnz	u11120
 23022  005F9E  281A               	incf	ETH_WriteBlock@length+1,w,c
 23023  005FA0  B4D8               	btfsc	status,2,c
 23024  005FA2  0012               	return	
 23025  005FA4                     u11120:
 23026  005FA4  010E               	movlb	14	; () banked
 23027  005FA6  29E2               	incf	226,w,b	;volatile
 23028  005FA8  0E1F               	movlw	31
 23029  005FAA  59E3               	subwfb	227,w,b	;volatile
 23030  005FAC  E3E0               	bnc	l7833
 23031  005FAE  0012               	return		;funcret
 23032  005FB0                     __end_of_ETH_WriteBlock:
 23033                           	opt stack 0
 23034                           tosu	equ	0xFFF
 23035                           tosh	equ	0xFFE
 23036                           tosl	equ	0xFFD
 23037                           pclath	equ	0xFFA
 23038                           tblptru	equ	0xFF8
 23039                           tblptrh	equ	0xFF7
 23040                           tblptrl	equ	0xFF6
 23041                           tablat	equ	0xFF5
 23042                           prodh	equ	0xFF4
 23043                           prodl	equ	0xFF3
 23044                           intcon	equ	0xFF2
 23045                           indf0	equ	0xFEF
 23046                           postinc0	equ	0xFEE
 23047                           fsr0h	equ	0xFEA
 23048                           fsr0l	equ	0xFE9
 23049                           wreg	equ	0xFE8
 23050                           postinc1	equ	0xFE6
 23051                           postdec1	equ	0xFE5
 23052                           plusw1	equ	0xFE3
 23053                           fsr1h	equ	0xFE2
 23054                           fsr1l	equ	0xFE1
 23055                           bsr	equ	0xFE0
 23056                           indf2	equ	0xFDF
 23057                           postinc2	equ	0xFDE
 23058                           postdec2	equ	0xFDD
 23059                           plusw2	equ	0xFDB
 23060                           fsr2h	equ	0xFDA
 23061                           fsr2l	equ	0xFD9
 23062                           status	equ	0xFD8
 23063                           
 23064 ;; *************** function _ETH_GetMAC *****************
 23065 ;; Defined at:
 23066 ;;		line 802 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 23067 ;; Parameters:    Size  Location     Type
 23068 ;;  mac             1    wreg     PTR unsigned char 
 23069 ;;		 -> DHCP_Handler@ethMAC(6), DHCP_Request@ethMAC(6), ARPV4_Request@header(28), header.sha(6), 
 23070 ;;		 -> ARPV4_Packet@header(28), 
 23071 ;; Auto vars:     Size  Location     Type
 23072 ;;  mac             1   22[COMRAM] PTR unsigned char 
 23073 ;;		 -> DHCP_Handler@ethMAC(6), DHCP_Request@ethMAC(6), ARPV4_Request@header(28), header.sha(6), 
 23074 ;;		 -> ARPV4_Packet@header(28), 
 23075 ;; Return value:  Size  Location     Type
 23076 ;;		None               void
 23077 ;; Registers used:
 23078 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23079 ;; Tracked objects:
 23080 ;;		On entry : 0/0
 23081 ;;		On exit  : 0/0
 23082 ;;		Unchanged: 0/0
 23083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23085 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23087 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23088 ;;Total ram usage:        1 bytes
 23089 ;; Hardware stack levels used:    1
 23090 ;; Hardware stack levels required when called:    8
 23091 ;; This function calls:
 23092 ;;		Nothing
 23093 ;; This function is called by:
 23094 ;;		_ARPV4_Packet
 23095 ;;		_ARPV4_Request
 23096 ;;		_DHCP_Request
 23097 ;;		_DHCP_Handler
 23098 ;; This function uses a non-reentrant model
 23099 ;;
 23100                           
 23101                           	psect	text93
 23102  0061B8                     __ptext93:
 23103                           	opt stack 0
 23104  0061B8                     _ETH_GetMAC:
 23105                           	opt stack 16
 23106                           
 23107                           ;incstack = 0
 23108                           ;ETH_GetMAC@mac stored from wreg
 23109  0061B8  6E17               	movwf	ETH_GetMAC@mac,c
 23110                           
 23111                           ;j60_driver.c: 804: *mac++ = MAADR1;
 23112  0061BA  5017               	movf	ETH_GetMAC@mac,w,c
 23113  0061BC  6ED9               	movwf	fsr2l,c
 23114  0061BE  6ADA               	clrf	fsr2h,c
 23115  0061C0  CE84 FFDF          	movff	3716,indf2	;volatile
 23116                           
 23117                           ;j60_driver.c: 805: *mac++ = MAADR2;
 23118  0061C4  D80F               	call	PL603	;call to abstracted procedure
 23119  0061C6  CE85 FFDF          	movff	3717,indf2	;volatile
 23120                           
 23121                           ;j60_driver.c: 806: *mac++ = MAADR3;
 23122  0061CA  D80C               	call	PL603	;call to abstracted procedure
 23123  0061CC  CE82 FFDF          	movff	3714,indf2	;volatile
 23124                           
 23125                           ;j60_driver.c: 807: *mac++ = MAADR4;
 23126  0061D0  D809               	call	PL603	;call to abstracted procedure
 23127  0061D2  CE83 FFDF          	movff	3715,indf2	;volatile
 23128                           
 23129                           ;j60_driver.c: 808: *mac++ = MAADR5;
 23130  0061D6  D806               	call	PL603	;call to abstracted procedure
 23131  0061D8  CE80 FFDF          	movff	3712,indf2	;volatile
 23132                           
 23133                           ;j60_driver.c: 809: *mac = MAADR6;
 23134  0061DC  D803               	call	PL603	;call to abstracted procedure
 23135  0061DE  CE81 FFDF          	movff	3713,indf2	;volatile
 23136  0061E2  0012               	return		;funcret
 23137  0061E4                     __end_of_ETH_GetMAC:
 23138                           	opt stack 0
 23139  0061E4                     PL603:
 23140                           	opt stack 16
 23141  0061E4  2A17               	incf	ETH_GetMAC@mac,f,c
 23142  0061E6  5017               	movf	ETH_GetMAC@mac,w,c
 23143  0061E8  6ED9               	movwf	fsr2l,c
 23144  0061EA  6ADA               	clrf	fsr2h,c
 23145  0061EC  0012               	return	
 23146  0061EE                     __end_ofPL603:
 23147                           	opt stack 0
 23148                           tosu	equ	0xFFF
 23149                           tosh	equ	0xFFE
 23150                           tosl	equ	0xFFD
 23151                           pclath	equ	0xFFA
 23152                           tblptru	equ	0xFF8
 23153                           tblptrh	equ	0xFF7
 23154                           tblptrl	equ	0xFF6
 23155                           tablat	equ	0xFF5
 23156                           prodh	equ	0xFF4
 23157                           prodl	equ	0xFF3
 23158                           intcon	equ	0xFF2
 23159                           indf0	equ	0xFEF
 23160                           postinc0	equ	0xFEE
 23161                           fsr0h	equ	0xFEA
 23162                           fsr0l	equ	0xFE9
 23163                           wreg	equ	0xFE8
 23164                           postinc1	equ	0xFE6
 23165                           postdec1	equ	0xFE5
 23166                           plusw1	equ	0xFE3
 23167                           fsr1h	equ	0xFE2
 23168                           fsr1l	equ	0xFE1
 23169                           bsr	equ	0xFE0
 23170                           indf2	equ	0xFDF
 23171                           postinc2	equ	0xFDE
 23172                           postdec2	equ	0xFDD
 23173                           plusw2	equ	0xFDB
 23174                           fsr2h	equ	0xFDA
 23175                           fsr2l	equ	0xFD9
 23176                           status	equ	0xFD8
 23177                           
 23178 ;; *************** function _ARPV4_Lookup *****************
 23179 ;; Defined at:
 23180 ;;		line 234 in file "../../TCPIP Library/source/arpv4.c"
 23181 ;; Parameters:    Size  Location     Type
 23182 ;;  ip_address      4   22[COMRAM] unsigned long 
 23183 ;; Auto vars:     Size  Location     Type
 23184 ;;  entry_pointe    2   30[COMRAM] PTR struct .
 23185 ;;		 -> arpMap(104), 
 23186 ;;  x               1   32[COMRAM] unsigned char 
 23187 ;; Return value:  Size  Location     Type
 23188 ;;                  2   22[COMRAM] PTR struct .
 23189 ;; Registers used:
 23190 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23191 ;; Tracked objects:
 23192 ;;		On entry : F/1
 23193 ;;		On exit  : F/1
 23194 ;;		Unchanged: F/0
 23195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23196 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23197 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23198 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23199 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23200 ;;Total ram usage:       11 bytes
 23201 ;; Hardware stack levels used:    1
 23202 ;; Hardware stack levels required when called:    8
 23203 ;; This function calls:
 23204 ;;		Nothing
 23205 ;; This function is called by:
 23206 ;;		_IPv4_Start
 23207 ;; This function uses a non-reentrant model
 23208 ;;
 23209                           
 23210                           	psect	text94
 23211  005DE6                     __ptext94:
 23212                           	opt stack 0
 23213  005DE6                     _ARPV4_Lookup:
 23214                           	opt stack 17
 23215                           
 23216                           ; BSR set to: 1
 23217                           ;arpv4.c: 236: arpMap_t *entry_pointer = arpMap;
 23218                           
 23219                           ;incstack = 0
 23220  005DE6  0E00               	movlw	low _arpMap
 23221  005DE8  6E1F               	movwf	ARPV4_Lookup@entry_pointer,c
 23222  005DEA  0E03               	movlw	high _arpMap
 23223  005DEC  6E20               	movwf	ARPV4_Lookup@entry_pointer+1,c
 23224                           
 23225                           ; BSR set to: 1
 23226                           ;arpv4.c: 237: uint8_t x;
 23227                           ;arpv4.c: 239: for(x = 0; x < 8; x++)
 23228  005DEE  6A21               	clrf	ARPV4_Lookup@x,c
 23229  005DF0                     l8093:
 23230                           
 23231                           ; BSR set to: 1
 23232                           ;arpv4.c: 240: {
 23233                           ;arpv4.c: 241: if(entry_pointer->ipAddress == ip_address)
 23234  005DF0  EE20 F006          	lfsr	2,6
 23235  005DF4  501F               	movf	ARPV4_Lookup@entry_pointer,w,c
 23236  005DF6  26D9               	addwf	fsr2l,f,c
 23237  005DF8  5020               	movf	ARPV4_Lookup@entry_pointer+1,w,c
 23238  005DFA  22DA               	addwfc	fsr2h,f,c
 23239  005DFC  5017               	movf	ARPV4_Lookup@ip_address,w,c
 23240  005DFE  18DE               	xorwf	postinc2,w,c
 23241  005E00  E10E               	bnz	l8099
 23242  005E02  5018               	movf	ARPV4_Lookup@ip_address+1,w,c
 23243  005E04  18DE               	xorwf	postinc2,w,c
 23244  005E06  E10B               	bnz	l8099
 23245  005E08  5019               	movf	ARPV4_Lookup@ip_address+2,w,c
 23246  005E0A  18DE               	xorwf	postinc2,w,c
 23247  005E0C  E108               	bnz	l8099
 23248  005E0E  501A               	movf	ARPV4_Lookup@ip_address+3,w,c
 23249  005E10  18DE               	xorwf	postinc2,w,c
 23250  005E12  E105               	bnz	l8099
 23251                           
 23252                           ; BSR set to: 1
 23253                           ;arpv4.c: 242: return &entry_pointer->macAddress;
 23254  005E14  C01F  F017         	movff	ARPV4_Lookup@entry_pointer,?_ARPV4_Lookup
 23255  005E18  C020  F018         	movff	ARPV4_Lookup@entry_pointer+1,?_ARPV4_Lookup+1
 23256  005E1C  0012               	return	
 23257  005E1E                     l8099:
 23258                           
 23259                           ; BSR set to: 1
 23260                           ;arpv4.c: 243: entry_pointer ++;
 23261  005E1E  0E0D               	movlw	13
 23262  005E20  261F               	addwf	ARPV4_Lookup@entry_pointer,f,c
 23263  005E22  0E00               	movlw	0
 23264  005E24  2220               	addwfc	ARPV4_Lookup@entry_pointer+1,f,c
 23265                           
 23266                           ; BSR set to: 1
 23267  005E26  2A21               	incf	ARPV4_Lookup@x,f,c
 23268                           
 23269                           ; BSR set to: 1
 23270  005E28  0E07               	movlw	7
 23271  005E2A  6421               	cpfsgt	ARPV4_Lookup@x,c
 23272  005E2C  D7E1               	goto	l8093
 23273                           
 23274                           ; BSR set to: 1
 23275                           ;arpv4.c: 244: }
 23276                           ;arpv4.c: 245: return 0;
 23277  005E2E  6A17               	clrf	?_ARPV4_Lookup,c
 23278  005E30  6A18               	clrf	?_ARPV4_Lookup+1,c
 23279                           
 23280                           ; BSR set to: 1
 23281  005E32  0012               	return		;funcret
 23282  005E34                     __end_of_ARPV4_Lookup:
 23283                           	opt stack 0
 23284                           tosu	equ	0xFFF
 23285                           tosh	equ	0xFFE
 23286                           tosl	equ	0xFFD
 23287                           pclath	equ	0xFFA
 23288                           tblptru	equ	0xFF8
 23289                           tblptrh	equ	0xFF7
 23290                           tblptrl	equ	0xFF6
 23291                           tablat	equ	0xFF5
 23292                           prodh	equ	0xFF4
 23293                           prodl	equ	0xFF3
 23294                           intcon	equ	0xFF2
 23295                           indf0	equ	0xFEF
 23296                           postinc0	equ	0xFEE
 23297                           fsr0h	equ	0xFEA
 23298                           fsr0l	equ	0xFE9
 23299                           wreg	equ	0xFE8
 23300                           postinc1	equ	0xFE6
 23301                           postdec1	equ	0xFE5
 23302                           plusw1	equ	0xFE3
 23303                           fsr1h	equ	0xFE2
 23304                           fsr1l	equ	0xFE1
 23305                           bsr	equ	0xFE0
 23306                           indf2	equ	0xFDF
 23307                           postinc2	equ	0xFDE
 23308                           postdec2	equ	0xFDD
 23309                           plusw2	equ	0xFDB
 23310                           fsr2h	equ	0xFDA
 23311                           fsr2l	equ	0xFD9
 23312                           status	equ	0xFD8
 23313                           
 23314 ;; *************** function _IPV4_Send *****************
 23315 ;; Defined at:
 23316 ;;		line 267 in file "../../TCPIP Library/source/ipv4.c"
 23317 ;; Parameters:    Size  Location     Type
 23318 ;;  payloadLengt    2   48[COMRAM] unsigned int 
 23319 ;; Auto vars:     Size  Location     Type
 23320 ;;  totalLength     2   18[BANK0 ] unsigned int 
 23321 ;;  cksm            2   16[BANK0 ] unsigned int 
 23322 ;;  ret             1   15[BANK0 ] enum E6944
 23323 ;; Return value:  Size  Location     Type
 23324 ;;                  1    wreg      enum E366
 23325 ;; Registers used:
 23326 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23327 ;; Tracked objects:
 23328 ;;		On entry : 0/0
 23329 ;;		On exit  : F/0
 23330 ;;		Unchanged: 0/0
 23331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23332 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23333 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23334 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23335 ;;      Totals:         2       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23336 ;;Total ram usage:       11 bytes
 23337 ;; Hardware stack levels used:    1
 23338 ;; Hardware stack levels required when called:   11
 23339 ;; This function calls:
 23340 ;;		_ETH_Insert
 23341 ;;		_ETH_Send
 23342 ;;		_ETH_TxComputeChecksum
 23343 ;; This function is called by:
 23344 ;;		_ICMP_EchoReply
 23345 ;;		_TCP_Snd
 23346 ;;		_UDP_Send
 23347 ;; This function uses a non-reentrant model
 23348 ;;
 23349                           
 23350                           	psect	text95
 23351  005B22                     __ptext95:
 23352                           	opt stack 0
 23353  005B22                     _IPV4_Send:
 23354                           	opt stack 15
 23355                           
 23356                           ;ipv4.c: 269: uint16_t totalLength;
 23357                           ;ipv4.c: 270: uint16_t cksm;
 23358                           ;ipv4.c: 271: error_msg ret;
 23359                           ;ipv4.c: 273: totalLength = 20 + payloadLength;
 23360                           
 23361                           ; BSR set to: 1
 23362                           ;incstack = 0
 23363  005B22  0E14               	movlw	20
 23364  005B24  2431               	addwf	IPV4_Send@payloadLength,w,c
 23365  005B26  0100               	movlb	0	; () banked
 23366  005B28  6F72               	movwf	IPV4_Send@totalLength& (0+255),b
 23367  005B2A  0E00               	movlw	0
 23368  005B2C  2032               	addwfc	IPV4_Send@payloadLength+1,w,c
 23369  005B2E  6F73               	movwf	(IPV4_Send@totalLength+1)& (0+255),b
 23370                           
 23371                           ;ipv4.c: 274: totalLength = ((((uint16_t)totalLength & (uint16_t)0xFF00) >> 8) | (((uint
      +                          16_t)totalLength & (uint16_t)0x00FF) << 8));
 23372  005B30  5172               	movf	IPV4_Send@totalLength& (0+255),w,b
 23373  005B32  6F6C               	movwf	(??_IPV4_Send+1)& (0+255),b
 23374  005B34  6B6B               	clrf	??_IPV4_Send& (0+255),b
 23375  005B36  5173               	movf	(IPV4_Send@totalLength+1)& (0+255),w,b
 23376  005B38  6F6D               	movwf	(??_IPV4_Send+2)& (0+255),b
 23377  005B3A  6B6E               	clrf	(??_IPV4_Send+3)& (0+255),b
 23378  005B3C  516B               	movf	??_IPV4_Send& (0+255),w,b
 23379  005B3E  116D               	iorwf	(??_IPV4_Send+2)& (0+255),w,b
 23380  005B40  6F72               	movwf	IPV4_Send@totalLength& (0+255),b
 23381  005B42  516C               	movf	(??_IPV4_Send+1)& (0+255),w,b
 23382  005B44  116E               	iorwf	(??_IPV4_Send+3)& (0+255),w,b
 23383  005B46  6F73               	movwf	(IPV4_Send@totalLength+1)& (0+255),b
 23384                           
 23385                           ; BSR set to: 0
 23386                           ;ipv4.c: 277: ETH_Insert((char *)&totalLength, 2, sizeof(ethernetFrame_t) + (int)(((char
      +                          *)&((ipv4Header_t *)1)->length)-1));
 23387  005B48  D81F               	call	PL587	;call to abstracted procedure
 23388  005B4A  0E10               	movlw	16
 23389  005B4C  6E19               	movwf	ETH_Insert@offset,c
 23390  005B4E  0E72               	movlw	IPV4_Send@totalLength& (0+255)
 23391  005B50  EC66  F030         	call	_ETH_Insert
 23392                           
 23393                           ;ipv4.c: 279: cksm = ETH_TxComputeChecksum(sizeof(ethernetFrame_t),sizeof(ipv4Header_t),
      +                          0);
 23394  005B54  6A26               	clrf	ETH_TxComputeChecksum@position+1,c
 23395  005B56  0E0E               	movlw	14
 23396  005B58  6E25               	movwf	ETH_TxComputeChecksum@position,c
 23397  005B5A  6A28               	clrf	ETH_TxComputeChecksum@len+1,c
 23398  005B5C  0E14               	movlw	20
 23399  005B5E  6E27               	movwf	ETH_TxComputeChecksum@len,c
 23400  005B60  6A2A               	clrf	ETH_TxComputeChecksum@seed+1,c
 23401  005B62  6A29               	clrf	ETH_TxComputeChecksum@seed,c
 23402  005B64  ECC8  F02B         	call	_ETH_TxComputeChecksum	;wreg free
 23403  005B68  C025  F070         	movff	?_ETH_TxComputeChecksum,IPV4_Send@cksm
 23404  005B6C  C026  F071         	movff	?_ETH_TxComputeChecksum+1,IPV4_Send@cksm+1
 23405                           
 23406                           ; BSR set to: 0
 23407                           ;ipv4.c: 281: ETH_Insert((char *)&cksm, 2, sizeof(ethernetFrame_t) + (int)(((char*)&((ip
      +                          v4Header_t *)1)->headerCksm)-1));
 23408  005B70  D80B               	call	PL587	;call to abstracted procedure
 23409  005B72  0E18               	movlw	24
 23410  005B74  6E19               	movwf	ETH_Insert@offset,c
 23411  005B76  0E70               	movlw	IPV4_Send@cksm& (0+255)
 23412  005B78  EC66  F030         	call	_ETH_Insert
 23413                           
 23414                           ;ipv4.c: 282: ret = ETH_Send();
 23415  005B7C  ECF7  F030         	call	_ETH_Send	;wreg free
 23416  005B80  0100               	movlb	0	; () banked
 23417  005B82  6F6F               	movwf	IPV4_Send@ret& (0+255),b
 23418                           
 23419                           ; BSR set to: 0
 23420                           ;ipv4.c: 284: return ret;
 23421  005B84  516F               	movf	IPV4_Send@ret& (0+255),w,b
 23422                           
 23423                           ; BSR set to: 0
 23424  005B86  0012               	return		;funcret
 23425  005B88                     __end_of_IPV4_Send:
 23426                           	opt stack 0
 23427  005B88                     PL587:
 23428                           	opt stack 12
 23429  005B88  6A18               	clrf	ETH_Insert@len+1,c
 23430  005B8A  0E02               	movlw	2
 23431  005B8C  6E17               	movwf	ETH_Insert@len,c
 23432  005B8E  6A1A               	clrf	ETH_Insert@offset+1,c
 23433  005B90  0C02               	retlw	2
 23434  005B92                     __end_ofPL587:
 23435                           	opt stack 0
 23436                           tosu	equ	0xFFF
 23437                           tosh	equ	0xFFE
 23438                           tosl	equ	0xFFD
 23439                           pclath	equ	0xFFA
 23440                           tblptru	equ	0xFF8
 23441                           tblptrh	equ	0xFF7
 23442                           tblptrl	equ	0xFF6
 23443                           tablat	equ	0xFF5
 23444                           prodh	equ	0xFF4
 23445                           prodl	equ	0xFF3
 23446                           intcon	equ	0xFF2
 23447                           indf0	equ	0xFEF
 23448                           postinc0	equ	0xFEE
 23449                           fsr0h	equ	0xFEA
 23450                           fsr0l	equ	0xFE9
 23451                           wreg	equ	0xFE8
 23452                           postinc1	equ	0xFE6
 23453                           postdec1	equ	0xFE5
 23454                           plusw1	equ	0xFE3
 23455                           fsr1h	equ	0xFE2
 23456                           fsr1l	equ	0xFE1
 23457                           bsr	equ	0xFE0
 23458                           indf2	equ	0xFDF
 23459                           postinc2	equ	0xFDE
 23460                           postdec2	equ	0xFDD
 23461                           plusw2	equ	0xFDB
 23462                           fsr2h	equ	0xFDA
 23463                           fsr2l	equ	0xFD9
 23464                           status	equ	0xFD8
 23465                           
 23466 ;; *************** function _ETH_TxComputeChecksum *****************
 23467 ;; Defined at:
 23468 ;;		line 754 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 23469 ;; Parameters:    Size  Location     Type
 23470 ;;  position        2   36[COMRAM] unsigned int 
 23471 ;;  len             2   38[COMRAM] unsigned int 
 23472 ;;  seed            2   40[COMRAM] unsigned int 
 23473 ;; Auto vars:     Size  Location     Type
 23474 ;;  cksm            4   44[COMRAM] unsigned long 
 23475 ;;  rxptr           2   42[COMRAM] unsigned int 
 23476 ;; Return value:  Size  Location     Type
 23477 ;;                  2   36[COMRAM] unsigned int 
 23478 ;; Registers used:
 23479 ;;		wreg, status,2, status,0, cstack
 23480 ;; Tracked objects:
 23481 ;;		On entry : 0/0
 23482 ;;		On exit  : F/0
 23483 ;;		Unchanged: 0/0
 23484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23485 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23486 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23487 ;;      Temps:          0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23488 ;;      Totals:        12      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23489 ;;Total ram usage:       23 bytes
 23490 ;; Hardware stack levels used:    1
 23491 ;; Hardware stack levels required when called:   10
 23492 ;; This function calls:
 23493 ;;		_ETH_ComputeChecksum
 23494 ;; This function is called by:
 23495 ;;		_ICMP_EchoReply
 23496 ;;		_IPV4_Send
 23497 ;;		_TCP_Snd
 23498 ;;		_UDP_Send
 23499 ;; This function uses a non-reentrant model
 23500 ;;
 23501                           
 23502                           	psect	text96
 23503  005790                     __ptext96:
 23504                           	opt stack 0
 23505  005790                     _ETH_TxComputeChecksum:
 23506                           	opt stack 15
 23507                           
 23508                           ;j60_driver.c: 756: uint16_t rxptr;
 23509                           ;j60_driver.c: 757: uint32_t cksm;
 23510                           ;j60_driver.c: 760: rxptr = ERDPT;
 23511                           
 23512                           ; BSR set to: 0
 23513                           ;incstack = 0
 23514  005790  CF7A F02B          	movff	3962,ETH_TxComputeChecksum@rxptr	;volatile
 23515  005794  CF7B F02C          	movff	3963,ETH_TxComputeChecksum@rxptr+1	;volatile
 23516                           
 23517                           ;j60_driver.c: 763: ERDPT = ((8192) - (1518)) + position + 1;
 23518  005798  0E13               	movlw	19
 23519  00579A  2425               	addwf	ETH_TxComputeChecksum@position,w,c
 23520  00579C  6E7A               	movwf	3962,c	;volatile
 23521  00579E  0E1A               	movlw	26
 23522  0057A0  2026               	addwfc	ETH_TxComputeChecksum@position+1,w,c
 23523  0057A2  6E7B               	movwf	3963,c	;volatile
 23524                           
 23525                           ;j60_driver.c: 765: cksm = ETH_ComputeChecksum( len, seed);
 23526  0057A4  C027  F017         	movff	ETH_TxComputeChecksum@len,ETH_ComputeChecksum@len
 23527  0057A8  C028  F018         	movff	ETH_TxComputeChecksum@len+1,ETH_ComputeChecksum@len+1
 23528  0057AC  C029  F019         	movff	ETH_TxComputeChecksum@seed,ETH_ComputeChecksum@seed
 23529  0057B0  C02A  F01A         	movff	ETH_TxComputeChecksum@seed+1,ETH_ComputeChecksum@seed+1
 23530  0057B4  EC48  F02A         	call	_ETH_ComputeChecksum	;wreg free
 23531  0057B8  C017  F02D         	movff	?_ETH_ComputeChecksum,ETH_TxComputeChecksum@cksm
 23532  0057BC  C018  F02E         	movff	?_ETH_ComputeChecksum+1,ETH_TxComputeChecksum@cksm+1
 23533  0057C0  6A2F               	clrf	ETH_TxComputeChecksum@cksm+2,c
 23534  0057C2  6A30               	clrf	ETH_TxComputeChecksum@cksm+3,c
 23535                           
 23536                           ;j60_driver.c: 768: ERDPT = rxptr;
 23537  0057C4  C02B  FF7A         	movff	ETH_TxComputeChecksum@rxptr,3962	;volatile
 23538  0057C8  C02C  FF7B         	movff	ETH_TxComputeChecksum@rxptr+1,3963	;volatile
 23539                           
 23540                           ;j60_driver.c: 770: cksm = ((cksm & 0xFF00) >> 8) | ((cksm & 0x00FF) << 8);
 23541  0057CC  502D               	movf	ETH_TxComputeChecksum@cksm,w,c
 23542  0057CE  0100               	movlb	0	; () banked
 23543  0057D0  6F60               	movwf	??_ETH_TxComputeChecksum& (0+255),b
 23544  0057D2  6B61               	clrf	(??_ETH_TxComputeChecksum+1)& (0+255),b
 23545  0057D4  6B62               	clrf	(??_ETH_TxComputeChecksum+2)& (0+255),b
 23546  0057D6  6B63               	clrf	(??_ETH_TxComputeChecksum+3)& (0+255),b
 23547  0057D8  C062  F063         	movff	??_ETH_TxComputeChecksum+2,??_ETH_TxComputeChecksum+3
 23548  0057DC  C061  F062         	movff	??_ETH_TxComputeChecksum+1,??_ETH_TxComputeChecksum+2
 23549  0057E0  C060  F061         	movff	??_ETH_TxComputeChecksum,??_ETH_TxComputeChecksum+1
 23550  0057E4  6B60               	clrf	??_ETH_TxComputeChecksum& (0+255),b
 23551  0057E6  502E               	movf	ETH_TxComputeChecksum@cksm+1,w,c
 23552  0057E8  6F64               	movwf	(??_ETH_TxComputeChecksum+4)& (0+255),b
 23553  0057EA  6B65               	clrf	(??_ETH_TxComputeChecksum+5)& (0+255),b
 23554  0057EC  6B66               	clrf	(??_ETH_TxComputeChecksum+6)& (0+255),b
 23555  0057EE  5164               	movf	(??_ETH_TxComputeChecksum+4)& (0+255),w,b
 23556  0057F0  6F67               	movwf	(??_ETH_TxComputeChecksum+7)& (0+255),b
 23557  0057F2  5165               	movf	(??_ETH_TxComputeChecksum+5)& (0+255),w,b
 23558  0057F4  6F68               	movwf	(??_ETH_TxComputeChecksum+8)& (0+255),b
 23559  0057F6  5166               	movf	(??_ETH_TxComputeChecksum+6)& (0+255),w,b
 23560  0057F8  6F69               	movwf	(??_ETH_TxComputeChecksum+9)& (0+255),b
 23561  0057FA  6B6A               	clrf	(??_ETH_TxComputeChecksum+10)& (0+255),b
 23562  0057FC  5160               	movf	??_ETH_TxComputeChecksum& (0+255),w,b
 23563  0057FE  1167               	iorwf	(??_ETH_TxComputeChecksum+7)& (0+255),w,b
 23564  005800  6E2D               	movwf	ETH_TxComputeChecksum@cksm,c
 23565  005802  5161               	movf	(??_ETH_TxComputeChecksum+1)& (0+255),w,b
 23566  005804  1168               	iorwf	(??_ETH_TxComputeChecksum+8)& (0+255),w,b
 23567  005806  6E2E               	movwf	ETH_TxComputeChecksum@cksm+1,c
 23568  005808  5162               	movf	(??_ETH_TxComputeChecksum+2)& (0+255),w,b
 23569  00580A  1169               	iorwf	(??_ETH_TxComputeChecksum+9)& (0+255),w,b
 23570  00580C  6E2F               	movwf	ETH_TxComputeChecksum@cksm+2,c
 23571  00580E  5163               	movf	(??_ETH_TxComputeChecksum+3)& (0+255),w,b
 23572  005810  116A               	iorwf	(??_ETH_TxComputeChecksum+10)& (0+255),w,b
 23573  005812  6E30               	movwf	ETH_TxComputeChecksum@cksm+3,c
 23574                           
 23575                           ; BSR set to: 0
 23576                           ;j60_driver.c: 772: return cksm;
 23577  005814  C02D  F025         	movff	ETH_TxComputeChecksum@cksm,?_ETH_TxComputeChecksum
 23578  005818  C02E  F026         	movff	ETH_TxComputeChecksum@cksm+1,?_ETH_TxComputeChecksum+1
 23579                           
 23580                           ; BSR set to: 0
 23581  00581C  0012               	return		;funcret
 23582  00581E                     __end_of_ETH_TxComputeChecksum:
 23583                           	opt stack 0
 23584                           tosu	equ	0xFFF
 23585                           tosh	equ	0xFFE
 23586                           tosl	equ	0xFFD
 23587                           pclath	equ	0xFFA
 23588                           tblptru	equ	0xFF8
 23589                           tblptrh	equ	0xFF7
 23590                           tblptrl	equ	0xFF6
 23591                           tablat	equ	0xFF5
 23592                           prodh	equ	0xFF4
 23593                           prodl	equ	0xFF3
 23594                           intcon	equ	0xFF2
 23595                           indf0	equ	0xFEF
 23596                           postinc0	equ	0xFEE
 23597                           fsr0h	equ	0xFEA
 23598                           fsr0l	equ	0xFE9
 23599                           wreg	equ	0xFE8
 23600                           postinc1	equ	0xFE6
 23601                           postdec1	equ	0xFE5
 23602                           plusw1	equ	0xFE3
 23603                           fsr1h	equ	0xFE2
 23604                           fsr1l	equ	0xFE1
 23605                           bsr	equ	0xFE0
 23606                           indf2	equ	0xFDF
 23607                           postinc2	equ	0xFDE
 23608                           postdec2	equ	0xFDD
 23609                           plusw2	equ	0xFDB
 23610                           fsr2h	equ	0xFDA
 23611                           fsr2l	equ	0xFD9
 23612                           status	equ	0xFD8
 23613                           
 23614 ;; *************** function _ETH_ComputeChecksum *****************
 23615 ;; Defined at:
 23616 ;;		line 710 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 23617 ;; Parameters:    Size  Location     Type
 23618 ;;  len             2   22[COMRAM] unsigned int 
 23619 ;;  seed            2   24[COMRAM] unsigned int 
 23620 ;; Auto vars:     Size  Location     Type
 23621 ;;  cksm            4   30[COMRAM] unsigned long 
 23622 ;;  v               2   34[COMRAM] unsigned int 
 23623 ;; Return value:  Size  Location     Type
 23624 ;;                  2   22[COMRAM] unsigned int 
 23625 ;; Registers used:
 23626 ;;		wreg, status,2, status,0, cstack
 23627 ;; Tracked objects:
 23628 ;;		On entry : 0/1
 23629 ;;		On exit  : 0/0
 23630 ;;		Unchanged: 0/0
 23631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23632 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23633 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23634 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23635 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23636 ;;Total ram usage:       14 bytes
 23637 ;; Hardware stack levels used:    1
 23638 ;; Hardware stack levels required when called:    9
 23639 ;; This function calls:
 23640 ;;		_ETH_EdataRead
 23641 ;; This function is called by:
 23642 ;;		_ETH_TxComputeChecksum
 23643 ;;		_ETH_RxComputeChecksum
 23644 ;; This function uses a non-reentrant model
 23645 ;;
 23646                           
 23647                           	psect	text97
 23648  005490                     __ptext97:
 23649                           	opt stack 0
 23650  005490                     _ETH_ComputeChecksum:
 23651                           	opt stack 15
 23652                           
 23653                           ;j60_driver.c: 712: uint32_t cksm;
 23654                           ;j60_driver.c: 713: uint16_t v;
 23655                           ;j60_driver.c: 715: cksm = seed;
 23656                           
 23657                           ; BSR set to: 0
 23658                           ;incstack = 0
 23659  005490  C019  F01F         	movff	ETH_ComputeChecksum@seed,ETH_ComputeChecksum@cksm
 23660  005494  C01A  F020         	movff	ETH_ComputeChecksum@seed+1,ETH_ComputeChecksum@cksm+1
 23661  005498  6A21               	clrf	ETH_ComputeChecksum@cksm+2,c
 23662  00549A  6A22               	clrf	ETH_ComputeChecksum@cksm+3,c
 23663                           
 23664                           ;j60_driver.c: 717: while(len > 1)
 23665  00549C  D011               	goto	l7925
 23666  00549E                     l617:
 23667                           
 23668                           ;j60_driver.c: 718: {
 23669                           ;j60_driver.c: 719: v = 0;
 23670  00549E  6A23               	clrf	ETH_ComputeChecksum@v,c
 23671  0054A0  6A24               	clrf	ETH_ComputeChecksum@v+1,c
 23672  0054A2                     i41L__ptext102:
 23673                           	opt stack 0
 23674  0054A2                     i41L_ETH_EdataRead:
 23675                           	opt stack 0
 23676  0054A2                     i41Ll7815:
 23677                           	opt stack 15
 23678  0054A2  CF61 FE7E          	movff	3937,_errataTemp	;# 
 23679  0054A6                     i41Ll7817:
 23680                           	opt stack 15
 23681                           
 23682                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
 23683  0054A6  010E               	movlb	14	; () banked
 23684  0054A8  517E               	movf	126,w,b
 23685  0054AA                     i41Ll460:
 23686                           	opt stack 15
 23687  0054AA  6E24               	movwf	ETH_ComputeChecksum@v+1,c
 23688  0054AC                     i42L__ptext102:
 23689                           	opt stack 0
 23690  0054AC                     i42L_ETH_EdataRead:
 23691                           	opt stack 0
 23692  0054AC                     i42Ll7815:
 23693                           	opt stack 15
 23694  0054AC  CF61 FE7E          	movff	3937,_errataTemp	;# 
 23695  0054B0                     i42Ll7817:
 23696                           	opt stack 15
 23697                           
 23698                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
 23699  0054B0  010E               	movlb	14	; () banked
 23700  0054B2  517E               	movf	126,w,b
 23701  0054B4                     i42Ll460:
 23702                           	opt stack 15
 23703  0054B4  6E23               	movwf	ETH_ComputeChecksum@v,c
 23704                           
 23705                           ; BSR set to: 14
 23706                           ;j60_driver.c: 722: cksm += v;
 23707  0054B6  D834               	call	PL629	;call to abstracted procedure
 23708                           
 23709                           ; BSR set to: 14
 23710                           ;j60_driver.c: 723: len -= 2;
 23711  0054B8  0E02               	movlw	2
 23712  0054BA  5E17               	subwf	ETH_ComputeChecksum@len,f,c
 23713  0054BC  0E00               	movlw	0
 23714  0054BE  5A18               	subwfb	ETH_ComputeChecksum@len+1,f,c
 23715  0054C0                     l7925:
 23716  0054C0  5018               	movf	ETH_ComputeChecksum@len+1,w,c
 23717  0054C2  E1ED               	bnz	l617
 23718  0054C4  0E02               	movlw	2
 23719  0054C6  5C17               	subwf	ETH_ComputeChecksum@len,w,c
 23720  0054C8  E2EA               	bc	l617
 23721                           
 23722                           ;j60_driver.c: 724: }
 23723                           ;j60_driver.c: 726: if(len)
 23724  0054CA  5017               	movf	ETH_ComputeChecksum@len,w,c
 23725  0054CC  1018               	iorwf	ETH_ComputeChecksum@len+1,w,c
 23726  0054CE  E01C               	bz	l620
 23727                           
 23728                           ;j60_driver.c: 727: {
 23729                           ;j60_driver.c: 728: v = 0;
 23730  0054D0  6A23               	clrf	ETH_ComputeChecksum@v,c
 23731  0054D2  6A24               	clrf	ETH_ComputeChecksum@v+1,c
 23732  0054D4                     i43L__ptext102:
 23733                           	opt stack 0
 23734  0054D4                     i43L_ETH_EdataRead:
 23735                           	opt stack 0
 23736  0054D4                     i43Ll7815:
 23737                           	opt stack 15
 23738  0054D4  CF61 FE7E          	movff	3937,_errataTemp	;# 
 23739  0054D8                     i43Ll7817:
 23740                           	opt stack 15
 23741                           
 23742                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
 23743  0054D8  010E               	movlb	14	; () banked
 23744  0054DA  517E               	movf	126,w,b
 23745  0054DC                     i43Ll460:
 23746                           	opt stack 15
 23747  0054DC  6E24               	movwf	ETH_ComputeChecksum@v+1,c
 23748                           
 23749                           ; BSR set to: 14
 23750                           ;j60_driver.c: 730: ((char *)&v)[0] = 0;
 23751  0054DE  6A23               	clrf	ETH_ComputeChecksum@v,c
 23752                           
 23753                           ; BSR set to: 14
 23754                           ;j60_driver.c: 731: cksm += v;
 23755  0054E0  D81F               	call	PL629	;call to abstracted procedure
 23756  0054E2  D012               	goto	l620
 23757  0054E4                     l7937:
 23758                           
 23759                           ;j60_driver.c: 736: {
 23760                           ;j60_driver.c: 737: cksm = (cksm & 0x0FFFF) + (cksm>>16);
 23761  0054E4  501F               	movf	ETH_ComputeChecksum@cksm,w,c
 23762  0054E6  6E1B               	movwf	??_ETH_ComputeChecksum& (0+255),c
 23763  0054E8  5020               	movf	ETH_ComputeChecksum@cksm+1,w,c
 23764  0054EA  6E1C               	movwf	(??_ETH_ComputeChecksum+1)& (0+255),c
 23765  0054EC  6A1D               	clrf	(??_ETH_ComputeChecksum+2)& (0+255),c
 23766  0054EE  6A1E               	clrf	(??_ETH_ComputeChecksum+3)& (0+255),c
 23767  0054F0  5021               	movf	ETH_ComputeChecksum@cksm+2,w,c
 23768  0054F2  241B               	addwf	??_ETH_ComputeChecksum,w,c
 23769  0054F4  6E1F               	movwf	ETH_ComputeChecksum@cksm,c
 23770  0054F6  5022               	movf	ETH_ComputeChecksum@cksm+3,w,c
 23771  0054F8  201C               	addwfc	??_ETH_ComputeChecksum+1,w,c
 23772  0054FA  6E20               	movwf	ETH_ComputeChecksum@cksm+1,c
 23773  0054FC  0E00               	movlw	0
 23774  0054FE  201D               	addwfc	??_ETH_ComputeChecksum+2,w,c
 23775  005500  6E21               	movwf	ETH_ComputeChecksum@cksm+2,c
 23776  005502  0E00               	movlw	0
 23777  005504  201E               	addwfc	??_ETH_ComputeChecksum+3,w,c
 23778  005506  6E22               	movwf	ETH_ComputeChecksum@cksm+3,c
 23779  005508                     l620:
 23780  005508  5021               	movf	ETH_ComputeChecksum@cksm+2,w,c
 23781  00550A  1022               	iorwf	ETH_ComputeChecksum@cksm+3,w,c
 23782  00550C  E1EB               	bnz	l7937
 23783                           
 23784                           ;j60_driver.c: 738: }
 23785                           ;j60_driver.c: 741: cksm = ~cksm;
 23786  00550E  1E1F               	comf	ETH_ComputeChecksum@cksm,f,c
 23787  005510  1E20               	comf	ETH_ComputeChecksum@cksm+1,f,c
 23788  005512  1E21               	comf	ETH_ComputeChecksum@cksm+2,f,c
 23789  005514  1E22               	comf	ETH_ComputeChecksum@cksm+3,f,c
 23790                           
 23791                           ;j60_driver.c: 744: return cksm;
 23792  005516  C01F  F017         	movff	ETH_ComputeChecksum@cksm,?_ETH_ComputeChecksum
 23793  00551A  C020  F018         	movff	ETH_ComputeChecksum@cksm+1,?_ETH_ComputeChecksum+1
 23794  00551E  0CFF               	retlw	255	;funcret
 23795  005520                     __end_of_ETH_ComputeChecksum:
 23796                           	opt stack 0
 23797  005520                     PL629:
 23798                           	opt stack 15
 23799  005520  5023               	movf	ETH_ComputeChecksum@v,w,c
 23800  005522  261F               	addwf	ETH_ComputeChecksum@cksm,f,c
 23801  005524  5024               	movf	ETH_ComputeChecksum@v+1,w,c
 23802  005526  2220               	addwfc	ETH_ComputeChecksum@cksm+1,f,c
 23803  005528  0E00               	movlw	0
 23804  00552A  2221               	addwfc	ETH_ComputeChecksum@cksm+2,f,c
 23805  00552C  2222               	addwfc	ETH_ComputeChecksum@cksm+3,f,c
 23806  00552E  0C00               	retlw	0
 23807  005530                     __end_ofPL629:
 23808                           	opt stack 0
 23809                           tosu	equ	0xFFF
 23810                           tosh	equ	0xFFE
 23811                           tosl	equ	0xFFD
 23812                           pclath	equ	0xFFA
 23813                           tblptru	equ	0xFF8
 23814                           tblptrh	equ	0xFF7
 23815                           tblptrl	equ	0xFF6
 23816                           tablat	equ	0xFF5
 23817                           prodh	equ	0xFF4
 23818                           prodl	equ	0xFF3
 23819                           intcon	equ	0xFF2
 23820                           indf0	equ	0xFEF
 23821                           postinc0	equ	0xFEE
 23822                           fsr0h	equ	0xFEA
 23823                           fsr0l	equ	0xFE9
 23824                           wreg	equ	0xFE8
 23825                           postinc1	equ	0xFE6
 23826                           postdec1	equ	0xFE5
 23827                           plusw1	equ	0xFE3
 23828                           fsr1h	equ	0xFE2
 23829                           fsr1l	equ	0xFE1
 23830                           bsr	equ	0xFE0
 23831                           indf2	equ	0xFDF
 23832                           postinc2	equ	0xFDE
 23833                           postdec2	equ	0xFDD
 23834                           plusw2	equ	0xFDB
 23835                           fsr2h	equ	0xFDA
 23836                           fsr2l	equ	0xFD9
 23837                           status	equ	0xFD8
 23838                           
 23839 ;; *************** function _ETH_Send *****************
 23840 ;; Defined at:
 23841 ;;		line 567 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 23842 ;; Parameters:    Size  Location     Type
 23843 ;;		None
 23844 ;; Auto vars:     Size  Location     Type
 23845 ;;  packetEnd       2   22[COMRAM] unsigned int 
 23846 ;; Return value:  Size  Location     Type
 23847 ;;                  1    wreg      enum E6944
 23848 ;; Registers used:
 23849 ;;		wreg, status,2, status,0
 23850 ;; Tracked objects:
 23851 ;;		On entry : 0/0
 23852 ;;		On exit  : 0/0
 23853 ;;		Unchanged: 0/0
 23854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23856 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23858 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23859 ;;Total ram usage:        2 bytes
 23860 ;; Hardware stack levels used:    1
 23861 ;; Hardware stack levels required when called:    8
 23862 ;; This function calls:
 23863 ;;		Nothing
 23864 ;; This function is called by:
 23865 ;;		_ARPV4_Packet
 23866 ;;		_ARPV4_Request
 23867 ;;		_IPV4_Send
 23868 ;; This function uses a non-reentrant model
 23869 ;;
 23870                           
 23871                           	psect	text98
 23872  0061EE                     __ptext98:
 23873                           	opt stack 0
 23874  0061EE                     _ETH_Send:
 23875                           	opt stack 16
 23876                           
 23877                           ;j60_driver.c: 569: uint16_t packetEnd;
 23878                           ;j60_driver.c: 571: packetEnd = EWRPT - 1;
 23879                           
 23880                           ;incstack = 0
 23881  0061EE  0EFF               	movlw	255
 23882  0061F0  010E               	movlb	14	; () banked
 23883  0061F2  25E2               	addwf	226,w,b	;volatile
 23884  0061F4  6E17               	movwf	ETH_Send@packetEnd,c
 23885  0061F6  0EFF               	movlw	255
 23886  0061F8  21E3               	addwfc	227,w,b	;volatile
 23887  0061FA  6E18               	movwf	ETH_Send@packetEnd+1,c
 23888                           
 23889                           ; BSR set to: 14
 23890                           ;j60_driver.c: 573: if(!ethData.up)
 23891  0061FC  0101               	movlb	1	; () banked
 23892  0061FE  A5BE               	btfss	_ethData& (0+255),2,b	;volatile
 23893                           
 23894                           ; BSR set to: 1
 23895                           ;j60_driver.c: 574: {
 23896                           ;j60_driver.c: 575: return LINK_NOT_FOUND;
 23897  006200  0C02               	retlw	2
 23898                           
 23899                           ; BSR set to: 1
 23900                           ;j60_driver.c: 576: }
 23901                           ;j60_driver.c: 577: if(!ethData.bufferBusy)
 23902  006202  ABBE               	btfss	_ethData& (0+255),5,b	;volatile
 23903                           
 23904                           ; BSR set to: 1
 23905                           ;j60_driver.c: 578: {
 23906                           ;j60_driver.c: 579: return BUFFER_BUSY;
 23907  006204  0C03               	retlw	3
 23908                           
 23909                           ; BSR set to: 1
 23910                           ;j60_driver.c: 580: }
 23911                           ;j60_driver.c: 581: ETXST = ((8192) - (1518));
 23912  006206  D808               	call	PL673	;call to abstracted procedure
 23913                           
 23914                           ; BSR set to: 14
 23915                           ;j60_driver.c: 582: ETXND = packetEnd;
 23916  006208  C017  FEE6         	movff	ETH_Send@packetEnd,3814	;volatile
 23917  00620C  C018  FEE7         	movff	ETH_Send@packetEnd+1,3815	;volatile
 23918                           
 23919                           ; BSR set to: 14
 23920                           ;j60_driver.c: 583: __nop(); __nop();
 23921  006210  F000               	nop	
 23922  006212  F000               	nop	
 23923                           
 23924                           ;j60_driver.c: 584: ECON1bits.TXRTS = 1;
 23925  006214  86D2               	bsf	4050,3,c	;volatile
 23926                           
 23927                           ;j60_driver.c: 586: return SUCCESS;
 23928  006216  0C01               	retlw	1	;funcret
 23929  006218                     __end_of_ETH_Send:
 23930                           	opt stack 0
 23931  006218                     PL673:
 23932                           	opt stack 16
 23933  006218  0E1A               	movlw	26
 23934  00621A  010E               	movlb	14	; () banked
 23935  00621C  6FE5               	movwf	229,b	;volatile
 23936  00621E  0E12               	movlw	18
 23937  006220  6FE4               	movwf	228,b	;volatile
 23938  006222  0C12               	retlw	18
 23939  006224                     __end_ofPL673:
 23940                           	opt stack 0
 23941                           tosu	equ	0xFFF
 23942                           tosh	equ	0xFFE
 23943                           tosl	equ	0xFFD
 23944                           pclath	equ	0xFFA
 23945                           tblptru	equ	0xFF8
 23946                           tblptrh	equ	0xFF7
 23947                           tblptrl	equ	0xFF6
 23948                           tablat	equ	0xFF5
 23949                           prodh	equ	0xFF4
 23950                           prodl	equ	0xFF3
 23951                           intcon	equ	0xFF2
 23952                           indf0	equ	0xFEF
 23953                           postinc0	equ	0xFEE
 23954                           fsr0h	equ	0xFEA
 23955                           fsr0l	equ	0xFE9
 23956                           wreg	equ	0xFE8
 23957                           postinc1	equ	0xFE6
 23958                           postdec1	equ	0xFE5
 23959                           plusw1	equ	0xFE3
 23960                           fsr1h	equ	0xFE2
 23961                           fsr1l	equ	0xFE1
 23962                           bsr	equ	0xFE0
 23963                           indf2	equ	0xFDF
 23964                           postinc2	equ	0xFDE
 23965                           postdec2	equ	0xFDD
 23966                           plusw2	equ	0xFDB
 23967                           fsr2h	equ	0xFDA
 23968                           fsr2l	equ	0xFD9
 23969                           status	equ	0xFD8
 23970                           
 23971 ;; *************** function _ETH_Insert *****************
 23972 ;; Defined at:
 23973 ;;		line 596 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 23974 ;; Parameters:    Size  Location     Type
 23975 ;;  data            1    wreg     PTR unsigned char 
 23976 ;;		 -> UDP_Send@cksm(2), UDP_Send@udpLength(2), TCP_Snd@cksm(2), IPV4_Send@cksm(2), 
 23977 ;;		 -> IPV4_Send@totalLength(2), ICMP_EchoReply@cksm(2), 
 23978 ;;  len             2   22[COMRAM] unsigned int 
 23979 ;;  offset          2   24[COMRAM] unsigned int 
 23980 ;; Auto vars:     Size  Location     Type
 23981 ;;  data            1   28[COMRAM] PTR unsigned char 
 23982 ;;		 -> UDP_Send@cksm(2), UDP_Send@udpLength(2), TCP_Snd@cksm(2), IPV4_Send@cksm(2), 
 23983 ;;		 -> IPV4_Send@totalLength(2), ICMP_EchoReply@cksm(2), 
 23984 ;;  current_tx_p    2   26[COMRAM] unsigned int 
 23985 ;; Return value:  Size  Location     Type
 23986 ;;		None               void
 23987 ;; Registers used:
 23988 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23989 ;; Tracked objects:
 23990 ;;		On entry : F/0
 23991 ;;		On exit  : 0/0
 23992 ;;		Unchanged: 0/0
 23993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23994 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23995 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23997 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23998 ;;Total ram usage:        7 bytes
 23999 ;; Hardware stack levels used:    1
 24000 ;; Hardware stack levels required when called:    9
 24001 ;; This function calls:
 24002 ;;		_ETH_EdataWrite
 24003 ;; This function is called by:
 24004 ;;		_ICMP_EchoReply
 24005 ;;		_IPV4_Send
 24006 ;;		_TCP_Snd
 24007 ;;		_UDP_Send
 24008 ;; This function uses a non-reentrant model
 24009 ;;
 24010                           
 24011                           	psect	text99
 24012  0060CC                     __ptext99:
 24013                           	opt stack 0
 24014  0060CC                     _ETH_Insert:
 24015                           	opt stack 16
 24016                           
 24017                           ;incstack = 0
 24018                           ;ETH_Insert@data stored from wreg
 24019  0060CC  6E1D               	movwf	ETH_Insert@data,c
 24020                           
 24021                           ;j60_driver.c: 598: uint16_t current_tx_ptr = EWRPT;
 24022  0060CE  CEE2 F01B          	movff	3810,ETH_Insert@current_tx_ptr	;volatile
 24023  0060D2  CEE3 F01C          	movff	3811,ETH_Insert@current_tx_ptr+1	;volatile
 24024                           
 24025                           ;j60_driver.c: 599: EWRPT = ((8192) - (1518)) + offset + 1;
 24026  0060D6  0E13               	movlw	19
 24027  0060D8  2419               	addwf	ETH_Insert@offset,w,c
 24028  0060DA  010E               	movlb	14	; () banked
 24029  0060DC  6FE2               	movwf	226,b	;volatile
 24030  0060DE  0E1A               	movlw	26
 24031  0060E0  201A               	addwfc	ETH_Insert@offset+1,w,c
 24032  0060E2  6FE3               	movwf	227,b	;volatile
 24033                           
 24034                           ;j60_driver.c: 600: while(len--)
 24035  0060E4  D007               	goto	l8031
 24036  0060E6                     l8027:
 24037                           
 24038                           ;j60_driver.c: 601: {
 24039                           ;j60_driver.c: 602: ETH_EdataWrite(*data++);
 24040  0060E6  501D               	movf	ETH_Insert@data,w,c
 24041  0060E8  6ED9               	movwf	fsr2l,c
 24042  0060EA  6ADA               	clrf	fsr2h,c
 24043  0060EC  50DF               	movf	indf2,w,c
 24044  0060EE                     i44L__ptext100:
 24045                           	opt stack 0
 24046  0060EE                     i44L_ETH_EdataWrite:
 24047                           	opt stack 0
 24048  0060EE                     i44Ll7821:
 24049                           	opt stack 16
 24050  0060EE  CFE8 FF61          	movff	wreg,3937	;# 
 24051  0060F2                     i44Ll463:
 24052                           	opt stack 16
 24053  0060F2  2A1D               	incf	ETH_Insert@data,f,c
 24054  0060F4                     l8031:
 24055  0060F4  0617               	decf	ETH_Insert@len,f,c
 24056  0060F6  A0D8               	btfss	status,0,c
 24057  0060F8  0618               	decf	ETH_Insert@len+1,f,c
 24058  0060FA  2817               	incf	ETH_Insert@len,w,c
 24059  0060FC  E1F4               	bnz	l8027
 24060  0060FE  2818               	incf	ETH_Insert@len+1,w,c
 24061  006100  E1F2               	bnz	l8027
 24062                           
 24063                           ;j60_driver.c: 603: }
 24064                           ;j60_driver.c: 604: EWRPT = current_tx_ptr;
 24065  006102  C01B  FEE2         	movff	ETH_Insert@current_tx_ptr,3810	;volatile
 24066  006106  C01C  FEE3         	movff	ETH_Insert@current_tx_ptr+1,3811	;volatile
 24067  00610A  0012               	return		;funcret
 24068  00610C                     __end_of_ETH_Insert:
 24069                           	opt stack 0
 24070                           tosu	equ	0xFFF
 24071                           tosh	equ	0xFFE
 24072                           tosl	equ	0xFFD
 24073                           pclath	equ	0xFFA
 24074                           tblptru	equ	0xFF8
 24075                           tblptrh	equ	0xFF7
 24076                           tblptrl	equ	0xFF6
 24077                           tablat	equ	0xFF5
 24078                           prodh	equ	0xFF4
 24079                           prodl	equ	0xFF3
 24080                           intcon	equ	0xFF2
 24081                           indf0	equ	0xFEF
 24082                           postinc0	equ	0xFEE
 24083                           fsr0h	equ	0xFEA
 24084                           fsr0l	equ	0xFE9
 24085                           wreg	equ	0xFE8
 24086                           postinc1	equ	0xFE6
 24087                           postdec1	equ	0xFE5
 24088                           plusw1	equ	0xFE3
 24089                           fsr1h	equ	0xFE2
 24090                           fsr1l	equ	0xFE1
 24091                           bsr	equ	0xFE0
 24092                           indf2	equ	0xFDF
 24093                           postinc2	equ	0xFDE
 24094                           postdec2	equ	0xFDD
 24095                           plusw2	equ	0xFDB
 24096                           fsr2h	equ	0xFDA
 24097                           fsr2l	equ	0xFD9
 24098                           status	equ	0xFD8
 24099                           
 24100 ;; *************** function _ETH_EdataWrite *****************
 24101 ;; Defined at:
 24102 ;;		line 82 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 24103 ;; Parameters:    Size  Location     Type
 24104 ;;  d               1    wreg     unsigned char 
 24105 ;; Auto vars:     Size  Location     Type
 24106 ;;  d               1    0[COMRAM] unsigned char 
 24107 ;; Return value:  Size  Location     Type
 24108 ;;		None               void
 24109 ;; Registers used:
 24110 ;;		wreg
 24111 ;; Tracked objects:
 24112 ;;		On entry : 0/0
 24113 ;;		On exit  : 0/0
 24114 ;;		Unchanged: 0/0
 24115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24120 ;;Total ram usage:        0 bytes
 24121 ;; Hardware stack levels used:    1
 24122 ;; Hardware stack levels required when called:    8
 24123 ;; This function calls:
 24124 ;;		Nothing
 24125 ;; This function is called by:
 24126 ;;		_ETH_Write8
 24127 ;;		_ETH_Write16
 24128 ;;		_ETH_Write32
 24129 ;;		_ETH_WriteBlock
 24130 ;;		_ETH_WriteStart
 24131 ;;		_ETH_Insert
 24132 ;; This function uses a non-reentrant model
 24133 ;;
 24134                           
 24135                           	psect	text100
 24136  000000                     __ptext100:
 24137                           	opt stack 0
 24138  000000                     _ETH_EdataWrite:
 24139                           	opt stack 0
 24140  000000                     __end_of_ETH_EdataWrite:
 24141                           	opt stack 0
 24142                           tosu	equ	0xFFF
 24143                           tosh	equ	0xFFE
 24144                           tosl	equ	0xFFD
 24145                           pclath	equ	0xFFA
 24146                           tblptru	equ	0xFF8
 24147                           tblptrh	equ	0xFF7
 24148                           tblptrl	equ	0xFF6
 24149                           tablat	equ	0xFF5
 24150                           prodh	equ	0xFF4
 24151                           prodl	equ	0xFF3
 24152                           intcon	equ	0xFF2
 24153                           indf0	equ	0xFEF
 24154                           postinc0	equ	0xFEE
 24155                           fsr0h	equ	0xFEA
 24156                           fsr0l	equ	0xFE9
 24157                           wreg	equ	0xFE8
 24158                           postinc1	equ	0xFE6
 24159                           postdec1	equ	0xFE5
 24160                           plusw1	equ	0xFE3
 24161                           fsr1h	equ	0xFE2
 24162                           fsr1l	equ	0xFE1
 24163                           bsr	equ	0xFE0
 24164                           indf2	equ	0xFDF
 24165                           postinc2	equ	0xFDE
 24166                           postdec2	equ	0xFDD
 24167                           plusw2	equ	0xFDB
 24168                           fsr2h	equ	0xFDA
 24169                           fsr2l	equ	0xFD9
 24170                           status	equ	0xFD8
 24171                           
 24172 ;; *************** function _ETH_ReadBlock *****************
 24173 ;; Defined at:
 24174 ;;		line 445 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 24175 ;; Parameters:    Size  Location     Type
 24176 ;;  buffer          2   22[COMRAM] PTR void 
 24177 ;;		 -> ?_sprintf(2), ?_printf(2), main@str(32), STR_8(13), 
 24178 ;;		 -> STR_7(17), DEMO_TCP_Client@txdataPort60(80), DEMO_TCP_Client@strTmp(17), DEMO_TCP_Client@rxdataPort60(50), 
 24179 ;;		 -> udpHeader(8), tcpHeader(20), Network_Read@debug_str(80), Network_Read@header(14), 
 24180 ;;		 -> ipv4Header(20), ICMP_Receive@icmpHdr(8), DHCP_Handler@ethPktMAC(6), ARPV4_Packet@header(28), 
 24181 ;;		 -> STR_1(15), NULL(0), 
 24182 ;;  length          2   24[COMRAM] unsigned int 
 24183 ;; Auto vars:     Size  Location     Type
 24184 ;;  p               2   29[COMRAM] PTR unsigned char 
 24185 ;;		 -> ?_sprintf(2), ?_printf(2), main@str(32), STR_8(13), 
 24186 ;;		 -> STR_7(17), DEMO_TCP_Client@txdataPort60(80), DEMO_TCP_Client@strTmp(17), DEMO_TCP_Client@rxdataPort60(50), 
 24187 ;;		 -> udpHeader(8), tcpHeader(20), Network_Read@debug_str(80), Network_Read@header(14), 
 24188 ;;		 -> ipv4Header(20), ICMP_Receive@icmpHdr(8), DHCP_Handler@ethPktMAC(6), ARPV4_Packet@header(28), 
 24189 ;;		 -> STR_1(15), NULL(0), 
 24190 ;;  len             2   27[COMRAM] unsigned int 
 24191 ;; Return value:  Size  Location     Type
 24192 ;;                  2   22[COMRAM] unsigned int 
 24193 ;; Registers used:
 24194 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24195 ;; Tracked objects:
 24196 ;;		On entry : 0/1
 24197 ;;		On exit  : F/1
 24198 ;;		Unchanged: 0/0
 24199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24200 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24201 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24202 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24203 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24204 ;;Total ram usage:        9 bytes
 24205 ;; Hardware stack levels used:    1
 24206 ;; Hardware stack levels required when called:    9
 24207 ;; This function calls:
 24208 ;;		_ETH_EdataRead
 24209 ;; This function is called by:
 24210 ;;		_ARPV4_Packet
 24211 ;;		_DHCP_Handler
 24212 ;;		_ICMP_Receive
 24213 ;;		_IPV4_Packet
 24214 ;;		_Network_Read
 24215 ;;		_TCP_PayloadSave
 24216 ;;		_TCP_Recv
 24217 ;;		_UDP_Receive
 24218 ;; This function uses a non-reentrant model
 24219 ;;
 24220                           
 24221                           	psect	text101
 24222  005B92                     __ptext101:
 24223                           	opt stack 0
 24224  005B92                     _ETH_ReadBlock:
 24225                           	opt stack 17
 24226                           
 24227                           ;j60_driver.c: 447: uint16_t len = 0;
 24228                           
 24229                           ;incstack = 0
 24230  005B92  6A1C               	clrf	ETH_ReadBlock@len,c
 24231  005B94  6A1D               	clrf	ETH_ReadBlock@len+1,c
 24232                           
 24233                           ;j60_driver.c: 448: char *p = buffer;
 24234  005B96  C017  F01E         	movff	ETH_ReadBlock@buffer,ETH_ReadBlock@p
 24235  005B9A  C018  F01F         	movff	ETH_ReadBlock@buffer+1,ETH_ReadBlock@p+1
 24236                           
 24237                           ;j60_driver.c: 449: while(rxPacketStatusVector.byteCount && length)
 24238  005B9E  D01F               	goto	l8379
 24239  005BA0                     l8367:
 24240                           
 24241                           ; BSR set to: 1
 24242                           ;j60_driver.c: 450: {
 24243                           ;j60_driver.c: 451: *p++ = ETH_EdataRead();
 24244  005BA0  C01E  FFF6         	movff	ETH_ReadBlock@p,tblptrl
 24245  005BA4  C01F  FFF7         	movff	ETH_ReadBlock@p+1,tblptrh
 24246  005BA8  0E00               	movlw	low (__smallconst shr (0+16))
 24247  005BAA  6EF8               	movwf	tblptru,c
 24248  005BAC                     i45L__ptext102:
 24249                           	opt stack 0
 24250  005BAC                     i45L_ETH_EdataRead:
 24251                           	opt stack 0
 24252  005BAC                     i45Ll7815:
 24253                           	opt stack 15
 24254  005BAC  CF61 FE7E          	movff	3937,_errataTemp	;# 
 24255  005BB0                     i45Ll7817:
 24256                           	opt stack 15
 24257                           
 24258                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
 24259  005BB0  010E               	movlb	14	; () banked
 24260  005BB2  517E               	movf	126,w,b
 24261  005BB4                     i45Ll460:
 24262                           	opt stack 17
 24263  005BB4  6E1B               	movwf	??_ETH_ReadBlock& (0+255),c
 24264  005BB6  0E0F               	movlw	(high __ramtop+-1)
 24265  005BB8  64F7               	cpfsgt	tblptrh,c
 24266  005BBA  D004               	bra	u11897
 24267  005BBC  C01B  FFF5         	movff	??_ETH_ReadBlock,tablat
 24268  005BC0  000C               	tblwt		*
 24269  005BC2  D004               	bra	u11890
 24270  005BC4                     u11897:
 24271  005BC4  EC86  F011         	call	PL389	;call to abstracted procedure
 24272  005BC8  C01B  FFEF         	movff	??_ETH_ReadBlock,indf0
 24273  005BCC                     u11890:
 24274  005BCC  4A1E               	infsnz	ETH_ReadBlock@p,f,c
 24275  005BCE  2A1F               	incf	ETH_ReadBlock@p+1,f,c
 24276                           
 24277                           ;j60_driver.c: 452: len ++;
 24278  005BD0  4A1C               	infsnz	ETH_ReadBlock@len,f,c
 24279  005BD2  2A1D               	incf	ETH_ReadBlock@len+1,f,c
 24280                           
 24281                           ;j60_driver.c: 453: length --;
 24282  005BD4  0619               	decf	ETH_ReadBlock@length,f,c
 24283  005BD6  A0D8               	btfss	status,0,c
 24284  005BD8  061A               	decf	ETH_ReadBlock@length+1,f,c
 24285                           
 24286                           ;j60_driver.c: 454: rxPacketStatusVector.byteCount --;
 24287                           
 24288                           ; BSR set to: 1
 24289                           ;j60_driver.c: 455: ethData.error = 0;
 24290  005BDA  ECC8  F031         	call	PL681	;call to abstracted procedure
 24291  005BDE                     l8379:
 24292  005BDE  0101               	movlb	1	; () banked
 24293  005BE0  51C9               	movf	_rxPacketStatusVector& (0+255),w,b
 24294  005BE2  11CA               	iorwf	(_rxPacketStatusVector+1)& (0+255),w,b
 24295  005BE4  E003               	bz	l544
 24296                           
 24297                           ; BSR set to: 1
 24298  005BE6  5019               	movf	ETH_ReadBlock@length,w,c
 24299  005BE8  101A               	iorwf	ETH_ReadBlock@length+1,w,c
 24300  005BEA  E1DA               	bnz	l8367
 24301  005BEC                     l544:
 24302                           
 24303                           ; BSR set to: 1
 24304                           ;j60_driver.c: 456: }
 24305                           ;j60_driver.c: 457: return len;
 24306  005BEC  C01C  F017         	movff	ETH_ReadBlock@len,?_ETH_ReadBlock
 24307  005BF0  C01D  F018         	movff	ETH_ReadBlock@len+1,?_ETH_ReadBlock+1
 24308                           
 24309                           ; BSR set to: 1
 24310  005BF4  0012               	return		;funcret
 24311  005BF6                     __end_of_ETH_ReadBlock:
 24312                           	opt stack 0
 24313                           tosu	equ	0xFFF
 24314                           tosh	equ	0xFFE
 24315                           tosl	equ	0xFFD
 24316                           pclath	equ	0xFFA
 24317                           tblptru	equ	0xFF8
 24318                           tblptrh	equ	0xFF7
 24319                           tblptrl	equ	0xFF6
 24320                           tablat	equ	0xFF5
 24321                           prodh	equ	0xFF4
 24322                           prodl	equ	0xFF3
 24323                           intcon	equ	0xFF2
 24324                           indf0	equ	0xFEF
 24325                           postinc0	equ	0xFEE
 24326                           fsr0h	equ	0xFEA
 24327                           fsr0l	equ	0xFE9
 24328                           wreg	equ	0xFE8
 24329                           postinc1	equ	0xFE6
 24330                           postdec1	equ	0xFE5
 24331                           plusw1	equ	0xFE3
 24332                           fsr1h	equ	0xFE2
 24333                           fsr1l	equ	0xFE1
 24334                           bsr	equ	0xFE0
 24335                           indf2	equ	0xFDF
 24336                           postinc2	equ	0xFDE
 24337                           postdec2	equ	0xFDD
 24338                           plusw2	equ	0xFDB
 24339                           fsr2h	equ	0xFDA
 24340                           fsr2l	equ	0xFD9
 24341                           status	equ	0xFD8
 24342                           
 24343 ;; *************** function _ETH_EdataRead *****************
 24344 ;; Defined at:
 24345 ;;		line 76 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 24346 ;; Parameters:    Size  Location     Type
 24347 ;;		None
 24348 ;; Auto vars:     Size  Location     Type
 24349 ;;		None
 24350 ;; Return value:  Size  Location     Type
 24351 ;;                  1    wreg      unsigned char 
 24352 ;; Registers used:
 24353 ;;		wreg, status,2
 24354 ;; Tracked objects:
 24355 ;;		On entry : 0/1
 24356 ;;		On exit  : F/E
 24357 ;;		Unchanged: 0/0
 24358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24363 ;;Total ram usage:        0 bytes
 24364 ;; Hardware stack levels used:    1
 24365 ;; Hardware stack levels required when called:    8
 24366 ;; This function calls:
 24367 ;;		Nothing
 24368 ;; This function is called by:
 24369 ;;		_ETH_NextPacketUpdate
 24370 ;;		_ETH_Read8
 24371 ;;		_ETH_Read16
 24372 ;;		_ETH_Read32
 24373 ;;		_ETH_ReadBlock
 24374 ;;		_ETH_ComputeChecksum
 24375 ;; This function uses a non-reentrant model
 24376 ;;
 24377                           
 24378                           	psect	text102
 24379  000000                     __ptext102:
 24380                           	opt stack 0
 24381  000000                     _ETH_EdataRead:
 24382                           	opt stack 0
 24383  000000                     __end_of_ETH_EdataRead:
 24384                           	opt stack 0
 24385                           tosu	equ	0xFFF
 24386                           tosh	equ	0xFFE
 24387                           tosl	equ	0xFFD
 24388                           pclath	equ	0xFFA
 24389                           tblptru	equ	0xFF8
 24390                           tblptrh	equ	0xFF7
 24391                           tblptrl	equ	0xFF6
 24392                           tablat	equ	0xFF5
 24393                           prodh	equ	0xFF4
 24394                           prodl	equ	0xFF3
 24395                           intcon	equ	0xFF2
 24396                           indf0	equ	0xFEF
 24397                           postinc0	equ	0xFEE
 24398                           fsr0h	equ	0xFEA
 24399                           fsr0l	equ	0xFE9
 24400                           wreg	equ	0xFE8
 24401                           postinc1	equ	0xFE6
 24402                           postdec1	equ	0xFE5
 24403                           plusw1	equ	0xFE3
 24404                           fsr1h	equ	0xFE2
 24405                           fsr1l	equ	0xFE1
 24406                           bsr	equ	0xFE0
 24407                           indf2	equ	0xFDF
 24408                           postinc2	equ	0xFDE
 24409                           postdec2	equ	0xFDD
 24410                           plusw2	equ	0xFDB
 24411                           fsr2h	equ	0xFDA
 24412                           fsr2l	equ	0xFD9
 24413                           status	equ	0xFD8
 24414                           
 24415 ;; *************** function _TCB_Reset *****************
 24416 ;; Defined at:
 24417 ;;		line 134 in file "../../TCPIP Library/source/tcpv4.c"
 24418 ;; Parameters:    Size  Location     Type
 24419 ;;  tcbPtr          2   22[COMRAM] PTR struct .
 24420 ;;		 -> ?_sprintf(2), ?_printf(2), main@str(32), STR_8(13), 
 24421 ;;		 -> STR_7(17), DEMO_TCP_Client@txdataPort60(80), DEMO_TCP_Client@strTmp(17), DEMO_TCP_Client@rxdataPort60(50), 
 24422 ;;		 -> DEMO_TCP_Client@port60TCB(55), Network_Read@debug_str(80), STR_1(15), NULL(0), 
 24423 ;; Auto vars:     Size  Location     Type
 24424 ;;		None
 24425 ;; Return value:  Size  Location     Type
 24426 ;;		None               void
 24427 ;; Registers used:
 24428 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 24429 ;; Tracked objects:
 24430 ;;		On entry : 0/1
 24431 ;;		On exit  : 0/0
 24432 ;;		Unchanged: 0/0
 24433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24434 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24436 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24437 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24438 ;;Total ram usage:        4 bytes
 24439 ;; Hardware stack levels used:    1
 24440 ;; Hardware stack levels required when called:    8
 24441 ;; This function calls:
 24442 ;;		Nothing
 24443 ;; This function is called by:
 24444 ;;		_TCP_FiniteStateMachine
 24445 ;;		_TCP_SocketInit
 24446 ;; This function uses a non-reentrant model
 24447 ;;
 24448                           
 24449                           	psect	text103
 24450  0047C6                     __ptext103:
 24451                           	opt stack 0
 24452  0047C6                     _TCB_Reset:
 24453                           	opt stack 19
 24454                           
 24455                           ;tcpv4.c: 136: tcbPtr->destIP = 0;
 24456                           
 24457                           ; BSR set to: 14
 24458                           ;incstack = 0
 24459  0047C6  0E02               	movlw	2
 24460  0047C8  D8A6               	call	PL399	;call to abstracted procedure
 24461  0047CA  64F7               	cpfsgt	tblptrh,c
 24462  0047CC  D007               	bra	u12627
 24463  0047CE  6AF5               	clrf	tablat,c
 24464  0047D0  000D               	tblwt		*+
 24465  0047D2  6AF5               	clrf	tablat,c
 24466  0047D4  000D               	tblwt		*+
 24467  0047D6  ECF2  F011         	call	PL423	;call to abstracted procedure
 24468  0047DA  D004               	bra	u12620
 24469  0047DC                     u12627:
 24470  0047DC  EC86  F011         	call	PL389	;call to abstracted procedure
 24471  0047E0  EC66  F012         	call	PL473	;call to abstracted procedure
 24472  0047E4                     u12620:
 24473                           
 24474                           ;tcpv4.c: 137: tcbPtr->destPort = 0;
 24475  0047E4  0E06               	movlw	6
 24476  0047E6  D897               	call	PL399	;call to abstracted procedure
 24477  0047E8  64F7               	cpfsgt	tblptrh,c
 24478  0047EA  D003               	bra	u12637
 24479  0047EC  ECF2  F011         	call	PL423	;call to abstracted procedure
 24480  0047F0  D004               	bra	u12630
 24481  0047F2                     u12637:
 24482  0047F2  EC86  F011         	call	PL389	;call to abstracted procedure
 24483  0047F6  6AEE               	clrf	postinc0,c
 24484  0047F8  6AEF               	clrf	indf0,c
 24485  0047FA                     u12630:
 24486                           
 24487                           ;tcpv4.c: 138: tcbPtr->localSeqno = 0;
 24488  0047FA  0E10               	movlw	16
 24489  0047FC  D88C               	call	PL399	;call to abstracted procedure
 24490  0047FE  64F7               	cpfsgt	tblptrh,c
 24491  004800  D007               	bra	u12647
 24492  004802  6AF5               	clrf	tablat,c
 24493  004804  000D               	tblwt		*+
 24494  004806  6AF5               	clrf	tablat,c
 24495  004808  000D               	tblwt		*+
 24496  00480A  ECF2  F011         	call	PL423	;call to abstracted procedure
 24497  00480E  D004               	bra	u12640
 24498  004810                     u12647:
 24499  004810  EC86  F011         	call	PL389	;call to abstracted procedure
 24500  004814  EC66  F012         	call	PL473	;call to abstracted procedure
 24501  004818                     u12640:
 24502                           
 24503                           ;tcpv4.c: 139: tcbPtr->localLastAck = 0;
 24504  004818  0E14               	movlw	20
 24505  00481A  D87D               	call	PL399	;call to abstracted procedure
 24506  00481C  64F7               	cpfsgt	tblptrh,c
 24507  00481E  D007               	bra	u12657
 24508  004820  6AF5               	clrf	tablat,c
 24509  004822  000D               	tblwt		*+
 24510  004824  6AF5               	clrf	tablat,c
 24511  004826  000D               	tblwt		*+
 24512  004828  ECF2  F011         	call	PL423	;call to abstracted procedure
 24513  00482C  D004               	bra	u12650
 24514  00482E                     u12657:
 24515  00482E  EC86  F011         	call	PL389	;call to abstracted procedure
 24516  004832  EC66  F012         	call	PL473	;call to abstracted procedure
 24517  004836                     u12650:
 24518                           
 24519                           ;tcpv4.c: 140: tcbPtr->remoteSeqno = 0;
 24520  004836  0E08               	movlw	8
 24521  004838  D86E               	call	PL399	;call to abstracted procedure
 24522  00483A  64F7               	cpfsgt	tblptrh,c
 24523  00483C  D007               	bra	u12667
 24524  00483E  6AF5               	clrf	tablat,c
 24525  004840  000D               	tblwt		*+
 24526  004842  6AF5               	clrf	tablat,c
 24527  004844  000D               	tblwt		*+
 24528  004846  ECF2  F011         	call	PL423	;call to abstracted procedure
 24529  00484A  D004               	bra	u12660
 24530  00484C                     u12667:
 24531  00484C  EC86  F011         	call	PL389	;call to abstracted procedure
 24532  004850  EC66  F012         	call	PL473	;call to abstracted procedure
 24533  004854                     u12660:
 24534                           
 24535                           ;tcpv4.c: 141: tcbPtr->remoteAck = 0;
 24536  004854  0E0C               	movlw	12
 24537  004856  D85F               	call	PL399	;call to abstracted procedure
 24538  004858  64F7               	cpfsgt	tblptrh,c
 24539  00485A  D007               	bra	u12677
 24540  00485C  6AF5               	clrf	tablat,c
 24541  00485E  000D               	tblwt		*+
 24542  004860  6AF5               	clrf	tablat,c
 24543  004862  000D               	tblwt		*+
 24544  004864  ECF2  F011         	call	PL423	;call to abstracted procedure
 24545  004868  D004               	bra	u12670
 24546  00486A                     u12677:
 24547  00486A  EC86  F011         	call	PL389	;call to abstracted procedure
 24548  00486E  EC66  F012         	call	PL473	;call to abstracted procedure
 24549  004872                     u12670:
 24550                           
 24551                           ;tcpv4.c: 142: tcbPtr->remoteWnd = 0;
 24552  004872  0E18               	movlw	24
 24553  004874  D850               	call	PL399	;call to abstracted procedure
 24554  004876  64F7               	cpfsgt	tblptrh,c
 24555  004878  D003               	bra	u12687
 24556  00487A  ECF2  F011         	call	PL423	;call to abstracted procedure
 24557  00487E  D004               	bra	u12680
 24558  004880                     u12687:
 24559  004880  EC86  F011         	call	PL389	;call to abstracted procedure
 24560  004884  6AEE               	clrf	postinc0,c
 24561  004886  6AEF               	clrf	indf0,c
 24562  004888                     u12680:
 24563                           
 24564                           ;tcpv4.c: 144: tcbPtr->timeout = 0;
 24565  004888  0E30               	movlw	48
 24566  00488A  D845               	call	PL399	;call to abstracted procedure
 24567  00488C  64F7               	cpfsgt	tblptrh,c
 24568  00488E  D003               	bra	u12697
 24569  004890  ECF2  F011         	call	PL423	;call to abstracted procedure
 24570  004894  D004               	bra	u12690
 24571  004896                     u12697:
 24572  004896  EC86  F011         	call	PL389	;call to abstracted procedure
 24573  00489A  6AEE               	clrf	postinc0,c
 24574  00489C  6AEF               	clrf	indf0,c
 24575  00489E                     u12690:
 24576                           
 24577                           ;tcpv4.c: 145: tcbPtr->timeoutReloadValue = 0;
 24578  00489E  0E32               	movlw	50
 24579  0048A0  D83A               	call	PL399	;call to abstracted procedure
 24580  0048A2  64F7               	cpfsgt	tblptrh,c
 24581  0048A4  D003               	bra	u12707
 24582  0048A6  ECF2  F011         	call	PL423	;call to abstracted procedure
 24583  0048AA  D004               	bra	u12700
 24584  0048AC                     u12707:
 24585  0048AC  EC86  F011         	call	PL389	;call to abstracted procedure
 24586  0048B0  6AEE               	clrf	postinc0,c
 24587  0048B2  6AEF               	clrf	indf0,c
 24588  0048B4                     u12700:
 24589                           
 24590                           ;tcpv4.c: 146: tcbPtr->timeoutsCount = 0;
 24591  0048B4  0E34               	movlw	52
 24592  0048B6  D82F               	call	PL399	;call to abstracted procedure
 24593  0048B8  64F7               	cpfsgt	tblptrh,c
 24594  0048BA  D003               	bra	u12717
 24595  0048BC  6AF5               	clrf	tablat,c
 24596  0048BE  000C               	tblwt		*
 24597  0048C0  D003               	bra	u12710
 24598  0048C2                     u12717:
 24599  0048C2  EC86  F011         	call	PL389	;call to abstracted procedure
 24600  0048C6  6AEF               	clrf	indf0,c
 24601  0048C8                     u12710:
 24602                           
 24603                           ;tcpv4.c: 147: tcbPtr->flags = 0;
 24604  0048C8  0E35               	movlw	53
 24605  0048CA  D825               	call	PL399	;call to abstracted procedure
 24606  0048CC  64F7               	cpfsgt	tblptrh,c
 24607  0048CE  D003               	bra	u12727
 24608  0048D0  6AF5               	clrf	tablat,c
 24609  0048D2  000C               	tblwt		*
 24610  0048D4  D003               	bra	u12720
 24611  0048D6                     u12727:
 24612  0048D6  EC86  F011         	call	PL389	;call to abstracted procedure
 24613  0048DA  6AEF               	clrf	indf0,c
 24614  0048DC                     u12720:
 24615                           
 24616                           ;tcpv4.c: 149: tcbPtr->localPort = 0;
 24617  0048DC  C017  FFF6         	movff	TCB_Reset@tcbPtr,tblptrl
 24618  0048E0  C018  FFF7         	movff	TCB_Reset@tcbPtr+1,tblptrh
 24619  0048E4  0E00               	movlw	low (__smallconst shr (0+16))
 24620  0048E6  6EF8               	movwf	tblptru,c
 24621  0048E8  0E0F               	movlw	(high __ramtop+-1)
 24622  0048EA  64F7               	cpfsgt	tblptrh,c
 24623  0048EC  D003               	bra	u12737
 24624  0048EE  ECF2  F011         	call	PL423	;call to abstracted procedure
 24625  0048F2  D004               	bra	u12730
 24626  0048F4                     u12737:
 24627  0048F4  EC86  F011         	call	PL389	;call to abstracted procedure
 24628  0048F8  6AEE               	clrf	postinc0,c
 24629  0048FA  6AEF               	clrf	indf0,c
 24630  0048FC                     u12730:
 24631                           
 24632                           ;tcpv4.c: 150: tcbPtr->socketState = SOCKET_CLOSED;
 24633  0048FC  0E36               	movlw	54
 24634  0048FE  D80B               	call	PL399	;call to abstracted procedure
 24635  004900  64F7               	cpfsgt	tblptrh,c
 24636  004902  D004               	bra	u12747
 24637  004904  0E01               	movlw	1
 24638  004906  6EF5               	movwf	tablat,c
 24639  004908  000C               	tblwt		*
 24640  00490A  D004               	bra	u12740
 24641  00490C                     u12747:
 24642  00490C  EC86  F011         	call	PL389	;call to abstracted procedure
 24643  004910  0E01               	movlw	1
 24644  004912  6EEF               	movwf	indf0,c
 24645  004914                     u12740:
 24646  004914  0012               	return		;funcret
 24647  004916                     __end_of_TCB_Reset:
 24648                           	opt stack 0
 24649  004916                     PL399:
 24650                           	opt stack 19
 24651  004916  2417               	addwf	TCB_Reset@tcbPtr,w,c
 24652  004918  6E19               	movwf	??_TCB_Reset& (0+255),c
 24653  00491A  0E00               	movlw	0
 24654  00491C  2018               	addwfc	TCB_Reset@tcbPtr+1,w,c
 24655  00491E  6E1A               	movwf	(??_TCB_Reset+1)& (0+255),c
 24656  004920  C019  FFF6         	movff	??_TCB_Reset,tblptrl
 24657  004924  C01A  FFF7         	movff	??_TCB_Reset+1,tblptrh
 24658  004928  0E00               	movlw	low (__smallconst shr (0+16))
 24659  00492A  6EF8               	movwf	tblptru,c
 24660  00492C  0E0F               	movlw	(high __ramtop+-1)
 24661  00492E  0012               	return	
 24662  004930                     __end_ofPL399:
 24663                           	opt stack 0
 24664                           tosu	equ	0xFFF
 24665                           tosh	equ	0xFFE
 24666                           tosl	equ	0xFFD
 24667                           pclath	equ	0xFFA
 24668                           tblptru	equ	0xFF8
 24669                           tblptrh	equ	0xFF7
 24670                           tblptrl	equ	0xFF6
 24671                           tablat	equ	0xFF5
 24672                           prodh	equ	0xFF4
 24673                           prodl	equ	0xFF3
 24674                           intcon	equ	0xFF2
 24675                           indf0	equ	0xFEF
 24676                           postinc0	equ	0xFEE
 24677                           fsr0h	equ	0xFEA
 24678                           fsr0l	equ	0xFE9
 24679                           wreg	equ	0xFE8
 24680                           postinc1	equ	0xFE6
 24681                           postdec1	equ	0xFE5
 24682                           plusw1	equ	0xFE3
 24683                           fsr1h	equ	0xFE2
 24684                           fsr1l	equ	0xFE1
 24685                           bsr	equ	0xFE0
 24686                           indf2	equ	0xFDF
 24687                           postinc2	equ	0xFDE
 24688                           postdec2	equ	0xFDD
 24689                           plusw2	equ	0xFDB
 24690                           fsr2h	equ	0xFDA
 24691                           fsr2l	equ	0xFD9
 24692                           status	equ	0xFD8
 24693                           
 24694 ;; *************** function _ADC_GetConversion *****************
 24695 ;; Defined at:
 24696 ;;		line 106 in file "../board_support_package/picdem2_net/adc.c"
 24697 ;; Parameters:    Size  Location     Type
 24698 ;;  channel         1    wreg     enum E6609
 24699 ;; Auto vars:     Size  Location     Type
 24700 ;;  channel         1   25[COMRAM] enum E6609
 24701 ;; Return value:  Size  Location     Type
 24702 ;;                  2   22[COMRAM] unsigned int 
 24703 ;; Registers used:
 24704 ;;		wreg, status,2, status,0
 24705 ;; Tracked objects:
 24706 ;;		On entry : 0/2
 24707 ;;		On exit  : 0/0
 24708 ;;		Unchanged: 0/0
 24709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24710 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24711 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24712 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24713 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24714 ;;Total ram usage:        4 bytes
 24715 ;; Hardware stack levels used:    1
 24716 ;; Hardware stack levels required when called:    8
 24717 ;; This function calls:
 24718 ;;		Nothing
 24719 ;; This function is called by:
 24720 ;;		_DEMO_TCP_Client
 24721 ;; This function uses a non-reentrant model
 24722 ;;
 24723                           
 24724                           	psect	text104
 24725  006316                     __ptext104:
 24726                           	opt stack 0
 24727  006316                     _ADC_GetConversion:
 24728                           	opt stack 21
 24729                           
 24730                           ;incstack = 0
 24731                           ;ADC_GetConversion@channel stored from wreg
 24732  006316  6E1A               	movwf	ADC_GetConversion@channel,c
 24733                           
 24734                           ;adc.c: 109: ADCON0bits.CHS = channel;
 24735  006318  C01A  F019         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
 24736  00631C  4619               	rlncf	??_ADC_GetConversion,f,c
 24737  00631E  4619               	rlncf	??_ADC_GetConversion,f,c
 24738  006320  50C2               	movf	4034,w,c	;volatile
 24739  006322  1819               	xorwf	??_ADC_GetConversion,w,c
 24740  006324  0BC3               	andlw	-61
 24741  006326  1819               	xorwf	??_ADC_GetConversion,w,c
 24742  006328  6EC2               	movwf	4034,c	;volatile
 24743                           
 24744                           ;adc.c: 112: ADCON0bits.ADON = 1;
 24745  00632A  80C2               	bsf	4034,0,c	;volatile
 24746                           
 24747                           ;adc.c: 115: _delay((unsigned long)((5)*(41666667UL/4000000.0)));
 24748  00632C  0E11               	movlw	17
 24749  00632E                     u16597:
 24750  00632E  2EE8               	decfsz	wreg,f,c
 24751  006330  D7FE               	goto	u16597
 24752  006332  F000               	nop	
 24753                           
 24754                           ;adc.c: 118: ADCON0bits.GO_nDONE = 1;
 24755  006334  82C2               	bsf	4034,1,c	;volatile
 24756  006336                     l33:
 24757  006336  B2C2               	btfsc	4034,1,c	;volatile
 24758  006338  D7FE               	goto	l33
 24759                           
 24760                           ;adc.c: 123: }
 24761                           ;adc.c: 127: return (ADRES);
 24762  00633A  CFC3 F017          	movff	4035,?_ADC_GetConversion	;volatile
 24763  00633E  CFC4 F018          	movff	4036,?_ADC_GetConversion+1	;volatile
 24764  006342  0012               	return		;funcret
 24765  006344                     __end_of_ADC_GetConversion:
 24766                           	opt stack 0
 24767                           tosu	equ	0xFFF
 24768                           tosh	equ	0xFFE
 24769                           tosl	equ	0xFFD
 24770                           pclath	equ	0xFFA
 24771                           tblptru	equ	0xFF8
 24772                           tblptrh	equ	0xFF7
 24773                           tblptrl	equ	0xFF6
 24774                           tablat	equ	0xFF5
 24775                           prodh	equ	0xFF4
 24776                           prodl	equ	0xFF3
 24777                           intcon	equ	0xFF2
 24778                           indf0	equ	0xFEF
 24779                           postinc0	equ	0xFEE
 24780                           fsr0h	equ	0xFEA
 24781                           fsr0l	equ	0xFE9
 24782                           wreg	equ	0xFE8
 24783                           postinc1	equ	0xFE6
 24784                           postdec1	equ	0xFE5
 24785                           plusw1	equ	0xFE3
 24786                           fsr1h	equ	0xFE2
 24787                           fsr1l	equ	0xFE1
 24788                           bsr	equ	0xFE0
 24789                           indf2	equ	0xFDF
 24790                           postinc2	equ	0xFDE
 24791                           postdec2	equ	0xFDD
 24792                           plusw2	equ	0xFDB
 24793                           fsr2h	equ	0xFDA
 24794                           fsr2l	equ	0xFD9
 24795                           status	equ	0xFD8
 24796                           
 24797 ;; *************** function _low_isr *****************
 24798 ;; Defined at:
 24799 ;;		line 64 in file "main.c"
 24800 ;; Parameters:    Size  Location     Type
 24801 ;;		None
 24802 ;; Auto vars:     Size  Location     Type
 24803 ;;		None
 24804 ;; Return value:  Size  Location     Type
 24805 ;;		None               void
 24806 ;; Registers used:
 24807 ;;		wreg, status,2, status,0, cstack
 24808 ;; Tracked objects:
 24809 ;;		On entry : 0/0
 24810 ;;		On exit  : 0/0
 24811 ;;		Unchanged: 0/0
 24812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24815 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24816 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24817 ;;Total ram usage:        3 bytes
 24818 ;; Hardware stack levels used:    1
 24819 ;; Hardware stack levels required when called:    7
 24820 ;; This function calls:
 24821 ;;		i1_ETH_EventHandler
 24822 ;; This function is called by:
 24823 ;;		Interrupt level 1
 24824 ;; This function uses a non-reentrant model
 24825 ;;
 24826                           
 24827                           	psect	intcodelo
 24828  000018                     __pintcodelo:
 24829                           	opt stack 0
 24830  000018                     _low_isr:
 24831                           	opt stack 12
 24832                           
 24833                           ;incstack = 0
 24834  000018  8049               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 24835  00001A  CFD8 F014          	movff	status,??_low_isr
 24836  00001E  CFE8 F015          	movff	wreg,??_low_isr+1
 24837  000022  CFE0 F016          	movff	bsr,??_low_isr+2
 24838                           
 24839                           ;main.c: 67: ETH_EventHandler();
 24840  000026  EC12  F031         	call	i1_ETH_EventHandler	;wreg free
 24841  00002A  C016  FFE0         	movff	??_low_isr+2,bsr
 24842  00002E  C015  FFE8         	movff	??_low_isr+1,wreg
 24843  000032  C014  FFD8         	movff	??_low_isr,status
 24844  000036  9049               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 24845  000038  0010               	retfie	
 24846  00003A                     __end_of_low_isr:
 24847                           	opt stack 0
 24848                           tosu	equ	0xFFF
 24849                           tosh	equ	0xFFE
 24850                           tosl	equ	0xFFD
 24851                           pclath	equ	0xFFA
 24852                           tblptru	equ	0xFF8
 24853                           tblptrh	equ	0xFF7
 24854                           tblptrl	equ	0xFF6
 24855                           tablat	equ	0xFF5
 24856                           prodh	equ	0xFF4
 24857                           prodl	equ	0xFF3
 24858                           intcon	equ	0xFF2
 24859                           indf0	equ	0xFEF
 24860                           postinc0	equ	0xFEE
 24861                           fsr0h	equ	0xFEA
 24862                           fsr0l	equ	0xFE9
 24863                           wreg	equ	0xFE8
 24864                           postinc1	equ	0xFE6
 24865                           postdec1	equ	0xFE5
 24866                           plusw1	equ	0xFE3
 24867                           fsr1h	equ	0xFE2
 24868                           fsr1l	equ	0xFE1
 24869                           bsr	equ	0xFE0
 24870                           indf2	equ	0xFDF
 24871                           postinc2	equ	0xFDE
 24872                           postdec2	equ	0xFDD
 24873                           plusw2	equ	0xFDB
 24874                           fsr2h	equ	0xFDA
 24875                           fsr2l	equ	0xFD9
 24876                           status	equ	0xFD8
 24877                           
 24878 ;; *************** function i1_ETH_EventHandler *****************
 24879 ;; Defined at:
 24880 ;;		line 215 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 24881 ;; Parameters:    Size  Location     Type
 24882 ;;		None
 24883 ;; Auto vars:     Size  Location     Type
 24884 ;;		None
 24885 ;; Return value:  Size  Location     Type
 24886 ;;		None               void
 24887 ;; Registers used:
 24888 ;;		wreg, status,2, status,0, cstack
 24889 ;; Tracked objects:
 24890 ;;		On entry : 0/0
 24891 ;;		On exit  : 0/0
 24892 ;;		Unchanged: 0/0
 24893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24898 ;;Total ram usage:        0 bytes
 24899 ;; Hardware stack levels used:    1
 24900 ;; Hardware stack levels required when called:    6
 24901 ;; This function calls:
 24902 ;;		i1_ETH_CheckLinkUp
 24903 ;;		i1_PHY_Read
 24904 ;; This function is called by:
 24905 ;;		_low_isr
 24906 ;; This function uses a non-reentrant model
 24907 ;;
 24908                           
 24909                           	psect	text106
 24910  006224                     __ptext106:
 24911                           	opt stack 0
 24912  006224                     i1_ETH_EventHandler:
 24913                           	opt stack 0
 24914                           
 24915                           ;j60_driver.c: 218: PIR2bits.ETHIF = 0;
 24916                           
 24917                           ;incstack = 0
 24918                           
 24919                           ;j60_driver.c: 219: if(EPKTCNT >= 3)
 24920  006224  ECAF  F02F         	call	PL755	;call to abstracted procedure
 24921  006228  65D9               	cpfsgt	217,b	;volatile
 24922  00622A  D009               	goto	i1l484
 24923                           
 24924                           ; BSR set to: 14
 24925                           ;j60_driver.c: 222: if (EIRbits.LINKIF)
 24926  00622C  A860               	btfss	3936,4,c	;volatile
 24927  00622E  D007               	goto	i1l484
 24928                           
 24929                           ; BSR set to: 14
 24930                           ;j60_driver.c: 223: {
 24931                           ;j60_driver.c: 224: PHY_Read(PHIR);
 24932  006230  0E13               	movlw	19
 24933  006232  ECF3  F029         	call	i1_PHY_Read
 24934                           
 24935                           ; BSR set to: 14
 24936                           ;j60_driver.c: 226: ethData.linkChange = 1;
 24937                           
 24938                           ; BSR set to: 1
 24939                           ;j60_driver.c: 227: ethData.up = 0;
 24940  006236  ECA7  F02F         	call	PL745	;call to abstracted procedure
 24941                           
 24942                           ;j60_driver.c: 230: if(ETH_CheckLinkUp())
 24943  00623A  ECA2  F031         	call	i1_ETH_CheckLinkUp	;wreg free
 24944  00623E                     i1l484:
 24945                           
 24946                           ;j60_driver.c: 233: }
 24947                           ;j60_driver.c: 234: }
 24948                           ;j60_driver.c: 236: if(EIRbits.RXERIF)
 24949  00623E  B060               	btfsc	3936,0,c	;volatile
 24950                           
 24951                           ;j60_driver.c: 237: {
 24952                           ;j60_driver.c: 239: EIRbits.RXERIF = 0;
 24953  006240  9060               	bcf	3936,0,c	;volatile
 24954                           
 24955                           ;j60_driver.c: 240: }
 24956                           ;j60_driver.c: 242: if (EIRbits.TXERIF)
 24957  006242  B260               	btfsc	3936,1,c	;volatile
 24958                           
 24959                           ;j60_driver.c: 243: {
 24960                           ;j60_driver.c: 245: EIRbits.TXERIF = 0;
 24961  006244  9260               	bcf	3936,1,c	;volatile
 24962                           
 24963                           ;j60_driver.c: 246: }
 24964                           ;j60_driver.c: 248: if(EIRbits.TXIF)
 24965  006246  B660               	btfsc	3936,3,c	;volatile
 24966                           
 24967                           ;j60_driver.c: 249: {
 24968                           ;j60_driver.c: 251: EIRbits.TXIF = 0;
 24969                           
 24970                           ;j60_driver.c: 252: ethData.bufferBusy = 0;
 24971  006248  ECAB  F02F         	call	PL753	;call to abstracted procedure
 24972  00624C                     i1l489:
 24973                           
 24974                           ;j60_driver.c: 253: }
 24975                           ;j60_driver.c: 255: if (EIRbits.PKTIF)
 24976  00624C  AC60               	btfss	3936,6,c	;volatile
 24977  00624E  0012               	return	
 24978                           
 24979                           ;j60_driver.c: 256: {
 24980                           ;j60_driver.c: 257: if(ethData.pktReady == 0)
 24981  006250  0101               	movlb	1	; () banked
 24982  006252  B3BE               	btfsc	_ethData& (0+255),1,b	;volatile
 24983  006254  0012               	return	
 24984                           
 24985                           ; BSR set to: 1
 24986                           ;j60_driver.c: 258: {
 24987                           ;j60_driver.c: 260: ethData.pktReady = 1;
 24988                           
 24989                           ;j60_driver.c: 261: EIEbits.PKTIE = 0;
 24990  006256  EFA3  F02F         	goto	PL713	;call to abstracted procedure
 24991  00625A                     __end_ofi1_ETH_EventHandler:
 24992                           	opt stack 0
 24993                           tosu	equ	0xFFF
 24994                           tosh	equ	0xFFE
 24995                           tosl	equ	0xFFD
 24996                           pclath	equ	0xFFA
 24997                           tblptru	equ	0xFF8
 24998                           tblptrh	equ	0xFF7
 24999                           tblptrl	equ	0xFF6
 25000                           tablat	equ	0xFF5
 25001                           prodh	equ	0xFF4
 25002                           prodl	equ	0xFF3
 25003                           intcon	equ	0xFF2
 25004                           indf0	equ	0xFEF
 25005                           postinc0	equ	0xFEE
 25006                           fsr0h	equ	0xFEA
 25007                           fsr0l	equ	0xFE9
 25008                           wreg	equ	0xFE8
 25009                           postinc1	equ	0xFE6
 25010                           postdec1	equ	0xFE5
 25011                           plusw1	equ	0xFE3
 25012                           fsr1h	equ	0xFE2
 25013                           fsr1l	equ	0xFE1
 25014                           bsr	equ	0xFE0
 25015                           indf2	equ	0xFDF
 25016                           postinc2	equ	0xFDE
 25017                           postdec2	equ	0xFDD
 25018                           plusw2	equ	0xFDB
 25019                           fsr2h	equ	0xFDA
 25020                           fsr2l	equ	0xFD9
 25021                           status	equ	0xFD8
 25022                           
 25023 ;; *************** function i1_ETH_CheckLinkUp *****************
 25024 ;; Defined at:
 25025 ;;		line 198 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 25026 ;; Parameters:    Size  Location     Type
 25027 ;;		None
 25028 ;; Auto vars:     Size  Location     Type
 25029 ;;  ETH_CheckLin    4   15[COMRAM] unsigned long 
 25030 ;; Return value:  Size  Location     Type
 25031 ;;                  1    wreg      unsigned char 
 25032 ;; Registers used:
 25033 ;;		wreg, status,2, status,0, cstack
 25034 ;; Tracked objects:
 25035 ;;		On entry : F/1
 25036 ;;		On exit  : 0/0
 25037 ;;		Unchanged: 0/0
 25038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25040 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25042 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25043 ;;Total ram usage:        4 bytes
 25044 ;; Hardware stack levels used:    1
 25045 ;; Hardware stack levels required when called:    5
 25046 ;; This function calls:
 25047 ;;		i1_ETH_readLinkStatus
 25048 ;; This function is called by:
 25049 ;;		i1_ETH_EventHandler
 25050 ;; This function uses a non-reentrant model
 25051 ;;
 25052                           
 25053                           	psect	text107
 25054  006344                     __ptext107:
 25055                           	opt stack 0
 25056  006344                     i1_ETH_CheckLinkUp:
 25057                           	opt stack 0
 25058  006344                     i46L__ptext108:
 25059                           	opt stack 0
 25060  006344                     i46Li1_ETH_readLinkStatus:
 25061                           	opt stack 0
 25062  006344                     i46Li1l6981:
 25063                           	opt stack 12
 25064                           
 25065                           ; BSR set to: 1
 25066                           ;j60_driver.c: 195: return (PHY_Read(PHSTAT2));
 25067  006344  0E11               	movlw	17
 25068  006346  ECF3  F029         	call	i1_PHY_Read
 25069  00634A  C003  F00C         	movff	?i1_PHY_Read,?i1_ETH_readLinkStatus
 25070  00634E  C004  F00D         	movff	?i1_PHY_Read+1,?i1_ETH_readLinkStatus+1
 25071  006352  C005  F00E         	movff	?i1_PHY_Read+2,?i1_ETH_readLinkStatus+2
 25072  006356  C006  F00F         	movff	?i1_PHY_Read+3,?i1_ETH_readLinkStatus+3
 25073  00635A                     i46Li1l476:
 25074                           	opt stack 12
 25075  00635A  C00C  F010         	movff	?i1_ETH_readLinkStatus,i1ETH_CheckLinkUp@value
 25076  00635E  C00D  F011         	movff	?i1_ETH_readLinkStatus+1,i1ETH_CheckLinkUp@value+1
 25077  006362  C00E  F012         	movff	?i1_ETH_readLinkStatus+2,i1ETH_CheckLinkUp@value+2
 25078  006366  C00F  F013         	movff	?i1_ETH_readLinkStatus+3,i1ETH_CheckLinkUp@value+3
 25079                           
 25080                           ; BSR set to: 14
 25081                           ;j60_driver.c: 203: if(value & 0x0400)
 25082  00636A  A411               	btfss	i1ETH_CheckLinkUp@value+1,2,c
 25083  00636C  0C00               	retlw	0
 25084                           
 25085                           ; BSR set to: 14
 25086                           ;j60_driver.c: 204: {
 25087                           ;j60_driver.c: 205: ethData.up = 1;
 25088                           
 25089                           ; BSR set to: 1
 25090                           ;j60_driver.c: 206: return 1;
 25091  00636E  EF43  F031         	goto	PL751	;call to abstracted procedure
 25092  006372                     __end_ofi1_ETH_CheckLinkUp:
 25093                           	opt stack 0
 25094                           tosu	equ	0xFFF
 25095                           tosh	equ	0xFFE
 25096                           tosl	equ	0xFFD
 25097                           pclath	equ	0xFFA
 25098                           tblptru	equ	0xFF8
 25099                           tblptrh	equ	0xFF7
 25100                           tblptrl	equ	0xFF6
 25101                           tablat	equ	0xFF5
 25102                           prodh	equ	0xFF4
 25103                           prodl	equ	0xFF3
 25104                           intcon	equ	0xFF2
 25105                           indf0	equ	0xFEF
 25106                           postinc0	equ	0xFEE
 25107                           fsr0h	equ	0xFEA
 25108                           fsr0l	equ	0xFE9
 25109                           wreg	equ	0xFE8
 25110                           postinc1	equ	0xFE6
 25111                           postdec1	equ	0xFE5
 25112                           plusw1	equ	0xFE3
 25113                           fsr1h	equ	0xFE2
 25114                           fsr1l	equ	0xFE1
 25115                           bsr	equ	0xFE0
 25116                           indf2	equ	0xFDF
 25117                           postinc2	equ	0xFDE
 25118                           postdec2	equ	0xFDD
 25119                           plusw2	equ	0xFDB
 25120                           fsr2h	equ	0xFDA
 25121                           fsr2l	equ	0xFD9
 25122                           status	equ	0xFD8
 25123                           
 25124 ;; *************** function i1_ETH_readLinkStatus *****************
 25125 ;; Defined at:
 25126 ;;		line 193 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 25127 ;; Parameters:    Size  Location     Type
 25128 ;;		None
 25129 ;; Auto vars:     Size  Location     Type
 25130 ;;		None
 25131 ;; Return value:  Size  Location     Type
 25132 ;;                  4   11[COMRAM] unsigned long 
 25133 ;; Registers used:
 25134 ;;		wreg, status,2, status,0, cstack
 25135 ;; Tracked objects:
 25136 ;;		On entry : F/1
 25137 ;;		On exit  : F/E
 25138 ;;		Unchanged: 0/0
 25139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25140 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25143 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25144 ;;Total ram usage:        4 bytes
 25145 ;; Hardware stack levels used:    1
 25146 ;; Hardware stack levels required when called:    4
 25147 ;; This function calls:
 25148 ;;		i1_PHY_Read
 25149 ;; This function is called by:
 25150 ;;		i1_ETH_CheckLinkUp
 25151 ;; This function uses a non-reentrant model
 25152 ;;
 25153                           
 25154                           	psect	text108
 25155  000000                     __ptext108:
 25156                           	opt stack 0
 25157  000000                     __end_ofi1_ETH_readLinkStatus:
 25158                           	opt stack 0
 25159                           tosu	equ	0xFFF
 25160                           tosh	equ	0xFFE
 25161                           tosl	equ	0xFFD
 25162                           pclath	equ	0xFFA
 25163                           tblptru	equ	0xFF8
 25164                           tblptrh	equ	0xFF7
 25165                           tblptrl	equ	0xFF6
 25166                           tablat	equ	0xFF5
 25167                           prodh	equ	0xFF4
 25168                           prodl	equ	0xFF3
 25169                           intcon	equ	0xFF2
 25170                           indf0	equ	0xFEF
 25171                           postinc0	equ	0xFEE
 25172                           fsr0h	equ	0xFEA
 25173                           fsr0l	equ	0xFE9
 25174                           wreg	equ	0xFE8
 25175                           postinc1	equ	0xFE6
 25176                           postdec1	equ	0xFE5
 25177                           plusw1	equ	0xFE3
 25178                           fsr1h	equ	0xFE2
 25179                           fsr1l	equ	0xFE1
 25180                           bsr	equ	0xFE0
 25181                           indf2	equ	0xFDF
 25182                           postinc2	equ	0xFDE
 25183                           postdec2	equ	0xFDD
 25184                           plusw2	equ	0xFDB
 25185                           fsr2h	equ	0xFDA
 25186                           fsr2l	equ	0xFD9
 25187                           status	equ	0xFD8
 25188                           
 25189 ;; *************** function i1_PHY_Read *****************
 25190 ;; Defined at:
 25191 ;;		line 350 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 25192 ;; Parameters:    Size  Location     Type
 25193 ;;  reg             1    wreg     enum E7098
 25194 ;; Auto vars:     Size  Location     Type
 25195 ;;  reg             1    6[COMRAM] enum E7098
 25196 ;;  PHY_Read        4    7[COMRAM] long 
 25197 ;; Return value:  Size  Location     Type
 25198 ;;                  4    2[COMRAM] long 
 25199 ;; Registers used:
 25200 ;;		wreg, status,2, status,0, cstack
 25201 ;; Tracked objects:
 25202 ;;		On entry : 0/E
 25203 ;;		On exit  : F/E
 25204 ;;		Unchanged: 0/0
 25205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25206 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25207 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25209 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25210 ;;Total ram usage:        9 bytes
 25211 ;; Hardware stack levels used:    1
 25212 ;; Hardware stack levels required when called:    3
 25213 ;; This function calls:
 25214 ;;		i1_PHY_WaitForBusy
 25215 ;; This function is called by:
 25216 ;;		i1_ETH_readLinkStatus
 25217 ;;		i1_ETH_EventHandler
 25218 ;; This function uses a non-reentrant model
 25219 ;;
 25220                           
 25221                           	psect	text109
 25222  0053E6                     __ptext109:
 25223                           	opt stack 0
 25224  0053E6                     i1_PHY_Read:
 25225                           	opt stack 14
 25226                           
 25227                           ; BSR set to: 14
 25228                           ;incstack = 0
 25229                           ;i1PHY_Read@reg stored from wreg
 25230  0053E6  6E07               	movwf	i1PHY_Read@reg,c
 25231  0053E8                     i47L__ptext110:
 25232                           	opt stack 0
 25233  0053E8                     i47Li1_PHY_WaitForBusy:
 25234                           	opt stack 0
 25235  0053E8                     i47Li1l6497:
 25236                           	opt stack 14
 25237                           
 25238                           ;j60_driver.c: 300: phyError_t ret = NOERROR;
 25239  0053E8  6A01               	clrf	i1PHY_WaitForBusy@ret,c
 25240                           
 25241                           ;j60_driver.c: 301: uint8_t timeout;
 25242                           ;j60_driver.c: 303: for(timeout = 0; timeout < 10;timeout++) __nop();
 25243  0053EA  6A02               	clrf	i1PHY_WaitForBusy@timeout,c
 25244  0053EC                     i47Li1l504:
 25245                           	opt stack 14
 25246  0053EC  F000               	nop	
 25247  0053EE                     i47Li1l6503:
 25248                           	opt stack 14
 25249  0053EE  2A02               	incf	i1PHY_WaitForBusy@timeout,f,c
 25250  0053F0                     i47Li1l6505:
 25251                           	opt stack 14
 25252  0053F0  0E09               	movlw	9
 25253  0053F2  6402               	cpfsgt	i1PHY_WaitForBusy@timeout,c
 25254  0053F4  D7FB               	goto	i47Li1l504
 25255  0053F6  D001               	goto	i47Li1u938_20
 25256  0053F8                     i47Li1u938_21:
 25257                           	opt stack 0
 25258  0053F8  D7F9               	goto	i47Li1l504
 25259  0053FA                     i47Li1u938_20:
 25260                           	opt stack 0
 25261  0053FA                     i47Li1l6507:
 25262                           	opt stack 14
 25263                           
 25264                           ;j60_driver.c: 304: timeout = 90;
 25265  0053FA  0E5A               	movlw	90
 25266  0053FC  6E02               	movwf	i1PHY_WaitForBusy@timeout,c
 25267  0053FE  D001               	goto	i47Li1l506
 25268  005400                     i47Li1l507:
 25269                           	opt stack 14
 25270                           
 25271                           ; BSR set to: 14
 25272  005400  F000               	nop	
 25273  005402                     i47Li1l506:
 25274                           	opt stack 14
 25275  005402  010E               	movlb	14	; () banked
 25276  005404  A18A               	btfss	138,0,b	;volatile
 25277  005406                     i47Li1u939_21:
 25278                           	opt stack 0
 25279  005406  D002               	goto	i47Li1l6511
 25280  005408                     i47Li1u939_20:
 25281                           	opt stack 0
 25282  005408                     i47Li1l6509:
 25283                           	opt stack 14
 25284                           
 25285                           ; BSR set to: 14
 25286  005408  2E02               	decfsz	i1PHY_WaitForBusy@timeout,f,c
 25287  00540A  D7FA               	goto	i47Li1l507
 25288  00540C                     i47Li1l6511:
 25289                           	opt stack 14
 25290                           
 25291                           ; BSR set to: 14
 25292                           ;j60_driver.c: 307: if(timeout == 0) ret = BUSY_TIMEOUT;
 25293  00540C  5002               	movf	i1PHY_WaitForBusy@timeout,w,c
 25294  00540E  A4D8               	btfss	status,2,c
 25295  005410                     i47Li1u940_21:
 25296                           	opt stack 0
 25297  005410  D001               	goto	i47Li1l6515
 25298  005412                     i47Li1u940_20:
 25299                           	opt stack 0
 25300  005412                     i47Li1l6513:
 25301                           	opt stack 14
 25302                           
 25303                           ; BSR set to: 14
 25304  005412  6801               	setf	i1PHY_WaitForBusy@ret,c
 25305  005414                     i47Li1l6515:
 25306                           	opt stack 14
 25307                           
 25308                           ; BSR set to: 14
 25309                           ;j60_driver.c: 308: return ret;
 25310  005414  5001               	movf	i1PHY_WaitForBusy@ret,w,c
 25311  005416                     i47Li1l512:
 25312                           	opt stack 14
 25313  005416  0900               	iorlw	0
 25314  005418  E12C               	bnz	i1l518
 25315                           
 25316                           ; BSR set to: 14
 25317                           ;j60_driver.c: 354: {
 25318                           ;j60_driver.c: 355: MIREGADR = reg;
 25319  00541A  C007  FEB4         	movff	i1PHY_Read@reg,3764	;volatile
 25320                           
 25321                           ;j60_driver.c: 356: MICMD = 0;
 25322  00541E  6BB2               	clrf	178,b	;volatile
 25323                           
 25324                           ;j60_driver.c: 357: MICMDbits.MIIRD = 1;
 25325  005420  81B2               	bsf	178,0,b	;volatile
 25326                           
 25327                           ;j60_driver.c: 358: __nop(); __nop();
 25328  005422  F000               	nop	
 25329  005424  F000               	nop	
 25330  005426                     i48L__ptext110:
 25331                           	opt stack 0
 25332  005426                     i48Li1_PHY_WaitForBusy:
 25333                           	opt stack 0
 25334  005426                     i48Li1l6497:
 25335                           	opt stack 14
 25336                           
 25337                           ;j60_driver.c: 300: phyError_t ret = NOERROR;
 25338  005426  6A01               	clrf	i1PHY_WaitForBusy@ret,c
 25339                           
 25340                           ;j60_driver.c: 301: uint8_t timeout;
 25341                           ;j60_driver.c: 303: for(timeout = 0; timeout < 10;timeout++) __nop();
 25342  005428  6A02               	clrf	i1PHY_WaitForBusy@timeout,c
 25343  00542A                     i48Li1l504:
 25344                           	opt stack 14
 25345  00542A  F000               	nop	
 25346  00542C                     i48Li1l6503:
 25347                           	opt stack 14
 25348  00542C  2A02               	incf	i1PHY_WaitForBusy@timeout,f,c
 25349  00542E                     i48Li1l6505:
 25350                           	opt stack 14
 25351  00542E  0E09               	movlw	9
 25352  005430  6402               	cpfsgt	i1PHY_WaitForBusy@timeout,c
 25353  005432  D7FB               	goto	i48Li1l504
 25354  005434  D001               	goto	i48Li1u938_20
 25355  005436                     i48Li1u938_21:
 25356                           	opt stack 0
 25357  005436  D7F9               	goto	i48Li1l504
 25358  005438                     i48Li1u938_20:
 25359                           	opt stack 0
 25360  005438                     i48Li1l6507:
 25361                           	opt stack 14
 25362                           
 25363                           ;j60_driver.c: 304: timeout = 90;
 25364  005438  0E5A               	movlw	90
 25365  00543A  6E02               	movwf	i1PHY_WaitForBusy@timeout,c
 25366  00543C  D001               	goto	i48Li1l506
 25367  00543E                     i48Li1l507:
 25368                           	opt stack 14
 25369                           
 25370                           ; BSR set to: 14
 25371  00543E  F000               	nop	
 25372  005440                     i48Li1l506:
 25373                           	opt stack 14
 25374  005440  010E               	movlb	14	; () banked
 25375  005442  A18A               	btfss	138,0,b	;volatile
 25376  005444                     i48Li1u939_21:
 25377                           	opt stack 0
 25378  005444  D002               	goto	i48Li1l6511
 25379  005446                     i48Li1u939_20:
 25380                           	opt stack 0
 25381  005446                     i48Li1l6509:
 25382                           	opt stack 14
 25383                           
 25384                           ; BSR set to: 14
 25385  005446  2E02               	decfsz	i1PHY_WaitForBusy@timeout,f,c
 25386  005448  D7FA               	goto	i48Li1l507
 25387  00544A                     i48Li1l6511:
 25388                           	opt stack 14
 25389                           
 25390                           ; BSR set to: 14
 25391                           ;j60_driver.c: 307: if(timeout == 0) ret = BUSY_TIMEOUT;
 25392  00544A  5002               	movf	i1PHY_WaitForBusy@timeout,w,c
 25393  00544C  A4D8               	btfss	status,2,c
 25394  00544E                     i48Li1u940_21:
 25395                           	opt stack 0
 25396  00544E  D001               	goto	i48Li1l6515
 25397  005450                     i48Li1u940_20:
 25398                           	opt stack 0
 25399  005450                     i48Li1l6513:
 25400                           	opt stack 14
 25401                           
 25402                           ; BSR set to: 14
 25403  005450  6801               	setf	i1PHY_WaitForBusy@ret,c
 25404  005452                     i48Li1l6515:
 25405                           	opt stack 14
 25406                           
 25407                           ; BSR set to: 14
 25408                           ;j60_driver.c: 308: return ret;
 25409  005452  5001               	movf	i1PHY_WaitForBusy@ret,w,c
 25410  005454                     i48Li1l512:
 25411                           	opt stack 14
 25412  005454  0AFF               	xorlw	-1
 25413  005456  E105               	bnz	i1l519
 25414                           
 25415                           ; BSR set to: 14
 25416                           ;j60_driver.c: 360: {
 25417                           ;j60_driver.c: 361: ret = READ_FAIL;
 25418  005458  0EFD               	movlw	253
 25419  00545A  6E08               	movwf	i1PHY_Read@ret,c
 25420  00545C  0EFF               	movlw	255
 25421  00545E  D814               	call	PL759	;call to abstracted procedure
 25422                           
 25423                           ;j60_driver.c: 362: }
 25424  005460  D00A               	goto	i1l521
 25425  005462                     i1l519:
 25426                           
 25427                           ; BSR set to: 14
 25428                           ;j60_driver.c: 363: else
 25429                           ;j60_driver.c: 364: {
 25430                           ;j60_driver.c: 365: MICMDbits.MIIRD = 0;
 25431  005462  91B2               	bcf	178,0,b	;volatile
 25432                           
 25433                           ; BSR set to: 14
 25434                           ;j60_driver.c: 366: ret = MIRD;
 25435  005464  CEB8 F008          	movff	3768,i1PHY_Read@ret	;volatile
 25436  005468  CEB9 F009          	movff	3769,i1PHY_Read@ret+1	;volatile
 25437  00546C  6A0A               	clrf	i1PHY_Read@ret+2,c
 25438  00546E  6A0B               	clrf	i1PHY_Read@ret+3,c
 25439  005470  D002               	goto	i1l521
 25440  005472                     i1l518:
 25441                           
 25442                           ; BSR set to: 14
 25443                           ;j60_driver.c: 369: else
 25444                           ;j60_driver.c: 370: {
 25445                           ;j60_driver.c: 371: ret = BUSY_TIMEOUT;
 25446  005472  6808               	setf	i1PHY_Read@ret,c
 25447  005474  D809               	call	PL759	;call to abstracted procedure
 25448  005476                     i1l521:
 25449                           
 25450                           ; BSR set to: 14
 25451                           ;j60_driver.c: 372: }
 25452                           ;j60_driver.c: 373: return ret;
 25453  005476  C008  F003         	movff	i1PHY_Read@ret,?i1_PHY_Read
 25454  00547A  C009  F004         	movff	i1PHY_Read@ret+1,?i1_PHY_Read+1
 25455  00547E  C00A  F005         	movff	i1PHY_Read@ret+2,?i1_PHY_Read+2
 25456  005482  C00B  F006         	movff	i1PHY_Read@ret+3,?i1_PHY_Read+3
 25457                           
 25458                           ; BSR set to: 14
 25459  005486  0012               	return		;funcret
 25460  005488                     __end_ofi1_PHY_Read:
 25461                           	opt stack 0
 25462  005488                     PL759:
 25463                           	opt stack 14
 25464  005488  6809               	setf	i1PHY_Read@ret+1,c
 25465  00548A  680A               	setf	i1PHY_Read@ret+2,c
 25466  00548C  680B               	setf	i1PHY_Read@ret+3,c
 25467  00548E  0012               	return	
 25468  005490                     __end_ofPL759:
 25469                           	opt stack 0
 25470                           tosu	equ	0xFFF
 25471                           tosh	equ	0xFFE
 25472                           tosl	equ	0xFFD
 25473                           pclath	equ	0xFFA
 25474                           tblptru	equ	0xFF8
 25475                           tblptrh	equ	0xFF7
 25476                           tblptrl	equ	0xFF6
 25477                           tablat	equ	0xFF5
 25478                           prodh	equ	0xFF4
 25479                           prodl	equ	0xFF3
 25480                           intcon	equ	0xFF2
 25481                           indf0	equ	0xFEF
 25482                           postinc0	equ	0xFEE
 25483                           fsr0h	equ	0xFEA
 25484                           fsr0l	equ	0xFE9
 25485                           wreg	equ	0xFE8
 25486                           postinc1	equ	0xFE6
 25487                           postdec1	equ	0xFE5
 25488                           plusw1	equ	0xFE3
 25489                           fsr1h	equ	0xFE2
 25490                           fsr1l	equ	0xFE1
 25491                           bsr	equ	0xFE0
 25492                           indf2	equ	0xFDF
 25493                           postinc2	equ	0xFDE
 25494                           postdec2	equ	0xFDD
 25495                           plusw2	equ	0xFDB
 25496                           fsr2h	equ	0xFDA
 25497                           fsr2l	equ	0xFD9
 25498                           status	equ	0xFD8
 25499                           
 25500 ;; *************** function i1_PHY_WaitForBusy *****************
 25501 ;; Defined at:
 25502 ;;		line 298 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 25503 ;; Parameters:    Size  Location     Type
 25504 ;;		None
 25505 ;; Auto vars:     Size  Location     Type
 25506 ;;  PHY_WaitForB    1    1[COMRAM] unsigned char 
 25507 ;;  PHY_WaitForB    1    0[COMRAM] enum E7107
 25508 ;; Return value:  Size  Location     Type
 25509 ;;                  1    wreg      enum E7107
 25510 ;; Registers used:
 25511 ;;		wreg, status,2, status,0
 25512 ;; Tracked objects:
 25513 ;;		On entry : 0/E
 25514 ;;		On exit  : F/E
 25515 ;;		Unchanged: 0/0
 25516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25518 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25520 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25521 ;;Total ram usage:        2 bytes
 25522 ;; Hardware stack levels used:    1
 25523 ;; Hardware stack levels required when called:    2
 25524 ;; This function calls:
 25525 ;;		Nothing
 25526 ;; This function is called by:
 25527 ;;		i1_PHY_Read
 25528 ;; This function uses a non-reentrant model
 25529 ;;
 25530                           
 25531                           	psect	text110
 25532  000000                     __ptext110:
 25533                           	opt stack 0
 25534  000000                     __end_ofi1_PHY_WaitForBusy:
 25535                           	opt stack 0
 25536                           tosu	equ	0xFFF
 25537                           tosh	equ	0xFFE
 25538                           tosl	equ	0xFFD
 25539                           pclath	equ	0xFFA
 25540                           tblptru	equ	0xFF8
 25541                           tblptrh	equ	0xFF7
 25542                           tblptrl	equ	0xFF6
 25543                           tablat	equ	0xFF5
 25544                           prodh	equ	0xFF4
 25545                           prodl	equ	0xFF3
 25546                           intcon	equ	0xFF2
 25547                           indf0	equ	0xFEF
 25548                           postinc0	equ	0xFEE
 25549                           fsr0h	equ	0xFEA
 25550                           fsr0l	equ	0xFE9
 25551                           wreg	equ	0xFE8
 25552                           postinc1	equ	0xFE6
 25553                           postdec1	equ	0xFE5
 25554                           plusw1	equ	0xFE3
 25555                           fsr1h	equ	0xFE2
 25556                           fsr1l	equ	0xFE1
 25557                           bsr	equ	0xFE0
 25558                           indf2	equ	0xFDF
 25559                           postinc2	equ	0xFDE
 25560                           postdec2	equ	0xFDD
 25561                           plusw2	equ	0xFDB
 25562                           fsr2h	equ	0xFDA
 25563                           fsr2l	equ	0xFD9
 25564                           status	equ	0xFD8
 25565                           
 25566 ;; *************** function _high_isr *****************
 25567 ;; Defined at:
 25568 ;;		line 59 in file "main.c"
 25569 ;; Parameters:    Size  Location     Type
 25570 ;;		None
 25571 ;; Auto vars:     Size  Location     Type
 25572 ;;		None
 25573 ;; Return value:  Size  Location     Type
 25574 ;;		None               void
 25575 ;; Registers used:
 25576 ;;		wreg, status,2, status,0, cstack
 25577 ;; Tracked objects:
 25578 ;;		On entry : 0/0
 25579 ;;		On exit  : 0/0
 25580 ;;		Unchanged: 0/0
 25581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25586 ;;Total ram usage:        0 bytes
 25587 ;; Hardware stack levels used:    1
 25588 ;; Hardware stack levels required when called:    1
 25589 ;; This function calls:
 25590 ;;		_rtcc_handler
 25591 ;; This function is called by:
 25592 ;;		Interrupt level 2
 25593 ;; This function uses a non-reentrant model
 25594 ;;
 25595                           
 25596                           	psect	intcode
 25597  000008                     __pintcode:
 25598                           	opt stack 0
 25599  000008                     _high_isr:
 25600                           	opt stack 12
 25601                           
 25602                           ; BSR set to: 14
 25603                           ;incstack = 0
 25604  000008  8249               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 25605  00000A  EF9D  F033         	goto	int_func
 25606                           tosu	equ	0xFFF
 25607                           tosh	equ	0xFFE
 25608                           tosl	equ	0xFFD
 25609                           pclath	equ	0xFFA
 25610                           tblptru	equ	0xFF8
 25611                           tblptrh	equ	0xFF7
 25612                           tblptrl	equ	0xFF6
 25613                           tablat	equ	0xFF5
 25614                           prodh	equ	0xFF4
 25615                           prodl	equ	0xFF3
 25616                           intcon	equ	0xFF2
 25617                           indf0	equ	0xFEF
 25618                           postinc0	equ	0xFEE
 25619                           fsr0h	equ	0xFEA
 25620                           fsr0l	equ	0xFE9
 25621                           wreg	equ	0xFE8
 25622                           postinc1	equ	0xFE6
 25623                           postdec1	equ	0xFE5
 25624                           plusw1	equ	0xFE3
 25625                           fsr1h	equ	0xFE2
 25626                           fsr1l	equ	0xFE1
 25627                           bsr	equ	0xFE0
 25628                           indf2	equ	0xFDF
 25629                           postinc2	equ	0xFDE
 25630                           postdec2	equ	0xFDD
 25631                           plusw2	equ	0xFDB
 25632                           fsr2h	equ	0xFDA
 25633                           fsr2l	equ	0xFD9
 25634                           status	equ	0xFD8
 25635                           
 25636                           	psect	intcode_body
 25637  00673A                     __pintcode_body:
 25638                           	opt stack 12
 25639  00673A                     int_func:
 25640                           	opt stack 12
 25641                           
 25642                           ;main.c: 61: rtcc_handler();
 25643  00673A  EC21  F032         	call	_rtcc_handler	;wreg free
 25644  00673E  9249               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 25645  006740  0011               	retfie		f
 25646  006742                     __end_of_high_isr:
 25647                           	opt stack 0
 25648                           tosu	equ	0xFFF
 25649                           tosh	equ	0xFFE
 25650                           tosl	equ	0xFFD
 25651                           pclath	equ	0xFFA
 25652                           tblptru	equ	0xFF8
 25653                           tblptrh	equ	0xFF7
 25654                           tblptrl	equ	0xFF6
 25655                           tablat	equ	0xFF5
 25656                           prodh	equ	0xFF4
 25657                           prodl	equ	0xFF3
 25658                           intcon	equ	0xFF2
 25659                           indf0	equ	0xFEF
 25660                           postinc0	equ	0xFEE
 25661                           fsr0h	equ	0xFEA
 25662                           fsr0l	equ	0xFE9
 25663                           wreg	equ	0xFE8
 25664                           postinc1	equ	0xFE6
 25665                           postdec1	equ	0xFE5
 25666                           plusw1	equ	0xFE3
 25667                           fsr1h	equ	0xFE2
 25668                           fsr1l	equ	0xFE1
 25669                           bsr	equ	0xFE0
 25670                           indf2	equ	0xFDF
 25671                           postinc2	equ	0xFDE
 25672                           postdec2	equ	0xFDD
 25673                           plusw2	equ	0xFDB
 25674                           fsr2h	equ	0xFDA
 25675                           fsr2l	equ	0xFD9
 25676                           status	equ	0xFD8
 25677                           
 25678 ;; *************** function _rtcc_handler *****************
 25679 ;; Defined at:
 25680 ;;		line 122 in file "../board_support_package/picdem2_net/rtcc.c"
 25681 ;; Parameters:    Size  Location     Type
 25682 ;;		None
 25683 ;; Auto vars:     Size  Location     Type
 25684 ;;		None
 25685 ;; Return value:  Size  Location     Type
 25686 ;;		None               void
 25687 ;; Registers used:
 25688 ;;		wreg, status,2, status,0
 25689 ;; Tracked objects:
 25690 ;;		On entry : 0/0
 25691 ;;		On exit  : 0/0
 25692 ;;		Unchanged: 0/0
 25693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25698 ;;Total ram usage:        0 bytes
 25699 ;; Hardware stack levels used:    1
 25700 ;; This function calls:
 25701 ;;		Nothing
 25702 ;; This function is called by:
 25703 ;;		_high_isr
 25704 ;; This function uses a non-reentrant model
 25705 ;;
 25706                           
 25707                           	psect	text112
 25708  006442                     __ptext112:
 25709                           	opt stack 0
 25710  006442                     _rtcc_handler:
 25711                           	opt stack 12
 25712                           
 25713                           ;rtcc.c: 124: if(TMR1IE && TMR1IF)
 25714                           
 25715                           ;incstack = 0
 25716  006442  B09D               	btfsc	3997,0,c	;volatile
 25717  006444  A09E               	btfss	3998,0,c	;volatile
 25718  006446  0012               	return	
 25719                           
 25720                           ;rtcc.c: 125: {
 25721                           ;rtcc.c: 126: TMR1IF = 0;
 25722  006448  909E               	bcf	3998,0,c	;volatile
 25723                           
 25724                           ;rtcc.c: 127: TMR1ON = 0;
 25725  00644A  90CD               	bcf	4045,0,c	;volatile
 25726                           
 25727                           ;rtcc.c: 128: TMR1 = 32768UL;
 25728  00644C  0E80               	movlw	128
 25729  00644E  6ECF               	movwf	4047,c	;volatile
 25730  006450  6ACE               	clrf	4046,c	;volatile
 25731                           
 25732                           ;rtcc.c: 129: TMR1ON = 1;
 25733  006452  80CD               	bsf	4045,0,c	;volatile
 25734                           
 25735                           ;rtcc.c: 130: deviceTime++;
 25736  006454  0102               	movlb	2	; () banked
 25737  006456  2BE8               	incf	_deviceTime& (0+255),f,b	;volatile
 25738  006458  0E00               	movlw	0
 25739  00645A  23E9               	addwfc	(_deviceTime+1)& (0+255),f,b	;volatile
 25740  00645C  23EA               	addwfc	(_deviceTime+2)& (0+255),f,b	;volatile
 25741  00645E  23EB               	addwfc	(_deviceTime+3)& (0+255),f,b	;volatile
 25742                           
 25743                           ; BSR set to: 2
 25744                           ;rtcc.c: 131: localTime++;
 25745  006460  2BEC               	incf	_localTime& (0+255),f,b	;volatile
 25746  006462  23ED               	addwfc	(_localTime+1)& (0+255),f,b	;volatile
 25747  006464  23EE               	addwfc	(_localTime+2)& (0+255),f,b	;volatile
 25748  006466  23EF               	addwfc	(_localTime+3)& (0+255),f,b	;volatile
 25749  006468  0C00               	retlw	0	;funcret
 25750  00646A                     __end_of_rtcc_handler:
 25751                           	opt stack 0
 25752                           tosu	equ	0xFFF
 25753                           tosh	equ	0xFFE
 25754                           tosl	equ	0xFFD
 25755                           pclath	equ	0xFFA
 25756                           tblptru	equ	0xFF8
 25757                           tblptrh	equ	0xFF7
 25758                           tblptrl	equ	0xFF6
 25759                           tablat	equ	0xFF5
 25760                           prodh	equ	0xFF4
 25761                           prodl	equ	0xFF3
 25762                           intcon	equ	0xFF2
 25763                           indf0	equ	0xFEF
 25764                           postinc0	equ	0xFEE
 25765                           fsr0h	equ	0xFEA
 25766                           fsr0l	equ	0xFE9
 25767                           wreg	equ	0xFE8
 25768                           postinc1	equ	0xFE6
 25769                           postdec1	equ	0xFE5
 25770                           plusw1	equ	0xFE3
 25771                           fsr1h	equ	0xFE2
 25772                           fsr1l	equ	0xFE1
 25773                           bsr	equ	0xFE0
 25774                           indf2	equ	0xFDF
 25775                           postinc2	equ	0xFDE
 25776                           postdec2	equ	0xFDD
 25777                           plusw2	equ	0xFDB
 25778                           fsr2h	equ	0xFDA
 25779                           fsr2l	equ	0xFD9
 25780                           status	equ	0xFD8
 25781                           tosu	equ	0xFFF
 25782                           tosh	equ	0xFFE
 25783                           tosl	equ	0xFFD
 25784                           pclath	equ	0xFFA
 25785                           tblptru	equ	0xFF8
 25786                           tblptrh	equ	0xFF7
 25787                           tblptrl	equ	0xFF6
 25788                           tablat	equ	0xFF5
 25789                           prodh	equ	0xFF4
 25790                           prodl	equ	0xFF3
 25791                           intcon	equ	0xFF2
 25792                           indf0	equ	0xFEF
 25793                           postinc0	equ	0xFEE
 25794                           fsr0h	equ	0xFEA
 25795                           fsr0l	equ	0xFE9
 25796                           wreg	equ	0xFE8
 25797                           postinc1	equ	0xFE6
 25798                           postdec1	equ	0xFE5
 25799                           plusw1	equ	0xFE3
 25800                           fsr1h	equ	0xFE2
 25801                           fsr1l	equ	0xFE1
 25802                           bsr	equ	0xFE0
 25803                           indf2	equ	0xFDF
 25804                           postinc2	equ	0xFDE
 25805                           postdec2	equ	0xFDD
 25806                           plusw2	equ	0xFDB
 25807                           fsr2h	equ	0xFDA
 25808                           fsr2l	equ	0xFD9
 25809                           status	equ	0xFD8
 25810                           
 25811                           	psect	text113
 25812  000000                     __ptext113:
 25813                           	opt stack 0
 25814                           tosu	equ	0xFFF
 25815                           tosh	equ	0xFFE
 25816                           tosl	equ	0xFFD
 25817                           pclath	equ	0xFFA
 25818                           tblptru	equ	0xFF8
 25819                           tblptrh	equ	0xFF7
 25820                           tblptrl	equ	0xFF6
 25821                           tablat	equ	0xFF5
 25822                           prodh	equ	0xFF4
 25823                           prodl	equ	0xFF3
 25824                           intcon	equ	0xFF2
 25825                           indf0	equ	0xFEF
 25826                           postinc0	equ	0xFEE
 25827                           fsr0h	equ	0xFEA
 25828                           fsr0l	equ	0xFE9
 25829                           wreg	equ	0xFE8
 25830                           postinc1	equ	0xFE6
 25831                           postdec1	equ	0xFE5
 25832                           plusw1	equ	0xFE3
 25833                           fsr1h	equ	0xFE2
 25834                           fsr1l	equ	0xFE1
 25835                           bsr	equ	0xFE0
 25836                           indf2	equ	0xFDF
 25837                           postinc2	equ	0xFDE
 25838                           postdec2	equ	0xFDD
 25839                           plusw2	equ	0xFDB
 25840                           fsr2h	equ	0xFDA
 25841                           fsr2l	equ	0xFD9
 25842                           status	equ	0xFD8
 25843                           
 25844                           	psect	rparam
 25845  0000                     tosu	equ	0xFFF
 25846                           tosh	equ	0xFFE
 25847                           tosl	equ	0xFFD
 25848                           pclath	equ	0xFFA
 25849                           tblptru	equ	0xFF8
 25850                           tblptrh	equ	0xFF7
 25851                           tblptrl	equ	0xFF6
 25852                           tablat	equ	0xFF5
 25853                           prodh	equ	0xFF4
 25854                           prodl	equ	0xFF3
 25855                           intcon	equ	0xFF2
 25856                           indf0	equ	0xFEF
 25857                           postinc0	equ	0xFEE
 25858                           fsr0h	equ	0xFEA
 25859                           fsr0l	equ	0xFE9
 25860                           wreg	equ	0xFE8
 25861                           postinc1	equ	0xFE6
 25862                           postdec1	equ	0xFE5
 25863                           plusw1	equ	0xFE3
 25864                           fsr1h	equ	0xFE2
 25865                           fsr1l	equ	0xFE1
 25866                           bsr	equ	0xFE0
 25867                           indf2	equ	0xFDF
 25868                           postinc2	equ	0xFDE
 25869                           postdec2	equ	0xFDD
 25870                           plusw2	equ	0xFDB
 25871                           fsr2h	equ	0xFDA
 25872                           fsr2l	equ	0xFD9
 25873                           status	equ	0xFD8
 25874                           
 25875                           	psect	temp
 25876  000049                     btemp:
 25877                           	opt stack 0
 25878  000049                     	ds	1
 25879  0000                     int$flags	set	btemp
 25880                           tosu	equ	0xFFF
 25881                           tosh	equ	0xFFE
 25882                           tosl	equ	0xFFD
 25883                           pclath	equ	0xFFA
 25884                           tblptru	equ	0xFF8
 25885                           tblptrh	equ	0xFF7
 25886                           tblptrl	equ	0xFF6
 25887                           tablat	equ	0xFF5
 25888                           prodh	equ	0xFF4
 25889                           prodl	equ	0xFF3
 25890                           intcon	equ	0xFF2
 25891                           indf0	equ	0xFEF
 25892                           postinc0	equ	0xFEE
 25893                           fsr0h	equ	0xFEA
 25894                           fsr0l	equ	0xFE9
 25895                           wreg	equ	0xFE8
 25896                           postinc1	equ	0xFE6
 25897                           postdec1	equ	0xFE5
 25898                           plusw1	equ	0xFE3
 25899                           fsr1h	equ	0xFE2
 25900                           fsr1l	equ	0xFE1
 25901                           bsr	equ	0xFE0
 25902                           indf2	equ	0xFDF
 25903                           postinc2	equ	0xFDE
 25904                           postdec2	equ	0xFDD
 25905                           plusw2	equ	0xFDB
 25906                           fsr2h	equ	0xFDA
 25907                           fsr2l	equ	0xFD9
 25908                           status	equ	0xFD8
 25909                           tosu	equ	0xFFF
 25910                           tosh	equ	0xFFE
 25911                           tosl	equ	0xFFD
 25912                           pclath	equ	0xFFA
 25913                           tblptru	equ	0xFF8
 25914                           tblptrh	equ	0xFF7
 25915                           tblptrl	equ	0xFF6
 25916                           tablat	equ	0xFF5
 25917                           prodh	equ	0xFF4
 25918                           prodl	equ	0xFF3
 25919                           intcon	equ	0xFF2
 25920                           indf0	equ	0xFEF
 25921                           postinc0	equ	0xFEE
 25922                           fsr0h	equ	0xFEA
 25923                           fsr0l	equ	0xFE9
 25924                           wreg	equ	0xFE8
 25925                           postinc1	equ	0xFE6
 25926                           postdec1	equ	0xFE5
 25927                           plusw1	equ	0xFE3
 25928                           fsr1h	equ	0xFE2
 25929                           fsr1l	equ	0xFE1
 25930                           bsr	equ	0xFE0
 25931                           indf2	equ	0xFDF
 25932                           postinc2	equ	0xFDE
 25933                           postdec2	equ	0xFDD
 25934                           plusw2	equ	0xFDB
 25935                           fsr2h	equ	0xFDA
 25936                           fsr2l	equ	0xFD9
 25937                           status	equ	0xFD8


Data Sizes:
    Strings     191
    Constant    56
    Data        1
    BSS         439
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     51      72
    BANK0           160    159     160
    BANK1           256    190     237
    BANK2           256     45     240
    BANK3           256      0     184
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          126      0       0
    BANK15           96      0       0

Pointer List with Targets:

    TCB_Check@ptr.prevTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Check@ptr.nextTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Check@ptr.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCB_Check@ptr.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCB_Check@ptr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCB_Check@ptr.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    DEMO_TCP_Client@port60TCB.callBack	PTR FTN(int ,)void  size(3) Largest target is 0
		 -> DHCP_Handler(), 

    Network_Read@debug_str.prevTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    Network_Read@debug_str.nextTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    Network_Read@debug_str.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    Network_Read@debug_str.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    Network_Read@debug_str.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    Network_Read@debug_str.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    DEMO_TCP_Client@rxdataPort60.prevTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    DEMO_TCP_Client@rxdataPort60.nextTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    DEMO_TCP_Client@rxdataPort60.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    DEMO_TCP_Client@rxdataPort60.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    DEMO_TCP_Client@rxdataPort60.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    DEMO_TCP_Client@rxdataPort60.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    DEMO_TCP_Client@strTmp.prevTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    DEMO_TCP_Client@strTmp.nextTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    DEMO_TCP_Client@strTmp.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    DEMO_TCP_Client@strTmp.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    DEMO_TCP_Client@strTmp.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    DEMO_TCP_Client@strTmp.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    DEMO_TCP_Client@txdataPort60.prevTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    DEMO_TCP_Client@txdataPort60.nextTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    DEMO_TCP_Client@txdataPort60.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    DEMO_TCP_Client@txdataPort60.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    DEMO_TCP_Client@txdataPort60.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    DEMO_TCP_Client@txdataPort60.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    main@str.prevTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    main@str.nextTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    main@str.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    main@str.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    main@str.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    main@str.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    ?_printf.prevTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    ?_printf.nextTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    ?_printf.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    ?_printf.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    ?_printf.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    ?_printf.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    ?_sprintf.prevTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    ?_sprintf.nextTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    ?_sprintf.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    ?_sprintf.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    ?_sprintf.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    ?_sprintf.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    F7463.nextTCB.prevTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    F7463.nextTCB.nextTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    F7463.nextTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    F7463.nextTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    F7463.nextTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    F7463.nextTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    F7463.prevTCB.prevTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    F7463.prevTCB.nextTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    F7463.prevTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    F7463.prevTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    F7463.prevTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    F7463.prevTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 61
		 -> STR_9(CODE[12]), STR_6(CODE[61]), STR_5(CODE[3]), STR_2(CODE[8]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), ?_printf(COMRAM[2]), 

    sprintf@wh	PTR unsigned char  size(2) Largest target is 80
		 -> main@str(BANK2[32]), DEMO_TCP_Client@txdataPort60(BANK3[80]), DEMO_TCP_Client@strTmp(BANK1[17]), Network_Read@debug_str(BANK1[80]), 

    pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 0
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 80
		 -> main@str(BANK2[32]), DEMO_TCP_Client@txdataPort60(BANK3[80]), DEMO_TCP_Client@strTmp(BANK1[17]), Network_Read@debug_str(BANK1[80]), 
		 -> NULL(NULL[0]), 

    printf@f	PTR const unsigned char  size(1) Largest target is 28
		 -> STR_4(CODE[10]), STR_3(CODE[28]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), ?_printf(COMRAM[2]), 

    pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 0
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 80
		 -> main@str(BANK2[32]), DEMO_TCP_Client@txdataPort60(BANK3[80]), DEMO_TCP_Client@strTmp(BANK1[17]), Network_Read@debug_str(BANK1[80]), 
		 -> NULL(NULL[0]), 

    memset@p1	PTR void  size(2) Largest target is 32
		 -> main@str(BANK2[32]), DEMO_TCP_Client@strTmp(BANK1[17]), 

    memset@p	PTR unsigned char  size(2) Largest target is 32
		 -> main@str(BANK2[32]), DEMO_TCP_Client@strTmp(BANK1[17]), 

    memcmp@s2	PTR const void  size(1) Largest target is 6
		 -> DHCP_Handler@ethMAC(BANK0[6]), 

    memcmp@s1	PTR const void  size(1) Largest target is 6
		 -> DHCP_Handler@ethPktMAC(BANK0[6]), 

    _doprnt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), printf@ap(COMRAM[1]), 

    _doprnt@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> ?_sprintf(COMRAM[2]), ?_printf(COMRAM[2]), STR_10(CODE[7]), main@str(BANK2[32]), 
		 -> STR_8(CODE[13]), STR_7(CODE[17]), DEMO_TCP_Client@txdataPort60(BANK3[80]), DEMO_TCP_Client@strTmp(BANK1[17]), 
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), Network_Read@debug_str(BANK1[80]), STR_1(CODE[15]), NULL(NULL[0]), 

    _doprnt@f	PTR const unsigned char  size(1) Largest target is 61
		 -> STR_9(CODE[12]), STR_6(CODE[61]), STR_5(CODE[3]), STR_4(CODE[10]), 
		 -> STR_3(CODE[28]), STR_2(CODE[8]), 

    S4173__prbuf$func	PTR FTN(unsigned char ,)void  size(3) Largest target is 0
		 -> Absolute function(), putch(), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 0
		 -> Absolute function(), putch(), 

    S4173__prbuf$ptr	PTR unsigned char  size(2) Largest target is 80
		 -> main@str(BANK2[32]), DEMO_TCP_Client@txdataPort60(BANK3[80]), DEMO_TCP_Client@strTmp(BANK1[17]), Network_Read@debug_str(BANK1[80]), 
		 -> NULL(NULL[0]), 

    _doprnt@pb.ptr	PTR unsigned char  size(2) Largest target is 80
		 -> main@str(BANK2[32]), DEMO_TCP_Client@txdataPort60(BANK3[80]), DEMO_TCP_Client@strTmp(BANK1[17]), Network_Read@debug_str(BANK1[80]), 
		 -> NULL(NULL[0]), 

    _doprnt@pb	PTR struct __prbuf size(1) Largest target is 6
		 -> sprintf@pb(BANK0[5]), printf@pb(COMRAM[5]), 

    sp__memset	PTR void  size(2) Largest target is 32
		 -> main@str(BANK2[32]), DEMO_TCP_Client@strTmp(BANK1[17]), 

    F7463.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    F7463.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    F7463.txBufferPtr	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    F7463.txBufferStart	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    F7463.rxBufferPtr	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    F7463.rxBufferStart	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    UDP_Receive@hptr.callBack	PTR FTN(int ,)void  size(3) Largest target is 0
		 -> DHCP_Handler(), 

    UDP_Receive@hptr	PTR const struct . size(1) Largest target is 5
		 -> UDP_CallBackTable(CODE[5]), 

    TCP_Update@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Update@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Update@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCP_Update@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCP_Update@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCP_Update@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCP_Update@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> ?_sprintf(COMRAM[2]), ?_printf(COMRAM[2]), main@str(BANK2[32]), STR_8(CODE[13]), 
		 -> STR_7(CODE[17]), DEMO_TCP_Client@txdataPort60(BANK3[80]), DEMO_TCP_Client@strTmp(BANK1[17]), DEMO_TCP_Client@rxdataPort60(BANK2[50]), 
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), Network_Read@debug_str(BANK1[80]), STR_1(CODE[15]), NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), 

    TCP_InsertRxBuffer@data	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), 

    TCP_InsertRxBuffer@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), 

    TCP_SendDone@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_SendDone@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_SendDone@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCP_SendDone@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCP_SendDone@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCP_SendDone@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCP_SendDone@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), 

    TCP_Send@data	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), 

    TCP_Send@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Send@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Send@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCP_Send@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCP_Send@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCP_Send@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCP_Send@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), 

    TCP_Close@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Close@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Close@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCP_Close@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCP_Close@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCP_Close@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCP_Connect@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Connect@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Connect@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCP_Connect@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCP_Connect@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCP_Connect@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCP_Connect@srvaddr	PTR struct . size(2) Largest target is 6
		 -> remoteSocket(BANK2[6]), 

    TCP_Connect@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), 

    TCP_Listen@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Listen@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Listen@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCP_Listen@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCP_Listen@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCP_Listen@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCP_Bind@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Bind@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Bind@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCP_Bind@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCP_Bind@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCP_Bind@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr.txBufferPtr	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr.txBufferStart	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr.rxBufferStart	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr	PTR struct . size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), 

    TCP_SocketInit@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), 

    TCP_Recv@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Recv@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Recv@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCP_Recv@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCP_Recv@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCP_Recv@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCP_Recv@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> ?_sprintf(COMRAM[2]), ?_printf(COMRAM[2]), main@str(BANK2[32]), STR_8(CODE[13]), 
		 -> STR_7(CODE[17]), DEMO_TCP_Client@txdataPort60(BANK3[80]), DEMO_TCP_Client@strTmp(BANK1[17]), DEMO_TCP_Client@rxdataPort60(BANK2[50]), 
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), Network_Read@debug_str(BANK1[80]), STR_1(CODE[15]), NULL(NULL[0]), 

    currentTCB.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    currentTCB.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    currentTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    currentTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    currentTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    currentTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    currentTCB	PTR struct . size(2) Largest target is 61
		 -> ?_sprintf(COMRAM[2]), ?_printf(COMRAM[2]), main@str(BANK2[32]), STR_8(CODE[13]), 
		 -> STR_7(CODE[17]), DEMO_TCP_Client@txdataPort60(BANK3[80]), DEMO_TCP_Client@strTmp(BANK1[17]), DEMO_TCP_Client@rxdataPort60(BANK2[50]), 
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), Network_Read@debug_str(BANK1[80]), STR_1(CODE[15]), NULL(NULL[0]), 

    TCP_Snd@data	PTR unsigned char  size(2) Largest target is 80
		 -> ?_sprintf(COMRAM[2]), ?_printf(COMRAM[2]), main@str(BANK2[32]), STR_8(CODE[13]), 
		 -> STR_7(CODE[17]), DEMO_TCP_Client@txdataPort60(BANK3[80]), DEMO_TCP_Client@strTmp(BANK1[17]), DEMO_TCP_Client@rxdataPort60(BANK2[50]), 
		 -> Network_Read@debug_str(BANK1[80]), STR_1(CODE[15]), NULL(NULL[0]), 

    TCP_Snd@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Snd@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Snd@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCP_Snd@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCP_Snd@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCP_Snd@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCP_Snd@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> ?_sprintf(COMRAM[2]), ?_printf(COMRAM[2]), main@str(BANK2[32]), STR_8(CODE[13]), 
		 -> STR_7(CODE[17]), DEMO_TCP_Client@txdataPort60(BANK3[80]), DEMO_TCP_Client@strTmp(BANK1[17]), DEMO_TCP_Client@rxdataPort60(BANK2[50]), 
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), Network_Read@debug_str(BANK1[80]), STR_1(CODE[15]), NULL(NULL[0]), 

    TCB_Check@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Check@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Check@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCB_Check@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCB_Check@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCB_Check@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCB_Check@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> ?_sprintf(COMRAM[2]), ?_printf(COMRAM[2]), main@str(BANK2[32]), STR_8(CODE[13]), 
		 -> STR_7(CODE[17]), DEMO_TCP_Client@txdataPort60(BANK3[80]), DEMO_TCP_Client@strTmp(BANK1[17]), DEMO_TCP_Client@rxdataPort60(BANK2[50]), 
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), Network_Read@debug_str(BANK1[80]), STR_1(CODE[15]), NULL(NULL[0]), 

    TCB_Check@ptr	PTR struct . size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), 

    TCB_Reset@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Reset@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Reset@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCB_Reset@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCB_Reset@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCB_Reset@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCB_Reset@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> ?_sprintf(COMRAM[2]), ?_printf(COMRAM[2]), main@str(BANK2[32]), STR_8(CODE[13]), 
		 -> STR_7(CODE[17]), DEMO_TCP_Client@txdataPort60(BANK3[80]), DEMO_TCP_Client@strTmp(BANK1[17]), DEMO_TCP_Client@rxdataPort60(BANK2[50]), 
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), Network_Read@debug_str(BANK1[80]), STR_1(CODE[15]), NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Remove@ptr.txBufferPtr	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCB_Remove@ptr.txBufferStart	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCB_Remove@ptr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCB_Remove@ptr.rxBufferStart	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCB_Insert@ptr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Insert@ptr.txBufferPtr	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCB_Insert@ptr.txBufferStart	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCB_Insert@ptr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCB_Insert@ptr.rxBufferStart	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    tcbList.prevTCB.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    tcbList.prevTCB.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    tcbList.prevTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    tcbList.prevTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    tcbList.prevTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    tcbList.prevTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    S2666$prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    tcbList.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    S2666$nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    tcbList.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    S2666$txBufferPtr	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    tcbList.txBufferPtr	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    S2666$txBufferStart	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    tcbList.txBufferStart	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    S2666$rxBufferPtr	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    tcbList.rxBufferPtr	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    S2666$rxBufferStart	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    tcbList.rxBufferStart	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCB_Insert@ptr	PTR struct . size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), 

    tcbList	PTR struct . size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    SYSLOG_Write@message	PTR const unsigned char  size(2) Largest target is 32
		 -> main@str(BANK2[32]), STR_8(CODE[13]), STR_7(CODE[17]), STR_1(CODE[15]), 

    IPv4_Start@macAddress	PTR const struct . size(2) Largest target is 104
		 -> arpMap.macAddress(BANK3[6]), broadcastMAC(CODE[6]), arpMap(BANK3[104]), NULL(NULL[0]), 

    IPV4_PseudoHeaderChecksum@v	PTR unsigned int  size(1) Largest target is 12
		 -> IPV4_PseudoHeaderChecksum@tmp(COMRAM[12]), 

    ICMP_EchoReply@icmpHdr	PTR struct . size(1) Largest target is 8
		 -> ICMP_Receive@icmpHdr(BANK0[8]), 

    ICMP_EchoReply@ipv4Hdr	PTR struct . size(2) Largest target is 20
		 -> ipv4Header(BANK2[20]), 

    ICMP_Receive@ipv4Hdr	PTR struct . size(2) Largest target is 20
		 -> ipv4Header(BANK2[20]), 

    S1757$callBack	PTR FTN(int ,)void  size(3) Largest target is 0
		 -> DHCP_Handler(), 

    UDP_CallBackTable.callBack	PTR FTN(int ,)void  size(3) Largest target is 0
		 -> DHCP_Handler(), 

    sp__ARPV4_Lookup	PTR struct . size(2) Largest target is 104
		 -> arpMap.macAddress(BANK3[6]), arpMap(BANK3[104]), NULL(NULL[0]), 

    ARPV4_Lookup@entry_pointer	PTR struct . size(2) Largest target is 104
		 -> arpMap(BANK3[104]), 

    ARPV4_Update@entryPointer	PTR struct . size(2) Largest target is 104
		 -> arpMap(BANK3[104]), 

    ARPV4_Packet@arpPtr	PTR struct . size(2) Largest target is 104
		 -> arpMap(BANK3[104]), 

    ARPV4_Packet@entryPointer	PTR struct . size(2) Largest target is 104
		 -> arpMap(BANK3[104]), 

    ETH_GetMAC@mac	PTR unsigned char  size(1) Largest target is 28
		 -> DHCP_Handler@ethMAC(BANK0[6]), DHCP_Request@ethMAC(BANK0[6]), ARPV4_Request@header(BANK0[28]), header.sha(COMRAM[6]), 
		 -> ARPV4_Packet@header(BANK0[28]), 

    ETH_Insert@data	PTR unsigned char  size(1) Largest target is 2
		 -> UDP_Send@cksm(BANK0[2]), UDP_Send@udpLength(BANK0[2]), TCP_Snd@cksm(BANK0[2]), IPV4_Send@cksm(BANK0[2]), 
		 -> IPV4_Send@totalLength(BANK0[2]), ICMP_EchoReply@cksm(BANK0[2]), 

    ETH_WriteStart@dest_mac	PTR const struct . size(2) Largest target is 104
		 -> arpMap.macAddress(BANK3[6]), broadcastMAC(CODE[6]), header.sha(COMRAM[6]), ARPV4_Packet@header(BANK0[28]), 
		 -> arpMap(BANK3[104]), NULL(NULL[0]), 

    ETH_WriteBlock@buffer	PTR void  size(2) Largest target is 80
		 -> ?_sprintf(COMRAM[2]), ?_printf(COMRAM[2]), main@str(BANK2[32]), STR_8(CODE[13]), 
		 -> STR_7(CODE[17]), DEMO_TCP_Client@txdataPort60(BANK3[80]), DEMO_TCP_Client@strTmp(BANK1[17]), DEMO_TCP_Client@rxdataPort60(BANK2[50]), 
		 -> TCP_Snd@txHeader(BANK0[20]), Network_Read@debug_str(BANK1[80]), dhcpName(CODE[21]), DHCP_Request@ethMAC(BANK0[6]), 
		 -> ARPV4_Request@header(BANK0[28]), ARPV4_Packet@header(BANK0[28]), STR_1(CODE[15]), NULL(NULL[0]), 

    ETH_WriteBlock@p	PTR unsigned char  size(2) Largest target is 80
		 -> ?_sprintf(COMRAM[2]), ?_printf(COMRAM[2]), main@str(BANK2[32]), STR_8(CODE[13]), 
		 -> STR_7(CODE[17]), DEMO_TCP_Client@txdataPort60(BANK3[80]), DEMO_TCP_Client@strTmp(BANK1[17]), DEMO_TCP_Client@rxdataPort60(BANK2[50]), 
		 -> TCP_Snd@txHeader(BANK0[20]), Network_Read@debug_str(BANK1[80]), dhcpName(CODE[21]), DHCP_Request@ethMAC(BANK0[6]), 
		 -> ARPV4_Request@header(BANK0[28]), ARPV4_Packet@header(BANK0[28]), STR_1(CODE[15]), NULL(NULL[0]), 

    ETH_ReadBlock@buffer	PTR void  size(2) Largest target is 50
		 -> ?_sprintf(COMRAM[2]), ?_printf(COMRAM[2]), main@str(BANK2[32]), STR_8(CODE[13]), 
		 -> STR_7(CODE[17]), DEMO_TCP_Client@txdataPort60(BANK3[80]), DEMO_TCP_Client@strTmp(BANK1[17]), DEMO_TCP_Client@rxdataPort60(BANK2[50]), 
		 -> udpHeader(BANK2[8]), tcpHeader(BANK1[20]), Network_Read@debug_str(BANK1[80]), Network_Read@header(BANK1[14]), 
		 -> ipv4Header(BANK2[20]), ICMP_Receive@icmpHdr(BANK0[8]), DHCP_Handler@ethPktMAC(BANK0[6]), ARPV4_Packet@header(BANK0[28]), 
		 -> STR_1(CODE[15]), NULL(NULL[0]), 

    ETH_ReadBlock@p	PTR unsigned char  size(2) Largest target is 50
		 -> ?_sprintf(COMRAM[2]), ?_printf(COMRAM[2]), main@str(BANK2[32]), STR_8(CODE[13]), 
		 -> STR_7(CODE[17]), DEMO_TCP_Client@txdataPort60(BANK3[80]), DEMO_TCP_Client@strTmp(BANK1[17]), DEMO_TCP_Client@rxdataPort60(BANK2[50]), 
		 -> udpHeader(BANK2[8]), tcpHeader(BANK1[20]), Network_Read@debug_str(BANK1[80]), Network_Read@header(BANK1[14]), 
		 -> ipv4Header(BANK2[20]), ICMP_Receive@icmpHdr(BANK0[8]), DHCP_Handler@ethPktMAC(BANK0[6]), ARPV4_Packet@header(BANK0[28]), 
		 -> STR_1(CODE[15]), NULL(NULL[0]), 

    sp__MAC_getAddress	PTR const struct . size(1) Largest target is 6
		 -> macAddress(CODE[6]), 

    ETH_Init@mac	PTR const struct . size(1) Largest target is 6
		 -> macAddress(CODE[6]), 

    time@t	PTR long  size(2) Largest target is 4
		 -> main@now_p(BANK2[4]), DEMO_TCP_Client@t_client(BANK1[4]), Network_Manage@now(BANK1[4]), arpTimer(BANK1[4]), 
		 -> NULL(NULL[0]), 

    lcd_puts@s	PTR const unsigned char  size(2) Largest target is 32
		 -> main@str(BANK2[32]), DEMO_TCP_Client@strTmp(BANK1[17]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _lcd_goto1->_lcd_write_ctrl
    _initHW->_lcd_init
    _lcd_init->_lcd_write_ctrl
    _SYSLOG_Init->_printf
    _Network_WaitForLink->_ETH_CheckLinkUp
    _Network_Read->_sprintf
    _TCP_ParseTCPOptions->_ETH_Read16
    _SYSLOG_Write->_printf
    _printf->__doprnt
    _ETH_RxComputeChecksum->_ETH_ComputeChecksum
    _ARPV4_Packet->_ETH_ReadBlock
    _ETH_EventHandler->_ETH_CheckLinkUp
    _UDP_Start->_IPv4_Start
    _UDP_Send->_IPV4_Send
    _DHCP_WriteZeros->_ETH_Write8
    _Network_Init->_ETH_Init
    _ETH_Init->_ETH_CheckLinkUp
    _PHY_Write->_PHY_WaitForBusy
    _ETH_CheckLinkUp->_ETH_readLinkStatus
    _ETH_readLinkStatus->_PHY_Read
    _PHY_Read->_PHY_WaitForBusy
    _DEMO_TCP_Client->_TCP_Connect
    _DEMO_TCP_Client->_TCP_Send
    _DEMO_TCP_Client->_sprintf
    _sprintf->__doprnt
    __doprnt->___lwmod
    ___lwmod->___lwdiv
    _lcd_puts->_lcd_putch
    _lcd_putch->_lcd_write_data
    _lcd_goto2->_lcd_write_ctrl
    _TCP_SocketInit->_TCB_Check
    _TCP_SendDone->_TCB_Check
    _TCP_InsertRxBuffer->_TCB_Check
    _TCP_GetReceivedData->_TCB_Check
    _TCP_SocketPoll->_TCB_Check
    _TCP_Snd->_IPV4_Send
    _IPv4_Start->_ARPV4_Lookup
    _ARPV4_Request->_ETH_WriteBlock
    _ARPV4_Request->_ETH_WriteStart
    _IPV4_Send->_ETH_TxComputeChecksum
    _ETH_TxComputeChecksum->_ETH_ComputeChecksum

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _low_isr in COMRAM

    i1_ETH_EventHandler->i1_ETH_CheckLinkUp
    i1_ETH_CheckLinkUp->i1_ETH_readLinkStatus
    i1_ETH_readLinkStatus->i1_PHY_Read
    i1_PHY_Read->i1_PHY_WaitForBusy

Critical Paths under _main in BANK0

    _UDP_Receive->_DHCP_Handler
    _DHCP_Handler->_DHCP_Request
    _ICMP_Receive->_ICMP_EchoReply
    _ICMP_EchoReply->_IPv4_Start
    _ETH_Copy->_SYSLOG_Write
    _printf->__doprnt
    _DHCP_Manage->_DHCP_Request
    _DHCP_Request->_UDP_Start
    _UDP_Start->_IPv4_Start
    _UDP_Send->_IPV4_Send
    _sprintf->__doprnt
    _TCP_Send->_TCP_Snd
    _TCP_FiniteStateMachine->_TCP_PayloadSave
    _TCP_PayloadSave->_TCP_Snd
    _TCP_Snd->_IPv4_Start
    _IPv4_Start->_ARPV4_Request
    _IPV4_Send->_ETH_TxComputeChecksum

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Network_Manage
    _Network_Manage->_Network_Read
    _TCP_Update->_TCP_FiniteStateMachine
    _Network_Read->_IPV4_Packet
    _IPV4_Packet->_TCP_Recv
    _TCP_Recv->_TCP_FiniteStateMachine
    _DEMO_TCP_Client->_TCP_Connect
    _TCP_Connect->_TCP_FiniteStateMachine

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _low_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _low_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Critical Paths under _low_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                45    45      0  312557
                                              0 BANK2     45    45      0
                    _DEMO_TCP_Client
                       _IPV4_GetMyIP
                       _Network_Init
                     _Network_Manage
                _Network_WaitForLink
                        _SYSLOG_Init
                       _SYSLOG_Write
                             _initHW
                          _lcd_goto1
                           _lcd_puts
                             _memset
                            _sprintf
                               _time
 ---------------------------------------------------------------------------------
 (1) _lcd_goto1                                            1     1      0      62
                                             23 COMRAM     1     1      0
                           _lcd_busy
                     _lcd_write_ctrl
 ---------------------------------------------------------------------------------
 (1) _initHW                                               0     0      0     133
                     _ADC_Initialize
                           _LED_Init
                           _lcd_init
                          _rtcc_init
                           _spi_init
                          _uart_init
 ---------------------------------------------------------------------------------
 (2) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _spi_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _rtcc_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             5     5      0      31
                                             23 COMRAM     1     1      0
                           _lcd_busy
                      _lcd_init_pins
                     _lcd_write_ctrl
 ---------------------------------------------------------------------------------
 (3) _lcd_init_pins                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_Init                                             1     1      0     102
                                             22 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSLOG_Init                                          4     4      0    5704
                                             13 BANK0      4     4      0
                             _printf
                               _time
 ---------------------------------------------------------------------------------
 (1) _Network_WaitForLink                                  0     0      0     278
                    _ETH_CheckLinkUp
 ---------------------------------------------------------------------------------
 (1) _Network_Manage                                       5     5      0  201212
                                            185 BANK1      5     5      0
                       _ARPV4_Update
                        _DHCP_Manage
                   _ETH_EventHandler
                       _Network_Read
                         _TCP_Update
                               _time
 ---------------------------------------------------------------------------------
 (2) _TCP_Update                                          12    12      0   48496
                                             17 BANK1     12    12      0
             _TCP_FiniteStateMachine
 ---------------------------------------------------------------------------------
 (2) _Network_Read                                        98    98      0  128353
                                             87 BANK1     98    98      0
                       _ARPV4_Packet
                          _ETH_Flush
               _ETH_NextPacketUpdate
                      _ETH_ReadBlock
                        _IPV4_Packet
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _IPV4_Packet                                         73    73      0  113822
                                             54 BANK1     33    33      0
                           _ETH_Dump
                      _ETH_ReadBlock
              _ETH_RxComputeChecksum
                       _ICMP_Receive
          _IPV4_PseudoHeaderChecksum
                           _TCP_Recv
                        _UDP_Receive
 ---------------------------------------------------------------------------------
 (4) _UDP_Receive                                         11     9      2   29646
                                            115 BANK0     11     9      2
                       _DHCP_Handler *
                      _ETH_ReadBlock
 ---------------------------------------------------------------------------------
 (5) _DHCP_Handler                                        36    34      2   27651
                                             79 BANK0     36    34      2
                       _DHCP_Request
                           _ETH_Dump
                         _ETH_GetMAC
                         _ETH_Read16
                         _ETH_Read32
                          _ETH_Read8
                      _ETH_ReadBlock
                             _memcmp
 ---------------------------------------------------------------------------------
 (6) _memcmp                                               6     3      3     377
                                             22 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (6) _ETH_Read32                                           8     4      4     148
                                             22 COMRAM     8     4      4
                      _ETH_EdataRead
 ---------------------------------------------------------------------------------
 (4) _TCP_Recv                                            37    31      6   51875
                                             17 BANK1     37    31      6
                      _ETH_ReadBlock
             _TCP_FiniteStateMachine
                _TCP_ParseTCPOptions
 ---------------------------------------------------------------------------------
 (5) _TCP_ParseTCPOptions                                  6     6      0    1728
                                             26 COMRAM     6     6      0
                           _ETH_Dump
                         _ETH_Read16
                          _ETH_Read8
 ---------------------------------------------------------------------------------
 (6) _ETH_Read8                                            1     1      0      37
                                             22 COMRAM     1     1      0
                      _ETH_EdataRead
 ---------------------------------------------------------------------------------
 (6) _ETH_Read16                                           4     2      2      74
                                             22 COMRAM     4     2      2
                      _ETH_EdataRead
 ---------------------------------------------------------------------------------
 (6) _ETH_Dump                                             2     0      2    1117
                                             22 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _IPV4_PseudoHeaderChecksum                           24    22      2     578
                                             22 COMRAM    24    22      2
 ---------------------------------------------------------------------------------
 (4) _ICMP_Receive                                        15    13      2   26722
                                             79 BANK0     15    13      2
                      _ETH_ReadBlock
                       _ETH_SaveRDPT
                     _ICMP_EchoReply
 ---------------------------------------------------------------------------------
 (5) _ICMP_EchoReply                                      16    14      2   24774
                                             63 BANK0     16    14      2
                           _ETH_Copy
                         _ETH_Insert
                       _ETH_SaveRDPT
              _ETH_TxComputeChecksum
                        _ETH_Write16
                          _IPV4_Send
                         _IPv4_Start
 ---------------------------------------------------------------------------------
 (6) _ETH_SaveRDPT                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ETH_Copy                                             6     4      2    7068
                                             17 BANK0      6     4      2
                       _SYSLOG_Write
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _SYSLOG_Write                                         4     2      2    6095
                                             13 BANK0      4     2      2
                             _printf
                               _time
 ---------------------------------------------------------------------------------
 (2) _printf                                              11     7      4    4969
                                             40 COMRAM    11     7      4
                            __doprnt
 ---------------------------------------------------------------------------------
 (4) _ETH_RxComputeChecksum                               14    10      4    1633
                                             36 COMRAM    14    10      4
                _ETH_ComputeChecksum
 ---------------------------------------------------------------------------------
 (3) _ETH_NextPacketUpdate                                 0     0      0       0
                      _ETH_EdataRead
 ---------------------------------------------------------------------------------
 (3) _ETH_Flush                                            4     4      0       0
                                             22 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (3) _ARPV4_Packet                                        70    70      0    5890
                                              0 BANK0     70    70      0
                         _ETH_GetMAC
                      _ETH_ReadBlock
                           _ETH_Send
                     _ETH_WriteBlock
                     _ETH_WriteStart
 ---------------------------------------------------------------------------------
 (2) _ETH_EventHandler                                     0     0      0     522
                    _ETH_CheckLinkUp
                           _PHY_Read
 ---------------------------------------------------------------------------------
 (2) _DHCP_Manage                                          0     0      0   22905
                       _DHCP_Request
 ---------------------------------------------------------------------------------
 (6) _DHCP_Request                                        10    10      0   22905
                                             71 BANK0      8     8      0
                    _DHCP_WriteZeros
                         _ETH_GetMAC
                        _ETH_Write16
                        _ETH_Write32
                         _ETH_Write8
                     _ETH_WriteBlock
                           _UDP_Send
                          _UDP_Start
 ---------------------------------------------------------------------------------
 (7) _UDP_Start                                            9     1      8    9972
                                             46 COMRAM     1     1      0
                                             63 BANK0      8     0      8
                 _ETH_ResetByteCount
                        _ETH_Write16
                         _IPv4_Start
 ---------------------------------------------------------------------------------
 (7) _UDP_Send                                             9     9      0    7897
                                             20 BANK0      9     9      0
                   _ETH_GetByteCount
                         _ETH_Insert
              _ETH_TxComputeChecksum
                          _IPV4_Send
 ---------------------------------------------------------------------------------
 (8) _ETH_GetByteCount                                     4     2      2      34
                                             22 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _DHCP_WriteZeros                                      2     0      2     152
                                             23 COMRAM     2     0      2
                         _ETH_Write8
 ---------------------------------------------------------------------------------
 (2) _ARPV4_Update                                         3     3      0     105
                                             22 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Network_Init                                         0     0      0    1927
                         _ARPV4_Init
                           _ETH_Init
                          _IPV4_Init
                           _TCP_Init
                               _time
 ---------------------------------------------------------------------------------
 (2) _TCP_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IPV4_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ETH_Init                                             4     4      0    1127
                                             41 COMRAM     4     4      0
                    _ETH_CheckLinkUp
                     _MAC_getAddress
                          _PHY_Write
 ---------------------------------------------------------------------------------
 (3) _PHY_Write                                            4     2      2     626
                                             24 COMRAM     4     2      2
                    _PHY_WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _MAC_getAddress                                       2     0      2       0
                                             22 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ETH_CheckLinkUp                                      4     4      0     278
                                             37 COMRAM     4     4      0
                 _ETH_readLinkStatus
 ---------------------------------------------------------------------------------
 (3) _ETH_readLinkStatus                                   4     0      4     244
                                             33 COMRAM     4     0      4
                           _PHY_Read
 ---------------------------------------------------------------------------------
 (4) _PHY_Read                                             9     5      4     244
                                             24 COMRAM     9     5      4
                    _PHY_WaitForBusy
 ---------------------------------------------------------------------------------
 (5) _PHY_WaitForBusy                                      2     2      0     170
                                             22 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ARPV4_Init                                           1     1      0      99
                                             22 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _IPV4_GetMyIP                                         4     0      4       0
                                             22 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _DEMO_TCP_Client                                     27    27      0   88448
                                             23 BANK1     27    27      0
                  _ADC_GetConversion
                        _TCP_Connect
                _TCP_GetReceivedData
                 _TCP_InsertRxBuffer
                           _TCP_Send
                       _TCP_SendDone
                     _TCP_SocketInit
                     _TCP_SocketPoll
                          _lcd_goto2
                           _lcd_puts
                             _memset
                            _sprintf
                             _strlen
                               _time
 ---------------------------------------------------------------------------------
 (1) _time                                                 9     5      4     701
                                             22 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     170
                                             22 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             17     6     11    5513
                                             40 COMRAM    11     0     11
                                             13 BANK0      6     6      0
                            __doprnt
 ---------------------------------------------------------------------------------
 (2) __doprnt                                             23    21      2    4653
                                             34 COMRAM     6     4      2
                                              0 BANK0     13    13      0
                   Absolute function *
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch *
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      62
                                             22 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                             22 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     592
                                             22 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     412
                                             29 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     601
                                             22 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _memset                                               8     2      6     587
                                             22 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             2     0      2     324
                                             24 COMRAM     2     0      2
                          _lcd_putch
 ---------------------------------------------------------------------------------
 (2) _lcd_putch                                            1     1      0     124
                                             23 COMRAM     1     1      0
                           _lcd_busy
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (3) _lcd_write_data                                       1     1      0      31
                                             22 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _lcd_goto2                                            1     1      0      62
                                             23 COMRAM     1     1      0
                           _lcd_busy
                     _lcd_write_ctrl
 ---------------------------------------------------------------------------------
 (2) _lcd_write_ctrl                                       1     1      0      31
                                             22 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _lcd_busy                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TCP_SocketInit                                       3     1      2    3042
                                             30 COMRAM     3     1      2
                          _TCB_Check
                         _TCB_Insert
                          _TCB_Reset
 ---------------------------------------------------------------------------------
 (3) _TCB_Insert                                           2     0      2     164
                                             22 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TCP_SendDone                                         3     1      2     718
                                             30 COMRAM     3     1      2
                          _TCB_Check
 ---------------------------------------------------------------------------------
 (2) _TCP_Send                                             7     1      6   23319
                                             50 COMRAM     1     1      0
                                            142 BANK0      6     0      6
                            _TCP_Snd
                     _TCP_SocketPoll
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _TCP_InsertRxBuffer                                   7     1      6    1342
                                             30 COMRAM     7     1      6
                          _TCB_Check
 ---------------------------------------------------------------------------------
 (2) _TCP_GetReceivedData                                  8     6      2     873
                                             30 COMRAM     8     6      2
                          _TCB_Check
 ---------------------------------------------------------------------------------
 (2) _TCP_Connect                                          7     3      4   49334
                                             50 COMRAM     1     1      0
                                             17 BANK1      6     2      4
             _TCP_FiniteStateMachine
                     _TCP_SocketPoll
 ---------------------------------------------------------------------------------
 (2) _TCP_SocketPoll                                       3     1      2     834
                                             30 COMRAM     3     1      2
                          _TCB_Check
 ---------------------------------------------------------------------------------
 (3) _TCB_Check                                            8     6      2     579
                                             22 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (3) _TCP_FiniteStateMachine                              17    17      0   48016
                                              0 BANK1     17    17      0
                          _TCB_Reset
                    _TCP_PayloadSave
                            _TCP_Snd
 ---------------------------------------------------------------------------------
 (4) _TCP_PayloadSave                                     17    15      2   23832
                                            142 BANK0     17    15      2
                      _ETH_ReadBlock
                            _TCP_Snd
 ---------------------------------------------------------------------------------
 (4) _TCP_Snd                                             79    77      2   21818
                                             63 BANK0     79    77      2
                         _ETH_Insert
              _ETH_TxComputeChecksum
                     _ETH_WriteBlock
                          _IPV4_Send
                         _IPv4_Start
 ---------------------------------------------------------------------------------
 (5) _IPv4_Start                                          20    15      5    8326
                                             33 COMRAM    13     8      5
                                             56 BANK0      7     7      0
                       _ARPV4_Lookup
                      _ARPV4_Request
                        _ETH_Write16
                        _ETH_Write32
                         _ETH_Write8
                     _ETH_WriteStart
 ---------------------------------------------------------------------------------
 (6) _ETH_Write8                                           1     1      0      31
                                             22 COMRAM     1     1      0
                     _ETH_EdataWrite
 ---------------------------------------------------------------------------------
 (6) _ETH_Write32                                          4     0      4    1463
                                             22 COMRAM     4     0      4
                     _ETH_EdataWrite
 ---------------------------------------------------------------------------------
 (6) _ETH_Write16                                          2     0      2    1215
                                             22 COMRAM     2     0      2
                     _ETH_EdataWrite
 ---------------------------------------------------------------------------------
 (6) _ARPV4_Request                                       60    56      4    3543
                                             28 COMRAM     4     0      4
                                              0 BANK0     56    56      0
                         _ETH_GetMAC
                           _ETH_Send
                     _ETH_WriteBlock
                     _ETH_WriteStart
 ---------------------------------------------------------------------------------
 (6) _ETH_WriteStart                                       6     2      4     791
                                             22 COMRAM     6     2      4
                     _ETH_EdataWrite
                 _ETH_ResetByteCount
 ---------------------------------------------------------------------------------
 (7) _ETH_ResetByteCount                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ETH_WriteBlock                                       6     2      4    1506
                                             22 COMRAM     6     2      4
                     _ETH_EdataWrite
 ---------------------------------------------------------------------------------
 (7) _ETH_GetMAC                                           1     1      0     345
                                             22 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _ARPV4_Lookup                                        11     7      4     257
                                             22 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (5) _IPV4_Send                                           11     9      2    3995
                                             48 COMRAM     2     0      2
                                             11 BANK0      9     9      0
                         _ETH_Insert
                           _ETH_Send
              _ETH_TxComputeChecksum
 ---------------------------------------------------------------------------------
 (6) _ETH_TxComputeChecksum                               23    17      6    2058
                                             36 COMRAM    12     6      6
                                              0 BANK0     11    11      0
                _ETH_ComputeChecksum
 ---------------------------------------------------------------------------------
 (7) _ETH_ComputeChecksum                                 14    10      4     749
                                             22 COMRAM    14    10      4
                      _ETH_EdataRead
 ---------------------------------------------------------------------------------
 (7) _ETH_Send                                             2     2      0      34
                                             22 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (6) _ETH_Insert                                           7     3      4    1426
                                             22 COMRAM     7     3      4
                     _ETH_EdataWrite
 ---------------------------------------------------------------------------------
 (7) _ETH_EdataWrite                                       1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _ETH_ReadBlock                                        9     5      4    1719
                                             22 COMRAM     9     5      4
                      _ETH_EdataRead
 ---------------------------------------------------------------------------------
 (8) _ETH_EdataRead                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TCB_Reset                                            4     2      2    1843
                                             22 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversion                                    4     2      2      31
                                             22 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _low_isr                                             3     3      0     349
                                             19 COMRAM     3     3      0
                 i1_ETH_EventHandler
 ---------------------------------------------------------------------------------
 (13) i1_ETH_EventHandler                                  0     0      0     349
                  i1_ETH_CheckLinkUp
                         i1_PHY_Read
 ---------------------------------------------------------------------------------
 (14) i1_ETH_CheckLinkUp                                   4     4      0     186
                                             15 COMRAM     4     4      0
               i1_ETH_readLinkStatus
 ---------------------------------------------------------------------------------
 (15) i1_ETH_readLinkStatus                                4     0      4     163
                                             11 COMRAM     4     0      4
                         i1_PHY_Read
 ---------------------------------------------------------------------------------
 (14) i1_PHY_Read                                          9     5      4     163
                                              2 COMRAM     9     5      4
                  i1_PHY_WaitForBusy
 ---------------------------------------------------------------------------------
 (15) i1_PHY_WaitForBusy                                   2     2      0     115
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _high_isr                                            0     0      0       0
                       _rtcc_handler
 ---------------------------------------------------------------------------------
 (19) _rtcc_handler                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DEMO_TCP_Client
     _ADC_GetConversion
     _TCP_Connect
       _TCP_FiniteStateMachine
         _TCB_Reset
         _TCP_PayloadSave
           _ETH_ReadBlock
             _ETH_EdataRead
           _TCP_Snd
             _ETH_Insert
               _ETH_EdataWrite
             _ETH_TxComputeChecksum
               _ETH_ComputeChecksum
                 _ETH_EdataRead
             _ETH_WriteBlock
               _ETH_EdataWrite
             _IPV4_Send
               _ETH_Insert
                 _ETH_EdataWrite
               _ETH_Send
               _ETH_TxComputeChecksum
                 _ETH_ComputeChecksum
                   _ETH_EdataRead
             _IPv4_Start
               _ARPV4_Lookup
               _ARPV4_Request
                 _ETH_GetMAC
                 _ETH_Send
                 _ETH_WriteBlock
                   _ETH_EdataWrite
                 _ETH_WriteStart
                   _ETH_EdataWrite
                   _ETH_ResetByteCount
               _ETH_Write16
                 _ETH_EdataWrite
               _ETH_Write32
                 _ETH_EdataWrite
               _ETH_Write8
                 _ETH_EdataWrite
               _ETH_WriteStart
                 _ETH_EdataWrite
                 _ETH_ResetByteCount
         _TCP_Snd
           _ETH_Insert
             _ETH_EdataWrite
           _ETH_TxComputeChecksum
             _ETH_ComputeChecksum
               _ETH_EdataRead
           _ETH_WriteBlock
             _ETH_EdataWrite
           _IPV4_Send
             _ETH_Insert
               _ETH_EdataWrite
             _ETH_Send
             _ETH_TxComputeChecksum
               _ETH_ComputeChecksum
                 _ETH_EdataRead
           _IPv4_Start
             _ARPV4_Lookup
             _ARPV4_Request
               _ETH_GetMAC
               _ETH_Send
               _ETH_WriteBlock
                 _ETH_EdataWrite
               _ETH_WriteStart
                 _ETH_EdataWrite
                 _ETH_ResetByteCount
             _ETH_Write16
               _ETH_EdataWrite
             _ETH_Write32
               _ETH_EdataWrite
             _ETH_Write8
               _ETH_EdataWrite
             _ETH_WriteStart
               _ETH_EdataWrite
               _ETH_ResetByteCount
       _TCP_SocketPoll
         _TCB_Check
     _TCP_GetReceivedData
       _TCB_Check
     _TCP_InsertRxBuffer
       _TCB_Check
     _TCP_Send
       _TCP_Snd
         _ETH_Insert
           _ETH_EdataWrite
         _ETH_TxComputeChecksum
           _ETH_ComputeChecksum
             _ETH_EdataRead
         _ETH_WriteBlock
           _ETH_EdataWrite
         _IPV4_Send
           _ETH_Insert
             _ETH_EdataWrite
           _ETH_Send
           _ETH_TxComputeChecksum
             _ETH_ComputeChecksum
               _ETH_EdataRead
         _IPv4_Start
           _ARPV4_Lookup
           _ARPV4_Request
             _ETH_GetMAC
             _ETH_Send
             _ETH_WriteBlock
               _ETH_EdataWrite
             _ETH_WriteStart
               _ETH_EdataWrite
               _ETH_ResetByteCount
           _ETH_Write16
             _ETH_EdataWrite
           _ETH_Write32
             _ETH_EdataWrite
           _ETH_Write8
             _ETH_EdataWrite
           _ETH_WriteStart
             _ETH_EdataWrite
             _ETH_ResetByteCount
       _TCP_SocketPoll
         _TCB_Check
       _strlen (ARG)
     _TCP_SendDone
       _TCB_Check
     _TCP_SocketInit
       _TCB_Check
       _TCB_Insert
       _TCB_Reset
     _TCP_SocketPoll
       _TCB_Check
     _lcd_goto2
       _lcd_busy
       _lcd_write_ctrl
     _lcd_puts
       _lcd_putch
         _lcd_busy
         _lcd_write_data
     _memset
     _sprintf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         ___wmul *
         _isdigit *
         _putch *
     _strlen
     _time
   _IPV4_GetMyIP
   _Network_Init
     _ARPV4_Init
     _ETH_Init
       _ETH_CheckLinkUp
         _ETH_readLinkStatus
           _PHY_Read
             _PHY_WaitForBusy
       _MAC_getAddress
       _PHY_Write
         _PHY_WaitForBusy
     _IPV4_Init
     _TCP_Init
     _time
   _Network_Manage
     _ARPV4_Update
     _DHCP_Manage
       _DHCP_Request
         _DHCP_WriteZeros
           _ETH_Write8
             _ETH_EdataWrite
         _ETH_GetMAC
         _ETH_Write16
           _ETH_EdataWrite
         _ETH_Write32
           _ETH_EdataWrite
         _ETH_Write8
           _ETH_EdataWrite
         _ETH_WriteBlock
           _ETH_EdataWrite
         _UDP_Send
           _ETH_GetByteCount
           _ETH_Insert
             _ETH_EdataWrite
           _ETH_TxComputeChecksum
             _ETH_ComputeChecksum
               _ETH_EdataRead
           _IPV4_Send
             _ETH_Insert
               _ETH_EdataWrite
             _ETH_Send
             _ETH_TxComputeChecksum
               _ETH_ComputeChecksum
                 _ETH_EdataRead
         _UDP_Start
           _ETH_ResetByteCount
           _ETH_Write16
             _ETH_EdataWrite
           _IPv4_Start
             _ARPV4_Lookup
             _ARPV4_Request
               _ETH_GetMAC
               _ETH_Send
               _ETH_WriteBlock
                 _ETH_EdataWrite
               _ETH_WriteStart
                 _ETH_EdataWrite
                 _ETH_ResetByteCount
             _ETH_Write16
               _ETH_EdataWrite
             _ETH_Write32
               _ETH_EdataWrite
             _ETH_Write8
               _ETH_EdataWrite
             _ETH_WriteStart
               _ETH_EdataWrite
               _ETH_ResetByteCount
     _ETH_EventHandler
       _ETH_CheckLinkUp
         _ETH_readLinkStatus
           _PHY_Read
             _PHY_WaitForBusy
       _PHY_Read
         _PHY_WaitForBusy
     _Network_Read
       _ARPV4_Packet
         _ETH_GetMAC
         _ETH_ReadBlock
           _ETH_EdataRead
         _ETH_Send
         _ETH_WriteBlock
           _ETH_EdataWrite
         _ETH_WriteStart
           _ETH_EdataWrite
           _ETH_ResetByteCount
       _ETH_Flush
       _ETH_NextPacketUpdate
         _ETH_EdataRead
       _ETH_ReadBlock
         _ETH_EdataRead
       _IPV4_Packet
         _ETH_Dump
         _ETH_ReadBlock
           _ETH_EdataRead
         _ETH_RxComputeChecksum
           _ETH_ComputeChecksum
             _ETH_EdataRead
         _ICMP_Receive
           _ETH_ReadBlock
             _ETH_EdataRead
           _ETH_SaveRDPT
           _ICMP_EchoReply
             _ETH_Copy
               _SYSLOG_Write
                 _printf
                   __doprnt
                     Absolute function(Fake) *
                     ___lwdiv *
                     ___lwmod *
                       ___lwdiv (ARG)
                     ___wmul *
                     _isdigit *
                     _putch *
                 _time
               ___wmul
             _ETH_Insert
               _ETH_EdataWrite
             _ETH_SaveRDPT
             _ETH_TxComputeChecksum
               _ETH_ComputeChecksum
                 _ETH_EdataRead
             _ETH_Write16
               _ETH_EdataWrite
             _IPV4_Send
               _ETH_Insert
                 _ETH_EdataWrite
               _ETH_Send
               _ETH_TxComputeChecksum
                 _ETH_ComputeChecksum
                   _ETH_EdataRead
             _IPv4_Start
               _ARPV4_Lookup
               _ARPV4_Request
                 _ETH_GetMAC
                 _ETH_Send
                 _ETH_WriteBlock
                   _ETH_EdataWrite
                 _ETH_WriteStart
                   _ETH_EdataWrite
                   _ETH_ResetByteCount
               _ETH_Write16
                 _ETH_EdataWrite
               _ETH_Write32
                 _ETH_EdataWrite
               _ETH_Write8
                 _ETH_EdataWrite
               _ETH_WriteStart
                 _ETH_EdataWrite
                 _ETH_ResetByteCount
         _IPV4_PseudoHeaderChecksum
         _TCP_Recv
           _ETH_ReadBlock
             _ETH_EdataRead
           _TCP_FiniteStateMachine
             _TCB_Reset
             _TCP_PayloadSave
               _ETH_ReadBlock
                 _ETH_EdataRead
               _TCP_Snd
                 _ETH_Insert
                   _ETH_EdataWrite
                 _ETH_TxComputeChecksum
                   _ETH_ComputeChecksum
                     _ETH_EdataRead
                 _ETH_WriteBlock
                   _ETH_EdataWrite
                 _IPV4_Send
                   _ETH_Insert
                     _ETH_EdataWrite
                   _ETH_Send
                   _ETH_TxComputeChecksum
                     _ETH_ComputeChecksum
                       _ETH_EdataRead
                 _IPv4_Start
                   _ARPV4_Lookup
                   _ARPV4_Request
                     _ETH_GetMAC
                     _ETH_Send
                     _ETH_WriteBlock
                       _ETH_EdataWrite
                     _ETH_WriteStart
                       _ETH_EdataWrite
                       _ETH_ResetByteCount
                   _ETH_Write16
                     _ETH_EdataWrite
                   _ETH_Write32
                     _ETH_EdataWrite
                   _ETH_Write8
                     _ETH_EdataWrite
                   _ETH_WriteStart
                     _ETH_EdataWrite
                     _ETH_ResetByteCount
             _TCP_Snd
               _ETH_Insert
                 _ETH_EdataWrite
               _ETH_TxComputeChecksum
                 _ETH_ComputeChecksum
                   _ETH_EdataRead
               _ETH_WriteBlock
                 _ETH_EdataWrite
               _IPV4_Send
                 _ETH_Insert
                   _ETH_EdataWrite
                 _ETH_Send
                 _ETH_TxComputeChecksum
                   _ETH_ComputeChecksum
                     _ETH_EdataRead
               _IPv4_Start
                 _ARPV4_Lookup
                 _ARPV4_Request
                   _ETH_GetMAC
                   _ETH_Send
                   _ETH_WriteBlock
                     _ETH_EdataWrite
                   _ETH_WriteStart
                     _ETH_EdataWrite
                     _ETH_ResetByteCount
                 _ETH_Write16
                   _ETH_EdataWrite
                 _ETH_Write32
                   _ETH_EdataWrite
                 _ETH_Write8
                   _ETH_EdataWrite
                 _ETH_WriteStart
                   _ETH_EdataWrite
                   _ETH_ResetByteCount
           _TCP_ParseTCPOptions
             _ETH_Dump
             _ETH_Read16
               _ETH_EdataRead
             _ETH_Read8
               _ETH_EdataRead
         _UDP_Receive
           _DHCP_Handler *
             _DHCP_Request
               _DHCP_WriteZeros
                 _ETH_Write8
                   _ETH_EdataWrite
               _ETH_GetMAC
               _ETH_Write16
                 _ETH_EdataWrite
               _ETH_Write32
                 _ETH_EdataWrite
               _ETH_Write8
                 _ETH_EdataWrite
               _ETH_WriteBlock
                 _ETH_EdataWrite
               _UDP_Send
                 _ETH_GetByteCount
                 _ETH_Insert
                   _ETH_EdataWrite
                 _ETH_TxComputeChecksum
                   _ETH_ComputeChecksum
                     _ETH_EdataRead
                 _IPV4_Send
                   _ETH_Insert
                     _ETH_EdataWrite
                   _ETH_Send
                   _ETH_TxComputeChecksum
                     _ETH_ComputeChecksum
                       _ETH_EdataRead
               _UDP_Start
                 _ETH_ResetByteCount
                 _ETH_Write16
                   _ETH_EdataWrite
                 _IPv4_Start
                   _ARPV4_Lookup
                   _ARPV4_Request
                     _ETH_GetMAC
                     _ETH_Send
                     _ETH_WriteBlock
                       _ETH_EdataWrite
                     _ETH_WriteStart
                       _ETH_EdataWrite
                       _ETH_ResetByteCount
                   _ETH_Write16
                     _ETH_EdataWrite
                   _ETH_Write32
                     _ETH_EdataWrite
                   _ETH_Write8
                     _ETH_EdataWrite
                   _ETH_WriteStart
                     _ETH_EdataWrite
                     _ETH_ResetByteCount
             _ETH_Dump
             _ETH_GetMAC
             _ETH_Read16
               _ETH_EdataRead
             _ETH_Read32
               _ETH_EdataRead
             _ETH_Read8
               _ETH_EdataRead
             _ETH_ReadBlock
               _ETH_EdataRead
             _memcmp
           _ETH_ReadBlock *
             _ETH_EdataRead
       _sprintf
         __doprnt
           Absolute function(Fake) *
           ___lwdiv *
           ___lwmod *
             ___lwdiv (ARG)
           ___wmul *
           _isdigit *
           _putch *
     _TCP_Update
       _TCP_FiniteStateMachine
         _TCB_Reset
         _TCP_PayloadSave
           _ETH_ReadBlock
             _ETH_EdataRead
           _TCP_Snd
             _ETH_Insert
               _ETH_EdataWrite
             _ETH_TxComputeChecksum
               _ETH_ComputeChecksum
                 _ETH_EdataRead
             _ETH_WriteBlock
               _ETH_EdataWrite
             _IPV4_Send
               _ETH_Insert
                 _ETH_EdataWrite
               _ETH_Send
               _ETH_TxComputeChecksum
                 _ETH_ComputeChecksum
                   _ETH_EdataRead
             _IPv4_Start
               _ARPV4_Lookup
               _ARPV4_Request
                 _ETH_GetMAC
                 _ETH_Send
                 _ETH_WriteBlock
                   _ETH_EdataWrite
                 _ETH_WriteStart
                   _ETH_EdataWrite
                   _ETH_ResetByteCount
               _ETH_Write16
                 _ETH_EdataWrite
               _ETH_Write32
                 _ETH_EdataWrite
               _ETH_Write8
                 _ETH_EdataWrite
               _ETH_WriteStart
                 _ETH_EdataWrite
                 _ETH_ResetByteCount
         _TCP_Snd
           _ETH_Insert
             _ETH_EdataWrite
           _ETH_TxComputeChecksum
             _ETH_ComputeChecksum
               _ETH_EdataRead
           _ETH_WriteBlock
             _ETH_EdataWrite
           _IPV4_Send
             _ETH_Insert
               _ETH_EdataWrite
             _ETH_Send
             _ETH_TxComputeChecksum
               _ETH_ComputeChecksum
                 _ETH_EdataRead
           _IPv4_Start
             _ARPV4_Lookup
             _ARPV4_Request
               _ETH_GetMAC
               _ETH_Send
               _ETH_WriteBlock
                 _ETH_EdataWrite
               _ETH_WriteStart
                 _ETH_EdataWrite
                 _ETH_ResetByteCount
             _ETH_Write16
               _ETH_EdataWrite
             _ETH_Write32
               _ETH_EdataWrite
             _ETH_Write8
               _ETH_EdataWrite
             _ETH_WriteStart
               _ETH_EdataWrite
               _ETH_ResetByteCount
     _time
   _Network_WaitForLink
     _ETH_CheckLinkUp
       _ETH_readLinkStatus
         _PHY_Read
           _PHY_WaitForBusy
   _SYSLOG_Init
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         ___wmul *
         _isdigit *
         _putch *
     _time
   _SYSLOG_Write
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         ___wmul *
         _isdigit *
         _putch *
     _time
   _initHW
     _ADC_Initialize
     _LED_Init
     _lcd_init
       _lcd_busy
       _lcd_init_pins
       _lcd_write_ctrl
     _rtcc_init
     _spi_init
     _uart_init
   _lcd_goto1
     _lcd_busy
     _lcd_write_ctrl
   _lcd_puts
     _lcd_putch
       _lcd_busy
       _lcd_write_data
   _memset
   _sprintf
     __doprnt
       Absolute function(Fake) *
       ___lwdiv *
       ___lwmod *
         ___lwdiv (ARG)
       ___wmul *
       _isdigit *
       _putch *
   _time

 _low_isr (ROOT)
   i1_ETH_EventHandler
     i1_ETH_CheckLinkUp
       i1_ETH_readLinkStatus
         i1_PHY_Read
           i1_PHY_WaitForBusy
     i1_PHY_Read
       i1_PHY_WaitForBusy

 _high_isr (ROOT)
   _rtcc_handler

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E7D      0       0      38        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      30        0.0%
BANK12             100      0       0      28        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      B8      11       71.9%
BITBANK2           100      0       0       8        0.0%
BANK2              100     2D      F0       9       93.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100     BE      ED       7       92.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9F      A0       5      100.0%
BITBANK14           7E      0       0      33        0.0%
BANK14              7E      0       0      34        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BIGRAM_1            60      0       0      37        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     33      48       1       76.6%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     37D      29        0.0%
DATA                 0      0     37D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Wed Sep 09 15:15:38 2015

                         __CFG_BW$16 000000                 __end_of_DHCP_Handler 400A  
                                 l33 6336                                   bsr 000FE0  
                ___wmul@multiplicand 0019                 i1PHY_WaitForBusy@ret 0001  
                   ??_ICMP_EchoReply 00A1           TCP_InsertRxBuffer@data_len 0023  
        ??_IPV4_PseudoHeaderChecksum 0019                       ??_ICMP_Receive 00B1  
                       __CFG_CP0$OFF 000000                                  l350 6640  
                                l512 0036                                  l504 0004  
                                l600 5132                                  l521 53CC  
                                l506 001A                                  l530 60B4  
                                l347 6638                                  l507 0018  
                                l611 51AA                                  l603 513C  
                                l531 60B6                                  l460 0008  
                                l620 5508                                  l525 638A  
                                l518 53C8                                  l470 4C00  
                                l463 0004                                  l519 53B8  
                                l607 51A2                                  l535 5C3A  
                                l544 5BEC                                  l608 51A0  
                                l536 5C3C                                  l617 549E  
                                l801 3F88                                  WREG 000FE8  
                                l803 3F8E                                  l476 0016  
                                l484 5F2E                                  l760 4508  
                                l680 360C                                  l761 458C  
                                l489 5F3A                                  l594 5D18  
             __size_of_ETH_EdataRead 0000                                  l599 5134  
                                l936 46CC                                  _EIE 000EFB  
                                _GIE 007F97                          ?_ETH_GetMAC 0001  
               __end_of_DHCP_Request 461A                   ICMP_EchoReply@cksm 00A9  
            IPv4_Start@targetAddress 0098                          ?_ETH_Read32 0017  
                        ?_ETH_Read16 0017                         UDP_Start@ret 002F  
                                prod 000FF3                 TCP_Snd@tcpDataLength 00D8  
              ??_ETH_ComputeChecksum 001B                                  tosl 000FFD  
                                wreg 000FE8                          ?_ETH_Insert 0017  
                       __CFG_IESO$ON 000000                         __CFG_MODE$MM 000000  
                        ?_ETH_Write8 0001                                 EDATA 000F61  
                     _ipv4SubnetMask 01C5                                 PL401 2344  
                               PL411 424A                                 PL403 2360  
                               PL501 3A8A                                 PL421 3760  
                               PL413 442C                                 PL405 2372  
                               PL511 4B9C                                 PL503 2AD6  
                               PL431 241A                                 PL423 23E4  
                               PL415 23CC                                 PL407 23B2  
                               PL601 5112                                 PL521 30DE  
                               PL513 2538                                 PL505 5786  
                               PL441 2422                                 PL433 3A2A  
                               PL425 23EE                                 PL417 23D4  
                               PL409 3426                                 PL611 2C02  
                               PL603 61E4                                 PL531 2AEE  
                               PL523 3AB2                                 PL515 2540  
                               PL507 252E                                 PL451 2478  
                               PL443 243C                                 PL435 3440  
                               PL427 240A                                 PL419 23DC  
                               PL701 2C94                                 PL621 5042  
                               PL613 2C14                                 PL605 5B0E  
                               PL541 3AC4                                 PL533 588E  
                               PL525 461A                                 PL517 380E  
                               PL509 37FA                                 PL461 30A6  
                               PL453 4E12                                 PL445 2456  
                               PL437 308E                                 PL429 2412  
                               PL711 384E                                 PL703 3502  
                               PL631 2C48                                 PL623 2566  
                               PL615 2C26                                 PL607 5A96  
                               PL551 3D68                                 PL543 4448  
                               PL535 34C6                                 PL527 2AE0  
                               PL519 2548                                 PL471 24C2  
                               PL463 30B2                                 PL455 2480  
                               PL447 2AAE                                 PL439 2A5A  
                               PL391 2A40                                 PL721 6080  
                               PL713 5F46                                 PL705 350C  
                               PL641 2580                                 PL633 2C52  
                               PL625 2C38                                 PL617 255E  
                               PL609 400A                                 PL561 2BA8  
                               PL553 2B40                                 PL545 2550  
                               PL537 56F4                                 PL529 382A  
                               PL481 24E6                                 PL473 24CC  
                               PL465 30BC                                 PL457 248E  
                               PL449 2470                                 PL393 2316  
                               PL731 4A8A                                 PL723 2CA8  
                               PL715 5286                                 PL707 2C9E  
                               PL651 2C70                                 PL643 51D0  
                               PL635 462C                                 PL627 4BD4  
                               PL619 5AA0                                 PL571 3AF8  
                               PL563 2BC2                                 PL555 2B5A  
                               PL547 2B26                                 PL539 2B0A  
                               PL491 250A                                 PL483 24F8  
                               PL475 49F4                                 PL467 24B6  
                               PL459 249C                                 PL395 231E  
                               PL387 22F4                                 PL741 3B46  
                               PL733 3130                                 PL725 55C2  
                               PL717 4E2A                                 PL709 3B32  
                               PL661 4272                                 PL653 4636  
                               PL645 5274                                 PL637 4470  
                               PL629 5520                                 PL581 2BDC  
                               PL573 3D9C                                 PL565 4A2A  
                               PL557 2B74                                 PL549 4456  
                               PL493 3D40                                 PL485 2ABC  
                               PL477 24D6                                 PL469 30C8  
                               PL397 2338                                 PL389 230C  
                               PL751 6286                                 PL743 401C  
                               PL735 313A                                 PL727 2CB0  
                               PL719 5B18                                 PL671 2C88  
                               PL663 527C                                 PL655 3100  
                               PL647 2C62                                 PL639 2576  
                               PL591 3844                                 PL583 30F8  
                               PL575 4A44                                 PL567 3D82  
                               PL559 2B8E                                 PL495 349E  
                               PL487 30D0                                 PL479 24DE  
                               PL399 4916                                 PL761 2CBA  
                               PL753 5F56                                 PL745 5F4E  
                               PL737 3DB4                                 PL729 4BDE  
                               PL681 6390                                 PL673 6218  
                               PL665 2C7E                                 PL657 34F4  
                               PL649 447A                                 PL593 3B08  
                               PL585 5D32                                 PL577 30F0  
                               PL569 3ADE                                 PL497 37D2  
                               PL489 4D0C                                 PL755 5F5E  
                               PL747 55C8                                 PL739 3B3C  
                               PL691 4488                                 PL683 4A7E  
                               PL675 59AC                                 PL667 592A  
                               PL659 310E                                 PL595 2BF4  
                               PL587 5B88                                 PL579 4BBC  
                               PL499 251C                                 PL757 5F10  
                               PL749 53DE                                 PL693 258E  
                               PL685 3B1E                                 PL677 65B6  
                               PL669 4A72                                 PL597 4264  
                               PL589 4A5C                                 PL759 5488  
                               PL695 47BC                                 PL687 311C  
                               PL679 60C0                                 PL599 34E0  
                               PL697 4F38                                 PL689 3126  
                               PL699 3B28            TCP_FiniteStateMachine@ret 010C  
                    ?_Network_Manage 0001                         __CFG_WDT$OFF 000000  
                               l1113 2878                                 l1009 66CA  
                               l1115 2794                                 l1116 27BE  
                               l1142 4ECA                                 l1143 4EC4  
                               l1154 4F34                                 l1171 3320  
                               l1086 605C                                 l1175 335C  
                               l1169 32AA                                 l1194 12B6  
                               l1611 2CFE                                 l1179 3398  
                               l1356 6416                                 l2087 5FF0  
                               l2097 6140                                 l1619 3088  
                               l1629 2DDC                                 l1581 3C10  
                               l1658 2F6E                                 l1595 4FCA  
                               l8013 6136                                 l8005 6118  
                               l8031 60F4                                 l8007 6120  
                               l9001 174C                                 l8009 6124  
                               l8121 2D1A                                 l8113 2CF4  
                               l8027 60E6                                 l9003 177A  
                               l8203 2F0A                                 l8131 2D70  
                               l8107 2CC8                                 l9013 1858  
                               l8221 2F3C                                 l8141 2D98  
                               l9031 1A48                                 l9015 1872  
                               l8231 2F72                                 l8151 2E06  
                               l8313 46DC                                 l8305 4652  
                               l9201 21B4                                 l9121 1FF8  
                               l9105 1F94                                 l9041 1B9A  
                               l9033 1A4E                                 l8241 2FA4  
                               l8233 2F78                                 l8209 2F0E  
                               l8161 2E58                                 l8137 2D8C  
                               l8129 2D6C                                 l8083 49F0  
                               l8323 471C                                 l9131 204C  
                               l9043 1B9E                                 l9035 1A5A  
                               l8243 2FB2                                 l8227 2F4C  
                               l8219 2F2E                                 l8171 2E92  
                               l8163 2E60                                 l8147 2DE2  
                               l8155 2E0E                                 l8139 2D92  
                               l8411 666C                                 l8403 5DE2  
                               l8093 5DF0                                 l8325 4728  
                               l9221 2256                                 l9213 2226  
                               l9205 21C6                                 l9029 19C2  
                               l8253 2FE2                                 l8237 2F9C  
                               l8157 2E20                                 l8501 0006  
                               l8319 4716                                 l9151 20B2  
                               l9135 2070                                 l9127 2020  
                               l9119 1FCE                                 l8263 3036  
                               l8255 2FE8                                 l8175 2E98  
                               l8511 0032                                 l8503 0008  
                               l8431 5874                                 l9153 20C8  
                               l9137 2078                                 l9073 1E50  
                               l9057 1CA0                                 l9225 2264  
                               l8257 3012                                 l8265 3044  
                               l8273 3072                                 l8249 2FDA  
                               l8169 2E80                                 l8177 2EC0  
                               l8513 0034                                 l8505 0012  
                               l8409 6666                                 l8099 5E1E  
                               l8451 2750                                 l9171 210A  
                               l9091 1EDC                                 l9083 1EBA  
                               l9059 1CC8                                 l9227 22BA  
                               l8195 2EEA                                 l8187 2EE0  
                               l8275 307A                                 l8507 0024  
                               l7821 0000                                 l9157 20D0  
                               l8269 306A                                 l8189 2EE6  
                               l8285 5CC8                                 l8509 0028  
                               l8605 4502                                 l9501 5D2E  
                               l9325 5100                                 l9309 5076  
                               l7815 0000                                 l8367 5BA0  
                               l9415 59E4                                 l9423 5A32  
                               l9247 0000                                 l9271 5EEC  
                               l8527 638C                                 l9351 31BA  
                               l9319 509C                                 l7817 0004  
                               l7833 5F6E                                 l9177 2118  
                               l9097 1EF6                                 l9409 59D2  
                               l8289 5CE6                                 l9361 323A  
                               l8379 5BDE                                 l8491 2A3A  
                               l8475 290A                                 l8483 2954  
                               l9187 217A                                 l9179 2122  
                               l9419 5A1E                                 l9267 5EDE  
                               l9291 5634                                 l8555 62CE  
                               l8643 5E84                                 l8651 5EB8  
                               l9603 388C                                 l7925 54C0  
                               l7837 5F94                                 l8901 12A8  
                               l8581 51C0                                 l9285 5612  
                               l9381 3306                                 l9365 324E  
                               l9357 31FE                                 l8733 3EE8  
                               l8911 12DA                                 l8495 0000  
                               l9535 3590                                 l9519 3542  
                               l8831 4E68                                 l8735 3EFE  
                               l7937 54E4                                 l8489 29D4  
                               l9529 3582                                 l8569 5178  
                               l8817 4B98                                 l8841 4E86  
                               l8833 4E70                                 l9393 337E  
                               l8649 5EB4                                 l8737 3F14  
                               l8729 3EC0                                 l9633 39C4  
                               l9625 399A                                 l9617 396C  
                               l9609 3916                                 l8667 42BE  
                               l9387 3342                                 l8771 3FB2  
                               l8763 3F94                                 l8755 3F72  
                               l8747 3F4E                                 l8669 42F6  
                               l8909 12CA                                 l9549 35E6  
                               l9565 366A                                 l9397 33B4  
                               l8749 3F56                                 l9645 3A0C  
                               l8951 1532                                 l8943 14EA  
                               l9911 591E                                 l8855 4ED2  
                               l8839 4E80                                 l8871 4F0C  
                               l8767 3F9C                                 l8775 3FBE  
                               l8783 3FF8                                 l8929 13B0  
                               l7985 5FC0                                 l7969 65F2  
                               l9905 5908                                 l8873 4F1A  
                               l8769 3FAC                                 l8777 3FDA  
                               l9649 3A18                                 l8963 165C  
                               l9755 65A6                                 l7987 5FC8  
                               l9499 5D22                                 l8875 4F2A  
                               l8779 3FEA                                 l9931 52D4  
                               l9747 652A                                 l8973 169C  
                               l7997 5FE6                                 l7989 5FCC  
                               l8877 4F30                                 l9597 3872  
                               l9933 52DC                                 l8887 113A  
                               l9679 64FE                                 l9759 65B0  
                               l9855 6618                                 l9935 52E4  
                               STR_1 10B4                                 STR_2 10E6  
                               STR_3 1076                                 STR_4 10DC  
                               l9867 63A6                                 l9891 58DA  
                               l9939 5308                                 l9971 4048  
                               STR_5 10F5                                 STR_6 1039  
                               l8989 1726                                 l9885 58CC  
                               l9973 4052                                 STR_7 10A3  
                               STR_8 10C3                                 l9895 58E6  
                               l9991 4222                                 STR_9 10D0  
                               l9889 58D4                                 l9899 58EE  
                               l9987 41F8                                 _GIEH 007F97  
                               _GIEL 007F96          __end_of_TCP_GetReceivedData 5B0E  
                               _LATE 000F8D                                 _LATH 000F90  
                               _LATJ 000F91                                 _IPEN 007E87  
                               _MIRD 000EB8                                 _MIWR 000EB6  
                  ??_PHY_WaitForBusy 0017                                 _TMR1 000FCE  
                    lcd_write_data@d 0017              __size_of_ETH_EdataWrite 0000  
                       lcd_goto1@pos 0018                         lcd_goto2@pos 0018  
                      __CFG_FCMEN$ON 000000                         __CFG_STVR$ON 000000  
             __end_of_lcd_write_data 6566                      __end_of_TCP_Snd 2A40  
             __end_of_lcd_write_ctrl 6586                      _TCP_PayloadSave 427C  
                    lcd_write_ctrl@c 0017                                 _main 4F42  
                               _time 5CA4                                 fsr0h 000FEA  
                               fsr1h 000FE2                                 indf0 000FEF  
                               fsr0l 000FE9                                 fsr2h 000FDA  
                               fsr1l 000FE1                                 indf2 000FDF  
                               fsr2l 000FD9                                 btemp 0049  
                        _SYSLOG_Init 628C                                 prodh 000FF4  
                               prodl 000FF3                                 start 003A  
                      __CFG_FOSC2$ON 000000                      ETH_EdataWrite@d 0001  
                       ?_IPV4_Packet 0001                   __size_of_ETH_Read8 001E  
                  i1_ETH_CheckLinkUp 6344                   __size_of_ETH_Flush 003A  
             __size_of_ETH_ReadBlock 0064                         ___param_bank 000010  
              __size_of_SYSLOG_Write 0026                   __size_of_IPV4_Init 000A  
                        ?i1_PHY_Read 0003                   __size_of_IPV4_Send 0066  
            DEMO_TCP_Client@t_client 01E5                          ?_TCB_Insert 0017  
                       ?_ETH_Write32 0017                         ?_ETH_Write16 0017  
         __size_ofi1_PHY_WaitForBusy 0000                      _DEMO_TCP_Client 3B50  
                 TCP_Connect@srvaddr 0113                   ?i1_ETH_CheckLinkUp 0001  
                   ARPV4_Request@ret 007B                  __size_of_ARPV4_Init 001A  
           __size_of_ETH_CheckLinkUp 002C              ?_TCP_FiniteStateMachine 0001  
                   __end_of_LED_Init 6546                         _BAUDCON1bits 000F7E  
                      __CFG_WAIT$OFF 000000                     _ETH_GetByteCount 6586  
                     __CFG_CCP2MX$ON 000000                                l10121 5B04  
                              l10131 63E0                                l10221 3B6E  
                              l10205 596C                                l10039 523E  
                              l10127 63D0                                l10135 6424  
                              l10231 3BAE                                l10223 3B7A  
                              l10137 6428                                l10241 3BEC  
                              l10209 599A                                l10243 3BFA  
                   __end_of_ETH_Copy 51D0                                l10323 4F88  
                              l10261 3C38                                l10191 66CC  
                              l10281 3C9A                                l10345 503C  
                              l10283 3CA0                                l10269 3C52  
                              l10461 5332                                l10297 3D2A  
                              l10457 5324                                l10459 532E  
                   __end_of_ETH_Dump 62E8                     __end_of_ETH_Init 4D0C  
                  _nextPacketPointer 0042                     __end_of_ETH_Send 6218  
                 __size_of_TCB_Check 007E                                ?_main 0001  
                              _ADRES 000FC3                                STR_10 10EE  
                              STR_11 1092                                _ECON1 000FD2  
                              _ECON2 000EFE                                ?_time 0017  
IPV4_PseudoHeaderChecksum@payloadLen 0017                                _CREN1 007D5C  
                              u11110 5F8C                                u11120 5FA4  
                              u11200 4DB2                                u12000 2640  
                              u11210 4DCC                                u12010 2654  
                              u12100 271A                                u12020 2668  
                              u11117 5F86                                u12110 2740  
                              u12030 2A74                                u11207 4DAC  
                              u12007 263A                                u11160 4D4C  
                              u12200 27BE                                u12040 2694  
                              u11217 4DC6                                u12017 264E  
                              u11170 4D64                                u12210 27E2  
                              u12130 2762                                u12050 26A8  
                              u12107 2714                                u12035 2A6A  
                              u12027 2662                                u11180 4D7E  
                              u12300 28D4                                u12220 27F6  
                              u12060 26BC                                u12117 273A  
                              u11190 4D98                                u12230 2812  
                              u12150 277E                                u12070 26D0  
                              u13110 1116                                u11167 4D46  
                              u12207 27B8                                u12047 268C  
                              u11360 496A                                u12400 2A3A  
                              u12240 2826                                u13200 123C  
                              u13120 1132                                u11177 4D5E  
                              u12217 27D6                                u12137 275C  
                              u12057 26A2                                u14001 1A7E  
                              u11370 499A                                u12250 2842  
                              u12170 2794                                u12090 2706  
                              u14010 1A9C                                u13210 1258  
                              u13130 1174                                u12410 0012  
                              u13050 4E90                                u11187 4D78  
                              u12307 28C0                                u12227 27F0  
                              u12067 26B6                                u12411 0010  
                              u12340 296C                                u12260 2856  
                              u12180 27A8                                u14100 1B9A  
                              u13300 1376                                u13220 1272  
                              u13140 119A                                u12420 0024  
                              u11197 4D92                                u11365 4968  
                              u12237 280C                                u12157 2778  
                              u12077 26CA                                u14021 1AB6  
                              u13117 1110                                u12421 0022  
                              u12350 29A0                                u14110 1BB2  
                              u14030 1ADC                                u13310 1392  
                              u13230 128C                                u13150 11BC  
                              u12430 0032                                u11375 4998  
                              u12407 2A26                                u12247 2820  
                              u13207 1234                                u13127 112C  
                              u12431 0030                                u12360 29B4  
                              u12280 2878                                u14200 1C78  
                              u14040 1AF6                                u13400 148C  
                              u13320 13AE                                u13240 12A8  
                              u13160 11D6                                u11560 2E56  
                              u11528 2DF2                                u11480 2DC2  
                              u11448 2CDE                                u15000 31E6  
                              u12257 283C                                u12177 278E  
                              u12097 2700                                u14017 1A94  
                              u13217 1250                                u13137 1160  
                              u12290 288E                                u14210 1C8C  
                              u14130 1BCE                                u14050 1B14  
                              u13410 14A2                                u13330 13CA  
                              u13250 12F4                                u13170 11F0  
                              u11570 2E76                                u12450 609A  
                              u12347 2966                                u12267 2850  
                              u12187 27A2                                u14107 1B94  
                              u13307 136E                                u13227 126A  
                              u13147 118E                                u12700 48B4  
                              u12620 47E4                                u12380 29D2  
                              u14220 1C9E                                u14060 1B32  
                              u13420 14BC                                u13340 13E4  
                              u13260 1312                                u13180 120C  
                              u11708 2F88                                u15020 3236  
                              u12460 5C0A                                u12357 2998  
                              u14117 1BAE                                u14037 1AD4  
                              u13501 1582                                u13317 138A  
                              u13237 1284                                u13157 11B4  
                              u12710 48C8                                u12630 47FA  
                              u12390 29EA                                u14310 1D8E  
                              u14230 1CDA                                u14150 1BF8  
                              u14070 1B50                                u13510 159E  
                              u13270 1328                                u13190 1222  
                              u11558 2E30                                u12367 29AE  
                              u12287 2870                                u14207 1C72  
                              u14047 1AEE                                u13407 1484  
                              u13351 1400                                u13327 13A6  
                              u13247 12A0                                u13167 11CE  
                              u11567 2E50                                u11487 2DBC  
                              u15007 31DA                                u12720 48DC  
                              u12640 4818                                u11840 4660  
                              u12800 4318                                u14400 1E50  
                              u14320 1DB6                                u14160 1C0C  
                              u14080 1B6E                                u13600 1692  
                              u13520 15BA                                u13440 14E6  
                              u13360 141C                                u13280 1342  
                              u12297 2888                                u14241 1CF4  
                              u14217 1C86                                u14137 1BC8  
                              u14057 1B0E                                u13417 149A  
                              u13337 13C2                                u13257 12EC  
                              u13177 11E8                                u11577 2E70  
                              u12730 48FC                                u12650 4836  
                              u11850 4670                                u12810 4336  
                              u14410 1E80                                u14330 1DD0  
                              u14250 1D08                                u14170 1C26  
                              u14090 1B84                                u13530 15D6  
                              u13450 1504                                u13370 1438  
                              u13290 135C                                u15210 337C  
                              u15130 3304                                u16010 414E  
                              u12707 48AC                                u12627 47DC  
                              u12387 29CA                                u14227 1C98  
                              u14067 1B2C                                u13427 14B4  
                              u13347 13DC                                u13267 130A  
                              u13187 1204                                u15027 322A  
                              u12740 4914                                u12660 4854  
                              u12820 4352                                u14500 1F2A  
                              u14420 1E90                                u14340 1DE8  
                              u14180 1C42                                u13700 1742  
                              u13620 16B4                                u13540 15F0  
                              u13460 1520                                u13380 1454  
                              u15300 5A1C                                u11748 2FC6  
                              u15220 3396                                u15140 331E  
                              u15060 3268                                u12900 3DD6  
                              u16020 4188                                u12717 48C2  
                              u12637 47F2                                u12397 29E2  
                              u14317 1D84                                u14261 1D22  
                              u14237 1CD6                                u14157 1BF2  
                              u14077 1B4A                                u13517 1596  
                              u13277 1320                                u13197 121A  
                              u12670 4872                                u11950 25B8  
                              u12830 4364                                u12750 4290  
                              u14510 1F44                                u14350 1E02  
                              u14270 1D36                                u14190 1C5C  
                              u13550 160E                                u13390 146E  
                              u11790 5CC6                                u15070 3276  
                              u16030 419E                                u12727 48D6  
                              u12647 4810                                u12807 430C  
                              u14407 1E4C                                u14327 1DAC  
                              u14167 1C06                                u14087 1B68  
                              u13607 168A                                u13527 15B2  
                              u13447 14E4                                u13367 1414  
                              u13287 133A                                u12911 3DEE  
                              u12680 4888                                u11960 25D0  
                              u12840 4380                                u14600 2010  
                              u14520 1F54                                u14440 1EAC  
                              u14360 1E1A                                u13720 1790  
                              u13560 1624                                u13480 154C  
                              u11768 3054                                u15240 33B4  
                              u15080 329C                                u16040 41D2  
                              _LATH0 007C80                                u12737 48F4  
                              u12657 482E                                u12817 4330  
                              u14417 1E7C                                u14337 1DCC  
                              u14257 1D04                                u14177 1C20  
                              u14097 1B7E                                u13537 15CE  
                              u13457 14FC                                u13377 1430  
                              u13297 1354                                u15217 3374  
                              u15137 32FC                                u12921 3E28  
                              u16017 4148                                _LATH1 007C81  
                              u12690 489E                                u11890 5BCC  
                              u11970 25F8                                u12850 43A6  
                              u12770 42A8                                u14530 1F64  
                              u14450 1ED2                                u14290 1D5E  
                              u13810 186E                                u13650 16E0  
                              u13570 163E                                u13490 1566  
                              u15250 3464                                u15170 3340  
                              u16050 41EC                                _LATH2 007C82  
                              u12747 490C                                u12667 484C  
                              u12827 434C                                u14507 1F26  
                              u14427 1E8C                                u14347 1DDE  
                              u14187 1C3C                                u13731 179E  
                              u13707 173A                                u13627 16AE  
                              u13547 15E8                                u13467 1518  
                              u13387 144C                                u15307 5A10  
                              u15411 3574                                u15227 338E  
                              u15147 3316                                u15067 3262  
                              u16027 417C                                u11980 260C  
                              u12860 440C                                u14620 2032  
                              u14540 1F7A                                u14380 1E36  
                              u13900 1968                                u13820 188C  
                              u13740 17BC                                u13580 1658  
                              u15180 335A                                u16060 421C  
                              u12677 486A                                u11957 25AC  
                              u12837 435E                                u12757 428A  
                              u14517 1F3E                                u14357 1DFE  
                              u14277 1D32                                u14197 1C56  
                              u13557 1606                                u13397 1466  
                              u12941 3EB2                                u16037 4198  
                              u11990 262C                                u12870 4424  
                              u12790 42F6                                u14710 20E4  
                              u14630 2048                                u14550 1F90  
                              u14470 1EF4                                u13910 1984  
                              u13750 17D6                                u13670 1700  
                              u13590 1676                                u16310 3BE6  
                              u12687 4880                                u11967 25CA  
                              u12847 437A                                u14607 200A  
                              u14527 1F50                                u14447 1EA8  
                              u14367 1E10                                u13831 18A6  
                              u13727 1788                                u13567 161C  
                              u13487 1544                                u15255 345A  
                              u15247 33AC                                u15087 328E  
                              u16047 41CA                                u14640 2064  
                              u14560 1FA8                                u14480 1F08  
                              u13920 199E                                u13840 18CA  
                              u15440 3784                                u12697 4896  
                              u11897 5BC4                                u11977 25F2  
                              u12857 4398                                u12777 42A2  
                              u14537 1F60                                u14457 1ECC  
                              u14297 1D5A                                u13817 186C  
                              u13657 16DA                                u13577 1636  
                              u13497 155E                                u15177 3338  
                              u15601 3914                                u16057 41E4  
                              u14810 21AA                                u14730 2100  
                              u14490 1F18                                u13930 19BE  
                              u13770 1810                                u13690 1722  
                              u11987 2606                                u12867 43F8  
                              u14627 202E                                u14547 1F74  
                              u14387 1E32                                u13907 1960  
                              u13851 18D8                                u13827 1884  
                              u13747 17B4                                u13587 1656  
        __size_of_ETH_readLinkStatus 0000                                u15531 3694  
                              u15451 35D2                                u15187 3352  
                              u16067 4210                                _MAIPG 000EA6  
                              u14900 22D4                                u14660 208C  
                              u14580 1FC4                                u13940 19DC  
                              u13860 18F6                                u15540 3700  
                              _ERDPT 000F7A                                u11997 2624  
                              u12877 441C                                u12797 42EA  
                              u14717 20E0                                u14637 2042  
                              u14557 1F8A                                u14477 1EEE  
                              u13917 197C                                u13757 17CE  
                              u13677 16FA                                u13597 166E  
                              u15445 377A                                u12981 3FE8  
                              u14910 22EE                                u14830 21D8  
                              u14750 2134                                u13950 19F8  
                              u13790 1838                                u14647 205E  
                              u14567 1FA4                                u14487 1F04  
                              u13927 1996                                u13871 1910  
                              u13847 18BE                                u14840 21E8  
                              u14680 20A8                                u13960 1A12  
                              u13880 192E                                u14817 21A4  
                              u14761 214E                                u14737 20FA  
                              u14497 1F14                                u13937 19B6  
                              u13777 1804                                u13697 1720  
                              u15545 36F6                                u14850 21FE  
                              u14770 216A                                u13970 1A2C  
                              u15570 3A4E                                u14907 22CE  
                              u14667 2088                                u14587 1FBE  
                              u13947 19D4                                u13891 194A  
                              u13867 18EE                                u15491 361C  
                              u16507 555A                                u14860 2214  
                              u13980 1A48                                u16460 4FCA  
                              u14917 22E8                                u14837 21D4  
                              u14781 2178                                u14757 2130  
                              u13957 19F0                                u13797 1830  
                              u16517 556C                                u14870 2240  
                              u14790 218E                                u13990 1A70  
                              u15590 3904                                u15910 4064  
                              u14847 21E4                                u14687 20A2  
                              u13967 1A0A                                u13887 1926  
                              u15575 3A44                                u16527 557E  
                              u14880 2252                                u14857 21F8  
                              u14777 2160                                u13977 1A24  
                              u16537 55B8                                u14890 2278  
                              u16394 3D7A                                u15930 40AA  
                 __size_of_TCB_Reset 0150                                u14867 220E  
                              u13987 1A40                                u16547 6552  
                              u16395 3D76                                u15940 40EC  
                              u14877 223C                                u14797 218A  
                              u13997 1A68                                u16557 655C  
                              u15917 405E                                u16477 5536  
                              u15950 4100                                u14887 224C  
                              u16567 656E                                u16487 5542  
                              u14897 2274                                u16577 657C  
                              u15937 409E                                u16497 554E  
                              u15970 411C                                u16587 671E  
                    __end_of___lwdiv 5FFA                                u15947 40E0  
                              u16597 632E                                u15957 40FA  
                              u15990 4136                                u15977 4116  
                              _MICMD 000EB2                                u15997 4130  
                              i1l512 0036                                i1l504 0004  
                              i1l521 5476                      __end_of___lwmod 614A  
                              i1l506 001A                                i1l507 0018  
                              i1l518 5472                  ??i1_ETH_CheckLinkUp 0010  
                              i1l519 5462                                _ERXND 000EEA  
                              i1l476 0016                                i1l484 623E  
                              i1l489 624C                                _ETXND 000EE6  
                              _ERXST 000EE8                                _EWRPT 000EE2  
                              _ETXST 000EE4                                _SPEN1 007D5F  
                              _TX1IF 007CF4                                _PORTB 000F81  
                              _PORTJ 000F88                      __end_of__doprnt 308E  
                              _TRISA 000F92                                _TRISB 000F93  
                              _TRISE 000F96                                _TRISH 000F99  
                              _TRISJ 000F9A                       __CFG_ECCPMX$ON 000000  
     __size_of_ETH_TxComputeChecksum 008E        __end_of_ETH_TxComputeChecksum 581E  
               __size_of_DHCP_Manage 0080                     __end_of_TCP_Init 65DE  
                   __end_of_TCP_Recv 3426                     __end_of_TCP_Send 56F4  
                        ?_IPv4_Start 0022                     __end_of_PHY_Read 53DE  
                    __end_of_dpowers 100B                     __end_of_UDP_Send 588E  
                        ?_TCP_Update 0001                      __end_of_isdigit 65FA  
                              _putch 6630                   __size_of_PHY_Write 0050  
                 __size_of_UDP_Start 004E                      __end_of_low_isr 003A  
          __size_of_ETH_EventHandler 002E            _IPV4_PseudoHeaderChecksum 55CE  
                              pclath 000FFA      TCP_FiniteStateMachine@nextState 0110  
                              tablat 000FF5               TCP_InsertRxBuffer@data 0021  
                              time@t 0017                                plusw1 000FE3  
                              plusw2 000FDB                         _SYSLOG_Write 646A  
                    ?_lcd_write_data 0001                      ??_lcd_init_pins 0017  
                    ?_lcd_write_ctrl 0001                                status 000FD8  
                 _TCP_InsertRxBuffer 5A36                      __end_of_sprintf 6316  
                      _ETH_EdataRead 0000                        ?_IPV4_GetMyIP 0017  
                      ?_ETH_SaveRDPT 0001                         __end_ofPL401 2360  
                       __end_ofPL411 4264                         __end_ofPL403 2372  
                       __end_ofPL501 3AB2                         __end_ofPL421 37D2  
                       __end_ofPL413 4448                         __end_ofPL405 23B2  
                       __end_ofPL511 4BBC                         __end_ofPL503 2AE0  
                       __end_ofPL431 2422                         __end_ofPL423 23EE  
                       __end_ofPL415 23D4                         __end_ofPL407 23CC  
                       __end_ofPL601 5126                         __end_ofPL521 30F0  
                       __end_ofPL513 2540                         __end_ofPL505 5790  
                       __end_ofPL441 243C                         __end_ofPL433 3A8A  
                       __end_ofPL425 240A                         __end_ofPL417 23DC  
                       __end_ofPL409 3440                         __end_ofPL611 2C14  
                       __end_ofPL603 61EE                         __end_ofPL531 2B0A  
                       __end_ofPL523 3AC4                         __end_ofPL515 2548  
                       __end_ofPL507 2538                         __end_ofPL451 2480  
                       __end_ofPL443 2456                         __end_ofPL435 349E  
                       __end_ofPL427 2412                         __end_ofPL419 23E4  
                       __end_ofPL701 2C9E                         __end_ofPL621 504E  
                       __end_ofPL613 2C26                         __end_ofPL605 5B18  
                       __end_ofPL541 3ADE                         __end_ofPL533 58AA  
                       __end_ofPL525 462C                         __end_ofPL517 382A  
                       __end_ofPL509 380E                         __end_ofPL461 30B2  
                       __end_ofPL453 4E2A                         __end_ofPL445 2470  
                       __end_ofPL437 30A6                         __end_ofPL429 241A  
                       __end_ofPL711 3858                         __end_ofPL703 350C  
                       __end_ofPL631 2C52                         __end_ofPL623 2576  
                       __end_ofPL615 2C38                         __end_ofPL607 5AA0  
                       __end_ofPL551 3D82                         __end_ofPL543 4456  
                       __end_ofPL535 34E0                         __end_ofPL527 2AEE  
                       __end_ofPL519 2550                         __end_ofPL471 24CC  
                       __end_ofPL463 30BC                         __end_ofPL455 248E  
                       __end_ofPL447 2ABC                         __end_ofPL439 2AAE  
                       __end_ofPL391 2A5A                         __end_ofPL721 608A  
                       __end_ofPL713 5F4E                         __end_ofPL705 3516  
                       __end_ofPL641 258E                         __end_ofPL633 2C62  
                       __end_ofPL625 2C48                         __end_ofPL617 2566  
                       __end_ofPL609 401C                         __end_ofPL561 2BC2  
                       __end_ofPL553 2B5A                         __end_ofPL545 255E  
                       __end_ofPL537 56FE                         __end_ofPL529 3844  
                       __end_ofPL481 24F8                         __end_ofPL473 24D6  
                       __end_ofPL465 30C8                         __end_ofPL457 249C  
                       __end_ofPL449 2478                         __end_ofPL393 231E  
                       __end_ofPL731 4A94                         __end_ofPL723 2CB0  
                       __end_ofPL715 5290                         __end_ofPL707 2CA8  
                       __end_ofPL651 2C7E                         __end_ofPL643 51DE  
                       __end_ofPL635 4636                         __end_ofPL627 4BDE  
                       __end_ofPL619 5AAC                         __end_ofPL571 3B08  
                       __end_ofPL563 2BDC                         __end_ofPL555 2B74  
                       __end_ofPL547 2B40                         __end_ofPL539 2B26  
                       __end_ofPL491 251C                         __end_ofPL483 250A  
                       __end_ofPL475 4A2A                         __end_ofPL467 24C2  
                       __end_ofPL459 24B6                         __end_ofPL395 2338  
                       __end_ofPL387 230C                         __end_ofPL741 3B50  
                       __end_ofPL733 313A                         __end_ofPL725 55C8  
                       __end_ofPL717 4E34                         __end_ofPL709 3B3C  
                       __end_ofPL661 427C                         __end_ofPL653 4644  
                       __end_ofPL645 527C                         __end_ofPL637 447A  
                       __end_ofPL629 5530                         __end_ofPL581 2BF4  
                       __end_ofPL573 3DB4                         __end_ofPL565 4A44  
                       __end_ofPL557 2B8E                         __end_ofPL549 4470  
                       __end_ofPL493 3D68                         __end_ofPL485 2AD6  
                       __end_ofPL477 24DE                         __end_ofPL469 30D0  
                       __end_ofPL397 2344                         __end_ofPL389 2316  
                       __end_ofPL751 628C                         __end_ofPL743 4024  
                       __end_ofPL735 3144                         __end_ofPL727 2CBA  
                       __end_ofPL719 5B22                         __end_ofPL671 2C94  
                       __end_ofPL663 5286                         __end_ofPL655 310E  
                       __end_ofPL647 2C70                         __end_ofPL639 2580  
                       __end_ofPL591 384E                         __end_ofPL583 3100  
                       __end_ofPL575 4A5C                         __end_ofPL567 3D9C  
                       __end_ofPL559 2BA8                         __end_ofPL495 34C6  
                       __end_ofPL487 30DE                         __end_ofPL479 24E6  
                       __end_ofPL399 4930                         __end_ofPL761 2CC2  
                       __end_ofPL753 5F5E                         __end_ofPL745 5F56  
                       __end_ofPL737 3DBE                         __end_ofPL729 4BE8  
                       __end_ofPL681 639C                         __end_ofPL673 6224  
                       __end_ofPL665 2C88                         __end_ofPL657 3502  
                       __end_ofPL649 4488                         __end_ofPL593 3B1E  
                       __end_ofPL585 5D48                         __end_ofPL577 30F8  
                       __end_ofPL569 3AF8                         __end_ofPL497 37FA  
                       __end_ofPL489 4D14                         __end_ofPL755 5F64  
                       __end_ofPL747 55CE                         __end_ofPL739 3B46  
                       __end_ofPL691 4492                         __end_ofPL683 4A8A  
                       __end_ofPL675 59B8                         __end_ofPL667 5934  
                       __end_ofPL659 311C                         __end_ofPL595 2C02  
                       __end_ofPL587 5B92                         __end_ofPL579 4BD4  
                       __end_ofPL499 252E                         __end_ofPL757 5F18  
                       __end_ofPL749 53E6                         __end_ofPL693 2598  
                       __end_ofPL685 3B28                         __end_ofPL677 65C2  
                       __end_ofPL669 4A7E                         __end_ofPL597 4272  
                       __end_ofPL589 4A72                         __end_ofPL759 5490  
                       __end_ofPL695 47C6                         __end_ofPL687 3126  
                       __end_ofPL679 60CC                         __end_ofPL599 34F4  
                       __end_ofPL697 4F42                         __end_ofPL689 3130  
                       __end_ofPL699 3B32            __end_ofi1_ETH_CheckLinkUp 6372  
         ETH_RxComputeChecksum@rxptr 002D                  __size_of_ETH_GetMAC 002C  
                     __CFG_ETHLED$ON 000000        ETH_TxComputeChecksum@position 0025  
                __size_of_ETH_Read16 0036                  __size_of_ETH_Read32 0058  
               __end_of_ARPV4_Packet 3760                      __initialization 5E34  
                __size_of_ETH_Insert 0040                      TCP_Send@dataLen 00F2  
               __end_of_ARPV4_Lookup 5E34                  ?_TCP_InsertRxBuffer 001F  
                       __end_of_main 5042                 __end_of_ARPV4_Update 63C6  
                       __end_of_time 5CF8       __end_of_TCP_FiniteStateMachine 22F4  
                __size_of_ETH_Write8 000A                          ETH_Copy@len 0071  
                        ETH_Init@mac 002D                      _DHCP_WriteZeros 6664  
           ETH_TxComputeChecksum@len 0027                               ??_main 0034  
                             ??_time 001B                        __activetblptr 000003  
           DEMO_TCP_Client@port60TCB 0230                       _MAC_getAddress 6742  
                    TCP_SendDone@ret 0021                  _TCP_ParseTCPOptions 4E34  
                      _ETH_ReadBlock 5B92                      TCP_Snd@txHeader 00DA  
               ??_TCP_InsertRxBuffer 0025                    __end_of_ETH_Read8 6390  
                  __end_of_ETH_Flush 5D32                    ETH_Send@packetEnd 0017  
            __end_of_TCP_PayloadSave 442C                    __end_of_IPV4_Init 671C  
                  __end_of_IPV4_Send 5B88                            ??_TCP_Snd 00A1  
                             _ADCON0 000FC2                               _ADCON1 000FC1  
                             _ADCON2 000FC0                  __size_ofi1_PHY_Read 00A2  
                             _ADRESH 000FC4                               _ADRESL 000FC3  
                     ETH_Dump@length 0017                               _EDMAND 000EF2  
                             _EDMAST 000EF0                               ?_putch 0001  
                             _MAADR1 000E84                               _MAADR2 000E85  
                             _MAADR3 000E82                               _MAADR4 000E83  
                             _MAADR5 000E80                               _MAADR6 000E81  
                __size_of_TCB_Insert 003E                               _MACON1 000EA0  
                             _MACON3 000EA2                               _MACON4 000EA3  
                             _MAMXFL 000EAA                               _T1SYNC 007E6A  
                             i1l6511 0028                               i1l6503 0006  
                             i1l6513 0032                               i1l6505 0008  
                             i1l6515 0034                               i1l6507 0012  
                             i1l6509 0024                               i1l6497 0000  
                             i1l6981 0000                               _INTCON 000FF2  
                             _OSCCON 000FD3                       ?_ETH_EdataRead 0001  
                     ??_IPV4_GetMyIP 001B                               _SPBRG1 000FAF  
                             _TMR1IE 007CE8                               _TMR1IF 007CF0  
                             _TMR1CS 007E69                       ??_ETH_SaveRDPT 0017  
                             _TMR1IP 007CF8                               _TMR1ON 007E68  
                  __end_of_TCB_Check 5A36                 __end_of_ICMP_Receive 5F10  
                             _TXREG1 000FAD                               _TXSTA1 000FAC  
                   __end_of_dhcpName 1028              __end_of_DEMO_TCP_Client 3D40  
               ?_TCP_ParseTCPOptions 0001                    __end_of_TCB_Reset 4916  
              __size_of_DHCP_Handler 024C                    main@no_ip_display 02C3  
                       ?_TCP_Connect 0111                       __CFG_XINST$OFF 000000  
                    __CFG_EASHFT$OFF 000000                     __end_of_lcd_busy 6726  
                   __end_of_lcd_init 55C2                       ETH_ReadBlock@p 001E  
                   __end_of_high_isr 6742           __end_ofi1_ETH_EventHandler 625A  
              ICMP_EchoReply@icmpHdr 00AE                     __end_of_lcd_puts 65B6  
                 _ETH_ResetByteCount 6730                 TCP_Snd@payloadLength 00D5  
              ICMP_EchoReply@ipv4Hdr 009F                               ___wmul 64B6  
                __size_of_IPv4_Start 0178                               _arpMap 0300  
                          ??___lwdiv 001B                            ??___lwmod 0022  
              __size_of_DHCP_Request 0188                  __size_of_TCP_Update 0226  
                  __end_of_PHY_Write 5D98                               _initHW 6182  
                             _memcmp 5E80                            ??__doprnt 0025  
                             _memset 63C6                    __end_of_UDP_Start 5DE6  
                             clear_0 5E3A                               clear_1 5E46  
                             clear_2 5E52                               clear_3 5E5E  
             __end_of_MAC_getAddress 6746                               _tcpMss 0046  
                       __doprnt@flag 0066                 __end_of_broadcastMAC 102E  
                             _printf 6502                  ?_ETH_ResetByteCount 0001  
                       __doprnt@prec 0061                               main@ip 02E4  
                             _strlen 641A               ETH_ComputeChecksum@len 0017  
                    UDP_Start@destIP 009F                            ??_isdigit 0017  
                     ?_ETH_ReadBlock 0017                         ?_UDP_Receive 00D3  
                       __mediumconst 0000                    ??_ETH_CheckLinkUp 0026  
                          ??_low_isr 0014                               tblptrh 000FF7  
                             tblptrl 000FF6                               tblptru 000FF8  
                   __end_of_spi_init 66FE             ADC_GetConversion@channel 001A  
       __size_of_Network_WaitForLink 000E                            ??_sprintf 0034  
                       ??_ARPV4_Init 0017             i1PHY_WaitForBusy@timeout 0002  
              DHCP_WriteZeros@length 0018                         _DHCP_Handler 3DBE  
                      DHCP_Handler@v 00BB                       _ETH_EdataWrite 0000  
                     ETH_Insert@data 001D                      __CFG_FOSC$HSPLL 000000  
                         __accesstop 0060              __end_of__initialization 5E76  
               ??_ETH_ResetByteCount 0017                   TCP_SendDone@tcbPtr 001F  
                          ?_LED_Init 0001                ??_TCP_ParseTCPOptions 001B  
               DEMO_TCP_Client@ledNr 0120                            ?_ETH_Copy 0071  
                          ?_ETH_Dump 0017                            ?_ETH_Init 0001  
                          ?_ETH_Send 0001           __size_ofi1_ETH_CheckLinkUp 002E  
                      ___rparam_used 000001                         _DHCP_Request 4492  
                      ?_Network_Init 0001                        ?_Network_Read 0001  
             IPV4_Send@payloadLength 0031                IPv4_Start@destAddress 0022  
            __end_of_DHCP_WriteZeros 667C         __end_ofi1_ETH_readLinkStatus 0000  
                     __pcstackCOMRAM 0001                         __pidataBANK0 6746  
              _ETH_RxComputeChecksum 5FFA              __size_of_ETH_WriteBlock 004C  
               __size_of_IPV4_Packet 01D2                __end_of_ARPV4_Request 49F4  
                          LED_Init@x 0017                            ?_TCP_Init 0001  
                          ?_TCP_Recv 0111                            ?_TCP_Send 00EE  
                          ?_PHY_Read 0019              __size_of_ETH_WriteStart 00FE  
                          ?_UDP_Send 0001                        __end_of_putch 664A  
                 PHY_WaitForBusy@ret 0017                 __size_of_ETH_Write16 000E  
               __size_of_ETH_Write32 001A                      ?_MAC_getAddress 0017  
                 __end_of_ARPV4_Init 6630    TCP_ParseTCPOptions@tcpOptionsSize 001F  
       __end_of_ETH_NextPacketUpdate 5CA4                         ??_ETH_GetMAC 0017  
                    ETH_Copy@tmp_len 0075                      _PHY_WaitForBusy 0000  
                       _dhcpServerId 0220                         ETH_Read8@ret 0017  
                       ??_ETH_Read32 001B                         ??_ETH_Read16 0019  
                   ??_Network_Manage 01B9                         ??_ETH_Insert 001B  
                 __size_of_lcd_goto1 000E                   __size_of_lcd_goto2 000E  
                      TCB_Insert@ptr 0017                         ??_ETH_Write8 0017  
           DHCP_Handler@optionLength 00CE                     ?_TCP_PayloadSave 00EE  
                         __doprnt@ap 0024                           __doprnt@cp 0064  
             __end_of_ETH_EdataWrite 0000                           __doprnt@pb 006C  
                 __size_of_lcd_putch 001C                 ETH_ComputeChecksum@v 0023  
                            ??_putch 0017                      ??_ETH_EdataRead 0017  
                         __pbssBANK1 01BE                           __pbssBANK2 0200  
                         __pbssBANK3 0300                     _ETH_EventHandler 5F18  
           __end_of_ETH_GetByteCount 65A4                __size_of_ARPV4_Packet 024A  
                         ??_LED_Init 0017                __size_of_ARPV4_Lookup 004E  
                       ?_SYSLOG_Init 0001                           ??_ETH_Copy 0034  
                         ??_ETH_Dump 0019                           ??_ETH_Init 002A  
                     ??_Network_Init 002E                       ??_Network_Read 0157  
                         ??_ETH_Send 0017                __size_of_ARPV4_Update 002A  
                   ?_DEMO_TCP_Client 0001                           _macAddress 102E  
                    TCB_Reset@tcbPtr 0017                   __end_of_ETH_GetMAC 61E4  
                       ??i1_PHY_Read 0007                   __end_of_ETH_Read16 60C0  
                 __end_of_ETH_Read32 5C4E                         ??_TCB_Insert 0019  
                 __end_of_ETH_Insert 610C                         IPV4_Send@ret 006F  
                            ?___wmul 0017                           ??_TCP_Init 0017  
                         ??_TCP_Recv 0117                           ??_TCP_Send 0033  
                         ??_PHY_Read 001D                   __end_of_ETH_Write8 6730  
                            ?_initHW 0001                           ??_UDP_Send 0074  
                            ?_memcmp 0017                           _deviceTime 02E8  
                            ?_memset 0017          __end_of_ETH_ComputeChecksum 5520  
                            _EDMADST 000EF4             TCP_SocketPoll@socket_ptr 001F  
                            ?_printf 0029                              _MABBIPG 000EA4  
            __size_of_ADC_Initialize 0016                              _T1CKPS0 007E6C  
                            _T1CKPS1 007E6D                              ?_strlen 0017  
               __end_of_IPV4_GetMyIP 66BA                      ??_ETH_ReadBlock 001B  
               __end_of_ETH_SaveRDPT 6712                              _T1OSCEN 007E6B  
                            _EPKTCNT 000ED9                              _EIEbits 000EFB  
                 __size_of_uart_init 0016                              _ERXFCON 000ED8  
             TCP_GetReceivedData@ret 0025                   __size_of_rtcc_init 0038  
                       SYSLOG_Init@t 006D                              _EIRbits 000F60  
                            _ERXRDPT 000EEC                       TCB_Check@count 001C  
            __size_of_TCP_SocketInit 0088              __size_of_TCP_SocketPoll 0026  
                         _ipv4Header 0299                         _ARPV4_Packet 3516  
                            _OSCTUNE 000F9B                         ??_IPv4_Start 0027  
                   ??_lcd_write_data 0017                     ??_lcd_write_ctrl 0017  
                       _ARPV4_Lookup 5DE6                              _TCP_Snd 2598  
                    ?_ETH_EdataWrite 0001                         ??_TCP_Update 0111  
              __size_of_ICMP_Receive 0044                         _ARPV4_Update 639C  
                          ?_lcd_busy 0001                            ?_lcd_init 0001  
                          ?_high_isr 0001                            ?_lcd_puts 0019  
                 __end_ofi1_PHY_Read 5488               ARPV4_Lookup@ip_address 0017  
                         _ipv4Router 0224                           _led_values 0200  
                 __end_of_TCB_Insert 6080                      TCP_Update@count 0119  
                 UDP_Receive@udpcksm 00D3                  SYSLOG_Write@message 006D  
               TCP_SocketInit@tcbPtr 001F                              __Hparam 0000  
       __size_of_TCP_GetReceivedData 0062                              __Lparam 0000  
             ?_ETH_RxComputeChecksum 0025                           _errataTemp 000E7E  
                   ?_DHCP_WriteZeros 0018                            _ECON1bits 000FD2  
                  __end_of_lcd_goto1 66C8                    __end_of_lcd_goto2 66E4  
                          ?_spi_init 0001                    __end_of_lcd_putch 6616  
               __size_of_TCP_Connect 0096              __end_of_PHY_WaitForBusy 0000  
                        time@gie_val 001B                      __size_of___wmul 0026  
                            ___lwdiv 5FB0                              ___lwmod 610C  
                         _currentTCB 0040                         __psmallconst 1000  
                      ?_TCP_SendDone 001F                   __end_of_IPv4_Start 47BC  
                            __doprnt 2CC2           __end_of_ETH_readLinkStatus 0000  
                    __size_of_initHW 0036                   __end_of_TCP_Update 424A  
                            __pcinit 5E34                      __size_of_memcmp 004C  
                    __size_of_memset 002A                              __ramtop 1000  
                            __ptext0 4F42                              __ptext1 66BA  
                            __ptext2 6182                              __ptext3 667C  
                            __ptext4 66F2                              __ptext5 614A  
                            __ptext6 5530                              __ptext7 66FE  
                            __ptext8 6526                              __ptext9 6692  
                            _ethData 01BE                              _ipv4DNS 0210  
                    __size_of_printf 0024    TCP_FiniteStateMachine@notAckBytes 010D  
                      ??_DHCP_Manage 0033                         _ICMP_Receive 5ECC  
                    __size_of_strlen 0028                    __end_of_hexpowers 1013  
                            _dpowers 1001                              _tcbList 0044  
                            _isdigit 65DE                              _low_isr 0018  
               i1_ETH_readLinkStatus 0000                 __size_of_UDP_Receive 00C4  
              _ETH_TxComputeChecksum 5790              __size_of_ICMP_EchoReply 0108  
                            _sprintf 62E8                        __doprnt@width 0069  
                         ??_lcd_busy 0017                           ??_lcd_init 0018  
                          _MICMDbits 000EB2                              main@str 02C4  
                         ??_high_isr 0017                       __pintcode_body 673A  
                         ??_lcd_puts 001B                 end_of_initialization 5E76  
                          _ESTATbits 000EFD              ETH_ComputeChecksum@cksm 001F  
                        TCP_Snd@data 00D1              ETH_ComputeChecksum@seed 0019  
                        TCP_Snd@cksm 00D3                            _ETH_Read8 6372  
                          _ETH_Flush 5CF8                              memcmp@n 0018  
                          _IPV4_Init 6712                            _IPV4_Send 5B22  
                 IPv4_Start@protocol 0026                              memset@c 0019  
                            memset@n 001B                              memset@p 001D  
                            int_func 673A                         _broadcastMAC 1028  
                   UDP_Start@dstPort 00A5                  ETH_ReadBlock@buffer 0017  
               _ETH_NextPacketUpdate 5C4E                __end_of_lcd_init_pins 6708  
                ETH_ReadBlock@length 0019                    __end_of_uart_init 6692  
                     ETH_Write8@data 0017                        ?_rtcc_handler 0001  
                  __end_of_rtcc_init 6182                          PHY_Read@reg 001D  
                        PHY_Read@ret 001E                     DHCP_Request@type 00A8  
           TCP_InsertRxBuffer@tcbPtr 001F                            _TCB_Check 59B8  
                   UDP_Start@srcPort 00A3                              printf@f 002D  
                     _ETH_WriteBlock 5F64            TCP_GetReceivedData@tcbPtr 001F  
                _Network_WaitForLink 66C8                            _TCB_Reset 47C6  
                            postdec1 000FE5                              postdec2 000FDD  
                         ??_spi_init 0017                              postinc0 000FEE  
                            postinc1 000FE6                              postinc2 000FDE  
                     ??_TCP_SendDone 0021                      _ETH_CheckLinkUp 625A  
                     _ETH_WriteStart 4D14                   TCP_PayloadSave@len 00EE  
              ARPV4_Packet@mergeFlag 0082                   _nextSequenceNumber 0228  
                            strlen@s 0017             ETH_RxComputeChecksum@len 0025  
                     DHCP_Handler@ip 00B3                            _PHY_Write 5D48  
                          _UDP_Start 5D98                 __end_of_Network_Init 64B6  
               __end_of_Network_Read 533C                   i1_ETH_EventHandler 6224  
                          _TRISAbits 000F92                            _TRISCbits 000F94  
                          _TRISDbits 000F95                        _rcvPayloadLen 01CF  
              ?i1_ETH_readLinkStatus 000C                 ?_Network_WaitForLink 0001  
        __size_of_TCP_InsertRxBuffer 0060                    IPV4_Packet@hdrLen 0152  
                __end_of_DHCP_Manage 592A                        ETH_GetMAC@mac 0017  
                  IPV4_Packet@length 0153                  ?i1_ETH_EventHandler 0001  
                  ICMP_EchoReply@ret 00AD                           ?_ETH_Read8 0001  
                         ?_ETH_Flush 0001                           ?_IPV4_Init 0001  
                         ?_IPV4_Send 0031                ?_ETH_NextPacketUpdate 0001  
              DEMO_TCP_Client@rx_len 011E                DEMO_TCP_Client@strTmp 0121  
             PHY_WaitForBusy@timeout 0018                           main@old_ip 02BB  
                     ??_rtcc_handler 0017                           lcd_putch@c 0018  
             __end_of_ETH_WriteBlock 5FB0                    __size_of_LED_Init 0020  
                  TCP_Connect@tcbPtr 0111                        _dhcpLeaseTime 0034  
               __size_of_SYSLOG_Init 002E                           ?_TCB_Check 0017  
                  __size_of_ETH_Copy 00AA                    __size_of_ETH_Dump 002E  
                  __size_of_ETH_Init 0124               __end_of_ETH_WriteStart 4E12  
                  __size_of_ETH_Send 002A                     ??_MAC_getAddress 0019  
                         ?_TCB_Reset 0017                __size_of_IPV4_GetMyIP 0012  
              __size_of_ETH_SaveRDPT 000A                     ?_PHY_WaitForBusy 0001  
               ??i1_ETH_EventHandler 0014                       __end_of___wmul 64DC  
           __end_of_ETH_EventHandler 5F46             ARPV4_Request@destAddress 001D  
                     TCP_Recv@length 0115                    _UDP_CallBackTable 1034  
                     TCP_Recv@tcbPtr 0134                       _ADC_Initialize 6692  
                  __size_of_TCP_Init 001C                    __size_of_TCP_Recv 02E2  
                  __size_of_TCP_Send 008E                       __end_of_initHW 61B8  
                     __end_of_memcmp 5ECC                    __size_of_PHY_Read 00A2  
                     __end_of_memset 63F0                    __size_of_UDP_Send 0070  
                         ?_PHY_Write 0019                       __end_of_printf 6526  
          ETH_RxComputeChecksum@cksm 002F                           ?_UDP_Start 009F  
                ICMP_Receive@icmpHdr 00B6            ETH_RxComputeChecksum@seed 0027  
                     __end_of_strlen 6442                       _TCP_SocketInit 56FE  
                     _TCP_SocketPoll 64DC                  ICMP_Receive@ipv4Hdr 00AF  
                start_initialization 5E34                ??_Network_WaitForLink 002A  
             ?_ETH_TxComputeChecksum 0025                        ETH_Copy@timer 0073  
                      ETH_Read32@ret 001B                        ETH_Read16@ret 0019  
        __end_of_TCP_ParseTCPOptions 4F38                       TCP_Send@tcbPtr 00EE  
             ETH_WriteStart@dest_mac 0017         TCP_SocketPoll@tmpSocketState 0021  
        __size_of_ETH_ResetByteCount 000A                    ?_ETH_GetByteCount 0017  
                       _IPV4_GetMyIP 66A8                         _ETH_SaveRDPT 6708  
                       TCB_Check@ret 001B                         TCB_Check@ptr 0017  
           ??_TCP_FiniteStateMachine 0100              __end_of_ETH_CheckLinkUp 6286  
                 ??_ETH_GetByteCount 0019                        ??_IPV4_Packet 0136  
                    ?_ETH_WriteBlock 0017                DHCP_Handler@ethPktMAC 00C2  
                    ?_ETH_WriteStart 0017                        ??_ETH_Write32 001B  
                      ??_ETH_Write16 0019                             ??___wmul 001B  
          __end_of_UDP_CallBackTable 1039                          __doprnt@idx 0060  
                        __doprnt@len 0062               __end_of_ADC_Initialize 66A8  
                        __doprnt@val 0067                  ARPV4_Request@header 007C  
                        __pdataBANK0 00FF                             ??_initHW 0019  
                           ??_memcmp 001A                  ETH_GetByteCount@val 0019  
                           ??_memset 001D                             ??_printf 002D  
             __end_of_TCP_SocketInit 5786               __end_of_TCP_SocketPoll 6502  
                           ??_strlen 0019                     ??_ETH_EdataWrite 0017  
                        _DHCP_Manage 58AA                 IPv4_Start@macAddress 009C  
                      ETH_Insert@len 0017                      IPV4_Packet@cksm 0155  
                        __pbssCOMRAM 0034                  _TCP_GetReceivedData 5AAC  
             ??i1_ETH_readLinkStatus 0010                        __pcstackBANK0 0060  
                      __pcstackBANK1 0100                        __pcstackBANK2 02BB  
              TCP_Recv@remoteAddress 0111                       _ICMP_EchoReply 4A94  
                           ?_TCP_Snd 009F                         _isdigit$4432 0018  
               __end_of_TCP_SendDone 641A               __size_of_ARPV4_Request 00C4  
                        ??_ETH_Read8 0017                          ??_ETH_Flush 0017  
             ??_ETH_NextPacketUpdate 0017                          ??_IPV4_Init 0017  
                      ?_SYSLOG_Write 006D                          ??_IPV4_Send 006B  
              __end_of_ETH_EdataRead 0000                    __size_of_lcd_busy 000A  
                  __size_of_lcd_init 0092                    __size_of_high_isr 673A  
                          __doprnt@c 006B                            __doprnt@f 0023  
                  __size_of_lcd_puts 0012              ??_ETH_RxComputeChecksum 0029  
           __size_of_TCP_PayloadSave 01B0                            __pnvBANK2 02E8  
               ?_TCP_GetReceivedData 001F      ICMP_EchoReply@ipv4PayloadLength 00AB  
                   ___lwdiv@dividend 0017                          ??_TCB_Check 0019  
                          __pintcode 0008                          ??_TCB_Reset 0019  
                          __ptext100 0000                            __ptext101 5B92  
                          __ptext110 0000                            __ptext102 0000  
                          __ptext103 47C6                            __ptext112 6442  
                          __ptext104 6316                            __ptext113 0000  
                          __ptext106 6224                            __ptext107 6344  
                          __ptext108 0000                            __ptext109 53E6  
                 ARPV4_Packet@x_1672 0087                             ?___lwdiv 0017  
                           ?___lwmod 001E                        IPV4_Send@cksm 0070  
                    ?_ADC_Initialize 0001             __size_of_DEMO_TCP_Client 01F0  
                           ?__doprnt 0023                __size_of_Network_Init 0026  
              __size_of_Network_Read 00AC                   ARPV4_Packet@header 008A  
                        __pintcodelo 0018                  __end_of_IPV4_Packet 3A2A  
                 ARPV4_Packet@arpPtr 0084                    __size_of_spi_init 000C  
                          _lcd_goto1 66BA                            _lcd_goto2 66D6  
                 ARPV4_Packet@length 0080         IPV4_PseudoHeaderChecksum@len 001E  
                          _lcd_putch 65FA         IPV4_PseudoHeaderChecksum@tmp 0023  
                    ?_TCP_SocketInit 001F             ARPV4_Update@entryPointer 0017  
                    ?_TCP_SocketPoll 001F                  __end_of_ETH_Write16 66F2  
                __end_of_ETH_Write32 6664                          ??_PHY_Write 001B  
                        __smallconst 1000                             _BAUDCON1 000F7E  
                        _clientState 00FF                          ??_UDP_Start 002F  
                           ?_isdigit 0001                __end_of_ETH_ReadBlock 5BF6  
               __end_of_rtcc_handler 646A               __end_of_ICMP_EchoReply 4B9C  
                           ?_low_isr 0001         __size_of_ETH_ComputeChecksum 0090  
                          _hexpowers 100B                     ___lwdiv@quotient 001C  
                          _localTime 02EC                  DHCP_Request@started 00A7  
                 _ETH_readLinkStatus 0000                             ?_sprintf 0029  
                     __size_of_putch 001A                       ??_SYSLOG_Write 0034  
                          _tcpHeader 01D1              __size_of_Network_Manage 0078  
                     ___wmul@product 001B                 ETH_WriteBlock@buffer 0017  
                          _udpHeader 02AD                             _LED_Init 6526  
                           _LATDbits 000F8C                  ?_ETH_readLinkStatus 0022  
               ETH_WriteBlock@length 0019                             _MIREGADR 000EB4  
                           _ETH_Copy 5126                           TCP_Snd@ret 00D7  
                           _ETH_Dump 62BA                             _ETH_Init 4BE8  
                           _ETH_Send 61EE                             _IPR2bits 000FA2  
                           _PIE2bits 000FA0                ??_TCP_GetReceivedData 0021  
                   ?_ETH_CheckLinkUp 0001                      TCB_Check@tcbPtr 001D  
    __size_of_TCP_FiniteStateMachine 11FA                          _ipv4Address 0038  
                      ??_TCP_Connect 0115                         _Network_Init 6490  
                       _Network_Read 5290                    _nextAvailablePort 01CD  
                           _PIR2bits 000FA1                             i1u940_20 0032  
                           i1u940_21 0030                             i1u938_20 0012  
                           i1u938_21 0010                             i1u939_20 0024  
                           i1u939_21 0022                     __CFG_WDTPS$32768 000000  
                          _uart_init 667C                             _SSP1CON1 000FC6  
                      ARPV4_Packet@x 0086                        SYSLOG_Write@t 006F  
                           _TCP_Init 65C2                            _rtcc_init 614A  
                           _TCP_Recv 3144                             _TCP_Send 5666  
                           _PHY_Read 533C   __size_of_IPV4_PseudoHeaderChecksum 0098  
                      _ARPV4_Request 4930                             _UDP_Send 581E  
         ?_IPV4_PseudoHeaderChecksum 0017                           ?_lcd_goto1 0001  
                         ?_lcd_goto2 0001                           ?_lcd_putch 0001  
                         _ADCON0bits 000FC2                    ___wmul@multiplier 0017  
               ??_ETH_readLinkStatus 0026           DEMO_TCP_Client@t_clientOld 0218  
           __size_of_DHCP_WriteZeros 0018                        ARPV4_Lookup@x 0021  
        TCP_FiniteStateMachine@event 010F                        ??_UDP_Receive 00D5  
                    ?_ICMP_EchoReply 009F                            main@now_p 02BF  
                          lcd_puts@s 0019                        ARPV4_Update@x 0019  
                 __end_of_macAddress 1034           IPV4_PseudoHeaderChecksum@v 001D  
                      TCP_Recv@count 0133                     TCP_Update@tcbPtr 011B  
                      ?_DHCP_Handler 00AF                     __size_of_TCP_Snd 04A8  
                      TCP_Snd@tcbPtr 009F                        ?_DHCP_Request 0001  
            __size_of_lcd_write_data 0020                        IPv4_Start@ret 009E  
            __size_of_lcd_write_ctrl 0020                             __Hrparam 0000  
         ETH_TxComputeChecksum@rxptr 002B                          _IPV4_Packet 3858  
                           __Lrparam 0000                    _ADC_GetConversion 6316  
                         ?_uart_init 0001                          _ETH_Write32 664A  
                        _ETH_Write16 66E4                     ETH_ReadBlock@len 001C  
                     ?_ARPV4_Request 001D                    ??_TCP_PayloadSave 00F0  
                         ?_rtcc_init 0001                   ?_ADC_GetConversion 0017  
                __end_of_TCP_Connect 5274                     __size_of___lwdiv 004A  
                   __size_of___lwmod 003E                   DEMO_TCP_Client@pot 011B  
                  ?_ETH_EventHandler 0001                     __size_of__doprnt 03CC  
  __end_of_IPV4_PseudoHeaderChecksum 5666               TCP_ParseTCPOptions@ret 001D  
             TCP_ParseTCPOptions@opt 001E                          _tcbListSize 0048  
           ARPV4_Packet@entryPointer 0088              ??_ETH_TxComputeChecksum 0060  
                 DHCP_Handler@ethMAC 00C8                   ??_ETH_EventHandler 002A  
             _TCP_FiniteStateMachine 10FA                  ??_ADC_GetConversion 0019  
         __end_of_TCP_InsertRxBuffer 5A96                   DHCP_Handler@length 00AF  
                           _dhcpName 1013                    ??_DEMO_TCP_Client 0117  
              __size_of_TCP_SendDone 002A               __size_of_lcd_init_pins 000A  
        DEMO_TCP_Client@rxdataPort60 0267                     __size_of_isdigit 001C  
                 DHCP_Handler@option 00C1                      ___lwdiv@divisor 0019  
                    ___lwdiv@counter 001B                     __size_of_low_isr 0022  
                           __ptext10 628C                             __ptext11 66C8  
                           __ptext20 3144                             __ptext12 5934  
                           __ptext21 4E34                             __ptext13 4024  
                           __ptext30 646A                             __ptext22 6372  
                           __ptext14 5290                             __ptext31 6502  
                           __ptext23 608A                             __ptext15 3858  
                           __ptext40 581E                             __ptext32 5FFA  
                           __ptext24 62BA                             __ptext16 504E  
                           _arpTimer 01E9                             __ptext41 6586  
                           __ptext33 5C4E                             __ptext25 55CE  
                           __ptext17 3DBE                             __ptext50 625A  
                           __ptext42 6664                             __ptext34 5CF8  
                           __ptext26 5ECC                             __ptext18 5E80  
                           __ptext51 0000                             __ptext43 639C  
                           __ptext35 3516                             __ptext27 4A94  
                           __ptext19 5BF6                             __ptext60 2CC2  
                           __ptext52 533C                             __ptext44 6490  
                           __ptext36 5F18                             __ptext28 6708  
                           __ptext61 6630                             __ptext53 0000  
                           __ptext45 65C2                             __ptext37 58AA  
                           __ptext29 5126                             __ptext70 66D6  
                           __ptext62 65DE                             __ptext54 6616  
                           __ptext46 6712                             __ptext38 4492  
                           __ptext71 6566                             __ptext63 64B6  
                           __ptext55 66A8                             __ptext47 4BE8  
                           __ptext39 5D98                             __ptext80 64DC  
                           __ptext72 671C                             __ptext64 610C  
                           __ptext56 3B50                             __ptext48 5D48  
                           __ptext81 59B8                             __ptext73 56FE  
                           __ptext65 5FB0                             __ptext57 5CA4  
                           __ptext49 6742                             __ptext90 4D14  
                           __ptext82 10FA                             __ptext74 6042  
                           __ptext66 63C6                             __ptext58 641A  
                           __ptext91 6730                             __ptext83 427C  
                           __ptext75 63F0                             __ptext67 65A4  
                           __ptext59 62E8                             __ptext92 5F64  
                           __ptext84 2598                             __ptext76 5666  
                           __ptext68 65FA                             __ptext93 61B8  
                           __ptext85 4644                             __ptext77 5A36  
                           __ptext69 6546                             __ptext94 5DE6  
                           __ptext86 6726                             __ptext78 5AAC  
                           __ptext95 5B22                             __ptext87 664A  
                           __ptext79 51DE                             __ptext96 5790  
                           __ptext88 66E4                             __ptext97 5490  
                           __ptext89 4930                             __ptext98 61EE  
                           __ptext99 60CC                       ??_DHCP_Handler 00B1  
                       _SSP1CON1bits 000FC6                             _lcd_busy 671C  
                           _lcd_init 5530                   DHCP_Request@ethMAC 00A9  
                           _high_isr 0008                           _ARPV4_Init 6616  
                       time@the_time 001C                             _lcd_puts 65A4  
                   __size_of_sprintf 002E                  __end_of_UDP_Receive 5112  
                       _remoteSocket 02B5                     ??_ETH_WriteBlock 001B  
                  _remoteIpv4Address 022C                   ETH_WriteStart@type 0019  
          ARPV4_Lookup@entry_pointer 001F                     ??_ETH_WriteStart 001B  
                      __size_of_main 0100                        ??_SYSLOG_Init 0034  
                     ??_DHCP_Request 0033                        __size_of_time 0054  
         DEMO_TCP_Client@temperature 0119            __end_of_ADC_GetConversion 6344  
              Network_Read@debug_str 015B                    UDP_Send@udpLength 007B  
         DEMO_TCP_Client@socketState 011D                     PHY_Write@GIESave 001C  
                           _spi_init 66F2                             int$flags 0049  
               _rxPacketStatusVector 01C9          __size_ofi1_ETH_EventHandler 0036  
                       _TCP_SendDone 63F0                         _SSP1STATbits 000FC7  
                        ??_lcd_goto1 0018                          ??_lcd_goto2 0018  
                  i1_PHY_WaitForBusy 0000                __size_of_rtcc_handler 0028  
               __end_of_SYSLOG_Write 6490            __size_of_ETH_GetByteCount 001E  
        __end_of_Network_WaitForLink 66D6                          ??_lcd_putch 0018  
             i1ETH_CheckLinkUp@value 0010                   ?i1_PHY_WaitForBusy 0001  
                       ?_DHCP_Manage 0001                           _ETH_GetMAC 61B8  
                          putch@data 0017                         TCP_Send@data 00F0  
                Network_Manage@nowPv 021C                           _ETH_Read32 5BF6  
                         _ETH_Read16 608A            ETH_TxComputeChecksum@cksm 002D  
           __size_of_PHY_WaitForBusy 0000            ETH_TxComputeChecksum@seed 0029  
                           memcmp@s1 001C                             memcmp@s2 0017  
                         _ETH_Insert 60CC          DEMO_TCP_Client@txdataPort60 0368  
                      ?_ARPV4_Packet 0001                      ETH_Write32@data 0017  
                    ETH_Write16@data 0017                        ?_ARPV4_Lookup 0017  
                           isdigit@c 0019                             memset@p1 0017  
                         _ETH_Write8 6726                    ??_DHCP_WriteZeros 001A  
                      ?_ARPV4_Update 0001                _receivedRemoteAddress 003C  
                ??i1_PHY_WaitForBusy 0001           __end_of_ETH_ResetByteCount 673A  
                           intlevel1 0000                             intlevel2 0000  
                          sprintf@ap 006D                            sprintf@pb 006E  
                          sprintf@wh 0029                       _Network_Manage 5934  
                         _MISTATbits 000E8A                     ___lwmod@dividend 001E  
                    UDP_Receive@hptr 00DD         __size_of_TCP_ParseTCPOptions 0104  
     __size_of_ETH_RxComputeChecksum 0048                     ??_ADC_Initialize 0017  
                      _lcd_init_pins 66FE        __end_of_ETH_RxComputeChecksum 6042  
                       _rtcc_handler 6442                          _TCP_Connect 51DE  
                    ??_ARPV4_Request 0060                  _ETH_ComputeChecksum 5490  
                        ARPV4_Init@x 0017                           i1_PHY_Read 53E6  
                        ??_uart_init 0017                  __end_of_SYSLOG_Init 62BA  
                   ??_TCP_SocketInit 0021                             printf@ap 002E  
                         _TCB_Insert 6042                             printf@pb 002F  
          __end_ofi1_PHY_WaitForBusy 0000                     ??_TCP_SocketPoll 0021  
                        ??_rtcc_init 0017                 IPV4_Send@totalLength 0072  
                      ?_ICMP_Receive 00AF                             sprintf@f 002B  
               ETH_CheckLinkUp@value 0026                     DHCP_Handler@myip 00CF  
            __size_of_MAC_getAddress 0004                      ETH_WriteBlock@p 001B  
      IPV4_PseudoHeaderChecksum@cksm 001F                      ___lwmod@divisor 0020  
                    ARPV4_Packet@ret 0083                             strlen@cp 0019  
                     ??_ARPV4_Packet 0060                      ___lwmod@counter 0022  
                        _UDP_Receive 504E                       ??_ARPV4_Lookup 001B  
               ?_ETH_ComputeChecksum 0017           TCP_PayloadSave@buffer_size 00FD  
                     ??_ARPV4_Update 0017                           _IPv4_Start 4644  
      __size_ofi1_ETH_readLinkStatus 0000             ETH_Insert@current_tx_ptr 001B  
                  Network_Manage@now 01BA                           _TCP_Update 4024  
             __end_of_Network_Manage 59AC                          ?_ARPV4_Init 0001  
                    DHCP_Handler@v16 00BF                   Network_Read@header 01AB  
      __size_of_ETH_NextPacketUpdate 0056                         UDP_Receive@x 00DB  
                      PHY_Write@data 0019                       _lcd_write_data 6546  
                     ?_lcd_init_pins 0001           __size_of_ADC_GetConversion 002E  
                     _lcd_write_ctrl 6566                         UDP_Send@cksm 0079  
                       PHY_Write@reg 001B                     ETH_Insert@offset 0019  
                      i1PHY_Read@reg 0007                        i1PHY_Read@ret 0008  

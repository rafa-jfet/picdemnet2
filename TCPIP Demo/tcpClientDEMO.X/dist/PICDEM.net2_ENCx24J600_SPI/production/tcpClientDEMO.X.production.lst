

Microchip Technology PIC18 PRO Macro Assembler V1.35 build -356382666 
                                                                                               Wed Sep 09 15:17:32 2015

Microchip Technology Omniscient Code Generator v1.35 (PRO mode) build 201507080246
     1                           	processor	18F97J60
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1
    85                           	psect	text67,global,reloc=2,class=CODE,delta=1
    86                           	psect	text68,global,reloc=2,class=CODE,delta=1
    87                           	psect	text69,global,reloc=2,class=CODE,delta=1
    88                           	psect	text70,global,reloc=2,class=CODE,delta=1
    89                           	psect	text71,global,reloc=2,class=CODE,delta=1
    90                           	psect	text72,global,reloc=2,class=CODE,delta=1
    91                           	psect	text73,global,reloc=2,class=CODE,delta=1
    92                           	psect	text74,global,reloc=2,class=CODE,delta=1
    93                           	psect	text75,global,reloc=2,class=CODE,delta=1
    94                           	psect	text76,global,reloc=2,class=CODE,delta=1
    95                           	psect	text77,global,reloc=2,class=CODE,delta=1
    96                           	psect	text78,global,reloc=2,class=CODE,delta=1
    97                           	psect	text79,global,reloc=2,class=CODE,delta=1
    98                           	psect	text80,global,reloc=2,class=CODE,delta=1
    99                           	psect	text81,global,reloc=2,class=CODE,delta=1
   100                           	psect	text82,global,reloc=2,class=CODE,delta=1
   101                           	psect	text83,global,reloc=2,class=CODE,delta=1
   102                           	psect	text84,global,reloc=2,class=CODE,delta=1
   103                           	psect	text85,global,reloc=2,class=CODE,delta=1
   104                           	psect	text86,global,reloc=2,class=CODE,delta=1
   105                           	psect	text87,global,reloc=2,class=CODE,delta=1
   106                           	psect	text88,global,reloc=2,class=CODE,delta=1
   107                           	psect	text89,global,reloc=2,class=CODE,delta=1
   108                           	psect	text90,global,reloc=2,class=CODE,delta=1
   109                           	psect	text91,global,reloc=2,class=CODE,delta=1
   110                           	psect	text92,global,reloc=2,class=CODE,delta=1
   111                           	psect	text93,global,reloc=2,class=CODE,delta=1
   112                           	psect	text94,global,reloc=2,class=CODE,delta=1
   113                           	psect	text95,global,reloc=2,class=CODE,delta=1
   114                           	psect	text96,global,reloc=2,class=CODE,delta=1
   115                           	psect	text97,global,reloc=2,class=CODE,delta=1
   116                           	psect	text98,global,reloc=2,class=CODE,delta=1
   117                           	psect	text99,global,reloc=2,class=CODE,delta=1
   118                           	psect	text100,global,reloc=2,class=CODE,delta=1
   119                           	psect	text101,global,reloc=2,class=CODE,delta=1
   120                           	psect	text102,global,reloc=2,class=CODE,delta=1
   121                           	psect	text103,global,reloc=2,class=CODE,delta=1
   122                           	psect	text104,global,reloc=2,class=CODE,delta=1
   123                           	psect	text105,global,reloc=2,class=CODE,delta=1
   124                           	psect	text106,global,reloc=2,class=CODE,delta=1
   125                           	psect	text107,global,reloc=2,class=CODE,delta=1
   126                           	psect	text108,global,reloc=2,class=CODE,delta=1
   127                           	psect	text109,global,reloc=2,class=CODE,delta=1
   128                           	psect	text110,global,reloc=2,class=CODE,delta=1
   129                           	psect	text111,global,reloc=2,class=CODE,delta=1
   130                           	psect	text112,global,reloc=2,class=CODE,delta=1
   131                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   132                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   133                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   134                           	psect	text115,global,reloc=2,class=CODE,delta=1
   135                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   136                           	psect	text116,global,reloc=2,class=CODE,delta=1
   137                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   138                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   139  0000                     
   140                           	psect	idataCOMRAM
   141  008C36                     __pidataCOMRAM:
   142                           	opt stack 0
   143                           
   144                           ;initializer for _clientState
   145  008C36  01                 	db	1
   146                           
   147                           	psect	smallconst
   148  001000                     __psmallconst:
   149                           	opt stack 0
   150  001000  00                 	db	0
   151  001001                     _dpowers:
   152                           	opt stack 0
   153  001001  0001               	dw	1
   154  001003  000A               	dw	10
   155  001005  0064               	dw	100
   156  001007  03E8               	dw	1000
   157  001009  2710               	dw	10000
   158  00100B                     __end_of_dpowers:
   159                           	opt stack 0
   160  00100B                     _hexpowers:
   161                           	opt stack 0
   162  00100B  0001               	dw	1
   163  00100D  0010               	dw	16
   164  00100F  0100               	dw	256
   165  001011  1000               	dw	4096
   166  001013                     __end_of_hexpowers:
   167                           	opt stack 0
   168  001013                     _dhcpName:
   169                           	opt stack 0
   170  001013  50                 	db	80
   171  001014  49                 	db	73
   172  001015  43                 	db	67
   173  001016  31                 	db	49
   174  001017  38                 	db	56
   175  001018  46                 	db	70
   176  001019  39                 	db	57
   177  00101A  37                 	db	55
   178  00101B  4A                 	db	74
   179  00101C  36                 	db	54
   180  00101D  30                 	db	48
   181  00101E  20                 	db	32
   182  00101F  45                 	db	69
   183  001020  54                 	db	84
   184  001021  48                 	db	72
   185  001022  45                 	db	69
   186  001023  52                 	db	82
   187  001024  4E                 	db	78
   188  001025  45                 	db	69
   189  001026  54                 	db	84
   190  001027  00                 	db	0
   191  001028                     __end_of_dhcpName:
   192                           	opt stack 0
   193  001028                     _broadcastMAC:
   194                           	opt stack 0
   195  001028  FF                 	db	255
   196  001029  FF                 	db	255
   197  00102A  FF                 	db	255
   198  00102B  FF                 	db	255
   199  00102C  FF                 	db	255
   200  00102D  FF                 	db	255
   201  00102E                     __end_of_broadcastMAC:
   202                           	opt stack 0
   203  00102E  00                 	db	0
   204  00102F  DE                 	db	222
   205  001030  AD                 	db	173
   206  001031  00                 	db	0
   207  001032  BE                 	db	190
   208  001033  EF                 	db	239
   209  001034                     __end_of_macAddress:
   210                           	opt stack 0
   211  001034                     _UDP_CallBackTable:
   212                           	opt stack 0
   213  001034  0044               	dw	68
   214  001036  60                 	db	low _DHCP_Handler
   215  001037  65                 	db	high _DHCP_Handler
   216  001038  00                 	db	low (_DHCP_Handler shr (0+16))
   217  001039                     __end_of_UDP_CallBackTable:
   218                           	opt stack 0
   219  001039                     STR_5:
   220  001039  54                 	db	84	;'T'
   221  00103A  65                 	db	101	;'e'
   222  00103B  6D                 	db	109	;'m'
   223  00103C  70                 	db	112	;'p'
   224  00103D  65                 	db	101	;'e'
   225  00103E  72                 	db	114	;'r'
   226  00103F  61                 	db	97	;'a'
   227  001040  74                 	db	116	;'t'
   228  001041  75                 	db	117	;'u'
   229  001042  72                 	db	114	;'r'
   230  001043  65                 	db	101	;'e'
   231  001044  3A                 	db	58	;':'
   232  001045  20                 	db	32
   233  001046  30                 	db	48	;'0'
   234  001047  78                 	db	120	;'x'
   235  001048  25                 	db	37
   236  001049  33                 	db	51	;'3'
   237  00104A  78                 	db	120	;'x'
   238  00104B  3B                 	db	59	;';'
   239  00104C  20                 	db	32
   240  00104D  4C                 	db	76	;'L'
   241  00104E  45                 	db	69	;'E'
   242  00104F  44                 	db	68	;'D'
   243  001050  3A                 	db	58	;':'
   244  001051  20                 	db	32
   245  001052  30                 	db	48	;'0'
   246  001053  78                 	db	120	;'x'
   247  001054  25                 	db	37
   248  001055  31                 	db	49	;'1'
   249  001056  78                 	db	120	;'x'
   250  001057  3B                 	db	59	;';'
   251  001058  20                 	db	32
   252  001059  42                 	db	66	;'B'
   253  00105A  75                 	db	117	;'u'
   254  00105B  74                 	db	116	;'t'
   255  00105C  74                 	db	116	;'t'
   256  00105D  6F                 	db	111	;'o'
   257  00105E  6E                 	db	110	;'n'
   258  00105F  73                 	db	115	;'s'
   259  001060  3A                 	db	58	;':'
   260  001061  20                 	db	32
   261  001062  30                 	db	48	;'0'
   262  001063  78                 	db	120	;'x'
   263  001064  25                 	db	37
   264  001065  31                 	db	49	;'1'
   265  001066  78                 	db	120	;'x'
   266  001067  3B                 	db	59	;';'
   267  001068  20                 	db	32
   268  001069  50                 	db	80	;'P'
   269  00106A  6F                 	db	111	;'o'
   270  00106B  74                 	db	116	;'t'
   271  00106C  3A                 	db	58	;':'
   272  00106D  20                 	db	32
   273  00106E  30                 	db	48	;'0'
   274  00106F  78                 	db	120	;'x'
   275  001070  25                 	db	37
   276  001071  33                 	db	51	;'3'
   277  001072  78                 	db	120	;'x'
   278  001073  20                 	db	32
   279  001074  0A                 	db	10
   280  001075  00                 	db	0
   281  001076                     STR_2:
   282  001076  0D                 	db	13
   283  001077  0A                 	db	10
   284  001078  0D                 	db	13
   285  001079  0A                 	db	10
   286  00107A  53                 	db	83	;'S'
   287  00107B  74                 	db	116	;'t'
   288  00107C  61                 	db	97	;'a'
   289  00107D  72                 	db	114	;'r'
   290  00107E  74                 	db	116	;'t'
   291  00107F  69                 	db	105	;'i'
   292  001080  6E                 	db	110	;'n'
   293  001081  67                 	db	103	;'g'
   294  001082  20                 	db	32
   295  001083  53                 	db	83	;'S'
   296  001084  79                 	db	121	;'y'
   297  001085  73                 	db	115	;'s'
   298  001086  6C                 	db	108	;'l'
   299  001087  6F                 	db	111	;'o'
   300  001088  67                 	db	103	;'g'
   301  001089  20                 	db	32
   302  00108A  61                 	db	97	;'a'
   303  00108B  74                 	db	116	;'t'
   304  00108C  20                 	db	32
   305  00108D  25                 	db	37
   306  00108E  75                 	db	117	;'u'
   307  00108F  0D                 	db	13
   308  001090  0A                 	db	10
   309  001091  00                 	db	0
   310  001092                     STR_10:
   311  001092  30                 	db	48	;'0'
   312  001093  31                 	db	49	;'1'
   313  001094  32                 	db	50	;'2'
   314  001095  33                 	db	51	;'3'
   315  001096  34                 	db	52	;'4'
   316  001097  35                 	db	53	;'5'
   317  001098  36                 	db	54	;'6'
   318  001099  37                 	db	55	;'7'
   319  00109A  38                 	db	56	;'8'
   320  00109B  39                 	db	57	;'9'
   321  00109C  61                 	db	97	;'a'
   322  00109D  62                 	db	98	;'b'
   323  00109E  63                 	db	99	;'c'
   324  00109F  64                 	db	100	;'d'
   325  0010A0  65                 	db	101	;'e'
   326  0010A1  66                 	db	102	;'f'
   327  0010A2  00                 	db	0
   328  0010A3                     STR_6:
   329  0010A3  57                 	db	87	;'W'
   330  0010A4  61                 	db	97	;'a'
   331  0010A5  69                 	db	105	;'i'
   332  0010A6  74                 	db	116	;'t'
   333  0010A7  69                 	db	105	;'i'
   334  0010A8  6E                 	db	110	;'n'
   335  0010A9  67                 	db	103	;'g'
   336  0010AA  20                 	db	32
   337  0010AB  66                 	db	102	;'f'
   338  0010AC  6F                 	db	111	;'o'
   339  0010AD  72                 	db	114	;'r'
   340  0010AE  20                 	db	32
   341  0010AF  4C                 	db	76	;'L'
   342  0010B0  69                 	db	105	;'i'
   343  0010B1  6E                 	db	110	;'n'
   344  0010B2  6B                 	db	107	;'k'
   345  0010B3  00                 	db	0
   346  0010B4                     STR_7:
   347  0010B4  4C                 	db	76	;'L'
   348  0010B5  69                 	db	105	;'i'
   349  0010B6  6E                 	db	110	;'n'
   350  0010B7  6B                 	db	107	;'k'
   351  0010B8  20                 	db	32
   352  0010B9  73                 	db	115	;'s'
   353  0010BA  74                 	db	116	;'t'
   354  0010BB  61                 	db	97	;'a'
   355  0010BC  72                 	db	114	;'r'
   356  0010BD  74                 	db	116	;'t'
   357  0010BE  65                 	db	101	;'e'
   358  0010BF  64                 	db	100	;'d'
   359  0010C0  00                 	db	0
   360  0010C1                     STR_8:
   361  0010C1  25                 	db	37
   362  0010C2  64                 	db	100	;'d'
   363  0010C3  2E                 	db	46
   364  0010C4  25                 	db	37
   365  0010C5  64                 	db	100	;'d'
   366  0010C6  2E                 	db	46
   367  0010C7  25                 	db	37
   368  0010C8  64                 	db	100	;'d'
   369  0010C9  2E                 	db	46
   370  0010CA  25                 	db	37
   371  0010CB  64                 	db	100	;'d'
   372  0010CC  00                 	db	0
   373  0010CD                     STR_3:
   374  0010CD  25                 	db	37
   375  0010CE  75                 	db	117	;'u'
   376  0010CF  20                 	db	32
   377  0010D0  3A                 	db	58	;':'
   378  0010D1  20                 	db	32
   379  0010D2  25                 	db	37
   380  0010D3  73                 	db	115	;'s'
   381  0010D4  0D                 	db	13
   382  0010D5  0A                 	db	10
   383  0010D6  00                 	db	0
   384  0010D7                     STR_1:
   385  0010D7  25                 	db	37
   386  0010D8  78                 	db	120	;'x'
   387  0010D9  20                 	db	32
   388  0010DA  3A                 	db	58	;':'
   389  0010DB  20                 	db	32
   390  0010DC  25                 	db	37
   391  0010DD  64                 	db	100	;'d'
   392  0010DE  00                 	db	0
   393  0010DF                     STR_9:
   394  0010DF  28                 	db	40
   395  0010E0  6E                 	db	110	;'n'
   396  0010E1  75                 	db	117	;'u'
   397  0010E2  6C                 	db	108	;'l'
   398  0010E3  6C                 	db	108	;'l'
   399  0010E4  29                 	db	41
   400  0010E5  00                 	db	0
   401  0010E6                     STR_4:
   402  0010E6  25                 	db	37
   403  0010E7  73                 	db	115	;'s'
   404  0010E8  00                 	db	0
   405                           
   406                           ; #config settings
   407  0010E9  00                 	db	0	; dummy byte at the end
   408  0000                     
   409                           	psect	nvBANK2
   410  0002E4                     __pnvBANK2:
   411                           	opt stack 0
   412  0002E4                     _deviceTime:
   413                           	opt stack 0
   414  0002E4                     	ds	4
   415  0002E8                     _localTime:
   416                           	opt stack 0
   417  0002E8                     	ds	4
   418  0000                     _ADRES	set	4035
   419  0000                     _TMR1	set	4046
   420  0000                     _ADCON0	set	4034
   421  0000                     _ADCON0bits	set	4034
   422  0000                     _ADCON1	set	4033
   423  0000                     _ADCON2	set	4032
   424  0000                     _ADRESH	set	4036
   425  0000                     _ADRESL	set	4035
   426  0000                     _BAUDCON1	set	3966
   427  0000                     _BAUDCON1bits	set	3966
   428  0000                     _LATBbits	set	3978
   429  0000                     _LATDbits	set	3980
   430  0000                     _LATE	set	3981
   431  0000                     _LATH	set	3984
   432  0000                     _LATJ	set	3985
   433  0000                     _OSCCON	set	4051
   434  0000                     _OSCTUNE	set	3995
   435  0000                     _PORTB	set	3969
   436  0000                     _PORTBbits	set	3969
   437  0000                     _PORTJ	set	3976
   438  0000                     _SPBRG1	set	4015
   439  0000                     _SSP1BUF	set	4041
   440  0000                     _SSP1CON1	set	4038
   441  0000                     _SSP1CON1bits	set	4038
   442  0000                     _SSP1STATbits	set	4039
   443  0000                     _SSPBUF	set	4041
   444  0000                     _TRISA	set	3986
   445  0000                     _TRISAbits	set	3986
   446  0000                     _TRISBbits	set	3987
   447  0000                     _TRISCbits	set	3988
   448  0000                     _TRISDbits	set	3989
   449  0000                     _TRISE	set	3990
   450  0000                     _TRISH	set	3993
   451  0000                     _TRISJ	set	3994
   452  0000                     _TXREG1	set	4013
   453  0000                     _TXSTA1	set	4012
   454  0000                     _CREN1	set	32092
   455  0000                     _GIE	set	32663
   456  0000                     _GIEH	set	32663
   457  0000                     _GIEL	set	32662
   458  0000                     _IPEN	set	32391
   459  0000                     _LATB3	set	31827
   460  0000                     _LATH0	set	31872
   461  0000                     _LATH1	set	31873
   462  0000                     _LATH2	set	31874
   463  0000                     _RBPU	set	32655
   464  0000                     _SPEN1	set	32095
   465  0000                     _T1CKPS0	set	32364
   466  0000                     _T1CKPS1	set	32365
   467  0000                     _T1OSCEN	set	32363
   468  0000                     _T1SYNC	set	32362
   469  0000                     _TMR1CS	set	32361
   470  0000                     _TMR1IE	set	31976
   471  0000                     _TMR1IF	set	31984
   472  0000                     _TMR1IP	set	31992
   473  0000                     _TMR1ON	set	32360
   474  0000                     _TX1IF	set	31988
   475                           
   476                           	psect	cinit
   477  00845A                     __pcinit:
   478                           	opt stack 0
   479  00845A                     start_initialization:
   480                           	opt stack 0
   481  00845A                     __initialization:
   482                           	opt stack 0
   483                           
   484                           ; Clear objects allocated to BANK3 (184 bytes)
   485  00845A  EE03  F000         	lfsr	0,__pbssBANK3
   486  00845E  0EB8               	movlw	184
   487  008460                     clear_0:
   488  008460  6AEE               	clrf	postinc0,c
   489  008462  06E8               	decf	wreg,f,c
   490  008464  E1FD               	bnz	clear_0
   491                           
   492                           ; Clear objects allocated to BANK2 (183 bytes)
   493  008466  EE02  F000         	lfsr	0,__pbssBANK2
   494  00846A  0EB7               	movlw	183
   495  00846C                     clear_1:
   496  00846C  6AEE               	clrf	postinc0,c
   497  00846E  06E8               	decf	wreg,f,c
   498  008470  E1FD               	bnz	clear_1
   499                           
   500                           ; Clear objects allocated to BANK1 (81 bytes)
   501  008472  EE01  F083         	lfsr	0,__pbssBANK1
   502  008476  0E51               	movlw	81
   503  008478                     clear_2:
   504  008478  6AEE               	clrf	postinc0,c
   505  00847A  06E8               	decf	wreg,f,c
   506  00847C  E1FD               	bnz	clear_2
   507                           
   508                           ; Clear objects allocated to BANK0 (2 bytes)
   509  00847E  0100               	movlb	0
   510  008480  6BFF               	clrf	(__pbssBANK0+1)& (0+255),b
   511  008482  6BFE               	clrf	__pbssBANK0& (0+255),b
   512                           
   513                           ; Initialize objects allocated to COMRAM (1 bytes)
   514                           ; load TBLPTR registers with __pidataCOMRAM
   515  008484  0E36               	movlw	low __pidataCOMRAM
   516  008486  6EF6               	movwf	tblptrl,c
   517  008488  0E8C               	movlw	high __pidataCOMRAM
   518  00848A  6EF7               	movwf	tblptrh,c
   519  00848C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   520  00848E  6EF8               	movwf	tblptru,c
   521  008490  0009               	tblrd		*+	;fetch initializer
   522  008492  CFF5 F05D          	movff	tablat,__pdataCOMRAM
   523  008496                     end_of_initialization:
   524                           	opt stack 0
   525  008496                     __end_of__initialization:
   526                           	opt stack 0
   527  008496  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   528  008498  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   529  00849A  0100               	movlb	0
   530  00849C  EF54  F038         	goto	_main	;jump to C main() function
   531                           tblptru	equ	0xFF8
   532                           tblptrh	equ	0xFF7
   533                           tblptrl	equ	0xFF6
   534                           tablat	equ	0xFF5
   535                           postinc0	equ	0xFEE
   536                           wreg	equ	0xFE8
   537                           
   538                           	psect	dataCOMRAM
   539  00005D                     __pdataCOMRAM:
   540                           	opt stack 0
   541  00005D                     _clientState:
   542                           	opt stack 0
   543  00005D                     	ds	1
   544                           tblptru	equ	0xFF8
   545                           tblptrh	equ	0xFF7
   546                           tblptrl	equ	0xFF6
   547                           tablat	equ	0xFF5
   548                           postinc0	equ	0xFEE
   549                           wreg	equ	0xFE8
   550                           
   551                           	psect	bssBANK0
   552  0000FE                     __pbssBANK0:
   553                           	opt stack 0
   554  0000FE                     _currentTCB:
   555                           	opt stack 0
   556  0000FE                     	ds	2
   557                           tblptru	equ	0xFF8
   558                           tblptrh	equ	0xFF7
   559                           tblptrl	equ	0xFF6
   560                           tablat	equ	0xFF5
   561                           postinc0	equ	0xFEE
   562                           wreg	equ	0xFE8
   563                           
   564                           	psect	bssBANK1
   565  000183                     __pbssBANK1:
   566                           	opt stack 0
   567  000183                     _ethData:
   568                           	opt stack 0
   569  000183                     	ds	7
   570  00018A                     _dhcpLeaseTime:
   571                           	opt stack 0
   572  00018A                     	ds	4
   573  00018E                     _ipv4Address:
   574                           	opt stack 0
   575  00018E                     	ds	4
   576  000192                     _ipv4SubnetMask:
   577                           	opt stack 0
   578  000192                     	ds	4
   579  000196                     _receivedRemoteAddress:
   580                           	opt stack 0
   581  000196                     	ds	4
   582  00019A                     _TXPacketSize:
   583                           	opt stack 0
   584  00019A                     	ds	2
   585  00019C                     _nextAvailablePort:
   586                           	opt stack 0
   587  00019C                     	ds	2
   588  00019E                     _nextPacketPointer:
   589                           	opt stack 0
   590  00019E                     	ds	2
   591  0001A0                     _rcvPayloadLen:
   592                           	opt stack 0
   593  0001A0                     	ds	2
   594  0001A2                     _tcbList:
   595                           	opt stack 0
   596  0001A2                     	ds	2
   597  0001A4                     _tcpMss:
   598                           	opt stack 0
   599  0001A4                     	ds	2
   600  0001A6                     _last_bank:
   601                           	opt stack 0
   602  0001A6                     	ds	1
   603  0001A7                     _tcbListSize:
   604                           	opt stack 0
   605  0001A7                     	ds	1
   606  0001A8                     _ipv4Header:
   607                           	opt stack 0
   608  0001A8                     	ds	20
   609  0001BC                     _tcpHeader:
   610                           	opt stack 0
   611  0001BC                     	ds	20
   612  0001D0                     DEMO_TCP_Client@t_client:
   613                           	opt stack 0
   614  0001D0                     	ds	4
   615                           tblptru	equ	0xFF8
   616                           tblptrh	equ	0xFF7
   617                           tblptrl	equ	0xFF6
   618                           tablat	equ	0xFF5
   619                           postinc0	equ	0xFEE
   620                           wreg	equ	0xFE8
   621                           
   622                           	psect	bssBANK2
   623  000200                     __pbssBANK2:
   624                           	opt stack 0
   625  000200                     _led_values:
   626                           	opt stack 0
   627  000200                     	ds	16
   628  000210                     _ipv4DNS:
   629                           	opt stack 0
   630  000210                     	ds	8
   631  000218                     _rxPacketStatusVector:
   632                           	opt stack 0
   633  000218                     	ds	6
   634  00021E                     DEMO_TCP_Client@t_clientOld:
   635                           	opt stack 0
   636  00021E                     	ds	4
   637  000222                     Network_Manage@nowPv:
   638                           	opt stack 0
   639  000222                     	ds	4
   640  000226                     _dhcpServerId:
   641                           	opt stack 0
   642  000226                     	ds	4
   643  00022A                     _ipv4Router:
   644                           	opt stack 0
   645  00022A                     	ds	4
   646  00022E                     _nextSequenceNumber:
   647                           	opt stack 0
   648  00022E                     	ds	4
   649  000232                     _remoteIpv4Address:
   650                           	opt stack 0
   651  000232                     	ds	4
   652  000236                     DEMO_TCP_Client@port60TCB:
   653                           	opt stack 0
   654  000236                     	ds	55
   655  00026D                     DEMO_TCP_Client@rxdataPort60:
   656                           	opt stack 0
   657  00026D                     	ds	50
   658  00029F                     _udpHeader:
   659                           	opt stack 0
   660  00029F                     	ds	8
   661  0002A7                     _ethMAC:
   662                           	opt stack 0
   663  0002A7                     	ds	6
   664  0002AD                     _remoteSocket:
   665                           	opt stack 0
   666  0002AD                     	ds	6
   667  0002B3                     _arpTimer:
   668                           	opt stack 0
   669  0002B3                     	ds	4
   670                           tblptru	equ	0xFF8
   671                           tblptrh	equ	0xFF7
   672                           tblptrl	equ	0xFF6
   673                           tablat	equ	0xFF5
   674                           postinc0	equ	0xFEE
   675                           wreg	equ	0xFE8
   676                           
   677                           	psect	bssBANK3
   678  000300                     __pbssBANK3:
   679                           	opt stack 0
   680  000300                     _arpMap:
   681                           	opt stack 0
   682  000300                     	ds	104
   683  000368                     DEMO_TCP_Client@txdataPort60:
   684                           	opt stack 0
   685  000368                     	ds	80
   686                           tblptru	equ	0xFF8
   687                           tblptrh	equ	0xFF7
   688                           tblptrl	equ	0xFF6
   689                           tablat	equ	0xFF5
   690                           postinc0	equ	0xFEE
   691                           wreg	equ	0xFE8
   692                           
   693                           	psect	cstackBANK2
   694  0002B7                     __pcstackBANK2:
   695                           	opt stack 0
   696  0002B7                     main@old_ip:
   697                           	opt stack 0
   698                           
   699                           ; 4 bytes @ 0x0
   700  0002B7                     	ds	4
   701  0002BB                     main@now_p:
   702                           	opt stack 0
   703                           
   704                           ; 4 bytes @ 0x4
   705  0002BB                     	ds	4
   706  0002BF                     main@no_ip_display:
   707                           	opt stack 0
   708                           
   709                           ; 1 bytes @ 0x8
   710  0002BF                     	ds	1
   711  0002C0                     main@str:
   712                           	opt stack 0
   713                           
   714                           ; 32 bytes @ 0x9
   715  0002C0                     	ds	32
   716  0002E0                     main@ip:
   717                           	opt stack 0
   718                           
   719                           ; 4 bytes @ 0x29
   720  0002E0                     	ds	4
   721                           tblptru	equ	0xFF8
   722                           tblptrh	equ	0xFF7
   723                           tblptrl	equ	0xFF6
   724                           tablat	equ	0xFF5
   725                           postinc0	equ	0xFEE
   726                           wreg	equ	0xFE8
   727                           
   728                           	psect	cstackBANK1
   729  000100                     __pcstackBANK1:
   730                           	opt stack 0
   731  000100                     ??_IPV4_Packet:
   732                           
   733                           ; 0 bytes @ 0x0
   734  000100                     	ds	28
   735  00011C                     ??_Network_Read:
   736                           
   737                           ; 0 bytes @ 0x1C
   738  00011C                     	ds	4
   739  000120                     Network_Read@debug_str:
   740                           	opt stack 0
   741                           
   742                           ; 80 bytes @ 0x20
   743  000120                     	ds	80
   744  000170                     Network_Read@header:
   745                           	opt stack 0
   746                           
   747                           ; 14 bytes @ 0x70
   748  000170                     	ds	14
   749  00017E                     ??_Network_Manage:
   750                           
   751                           ; 0 bytes @ 0x7E
   752  00017E                     	ds	1
   753  00017F                     Network_Manage@now:
   754                           	opt stack 0
   755                           
   756                           ; 4 bytes @ 0x7F
   757  00017F                     	ds	4
   758                           tblptru	equ	0xFF8
   759                           tblptrh	equ	0xFF7
   760                           tblptrl	equ	0xFF6
   761                           tablat	equ	0xFF5
   762                           postinc0	equ	0xFEE
   763                           wreg	equ	0xFE8
   764                           
   765                           	psect	cstackBANK0
   766  000060                     __pcstackBANK0:
   767                           	opt stack 0
   768  000060                     IPv4_Start@targetAddress:
   769                           	opt stack 0
   770                           
   771                           ; 4 bytes @ 0x0
   772  000060                     	ds	4
   773  000064                     IPv4_Start@macAddress:
   774                           	opt stack 0
   775                           
   776                           ; 2 bytes @ 0x4
   777  000064                     	ds	2
   778  000066                     IPv4_Start@ret:
   779                           	opt stack 0
   780                           
   781                           ; 1 bytes @ 0x6
   782  000066                     	ds	1
   783  000067                     ??_ICMP_EchoReply:
   784  000067                     ??_TCP_Snd:
   785  000067                     UDP_Start@destIP:
   786                           	opt stack 0
   787                           
   788                           ; 4 bytes @ 0x7
   789  000067                     	ds	4
   790  00006B                     UDP_Start@srcPort:
   791                           	opt stack 0
   792                           
   793                           ; 2 bytes @ 0xB
   794  00006B                     	ds	2
   795  00006D                     UDP_Start@dstPort:
   796                           	opt stack 0
   797                           
   798                           ; 2 bytes @ 0xD
   799  00006D                     	ds	2
   800  00006F                     DHCP_Request@started:
   801                           	opt stack 0
   802  00006F                     ICMP_EchoReply@cksm:
   803                           	opt stack 0
   804                           
   805                           ; 2 bytes @ 0xF
   806  00006F                     	ds	1
   807  000070                     DHCP_Request@type:
   808                           	opt stack 0
   809                           
   810                           ; 1 bytes @ 0x10
   811  000070                     	ds	1
   812  000071                     ICMP_EchoReply@ipv4PayloadLength:
   813                           	opt stack 0
   814  000071                     DHCP_Request@ethMAC:
   815                           	opt stack 0
   816                           
   817                           ; 6 bytes @ 0x11
   818  000071                     	ds	2
   819  000073                     ICMP_EchoReply@ret:
   820                           	opt stack 0
   821                           
   822                           ; 1 bytes @ 0x13
   823  000073                     	ds	1
   824  000074                     ICMP_EchoReply@icmpHdr:
   825                           	opt stack 0
   826                           
   827                           ; 1 bytes @ 0x14
   828  000074                     	ds	1
   829  000075                     ??_ICMP_Receive:
   830                           
   831                           ; 0 bytes @ 0x15
   832  000075                     	ds	2
   833  000077                     DHCP_Handler@ip:
   834                           	opt stack 0
   835                           
   836                           ; 8 bytes @ 0x17
   837  000077                     	ds	3
   838  00007A                     ICMP_Receive@icmpHdr:
   839                           	opt stack 0
   840                           
   841                           ; 8 bytes @ 0x1A
   842  00007A                     	ds	5
   843  00007F                     DHCP_Handler@v:
   844                           	opt stack 0
   845                           
   846                           ; 4 bytes @ 0x1F
   847  00007F                     	ds	4
   848  000083                     DHCP_Handler@v16:
   849                           	opt stack 0
   850                           
   851                           ; 2 bytes @ 0x23
   852  000083                     	ds	2
   853  000085                     DHCP_Handler@option:
   854                           	opt stack 0
   855                           
   856                           ; 1 bytes @ 0x25
   857  000085                     	ds	1
   858  000086                     DHCP_Handler@ethPktMAC:
   859                           	opt stack 0
   860                           
   861                           ; 6 bytes @ 0x26
   862  000086                     	ds	6
   863  00008C                     DHCP_Handler@ethMAC:
   864                           	opt stack 0
   865                           
   866                           ; 6 bytes @ 0x2C
   867  00008C                     	ds	6
   868  000092                     DHCP_Handler@optionLength:
   869                           	opt stack 0
   870                           
   871                           ; 1 bytes @ 0x32
   872  000092                     	ds	1
   873  000093                     DHCP_Handler@myip:
   874                           	opt stack 0
   875                           
   876                           ; 4 bytes @ 0x33
   877  000093                     	ds	4
   878  000097                     TCP_Snd@data:
   879                           	opt stack 0
   880  000097                     UDP_Receive@udpcksm:
   881                           	opt stack 0
   882                           
   883                           ; 2 bytes @ 0x37
   884  000097                     	ds	2
   885  000099                     ??_UDP_Receive:
   886  000099                     TCP_Snd@cksm:
   887                           	opt stack 0
   888                           
   889                           ; 2 bytes @ 0x39
   890  000099                     	ds	2
   891  00009B                     TCP_Snd@payloadLength:
   892                           	opt stack 0
   893                           
   894                           ; 2 bytes @ 0x3B
   895  00009B                     	ds	2
   896  00009D                     TCP_Snd@ret:
   897                           	opt stack 0
   898                           
   899                           ; 1 bytes @ 0x3D
   900  00009D                     	ds	1
   901  00009E                     TCP_Snd@tcpDataLength:
   902                           	opt stack 0
   903                           
   904                           ; 2 bytes @ 0x3E
   905  00009E                     	ds	1
   906  00009F                     UDP_Receive@x:
   907                           	opt stack 0
   908                           
   909                           ; 2 bytes @ 0x3F
   910  00009F                     	ds	1
   911  0000A0                     TCP_Snd@txHeader:
   912                           	opt stack 0
   913                           
   914                           ; 20 bytes @ 0x40
   915  0000A0                     	ds	1
   916  0000A1                     UDP_Receive@hptr:
   917                           	opt stack 0
   918                           
   919                           ; 1 bytes @ 0x41
   920  0000A1                     	ds	19
   921  0000B4                     ??_TCP_PayloadSave:
   922  0000B4                     TCP_Send@tcbPtr:
   923                           	opt stack 0
   924                           
   925                           ; 2 bytes @ 0x54
   926  0000B4                     	ds	2
   927  0000B6                     TCP_Send@data:
   928                           	opt stack 0
   929                           
   930                           ; 2 bytes @ 0x56
   931  0000B6                     	ds	2
   932  0000B8                     TCP_Send@dataLen:
   933                           	opt stack 0
   934                           
   935                           ; 2 bytes @ 0x58
   936  0000B8                     	ds	9
   937  0000C1                     TCP_PayloadSave@buffer_size:
   938                           	opt stack 0
   939                           
   940                           ; 2 bytes @ 0x61
   941  0000C1                     	ds	2
   942  0000C3                     ??_TCP_FiniteStateMachine:
   943                           
   944                           ; 0 bytes @ 0x63
   945  0000C3                     	ds	12
   946  0000CF                     TCP_FiniteStateMachine@ret:
   947                           	opt stack 0
   948                           
   949                           ; 1 bytes @ 0x6F
   950  0000CF                     	ds	1
   951  0000D0                     TCP_FiniteStateMachine@notAckBytes:
   952                           	opt stack 0
   953                           
   954                           ; 2 bytes @ 0x70
   955  0000D0                     	ds	2
   956  0000D2                     TCP_FiniteStateMachine@event:
   957                           	opt stack 0
   958                           
   959                           ; 1 bytes @ 0x72
   960  0000D2                     	ds	1
   961  0000D3                     TCP_FiniteStateMachine@nextState:
   962                           	opt stack 0
   963                           
   964                           ; 1 bytes @ 0x73
   965  0000D3                     	ds	1
   966  0000D4                     ??_TCP_Update:
   967  0000D4                     TCP_Connect@tcbPtr:
   968                           	opt stack 0
   969  0000D4                     TCP_Recv@remoteAddress:
   970                           	opt stack 0
   971                           
   972                           ; 4 bytes @ 0x74
   973  0000D4                     	ds	2
   974  0000D6                     TCP_Connect@srvaddr:
   975                           	opt stack 0
   976                           
   977                           ; 2 bytes @ 0x76
   978  0000D6                     	ds	2
   979  0000D8                     TCP_Recv@length:
   980                           	opt stack 0
   981                           
   982                           ; 2 bytes @ 0x78
   983  0000D8                     	ds	2
   984  0000DA                     ??_TCP_Recv:
   985  0000DA                     ??_DEMO_TCP_Client:
   986                           
   987                           ; 0 bytes @ 0x7A
   988  0000DA                     	ds	2
   989  0000DC                     TCP_Update@count:
   990                           	opt stack 0
   991  0000DC                     DEMO_TCP_Client@temperature:
   992                           	opt stack 0
   993                           
   994                           ; 2 bytes @ 0x7C
   995  0000DC                     	ds	2
   996  0000DE                     TCP_Update@tcbPtr:
   997                           	opt stack 0
   998  0000DE                     DEMO_TCP_Client@pot:
   999                           	opt stack 0
  1000                           
  1001                           ; 2 bytes @ 0x7E
  1002  0000DE                     	ds	2
  1003  0000E0                     DEMO_TCP_Client@socketState:
  1004                           	opt stack 0
  1005                           
  1006                           ; 1 bytes @ 0x80
  1007  0000E0                     	ds	1
  1008  0000E1                     DEMO_TCP_Client@rx_len:
  1009                           	opt stack 0
  1010                           
  1011                           ; 2 bytes @ 0x81
  1012  0000E1                     	ds	2
  1013  0000E3                     DEMO_TCP_Client@ledNr:
  1014                           	opt stack 0
  1015                           
  1016                           ; 1 bytes @ 0x83
  1017  0000E3                     	ds	1
  1018  0000E4                     DEMO_TCP_Client@strTmp:
  1019                           	opt stack 0
  1020                           
  1021                           ; 17 bytes @ 0x84
  1022  0000E4                     	ds	18
  1023  0000F6                     TCP_Recv@count:
  1024                           	opt stack 0
  1025                           
  1026                           ; 1 bytes @ 0x96
  1027  0000F6                     	ds	1
  1028  0000F7                     TCP_Recv@tcbPtr:
  1029                           	opt stack 0
  1030                           
  1031                           ; 2 bytes @ 0x97
  1032  0000F7                     	ds	2
  1033  0000F9                     IPV4_Packet@hdrLen:
  1034                           	opt stack 0
  1035                           
  1036                           ; 1 bytes @ 0x99
  1037  0000F9                     	ds	1
  1038  0000FA                     IPV4_Packet@length:
  1039                           	opt stack 0
  1040                           
  1041                           ; 2 bytes @ 0x9A
  1042  0000FA                     	ds	2
  1043  0000FC                     IPV4_Packet@cksm:
  1044                           	opt stack 0
  1045                           
  1046                           ; 2 bytes @ 0x9C
  1047  0000FC                     	ds	2
  1048                           tblptru	equ	0xFF8
  1049                           tblptrh	equ	0xFF7
  1050                           tblptrl	equ	0xFF6
  1051                           tablat	equ	0xFF5
  1052                           postinc0	equ	0xFEE
  1053                           wreg	equ	0xFE8
  1054                           
  1055                           	psect	cstackCOMRAM
  1056  000001                     __pcstackCOMRAM:
  1057                           	opt stack 0
  1058  000001                     ??_low_isr:
  1059  000001                     
  1060                           ; 1 bytes @ 0x0
  1061  000001                     	ds	1
  1062  000002                     ??_isdigit:
  1063  000002                     ?_memcmp:
  1064                           	opt stack 0
  1065  000002                     ?_strlen:
  1066                           	opt stack 0
  1067  000002                     ?_ADC_GetConversion:
  1068                           	opt stack 0
  1069  000002                     ?_ARPV4_Lookup:
  1070                           	opt stack 0
  1071  000002                     ?_IPV4_PseudoHeaderChecksum:
  1072                           	opt stack 0
  1073  000002                     ?___wmul:
  1074                           	opt stack 0
  1075  000002                     ?___lwdiv:
  1076                           	opt stack 0
  1077  000002                     ?_time:
  1078                           	opt stack 0
  1079  000002                     ?_IPV4_GetMyIP:
  1080                           	opt stack 0
  1081  000002                     lcd_write_ctrl@c:
  1082                           	opt stack 0
  1083  000002                     lcd_write_data@d:
  1084                           	opt stack 0
  1085  000002                     LED_Init@x:
  1086                           	opt stack 0
  1087  000002                     SPI_ExchangeByte@v:
  1088                           	opt stack 0
  1089  000002                     putch@data:
  1090                           	opt stack 0
  1091  000002                     ARPV4_Init@x:
  1092                           	opt stack 0
  1093  000002                     memcmp@s2:
  1094                           	opt stack 0
  1095  000002                     time@t:
  1096                           	opt stack 0
  1097  000002                     ARPV4_Update@entryPointer:
  1098                           	opt stack 0
  1099  000002                     IPV4_PseudoHeaderChecksum@payloadLen:
  1100                           	opt stack 0
  1101  000002                     TCB_Insert@ptr:
  1102                           	opt stack 0
  1103  000002                     TCB_Reset@tcbPtr:
  1104                           	opt stack 0
  1105  000002                     TCB_Check@ptr:
  1106                           	opt stack 0
  1107  000002                     ___wmul@multiplier:
  1108                           	opt stack 0
  1109  000002                     ___lwdiv@dividend:
  1110                           	opt stack 0
  1111  000002                     memset@p1:
  1112                           	opt stack 0
  1113  000002                     strlen@s:
  1114                           	opt stack 0
  1115  000002                     ARPV4_Lookup@ip_address:
  1116                           	opt stack 0
  1117                           
  1118                           ; 4 bytes @ 0x1
  1119  000002                     	ds	1
  1120  000003                     ??_lcd_init:
  1121  000003                     ?_ETH_Read16:
  1122                           	opt stack 0
  1123  000003                     ?_ETH_ReadBlock:
  1124                           	opt stack 0
  1125  000003                     ?_ETH_Read32:
  1126                           	opt stack 0
  1127  000003                     lcd_putch@c:
  1128                           	opt stack 0
  1129  000003                     lcd_goto1@pos:
  1130                           	opt stack 0
  1131  000003                     lcd_goto2@pos:
  1132                           	opt stack 0
  1133  000003                     ENCx24_BankselSPI@a:
  1134                           	opt stack 0
  1135  000003                     ETH_Read8@ret:
  1136                           	opt stack 0
  1137  000003                     ETH_Write8@data:
  1138                           	opt stack 0
  1139  000003                     _isdigit$4832:
  1140                           	opt stack 0
  1141  000003                     ETH_ReadBlock@data:
  1142                           	opt stack 0
  1143  000003                     ETH_Write16@data:
  1144                           	opt stack 0
  1145  000003                     ETH_WriteBlock@data:
  1146                           	opt stack 0
  1147  000003                     ETH_SetRXptr@address:
  1148                           	opt stack 0
  1149  000003                     memcmp@n:
  1150                           	opt stack 0
  1151  000003                     ETH_Write32@data:
  1152                           	opt stack 0
  1153                           
  1154                           ; 4 bytes @ 0x2
  1155  000003                     	ds	1
  1156  000004                     ??_ADC_GetConversion:
  1157  000004                     ??_IPV4_PseudoHeaderChecksum:
  1158  000004                     ??_TCB_Reset:
  1159  000004                     ??_TCB_Check:
  1160  000004                     ENCx24_BankselSPI@bank:
  1161                           	opt stack 0
  1162  000004                     ARPV4_Update@x:
  1163                           	opt stack 0
  1164  000004                     isdigit@c:
  1165                           	opt stack 0
  1166  000004                     lcd_puts@s:
  1167                           	opt stack 0
  1168  000004                     DHCP_WriteZeros@length:
  1169                           	opt stack 0
  1170  000004                     ___wmul@multiplicand:
  1171                           	opt stack 0
  1172  000004                     ___lwdiv@divisor:
  1173                           	opt stack 0
  1174  000004                     memset@c:
  1175                           	opt stack 0
  1176  000004                     strlen@cp:
  1177                           	opt stack 0
  1178                           
  1179                           ; 2 bytes @ 0x3
  1180  000004                     	ds	1
  1181  000005                     ??_memcmp:
  1182  000005                     ?_ENCx24_Read:
  1183                           	opt stack 0
  1184  000005                     ADC_GetConversion@channel:
  1185                           	opt stack 0
  1186  000005                     ETH_MACRead8@v:
  1187                           	opt stack 0
  1188  000005                     ENCx24_Write@data:
  1189                           	opt stack 0
  1190  000005                     ENCx24_BFS@bitMask:
  1191                           	opt stack 0
  1192  000005                     ENCx24_BFC@bitMask:
  1193                           	opt stack 0
  1194  000005                     ETH_Read16@ret:
  1195                           	opt stack 0
  1196  000005                     ETH_ReadBlock@length:
  1197                           	opt stack 0
  1198  000005                     ETH_WriteBlock@len:
  1199                           	opt stack 0
  1200                           
  1201                           ; 2 bytes @ 0x4
  1202  000005                     	ds	1
  1203  000006                     time@gie_val:
  1204                           	opt stack 0
  1205  000006                     ETH_MACRead8@bank:
  1206                           	opt stack 0
  1207  000006                     TCB_Check@ret:
  1208                           	opt stack 0
  1209  000006                     ___lwdiv@counter:
  1210                           	opt stack 0
  1211  000006                     ___wmul@product:
  1212                           	opt stack 0
  1213  000006                     memset@n:
  1214                           	opt stack 0
  1215                           
  1216                           ; 2 bytes @ 0x5
  1217  000006                     	ds	1
  1218  000007                     ??_ETH_ReadBlock:
  1219  000007                     ENCx24_Read@bank:
  1220                           	opt stack 0
  1221  000007                     ENCx24_Write@bank:
  1222                           	opt stack 0
  1223  000007                     ENCx24_BFS@bank:
  1224                           	opt stack 0
  1225  000007                     ENCx24_BFC@bank:
  1226                           	opt stack 0
  1227  000007                     ETH_MACRead8@a:
  1228                           	opt stack 0
  1229  000007                     TCB_Check@count:
  1230                           	opt stack 0
  1231  000007                     memcmp@s1:
  1232                           	opt stack 0
  1233  000007                     ETH_WriteBlock@p:
  1234                           	opt stack 0
  1235  000007                     ___lwdiv@quotient:
  1236                           	opt stack 0
  1237  000007                     time@the_time:
  1238                           	opt stack 0
  1239  000007                     ETH_Read32@ret:
  1240                           	opt stack 0
  1241                           
  1242                           ; 4 bytes @ 0x6
  1243  000007                     	ds	1
  1244  000008                     ENCx24_Write@a:
  1245                           	opt stack 0
  1246  000008                     ENCx24_BFS@a:
  1247                           	opt stack 0
  1248  000008                     ENCx24_BFC@a:
  1249                           	opt stack 0
  1250  000008                     IPV4_PseudoHeaderChecksum@v:
  1251                           	opt stack 0
  1252  000008                     ETH_GetMAC@macAddr:
  1253                           	opt stack 0
  1254  000008                     ENCx24_Read@v:
  1255                           	opt stack 0
  1256  000008                     ETH_ReadBlock@p:
  1257                           	opt stack 0
  1258  000008                     TCB_Check@tcbPtr:
  1259                           	opt stack 0
  1260  000008                     memset@p:
  1261                           	opt stack 0
  1262                           
  1263                           ; 2 bytes @ 0x7
  1264  000008                     	ds	1
  1265  000009                     ?___lwmod:
  1266                           	opt stack 0
  1267  000009                     IPV4_PseudoHeaderChecksum@len:
  1268                           	opt stack 0
  1269  000009                     ETH_Flush@newRXTail:
  1270                           	opt stack 0
  1271  000009                     ___lwmod@dividend:
  1272                           	opt stack 0
  1273                           
  1274                           ; 2 bytes @ 0x8
  1275  000009                     	ds	1
  1276  00000A                     ?_TCP_GetReceivedData:
  1277                           	opt stack 0
  1278  00000A                     ENCx24_Read@a:
  1279                           	opt stack 0
  1280  00000A                     ETH_ReadBlock@len:
  1281                           	opt stack 0
  1282  00000A                     ARPV4_Lookup@entry_pointer:
  1283                           	opt stack 0
  1284  00000A                     TCP_SocketInit@tcbPtr:
  1285                           	opt stack 0
  1286  00000A                     TCP_SocketPoll@socket_ptr:
  1287                           	opt stack 0
  1288  00000A                     TCP_SendDone@tcbPtr:
  1289                           	opt stack 0
  1290  00000A                     TCP_InsertRxBuffer@tcbPtr:
  1291                           	opt stack 0
  1292  00000A                     TCP_GetReceivedData@tcbPtr:
  1293                           	opt stack 0
  1294  00000A                     IPV4_PseudoHeaderChecksum@cksm:
  1295                           	opt stack 0
  1296                           
  1297                           ; 4 bytes @ 0x9
  1298  00000A                     	ds	1
  1299  00000B                     ??_ETH_SendSystemReset:
  1300  00000B                     ?_ENCx24_PhyRead:
  1301                           	opt stack 0
  1302  00000B                     ?_ETH_GetByteCount:
  1303                           	opt stack 0
  1304  00000B                     ?_ETH_readLinkStatus:
  1305                           	opt stack 0
  1306  00000B                     ETH_EventHandler@mabbipgVal:
  1307                           	opt stack 0
  1308  00000B                     ETH_Dump@length:
  1309                           	opt stack 0
  1310  00000B                     ETH_WriteStart@destMAC:
  1311                           	opt stack 0
  1312  00000B                     waitForDMA@econ1_val:
  1313                           	opt stack 0
  1314  00000B                     ENCx24_PHYWrite@data:
  1315                           	opt stack 0
  1316  00000B                     ETH_Insert@len:
  1317                           	opt stack 0
  1318  00000B                     ___lwmod@divisor:
  1319                           	opt stack 0
  1320                           
  1321                           ; 2 bytes @ 0xA
  1322  00000B                     	ds	1
  1323  00000C                     ??_TCP_GetReceivedData:
  1324  00000C                     ARPV4_Lookup@x:
  1325                           	opt stack 0
  1326  00000C                     TCP_SocketPoll@tmpSocketState:
  1327                           	opt stack 0
  1328  00000C                     TCP_SendDone@ret:
  1329                           	opt stack 0
  1330  00000C                     TCP_InsertRxBuffer@data:
  1331                           	opt stack 0
  1332                           
  1333                           ; 2 bytes @ 0xB
  1334  00000C                     	ds	1
  1335  00000D                     ?_ETH_TxComputeChecksum:
  1336                           	opt stack 0
  1337  00000D                     ?_ETH_RxComputeChecksum:
  1338                           	opt stack 0
  1339  00000D                     ENCx24_PhyRead@a:
  1340                           	opt stack 0
  1341  00000D                     ENCx24_PHYWrite@a:
  1342                           	opt stack 0
  1343  00000D                     ___lwmod@counter:
  1344                           	opt stack 0
  1345  00000D                     ETH_EventHandler@macon2Val:
  1346                           	opt stack 0
  1347  00000D                     ETH_Dump@newRXTail:
  1348                           	opt stack 0
  1349  00000D                     ETH_WriteStart@type:
  1350                           	opt stack 0
  1351  00000D                     ETH_Copy@len:
  1352                           	opt stack 0
  1353  00000D                     ETH_TxComputeChecksum@position:
  1354                           	opt stack 0
  1355  00000D                     ETH_RxComputeChecksum@len:
  1356                           	opt stack 0
  1357  00000D                     ETH_GetByteCount@wPtr:
  1358                           	opt stack 0
  1359  00000D                     ETH_Insert@offset:
  1360                           	opt stack 0
  1361                           
  1362                           ; 2 bytes @ 0xC
  1363  00000D                     	ds	1
  1364  00000E                     ?__doprnt:
  1365                           	opt stack 0
  1366  00000E                     __doprnt@f:
  1367                           	opt stack 0
  1368  00000E                     TCP_InsertRxBuffer@data_len:
  1369                           	opt stack 0
  1370  00000E                     IPV4_PseudoHeaderChecksum@tmp:
  1371                           	opt stack 0
  1372                           
  1373                           ; 12 bytes @ 0xD
  1374  00000E                     	ds	1
  1375  00000F                     ??_ARPV4_Packet:
  1376  00000F                     ??_TCP_ParseTCPOptions:
  1377  00000F                     __doprnt@ap:
  1378                           	opt stack 0
  1379  00000F                     ETH_EventHandler@estatVal:
  1380                           	opt stack 0
  1381  00000F                     ETH_Copy@txBufferAddress:
  1382                           	opt stack 0
  1383  00000F                     ETH_TxComputeChecksum@length:
  1384                           	opt stack 0
  1385  00000F                     ETH_RxComputeChecksum@seed:
  1386                           	opt stack 0
  1387  00000F                     ETH_Insert@current_tx_pointer:
  1388                           	opt stack 0
  1389  00000F                     ETH_CheckLinkUp@value:
  1390                           	opt stack 0
  1391  00000F                     ARPV4_Request@destAddress:
  1392                           	opt stack 0
  1393                           
  1394                           ; 4 bytes @ 0xE
  1395  00000F                     	ds	1
  1396  000010                     ??__doprnt:
  1397  000010                     TCP_GetReceivedData@ret:
  1398                           	opt stack 0
  1399                           
  1400                           ; 2 bytes @ 0xF
  1401  000010                     	ds	1
  1402  000011                     ??_ETH_RxComputeChecksum:
  1403  000011                     ETH_Insert@data:
  1404                           	opt stack 0
  1405  000011                     TCP_ParseTCPOptions@ret:
  1406                           	opt stack 0
  1407  000011                     ETH_EventHandler@eirVal:
  1408                           	opt stack 0
  1409  000011                     ETH_TxComputeChecksum@seed:
  1410                           	opt stack 0
  1411                           
  1412                           ; 2 bytes @ 0x10
  1413  000011                     	ds	1
  1414  000012                     TCP_ParseTCPOptions@opt:
  1415                           	opt stack 0
  1416                           
  1417                           ; 1 bytes @ 0x11
  1418  000012                     	ds	1
  1419  000013                     ??_ETH_TxComputeChecksum:
  1420  000013                     ??_ARPV4_Request:
  1421  000013                     ETH_CheckLinkUp@ret:
  1422                           	opt stack 0
  1423  000013                     TCP_ParseTCPOptions@tcpOptionsSize:
  1424                           	opt stack 0
  1425                           
  1426                           ; 2 bytes @ 0x12
  1427  000013                     	ds	1
  1428  000014                     ??_ETH_Init:
  1429  000014                     __doprnt@idx:
  1430                           	opt stack 0
  1431                           
  1432                           ; 1 bytes @ 0x13
  1433  000014                     	ds	1
  1434  000015                     __doprnt@prec:
  1435                           	opt stack 0
  1436  000015                     ETH_RxComputeChecksum@cksm:
  1437                           	opt stack 0
  1438                           
  1439                           ; 2 bytes @ 0x14
  1440  000015                     	ds	1
  1441  000016                     ETH_Init@phcon1_val:
  1442                           	opt stack 0
  1443  000016                     __doprnt@len:
  1444                           	opt stack 0
  1445                           
  1446                           ; 2 bytes @ 0x15
  1447  000016                     	ds	1
  1448  000017                     ETH_RxComputeChecksum@rxPtr:
  1449                           	opt stack 0
  1450  000017                     ETH_TxComputeChecksum@cksm:
  1451                           	opt stack 0
  1452                           
  1453                           ; 4 bytes @ 0x16
  1454  000017                     	ds	1
  1455  000018                     __doprnt@cp:
  1456                           	opt stack 0
  1457                           
  1458                           ; 2 bytes @ 0x17
  1459  000018                     	ds	1
  1460  000019                     ETH_RxComputeChecksum@econ1Val:
  1461                           	opt stack 0
  1462                           
  1463                           ; 2 bytes @ 0x18
  1464  000019                     	ds	1
  1465  00001A                     __doprnt@flag:
  1466                           	opt stack 0
  1467                           
  1468                           ; 1 bytes @ 0x19
  1469  00001A                     	ds	1
  1470  00001B                     ETH_TxComputeChecksum@econ1Val:
  1471                           	opt stack 0
  1472  00001B                     __doprnt@val:
  1473                           	opt stack 0
  1474                           
  1475                           ; 2 bytes @ 0x1A
  1476  00001B                     	ds	2
  1477  00001D                     IPV4_Send@payloadLength:
  1478                           	opt stack 0
  1479  00001D                     __doprnt@width:
  1480                           	opt stack 0
  1481                           
  1482                           ; 2 bytes @ 0x1C
  1483  00001D                     	ds	2
  1484  00001F                     ??_IPV4_Send:
  1485  00001F                     __doprnt@c:
  1486                           	opt stack 0
  1487                           
  1488                           ; 1 bytes @ 0x1E
  1489  00001F                     	ds	1
  1490  000020                     __doprnt@pb:
  1491                           	opt stack 0
  1492                           
  1493                           ; 1 bytes @ 0x1F
  1494  000020                     	ds	1
  1495  000021                     ?_sprintf:
  1496                           	opt stack 0
  1497  000021                     ?_printf:
  1498                           	opt stack 0
  1499  000021                     sprintf@wh:
  1500                           	opt stack 0
  1501                           
  1502                           ; 2 bytes @ 0x20
  1503  000021                     	ds	2
  1504  000023                     IPV4_Send@ret:
  1505                           	opt stack 0
  1506  000023                     sprintf@f:
  1507                           	opt stack 0
  1508                           
  1509                           ; 1 bytes @ 0x22
  1510  000023                     	ds	1
  1511  000024                     IPV4_Send@cksm:
  1512                           	opt stack 0
  1513                           
  1514                           ; 2 bytes @ 0x23
  1515  000024                     	ds	1
  1516  000025                     printf@f:
  1517                           	opt stack 0
  1518                           
  1519                           ; 1 bytes @ 0x24
  1520  000025                     	ds	1
  1521  000026                     printf@ap:
  1522                           	opt stack 0
  1523  000026                     IPV4_Send@totalLength:
  1524                           	opt stack 0
  1525                           
  1526                           ; 2 bytes @ 0x25
  1527  000026                     	ds	1
  1528  000027                     printf@pb:
  1529                           	opt stack 0
  1530                           
  1531                           ; 5 bytes @ 0x26
  1532  000027                     	ds	1
  1533  000028                     ??_UDP_Send:
  1534                           
  1535                           ; 0 bytes @ 0x27
  1536  000028                     	ds	4
  1537  00002C                     sprintf@ap:
  1538                           	opt stack 0
  1539  00002C                     SYSLOG_Write@message:
  1540                           	opt stack 0
  1541  00002C                     SYSLOG_Init@t:
  1542                           	opt stack 0
  1543                           
  1544                           ; 4 bytes @ 0x2B
  1545  00002C                     	ds	1
  1546  00002D                     UDP_Send@cksm:
  1547                           	opt stack 0
  1548  00002D                     sprintf@pb:
  1549                           	opt stack 0
  1550                           
  1551                           ; 5 bytes @ 0x2C
  1552  00002D                     	ds	1
  1553  00002E                     ARPV4_Request@ret:
  1554                           	opt stack 0
  1555  00002E                     SYSLOG_Write@t:
  1556                           	opt stack 0
  1557                           
  1558                           ; 2 bytes @ 0x2D
  1559  00002E                     	ds	1
  1560  00002F                     ARPV4_Packet@length:
  1561                           	opt stack 0
  1562  00002F                     UDP_Send@udpLength:
  1563                           	opt stack 0
  1564  00002F                     ARPV4_Request@header:
  1565                           	opt stack 0
  1566                           
  1567                           ; 28 bytes @ 0x2E
  1568  00002F                     	ds	2
  1569  000031                     ARPV4_Packet@mergeFlag:
  1570                           	opt stack 0
  1571                           
  1572                           ; 1 bytes @ 0x30
  1573  000031                     	ds	1
  1574  000032                     ARPV4_Packet@ret:
  1575                           	opt stack 0
  1576                           
  1577                           ; 1 bytes @ 0x31
  1578  000032                     	ds	1
  1579  000033                     ARPV4_Packet@arpPtr:
  1580                           	opt stack 0
  1581                           
  1582                           ; 2 bytes @ 0x32
  1583  000033                     	ds	2
  1584  000035                     ARPV4_Packet@x:
  1585                           	opt stack 0
  1586                           
  1587                           ; 1 bytes @ 0x34
  1588  000035                     	ds	1
  1589  000036                     ARPV4_Packet@x_2060:
  1590                           	opt stack 0
  1591                           
  1592                           ; 1 bytes @ 0x35
  1593  000036                     	ds	1
  1594  000037                     ARPV4_Packet@entryPointer:
  1595                           	opt stack 0
  1596                           
  1597                           ; 2 bytes @ 0x36
  1598  000037                     	ds	2
  1599  000039                     ARPV4_Packet@header:
  1600                           	opt stack 0
  1601                           
  1602                           ; 28 bytes @ 0x38
  1603  000039                     	ds	18
  1604  00004B                     IPv4_Start@destAddress:
  1605                           	opt stack 0
  1606                           
  1607                           ; 4 bytes @ 0x4A
  1608  00004B                     	ds	4
  1609  00004F                     IPv4_Start@protocol:
  1610                           	opt stack 0
  1611                           
  1612                           ; 1 bytes @ 0x4E
  1613  00004F                     	ds	1
  1614  000050                     ??_IPv4_Start:
  1615                           
  1616                           ; 0 bytes @ 0x4F
  1617  000050                     	ds	8
  1618  000058                     UDP_Start@ret:
  1619                           	opt stack 0
  1620  000058                     ICMP_EchoReply@ipv4Hdr:
  1621                           	opt stack 0
  1622  000058                     TCP_Snd@tcbPtr:
  1623                           	opt stack 0
  1624                           
  1625                           ; 2 bytes @ 0x57
  1626  000058                     	ds	1
  1627  000059                     DHCP_Handler@length:
  1628                           	opt stack 0
  1629                           
  1630                           ; 2 bytes @ 0x58
  1631  000059                     	ds	1
  1632  00005A                     ICMP_Receive@ipv4Hdr:
  1633                           	opt stack 0
  1634  00005A                     TCP_PayloadSave@len:
  1635                           	opt stack 0
  1636                           
  1637                           ; 2 bytes @ 0x59
  1638  00005A                     	ds	1
  1639  00005B                     ??_DHCP_Handler:
  1640                           
  1641                           ; 0 bytes @ 0x5A
  1642  00005B                     	ds	2
  1643  00005D                     tblptru	equ	0xFF8
  1644                           tblptrh	equ	0xFF7
  1645                           tblptrl	equ	0xFF6
  1646                           tablat	equ	0xFF5
  1647                           postinc0	equ	0xFEE
  1648                           wreg	equ	0xFE8
  1649                           
  1650                           ; 0 bytes @ 0x5C
  1651 ;;
  1652 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1653 ;;
  1654 ;; *************** function _main *****************
  1655 ;; Defined at:
  1656 ;;		line 180 in file "main.c"
  1657 ;; Parameters:    Size  Location     Type
  1658 ;;		None
  1659 ;; Auto vars:     Size  Location     Type
  1660 ;;  now_p           4    4[BANK2 ] long 
  1661 ;;  str            32    9[BANK2 ] unsigned char [32]
  1662 ;;  ip              4   41[BANK2 ] unsigned long 
  1663 ;;  old_ip          4    0[BANK2 ] unsigned long 
  1664 ;;  no_ip_displa    1    8[BANK2 ] unsigned char 
  1665 ;; Return value:  Size  Location     Type
  1666 ;;		None               void
  1667 ;; Registers used:
  1668 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  1669 ;; Tracked objects:
  1670 ;;		On entry : 0/0
  1671 ;;		On exit  : 0/0
  1672 ;;		Unchanged: 0/0
  1673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1675 ;;      Locals:         0       0       0      45       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1677 ;;      Totals:         0       0       0      45       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1678 ;;Total ram usage:       45 bytes
  1679 ;; Hardware stack levels required when called:   16
  1680 ;; This function calls:
  1681 ;;		_DEMO_TCP_Client
  1682 ;;		_IPV4_GetMyIP
  1683 ;;		_Network_Init
  1684 ;;		_Network_Manage
  1685 ;;		_Network_WaitForLink
  1686 ;;		_SYSLOG_Init
  1687 ;;		_SYSLOG_Write
  1688 ;;		_initHW
  1689 ;;		_lcd_goto1
  1690 ;;		_lcd_puts
  1691 ;;		_memset
  1692 ;;		_sprintf
  1693 ;;		_time
  1694 ;; This function is called by:
  1695 ;;		Startup code after reset
  1696 ;; This function uses a non-reentrant model
  1697 ;;
  1698                           
  1699                           	psect	text0
  1700  0070A8                     __ptext0:
  1701                           	opt stack 0
  1702  0070A8                     _main:
  1703                           	opt stack 15
  1704                           
  1705                           ;main.c: 182: unsigned long ip, old_ip;
  1706                           ;main.c: 183: char str[32];
  1707                           ;main.c: 184: bool no_ip_display = 1;
  1708                           
  1709                           ;incstack = 0
  1710  0070A8  0E01               	movlw	1
  1711  0070AA  0102               	movlb	2	; () banked
  1712  0070AC  6FBF               	movwf	main@no_ip_display& (0+255),b
  1713                           
  1714                           ; BSR set to: 2
  1715                           ;main.c: 186: initHW();
  1716  0070AE  ECD3  F042         	call	_initHW	;wreg free
  1717                           
  1718                           ;main.c: 187: Network_Init();
  1719  0070B2  ECDC  F043         	call	_Network_Init	;wreg free
  1720                           
  1721                           ; BSR set to: 2
  1722                           ;main.c: 188: SYSLOG_Init();
  1723  0070B6  EC97  F043         	call	_SYSLOG_Init	;wreg free
  1724                           
  1725                           ;main.c: 191: IPEN = 1;
  1726  0070BA  8ED0               	bsf	4048,7,c	;volatile
  1727                           
  1728                           ;main.c: 192: GIEH = 1;
  1729  0070BC  8EF2               	bsf	intcon,7,c	;volatile
  1730                           
  1731                           ;main.c: 193: GIEL = 1;
  1732  0070BE  8CF2               	bsf	intcon,6,c	;volatile
  1733                           
  1734                           ;main.c: 195: SYSLOG_Write("Waiting for Link");
  1735  0070C0  0EA3               	movlw	low STR_6
  1736  0070C2  6E2C               	movwf	SYSLOG_Write@message,c
  1737  0070C4  502C               	movf	SYSLOG_Write@message,w,c
  1738  0070C6  A4D8               	btfss	status,2,c
  1739  0070C8  0E10               	movlw	high __smallconst
  1740  0070CA  6E2D               	movwf	SYSLOG_Write@message+1,c
  1741  0070CC  EC85  F044         	call	_SYSLOG_Write	;wreg free
  1742                           
  1743                           ;main.c: 196: Network_WaitForLink();
  1744  0070D0  ECE0  F045         	call	_Network_WaitForLink	;wreg free
  1745                           
  1746                           ;main.c: 197: SYSLOG_Write("Link started");
  1747  0070D4  0EB4               	movlw	low STR_7
  1748  0070D6  6E2C               	movwf	SYSLOG_Write@message,c
  1749  0070D8  502C               	movf	SYSLOG_Write@message,w,c
  1750  0070DA  A4D8               	btfss	status,2,c
  1751  0070DC  0E10               	movlw	high __smallconst
  1752  0070DE  6E2D               	movwf	SYSLOG_Write@message+1,c
  1753  0070E0  EC85  F044         	call	_SYSLOG_Write	;wreg free
  1754                           
  1755                           ;main.c: 201: remoteSocket.addr.s_addr = ((uint32_t)(((uint32_t)10 << 24) | ((uint32_t)1
      +                          4<<16) | ((uint32_t)5 << 8) | (uint32_t)141));
  1756  0070E4  0E8D               	movlw	141
  1757  0070E6  0102               	movlb	2	; () banked
  1758  0070E8  6FAF               	movwf	(_remoteSocket+2)& (0+255),b
  1759  0070EA  0E05               	movlw	5
  1760  0070EC  6FB0               	movwf	(_remoteSocket+3)& (0+255),b
  1761  0070EE  0E0E               	movlw	14
  1762  0070F0  6FB1               	movwf	(_remoteSocket+4)& (0+255),b
  1763  0070F2  0E0A               	movlw	10
  1764  0070F4  6FB2               	movwf	(_remoteSocket+5)& (0+255),b
  1765                           
  1766                           ; BSR set to: 2
  1767                           ;main.c: 202: remoteSocket.port = 60;
  1768  0070F6  6BAE               	clrf	(_remoteSocket+1)& (0+255),b
  1769  0070F8  0E3C               	movlw	60
  1770  0070FA  6FAD               	movwf	_remoteSocket& (0+255),b
  1771  0070FC                     l10598:
  1772                           
  1773                           ;main.c: 206: {
  1774                           ;main.c: 207: time_t now_p;
  1775                           ;main.c: 208: time(&now_p);
  1776  0070FC  0EBB               	movlw	low main@now_p
  1777  0070FE  6E02               	movwf	time@t,c
  1778  007100  0E02               	movlw	high main@now_p
  1779  007102  6E03               	movwf	time@t+1,c
  1780  007104  EC36  F040         	call	_time	;wreg free
  1781                           
  1782                           ;main.c: 209: Network_Manage();
  1783  007108  EC6F  F03D         	call	_Network_Manage	;wreg free
  1784                           
  1785                           ;main.c: 210: ip = IPV4_GetMyIP();
  1786  00710C  ECC0  F045         	call	_IPV4_GetMyIP	;wreg free
  1787  007110  C002  F2E0         	movff	?_IPV4_GetMyIP,main@ip
  1788  007114  C003  F2E1         	movff	?_IPV4_GetMyIP+1,main@ip+1
  1789  007118  C004  F2E2         	movff	?_IPV4_GetMyIP+2,main@ip+2
  1790  00711C  C005  F2E3         	movff	?_IPV4_GetMyIP+3,main@ip+3
  1791                           
  1792                           ;main.c: 212: if((no_ip_display) || (old_ip != ip))
  1793  007120  0102               	movlb	2	; () banked
  1794  007122  51BF               	movf	main@no_ip_display& (0+255),w,b
  1795  007124  E10C               	bnz	l1694
  1796                           
  1797                           ; BSR set to: 2
  1798  007126  51E0               	movf	main@ip& (0+255),w,b
  1799  007128  19B7               	xorwf	main@old_ip& (0+255),w,b
  1800  00712A  E109               	bnz	u16140
  1801  00712C  51E1               	movf	(main@ip+1)& (0+255),w,b
  1802  00712E  19B8               	xorwf	(main@old_ip+1)& (0+255),w,b
  1803  007130  E106               	bnz	u16140
  1804  007132  51E2               	movf	(main@ip+2)& (0+255),w,b
  1805  007134  19B9               	xorwf	(main@old_ip+2)& (0+255),w,b
  1806  007136  E103               	bnz	u16140
  1807  007138  51E3               	movf	(main@ip+3)& (0+255),w,b
  1808  00713A  19BA               	xorwf	(main@old_ip+3)& (0+255),w,b
  1809  00713C  E038               	bz	l10620
  1810  00713E                     u16140:
  1811  00713E                     l1694:
  1812                           
  1813                           ; BSR set to: 2
  1814                           ;main.c: 213: {
  1815                           ;main.c: 214: old_ip = ip;
  1816  00713E  C2E0  F2B7         	movff	main@ip,main@old_ip
  1817  007142  C2E1  F2B8         	movff	main@ip+1,main@old_ip+1
  1818  007146  C2E2  F2B9         	movff	main@ip+2,main@old_ip+2
  1819  00714A  C2E3  F2BA         	movff	main@ip+3,main@old_ip+3
  1820                           
  1821                           ; BSR set to: 2
  1822                           ;main.c: 215: memset(str,0,sizeof(str));
  1823  00714E  0EC0               	movlw	low main@str
  1824  007150  6E02               	movwf	memset@p1,c
  1825  007152  0E02               	movlw	high main@str
  1826  007154  6E03               	movwf	memset@p1+1,c
  1827  007156  6A05               	clrf	memset@c+1,c
  1828  007158  6A04               	clrf	memset@c,c
  1829  00715A  6A07               	clrf	memset@n+1,c
  1830  00715C  0E20               	movlw	32
  1831  00715E  6E06               	movwf	memset@n,c
  1832  007160  EC33  F044         	call	_memset	;wreg free
  1833                           
  1834                           ; BSR set to: 2
  1835                           ;main.c: 216: sprintf(str,"%d.%d.%d.%d",((char*)&ip)[3],((char*)&ip)[2],((char*)&ip)[1],
      +                          ((char*)&ip)[0]);
  1836  007164  0EC0               	movlw	low main@str
  1837  007166  6E21               	movwf	sprintf@wh,c
  1838  007168  0E02               	movlw	high main@str
  1839  00716A  6E22               	movwf	sprintf@wh+1,c
  1840  00716C  0EC1               	movlw	low STR_8
  1841  00716E  6E23               	movwf	sprintf@f,c
  1842  007170  C2E3  F024         	movff	main@ip+3,?_sprintf+3
  1843  007174  6A25               	clrf	?_sprintf+4,c
  1844  007176  C2E2  F026         	movff	main@ip+2,?_sprintf+5
  1845  00717A  6A27               	clrf	?_sprintf+6,c
  1846  00717C  C2E1  F028         	movff	main@ip+1,?_sprintf+7
  1847  007180  6A29               	clrf	?_sprintf+8,c
  1848  007182  C2E0  F02A         	movff	main@ip,?_sprintf+9
  1849  007186  6A2B               	clrf	?_sprintf+10,c
  1850  007188  EC08  F044         	call	_sprintf	;wreg free
  1851                           
  1852                           ;main.c: 217: lcd_goto1(0);
  1853  00718C  0E00               	movlw	0
  1854  00718E  ECD9  F045         	call	_lcd_goto1
  1855                           
  1856                           ;main.c: 218: lcd_puts(str);
  1857  007192  0EC0               	movlw	low main@str
  1858  007194  6E04               	movwf	lcd_puts@s,c
  1859  007196  0E02               	movlw	high main@str
  1860  007198  6E05               	movwf	lcd_puts@s+1,c
  1861  00719A  ECD0  F044         	call	_lcd_puts	;wreg free
  1862                           
  1863                           ;main.c: 219: SYSLOG_Write(str);
  1864  00719E  0EC0               	movlw	low main@str
  1865  0071A0  6E2C               	movwf	SYSLOG_Write@message,c
  1866  0071A2  0E02               	movlw	high main@str
  1867  0071A4  6E2D               	movwf	SYSLOG_Write@message+1,c
  1868  0071A6  EC85  F044         	call	_SYSLOG_Write	;wreg free
  1869                           
  1870                           ;main.c: 220: no_ip_display = 0;
  1871  0071AA  0102               	movlb	2	; () banked
  1872  0071AC  6BBF               	clrf	main@no_ip_display& (0+255),b
  1873  0071AE                     l10620:
  1874                           
  1875                           ; BSR set to: 2
  1876                           ;main.c: 221: }
  1877                           ;main.c: 222: DEMO_TCP_Client();
  1878  0071AE  ECE8  F02F         	call	_DEMO_TCP_Client	;wreg free
  1879  0071B2  D7A4               	goto	l10598
  1880  0071B4                     __end_of_main:
  1881                           	opt stack 0
  1882                           tblptru	equ	0xFF8
  1883                           tblptrh	equ	0xFF7
  1884                           tblptrl	equ	0xFF6
  1885                           tablat	equ	0xFF5
  1886                           intcon	equ	0xFF2
  1887                           postinc0	equ	0xFEE
  1888                           wreg	equ	0xFE8
  1889                           status	equ	0xFD8
  1890                           
  1891 ;; *************** function _lcd_goto1 *****************
  1892 ;; Defined at:
  1893 ;;		line 96 in file "../board_support_package/picdem2_net/lcd.c"
  1894 ;; Parameters:    Size  Location     Type
  1895 ;;  pos             1    wreg     unsigned char 
  1896 ;; Auto vars:     Size  Location     Type
  1897 ;;  pos             1    2[COMRAM] unsigned char 
  1898 ;; Return value:  Size  Location     Type
  1899 ;;		None               void
  1900 ;; Registers used:
  1901 ;;		wreg, status,2, status,0, cstack
  1902 ;; Tracked objects:
  1903 ;;		On entry : 0/2
  1904 ;;		On exit  : 0/0
  1905 ;;		Unchanged: 0/0
  1906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1908 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1910 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1911 ;;Total ram usage:        1 bytes
  1912 ;; Hardware stack levels used:    1
  1913 ;; Hardware stack levels required when called:    4
  1914 ;; This function calls:
  1915 ;;		_lcd_busy
  1916 ;;		_lcd_write_ctrl
  1917 ;; This function is called by:
  1918 ;;		_main
  1919 ;; This function uses a non-reentrant model
  1920 ;;
  1921                           
  1922                           	psect	text1
  1923  008BB2                     __ptext1:
  1924                           	opt stack 0
  1925  008BB2                     _lcd_goto1:
  1926                           	opt stack 26
  1927                           
  1928                           ;incstack = 0
  1929                           ;lcd_goto1@pos stored from wreg
  1930  008BB2  6E03               	movwf	lcd_goto1@pos,c
  1931                           
  1932                           ;lcd.c: 98: lcd_write_ctrl(0x80+pos);
  1933  008BB4  5003               	movf	lcd_goto1@pos,w,c
  1934  008BB6  0F80               	addlw	128
  1935  008BB8  EC23  F045         	call	_lcd_write_ctrl
  1936                           
  1937                           ;lcd.c: 99: lcd_busy();
  1938  008BBC  EF12  F046         	goto	_lcd_busy	;wreg free
  1939  008BC0                     __end_of_lcd_goto1:
  1940                           	opt stack 0
  1941                           tblptru	equ	0xFF8
  1942                           tblptrh	equ	0xFF7
  1943                           tblptrl	equ	0xFF6
  1944                           tablat	equ	0xFF5
  1945                           intcon	equ	0xFF2
  1946                           postinc0	equ	0xFEE
  1947                           wreg	equ	0xFE8
  1948                           status	equ	0xFD8
  1949                           
  1950 ;; *************** function _initHW *****************
  1951 ;; Defined at:
  1952 ;;		line 50 in file "../board_support_package/picdem2_net/hardware.c"
  1953 ;; Parameters:    Size  Location     Type
  1954 ;;		None
  1955 ;; Auto vars:     Size  Location     Type
  1956 ;;		None
  1957 ;; Return value:  Size  Location     Type
  1958 ;;		None               void
  1959 ;; Registers used:
  1960 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1961 ;; Tracked objects:
  1962 ;;		On entry : F/2
  1963 ;;		On exit  : 0/0
  1964 ;;		Unchanged: 0/0
  1965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1970 ;;Total ram usage:        0 bytes
  1971 ;; Hardware stack levels used:    1
  1972 ;; Hardware stack levels required when called:    5
  1973 ;; This function calls:
  1974 ;;		_ADC_Initialize
  1975 ;;		_LED_Init
  1976 ;;		_lcd_init
  1977 ;;		_rtcc_init
  1978 ;;		_spi_init
  1979 ;;		_uart_init
  1980 ;; This function is called by:
  1981 ;;		_main
  1982 ;; This function uses a non-reentrant model
  1983 ;;
  1984                           
  1985                           	psect	text2
  1986  0085A6                     __ptext2:
  1987                           	opt stack 0
  1988  0085A6                     _initHW:
  1989                           	opt stack 25
  1990                           
  1991                           ; BSR set to: 2
  1992                           ;hardware.c: 53: OSCCON = 0x02;
  1993                           
  1994                           ;incstack = 0
  1995  0085A6  0E02               	movlw	2
  1996  0085A8  6ED3               	movwf	4051,c	;volatile
  1997                           
  1998                           ;hardware.c: 56: OSCTUNE = 0x40;
  1999  0085AA  0E40               	movlw	64
  2000  0085AC  6E9B               	movwf	3995,c	;volatile
  2001                           
  2002                           ; BSR set to: 2
  2003                           ;hardware.c: 59: TRISJ = 0;
  2004  0085AE  6A9A               	clrf	3994,c	;volatile
  2005                           
  2006                           ; BSR set to: 2
  2007                           ;hardware.c: 60: LATJ = 0;
  2008  0085B0  6A91               	clrf	3985,c	;volatile
  2009                           
  2010                           ; BSR set to: 2
  2011                           ;hardware.c: 62: TRISDbits.TRISD3 = 0;
  2012  0085B2  9695               	bcf	3989,3,c	;volatile
  2013                           
  2014                           ; BSR set to: 2
  2015                           ;hardware.c: 63: LATDbits.LATD3 = 1;
  2016  0085B4  868C               	bsf	3980,3,c	;volatile
  2017                           
  2018                           ; BSR set to: 2
  2019                           ;hardware.c: 65: TRISCbits.TRISC3 = 0;
  2020  0085B6  9694               	bcf	3988,3,c	;volatile
  2021                           
  2022                           ; BSR set to: 2
  2023                           ;hardware.c: 66: TRISCbits.TRISC4 = 1;
  2024  0085B8  8894               	bsf	3988,4,c	;volatile
  2025                           
  2026                           ; BSR set to: 2
  2027                           ;hardware.c: 67: TRISCbits.TRISC5 = 0;
  2028  0085BA  9A94               	bcf	3988,5,c	;volatile
  2029                           
  2030                           ;hardware.c: 69: TRISA = 0b11111100;
  2031  0085BC  0EFC               	movlw	252
  2032  0085BE  6E92               	movwf	3986,c	;volatile
  2033                           
  2034                           ; BSR set to: 2
  2035                           ;hardware.c: 76: RBPU = 0;
  2036  0085C0  9EF1               	bcf	intcon2,7,c	;volatile
  2037                           
  2038                           ; BSR set to: 2
  2039                           ;hardware.c: 78: TRISBbits.TRISB2 = 1;
  2040  0085C2  8493               	bsf	3987,2,c	;volatile
  2041                           
  2042                           ; BSR set to: 2
  2043                           ;hardware.c: 81: TRISBbits.TRISB4 = 0;
  2044  0085C4  9893               	bcf	3987,4,c	;volatile
  2045                           
  2046                           ; BSR set to: 2
  2047                           ;hardware.c: 82: LATBbits.LATB4 = 0;
  2048  0085C6  988A               	bcf	3978,4,c	;volatile
  2049                           
  2050                           ; BSR set to: 2
  2051                           ;hardware.c: 85: TRISBbits.TRISB3 = 0;
  2052  0085C8  9693               	bcf	3987,3,c	;volatile
  2053                           
  2054                           ; BSR set to: 2
  2055                           ;hardware.c: 86: LATBbits.LATB3 = 0;
  2056  0085CA  968A               	bcf	3978,3,c	;volatile
  2057                           
  2058                           ; BSR set to: 2
  2059                           ;hardware.c: 104: rtcc_init();
  2060  0085CC  EC2F  F043         	call	_rtcc_init	;wreg free
  2061                           
  2062                           ; BSR set to: 2
  2063                           ;hardware.c: 107: spi_init();
  2064  0085D0  ECF5  F045         	call	_spi_init	;wreg free
  2065                           
  2066                           ; BSR set to: 2
  2067                           ;hardware.c: 110: uart_init();
  2068  0085D4  ECAA  F045         	call	_uart_init	;wreg free
  2069                           
  2070                           ; BSR set to: 2
  2071                           ;hardware.c: 113: lcd_init();
  2072  0085D8  EC8A  F03B         	call	_lcd_init	;wreg free
  2073                           
  2074                           ;hardware.c: 119: ADC_Initialize();
  2075  0085DC  ECB5  F045         	call	_ADC_Initialize	;wreg free
  2076                           
  2077                           ;hardware.c: 121: LED_Init();
  2078  0085E0  EF03  F045         	goto	_LED_Init	;wreg free
  2079  0085E4                     __end_of_initHW:
  2080                           	opt stack 0
  2081                           tblptru	equ	0xFF8
  2082                           tblptrh	equ	0xFF7
  2083                           tblptrl	equ	0xFF6
  2084                           tablat	equ	0xFF5
  2085                           intcon	equ	0xFF2
  2086                           intcon2	equ	0xFF1
  2087                           postinc0	equ	0xFEE
  2088                           wreg	equ	0xFE8
  2089                           status	equ	0xFD8
  2090                           
  2091 ;; *************** function _uart_init *****************
  2092 ;; Defined at:
  2093 ;;		line 55 in file "../board_support_package/picdem2_net/uart.c"
  2094 ;; Parameters:    Size  Location     Type
  2095 ;;		None
  2096 ;; Auto vars:     Size  Location     Type
  2097 ;;		None
  2098 ;; Return value:  Size  Location     Type
  2099 ;;		None               void
  2100 ;; Registers used:
  2101 ;;		wreg, status,2
  2102 ;; Tracked objects:
  2103 ;;		On entry : F/2
  2104 ;;		On exit  : F/2
  2105 ;;		Unchanged: F/0
  2106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2111 ;;Total ram usage:        0 bytes
  2112 ;; Hardware stack levels used:    1
  2113 ;; Hardware stack levels required when called:    3
  2114 ;; This function calls:
  2115 ;;		Nothing
  2116 ;; This function is called by:
  2117 ;;		_initHW
  2118 ;; This function uses a non-reentrant model
  2119 ;;
  2120                           
  2121                           	psect	text3
  2122  008B54                     __ptext3:
  2123                           	opt stack 0
  2124  008B54                     _uart_init:
  2125                           	opt stack 26
  2126                           
  2127                           ; BSR set to: 2
  2128                           ;uart.c: 58: TRISCbits.TRISC7 = 1;
  2129                           
  2130                           ;incstack = 0
  2131  008B54  8E94               	bsf	3988,7,c	;volatile
  2132                           
  2133                           ;uart.c: 59: TRISCbits.TRISC6 = 0;
  2134  008B56  9C94               	bcf	3988,6,c	;volatile
  2135                           
  2136                           ;uart.c: 62: BAUDCON1 = 0x00;
  2137  008B58  6A7E               	clrf	3966,c	;volatile
  2138                           
  2139                           ; BSR set to: 2
  2140                           ;uart.c: 69: SPBRG1 = 89;
  2141  008B5A  0E59               	movlw	89
  2142  008B5C  6EAF               	movwf	4015,c	;volatile
  2143                           
  2144                           ; BSR set to: 2
  2145                           ;uart.c: 70: BAUDCON1bits.BRG16 = 1;
  2146  008B5E  867E               	bsf	3966,3,c	;volatile
  2147                           
  2148                           ;uart.c: 71: TXSTA1 = 0x26;
  2149  008B60  0E26               	movlw	38
  2150  008B62  6EAC               	movwf	4012,c	;volatile
  2151                           
  2152                           ; BSR set to: 2
  2153                           ;uart.c: 73: CREN1 = 1;
  2154  008B64  88AB               	bsf	4011,4,c	;volatile
  2155                           
  2156                           ; BSR set to: 2
  2157                           ;uart.c: 74: SPEN1 = 1;
  2158  008B66  8EAB               	bsf	4011,7,c	;volatile
  2159                           
  2160                           ; BSR set to: 2
  2161  008B68  0C26               	retlw	38	;funcret
  2162  008B6A                     __end_of_uart_init:
  2163                           	opt stack 0
  2164                           tblptru	equ	0xFF8
  2165                           tblptrh	equ	0xFF7
  2166                           tblptrl	equ	0xFF6
  2167                           tablat	equ	0xFF5
  2168                           intcon	equ	0xFF2
  2169                           intcon2	equ	0xFF1
  2170                           postinc0	equ	0xFEE
  2171                           wreg	equ	0xFE8
  2172                           status	equ	0xFD8
  2173                           
  2174 ;; *************** function _spi_init *****************
  2175 ;; Defined at:
  2176 ;;		line 46 in file "../board_support_package/picdem2_net/mssp_spi_master.c"
  2177 ;; Parameters:    Size  Location     Type
  2178 ;;		None
  2179 ;; Auto vars:     Size  Location     Type
  2180 ;;		None
  2181 ;; Return value:  Size  Location     Type
  2182 ;;		None               void
  2183 ;; Registers used:
  2184 ;;		wreg, status,2
  2185 ;; Tracked objects:
  2186 ;;		On entry : F/2
  2187 ;;		On exit  : F/2
  2188 ;;		Unchanged: F/0
  2189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2194 ;;Total ram usage:        0 bytes
  2195 ;; Hardware stack levels used:    1
  2196 ;; Hardware stack levels required when called:    3
  2197 ;; This function calls:
  2198 ;;		Nothing
  2199 ;; This function is called by:
  2200 ;;		_initHW
  2201 ;; This function uses a non-reentrant model
  2202 ;;
  2203                           
  2204                           	psect	text4
  2205  008BEA                     __ptext4:
  2206                           	opt stack 0
  2207  008BEA                     _spi_init:
  2208                           	opt stack 26
  2209                           
  2210                           ; BSR set to: 2
  2211                           ;mssp_spi_master.c: 48: SSP1STATbits.CKE = 1;
  2212                           
  2213                           ; BSR set to: 2
  2214                           ;incstack = 0
  2215  008BEA  8CC7               	bsf	4039,6,c	;volatile
  2216                           
  2217                           ;mssp_spi_master.c: 49: SSP1STATbits.SMP = 0;
  2218  008BEC  9EC7               	bcf	4039,7,c	;volatile
  2219                           
  2220                           ; BSR set to: 2
  2221                           ;mssp_spi_master.c: 51: SSP1CON1 = 0x01;
  2222  008BEE  0E01               	movlw	1
  2223  008BF0  6EC6               	movwf	4038,c	;volatile
  2224                           
  2225                           ; BSR set to: 2
  2226                           ;mssp_spi_master.c: 52: SSP1CON1bits.SSPEN = 1;
  2227  008BF2  8AC6               	bsf	4038,5,c	;volatile
  2228                           
  2229                           ; BSR set to: 2
  2230  008BF4  0C01               	retlw	1	;funcret
  2231  008BF6                     __end_of_spi_init:
  2232                           	opt stack 0
  2233                           tblptru	equ	0xFF8
  2234                           tblptrh	equ	0xFF7
  2235                           tblptrl	equ	0xFF6
  2236                           tablat	equ	0xFF5
  2237                           intcon	equ	0xFF2
  2238                           intcon2	equ	0xFF1
  2239                           postinc0	equ	0xFEE
  2240                           wreg	equ	0xFE8
  2241                           status	equ	0xFD8
  2242                           
  2243 ;; *************** function _rtcc_init *****************
  2244 ;; Defined at:
  2245 ;;		line 77 in file "../board_support_package/picdem2_net/rtcc.c"
  2246 ;; Parameters:    Size  Location     Type
  2247 ;;		None
  2248 ;; Auto vars:     Size  Location     Type
  2249 ;;		None
  2250 ;; Return value:  Size  Location     Type
  2251 ;;		None               void
  2252 ;; Registers used:
  2253 ;;		wreg, status,2
  2254 ;; Tracked objects:
  2255 ;;		On entry : F/2
  2256 ;;		On exit  : F/2
  2257 ;;		Unchanged: 0/0
  2258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2263 ;;Total ram usage:        0 bytes
  2264 ;; Hardware stack levels used:    1
  2265 ;; Hardware stack levels required when called:    3
  2266 ;; This function calls:
  2267 ;;		Nothing
  2268 ;; This function is called by:
  2269 ;;		_initHW
  2270 ;; This function uses a non-reentrant model
  2271 ;;
  2272                           
  2273                           	psect	text5
  2274  00865E                     __ptext5:
  2275                           	opt stack 0
  2276  00865E                     _rtcc_init:
  2277                           	opt stack 26
  2278                           
  2279                           ; BSR set to: 2
  2280                           ;rtcc.c: 79: TMR1CS = 1;
  2281                           
  2282                           ; BSR set to: 2
  2283                           ;incstack = 0
  2284  00865E  82CD               	bsf	4045,1,c	;volatile
  2285                           
  2286                           ;rtcc.c: 80: T1OSCEN = 1;
  2287  008660  86CD               	bsf	4045,3,c	;volatile
  2288                           
  2289                           ;rtcc.c: 81: T1CKPS0 = 0;
  2290  008662  98CD               	bcf	4045,4,c	;volatile
  2291                           
  2292                           ;rtcc.c: 82: T1CKPS1 = 0;
  2293  008664  9ACD               	bcf	4045,5,c	;volatile
  2294                           
  2295                           ;rtcc.c: 83: T1SYNC = 1;
  2296  008666  84CD               	bsf	4045,2,c	;volatile
  2297                           
  2298                           ;rtcc.c: 84: TMR1ON = 1;
  2299  008668  80CD               	bsf	4045,0,c	;volatile
  2300                           
  2301                           ; BSR set to: 2
  2302                           ;rtcc.c: 86: TMR1 = 32768UL;
  2303  00866A  0E80               	movlw	128
  2304  00866C  6ECF               	movwf	4047,c	;volatile
  2305  00866E  6ACE               	clrf	4046,c	;volatile
  2306                           
  2307                           ;rtcc.c: 87: deviceTime = 1293861600;
  2308  008670  0EE0               	movlw	224
  2309  008672  6FE4               	movwf	_deviceTime& (0+255),b	;volatile
  2310  008674  0EC2               	movlw	194
  2311  008676  6FE5               	movwf	(_deviceTime+1)& (0+255),b	;volatile
  2312  008678  0E1E               	movlw	30
  2313  00867A  6FE6               	movwf	(_deviceTime+2)& (0+255),b	;volatile
  2314  00867C  0E4D               	movlw	77
  2315  00867E  6FE7               	movwf	(_deviceTime+3)& (0+255),b	;volatile
  2316                           
  2317                           ;rtcc.c: 88: localTime = 1293861600 + 2208988800;
  2318  008680  0E60               	movlw	96
  2319  008682  6FE8               	movwf	_localTime& (0+255),b	;volatile
  2320  008684  0E41               	movlw	65
  2321  008686  6FE9               	movwf	(_localTime+1)& (0+255),b	;volatile
  2322  008688  0EC9               	movlw	201
  2323  00868A  6FEA               	movwf	(_localTime+2)& (0+255),b	;volatile
  2324  00868C  0ED0               	movlw	208
  2325  00868E  6FEB               	movwf	(_localTime+3)& (0+255),b	;volatile
  2326                           
  2327                           ; BSR set to: 2
  2328                           ;rtcc.c: 90: TMR1IP = 1;
  2329  008690  809F               	bsf	3999,0,c	;volatile
  2330                           
  2331                           ; BSR set to: 2
  2332                           ;rtcc.c: 91: TMR1IE = 1;
  2333  008692  809D               	bsf	3997,0,c	;volatile
  2334                           
  2335                           ; BSR set to: 2
  2336  008694  0CD0               	retlw	208	;funcret
  2337  008696                     __end_of_rtcc_init:
  2338                           	opt stack 0
  2339                           tblptru	equ	0xFF8
  2340                           tblptrh	equ	0xFF7
  2341                           tblptrl	equ	0xFF6
  2342                           tablat	equ	0xFF5
  2343                           intcon	equ	0xFF2
  2344                           intcon2	equ	0xFF1
  2345                           postinc0	equ	0xFEE
  2346                           wreg	equ	0xFE8
  2347                           status	equ	0xFD8
  2348                           
  2349 ;; *************** function _lcd_init *****************
  2350 ;; Defined at:
  2351 ;;		line 110 in file "../board_support_package/picdem2_net/lcd.c"
  2352 ;; Parameters:    Size  Location     Type
  2353 ;;		None
  2354 ;; Auto vars:     Size  Location     Type
  2355 ;;  y               2    0        volatile int 
  2356 ;;  x               2    0        volatile int 
  2357 ;; Return value:  Size  Location     Type
  2358 ;;		None               void
  2359 ;; Registers used:
  2360 ;;		wreg, cstack
  2361 ;; Tracked objects:
  2362 ;;		On entry : F/2
  2363 ;;		On exit  : 0/0
  2364 ;;		Unchanged: 0/0
  2365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2368 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2369 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2370 ;;Total ram usage:        1 bytes
  2371 ;; Hardware stack levels used:    1
  2372 ;; Hardware stack levels required when called:    4
  2373 ;; This function calls:
  2374 ;;		_lcd_busy
  2375 ;;		_lcd_init_pins
  2376 ;;		_lcd_write_ctrl
  2377 ;; This function is called by:
  2378 ;;		_initHW
  2379 ;; This function uses a non-reentrant model
  2380 ;;
  2381                           
  2382                           	psect	text6
  2383  007714                     __ptext6:
  2384                           	opt stack 0
  2385  007714                     _lcd_init:
  2386                           	opt stack 25
  2387                           
  2388                           ; BSR set to: 2
  2389                           ;lcd.c: 112: volatile int x,y;
  2390                           ;lcd.c: 114: lcd_init_pins();
  2391                           
  2392                           ; BSR set to: 2
  2393                           ;incstack = 0
  2394  007714  EC0D  F046         	call	_lcd_init_pins	;wreg free
  2395                           
  2396                           ; BSR set to: 2
  2397                           ;lcd.c: 116: _delay((unsigned long)((10)*(41666667UL/4000.0)));
  2398  007718  0E88               	movlw	136
  2399  00771A  6E03               	movwf	??_lcd_init& (0+255),c
  2400  00771C  0E46               	movlw	70
  2401  00771E                     u16157:
  2402  00771E  2EE8               	decfsz	wreg,f,c
  2403  007720  D7FE               	goto	u16157
  2404  007722  2E03               	decfsz	??_lcd_init& (0+255),f,c
  2405  007724  D7FC               	goto	u16157
  2406  007726  D000               	nop2	
  2407                           
  2408                           ;lcd.c: 117: _delay((unsigned long)((10)*(41666667UL/4000.0)));
  2409  007728  0E88               	movlw	136
  2410  00772A  6E03               	movwf	??_lcd_init& (0+255),c
  2411  00772C  0E46               	movlw	70
  2412  00772E                     u16167:
  2413  00772E  2EE8               	decfsz	wreg,f,c
  2414  007730  D7FE               	goto	u16167
  2415  007732  2E03               	decfsz	??_lcd_init& (0+255),f,c
  2416  007734  D7FC               	goto	u16167
  2417  007736  D000               	nop2	
  2418                           
  2419                           ;lcd.c: 118: _delay((unsigned long)((10)*(41666667UL/4000.0)));
  2420  007738  0E88               	movlw	136
  2421  00773A  6E03               	movwf	??_lcd_init& (0+255),c
  2422  00773C  0E46               	movlw	70
  2423  00773E                     u16177:
  2424  00773E  2EE8               	decfsz	wreg,f,c
  2425  007740  D7FE               	goto	u16177
  2426  007742  2E03               	decfsz	??_lcd_init& (0+255),f,c
  2427  007744  D7FC               	goto	u16177
  2428  007746  D000               	nop2	
  2429                           
  2430                           ;lcd.c: 119: _delay((unsigned long)((10)*(41666667UL/4000.0)));
  2431  007748  0E88               	movlw	136
  2432  00774A  6E03               	movwf	??_lcd_init& (0+255),c
  2433  00774C  0E46               	movlw	70
  2434  00774E                     u16187:
  2435  00774E  2EE8               	decfsz	wreg,f,c
  2436  007750  D7FE               	goto	u16187
  2437  007752  2E03               	decfsz	??_lcd_init& (0+255),f,c
  2438  007754  D7FC               	goto	u16187
  2439  007756  D000               	nop2	
  2440                           
  2441                           ;lcd.c: 122: lcd_write_ctrl(0x03);
  2442  007758  0E03               	movlw	3
  2443  00775A  EC23  F045         	call	_lcd_write_ctrl
  2444                           
  2445                           ;lcd.c: 123: _delay((unsigned long)((4)*(41666667UL/4000.0)));
  2446  00775E  0E37               	movlw	55
  2447  007760  6E03               	movwf	??_lcd_init& (0+255),c
  2448  007762  0E1B               	movlw	27
  2449  007764                     u16197:
  2450  007764  2EE8               	decfsz	wreg,f,c
  2451  007766  D7FE               	goto	u16197
  2452  007768  2E03               	decfsz	??_lcd_init& (0+255),f,c
  2453  00776A  D7FC               	goto	u16197
  2454  00776C  F000               	nop	
  2455                           
  2456                           ;lcd.c: 124: lcd_write_ctrl(0x03);
  2457  00776E  0E03               	movlw	3
  2458  007770  EC23  F045         	call	_lcd_write_ctrl
  2459                           
  2460                           ;lcd.c: 125: _delay((unsigned long)((4)*(41666667UL/4000.0)));
  2461  007774  0E37               	movlw	55
  2462  007776  6E03               	movwf	??_lcd_init& (0+255),c
  2463  007778  0E1B               	movlw	27
  2464  00777A                     u16207:
  2465  00777A  2EE8               	decfsz	wreg,f,c
  2466  00777C  D7FE               	goto	u16207
  2467  00777E  2E03               	decfsz	??_lcd_init& (0+255),f,c
  2468  007780  D7FC               	goto	u16207
  2469  007782  F000               	nop	
  2470                           
  2471                           ;lcd.c: 126: lcd_write_ctrl(0x03);
  2472  007784  0E03               	movlw	3
  2473  007786  EC23  F045         	call	_lcd_write_ctrl
  2474                           
  2475                           ;lcd.c: 129: lcd_write_ctrl(0x38);
  2476  00778A  0E38               	movlw	56
  2477  00778C  EC23  F045         	call	_lcd_write_ctrl
  2478                           
  2479                           ;lcd.c: 131: lcd_busy();
  2480  007790  EC12  F046         	call	_lcd_busy	;wreg free
  2481                           
  2482                           ;lcd.c: 132: lcd_write_ctrl(0x0C);
  2483  007794  0E0C               	movlw	12
  2484  007796  EC23  F045         	call	_lcd_write_ctrl
  2485                           
  2486                           ;lcd.c: 133: lcd_busy();
  2487  00779A  EC12  F046         	call	_lcd_busy	;wreg free
  2488                           
  2489                           ;lcd.c: 134: lcd_write_ctrl(0x01);
  2490  00779E  0E01               	movlw	1
  2491  0077A0  EC23  F045         	call	_lcd_write_ctrl
  2492                           
  2493                           ;lcd.c: 135: lcd_busy();
  2494  0077A4  EC12  F046         	call	_lcd_busy	;wreg free
  2495                           
  2496                           ;lcd.c: 138: lcd_write_ctrl(0x01);
  2497  0077A8  0E01               	movlw	1
  2498  0077AA  EC23  F045         	call	_lcd_write_ctrl
  2499                           
  2500                           ;lcd.c: 139: _delay((unsigned long)((2)*(41666667UL/4000.0)));
  2501  0077AE  0E1C               	movlw	28
  2502  0077B0  6E03               	movwf	??_lcd_init& (0+255),c
  2503  0077B2  0E0D               	movlw	13
  2504  0077B4                     u16217:
  2505  0077B4  2EE8               	decfsz	wreg,f,c
  2506  0077B6  D7FE               	goto	u16217
  2507  0077B8  2E03               	decfsz	??_lcd_init& (0+255),f,c
  2508  0077BA  D7FC               	goto	u16217
  2509  0077BC  0012               	return		;funcret
  2510  0077BE                     __end_of_lcd_init:
  2511                           	opt stack 0
  2512                           tblptru	equ	0xFF8
  2513                           tblptrh	equ	0xFF7
  2514                           tblptrl	equ	0xFF6
  2515                           tablat	equ	0xFF5
  2516                           intcon	equ	0xFF2
  2517                           intcon2	equ	0xFF1
  2518                           postinc0	equ	0xFEE
  2519                           wreg	equ	0xFE8
  2520                           status	equ	0xFD8
  2521                           
  2522 ;; *************** function _lcd_init_pins *****************
  2523 ;; Defined at:
  2524 ;;		line 50 in file "../board_support_package/picdem2_net/lcd_hw.c"
  2525 ;; Parameters:    Size  Location     Type
  2526 ;;		None
  2527 ;; Auto vars:     Size  Location     Type
  2528 ;;		None
  2529 ;; Return value:  Size  Location     Type
  2530 ;;		None               void
  2531 ;; Registers used:
  2532 ;;		None
  2533 ;; Tracked objects:
  2534 ;;		On entry : F/2
  2535 ;;		On exit  : F/2
  2536 ;;		Unchanged: F/0
  2537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2542 ;;Total ram usage:        0 bytes
  2543 ;; Hardware stack levels used:    1
  2544 ;; Hardware stack levels required when called:    3
  2545 ;; This function calls:
  2546 ;;		Nothing
  2547 ;; This function is called by:
  2548 ;;		_lcd_init
  2549 ;; This function uses a non-reentrant model
  2550 ;;
  2551                           
  2552                           	psect	text7
  2553  008C1A                     __ptext7:
  2554                           	opt stack 0
  2555  008C1A                     _lcd_init_pins:
  2556                           	opt stack 25
  2557                           
  2558                           ; BSR set to: 2
  2559                           ;lcd_hw.c: 52: TRISE = 0;
  2560                           
  2561                           ;incstack = 0
  2562  008C1A  6A96               	clrf	3990,c	;volatile
  2563                           
  2564                           ;lcd_hw.c: 53: TRISH = 0x00;
  2565  008C1C  6A99               	clrf	3993,c	;volatile
  2566                           
  2567                           ;lcd_hw.c: 54: LATE = 0;
  2568  008C1E  6A8D               	clrf	3981,c	;volatile
  2569                           
  2570                           ;lcd_hw.c: 55: LATH = 0;
  2571  008C20  6A90               	clrf	3984,c	;volatile
  2572                           
  2573                           ; BSR set to: 2
  2574  008C22  0012               	return		;funcret
  2575  008C24                     __end_of_lcd_init_pins:
  2576                           	opt stack 0
  2577                           tblptru	equ	0xFF8
  2578                           tblptrh	equ	0xFF7
  2579                           tblptrl	equ	0xFF6
  2580                           tablat	equ	0xFF5
  2581                           intcon	equ	0xFF2
  2582                           intcon2	equ	0xFF1
  2583                           postinc0	equ	0xFEE
  2584                           wreg	equ	0xFE8
  2585                           status	equ	0xFD8
  2586                           
  2587 ;; *************** function _LED_Init *****************
  2588 ;; Defined at:
  2589 ;;		line 55 in file "../board_support_package/picdem2_net/led_driver.c"
  2590 ;; Parameters:    Size  Location     Type
  2591 ;;		None
  2592 ;; Auto vars:     Size  Location     Type
  2593 ;;  x               1    1[COMRAM] unsigned char 
  2594 ;; Return value:  Size  Location     Type
  2595 ;;		None               void
  2596 ;; Registers used:
  2597 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2598 ;; Tracked objects:
  2599 ;;		On entry : 0/2
  2600 ;;		On exit  : 0/0
  2601 ;;		Unchanged: 0/0
  2602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2604 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2606 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2607 ;;Total ram usage:        1 bytes
  2608 ;; Hardware stack levels used:    1
  2609 ;; Hardware stack levels required when called:    3
  2610 ;; This function calls:
  2611 ;;		Nothing
  2612 ;; This function is called by:
  2613 ;;		_initHW
  2614 ;; This function uses a non-reentrant model
  2615 ;;
  2616                           
  2617                           	psect	text8
  2618  008A06                     __ptext8:
  2619                           	opt stack 0
  2620  008A06                     _LED_Init:
  2621                           	opt stack 26
  2622                           
  2623                           ;led_driver.c: 57: uint8_t x = 0;
  2624                           
  2625                           ; BSR set to: 2
  2626                           ;incstack = 0
  2627  008A06  6A02               	clrf	LED_Init@x,c
  2628                           
  2629                           ;led_driver.c: 58: for(x = 0; x < 8; x++)
  2630  008A08  6A02               	clrf	LED_Init@x,c
  2631  008A0A                     l9966:
  2632                           
  2633                           ;led_driver.c: 59: {
  2634                           ;led_driver.c: 60: led_values[x].value = 0;
  2635  008A0A  5002               	movf	LED_Init@x,w,c
  2636  008A0C  0D02               	mullw	2
  2637  008A0E  0E00               	movlw	low _led_values
  2638  008A10  24F3               	addwf	prodl,w,c
  2639  008A12  6ED9               	movwf	fsr2l,c
  2640  008A14  0E02               	movlw	high _led_values
  2641  008A16  20F4               	addwfc	prodh,w,c
  2642  008A18  6EDA               	movwf	fsr2h,c
  2643  008A1A  6ADF               	clrf	indf2,c
  2644  008A1C  2A02               	incf	LED_Init@x,f,c
  2645  008A1E  0E07               	movlw	7
  2646  008A20  6402               	cpfsgt	LED_Init@x,c
  2647  008A22  D7F3               	goto	l9966
  2648  008A24  0C07               	retlw	7
  2649  008A26                     __end_of_LED_Init:
  2650                           	opt stack 0
  2651                           tblptru	equ	0xFF8
  2652                           tblptrh	equ	0xFF7
  2653                           tblptrl	equ	0xFF6
  2654                           tablat	equ	0xFF5
  2655                           prodh	equ	0xFF4
  2656                           prodl	equ	0xFF3
  2657                           intcon	equ	0xFF2
  2658                           intcon2	equ	0xFF1
  2659                           postinc0	equ	0xFEE
  2660                           wreg	equ	0xFE8
  2661                           indf2	equ	0xFDF
  2662                           fsr2h	equ	0xFDA
  2663                           fsr2l	equ	0xFD9
  2664                           status	equ	0xFD8
  2665                           
  2666 ;; *************** function _ADC_Initialize *****************
  2667 ;; Defined at:
  2668 ;;		line 55 in file "../board_support_package/picdem2_net/adc.c"
  2669 ;; Parameters:    Size  Location     Type
  2670 ;;		None
  2671 ;; Auto vars:     Size  Location     Type
  2672 ;;		None
  2673 ;; Return value:  Size  Location     Type
  2674 ;;		None               void
  2675 ;; Registers used:
  2676 ;;		wreg, status,2
  2677 ;; Tracked objects:
  2678 ;;		On entry : 0/2
  2679 ;;		On exit  : 0/0
  2680 ;;		Unchanged: 0/0
  2681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2686 ;;Total ram usage:        0 bytes
  2687 ;; Hardware stack levels used:    1
  2688 ;; Hardware stack levels required when called:    3
  2689 ;; This function calls:
  2690 ;;		Nothing
  2691 ;; This function is called by:
  2692 ;;		_initHW
  2693 ;; This function uses a non-reentrant model
  2694 ;;
  2695                           
  2696                           	psect	text9
  2697  008B6A                     __ptext9:
  2698                           	opt stack 0
  2699  008B6A                     _ADC_Initialize:
  2700                           	opt stack 26
  2701                           
  2702                           ;adc.c: 59: TRISAbits.RA2 = 1;
  2703                           
  2704                           ;incstack = 0
  2705  008B6A  8492               	bsf	3986,2,c	;volatile
  2706                           
  2707                           ;adc.c: 60: TRISAbits.RA3 = 1;
  2708  008B6C  8692               	bsf	3986,3,c	;volatile
  2709                           
  2710                           ;adc.c: 63: ADCON0 = 0x0D;
  2711  008B6E  0E0D               	movlw	13
  2712  008B70  6EC2               	movwf	4034,c	;volatile
  2713                           
  2714                           ;adc.c: 66: ADCON1 = 0x06;
  2715  008B72  0E06               	movlw	6
  2716  008B74  6EC1               	movwf	4033,c	;volatile
  2717                           
  2718                           ;adc.c: 69: ADCON2 = 0xBE;
  2719  008B76  0EBE               	movlw	190
  2720  008B78  6EC0               	movwf	4032,c	;volatile
  2721                           
  2722                           ;adc.c: 72: ADRESL = 0x00;
  2723  008B7A  6AC3               	clrf	4035,c	;volatile
  2724                           
  2725                           ;adc.c: 75: ADRESH = 0x00;
  2726  008B7C  6AC4               	clrf	4036,c	;volatile
  2727  008B7E  0012               	return		;funcret
  2728  008B80                     __end_of_ADC_Initialize:
  2729                           	opt stack 0
  2730                           tblptru	equ	0xFF8
  2731                           tblptrh	equ	0xFF7
  2732                           tblptrl	equ	0xFF6
  2733                           tablat	equ	0xFF5
  2734                           prodh	equ	0xFF4
  2735                           prodl	equ	0xFF3
  2736                           intcon	equ	0xFF2
  2737                           intcon2	equ	0xFF1
  2738                           postinc0	equ	0xFEE
  2739                           wreg	equ	0xFE8
  2740                           indf2	equ	0xFDF
  2741                           fsr2h	equ	0xFDA
  2742                           fsr2l	equ	0xFD9
  2743                           status	equ	0xFD8
  2744                           
  2745 ;; *************** function _SYSLOG_Write *****************
  2746 ;; Defined at:
  2747 ;;		line 50 in file "../../TCPIP Library/source/syslog.c"
  2748 ;; Parameters:    Size  Location     Type
  2749 ;;  message         2   43[COMRAM] PTR const unsigned char 
  2750 ;;		 -> main@str(32), STR_7(13), STR_6(17), 
  2751 ;; Auto vars:     Size  Location     Type
  2752 ;;  t               2   45[COMRAM] unsigned int 
  2753 ;; Return value:  Size  Location     Type
  2754 ;;		None               void
  2755 ;; Registers used:
  2756 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2757 ;; Tracked objects:
  2758 ;;		On entry : 0/2
  2759 ;;		On exit  : 0/0
  2760 ;;		Unchanged: 0/0
  2761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2762 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2763 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2765 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2766 ;;Total ram usage:        4 bytes
  2767 ;; Hardware stack levels used:    1
  2768 ;; Hardware stack levels required when called:    6
  2769 ;; This function calls:
  2770 ;;		_printf
  2771 ;;		_time
  2772 ;; This function is called by:
  2773 ;;		_main
  2774 ;; This function uses a non-reentrant model
  2775 ;;
  2776                           
  2777                           	psect	text10
  2778  00890A                     __ptext10:
  2779                           	opt stack 0
  2780  00890A                     _SYSLOG_Write:
  2781                           	opt stack 24
  2782                           
  2783                           ;syslog.c: 52: unsigned int t = (unsigned int) time(0);
  2784                           
  2785                           ;incstack = 0
  2786  00890A  6A02               	clrf	time@t,c
  2787  00890C  6A03               	clrf	time@t+1,c
  2788  00890E  EC36  F040         	call	_time	;wreg free
  2789  008912  C002  F02E         	movff	?_time,SYSLOG_Write@t
  2790  008916  C003  F02F         	movff	?_time+1,SYSLOG_Write@t+1
  2791                           
  2792                           ;syslog.c: 53: printf("%u : %s\r\n",t,message);
  2793  00891A  C02E  F021         	movff	SYSLOG_Write@t,?_printf
  2794  00891E  C02F  F022         	movff	SYSLOG_Write@t+1,?_printf+1
  2795  008922  C02C  F023         	movff	SYSLOG_Write@message,?_printf+2
  2796  008926  C02D  F024         	movff	SYSLOG_Write@message+1,?_printf+3
  2797  00892A  0ECD               	movlw	STR_3& (0+255)
  2798  00892C  EFBE  F044         	goto	_printf
  2799  008930                     __end_of_SYSLOG_Write:
  2800                           	opt stack 0
  2801                           tblptru	equ	0xFF8
  2802                           tblptrh	equ	0xFF7
  2803                           tblptrl	equ	0xFF6
  2804                           tablat	equ	0xFF5
  2805                           prodh	equ	0xFF4
  2806                           prodl	equ	0xFF3
  2807                           intcon	equ	0xFF2
  2808                           intcon2	equ	0xFF1
  2809                           postinc0	equ	0xFEE
  2810                           wreg	equ	0xFE8
  2811                           indf2	equ	0xFDF
  2812                           fsr2h	equ	0xFDA
  2813                           fsr2l	equ	0xFD9
  2814                           status	equ	0xFD8
  2815                           
  2816 ;; *************** function _SYSLOG_Init *****************
  2817 ;; Defined at:
  2818 ;;		line 43 in file "../../TCPIP Library/source/syslog.c"
  2819 ;; Parameters:    Size  Location     Type
  2820 ;;		None
  2821 ;; Auto vars:     Size  Location     Type
  2822 ;;  t               4   43[COMRAM] unsigned long 
  2823 ;; Return value:  Size  Location     Type
  2824 ;;		None               void
  2825 ;; Registers used:
  2826 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2827 ;; Tracked objects:
  2828 ;;		On entry : F/2
  2829 ;;		On exit  : 0/0
  2830 ;;		Unchanged: 0/0
  2831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2833 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2835 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2836 ;;Total ram usage:        4 bytes
  2837 ;; Hardware stack levels used:    1
  2838 ;; Hardware stack levels required when called:    6
  2839 ;; This function calls:
  2840 ;;		_printf
  2841 ;;		_time
  2842 ;; This function is called by:
  2843 ;;		_main
  2844 ;; This function uses a non-reentrant model
  2845 ;;
  2846                           
  2847                           	psect	text11
  2848  00872E                     __ptext11:
  2849                           	opt stack 0
  2850  00872E                     _SYSLOG_Init:
  2851                           	opt stack 24
  2852                           
  2853                           ; BSR set to: 2
  2854                           ;syslog.c: 45: unsigned long t = time(0);
  2855                           
  2856                           ;incstack = 0
  2857  00872E  6A02               	clrf	time@t,c
  2858  008730  6A03               	clrf	time@t+1,c
  2859  008732  EC36  F040         	call	_time	;wreg free
  2860  008736  C002  F02C         	movff	?_time,SYSLOG_Init@t
  2861  00873A  C003  F02D         	movff	?_time+1,SYSLOG_Init@t+1
  2862  00873E  C004  F02E         	movff	?_time+2,SYSLOG_Init@t+2
  2863  008742  C005  F02F         	movff	?_time+3,SYSLOG_Init@t+3
  2864                           
  2865                           ;syslog.c: 47: printf("\r\n\r\nStarting Syslog at %u\r\n",t);
  2866  008746  C02C  F021         	movff	SYSLOG_Init@t,?_printf
  2867  00874A  C02D  F022         	movff	SYSLOG_Init@t+1,?_printf+1
  2868  00874E  C02E  F023         	movff	SYSLOG_Init@t+2,?_printf+2
  2869  008752  C02F  F024         	movff	SYSLOG_Init@t+3,?_printf+3
  2870  008756  0E76               	movlw	STR_2& (0+255)
  2871  008758  EFBE  F044         	goto	_printf
  2872  00875C                     __end_of_SYSLOG_Init:
  2873                           	opt stack 0
  2874                           tblptru	equ	0xFF8
  2875                           tblptrh	equ	0xFF7
  2876                           tblptrl	equ	0xFF6
  2877                           tablat	equ	0xFF5
  2878                           prodh	equ	0xFF4
  2879                           prodl	equ	0xFF3
  2880                           intcon	equ	0xFF2
  2881                           intcon2	equ	0xFF1
  2882                           postinc0	equ	0xFEE
  2883                           wreg	equ	0xFE8
  2884                           indf2	equ	0xFDF
  2885                           fsr2h	equ	0xFDA
  2886                           fsr2l	equ	0xFD9
  2887                           status	equ	0xFD8
  2888                           
  2889 ;; *************** function _printf *****************
  2890 ;; Defined at:
  2891 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\printf.c"
  2892 ;; Parameters:    Size  Location     Type
  2893 ;;  f               1    wreg     PTR const unsigned char 
  2894 ;;		 -> STR_3(10), STR_2(28), 
  2895 ;; Auto vars:     Size  Location     Type
  2896 ;;  f               1   36[COMRAM] PTR const unsigned char 
  2897 ;;		 -> STR_3(10), STR_2(28), 
  2898 ;;  pb              5   38[COMRAM] struct __prbuf
  2899 ;;  ap              1   37[COMRAM] PTR void [1]
  2900 ;;		 -> ?_sprintf(2), ?_printf(2), 
  2901 ;; Return value:  Size  Location     Type
  2902 ;;                  2   32[COMRAM] int 
  2903 ;; Registers used:
  2904 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2905 ;; Tracked objects:
  2906 ;;		On entry : 0/2
  2907 ;;		On exit  : 0/0
  2908 ;;		Unchanged: 0/0
  2909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2910 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2911 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2913 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2914 ;;Total ram usage:       11 bytes
  2915 ;; Hardware stack levels used:    1
  2916 ;; Hardware stack levels required when called:    5
  2917 ;; This function calls:
  2918 ;;		__doprnt
  2919 ;; This function is called by:
  2920 ;;		_SYSLOG_Init
  2921 ;;		_SYSLOG_Write
  2922 ;; This function uses a non-reentrant model
  2923 ;;
  2924                           
  2925                           	psect	text12
  2926  00897C                     __ptext12:
  2927                           	opt stack 0
  2928  00897C                     _printf:
  2929                           	opt stack 24
  2930                           
  2931                           ;incstack = 0
  2932                           ;printf@f stored from wreg
  2933  00897C  6E25               	movwf	printf@f,c
  2934  00897E  6A27               	clrf	printf@pb,c
  2935  008980  6A28               	clrf	printf@pb+1,c
  2936  008982  0EF0               	movlw	low _putch
  2937  008984  6E29               	movwf	printf@pb+2,c
  2938  008986  0E8A               	movlw	high _putch
  2939  008988  6E2A               	movwf	printf@pb+3,c
  2940  00898A  0E00               	movlw	low (_putch shr (0+16))
  2941  00898C  6E2B               	movwf	printf@pb+4,c
  2942  00898E  0E21               	movlw	low ?_printf
  2943  008990  6E26               	movwf	printf@ap,c
  2944                           
  2945                           ;	Return value of _printf is never used
  2946  008992  C025  F00E         	movff	printf@f,__doprnt@f
  2947  008996  0E26               	movlw	low printf@ap
  2948  008998  6E0F               	movwf	__doprnt@ap,c
  2949  00899A  0E27               	movlw	printf@pb& (0+255)
  2950  00899C  EF0D  F023         	goto	__doprnt
  2951  0089A0                     __end_of_printf:
  2952                           	opt stack 0
  2953                           tblptru	equ	0xFF8
  2954                           tblptrh	equ	0xFF7
  2955                           tblptrl	equ	0xFF6
  2956                           tablat	equ	0xFF5
  2957                           prodh	equ	0xFF4
  2958                           prodl	equ	0xFF3
  2959                           intcon	equ	0xFF2
  2960                           intcon2	equ	0xFF1
  2961                           postinc0	equ	0xFEE
  2962                           wreg	equ	0xFE8
  2963                           indf2	equ	0xFDF
  2964                           fsr2h	equ	0xFDA
  2965                           fsr2l	equ	0xFD9
  2966                           status	equ	0xFD8
  2967                           
  2968 ;; *************** function _Network_WaitForLink *****************
  2969 ;; Defined at:
  2970 ;;		line 76 in file "../../TCPIP Library/source/network.c"
  2971 ;; Parameters:    Size  Location     Type
  2972 ;;		None
  2973 ;; Auto vars:     Size  Location     Type
  2974 ;;		None
  2975 ;; Return value:  Size  Location     Type
  2976 ;;		None               void
  2977 ;; Registers used:
  2978 ;;		wreg, status,2, status,0, cstack
  2979 ;; Tracked objects:
  2980 ;;		On entry : 0/2
  2981 ;;		On exit  : 0/0
  2982 ;;		Unchanged: 0/0
  2983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2988 ;;Total ram usage:        0 bytes
  2989 ;; Hardware stack levels used:    1
  2990 ;; Hardware stack levels required when called:    8
  2991 ;; This function calls:
  2992 ;;		_ETH_CheckLinkUp
  2993 ;; This function is called by:
  2994 ;;		_main
  2995 ;; This function uses a non-reentrant model
  2996 ;;
  2997                           
  2998                           	psect	text13
  2999  008BC0                     __ptext13:
  3000                           	opt stack 0
  3001  008BC0                     _Network_WaitForLink:
  3002                           	opt stack 22
  3003                           
  3004                           ;network.c: 78: while(!ETH_CheckLinkUp()) __nop();
  3005                           
  3006                           ;incstack = 0
  3007  008BC0  D001               	goto	l10462
  3008  008BC2                     l1108:
  3009  008BC2  F000               	nop	
  3010  008BC4                     l10462:
  3011  008BC4  EC65  F043         	call	_ETH_CheckLinkUp	;wreg free
  3012  008BC8  0900               	iorlw	0
  3013  008BCA  E0FB               	bz	l1108
  3014  008BCC  0012               	return		;funcret
  3015  008BCE                     __end_of_Network_WaitForLink:
  3016                           	opt stack 0
  3017                           tblptru	equ	0xFF8
  3018                           tblptrh	equ	0xFF7
  3019                           tblptrl	equ	0xFF6
  3020                           tablat	equ	0xFF5
  3021                           prodh	equ	0xFF4
  3022                           prodl	equ	0xFF3
  3023                           intcon	equ	0xFF2
  3024                           intcon2	equ	0xFF1
  3025                           postinc0	equ	0xFEE
  3026                           wreg	equ	0xFE8
  3027                           indf2	equ	0xFDF
  3028                           fsr2h	equ	0xFDA
  3029                           fsr2l	equ	0xFD9
  3030                           status	equ	0xFD8
  3031                           
  3032 ;; *************** function _Network_Manage *****************
  3033 ;; Defined at:
  3034 ;;		line 81 in file "../../TCPIP Library/source/network.c"
  3035 ;; Parameters:    Size  Location     Type
  3036 ;;		None
  3037 ;; Auto vars:     Size  Location     Type
  3038 ;;  now             4  127[BANK1 ] long 
  3039 ;; Return value:  Size  Location     Type
  3040 ;;		None               void
  3041 ;; Registers used:
  3042 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  3043 ;; Tracked objects:
  3044 ;;		On entry : 0/2
  3045 ;;		On exit  : E/0
  3046 ;;		Unchanged: 0/0
  3047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3049 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3050 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3051 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3052 ;;Total ram usage:        5 bytes
  3053 ;; Hardware stack levels used:    1
  3054 ;; Hardware stack levels required when called:   15
  3055 ;; This function calls:
  3056 ;;		_ARPV4_Update
  3057 ;;		_DHCP_Manage
  3058 ;;		_ETH_EventHandler
  3059 ;;		_Network_Read
  3060 ;;		_TCP_Update
  3061 ;;		_time
  3062 ;; This function is called by:
  3063 ;;		_main
  3064 ;; This function uses a non-reentrant model
  3065 ;;
  3066                           
  3067                           	psect	text14
  3068  007ADE                     __ptext14:
  3069                           	opt stack 0
  3070  007ADE                     _Network_Manage:
  3071                           	opt stack 15
  3072                           
  3073                           ;network.c: 83: time_t now;
  3074                           ;network.c: 84: static time_t nowPv = 0;
  3075                           ;network.c: 86: ETH_EventHandler();
  3076                           
  3077                           ;incstack = 0
  3078  007ADE  EC33  F03C         	call	_ETH_EventHandler	;wreg free
  3079                           
  3080                           ;network.c: 87: Network_Read();
  3081  007AE2  EC34  F03B         	call	_Network_Read	;wreg free
  3082                           
  3083                           ;network.c: 90: time(&now);
  3084  007AE6  0E7F               	movlw	low Network_Manage@now
  3085  007AE8  6E02               	movwf	time@t,c
  3086  007AEA  0E01               	movlw	high Network_Manage@now
  3087  007AEC  6E03               	movwf	time@t+1,c
  3088  007AEE  EC36  F040         	call	_time	;wreg free
  3089                           
  3090                           ;network.c: 91: if(now >= arpTimer)
  3091  007AF2  0102               	movlb	2	; () banked
  3092  007AF4  51B3               	movf	_arpTimer& (0+255),w,b
  3093  007AF6  0101               	movlb	1	; () banked
  3094  007AF8  5D7F               	subwf	Network_Manage@now& (0+255),w,b
  3095  007AFA  0102               	movlb	2	; () banked
  3096  007AFC  51B4               	movf	(_arpTimer+1)& (0+255),w,b
  3097  007AFE  0101               	movlb	1	; () banked
  3098  007B00  5980               	subwfb	(Network_Manage@now+1)& (0+255),w,b
  3099  007B02  0102               	movlb	2	; () banked
  3100  007B04  51B5               	movf	(_arpTimer+2)& (0+255),w,b
  3101  007B06  0101               	movlb	1	; () banked
  3102  007B08  5981               	subwfb	(Network_Manage@now+2)& (0+255),w,b
  3103  007B0A  5182               	movf	(Network_Manage@now+3)& (0+255),w,b
  3104  007B0C  0A80               	xorlw	128
  3105  007B0E  6F7E               	movwf	??_Network_Manage& (0+255),b
  3106  007B10  0102               	movlb	2	; () banked
  3107  007B12  51B6               	movf	(_arpTimer+3)& (0+255),w,b
  3108  007B14  0A80               	xorlw	128
  3109  007B16  0101               	movlb	1	; () banked
  3110  007B18  597E               	subwfb	??_Network_Manage& (0+255),w,b
  3111  007B1A  E309               	bnc	l10476
  3112                           
  3113                           ; BSR set to: 1
  3114                           ;network.c: 92: {
  3115                           ;network.c: 93: ARPV4_Update();
  3116  007B1C  EC1E  F044         	call	_ARPV4_Update	;wreg free
  3117                           
  3118                           ; BSR set to: 1
  3119                           ;network.c: 94: arpTimer += 10;
  3120  007B20  0E0A               	movlw	10
  3121  007B22  0102               	movlb	2	; () banked
  3122  007B24  27B3               	addwf	_arpTimer& (0+255),f,b
  3123  007B26  0E00               	movlw	0
  3124  007B28  23B4               	addwfc	(_arpTimer+1)& (0+255),f,b
  3125  007B2A  23B5               	addwfc	(_arpTimer+2)& (0+255),f,b
  3126  007B2C  23B6               	addwfc	(_arpTimer+3)& (0+255),f,b
  3127  007B2E                     l10476:
  3128                           
  3129                           ;network.c: 95: }
  3130                           ;network.c: 96: if(now > nowPv)
  3131  007B2E  0101               	movlb	1	; () banked
  3132  007B30  517F               	movf	Network_Manage@now& (0+255),w,b
  3133  007B32  0102               	movlb	2	; () banked
  3134  007B34  5D22               	subwf	Network_Manage@nowPv& (0+255),w,b
  3135  007B36  0101               	movlb	1	; () banked
  3136  007B38  5180               	movf	(Network_Manage@now+1)& (0+255),w,b
  3137  007B3A  0102               	movlb	2	; () banked
  3138  007B3C  5923               	subwfb	(Network_Manage@nowPv+1)& (0+255),w,b
  3139  007B3E  0101               	movlb	1	; () banked
  3140  007B40  5181               	movf	(Network_Manage@now+2)& (0+255),w,b
  3141  007B42  0102               	movlb	2	; () banked
  3142  007B44  5924               	subwfb	(Network_Manage@nowPv+2)& (0+255),w,b
  3143  007B46  5125               	movf	(Network_Manage@nowPv+3)& (0+255),w,b
  3144  007B48  0A80               	xorlw	128
  3145  007B4A  0101               	movlb	1	; () banked
  3146  007B4C  6F7E               	movwf	??_Network_Manage& (0+255),b
  3147  007B4E  5182               	movf	(Network_Manage@now+3)& (0+255),w,b
  3148  007B50  0A80               	xorlw	128
  3149  007B52  597E               	subwfb	??_Network_Manage& (0+255),w,b
  3150  007B54  E204               	bc	l10480
  3151                           
  3152                           ; BSR set to: 1
  3153                           ;network.c: 97: {
  3154                           ;network.c: 98: DHCP_Manage();
  3155  007B56  ECB8  F03D         	call	_DHCP_Manage	;wreg free
  3156                           
  3157                           ;network.c: 100: TCP_Update();
  3158  007B5A  ECBF  F02C         	call	_TCP_Update	;wreg free
  3159  007B5E                     l10480:
  3160                           
  3161                           ;network.c: 101: }
  3162                           ;network.c: 102: nowPv = now;
  3163  007B5E  C17F  F222         	movff	Network_Manage@now,Network_Manage@nowPv
  3164  007B62  C180  F223         	movff	Network_Manage@now+1,Network_Manage@nowPv+1
  3165  007B66  C181  F224         	movff	Network_Manage@now+2,Network_Manage@nowPv+2
  3166  007B6A  C182  F225         	movff	Network_Manage@now+3,Network_Manage@nowPv+3
  3167  007B6E  0012               	return		;funcret
  3168  007B70                     __end_of_Network_Manage:
  3169                           	opt stack 0
  3170                           tblptru	equ	0xFF8
  3171                           tblptrh	equ	0xFF7
  3172                           tblptrl	equ	0xFF6
  3173                           tablat	equ	0xFF5
  3174                           prodh	equ	0xFF4
  3175                           prodl	equ	0xFF3
  3176                           intcon	equ	0xFF2
  3177                           intcon2	equ	0xFF1
  3178                           postinc0	equ	0xFEE
  3179                           wreg	equ	0xFE8
  3180                           indf2	equ	0xFDF
  3181                           fsr2h	equ	0xFDA
  3182                           fsr2l	equ	0xFD9
  3183                           status	equ	0xFD8
  3184                           
  3185 ;; *************** function _TCP_Update *****************
  3186 ;; Defined at:
  3187 ;;		line 1417 in file "../../TCPIP Library/source/tcpv4.c"
  3188 ;; Parameters:    Size  Location     Type
  3189 ;;		None
  3190 ;; Auto vars:     Size  Location     Type
  3191 ;;  tcbPtr          2  126[BANK0 ] PTR struct .
  3192 ;;		 -> ?_sprintf(2), ?_printf(2), main@str(32), STR_7(13), 
  3193 ;;		 -> STR_6(17), DEMO_TCP_Client@txdataPort60(80), DEMO_TCP_Client@strTmp(17), DEMO_TCP_Client@rxdataPort60(50), 
  3194 ;;		 -> DEMO_TCP_Client@port60TCB(55), Network_Read@debug_str(80), NULL(0), 
  3195 ;;  count           2  124[BANK0 ] int 
  3196 ;; Return value:  Size  Location     Type
  3197 ;;		None               void
  3198 ;; Registers used:
  3199 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3200 ;; Tracked objects:
  3201 ;;		On entry : E/1
  3202 ;;		On exit  : F/0
  3203 ;;		Unchanged: 0/0
  3204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3206 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3207 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3208 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3209 ;;Total ram usage:       12 bytes
  3210 ;; Hardware stack levels used:    1
  3211 ;; Hardware stack levels required when called:   12
  3212 ;; This function calls:
  3213 ;;		_TCP_FiniteStateMachine
  3214 ;; This function is called by:
  3215 ;;		_Network_Manage
  3216 ;; This function uses a non-reentrant model
  3217 ;;
  3218                           
  3219                           	psect	text15
  3220  00597E                     __ptext15:
  3221                           	opt stack 0
  3222  00597E                     _TCP_Update:
  3223                           	opt stack 17
  3224                           
  3225                           ;tcpv4.c: 1421: int count = 0;
  3226                           
  3227                           ;incstack = 0
  3228  00597E  0100               	movlb	0	; () banked
  3229  005980  6BDC               	clrf	TCP_Update@count& (0+255),b
  3230  005982  6BDD               	clrf	(TCP_Update@count+1)& (0+255),b
  3231                           
  3232                           ; BSR set to: 0
  3233                           ;tcpv4.c: 1425: nextSequenceNumber++;
  3234  005984  0102               	movlb	2	; () banked
  3235  005986  2B2E               	incf	_nextSequenceNumber& (0+255),f,b
  3236  005988  0E00               	movlw	0
  3237  00598A  232F               	addwfc	(_nextSequenceNumber+1)& (0+255),f,b
  3238  00598C  2330               	addwfc	(_nextSequenceNumber+2)& (0+255),f,b
  3239  00598E  2331               	addwfc	(_nextSequenceNumber+3)& (0+255),f,b
  3240                           
  3241                           ; BSR set to: 2
  3242                           ;tcpv4.c: 1428: nextAvailablePort = nextAvailablePort + 1;
  3243  005990  0101               	movlb	1	; () banked
  3244  005992  4B9C               	infsnz	_nextAvailablePort& (0+255),f,b
  3245  005994  2B9D               	incf	(_nextAvailablePort+1)& (0+255),f,b
  3246                           
  3247                           ; BSR set to: 1
  3248                           ;tcpv4.c: 1429: if (nextAvailablePort < (1024u))
  3249  005996  0E04               	movlw	4
  3250  005998  5D9D               	subwf	(_nextAvailablePort+1)& (0+255),w,b
  3251  00599A  E203               	bc	l10224
  3252                           
  3253                           ; BSR set to: 1
  3254                           ;tcpv4.c: 1430: {
  3255                           ;tcpv4.c: 1431: nextAvailablePort = (1024u);
  3256  00599C  0E04               	movlw	4
  3257  00599E  6F9D               	movwf	(_nextAvailablePort+1)& (0+255),b
  3258  0059A0  6B9C               	clrf	_nextAvailablePort& (0+255),b
  3259  0059A2                     l10224:
  3260                           
  3261                           ; BSR set to: 1
  3262                           ;tcpv4.c: 1432: }
  3263                           ;tcpv4.c: 1435: tcbPtr = tcbList;
  3264  0059A2  C1A2  F0DE         	movff	_tcbList,TCP_Update@tcbPtr
  3265  0059A6  C1A3  F0DF         	movff	_tcbList+1,TCP_Update@tcbPtr+1
  3266                           
  3267                           ;tcpv4.c: 1436: while((tcbPtr != (0)) && (count < tcbListSize))
  3268  0059AA  D173               	goto	l10244
  3269  0059AC                     l10226:
  3270                           
  3271                           ; BSR set to: 0
  3272                           ;tcpv4.c: 1437: {
  3273                           ;tcpv4.c: 1438: if (tcbPtr->timeout > 0)
  3274  0059AC  0E30               	movlw	48
  3275  0059AE  25DE               	addwf	TCP_Update@tcbPtr& (0+255),w,b
  3276  0059B0  6FD4               	movwf	??_TCP_Update& (0+255),b
  3277  0059B2  0E00               	movlw	0
  3278  0059B4  21DF               	addwfc	(TCP_Update@tcbPtr+1)& (0+255),w,b
  3279  0059B6  6FD5               	movwf	(??_TCP_Update+1)& (0+255),b
  3280  0059B8  C0D4  FFF6         	movff	??_TCP_Update,tblptrl
  3281  0059BC  C0D5  FFF7         	movff	??_TCP_Update+1,tblptrh
  3282  0059C0  0E00               	movlw	low (__smallconst shr (0+16))
  3283  0059C2  6EF8               	movwf	tblptru,c
  3284  0059C4  0E0F               	movlw	(high __ramtop+-1)
  3285  0059C6  64F7               	cpfsgt	tblptrh,c
  3286  0059C8  D007               	bra	u15597
  3287  0059CA  0009               	tblrd		*+
  3288  0059CC  CFF5 F0D6          	movff	tablat,??_TCP_Update+2
  3289  0059D0  0009               	tblrd		*+
  3290  0059D2  CFF5 F0D7          	movff	tablat,??_TCP_Update+3
  3291  0059D6  D008               	bra	u15590
  3292  0059D8                     u15597:
  3293  0059D8  CFF6 FFE9          	movff	tblptrl,fsr0l
  3294  0059DC  CFF7 FFEA          	movff	tblptrh,fsr0h
  3295  0059E0  CFEE F0D6          	movff	postinc0,??_TCP_Update+2
  3296  0059E4  CFEE F0D7          	movff	postinc0,??_TCP_Update+3
  3297  0059E8                     u15590:
  3298  0059E8  0100               	movlb	0	; () banked
  3299  0059EA  51D6               	movf	(??_TCP_Update+2)& (0+255),w,b
  3300  0059EC  11D7               	iorwf	(??_TCP_Update+3)& (0+255),w,b
  3301  0059EE  E101 D12E          	bz	l10240
  3302                           
  3303                           ; BSR set to: 0
  3304                           ;tcpv4.c: 1439: {
  3305                           ;tcpv4.c: 1440: ;
  3306                           ;tcpv4.c: 1441: tcbPtr->timeout = tcbPtr->timeout - 1;
  3307  0059F2  69D4               	setf	??_TCP_Update& (0+255),b
  3308  0059F4  69D5               	setf	(??_TCP_Update+1)& (0+255),b
  3309  0059F6  0E30               	movlw	48
  3310  0059F8  25DE               	addwf	TCP_Update@tcbPtr& (0+255),w,b
  3311  0059FA  6FD6               	movwf	(??_TCP_Update+2)& (0+255),b
  3312  0059FC  0E00               	movlw	0
  3313  0059FE  21DF               	addwfc	(TCP_Update@tcbPtr+1)& (0+255),w,b
  3314  005A00  6FD7               	movwf	(??_TCP_Update+3)& (0+255),b
  3315  005A02  C0D6  FFF6         	movff	??_TCP_Update+2,tblptrl
  3316  005A06  C0D7  FFF7         	movff	??_TCP_Update+3,tblptrh
  3317  005A0A  0E00               	movlw	low (__smallconst shr (0+16))
  3318  005A0C  6EF8               	movwf	tblptru,c
  3319  005A0E  0E0F               	movlw	(high __ramtop+-1)
  3320  005A10  64F7               	cpfsgt	tblptrh,c
  3321  005A12  D007               	bra	u15617
  3322  005A14  0009               	tblrd		*+
  3323  005A16  CFF5 F0D8          	movff	tablat,??_TCP_Update+4
  3324  005A1A  0009               	tblrd		*+
  3325  005A1C  CFF5 F0D9          	movff	tablat,??_TCP_Update+5
  3326  005A20  D008               	bra	u15610
  3327  005A22                     u15617:
  3328  005A22  CFF6 FFE9          	movff	tblptrl,fsr0l
  3329  005A26  CFF7 FFEA          	movff	tblptrh,fsr0h
  3330  005A2A  CFEE F0D8          	movff	postinc0,??_TCP_Update+4
  3331  005A2E  CFEE F0D9          	movff	postinc0,??_TCP_Update+5
  3332  005A32                     u15610:
  3333  005A32  0100               	movlb	0	; () banked
  3334  005A34  51D4               	movf	??_TCP_Update& (0+255),w,b
  3335  005A36  27D8               	addwf	(??_TCP_Update+4)& (0+255),f,b
  3336  005A38  51D5               	movf	(??_TCP_Update+1)& (0+255),w,b
  3337  005A3A  23D9               	addwfc	(??_TCP_Update+5)& (0+255),f,b
  3338  005A3C  0E30               	movlw	48
  3339  005A3E  25DE               	addwf	TCP_Update@tcbPtr& (0+255),w,b
  3340  005A40  6FDA               	movwf	(??_TCP_Update+6)& (0+255),b
  3341  005A42  0E00               	movlw	0
  3342  005A44  21DF               	addwfc	(TCP_Update@tcbPtr+1)& (0+255),w,b
  3343  005A46  6FDB               	movwf	(??_TCP_Update+7)& (0+255),b
  3344  005A48  C0DA  FFF6         	movff	??_TCP_Update+6,tblptrl
  3345  005A4C  C0DB  FFF7         	movff	??_TCP_Update+7,tblptrh
  3346  005A50  0E00               	movlw	low (__smallconst shr (0+16))
  3347  005A52  6EF8               	movwf	tblptru,c
  3348  005A54  0E0F               	movlw	(high __ramtop+-1)
  3349  005A56  64F7               	cpfsgt	tblptrh,c
  3350  005A58  D007               	bra	u15627
  3351  005A5A  C0D8  FFF5         	movff	??_TCP_Update+4,tablat
  3352  005A5E  000D               	tblwt		*+
  3353  005A60  C0D9  FFF5         	movff	??_TCP_Update+5,tablat
  3354  005A64  000C               	tblwt		*
  3355  005A66  D008               	bra	u15620
  3356  005A68                     u15627:
  3357  005A68  CFF6 FFE9          	movff	tblptrl,fsr0l
  3358  005A6C  CFF7 FFEA          	movff	tblptrh,fsr0h
  3359  005A70  C0D8  FFEE         	movff	??_TCP_Update+4,postinc0
  3360  005A74  C0D9  FFEF         	movff	??_TCP_Update+5,indf0
  3361  005A78                     u15620:
  3362                           
  3363                           ;tcpv4.c: 1443: if (tcbPtr->timeout == 0)
  3364  005A78  0E30               	movlw	48
  3365  005A7A  0100               	movlb	0	; () banked
  3366  005A7C  25DE               	addwf	TCP_Update@tcbPtr& (0+255),w,b
  3367  005A7E  6FD4               	movwf	??_TCP_Update& (0+255),b
  3368  005A80  0E00               	movlw	0
  3369  005A82  21DF               	addwfc	(TCP_Update@tcbPtr+1)& (0+255),w,b
  3370  005A84  6FD5               	movwf	(??_TCP_Update+1)& (0+255),b
  3371  005A86  C0D4  FFF6         	movff	??_TCP_Update,tblptrl
  3372  005A8A  C0D5  FFF7         	movff	??_TCP_Update+1,tblptrh
  3373  005A8E  0E00               	movlw	low (__smallconst shr (0+16))
  3374  005A90  6EF8               	movwf	tblptru,c
  3375  005A92  0E0F               	movlw	(high __ramtop+-1)
  3376  005A94  64F7               	cpfsgt	tblptrh,c
  3377  005A96  D007               	bra	u15637
  3378  005A98  0009               	tblrd		*+
  3379  005A9A  CFF5 F0D6          	movff	tablat,??_TCP_Update+2
  3380  005A9E  0009               	tblrd		*+
  3381  005AA0  CFF5 F0D7          	movff	tablat,??_TCP_Update+3
  3382  005AA4  D008               	bra	u15630
  3383  005AA6                     u15637:
  3384  005AA6  CFF6 FFE9          	movff	tblptrl,fsr0l
  3385  005AAA  CFF7 FFEA          	movff	tblptrh,fsr0h
  3386  005AAE  CFEE F0D6          	movff	postinc0,??_TCP_Update+2
  3387  005AB2  CFEE F0D7          	movff	postinc0,??_TCP_Update+3
  3388  005AB6                     u15630:
  3389  005AB6  0100               	movlb	0	; () banked
  3390  005AB8  51D6               	movf	(??_TCP_Update+2)& (0+255),w,b
  3391  005ABA  11D7               	iorwf	(??_TCP_Update+3)& (0+255),w,b
  3392  005ABC  E001 D0C7          	bnz	l10240
  3393                           
  3394                           ; BSR set to: 0
  3395                           ;tcpv4.c: 1444: {
  3396                           ;tcpv4.c: 1445: if (tcbPtr->timeoutsCount > 0)
  3397  005AC0  0E34               	movlw	52
  3398  005AC2  25DE               	addwf	TCP_Update@tcbPtr& (0+255),w,b
  3399  005AC4  6FD4               	movwf	??_TCP_Update& (0+255),b
  3400  005AC6  0E00               	movlw	0
  3401  005AC8  21DF               	addwfc	(TCP_Update@tcbPtr+1)& (0+255),w,b
  3402  005ACA  6FD5               	movwf	(??_TCP_Update+1)& (0+255),b
  3403  005ACC  C0D4  FFF6         	movff	??_TCP_Update,tblptrl
  3404  005AD0  C0D5  FFF7         	movff	??_TCP_Update+1,tblptrh
  3405  005AD4  0E00               	movlw	low (__smallconst shr (0+16))
  3406  005AD6  6EF8               	movwf	tblptru,c
  3407  005AD8  0E0F               	movlw	(high __ramtop+-1)
  3408  005ADA  64F7               	cpfsgt	tblptrh,c
  3409  005ADC  D003               	bra	u15657
  3410  005ADE  0008               	tblrd		*
  3411  005AE0  50F5               	movf	tablat,w,c
  3412  005AE2  D005               	bra	u15650
  3413  005AE4                     u15657:
  3414  005AE4  CFF6 FFE9          	movff	tblptrl,fsr0l
  3415  005AE8  CFF7 FFEA          	movff	tblptrh,fsr0h
  3416  005AEC  50EF               	movf	indf0,w,c
  3417  005AEE                     u15650:
  3418  005AEE  0900               	iorlw	0
  3419  005AF0  E101 D0AD          	bz	l10240
  3420                           
  3421                           ;tcpv4.c: 1446: {
  3422                           ;tcpv4.c: 1448: if (tcbPtr->connectionEvent == NOP)
  3423  005AF4  0E2B               	movlw	43
  3424  005AF6  0100               	movlb	0	; () banked
  3425  005AF8  25DE               	addwf	TCP_Update@tcbPtr& (0+255),w,b
  3426  005AFA  6FD4               	movwf	??_TCP_Update& (0+255),b
  3427  005AFC  0E00               	movlw	0
  3428  005AFE  21DF               	addwfc	(TCP_Update@tcbPtr+1)& (0+255),w,b
  3429  005B00  6FD5               	movwf	(??_TCP_Update+1)& (0+255),b
  3430  005B02  C0D4  FFF6         	movff	??_TCP_Update,tblptrl
  3431  005B06  C0D5  FFF7         	movff	??_TCP_Update+1,tblptrh
  3432  005B0A  0E00               	movlw	low (__smallconst shr (0+16))
  3433  005B0C  6EF8               	movwf	tblptru,c
  3434  005B0E  0E0F               	movlw	(high __ramtop+-1)
  3435  005B10  64F7               	cpfsgt	tblptrh,c
  3436  005B12  D003               	bra	u15677
  3437  005B14  0008               	tblrd		*
  3438  005B16  50F5               	movf	tablat,w,c
  3439  005B18  D005               	bra	u15670
  3440  005B1A                     u15677:
  3441  005B1A  CFF6 FFE9          	movff	tblptrl,fsr0l
  3442  005B1E  CFF7 FFEA          	movff	tblptrh,fsr0h
  3443  005B22  50EF               	movf	indf0,w,c
  3444  005B24                     u15670:
  3445  005B24  0A0D               	xorlw	13
  3446  005B26  E001 D092          	bnz	l10240
  3447                           
  3448                           ;tcpv4.c: 1449: {
  3449                           ;tcpv4.c: 1450: tcbPtr->timeout = tcbPtr->timeoutReloadValue;
  3450  005B2A  0E32               	movlw	50
  3451  005B2C  0100               	movlb	0	; () banked
  3452  005B2E  25DE               	addwf	TCP_Update@tcbPtr& (0+255),w,b
  3453  005B30  6FD4               	movwf	??_TCP_Update& (0+255),b
  3454  005B32  0E00               	movlw	0
  3455  005B34  21DF               	addwfc	(TCP_Update@tcbPtr+1)& (0+255),w,b
  3456  005B36  6FD5               	movwf	(??_TCP_Update+1)& (0+255),b
  3457  005B38  C0D4  FFF6         	movff	??_TCP_Update,tblptrl
  3458  005B3C  C0D5  FFF7         	movff	??_TCP_Update+1,tblptrh
  3459  005B40  0E00               	movlw	low (__smallconst shr (0+16))
  3460  005B42  6EF8               	movwf	tblptru,c
  3461  005B44  0E0F               	movlw	(high __ramtop+-1)
  3462  005B46  64F7               	cpfsgt	tblptrh,c
  3463  005B48  D007               	bra	u15697
  3464  005B4A  0009               	tblrd		*+
  3465  005B4C  CFF5 F0D6          	movff	tablat,??_TCP_Update+2
  3466  005B50  0009               	tblrd		*+
  3467  005B52  CFF5 F0D7          	movff	tablat,??_TCP_Update+3
  3468  005B56  D008               	bra	u15690
  3469  005B58                     u15697:
  3470  005B58  CFF6 FFE9          	movff	tblptrl,fsr0l
  3471  005B5C  CFF7 FFEA          	movff	tblptrh,fsr0h
  3472  005B60  CFEE F0D6          	movff	postinc0,??_TCP_Update+2
  3473  005B64  CFEE F0D7          	movff	postinc0,??_TCP_Update+3
  3474  005B68                     u15690:
  3475  005B68  0E30               	movlw	48
  3476  005B6A  0100               	movlb	0	; () banked
  3477  005B6C  25DE               	addwf	TCP_Update@tcbPtr& (0+255),w,b
  3478  005B6E  6FD8               	movwf	(??_TCP_Update+4)& (0+255),b
  3479  005B70  0E00               	movlw	0
  3480  005B72  21DF               	addwfc	(TCP_Update@tcbPtr+1)& (0+255),w,b
  3481  005B74  6FD9               	movwf	(??_TCP_Update+5)& (0+255),b
  3482  005B76  C0D8  FFF6         	movff	??_TCP_Update+4,tblptrl
  3483  005B7A  C0D9  FFF7         	movff	??_TCP_Update+5,tblptrh
  3484  005B7E  0E00               	movlw	low (__smallconst shr (0+16))
  3485  005B80  6EF8               	movwf	tblptru,c
  3486  005B82  0E0F               	movlw	(high __ramtop+-1)
  3487  005B84  64F7               	cpfsgt	tblptrh,c
  3488  005B86  D007               	bra	u15707
  3489  005B88  C0D6  FFF5         	movff	??_TCP_Update+2,tablat
  3490  005B8C  000D               	tblwt		*+
  3491  005B8E  C0D7  FFF5         	movff	??_TCP_Update+3,tablat
  3492  005B92  000C               	tblwt		*
  3493  005B94  D008               	bra	u15700
  3494  005B96                     u15707:
  3495  005B96  CFF6 FFE9          	movff	tblptrl,fsr0l
  3496  005B9A  CFF7 FFEA          	movff	tblptrh,fsr0h
  3497  005B9E  C0D6  FFEE         	movff	??_TCP_Update+2,postinc0
  3498  005BA2  C0D7  FFEF         	movff	??_TCP_Update+3,indf0
  3499  005BA6                     u15700:
  3500                           
  3501                           ;tcpv4.c: 1451: tcbPtr->timeoutsCount = tcbPtr->timeoutsCount - 1;
  3502  005BA6  0E34               	movlw	52
  3503  005BA8  0100               	movlb	0	; () banked
  3504  005BAA  25DE               	addwf	TCP_Update@tcbPtr& (0+255),w,b
  3505  005BAC  6FD4               	movwf	??_TCP_Update& (0+255),b
  3506  005BAE  0E00               	movlw	0
  3507  005BB0  21DF               	addwfc	(TCP_Update@tcbPtr+1)& (0+255),w,b
  3508  005BB2  6FD5               	movwf	(??_TCP_Update+1)& (0+255),b
  3509  005BB4  C0D4  FFF6         	movff	??_TCP_Update,tblptrl
  3510  005BB8  C0D5  FFF7         	movff	??_TCP_Update+1,tblptrh
  3511  005BBC  0E00               	movlw	low (__smallconst shr (0+16))
  3512  005BBE  6EF8               	movwf	tblptru,c
  3513  005BC0  0E0F               	movlw	(high __ramtop+-1)
  3514  005BC2  64F7               	cpfsgt	tblptrh,c
  3515  005BC4  D003               	bra	u15717
  3516  005BC6  0008               	tblrd		*
  3517  005BC8  50F5               	movf	tablat,w,c
  3518  005BCA  D005               	bra	u15710
  3519  005BCC                     u15717:
  3520  005BCC  CFF6 FFE9          	movff	tblptrl,fsr0l
  3521  005BD0  CFF7 FFEA          	movff	tblptrh,fsr0h
  3522  005BD4  50EF               	movf	indf0,w,c
  3523  005BD6                     u15710:
  3524  005BD6  0100               	movlb	0	; () banked
  3525  005BD8  6FD6               	movwf	(??_TCP_Update+2)& (0+255),b
  3526  005BDA  07D6               	decf	(??_TCP_Update+2)& (0+255),f,b
  3527  005BDC  0E34               	movlw	52
  3528  005BDE  25DE               	addwf	TCP_Update@tcbPtr& (0+255),w,b
  3529  005BE0  6FD7               	movwf	(??_TCP_Update+3)& (0+255),b
  3530  005BE2  0E00               	movlw	0
  3531  005BE4  21DF               	addwfc	(TCP_Update@tcbPtr+1)& (0+255),w,b
  3532  005BE6  6FD8               	movwf	(??_TCP_Update+4)& (0+255),b
  3533  005BE8  C0D7  FFF6         	movff	??_TCP_Update+3,tblptrl
  3534  005BEC  C0D8  FFF7         	movff	??_TCP_Update+4,tblptrh
  3535  005BF0  0E00               	movlw	low (__smallconst shr (0+16))
  3536  005BF2  6EF8               	movwf	tblptru,c
  3537  005BF4  0E0F               	movlw	(high __ramtop+-1)
  3538  005BF6  64F7               	cpfsgt	tblptrh,c
  3539  005BF8  D004               	bra	u15727
  3540  005BFA  C0D6  FFF5         	movff	??_TCP_Update+2,tablat
  3541  005BFE  000C               	tblwt		*
  3542  005C00  D006               	bra	u15720
  3543  005C02                     u15727:
  3544  005C02  CFF6 FFE9          	movff	tblptrl,fsr0l
  3545  005C06  CFF7 FFEA          	movff	tblptrh,fsr0h
  3546  005C0A  C0D6  FFEF         	movff	??_TCP_Update+2,indf0
  3547  005C0E                     u15720:
  3548                           
  3549                           ;tcpv4.c: 1452: tcbPtr->connectionEvent = TIMEOUT;
  3550  005C0E  0E2B               	movlw	43
  3551  005C10  0100               	movlb	0	; () banked
  3552  005C12  25DE               	addwf	TCP_Update@tcbPtr& (0+255),w,b
  3553  005C14  6FD4               	movwf	??_TCP_Update& (0+255),b
  3554  005C16  0E00               	movlw	0
  3555  005C18  21DF               	addwfc	(TCP_Update@tcbPtr+1)& (0+255),w,b
  3556  005C1A  6FD5               	movwf	(??_TCP_Update+1)& (0+255),b
  3557  005C1C  C0D4  FFF6         	movff	??_TCP_Update,tblptrl
  3558  005C20  C0D5  FFF7         	movff	??_TCP_Update+1,tblptrh
  3559  005C24  0E00               	movlw	low (__smallconst shr (0+16))
  3560  005C26  6EF8               	movwf	tblptru,c
  3561  005C28  0E0F               	movlw	(high __ramtop+-1)
  3562  005C2A  64F7               	cpfsgt	tblptrh,c
  3563  005C2C  D004               	bra	u15737
  3564  005C2E  0E0C               	movlw	12
  3565  005C30  6EF5               	movwf	tablat,c
  3566  005C32  000C               	tblwt		*
  3567  005C34  D006               	bra	u15730
  3568  005C36                     u15737:
  3569  005C36  CFF6 FFE9          	movff	tblptrl,fsr0l
  3570  005C3A  CFF7 FFEA          	movff	tblptrh,fsr0h
  3571  005C3E  0E0C               	movlw	12
  3572  005C40  6EEF               	movwf	indf0,c
  3573  005C42                     u15730:
  3574                           
  3575                           ;tcpv4.c: 1453: currentTCB = tcbPtr;
  3576  005C42  C0DE  F0FE         	movff	TCP_Update@tcbPtr,_currentTCB
  3577  005C46  C0DF  F0FF         	movff	TCP_Update@tcbPtr+1,_currentTCB+1
  3578                           
  3579                           ;tcpv4.c: 1454: TCP_FiniteStateMachine();
  3580  005C4A  EC75  F008         	call	_TCP_FiniteStateMachine	;wreg free
  3581  005C4E                     l10240:
  3582                           
  3583                           ;tcpv4.c: 1455: }
  3584                           ;tcpv4.c: 1456: }
  3585                           ;tcpv4.c: 1457: }
  3586                           ;tcpv4.c: 1458: }
  3587                           ;tcpv4.c: 1459: tcbPtr = tcbPtr->nextTCB;
  3588  005C4E  0E2C               	movlw	44
  3589  005C50  0100               	movlb	0	; () banked
  3590  005C52  25DE               	addwf	TCP_Update@tcbPtr& (0+255),w,b
  3591  005C54  6FD4               	movwf	??_TCP_Update& (0+255),b
  3592  005C56  0E00               	movlw	0
  3593  005C58  21DF               	addwfc	(TCP_Update@tcbPtr+1)& (0+255),w,b
  3594  005C5A  6FD5               	movwf	(??_TCP_Update+1)& (0+255),b
  3595  005C5C  C0D4  FFF6         	movff	??_TCP_Update,tblptrl
  3596  005C60  C0D5  FFF7         	movff	??_TCP_Update+1,tblptrh
  3597  005C64  0E00               	movlw	low (__smallconst shr (0+16))
  3598  005C66  6EF8               	movwf	tblptru,c
  3599  005C68  0E0F               	movlw	(high __ramtop+-1)
  3600  005C6A  64F7               	cpfsgt	tblptrh,c
  3601  005C6C  D007               	bra	u15747
  3602  005C6E  0009               	tblrd		*+
  3603  005C70  CFF5 F0DE          	movff	tablat,TCP_Update@tcbPtr
  3604  005C74  0009               	tblrd		*+
  3605  005C76  CFF5 F0DF          	movff	tablat,TCP_Update@tcbPtr+1
  3606  005C7A  D008               	bra	u15740
  3607  005C7C                     u15747:
  3608  005C7C  CFF6 FFE9          	movff	tblptrl,fsr0l
  3609  005C80  CFF7 FFEA          	movff	tblptrh,fsr0h
  3610  005C84  CFEE F0DE          	movff	postinc0,TCP_Update@tcbPtr
  3611  005C88  CFEE F0DF          	movff	postinc0,TCP_Update@tcbPtr+1
  3612  005C8C                     u15740:
  3613                           
  3614                           ;tcpv4.c: 1460: count ++;
  3615  005C8C  0100               	movlb	0	; () banked
  3616  005C8E  4BDC               	infsnz	TCP_Update@count& (0+255),f,b
  3617  005C90  2BDD               	incf	(TCP_Update@count+1)& (0+255),f,b
  3618  005C92                     l10244:
  3619  005C92  0100               	movlb	0	; () banked
  3620  005C94  51DE               	movf	TCP_Update@tcbPtr& (0+255),w,b
  3621  005C96  11DF               	iorwf	(TCP_Update@tcbPtr+1)& (0+255),w,b
  3622  005C98  B4D8               	btfsc	status,2,c
  3623  005C9A  0012               	return	
  3624                           
  3625                           ; BSR set to: 0
  3626  005C9C  C1A7  F0D4         	movff	_tcbListSize,??_TCP_Update
  3627  005CA0  6BD5               	clrf	(??_TCP_Update+1)& (0+255),b
  3628  005CA2  BFD4               	btfsc	??_TCP_Update& (0+255),7,b
  3629  005CA4  07D5               	decf	(??_TCP_Update+1)& (0+255),f,b
  3630  005CA6  51D4               	movf	??_TCP_Update& (0+255),w,b
  3631  005CA8  5DDC               	subwf	TCP_Update@count& (0+255),w,b
  3632  005CAA  51DD               	movf	(TCP_Update@count+1)& (0+255),w,b
  3633  005CAC  0A80               	xorlw	128
  3634  005CAE  6FD6               	movwf	(??_TCP_Update+2)& (0+255),b
  3635  005CB0  51D5               	movf	(??_TCP_Update+1)& (0+255),w,b
  3636  005CB2  0A80               	xorlw	128
  3637  005CB4  59D6               	subwfb	(??_TCP_Update+2)& (0+255),w,b
  3638  005CB6  E201 D679          	bnc	l10226
  3639                           
  3640                           ; BSR set to: 0
  3641  005CBA  0012               	return		;funcret
  3642  005CBC                     __end_of_TCP_Update:
  3643                           	opt stack 0
  3644                           tblptru	equ	0xFF8
  3645                           tblptrh	equ	0xFF7
  3646                           tblptrl	equ	0xFF6
  3647                           tablat	equ	0xFF5
  3648                           prodh	equ	0xFF4
  3649                           prodl	equ	0xFF3
  3650                           intcon	equ	0xFF2
  3651                           intcon2	equ	0xFF1
  3652                           indf0	equ	0xFEF
  3653                           postinc0	equ	0xFEE
  3654                           fsr0h	equ	0xFEA
  3655                           fsr0l	equ	0xFE9
  3656                           wreg	equ	0xFE8
  3657                           indf2	equ	0xFDF
  3658                           fsr2h	equ	0xFDA
  3659                           fsr2l	equ	0xFD9
  3660                           status	equ	0xFD8
  3661                           
  3662 ;; *************** function _Network_Read *****************
  3663 ;; Defined at:
  3664 ;;		line 105 in file "../../TCPIP Library/source/network.c"
  3665 ;; Parameters:    Size  Location     Type
  3666 ;;		None
  3667 ;; Auto vars:     Size  Location     Type
  3668 ;;  debug_str      80   32[BANK1 ] unsigned char [80]
  3669 ;;  header         14  112[BANK1 ] struct .
  3670 ;; Return value:  Size  Location     Type
  3671 ;;		None               void
  3672 ;; Registers used:
  3673 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  3674 ;; Tracked objects:
  3675 ;;		On entry : 0/2
  3676 ;;		On exit  : 0/0
  3677 ;;		Unchanged: 0/0
  3678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3680 ;;      Locals:         0       0      94       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3681 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3682 ;;      Totals:         0       0      98       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3683 ;;Total ram usage:       98 bytes
  3684 ;; Hardware stack levels used:    1
  3685 ;; Hardware stack levels required when called:   14
  3686 ;; This function calls:
  3687 ;;		_ARPV4_Packet
  3688 ;;		_ETH_Flush
  3689 ;;		_ETH_NextPacketUpdate
  3690 ;;		_ETH_ReadBlock
  3691 ;;		_IPV4_Packet
  3692 ;;		_sprintf
  3693 ;; This function is called by:
  3694 ;;		_Network_Manage
  3695 ;; This function uses a non-reentrant model
  3696 ;;
  3697                           
  3698                           	psect	text16
  3699  007668                     __ptext16:
  3700                           	opt stack 0
  3701  007668                     _Network_Read:
  3702                           	opt stack 15
  3703                           
  3704                           ;network.c: 107: ethernetFrame_t header;
  3705                           ;network.c: 108: char debug_str[80];
  3706                           ;network.c: 110: if(ethData.pktReady)
  3707                           
  3708                           ; BSR set to: 0
  3709                           ;incstack = 0
  3710  007668  0101               	movlb	1	; () banked
  3711  00766A  A383               	btfss	_ethData& (0+255),1,b	;volatile
  3712  00766C  0012               	return	
  3713                           
  3714                           ; BSR set to: 1
  3715                           ;network.c: 111: {
  3716                           ;network.c: 112: ETH_NextPacketUpdate();
  3717  00766E  EC3E  F03F         	call	_ETH_NextPacketUpdate	;wreg free
  3718                           
  3719                           ; BSR set to: 2
  3720                           ;network.c: 113: ETH_ReadBlock((char *)&header, sizeof(header));
  3721  007672  0E70               	movlw	low Network_Read@header
  3722  007674  6E03               	movwf	ETH_ReadBlock@data,c
  3723  007676  0E01               	movlw	high Network_Read@header
  3724  007678  6E04               	movwf	ETH_ReadBlock@data+1,c
  3725  00767A  6A06               	clrf	ETH_ReadBlock@length+1,c
  3726  00767C  0E0E               	movlw	14
  3727  00767E  6E05               	movwf	ETH_ReadBlock@length,c
  3728  007680  EC24  F03D         	call	_ETH_ReadBlock	;wreg free
  3729                           
  3730                           ; BSR set to: 1
  3731                           ;network.c: 114: header.id.type = ((((uint16_t)header.id.type & (uint16_t)0xFF00) >> 8) 
      +                          | (((uint16_t)header.id.type & (uint16_t)0x00FF) << 8));
  3732  007684  517C               	movf	(Network_Read@header+12)& (0+255),w,b
  3733  007686  6F1D               	movwf	(??_Network_Read+1)& (0+255),b
  3734  007688  6B1C               	clrf	??_Network_Read& (0+255),b
  3735  00768A  EE21  F07C         	lfsr	2,Network_Read@header+12
  3736  00768E  CFDE F11E          	movff	postinc2,??_Network_Read+2
  3737  007692  CFDD F11F          	movff	postdec2,??_Network_Read+3
  3738  007696  C11F  F11E         	movff	??_Network_Read+3,??_Network_Read+2
  3739  00769A  6B1F               	clrf	(??_Network_Read+3)& (0+255),b
  3740  00769C  6B1F               	clrf	(??_Network_Read+3)& (0+255),b
  3741  00769E  511C               	movf	??_Network_Read& (0+255),w,b
  3742  0076A0  111E               	iorwf	(??_Network_Read+2)& (0+255),w,b
  3743  0076A2  6F7C               	movwf	(Network_Read@header+12)& (0+255),b
  3744  0076A4  511D               	movf	(??_Network_Read+1)& (0+255),w,b
  3745  0076A6  111F               	iorwf	(??_Network_Read+3)& (0+255),w,b
  3746  0076A8  6F7D               	movwf	(Network_Read@header+13)& (0+255),b
  3747                           
  3748                           ;network.c: 115: switch (header.id.type)
  3749  0076AA  D01A               	goto	l10192
  3750  0076AC                     l10184:
  3751                           
  3752                           ; BSR set to: 1
  3753                           ;network.c: 121: ;
  3754                           ;network.c: 122: ARPV4_Packet();
  3755  0076AC  ECCA  F028         	call	_ARPV4_Packet	;wreg free
  3756                           
  3757                           ;network.c: 123: break;
  3758  0076B0  EF4B  F043         	goto	_ETH_Flush
  3759  0076B4                     l10186:
  3760                           
  3761                           ; BSR set to: 1
  3762                           ;network.c: 125: ;
  3763                           ;network.c: 126: IPV4_Packet();
  3764  0076B4  ECE4  F02A         	call	_IPV4_Packet	;wreg free
  3765                           
  3766                           ;network.c: 127: break;
  3767  0076B8  EF4B  F043         	goto	_ETH_Flush
  3768  0076BC                     l10188:
  3769                           
  3770                           ; BSR set to: 1
  3771                           ;network.c: 132: sprintf(debug_str,"%x : %d",header.id.type,header.id.length);
  3772  0076BC  0E20               	movlw	low Network_Read@debug_str
  3773  0076BE  6E21               	movwf	sprintf@wh,c
  3774  0076C0  0E01               	movlw	high Network_Read@debug_str
  3775  0076C2  6E22               	movwf	sprintf@wh+1,c
  3776  0076C4  0ED7               	movlw	low STR_1
  3777  0076C6  6E23               	movwf	sprintf@f,c
  3778  0076C8  C17C  F024         	movff	Network_Read@header+12,?_sprintf+3
  3779  0076CC  C17D  F025         	movff	Network_Read@header+13,?_sprintf+4
  3780  0076D0  C17C  F026         	movff	Network_Read@header+12,?_sprintf+5
  3781  0076D4  C17D  F027         	movff	Network_Read@header+13,?_sprintf+6
  3782  0076D8  EC08  F044         	call	_sprintf	;wreg free
  3783                           
  3784                           ;network.c: 133: ;
  3785                           ;network.c: 134: break;
  3786  0076DC  EF4B  F043         	goto	_ETH_Flush
  3787  0076E0                     l10192:
  3788                           
  3789                           ; BSR set to: 1
  3790  0076E0  EE21  F07C         	lfsr	2,Network_Read@header+12
  3791  0076E4  CFDE F11C          	movff	postinc2,??_Network_Read
  3792  0076E8  CFDD F11D          	movff	postdec2,??_Network_Read+1
  3793                           
  3794                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 3 sub-sw
      +                          itches
  3795                           ; Switch size 1, requested type "speed"
  3796                           ; Number of cases is 3, Range of values is 8 to 134
  3797                           ; switch strategies available:
  3798                           ; Name         Instructions Cycles
  3799                           ; simple_byte           10     6 (average)
  3800                           ;	Chosen strategy is simple_byte
  3801  0076EC  511D               	movf	(??_Network_Read+1)& (0+255),w,b
  3802  0076EE  0A08               	xorlw	8	; case 8
  3803  0076F0  E005               	bz	l10732
  3804  0076F2  0A89               	xorlw	137	; case 129
  3805  0076F4  E008               	bz	l10734
  3806  0076F6  0A07               	xorlw	7	; case 134
  3807  0076F8  E008               	bz	l10736
  3808  0076FA  D7E0               	goto	l10188
  3809  0076FC                     l10732:
  3810                           
  3811                           ; BSR set to: 1
  3812                           ; Switch size 1, requested type "speed"
  3813                           ; Number of cases is 2, Range of values is 0 to 6
  3814                           ; switch strategies available:
  3815                           ; Name         Instructions Cycles
  3816                           ; simple_byte            7     4 (average)
  3817                           ;	Chosen strategy is simple_byte
  3818  0076FC  511C               	movf	??_Network_Read& (0+255),w,b
  3819  0076FE  E0DA               	bz	l10186
  3820  007700  0A06               	xorlw	6	; case 6
  3821  007702  E0D4               	bz	l10184
  3822  007704  D7DB               	goto	l10188
  3823  007706                     l10734:
  3824                           
  3825                           ; BSR set to: 1
  3826                           ; Switch size 1, requested type "speed"
  3827                           ; Number of cases is 1, Range of values is 0 to 0
  3828                           ; switch strategies available:
  3829                           ; Name         Instructions Cycles
  3830                           ; simple_byte            4     3 (average)
  3831                           ;	Chosen strategy is simple_byte
  3832  007706  511C               	movf	??_Network_Read& (0+255),w,b
  3833  007708  D002               	goto	L1
  3834  00770A                     l10736:
  3835                           
  3836                           ; BSR set to: 1
  3837                           ; Switch size 1, requested type "speed"
  3838                           ; Number of cases is 1, Range of values is 221 to 221
  3839                           ; switch strategies available:
  3840                           ; Name         Instructions Cycles
  3841                           ; simple_byte            4     3 (average)
  3842                           ;	Chosen strategy is simple_byte
  3843  00770A  511C               	movf	??_Network_Read& (0+255),w,b
  3844  00770C  0ADD               	xorlw	221	; case 221
  3845  00770E                     L1:
  3846  00770E  E1D6               	bnz	l10188
  3847                           
  3848                           ;network.c: 136: ETH_Flush();
  3849  007710  EF4B  F043         	goto	_ETH_Flush	;wreg free
  3850  007714                     __end_of_Network_Read:
  3851                           	opt stack 0
  3852                           tblptru	equ	0xFF8
  3853                           tblptrh	equ	0xFF7
  3854                           tblptrl	equ	0xFF6
  3855                           tablat	equ	0xFF5
  3856                           prodh	equ	0xFF4
  3857                           prodl	equ	0xFF3
  3858                           intcon	equ	0xFF2
  3859                           intcon2	equ	0xFF1
  3860                           indf0	equ	0xFEF
  3861                           postinc0	equ	0xFEE
  3862                           fsr0h	equ	0xFEA
  3863                           fsr0l	equ	0xFE9
  3864                           wreg	equ	0xFE8
  3865                           indf2	equ	0xFDF
  3866                           postinc2	equ	0xFDE
  3867                           postdec2	equ	0xFDD
  3868                           fsr2h	equ	0xFDA
  3869                           fsr2l	equ	0xFD9
  3870                           status	equ	0xFD8
  3871                           
  3872 ;; *************** function _IPV4_Packet *****************
  3873 ;; Defined at:
  3874 ;;		line 115 in file "../../TCPIP Library/source/ipv4.c"
  3875 ;; Parameters:    Size  Location     Type
  3876 ;;		None
  3877 ;; Auto vars:     Size  Location     Type
  3878 ;;  msg            40    0        unsigned char [40]
  3879 ;;  cksm            2  156[BANK0 ] unsigned int 
  3880 ;;  length          2  154[BANK0 ] unsigned int 
  3881 ;;  hdrLen          1  153[BANK0 ] unsigned char 
  3882 ;; Return value:  Size  Location     Type
  3883 ;;                  1    wreg      enum E6944
  3884 ;; Registers used:
  3885 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
  3886 ;; Tracked objects:
  3887 ;;		On entry : 0/1
  3888 ;;		On exit  : 0/0
  3889 ;;		Unchanged: 0/0
  3890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3892 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3893 ;;      Temps:          0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3894 ;;      Totals:         0       5      28       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3895 ;;Total ram usage:       33 bytes
  3896 ;; Hardware stack levels used:    1
  3897 ;; Hardware stack levels required when called:   13
  3898 ;; This function calls:
  3899 ;;		_ETH_Dump
  3900 ;;		_ETH_ReadBlock
  3901 ;;		_ETH_RxComputeChecksum
  3902 ;;		_ICMP_Receive
  3903 ;;		_IPV4_PseudoHeaderChecksum
  3904 ;;		_TCP_Recv
  3905 ;;		_UDP_Receive
  3906 ;; This function is called by:
  3907 ;;		_Network_Read
  3908 ;; This function uses a non-reentrant model
  3909 ;;
  3910                           
  3911                           	psect	text17
  3912  0055C8                     __ptext17:
  3913                           	opt stack 0
  3914  0055C8                     _IPV4_Packet:
  3915                           	opt stack 15
  3916                           
  3917                           ;ipv4.c: 118: uint16_t length = 0;
  3918                           
  3919                           ;incstack = 0
  3920  0055C8  0100               	movlb	0	; () banked
  3921  0055CA  6BFA               	clrf	IPV4_Packet@length& (0+255),b
  3922  0055CC  6BFB               	clrf	(IPV4_Packet@length+1)& (0+255),b
  3923                           
  3924                           ; BSR set to: 0
  3925                           ;ipv4.c: 119: char msg[40];
  3926                           ;ipv4.c: 120: uint8_t hdrLen;
  3927                           ;ipv4.c: 123: cksm = ETH_RxComputeChecksum(sizeof(ipv4Header_t), 0);
  3928  0055CE  6A0E               	clrf	ETH_RxComputeChecksum@len+1,c
  3929  0055D0  0E14               	movlw	20
  3930  0055D2  6E0D               	movwf	ETH_RxComputeChecksum@len,c
  3931  0055D4  6A10               	clrf	ETH_RxComputeChecksum@seed+1,c
  3932  0055D6  6A0F               	clrf	ETH_RxComputeChecksum@seed,c
  3933  0055D8  ECB5  F039         	call	_ETH_RxComputeChecksum	;wreg free
  3934  0055DC  C00D  F0FC         	movff	?_ETH_RxComputeChecksum,IPV4_Packet@cksm
  3935  0055E0  C00E  F0FD         	movff	?_ETH_RxComputeChecksum+1,IPV4_Packet@cksm+1
  3936                           
  3937                           ;ipv4.c: 124: if (cksm != 0)
  3938  0055E4  0100               	movlb	0	; () banked
  3939  0055E6  51FC               	movf	IPV4_Packet@cksm& (0+255),w,b
  3940  0055E8  11FD               	iorwf	(IPV4_Packet@cksm+1)& (0+255),w,b
  3941  0055EA  E001               	bz	l9816
  3942  0055EC  0012               	return	
  3943  0055EE                     l9816:
  3944                           
  3945                           ; BSR set to: 0
  3946                           ;ipv4.c: 128: }
  3947                           ;ipv4.c: 130: ETH_ReadBlock((char *)&ipv4Header, sizeof(ipv4Header_t));
  3948  0055EE  0EA8               	movlw	low _ipv4Header
  3949  0055F0  6E03               	movwf	ETH_ReadBlock@data,c
  3950  0055F2  0E01               	movlw	high _ipv4Header
  3951  0055F4  6E04               	movwf	ETH_ReadBlock@data+1,c
  3952  0055F6  6A06               	clrf	ETH_ReadBlock@length+1,c
  3953  0055F8  0E14               	movlw	20
  3954  0055FA  6E05               	movwf	ETH_ReadBlock@length,c
  3955  0055FC  EC24  F03D         	call	_ETH_ReadBlock	;wreg free
  3956                           
  3957                           ; BSR set to: 1
  3958                           ;ipv4.c: 131: if(ipv4Header.version != 4)
  3959  005600  39A8               	swapf	_ipv4Header& (0+255),w,b
  3960  005602  0B0F               	andlw	15
  3961  005604  0A04               	xorlw	4
  3962  005606  E001               	bz	l9822
  3963  005608  0012               	return	
  3964  00560A                     l9822:
  3965                           
  3966                           ; BSR set to: 1
  3967                           ;ipv4.c: 134: }
  3968                           ;ipv4.c: 136: ipv4Header.dstIpAddress = ((((uint32_t)ipv4Header.dstIpAddress&(uint32_t)0
      +                          xff000000) >> 24) | (((uint32_t)ipv4Header.dstIpAddress&(uint32_t)0x00ff0000) >> 8) | ((
      +                          (uint32_t)ipv4Header.dstIpAddress&(uint32_t)0x0000ff00) << 8) | (((uint32_t)ipv4Header.d
  3969  00560A  51B8               	movf	(_ipv4Header+16)& (0+255),w,b
  3970  00560C  6F00               	movwf	??_IPV4_Packet& (0+255),b
  3971  00560E  6B01               	clrf	(??_IPV4_Packet+1)& (0+255),b
  3972  005610  6B02               	clrf	(??_IPV4_Packet+2)& (0+255),b
  3973  005612  6B03               	clrf	(??_IPV4_Packet+3)& (0+255),b
  3974  005614  C100  F103         	movff	??_IPV4_Packet,??_IPV4_Packet+3
  3975  005618  6B02               	clrf	(??_IPV4_Packet+2)& (0+255),b
  3976  00561A  6B01               	clrf	(??_IPV4_Packet+1)& (0+255),b
  3977  00561C  6B00               	clrf	??_IPV4_Packet& (0+255),b
  3978  00561E  EE21  F0B8         	lfsr	2,_ipv4Header+16
  3979  005622  0E00               	movlw	0
  3980  005624  14DE               	andwf	postinc2,w,c
  3981  005626  6F04               	movwf	(??_IPV4_Packet+4)& (0+255),b
  3982  005628  0EFF               	movlw	255
  3983  00562A  14DE               	andwf	postinc2,w,c
  3984  00562C  6F05               	movwf	(??_IPV4_Packet+5)& (0+255),b
  3985  00562E  0E00               	movlw	0
  3986  005630  14DE               	andwf	postinc2,w,c
  3987  005632  6F06               	movwf	(??_IPV4_Packet+6)& (0+255),b
  3988  005634  0E00               	movlw	0
  3989  005636  14DE               	andwf	postinc2,w,c
  3990  005638  6F07               	movwf	(??_IPV4_Packet+7)& (0+255),b
  3991  00563A  C106  F107         	movff	??_IPV4_Packet+6,??_IPV4_Packet+7
  3992  00563E  C105  F106         	movff	??_IPV4_Packet+5,??_IPV4_Packet+6
  3993  005642  C104  F105         	movff	??_IPV4_Packet+4,??_IPV4_Packet+5
  3994  005646  6B04               	clrf	(??_IPV4_Packet+4)& (0+255),b
  3995  005648  C1B8  F108         	movff	_ipv4Header+16,??_IPV4_Packet+8
  3996  00564C  C1B9  F109         	movff	_ipv4Header+17,??_IPV4_Packet+9
  3997  005650  C1BA  F10A         	movff	_ipv4Header+18,??_IPV4_Packet+10
  3998  005654  C1BB  F10B         	movff	_ipv4Header+19,??_IPV4_Packet+11
  3999  005658  C109  F108         	movff	??_IPV4_Packet+9,??_IPV4_Packet+8
  4000  00565C  C10A  F109         	movff	??_IPV4_Packet+10,??_IPV4_Packet+9
  4001  005660  C10B  F10A         	movff	??_IPV4_Packet+11,??_IPV4_Packet+10
  4002  005664  6B0B               	clrf	(??_IPV4_Packet+11)& (0+255),b
  4003  005666  6B0C               	clrf	(??_IPV4_Packet+12)& (0+255),b
  4004  005668  5109               	movf	(??_IPV4_Packet+9)& (0+255),w,b
  4005  00566A  6F0D               	movwf	(??_IPV4_Packet+13)& (0+255),b
  4006  00566C  0E00               	movlw	0
  4007  00566E  6B0E               	clrf	(??_IPV4_Packet+14)& (0+255),b
  4008  005670  6B0F               	clrf	(??_IPV4_Packet+15)& (0+255),b
  4009  005672  EE21  F0B8         	lfsr	2,_ipv4Header+16
  4010  005676  14DE               	andwf	postinc2,w,c
  4011  005678  6F10               	movwf	(??_IPV4_Packet+16)& (0+255),b
  4012  00567A  0E00               	movlw	0
  4013  00567C  14DE               	andwf	postinc2,w,c
  4014  00567E  6F11               	movwf	(??_IPV4_Packet+17)& (0+255),b
  4015  005680  0E00               	movlw	0
  4016  005682  14DE               	andwf	postinc2,w,c
  4017  005684  6F12               	movwf	(??_IPV4_Packet+18)& (0+255),b
  4018  005686  0EFF               	movlw	255
  4019  005688  14DE               	andwf	postinc2,w,c
  4020  00568A  6F13               	movwf	(??_IPV4_Packet+19)& (0+255),b
  4021  00568C  0E19               	movlw	25
  4022  00568E  D005               	goto	u15190
  4023  005690                     u15195:
  4024  005690  90D8               	bcf	status,0,c
  4025  005692  3313               	rrcf	(??_IPV4_Packet+19)& (0+255),f,b
  4026  005694  3312               	rrcf	(??_IPV4_Packet+18)& (0+255),f,b
  4027  005696  3311               	rrcf	(??_IPV4_Packet+17)& (0+255),f,b
  4028  005698  3310               	rrcf	(??_IPV4_Packet+16)& (0+255),f,b
  4029  00569A                     u15190:
  4030  00569A  2EE8               	decfsz	wreg,f,c
  4031  00569C  D7F9               	goto	u15195
  4032  00569E  510C               	movf	(??_IPV4_Packet+12)& (0+255),w,b
  4033  0056A0  1110               	iorwf	(??_IPV4_Packet+16)& (0+255),w,b
  4034  0056A2  6F14               	movwf	(??_IPV4_Packet+20)& (0+255),b
  4035  0056A4  510D               	movf	(??_IPV4_Packet+13)& (0+255),w,b
  4036  0056A6  1111               	iorwf	(??_IPV4_Packet+17)& (0+255),w,b
  4037  0056A8  6F15               	movwf	(??_IPV4_Packet+21)& (0+255),b
  4038  0056AA  510E               	movf	(??_IPV4_Packet+14)& (0+255),w,b
  4039  0056AC  1112               	iorwf	(??_IPV4_Packet+18)& (0+255),w,b
  4040  0056AE  6F16               	movwf	(??_IPV4_Packet+22)& (0+255),b
  4041  0056B0  510F               	movf	(??_IPV4_Packet+15)& (0+255),w,b
  4042  0056B2  1113               	iorwf	(??_IPV4_Packet+19)& (0+255),w,b
  4043  0056B4  6F17               	movwf	(??_IPV4_Packet+23)& (0+255),b
  4044  0056B6  5104               	movf	(??_IPV4_Packet+4)& (0+255),w,b
  4045  0056B8  1114               	iorwf	(??_IPV4_Packet+20)& (0+255),w,b
  4046  0056BA  6F18               	movwf	(??_IPV4_Packet+24)& (0+255),b
  4047  0056BC  5105               	movf	(??_IPV4_Packet+5)& (0+255),w,b
  4048  0056BE  1115               	iorwf	(??_IPV4_Packet+21)& (0+255),w,b
  4049  0056C0  6F19               	movwf	(??_IPV4_Packet+25)& (0+255),b
  4050  0056C2  5106               	movf	(??_IPV4_Packet+6)& (0+255),w,b
  4051  0056C4  1116               	iorwf	(??_IPV4_Packet+22)& (0+255),w,b
  4052  0056C6  6F1A               	movwf	(??_IPV4_Packet+26)& (0+255),b
  4053  0056C8  5107               	movf	(??_IPV4_Packet+7)& (0+255),w,b
  4054  0056CA  1117               	iorwf	(??_IPV4_Packet+23)& (0+255),w,b
  4055  0056CC  6F1B               	movwf	(??_IPV4_Packet+27)& (0+255),b
  4056  0056CE  5100               	movf	??_IPV4_Packet& (0+255),w,b
  4057  0056D0  1118               	iorwf	(??_IPV4_Packet+24)& (0+255),w,b
  4058  0056D2  6FB8               	movwf	(_ipv4Header+16)& (0+255),b
  4059  0056D4  5101               	movf	(??_IPV4_Packet+1)& (0+255),w,b
  4060  0056D6  1119               	iorwf	(??_IPV4_Packet+25)& (0+255),w,b
  4061  0056D8  6FB9               	movwf	(_ipv4Header+17)& (0+255),b
  4062  0056DA  5102               	movf	(??_IPV4_Packet+2)& (0+255),w,b
  4063  0056DC  111A               	iorwf	(??_IPV4_Packet+26)& (0+255),w,b
  4064  0056DE  6FBA               	movwf	(_ipv4Header+18)& (0+255),b
  4065  0056E0  5103               	movf	(??_IPV4_Packet+3)& (0+255),w,b
  4066  0056E2  111B               	iorwf	(??_IPV4_Packet+27)& (0+255),w,b
  4067  0056E4  6FBB               	movwf	(_ipv4Header+19)& (0+255),b
  4068                           
  4069                           ;ipv4.c: 137: ipv4Header.srcIpAddress = ((((uint32_t)ipv4Header.srcIpAddress&(uint32_t)0
      +                          xff000000) >> 24) | (((uint32_t)ipv4Header.srcIpAddress&(uint32_t)0x00ff0000) >> 8) | ((
      +                          (uint32_t)ipv4Header.srcIpAddress&(uint32_t)0x0000ff00) << 8) | (((uint32_t)ipv4Header.s
  4070  0056E6  51B4               	movf	(_ipv4Header+12)& (0+255),w,b
  4071  0056E8  6F00               	movwf	??_IPV4_Packet& (0+255),b
  4072  0056EA  6B01               	clrf	(??_IPV4_Packet+1)& (0+255),b
  4073  0056EC  6B02               	clrf	(??_IPV4_Packet+2)& (0+255),b
  4074  0056EE  6B03               	clrf	(??_IPV4_Packet+3)& (0+255),b
  4075  0056F0  C100  F103         	movff	??_IPV4_Packet,??_IPV4_Packet+3
  4076  0056F4  6B02               	clrf	(??_IPV4_Packet+2)& (0+255),b
  4077  0056F6  6B01               	clrf	(??_IPV4_Packet+1)& (0+255),b
  4078  0056F8  6B00               	clrf	??_IPV4_Packet& (0+255),b
  4079  0056FA  EE21  F0B4         	lfsr	2,_ipv4Header+12
  4080  0056FE  0E00               	movlw	0
  4081  005700  14DE               	andwf	postinc2,w,c
  4082  005702  6F04               	movwf	(??_IPV4_Packet+4)& (0+255),b
  4083  005704  0EFF               	movlw	255
  4084  005706  14DE               	andwf	postinc2,w,c
  4085  005708  6F05               	movwf	(??_IPV4_Packet+5)& (0+255),b
  4086  00570A  0E00               	movlw	0
  4087  00570C  14DE               	andwf	postinc2,w,c
  4088  00570E  6F06               	movwf	(??_IPV4_Packet+6)& (0+255),b
  4089  005710  0E00               	movlw	0
  4090  005712  14DE               	andwf	postinc2,w,c
  4091  005714  6F07               	movwf	(??_IPV4_Packet+7)& (0+255),b
  4092  005716  C106  F107         	movff	??_IPV4_Packet+6,??_IPV4_Packet+7
  4093  00571A  C105  F106         	movff	??_IPV4_Packet+5,??_IPV4_Packet+6
  4094  00571E  C104  F105         	movff	??_IPV4_Packet+4,??_IPV4_Packet+5
  4095  005722  6B04               	clrf	(??_IPV4_Packet+4)& (0+255),b
  4096  005724  C1B4  F108         	movff	_ipv4Header+12,??_IPV4_Packet+8
  4097  005728  C1B5  F109         	movff	_ipv4Header+13,??_IPV4_Packet+9
  4098  00572C  C1B6  F10A         	movff	_ipv4Header+14,??_IPV4_Packet+10
  4099  005730  C1B7  F10B         	movff	_ipv4Header+15,??_IPV4_Packet+11
  4100  005734  C109  F108         	movff	??_IPV4_Packet+9,??_IPV4_Packet+8
  4101  005738  C10A  F109         	movff	??_IPV4_Packet+10,??_IPV4_Packet+9
  4102  00573C  C10B  F10A         	movff	??_IPV4_Packet+11,??_IPV4_Packet+10
  4103  005740  6B0B               	clrf	(??_IPV4_Packet+11)& (0+255),b
  4104  005742  6B0C               	clrf	(??_IPV4_Packet+12)& (0+255),b
  4105  005744  5109               	movf	(??_IPV4_Packet+9)& (0+255),w,b
  4106  005746  6F0D               	movwf	(??_IPV4_Packet+13)& (0+255),b
  4107  005748  0E00               	movlw	0
  4108  00574A  6B0E               	clrf	(??_IPV4_Packet+14)& (0+255),b
  4109  00574C  6B0F               	clrf	(??_IPV4_Packet+15)& (0+255),b
  4110  00574E  EE21  F0B4         	lfsr	2,_ipv4Header+12
  4111  005752  14DE               	andwf	postinc2,w,c
  4112  005754  6F10               	movwf	(??_IPV4_Packet+16)& (0+255),b
  4113  005756  0E00               	movlw	0
  4114  005758  14DE               	andwf	postinc2,w,c
  4115  00575A  6F11               	movwf	(??_IPV4_Packet+17)& (0+255),b
  4116  00575C  0E00               	movlw	0
  4117  00575E  14DE               	andwf	postinc2,w,c
  4118  005760  6F12               	movwf	(??_IPV4_Packet+18)& (0+255),b
  4119  005762  0EFF               	movlw	255
  4120  005764  14DE               	andwf	postinc2,w,c
  4121  005766  6F13               	movwf	(??_IPV4_Packet+19)& (0+255),b
  4122  005768  0E19               	movlw	25
  4123  00576A  D005               	goto	u15200
  4124  00576C                     u15205:
  4125  00576C  90D8               	bcf	status,0,c
  4126  00576E  3313               	rrcf	(??_IPV4_Packet+19)& (0+255),f,b
  4127  005770  3312               	rrcf	(??_IPV4_Packet+18)& (0+255),f,b
  4128  005772  3311               	rrcf	(??_IPV4_Packet+17)& (0+255),f,b
  4129  005774  3310               	rrcf	(??_IPV4_Packet+16)& (0+255),f,b
  4130  005776                     u15200:
  4131  005776  2EE8               	decfsz	wreg,f,c
  4132  005778  D7F9               	goto	u15205
  4133  00577A  510C               	movf	(??_IPV4_Packet+12)& (0+255),w,b
  4134  00577C  1110               	iorwf	(??_IPV4_Packet+16)& (0+255),w,b
  4135  00577E  6F14               	movwf	(??_IPV4_Packet+20)& (0+255),b
  4136  005780  510D               	movf	(??_IPV4_Packet+13)& (0+255),w,b
  4137  005782  1111               	iorwf	(??_IPV4_Packet+17)& (0+255),w,b
  4138  005784  6F15               	movwf	(??_IPV4_Packet+21)& (0+255),b
  4139  005786  510E               	movf	(??_IPV4_Packet+14)& (0+255),w,b
  4140  005788  1112               	iorwf	(??_IPV4_Packet+18)& (0+255),w,b
  4141  00578A  6F16               	movwf	(??_IPV4_Packet+22)& (0+255),b
  4142  00578C  510F               	movf	(??_IPV4_Packet+15)& (0+255),w,b
  4143  00578E  1113               	iorwf	(??_IPV4_Packet+19)& (0+255),w,b
  4144  005790  6F17               	movwf	(??_IPV4_Packet+23)& (0+255),b
  4145  005792  5104               	movf	(??_IPV4_Packet+4)& (0+255),w,b
  4146  005794  1114               	iorwf	(??_IPV4_Packet+20)& (0+255),w,b
  4147  005796  6F18               	movwf	(??_IPV4_Packet+24)& (0+255),b
  4148  005798  5105               	movf	(??_IPV4_Packet+5)& (0+255),w,b
  4149  00579A  1115               	iorwf	(??_IPV4_Packet+21)& (0+255),w,b
  4150  00579C  6F19               	movwf	(??_IPV4_Packet+25)& (0+255),b
  4151  00579E  5106               	movf	(??_IPV4_Packet+6)& (0+255),w,b
  4152  0057A0  1116               	iorwf	(??_IPV4_Packet+22)& (0+255),w,b
  4153  0057A2  6F1A               	movwf	(??_IPV4_Packet+26)& (0+255),b
  4154  0057A4  5107               	movf	(??_IPV4_Packet+7)& (0+255),w,b
  4155  0057A6  1117               	iorwf	(??_IPV4_Packet+23)& (0+255),w,b
  4156  0057A8  6F1B               	movwf	(??_IPV4_Packet+27)& (0+255),b
  4157  0057AA  5100               	movf	??_IPV4_Packet& (0+255),w,b
  4158  0057AC  1118               	iorwf	(??_IPV4_Packet+24)& (0+255),w,b
  4159  0057AE  6FB4               	movwf	(_ipv4Header+12)& (0+255),b
  4160  0057B0  5101               	movf	(??_IPV4_Packet+1)& (0+255),w,b
  4161  0057B2  1119               	iorwf	(??_IPV4_Packet+25)& (0+255),w,b
  4162  0057B4  6FB5               	movwf	(_ipv4Header+13)& (0+255),b
  4163  0057B6  5102               	movf	(??_IPV4_Packet+2)& (0+255),w,b
  4164  0057B8  111A               	iorwf	(??_IPV4_Packet+26)& (0+255),w,b
  4165  0057BA  6FB6               	movwf	(_ipv4Header+14)& (0+255),b
  4166  0057BC  5103               	movf	(??_IPV4_Packet+3)& (0+255),w,b
  4167  0057BE  111B               	iorwf	(??_IPV4_Packet+27)& (0+255),w,b
  4168  0057C0  6FB7               	movwf	(_ipv4Header+15)& (0+255),b
  4169                           
  4170                           ; BSR set to: 1
  4171                           ;ipv4.c: 139: if((ipv4Header.dstIpAddress == ipv4Address) ||( ipv4Header.dstIpAddress ==
      +                           0xFFFFFFFF))
  4172  0057C2  518E               	movf	_ipv4Address& (0+255),w,b
  4173  0057C4  19B8               	xorwf	(_ipv4Header+16)& (0+255),w,b
  4174  0057C6  E109               	bnz	u15210
  4175  0057C8  518F               	movf	(_ipv4Address+1)& (0+255),w,b
  4176  0057CA  19B9               	xorwf	(_ipv4Header+17)& (0+255),w,b
  4177  0057CC  E106               	bnz	u15210
  4178  0057CE  5190               	movf	(_ipv4Address+2)& (0+255),w,b
  4179  0057D0  19BA               	xorwf	(_ipv4Header+18)& (0+255),w,b
  4180  0057D2  E103               	bnz	u15210
  4181  0057D4  5191               	movf	(_ipv4Address+3)& (0+255),w,b
  4182  0057D6  19BB               	xorwf	(_ipv4Header+19)& (0+255),w,b
  4183  0057D8  E009               	bz	l9828
  4184  0057DA                     u15210:
  4185                           
  4186                           ; BSR set to: 1
  4187  0057DA  29B8               	incf	(_ipv4Header+16)& (0+255),w,b
  4188  0057DC  E106               	bnz	u15221
  4189  0057DE  29B9               	incf	(_ipv4Header+17)& (0+255),w,b
  4190  0057E0  E104               	bnz	u15221
  4191  0057E2  29BA               	incf	(_ipv4Header+18)& (0+255),w,b
  4192  0057E4  E102               	bnz	u15221
  4193  0057E6  29BB               	incf	(_ipv4Header+19)& (0+255),w,b
  4194  0057E8  A4D8               	btfss	status,2,c
  4195  0057EA                     u15221:
  4196  0057EA  0012               	return	
  4197  0057EC                     l9828:
  4198                           
  4199                           ; BSR set to: 1
  4200                           ;ipv4.c: 140: {
  4201                           ;ipv4.c: 141: ipv4Header.length = ((((uint16_t)ipv4Header.length & (uint16_t)0xFF00) >> 
      +                          8) | (((uint16_t)ipv4Header.length & (uint16_t)0x00FF) << 8));
  4202  0057EC  51AA               	movf	(_ipv4Header+2)& (0+255),w,b
  4203  0057EE  6F01               	movwf	(??_IPV4_Packet+1)& (0+255),b
  4204  0057F0  6B00               	clrf	??_IPV4_Packet& (0+255),b
  4205  0057F2  EE21  F0AA         	lfsr	2,_ipv4Header+2
  4206  0057F6  CFDE F102          	movff	postinc2,??_IPV4_Packet+2
  4207  0057FA  CFDD F103          	movff	postdec2,??_IPV4_Packet+3
  4208  0057FE  C103  F102         	movff	??_IPV4_Packet+3,??_IPV4_Packet+2
  4209  005802  6B03               	clrf	(??_IPV4_Packet+3)& (0+255),b
  4210  005804  6B03               	clrf	(??_IPV4_Packet+3)& (0+255),b
  4211  005806  5100               	movf	??_IPV4_Packet& (0+255),w,b
  4212  005808  1102               	iorwf	(??_IPV4_Packet+2)& (0+255),w,b
  4213  00580A  6FAA               	movwf	(_ipv4Header+2)& (0+255),b
  4214  00580C  5101               	movf	(??_IPV4_Packet+1)& (0+255),w,b
  4215  00580E  1103               	iorwf	(??_IPV4_Packet+3)& (0+255),w,b
  4216  005810  6FAB               	movwf	(_ipv4Header+3)& (0+255),b
  4217                           
  4218                           ; BSR set to: 1
  4219                           ;ipv4.c: 143: hdrLen = (uint8_t)(ipv4Header.ihl << 2);
  4220  005812  51A8               	movf	_ipv4Header& (0+255),w,b
  4221  005814  0B0F               	andlw	15
  4222  005816  6F00               	movwf	??_IPV4_Packet& (0+255),b
  4223  005818  90D8               	bcf	status,0,c
  4224  00581A  3700               	rlcf	??_IPV4_Packet& (0+255),f,b
  4225  00581C  90D8               	bcf	status,0,c
  4226  00581E  3500               	rlcf	??_IPV4_Packet& (0+255),w,b
  4227  005820  0100               	movlb	0	; () banked
  4228  005822  6FF9               	movwf	IPV4_Packet@hdrLen& (0+255),b
  4229                           
  4230                           ; BSR set to: 0
  4231                           ;ipv4.c: 145: if (ipv4Header.ihl > 5)
  4232  005824  0101               	movlb	1	; () banked
  4233  005826  51A8               	movf	_ipv4Header& (0+255),w,b
  4234  005828  0B0F               	andlw	15
  4235  00582A  6F00               	movwf	??_IPV4_Packet& (0+255),b
  4236  00582C  0E05               	movlw	5
  4237  00582E  6500               	cpfsgt	??_IPV4_Packet& (0+255),b
  4238  005830  D09C               	goto	l9868
  4239                           
  4240                           ; BSR set to: 1
  4241                           ;ipv4.c: 146: {
  4242                           ;ipv4.c: 148: ETH_Dump((uint16_t)(hdrLen - sizeof(ipv4Header_t)));
  4243  005832  0EEC               	movlw	236
  4244  005834  0100               	movlb	0	; () banked
  4245  005836  25F9               	addwf	IPV4_Packet@hdrLen& (0+255),w,b
  4246  005838  6E0B               	movwf	ETH_Dump@length,c
  4247  00583A  6A0C               	clrf	ETH_Dump@length+1,c
  4248  00583C  0EFF               	movlw	255
  4249  00583E  220C               	addwfc	ETH_Dump@length+1,f,c
  4250  005840  EC76  F041         	call	_ETH_Dump	;wreg free
  4251  005844  D092               	goto	l9868
  4252  005846                     l9836:
  4253                           
  4254                           ; BSR set to: 1
  4255                           ;ipv4.c: 154: {
  4256                           ;ipv4.c: 156: ;
  4257                           ;ipv4.c: 157: length = ipv4Header.length - hdrLen;
  4258  005846  0100               	movlb	0	; () banked
  4259  005848  51F9               	movf	IPV4_Packet@hdrLen& (0+255),w,b
  4260  00584A  0101               	movlb	1	; () banked
  4261  00584C  5DAA               	subwf	(_ipv4Header+2)& (0+255),w,b
  4262  00584E  0100               	movlb	0	; () banked
  4263  005850  6FFA               	movwf	IPV4_Packet@length& (0+255),b
  4264  005852  0101               	movlb	1	; () banked
  4265  005854  51AB               	movf	(_ipv4Header+3)& (0+255),w,b
  4266  005856  A0D8               	btfss	status,0,c
  4267  005858  05AB               	decf	(_ipv4Header+3)& (0+255),w,b
  4268  00585A  0100               	movlb	0	; () banked
  4269  00585C  6FFB               	movwf	(IPV4_Packet@length+1)& (0+255),b
  4270                           
  4271                           ; BSR set to: 0
  4272                           ;ipv4.c: 158: cksm = ETH_RxComputeChecksum(length, 0);
  4273  00585E  C0FA  F00D         	movff	IPV4_Packet@length,ETH_RxComputeChecksum@len
  4274  005862  C0FB  F00E         	movff	IPV4_Packet@length+1,ETH_RxComputeChecksum@len+1
  4275  005866  6A10               	clrf	ETH_RxComputeChecksum@seed+1,c
  4276  005868  6A0F               	clrf	ETH_RxComputeChecksum@seed,c
  4277  00586A  ECB5  F039         	call	_ETH_RxComputeChecksum	;wreg free
  4278  00586E  C00D  F0FC         	movff	?_ETH_RxComputeChecksum,IPV4_Packet@cksm
  4279  005872  C00E  F0FD         	movff	?_ETH_RxComputeChecksum+1,IPV4_Packet@cksm+1
  4280                           
  4281                           ;ipv4.c: 160: if (cksm == 0)
  4282  005876  0100               	movlb	0	; () banked
  4283  005878  51FC               	movf	IPV4_Packet@cksm& (0+255),w,b
  4284  00587A  11FD               	iorwf	(IPV4_Packet@cksm+1)& (0+255),w,b
  4285  00587C  A4D8               	btfss	status,2,c
  4286  00587E  0012               	return	
  4287                           
  4288                           ; BSR set to: 0
  4289                           ;ipv4.c: 161: {
  4290                           ;ipv4.c: 162: ICMP_Receive(&ipv4Header);
  4291  005880  0EA8               	movlw	low _ipv4Header
  4292  005882  6E5A               	movwf	ICMP_Receive@ipv4Hdr,c
  4293  005884  0E01               	movlw	high _ipv4Header
  4294  005886  6E5B               	movwf	ICMP_Receive@ipv4Hdr+1,c
  4295  005888  EF09  F042         	goto	_ICMP_Receive	;wreg free
  4296  00588C                     l9844:
  4297                           
  4298                           ; BSR set to: 1
  4299                           ;ipv4.c: 174: ;
  4300                           ;ipv4.c: 175: length = ipv4Header.length - hdrLen;
  4301  00588C  0100               	movlb	0	; () banked
  4302  00588E  51F9               	movf	IPV4_Packet@hdrLen& (0+255),w,b
  4303  005890  0101               	movlb	1	; () banked
  4304  005892  5DAA               	subwf	(_ipv4Header+2)& (0+255),w,b
  4305  005894  0100               	movlb	0	; () banked
  4306  005896  6FFA               	movwf	IPV4_Packet@length& (0+255),b
  4307  005898  0101               	movlb	1	; () banked
  4308  00589A  51AB               	movf	(_ipv4Header+3)& (0+255),w,b
  4309  00589C  A0D8               	btfss	status,0,c
  4310  00589E  05AB               	decf	(_ipv4Header+3)& (0+255),w,b
  4311  0058A0  0100               	movlb	0	; () banked
  4312  0058A2  6FFB               	movwf	(IPV4_Packet@length+1)& (0+255),b
  4313                           
  4314                           ; BSR set to: 0
  4315                           ;ipv4.c: 176: cksm = IPV4_PseudoHeaderChecksum(length);
  4316  0058A4  C0FA  F002         	movff	IPV4_Packet@length,IPV4_PseudoHeaderChecksum@payloadLen
  4317  0058A8  C0FB  F003         	movff	IPV4_Packet@length+1,IPV4_PseudoHeaderChecksum@payloadLen+1
  4318  0058AC  ECD8  F03C         	call	_IPV4_PseudoHeaderChecksum	;wreg free
  4319  0058B0  C002  F0FC         	movff	?_IPV4_PseudoHeaderChecksum,IPV4_Packet@cksm
  4320  0058B4  C003  F0FD         	movff	?_IPV4_PseudoHeaderChecksum+1,IPV4_Packet@cksm+1
  4321                           
  4322                           ; BSR set to: 0
  4323                           ;ipv4.c: 177: cksm = ETH_RxComputeChecksum(length, cksm);
  4324  0058B8  C0FA  F00D         	movff	IPV4_Packet@length,ETH_RxComputeChecksum@len
  4325  0058BC  C0FB  F00E         	movff	IPV4_Packet@length+1,ETH_RxComputeChecksum@len+1
  4326  0058C0  C0FC  F00F         	movff	IPV4_Packet@cksm,ETH_RxComputeChecksum@seed
  4327  0058C4  C0FD  F010         	movff	IPV4_Packet@cksm+1,ETH_RxComputeChecksum@seed+1
  4328  0058C8  ECB5  F039         	call	_ETH_RxComputeChecksum	;wreg free
  4329  0058CC  C00D  F0FC         	movff	?_ETH_RxComputeChecksum,IPV4_Packet@cksm
  4330  0058D0  C00E  F0FD         	movff	?_ETH_RxComputeChecksum+1,IPV4_Packet@cksm+1
  4331                           
  4332                           ;ipv4.c: 178: UDP_Receive(cksm);
  4333  0058D4  C0FC  F097         	movff	IPV4_Packet@cksm,UDP_Receive@udpcksm
  4334  0058D8  C0FD  F098         	movff	IPV4_Packet@cksm+1,UDP_Receive@udpcksm+1
  4335  0058DC  EFDA  F038         	goto	_UDP_Receive	;wreg free
  4336  0058E0                     l9852:
  4337                           
  4338                           ; BSR set to: 1
  4339                           ;ipv4.c: 183: ;
  4340                           ;ipv4.c: 184: length = ipv4Header.length - hdrLen;
  4341  0058E0  0100               	movlb	0	; () banked
  4342  0058E2  51F9               	movf	IPV4_Packet@hdrLen& (0+255),w,b
  4343  0058E4  0101               	movlb	1	; () banked
  4344  0058E6  5DAA               	subwf	(_ipv4Header+2)& (0+255),w,b
  4345  0058E8  0100               	movlb	0	; () banked
  4346  0058EA  6FFA               	movwf	IPV4_Packet@length& (0+255),b
  4347  0058EC  0101               	movlb	1	; () banked
  4348  0058EE  51AB               	movf	(_ipv4Header+3)& (0+255),w,b
  4349  0058F0  A0D8               	btfss	status,0,c
  4350  0058F2  05AB               	decf	(_ipv4Header+3)& (0+255),w,b
  4351  0058F4  0100               	movlb	0	; () banked
  4352  0058F6  6FFB               	movwf	(IPV4_Packet@length+1)& (0+255),b
  4353                           
  4354                           ; BSR set to: 0
  4355                           ;ipv4.c: 185: cksm = IPV4_PseudoHeaderChecksum(length);
  4356  0058F8  C0FA  F002         	movff	IPV4_Packet@length,IPV4_PseudoHeaderChecksum@payloadLen
  4357  0058FC  C0FB  F003         	movff	IPV4_Packet@length+1,IPV4_PseudoHeaderChecksum@payloadLen+1
  4358  005900  ECD8  F03C         	call	_IPV4_PseudoHeaderChecksum	;wreg free
  4359  005904  C002  F0FC         	movff	?_IPV4_PseudoHeaderChecksum,IPV4_Packet@cksm
  4360  005908  C003  F0FD         	movff	?_IPV4_PseudoHeaderChecksum+1,IPV4_Packet@cksm+1
  4361                           
  4362                           ; BSR set to: 0
  4363                           ;ipv4.c: 186: cksm = ETH_RxComputeChecksum(length, cksm);
  4364  00590C  C0FA  F00D         	movff	IPV4_Packet@length,ETH_RxComputeChecksum@len
  4365  005910  C0FB  F00E         	movff	IPV4_Packet@length+1,ETH_RxComputeChecksum@len+1
  4366  005914  C0FC  F00F         	movff	IPV4_Packet@cksm,ETH_RxComputeChecksum@seed
  4367  005918  C0FD  F010         	movff	IPV4_Packet@cksm+1,ETH_RxComputeChecksum@seed+1
  4368  00591C  ECB5  F039         	call	_ETH_RxComputeChecksum	;wreg free
  4369  005920  C00D  F0FC         	movff	?_ETH_RxComputeChecksum,IPV4_Packet@cksm
  4370  005924  C00E  F0FD         	movff	?_ETH_RxComputeChecksum+1,IPV4_Packet@cksm+1
  4371                           
  4372                           ;ipv4.c: 189: if (cksm == 0)
  4373  005928  0100               	movlb	0	; () banked
  4374  00592A  51FC               	movf	IPV4_Packet@cksm& (0+255),w,b
  4375  00592C  11FD               	iorwf	(IPV4_Packet@cksm+1)& (0+255),w,b
  4376  00592E  A4D8               	btfss	status,2,c
  4377  005930  0012               	return	
  4378                           
  4379                           ; BSR set to: 0
  4380                           ;ipv4.c: 190: {
  4381                           ;ipv4.c: 191: remoteIpv4Address = ipv4Header.srcIpAddress;
  4382  005932  C1B4  F232         	movff	_ipv4Header+12,_remoteIpv4Address
  4383  005936  C1B5  F233         	movff	_ipv4Header+13,_remoteIpv4Address+1
  4384  00593A  C1B6  F234         	movff	_ipv4Header+14,_remoteIpv4Address+2
  4385  00593E  C1B7  F235         	movff	_ipv4Header+15,_remoteIpv4Address+3
  4386                           
  4387                           ; BSR set to: 0
  4388                           ;ipv4.c: 192: TCP_Recv(remoteIpv4Address, length);
  4389  005942  C232  F0D4         	movff	_remoteIpv4Address,TCP_Recv@remoteAddress
  4390  005946  C233  F0D5         	movff	_remoteIpv4Address+1,TCP_Recv@remoteAddress+1
  4391  00594A  C234  F0D6         	movff	_remoteIpv4Address+2,TCP_Recv@remoteAddress+2
  4392  00594E  C235  F0D7         	movff	_remoteIpv4Address+3,TCP_Recv@remoteAddress+3
  4393  005952  C0FA  F0D8         	movff	IPV4_Packet@length,TCP_Recv@length
  4394  005956  C0FB  F0D9         	movff	IPV4_Packet@length+1,TCP_Recv@length+1
  4395  00595A  EFF2  F025         	goto	_TCP_Recv	;wreg free
  4396  00595E                     l9864:
  4397                           
  4398                           ; BSR set to: 1
  4399                           ;ipv4.c: 199: ETH_Dump(ipv4Header.length);
  4400  00595E  C1AA  F00B         	movff	_ipv4Header+2,ETH_Dump@length
  4401  005962  C1AB  F00C         	movff	_ipv4Header+3,ETH_Dump@length+1
  4402  005966  EF76  F041         	goto	_ETH_Dump	;wreg free
  4403  00596A                     l9868:
  4404  00596A  0101               	movlb	1	; () banked
  4405  00596C  51B1               	movf	(_ipv4Header+9)& (0+255),w,b
  4406                           
  4407                           ; Switch size 1, requested type "speed"
  4408                           ; Number of cases is 3, Range of values is 1 to 17
  4409                           ; switch strategies available:
  4410                           ; Name         Instructions Cycles
  4411                           ; simple_byte           10     6 (average)
  4412                           ;	Chosen strategy is simple_byte
  4413  00596E  0A01               	xorlw	1	; case 1
  4414  005970  E101 D769          	bz	l9836
  4415  005974  0A07               	xorlw	7	; case 6
  4416  005976  E0B4               	bz	l9852
  4417  005978  0A17               	xorlw	23	; case 17
  4418  00597A  E088               	bz	l9844
  4419  00597C  D7F0               	goto	l9864
  4420  00597E                     __end_of_IPV4_Packet:
  4421                           	opt stack 0
  4422                           tblptru	equ	0xFF8
  4423                           tblptrh	equ	0xFF7
  4424                           tblptrl	equ	0xFF6
  4425                           tablat	equ	0xFF5
  4426                           prodh	equ	0xFF4
  4427                           prodl	equ	0xFF3
  4428                           intcon	equ	0xFF2
  4429                           intcon2	equ	0xFF1
  4430                           indf0	equ	0xFEF
  4431                           postinc0	equ	0xFEE
  4432                           fsr0h	equ	0xFEA
  4433                           fsr0l	equ	0xFE9
  4434                           wreg	equ	0xFE8
  4435                           indf2	equ	0xFDF
  4436                           postinc2	equ	0xFDE
  4437                           postdec2	equ	0xFDD
  4438                           fsr2h	equ	0xFDA
  4439                           fsr2l	equ	0xFD9
  4440                           status	equ	0xFD8
  4441                           
  4442 ;; *************** function _UDP_Receive *****************
  4443 ;; Defined at:
  4444 ;;		line 126 in file "../../TCPIP Library/source/udpv4.c"
  4445 ;; Parameters:    Size  Location     Type
  4446 ;;  udpcksm         2   55[BANK0 ] unsigned int 
  4447 ;; Auto vars:     Size  Location     Type
  4448 ;;  x               2   63[BANK0 ] unsigned int 
  4449 ;;  hptr            1   65[BANK0 ] PTR const struct .
  4450 ;;		 -> UDP_CallBackTable(5), 
  4451 ;;  ret             1    0        enum E367
  4452 ;; Return value:  Size  Location     Type
  4453 ;;                  1    wreg      enum E6944
  4454 ;; Registers used:
  4455 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
  4456 ;; Tracked objects:
  4457 ;;		On entry : 0/0
  4458 ;;		On exit  : 0/0
  4459 ;;		Unchanged: 0/0
  4460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4461 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4462 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4463 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4464 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4465 ;;Total ram usage:       11 bytes
  4466 ;; Hardware stack levels used:    1
  4467 ;; Hardware stack levels required when called:   12
  4468 ;; This function calls:
  4469 ;;		_DHCP_Handler
  4470 ;;		_ETH_ReadBlock
  4471 ;; This function is called by:
  4472 ;;		_IPV4_Packet
  4473 ;; This function uses a non-reentrant model
  4474 ;;
  4475                           
  4476                           	psect	text18
  4477  0071B4                     __ptext18:
  4478                           	opt stack 0
  4479  0071B4                     _UDP_Receive:
  4480                           	opt stack 15
  4481                           
  4482                           ;udpv4.c: 129: const udp_handler_t *hptr;
  4483                           ;udpv4.c: 130: uint16_t x;
  4484                           ;udpv4.c: 132: hptr = UDP_CallBackTable;
  4485                           
  4486                           ;incstack = 0
  4487  0071B4  0E34               	movlw	low _UDP_CallBackTable
  4488  0071B6  0100               	movlb	0	; () banked
  4489  0071B8  6FA1               	movwf	UDP_Receive@hptr& (0+255),b
  4490                           
  4491                           ; BSR set to: 0
  4492                           ;udpv4.c: 133: ETH_ReadBlock((char *)&udpHeader,sizeof(udpHeader));
  4493  0071BA  0E9F               	movlw	low _udpHeader
  4494  0071BC  6E03               	movwf	ETH_ReadBlock@data,c
  4495  0071BE  0E02               	movlw	high _udpHeader
  4496  0071C0  6E04               	movwf	ETH_ReadBlock@data+1,c
  4497  0071C2  6A06               	clrf	ETH_ReadBlock@length+1,c
  4498  0071C4  0E08               	movlw	8
  4499  0071C6  6E05               	movwf	ETH_ReadBlock@length,c
  4500  0071C8  EC24  F03D         	call	_ETH_ReadBlock	;wreg free
  4501                           
  4502                           ; BSR set to: 1
  4503                           ;udpv4.c: 135: if((udpHeader.checksum == 0) || (udpcksm == 0))
  4504  0071CC  0102               	movlb	2	; () banked
  4505  0071CE  51A5               	movf	(_udpHeader+6)& (0+255),w,b
  4506  0071D0  11A6               	iorwf	(_udpHeader+7)& (0+255),w,b
  4507  0071D2  E005               	bz	l9346
  4508                           
  4509                           ; BSR set to: 2
  4510  0071D4  0100               	movlb	0	; () banked
  4511  0071D6  5197               	movf	UDP_Receive@udpcksm& (0+255),w,b
  4512  0071D8  1198               	iorwf	(UDP_Receive@udpcksm+1)& (0+255),w,b
  4513  0071DA  A4D8               	btfss	status,2,c
  4514  0071DC  0012               	return	
  4515  0071DE                     l9346:
  4516                           
  4517                           ;udpv4.c: 138: destPort = ((((uint16_t)udpHeader.srcPort & (uint16_t)0xFF00) >> 8) | (((
      +                          uint16_t)udpHeader.srcPort & (uint16_t)0x00FF) << 8));
  4518  0071DE  0102               	movlb	2	; () banked
  4519  0071E0  51A1               	movf	(_udpHeader+2)& (0+255),w,b
  4520  0071E2  0100               	movlb	0	; () banked
  4521  0071E4  6F9A               	movwf	(??_UDP_Receive+1)& (0+255),b
  4522  0071E6  6B99               	clrf	??_UDP_Receive& (0+255),b
  4523  0071E8  EE22  F0A1         	lfsr	2,_udpHeader+2
  4524  0071EC  CFDE F09B          	movff	postinc2,??_UDP_Receive+2
  4525  0071F0  CFDD F09C          	movff	postdec2,??_UDP_Receive+3
  4526  0071F4  C09C  F09B         	movff	??_UDP_Receive+3,??_UDP_Receive+2
  4527  0071F8  6B9C               	clrf	(??_UDP_Receive+3)& (0+255),b
  4528  0071FA  6B9C               	clrf	(??_UDP_Receive+3)& (0+255),b
  4529  0071FC  5199               	movf	??_UDP_Receive& (0+255),w,b
  4530  0071FE  119B               	iorwf	(??_UDP_Receive+2)& (0+255),w,b
  4531  007200  0102               	movlb	2	; () banked
  4532  007202  6FA1               	movwf	(_udpHeader+2)& (0+255),b
  4533  007204  0100               	movlb	0	; () banked
  4534  007206  519A               	movf	(??_UDP_Receive+1)& (0+255),w,b
  4535  007208  119C               	iorwf	(??_UDP_Receive+3)& (0+255),w,b
  4536  00720A  0102               	movlb	2	; () banked
  4537  00720C  6FA2               	movwf	(_udpHeader+3)& (0+255),b
  4538                           
  4539                           ; BSR set to: 2
  4540                           ;udpv4.c: 142: for(x = 0; x < (sizeof(UDP_CallBackTable) / sizeof(*(UDP_CallBackTable)))
      +                          ;x++)
  4541                           
  4542                           ; BSR set to: 2
  4543  00720E  0100               	movlb	0	; () banked
  4544  007210  6B9F               	clrf	UDP_Receive@x& (0+255),b
  4545  007212  6BA0               	clrf	(UDP_Receive@x+1)& (0+255),b
  4546  007214                     l9356:
  4547                           
  4548                           ; BSR set to: 0
  4549                           ;udpv4.c: 143: {
  4550                           ;udpv4.c: 144: if(hptr->portNumber == udpHeader.dstPort)
  4551  007214  C0A1  FFF6         	movff	UDP_Receive@hptr,tblptrl
  4552  007218                     	if	1	;There is more than 1 active tblptr byte
  4553  007218  0E10               	movlw	high __smallconst
  4554  00721A  6EF7               	movwf	tblptrh,c
  4555  00721C                     	endif
  4556  00721C                     	if	0	;tblptru may be non-zero
  4557  00721C                     	endif
  4558  00721C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4559  00721C  0E00               	movlw	low (__smallconst shr (0+16))
  4560  00721E  6EF8               	movwf	tblptru,c
  4561  007220                     	endif
  4562  007220  0102               	movlb	2	; () banked
  4563  007222  51A1               	movf	(_udpHeader+2)& (0+255),w,b
  4564  007224  0009               	tblrd		*+
  4565  007226  18F5               	xorwf	tablat,w,c
  4566  007228  E133               	bnz	l9362
  4567  00722A  51A2               	movf	(_udpHeader+3)& (0+255),w,b
  4568  00722C  0009               	tblrd		*+
  4569  00722E  18F5               	xorwf	tablat,w,c
  4570  007230  E12F               	bnz	l9362
  4571                           
  4572                           ; BSR set to: 2
  4573                           ;udpv4.c: 145: {
  4574                           ;udpv4.c: 146: hptr->callBack(((((uint16_t)udpHeader.length & (uint16_t)0xFF00) >> 8) | 
      +                          (((uint16_t)udpHeader.length & (uint16_t)0x00FF) << 8)) - sizeof(udpHeader));
  4575  007232  51A3               	movf	(_udpHeader+4)& (0+255),w,b
  4576  007234  0100               	movlb	0	; () banked
  4577  007236  6F9A               	movwf	(??_UDP_Receive+1)& (0+255),b
  4578  007238  6B99               	clrf	??_UDP_Receive& (0+255),b
  4579  00723A  EE22  F0A3         	lfsr	2,_udpHeader+4
  4580  00723E  CFDE F09B          	movff	postinc2,??_UDP_Receive+2
  4581  007242  CFDD F09C          	movff	postdec2,??_UDP_Receive+3
  4582  007246  C09C  F09B         	movff	??_UDP_Receive+3,??_UDP_Receive+2
  4583  00724A  6B9C               	clrf	(??_UDP_Receive+3)& (0+255),b
  4584  00724C  6B9C               	clrf	(??_UDP_Receive+3)& (0+255),b
  4585  00724E  5199               	movf	??_UDP_Receive& (0+255),w,b
  4586  007250  139B               	iorwf	(??_UDP_Receive+2)& (0+255),f,b
  4587  007252  519A               	movf	(??_UDP_Receive+1)& (0+255),w,b
  4588  007254  139C               	iorwf	(??_UDP_Receive+3)& (0+255),f,b
  4589  007256  0EF8               	movlw	248
  4590  007258  259B               	addwf	(??_UDP_Receive+2)& (0+255),w,b
  4591  00725A  6E59               	movwf	DHCP_Handler@length,c
  4592  00725C  0EFF               	movlw	255
  4593  00725E  219C               	addwfc	(??_UDP_Receive+3)& (0+255),w,b
  4594  007260  6E5A               	movwf	DHCP_Handler@length+1,c
  4595  007262  C0A1  F09D         	movff	UDP_Receive@hptr,??_UDP_Receive+4
  4596  007266  0E02               	movlw	2
  4597  007268  279D               	addwf	(??_UDP_Receive+4)& (0+255),f,b
  4598  00726A  C09D  FFF6         	movff	??_UDP_Receive+4,tblptrl
  4599  00726E                     	if	1	;There is more than 1 active tblptr byte
  4600  00726E  0E10               	movlw	high __smallconst
  4601  007270  6EF7               	movwf	tblptrh,c
  4602  007272                     	endif
  4603  007272                     	if	0	;tblptru may be non-zero
  4604  007272                     	endif
  4605  007272                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4606  007272  0E00               	movlw	low (__smallconst shr (0+16))
  4607  007274  6EF8               	movwf	tblptru,c
  4608  007276                     	endif
  4609  007276  0005               	push	
  4610  007278  6EFA               	movwf	pclath,c
  4611  00727A  0009               	tblrd		*+
  4612  00727C  50F5               	movf	tablat,w,c
  4613  00727E  6EFD               	movwf	tosl,c
  4614  007280  0009               	tblrd		*+
  4615  007282  50F5               	movf	tablat,w,c
  4616  007284  6EFE               	movwf	tosh,c
  4617  007286  0009               	tblrd		*+
  4618  007288  50F5               	movf	tablat,w,c
  4619  00728A  6EFF               	movwf	tosu,c
  4620  00728C  50FA               	movf	pclath,w,c
  4621  00728E  0012               	return		;indir
  4622  007290                     l9362:
  4623                           
  4624                           ; BSR set to: 2
  4625                           ;udpv4.c: 149: }
  4626                           ;udpv4.c: 150: hptr ++;
  4627  007290  0E05               	movlw	5
  4628  007292  0100               	movlb	0	; () banked
  4629  007294  27A1               	addwf	UDP_Receive@hptr& (0+255),f,b
  4630                           
  4631                           ; BSR set to: 0
  4632  007296  4B9F               	infsnz	UDP_Receive@x& (0+255),f,b
  4633  007298  2BA0               	incf	(UDP_Receive@x+1)& (0+255),f,b
  4634                           
  4635                           ; BSR set to: 0
  4636  00729A  519F               	movf	UDP_Receive@x& (0+255),w,b
  4637  00729C  11A0               	iorwf	(UDP_Receive@x+1)& (0+255),w,b
  4638  00729E  E0BA               	bz	l9356
  4639  0072A0  0012               	return	
  4640  0072A2                     __end_of_UDP_Receive:
  4641                           	opt stack 0
  4642                           tosu	equ	0xFFF
  4643                           tosh	equ	0xFFE
  4644                           tosl	equ	0xFFD
  4645                           pclath	equ	0xFFA
  4646                           tblptru	equ	0xFF8
  4647                           tblptrh	equ	0xFF7
  4648                           tblptrl	equ	0xFF6
  4649                           tablat	equ	0xFF5
  4650                           prodh	equ	0xFF4
  4651                           prodl	equ	0xFF3
  4652                           intcon	equ	0xFF2
  4653                           intcon2	equ	0xFF1
  4654                           indf0	equ	0xFEF
  4655                           postinc0	equ	0xFEE
  4656                           fsr0h	equ	0xFEA
  4657                           fsr0l	equ	0xFE9
  4658                           wreg	equ	0xFE8
  4659                           indf2	equ	0xFDF
  4660                           postinc2	equ	0xFDE
  4661                           postdec2	equ	0xFDD
  4662                           fsr2h	equ	0xFDA
  4663                           fsr2l	equ	0xFD9
  4664                           status	equ	0xFD8
  4665                           
  4666 ;; *************** function _DHCP_Handler *****************
  4667 ;; Defined at:
  4668 ;;		line 162 in file "../../TCPIP Library/source/dhcp_client.c"
  4669 ;; Parameters:    Size  Location     Type
  4670 ;;  length          2   88[COMRAM] int 
  4671 ;; Auto vars:     Size  Location     Type
  4672 ;;  optionLength    1   50[BANK0 ] unsigned char 
  4673 ;;  option          1   37[BANK0 ] unsigned char 
  4674 ;;  ip              8   23[BANK0 ] unsigned int [4]
  4675 ;;  ethMAC          6   44[BANK0 ] struct .
  4676 ;;  ethPktMAC       6   38[BANK0 ] struct .
  4677 ;;  myip            4   51[BANK0 ] unsigned long 
  4678 ;;  v               4   31[BANK0 ] unsigned long 
  4679 ;;  v16             2   35[BANK0 ] unsigned int 
  4680 ;; Return value:  Size  Location     Type
  4681 ;;		None               void
  4682 ;; Registers used:
  4683 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4684 ;; Tracked objects:
  4685 ;;		On entry : F/0
  4686 ;;		On exit  : 0/0
  4687 ;;		Unchanged: 0/0
  4688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4689 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4690 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4691 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4692 ;;      Totals:         4      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4693 ;;Total ram usage:       36 bytes
  4694 ;; Hardware stack levels used:    1
  4695 ;; Hardware stack levels required when called:   11
  4696 ;; This function calls:
  4697 ;;		_DHCP_Request
  4698 ;;		_ETH_Dump
  4699 ;;		_ETH_GetMAC
  4700 ;;		_ETH_Read16
  4701 ;;		_ETH_Read32
  4702 ;;		_ETH_Read8
  4703 ;;		_ETH_ReadBlock
  4704 ;;		_memcmp
  4705 ;; This function is called by:
  4706 ;;		_UDP_Receive
  4707 ;; This function uses a non-reentrant model
  4708 ;;
  4709                           
  4710                           	psect	text19
  4711  006560                     __ptext19:
  4712                           	opt stack 0
  4713  006560                     _DHCP_Handler:
  4714                           	opt stack 15
  4715                           
  4716                           ; BSR set to: 0
  4717                           ;dhcp_client.c: 165: uint32_t myip,v;
  4718                           ;dhcp_client.c: 166: uint16_t v16;
  4719                           ;dhcp_client.c: 167: uint16_t ip[4];
  4720                           ;dhcp_client.c: 169: mac48Address_t ethPktMAC;
  4721                           ;dhcp_client.c: 170: mac48Address_t ethMAC;
  4722                           ;dhcp_client.c: 172: ETH_GetMAC((char*)&ethMAC);
  4723                           
  4724                           ;incstack = 0
  4725  006560  0E8C               	movlw	low DHCP_Handler@ethMAC
  4726  006562  6E08               	movwf	ETH_GetMAC@macAddr,c
  4727  006564  6A09               	clrf	ETH_GetMAC@macAddr+1,c
  4728  006566  ECC8  F03E         	call	_ETH_GetMAC	;wreg free
  4729                           
  4730                           ;dhcp_client.c: 178: if(length > 240)
  4731  00656A  BE5A               	btfsc	DHCP_Handler@length+1,7,c
  4732  00656C  0012               	return	
  4733  00656E  505A               	movf	DHCP_Handler@length+1,w,c
  4734  006570  E104               	bnz	u12020
  4735  006572  0EF1               	movlw	241
  4736  006574  5C59               	subwf	DHCP_Handler@length,w,c
  4737  006576  A0D8               	btfss	status,0,c
  4738  006578  0012               	return	
  4739  00657A                     u12020:
  4740                           
  4741                           ;dhcp_client.c: 179: {
  4742                           ;dhcp_client.c: 180: v16 = ETH_Read16();
  4743  00657A  ECE5  F041         	call	_ETH_Read16	;wreg free
  4744  00657E  C003  F083         	movff	?_ETH_Read16,DHCP_Handler@v16
  4745  006582  C004  F084         	movff	?_ETH_Read16+1,DHCP_Handler@v16+1
  4746                           
  4747                           ; BSR set to: 1
  4748                           ;dhcp_client.c: 181: if(v16 == 0x0201)
  4749  006586  0100               	movlb	0	; () banked
  4750  006588  0583               	decf	DHCP_Handler@v16& (0+255),w,b
  4751  00658A  E103               	bnz	u12031
  4752  00658C  0E02               	movlw	2
  4753  00658E  1984               	xorwf	(DHCP_Handler@v16+1)& (0+255),w,b
  4754  006590  A4D8               	btfss	status,2,c
  4755  006592                     u12031:
  4756  006592  0012               	return	
  4757                           
  4758                           ; BSR set to: 0
  4759                           ;dhcp_client.c: 182: {
  4760                           ;dhcp_client.c: 183: ETH_Dump(2);
  4761  006594  6A0C               	clrf	ETH_Dump@length+1,c
  4762  006596  0E02               	movlw	2
  4763  006598  6E0B               	movwf	ETH_Dump@length,c
  4764  00659A  EC76  F041         	call	_ETH_Dump	;wreg free
  4765                           
  4766                           ;dhcp_client.c: 184: v = ETH_Read32();
  4767  00659E  ECAD  F03F         	call	_ETH_Read32	;wreg free
  4768  0065A2  C003  F07F         	movff	?_ETH_Read32,DHCP_Handler@v
  4769  0065A6  C004  F080         	movff	?_ETH_Read32+1,DHCP_Handler@v+1
  4770  0065AA  C005  F081         	movff	?_ETH_Read32+2,DHCP_Handler@v+2
  4771  0065AE  C006  F082         	movff	?_ETH_Read32+3,DHCP_Handler@v+3
  4772                           
  4773                           ; BSR set to: 1
  4774                           ;dhcp_client.c: 185: if(v == xidValue)
  4775  0065B2  0E50               	movlw	80
  4776  0065B4  0100               	movlb	0	; () banked
  4777  0065B6  197F               	xorwf	DHCP_Handler@v& (0+255),w,b
  4778  0065B8  E109               	bnz	u12041
  4779  0065BA  0E48               	movlw	72
  4780  0065BC  1980               	xorwf	(DHCP_Handler@v+1)& (0+255),w,b
  4781  0065BE  E106               	bnz	u12041
  4782  0065C0  0E43               	movlw	67
  4783  0065C2  1981               	xorwf	(DHCP_Handler@v+2)& (0+255),w,b
  4784  0065C4  E103               	bnz	u12041
  4785  0065C6  0E4D               	movlw	77
  4786  0065C8  1982               	xorwf	(DHCP_Handler@v+3)& (0+255),w,b
  4787  0065CA  A4D8               	btfss	status,2,c
  4788  0065CC                     u12041:
  4789  0065CC  0012               	return	
  4790                           
  4791                           ; BSR set to: 0
  4792                           ;dhcp_client.c: 186: {
  4793                           ;dhcp_client.c: 187: ETH_Dump(8);
  4794  0065CE  6A0C               	clrf	ETH_Dump@length+1,c
  4795  0065D0  0E08               	movlw	8
  4796  0065D2  6E0B               	movwf	ETH_Dump@length,c
  4797  0065D4  EC76  F041         	call	_ETH_Dump	;wreg free
  4798                           
  4799                           ;dhcp_client.c: 188: myip = ETH_Read32();
  4800  0065D8  ECAD  F03F         	call	_ETH_Read32	;wreg free
  4801  0065DC  C003  F093         	movff	?_ETH_Read32,DHCP_Handler@myip
  4802  0065E0  C004  F094         	movff	?_ETH_Read32+1,DHCP_Handler@myip+1
  4803  0065E4  C005  F095         	movff	?_ETH_Read32+2,DHCP_Handler@myip+2
  4804  0065E8  C006  F096         	movff	?_ETH_Read32+3,DHCP_Handler@myip+3
  4805                           
  4806                           ; BSR set to: 1
  4807                           ;dhcp_client.c: 189: ip[0] = myip & 0x00FF;
  4808  0065EC  0100               	movlb	0	; () banked
  4809  0065EE  5193               	movf	DHCP_Handler@myip& (0+255),w,b
  4810  0065F0  6F77               	movwf	DHCP_Handler@ip& (0+255),b
  4811  0065F2  6B78               	clrf	(DHCP_Handler@ip+1)& (0+255),b
  4812                           
  4813                           ; BSR set to: 0
  4814                           ;dhcp_client.c: 190: ip[1] = (myip >> 8) & 0x00FF;
  4815  0065F4  5194               	movf	(DHCP_Handler@myip+1)& (0+255),w,b
  4816  0065F6  6F79               	movwf	(DHCP_Handler@ip+2)& (0+255),b
  4817  0065F8  6B7A               	clrf	(DHCP_Handler@ip+3)& (0+255),b
  4818                           
  4819                           ; BSR set to: 0
  4820                           ;dhcp_client.c: 191: ip[2] = (myip >> 16) & 0x00FF;
  4821  0065FA  5195               	movf	(DHCP_Handler@myip+2)& (0+255),w,b
  4822  0065FC  6F7B               	movwf	(DHCP_Handler@ip+4)& (0+255),b
  4823  0065FE  6B7C               	clrf	(DHCP_Handler@ip+5)& (0+255),b
  4824                           
  4825                           ; BSR set to: 0
  4826                           ;dhcp_client.c: 192: ip[3] = (myip >> 24) & 0x00FF;
  4827  006600  C096  F07D         	movff	DHCP_Handler@myip+3,DHCP_Handler@ip+6
  4828  006604  6B7E               	clrf	(DHCP_Handler@ip+7)& (0+255),b
  4829                           
  4830                           ; BSR set to: 0
  4831                           ;dhcp_client.c: 193: ETH_Dump(8);
  4832  006606  6A0C               	clrf	ETH_Dump@length+1,c
  4833  006608  0E08               	movlw	8
  4834  00660A  6E0B               	movwf	ETH_Dump@length,c
  4835  00660C  EC76  F041         	call	_ETH_Dump	;wreg free
  4836                           
  4837                           ; BSR set to: 2
  4838                           ;dhcp_client.c: 194: ETH_ReadBlock((char *)&ethPktMAC, sizeof(ethPktMAC.s));
  4839  006610  0E86               	movlw	low DHCP_Handler@ethPktMAC
  4840  006612  6E03               	movwf	ETH_ReadBlock@data,c
  4841  006614  6A04               	clrf	ETH_ReadBlock@data+1,c
  4842  006616  6A06               	clrf	ETH_ReadBlock@length+1,c
  4843  006618  0E06               	movlw	6
  4844  00661A  6E05               	movwf	ETH_ReadBlock@length,c
  4845  00661C  EC24  F03D         	call	_ETH_ReadBlock	;wreg free
  4846                           
  4847                           ; BSR set to: 1
  4848                           ;dhcp_client.c: 196: if(memcmp(&ethPktMAC.s, &ethMAC.s, 6)== 0)
  4849  006620  0E8C               	movlw	low DHCP_Handler@ethMAC
  4850  006622  6E02               	movwf	memcmp@s2,c
  4851  006624  6A04               	clrf	memcmp@n+1,c
  4852  006626  0E06               	movlw	6
  4853  006628  6E03               	movwf	memcmp@n,c
  4854  00662A  0E86               	movlw	DHCP_Handler@ethPktMAC& (0+255)
  4855  00662C  EC2A  F041         	call	_memcmp
  4856  006630  5002               	movf	?_memcmp,w,c
  4857  006632  1003               	iorwf	?_memcmp+1,w,c
  4858  006634  E001 D0C1          	bnz	l8730
  4859                           
  4860                           ;dhcp_client.c: 197: {
  4861                           ;dhcp_client.c: 198: ETH_Dump(202);
  4862  006638  6A0C               	clrf	ETH_Dump@length+1,c
  4863  00663A  0ECA               	movlw	202
  4864  00663C  6E0B               	movwf	ETH_Dump@length,c
  4865  00663E  EC76  F041         	call	_ETH_Dump	;wreg free
  4866                           
  4867                           ;dhcp_client.c: 199: if(ETH_Read32() == 0x63825363)
  4868  006642  ECAD  F03F         	call	_ETH_Read32	;wreg free
  4869  006646  0E63               	movlw	99
  4870  006648  1803               	xorwf	?_ETH_Read32,w,c
  4871  00664A  E109               	bnz	u12061
  4872  00664C  0E53               	movlw	83
  4873  00664E  1804               	xorwf	?_ETH_Read32+1,w,c
  4874  006650  E106               	bnz	u12061
  4875  006652  0E82               	movlw	130
  4876  006654  1805               	xorwf	?_ETH_Read32+2,w,c
  4877  006656  E103               	bnz	u12061
  4878  006658  0E63               	movlw	99
  4879  00665A  1806               	xorwf	?_ETH_Read32+3,w,c
  4880  00665C  A4D8               	btfss	status,2,c
  4881  00665E                     u12061:
  4882  00665E  0012               	return	
  4883                           
  4884                           ; BSR set to: 1
  4885                           ;dhcp_client.c: 200: {
  4886                           ;dhcp_client.c: 201: length -= 240;
  4887  006660  0E10               	movlw	16
  4888  006662  2659               	addwf	DHCP_Handler@length,f,c
  4889  006664  0EFF               	movlw	255
  4890  006666  225A               	addwfc	DHCP_Handler@length+1,f,c
  4891                           
  4892                           ;dhcp_client.c: 202: while(length>0)
  4893  006668  D09A               	goto	l8724
  4894  00666A                     l8676:
  4895                           
  4896                           ;dhcp_client.c: 203: {
  4897                           ;dhcp_client.c: 205: uint8_t option, optionLength;
  4898                           ;dhcp_client.c: 206: option = ETH_Read8();
  4899  00666A  EC7F  F043         	call	_ETH_Read8	;wreg free
  4900  00666E  0100               	movlb	0	; () banked
  4901  006670  6F85               	movwf	DHCP_Handler@option& (0+255),b
  4902                           
  4903                           ;dhcp_client.c: 207: optionLength = ETH_Read8();
  4904  006672  EC7F  F043         	call	_ETH_Read8	;wreg free
  4905  006676  0100               	movlb	0	; () banked
  4906  006678  6F92               	movwf	DHCP_Handler@optionLength& (0+255),b
  4907                           
  4908                           ; BSR set to: 0
  4909                           ;dhcp_client.c: 208: length -= 2 + optionLength;
  4910  00667A  5192               	movf	DHCP_Handler@optionLength& (0+255),w,b
  4911  00667C  6E5B               	movwf	??_DHCP_Handler& (0+255),c
  4912  00667E  6A5C               	clrf	(??_DHCP_Handler+1)& (0+255),c
  4913  006680  0E02               	movlw	2
  4914  006682  265B               	addwf	??_DHCP_Handler,f,c
  4915  006684  0E00               	movlw	0
  4916  006686  225C               	addwfc	??_DHCP_Handler+1,f,c
  4917  006688  505B               	movf	??_DHCP_Handler,w,c
  4918  00668A  5E59               	subwf	DHCP_Handler@length,f,c
  4919  00668C  505C               	movf	??_DHCP_Handler+1,w,c
  4920  00668E  5A5A               	subwfb	DHCP_Handler@length+1,f,c
  4921                           
  4922                           ;dhcp_client.c: 209: switch(option)
  4923  006690  D078               	goto	l8722
  4924  006692                     l8680:
  4925                           
  4926                           ; BSR set to: 0
  4927                           ;dhcp_client.c: 212: ipv4SubnetMask = ETH_Read32();
  4928  006692  ECAD  F03F         	call	_ETH_Read32	;wreg free
  4929  006696  C003  F192         	movff	?_ETH_Read32,_ipv4SubnetMask
  4930  00669A  C004  F193         	movff	?_ETH_Read32+1,_ipv4SubnetMask+1
  4931  00669E  C005  F194         	movff	?_ETH_Read32+2,_ipv4SubnetMask+2
  4932  0066A2  C006  F195         	movff	?_ETH_Read32+3,_ipv4SubnetMask+3
  4933                           
  4934                           ;dhcp_client.c: 213: break;
  4935  0066A6  D07B               	goto	l8724
  4936  0066A8                     l8682:
  4937                           
  4938                           ; BSR set to: 0
  4939                           ;dhcp_client.c: 215: ipv4Router = ETH_Read32();
  4940  0066A8  ECAD  F03F         	call	_ETH_Read32	;wreg free
  4941  0066AC  C003  F22A         	movff	?_ETH_Read32,_ipv4Router
  4942  0066B0  C004  F22B         	movff	?_ETH_Read32+1,_ipv4Router+1
  4943  0066B4  C005  F22C         	movff	?_ETH_Read32+2,_ipv4Router+2
  4944  0066B8  C006  F22D         	movff	?_ETH_Read32+3,_ipv4Router+3
  4945                           
  4946                           ;dhcp_client.c: 216: break;
  4947  0066BC  D070               	goto	l8724
  4948  0066BE                     l8684:
  4949                           
  4950                           ; BSR set to: 0
  4951                           ;dhcp_client.c: 219: if(optionLength >= 4)
  4952  0066BE  0E03               	movlw	3
  4953  0066C0  6592               	cpfsgt	DHCP_Handler@optionLength& (0+255),b
  4954  0066C2  D06D               	goto	l8724
  4955                           
  4956                           ; BSR set to: 0
  4957                           ;dhcp_client.c: 220: {
  4958                           ;dhcp_client.c: 221: ipv4DNS[0] = ETH_Read32();
  4959  0066C4  ECAD  F03F         	call	_ETH_Read32	;wreg free
  4960  0066C8  C003  F210         	movff	?_ETH_Read32,_ipv4DNS
  4961  0066CC  C004  F211         	movff	?_ETH_Read32+1,_ipv4DNS+1
  4962  0066D0  C005  F212         	movff	?_ETH_Read32+2,_ipv4DNS+2
  4963  0066D4  C006  F213         	movff	?_ETH_Read32+3,_ipv4DNS+3
  4964                           
  4965                           ; BSR set to: 1
  4966                           ;dhcp_client.c: 222: optionLength -= 4;
  4967  0066D8  0E04               	movlw	4
  4968  0066DA  0100               	movlb	0	; () banked
  4969  0066DC  5F92               	subwf	DHCP_Handler@optionLength& (0+255),f,b
  4970                           
  4971                           ; BSR set to: 0
  4972                           ;dhcp_client.c: 223: if(optionLength >= 4)
  4973  0066DE  0E03               	movlw	3
  4974  0066E0  6592               	cpfsgt	DHCP_Handler@optionLength& (0+255),b
  4975  0066E2  D05D               	goto	l8724
  4976                           
  4977                           ; BSR set to: 0
  4978                           ;dhcp_client.c: 224: {
  4979                           ;dhcp_client.c: 225: ipv4DNS[1] = ETH_Read32();
  4980  0066E4  ECAD  F03F         	call	_ETH_Read32	;wreg free
  4981  0066E8  C003  F214         	movff	?_ETH_Read32,_ipv4DNS+4
  4982  0066EC  C004  F215         	movff	?_ETH_Read32+1,_ipv4DNS+5
  4983  0066F0  C005  F216         	movff	?_ETH_Read32+2,_ipv4DNS+6
  4984  0066F4  C006  F217         	movff	?_ETH_Read32+3,_ipv4DNS+7
  4985  0066F8                     l8694:
  4986                           
  4987                           ; BSR set to: 1
  4988                           ;dhcp_client.c: 226: optionLength -= 4;
  4989  0066F8  0E04               	movlw	4
  4990  0066FA  0100               	movlb	0	; () banked
  4991  0066FC  5F92               	subwf	DHCP_Handler@optionLength& (0+255),f,b
  4992  0066FE  D04F               	goto	l8724
  4993  006700                     l8696:
  4994                           
  4995                           ; BSR set to: 0
  4996                           ;dhcp_client.c: 231: if(optionLength >= 4)
  4997  006700  0E03               	movlw	3
  4998  006702  6592               	cpfsgt	DHCP_Handler@optionLength& (0+255),b
  4999  006704  D04C               	goto	l8724
  5000                           
  5001                           ; BSR set to: 0
  5002                           ;dhcp_client.c: 232: {
  5003                           ;dhcp_client.c: 233: dhcpLeaseTime = ETH_Read32();
  5004  006706  ECAD  F03F         	call	_ETH_Read32	;wreg free
  5005  00670A  C003  F18A         	movff	?_ETH_Read32,_dhcpLeaseTime
  5006  00670E  C004  F18B         	movff	?_ETH_Read32+1,_dhcpLeaseTime+1
  5007  006712  C005  F18C         	movff	?_ETH_Read32+2,_dhcpLeaseTime+2
  5008  006716  C006  F18D         	movff	?_ETH_Read32+3,_dhcpLeaseTime+3
  5009  00671A  D7EE               	goto	l8694
  5010  00671C                     l8702:
  5011                           
  5012                           ; BSR set to: 0
  5013                           ;dhcp_client.c: 238: dhcpServerId = ETH_Read32();
  5014  00671C  ECAD  F03F         	call	_ETH_Read32	;wreg free
  5015  006720  C003  F226         	movff	?_ETH_Read32,_dhcpServerId
  5016  006724  C004  F227         	movff	?_ETH_Read32+1,_dhcpServerId+1
  5017  006728  C005  F228         	movff	?_ETH_Read32+2,_dhcpServerId+2
  5018  00672C  C006  F229         	movff	?_ETH_Read32+3,_dhcpServerId+3
  5019  006730  D7E3               	goto	l8694
  5020  006732                     l900:
  5021                           
  5022                           ; BSR set to: 1
  5023                           ;dhcp_client.c: 245: ipv4Address = myip;
  5024  006732  C093  F18E         	movff	DHCP_Handler@myip,_ipv4Address
  5025  006736  C094  F18F         	movff	DHCP_Handler@myip+1,_ipv4Address+1
  5026  00673A  C095  F190         	movff	DHCP_Handler@myip+2,_ipv4Address+2
  5027  00673E  C096  F191         	movff	DHCP_Handler@myip+3,_ipv4Address+3
  5028                           
  5029                           ; BSR set to: 1
  5030                           ;dhcp_client.c: 246: clientState = REQUESTING;
  5031  006742  0E04               	movlw	4
  5032  006744  D00B               	goto	L3
  5033  006746                     l902:
  5034                           
  5035                           ; BSR set to: 1
  5036                           ;dhcp_client.c: 249: ipv4Address = myip;
  5037  006746  C093  F18E         	movff	DHCP_Handler@myip,_ipv4Address
  5038  00674A  C094  F18F         	movff	DHCP_Handler@myip+1,_ipv4Address+1
  5039  00674E  C095  F190         	movff	DHCP_Handler@myip+2,_ipv4Address+2
  5040  006752  C096  F191         	movff	DHCP_Handler@myip+3,_ipv4Address+3
  5041                           
  5042                           ; BSR set to: 1
  5043                           ;dhcp_client.c: 250: clientState = BOUND;
  5044  006756  0E05               	movlw	5
  5045  006758  D001               	goto	L3
  5046  00675A                     l8710:
  5047                           
  5048                           ; BSR set to: 1
  5049                           ;dhcp_client.c: 254: clientState = INIT;
  5050  00675A  0E01               	movlw	1
  5051  00675C                     L3:
  5052  00675C  6E5D               	movwf	_clientState,c
  5053                           
  5054                           ;dhcp_client.c: 255: break;
  5055  00675E  D008               	goto	l8716
  5056  006760                     l8714:
  5057                           
  5058                           ; BSR set to: 0
  5059  006760  EC7F  F043         	call	_ETH_Read8	;wreg free
  5060                           
  5061                           ; Switch size 1, requested type "speed"
  5062                           ; Number of cases is 3, Range of values is 2 to 6
  5063                           ; switch strategies available:
  5064                           ; Name         Instructions Cycles
  5065                           ; simple_byte           10     6 (average)
  5066                           ;	Chosen strategy is simple_byte
  5067  006764  0A02               	xorlw	2	; case 2
  5068  006766  E0E5               	bz	l900
  5069  006768  0A07               	xorlw	7	; case 5
  5070  00676A  E0ED               	bz	l902
  5071  00676C  0A03               	xorlw	3	; case 6
  5072  00676E  E0F5               	bz	l8710
  5073  006770                     l8716:
  5074                           
  5075                           ; BSR set to: 1
  5076                           ;dhcp_client.c: 259: optionLength -=1;
  5077  006770  0100               	movlb	0	; () banked
  5078  006772  0792               	decf	DHCP_Handler@optionLength& (0+255),f,b
  5079                           
  5080                           ;dhcp_client.c: 260: break;
  5081  006774  D014               	goto	l8724
  5082  006776                     l8718:
  5083                           
  5084                           ; BSR set to: 0
  5085                           ;dhcp_client.c: 262: ETH_Dump(optionLength);
  5086  006776  C092  F00B         	movff	DHCP_Handler@optionLength,ETH_Dump@length
  5087  00677A  6A0C               	clrf	ETH_Dump@length+1,c
  5088  00677C  EC76  F041         	call	_ETH_Dump	;wreg free
  5089                           
  5090                           ;dhcp_client.c: 263: break;
  5091  006780  D00E               	goto	l8724
  5092  006782                     l8722:
  5093                           
  5094                           ; BSR set to: 0
  5095  006782  5185               	movf	DHCP_Handler@option& (0+255),w,b
  5096                           
  5097                           ; Switch size 1, requested type "speed"
  5098                           ; Number of cases is 6, Range of values is 1 to 54
  5099                           ; switch strategies available:
  5100                           ; Name         Instructions Cycles
  5101                           ; simple_byte           19    10 (average)
  5102                           ;	Chosen strategy is simple_byte
  5103  006784  0A01               	xorlw	1	; case 1
  5104  006786  E085               	bz	l8680
  5105  006788  0A02               	xorlw	2	; case 3
  5106  00678A  E08E               	bz	l8682
  5107  00678C  0A05               	xorlw	5	; case 6
  5108  00678E  E097               	bz	l8684
  5109  006790  0A35               	xorlw	53	; case 51
  5110  006792  E0B6               	bz	l8696
  5111  006794  0A06               	xorlw	6	; case 53
  5112  006796  E0E4               	bz	l8714
  5113  006798  0A03               	xorlw	3	; case 54
  5114  00679A  E0C0               	bz	l8702
  5115  00679C  D7EC               	goto	l8718
  5116  00679E                     l8724:
  5117  00679E  BE5A               	btfsc	DHCP_Handler@length+1,7,c
  5118  0067A0  D005               	goto	l8726
  5119  0067A2  505A               	movf	DHCP_Handler@length+1,w,c
  5120  0067A4  E102               	bnz	u12101
  5121  0067A6  0459               	decf	DHCP_Handler@length,w,c
  5122  0067A8  B0D8               	btfsc	status,0,c
  5123  0067AA                     u12101:
  5124  0067AA  D75F               	goto	l8676
  5125  0067AC                     l8726:
  5126                           
  5127                           ;dhcp_client.c: 265: }
  5128                           ;dhcp_client.c: 266: if (clientState == REQUESTING)
  5129  0067AC  0E04               	movlw	4
  5130  0067AE  185D               	xorwf	_clientState,w,c
  5131  0067B0  A4D8               	btfss	status,2,c
  5132  0067B2  0012               	return	
  5133                           
  5134                           ;dhcp_client.c: 267: DHCP_Request( DHCP_REQUEST );
  5135  0067B4  0E03               	movlw	3
  5136  0067B6  EFE5  F033         	goto	_DHCP_Request
  5137  0067BA                     l8730:
  5138                           
  5139                           ;dhcp_client.c: 270: else
  5140                           ;dhcp_client.c: 271: ETH_Dump(length - 34);
  5141  0067BA  0EDE               	movlw	222
  5142  0067BC  2459               	addwf	DHCP_Handler@length,w,c
  5143  0067BE  6E0B               	movwf	ETH_Dump@length,c
  5144  0067C0  0EFF               	movlw	255
  5145  0067C2  205A               	addwfc	DHCP_Handler@length+1,w,c
  5146  0067C4  6E0C               	movwf	ETH_Dump@length+1,c
  5147  0067C6  EF76  F041         	goto	_ETH_Dump	;wreg free
  5148  0067CA                     __end_of_DHCP_Handler:
  5149                           	opt stack 0
  5150                           tosu	equ	0xFFF
  5151                           tosh	equ	0xFFE
  5152                           tosl	equ	0xFFD
  5153                           pclath	equ	0xFFA
  5154                           tblptru	equ	0xFF8
  5155                           tblptrh	equ	0xFF7
  5156                           tblptrl	equ	0xFF6
  5157                           tablat	equ	0xFF5
  5158                           prodh	equ	0xFF4
  5159                           prodl	equ	0xFF3
  5160                           intcon	equ	0xFF2
  5161                           intcon2	equ	0xFF1
  5162                           indf0	equ	0xFEF
  5163                           postinc0	equ	0xFEE
  5164                           fsr0h	equ	0xFEA
  5165                           fsr0l	equ	0xFE9
  5166                           wreg	equ	0xFE8
  5167                           indf2	equ	0xFDF
  5168                           postinc2	equ	0xFDE
  5169                           postdec2	equ	0xFDD
  5170                           fsr2h	equ	0xFDA
  5171                           fsr2l	equ	0xFD9
  5172                           status	equ	0xFD8
  5173                           
  5174 ;; *************** function _memcmp *****************
  5175 ;; Defined at:
  5176 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memcmp.c"
  5177 ;; Parameters:    Size  Location     Type
  5178 ;;  s1              1    wreg     PTR const void 
  5179 ;;		 -> DHCP_Handler@ethPktMAC(6), 
  5180 ;;  s2              1    1[COMRAM] PTR const void 
  5181 ;;		 -> DHCP_Handler@ethMAC(6), 
  5182 ;;  n               2    2[COMRAM] unsigned int 
  5183 ;; Auto vars:     Size  Location     Type
  5184 ;;  s1              1    6[COMRAM] PTR const void 
  5185 ;;		 -> DHCP_Handler@ethPktMAC(6), 
  5186 ;; Return value:  Size  Location     Type
  5187 ;;                  2    1[COMRAM] int 
  5188 ;; Registers used:
  5189 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5190 ;; Tracked objects:
  5191 ;;		On entry : F/1
  5192 ;;		On exit  : 0/0
  5193 ;;		Unchanged: 0/0
  5194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5195 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5196 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5197 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5198 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5199 ;;Total ram usage:        6 bytes
  5200 ;; Hardware stack levels used:    1
  5201 ;; Hardware stack levels required when called:    3
  5202 ;; This function calls:
  5203 ;;		Nothing
  5204 ;; This function is called by:
  5205 ;;		_DHCP_Handler
  5206 ;; This function uses a non-reentrant model
  5207 ;;
  5208                           
  5209                           	psect	text20
  5210  008254                     __ptext20:
  5211                           	opt stack 0
  5212  008254                     _memcmp:
  5213                           	opt stack 22
  5214                           
  5215                           ;incstack = 0
  5216                           ;memcmp@s1 stored from wreg
  5217  008254  6E07               	movwf	memcmp@s1,c
  5218  008256  D01A               	goto	l8604
  5219  008258                     l8596:
  5220  008258  5002               	movf	memcmp@s2,w,c
  5221  00825A  6ED9               	movwf	fsr2l,c
  5222  00825C  6ADA               	clrf	fsr2h,c
  5223  00825E  5007               	movf	memcmp@s1,w,c
  5224  008260  6EE1               	movwf	fsr1l,c
  5225  008262  6AE2               	clrf	fsr1h,c
  5226  008264  50DE               	movf	postinc2,w,c
  5227  008266  18E6               	xorwf	postinc1,w,c
  5228  008268  E00F               	bz	l8602
  5229  00826A  5007               	movf	memcmp@s1,w,c
  5230  00826C  6ED9               	movwf	fsr2l,c
  5231  00826E  6ADA               	clrf	fsr2h,c
  5232  008270  50DF               	movf	indf2,w,c
  5233  008272  6E05               	movwf	??_memcmp& (0+255),c
  5234  008274  5002               	movf	memcmp@s2,w,c
  5235  008276  6ED9               	movwf	fsr2l,c
  5236  008278  6ADA               	clrf	fsr2h,c
  5237  00827A  50DF               	movf	indf2,w,c
  5238  00827C  5C05               	subwf	??_memcmp,w,c
  5239  00827E  6E02               	movwf	?_memcmp,c
  5240  008280  6A03               	clrf	?_memcmp+1,c
  5241  008282  A0D8               	btfss	status,0,c
  5242  008284  0603               	decf	?_memcmp+1,f,c
  5243  008286  0012               	return	
  5244  008288                     l8602:
  5245  008288  2A07               	incf	memcmp@s1,f,c
  5246  00828A  2A02               	incf	memcmp@s2,f,c
  5247  00828C                     l8604:
  5248  00828C  0603               	decf	memcmp@n,f,c
  5249  00828E  A0D8               	btfss	status,0,c
  5250  008290  0604               	decf	memcmp@n+1,f,c
  5251  008292  2803               	incf	memcmp@n,w,c
  5252  008294  E1E1               	bnz	l8596
  5253  008296  2804               	incf	memcmp@n+1,w,c
  5254  008298  E1DF               	bnz	l8596
  5255  00829A  6A02               	clrf	?_memcmp,c
  5256  00829C  6A03               	clrf	?_memcmp+1,c
  5257  00829E  0012               	return		;funcret
  5258  0082A0                     __end_of_memcmp:
  5259                           	opt stack 0
  5260                           tosu	equ	0xFFF
  5261                           tosh	equ	0xFFE
  5262                           tosl	equ	0xFFD
  5263                           pclath	equ	0xFFA
  5264                           tblptru	equ	0xFF8
  5265                           tblptrh	equ	0xFF7
  5266                           tblptrl	equ	0xFF6
  5267                           tablat	equ	0xFF5
  5268                           prodh	equ	0xFF4
  5269                           prodl	equ	0xFF3
  5270                           intcon	equ	0xFF2
  5271                           intcon2	equ	0xFF1
  5272                           indf0	equ	0xFEF
  5273                           postinc0	equ	0xFEE
  5274                           fsr0h	equ	0xFEA
  5275                           fsr0l	equ	0xFE9
  5276                           wreg	equ	0xFE8
  5277                           postinc1	equ	0xFE6
  5278                           fsr1h	equ	0xFE2
  5279                           fsr1l	equ	0xFE1
  5280                           indf2	equ	0xFDF
  5281                           postinc2	equ	0xFDE
  5282                           postdec2	equ	0xFDD
  5283                           fsr2h	equ	0xFDA
  5284                           fsr2l	equ	0xFD9
  5285                           status	equ	0xFD8
  5286                           
  5287 ;; *************** function _ETH_Read32 *****************
  5288 ;; Defined at:
  5289 ;;		line 277 in file "../../TCPIP Library/ethernet_drivers/encX24j600_spi.c"
  5290 ;; Parameters:    Size  Location     Type
  5291 ;;		None
  5292 ;; Auto vars:     Size  Location     Type
  5293 ;;  ret             4    6[COMRAM] unsigned long 
  5294 ;; Return value:  Size  Location     Type
  5295 ;;                  4    2[COMRAM] unsigned long 
  5296 ;; Registers used:
  5297 ;;		wreg, status,2, status,0, cstack
  5298 ;; Tracked objects:
  5299 ;;		On entry : D/2
  5300 ;;		On exit  : F/1
  5301 ;;		Unchanged: 0/0
  5302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5303 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5304 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5306 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5307 ;;Total ram usage:        8 bytes
  5308 ;; Hardware stack levels used:    1
  5309 ;; Hardware stack levels required when called:    4
  5310 ;; This function calls:
  5311 ;;		_SPI_ExchangeByte
  5312 ;; This function is called by:
  5313 ;;		_DHCP_Handler
  5314 ;; This function uses a non-reentrant model
  5315 ;;
  5316                           
  5317                           	psect	text21
  5318  007F5A                     __ptext21:
  5319                           	opt stack 0
  5320  007F5A                     _ETH_Read32:
  5321                           	opt stack 21
  5322                           
  5323                           ;encX24j600_spi.c: 279: uint32_t ret;
  5324                           ;encX24j600_spi.c: 280: if(rxPacketStatusVector.ByteCount >= sizeof(ret))
  5325                           
  5326                           ;incstack = 0
  5327  007F5A  0102               	movlb	2	; () banked
  5328  007F5C  5119               	movf	(_rxPacketStatusVector+1)& (0+255),w,b
  5329  007F5E  E103               	bnz	u11660
  5330  007F60  0E04               	movlw	4
  5331  007F62  5D18               	subwf	_rxPacketStatusVector& (0+255),w,b
  5332  007F64  E325               	bnc	l626
  5333  007F66                     u11660:
  5334                           
  5335                           ; BSR set to: 2
  5336                           
  5337                           ;encX24j600_spi.c: 281: {
  5338                           ;encX24j600_spi.c: 282: do{LATB3 = 0;} while(0);
  5339  007F66  968A               	bcf	3978,3,c	;volatile
  5340                           
  5341                           ; BSR set to: 2
  5342                           ;encX24j600_spi.c: 283: SPI_ExchangeByte(rrxdata_inst);
  5343  007F68  0E2C               	movlw	44
  5344  007F6A  ECEE  F045         	call	_SPI_ExchangeByte
  5345                           
  5346                           ;encX24j600_spi.c: 284: ((uint8_t *)&ret)[3] = SPI_ExchangeByte(0);
  5347  007F6E  0E00               	movlw	0
  5348  007F70  ECEE  F045         	call	_SPI_ExchangeByte
  5349  007F74  6E0A               	movwf	ETH_Read32@ret+3,c
  5350                           
  5351                           ;encX24j600_spi.c: 285: ((uint8_t *)&ret)[2] = SPI_ExchangeByte(0);
  5352  007F76  0E00               	movlw	0
  5353  007F78  ECEE  F045         	call	_SPI_ExchangeByte
  5354  007F7C  6E09               	movwf	ETH_Read32@ret+2,c
  5355                           
  5356                           ;encX24j600_spi.c: 286: ((uint8_t *)&ret)[1] = SPI_ExchangeByte(0);
  5357  007F7E  0E00               	movlw	0
  5358  007F80  ECEE  F045         	call	_SPI_ExchangeByte
  5359  007F84  6E08               	movwf	ETH_Read32@ret+1,c
  5360                           
  5361                           ;encX24j600_spi.c: 287: ((uint8_t *)&ret)[0] = SPI_ExchangeByte(0);
  5362  007F86  0E00               	movlw	0
  5363  007F88  ECEE  F045         	call	_SPI_ExchangeByte
  5364  007F8C  6E07               	movwf	ETH_Read32@ret,c
  5365  007F8E  868A               	bsf	3978,3,c	;volatile
  5366                           
  5367                           ;encX24j600_spi.c: 289: rxPacketStatusVector.ByteCount -= sizeof(ret);
  5368  007F90  0E04               	movlw	4
  5369  007F92  0102               	movlb	2	; () banked
  5370  007F94  5F18               	subwf	_rxPacketStatusVector& (0+255),f,b
  5371  007F96  0E00               	movlw	0
  5372  007F98  5B19               	subwfb	(_rxPacketStatusVector+1)& (0+255),f,b
  5373                           
  5374                           ; BSR set to: 2
  5375                           ;encX24j600_spi.c: 290: ethData.error = 0;
  5376  007F9A  0101               	movlb	1	; () banked
  5377  007F9C  9183               	bcf	_ethData& (0+255),0,b	;volatile
  5378                           
  5379                           ; BSR set to: 1
  5380                           ;encX24j600_spi.c: 291: return ret;
  5381  007F9E  C007  F003         	movff	ETH_Read32@ret,?_ETH_Read32
  5382  007FA2  C008  F004         	movff	ETH_Read32@ret+1,?_ETH_Read32+1
  5383  007FA6  C009  F005         	movff	ETH_Read32@ret+2,?_ETH_Read32+2
  5384  007FAA  C00A  F006         	movff	ETH_Read32@ret+3,?_ETH_Read32+3
  5385  007FAE  0C00               	retlw	0
  5386  007FB0                     l626:
  5387                           
  5388                           ; BSR set to: 2
  5389                           ;encX24j600_spi.c: 293: else
  5390                           ;encX24j600_spi.c: 294: {
  5391                           ;encX24j600_spi.c: 295: ethData.error = 1;
  5392  007FB0  0101               	movlb	1	; () banked
  5393  007FB2  8183               	bsf	_ethData& (0+255),0,b	;volatile
  5394                           
  5395                           ;encX24j600_spi.c: 296: return 0;
  5396  007FB4  6A03               	clrf	?_ETH_Read32,c
  5397  007FB6  6A04               	clrf	?_ETH_Read32+1,c
  5398  007FB8  6A05               	clrf	?_ETH_Read32+2,c
  5399  007FBA  6A06               	clrf	?_ETH_Read32+3,c
  5400                           
  5401                           ; BSR set to: 1
  5402  007FBC  0012               	return		;funcret
  5403  007FBE                     __end_of_ETH_Read32:
  5404                           	opt stack 0
  5405                           tosu	equ	0xFFF
  5406                           tosh	equ	0xFFE
  5407                           tosl	equ	0xFFD
  5408                           pclath	equ	0xFFA
  5409                           tblptru	equ	0xFF8
  5410                           tblptrh	equ	0xFF7
  5411                           tblptrl	equ	0xFF6
  5412                           tablat	equ	0xFF5
  5413                           prodh	equ	0xFF4
  5414                           prodl	equ	0xFF3
  5415                           intcon	equ	0xFF2
  5416                           intcon2	equ	0xFF1
  5417                           indf0	equ	0xFEF
  5418                           postinc0	equ	0xFEE
  5419                           fsr0h	equ	0xFEA
  5420                           fsr0l	equ	0xFE9
  5421                           wreg	equ	0xFE8
  5422                           postinc1	equ	0xFE6
  5423                           fsr1h	equ	0xFE2
  5424                           fsr1l	equ	0xFE1
  5425                           indf2	equ	0xFDF
  5426                           postinc2	equ	0xFDE
  5427                           postdec2	equ	0xFDD
  5428                           fsr2h	equ	0xFDA
  5429                           fsr2l	equ	0xFD9
  5430                           status	equ	0xFD8
  5431                           
  5432 ;; *************** function _TCP_Recv *****************
  5433 ;; Defined at:
  5434 ;;		line 483 in file "../../TCPIP Library/source/tcpv4.c"
  5435 ;; Parameters:    Size  Location     Type
  5436 ;;  remoteAddres    4  116[BANK0 ] unsigned long 
  5437 ;;  length          2  120[BANK0 ] unsigned int 
  5438 ;; Auto vars:     Size  Location     Type
  5439 ;;  tcbPtr          2  151[BANK0 ] PTR struct .
  5440 ;;		 -> ?_sprintf(2), ?_printf(2), main@str(32), STR_7(13), 
  5441 ;;		 -> STR_6(17), DEMO_TCP_Client@txdataPort60(80), DEMO_TCP_Client@strTmp(17), DEMO_TCP_Client@rxdataPort60(50), 
  5442 ;;		 -> DEMO_TCP_Client@port60TCB(55), Network_Read@debug_str(80), NULL(0), 
  5443 ;;  count           1  150[BANK0 ] char 
  5444 ;; Return value:  Size  Location     Type
  5445 ;;		None               void
  5446 ;; Registers used:
  5447 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5448 ;; Tracked objects:
  5449 ;;		On entry : F/0
  5450 ;;		On exit  : C/0
  5451 ;;		Unchanged: 0/0
  5452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5453 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5454 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5455 ;;      Temps:          0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5456 ;;      Totals:         0      37       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5457 ;;Total ram usage:       37 bytes
  5458 ;; Hardware stack levels used:    1
  5459 ;; Hardware stack levels required when called:   12
  5460 ;; This function calls:
  5461 ;;		_ETH_ReadBlock
  5462 ;;		_TCP_FiniteStateMachine
  5463 ;;		_TCP_ParseTCPOptions
  5464 ;; This function is called by:
  5465 ;;		_IPV4_Packet
  5466 ;; This function uses a non-reentrant model
  5467 ;;
  5468                           
  5469                           	psect	text22
  5470  004BE4                     __ptext22:
  5471                           	opt stack 0
  5472  004BE4                     _TCP_Recv:
  5473                           	opt stack 15
  5474                           
  5475                           ; BSR set to: 0
  5476                           ;tcpv4.c: 485: tcpTCB_t *tcbPtr;
  5477                           ;tcpv4.c: 486: socklistsize_t count = 0;
  5478                           
  5479                           ; BSR set to: 1
  5480                           ;incstack = 0
  5481  004BE4  6BF6               	clrf	TCP_Recv@count& (0+255),b
  5482                           
  5483                           ;tcpv4.c: 490: receivedRemoteAddress = 0;
  5484  004BE6  0101               	movlb	1	; () banked
  5485  004BE8  6B96               	clrf	_receivedRemoteAddress& (0+255),b
  5486  004BEA  6B97               	clrf	(_receivedRemoteAddress+1)& (0+255),b
  5487  004BEC  6B98               	clrf	(_receivedRemoteAddress+2)& (0+255),b
  5488  004BEE  6B99               	clrf	(_receivedRemoteAddress+3)& (0+255),b
  5489                           
  5490                           ;tcpv4.c: 491: rcvPayloadLen = 0;
  5491  004BF0  6BA0               	clrf	_rcvPayloadLen& (0+255),b
  5492  004BF2  6BA1               	clrf	(_rcvPayloadLen+1)& (0+255),b
  5493                           
  5494                           ; BSR set to: 1
  5495                           ;tcpv4.c: 493: ETH_ReadBlock((char *)&tcpHeader,sizeof(tcpHeader_t));
  5496  004BF4  0EBC               	movlw	low _tcpHeader
  5497  004BF6  6E03               	movwf	ETH_ReadBlock@data,c
  5498  004BF8  0E01               	movlw	high _tcpHeader
  5499  004BFA  6E04               	movwf	ETH_ReadBlock@data+1,c
  5500  004BFC  6A06               	clrf	ETH_ReadBlock@length+1,c
  5501  004BFE  0E14               	movlw	20
  5502  004C00  6E05               	movwf	ETH_ReadBlock@length,c
  5503  004C02  EC24  F03D         	call	_ETH_ReadBlock	;wreg free
  5504                           
  5505                           ; BSR set to: 1
  5506                           ;tcpv4.c: 495: currentTCB = (0);
  5507  004C06  0100               	movlb	0	; () banked
  5508  004C08  6BFE               	clrf	_currentTCB& (0+255),b
  5509  004C0A  6BFF               	clrf	(_currentTCB+1)& (0+255),b
  5510                           
  5511                           ; BSR set to: 0
  5512                           ;tcpv4.c: 498: if ((tcpHeader.destPort != 0) && (tcpHeader.sourcePort != 0))
  5513  004C0C  0101               	movlb	1	; () banked
  5514  004C0E  51BE               	movf	(_tcpHeader+2)& (0+255),w,b
  5515  004C10  11BF               	iorwf	(_tcpHeader+3)& (0+255),w,b
  5516  004C12  B4D8               	btfsc	status,2,c
  5517  004C14  0012               	return	
  5518                           
  5519                           ; BSR set to: 1
  5520  004C16  51BC               	movf	_tcpHeader& (0+255),w,b
  5521  004C18  11BD               	iorwf	(_tcpHeader+1)& (0+255),w,b
  5522  004C1A  B4D8               	btfsc	status,2,c
  5523  004C1C  0012               	return	
  5524                           
  5525                           ; BSR set to: 1
  5526                           ;tcpv4.c: 499: {
  5527                           ;tcpv4.c: 500: tcpHeader.sourcePort = ((((uint16_t)tcpHeader.sourcePort & (uint16_t)0xFF
      +                          00) >> 8) | (((uint16_t)tcpHeader.sourcePort & (uint16_t)0x00FF) << 8));
  5528  004C1E  51BC               	movf	_tcpHeader& (0+255),w,b
  5529  004C20  0100               	movlb	0	; () banked
  5530  004C22  6FDB               	movwf	(??_TCP_Recv+1)& (0+255),b
  5531  004C24  6BDA               	clrf	??_TCP_Recv& (0+255),b
  5532  004C26  0101               	movlb	1	; () banked
  5533  004C28  51BD               	movf	(_tcpHeader+1)& (0+255),w,b
  5534  004C2A  0100               	movlb	0	; () banked
  5535  004C2C  6FDC               	movwf	(??_TCP_Recv+2)& (0+255),b
  5536  004C2E  6BDD               	clrf	(??_TCP_Recv+3)& (0+255),b
  5537  004C30  51DA               	movf	??_TCP_Recv& (0+255),w,b
  5538  004C32  11DC               	iorwf	(??_TCP_Recv+2)& (0+255),w,b
  5539  004C34  0101               	movlb	1	; () banked
  5540  004C36  6FBC               	movwf	_tcpHeader& (0+255),b
  5541  004C38  0100               	movlb	0	; () banked
  5542  004C3A  51DB               	movf	(??_TCP_Recv+1)& (0+255),w,b
  5543  004C3C  11DD               	iorwf	(??_TCP_Recv+3)& (0+255),w,b
  5544  004C3E  0101               	movlb	1	; () banked
  5545  004C40  6FBD               	movwf	(_tcpHeader+1)& (0+255),b
  5546                           
  5547                           ; BSR set to: 1
  5548                           ;tcpv4.c: 501: tcpHeader.destPort = ((((uint16_t)tcpHeader.destPort & (uint16_t)0xFF00) 
      +                          >> 8) | (((uint16_t)tcpHeader.destPort & (uint16_t)0x00FF) << 8));
  5549  004C42  51BE               	movf	(_tcpHeader+2)& (0+255),w,b
  5550  004C44  0100               	movlb	0	; () banked
  5551  004C46  6FDB               	movwf	(??_TCP_Recv+1)& (0+255),b
  5552  004C48  6BDA               	clrf	??_TCP_Recv& (0+255),b
  5553  004C4A  EE21  F0BE         	lfsr	2,_tcpHeader+2
  5554  004C4E  CFDE F0DC          	movff	postinc2,??_TCP_Recv+2
  5555  004C52  CFDD F0DD          	movff	postdec2,??_TCP_Recv+3
  5556  004C56  C0DD  F0DC         	movff	??_TCP_Recv+3,??_TCP_Recv+2
  5557  004C5A  6BDD               	clrf	(??_TCP_Recv+3)& (0+255),b
  5558  004C5C  6BDD               	clrf	(??_TCP_Recv+3)& (0+255),b
  5559  004C5E  51DA               	movf	??_TCP_Recv& (0+255),w,b
  5560  004C60  11DC               	iorwf	(??_TCP_Recv+2)& (0+255),w,b
  5561  004C62  0101               	movlb	1	; () banked
  5562  004C64  6FBE               	movwf	(_tcpHeader+2)& (0+255),b
  5563  004C66  0100               	movlb	0	; () banked
  5564  004C68  51DB               	movf	(??_TCP_Recv+1)& (0+255),w,b
  5565  004C6A  11DD               	iorwf	(??_TCP_Recv+3)& (0+255),w,b
  5566  004C6C  0101               	movlb	1	; () banked
  5567  004C6E  6FBF               	movwf	(_tcpHeader+3)& (0+255),b
  5568                           
  5569                           ; BSR set to: 1
  5570                           ;tcpv4.c: 504: tcbPtr = tcbList;
  5571  004C70  C1A2  F0F7         	movff	_tcbList,TCP_Recv@tcbPtr
  5572  004C74  C1A3  F0F8         	movff	_tcbList+1,TCP_Recv@tcbPtr+1
  5573                           
  5574                           ;tcpv4.c: 505: while((tcbPtr != (0)) && (count < tcbListSize))
  5575  004C78  D048               	goto	l9398
  5576  004C7A                     l9388:
  5577                           
  5578                           ; BSR set to: 0
  5579                           ;tcpv4.c: 506: {
  5580                           ;tcpv4.c: 507: if (tcpHeader.destPort == tcbPtr->localPort)
  5581  004C7A  C0F7  FFF6         	movff	TCP_Recv@tcbPtr,tblptrl
  5582  004C7E  C0F8  FFF7         	movff	TCP_Recv@tcbPtr+1,tblptrh
  5583  004C82  0E00               	movlw	low (__smallconst shr (0+16))
  5584  004C84  6EF8               	movwf	tblptru,c
  5585  004C86  0E0F               	movlw	(high __ramtop+-1)
  5586  004C88  64F7               	cpfsgt	tblptrh,c
  5587  004C8A  D007               	bra	u14217
  5588  004C8C  0009               	tblrd		*+
  5589  004C8E  CFF5 F0DA          	movff	tablat,??_TCP_Recv
  5590  004C92  0009               	tblrd		*+
  5591  004C94  CFF5 F0DB          	movff	tablat,??_TCP_Recv+1
  5592  004C98  D008               	bra	u14210
  5593  004C9A                     u14217:
  5594  004C9A  CFF6 FFE9          	movff	tblptrl,fsr0l
  5595  004C9E  CFF7 FFEA          	movff	tblptrh,fsr0h
  5596  004CA2  CFEE F0DA          	movff	postinc0,??_TCP_Recv
  5597  004CA6  CFEE F0DB          	movff	postinc0,??_TCP_Recv+1
  5598  004CAA                     u14210:
  5599  004CAA  0100               	movlb	0	; () banked
  5600  004CAC  51DA               	movf	??_TCP_Recv& (0+255),w,b
  5601  004CAE  0101               	movlb	1	; () banked
  5602  004CB0  19BE               	xorwf	(_tcpHeader+2)& (0+255),w,b
  5603  004CB2  E10A               	bnz	l9394
  5604  004CB4  0100               	movlb	0	; () banked
  5605  004CB6  51DB               	movf	(??_TCP_Recv+1)& (0+255),w,b
  5606  004CB8  0101               	movlb	1	; () banked
  5607  004CBA  19BF               	xorwf	(_tcpHeader+3)& (0+255),w,b
  5608  004CBC  E105               	bnz	l9394
  5609                           
  5610                           ; BSR set to: 1
  5611                           ;tcpv4.c: 508: {
  5612                           ;tcpv4.c: 509: currentTCB = tcbPtr;
  5613  004CBE  C0F7  F0FE         	movff	TCP_Recv@tcbPtr,_currentTCB
  5614  004CC2  C0F8  F0FF         	movff	TCP_Recv@tcbPtr+1,_currentTCB+1
  5615                           
  5616                           ;tcpv4.c: 510: break;
  5617  004CC6  D02E               	goto	l9402
  5618  004CC8                     l9394:
  5619                           
  5620                           ; BSR set to: 1
  5621                           ;tcpv4.c: 512: else
  5622                           ;tcpv4.c: 513: {
  5623                           ;tcpv4.c: 514: tcbPtr = tcbPtr->nextTCB;
  5624  004CC8  0E2C               	movlw	44
  5625  004CCA  0100               	movlb	0	; () banked
  5626  004CCC  25F7               	addwf	TCP_Recv@tcbPtr& (0+255),w,b
  5627  004CCE  6FDA               	movwf	??_TCP_Recv& (0+255),b
  5628  004CD0  0E00               	movlw	0
  5629  004CD2  21F8               	addwfc	(TCP_Recv@tcbPtr+1)& (0+255),w,b
  5630  004CD4  6FDB               	movwf	(??_TCP_Recv+1)& (0+255),b
  5631  004CD6  C0DA  FFF6         	movff	??_TCP_Recv,tblptrl
  5632  004CDA  C0DB  FFF7         	movff	??_TCP_Recv+1,tblptrh
  5633  004CDE  0E00               	movlw	low (__smallconst shr (0+16))
  5634  004CE0  6EF8               	movwf	tblptru,c
  5635  004CE2  0E0F               	movlw	(high __ramtop+-1)
  5636  004CE4  64F7               	cpfsgt	tblptrh,c
  5637  004CE6  D007               	bra	u14237
  5638  004CE8  0009               	tblrd		*+
  5639  004CEA  CFF5 F0F7          	movff	tablat,TCP_Recv@tcbPtr
  5640  004CEE  0009               	tblrd		*+
  5641  004CF0  CFF5 F0F8          	movff	tablat,TCP_Recv@tcbPtr+1
  5642  004CF4  D008               	bra	u14230
  5643  004CF6                     u14237:
  5644  004CF6  CFF6 FFE9          	movff	tblptrl,fsr0l
  5645  004CFA  CFF7 FFEA          	movff	tblptrh,fsr0h
  5646  004CFE  CFEE F0F7          	movff	postinc0,TCP_Recv@tcbPtr
  5647  004D02  CFEE F0F8          	movff	postinc0,TCP_Recv@tcbPtr+1
  5648  004D06                     u14230:
  5649                           
  5650                           ;tcpv4.c: 515: count ++;
  5651  004D06  0100               	movlb	0	; () banked
  5652  004D08  2BF6               	incf	TCP_Recv@count& (0+255),f,b
  5653  004D0A                     l9398:
  5654  004D0A  0100               	movlb	0	; () banked
  5655  004D0C  51F7               	movf	TCP_Recv@tcbPtr& (0+255),w,b
  5656  004D0E  11F8               	iorwf	(TCP_Recv@tcbPtr+1)& (0+255),w,b
  5657  004D10  E009               	bz	l9402
  5658                           
  5659                           ; BSR set to: 0
  5660  004D12  51F6               	movf	TCP_Recv@count& (0+255),w,b
  5661  004D14  0A80               	xorlw	128
  5662  004D16  6FDA               	movwf	??_TCP_Recv& (0+255),b
  5663  004D18  0101               	movlb	1	; () banked
  5664  004D1A  51A7               	movf	_tcbListSize& (0+255),w,b
  5665  004D1C  0A80               	xorlw	128
  5666  004D1E  0100               	movlb	0	; () banked
  5667  004D20  5DDA               	subwf	??_TCP_Recv& (0+255),w,b
  5668  004D22  E3AB               	bnc	l9388
  5669  004D24                     l9402:
  5670                           
  5671                           ;tcpv4.c: 516: }
  5672                           ;tcpv4.c: 517: }
  5673                           ;tcpv4.c: 519: if (currentTCB != (0))
  5674  004D24  0100               	movlb	0	; () banked
  5675  004D26  51FE               	movf	_currentTCB& (0+255),w,b
  5676  004D28  11FF               	iorwf	(_currentTCB+1)& (0+255),w,b
  5677  004D2A  B4D8               	btfsc	status,2,c
  5678  004D2C  0012               	return	
  5679                           
  5680                           ; BSR set to: 0
  5681                           ;tcpv4.c: 520: {
  5682                           ;tcpv4.c: 521: if((tcpHeader.sourcePort == currentTCB->destPort) ||
  5683                           ;tcpv4.c: 522: (currentTCB->destIP == 0))
  5684  004D2E  0E06               	movlw	6
  5685  004D30  25FE               	addwf	_currentTCB& (0+255),w,b
  5686  004D32  6FDA               	movwf	??_TCP_Recv& (0+255),b
  5687  004D34  0E00               	movlw	0
  5688  004D36  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
  5689  004D38  6FDB               	movwf	(??_TCP_Recv+1)& (0+255),b
  5690  004D3A  C0DA  FFF6         	movff	??_TCP_Recv,tblptrl
  5691  004D3E  C0DB  FFF7         	movff	??_TCP_Recv+1,tblptrh
  5692  004D42  0E00               	movlw	low (__smallconst shr (0+16))
  5693  004D44  6EF8               	movwf	tblptru,c
  5694  004D46  0E0F               	movlw	(high __ramtop+-1)
  5695  004D48  64F7               	cpfsgt	tblptrh,c
  5696  004D4A  D007               	bra	u14277
  5697  004D4C  0009               	tblrd		*+
  5698  004D4E  CFF5 F0DC          	movff	tablat,??_TCP_Recv+2
  5699  004D52  0009               	tblrd		*+
  5700  004D54  CFF5 F0DD          	movff	tablat,??_TCP_Recv+3
  5701  004D58  D008               	bra	u14270
  5702  004D5A                     u14277:
  5703  004D5A  CFF6 FFE9          	movff	tblptrl,fsr0l
  5704  004D5E  CFF7 FFEA          	movff	tblptrh,fsr0h
  5705  004D62  CFEE F0DC          	movff	postinc0,??_TCP_Recv+2
  5706  004D66  CFEE F0DD          	movff	postinc0,??_TCP_Recv+3
  5707  004D6A                     u14270:
  5708  004D6A  0101               	movlb	1	; () banked
  5709  004D6C  51BC               	movf	_tcpHeader& (0+255),w,b
  5710  004D6E  0100               	movlb	0	; () banked
  5711  004D70  19DC               	xorwf	(??_TCP_Recv+2)& (0+255),w,b
  5712  004D72  E105               	bnz	u14280
  5713  004D74  0101               	movlb	1	; () banked
  5714  004D76  51BD               	movf	(_tcpHeader+1)& (0+255),w,b
  5715  004D78  0100               	movlb	0	; () banked
  5716  004D7A  19DD               	xorwf	(??_TCP_Recv+3)& (0+255),w,b
  5717  004D7C  E02F               	bz	l1268
  5718  004D7E                     u14280:
  5719                           
  5720                           ; BSR set to: 0
  5721  004D7E  0E02               	movlw	2
  5722  004D80  25FE               	addwf	_currentTCB& (0+255),w,b
  5723  004D82  6FDA               	movwf	??_TCP_Recv& (0+255),b
  5724  004D84  0E00               	movlw	0
  5725  004D86  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
  5726  004D88  6FDB               	movwf	(??_TCP_Recv+1)& (0+255),b
  5727  004D8A  C0DA  FFF6         	movff	??_TCP_Recv,tblptrl
  5728  004D8E  C0DB  FFF7         	movff	??_TCP_Recv+1,tblptrh
  5729  004D92  0E00               	movlw	low (__smallconst shr (0+16))
  5730  004D94  6EF8               	movwf	tblptru,c
  5731  004D96  0E0F               	movlw	(high __ramtop+-1)
  5732  004D98  64F7               	cpfsgt	tblptrh,c
  5733  004D9A  D00D               	bra	u14297
  5734  004D9C  0009               	tblrd		*+
  5735  004D9E  CFF5 F0DC          	movff	tablat,??_TCP_Recv+2
  5736  004DA2  0009               	tblrd		*+
  5737  004DA4  CFF5 F0DD          	movff	tablat,??_TCP_Recv+3
  5738  004DA8  0009               	tblrd		*+
  5739  004DAA  CFF5 F0DE          	movff	tablat,??_TCP_Recv+4
  5740  004DAE  0009               	tblrd		*+
  5741  004DB0  CFF5 F0DF          	movff	tablat,??_TCP_Recv+5
  5742  004DB4  D00C               	bra	u14290
  5743  004DB6                     u14297:
  5744  004DB6  CFF6 FFE9          	movff	tblptrl,fsr0l
  5745  004DBA  CFF7 FFEA          	movff	tblptrh,fsr0h
  5746  004DBE  CFEE F0DC          	movff	postinc0,??_TCP_Recv+2
  5747  004DC2  CFEE F0DD          	movff	postinc0,??_TCP_Recv+3
  5748  004DC6  CFEE F0DE          	movff	postinc0,??_TCP_Recv+4
  5749  004DCA  CFEE F0DF          	movff	postinc0,??_TCP_Recv+5
  5750  004DCE                     u14290:
  5751  004DCE  0100               	movlb	0	; () banked
  5752  004DD0  51DC               	movf	(??_TCP_Recv+2)& (0+255),w,b
  5753  004DD2  11DD               	iorwf	(??_TCP_Recv+3)& (0+255),w,b
  5754  004DD4  11DE               	iorwf	(??_TCP_Recv+4)& (0+255),w,b
  5755  004DD6  11DF               	iorwf	(??_TCP_Recv+5)& (0+255),w,b
  5756  004DD8  A4D8               	btfss	status,2,c
  5757  004DDA  0012               	return	
  5758  004DDC                     l1268:
  5759                           
  5760                           ; BSR set to: 0
  5761                           ;tcpv4.c: 523: {
  5762                           ;tcpv4.c: 526: receivedRemoteAddress = remoteAddress;
  5763  004DDC  C0D4  F196         	movff	TCP_Recv@remoteAddress,_receivedRemoteAddress
  5764  004DE0  C0D5  F197         	movff	TCP_Recv@remoteAddress+1,_receivedRemoteAddress+1
  5765  004DE4  C0D6  F198         	movff	TCP_Recv@remoteAddress+2,_receivedRemoteAddress+2
  5766  004DE8  C0D7  F199         	movff	TCP_Recv@remoteAddress+3,_receivedRemoteAddress+3
  5767                           
  5768                           ; BSR set to: 0
  5769                           ;tcpv4.c: 527: rcvPayloadLen = length - (uint16_t)(tcpHeader.dataOffset << 2);
  5770  004DEC  0101               	movlb	1	; () banked
  5771  004DEE  39C8               	swapf	(_tcpHeader+12)& (0+255),w,b
  5772  004DF0  0B0F               	andlw	15
  5773  004DF2  0100               	movlb	0	; () banked
  5774  004DF4  6FDA               	movwf	??_TCP_Recv& (0+255),b
  5775  004DF6  6BDB               	clrf	(??_TCP_Recv+1)& (0+255),b
  5776  004DF8  90D8               	bcf	status,0,c
  5777  004DFA  37DA               	rlcf	??_TCP_Recv& (0+255),f,b
  5778  004DFC  37DB               	rlcf	(??_TCP_Recv+1)& (0+255),f,b
  5779  004DFE  90D8               	bcf	status,0,c
  5780  004E00  37DA               	rlcf	??_TCP_Recv& (0+255),f,b
  5781  004E02  37DB               	rlcf	(??_TCP_Recv+1)& (0+255),f,b
  5782  004E04  51DA               	movf	??_TCP_Recv& (0+255),w,b
  5783  004E06  5DD8               	subwf	TCP_Recv@length& (0+255),w,b
  5784  004E08  0101               	movlb	1	; () banked
  5785  004E0A  6FA0               	movwf	_rcvPayloadLen& (0+255),b
  5786  004E0C  0100               	movlb	0	; () banked
  5787  004E0E  51DB               	movf	(??_TCP_Recv+1)& (0+255),w,b
  5788  004E10  59D9               	subwfb	(TCP_Recv@length+1)& (0+255),w,b
  5789  004E12  0101               	movlb	1	; () banked
  5790  004E14  6FA1               	movwf	(_rcvPayloadLen+1)& (0+255),b
  5791                           
  5792                           ; BSR set to: 1
  5793                           ;tcpv4.c: 530: if (TCP_ParseTCPOptions() == 1)
  5794  004E16  ECCC  F037         	call	_TCP_ParseTCPOptions	;wreg free
  5795  004E1A  06E8               	decf	wreg,f,c
  5796  004E1C  A4D8               	btfss	status,2,c
  5797  004E1E  0012               	return	
  5798                           
  5799                           ;tcpv4.c: 531: {
  5800                           ;tcpv4.c: 534: if(tcpHeader.syn)
  5801  004E20  0101               	movlb	1	; () banked
  5802  004E22  A3C9               	btfss	(_tcpHeader+13)& (0+255),1,b
  5803  004E24  D038               	goto	l1270
  5804                           
  5805                           ; BSR set to: 1
  5806                           ;tcpv4.c: 535: {
  5807                           ;tcpv4.c: 536: if(tcpHeader.ack)
  5808  004E26  A9C9               	btfss	(_tcpHeader+13)& (0+255),4,b
  5809  004E28  D01B               	goto	l9418
  5810                           
  5811                           ; BSR set to: 1
  5812                           ;tcpv4.c: 537: {
  5813                           ;tcpv4.c: 538: ;
  5814                           ;tcpv4.c: 539: currentTCB->connectionEvent = RCV_SYNACK;
  5815  004E2A  0E2B               	movlw	43
  5816  004E2C  0100               	movlb	0	; () banked
  5817  004E2E  25FE               	addwf	_currentTCB& (0+255),w,b
  5818  004E30  6FDA               	movwf	??_TCP_Recv& (0+255),b
  5819  004E32  0E00               	movlw	0
  5820  004E34  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
  5821  004E36  6FDB               	movwf	(??_TCP_Recv+1)& (0+255),b
  5822  004E38  C0DA  FFF6         	movff	??_TCP_Recv,tblptrl
  5823  004E3C  C0DB  FFF7         	movff	??_TCP_Recv+1,tblptrh
  5824  004E40  0E00               	movlw	low (__smallconst shr (0+16))
  5825  004E42  6EF8               	movwf	tblptru,c
  5826  004E44  0E0F               	movlw	(high __ramtop+-1)
  5827  004E46  64F7               	cpfsgt	tblptrh,c
  5828  004E48  D004               	bra	u14347
  5829  004E4A  0E05               	movlw	5
  5830  004E4C  6EF5               	movwf	tablat,c
  5831  004E4E  000C               	tblwt		*
  5832  004E50  D006               	bra	u14340
  5833  004E52                     u14347:
  5834  004E52  CFF6 FFE9          	movff	tblptrl,fsr0l
  5835  004E56  CFF7 FFEA          	movff	tblptrh,fsr0h
  5836  004E5A  0E05               	movlw	5
  5837  004E5C  D08E               	goto	L8
  5838  004E5E                     u14340:
  5839                           
  5840                           ;tcpv4.c: 540: } else
  5841  004E5E  D0AB               	goto	l9434
  5842  004E60                     l9418:
  5843                           
  5844                           ; BSR set to: 1
  5845                           ;tcpv4.c: 541: {
  5846                           ;tcpv4.c: 542: ;
  5847                           ;tcpv4.c: 543: currentTCB->connectionEvent = RCV_SYN;
  5848  004E60  0E2B               	movlw	43
  5849  004E62  0100               	movlb	0	; () banked
  5850  004E64  25FE               	addwf	_currentTCB& (0+255),w,b
  5851  004E66  6FDA               	movwf	??_TCP_Recv& (0+255),b
  5852  004E68  0E00               	movlw	0
  5853  004E6A  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
  5854  004E6C  6FDB               	movwf	(??_TCP_Recv+1)& (0+255),b
  5855  004E6E  C0DA  FFF6         	movff	??_TCP_Recv,tblptrl
  5856  004E72  C0DB  FFF7         	movff	??_TCP_Recv+1,tblptrh
  5857  004E76  0E00               	movlw	low (__smallconst shr (0+16))
  5858  004E78  6EF8               	movwf	tblptru,c
  5859  004E7A  0E0F               	movlw	(high __ramtop+-1)
  5860  004E7C  64F7               	cpfsgt	tblptrh,c
  5861  004E7E  D004               	bra	u14357
  5862  004E80  0E03               	movlw	3
  5863  004E82  6EF5               	movwf	tablat,c
  5864  004E84  000C               	tblwt		*
  5865  004E86  D006               	bra	u14350
  5866  004E88                     u14357:
  5867  004E88  CFF6 FFE9          	movff	tblptrl,fsr0l
  5868  004E8C  CFF7 FFEA          	movff	tblptrh,fsr0h
  5869  004E90  0E03               	movlw	3
  5870  004E92  D073               	goto	L8
  5871  004E94                     u14350:
  5872  004E94  D090               	goto	l9434
  5873  004E96                     l1270:
  5874                           
  5875                           ; BSR set to: 1
  5876  004E96  A1C9               	btfss	(_tcpHeader+13)& (0+255),0,b
  5877  004E98  D038               	goto	l1274
  5878                           
  5879                           ; BSR set to: 1
  5880                           ;tcpv4.c: 546: {
  5881                           ;tcpv4.c: 547: if(tcpHeader.ack)
  5882  004E9A  A9C9               	btfss	(_tcpHeader+13)& (0+255),4,b
  5883  004E9C  D01B               	goto	l9424
  5884                           
  5885                           ; BSR set to: 1
  5886                           ;tcpv4.c: 548: {
  5887                           ;tcpv4.c: 549: ;
  5888                           ;tcpv4.c: 550: currentTCB->connectionEvent = RCV_FINACK;
  5889  004E9E  0E2B               	movlw	43
  5890  004EA0  0100               	movlb	0	; () banked
  5891  004EA2  25FE               	addwf	_currentTCB& (0+255),w,b
  5892  004EA4  6FDA               	movwf	??_TCP_Recv& (0+255),b
  5893  004EA6  0E00               	movlw	0
  5894  004EA8  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
  5895  004EAA  6FDB               	movwf	(??_TCP_Recv+1)& (0+255),b
  5896  004EAC  C0DA  FFF6         	movff	??_TCP_Recv,tblptrl
  5897  004EB0  C0DB  FFF7         	movff	??_TCP_Recv+1,tblptrh
  5898  004EB4  0E00               	movlw	low (__smallconst shr (0+16))
  5899  004EB6  6EF8               	movwf	tblptru,c
  5900  004EB8  0E0F               	movlw	(high __ramtop+-1)
  5901  004EBA  64F7               	cpfsgt	tblptrh,c
  5902  004EBC  D004               	bra	u14387
  5903  004EBE  0E07               	movlw	7
  5904  004EC0  6EF5               	movwf	tablat,c
  5905  004EC2  000C               	tblwt		*
  5906  004EC4  D006               	bra	u14380
  5907  004EC6                     u14387:
  5908  004EC6  CFF6 FFE9          	movff	tblptrl,fsr0l
  5909  004ECA  CFF7 FFEA          	movff	tblptrh,fsr0h
  5910  004ECE  0E07               	movlw	7
  5911  004ED0  D054               	goto	L8
  5912  004ED2                     u14380:
  5913                           
  5914                           ;tcpv4.c: 551: } else
  5915  004ED2  D071               	goto	l9434
  5916  004ED4                     l9424:
  5917                           
  5918                           ; BSR set to: 1
  5919                           ;tcpv4.c: 552: {
  5920                           ;tcpv4.c: 553: ;
  5921                           ;tcpv4.c: 554: currentTCB->connectionEvent = RCV_FIN;
  5922  004ED4  0E2B               	movlw	43
  5923  004ED6  0100               	movlb	0	; () banked
  5924  004ED8  25FE               	addwf	_currentTCB& (0+255),w,b
  5925  004EDA  6FDA               	movwf	??_TCP_Recv& (0+255),b
  5926  004EDC  0E00               	movlw	0
  5927  004EDE  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
  5928  004EE0  6FDB               	movwf	(??_TCP_Recv+1)& (0+255),b
  5929  004EE2  C0DA  FFF6         	movff	??_TCP_Recv,tblptrl
  5930  004EE6  C0DB  FFF7         	movff	??_TCP_Recv+1,tblptrh
  5931  004EEA  0E00               	movlw	low (__smallconst shr (0+16))
  5932  004EEC  6EF8               	movwf	tblptru,c
  5933  004EEE  0E0F               	movlw	(high __ramtop+-1)
  5934  004EF0  64F7               	cpfsgt	tblptrh,c
  5935  004EF2  D004               	bra	u14397
  5936  004EF4  0E06               	movlw	6
  5937  004EF6  6EF5               	movwf	tablat,c
  5938  004EF8  000C               	tblwt		*
  5939  004EFA  D006               	bra	u14390
  5940  004EFC                     u14397:
  5941  004EFC  CFF6 FFE9          	movff	tblptrl,fsr0l
  5942  004F00  CFF7 FFEA          	movff	tblptrh,fsr0h
  5943  004F04  0E06               	movlw	6
  5944  004F06  D039               	goto	L8
  5945  004F08                     u14390:
  5946  004F08  D056               	goto	l9434
  5947  004F0A                     l1274:
  5948                           
  5949                           ; BSR set to: 1
  5950  004F0A  A5C9               	btfss	(_tcpHeader+13)& (0+255),2,b
  5951  004F0C  D038               	goto	l1278
  5952                           
  5953                           ; BSR set to: 1
  5954                           ;tcpv4.c: 557: {
  5955                           ;tcpv4.c: 558: if(tcpHeader.ack)
  5956  004F0E  A9C9               	btfss	(_tcpHeader+13)& (0+255),4,b
  5957  004F10  D01B               	goto	l9430
  5958                           
  5959                           ; BSR set to: 1
  5960                           ;tcpv4.c: 559: {
  5961                           ;tcpv4.c: 560: ;
  5962                           ;tcpv4.c: 561: currentTCB->connectionEvent = RCV_RSTACK;
  5963  004F12  0E2B               	movlw	43
  5964  004F14  0100               	movlb	0	; () banked
  5965  004F16  25FE               	addwf	_currentTCB& (0+255),w,b
  5966  004F18  6FDA               	movwf	??_TCP_Recv& (0+255),b
  5967  004F1A  0E00               	movlw	0
  5968  004F1C  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
  5969  004F1E  6FDB               	movwf	(??_TCP_Recv+1)& (0+255),b
  5970  004F20  C0DA  FFF6         	movff	??_TCP_Recv,tblptrl
  5971  004F24  C0DB  FFF7         	movff	??_TCP_Recv+1,tblptrh
  5972  004F28  0E00               	movlw	low (__smallconst shr (0+16))
  5973  004F2A  6EF8               	movwf	tblptru,c
  5974  004F2C  0E0F               	movlw	(high __ramtop+-1)
  5975  004F2E  64F7               	cpfsgt	tblptrh,c
  5976  004F30  D004               	bra	u14427
  5977  004F32  0E0A               	movlw	10
  5978  004F34  6EF5               	movwf	tablat,c
  5979  004F36  000C               	tblwt		*
  5980  004F38  D006               	bra	u14420
  5981  004F3A                     u14427:
  5982  004F3A  CFF6 FFE9          	movff	tblptrl,fsr0l
  5983  004F3E  CFF7 FFEA          	movff	tblptrh,fsr0h
  5984  004F42  0E0A               	movlw	10
  5985  004F44  D01A               	goto	L8
  5986  004F46                     u14420:
  5987                           
  5988                           ;tcpv4.c: 562: } else
  5989  004F46  D037               	goto	l9434
  5990  004F48                     l9430:
  5991                           
  5992                           ; BSR set to: 1
  5993                           ;tcpv4.c: 563: {
  5994                           ;tcpv4.c: 564: ;
  5995                           ;tcpv4.c: 565: currentTCB->connectionEvent = RCV_RST;
  5996  004F48  0E2B               	movlw	43
  5997  004F4A  0100               	movlb	0	; () banked
  5998  004F4C  25FE               	addwf	_currentTCB& (0+255),w,b
  5999  004F4E  6FDA               	movwf	??_TCP_Recv& (0+255),b
  6000  004F50  0E00               	movlw	0
  6001  004F52  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
  6002  004F54  6FDB               	movwf	(??_TCP_Recv+1)& (0+255),b
  6003  004F56  C0DA  FFF6         	movff	??_TCP_Recv,tblptrl
  6004  004F5A  C0DB  FFF7         	movff	??_TCP_Recv+1,tblptrh
  6005  004F5E  0E00               	movlw	low (__smallconst shr (0+16))
  6006  004F60  6EF8               	movwf	tblptru,c
  6007  004F62  0E0F               	movlw	(high __ramtop+-1)
  6008  004F64  64F7               	cpfsgt	tblptrh,c
  6009  004F66  D004               	bra	u14437
  6010  004F68  0E09               	movlw	9
  6011  004F6A  6EF5               	movwf	tablat,c
  6012  004F6C  000C               	tblwt		*
  6013  004F6E  D006               	bra	u14430
  6014  004F70                     u14437:
  6015  004F70  CFF6 FFE9          	movff	tblptrl,fsr0l
  6016  004F74  CFF7 FFEA          	movff	tblptrh,fsr0h
  6017  004F78  0E09               	movlw	9
  6018  004F7A                     L8:
  6019  004F7A  6EEF               	movwf	indf0,c
  6020  004F7C                     u14430:
  6021  004F7C  D01C               	goto	l9434
  6022  004F7E                     l1278:
  6023                           
  6024                           ; BSR set to: 1
  6025  004F7E  A9C9               	btfss	(_tcpHeader+13)& (0+255),4,b
  6026  004F80  D01A               	goto	l9434
  6027                           
  6028                           ; BSR set to: 1
  6029                           ;tcpv4.c: 568: {
  6030                           ;tcpv4.c: 569: ;
  6031                           ;tcpv4.c: 570: currentTCB->connectionEvent = RCV_ACK;
  6032  004F82  0E2B               	movlw	43
  6033  004F84  0100               	movlb	0	; () banked
  6034  004F86  25FE               	addwf	_currentTCB& (0+255),w,b
  6035  004F88  6FDA               	movwf	??_TCP_Recv& (0+255),b
  6036  004F8A  0E00               	movlw	0
  6037  004F8C  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
  6038  004F8E  6FDB               	movwf	(??_TCP_Recv+1)& (0+255),b
  6039  004F90  C0DA  FFF6         	movff	??_TCP_Recv,tblptrl
  6040  004F94  C0DB  FFF7         	movff	??_TCP_Recv+1,tblptrh
  6041  004F98  0E00               	movlw	low (__smallconst shr (0+16))
  6042  004F9A  6EF8               	movwf	tblptru,c
  6043  004F9C  0E0F               	movlw	(high __ramtop+-1)
  6044  004F9E  64F7               	cpfsgt	tblptrh,c
  6045  004FA0  D004               	bra	u14457
  6046  004FA2  0E04               	movlw	4
  6047  004FA4  6EF5               	movwf	tablat,c
  6048  004FA6  000C               	tblwt		*
  6049  004FA8  D006               	bra	u14450
  6050  004FAA                     u14457:
  6051  004FAA  CFF6 FFE9          	movff	tblptrl,fsr0l
  6052  004FAE  CFF7 FFEA          	movff	tblptrh,fsr0h
  6053  004FB2  0E04               	movlw	4
  6054  004FB4  6EEF               	movwf	indf0,c
  6055  004FB6                     u14450:
  6056  004FB6                     l9434:
  6057                           
  6058                           ;tcpv4.c: 575: }
  6059                           ;tcpv4.c: 577: tcpHeader.ackNumber = ((((uint32_t)tcpHeader.ackNumber&(uint32_t)0xff0000
      +                          00) >> 24) | (((uint32_t)tcpHeader.ackNumber&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)t
      +                          cpHeader.ackNumber&(uint32_t)0x0000ff00) << 8) | (((uint32_t)tcpHeader.ackNumber&(uint32
      +                          _
  6060  004FB6  0101               	movlb	1	; () banked
  6061  004FB8  51C4               	movf	(_tcpHeader+8)& (0+255),w,b
  6062  004FBA  0100               	movlb	0	; () banked
  6063  004FBC  6FDA               	movwf	??_TCP_Recv& (0+255),b
  6064  004FBE  6BDB               	clrf	(??_TCP_Recv+1)& (0+255),b
  6065  004FC0  6BDC               	clrf	(??_TCP_Recv+2)& (0+255),b
  6066  004FC2  6BDD               	clrf	(??_TCP_Recv+3)& (0+255),b
  6067  004FC4  C0DA  F0DD         	movff	??_TCP_Recv,??_TCP_Recv+3
  6068  004FC8  6BDC               	clrf	(??_TCP_Recv+2)& (0+255),b
  6069  004FCA  6BDB               	clrf	(??_TCP_Recv+1)& (0+255),b
  6070  004FCC  6BDA               	clrf	??_TCP_Recv& (0+255),b
  6071  004FCE  EE21  F0C4         	lfsr	2,_tcpHeader+8
  6072  004FD2  0E00               	movlw	0
  6073  004FD4  14DE               	andwf	postinc2,w,c
  6074  004FD6  6FDE               	movwf	(??_TCP_Recv+4)& (0+255),b
  6075  004FD8  0EFF               	movlw	255
  6076  004FDA  14DE               	andwf	postinc2,w,c
  6077  004FDC  6FDF               	movwf	(??_TCP_Recv+5)& (0+255),b
  6078  004FDE  0E00               	movlw	0
  6079  004FE0  14DE               	andwf	postinc2,w,c
  6080  004FE2  6FE0               	movwf	(??_TCP_Recv+6)& (0+255),b
  6081  004FE4  0E00               	movlw	0
  6082  004FE6  14DE               	andwf	postinc2,w,c
  6083  004FE8  6FE1               	movwf	(??_TCP_Recv+7)& (0+255),b
  6084  004FEA  C0E0  F0E1         	movff	??_TCP_Recv+6,??_TCP_Recv+7
  6085  004FEE  C0DF  F0E0         	movff	??_TCP_Recv+5,??_TCP_Recv+6
  6086  004FF2  C0DE  F0DF         	movff	??_TCP_Recv+4,??_TCP_Recv+5
  6087  004FF6  6BDE               	clrf	(??_TCP_Recv+4)& (0+255),b
  6088  004FF8  C1C4  F0E2         	movff	_tcpHeader+8,??_TCP_Recv+8
  6089  004FFC  C1C5  F0E3         	movff	_tcpHeader+9,??_TCP_Recv+9
  6090  005000  C1C6  F0E4         	movff	_tcpHeader+10,??_TCP_Recv+10
  6091  005004  C1C7  F0E5         	movff	_tcpHeader+11,??_TCP_Recv+11
  6092  005008  C0E3  F0E2         	movff	??_TCP_Recv+9,??_TCP_Recv+8
  6093  00500C  C0E4  F0E3         	movff	??_TCP_Recv+10,??_TCP_Recv+9
  6094  005010  C0E5  F0E4         	movff	??_TCP_Recv+11,??_TCP_Recv+10
  6095  005014  6BE5               	clrf	(??_TCP_Recv+11)& (0+255),b
  6096  005016  6BE6               	clrf	(??_TCP_Recv+12)& (0+255),b
  6097  005018  51E3               	movf	(??_TCP_Recv+9)& (0+255),w,b
  6098  00501A  6FE7               	movwf	(??_TCP_Recv+13)& (0+255),b
  6099  00501C  0E00               	movlw	0
  6100  00501E  6BE8               	clrf	(??_TCP_Recv+14)& (0+255),b
  6101  005020  6BE9               	clrf	(??_TCP_Recv+15)& (0+255),b
  6102  005022  EE21  F0C4         	lfsr	2,_tcpHeader+8
  6103  005026  14DE               	andwf	postinc2,w,c
  6104  005028  6FEA               	movwf	(??_TCP_Recv+16)& (0+255),b
  6105  00502A  0E00               	movlw	0
  6106  00502C  14DE               	andwf	postinc2,w,c
  6107  00502E  6FEB               	movwf	(??_TCP_Recv+17)& (0+255),b
  6108  005030  0E00               	movlw	0
  6109  005032  14DE               	andwf	postinc2,w,c
  6110  005034  6FEC               	movwf	(??_TCP_Recv+18)& (0+255),b
  6111  005036  0EFF               	movlw	255
  6112  005038  14DE               	andwf	postinc2,w,c
  6113  00503A  6FED               	movwf	(??_TCP_Recv+19)& (0+255),b
  6114  00503C  0E19               	movlw	25
  6115  00503E  D005               	goto	u14460
  6116  005040                     u14465:
  6117  005040  90D8               	bcf	status,0,c
  6118  005042  33ED               	rrcf	(??_TCP_Recv+19)& (0+255),f,b
  6119  005044  33EC               	rrcf	(??_TCP_Recv+18)& (0+255),f,b
  6120  005046  33EB               	rrcf	(??_TCP_Recv+17)& (0+255),f,b
  6121  005048  33EA               	rrcf	(??_TCP_Recv+16)& (0+255),f,b
  6122  00504A                     u14460:
  6123  00504A  2EE8               	decfsz	wreg,f,c
  6124  00504C  D7F9               	goto	u14465
  6125  00504E  51E6               	movf	(??_TCP_Recv+12)& (0+255),w,b
  6126  005050  11EA               	iorwf	(??_TCP_Recv+16)& (0+255),w,b
  6127  005052  6FEE               	movwf	(??_TCP_Recv+20)& (0+255),b
  6128  005054  51E7               	movf	(??_TCP_Recv+13)& (0+255),w,b
  6129  005056  11EB               	iorwf	(??_TCP_Recv+17)& (0+255),w,b
  6130  005058  6FEF               	movwf	(??_TCP_Recv+21)& (0+255),b
  6131  00505A  51E8               	movf	(??_TCP_Recv+14)& (0+255),w,b
  6132  00505C  11EC               	iorwf	(??_TCP_Recv+18)& (0+255),w,b
  6133  00505E  6FF0               	movwf	(??_TCP_Recv+22)& (0+255),b
  6134  005060  51E9               	movf	(??_TCP_Recv+15)& (0+255),w,b
  6135  005062  11ED               	iorwf	(??_TCP_Recv+19)& (0+255),w,b
  6136  005064  6FF1               	movwf	(??_TCP_Recv+23)& (0+255),b
  6137  005066  51DE               	movf	(??_TCP_Recv+4)& (0+255),w,b
  6138  005068  11EE               	iorwf	(??_TCP_Recv+20)& (0+255),w,b
  6139  00506A  6FF2               	movwf	(??_TCP_Recv+24)& (0+255),b
  6140  00506C  51DF               	movf	(??_TCP_Recv+5)& (0+255),w,b
  6141  00506E  11EF               	iorwf	(??_TCP_Recv+21)& (0+255),w,b
  6142  005070  6FF3               	movwf	(??_TCP_Recv+25)& (0+255),b
  6143  005072  51E0               	movf	(??_TCP_Recv+6)& (0+255),w,b
  6144  005074  11F0               	iorwf	(??_TCP_Recv+22)& (0+255),w,b
  6145  005076  6FF4               	movwf	(??_TCP_Recv+26)& (0+255),b
  6146  005078  51E1               	movf	(??_TCP_Recv+7)& (0+255),w,b
  6147  00507A  11F1               	iorwf	(??_TCP_Recv+23)& (0+255),w,b
  6148  00507C  6FF5               	movwf	(??_TCP_Recv+27)& (0+255),b
  6149  00507E  51DA               	movf	??_TCP_Recv& (0+255),w,b
  6150  005080  11F2               	iorwf	(??_TCP_Recv+24)& (0+255),w,b
  6151  005082  0101               	movlb	1	; () banked
  6152  005084  6FC4               	movwf	(_tcpHeader+8)& (0+255),b
  6153  005086  0100               	movlb	0	; () banked
  6154  005088  51DB               	movf	(??_TCP_Recv+1)& (0+255),w,b
  6155  00508A  11F3               	iorwf	(??_TCP_Recv+25)& (0+255),w,b
  6156  00508C  0101               	movlb	1	; () banked
  6157  00508E  6FC5               	movwf	(_tcpHeader+9)& (0+255),b
  6158  005090  0100               	movlb	0	; () banked
  6159  005092  51DC               	movf	(??_TCP_Recv+2)& (0+255),w,b
  6160  005094  11F4               	iorwf	(??_TCP_Recv+26)& (0+255),w,b
  6161  005096  0101               	movlb	1	; () banked
  6162  005098  6FC6               	movwf	(_tcpHeader+10)& (0+255),b
  6163  00509A  0100               	movlb	0	; () banked
  6164  00509C  51DD               	movf	(??_TCP_Recv+3)& (0+255),w,b
  6165  00509E  11F5               	iorwf	(??_TCP_Recv+27)& (0+255),w,b
  6166  0050A0  0101               	movlb	1	; () banked
  6167  0050A2  6FC7               	movwf	(_tcpHeader+11)& (0+255),b
  6168                           
  6169                           ;tcpv4.c: 578: tcpHeader.sequenceNumber = ((((uint32_t)tcpHeader.sequenceNumber&(uint32_
      +                          t)0xff000000) >> 24) | (((uint32_t)tcpHeader.sequenceNumber&(uint32_t)0x00ff0000) >> 8) 
      +                          | (((uint32_t)tcpHeader.sequenceNumber&(uint32_t)0x0000ff00) << 8) | (((uint32_t)tcpHead
      +                          e
  6170  0050A4  51C0               	movf	(_tcpHeader+4)& (0+255),w,b
  6171  0050A6  0100               	movlb	0	; () banked
  6172  0050A8  6FDA               	movwf	??_TCP_Recv& (0+255),b
  6173  0050AA  6BDB               	clrf	(??_TCP_Recv+1)& (0+255),b
  6174  0050AC  6BDC               	clrf	(??_TCP_Recv+2)& (0+255),b
  6175  0050AE  6BDD               	clrf	(??_TCP_Recv+3)& (0+255),b
  6176  0050B0  C0DA  F0DD         	movff	??_TCP_Recv,??_TCP_Recv+3
  6177  0050B4  6BDC               	clrf	(??_TCP_Recv+2)& (0+255),b
  6178  0050B6  6BDB               	clrf	(??_TCP_Recv+1)& (0+255),b
  6179  0050B8  6BDA               	clrf	??_TCP_Recv& (0+255),b
  6180  0050BA  EE21  F0C0         	lfsr	2,_tcpHeader+4
  6181  0050BE  0E00               	movlw	0
  6182  0050C0  14DE               	andwf	postinc2,w,c
  6183  0050C2  6FDE               	movwf	(??_TCP_Recv+4)& (0+255),b
  6184  0050C4  0EFF               	movlw	255
  6185  0050C6  14DE               	andwf	postinc2,w,c
  6186  0050C8  6FDF               	movwf	(??_TCP_Recv+5)& (0+255),b
  6187  0050CA  0E00               	movlw	0
  6188  0050CC  14DE               	andwf	postinc2,w,c
  6189  0050CE  6FE0               	movwf	(??_TCP_Recv+6)& (0+255),b
  6190  0050D0  0E00               	movlw	0
  6191  0050D2  14DE               	andwf	postinc2,w,c
  6192  0050D4  6FE1               	movwf	(??_TCP_Recv+7)& (0+255),b
  6193  0050D6  C0E0  F0E1         	movff	??_TCP_Recv+6,??_TCP_Recv+7
  6194  0050DA  C0DF  F0E0         	movff	??_TCP_Recv+5,??_TCP_Recv+6
  6195  0050DE  C0DE  F0DF         	movff	??_TCP_Recv+4,??_TCP_Recv+5
  6196  0050E2  6BDE               	clrf	(??_TCP_Recv+4)& (0+255),b
  6197  0050E4  C1C0  F0E2         	movff	_tcpHeader+4,??_TCP_Recv+8
  6198  0050E8  C1C1  F0E3         	movff	_tcpHeader+5,??_TCP_Recv+9
  6199  0050EC  C1C2  F0E4         	movff	_tcpHeader+6,??_TCP_Recv+10
  6200  0050F0  C1C3  F0E5         	movff	_tcpHeader+7,??_TCP_Recv+11
  6201  0050F4  C0E3  F0E2         	movff	??_TCP_Recv+9,??_TCP_Recv+8
  6202  0050F8  C0E4  F0E3         	movff	??_TCP_Recv+10,??_TCP_Recv+9
  6203  0050FC  C0E5  F0E4         	movff	??_TCP_Recv+11,??_TCP_Recv+10
  6204  005100  6BE5               	clrf	(??_TCP_Recv+11)& (0+255),b
  6205  005102  6BE6               	clrf	(??_TCP_Recv+12)& (0+255),b
  6206  005104  51E3               	movf	(??_TCP_Recv+9)& (0+255),w,b
  6207  005106  6FE7               	movwf	(??_TCP_Recv+13)& (0+255),b
  6208  005108  0E00               	movlw	0
  6209  00510A  6BE8               	clrf	(??_TCP_Recv+14)& (0+255),b
  6210  00510C  6BE9               	clrf	(??_TCP_Recv+15)& (0+255),b
  6211  00510E  EE21  F0C0         	lfsr	2,_tcpHeader+4
  6212  005112  14DE               	andwf	postinc2,w,c
  6213  005114  6FEA               	movwf	(??_TCP_Recv+16)& (0+255),b
  6214  005116  0E00               	movlw	0
  6215  005118  14DE               	andwf	postinc2,w,c
  6216  00511A  6FEB               	movwf	(??_TCP_Recv+17)& (0+255),b
  6217  00511C  0E00               	movlw	0
  6218  00511E  14DE               	andwf	postinc2,w,c
  6219  005120  6FEC               	movwf	(??_TCP_Recv+18)& (0+255),b
  6220  005122  0EFF               	movlw	255
  6221  005124  14DE               	andwf	postinc2,w,c
  6222  005126  6FED               	movwf	(??_TCP_Recv+19)& (0+255),b
  6223  005128  0E19               	movlw	25
  6224  00512A  D005               	goto	u14470
  6225  00512C                     u14475:
  6226  00512C  90D8               	bcf	status,0,c
  6227  00512E  33ED               	rrcf	(??_TCP_Recv+19)& (0+255),f,b
  6228  005130  33EC               	rrcf	(??_TCP_Recv+18)& (0+255),f,b
  6229  005132  33EB               	rrcf	(??_TCP_Recv+17)& (0+255),f,b
  6230  005134  33EA               	rrcf	(??_TCP_Recv+16)& (0+255),f,b
  6231  005136                     u14470:
  6232  005136  2EE8               	decfsz	wreg,f,c
  6233  005138  D7F9               	goto	u14475
  6234  00513A  51E6               	movf	(??_TCP_Recv+12)& (0+255),w,b
  6235  00513C  11EA               	iorwf	(??_TCP_Recv+16)& (0+255),w,b
  6236  00513E  6FEE               	movwf	(??_TCP_Recv+20)& (0+255),b
  6237  005140  51E7               	movf	(??_TCP_Recv+13)& (0+255),w,b
  6238  005142  11EB               	iorwf	(??_TCP_Recv+17)& (0+255),w,b
  6239  005144  6FEF               	movwf	(??_TCP_Recv+21)& (0+255),b
  6240  005146  51E8               	movf	(??_TCP_Recv+14)& (0+255),w,b
  6241  005148  11EC               	iorwf	(??_TCP_Recv+18)& (0+255),w,b
  6242  00514A  6FF0               	movwf	(??_TCP_Recv+22)& (0+255),b
  6243  00514C  51E9               	movf	(??_TCP_Recv+15)& (0+255),w,b
  6244  00514E  11ED               	iorwf	(??_TCP_Recv+19)& (0+255),w,b
  6245  005150  6FF1               	movwf	(??_TCP_Recv+23)& (0+255),b
  6246  005152  51DE               	movf	(??_TCP_Recv+4)& (0+255),w,b
  6247  005154  11EE               	iorwf	(??_TCP_Recv+20)& (0+255),w,b
  6248  005156  6FF2               	movwf	(??_TCP_Recv+24)& (0+255),b
  6249  005158  51DF               	movf	(??_TCP_Recv+5)& (0+255),w,b
  6250  00515A  11EF               	iorwf	(??_TCP_Recv+21)& (0+255),w,b
  6251  00515C  6FF3               	movwf	(??_TCP_Recv+25)& (0+255),b
  6252  00515E  51E0               	movf	(??_TCP_Recv+6)& (0+255),w,b
  6253  005160  11F0               	iorwf	(??_TCP_Recv+22)& (0+255),w,b
  6254  005162  6FF4               	movwf	(??_TCP_Recv+26)& (0+255),b
  6255  005164  51E1               	movf	(??_TCP_Recv+7)& (0+255),w,b
  6256  005166  11F1               	iorwf	(??_TCP_Recv+23)& (0+255),w,b
  6257  005168  6FF5               	movwf	(??_TCP_Recv+27)& (0+255),b
  6258  00516A  51DA               	movf	??_TCP_Recv& (0+255),w,b
  6259  00516C  11F2               	iorwf	(??_TCP_Recv+24)& (0+255),w,b
  6260  00516E  0101               	movlb	1	; () banked
  6261  005170  6FC0               	movwf	(_tcpHeader+4)& (0+255),b
  6262  005172  0100               	movlb	0	; () banked
  6263  005174  51DB               	movf	(??_TCP_Recv+1)& (0+255),w,b
  6264  005176  11F3               	iorwf	(??_TCP_Recv+25)& (0+255),w,b
  6265  005178  0101               	movlb	1	; () banked
  6266  00517A  6FC1               	movwf	(_tcpHeader+5)& (0+255),b
  6267  00517C  0100               	movlb	0	; () banked
  6268  00517E  51DC               	movf	(??_TCP_Recv+2)& (0+255),w,b
  6269  005180  11F4               	iorwf	(??_TCP_Recv+26)& (0+255),w,b
  6270  005182  0101               	movlb	1	; () banked
  6271  005184  6FC2               	movwf	(_tcpHeader+6)& (0+255),b
  6272  005186  0100               	movlb	0	; () banked
  6273  005188  51DD               	movf	(??_TCP_Recv+3)& (0+255),w,b
  6274  00518A  11F5               	iorwf	(??_TCP_Recv+27)& (0+255),w,b
  6275  00518C  0101               	movlb	1	; () banked
  6276  00518E  6FC3               	movwf	(_tcpHeader+7)& (0+255),b
  6277                           
  6278                           ; BSR set to: 1
  6279                           ;tcpv4.c: 580: TCP_FiniteStateMachine();
  6280  005190  EF75  F008         	goto	_TCP_FiniteStateMachine	;wreg free
  6281  005194                     __end_of_TCP_Recv:
  6282                           	opt stack 0
  6283                           tosu	equ	0xFFF
  6284                           tosh	equ	0xFFE
  6285                           tosl	equ	0xFFD
  6286                           pclath	equ	0xFFA
  6287                           tblptru	equ	0xFF8
  6288                           tblptrh	equ	0xFF7
  6289                           tblptrl	equ	0xFF6
  6290                           tablat	equ	0xFF5
  6291                           prodh	equ	0xFF4
  6292                           prodl	equ	0xFF3
  6293                           intcon	equ	0xFF2
  6294                           intcon2	equ	0xFF1
  6295                           indf0	equ	0xFEF
  6296                           postinc0	equ	0xFEE
  6297                           fsr0h	equ	0xFEA
  6298                           fsr0l	equ	0xFE9
  6299                           wreg	equ	0xFE8
  6300                           postinc1	equ	0xFE6
  6301                           fsr1h	equ	0xFE2
  6302                           fsr1l	equ	0xFE1
  6303                           indf2	equ	0xFDF
  6304                           postinc2	equ	0xFDE
  6305                           postdec2	equ	0xFDD
  6306                           fsr2h	equ	0xFDA
  6307                           fsr2l	equ	0xFD9
  6308                           status	equ	0xFD8
  6309                           
  6310 ;; *************** function _TCP_ParseTCPOptions *****************
  6311 ;; Defined at:
  6312 ;;		line 356 in file "../../TCPIP Library/source/tcpv4.c"
  6313 ;; Parameters:    Size  Location     Type
  6314 ;;		None
  6315 ;; Auto vars:     Size  Location     Type
  6316 ;;  tcpOptionsSi    2   18[COMRAM] unsigned int 
  6317 ;;  opt             1   17[COMRAM] unsigned char 
  6318 ;;  ret             1   16[COMRAM] unsigned char 
  6319 ;; Return value:  Size  Location     Type
  6320 ;;                  1    wreg      unsigned char 
  6321 ;; Registers used:
  6322 ;;		wreg, status,2, status,0, cstack
  6323 ;; Tracked objects:
  6324 ;;		On entry : F/1
  6325 ;;		On exit  : C/0
  6326 ;;		Unchanged: 0/0
  6327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6329 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6330 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6331 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6332 ;;Total ram usage:        6 bytes
  6333 ;; Hardware stack levels used:    1
  6334 ;; Hardware stack levels required when called:    7
  6335 ;; This function calls:
  6336 ;;		_ETH_Dump
  6337 ;;		_ETH_Read16
  6338 ;;		_ETH_Read8
  6339 ;; This function is called by:
  6340 ;;		_TCP_Recv
  6341 ;; This function uses a non-reentrant model
  6342 ;;
  6343                           
  6344                           	psect	text23
  6345  006F98                     __ptext23:
  6346                           	opt stack 0
  6347  006F98                     _TCP_ParseTCPOptions:
  6348                           	opt stack 19
  6349                           
  6350                           ; BSR set to: 1
  6351                           ;tcpv4.c: 358: uint8_t opt;
  6352                           ;tcpv4.c: 359: uint16_t tcpOptionsSize;
  6353                           ;tcpv4.c: 360: bool ret;
  6354                           ;tcpv4.c: 362: ret = 0;
  6355                           
  6356                           ;incstack = 0
  6357  006F98  6A11               	clrf	TCP_ParseTCPOptions@ret,c
  6358                           
  6359                           ; BSR set to: 1
  6360                           ;tcpv4.c: 364: tcpOptionsSize = (uint16_t)((tcpHeader.dataOffset << 2) - sizeof(tcpHeade
      +                          r_t));
  6361  006F9A  39C8               	swapf	(_tcpHeader+12)& (0+255),w,b
  6362  006F9C  0B0F               	andlw	15
  6363  006F9E  6E0F               	movwf	??_TCP_ParseTCPOptions& (0+255),c
  6364  006FA0  6A10               	clrf	(??_TCP_ParseTCPOptions+1)& (0+255),c
  6365  006FA2  90D8               	bcf	status,0,c
  6366  006FA4  360F               	rlcf	??_TCP_ParseTCPOptions,f,c
  6367  006FA6  3610               	rlcf	??_TCP_ParseTCPOptions+1,f,c
  6368  006FA8  90D8               	bcf	status,0,c
  6369  006FAA  360F               	rlcf	??_TCP_ParseTCPOptions,f,c
  6370  006FAC  3610               	rlcf	??_TCP_ParseTCPOptions+1,f,c
  6371  006FAE  0EEC               	movlw	236
  6372  006FB0  240F               	addwf	??_TCP_ParseTCPOptions,w,c
  6373  006FB2  6E13               	movwf	TCP_ParseTCPOptions@tcpOptionsSize,c
  6374  006FB4  0EFF               	movlw	255
  6375  006FB6  2010               	addwfc	??_TCP_ParseTCPOptions+1,w,c
  6376  006FB8  6E14               	movwf	TCP_ParseTCPOptions@tcpOptionsSize+1,c
  6377                           
  6378                           ;tcpv4.c: 366: if (tcpOptionsSize > 0)
  6379  006FBA  1013               	iorwf	TCP_ParseTCPOptions@tcpOptionsSize,w,c
  6380  006FBC  E071               	bz	l8822
  6381                           
  6382                           ; BSR set to: 1
  6383                           ;tcpv4.c: 367: {
  6384                           ;tcpv4.c: 370: tcpMss = 536;
  6385  006FBE  0E02               	movlw	2
  6386  006FC0  6FA5               	movwf	(_tcpMss+1)& (0+255),b
  6387  006FC2  0E18               	movlw	24
  6388  006FC4  6FA4               	movwf	_tcpMss& (0+255),b
  6389                           
  6390                           ; BSR set to: 1
  6391                           ;tcpv4.c: 372: if(tcpHeader.syn)
  6392  006FC6  A3C9               	btfss	(_tcpHeader+13)& (0+255),1,b
  6393  006FC8  D065               	goto	l8820
  6394  006FCA  D05C               	goto	l8818
  6395  006FCC                     l8776:
  6396                           
  6397                           ;tcpv4.c: 376: {
  6398                           ;tcpv4.c: 377: opt = ETH_Read8();
  6399  006FCC  EC7F  F043         	call	_ETH_Read8	;wreg free
  6400  006FD0  6E12               	movwf	TCP_ParseTCPOptions@opt,c
  6401                           
  6402                           ;tcpv4.c: 378: switch (opt)
  6403  006FD2  D051               	goto	l8816
  6404  006FD4                     l8778:
  6405                           
  6406                           ; BSR set to: 1
  6407                           ;tcpv4.c: 382: if (tcpOptionsSize)
  6408  006FD4  5013               	movf	TCP_ParseTCPOptions@tcpOptionsSize,w,c
  6409  006FD6  1014               	iorwf	TCP_ParseTCPOptions@tcpOptionsSize+1,w,c
  6410  006FD8  E008               	bz	l8784
  6411                           
  6412                           ; BSR set to: 1
  6413                           ;tcpv4.c: 383: {
  6414                           ;tcpv4.c: 385: ETH_Dump(tcpOptionsSize);
  6415  006FDA  C013  F00B         	movff	TCP_ParseTCPOptions@tcpOptionsSize,ETH_Dump@length
  6416  006FDE  C014  F00C         	movff	TCP_ParseTCPOptions@tcpOptionsSize+1,ETH_Dump@length+1
  6417  006FE2  EC76  F041         	call	_ETH_Dump	;wreg free
  6418                           
  6419                           ; BSR set to: 2
  6420                           ;tcpv4.c: 386: tcpOptionsSize = 0;
  6421  006FE6  6A13               	clrf	TCP_ParseTCPOptions@tcpOptionsSize,c
  6422  006FE8  6A14               	clrf	TCP_ParseTCPOptions@tcpOptionsSize+1,c
  6423  006FEA                     l8784:
  6424                           
  6425                           ;tcpv4.c: 387: }
  6426                           ;tcpv4.c: 388: ret = 1;
  6427  006FEA  0E01               	movlw	1
  6428  006FEC  6E11               	movwf	TCP_ParseTCPOptions@ret,c
  6429                           
  6430                           ;tcpv4.c: 389: break;
  6431  006FEE  D04A               	goto	l8818
  6432  006FF0                     l8786:
  6433                           
  6434                           ; BSR set to: 1
  6435                           ;tcpv4.c: 394: if (tcpOptionsSize >= 3)
  6436  006FF0  5014               	movf	TCP_ParseTCPOptions@tcpOptionsSize+1,w,c
  6437  006FF2  E103               	bnz	u12170
  6438  006FF4  0E03               	movlw	3
  6439  006FF6  5C13               	subwf	TCP_ParseTCPOptions@tcpOptionsSize,w,c
  6440  006FF8  E31D               	bnc	l1241
  6441  006FFA                     u12170:
  6442                           
  6443                           ; BSR set to: 1
  6444                           ;tcpv4.c: 395: {
  6445                           ;tcpv4.c: 396: opt = ETH_Read8();
  6446  006FFA  EC7F  F043         	call	_ETH_Read8	;wreg free
  6447  006FFE  6E12               	movwf	TCP_ParseTCPOptions@opt,c
  6448                           
  6449                           ; BSR set to: 1
  6450                           ;tcpv4.c: 397: if (opt == 0x04)
  6451  007000  0E04               	movlw	4
  6452  007002  1812               	xorwf	TCP_ParseTCPOptions@opt,w,c
  6453  007004  E114               	bnz	l1242
  6454                           
  6455                           ; BSR set to: 1
  6456                           ;tcpv4.c: 398: {
  6457                           ;tcpv4.c: 400: tcpMss = ETH_Read16();
  6458  007006  ECE5  F041         	call	_ETH_Read16	;wreg free
  6459  00700A  C003  F1A4         	movff	?_ETH_Read16,_tcpMss
  6460  00700E  C004  F1A5         	movff	?_ETH_Read16+1,_tcpMss+1
  6461                           
  6462                           ; BSR set to: 1
  6463                           ;tcpv4.c: 402: tcpOptionsSize = tcpOptionsSize - 3;
  6464  007012  0EFD               	movlw	253
  6465  007014  2613               	addwf	TCP_ParseTCPOptions@tcpOptionsSize,f,c
  6466  007016  0EFF               	movlw	255
  6467  007018  2214               	addwfc	TCP_ParseTCPOptions@tcpOptionsSize+1,f,c
  6468                           
  6469                           ; BSR set to: 1
  6470                           ;tcpv4.c: 405: if (tcpMss > 1460u)
  6471  00701A  0EB5               	movlw	181
  6472  00701C  5DA4               	subwf	_tcpMss& (0+255),w,b
  6473  00701E  0E05               	movlw	5
  6474  007020  59A5               	subwfb	(_tcpMss+1)& (0+255),w,b
  6475  007022  E3E3               	bnc	l8784
  6476                           
  6477                           ; BSR set to: 1
  6478                           ;tcpv4.c: 406: {
  6479                           ;tcpv4.c: 407: tcpMss = 1460u;
  6480  007024  0E05               	movlw	5
  6481  007026  6FA5               	movwf	(_tcpMss+1)& (0+255),b
  6482  007028  0EB4               	movlw	180
  6483  00702A  6FA4               	movwf	_tcpMss& (0+255),b
  6484  00702C  D7DE               	goto	l8784
  6485  00702E                     l1242:
  6486                           
  6487                           ; BSR set to: 1
  6488                           ;tcpv4.c: 412: {
  6489                           ;tcpv4.c: 414: ;
  6490                           ;tcpv4.c: 416: tcpOptionsSize = 0;
  6491  00702E  6A13               	clrf	TCP_ParseTCPOptions@tcpOptionsSize,c
  6492  007030  6A14               	clrf	TCP_ParseTCPOptions@tcpOptionsSize+1,c
  6493  007032  D028               	goto	l8818
  6494  007034                     l1241:
  6495                           
  6496                           ; BSR set to: 1
  6497                           ;tcpv4.c: 419: {
  6498                           ;tcpv4.c: 421: tcpOptionsSize = 0;
  6499  007034  6A13               	clrf	TCP_ParseTCPOptions@tcpOptionsSize,c
  6500  007036  6A14               	clrf	TCP_ParseTCPOptions@tcpOptionsSize+1,c
  6501                           
  6502                           ;tcpv4.c: 422: ret = 0;
  6503  007038  6A11               	clrf	TCP_ParseTCPOptions@ret,c
  6504  00703A  D024               	goto	l8818
  6505  00703C                     l8800:
  6506                           
  6507                           ; BSR set to: 1
  6508                           ;tcpv4.c: 426: ;
  6509                           ;tcpv4.c: 427: opt = ETH_Read8();
  6510  00703C  EC7F  F043         	call	_ETH_Read8	;wreg free
  6511  007040  6E12               	movwf	TCP_ParseTCPOptions@opt,c
  6512                           
  6513                           ; BSR set to: 1
  6514                           ;tcpv4.c: 428: tcpOptionsSize--;
  6515  007042  0613               	decf	TCP_ParseTCPOptions@tcpOptionsSize,f,c
  6516  007044  A0D8               	btfss	status,0,c
  6517  007046  0614               	decf	TCP_ParseTCPOptions@tcpOptionsSize+1,f,c
  6518                           
  6519                           ; BSR set to: 1
  6520                           ;tcpv4.c: 430: if (opt > 1)
  6521  007048  0E01               	movlw	1
  6522  00704A  6412               	cpfsgt	TCP_ParseTCPOptions@opt,c
  6523  00704C  D7F3               	goto	l1241
  6524                           
  6525                           ; BSR set to: 1
  6526                           ;tcpv4.c: 431: {
  6527                           ;tcpv4.c: 433: opt = opt - 2;
  6528  00704E  0EFE               	movlw	254
  6529  007050  2612               	addwf	TCP_ParseTCPOptions@opt,f,c
  6530                           
  6531                           ;tcpv4.c: 434: if (opt <= tcpOptionsSize)
  6532  007052  5012               	movf	TCP_ParseTCPOptions@opt,w,c
  6533  007054  6E0F               	movwf	??_TCP_ParseTCPOptions& (0+255),c
  6534  007056  6A10               	clrf	(??_TCP_ParseTCPOptions+1)& (0+255),c
  6535  007058  500F               	movf	??_TCP_ParseTCPOptions,w,c
  6536  00705A  5C13               	subwf	TCP_ParseTCPOptions@tcpOptionsSize,w,c
  6537  00705C  5010               	movf	??_TCP_ParseTCPOptions+1,w,c
  6538  00705E  5814               	subwfb	TCP_ParseTCPOptions@tcpOptionsSize+1,w,c
  6539  007060  E3E9               	bnc	l1241
  6540                           
  6541                           ; BSR set to: 1
  6542                           ;tcpv4.c: 435: {
  6543                           ;tcpv4.c: 437: ETH_Dump(opt);
  6544  007062  C012  F00B         	movff	TCP_ParseTCPOptions@opt,ETH_Dump@length
  6545  007066  6A0C               	clrf	ETH_Dump@length+1,c
  6546  007068  EC76  F041         	call	_ETH_Dump	;wreg free
  6547                           
  6548                           ; BSR set to: 2
  6549                           ;tcpv4.c: 438: tcpOptionsSize = tcpOptionsSize - opt;
  6550  00706C  5012               	movf	TCP_ParseTCPOptions@opt,w,c
  6551  00706E  5E13               	subwf	TCP_ParseTCPOptions@tcpOptionsSize,f,c
  6552  007070  0E00               	movlw	0
  6553  007072  5A14               	subwfb	TCP_ParseTCPOptions@tcpOptionsSize+1,f,c
  6554  007074  D7BA               	goto	l8784
  6555  007076                     l8816:
  6556                           
  6557                           ; BSR set to: 1
  6558  007076  5012               	movf	TCP_ParseTCPOptions@opt,w,c
  6559                           
  6560                           ; Switch size 1, requested type "speed"
  6561                           ; Number of cases is 3, Range of values is 0 to 2
  6562                           ; switch strategies available:
  6563                           ; Name         Instructions Cycles
  6564                           ; simple_byte           10     6 (average)
  6565                           ;	Chosen strategy is simple_byte
  6566  007078  E0AD               	bz	l8778
  6567  00707A  0A01               	xorlw	1	; case 1
  6568  00707C  E003               	bz	l8818
  6569  00707E  0A03               	xorlw	3	; case 2
  6570  007080  E0B7               	bz	l8786
  6571  007082  D7DC               	goto	l8800
  6572  007084                     l8818:
  6573  007084  0613               	decf	TCP_ParseTCPOptions@tcpOptionsSize,f,c
  6574  007086  A0D8               	btfss	status,0,c
  6575  007088  0614               	decf	TCP_ParseTCPOptions@tcpOptionsSize+1,f,c
  6576  00708A  2813               	incf	TCP_ParseTCPOptions@tcpOptionsSize,w,c
  6577  00708C  E19F               	bnz	l8776
  6578  00708E  2814               	incf	TCP_ParseTCPOptions@tcpOptionsSize+1,w,c
  6579  007090  E009               	bz	l1253
  6580  007092  D79C               	goto	l8776
  6581  007094                     l8820:
  6582                           
  6583                           ; BSR set to: 1
  6584                           ;tcpv4.c: 459: {
  6585                           ;tcpv4.c: 460: ETH_Dump(tcpOptionsSize);
  6586  007094  C013  F00B         	movff	TCP_ParseTCPOptions@tcpOptionsSize,ETH_Dump@length
  6587  007098  C014  F00C         	movff	TCP_ParseTCPOptions@tcpOptionsSize+1,ETH_Dump@length+1
  6588  00709C  EC76  F041         	call	_ETH_Dump	;wreg free
  6589  0070A0                     l8822:
  6590                           
  6591                           ;tcpv4.c: 461: ret = 1;
  6592  0070A0  0E01               	movlw	1
  6593  0070A2  6E11               	movwf	TCP_ParseTCPOptions@ret,c
  6594  0070A4                     l1253:
  6595                           
  6596                           ;tcpv4.c: 466: }
  6597                           ;tcpv4.c: 468: return ret;
  6598  0070A4  5011               	movf	TCP_ParseTCPOptions@ret,w,c
  6599  0070A6  0012               	return		;funcret
  6600  0070A8                     __end_of_TCP_ParseTCPOptions:
  6601                           	opt stack 0
  6602                           tosu	equ	0xFFF
  6603                           tosh	equ	0xFFE
  6604                           tosl	equ	0xFFD
  6605                           pclath	equ	0xFFA
  6606                           tblptru	equ	0xFF8
  6607                           tblptrh	equ	0xFF7
  6608                           tblptrl	equ	0xFF6
  6609                           tablat	equ	0xFF5
  6610                           prodh	equ	0xFF4
  6611                           prodl	equ	0xFF3
  6612                           intcon	equ	0xFF2
  6613                           intcon2	equ	0xFF1
  6614                           indf0	equ	0xFEF
  6615                           postinc0	equ	0xFEE
  6616                           fsr0h	equ	0xFEA
  6617                           fsr0l	equ	0xFE9
  6618                           wreg	equ	0xFE8
  6619                           postinc1	equ	0xFE6
  6620                           fsr1h	equ	0xFE2
  6621                           fsr1l	equ	0xFE1
  6622                           indf2	equ	0xFDF
  6623                           postinc2	equ	0xFDE
  6624                           postdec2	equ	0xFDD
  6625                           fsr2h	equ	0xFDA
  6626                           fsr2l	equ	0xFD9
  6627                           status	equ	0xFD8
  6628                           
  6629 ;; *************** function _ETH_Read8 *****************
  6630 ;; Defined at:
  6631 ;;		line 228 in file "../../TCPIP Library/ethernet_drivers/encX24j600_spi.c"
  6632 ;; Parameters:    Size  Location     Type
  6633 ;;		None
  6634 ;; Auto vars:     Size  Location     Type
  6635 ;;  ret             1    2[COMRAM] unsigned char 
  6636 ;; Return value:  Size  Location     Type
  6637 ;;                  1    wreg      unsigned char 
  6638 ;; Registers used:
  6639 ;;		wreg, status,2, status,0, cstack
  6640 ;; Tracked objects:
  6641 ;;		On entry : C/1
  6642 ;;		On exit  : F/1
  6643 ;;		Unchanged: 0/0
  6644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6646 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6648 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6649 ;;Total ram usage:        1 bytes
  6650 ;; Hardware stack levels used:    1
  6651 ;; Hardware stack levels required when called:    4
  6652 ;; This function calls:
  6653 ;;		_SPI_ExchangeByte
  6654 ;; This function is called by:
  6655 ;;		_DHCP_Handler
  6656 ;;		_TCP_ParseTCPOptions
  6657 ;; This function uses a non-reentrant model
  6658 ;;
  6659                           
  6660                           	psect	text24
  6661  0086FE                     __ptext24:
  6662                           	opt stack 0
  6663  0086FE                     _ETH_Read8:
  6664                           	opt stack 21
  6665                           
  6666                           ;encX24j600_spi.c: 230: uint8_t ret;
  6667                           ;encX24j600_spi.c: 231: if(rxPacketStatusVector.ByteCount >= sizeof(ret))
  6668                           
  6669                           ;incstack = 0
  6670  0086FE  0102               	movlb	2	; () banked
  6671  008700  5118               	movf	_rxPacketStatusVector& (0+255),w,b
  6672  008702  1119               	iorwf	(_rxPacketStatusVector+1)& (0+255),w,b
  6673  008704  E011               	bz	l608
  6674                           
  6675                           ; BSR set to: 2
  6676                           
  6677                           ;encX24j600_spi.c: 232: {
  6678                           ;encX24j600_spi.c: 233: do{LATB3 = 0;} while(0);
  6679  008706  968A               	bcf	3978,3,c	;volatile
  6680                           
  6681                           ; BSR set to: 2
  6682                           ;encX24j600_spi.c: 234: SPI_ExchangeByte(rrxdata_inst);
  6683  008708  0E2C               	movlw	44
  6684  00870A  ECEE  F045         	call	_SPI_ExchangeByte
  6685                           
  6686                           ;encX24j600_spi.c: 235: ret = SPI_ExchangeByte(0);
  6687  00870E  0E00               	movlw	0
  6688  008710  ECEE  F045         	call	_SPI_ExchangeByte
  6689  008714  6E03               	movwf	ETH_Read8@ret,c
  6690  008716  868A               	bsf	3978,3,c	;volatile
  6691                           
  6692                           ;encX24j600_spi.c: 237: rxPacketStatusVector.ByteCount -= sizeof(ret);
  6693  008718  0102               	movlb	2	; () banked
  6694  00871A  0718               	decf	_rxPacketStatusVector& (0+255),f,b
  6695  00871C  A0D8               	btfss	status,0,c
  6696  00871E  0719               	decf	(_rxPacketStatusVector+1)& (0+255),f,b
  6697                           
  6698                           ; BSR set to: 2
  6699                           ;encX24j600_spi.c: 238: ethData.error = 0;
  6700  008720  0101               	movlb	1	; () banked
  6701  008722  9183               	bcf	_ethData& (0+255),0,b	;volatile
  6702                           
  6703                           ; BSR set to: 1
  6704                           ;encX24j600_spi.c: 239: return ret;
  6705  008724  5003               	movf	ETH_Read8@ret,w,c
  6706  008726  0012               	return	
  6707  008728                     l608:
  6708                           
  6709                           ; BSR set to: 2
  6710                           ;encX24j600_spi.c: 241: else
  6711                           ;encX24j600_spi.c: 242: {
  6712                           ;encX24j600_spi.c: 243: ethData.error = 1;
  6713  008728  0101               	movlb	1	; () banked
  6714  00872A  8183               	bsf	_ethData& (0+255),0,b	;volatile
  6715                           
  6716                           ; BSR set to: 1
  6717                           
  6718                           ; BSR set to: 1
  6719                           ;encX24j600_spi.c: 244: return 0;
  6720  00872C  0C00               	retlw	0	;funcret
  6721  00872E                     __end_of_ETH_Read8:
  6722                           	opt stack 0
  6723                           tosu	equ	0xFFF
  6724                           tosh	equ	0xFFE
  6725                           tosl	equ	0xFFD
  6726                           pclath	equ	0xFFA
  6727                           tblptru	equ	0xFF8
  6728                           tblptrh	equ	0xFF7
  6729                           tblptrl	equ	0xFF6
  6730                           tablat	equ	0xFF5
  6731                           prodh	equ	0xFF4
  6732                           prodl	equ	0xFF3
  6733                           intcon	equ	0xFF2
  6734                           intcon2	equ	0xFF1
  6735                           indf0	equ	0xFEF
  6736                           postinc0	equ	0xFEE
  6737                           fsr0h	equ	0xFEA
  6738                           fsr0l	equ	0xFE9
  6739                           wreg	equ	0xFE8
  6740                           postinc1	equ	0xFE6
  6741                           fsr1h	equ	0xFE2
  6742                           fsr1l	equ	0xFE1
  6743                           indf2	equ	0xFDF
  6744                           postinc2	equ	0xFDE
  6745                           postdec2	equ	0xFDD
  6746                           fsr2h	equ	0xFDA
  6747                           fsr2l	equ	0xFD9
  6748                           status	equ	0xFD8
  6749                           
  6750 ;; *************** function _ETH_Read16 *****************
  6751 ;; Defined at:
  6752 ;;		line 252 in file "../../TCPIP Library/ethernet_drivers/encX24j600_spi.c"
  6753 ;; Parameters:    Size  Location     Type
  6754 ;;		None
  6755 ;; Auto vars:     Size  Location     Type
  6756 ;;  ret             2    4[COMRAM] unsigned int 
  6757 ;; Return value:  Size  Location     Type
  6758 ;;                  2    2[COMRAM] unsigned int 
  6759 ;; Registers used:
  6760 ;;		wreg, status,2, status,0, cstack
  6761 ;; Tracked objects:
  6762 ;;		On entry : 0/0
  6763 ;;		On exit  : F/1
  6764 ;;		Unchanged: 0/0
  6765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6766 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6767 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6769 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6770 ;;Total ram usage:        4 bytes
  6771 ;; Hardware stack levels used:    1
  6772 ;; Hardware stack levels required when called:    4
  6773 ;; This function calls:
  6774 ;;		_SPI_ExchangeByte
  6775 ;; This function is called by:
  6776 ;;		_DHCP_Handler
  6777 ;;		_TCP_ParseTCPOptions
  6778 ;; This function uses a non-reentrant model
  6779 ;;
  6780                           
  6781                           	psect	text25
  6782  0083CA                     __ptext25:
  6783                           	opt stack 0
  6784  0083CA                     _ETH_Read16:
  6785                           	opt stack 21
  6786                           
  6787                           ;encX24j600_spi.c: 254: uint16_t ret;
  6788                           ;encX24j600_spi.c: 255: if(rxPacketStatusVector.ByteCount >= sizeof(ret))
  6789                           
  6790                           ; BSR set to: 1
  6791                           ;incstack = 0
  6792  0083CA  0102               	movlb	2	; () banked
  6793  0083CC  5119               	movf	(_rxPacketStatusVector+1)& (0+255),w,b
  6794  0083CE  E103               	bnz	u11650
  6795  0083D0  0E02               	movlw	2
  6796  0083D2  5D18               	subwf	_rxPacketStatusVector& (0+255),w,b
  6797  0083D4  E319               	bnc	l617
  6798  0083D6                     u11650:
  6799                           
  6800                           ; BSR set to: 2
  6801                           
  6802                           ;encX24j600_spi.c: 256: {
  6803                           ;encX24j600_spi.c: 257: do{LATB3 = 0;} while(0);
  6804  0083D6  968A               	bcf	3978,3,c	;volatile
  6805                           
  6806                           ; BSR set to: 2
  6807                           ;encX24j600_spi.c: 258: SPI_ExchangeByte(rrxdata_inst);
  6808  0083D8  0E2C               	movlw	44
  6809  0083DA  ECEE  F045         	call	_SPI_ExchangeByte
  6810                           
  6811                           ;encX24j600_spi.c: 259: ((uint8_t *)&ret)[1] = SPI_ExchangeByte(0);
  6812  0083DE  0E00               	movlw	0
  6813  0083E0  ECEE  F045         	call	_SPI_ExchangeByte
  6814  0083E4  6E06               	movwf	ETH_Read16@ret+1,c
  6815                           
  6816                           ;encX24j600_spi.c: 260: ((uint8_t *)&ret)[0] = SPI_ExchangeByte(0);
  6817  0083E6  0E00               	movlw	0
  6818  0083E8  ECEE  F045         	call	_SPI_ExchangeByte
  6819  0083EC  6E05               	movwf	ETH_Read16@ret,c
  6820  0083EE  868A               	bsf	3978,3,c	;volatile
  6821                           
  6822                           ;encX24j600_spi.c: 262: rxPacketStatusVector.ByteCount -= sizeof(ret);
  6823  0083F0  0E02               	movlw	2
  6824  0083F2  0102               	movlb	2	; () banked
  6825  0083F4  5F18               	subwf	_rxPacketStatusVector& (0+255),f,b
  6826  0083F6  0E00               	movlw	0
  6827  0083F8  5B19               	subwfb	(_rxPacketStatusVector+1)& (0+255),f,b
  6828                           
  6829                           ; BSR set to: 2
  6830                           ;encX24j600_spi.c: 263: ethData.error = 0;
  6831  0083FA  0101               	movlb	1	; () banked
  6832  0083FC  9183               	bcf	_ethData& (0+255),0,b	;volatile
  6833                           
  6834                           ; BSR set to: 1
  6835                           ;encX24j600_spi.c: 264: return ret;
  6836  0083FE  C005  F003         	movff	ETH_Read16@ret,?_ETH_Read16
  6837  008402  C006  F004         	movff	ETH_Read16@ret+1,?_ETH_Read16+1
  6838  008406  0C00               	retlw	0
  6839  008408                     l617:
  6840                           
  6841                           ; BSR set to: 2
  6842                           ;encX24j600_spi.c: 266: else
  6843                           ;encX24j600_spi.c: 267: {
  6844                           ;encX24j600_spi.c: 268: ethData.error = 1;
  6845  008408  0101               	movlb	1	; () banked
  6846  00840A  8183               	bsf	_ethData& (0+255),0,b	;volatile
  6847                           
  6848                           ;encX24j600_spi.c: 269: return 0;
  6849  00840C  6A03               	clrf	?_ETH_Read16,c
  6850  00840E  6A04               	clrf	?_ETH_Read16+1,c
  6851                           
  6852                           ; BSR set to: 1
  6853  008410  0012               	return		;funcret
  6854  008412                     __end_of_ETH_Read16:
  6855                           	opt stack 0
  6856                           tosu	equ	0xFFF
  6857                           tosh	equ	0xFFE
  6858                           tosl	equ	0xFFD
  6859                           pclath	equ	0xFFA
  6860                           tblptru	equ	0xFF8
  6861                           tblptrh	equ	0xFF7
  6862                           tblptrl	equ	0xFF6
  6863                           tablat	equ	0xFF5
  6864                           prodh	equ	0xFF4
  6865                           prodl	equ	0xFF3
  6866                           intcon	equ	0xFF2
  6867                           intcon2	equ	0xFF1
  6868                           indf0	equ	0xFEF
  6869                           postinc0	equ	0xFEE
  6870                           fsr0h	equ	0xFEA
  6871                           fsr0l	equ	0xFE9
  6872                           wreg	equ	0xFE8
  6873                           postinc1	equ	0xFE6
  6874                           fsr1h	equ	0xFE2
  6875                           fsr1l	equ	0xFE1
  6876                           indf2	equ	0xFDF
  6877                           postinc2	equ	0xFDE
  6878                           postdec2	equ	0xFDD
  6879                           fsr2h	equ	0xFDA
  6880                           fsr2l	equ	0xFD9
  6881                           status	equ	0xFD8
  6882                           
  6883 ;; *************** function _ETH_Dump *****************
  6884 ;; Defined at:
  6885 ;;		line 324 in file "../../TCPIP Library/ethernet_drivers/encX24J600_driver.c"
  6886 ;; Parameters:    Size  Location     Type
  6887 ;;  length          2   10[COMRAM] unsigned int 
  6888 ;; Auto vars:     Size  Location     Type
  6889 ;;  newRXTail       2   12[COMRAM] unsigned int 
  6890 ;; Return value:  Size  Location     Type
  6891 ;;		None               void
  6892 ;; Registers used:
  6893 ;;		wreg, status,2, status,0, cstack
  6894 ;; Tracked objects:
  6895 ;;		On entry : 0/0
  6896 ;;		On exit  : F/2
  6897 ;;		Unchanged: 0/0
  6898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6899 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6900 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6902 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6903 ;;Total ram usage:        4 bytes
  6904 ;; Hardware stack levels used:    1
  6905 ;; Hardware stack levels required when called:    6
  6906 ;; This function calls:
  6907 ;;		_ENCx24_Read
  6908 ;;		_ENCx24_Write
  6909 ;; This function is called by:
  6910 ;;		_DHCP_Handler
  6911 ;;		_IPV4_Packet
  6912 ;;		_TCP_ParseTCPOptions
  6913 ;; This function uses a non-reentrant model
  6914 ;;
  6915                           
  6916                           	psect	text26
  6917  0082EC                     __ptext26:
  6918                           	opt stack 0
  6919  0082EC                     _ETH_Dump:
  6920                           	opt stack 19
  6921                           
  6922                           ;encX24J600_driver.c: 326: uint16_t newRXTail;
  6923                           ;encX24J600_driver.c: 327: length = (rxPacketStatusVector.ByteCount <= length) ? rxPacke
      +                          tStatusVector.ByteCount : length;
  6924                           
  6925                           ; BSR set to: 1
  6926                           ;incstack = 0
  6927  0082EC  0102               	movlb	2	; () banked
  6928  0082EE  5118               	movf	_rxPacketStatusVector& (0+255),w,b
  6929  0082F0  5C0B               	subwf	ETH_Dump@length,w,c
  6930  0082F2  5119               	movf	(_rxPacketStatusVector+1)& (0+255),w,b
  6931  0082F4  580C               	subwfb	ETH_Dump@length+1,w,c
  6932  0082F6  E304               	bnc	l8464
  6933                           
  6934                           ; BSR set to: 2
  6935  0082F8  C218  F00B         	movff	_rxPacketStatusVector,ETH_Dump@length
  6936  0082FC  C219  F00C         	movff	_rxPacketStatusVector+1,ETH_Dump@length+1
  6937  008300                     l8464:
  6938                           
  6939                           ; BSR set to: 2
  6940                           ;encX24J600_driver.c: 328: if(length)
  6941  008300  500B               	movf	ETH_Dump@length,w,c
  6942  008302  100C               	iorwf	ETH_Dump@length+1,w,c
  6943  008304  E012               	bz	l473
  6944                           
  6945                           ; BSR set to: 2
  6946                           ;encX24J600_driver.c: 329: {
  6947                           ;encX24J600_driver.c: 330: newRXTail = ENCx24_Read(XJ600_ERXRDPTL);
  6948  008306  0E8A               	movlw	138
  6949  008308  ECC0  F041         	call	_ENCx24_Read
  6950  00830C  C005  F00D         	movff	?_ENCx24_Read,ETH_Dump@newRXTail
  6951  008310  C006  F00E         	movff	?_ENCx24_Read+1,ETH_Dump@newRXTail+1
  6952                           
  6953                           ;encX24J600_driver.c: 331: newRXTail += length;
  6954  008314  500B               	movf	ETH_Dump@length,w,c
  6955  008316  260D               	addwf	ETH_Dump@newRXTail,f,c
  6956  008318  500C               	movf	ETH_Dump@length+1,w,c
  6957  00831A  220E               	addwfc	ETH_Dump@newRXTail+1,f,c
  6958                           
  6959                           ;encX24J600_driver.c: 333: ENCx24_Write(XJ600_ERXRDPTL, newRXTail);
  6960  00831C  C00D  F005         	movff	ETH_Dump@newRXTail,ENCx24_Write@data
  6961  008320  C00E  F006         	movff	ETH_Dump@newRXTail+1,ENCx24_Write@data+1
  6962  008324  0E8A               	movlw	138
  6963  008326  EC72  F042         	call	_ENCx24_Write
  6964  00832A                     l473:
  6965                           
  6966                           ;encX24J600_driver.c: 334: }
  6967                           ;encX24J600_driver.c: 335: rxPacketStatusVector.ByteCount -= length;
  6968  00832A  500B               	movf	ETH_Dump@length,w,c
  6969  00832C  0102               	movlb	2	; () banked
  6970  00832E  5F18               	subwf	_rxPacketStatusVector& (0+255),f,b
  6971  008330  500C               	movf	ETH_Dump@length+1,w,c
  6972  008332  5B19               	subwfb	(_rxPacketStatusVector+1)& (0+255),f,b
  6973                           
  6974                           ; BSR set to: 2
  6975  008334  0012               	return		;funcret
  6976  008336                     __end_of_ETH_Dump:
  6977                           	opt stack 0
  6978                           tosu	equ	0xFFF
  6979                           tosh	equ	0xFFE
  6980                           tosl	equ	0xFFD
  6981                           pclath	equ	0xFFA
  6982                           tblptru	equ	0xFF8
  6983                           tblptrh	equ	0xFF7
  6984                           tblptrl	equ	0xFF6
  6985                           tablat	equ	0xFF5
  6986                           prodh	equ	0xFF4
  6987                           prodl	equ	0xFF3
  6988                           intcon	equ	0xFF2
  6989                           intcon2	equ	0xFF1
  6990                           indf0	equ	0xFEF
  6991                           postinc0	equ	0xFEE
  6992                           fsr0h	equ	0xFEA
  6993                           fsr0l	equ	0xFE9
  6994                           wreg	equ	0xFE8
  6995                           postinc1	equ	0xFE6
  6996                           fsr1h	equ	0xFE2
  6997                           fsr1l	equ	0xFE1
  6998                           indf2	equ	0xFDF
  6999                           postinc2	equ	0xFDE
  7000                           postdec2	equ	0xFDD
  7001                           fsr2h	equ	0xFDA
  7002                           fsr2l	equ	0xFD9
  7003                           status	equ	0xFD8
  7004                           
  7005 ;; *************** function _IPV4_PseudoHeaderChecksum *****************
  7006 ;; Defined at:
  7007 ;;		line 83 in file "../../TCPIP Library/source/ipv4.c"
  7008 ;; Parameters:    Size  Location     Type
  7009 ;;  payloadLen      2    1[COMRAM] unsigned int 
  7010 ;; Auto vars:     Size  Location     Type
  7011 ;;  tmp            12   13[COMRAM] struct .
  7012 ;;  cksm            4    9[COMRAM] unsigned long 
  7013 ;;  len             1    8[COMRAM] unsigned char 
  7014 ;;  v               1    7[COMRAM] PTR unsigned int 
  7015 ;;		 -> IPV4_PseudoHeaderChecksum@tmp(12), 
  7016 ;; Return value:  Size  Location     Type
  7017 ;;                  2    1[COMRAM] unsigned int 
  7018 ;; Registers used:
  7019 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7020 ;; Tracked objects:
  7021 ;;		On entry : F/0
  7022 ;;		On exit  : F/0
  7023 ;;		Unchanged: F/0
  7024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7025 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7026 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7027 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7028 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7029 ;;Total ram usage:       24 bytes
  7030 ;; Hardware stack levels used:    1
  7031 ;; Hardware stack levels required when called:    3
  7032 ;; This function calls:
  7033 ;;		Nothing
  7034 ;; This function is called by:
  7035 ;;		_IPV4_Packet
  7036 ;; This function uses a non-reentrant model
  7037 ;;
  7038                           
  7039                           	psect	text27
  7040  0079B0                     __ptext27:
  7041                           	opt stack 0
  7042  0079B0                     _IPV4_PseudoHeaderChecksum:
  7043                           	opt stack 24
  7044                           
  7045                           ; BSR set to: 0
  7046                           ;ipv4.c: 85: ipv4_pseudo_header_t tmp;
  7047                           ;ipv4.c: 86: uint8_t len;
  7048                           ;ipv4.c: 87: uint32_t cksm = 0;
  7049                           
  7050                           ; BSR set to: 2
  7051                           ;incstack = 0
  7052  0079B0  6A0A               	clrf	IPV4_PseudoHeaderChecksum@cksm,c
  7053  0079B2  6A0B               	clrf	IPV4_PseudoHeaderChecksum@cksm+1,c
  7054  0079B4  6A0C               	clrf	IPV4_PseudoHeaderChecksum@cksm+2,c
  7055  0079B6  6A0D               	clrf	IPV4_PseudoHeaderChecksum@cksm+3,c
  7056                           
  7057                           ;ipv4.c: 88: uint16_t *v;
  7058                           ;ipv4.c: 90: tmp.srcIpAddress = ipv4Header.srcIpAddress;
  7059  0079B8  C1B4  F00E         	movff	_ipv4Header+12,IPV4_PseudoHeaderChecksum@tmp
  7060  0079BC  C1B5  F00F         	movff	_ipv4Header+13,IPV4_PseudoHeaderChecksum@tmp+1
  7061  0079C0  C1B6  F010         	movff	_ipv4Header+14,IPV4_PseudoHeaderChecksum@tmp+2
  7062  0079C4  C1B7  F011         	movff	_ipv4Header+15,IPV4_PseudoHeaderChecksum@tmp+3
  7063                           
  7064                           ;ipv4.c: 91: tmp.dstIpAddress = ipv4Header.dstIpAddress;
  7065  0079C8  C1B8  F012         	movff	_ipv4Header+16,IPV4_PseudoHeaderChecksum@tmp+4
  7066  0079CC  C1B9  F013         	movff	_ipv4Header+17,IPV4_PseudoHeaderChecksum@tmp+5
  7067  0079D0  C1BA  F014         	movff	_ipv4Header+18,IPV4_PseudoHeaderChecksum@tmp+6
  7068  0079D4  C1BB  F015         	movff	_ipv4Header+19,IPV4_PseudoHeaderChecksum@tmp+7
  7069                           
  7070                           ;ipv4.c: 92: tmp.protocol = ipv4Header.protocol;
  7071  0079D8  C1B1  F016         	movff	_ipv4Header+9,IPV4_PseudoHeaderChecksum@tmp+8
  7072                           
  7073                           ;ipv4.c: 93: tmp.z = 0;
  7074  0079DC  6A17               	clrf	IPV4_PseudoHeaderChecksum@tmp+9,c
  7075                           
  7076                           ;ipv4.c: 94: tmp.length = payloadLen;
  7077  0079DE  C002  F018         	movff	IPV4_PseudoHeaderChecksum@payloadLen,IPV4_PseudoHeaderChecksum@tmp+10
  7078  0079E2  C003  F019         	movff	IPV4_PseudoHeaderChecksum@payloadLen+1,IPV4_PseudoHeaderChecksum@tmp+11
  7079                           
  7080                           ; BSR set to: 0
  7081                           ;ipv4.c: 96: len = sizeof(tmp);
  7082  0079E6  0E0C               	movlw	12
  7083  0079E8  6E09               	movwf	IPV4_PseudoHeaderChecksum@len,c
  7084                           
  7085                           ; BSR set to: 0
  7086                           ;ipv4.c: 97: len = len >> 1;
  7087  0079EA  90D8               	bcf	status,0,c
  7088  0079EC  3209               	rrcf	IPV4_PseudoHeaderChecksum@len,f,c
  7089                           
  7090                           ; BSR set to: 0
  7091                           ;ipv4.c: 99: v = (uint16_t *) &tmp;
  7092  0079EE  0E0E               	movlw	low IPV4_PseudoHeaderChecksum@tmp
  7093  0079F0  6E08               	movwf	IPV4_PseudoHeaderChecksum@v,c
  7094                           
  7095                           ;ipv4.c: 101: while(len)
  7096  0079F2  D011               	goto	l9328
  7097  0079F4                     l9322:
  7098                           
  7099                           ; BSR set to: 0
  7100                           ;ipv4.c: 102: {
  7101                           ;ipv4.c: 103: cksm += *v;
  7102  0079F4  5008               	movf	IPV4_PseudoHeaderChecksum@v,w,c
  7103  0079F6  6ED9               	movwf	fsr2l,c
  7104  0079F8  6ADA               	clrf	fsr2h,c
  7105  0079FA  CFDE F004          	movff	postinc2,??_IPV4_PseudoHeaderChecksum
  7106  0079FE  CFDD F005          	movff	postdec2,??_IPV4_PseudoHeaderChecksum+1
  7107  007A02  5004               	movf	??_IPV4_PseudoHeaderChecksum,w,c
  7108  007A04  260A               	addwf	IPV4_PseudoHeaderChecksum@cksm,f,c
  7109  007A06  5005               	movf	??_IPV4_PseudoHeaderChecksum+1,w,c
  7110  007A08  220B               	addwfc	IPV4_PseudoHeaderChecksum@cksm+1,f,c
  7111  007A0A  0E00               	movlw	0
  7112  007A0C  220C               	addwfc	IPV4_PseudoHeaderChecksum@cksm+2,f,c
  7113  007A0E  220D               	addwfc	IPV4_PseudoHeaderChecksum@cksm+3,f,c
  7114                           
  7115                           ; BSR set to: 0
  7116                           ;ipv4.c: 104: len--;
  7117  007A10  0609               	decf	IPV4_PseudoHeaderChecksum@len,f,c
  7118                           
  7119                           ; BSR set to: 0
  7120                           ;ipv4.c: 105: v++;
  7121  007A12  0E02               	movlw	2
  7122  007A14  2608               	addwf	IPV4_PseudoHeaderChecksum@v,f,c
  7123  007A16                     l9328:
  7124                           
  7125                           ; BSR set to: 0
  7126  007A16  5009               	movf	IPV4_PseudoHeaderChecksum@len,w,c
  7127  007A18  E1ED               	bnz	l9322
  7128                           
  7129                           ; BSR set to: 0
  7130                           ;ipv4.c: 106: }
  7131                           ;ipv4.c: 109: cksm = (cksm & 0x0FFFF) + (cksm>>16);
  7132  007A1A  500A               	movf	IPV4_PseudoHeaderChecksum@cksm,w,c
  7133  007A1C  6E04               	movwf	??_IPV4_PseudoHeaderChecksum& (0+255),c
  7134  007A1E  500B               	movf	IPV4_PseudoHeaderChecksum@cksm+1,w,c
  7135  007A20  6E05               	movwf	(??_IPV4_PseudoHeaderChecksum+1)& (0+255),c
  7136  007A22  6A06               	clrf	(??_IPV4_PseudoHeaderChecksum+2)& (0+255),c
  7137  007A24  6A07               	clrf	(??_IPV4_PseudoHeaderChecksum+3)& (0+255),c
  7138  007A26  500C               	movf	IPV4_PseudoHeaderChecksum@cksm+2,w,c
  7139  007A28  2404               	addwf	??_IPV4_PseudoHeaderChecksum,w,c
  7140  007A2A  6E0A               	movwf	IPV4_PseudoHeaderChecksum@cksm,c
  7141  007A2C  500D               	movf	IPV4_PseudoHeaderChecksum@cksm+3,w,c
  7142  007A2E  2005               	addwfc	??_IPV4_PseudoHeaderChecksum+1,w,c
  7143  007A30  6E0B               	movwf	IPV4_PseudoHeaderChecksum@cksm+1,c
  7144  007A32  0E00               	movlw	0
  7145  007A34  2006               	addwfc	??_IPV4_PseudoHeaderChecksum+2,w,c
  7146  007A36  6E0C               	movwf	IPV4_PseudoHeaderChecksum@cksm+2,c
  7147  007A38  0E00               	movlw	0
  7148  007A3A  2007               	addwfc	??_IPV4_PseudoHeaderChecksum+3,w,c
  7149  007A3C  6E0D               	movwf	IPV4_PseudoHeaderChecksum@cksm+3,c
  7150                           
  7151                           ; BSR set to: 0
  7152                           ;ipv4.c: 112: return cksm;
  7153  007A3E  C00A  F002         	movff	IPV4_PseudoHeaderChecksum@cksm,?_IPV4_PseudoHeaderChecksum
  7154  007A42  C00B  F003         	movff	IPV4_PseudoHeaderChecksum@cksm+1,?_IPV4_PseudoHeaderChecksum+1
  7155                           
  7156                           ; BSR set to: 0
  7157  007A46  0012               	return		;funcret
  7158  007A48                     __end_of_IPV4_PseudoHeaderChecksum:
  7159                           	opt stack 0
  7160                           tosu	equ	0xFFF
  7161                           tosh	equ	0xFFE
  7162                           tosl	equ	0xFFD
  7163                           pclath	equ	0xFFA
  7164                           tblptru	equ	0xFF8
  7165                           tblptrh	equ	0xFF7
  7166                           tblptrl	equ	0xFF6
  7167                           tablat	equ	0xFF5
  7168                           prodh	equ	0xFF4
  7169                           prodl	equ	0xFF3
  7170                           intcon	equ	0xFF2
  7171                           intcon2	equ	0xFF1
  7172                           indf0	equ	0xFEF
  7173                           postinc0	equ	0xFEE
  7174                           fsr0h	equ	0xFEA
  7175                           fsr0l	equ	0xFE9
  7176                           wreg	equ	0xFE8
  7177                           postinc1	equ	0xFE6
  7178                           fsr1h	equ	0xFE2
  7179                           fsr1l	equ	0xFE1
  7180                           indf2	equ	0xFDF
  7181                           postinc2	equ	0xFDE
  7182                           postdec2	equ	0xFDD
  7183                           fsr2h	equ	0xFDA
  7184                           fsr2l	equ	0xFD9
  7185                           status	equ	0xFD8
  7186                           
  7187 ;; *************** function _ICMP_Receive *****************
  7188 ;; Defined at:
  7189 ;;		line 56 in file "../../TCPIP Library/source/icmp.c"
  7190 ;; Parameters:    Size  Location     Type
  7191 ;;  ipv4Hdr         2   89[COMRAM] PTR struct .
  7192 ;;		 -> ipv4Header(20), 
  7193 ;; Auto vars:     Size  Location     Type
  7194 ;;  icmpHdr         8   26[BANK0 ] struct .
  7195 ;;  ret             1    0        enum E366
  7196 ;; Return value:  Size  Location     Type
  7197 ;;                  1    wreg      enum E366
  7198 ;; Registers used:
  7199 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7200 ;; Tracked objects:
  7201 ;;		On entry : F/0
  7202 ;;		On exit  : F/0
  7203 ;;		Unchanged: 0/0
  7204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7205 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7206 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7207 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7208 ;;      Totals:         2      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7209 ;;Total ram usage:       15 bytes
  7210 ;; Hardware stack levels used:    1
  7211 ;; Hardware stack levels required when called:   10
  7212 ;; This function calls:
  7213 ;;		_ETH_ReadBlock
  7214 ;;		_ETH_SaveRDPT
  7215 ;;		_ICMP_EchoReply
  7216 ;; This function is called by:
  7217 ;;		_IPV4_Packet
  7218 ;; This function uses a non-reentrant model
  7219 ;;
  7220                           
  7221                           	psect	text28
  7222  008412                     __ptext28:
  7223                           	opt stack 0
  7224  008412                     _ICMP_Receive:
  7225                           	opt stack 17
  7226                           
  7227                           ; BSR set to: 0
  7228                           ;icmp.c: 60: ETH_ReadBlock((char *)&icmpHdr, sizeof(icmpHeader_t));
  7229                           
  7230                           ; BSR set to: 0
  7231                           
  7232                           ; BSR set to: 0
  7233                           ;incstack = 0
  7234  008412  0E7A               	movlw	low ICMP_Receive@icmpHdr
  7235  008414  6E03               	movwf	ETH_ReadBlock@data,c
  7236  008416  6A04               	clrf	ETH_ReadBlock@data+1,c
  7237  008418  6A06               	clrf	ETH_ReadBlock@length+1,c
  7238  00841A  0E08               	movlw	8
  7239  00841C  6E05               	movwf	ETH_ReadBlock@length,c
  7240  00841E  EC24  F03D         	call	_ETH_ReadBlock	;wreg free
  7241                           
  7242                           ; BSR set to: 1
  7243                           ;icmp.c: 61: ETH_SaveRDPT();
  7244  008422  ECC9  F045         	call	_ETH_SaveRDPT	;wreg free
  7245                           
  7246                           ;icmp.c: 63: switch(((((uint16_t)(icmpTypeCodes_t)icmpHdr.typeCode & (uint16_t)0xFF00) >
      +                          > 8) | (((uint16_t)(icmpTypeCodes_t)icmpHdr.typeCode & (uint16_t)0x00FF) << 8)))
  7247  008426  D007               	goto	l9308
  7248  008428                     l9304:
  7249                           
  7250                           ; BSR set to: 0
  7251  008428  C05A  F058         	movff	ICMP_Receive@ipv4Hdr,ICMP_EchoReply@ipv4Hdr
  7252  00842C  C05B  F059         	movff	ICMP_Receive@ipv4Hdr+1,ICMP_EchoReply@ipv4Hdr+1
  7253  008430  0E7A               	movlw	ICMP_Receive@icmpHdr& (0+255)
  7254  008432  EFAF  F035         	goto	_ICMP_EchoReply
  7255  008436                     l9308:
  7256  008436  0100               	movlb	0	; () banked
  7257  008438  517A               	movf	ICMP_Receive@icmpHdr& (0+255),w,b
  7258  00843A  6F76               	movwf	(??_ICMP_Receive+1)& (0+255),b
  7259  00843C  6B75               	clrf	??_ICMP_Receive& (0+255),b
  7260  00843E  517B               	movf	(ICMP_Receive@icmpHdr+1)& (0+255),w,b
  7261  008440  6F77               	movwf	(??_ICMP_Receive+2)& (0+255),b
  7262  008442  6B78               	clrf	(??_ICMP_Receive+3)& (0+255),b
  7263  008444  5175               	movf	??_ICMP_Receive& (0+255),w,b
  7264  008446  1377               	iorwf	(??_ICMP_Receive+2)& (0+255),f,b
  7265  008448  5176               	movf	(??_ICMP_Receive+1)& (0+255),w,b
  7266  00844A  1378               	iorwf	(??_ICMP_Receive+3)& (0+255),f,b
  7267                           
  7268                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7269                           ; Switch size 1, requested type "speed"
  7270                           ; Number of cases is 1, Range of values is 8 to 8
  7271                           ; switch strategies available:
  7272                           ; Name         Instructions Cycles
  7273                           ; simple_byte            4     3 (average)
  7274                           ;	Chosen strategy is simple_byte
  7275  00844C  5178               	movf	(??_ICMP_Receive+3)& (0+255),w,b
  7276  00844E  0A08               	xorlw	8	; case 8
  7277  008450  A4D8               	btfss	status,2,c
  7278  008452  0012               	return	
  7279                           
  7280                           ; BSR set to: 0
  7281                           ; Switch size 1, requested type "speed"
  7282                           ; Number of cases is 1, Range of values is 0 to 0
  7283                           ; switch strategies available:
  7284                           ; Name         Instructions Cycles
  7285                           ; simple_byte            4     3 (average)
  7286                           ;	Chosen strategy is simple_byte
  7287  008454  5177               	movf	(??_ICMP_Receive+2)& (0+255),w,b
  7288  008456  E0E8               	bz	l9304
  7289                           
  7290                           ; BSR set to: 0
  7291  008458  0012               	return		;funcret
  7292  00845A                     __end_of_ICMP_Receive:
  7293                           	opt stack 0
  7294                           tosu	equ	0xFFF
  7295                           tosh	equ	0xFFE
  7296                           tosl	equ	0xFFD
  7297                           pclath	equ	0xFFA
  7298                           tblptru	equ	0xFF8
  7299                           tblptrh	equ	0xFF7
  7300                           tblptrl	equ	0xFF6
  7301                           tablat	equ	0xFF5
  7302                           prodh	equ	0xFF4
  7303                           prodl	equ	0xFF3
  7304                           intcon	equ	0xFF2
  7305                           intcon2	equ	0xFF1
  7306                           indf0	equ	0xFEF
  7307                           postinc0	equ	0xFEE
  7308                           fsr0h	equ	0xFEA
  7309                           fsr0l	equ	0xFE9
  7310                           wreg	equ	0xFE8
  7311                           postinc1	equ	0xFE6
  7312                           fsr1h	equ	0xFE2
  7313                           fsr1l	equ	0xFE1
  7314                           indf2	equ	0xFDF
  7315                           postinc2	equ	0xFDE
  7316                           postdec2	equ	0xFDD
  7317                           fsr2h	equ	0xFDA
  7318                           fsr2l	equ	0xFD9
  7319                           status	equ	0xFD8
  7320                           
  7321 ;; *************** function _ICMP_EchoReply *****************
  7322 ;; Defined at:
  7323 ;;		line 86 in file "../../TCPIP Library/source/icmp.c"
  7324 ;; Parameters:    Size  Location     Type
  7325 ;;  icmpHdr         1    wreg     PTR struct .
  7326 ;;		 -> ICMP_Receive@icmpHdr(8), 
  7327 ;;  ipv4Hdr         2   87[COMRAM] PTR struct .
  7328 ;;		 -> ipv4Header(20), 
  7329 ;; Auto vars:     Size  Location     Type
  7330 ;;  icmpHdr         1   20[BANK0 ] PTR struct .
  7331 ;;		 -> ICMP_Receive@icmpHdr(8), 
  7332 ;;  ipv4PayloadL    2   17[BANK0 ] unsigned int 
  7333 ;;  icmp_cksm_st    2    0        unsigned int 
  7334 ;;  cksm            2   15[BANK0 ] unsigned int 
  7335 ;;  ret             1   19[BANK0 ] enum E366
  7336 ;; Return value:  Size  Location     Type
  7337 ;;                  1    wreg      enum E366
  7338 ;; Registers used:
  7339 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7340 ;; Tracked objects:
  7341 ;;		On entry : F/0
  7342 ;;		On exit  : F/0
  7343 ;;		Unchanged: 0/0
  7344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7345 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7346 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7347 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7348 ;;      Totals:         2      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7349 ;;Total ram usage:       16 bytes
  7350 ;; Hardware stack levels used:    1
  7351 ;; Hardware stack levels required when called:    9
  7352 ;; This function calls:
  7353 ;;		_ETH_Copy
  7354 ;;		_ETH_Insert
  7355 ;;		_ETH_SaveRDPT
  7356 ;;		_ETH_TxComputeChecksum
  7357 ;;		_ETH_Write16
  7358 ;;		_IPV4_Send
  7359 ;;		_IPv4_Start
  7360 ;; This function is called by:
  7361 ;;		_ICMP_Receive
  7362 ;; This function uses a non-reentrant model
  7363 ;;
  7364                           
  7365                           	psect	text29
  7366  006B5E                     __ptext29:
  7367                           	opt stack 0
  7368  006B5E                     _ICMP_EchoReply:
  7369                           	opt stack 17
  7370                           
  7371                           ; BSR set to: 0
  7372                           ;incstack = 0
  7373                           ;ICMP_EchoReply@icmpHdr stored from wreg
  7374  006B5E  6F74               	movwf	ICMP_EchoReply@icmpHdr& (0+255),b
  7375                           
  7376                           ;icmp.c: 89: error_msg ret = ERROR;
  7377  006B60  0100               	movlb	0	; () banked
  7378  006B62  6B73               	clrf	ICMP_EchoReply@ret& (0+255),b
  7379                           
  7380                           ; BSR set to: 0
  7381                           ;icmp.c: 91: ret = IPv4_Start(ipv4Hdr->srcIpAddress, ipv4Hdr->protocol);
  7382  006B64  EE20 F00C          	lfsr	2,12
  7383  006B68  5058               	movf	ICMP_EchoReply@ipv4Hdr,w,c
  7384  006B6A  26D9               	addwf	fsr2l,f,c
  7385  006B6C  5059               	movf	ICMP_EchoReply@ipv4Hdr+1,w,c
  7386  006B6E  22DA               	addwfc	fsr2h,f,c
  7387  006B70  CFDE F04B          	movff	postinc2,IPv4_Start@destAddress
  7388  006B74  CFDE F04C          	movff	postinc2,IPv4_Start@destAddress+1
  7389  006B78  CFDE F04D          	movff	postinc2,IPv4_Start@destAddress+2
  7390  006B7C  CFDE F04E          	movff	postinc2,IPv4_Start@destAddress+3
  7391  006B80  EE20 F009          	lfsr	2,9
  7392  006B84  5058               	movf	ICMP_EchoReply@ipv4Hdr,w,c
  7393  006B86  26D9               	addwf	fsr2l,f,c
  7394  006B88  5059               	movf	ICMP_EchoReply@ipv4Hdr+1,w,c
  7395  006B8A  22DA               	addwfc	fsr2h,f,c
  7396  006B8C  50DF               	movf	indf2,w,c
  7397  006B8E  6E4F               	movwf	IPv4_Start@protocol,c
  7398  006B90  EC79  F036         	call	_IPv4_Start	;wreg free
  7399  006B94  6F73               	movwf	ICMP_EchoReply@ret& (0+255),b
  7400                           
  7401                           ; BSR set to: 0
  7402                           ;icmp.c: 92: if(ret == SUCCESS)
  7403  006B96  0573               	decf	ICMP_EchoReply@ret& (0+255),w,b
  7404  006B98  E001 D0A9          	bnz	l8762
  7405                           
  7406                           ; BSR set to: 0
  7407                           ;icmp.c: 93: {
  7408                           ;icmp.c: 94: uint16_t icmp_cksm_start;
  7409                           ;icmp.c: 95: uint16_t ipv4PayloadLength = ipv4Hdr->length - sizeof(ipv4Header_t);
  7410  006B9C  EE20 F002          	lfsr	2,2
  7411  006BA0  5058               	movf	ICMP_EchoReply@ipv4Hdr,w,c
  7412  006BA2  26D9               	addwf	fsr2l,f,c
  7413  006BA4  5059               	movf	ICMP_EchoReply@ipv4Hdr+1,w,c
  7414  006BA6  22DA               	addwfc	fsr2h,f,c
  7415  006BA8  CFDE F067          	movff	postinc2,??_ICMP_EchoReply
  7416  006BAC  CFDD F068          	movff	postdec2,??_ICMP_EchoReply+1
  7417  006BB0  0EEC               	movlw	236
  7418  006BB2  2567               	addwf	??_ICMP_EchoReply& (0+255),w,b
  7419  006BB4  6F71               	movwf	ICMP_EchoReply@ipv4PayloadLength& (0+255),b
  7420  006BB6  0EFF               	movlw	255
  7421  006BB8  2168               	addwfc	(??_ICMP_EchoReply+1)& (0+255),w,b
  7422  006BBA  6F72               	movwf	(ICMP_EchoReply@ipv4PayloadLength+1)& (0+255),b
  7423                           
  7424                           ;icmp.c: 97: ipv4PayloadLength = ipv4Hdr->length - (uint16_t)(ipv4Hdr->ihl << 2);
  7425  006BBC  C058  FFD9         	movff	ICMP_EchoReply@ipv4Hdr,fsr2l
  7426  006BC0  C059  FFDA         	movff	ICMP_EchoReply@ipv4Hdr+1,fsr2h
  7427  006BC4  50DF               	movf	indf2,w,c
  7428  006BC6  0B0F               	andlw	15
  7429  006BC8  6F67               	movwf	??_ICMP_EchoReply& (0+255),b
  7430  006BCA  6B68               	clrf	(??_ICMP_EchoReply+1)& (0+255),b
  7431  006BCC  90D8               	bcf	status,0,c
  7432  006BCE  3767               	rlcf	??_ICMP_EchoReply& (0+255),f,b
  7433  006BD0  3768               	rlcf	(??_ICMP_EchoReply+1)& (0+255),f,b
  7434  006BD2  90D8               	bcf	status,0,c
  7435  006BD4  3767               	rlcf	??_ICMP_EchoReply& (0+255),f,b
  7436  006BD6  3768               	rlcf	(??_ICMP_EchoReply+1)& (0+255),f,b
  7437  006BD8  EE20 F002          	lfsr	2,2
  7438  006BDC  5058               	movf	ICMP_EchoReply@ipv4Hdr,w,c
  7439  006BDE  26D9               	addwf	fsr2l,f,c
  7440  006BE0  5059               	movf	ICMP_EchoReply@ipv4Hdr+1,w,c
  7441  006BE2  22DA               	addwfc	fsr2h,f,c
  7442  006BE4  CFDE F069          	movff	postinc2,??_ICMP_EchoReply+2
  7443  006BE8  CFDD F06A          	movff	postdec2,??_ICMP_EchoReply+3
  7444  006BEC  5167               	movf	??_ICMP_EchoReply& (0+255),w,b
  7445  006BEE  5D69               	subwf	(??_ICMP_EchoReply+2)& (0+255),w,b
  7446  006BF0  6F71               	movwf	ICMP_EchoReply@ipv4PayloadLength& (0+255),b
  7447  006BF2  5168               	movf	(??_ICMP_EchoReply+1)& (0+255),w,b
  7448  006BF4  596A               	subwfb	(??_ICMP_EchoReply+3)& (0+255),w,b
  7449  006BF6  6F72               	movwf	(ICMP_EchoReply@ipv4PayloadLength+1)& (0+255),b
  7450                           
  7451                           ; BSR set to: 0
  7452                           ;icmp.c: 99: ETH_Write16(ECHO_REPLY);
  7453  006BF8  6A04               	clrf	ETH_Write16@data+1,c
  7454  006BFA  6A03               	clrf	ETH_Write16@data,c
  7455  006BFC  ECE1  F044         	call	_ETH_Write16	;wreg free
  7456                           
  7457                           ;icmp.c: 100: ETH_Write16(0);
  7458  006C00  6A04               	clrf	ETH_Write16@data+1,c
  7459  006C02  6A03               	clrf	ETH_Write16@data,c
  7460  006C04  ECE1  F044         	call	_ETH_Write16	;wreg free
  7461                           
  7462                           ;icmp.c: 101: ETH_Write16(((((uint16_t)icmpHdr->identifier & (uint16_t)0xFF00) >> 8) | (
      +                          ((uint16_t)icmpHdr->identifier & (uint16_t)0x00FF) << 8)));
  7463  006C08  0100               	movlb	0	; () banked
  7464  006C0A  5174               	movf	ICMP_EchoReply@icmpHdr& (0+255),w,b
  7465  006C0C  6ED9               	movwf	fsr2l,c
  7466  006C0E  6ADA               	clrf	fsr2h,c
  7467  006C10  0E04               	movlw	4
  7468  006C12  26D9               	addwf	fsr2l,f,c
  7469  006C14  CFDE F067          	movff	postinc2,??_ICMP_EchoReply
  7470  006C18  CFDD F068          	movff	postdec2,??_ICMP_EchoReply+1
  7471  006C1C  5167               	movf	??_ICMP_EchoReply& (0+255),w,b
  7472  006C1E  6F6A               	movwf	(??_ICMP_EchoReply+3)& (0+255),b
  7473  006C20  6B69               	clrf	(??_ICMP_EchoReply+2)& (0+255),b
  7474  006C22  5174               	movf	ICMP_EchoReply@icmpHdr& (0+255),w,b
  7475  006C24  6ED9               	movwf	fsr2l,c
  7476  006C26  6ADA               	clrf	fsr2h,c
  7477  006C28  0E04               	movlw	4
  7478  006C2A  26D9               	addwf	fsr2l,f,c
  7479  006C2C  CFDE F06B          	movff	postinc2,??_ICMP_EchoReply+4
  7480  006C30  CFDD F06C          	movff	postdec2,??_ICMP_EchoReply+5
  7481  006C34  C06C  F06B         	movff	??_ICMP_EchoReply+5,??_ICMP_EchoReply+4
  7482  006C38  6B6C               	clrf	(??_ICMP_EchoReply+5)& (0+255),b
  7483  006C3A  6B6C               	clrf	(??_ICMP_EchoReply+5)& (0+255),b
  7484  006C3C  5169               	movf	(??_ICMP_EchoReply+2)& (0+255),w,b
  7485  006C3E  116B               	iorwf	(??_ICMP_EchoReply+4)& (0+255),w,b
  7486  006C40  6E03               	movwf	ETH_Write16@data,c
  7487  006C42  516A               	movf	(??_ICMP_EchoReply+3)& (0+255),w,b
  7488  006C44  116C               	iorwf	(??_ICMP_EchoReply+5)& (0+255),w,b
  7489  006C46  6E04               	movwf	ETH_Write16@data+1,c
  7490  006C48  ECE1  F044         	call	_ETH_Write16	;wreg free
  7491                           
  7492                           ;icmp.c: 102: ETH_Write16(((((uint16_t)icmpHdr->sequence & (uint16_t)0xFF00) >> 8) | (((
      +                          uint16_t)icmpHdr->sequence & (uint16_t)0x00FF) << 8)));
  7493  006C4C  0100               	movlb	0	; () banked
  7494  006C4E  5174               	movf	ICMP_EchoReply@icmpHdr& (0+255),w,b
  7495  006C50  6ED9               	movwf	fsr2l,c
  7496  006C52  6ADA               	clrf	fsr2h,c
  7497  006C54  0E06               	movlw	6
  7498  006C56  26D9               	addwf	fsr2l,f,c
  7499  006C58  CFDE F067          	movff	postinc2,??_ICMP_EchoReply
  7500  006C5C  CFDD F068          	movff	postdec2,??_ICMP_EchoReply+1
  7501  006C60  5167               	movf	??_ICMP_EchoReply& (0+255),w,b
  7502  006C62  6F6A               	movwf	(??_ICMP_EchoReply+3)& (0+255),b
  7503  006C64  6B69               	clrf	(??_ICMP_EchoReply+2)& (0+255),b
  7504  006C66  5174               	movf	ICMP_EchoReply@icmpHdr& (0+255),w,b
  7505  006C68  6ED9               	movwf	fsr2l,c
  7506  006C6A  6ADA               	clrf	fsr2h,c
  7507  006C6C  0E06               	movlw	6
  7508  006C6E  26D9               	addwf	fsr2l,f,c
  7509  006C70  CFDE F06B          	movff	postinc2,??_ICMP_EchoReply+4
  7510  006C74  CFDD F06C          	movff	postdec2,??_ICMP_EchoReply+5
  7511  006C78  C06C  F06B         	movff	??_ICMP_EchoReply+5,??_ICMP_EchoReply+4
  7512  006C7C  6B6C               	clrf	(??_ICMP_EchoReply+5)& (0+255),b
  7513  006C7E  6B6C               	clrf	(??_ICMP_EchoReply+5)& (0+255),b
  7514  006C80  5169               	movf	(??_ICMP_EchoReply+2)& (0+255),w,b
  7515  006C82  116B               	iorwf	(??_ICMP_EchoReply+4)& (0+255),w,b
  7516  006C84  6E03               	movwf	ETH_Write16@data,c
  7517  006C86  516A               	movf	(??_ICMP_EchoReply+3)& (0+255),w,b
  7518  006C88  116C               	iorwf	(??_ICMP_EchoReply+5)& (0+255),w,b
  7519  006C8A  6E04               	movwf	ETH_Write16@data+1,c
  7520  006C8C  ECE1  F044         	call	_ETH_Write16	;wreg free
  7521                           
  7522                           ;icmp.c: 105: ret = ETH_Copy(ipv4PayloadLength - sizeof(icmpHeader_t));
  7523  006C90  0EF8               	movlw	248
  7524  006C92  0100               	movlb	0	; () banked
  7525  006C94  2571               	addwf	ICMP_EchoReply@ipv4PayloadLength& (0+255),w,b
  7526  006C96  6E0D               	movwf	ETH_Copy@len,c
  7527  006C98  0EFF               	movlw	255
  7528  006C9A  2172               	addwfc	(ICMP_EchoReply@ipv4PayloadLength+1)& (0+255),w,b
  7529  006C9C  6E0E               	movwf	ETH_Copy@len+1,c
  7530  006C9E  EC86  F03C         	call	_ETH_Copy	;wreg free
  7531  006CA2  0100               	movlb	0	; () banked
  7532  006CA4  6F73               	movwf	ICMP_EchoReply@ret& (0+255),b
  7533                           
  7534                           ; BSR set to: 0
  7535                           ;icmp.c: 106: if(ret==SUCCESS)
  7536  006CA6  0573               	decf	ICMP_EchoReply@ret& (0+255),w,b
  7537  006CA8  E122               	bnz	l8762
  7538                           
  7539                           ; BSR set to: 0
  7540                           ;icmp.c: 107: {
  7541                           ;icmp.c: 108: ETH_SaveRDPT();
  7542  006CAA  ECC9  F045         	call	_ETH_SaveRDPT	;wreg free
  7543                           
  7544                           ;icmp.c: 112: cksm = ETH_TxComputeChecksum(icmp_cksm_start, ipv4PayloadLength, 0);
  7545  006CAE  6A0E               	clrf	ETH_TxComputeChecksum@position+1,c
  7546  006CB0  0E22               	movlw	34
  7547  006CB2  6E0D               	movwf	ETH_TxComputeChecksum@position,c
  7548  006CB4  C071  F00F         	movff	ICMP_EchoReply@ipv4PayloadLength,ETH_TxComputeChecksum@length
  7549  006CB8  C072  F010         	movff	ICMP_EchoReply@ipv4PayloadLength+1,ETH_TxComputeChecksum@length+1
  7550  006CBC  6A12               	clrf	ETH_TxComputeChecksum@seed+1,c
  7551  006CBE  6A11               	clrf	ETH_TxComputeChecksum@seed,c
  7552  006CC0  ECDD  F03A         	call	_ETH_TxComputeChecksum	;wreg free
  7553  006CC4  C00D  F06F         	movff	?_ETH_TxComputeChecksum,ICMP_EchoReply@cksm
  7554  006CC8  C00E  F070         	movff	?_ETH_TxComputeChecksum+1,ICMP_EchoReply@cksm+1
  7555                           
  7556                           ;icmp.c: 113: ETH_Insert((char *)&cksm,sizeof(cksm),sizeof(ethernetFrame_t) + sizeof(ipv
      +                          4Header_t) + (int)(((char*)&((icmpHeader_t *)1)->checksum)-1));
  7557  006CCC  6A0C               	clrf	ETH_Insert@len+1,c
  7558  006CCE  0E02               	movlw	2
  7559  006CD0  6E0B               	movwf	ETH_Insert@len,c
  7560  006CD2  6A0E               	clrf	ETH_Insert@offset+1,c
  7561  006CD4  0E24               	movlw	36
  7562  006CD6  6E0D               	movwf	ETH_Insert@offset,c
  7563  006CD8  0E6F               	movlw	ICMP_EchoReply@cksm& (0+255)
  7564  006CDA  EC8A  F040         	call	_ETH_Insert
  7565                           
  7566                           ;icmp.c: 114: ret = IPV4_Send(ipv4PayloadLength);
  7567  006CDE  C071  F01D         	movff	ICMP_EchoReply@ipv4PayloadLength,IPV4_Send@payloadLength
  7568  006CE2  C072  F01E         	movff	ICMP_EchoReply@ipv4PayloadLength+1,IPV4_Send@payloadLength+1
  7569  006CE6  EC76  F03F         	call	_IPV4_Send	;wreg free
  7570  006CEA  0100               	movlb	0	; () banked
  7571  006CEC  6F73               	movwf	ICMP_EchoReply@ret& (0+255),b
  7572  006CEE                     l8762:
  7573                           
  7574                           ; BSR set to: 0
  7575                           ;icmp.c: 115: }
  7576                           ;icmp.c: 116: }
  7577                           ;icmp.c: 117: return ret;
  7578  006CEE  5173               	movf	ICMP_EchoReply@ret& (0+255),w,b
  7579                           
  7580                           ; BSR set to: 0
  7581  006CF0  0012               	return		;funcret
  7582  006CF2                     __end_of_ICMP_EchoReply:
  7583                           	opt stack 0
  7584                           tosu	equ	0xFFF
  7585                           tosh	equ	0xFFE
  7586                           tosl	equ	0xFFD
  7587                           pclath	equ	0xFFA
  7588                           tblptru	equ	0xFF8
  7589                           tblptrh	equ	0xFF7
  7590                           tblptrl	equ	0xFF6
  7591                           tablat	equ	0xFF5
  7592                           prodh	equ	0xFF4
  7593                           prodl	equ	0xFF3
  7594                           intcon	equ	0xFF2
  7595                           intcon2	equ	0xFF1
  7596                           indf0	equ	0xFEF
  7597                           postinc0	equ	0xFEE
  7598                           fsr0h	equ	0xFEA
  7599                           fsr0l	equ	0xFE9
  7600                           wreg	equ	0xFE8
  7601                           postinc1	equ	0xFE6
  7602                           fsr1h	equ	0xFE2
  7603                           fsr1l	equ	0xFE1
  7604                           indf2	equ	0xFDF
  7605                           postinc2	equ	0xFDE
  7606                           postdec2	equ	0xFDD
  7607                           fsr2h	equ	0xFDA
  7608                           fsr2l	equ	0xFD9
  7609                           status	equ	0xFD8
  7610                           
  7611 ;; *************** function _ETH_SaveRDPT *****************
  7612 ;; Defined at:
  7613 ;;		line 592 in file "../../TCPIP Library/ethernet_drivers/encX24J600_driver.c"
  7614 ;; Parameters:    Size  Location     Type
  7615 ;;		None
  7616 ;; Auto vars:     Size  Location     Type
  7617 ;;		None
  7618 ;; Return value:  Size  Location     Type
  7619 ;;		None               void
  7620 ;; Registers used:
  7621 ;;		wreg, status,2, status,0, cstack
  7622 ;; Tracked objects:
  7623 ;;		On entry : E/1
  7624 ;;		On exit  : 0/0
  7625 ;;		Unchanged: 0/0
  7626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7631 ;;Total ram usage:        0 bytes
  7632 ;; Hardware stack levels used:    1
  7633 ;; Hardware stack levels required when called:    6
  7634 ;; This function calls:
  7635 ;;		_ENCx24_Read
  7636 ;; This function is called by:
  7637 ;;		_ICMP_Receive
  7638 ;;		_ICMP_EchoReply
  7639 ;; This function uses a non-reentrant model
  7640 ;;
  7641                           
  7642                           	psect	text30
  7643  008B92                     __ptext30:
  7644                           	opt stack 0
  7645  008B92                     _ETH_SaveRDPT:
  7646                           	opt stack 19
  7647                           
  7648                           ;encX24J600_driver.c: 594: ethData.saveRDPT = ENCx24_Read(XJ600_ERXRDPTL);
  7649                           
  7650                           ; BSR set to: 0
  7651                           ;incstack = 0
  7652  008B92  0E8A               	movlw	138
  7653  008B94  ECC0  F041         	call	_ENCx24_Read
  7654  008B98  C005  F186         	movff	?_ENCx24_Read,_ethData+3	;volatile
  7655  008B9C  C006  F187         	movff	?_ENCx24_Read+1,_ethData+4	;volatile
  7656  008BA0  0012               	return		;funcret
  7657  008BA2                     __end_of_ETH_SaveRDPT:
  7658                           	opt stack 0
  7659                           tosu	equ	0xFFF
  7660                           tosh	equ	0xFFE
  7661                           tosl	equ	0xFFD
  7662                           pclath	equ	0xFFA
  7663                           tblptru	equ	0xFF8
  7664                           tblptrh	equ	0xFF7
  7665                           tblptrl	equ	0xFF6
  7666                           tablat	equ	0xFF5
  7667                           prodh	equ	0xFF4
  7668                           prodl	equ	0xFF3
  7669                           intcon	equ	0xFF2
  7670                           intcon2	equ	0xFF1
  7671                           indf0	equ	0xFEF
  7672                           postinc0	equ	0xFEE
  7673                           fsr0h	equ	0xFEA
  7674                           fsr0l	equ	0xFE9
  7675                           wreg	equ	0xFE8
  7676                           postinc1	equ	0xFE6
  7677                           fsr1h	equ	0xFE2
  7678                           fsr1l	equ	0xFE1
  7679                           indf2	equ	0xFDF
  7680                           postinc2	equ	0xFDE
  7681                           postdec2	equ	0xFDD
  7682                           fsr2h	equ	0xFDA
  7683                           fsr2l	equ	0xFD9
  7684                           status	equ	0xFD8
  7685                           
  7686 ;; *************** function _ETH_Copy *****************
  7687 ;; Defined at:
  7688 ;;		line 416 in file "../../TCPIP Library/ethernet_drivers/encX24J600_driver.c"
  7689 ;; Parameters:    Size  Location     Type
  7690 ;;  len             2   12[COMRAM] unsigned int 
  7691 ;; Auto vars:     Size  Location     Type
  7692 ;;  txBufferAddr    2   14[COMRAM] unsigned int 
  7693 ;; Return value:  Size  Location     Type
  7694 ;;                  1    wreg      enum E6988
  7695 ;; Registers used:
  7696 ;;		wreg, status,2, status,0, cstack
  7697 ;; Tracked objects:
  7698 ;;		On entry : F/0
  7699 ;;		On exit  : 0/0
  7700 ;;		Unchanged: 0/0
  7701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7702 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7703 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7705 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7706 ;;Total ram usage:        4 bytes
  7707 ;; Hardware stack levels used:    1
  7708 ;; Hardware stack levels required when called:    7
  7709 ;; This function calls:
  7710 ;;		_ENCx24_BFC
  7711 ;;		_ENCx24_BFS
  7712 ;;		_ENCx24_Read
  7713 ;;		_ENCx24_Write
  7714 ;;		_waitForDMA
  7715 ;; This function is called by:
  7716 ;;		_ICMP_EchoReply
  7717 ;; This function uses a non-reentrant model
  7718 ;;
  7719                           
  7720                           	psect	text31
  7721  00790C                     __ptext31:
  7722                           	opt stack 0
  7723  00790C                     _ETH_Copy:
  7724                           	opt stack 0
  7725  00790C                     i1L__ptext100:
  7726                           	opt stack 0
  7727  00790C                     i1L_waitForDMA:
  7728                           	opt stack 0
  7729  00790C                     i1Ll501:
  7730                           	opt stack 0
  7731  00790C                     i1Ll8142:
  7732                           	opt stack 18
  7733                           
  7734                           ;encX24J600_driver.c: 487: {
  7735                           ;encX24J600_driver.c: 488: econ1_val = ENCx24_Read(XJ600_ECON1L);
  7736  00790C  0EFE               	movlw	254
  7737  00790E  ECC0  F041         	call	_ENCx24_Read
  7738  007912  C005  F00B         	movff	?_ENCx24_Read,waitForDMA@econ1_val
  7739  007916  C006  F00C         	movff	?_ENCx24_Read+1,waitForDMA@econ1_val+1
  7740  00791A                     i1Ll8144:
  7741                           	opt stack 18
  7742                           
  7743                           ;encX24J600_driver.c: 489: } while ( econ1_val & 0x0020 );
  7744  00791A  BA0B               	btfsc	waitForDMA@econ1_val,5,c
  7745  00791C                     i1Lu10921:
  7746                           	opt stack 0
  7747  00791C  D7F7               	goto	i1Ll501
  7748  00791E                     i1Lu10920:
  7749                           	opt stack 0
  7750  00791E                     i1Ll503:
  7751                           	opt stack 18
  7752                           
  7753                           ;encX24J600_driver.c: 425: if((ENCx24_Read(XJ600_ECON1L) & 0x20) == 0)
  7754  00791E  0EFE               	movlw	254
  7755  007920  ECC0  F041         	call	_ENCx24_Read
  7756  007924  BA05               	btfsc	?_ENCx24_Read,5,c
  7757  007926  D042               	goto	l491
  7758                           
  7759                           ;encX24J600_driver.c: 426: {
  7760                           ;encX24J600_driver.c: 427: txBufferAddress = ENCx24_Read(XJ600_EGPWRPTL);
  7761  007928  0E88               	movlw	136
  7762  00792A  ECC0  F041         	call	_ENCx24_Read
  7763  00792E  C005  F00F         	movff	?_ENCx24_Read,ETH_Copy@txBufferAddress
  7764  007932  C006  F010         	movff	?_ENCx24_Read+1,ETH_Copy@txBufferAddress+1
  7765                           
  7766                           ;encX24J600_driver.c: 428: ENCx24_Write(XJ600_EDMASTL, ethData.saveRDPT);
  7767  007936  C186  F005         	movff	_ethData+3,ENCx24_Write@data	;volatile
  7768  00793A  C187  F006         	movff	_ethData+4,ENCx24_Write@data+1	;volatile
  7769  00793E  0E0A               	movlw	10
  7770  007940  EC72  F042         	call	_ENCx24_Write
  7771                           
  7772                           ;encX24J600_driver.c: 429: ENCx24_Write(XJ600_EDMALENL,len);
  7773  007944  C00D  F005         	movff	ETH_Copy@len,ENCx24_Write@data
  7774  007948  C00E  F006         	movff	ETH_Copy@len+1,ENCx24_Write@data+1
  7775  00794C  0E0C               	movlw	12
  7776  00794E  EC72  F042         	call	_ENCx24_Write
  7777                           
  7778                           ;encX24J600_driver.c: 430: ENCx24_Write(XJ600_EDMADSTL, txBufferAddress);
  7779  007952  C00F  F005         	movff	ETH_Copy@txBufferAddress,ENCx24_Write@data
  7780  007956  C010  F006         	movff	ETH_Copy@txBufferAddress+1,ENCx24_Write@data+1
  7781  00795A  0E0E               	movlw	14
  7782  00795C  EC72  F042         	call	_ENCx24_Write
  7783                           
  7784                           ;encX24J600_driver.c: 433: ENCx24_BFC(XJ600_ECON1L, 0x0004);
  7785  007960  6A06               	clrf	ENCx24_BFC@bitMask+1,c
  7786  007962  0E04               	movlw	4
  7787  007964  6E05               	movwf	ENCx24_BFC@bitMask,c
  7788  007966  0EFE               	movlw	254
  7789  007968  ECB3  F042         	call	_ENCx24_BFC
  7790                           
  7791                           ;encX24J600_driver.c: 437: ENCx24_BFS(XJ600_ECON1L, 0b0000000000111000);
  7792  00796C  6A06               	clrf	ENCx24_BFS@bitMask+1,c
  7793  00796E  0E38               	movlw	56
  7794  007970  6E05               	movwf	ENCx24_BFS@bitMask,c
  7795  007972  0EFE               	movlw	254
  7796  007974  EC93  F042         	call	_ENCx24_BFS
  7797  007978                     i2L__ptext100:
  7798                           	opt stack 0
  7799  007978                     i2L_waitForDMA:
  7800                           	opt stack 0
  7801  007978                     i2Ll501:
  7802                           	opt stack 0
  7803  007978                     i2Ll8142:
  7804                           	opt stack 18
  7805                           
  7806                           ;encX24J600_driver.c: 487: {
  7807                           ;encX24J600_driver.c: 488: econ1_val = ENCx24_Read(XJ600_ECON1L);
  7808  007978  0EFE               	movlw	254
  7809  00797A  ECC0  F041         	call	_ENCx24_Read
  7810  00797E  C005  F00B         	movff	?_ENCx24_Read,waitForDMA@econ1_val
  7811  007982  C006  F00C         	movff	?_ENCx24_Read+1,waitForDMA@econ1_val+1
  7812  007986                     i2Ll8144:
  7813                           	opt stack 18
  7814                           
  7815                           ;encX24J600_driver.c: 489: } while ( econ1_val & 0x0020 );
  7816  007986  BA0B               	btfsc	waitForDMA@econ1_val,5,c
  7817  007988                     i2Lu10921:
  7818                           	opt stack 0
  7819  007988  D7F7               	goto	i2Ll501
  7820  00798A                     i2Lu10920:
  7821                           	opt stack 0
  7822  00798A                     i2Ll503:
  7823                           	opt stack 18
  7824                           
  7825                           ;encX24J600_driver.c: 441: txBufferAddress += len;
  7826  00798A  500D               	movf	ETH_Copy@len,w,c
  7827  00798C  260F               	addwf	ETH_Copy@txBufferAddress,f,c
  7828  00798E  500E               	movf	ETH_Copy@len+1,w,c
  7829  007990  2210               	addwfc	ETH_Copy@txBufferAddress+1,f,c
  7830                           
  7831                           ;encX24J600_driver.c: 443: ENCx24_Write(XJ600_EGPWRPTL, txBufferAddress);
  7832  007992  C00F  F005         	movff	ETH_Copy@txBufferAddress,ENCx24_Write@data
  7833  007996  C010  F006         	movff	ETH_Copy@txBufferAddress+1,ENCx24_Write@data+1
  7834  00799A  0E88               	movlw	136
  7835  00799C  EC72  F042         	call	_ENCx24_Write
  7836                           
  7837                           ;encX24J600_driver.c: 445: TXPacketSize += len;
  7838  0079A0  500D               	movf	ETH_Copy@len,w,c
  7839  0079A2  0101               	movlb	1	; () banked
  7840  0079A4  279A               	addwf	_TXPacketSize& (0+255),f,b
  7841  0079A6  500E               	movf	ETH_Copy@len+1,w,c
  7842  0079A8  239B               	addwfc	(_TXPacketSize+1)& (0+255),f,b
  7843                           
  7844                           ; BSR set to: 1
  7845                           ;encX24J600_driver.c: 447: return SUCCESS;
  7846  0079AA  0C01               	retlw	1
  7847  0079AC                     l491:
  7848  0079AC  00FF               	reset		;# 
  7849                           
  7850                           ;encX24J600_driver.c: 450: return DMA_TIMEOUT;
  7851  0079AE  0C0C               	retlw	12	;funcret
  7852  0079B0                     __end_of_ETH_Copy:
  7853                           	opt stack 0
  7854                           tosu	equ	0xFFF
  7855                           tosh	equ	0xFFE
  7856                           tosl	equ	0xFFD
  7857                           pclath	equ	0xFFA
  7858                           tblptru	equ	0xFF8
  7859                           tblptrh	equ	0xFF7
  7860                           tblptrl	equ	0xFF6
  7861                           tablat	equ	0xFF5
  7862                           prodh	equ	0xFF4
  7863                           prodl	equ	0xFF3
  7864                           intcon	equ	0xFF2
  7865                           intcon2	equ	0xFF1
  7866                           indf0	equ	0xFEF
  7867                           postinc0	equ	0xFEE
  7868                           fsr0h	equ	0xFEA
  7869                           fsr0l	equ	0xFE9
  7870                           wreg	equ	0xFE8
  7871                           postinc1	equ	0xFE6
  7872                           fsr1h	equ	0xFE2
  7873                           fsr1l	equ	0xFE1
  7874                           indf2	equ	0xFDF
  7875                           postinc2	equ	0xFDE
  7876                           postdec2	equ	0xFDD
  7877                           fsr2h	equ	0xFDA
  7878                           fsr2l	equ	0xFD9
  7879                           status	equ	0xFD8
  7880                           
  7881 ;; *************** function _ETH_RxComputeChecksum *****************
  7882 ;; Defined at:
  7883 ;;		line 545 in file "../../TCPIP Library/ethernet_drivers/encX24J600_driver.c"
  7884 ;; Parameters:    Size  Location     Type
  7885 ;;  len             2   12[COMRAM] unsigned int 
  7886 ;;  seed            2   14[COMRAM] unsigned int 
  7887 ;; Auto vars:     Size  Location     Type
  7888 ;;  econ1Val        2   24[COMRAM] unsigned int 
  7889 ;;  rxPtr           2   22[COMRAM] unsigned int 
  7890 ;;  cksm            2   20[COMRAM] unsigned int 
  7891 ;; Return value:  Size  Location     Type
  7892 ;;                  2   12[COMRAM] unsigned int 
  7893 ;; Registers used:
  7894 ;;		wreg, status,2, status,0, cstack
  7895 ;; Tracked objects:
  7896 ;;		On entry : F/0
  7897 ;;		On exit  : 0/0
  7898 ;;		Unchanged: 0/0
  7899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7900 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7901 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7902 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7903 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7904 ;;Total ram usage:       14 bytes
  7905 ;; Hardware stack levels used:    1
  7906 ;; Hardware stack levels required when called:    7
  7907 ;; This function calls:
  7908 ;;		_ENCx24_BFC
  7909 ;;		_ENCx24_BFS
  7910 ;;		_ENCx24_Read
  7911 ;;		_ENCx24_Write
  7912 ;;		_waitForDMA
  7913 ;; This function is called by:
  7914 ;;		_IPV4_Packet
  7915 ;; This function uses a non-reentrant model
  7916 ;;
  7917                           
  7918                           	psect	text32
  7919  00736A                     __ptext32:
  7920                           	opt stack 0
  7921  00736A                     _ETH_RxComputeChecksum:
  7922                           	opt stack 0
  7923  00736A                     i3L__ptext100:
  7924                           	opt stack 0
  7925  00736A                     i3L_waitForDMA:
  7926                           	opt stack 0
  7927  00736A                     i3Ll501:
  7928                           	opt stack 0
  7929  00736A                     i3Ll8142:
  7930                           	opt stack 18
  7931                           
  7932                           ;encX24J600_driver.c: 487: {
  7933                           ;encX24J600_driver.c: 488: econ1_val = ENCx24_Read(XJ600_ECON1L);
  7934  00736A  0EFE               	movlw	254
  7935  00736C  ECC0  F041         	call	_ENCx24_Read
  7936  007370  C005  F00B         	movff	?_ENCx24_Read,waitForDMA@econ1_val
  7937  007374  C006  F00C         	movff	?_ENCx24_Read+1,waitForDMA@econ1_val+1
  7938  007378                     i3Ll8144:
  7939                           	opt stack 18
  7940                           
  7941                           ;encX24J600_driver.c: 489: } while ( econ1_val & 0x0020 );
  7942  007378  BA0B               	btfsc	waitForDMA@econ1_val,5,c
  7943  00737A                     i3Lu10921:
  7944                           	opt stack 0
  7945  00737A  D7F7               	goto	i3Ll501
  7946  00737C                     i3Lu10920:
  7947                           	opt stack 0
  7948  00737C                     i3Ll503:
  7949                           	opt stack 20
  7950                           
  7951                           ;encX24J600_driver.c: 560: ENCx24_BFC(XJ600_ECON1L, econ1Val);
  7952  00737C  6A06               	clrf	ENCx24_BFC@bitMask+1,c
  7953  00737E  0E1C               	movlw	28
  7954  007380  6E05               	movwf	ENCx24_BFC@bitMask,c
  7955  007382  0EFE               	movlw	254
  7956  007384  ECB3  F042         	call	_ENCx24_BFC
  7957                           
  7958                           ;encX24J600_driver.c: 562: rxPtr = ENCx24_Read(XJ600_ERXRDPTL);
  7959  007388  0E8A               	movlw	138
  7960  00738A  ECC0  F041         	call	_ENCx24_Read
  7961  00738E  C005  F017         	movff	?_ENCx24_Read,ETH_RxComputeChecksum@rxPtr
  7962  007392  C006  F018         	movff	?_ENCx24_Read+1,ETH_RxComputeChecksum@rxPtr+1
  7963                           
  7964                           ;encX24J600_driver.c: 565: ENCx24_Write(XJ600_EDMASTL, rxPtr);
  7965  007396  C017  F005         	movff	ETH_RxComputeChecksum@rxPtr,ENCx24_Write@data
  7966  00739A  C018  F006         	movff	ETH_RxComputeChecksum@rxPtr+1,ENCx24_Write@data+1
  7967  00739E  0E0A               	movlw	10
  7968  0073A0  EC72  F042         	call	_ENCx24_Write
  7969                           
  7970                           ;encX24J600_driver.c: 567: ENCx24_Write(XJ600_EDMALENL, len);
  7971  0073A4  C00D  F005         	movff	ETH_RxComputeChecksum@len,ENCx24_Write@data
  7972  0073A8  C00E  F006         	movff	ETH_RxComputeChecksum@len+1,ENCx24_Write@data+1
  7973  0073AC  0E0C               	movlw	12
  7974  0073AE  EC72  F042         	call	_ENCx24_Write
  7975                           
  7976                           ;encX24J600_driver.c: 569: econ1Val = 0x0020;
  7977  0073B2  6A1A               	clrf	ETH_RxComputeChecksum@econ1Val+1,c
  7978  0073B4  0E20               	movlw	32
  7979  0073B6  6E19               	movwf	ETH_RxComputeChecksum@econ1Val,c
  7980                           
  7981                           ;encX24J600_driver.c: 570: if (seed)
  7982  0073B8  500F               	movf	ETH_RxComputeChecksum@seed,w,c
  7983  0073BA  1010               	iorwf	ETH_RxComputeChecksum@seed+1,w,c
  7984  0073BC  E016               	bz	l9286
  7985                           
  7986                           ;encX24J600_driver.c: 571: {
  7987                           ;encX24J600_driver.c: 572: econ1Val |= 0x0008;
  7988  0073BE  8619               	bsf	ETH_RxComputeChecksum@econ1Val,3,c
  7989                           
  7990                           ;encX24J600_driver.c: 573: seed=~(seed);
  7991  0073C0  1E0F               	comf	ETH_RxComputeChecksum@seed,f,c
  7992  0073C2  1E10               	comf	ETH_RxComputeChecksum@seed+1,f,c
  7993                           
  7994                           ;encX24J600_driver.c: 574: seed = ((((uint16_t)seed & (uint16_t)0xFF00) >> 8) | (((uint1
      +                          6_t)seed & (uint16_t)0x00FF) << 8));
  7995  0073C4  500F               	movf	ETH_RxComputeChecksum@seed,w,c
  7996  0073C6  6E12               	movwf	(??_ETH_RxComputeChecksum+1)& (0+255),c
  7997  0073C8  6A11               	clrf	??_ETH_RxComputeChecksum& (0+255),c
  7998  0073CA  5010               	movf	ETH_RxComputeChecksum@seed+1,w,c
  7999  0073CC  6E13               	movwf	(??_ETH_RxComputeChecksum+2)& (0+255),c
  8000  0073CE  6A14               	clrf	(??_ETH_RxComputeChecksum+3)& (0+255),c
  8001  0073D0  5011               	movf	??_ETH_RxComputeChecksum,w,c
  8002  0073D2  1013               	iorwf	??_ETH_RxComputeChecksum+2,w,c
  8003  0073D4  6E0F               	movwf	ETH_RxComputeChecksum@seed,c
  8004  0073D6  5012               	movf	??_ETH_RxComputeChecksum+1,w,c
  8005  0073D8  1014               	iorwf	??_ETH_RxComputeChecksum+3,w,c
  8006  0073DA  6E10               	movwf	ETH_RxComputeChecksum@seed+1,c
  8007                           
  8008                           ;encX24J600_driver.c: 575: ENCx24_Write(XJ600_EDMACSL, seed);
  8009  0073DC  C00F  F005         	movff	ETH_RxComputeChecksum@seed,ENCx24_Write@data
  8010  0073E0  C010  F006         	movff	ETH_RxComputeChecksum@seed+1,ENCx24_Write@data+1
  8011  0073E4  0E10               	movlw	16
  8012  0073E6  EC72  F042         	call	_ENCx24_Write
  8013  0073EA                     l9286:
  8014                           
  8015                           ;encX24J600_driver.c: 576: }
  8016                           ;encX24J600_driver.c: 579: ENCx24_BFS(XJ600_ECON1L, econ1Val);
  8017  0073EA  C019  F005         	movff	ETH_RxComputeChecksum@econ1Val,ENCx24_BFS@bitMask
  8018  0073EE  C01A  F006         	movff	ETH_RxComputeChecksum@econ1Val+1,ENCx24_BFS@bitMask+1
  8019  0073F2  0EFE               	movlw	254
  8020  0073F4  EC93  F042         	call	_ENCx24_BFS
  8021  0073F8                     i4L__ptext100:
  8022                           	opt stack 0
  8023  0073F8                     i4L_waitForDMA:
  8024                           	opt stack 0
  8025  0073F8                     i4Ll501:
  8026                           	opt stack 0
  8027  0073F8                     i4Ll8142:
  8028                           	opt stack 18
  8029                           
  8030                           ;encX24J600_driver.c: 487: {
  8031                           ;encX24J600_driver.c: 488: econ1_val = ENCx24_Read(XJ600_ECON1L);
  8032  0073F8  0EFE               	movlw	254
  8033  0073FA  ECC0  F041         	call	_ENCx24_Read
  8034  0073FE  C005  F00B         	movff	?_ENCx24_Read,waitForDMA@econ1_val
  8035  007402  C006  F00C         	movff	?_ENCx24_Read+1,waitForDMA@econ1_val+1
  8036  007406                     i4Ll8144:
  8037                           	opt stack 18
  8038                           
  8039                           ;encX24J600_driver.c: 489: } while ( econ1_val & 0x0020 );
  8040  007406  BA0B               	btfsc	waitForDMA@econ1_val,5,c
  8041  007408                     i4Lu10921:
  8042                           	opt stack 0
  8043  007408  D7F7               	goto	i4Ll501
  8044  00740A                     i4Lu10920:
  8045                           	opt stack 0
  8046  00740A                     i4Ll503:
  8047                           	opt stack 20
  8048                           
  8049                           ;encX24J600_driver.c: 582: cksm = ENCx24_Read(XJ600_EDMACSL);
  8050  00740A  0E10               	movlw	16
  8051  00740C  ECC0  F041         	call	_ENCx24_Read
  8052  007410  C005  F015         	movff	?_ENCx24_Read,ETH_RxComputeChecksum@cksm
  8053  007414  C006  F016         	movff	?_ENCx24_Read+1,ETH_RxComputeChecksum@cksm+1
  8054                           
  8055                           ;encX24J600_driver.c: 584: ENCx24_Write(XJ600_ERXRDPTL, rxPtr);
  8056  007418  C017  F005         	movff	ETH_RxComputeChecksum@rxPtr,ENCx24_Write@data
  8057  00741C  C018  F006         	movff	ETH_RxComputeChecksum@rxPtr+1,ENCx24_Write@data+1
  8058  007420  0E8A               	movlw	138
  8059  007422  EC72  F042         	call	_ENCx24_Write
  8060                           
  8061                           ;encX24J600_driver.c: 586: return cksm;
  8062  007426  C015  F00D         	movff	ETH_RxComputeChecksum@cksm,?_ETH_RxComputeChecksum
  8063  00742A  C016  F00E         	movff	ETH_RxComputeChecksum@cksm+1,?_ETH_RxComputeChecksum+1
  8064  00742E  0012               	return		;funcret
  8065  007430                     __end_of_ETH_RxComputeChecksum:
  8066                           	opt stack 0
  8067                           tosu	equ	0xFFF
  8068                           tosh	equ	0xFFE
  8069                           tosl	equ	0xFFD
  8070                           pclath	equ	0xFFA
  8071                           tblptru	equ	0xFF8
  8072                           tblptrh	equ	0xFF7
  8073                           tblptrl	equ	0xFF6
  8074                           tablat	equ	0xFF5
  8075                           prodh	equ	0xFF4
  8076                           prodl	equ	0xFF3
  8077                           intcon	equ	0xFF2
  8078                           intcon2	equ	0xFF1
  8079                           indf0	equ	0xFEF
  8080                           postinc0	equ	0xFEE
  8081                           fsr0h	equ	0xFEA
  8082                           fsr0l	equ	0xFE9
  8083                           wreg	equ	0xFE8
  8084                           postinc1	equ	0xFE6
  8085                           fsr1h	equ	0xFE2
  8086                           fsr1l	equ	0xFE1
  8087                           indf2	equ	0xFDF
  8088                           postinc2	equ	0xFDE
  8089                           postdec2	equ	0xFDD
  8090                           fsr2h	equ	0xFDA
  8091                           fsr2l	equ	0xFD9
  8092                           status	equ	0xFD8
  8093                           
  8094 ;; *************** function _ETH_NextPacketUpdate *****************
  8095 ;; Defined at:
  8096 ;;		line 278 in file "../../TCPIP Library/ethernet_drivers/encX24J600_driver.c"
  8097 ;; Parameters:    Size  Location     Type
  8098 ;;		None
  8099 ;; Auto vars:     Size  Location     Type
  8100 ;;		None
  8101 ;; Return value:  Size  Location     Type
  8102 ;;		None               void
  8103 ;; Registers used:
  8104 ;;		wreg, status,2, status,0, cstack
  8105 ;; Tracked objects:
  8106 ;;		On entry : F/1
  8107 ;;		On exit  : F/2
  8108 ;;		Unchanged: 0/0
  8109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8114 ;;Total ram usage:        0 bytes
  8115 ;; Hardware stack levels used:    1
  8116 ;; Hardware stack levels required when called:    5
  8117 ;; This function calls:
  8118 ;;		_ETH_SetRXptr
  8119 ;;		_SPI_ExchangeByte
  8120 ;; This function is called by:
  8121 ;;		_Network_Read
  8122 ;; This function uses a non-reentrant model
  8123 ;;
  8124                           
  8125                           	psect	text33
  8126  007E7C                     __ptext33:
  8127                           	opt stack 0
  8128  007E7C                     _ETH_NextPacketUpdate:
  8129                           	opt stack 23
  8130                           
  8131                           ; BSR set to: 1
  8132                           ;encX24J600_driver.c: 280: ETH_SetRXptr(nextPacketPointer);
  8133                           
  8134                           ;incstack = 0
  8135  007E7C  C19E  F003         	movff	_nextPacketPointer,ETH_SetRXptr@address
  8136  007E80  C19F  F004         	movff	_nextPacketPointer+1,ETH_SetRXptr@address+1
  8137  007E84  EC92  F045         	call	_ETH_SetRXptr	;wreg free
  8138  007E88  968A               	bcf	3978,3,c	;volatile
  8139                           
  8140                           ;encX24J600_driver.c: 283: SPI_ExchangeByte(rrxdata_inst);
  8141  007E8A  0E2C               	movlw	44
  8142  007E8C  ECEE  F045         	call	_SPI_ExchangeByte
  8143                           
  8144                           ;encX24J600_driver.c: 284: ((char *) &nextPacketPointer)[0] = SPI_ExchangeByte(0);
  8145  007E90  0E00               	movlw	0
  8146  007E92  ECEE  F045         	call	_SPI_ExchangeByte
  8147  007E96  0101               	movlb	1	; () banked
  8148  007E98  6F9E               	movwf	_nextPacketPointer& (0+255),b
  8149                           
  8150                           ;encX24J600_driver.c: 285: ((char *) &nextPacketPointer)[1] = SPI_ExchangeByte(0);
  8151  007E9A  0E00               	movlw	0
  8152  007E9C  ECEE  F045         	call	_SPI_ExchangeByte
  8153  007EA0  0101               	movlb	1	; () banked
  8154  007EA2  6F9F               	movwf	(_nextPacketPointer+1)& (0+255),b
  8155                           
  8156                           ;encX24J600_driver.c: 286: ((char *) &rxPacketStatusVector)[0] = SPI_ExchangeByte(0);
  8157  007EA4  0E00               	movlw	0
  8158  007EA6  ECEE  F045         	call	_SPI_ExchangeByte
  8159  007EAA  0102               	movlb	2	; () banked
  8160  007EAC  6F18               	movwf	_rxPacketStatusVector& (0+255),b
  8161                           
  8162                           ;encX24J600_driver.c: 287: ((char *) &rxPacketStatusVector)[1] = SPI_ExchangeByte(0);
  8163  007EAE  0E00               	movlw	0
  8164  007EB0  ECEE  F045         	call	_SPI_ExchangeByte
  8165  007EB4  0102               	movlb	2	; () banked
  8166  007EB6  6F19               	movwf	(_rxPacketStatusVector+1)& (0+255),b
  8167                           
  8168                           ;encX24J600_driver.c: 288: ((char *) &rxPacketStatusVector)[2] = SPI_ExchangeByte(0);
  8169  007EB8  0E00               	movlw	0
  8170  007EBA  ECEE  F045         	call	_SPI_ExchangeByte
  8171  007EBE  0102               	movlb	2	; () banked
  8172  007EC0  6F1A               	movwf	(_rxPacketStatusVector+2)& (0+255),b
  8173                           
  8174                           ;encX24J600_driver.c: 289: ((char *) &rxPacketStatusVector)[3] = SPI_ExchangeByte(0);
  8175  007EC2  0E00               	movlw	0
  8176  007EC4  ECEE  F045         	call	_SPI_ExchangeByte
  8177  007EC8  0102               	movlb	2	; () banked
  8178  007ECA  6F1B               	movwf	(_rxPacketStatusVector+3)& (0+255),b
  8179                           
  8180                           ;encX24J600_driver.c: 290: ((char *) &rxPacketStatusVector)[4] = SPI_ExchangeByte(0);
  8181  007ECC  0E00               	movlw	0
  8182  007ECE  ECEE  F045         	call	_SPI_ExchangeByte
  8183  007ED2  0102               	movlb	2	; () banked
  8184  007ED4  6F1C               	movwf	(_rxPacketStatusVector+4)& (0+255),b
  8185                           
  8186                           ;encX24J600_driver.c: 291: ((char *) &rxPacketStatusVector)[5] = SPI_ExchangeByte(0);
  8187  007ED6  0E00               	movlw	0
  8188  007ED8  ECEE  F045         	call	_SPI_ExchangeByte
  8189  007EDC  0102               	movlb	2	; () banked
  8190  007EDE  6F1D               	movwf	(_rxPacketStatusVector+5)& (0+255),b
  8191                           
  8192                           ; BSR set to: 2
  8193  007EE0  868A               	bsf	3978,3,c	;volatile
  8194                           
  8195                           ; BSR set to: 2
  8196                           ;encX24J600_driver.c: 295: rxPacketStatusVector.ByteCount -= 4;
  8197  007EE2  0E04               	movlw	4
  8198  007EE4  5F18               	subwf	_rxPacketStatusVector& (0+255),f,b
  8199  007EE6  0E00               	movlw	0
  8200  007EE8  5B19               	subwfb	(_rxPacketStatusVector+1)& (0+255),f,b
  8201                           
  8202                           ; BSR set to: 2
  8203  007EEA  0C00               	retlw	0	;funcret
  8204  007EEC                     __end_of_ETH_NextPacketUpdate:
  8205                           	opt stack 0
  8206                           tosu	equ	0xFFF
  8207                           tosh	equ	0xFFE
  8208                           tosl	equ	0xFFD
  8209                           pclath	equ	0xFFA
  8210                           tblptru	equ	0xFF8
  8211                           tblptrh	equ	0xFF7
  8212                           tblptrl	equ	0xFF6
  8213                           tablat	equ	0xFF5
  8214                           prodh	equ	0xFF4
  8215                           prodl	equ	0xFF3
  8216                           intcon	equ	0xFF2
  8217                           intcon2	equ	0xFF1
  8218                           indf0	equ	0xFEF
  8219                           postinc0	equ	0xFEE
  8220                           fsr0h	equ	0xFEA
  8221                           fsr0l	equ	0xFE9
  8222                           wreg	equ	0xFE8
  8223                           postinc1	equ	0xFE6
  8224                           fsr1h	equ	0xFE2
  8225                           fsr1l	equ	0xFE1
  8226                           indf2	equ	0xFDF
  8227                           postinc2	equ	0xFDE
  8228                           postdec2	equ	0xFDD
  8229                           fsr2h	equ	0xFDA
  8230                           fsr2l	equ	0xFD9
  8231                           status	equ	0xFD8
  8232                           
  8233 ;; *************** function _ETH_SetRXptr *****************
  8234 ;; Defined at:
  8235 ;;		line 456 in file "../../TCPIP Library/ethernet_drivers/encX24j600_spi.c"
  8236 ;; Parameters:    Size  Location     Type
  8237 ;;  address         2    2[COMRAM] unsigned int 
  8238 ;; Auto vars:     Size  Location     Type
  8239 ;;		None
  8240 ;; Return value:  Size  Location     Type
  8241 ;;		None               void
  8242 ;; Registers used:
  8243 ;;		wreg, status,2, cstack
  8244 ;; Tracked objects:
  8245 ;;		On entry : F/1
  8246 ;;		On exit  : 0/0
  8247 ;;		Unchanged: 0/0
  8248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8249 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8252 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8253 ;;Total ram usage:        2 bytes
  8254 ;; Hardware stack levels used:    1
  8255 ;; Hardware stack levels required when called:    4
  8256 ;; This function calls:
  8257 ;;		_SPI_ExchangeByte
  8258 ;; This function is called by:
  8259 ;;		_ETH_NextPacketUpdate
  8260 ;; This function uses a non-reentrant model
  8261 ;;
  8262                           
  8263                           	psect	text34
  8264  008B24                     __ptext34:
  8265                           	opt stack 0
  8266  008B24                     _ETH_SetRXptr:
  8267                           	opt stack 23
  8268                           
  8269                           ; BSR set to: 1
  8270                           
  8271                           ; BSR set to: 2
  8272                           ;incstack = 0
  8273                           ;encX24j600_spi.c: 459: do{LATB3 = 0;} while(0);
  8274  008B24  968A               	bcf	3978,3,c	;volatile
  8275                           
  8276                           ; BSR set to: 1
  8277                           ;encX24j600_spi.c: 460: SPI_ExchangeByte(wrxrdpt_inst);
  8278  008B26  0E64               	movlw	100
  8279  008B28  ECEE  F045         	call	_SPI_ExchangeByte
  8280                           
  8281                           ;encX24j600_spi.c: 461: SPI_ExchangeByte(((uint8_t*) &address)[0]);
  8282  008B2C  5003               	movf	ETH_SetRXptr@address,w,c
  8283  008B2E  ECEE  F045         	call	_SPI_ExchangeByte
  8284                           
  8285                           ;encX24j600_spi.c: 462: SPI_ExchangeByte(((uint8_t*) &address)[1]);
  8286  008B32  5004               	movf	ETH_SetRXptr@address+1,w,c
  8287  008B34  ECEE  F045         	call	_SPI_ExchangeByte
  8288  008B38  868A               	bsf	3978,3,c	;volatile
  8289  008B3A  0012               	return		;funcret
  8290  008B3C                     __end_of_ETH_SetRXptr:
  8291                           	opt stack 0
  8292                           tosu	equ	0xFFF
  8293                           tosh	equ	0xFFE
  8294                           tosl	equ	0xFFD
  8295                           pclath	equ	0xFFA
  8296                           tblptru	equ	0xFF8
  8297                           tblptrh	equ	0xFF7
  8298                           tblptrl	equ	0xFF6
  8299                           tablat	equ	0xFF5
  8300                           prodh	equ	0xFF4
  8301                           prodl	equ	0xFF3
  8302                           intcon	equ	0xFF2
  8303                           intcon2	equ	0xFF1
  8304                           indf0	equ	0xFEF
  8305                           postinc0	equ	0xFEE
  8306                           fsr0h	equ	0xFEA
  8307                           fsr0l	equ	0xFE9
  8308                           wreg	equ	0xFE8
  8309                           postinc1	equ	0xFE6
  8310                           fsr1h	equ	0xFE2
  8311                           fsr1l	equ	0xFE1
  8312                           indf2	equ	0xFDF
  8313                           postinc2	equ	0xFDE
  8314                           postdec2	equ	0xFDD
  8315                           fsr2h	equ	0xFDA
  8316                           fsr2l	equ	0xFD9
  8317                           status	equ	0xFD8
  8318                           
  8319 ;; *************** function _ETH_Flush *****************
  8320 ;; Defined at:
  8321 ;;		line 341 in file "../../TCPIP Library/ethernet_drivers/encX24J600_driver.c"
  8322 ;; Parameters:    Size  Location     Type
  8323 ;;		None
  8324 ;; Auto vars:     Size  Location     Type
  8325 ;;  newRXTail       2    8[COMRAM] unsigned int 
  8326 ;; Return value:  Size  Location     Type
  8327 ;;		None               void
  8328 ;; Registers used:
  8329 ;;		wreg, status,2, status,0, cstack
  8330 ;; Tracked objects:
  8331 ;;		On entry : 0/1
  8332 ;;		On exit  : 0/0
  8333 ;;		Unchanged: 0/0
  8334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8336 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8338 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8339 ;;Total ram usage:        2 bytes
  8340 ;; Hardware stack levels used:    1
  8341 ;; Hardware stack levels required when called:    6
  8342 ;; This function calls:
  8343 ;;		_ENCx24_Write
  8344 ;;		_ETH_SetPktDec
  8345 ;; This function is called by:
  8346 ;;		_Network_Read
  8347 ;; This function uses a non-reentrant model
  8348 ;;
  8349                           
  8350                           	psect	text35
  8351  008696                     __ptext35:
  8352                           	opt stack 0
  8353  008696                     _ETH_Flush:
  8354                           	opt stack 22
  8355                           
  8356                           ;encX24J600_driver.c: 343: uint16_t newRXTail = nextPacketPointer - 2;
  8357                           
  8358                           ;incstack = 0
  8359  008696  0EFE               	movlw	254
  8360  008698  0101               	movlb	1	; () banked
  8361  00869A  259E               	addwf	_nextPacketPointer& (0+255),w,b
  8362  00869C  6E09               	movwf	ETH_Flush@newRXTail,c
  8363  00869E  0EFF               	movlw	255
  8364  0086A0  219F               	addwfc	(_nextPacketPointer+1)& (0+255),w,b
  8365  0086A2  6E0A               	movwf	ETH_Flush@newRXTail+1,c
  8366                           
  8367                           ;encX24J600_driver.c: 346: if (nextPacketPointer == 0x1600ul)
  8368  0086A4  0E16               	movlw	22
  8369  0086A6  199F               	xorwf	(_nextPacketPointer+1)& (0+255),w,b
  8370  0086A8  119E               	iorwf	_nextPacketPointer& (0+255),w,b
  8371  0086AA  E104               	bnz	l9716
  8372                           
  8373                           ; BSR set to: 1
  8374                           ;encX24J600_driver.c: 347: newRXTail = 0x6000ul - 2;
  8375  0086AC  0E5F               	movlw	95
  8376  0086AE  6E0A               	movwf	ETH_Flush@newRXTail+1,c
  8377  0086B0  0EFE               	movlw	254
  8378  0086B2  6E09               	movwf	ETH_Flush@newRXTail,c
  8379  0086B4                     l9716:
  8380                           
  8381                           ; BSR set to: 1
  8382                           ;encX24J600_driver.c: 350: ETH_SetPktDec();
  8383  0086B4  ECFB  F045         	call	_ETH_SetPktDec	;wreg free
  8384                           
  8385                           ;encX24J600_driver.c: 351: ethData.pktReady = 0;
  8386  0086B8  0101               	movlb	1	; () banked
  8387  0086BA  9383               	bcf	_ethData& (0+255),1,b	;volatile
  8388                           
  8389                           ; BSR set to: 1
  8390                           ;encX24J600_driver.c: 354: ENCx24_Write(XJ600_ERXTAILL, newRXTail);
  8391  0086BC  C009  F005         	movff	ETH_Flush@newRXTail,ENCx24_Write@data
  8392  0086C0  C00A  F006         	movff	ETH_Flush@newRXTail+1,ENCx24_Write@data+1
  8393  0086C4  0E06               	movlw	6
  8394  0086C6  EF72  F042         	goto	_ENCx24_Write
  8395  0086CA                     __end_of_ETH_Flush:
  8396                           	opt stack 0
  8397                           tosu	equ	0xFFF
  8398                           tosh	equ	0xFFE
  8399                           tosl	equ	0xFFD
  8400                           pclath	equ	0xFFA
  8401                           tblptru	equ	0xFF8
  8402                           tblptrh	equ	0xFF7
  8403                           tblptrl	equ	0xFF6
  8404                           tablat	equ	0xFF5
  8405                           prodh	equ	0xFF4
  8406                           prodl	equ	0xFF3
  8407                           intcon	equ	0xFF2
  8408                           intcon2	equ	0xFF1
  8409                           indf0	equ	0xFEF
  8410                           postinc0	equ	0xFEE
  8411                           fsr0h	equ	0xFEA
  8412                           fsr0l	equ	0xFE9
  8413                           wreg	equ	0xFE8
  8414                           postinc1	equ	0xFE6
  8415                           fsr1h	equ	0xFE2
  8416                           fsr1l	equ	0xFE1
  8417                           indf2	equ	0xFDF
  8418                           postinc2	equ	0xFDE
  8419                           postdec2	equ	0xFDD
  8420                           fsr2h	equ	0xFDA
  8421                           fsr2l	equ	0xFD9
  8422                           status	equ	0xFD8
  8423                           
  8424 ;; *************** function _ETH_SetPktDec *****************
  8425 ;; Defined at:
  8426 ;;		line 445 in file "../../TCPIP Library/ethernet_drivers/encX24j600_spi.c"
  8427 ;; Parameters:    Size  Location     Type
  8428 ;;		None
  8429 ;; Auto vars:     Size  Location     Type
  8430 ;;		None
  8431 ;; Return value:  Size  Location     Type
  8432 ;;		None               void
  8433 ;; Registers used:
  8434 ;;		wreg, status,2, cstack
  8435 ;; Tracked objects:
  8436 ;;		On entry : F/1
  8437 ;;		On exit  : 0/0
  8438 ;;		Unchanged: 0/0
  8439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8444 ;;Total ram usage:        0 bytes
  8445 ;; Hardware stack levels used:    1
  8446 ;; Hardware stack levels required when called:    4
  8447 ;; This function calls:
  8448 ;;		_SPI_ExchangeByte
  8449 ;; This function is called by:
  8450 ;;		_ETH_Flush
  8451 ;; This function uses a non-reentrant model
  8452 ;;
  8453                           
  8454                           	psect	text36
  8455  008BF6                     __ptext36:
  8456                           	opt stack 0
  8457  008BF6                     _ETH_SetPktDec:
  8458                           	opt stack 23
  8459                           
  8460                           ; BSR set to: 1
  8461                           
  8462                           ;incstack = 0
  8463                           ;encX24j600_spi.c: 448: do{LATB3 = 0;} while(0);
  8464  008BF6  968A               	bcf	3978,3,c	;volatile
  8465                           
  8466                           ; BSR set to: 1
  8467                           ;encX24j600_spi.c: 449: SPI_ExchangeByte(setpktdec_inst);
  8468  008BF8  0ECC               	movlw	204
  8469  008BFA  ECEE  F045         	call	_SPI_ExchangeByte
  8470  008BFE  868A               	bsf	3978,3,c	;volatile
  8471  008C00  0012               	return		;funcret
  8472  008C02                     __end_of_ETH_SetPktDec:
  8473                           	opt stack 0
  8474                           tosu	equ	0xFFF
  8475                           tosh	equ	0xFFE
  8476                           tosl	equ	0xFFD
  8477                           pclath	equ	0xFFA
  8478                           tblptru	equ	0xFF8
  8479                           tblptrh	equ	0xFF7
  8480                           tblptrl	equ	0xFF6
  8481                           tablat	equ	0xFF5
  8482                           prodh	equ	0xFF4
  8483                           prodl	equ	0xFF3
  8484                           intcon	equ	0xFF2
  8485                           intcon2	equ	0xFF1
  8486                           indf0	equ	0xFEF
  8487                           postinc0	equ	0xFEE
  8488                           fsr0h	equ	0xFEA
  8489                           fsr0l	equ	0xFE9
  8490                           wreg	equ	0xFE8
  8491                           postinc1	equ	0xFE6
  8492                           fsr1h	equ	0xFE2
  8493                           fsr1l	equ	0xFE1
  8494                           indf2	equ	0xFDF
  8495                           postinc2	equ	0xFDE
  8496                           postdec2	equ	0xFDD
  8497                           fsr2h	equ	0xFDA
  8498                           fsr2l	equ	0xFD9
  8499                           status	equ	0xFD8
  8500                           
  8501 ;; *************** function _ARPV4_Packet *****************
  8502 ;; Defined at:
  8503 ;;		line 97 in file "../../TCPIP Library/source/arpv4.c"
  8504 ;; Parameters:    Size  Location     Type
  8505 ;;		None
  8506 ;; Auto vars:     Size  Location     Type
  8507 ;;  x               1   53[COMRAM] unsigned char 
  8508 ;;  arpPtr          2   50[COMRAM] PTR struct .
  8509 ;;		 -> arpMap(104), 
  8510 ;;  x               1   52[COMRAM] unsigned char 
  8511 ;;  header         28   56[COMRAM] struct .
  8512 ;;  entryPointer    2   54[COMRAM] PTR struct .
  8513 ;;		 -> arpMap(104), 
  8514 ;;  length          2   46[COMRAM] unsigned int 
  8515 ;;  ret             1   49[COMRAM] enum E450
  8516 ;;  mergeFlag       1   48[COMRAM] unsigned char 
  8517 ;; Return value:  Size  Location     Type
  8518 ;;                  1    wreg      enum E450
  8519 ;; Registers used:
  8520 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8521 ;; Tracked objects:
  8522 ;;		On entry : 0/1
  8523 ;;		On exit  : 0/0
  8524 ;;		Unchanged: 0/0
  8525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8527 ;;      Locals:        38       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8528 ;;      Temps:         32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8529 ;;      Totals:        70       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8530 ;;Total ram usage:       70 bytes
  8531 ;; Hardware stack levels used:    1
  8532 ;; Hardware stack levels required when called:    7
  8533 ;; This function calls:
  8534 ;;		_ETH_GetMAC
  8535 ;;		_ETH_ReadBlock
  8536 ;;		_ETH_Send
  8537 ;;		_ETH_WriteBlock
  8538 ;;		_ETH_WriteStart
  8539 ;; This function is called by:
  8540 ;;		_Network_Read
  8541 ;; This function uses a non-reentrant model
  8542 ;;
  8543                           
  8544                           	psect	text37
  8545  005194                     __ptext37:
  8546                           	opt stack 0
  8547  005194                     _ARPV4_Packet:
  8548                           	opt stack 21
  8549                           
  8550                           ;arpv4.c: 107: length = ETH_ReadBlock((char*)&header,sizeof(arpHeader_t));
  8551                           
  8552                           ;incstack = 0
  8553  005194  0E39               	movlw	low ARPV4_Packet@header
  8554  005196  6E03               	movwf	ETH_ReadBlock@data,c
  8555  005198  6A04               	clrf	ETH_ReadBlock@data+1,c
  8556  00519A  6A06               	clrf	ETH_ReadBlock@length+1,c
  8557  00519C  0E1C               	movlw	28
  8558  00519E  6E05               	movwf	ETH_ReadBlock@length,c
  8559  0051A0  EC24  F03D         	call	_ETH_ReadBlock	;wreg free
  8560  0051A4  C003  F02F         	movff	?_ETH_ReadBlock,ARPV4_Packet@length
  8561  0051A8  C004  F030         	movff	?_ETH_ReadBlock+1,ARPV4_Packet@length+1
  8562                           
  8563                           ; BSR set to: 1
  8564                           ;arpv4.c: 108: if(length == sizeof(arpHeader_t))
  8565  0051AC  0E1C               	movlw	28
  8566  0051AE  182F               	xorwf	ARPV4_Packet@length,w,c
  8567  0051B0  1030               	iorwf	ARPV4_Packet@length+1,w,c
  8568  0051B2  A4D8               	btfss	status,2,c
  8569  0051B4  0012               	return	
  8570                           
  8571                           ; BSR set to: 1
  8572                           ;arpv4.c: 109: {
  8573                           ;arpv4.c: 111: mergeFlag = 0;
  8574  0051B6  6A31               	clrf	ARPV4_Packet@mergeFlag,c
  8575                           
  8576                           ; BSR set to: 1
  8577                           ;arpv4.c: 112: entryPointer = arpMap;
  8578  0051B8  0E00               	movlw	low _arpMap
  8579  0051BA  6E37               	movwf	ARPV4_Packet@entryPointer,c
  8580  0051BC  0E03               	movlw	high _arpMap
  8581  0051BE  6E38               	movwf	ARPV4_Packet@entryPointer+1,c
  8582                           
  8583                           ; BSR set to: 1
  8584                           ;arpv4.c: 114: for(uint8_t x=8; x > 0; x--)
  8585  0051C0  0E08               	movlw	8
  8586  0051C2  6E35               	movwf	ARPV4_Packet@x,c
  8587  0051C4                     l9738:
  8588                           
  8589                           ; BSR set to: 1
  8590                           ;arpv4.c: 115: {
  8591                           ;arpv4.c: 116: if( (header.spa == entryPointer->ipAddress) && (header.ptype == entryPoin
      +                          ter->protocolType) )
  8592  0051C4  EE20 F006          	lfsr	2,6
  8593  0051C8  5037               	movf	ARPV4_Packet@entryPointer,w,c
  8594  0051CA  26D9               	addwf	fsr2l,f,c
  8595  0051CC  5038               	movf	ARPV4_Packet@entryPointer+1,w,c
  8596  0051CE  22DA               	addwfc	fsr2h,f,c
  8597  0051D0  50DE               	movf	postinc2,w,c
  8598  0051D2  1847               	xorwf	ARPV4_Packet@header+14,w,c
  8599  0051D4  E12A               	bnz	l9748
  8600  0051D6  50DE               	movf	postinc2,w,c
  8601  0051D8  1848               	xorwf	ARPV4_Packet@header+15,w,c
  8602  0051DA  E127               	bnz	l9748
  8603  0051DC  50DE               	movf	postinc2,w,c
  8604  0051DE  1849               	xorwf	ARPV4_Packet@header+16,w,c
  8605  0051E0  E124               	bnz	l9748
  8606  0051E2  50DE               	movf	postinc2,w,c
  8607  0051E4  184A               	xorwf	ARPV4_Packet@header+17,w,c
  8608  0051E6  E121               	bnz	l9748
  8609                           
  8610                           ; BSR set to: 1
  8611  0051E8  EE20 F00A          	lfsr	2,10
  8612  0051EC  5037               	movf	ARPV4_Packet@entryPointer,w,c
  8613  0051EE  26D9               	addwf	fsr2l,f,c
  8614  0051F0  5038               	movf	ARPV4_Packet@entryPointer+1,w,c
  8615  0051F2  22DA               	addwfc	fsr2h,f,c
  8616  0051F4  50DE               	movf	postinc2,w,c
  8617  0051F6  183B               	xorwf	ARPV4_Packet@header+2,w,c
  8618  0051F8  E118               	bnz	l9748
  8619  0051FA  50DE               	movf	postinc2,w,c
  8620  0051FC  183C               	xorwf	ARPV4_Packet@header+3,w,c
  8621  0051FE  E115               	bnz	l9748
  8622                           
  8623                           ; BSR set to: 1
  8624                           ;arpv4.c: 117: {
  8625                           ;arpv4.c: 118: entryPointer->age = 0;
  8626  005200  EE20 F00C          	lfsr	2,12
  8627  005204  5037               	movf	ARPV4_Packet@entryPointer,w,c
  8628  005206  26D9               	addwf	fsr2l,f,c
  8629  005208  5038               	movf	ARPV4_Packet@entryPointer+1,w,c
  8630  00520A  22DA               	addwfc	fsr2h,f,c
  8631  00520C  6ADF               	clrf	indf2,c
  8632                           
  8633                           ; BSR set to: 1
  8634                           ;arpv4.c: 119: entryPointer->macAddress.s = header.sha.s;
  8635  00520E  EE20  F041         	lfsr	2,ARPV4_Packet@header+8
  8636  005212  C037  FFE1         	movff	ARPV4_Packet@entryPointer,fsr1l
  8637  005216  C038  FFE2         	movff	ARPV4_Packet@entryPointer+1,fsr1h
  8638  00521A  0E05               	movlw	5
  8639  00521C                     u15031:
  8640  00521C  CFDB FFE3          	movff	plusw2,plusw1
  8641  005220  06E8               	decf	wreg,f,c
  8642  005222  E2FC               	bc	u15031
  8643                           
  8644                           ; BSR set to: 1
  8645                           ;arpv4.c: 120: mergeFlag = 1;
  8646  005224  0E01               	movlw	1
  8647  005226  6E31               	movwf	ARPV4_Packet@mergeFlag,c
  8648                           
  8649                           ;arpv4.c: 121: break;
  8650  005228  D007               	goto	l9754
  8651  00522A                     l9748:
  8652                           
  8653                           ; BSR set to: 1
  8654                           ;arpv4.c: 122: }
  8655                           ;arpv4.c: 123: entryPointer++;
  8656  00522A  0E0D               	movlw	13
  8657  00522C  2637               	addwf	ARPV4_Packet@entryPointer,f,c
  8658  00522E  0E00               	movlw	0
  8659  005230  2238               	addwfc	ARPV4_Packet@entryPointer+1,f,c
  8660                           
  8661                           ; BSR set to: 1
  8662  005232  0635               	decf	ARPV4_Packet@x,f,c
  8663                           
  8664                           ; BSR set to: 1
  8665  005234  5035               	movf	ARPV4_Packet@x,w,c
  8666  005236  E1C6               	bnz	l9738
  8667  005238                     l9754:
  8668                           
  8669                           ; BSR set to: 1
  8670                           ;arpv4.c: 124: }
  8671                           ;arpv4.c: 126: if(ipv4Address && (ipv4Address == ((((uint32_t)header.tpa&(uint32_t)0xff0
      +                          00000) >> 24) | (((uint32_t)header.tpa&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)header.
      +                          tpa&(uint32_t)0x0000ff00) << 8) | (((uint32_t)header.tpa&(uint32_t)0x000000ff) << 24) ))
      +                          )
  8672  005238  518E               	movf	_ipv4Address& (0+255),w,b
  8673  00523A  118F               	iorwf	(_ipv4Address+1)& (0+255),w,b
  8674  00523C  1190               	iorwf	(_ipv4Address+2)& (0+255),w,b
  8675  00523E  1191               	iorwf	(_ipv4Address+3)& (0+255),w,b
  8676  005240  B4D8               	btfsc	status,2,c
  8677  005242  0012               	return	
  8678                           
  8679                           ; BSR set to: 1
  8680  005244  5051               	movf	ARPV4_Packet@header+24,w,c
  8681  005246  6E0F               	movwf	??_ARPV4_Packet& (0+255),c
  8682  005248  6A10               	clrf	(??_ARPV4_Packet+1)& (0+255),c
  8683  00524A  6A11               	clrf	(??_ARPV4_Packet+2)& (0+255),c
  8684  00524C  6A12               	clrf	(??_ARPV4_Packet+3)& (0+255),c
  8685  00524E  C00F  F012         	movff	??_ARPV4_Packet,??_ARPV4_Packet+3
  8686  005252  6A11               	clrf	??_ARPV4_Packet+2,c
  8687  005254  6A10               	clrf	??_ARPV4_Packet+1,c
  8688  005256  6A0F               	clrf	??_ARPV4_Packet,c
  8689  005258  EE20  F051         	lfsr	2,ARPV4_Packet@header+24
  8690  00525C  0E00               	movlw	0
  8691  00525E  14DE               	andwf	postinc2,w,c
  8692  005260  6E13               	movwf	(??_ARPV4_Packet+4)& (0+255),c
  8693  005262  0EFF               	movlw	255
  8694  005264  14DE               	andwf	postinc2,w,c
  8695  005266  6E14               	movwf	(??_ARPV4_Packet+5)& (0+255),c
  8696  005268  0E00               	movlw	0
  8697  00526A  14DE               	andwf	postinc2,w,c
  8698  00526C  6E15               	movwf	(??_ARPV4_Packet+6)& (0+255),c
  8699  00526E  0E00               	movlw	0
  8700  005270  14DE               	andwf	postinc2,w,c
  8701  005272  6E16               	movwf	(??_ARPV4_Packet+7)& (0+255),c
  8702  005274  C015  F016         	movff	??_ARPV4_Packet+6,??_ARPV4_Packet+7
  8703  005278  C014  F015         	movff	??_ARPV4_Packet+5,??_ARPV4_Packet+6
  8704  00527C  C013  F014         	movff	??_ARPV4_Packet+4,??_ARPV4_Packet+5
  8705  005280  6A13               	clrf	??_ARPV4_Packet+4,c
  8706  005282  C051  F017         	movff	ARPV4_Packet@header+24,??_ARPV4_Packet+8
  8707  005286  C052  F018         	movff	ARPV4_Packet@header+25,??_ARPV4_Packet+9
  8708  00528A  C053  F019         	movff	ARPV4_Packet@header+26,??_ARPV4_Packet+10
  8709  00528E  C054  F01A         	movff	ARPV4_Packet@header+27,??_ARPV4_Packet+11
  8710  005292  C018  F017         	movff	??_ARPV4_Packet+9,??_ARPV4_Packet+8
  8711  005296  C019  F018         	movff	??_ARPV4_Packet+10,??_ARPV4_Packet+9
  8712  00529A  C01A  F019         	movff	??_ARPV4_Packet+11,??_ARPV4_Packet+10
  8713  00529E  6A1A               	clrf	??_ARPV4_Packet+11,c
  8714  0052A0  6A1B               	clrf	(??_ARPV4_Packet+12)& (0+255),c
  8715  0052A2  5018               	movf	??_ARPV4_Packet+9,w,c
  8716  0052A4  6E1C               	movwf	(??_ARPV4_Packet+13)& (0+255),c
  8717  0052A6  0E00               	movlw	0
  8718  0052A8  6A1D               	clrf	(??_ARPV4_Packet+14)& (0+255),c
  8719  0052AA  6A1E               	clrf	(??_ARPV4_Packet+15)& (0+255),c
  8720  0052AC  EE20  F051         	lfsr	2,ARPV4_Packet@header+24
  8721  0052B0  14DE               	andwf	postinc2,w,c
  8722  0052B2  6E1F               	movwf	(??_ARPV4_Packet+16)& (0+255),c
  8723  0052B4  0E00               	movlw	0
  8724  0052B6  14DE               	andwf	postinc2,w,c
  8725  0052B8  6E20               	movwf	(??_ARPV4_Packet+17)& (0+255),c
  8726  0052BA  0E00               	movlw	0
  8727  0052BC  14DE               	andwf	postinc2,w,c
  8728  0052BE  6E21               	movwf	(??_ARPV4_Packet+18)& (0+255),c
  8729  0052C0  0EFF               	movlw	255
  8730  0052C2  14DE               	andwf	postinc2,w,c
  8731  0052C4  6E22               	movwf	(??_ARPV4_Packet+19)& (0+255),c
  8732  0052C6  0E19               	movlw	25
  8733  0052C8  D005               	goto	u15060
  8734  0052CA                     u15065:
  8735  0052CA  90D8               	bcf	status,0,c
  8736  0052CC  3222               	rrcf	??_ARPV4_Packet+19,f,c
  8737  0052CE  3221               	rrcf	??_ARPV4_Packet+18,f,c
  8738  0052D0  3220               	rrcf	??_ARPV4_Packet+17,f,c
  8739  0052D2  321F               	rrcf	??_ARPV4_Packet+16,f,c
  8740  0052D4                     u15060:
  8741  0052D4  2EE8               	decfsz	wreg,f,c
  8742  0052D6  D7F9               	goto	u15065
  8743  0052D8  501B               	movf	??_ARPV4_Packet+12,w,c
  8744  0052DA  101F               	iorwf	??_ARPV4_Packet+16,w,c
  8745  0052DC  6E23               	movwf	(??_ARPV4_Packet+20)& (0+255),c
  8746  0052DE  501C               	movf	??_ARPV4_Packet+13,w,c
  8747  0052E0  1020               	iorwf	??_ARPV4_Packet+17,w,c
  8748  0052E2  6E24               	movwf	(??_ARPV4_Packet+21)& (0+255),c
  8749  0052E4  501D               	movf	??_ARPV4_Packet+14,w,c
  8750  0052E6  1021               	iorwf	??_ARPV4_Packet+18,w,c
  8751  0052E8  6E25               	movwf	(??_ARPV4_Packet+22)& (0+255),c
  8752  0052EA  501E               	movf	??_ARPV4_Packet+15,w,c
  8753  0052EC  1022               	iorwf	??_ARPV4_Packet+19,w,c
  8754  0052EE  6E26               	movwf	(??_ARPV4_Packet+23)& (0+255),c
  8755  0052F0  5013               	movf	??_ARPV4_Packet+4,w,c
  8756  0052F2  1023               	iorwf	??_ARPV4_Packet+20,w,c
  8757  0052F4  6E27               	movwf	(??_ARPV4_Packet+24)& (0+255),c
  8758  0052F6  5014               	movf	??_ARPV4_Packet+5,w,c
  8759  0052F8  1024               	iorwf	??_ARPV4_Packet+21,w,c
  8760  0052FA  6E28               	movwf	(??_ARPV4_Packet+25)& (0+255),c
  8761  0052FC  5015               	movf	??_ARPV4_Packet+6,w,c
  8762  0052FE  1025               	iorwf	??_ARPV4_Packet+22,w,c
  8763  005300  6E29               	movwf	(??_ARPV4_Packet+26)& (0+255),c
  8764  005302  5016               	movf	??_ARPV4_Packet+7,w,c
  8765  005304  1026               	iorwf	??_ARPV4_Packet+23,w,c
  8766  005306  6E2A               	movwf	(??_ARPV4_Packet+27)& (0+255),c
  8767  005308  500F               	movf	??_ARPV4_Packet,w,c
  8768  00530A  1027               	iorwf	??_ARPV4_Packet+24,w,c
  8769  00530C  6E2B               	movwf	(??_ARPV4_Packet+28)& (0+255),c
  8770  00530E  5010               	movf	??_ARPV4_Packet+1,w,c
  8771  005310  1028               	iorwf	??_ARPV4_Packet+25,w,c
  8772  005312  6E2C               	movwf	(??_ARPV4_Packet+29)& (0+255),c
  8773  005314  5011               	movf	??_ARPV4_Packet+2,w,c
  8774  005316  1029               	iorwf	??_ARPV4_Packet+26,w,c
  8775  005318  6E2D               	movwf	(??_ARPV4_Packet+30)& (0+255),c
  8776  00531A  5012               	movf	??_ARPV4_Packet+3,w,c
  8777  00531C  102A               	iorwf	??_ARPV4_Packet+27,w,c
  8778  00531E  6E2E               	movwf	(??_ARPV4_Packet+31)& (0+255),c
  8779  005320  518E               	movf	_ipv4Address& (0+255),w,b
  8780  005322  182B               	xorwf	??_ARPV4_Packet+28,w,c
  8781  005324  E109               	bnz	u15071
  8782  005326  518F               	movf	(_ipv4Address+1)& (0+255),w,b
  8783  005328  182C               	xorwf	??_ARPV4_Packet+29,w,c
  8784  00532A  E106               	bnz	u15071
  8785  00532C  5190               	movf	(_ipv4Address+2)& (0+255),w,b
  8786  00532E  182D               	xorwf	??_ARPV4_Packet+30,w,c
  8787  005330  E103               	bnz	u15071
  8788  005332  5191               	movf	(_ipv4Address+3)& (0+255),w,b
  8789  005334  182E               	xorwf	??_ARPV4_Packet+31,w,c
  8790  005336  A4D8               	btfss	status,2,c
  8791  005338                     u15071:
  8792  005338  0012               	return	
  8793                           
  8794                           ; BSR set to: 1
  8795                           ;arpv4.c: 127: {
  8796                           ;arpv4.c: 128: if(!mergeFlag)
  8797  00533A  5031               	movf	ARPV4_Packet@mergeFlag,w,c
  8798  00533C  E001 D0BC          	bnz	l9784
  8799                           
  8800                           ; BSR set to: 1
  8801                           ;arpv4.c: 129: {
  8802                           ;arpv4.c: 131: entryPointer = arpMap;
  8803  005340  0E00               	movlw	low _arpMap
  8804  005342  6E37               	movwf	ARPV4_Packet@entryPointer,c
  8805  005344  0E03               	movlw	high _arpMap
  8806  005346  6E38               	movwf	ARPV4_Packet@entryPointer+1,c
  8807                           
  8808                           ;arpv4.c: 132: arpMap_t *arpPtr = arpMap;
  8809  005348  0E00               	movlw	low _arpMap
  8810  00534A  6E33               	movwf	ARPV4_Packet@arpPtr,c
  8811  00534C  0E03               	movlw	high _arpMap
  8812  00534E  6E34               	movwf	ARPV4_Packet@arpPtr+1,c
  8813                           
  8814                           ; BSR set to: 1
  8815                           ;arpv4.c: 133: for(uint8_t x=8; x !=0; x--)
  8816  005350  0E08               	movlw	8
  8817  005352  6E36               	movwf	ARPV4_Packet@x_2060,c
  8818  005354                     l9768:
  8819                           
  8820                           ; BSR set to: 1
  8821                           ;arpv4.c: 134: {
  8822                           ;arpv4.c: 135: if(entryPointer->age < arpPtr->age)
  8823  005354  EE20 F00C          	lfsr	2,12
  8824  005358  5033               	movf	ARPV4_Packet@arpPtr,w,c
  8825  00535A  26D9               	addwf	fsr2l,f,c
  8826  00535C  5034               	movf	ARPV4_Packet@arpPtr+1,w,c
  8827  00535E  22DA               	addwfc	fsr2h,f,c
  8828  005360  EE10 F00C          	lfsr	1,12
  8829  005364  5037               	movf	ARPV4_Packet@entryPointer,w,c
  8830  005366  26E1               	addwf	fsr1l,f,c
  8831  005368  5038               	movf	ARPV4_Packet@entryPointer+1,w,c
  8832  00536A  22E2               	addwfc	fsr1h,f,c
  8833  00536C  50DE               	movf	postinc2,w,c
  8834  00536E  5CE6               	subwf	postinc1,w,c
  8835  005370  E204               	bc	l779
  8836                           
  8837                           ; BSR set to: 1
  8838                           ;arpv4.c: 136: {
  8839                           ;arpv4.c: 137: entryPointer = arpPtr;
  8840  005372  C033  F037         	movff	ARPV4_Packet@arpPtr,ARPV4_Packet@entryPointer
  8841  005376  C034  F038         	movff	ARPV4_Packet@arpPtr+1,ARPV4_Packet@entryPointer+1
  8842  00537A                     l779:
  8843                           
  8844                           ; BSR set to: 1
  8845                           ;arpv4.c: 138: }
  8846                           ;arpv4.c: 140: arpPtr++;
  8847  00537A  0E0D               	movlw	13
  8848  00537C  2633               	addwf	ARPV4_Packet@arpPtr,f,c
  8849  00537E  0E00               	movlw	0
  8850  005380  2234               	addwfc	ARPV4_Packet@arpPtr+1,f,c
  8851                           
  8852                           ; BSR set to: 1
  8853  005382  0636               	decf	ARPV4_Packet@x_2060,f,c
  8854                           
  8855                           ; BSR set to: 1
  8856  005384  5036               	movf	ARPV4_Packet@x_2060,w,c
  8857  005386  E1E6               	bnz	l9768
  8858                           
  8859                           ; BSR set to: 1
  8860                           ;arpv4.c: 141: }
  8861                           ;arpv4.c: 144: entryPointer->age = 0;
  8862  005388  EE20 F00C          	lfsr	2,12
  8863  00538C  5037               	movf	ARPV4_Packet@entryPointer,w,c
  8864  00538E  26D9               	addwf	fsr2l,f,c
  8865  005390  5038               	movf	ARPV4_Packet@entryPointer+1,w,c
  8866  005392  22DA               	addwfc	fsr2h,f,c
  8867  005394  6ADF               	clrf	indf2,c
  8868                           
  8869                           ; BSR set to: 1
  8870                           ;arpv4.c: 145: entryPointer->macAddress.s = header.sha.s;
  8871  005396  EE20  F041         	lfsr	2,ARPV4_Packet@header+8
  8872  00539A  C037  FFE1         	movff	ARPV4_Packet@entryPointer,fsr1l
  8873  00539E  C038  FFE2         	movff	ARPV4_Packet@entryPointer+1,fsr1h
  8874  0053A2  0E05               	movlw	5
  8875  0053A4                     u15111:
  8876  0053A4  CFDB FFE3          	movff	plusw2,plusw1
  8877  0053A8  06E8               	decf	wreg,f,c
  8878  0053AA  E2FC               	bc	u15111
  8879                           
  8880                           ; BSR set to: 1
  8881                           ;arpv4.c: 146: entryPointer->ipAddress = ((((uint32_t)header.spa&(uint32_t)0xff000000) >
      +                          > 24) | (((uint32_t)header.spa&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)header.spa&(uin
      +                          t32_t)0x0000ff00) << 8) | (((uint32_t)header.spa&(uint32_t)0x000000ff) << 24) );
  8882  0053AC  5047               	movf	ARPV4_Packet@header+14,w,c
  8883  0053AE  6E0F               	movwf	??_ARPV4_Packet& (0+255),c
  8884  0053B0  6A10               	clrf	(??_ARPV4_Packet+1)& (0+255),c
  8885  0053B2  6A11               	clrf	(??_ARPV4_Packet+2)& (0+255),c
  8886  0053B4  6A12               	clrf	(??_ARPV4_Packet+3)& (0+255),c
  8887  0053B6  C00F  F012         	movff	??_ARPV4_Packet,??_ARPV4_Packet+3
  8888  0053BA  6A11               	clrf	??_ARPV4_Packet+2,c
  8889  0053BC  6A10               	clrf	??_ARPV4_Packet+1,c
  8890  0053BE  6A0F               	clrf	??_ARPV4_Packet,c
  8891  0053C0  EE20  F047         	lfsr	2,ARPV4_Packet@header+14
  8892  0053C4  0E00               	movlw	0
  8893  0053C6  14DE               	andwf	postinc2,w,c
  8894  0053C8  6E13               	movwf	(??_ARPV4_Packet+4)& (0+255),c
  8895  0053CA  0EFF               	movlw	255
  8896  0053CC  14DE               	andwf	postinc2,w,c
  8897  0053CE  6E14               	movwf	(??_ARPV4_Packet+5)& (0+255),c
  8898  0053D0  0E00               	movlw	0
  8899  0053D2  14DE               	andwf	postinc2,w,c
  8900  0053D4  6E15               	movwf	(??_ARPV4_Packet+6)& (0+255),c
  8901  0053D6  0E00               	movlw	0
  8902  0053D8  14DE               	andwf	postinc2,w,c
  8903  0053DA  6E16               	movwf	(??_ARPV4_Packet+7)& (0+255),c
  8904  0053DC  C015  F016         	movff	??_ARPV4_Packet+6,??_ARPV4_Packet+7
  8905  0053E0  C014  F015         	movff	??_ARPV4_Packet+5,??_ARPV4_Packet+6
  8906  0053E4  C013  F014         	movff	??_ARPV4_Packet+4,??_ARPV4_Packet+5
  8907  0053E8  6A13               	clrf	??_ARPV4_Packet+4,c
  8908  0053EA  C047  F017         	movff	ARPV4_Packet@header+14,??_ARPV4_Packet+8
  8909  0053EE  C048  F018         	movff	ARPV4_Packet@header+15,??_ARPV4_Packet+9
  8910  0053F2  C049  F019         	movff	ARPV4_Packet@header+16,??_ARPV4_Packet+10
  8911  0053F6  C04A  F01A         	movff	ARPV4_Packet@header+17,??_ARPV4_Packet+11
  8912  0053FA  C018  F017         	movff	??_ARPV4_Packet+9,??_ARPV4_Packet+8
  8913  0053FE  C019  F018         	movff	??_ARPV4_Packet+10,??_ARPV4_Packet+9
  8914  005402  C01A  F019         	movff	??_ARPV4_Packet+11,??_ARPV4_Packet+10
  8915  005406  6A1A               	clrf	??_ARPV4_Packet+11,c
  8916  005408  6A1B               	clrf	(??_ARPV4_Packet+12)& (0+255),c
  8917  00540A  5018               	movf	??_ARPV4_Packet+9,w,c
  8918  00540C  6E1C               	movwf	(??_ARPV4_Packet+13)& (0+255),c
  8919  00540E  0E00               	movlw	0
  8920  005410  6A1D               	clrf	(??_ARPV4_Packet+14)& (0+255),c
  8921  005412  6A1E               	clrf	(??_ARPV4_Packet+15)& (0+255),c
  8922  005414  EE20  F047         	lfsr	2,ARPV4_Packet@header+14
  8923  005418  14DE               	andwf	postinc2,w,c
  8924  00541A  6E1F               	movwf	(??_ARPV4_Packet+16)& (0+255),c
  8925  00541C  0E00               	movlw	0
  8926  00541E  14DE               	andwf	postinc2,w,c
  8927  005420  6E20               	movwf	(??_ARPV4_Packet+17)& (0+255),c
  8928  005422  0E00               	movlw	0
  8929  005424  14DE               	andwf	postinc2,w,c
  8930  005426  6E21               	movwf	(??_ARPV4_Packet+18)& (0+255),c
  8931  005428  0EFF               	movlw	255
  8932  00542A  14DE               	andwf	postinc2,w,c
  8933  00542C  6E22               	movwf	(??_ARPV4_Packet+19)& (0+255),c
  8934  00542E  0E19               	movlw	25
  8935  005430  D005               	goto	u15120
  8936  005432                     u15125:
  8937  005432  90D8               	bcf	status,0,c
  8938  005434  3222               	rrcf	??_ARPV4_Packet+19,f,c
  8939  005436  3221               	rrcf	??_ARPV4_Packet+18,f,c
  8940  005438  3220               	rrcf	??_ARPV4_Packet+17,f,c
  8941  00543A  321F               	rrcf	??_ARPV4_Packet+16,f,c
  8942  00543C                     u15120:
  8943  00543C  2EE8               	decfsz	wreg,f,c
  8944  00543E  D7F9               	goto	u15125
  8945  005440  501B               	movf	??_ARPV4_Packet+12,w,c
  8946  005442  101F               	iorwf	??_ARPV4_Packet+16,w,c
  8947  005444  6E23               	movwf	(??_ARPV4_Packet+20)& (0+255),c
  8948  005446  501C               	movf	??_ARPV4_Packet+13,w,c
  8949  005448  1020               	iorwf	??_ARPV4_Packet+17,w,c
  8950  00544A  6E24               	movwf	(??_ARPV4_Packet+21)& (0+255),c
  8951  00544C  501D               	movf	??_ARPV4_Packet+14,w,c
  8952  00544E  1021               	iorwf	??_ARPV4_Packet+18,w,c
  8953  005450  6E25               	movwf	(??_ARPV4_Packet+22)& (0+255),c
  8954  005452  501E               	movf	??_ARPV4_Packet+15,w,c
  8955  005454  1022               	iorwf	??_ARPV4_Packet+19,w,c
  8956  005456  6E26               	movwf	(??_ARPV4_Packet+23)& (0+255),c
  8957  005458  5013               	movf	??_ARPV4_Packet+4,w,c
  8958  00545A  1023               	iorwf	??_ARPV4_Packet+20,w,c
  8959  00545C  6E27               	movwf	(??_ARPV4_Packet+24)& (0+255),c
  8960  00545E  5014               	movf	??_ARPV4_Packet+5,w,c
  8961  005460  1024               	iorwf	??_ARPV4_Packet+21,w,c
  8962  005462  6E28               	movwf	(??_ARPV4_Packet+25)& (0+255),c
  8963  005464  5015               	movf	??_ARPV4_Packet+6,w,c
  8964  005466  1025               	iorwf	??_ARPV4_Packet+22,w,c
  8965  005468  6E29               	movwf	(??_ARPV4_Packet+26)& (0+255),c
  8966  00546A  5016               	movf	??_ARPV4_Packet+7,w,c
  8967  00546C  1026               	iorwf	??_ARPV4_Packet+23,w,c
  8968  00546E  6E2A               	movwf	(??_ARPV4_Packet+27)& (0+255),c
  8969  005470  500F               	movf	??_ARPV4_Packet,w,c
  8970  005472  1027               	iorwf	??_ARPV4_Packet+24,w,c
  8971  005474  6E2B               	movwf	(??_ARPV4_Packet+28)& (0+255),c
  8972  005476  5010               	movf	??_ARPV4_Packet+1,w,c
  8973  005478  1028               	iorwf	??_ARPV4_Packet+25,w,c
  8974  00547A  6E2C               	movwf	(??_ARPV4_Packet+29)& (0+255),c
  8975  00547C  5011               	movf	??_ARPV4_Packet+2,w,c
  8976  00547E  1029               	iorwf	??_ARPV4_Packet+26,w,c
  8977  005480  6E2D               	movwf	(??_ARPV4_Packet+30)& (0+255),c
  8978  005482  5012               	movf	??_ARPV4_Packet+3,w,c
  8979  005484  102A               	iorwf	??_ARPV4_Packet+27,w,c
  8980  005486  6E2E               	movwf	(??_ARPV4_Packet+31)& (0+255),c
  8981  005488  EE20 F006          	lfsr	2,6
  8982  00548C  5037               	movf	ARPV4_Packet@entryPointer,w,c
  8983  00548E  26D9               	addwf	fsr2l,f,c
  8984  005490  5038               	movf	ARPV4_Packet@entryPointer+1,w,c
  8985  005492  22DA               	addwfc	fsr2h,f,c
  8986  005494  C02B  FFDE         	movff	??_ARPV4_Packet+28,postinc2
  8987  005498  C02C  FFDE         	movff	??_ARPV4_Packet+29,postinc2
  8988  00549C  C02D  FFDE         	movff	??_ARPV4_Packet+30,postinc2
  8989  0054A0  C02E  FFDE         	movff	??_ARPV4_Packet+31,postinc2
  8990                           
  8991                           ; BSR set to: 1
  8992                           ;arpv4.c: 147: entryPointer->protocolType = header.ptype;
  8993  0054A4  EE20 F00A          	lfsr	2,10
  8994  0054A8  5037               	movf	ARPV4_Packet@entryPointer,w,c
  8995  0054AA  26D9               	addwf	fsr2l,f,c
  8996  0054AC  5038               	movf	ARPV4_Packet@entryPointer+1,w,c
  8997  0054AE  22DA               	addwfc	fsr2h,f,c
  8998  0054B0  C03B  FFDE         	movff	ARPV4_Packet@header+2,postinc2
  8999  0054B4  C03C  FFDD         	movff	ARPV4_Packet@header+3,postdec2
  9000  0054B8                     l9784:
  9001                           
  9002                           ; BSR set to: 1
  9003                           ;arpv4.c: 148: }
  9004                           ;arpv4.c: 149: if(header.oper == ((((uint16_t)1 & (uint16_t)0xFF00) >> 8) | (((uint16_t)
      +                          1 & (uint16_t)0x00FF) << 8)))
  9005  0054B8  0440               	decf	ARPV4_Packet@header+7,w,c
  9006  0054BA  103F               	iorwf	ARPV4_Packet@header+6,w,c
  9007  0054BC  A4D8               	btfss	status,2,c
  9008  0054BE  0012               	return	
  9009                           
  9010                           ; BSR set to: 1
  9011                           ;arpv4.c: 150: {
  9012                           ;arpv4.c: 151: ret = ETH_WriteStart(&header.sha ,0x0806);
  9013  0054C0  0E41               	movlw	low (ARPV4_Packet@header+8)
  9014  0054C2  6E0B               	movwf	ETH_WriteStart@destMAC,c
  9015  0054C4  6A0C               	clrf	ETH_WriteStart@destMAC+1,c
  9016  0054C6  0E08               	movlw	8
  9017  0054C8  6E0E               	movwf	ETH_WriteStart@type+1,c
  9018  0054CA  0E06               	movlw	6
  9019  0054CC  6E0D               	movwf	ETH_WriteStart@type,c
  9020  0054CE  EC60  F040         	call	_ETH_WriteStart	;wreg free
  9021  0054D2  6E32               	movwf	ARPV4_Packet@ret,c
  9022                           
  9023                           ;arpv4.c: 152: if(ret == SUCCESS)
  9024  0054D4  0432               	decf	ARPV4_Packet@ret,w,c
  9025  0054D6  A4D8               	btfss	status,2,c
  9026  0054D8  0012               	return	
  9027                           
  9028                           ;arpv4.c: 153: {
  9029                           ;arpv4.c: 155: header.tha.s = header.sha.s;
  9030  0054DA  EE20  F041         	lfsr	2,ARPV4_Packet@header+8
  9031  0054DE  EE10  F04B         	lfsr	1,ARPV4_Packet@header+18
  9032  0054E2  0E05               	movlw	5
  9033  0054E4                     u15151:
  9034  0054E4  CFDB FFE3          	movff	plusw2,plusw1
  9035  0054E8  06E8               	decf	wreg,f,c
  9036  0054EA  E2FC               	bc	u15151
  9037                           
  9038                           ;arpv4.c: 156: ETH_GetMAC((char*)&header.sha.s);
  9039  0054EC  0E41               	movlw	low (ARPV4_Packet@header+8)
  9040  0054EE  6E08               	movwf	ETH_GetMAC@macAddr,c
  9041  0054F0  6A09               	clrf	ETH_GetMAC@macAddr+1,c
  9042  0054F2  ECC8  F03E         	call	_ETH_GetMAC	;wreg free
  9043                           
  9044                           ;arpv4.c: 157: header.tpa = header.spa;
  9045  0054F6  C047  F051         	movff	ARPV4_Packet@header+14,ARPV4_Packet@header+24
  9046  0054FA  C048  F052         	movff	ARPV4_Packet@header+15,ARPV4_Packet@header+25
  9047  0054FE  C049  F053         	movff	ARPV4_Packet@header+16,ARPV4_Packet@header+26
  9048  005502  C04A  F054         	movff	ARPV4_Packet@header+17,ARPV4_Packet@header+27
  9049                           
  9050                           ;arpv4.c: 158: header.spa = ((((uint32_t)ipv4Address&(uint32_t)0xff000000) >> 24) | (((u
      +                          int32_t)ipv4Address&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)ipv4Address&(uint32_t)0x00
      +                          00ff00) << 8) | (((uint32_t)ipv4Address&(uint32_t)0x000000ff) << 24) );
  9051  005506  0101               	movlb	1	; () banked
  9052  005508  518E               	movf	_ipv4Address& (0+255),w,b
  9053  00550A  6E0F               	movwf	??_ARPV4_Packet& (0+255),c
  9054  00550C  6A10               	clrf	(??_ARPV4_Packet+1)& (0+255),c
  9055  00550E  6A11               	clrf	(??_ARPV4_Packet+2)& (0+255),c
  9056  005510  6A12               	clrf	(??_ARPV4_Packet+3)& (0+255),c
  9057  005512  C00F  F012         	movff	??_ARPV4_Packet,??_ARPV4_Packet+3
  9058  005516  6A11               	clrf	??_ARPV4_Packet+2,c
  9059  005518  6A10               	clrf	??_ARPV4_Packet+1,c
  9060  00551A  6A0F               	clrf	??_ARPV4_Packet,c
  9061  00551C  6A13               	clrf	(??_ARPV4_Packet+4)& (0+255),c
  9062  00551E  518F               	movf	(_ipv4Address+1)& (0+255),w,b
  9063  005520  6E14               	movwf	(??_ARPV4_Packet+5)& (0+255),c
  9064  005522  6A15               	clrf	(??_ARPV4_Packet+6)& (0+255),c
  9065  005524  6A16               	clrf	(??_ARPV4_Packet+7)& (0+255),c
  9066  005526  C015  F016         	movff	??_ARPV4_Packet+6,??_ARPV4_Packet+7
  9067  00552A  C014  F015         	movff	??_ARPV4_Packet+5,??_ARPV4_Packet+6
  9068  00552E  C013  F014         	movff	??_ARPV4_Packet+4,??_ARPV4_Packet+5
  9069  005532  6A13               	clrf	??_ARPV4_Packet+4,c
  9070  005534  6A17               	clrf	(??_ARPV4_Packet+8)& (0+255),c
  9071  005536  5190               	movf	(_ipv4Address+2)& (0+255),w,b
  9072  005538  6E18               	movwf	(??_ARPV4_Packet+9)& (0+255),c
  9073  00553A  6A19               	clrf	(??_ARPV4_Packet+10)& (0+255),c
  9074  00553C  5017               	movf	??_ARPV4_Packet+8,w,c
  9075  00553E  6E1A               	movwf	(??_ARPV4_Packet+11)& (0+255),c
  9076  005540  5018               	movf	??_ARPV4_Packet+9,w,c
  9077  005542  6E1B               	movwf	(??_ARPV4_Packet+12)& (0+255),c
  9078  005544  5019               	movf	??_ARPV4_Packet+10,w,c
  9079  005546  6E1C               	movwf	(??_ARPV4_Packet+13)& (0+255),c
  9080  005548  6A1D               	clrf	(??_ARPV4_Packet+14)& (0+255),c
  9081  00554A  6A1E               	clrf	(??_ARPV4_Packet+15)& (0+255),c
  9082  00554C  6A1F               	clrf	(??_ARPV4_Packet+16)& (0+255),c
  9083  00554E  6A20               	clrf	(??_ARPV4_Packet+17)& (0+255),c
  9084  005550  5191               	movf	(_ipv4Address+3)& (0+255),w,b
  9085  005552  6E21               	movwf	(??_ARPV4_Packet+18)& (0+255),c
  9086  005554  0E19               	movlw	25
  9087  005556  D005               	goto	u15160
  9088  005558                     u15165:
  9089  005558  90D8               	bcf	status,0,c
  9090  00555A  3221               	rrcf	??_ARPV4_Packet+18,f,c
  9091  00555C  3220               	rrcf	??_ARPV4_Packet+17,f,c
  9092  00555E  321F               	rrcf	??_ARPV4_Packet+16,f,c
  9093  005560  321E               	rrcf	??_ARPV4_Packet+15,f,c
  9094  005562                     u15160:
  9095  005562  2EE8               	decfsz	wreg,f,c
  9096  005564  D7F9               	goto	u15165
  9097  005566  501A               	movf	??_ARPV4_Packet+11,w,c
  9098  005568  101E               	iorwf	??_ARPV4_Packet+15,w,c
  9099  00556A  6E22               	movwf	(??_ARPV4_Packet+19)& (0+255),c
  9100  00556C  501B               	movf	??_ARPV4_Packet+12,w,c
  9101  00556E  101F               	iorwf	??_ARPV4_Packet+16,w,c
  9102  005570  6E23               	movwf	(??_ARPV4_Packet+20)& (0+255),c
  9103  005572  501C               	movf	??_ARPV4_Packet+13,w,c
  9104  005574  1020               	iorwf	??_ARPV4_Packet+17,w,c
  9105  005576  6E24               	movwf	(??_ARPV4_Packet+21)& (0+255),c
  9106  005578  501D               	movf	??_ARPV4_Packet+14,w,c
  9107  00557A  1021               	iorwf	??_ARPV4_Packet+18,w,c
  9108  00557C  6E25               	movwf	(??_ARPV4_Packet+22)& (0+255),c
  9109  00557E  5013               	movf	??_ARPV4_Packet+4,w,c
  9110  005580  1022               	iorwf	??_ARPV4_Packet+19,w,c
  9111  005582  6E26               	movwf	(??_ARPV4_Packet+23)& (0+255),c
  9112  005584  5014               	movf	??_ARPV4_Packet+5,w,c
  9113  005586  1023               	iorwf	??_ARPV4_Packet+20,w,c
  9114  005588  6E27               	movwf	(??_ARPV4_Packet+24)& (0+255),c
  9115  00558A  5015               	movf	??_ARPV4_Packet+6,w,c
  9116  00558C  1024               	iorwf	??_ARPV4_Packet+21,w,c
  9117  00558E  6E28               	movwf	(??_ARPV4_Packet+25)& (0+255),c
  9118  005590  5016               	movf	??_ARPV4_Packet+7,w,c
  9119  005592  1025               	iorwf	??_ARPV4_Packet+22,w,c
  9120  005594  6E29               	movwf	(??_ARPV4_Packet+26)& (0+255),c
  9121  005596  500F               	movf	??_ARPV4_Packet,w,c
  9122  005598  1026               	iorwf	??_ARPV4_Packet+23,w,c
  9123  00559A  6E47               	movwf	ARPV4_Packet@header+14,c
  9124  00559C  5010               	movf	??_ARPV4_Packet+1,w,c
  9125  00559E  1027               	iorwf	??_ARPV4_Packet+24,w,c
  9126  0055A0  6E48               	movwf	ARPV4_Packet@header+15,c
  9127  0055A2  5011               	movf	??_ARPV4_Packet+2,w,c
  9128  0055A4  1028               	iorwf	??_ARPV4_Packet+25,w,c
  9129  0055A6  6E49               	movwf	ARPV4_Packet@header+16,c
  9130  0055A8  5012               	movf	??_ARPV4_Packet+3,w,c
  9131  0055AA  1029               	iorwf	??_ARPV4_Packet+26,w,c
  9132  0055AC  6E4A               	movwf	ARPV4_Packet@header+17,c
  9133                           
  9134                           ; BSR set to: 1
  9135                           ;arpv4.c: 159: header.oper = ((((uint16_t)2 & (uint16_t)0xFF00) >> 8) | (((uint16_t)2 & 
      +                          (uint16_t)0x00FF) << 8));
  9136  0055AE  0E02               	movlw	2
  9137  0055B0  6E40               	movwf	ARPV4_Packet@header+7,c
  9138  0055B2  6A3F               	clrf	ARPV4_Packet@header+6,c
  9139                           
  9140                           ; BSR set to: 1
  9141                           ;arpv4.c: 160: ETH_WriteBlock((char*)&header,sizeof(header));
  9142  0055B4  0E39               	movlw	low ARPV4_Packet@header
  9143  0055B6  6E03               	movwf	ETH_WriteBlock@data,c
  9144  0055B8  6A04               	clrf	ETH_WriteBlock@data+1,c
  9145  0055BA  6A06               	clrf	ETH_WriteBlock@len+1,c
  9146  0055BC  0E1C               	movlw	28
  9147  0055BE  6E05               	movwf	ETH_WriteBlock@len,c
  9148  0055C0  ECDF  F03F         	call	_ETH_WriteBlock	;wreg free
  9149  0055C4  EFF2  F044         	goto	_ETH_Send	;wreg free
  9150  0055C8                     __end_of_ARPV4_Packet:
  9151                           	opt stack 0
  9152                           tosu	equ	0xFFF
  9153                           tosh	equ	0xFFE
  9154                           tosl	equ	0xFFD
  9155                           pclath	equ	0xFFA
  9156                           tblptru	equ	0xFF8
  9157                           tblptrh	equ	0xFF7
  9158                           tblptrl	equ	0xFF6
  9159                           tablat	equ	0xFF5
  9160                           prodh	equ	0xFF4
  9161                           prodl	equ	0xFF3
  9162                           intcon	equ	0xFF2
  9163                           intcon2	equ	0xFF1
  9164                           indf0	equ	0xFEF
  9165                           postinc0	equ	0xFEE
  9166                           fsr0h	equ	0xFEA
  9167                           fsr0l	equ	0xFE9
  9168                           wreg	equ	0xFE8
  9169                           postinc1	equ	0xFE6
  9170                           plusw1	equ	0xFE3
  9171                           fsr1h	equ	0xFE2
  9172                           fsr1l	equ	0xFE1
  9173                           indf2	equ	0xFDF
  9174                           postinc2	equ	0xFDE
  9175                           postdec2	equ	0xFDD
  9176                           plusw2	equ	0xFDB
  9177                           fsr2h	equ	0xFDA
  9178                           fsr2l	equ	0xFD9
  9179                           status	equ	0xFD8
  9180                           
  9181 ;; *************** function _ETH_EventHandler *****************
  9182 ;; Defined at:
  9183 ;;		line 215 in file "../../TCPIP Library/ethernet_drivers/encX24J600_driver.c"
  9184 ;; Parameters:    Size  Location     Type
  9185 ;;		None
  9186 ;; Auto vars:     Size  Location     Type
  9187 ;;  eirVal          2   16[COMRAM] unsigned int 
  9188 ;;  estatVal        2   14[COMRAM] unsigned int 
  9189 ;;  macon2Val       2   12[COMRAM] unsigned int 
  9190 ;;  mabbipgVal      2   10[COMRAM] unsigned int 
  9191 ;; Return value:  Size  Location     Type
  9192 ;;		None               void
  9193 ;; Registers used:
  9194 ;;		wreg, status,2, status,0, cstack
  9195 ;; Tracked objects:
  9196 ;;		On entry : 0/2
  9197 ;;		On exit  : 0/0
  9198 ;;		Unchanged: 0/0
  9199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9201 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9203 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9204 ;;Total ram usage:        8 bytes
  9205 ;; Hardware stack levels used:    1
  9206 ;; Hardware stack levels required when called:    7
  9207 ;; This function calls:
  9208 ;;		_ENCx24_BFC
  9209 ;;		_ENCx24_Read
  9210 ;;		_ENCx24_Write
  9211 ;;		_ETH_ResetReceiver
  9212 ;; This function is called by:
  9213 ;;		_Network_Manage
  9214 ;; This function uses a non-reentrant model
  9215 ;;
  9216                           
  9217                           	psect	text38
  9218  007866                     __ptext38:
  9219                           	opt stack 0
  9220  007866                     _ETH_EventHandler:
  9221                           	opt stack 22
  9222                           
  9223                           ;encX24J600_driver.c: 217: uint16_t eirVal,estatVal,mabbipgVal,macon2Val;
  9224                           ;encX24J600_driver.c: 219: estatVal = ENCx24_Read(XJ600_ESTATL);
  9225                           
  9226                           ;incstack = 0
  9227  007866  0EFA               	movlw	250
  9228  007868  ECC0  F041         	call	_ENCx24_Read
  9229  00786C  C005  F00F         	movff	?_ENCx24_Read,ETH_EventHandler@estatVal
  9230  007870  C006  F010         	movff	?_ENCx24_Read+1,ETH_EventHandler@estatVal+1
  9231                           
  9232                           ;encX24J600_driver.c: 222: eirVal = ENCx24_Read(XJ600_EIRL);
  9233  007874  0EFC               	movlw	252
  9234  007876  ECC0  F041         	call	_ENCx24_Read
  9235  00787A  C005  F011         	movff	?_ENCx24_Read,ETH_EventHandler@eirVal
  9236  00787E  C006  F012         	movff	?_ENCx24_Read+1,ETH_EventHandler@eirVal+1
  9237                           
  9238                           ;encX24J600_driver.c: 224: if (eirVal !=0 )
  9239  007882  5011               	movf	ETH_EventHandler@eirVal,w,c
  9240  007884  1012               	iorwf	ETH_EventHandler@eirVal+1,w,c
  9241  007886  B4D8               	btfsc	status,2,c
  9242  007888  0012               	return	
  9243                           
  9244                           ;encX24J600_driver.c: 225: {
  9245                           ;encX24J600_driver.c: 226: if (eirVal & 0x0800)
  9246  00788A  A612               	btfss	ETH_EventHandler@eirVal+1,3,c
  9247  00788C  D029               	goto	l10086
  9248                           
  9249                           ;encX24J600_driver.c: 227: {
  9250                           ;encX24J600_driver.c: 228: ethData.linkChange = 1;
  9251  00788E  0101               	movlb	1	; () banked
  9252  007890  8983               	bsf	_ethData& (0+255),4,b	;volatile
  9253                           
  9254                           ; BSR set to: 1
  9255                           ;encX24J600_driver.c: 229: macon2Val = ENCx24_Read(XJ600_MACON2L);
  9256  007892  0E42               	movlw	66
  9257  007894  ECC0  F041         	call	_ENCx24_Read
  9258  007898  C005  F00D         	movff	?_ENCx24_Read,ETH_EventHandler@macon2Val
  9259  00789C  C006  F00E         	movff	?_ENCx24_Read+1,ETH_EventHandler@macon2Val+1
  9260                           
  9261                           ;encX24J600_driver.c: 231: ethData.up = 0;
  9262  0078A0  0101               	movlb	1	; () banked
  9263  0078A2  9583               	bcf	_ethData& (0+255),2,b	;volatile
  9264                           
  9265                           ; BSR set to: 1
  9266                           ;encX24J600_driver.c: 232: if(estatVal & 0x0100)
  9267  0078A4  B010               	btfsc	ETH_EventHandler@estatVal+1,0,c
  9268                           
  9269                           ; BSR set to: 1
  9270                           ;encX24J600_driver.c: 233: {
  9271                           ;encX24J600_driver.c: 234: ethData.up = 1;
  9272  0078A6  8583               	bsf	_ethData& (0+255),2,b	;volatile
  9273                           
  9274                           ; BSR set to: 1
  9275                           ;encX24J600_driver.c: 235: }
  9276                           ;encX24J600_driver.c: 238: if (estatVal & 0x0400)
  9277  0078A8  A410               	btfss	ETH_EventHandler@estatVal+1,2,c
  9278  0078AA  D005               	goto	l10078
  9279                           
  9280                           ; BSR set to: 1
  9281                           ;encX24J600_driver.c: 239: {
  9282                           ;encX24J600_driver.c: 241: mabbipgVal = 0x15;
  9283  0078AC  6A0C               	clrf	ETH_EventHandler@mabbipgVal+1,c
  9284  0078AE  0E15               	movlw	21
  9285  0078B0  6E0B               	movwf	ETH_EventHandler@mabbipgVal,c
  9286                           
  9287                           ; BSR set to: 1
  9288                           ;encX24J600_driver.c: 242: macon2Val |= 0x0001;
  9289  0078B2  800D               	bsf	ETH_EventHandler@macon2Val,0,c
  9290                           
  9291                           ;encX24J600_driver.c: 243: }
  9292  0078B4  D007               	goto	l10082
  9293  0078B6                     l10078:
  9294                           
  9295                           ; BSR set to: 1
  9296                           ;encX24J600_driver.c: 244: else
  9297                           ;encX24J600_driver.c: 245: {
  9298                           ;encX24J600_driver.c: 247: mabbipgVal = 0x12;
  9299  0078B6  6A0C               	clrf	ETH_EventHandler@mabbipgVal+1,c
  9300  0078B8  0E12               	movlw	18
  9301  0078BA  6E0B               	movwf	ETH_EventHandler@mabbipgVal,c
  9302                           
  9303                           ; BSR set to: 1
  9304                           ;encX24J600_driver.c: 248: macon2Val |= 0xFFFE;
  9305  0078BC  0EFE               	movlw	254
  9306  0078BE  120D               	iorwf	ETH_EventHandler@macon2Val,f,c
  9307  0078C0  0EFF               	movlw	255
  9308  0078C2  120E               	iorwf	ETH_EventHandler@macon2Val+1,f,c
  9309  0078C4                     l10082:
  9310                           
  9311                           ; BSR set to: 1
  9312                           ;encX24J600_driver.c: 249: }
  9313                           ;encX24J600_driver.c: 250: ENCx24_Write(XJ600_MABBIPGL,mabbipgVal);
  9314  0078C4  C00B  F005         	movff	ETH_EventHandler@mabbipgVal,ENCx24_Write@data
  9315  0078C8  C00C  F006         	movff	ETH_EventHandler@mabbipgVal+1,ENCx24_Write@data+1
  9316  0078CC  0E44               	movlw	68
  9317  0078CE  EC72  F042         	call	_ENCx24_Write
  9318                           
  9319                           ;encX24J600_driver.c: 251: ENCx24_Write(XJ600_MACON2L, macon2Val);
  9320  0078D2  C00D  F005         	movff	ETH_EventHandler@macon2Val,ENCx24_Write@data
  9321  0078D6  C00E  F006         	movff	ETH_EventHandler@macon2Val+1,ENCx24_Write@data+1
  9322  0078DA  0E42               	movlw	66
  9323  0078DC  EC72  F042         	call	_ENCx24_Write
  9324  0078E0                     l10086:
  9325                           
  9326                           ;encX24J600_driver.c: 252: }
  9327                           ;encX24J600_driver.c: 253: if(eirVal & 0x0008)
  9328  0078E0  A611               	btfss	ETH_EventHandler@eirVal,3,c
  9329  0078E2  D002               	goto	l448
  9330                           
  9331                           ;encX24J600_driver.c: 254: {
  9332                           ;encX24J600_driver.c: 255: ethData.bufferBusy = 0;
  9333  0078E4  0101               	movlb	1	; () banked
  9334  0078E6  9B83               	bcf	_ethData& (0+255),5,b	;volatile
  9335  0078E8                     l448:
  9336                           
  9337                           ;encX24J600_driver.c: 256: }
  9338                           ;encX24J600_driver.c: 257: if((eirVal & 0x0002 )|| (eirVal & 0x0001))
  9339  0078E8  A211               	btfss	ETH_EventHandler@eirVal,1,c
  9340  0078EA  B011               	btfsc	ETH_EventHandler@eirVal,0,c
  9341                           
  9342                           ;encX24J600_driver.c: 258: {
  9343                           ;encX24J600_driver.c: 259: ETH_ResetReceiver();
  9344  0078EC  ECB4  F040         	call	_ETH_ResetReceiver	;wreg free
  9345                           
  9346                           ;encX24J600_driver.c: 260: }
  9347                           ;encX24J600_driver.c: 262: if(estatVal & 0x00FF || eirVal & 0x0040)
  9348  0078F0  500F               	movf	ETH_EventHandler@estatVal,w,c
  9349  0078F2  E102               	bnz	l454
  9350  0078F4  AC11               	btfss	ETH_EventHandler@eirVal,6,c
  9351  0078F6  D003               	goto	l10100
  9352  0078F8                     l454:
  9353                           
  9354                           ;encX24J600_driver.c: 263: {
  9355                           ;encX24J600_driver.c: 264: if(ethData.pktReady == 0)
  9356  0078F8  0101               	movlb	1	; () banked
  9357  0078FA  A383               	btfss	_ethData& (0+255),1,b	;volatile
  9358                           
  9359                           ; BSR set to: 1
  9360                           ;encX24J600_driver.c: 265: {
  9361                           ;encX24J600_driver.c: 266: ethData.pktReady = 1;
  9362  0078FC  8383               	bsf	_ethData& (0+255),1,b	;volatile
  9363  0078FE                     l10100:
  9364                           
  9365                           ;encX24J600_driver.c: 267: }
  9366                           ;encX24J600_driver.c: 268: }
  9367                           ;encX24J600_driver.c: 269: ENCx24_BFC(XJ600_EIRL,eirVal);
  9368  0078FE  C011  F005         	movff	ETH_EventHandler@eirVal,ENCx24_BFC@bitMask
  9369  007902  C012  F006         	movff	ETH_EventHandler@eirVal+1,ENCx24_BFC@bitMask+1
  9370  007906  0EFC               	movlw	252
  9371  007908  EFB3  F042         	goto	_ENCx24_BFC
  9372  00790C                     __end_of_ETH_EventHandler:
  9373                           	opt stack 0
  9374                           tosu	equ	0xFFF
  9375                           tosh	equ	0xFFE
  9376                           tosl	equ	0xFFD
  9377                           pclath	equ	0xFFA
  9378                           tblptru	equ	0xFF8
  9379                           tblptrh	equ	0xFF7
  9380                           tblptrl	equ	0xFF6
  9381                           tablat	equ	0xFF5
  9382                           prodh	equ	0xFF4
  9383                           prodl	equ	0xFF3
  9384                           intcon	equ	0xFF2
  9385                           intcon2	equ	0xFF1
  9386                           indf0	equ	0xFEF
  9387                           postinc0	equ	0xFEE
  9388                           fsr0h	equ	0xFEA
  9389                           fsr0l	equ	0xFE9
  9390                           wreg	equ	0xFE8
  9391                           postinc1	equ	0xFE6
  9392                           plusw1	equ	0xFE3
  9393                           fsr1h	equ	0xFE2
  9394                           fsr1l	equ	0xFE1
  9395                           indf2	equ	0xFDF
  9396                           postinc2	equ	0xFDE
  9397                           postdec2	equ	0xFDD
  9398                           plusw2	equ	0xFDB
  9399                           fsr2h	equ	0xFDA
  9400                           fsr2l	equ	0xFD9
  9401                           status	equ	0xFD8
  9402                           
  9403 ;; *************** function _ETH_ResetReceiver *****************
  9404 ;; Defined at:
  9405 ;;		line 302 in file "../../TCPIP Library/ethernet_drivers/encX24J600_driver.c"
  9406 ;; Parameters:    Size  Location     Type
  9407 ;;		None
  9408 ;; Auto vars:     Size  Location     Type
  9409 ;;		None
  9410 ;; Return value:  Size  Location     Type
  9411 ;;		None               void
  9412 ;; Registers used:
  9413 ;;		wreg, status,2, status,0, cstack
  9414 ;; Tracked objects:
  9415 ;;		On entry : 0/2
  9416 ;;		On exit  : 0/0
  9417 ;;		Unchanged: 0/0
  9418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9423 ;;Total ram usage:        0 bytes
  9424 ;; Hardware stack levels used:    1
  9425 ;; Hardware stack levels required when called:    6
  9426 ;; This function calls:
  9427 ;;		_ENCx24_BFC
  9428 ;;		_ENCx24_BFS
  9429 ;;		_ENCx24_Write
  9430 ;; This function is called by:
  9431 ;;		_ETH_EventHandler
  9432 ;; This function uses a non-reentrant model
  9433 ;;
  9434                           
  9435                           	psect	text39
  9436  008168                     __ptext39:
  9437                           	opt stack 0
  9438  008168                     _ETH_ResetReceiver:
  9439                           	opt stack 22
  9440                           
  9441                           ;encX24J600_driver.c: 304: ENCx24_BFS(XJ600_ECON2L, 0x0020);
  9442                           
  9443                           ;incstack = 0
  9444  008168  6A06               	clrf	ENCx24_BFS@bitMask+1,c
  9445  00816A  0E20               	movlw	32
  9446  00816C  6E05               	movwf	ENCx24_BFS@bitMask,c
  9447  00816E  0E6E               	movlw	110
  9448  008170  EC93  F042         	call	_ENCx24_BFS
  9449                           
  9450                           ;encX24J600_driver.c: 305: ENCx24_BFC(XJ600_ECON2L, 0x0020);
  9451  008174  6A06               	clrf	ENCx24_BFC@bitMask+1,c
  9452  008176  0E20               	movlw	32
  9453  008178  6E05               	movwf	ENCx24_BFC@bitMask,c
  9454  00817A  0E6E               	movlw	110
  9455  00817C  ECB3  F042         	call	_ENCx24_BFC
  9456                           
  9457                           ;encX24J600_driver.c: 307: ENCx24_BFC(XJ600_ECON1L, 0x0001);
  9458  008180  6A06               	clrf	ENCx24_BFC@bitMask+1,c
  9459  008182  0E01               	movlw	1
  9460  008184  6E05               	movwf	ENCx24_BFC@bitMask,c
  9461  008186  0EFE               	movlw	254
  9462  008188  ECB3  F042         	call	_ENCx24_BFC
  9463                           
  9464                           ;encX24J600_driver.c: 310: nextPacketPointer = 0x1600ul;
  9465  00818C  0E16               	movlw	22
  9466  00818E  0101               	movlb	1	; () banked
  9467  008190  6F9F               	movwf	(_nextPacketPointer+1)& (0+255),b
  9468  008192  6B9E               	clrf	_nextPacketPointer& (0+255),b
  9469                           
  9470                           ; BSR set to: 1
  9471                           ;encX24J600_driver.c: 313: ENCx24_Write(XJ600_ERXSTL, 0x1600ul);
  9472  008194  6E06               	movwf	ENCx24_Write@data+1,c
  9473  008196  6A05               	clrf	ENCx24_Write@data,c
  9474  008198  0E04               	movlw	4
  9475  00819A  EC72  F042         	call	_ENCx24_Write
  9476                           
  9477                           ;encX24J600_driver.c: 314: ENCx24_Write(XJ600_ERXTAILL, 0x6000ul - 2);
  9478  00819E  0E5F               	movlw	95
  9479  0081A0  6E06               	movwf	ENCx24_Write@data+1,c
  9480  0081A2  0EFE               	movlw	254
  9481  0081A4  6E05               	movwf	ENCx24_Write@data,c
  9482  0081A6  0E06               	movlw	6
  9483  0081A8  EC72  F042         	call	_ENCx24_Write
  9484                           
  9485                           ;encX24J600_driver.c: 317: ENCx24_BFS(XJ600_ECON1L, 0x0001);
  9486  0081AC  6A06               	clrf	ENCx24_BFS@bitMask+1,c
  9487  0081AE  0E01               	movlw	1
  9488  0081B0  6E05               	movwf	ENCx24_BFS@bitMask,c
  9489  0081B2  0EFE               	movlw	254
  9490  0081B4  EF93  F042         	goto	_ENCx24_BFS
  9491  0081B8                     __end_of_ETH_ResetReceiver:
  9492                           	opt stack 0
  9493                           tosu	equ	0xFFF
  9494                           tosh	equ	0xFFE
  9495                           tosl	equ	0xFFD
  9496                           pclath	equ	0xFFA
  9497                           tblptru	equ	0xFF8
  9498                           tblptrh	equ	0xFF7
  9499                           tblptrl	equ	0xFF6
  9500                           tablat	equ	0xFF5
  9501                           prodh	equ	0xFF4
  9502                           prodl	equ	0xFF3
  9503                           intcon	equ	0xFF2
  9504                           intcon2	equ	0xFF1
  9505                           indf0	equ	0xFEF
  9506                           postinc0	equ	0xFEE
  9507                           fsr0h	equ	0xFEA
  9508                           fsr0l	equ	0xFE9
  9509                           wreg	equ	0xFE8
  9510                           postinc1	equ	0xFE6
  9511                           plusw1	equ	0xFE3
  9512                           fsr1h	equ	0xFE2
  9513                           fsr1l	equ	0xFE1
  9514                           indf2	equ	0xFDF
  9515                           postinc2	equ	0xFDE
  9516                           postdec2	equ	0xFDD
  9517                           plusw2	equ	0xFDB
  9518                           fsr2h	equ	0xFDA
  9519                           fsr2l	equ	0xFD9
  9520                           status	equ	0xFD8
  9521                           
  9522 ;; *************** function _DHCP_Manage *****************
  9523 ;; Defined at:
  9524 ;;		line 130 in file "../../TCPIP Library/source/dhcp_client.c"
  9525 ;; Parameters:    Size  Location     Type
  9526 ;;		None
  9527 ;; Auto vars:     Size  Location     Type
  9528 ;;		None
  9529 ;; Return value:  Size  Location     Type
  9530 ;;		None               void
  9531 ;; Registers used:
  9532 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9533 ;; Tracked objects:
  9534 ;;		On entry : F/1
  9535 ;;		On exit  : E/0
  9536 ;;		Unchanged: 0/0
  9537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9542 ;;Total ram usage:        0 bytes
  9543 ;; Hardware stack levels used:    1
  9544 ;; Hardware stack levels required when called:   11
  9545 ;; This function calls:
  9546 ;;		_DHCP_Request
  9547 ;; This function is called by:
  9548 ;;		_Network_Manage
  9549 ;; This function uses a non-reentrant model
  9550 ;;
  9551                           
  9552                           	psect	text40
  9553  007B70                     __ptext40:
  9554                           	opt stack 0
  9555  007B70                     _DHCP_Manage:
  9556                           	opt stack 18
  9557                           
  9558                           ; BSR set to: 1
  9559                           ;dhcp_client.c: 132: if(ethData.linkChange)
  9560                           
  9561                           ;incstack = 0
  9562  007B70  A983               	btfss	_ethData& (0+255),4,b	;volatile
  9563  007B72  D018               	goto	l10144
  9564                           
  9565                           ; BSR set to: 1
  9566                           ;dhcp_client.c: 133: {
  9567                           ;dhcp_client.c: 134: if (clientState == BOUND && dhcpLeaseTime)
  9568  007B74  0E05               	movlw	5
  9569  007B76  185D               	xorwf	_clientState,w,c
  9570  007B78  E10E               	bnz	l10138
  9571                           
  9572                           ; BSR set to: 1
  9573  007B7A  518A               	movf	_dhcpLeaseTime& (0+255),w,b
  9574  007B7C  118B               	iorwf	(_dhcpLeaseTime+1)& (0+255),w,b
  9575  007B7E  118C               	iorwf	(_dhcpLeaseTime+2)& (0+255),w,b
  9576  007B80  118D               	iorwf	(_dhcpLeaseTime+3)& (0+255),w,b
  9577  007B82  E009               	bz	l10138
  9578                           
  9579                           ; BSR set to: 1
  9580                           ;dhcp_client.c: 135: {
  9581                           ;dhcp_client.c: 136: dhcpServerId = 0xFFFFFFFF;
  9582  007B84  0102               	movlb	2	; () banked
  9583  007B86  6926               	setf	_dhcpServerId& (0+255),b
  9584  007B88  6927               	setf	(_dhcpServerId+1)& (0+255),b
  9585  007B8A  6928               	setf	(_dhcpServerId+2)& (0+255),b
  9586  007B8C  6929               	setf	(_dhcpServerId+3)& (0+255),b
  9587                           
  9588                           ; BSR set to: 2
  9589                           ;dhcp_client.c: 137: DHCP_Request(DHCP_REQUEST);
  9590  007B8E  0E03               	movlw	3
  9591  007B90  ECE5  F033         	call	_DHCP_Request
  9592                           
  9593                           ;dhcp_client.c: 138: }
  9594  007B94  D004               	goto	l10142
  9595  007B96                     l10138:
  9596                           
  9597                           ; BSR set to: 1
  9598                           ;dhcp_client.c: 139: else
  9599                           ;dhcp_client.c: 140: {
  9600                           ;dhcp_client.c: 141: clientState = INIT;
  9601  007B96  0E01               	movlw	1
  9602  007B98  6E5D               	movwf	_clientState,c
  9603                           
  9604                           ; BSR set to: 1
  9605                           ;dhcp_client.c: 142: DHCP_Request(DHCP_DISCOVER);
  9606  007B9A  ECE5  F033         	call	_DHCP_Request
  9607  007B9E                     l10142:
  9608                           
  9609                           ; BSR set to: 0
  9610                           ;dhcp_client.c: 143: }
  9611                           ;dhcp_client.c: 144: ethData.linkChange=0;
  9612  007B9E  0101               	movlb	1	; () banked
  9613  007BA0  9983               	bcf	_ethData& (0+255),4,b	;volatile
  9614                           
  9615                           ;dhcp_client.c: 145: }
  9616  007BA2  0012               	return	
  9617  007BA4                     l10144:
  9618                           
  9619                           ; BSR set to: 1
  9620                           ;dhcp_client.c: 146: else if (clientState == INIT || clientState == INIT_REBOOT)
  9621  007BA4  045D               	decf	_clientState,w,c
  9622  007BA6  E003               	bz	l10148
  9623                           
  9624                           ; BSR set to: 1
  9625  007BA8  0E02               	movlw	2
  9626  007BAA  185D               	xorwf	_clientState,w,c
  9627  007BAC  E104               	bnz	l10152
  9628  007BAE                     l10148:
  9629                           
  9630                           ; BSR set to: 1
  9631                           ;dhcp_client.c: 147: {
  9632                           ;dhcp_client.c: 148: clientState = INIT;
  9633  007BAE  0E01               	movlw	1
  9634  007BB0  6E5D               	movwf	_clientState,c
  9635                           
  9636                           ; BSR set to: 1
  9637                           ;dhcp_client.c: 149: DHCP_Request(DHCP_DISCOVER);
  9638  007BB2  EFE5  F033         	goto	_DHCP_Request
  9639  007BB6                     l10152:
  9640                           
  9641                           ; BSR set to: 1
  9642                           ;dhcp_client.c: 151: else if ((dhcpLeaseTime < 100)&& clientState == BOUND)
  9643  007BB6  518D               	movf	(_dhcpLeaseTime+3)& (0+255),w,b
  9644  007BB8  118C               	iorwf	(_dhcpLeaseTime+2)& (0+255),w,b
  9645  007BBA  118B               	iorwf	(_dhcpLeaseTime+1)& (0+255),w,b
  9646  007BBC  E109               	bnz	l10158
  9647  007BBE  0E64               	movlw	100
  9648  007BC0  5D8A               	subwf	_dhcpLeaseTime& (0+255),w,b
  9649  007BC2  E206               	bc	l10158
  9650                           
  9651                           ; BSR set to: 1
  9652  007BC4  0E05               	movlw	5
  9653  007BC6  185D               	xorwf	_clientState,w,c
  9654  007BC8  E103               	bnz	l10158
  9655                           
  9656                           ; BSR set to: 1
  9657                           ;dhcp_client.c: 152: {
  9658                           ;dhcp_client.c: 153: DHCP_Request(DHCP_REQUEST);
  9659  007BCA  0E03               	movlw	3
  9660  007BCC  EFE5  F033         	goto	_DHCP_Request
  9661  007BD0                     l10158:
  9662                           
  9663                           ; BSR set to: 1
  9664                           ;dhcp_client.c: 155: else
  9665                           ;dhcp_client.c: 156: {
  9666                           ;dhcp_client.c: 157: if(clientState == BOUND && dhcpLeaseTime) dhcpLeaseTime --;
  9667  007BD0  0E05               	movlw	5
  9668  007BD2  185D               	xorwf	_clientState,w,c
  9669  007BD4  E10B               	bnz	l10164
  9670                           
  9671                           ; BSR set to: 1
  9672  007BD6  518A               	movf	_dhcpLeaseTime& (0+255),w,b
  9673  007BD8  118B               	iorwf	(_dhcpLeaseTime+1)& (0+255),w,b
  9674  007BDA  118C               	iorwf	(_dhcpLeaseTime+2)& (0+255),w,b
  9675  007BDC  118D               	iorwf	(_dhcpLeaseTime+3)& (0+255),w,b
  9676  007BDE  E006               	bz	l10164
  9677                           
  9678                           ; BSR set to: 1
  9679  007BE0  078A               	decf	_dhcpLeaseTime& (0+255),f,b
  9680  007BE2  0E00               	movlw	0
  9681  007BE4  5B8B               	subwfb	(_dhcpLeaseTime+1)& (0+255),f,b
  9682  007BE6  5B8C               	subwfb	(_dhcpLeaseTime+2)& (0+255),f,b
  9683  007BE8  5B8D               	subwfb	(_dhcpLeaseTime+3)& (0+255),f,b
  9684  007BEA  0C00               	retlw	0
  9685  007BEC                     l10164:
  9686                           
  9687                           ; BSR set to: 1
  9688                           ;dhcp_client.c: 158: else if (!dhcpLeaseTime) clientState = INIT_REBOOT;
  9689  007BEC  518A               	movf	_dhcpLeaseTime& (0+255),w,b
  9690  007BEE  118B               	iorwf	(_dhcpLeaseTime+1)& (0+255),w,b
  9691  007BF0  118C               	iorwf	(_dhcpLeaseTime+2)& (0+255),w,b
  9692  007BF2  118D               	iorwf	(_dhcpLeaseTime+3)& (0+255),w,b
  9693  007BF4  A4D8               	btfss	status,2,c
  9694  007BF6  0012               	return	
  9695                           
  9696                           ; BSR set to: 1
  9697  007BF8  0E02               	movlw	2
  9698  007BFA  6E5D               	movwf	_clientState,c
  9699  007BFC  0C02               	retlw	2
  9700  007BFE                     __end_of_DHCP_Manage:
  9701                           	opt stack 0
  9702                           tosu	equ	0xFFF
  9703                           tosh	equ	0xFFE
  9704                           tosl	equ	0xFFD
  9705                           pclath	equ	0xFFA
  9706                           tblptru	equ	0xFF8
  9707                           tblptrh	equ	0xFF7
  9708                           tblptrl	equ	0xFF6
  9709                           tablat	equ	0xFF5
  9710                           prodh	equ	0xFF4
  9711                           prodl	equ	0xFF3
  9712                           intcon	equ	0xFF2
  9713                           intcon2	equ	0xFF1
  9714                           indf0	equ	0xFEF
  9715                           postinc0	equ	0xFEE
  9716                           fsr0h	equ	0xFEA
  9717                           fsr0l	equ	0xFE9
  9718                           wreg	equ	0xFE8
  9719                           postinc1	equ	0xFE6
  9720                           plusw1	equ	0xFE3
  9721                           fsr1h	equ	0xFE2
  9722                           fsr1l	equ	0xFE1
  9723                           indf2	equ	0xFDF
  9724                           postinc2	equ	0xFDE
  9725                           postdec2	equ	0xFDD
  9726                           plusw2	equ	0xFDB
  9727                           fsr2h	equ	0xFDA
  9728                           fsr2l	equ	0xFD9
  9729                           status	equ	0xFD8
  9730                           
  9731 ;; *************** function _DHCP_Request *****************
  9732 ;; Defined at:
  9733 ;;		line 71 in file "../../TCPIP Library/source/dhcp_client.c"
  9734 ;; Parameters:    Size  Location     Type
  9735 ;;  type            1    wreg     enum E592
  9736 ;; Auto vars:     Size  Location     Type
  9737 ;;  type            1   16[BANK0 ] enum E592
  9738 ;;  ethMAC          6   17[BANK0 ] struct .
  9739 ;;  msglength       2    0        unsigned int 
  9740 ;;  started         1   15[BANK0 ] unsigned char 
  9741 ;; Return value:  Size  Location     Type
  9742 ;;		None               void
  9743 ;; Registers used:
  9744 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9745 ;; Tracked objects:
  9746 ;;		On entry : C/1
  9747 ;;		On exit  : F/0
  9748 ;;		Unchanged: 0/0
  9749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9751 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9753 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9754 ;;Total ram usage:        8 bytes
  9755 ;; Hardware stack levels used:    1
  9756 ;; Hardware stack levels required when called:   10
  9757 ;; This function calls:
  9758 ;;		_DHCP_WriteZeros
  9759 ;;		_ETH_GetMAC
  9760 ;;		_ETH_Write16
  9761 ;;		_ETH_Write32
  9762 ;;		_ETH_Write8
  9763 ;;		_ETH_WriteBlock
  9764 ;;		_UDP_Send
  9765 ;;		_UDP_Start
  9766 ;; This function is called by:
  9767 ;;		_DHCP_Manage
  9768 ;;		_DHCP_Handler
  9769 ;; This function uses a non-reentrant model
  9770 ;;
  9771                           
  9772                           	psect	text41
  9773  0067CA                     __ptext41:
  9774                           	opt stack 0
  9775  0067CA                     _DHCP_Request:
  9776                           	opt stack 15
  9777                           
  9778                           ;incstack = 0
  9779                           ;DHCP_Request@type stored from wreg
  9780  0067CA  0100               	movlb	0	; () banked
  9781  0067CC  6F70               	movwf	DHCP_Request@type& (0+255),b
  9782                           
  9783                           ;dhcp_client.c: 78: ETH_GetMAC((char*)&ethMAC);
  9784  0067CE  0E71               	movlw	low DHCP_Request@ethMAC
  9785  0067D0  6E08               	movwf	ETH_GetMAC@macAddr,c
  9786  0067D2  6A09               	clrf	ETH_GetMAC@macAddr+1,c
  9787  0067D4  ECC8  F03E         	call	_ETH_GetMAC	;wreg free
  9788                           
  9789                           ;dhcp_client.c: 83: }
  9790                           ;dhcp_client.c: 85: started = UDP_Start(0xFFFFFFFF,68,67);
  9791  0067D8  0100               	movlb	0	; () banked
  9792  0067DA  6967               	setf	UDP_Start@destIP& (0+255),b
  9793  0067DC  6968               	setf	(UDP_Start@destIP+1)& (0+255),b
  9794  0067DE  6969               	setf	(UDP_Start@destIP+2)& (0+255),b
  9795  0067E0  696A               	setf	(UDP_Start@destIP+3)& (0+255),b
  9796  0067E2  6B6C               	clrf	(UDP_Start@srcPort+1)& (0+255),b
  9797  0067E4  0E44               	movlw	68
  9798  0067E6  6F6B               	movwf	UDP_Start@srcPort& (0+255),b
  9799  0067E8  6B6E               	clrf	(UDP_Start@dstPort+1)& (0+255),b
  9800  0067EA  0E43               	movlw	67
  9801  0067EC  6F6D               	movwf	UDP_Start@dstPort& (0+255),b
  9802  0067EE  ECDC  F040         	call	_UDP_Start	;wreg free
  9803  0067F2  0100               	movlb	0	; () banked
  9804  0067F4  6F6F               	movwf	DHCP_Request@started& (0+255),b
  9805                           
  9806                           ; BSR set to: 0
  9807                           ;dhcp_client.c: 87: if(started==SUCCESS)
  9808  0067F6  056F               	decf	DHCP_Request@started& (0+255),w,b
  9809  0067F8  A4D8               	btfss	status,2,c
  9810  0067FA  0012               	return	
  9811                           
  9812                           ; BSR set to: 0
  9813                           ;dhcp_client.c: 88: {
  9814                           ;dhcp_client.c: 89: ETH_Write32(0x01010600);
  9815  0067FC  6A03               	clrf	ETH_Write32@data,c
  9816  0067FE  0E06               	movlw	6
  9817  006800  6E04               	movwf	ETH_Write32@data+1,c
  9818  006802  0E01               	movlw	1
  9819  006804  6E05               	movwf	ETH_Write32@data+2,c
  9820  006806  6E06               	movwf	ETH_Write32@data+3,c
  9821  006808  ECAE  F043         	call	_ETH_Write32	;wreg free
  9822                           
  9823                           ;dhcp_client.c: 90: ETH_Write32(xidValue);
  9824  00680C  0E50               	movlw	80
  9825  00680E  6E03               	movwf	ETH_Write32@data,c
  9826  006810  0E48               	movlw	72
  9827  006812  6E04               	movwf	ETH_Write32@data+1,c
  9828  006814  0E43               	movlw	67
  9829  006816  6E05               	movwf	ETH_Write32@data+2,c
  9830  006818  0E4D               	movlw	77
  9831  00681A  6E06               	movwf	ETH_Write32@data+3,c
  9832  00681C  ECAE  F043         	call	_ETH_Write32	;wreg free
  9833                           
  9834                           ;dhcp_client.c: 91: ETH_Write32(0x00008000);
  9835  006820  6A03               	clrf	ETH_Write32@data,c
  9836  006822  0E80               	movlw	128
  9837  006824  6E04               	movwf	ETH_Write32@data+1,c
  9838  006826  6A05               	clrf	ETH_Write32@data+2,c
  9839  006828  6A06               	clrf	ETH_Write32@data+3,c
  9840  00682A  ECAE  F043         	call	_ETH_Write32	;wreg free
  9841                           
  9842                           ;dhcp_client.c: 92: if (type == DHCP_REQUEST)
  9843  00682E  0E03               	movlw	3
  9844  006830  0100               	movlb	0	; () banked
  9845  006832  1970               	xorwf	DHCP_Request@type& (0+255),w,b
  9846  006834  E107               	bnz	l8558
  9847                           
  9848                           ; BSR set to: 0
  9849                           ;dhcp_client.c: 93: {
  9850                           ;dhcp_client.c: 94: ETH_Write32(0);
  9851  006836  6A03               	clrf	ETH_Write32@data,c
  9852  006838  6A04               	clrf	ETH_Write32@data+1,c
  9853  00683A  6A05               	clrf	ETH_Write32@data+2,c
  9854  00683C  6A06               	clrf	ETH_Write32@data+3,c
  9855  00683E  ECAE  F043         	call	_ETH_Write32	;wreg free
  9856                           
  9857                           ;dhcp_client.c: 95: }
  9858  006842  D00A               	goto	l859
  9859  006844                     l8558:
  9860                           
  9861                           ; BSR set to: 0
  9862                           ;dhcp_client.c: 96: else
  9863                           ;dhcp_client.c: 97: {
  9864                           ;dhcp_client.c: 98: ETH_Write32(ipv4Address);
  9865  006844  C18E  F003         	movff	_ipv4Address,ETH_Write32@data
  9866  006848  C18F  F004         	movff	_ipv4Address+1,ETH_Write32@data+1
  9867  00684C  C190  F005         	movff	_ipv4Address+2,ETH_Write32@data+2
  9868  006850  C191  F006         	movff	_ipv4Address+3,ETH_Write32@data+3
  9869  006854  ECAE  F043         	call	_ETH_Write32	;wreg free
  9870  006858                     l859:
  9871                           
  9872                           ;dhcp_client.c: 99: }
  9873                           ;dhcp_client.c: 100: ETH_Write32(0);
  9874  006858  6A03               	clrf	ETH_Write32@data,c
  9875  00685A  6A04               	clrf	ETH_Write32@data+1,c
  9876  00685C  6A05               	clrf	ETH_Write32@data+2,c
  9877  00685E  6A06               	clrf	ETH_Write32@data+3,c
  9878  006860  ECAE  F043         	call	_ETH_Write32	;wreg free
  9879                           
  9880                           ;dhcp_client.c: 101: ETH_Write32(0);
  9881  006864  6A03               	clrf	ETH_Write32@data,c
  9882  006866  6A04               	clrf	ETH_Write32@data+1,c
  9883  006868  6A05               	clrf	ETH_Write32@data+2,c
  9884  00686A  6A06               	clrf	ETH_Write32@data+3,c
  9885  00686C  ECAE  F043         	call	_ETH_Write32	;wreg free
  9886                           
  9887                           ;dhcp_client.c: 102: ETH_Write32(0);
  9888  006870  6A03               	clrf	ETH_Write32@data,c
  9889  006872  6A04               	clrf	ETH_Write32@data+1,c
  9890  006874  6A05               	clrf	ETH_Write32@data+2,c
  9891  006876  6A06               	clrf	ETH_Write32@data+3,c
  9892  006878  ECAE  F043         	call	_ETH_Write32	;wreg free
  9893                           
  9894                           ;dhcp_client.c: 103: ETH_WriteBlock((char *)&ethMAC,6);
  9895  00687C  0E71               	movlw	low DHCP_Request@ethMAC
  9896  00687E  6E03               	movwf	ETH_WriteBlock@data,c
  9897  006880  6A04               	clrf	ETH_WriteBlock@data+1,c
  9898  006882  6A06               	clrf	ETH_WriteBlock@len+1,c
  9899  006884  0E06               	movlw	6
  9900  006886  6E05               	movwf	ETH_WriteBlock@len,c
  9901  006888  ECDF  F03F         	call	_ETH_WriteBlock	;wreg free
  9902                           
  9903                           ;dhcp_client.c: 104: DHCP_WriteZeros(202);
  9904  00688C  6A05               	clrf	DHCP_WriteZeros@length+1,c
  9905  00688E  0ECA               	movlw	202
  9906  006890  6E04               	movwf	DHCP_WriteZeros@length,c
  9907  006892  EC9E  F045         	call	_DHCP_WriteZeros	;wreg free
  9908                           
  9909                           ;dhcp_client.c: 105: ETH_Write32(0x63825363);
  9910  006896  0E63               	movlw	99
  9911  006898  6E03               	movwf	ETH_Write32@data,c
  9912  00689A  0E53               	movlw	83
  9913  00689C  6E04               	movwf	ETH_Write32@data+1,c
  9914  00689E  0E82               	movlw	130
  9915  0068A0  6E05               	movwf	ETH_Write32@data+2,c
  9916  0068A2  0E63               	movlw	99
  9917  0068A4  6E06               	movwf	ETH_Write32@data+3,c
  9918  0068A6  ECAE  F043         	call	_ETH_Write32	;wreg free
  9919                           
  9920                           ;dhcp_client.c: 107: ETH_Write8(53);
  9921  0068AA  0E35               	movlw	53
  9922  0068AC  EC85  F045         	call	_ETH_Write8
  9923                           
  9924                           ;dhcp_client.c: 108: ETH_Write8(1);
  9925  0068B0  0E01               	movlw	1
  9926  0068B2  EC85  F045         	call	_ETH_Write8
  9927                           
  9928                           ;dhcp_client.c: 109: ETH_Write8(type);
  9929  0068B6  0100               	movlb	0	; () banked
  9930  0068B8  5170               	movf	DHCP_Request@type& (0+255),w,b
  9931  0068BA  EC85  F045         	call	_ETH_Write8
  9932                           
  9933                           ;dhcp_client.c: 110: if(type == DHCP_REQUEST)
  9934  0068BE  0E03               	movlw	3
  9935  0068C0  0100               	movlb	0	; () banked
  9936  0068C2  1970               	xorwf	DHCP_Request@type& (0+255),w,b
  9937  0068C4  E120               	bnz	l860
  9938                           
  9939                           ; BSR set to: 0
  9940                           ;dhcp_client.c: 111: {
  9941                           ;dhcp_client.c: 112: ETH_Write8(54);ETH_Write8(4);ETH_Write32(dhcpServerId);
  9942  0068C6  0E36               	movlw	54
  9943  0068C8  EC85  F045         	call	_ETH_Write8
  9944  0068CC  0E04               	movlw	4
  9945  0068CE  EC85  F045         	call	_ETH_Write8
  9946  0068D2  C226  F003         	movff	_dhcpServerId,ETH_Write32@data
  9947  0068D6  C227  F004         	movff	_dhcpServerId+1,ETH_Write32@data+1
  9948  0068DA  C228  F005         	movff	_dhcpServerId+2,ETH_Write32@data+2
  9949  0068DE  C229  F006         	movff	_dhcpServerId+3,ETH_Write32@data+3
  9950  0068E2  ECAE  F043         	call	_ETH_Write32	;wreg free
  9951                           
  9952                           ;dhcp_client.c: 113: ETH_Write8(50);ETH_Write8(4);ETH_Write32(ipv4Address);
  9953  0068E6  0E32               	movlw	50
  9954  0068E8  EC85  F045         	call	_ETH_Write8
  9955  0068EC  0E04               	movlw	4
  9956  0068EE  EC85  F045         	call	_ETH_Write8
  9957  0068F2  C18E  F003         	movff	_ipv4Address,ETH_Write32@data
  9958  0068F6  C18F  F004         	movff	_ipv4Address+1,ETH_Write32@data+1
  9959  0068FA  C190  F005         	movff	_ipv4Address+2,ETH_Write32@data+2
  9960  0068FE  C191  F006         	movff	_ipv4Address+3,ETH_Write32@data+3
  9961  006902  ECAE  F043         	call	_ETH_Write32	;wreg free
  9962  006906                     l860:
  9963                           
  9964                           ;dhcp_client.c: 114: }
  9965                           ;dhcp_client.c: 115: ETH_Write8(55); ETH_Write8(4); ETH_Write8(1); ETH_Write8(3); ETH_Wr
      +                          ite8(6); ETH_Write8(15);
  9966  006906  0E37               	movlw	55
  9967  006908  EC85  F045         	call	_ETH_Write8
  9968  00690C  0E04               	movlw	4
  9969  00690E  EC85  F045         	call	_ETH_Write8
  9970  006912  0E01               	movlw	1
  9971  006914  EC85  F045         	call	_ETH_Write8
  9972  006918  0E03               	movlw	3
  9973  00691A  EC85  F045         	call	_ETH_Write8
  9974  00691E  0E06               	movlw	6
  9975  006920  EC85  F045         	call	_ETH_Write8
  9976  006924  0E0F               	movlw	15
  9977  006926  EC85  F045         	call	_ETH_Write8
  9978                           
  9979                           ;dhcp_client.c: 116: ETH_Write8(57); ETH_Write8(2); ETH_Write16(512);
  9980  00692A  0E39               	movlw	57
  9981  00692C  EC85  F045         	call	_ETH_Write8
  9982  006930  0E02               	movlw	2
  9983  006932  EC85  F045         	call	_ETH_Write8
  9984  006936  0E02               	movlw	2
  9985  006938  6E04               	movwf	ETH_Write16@data+1,c
  9986  00693A  6A03               	clrf	ETH_Write16@data,c
  9987  00693C  ECE1  F044         	call	_ETH_Write16	;wreg free
  9988                           
  9989                           ;dhcp_client.c: 117: ETH_Write8(12); ETH_Write8(20); ETH_WriteBlock((char *)dhcpName,20)
      +                          ;
  9990  006940  0E0C               	movlw	12
  9991  006942  EC85  F045         	call	_ETH_Write8
  9992  006946  0E14               	movlw	20
  9993  006948  EC85  F045         	call	_ETH_Write8
  9994  00694C  0E13               	movlw	low _dhcpName
  9995  00694E  6E03               	movwf	ETH_WriteBlock@data,c
  9996  006950  5003               	movf	ETH_WriteBlock@data,w,c
  9997  006952  A4D8               	btfss	status,2,c
  9998  006954  0E10               	movlw	high __smallconst
  9999  006956  6E04               	movwf	ETH_WriteBlock@data+1,c
 10000  006958  6A06               	clrf	ETH_WriteBlock@len+1,c
 10001  00695A  0E14               	movlw	20
 10002  00695C  6E05               	movwf	ETH_WriteBlock@len,c
 10003  00695E  ECDF  F03F         	call	_ETH_WriteBlock	;wreg free
 10004                           
 10005                           ;dhcp_client.c: 119: ETH_Write8(61); ETH_Write8(7); ETH_Write8(1); ETH_WriteBlock((char 
      +                          *)&ethMAC,6);
 10006  006962  0E3D               	movlw	61
 10007  006964  EC85  F045         	call	_ETH_Write8
 10008  006968  0E07               	movlw	7
 10009  00696A  EC85  F045         	call	_ETH_Write8
 10010  00696E  0E01               	movlw	1
 10011  006970  EC85  F045         	call	_ETH_Write8
 10012  006974  0E71               	movlw	low DHCP_Request@ethMAC
 10013  006976  6E03               	movwf	ETH_WriteBlock@data,c
 10014  006978  6A04               	clrf	ETH_WriteBlock@data+1,c
 10015  00697A  6A06               	clrf	ETH_WriteBlock@len+1,c
 10016  00697C  0E06               	movlw	6
 10017  00697E  6E05               	movwf	ETH_WriteBlock@len,c
 10018  006980  ECDF  F03F         	call	_ETH_WriteBlock	;wreg free
 10019                           
 10020                           ;dhcp_client.c: 120: ETH_Write8(255);
 10021  006984  0EFF               	movlw	255
 10022  006986  EC85  F045         	call	_ETH_Write8
 10023                           
 10024                           ;dhcp_client.c: 122: ETH_Write8(0);
 10025  00698A  0E00               	movlw	0
 10026  00698C  EC85  F045         	call	_ETH_Write8
 10027                           
 10028                           ;dhcp_client.c: 124: UDP_Send();
 10029  006990  ECDF  F03B         	call	_UDP_Send	;wreg free
 10030                           
 10031                           ; BSR set to: 1
 10032                           ;dhcp_client.c: 125: if (type == DHCP_DISCOVER)
 10033  006994  0100               	movlb	0	; () banked
 10034  006996  0570               	decf	DHCP_Request@type& (0+255),w,b
 10035  006998  A4D8               	btfss	status,2,c
 10036  00699A  0012               	return	
 10037                           
 10038                           ; BSR set to: 0
 10039                           ;dhcp_client.c: 126: clientState=SELECTING;
 10040  00699C  0E03               	movlw	3
 10041  00699E  6E5D               	movwf	_clientState,c
 10042                           
 10043                           ; BSR set to: 0
 10044  0069A0  0C03               	retlw	3	;funcret
 10045  0069A2                     __end_of_DHCP_Request:
 10046                           	opt stack 0
 10047                           tosu	equ	0xFFF
 10048                           tosh	equ	0xFFE
 10049                           tosl	equ	0xFFD
 10050                           pclath	equ	0xFFA
 10051                           tblptru	equ	0xFF8
 10052                           tblptrh	equ	0xFF7
 10053                           tblptrl	equ	0xFF6
 10054                           tablat	equ	0xFF5
 10055                           prodh	equ	0xFF4
 10056                           prodl	equ	0xFF3
 10057                           intcon	equ	0xFF2
 10058                           intcon2	equ	0xFF1
 10059                           indf0	equ	0xFEF
 10060                           postinc0	equ	0xFEE
 10061                           fsr0h	equ	0xFEA
 10062                           fsr0l	equ	0xFE9
 10063                           wreg	equ	0xFE8
 10064                           postinc1	equ	0xFE6
 10065                           plusw1	equ	0xFE3
 10066                           fsr1h	equ	0xFE2
 10067                           fsr1l	equ	0xFE1
 10068                           indf2	equ	0xFDF
 10069                           postinc2	equ	0xFDE
 10070                           postdec2	equ	0xFDD
 10071                           plusw2	equ	0xFDB
 10072                           fsr2h	equ	0xFDA
 10073                           fsr2l	equ	0xFD9
 10074                           status	equ	0xFD8
 10075                           
 10076 ;; *************** function _UDP_Start *****************
 10077 ;; Defined at:
 10078 ;;		line 71 in file "../../TCPIP Library/source/udpv4.c"
 10079 ;; Parameters:    Size  Location     Type
 10080 ;;  destIP          4    7[BANK0 ] unsigned long 
 10081 ;;  srcPort         2   11[BANK0 ] unsigned int 
 10082 ;;  dstPort         2   13[BANK0 ] unsigned int 
 10083 ;; Auto vars:     Size  Location     Type
 10084 ;;  ret             1   87[COMRAM] enum E367
 10085 ;; Return value:  Size  Location     Type
 10086 ;;                  1    wreg      enum E449
 10087 ;; Registers used:
 10088 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10089 ;; Tracked objects:
 10090 ;;		On entry : F/0
 10091 ;;		On exit  : 0/0
 10092 ;;		Unchanged: 0/0
 10093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10094 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10095 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10097 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10098 ;;Total ram usage:        9 bytes
 10099 ;; Hardware stack levels used:    1
 10100 ;; Hardware stack levels required when called:    9
 10101 ;; This function calls:
 10102 ;;		_ETH_ResetByteCount
 10103 ;;		_ETH_Write16
 10104 ;;		_IPv4_Start
 10105 ;; This function is called by:
 10106 ;;		_DHCP_Request
 10107 ;; This function uses a non-reentrant model
 10108 ;;
 10109                           
 10110                           	psect	text42
 10111  0081B8                     __ptext42:
 10112                           	opt stack 0
 10113  0081B8                     _UDP_Start:
 10114                           	opt stack 15
 10115                           
 10116                           ; BSR set to: 0
 10117                           ;udpv4.c: 77: ret = IPv4_Start(destIP,UDP);
 10118                           
 10119                           ; BSR set to: 0
 10120                           
 10121                           ; BSR set to: 0
 10122                           ;incstack = 0
 10123  0081B8  C067  F04B         	movff	UDP_Start@destIP,IPv4_Start@destAddress
 10124  0081BC  C068  F04C         	movff	UDP_Start@destIP+1,IPv4_Start@destAddress+1
 10125  0081C0  C069  F04D         	movff	UDP_Start@destIP+2,IPv4_Start@destAddress+2
 10126  0081C4  C06A  F04E         	movff	UDP_Start@destIP+3,IPv4_Start@destAddress+3
 10127  0081C8  0E11               	movlw	17
 10128  0081CA  6E4F               	movwf	IPv4_Start@protocol,c
 10129  0081CC  EC79  F036         	call	_IPv4_Start	;wreg free
 10130  0081D0  6E58               	movwf	UDP_Start@ret,c
 10131                           
 10132                           ; BSR set to: 0
 10133                           ;udpv4.c: 78: if(ret == SUCCESS)
 10134  0081D2  0458               	decf	UDP_Start@ret,w,c
 10135  0081D4  E116               	bnz	l8368
 10136                           
 10137                           ; BSR set to: 0
 10138                           ;udpv4.c: 79: {
 10139                           ;udpv4.c: 81: ETH_ResetByteCount();
 10140  0081D6  ECD1  F045         	call	_ETH_ResetByteCount	;wreg free
 10141                           
 10142                           ;udpv4.c: 84: ETH_Write16(srcPort);
 10143  0081DA  C06B  F003         	movff	UDP_Start@srcPort,ETH_Write16@data
 10144  0081DE  C06C  F004         	movff	UDP_Start@srcPort+1,ETH_Write16@data+1
 10145  0081E2  ECE1  F044         	call	_ETH_Write16	;wreg free
 10146                           
 10147                           ;udpv4.c: 87: ETH_Write16(dstPort);
 10148  0081E6  C06D  F003         	movff	UDP_Start@dstPort,ETH_Write16@data
 10149  0081EA  C06E  F004         	movff	UDP_Start@dstPort+1,ETH_Write16@data+1
 10150  0081EE  ECE1  F044         	call	_ETH_Write16	;wreg free
 10151                           
 10152                           ;udpv4.c: 90: ETH_Write16(0);
 10153  0081F2  6A04               	clrf	ETH_Write16@data+1,c
 10154  0081F4  6A03               	clrf	ETH_Write16@data,c
 10155  0081F6  ECE1  F044         	call	_ETH_Write16	;wreg free
 10156                           
 10157                           ;udpv4.c: 93: ETH_Write16(0);
 10158  0081FA  6A04               	clrf	ETH_Write16@data+1,c
 10159  0081FC  6A03               	clrf	ETH_Write16@data,c
 10160  0081FE  ECE1  F044         	call	_ETH_Write16	;wreg free
 10161  008202                     l8368:
 10162                           
 10163                           ;udpv4.c: 95: }
 10164                           ;udpv4.c: 96: return ret;
 10165  008202  5058               	movf	UDP_Start@ret,w,c
 10166  008204  0012               	return		;funcret
 10167  008206                     __end_of_UDP_Start:
 10168                           	opt stack 0
 10169                           tosu	equ	0xFFF
 10170                           tosh	equ	0xFFE
 10171                           tosl	equ	0xFFD
 10172                           pclath	equ	0xFFA
 10173                           tblptru	equ	0xFF8
 10174                           tblptrh	equ	0xFF7
 10175                           tblptrl	equ	0xFF6
 10176                           tablat	equ	0xFF5
 10177                           prodh	equ	0xFF4
 10178                           prodl	equ	0xFF3
 10179                           intcon	equ	0xFF2
 10180                           intcon2	equ	0xFF1
 10181                           indf0	equ	0xFEF
 10182                           postinc0	equ	0xFEE
 10183                           fsr0h	equ	0xFEA
 10184                           fsr0l	equ	0xFE9
 10185                           wreg	equ	0xFE8
 10186                           postinc1	equ	0xFE6
 10187                           plusw1	equ	0xFE3
 10188                           fsr1h	equ	0xFE2
 10189                           fsr1l	equ	0xFE1
 10190                           indf2	equ	0xFDF
 10191                           postinc2	equ	0xFDE
 10192                           postdec2	equ	0xFDD
 10193                           plusw2	equ	0xFDB
 10194                           fsr2h	equ	0xFDA
 10195                           fsr2l	equ	0xFD9
 10196                           status	equ	0xFD8
 10197                           
 10198 ;; *************** function _ETH_ResetByteCount *****************
 10199 ;; Defined at:
 10200 ;;		line 597 in file "../../TCPIP Library/ethernet_drivers/encX24J600_driver.c"
 10201 ;; Parameters:    Size  Location     Type
 10202 ;;		None
 10203 ;; Auto vars:     Size  Location     Type
 10204 ;;		None
 10205 ;; Return value:  Size  Location     Type
 10206 ;;		None               void
 10207 ;; Registers used:
 10208 ;;		wreg, status,2, status,0, cstack
 10209 ;; Tracked objects:
 10210 ;;		On entry : F/0
 10211 ;;		On exit  : 0/0
 10212 ;;		Unchanged: 0/0
 10213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10218 ;;Total ram usage:        0 bytes
 10219 ;; Hardware stack levels used:    1
 10220 ;; Hardware stack levels required when called:    6
 10221 ;; This function calls:
 10222 ;;		_ENCx24_Read
 10223 ;; This function is called by:
 10224 ;;		_UDP_Start
 10225 ;; This function uses a non-reentrant model
 10226 ;;
 10227                           
 10228                           	psect	text43
 10229  008BA2                     __ptext43:
 10230                           	opt stack 0
 10231  008BA2                     _ETH_ResetByteCount:
 10232                           	opt stack 17
 10233                           
 10234                           ; BSR set to: 0
 10235                           ;encX24J600_driver.c: 599: ethData.saveWRPT = ENCx24_Read(XJ600_EGPWRPTL);
 10236                           
 10237                           ;incstack = 0
 10238  008BA2  0E88               	movlw	136
 10239  008BA4  ECC0  F041         	call	_ENCx24_Read
 10240  008BA8  C005  F188         	movff	?_ENCx24_Read,_ethData+5	;volatile
 10241  008BAC  C006  F189         	movff	?_ENCx24_Read+1,_ethData+6	;volatile
 10242  008BB0  0012               	return		;funcret
 10243  008BB2                     __end_of_ETH_ResetByteCount:
 10244                           	opt stack 0
 10245                           tosu	equ	0xFFF
 10246                           tosh	equ	0xFFE
 10247                           tosl	equ	0xFFD
 10248                           pclath	equ	0xFFA
 10249                           tblptru	equ	0xFF8
 10250                           tblptrh	equ	0xFF7
 10251                           tblptrl	equ	0xFF6
 10252                           tablat	equ	0xFF5
 10253                           prodh	equ	0xFF4
 10254                           prodl	equ	0xFF3
 10255                           intcon	equ	0xFF2
 10256                           intcon2	equ	0xFF1
 10257                           indf0	equ	0xFEF
 10258                           postinc0	equ	0xFEE
 10259                           fsr0h	equ	0xFEA
 10260                           fsr0l	equ	0xFE9
 10261                           wreg	equ	0xFE8
 10262                           postinc1	equ	0xFE6
 10263                           plusw1	equ	0xFE3
 10264                           fsr1h	equ	0xFE2
 10265                           fsr1l	equ	0xFE1
 10266                           indf2	equ	0xFDF
 10267                           postinc2	equ	0xFDE
 10268                           postdec2	equ	0xFDD
 10269                           plusw2	equ	0xFDB
 10270                           fsr2h	equ	0xFDA
 10271                           fsr2l	equ	0xFD9
 10272                           status	equ	0xFD8
 10273                           
 10274 ;; *************** function _UDP_Send *****************
 10275 ;; Defined at:
 10276 ;;		line 99 in file "../../TCPIP Library/source/udpv4.c"
 10277 ;; Parameters:    Size  Location     Type
 10278 ;;		None
 10279 ;; Auto vars:     Size  Location     Type
 10280 ;;  udpLength       2   46[COMRAM] unsigned int 
 10281 ;;  cksm            2   44[COMRAM] unsigned int 
 10282 ;;  ret             1    0        enum E367
 10283 ;; Return value:  Size  Location     Type
 10284 ;;                  1    wreg      enum E449
 10285 ;; Registers used:
 10286 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10287 ;; Tracked objects:
 10288 ;;		On entry : 0/0
 10289 ;;		On exit  : F/1
 10290 ;;		Unchanged: 0/0
 10291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10293 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10294 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10295 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10296 ;;Total ram usage:        9 bytes
 10297 ;; Hardware stack levels used:    1
 10298 ;; Hardware stack levels required when called:    9
 10299 ;; This function calls:
 10300 ;;		_ETH_GetByteCount
 10301 ;;		_ETH_Insert
 10302 ;;		_ETH_TxComputeChecksum
 10303 ;;		_IPV4_Send
 10304 ;; This function is called by:
 10305 ;;		_DHCP_Request
 10306 ;; This function uses a non-reentrant model
 10307 ;;
 10308                           
 10309                           	psect	text44
 10310  0077BE                     __ptext44:
 10311                           	opt stack 0
 10312  0077BE                     _UDP_Send:
 10313                           	opt stack 15
 10314                           
 10315                           ;udpv4.c: 105: udpLength = ETH_GetByteCount();
 10316                           
 10317                           ;incstack = 0
 10318  0077BE  EC33  F045         	call	_ETH_GetByteCount	;wreg free
 10319  0077C2  C00B  F02F         	movff	?_ETH_GetByteCount,UDP_Send@udpLength
 10320  0077C6  C00C  F030         	movff	?_ETH_GetByteCount+1,UDP_Send@udpLength+1
 10321                           
 10322                           ; BSR set to: 1
 10323                           ;udpv4.c: 106: udpLength = ((((uint16_t)udpLength & (uint16_t)0xFF00) >> 8) | (((uint16_
      +                          t)udpLength & (uint16_t)0x00FF) << 8));
 10324  0077CA  502F               	movf	UDP_Send@udpLength,w,c
 10325  0077CC  6E29               	movwf	(??_UDP_Send+1)& (0+255),c
 10326  0077CE  6A28               	clrf	??_UDP_Send& (0+255),c
 10327  0077D0  5030               	movf	UDP_Send@udpLength+1,w,c
 10328  0077D2  6E2A               	movwf	(??_UDP_Send+2)& (0+255),c
 10329  0077D4  6A2B               	clrf	(??_UDP_Send+3)& (0+255),c
 10330  0077D6  5028               	movf	??_UDP_Send,w,c
 10331  0077D8  102A               	iorwf	??_UDP_Send+2,w,c
 10332  0077DA  6E2F               	movwf	UDP_Send@udpLength,c
 10333  0077DC  5029               	movf	??_UDP_Send+1,w,c
 10334  0077DE  102B               	iorwf	??_UDP_Send+3,w,c
 10335  0077E0  6E30               	movwf	UDP_Send@udpLength+1,c
 10336                           
 10337                           ; BSR set to: 1
 10338                           ;udpv4.c: 107: ETH_Insert((char *)&udpLength, 2, sizeof(ethernetFrame_t) + sizeof(ipv4He
      +                          ader_t) + (int)(((char*)&((udpHeader_t *)1)->length)-1));
 10339  0077E2  6A0C               	clrf	ETH_Insert@len+1,c
 10340  0077E4  0E02               	movlw	2
 10341  0077E6  6E0B               	movwf	ETH_Insert@len,c
 10342  0077E8  6A0E               	clrf	ETH_Insert@offset+1,c
 10343  0077EA  0E26               	movlw	38
 10344  0077EC  6E0D               	movwf	ETH_Insert@offset,c
 10345  0077EE  0E2F               	movlw	UDP_Send@udpLength& (0+255)
 10346  0077F0  EC8A  F040         	call	_ETH_Insert
 10347                           
 10348                           ;udpv4.c: 108: udpLength = ((((uint16_t)udpLength & (uint16_t)0xFF00) >> 8) | (((uint16_
      +                          t)udpLength & (uint16_t)0x00FF) << 8));
 10349  0077F4  502F               	movf	UDP_Send@udpLength,w,c
 10350  0077F6  6E29               	movwf	(??_UDP_Send+1)& (0+255),c
 10351  0077F8  6A28               	clrf	??_UDP_Send& (0+255),c
 10352  0077FA  5030               	movf	UDP_Send@udpLength+1,w,c
 10353  0077FC  6E2A               	movwf	(??_UDP_Send+2)& (0+255),c
 10354  0077FE  6A2B               	clrf	(??_UDP_Send+3)& (0+255),c
 10355  007800  5028               	movf	??_UDP_Send,w,c
 10356  007802  102A               	iorwf	??_UDP_Send+2,w,c
 10357  007804  6E2F               	movwf	UDP_Send@udpLength,c
 10358  007806  5029               	movf	??_UDP_Send+1,w,c
 10359  007808  102B               	iorwf	??_UDP_Send+3,w,c
 10360  00780A  6E30               	movwf	UDP_Send@udpLength+1,c
 10361                           
 10362                           ;udpv4.c: 111: cksm = udpLength + UDP;
 10363  00780C  0E11               	movlw	17
 10364  00780E  242F               	addwf	UDP_Send@udpLength,w,c
 10365  007810  6E2D               	movwf	UDP_Send@cksm,c
 10366  007812  0E00               	movlw	0
 10367  007814  2030               	addwfc	UDP_Send@udpLength+1,w,c
 10368  007816  6E2E               	movwf	UDP_Send@cksm+1,c
 10369                           
 10370                           ;udpv4.c: 112: cksm = ETH_TxComputeChecksum(sizeof(ethernetFrame_t) + sizeof(ipv4Header_
      +                          t) - 8, udpLength + 8, cksm);
 10371  007818  6A0E               	clrf	ETH_TxComputeChecksum@position+1,c
 10372  00781A  0E1A               	movlw	26
 10373  00781C  6E0D               	movwf	ETH_TxComputeChecksum@position,c
 10374  00781E  0E08               	movlw	8
 10375  007820  242F               	addwf	UDP_Send@udpLength,w,c
 10376  007822  6E0F               	movwf	ETH_TxComputeChecksum@length,c
 10377  007824  0E00               	movlw	0
 10378  007826  2030               	addwfc	UDP_Send@udpLength+1,w,c
 10379  007828  6E10               	movwf	ETH_TxComputeChecksum@length+1,c
 10380  00782A  C02D  F011         	movff	UDP_Send@cksm,ETH_TxComputeChecksum@seed
 10381  00782E  C02E  F012         	movff	UDP_Send@cksm+1,ETH_TxComputeChecksum@seed+1
 10382  007832  ECDD  F03A         	call	_ETH_TxComputeChecksum	;wreg free
 10383  007836  C00D  F02D         	movff	?_ETH_TxComputeChecksum,UDP_Send@cksm
 10384  00783A  C00E  F02E         	movff	?_ETH_TxComputeChecksum+1,UDP_Send@cksm+1
 10385                           
 10386                           ;udpv4.c: 115: if (cksm == 0){
 10387  00783E  502D               	movf	UDP_Send@cksm,w,c
 10388  007840  102E               	iorwf	UDP_Send@cksm+1,w,c
 10389  007842  E102               	bnz	l8396
 10390                           
 10391                           ;udpv4.c: 116: cksm = 0xffff;
 10392  007844  682D               	setf	UDP_Send@cksm,c
 10393  007846  682E               	setf	UDP_Send@cksm+1,c
 10394  007848                     l8396:
 10395                           
 10396                           ;udpv4.c: 117: }
 10397                           ;udpv4.c: 119: ETH_Insert((char *)&cksm, 2, sizeof(ethernetFrame_t) + sizeof(ipv4Header_
      +                          t) + (int)(((char*)&((udpHeader_t *)1)->checksum)-1));
 10398  007848  6A0C               	clrf	ETH_Insert@len+1,c
 10399  00784A  0E02               	movlw	2
 10400  00784C  6E0B               	movwf	ETH_Insert@len,c
 10401  00784E  6A0E               	clrf	ETH_Insert@offset+1,c
 10402  007850  0E28               	movlw	40
 10403  007852  6E0D               	movwf	ETH_Insert@offset,c
 10404  007854  0E2D               	movlw	UDP_Send@cksm& (0+255)
 10405  007856  EC8A  F040         	call	_ETH_Insert
 10406  00785A  C02F  F01D         	movff	UDP_Send@udpLength,IPV4_Send@payloadLength
 10407  00785E  C030  F01E         	movff	UDP_Send@udpLength+1,IPV4_Send@payloadLength+1
 10408  007862  EF76  F03F         	goto	_IPV4_Send	;wreg free
 10409  007866                     __end_of_UDP_Send:
 10410                           	opt stack 0
 10411                           tosu	equ	0xFFF
 10412                           tosh	equ	0xFFE
 10413                           tosl	equ	0xFFD
 10414                           pclath	equ	0xFFA
 10415                           tblptru	equ	0xFF8
 10416                           tblptrh	equ	0xFF7
 10417                           tblptrl	equ	0xFF6
 10418                           tablat	equ	0xFF5
 10419                           prodh	equ	0xFF4
 10420                           prodl	equ	0xFF3
 10421                           intcon	equ	0xFF2
 10422                           intcon2	equ	0xFF1
 10423                           indf0	equ	0xFEF
 10424                           postinc0	equ	0xFEE
 10425                           fsr0h	equ	0xFEA
 10426                           fsr0l	equ	0xFE9
 10427                           wreg	equ	0xFE8
 10428                           postinc1	equ	0xFE6
 10429                           plusw1	equ	0xFE3
 10430                           fsr1h	equ	0xFE2
 10431                           fsr1l	equ	0xFE1
 10432                           indf2	equ	0xFDF
 10433                           postinc2	equ	0xFDE
 10434                           postdec2	equ	0xFDD
 10435                           plusw2	equ	0xFDB
 10436                           fsr2h	equ	0xFDA
 10437                           fsr2l	equ	0xFD9
 10438                           status	equ	0xFD8
 10439                           
 10440 ;; *************** function _ETH_GetByteCount *****************
 10441 ;; Defined at:
 10442 ;;		line 602 in file "../../TCPIP Library/ethernet_drivers/encX24J600_driver.c"
 10443 ;; Parameters:    Size  Location     Type
 10444 ;;		None
 10445 ;; Auto vars:     Size  Location     Type
 10446 ;;  wPtr            2   12[COMRAM] unsigned int 
 10447 ;; Return value:  Size  Location     Type
 10448 ;;                  2   10[COMRAM] unsigned int 
 10449 ;; Registers used:
 10450 ;;		wreg, status,2, status,0, cstack
 10451 ;; Tracked objects:
 10452 ;;		On entry : 0/0
 10453 ;;		On exit  : F/1
 10454 ;;		Unchanged: 0/0
 10455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10456 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10457 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10459 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10460 ;;Total ram usage:        4 bytes
 10461 ;; Hardware stack levels used:    1
 10462 ;; Hardware stack levels required when called:    6
 10463 ;; This function calls:
 10464 ;;		_ENCx24_Read
 10465 ;; This function is called by:
 10466 ;;		_UDP_Send
 10467 ;; This function uses a non-reentrant model
 10468 ;;
 10469                           
 10470                           	psect	text45
 10471  008A66                     __ptext45:
 10472                           	opt stack 0
 10473  008A66                     _ETH_GetByteCount:
 10474                           	opt stack 17
 10475                           
 10476                           ;encX24J600_driver.c: 604: uint16_t wPtr;
 10477                           ;encX24J600_driver.c: 606: wPtr = ENCx24_Read(XJ600_EGPWRPTL);
 10478                           
 10479                           ; BSR set to: 1
 10480                           ;incstack = 0
 10481  008A66  0E88               	movlw	136
 10482  008A68  ECC0  F041         	call	_ENCx24_Read
 10483  008A6C  C005  F00D         	movff	?_ENCx24_Read,ETH_GetByteCount@wPtr
 10484  008A70  C006  F00E         	movff	?_ENCx24_Read+1,ETH_GetByteCount@wPtr+1
 10485                           
 10486                           ;encX24J600_driver.c: 608: return (wPtr - ethData.saveWRPT);
 10487  008A74  0101               	movlb	1	; () banked
 10488  008A76  5188               	movf	(_ethData+5)& (0+255),w,b	;volatile
 10489  008A78  5C0D               	subwf	ETH_GetByteCount@wPtr,w,c
 10490  008A7A  6E0B               	movwf	?_ETH_GetByteCount,c
 10491  008A7C  5189               	movf	(_ethData+6)& (0+255),w,b	;volatile
 10492  008A7E  580E               	subwfb	ETH_GetByteCount@wPtr+1,w,c
 10493  008A80  6E0C               	movwf	?_ETH_GetByteCount+1,c
 10494                           
 10495                           ; BSR set to: 1
 10496  008A82  0012               	return		;funcret
 10497  008A84                     __end_of_ETH_GetByteCount:
 10498                           	opt stack 0
 10499                           tosu	equ	0xFFF
 10500                           tosh	equ	0xFFE
 10501                           tosl	equ	0xFFD
 10502                           pclath	equ	0xFFA
 10503                           tblptru	equ	0xFF8
 10504                           tblptrh	equ	0xFF7
 10505                           tblptrl	equ	0xFF6
 10506                           tablat	equ	0xFF5
 10507                           prodh	equ	0xFF4
 10508                           prodl	equ	0xFF3
 10509                           intcon	equ	0xFF2
 10510                           intcon2	equ	0xFF1
 10511                           indf0	equ	0xFEF
 10512                           postinc0	equ	0xFEE
 10513                           fsr0h	equ	0xFEA
 10514                           fsr0l	equ	0xFE9
 10515                           wreg	equ	0xFE8
 10516                           postinc1	equ	0xFE6
 10517                           plusw1	equ	0xFE3
 10518                           fsr1h	equ	0xFE2
 10519                           fsr1l	equ	0xFE1
 10520                           indf2	equ	0xFDF
 10521                           postinc2	equ	0xFDE
 10522                           postdec2	equ	0xFDD
 10523                           plusw2	equ	0xFDB
 10524                           fsr2h	equ	0xFDA
 10525                           fsr2l	equ	0xFD9
 10526                           status	equ	0xFD8
 10527                           
 10528 ;; *************** function _DHCP_WriteZeros *****************
 10529 ;; Defined at:
 10530 ;;		line 277 in file "../../TCPIP Library/source/dhcp_client.c"
 10531 ;; Parameters:    Size  Location     Type
 10532 ;;  length          2    3[COMRAM] unsigned int 
 10533 ;; Auto vars:     Size  Location     Type
 10534 ;;		None
 10535 ;; Return value:  Size  Location     Type
 10536 ;;		None               void
 10537 ;; Registers used:
 10538 ;;		wreg, status,2, status,0, cstack
 10539 ;; Tracked objects:
 10540 ;;		On entry : 0/0
 10541 ;;		On exit  : 0/0
 10542 ;;		Unchanged: 0/0
 10543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10544 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10547 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10548 ;;Total ram usage:        2 bytes
 10549 ;; Hardware stack levels used:    1
 10550 ;; Hardware stack levels required when called:    5
 10551 ;; This function calls:
 10552 ;;		_ETH_Write8
 10553 ;; This function is called by:
 10554 ;;		_DHCP_Request
 10555 ;; This function uses a non-reentrant model
 10556 ;;
 10557                           
 10558                           	psect	text46
 10559  008B3C                     __ptext46:
 10560                           	opt stack 0
 10561  008B3C                     _DHCP_WriteZeros:
 10562                           	opt stack 19
 10563                           
 10564                           ;dhcp_client.c: 279: while(length--)
 10565                           
 10566                           ; BSR set to: 1
 10567                           ;incstack = 0
 10568  008B3C  D003               	goto	l8376
 10569  008B3E                     l8374:
 10570                           
 10571                           ;dhcp_client.c: 280: {
 10572                           ;dhcp_client.c: 281: ETH_Write8(0);
 10573  008B3E  0E00               	movlw	0
 10574  008B40  EC85  F045         	call	_ETH_Write8
 10575  008B44                     l8376:
 10576  008B44  0604               	decf	DHCP_WriteZeros@length,f,c
 10577  008B46  A0D8               	btfss	status,0,c
 10578  008B48  0605               	decf	DHCP_WriteZeros@length+1,f,c
 10579  008B4A  2804               	incf	DHCP_WriteZeros@length,w,c
 10580  008B4C  E1F8               	bnz	l8374
 10581  008B4E  2805               	incf	DHCP_WriteZeros@length+1,w,c
 10582  008B50  E1F6               	bnz	l8374
 10583  008B52  0012               	return		;funcret
 10584  008B54                     __end_of_DHCP_WriteZeros:
 10585                           	opt stack 0
 10586                           tosu	equ	0xFFF
 10587                           tosh	equ	0xFFE
 10588                           tosl	equ	0xFFD
 10589                           pclath	equ	0xFFA
 10590                           tblptru	equ	0xFF8
 10591                           tblptrh	equ	0xFF7
 10592                           tblptrl	equ	0xFF6
 10593                           tablat	equ	0xFF5
 10594                           prodh	equ	0xFF4
 10595                           prodl	equ	0xFF3
 10596                           intcon	equ	0xFF2
 10597                           intcon2	equ	0xFF1
 10598                           indf0	equ	0xFEF
 10599                           postinc0	equ	0xFEE
 10600                           fsr0h	equ	0xFEA
 10601                           fsr0l	equ	0xFE9
 10602                           wreg	equ	0xFE8
 10603                           postinc1	equ	0xFE6
 10604                           plusw1	equ	0xFE3
 10605                           fsr1h	equ	0xFE2
 10606                           fsr1l	equ	0xFE1
 10607                           indf2	equ	0xFDF
 10608                           postinc2	equ	0xFDE
 10609                           postdec2	equ	0xFDD
 10610                           plusw2	equ	0xFDB
 10611                           fsr2h	equ	0xFDA
 10612                           fsr2l	equ	0xFD9
 10613                           status	equ	0xFD8
 10614                           
 10615 ;; *************** function _ARPV4_Update *****************
 10616 ;; Defined at:
 10617 ;;		line 179 in file "../../TCPIP Library/source/arpv4.c"
 10618 ;; Parameters:    Size  Location     Type
 10619 ;;		None
 10620 ;; Auto vars:     Size  Location     Type
 10621 ;;  x               1    3[COMRAM] unsigned char 
 10622 ;;  entryPointer    2    1[COMRAM] PTR struct .
 10623 ;;		 -> arpMap(104), 
 10624 ;; Return value:  Size  Location     Type
 10625 ;;		None               void
 10626 ;; Registers used:
 10627 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10628 ;; Tracked objects:
 10629 ;;		On entry : F/1
 10630 ;;		On exit  : F/1
 10631 ;;		Unchanged: F/0
 10632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10634 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10636 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10637 ;;Total ram usage:        3 bytes
 10638 ;; Hardware stack levels used:    1
 10639 ;; Hardware stack levels required when called:    3
 10640 ;; This function calls:
 10641 ;;		Nothing
 10642 ;; This function is called by:
 10643 ;;		_Network_Manage
 10644 ;; This function uses a non-reentrant model
 10645 ;;
 10646                           
 10647                           	psect	text47
 10648  00883C                     __ptext47:
 10649                           	opt stack 0
 10650  00883C                     _ARPV4_Update:
 10651                           	opt stack 26
 10652                           
 10653                           ; BSR set to: 1
 10654                           ;arpv4.c: 181: arpMap_t *entryPointer = arpMap;
 10655                           
 10656                           ;incstack = 0
 10657  00883C  0E00               	movlw	low _arpMap
 10658  00883E  6E02               	movwf	ARPV4_Update@entryPointer,c
 10659  008840  0E03               	movlw	high _arpMap
 10660  008842  6E03               	movwf	ARPV4_Update@entryPointer+1,c
 10661                           
 10662                           ; BSR set to: 1
 10663                           ;arpv4.c: 182: for(uint8_t x=0; x < 8; x++)
 10664  008844  6A04               	clrf	ARPV4_Update@x,c
 10665  008846                     l10120:
 10666                           
 10667                           ; BSR set to: 1
 10668                           ;arpv4.c: 183: {
 10669                           ;arpv4.c: 184: entryPointer->age ++;
 10670  008846  EE20 F00C          	lfsr	2,12
 10671  00884A  5002               	movf	ARPV4_Update@entryPointer,w,c
 10672  00884C  26D9               	addwf	fsr2l,f,c
 10673  00884E  5003               	movf	ARPV4_Update@entryPointer+1,w,c
 10674  008850  22DA               	addwfc	fsr2h,f,c
 10675  008852  2ADF               	incf	indf2,f,c
 10676                           
 10677                           ; BSR set to: 1
 10678                           ;arpv4.c: 185: entryPointer ++;
 10679  008854  0E0D               	movlw	13
 10680  008856  2602               	addwf	ARPV4_Update@entryPointer,f,c
 10681  008858  0E00               	movlw	0
 10682  00885A  2203               	addwfc	ARPV4_Update@entryPointer+1,f,c
 10683                           
 10684                           ; BSR set to: 1
 10685  00885C  2A04               	incf	ARPV4_Update@x,f,c
 10686                           
 10687                           ; BSR set to: 1
 10688  00885E  0E07               	movlw	7
 10689  008860  6404               	cpfsgt	ARPV4_Update@x,c
 10690  008862  D7F1               	goto	l10120
 10691  008864  0C07               	retlw	7
 10692  008866                     __end_of_ARPV4_Update:
 10693                           	opt stack 0
 10694                           tosu	equ	0xFFF
 10695                           tosh	equ	0xFFE
 10696                           tosl	equ	0xFFD
 10697                           pclath	equ	0xFFA
 10698                           tblptru	equ	0xFF8
 10699                           tblptrh	equ	0xFF7
 10700                           tblptrl	equ	0xFF6
 10701                           tablat	equ	0xFF5
 10702                           prodh	equ	0xFF4
 10703                           prodl	equ	0xFF3
 10704                           intcon	equ	0xFF2
 10705                           intcon2	equ	0xFF1
 10706                           indf0	equ	0xFEF
 10707                           postinc0	equ	0xFEE
 10708                           fsr0h	equ	0xFEA
 10709                           fsr0l	equ	0xFE9
 10710                           wreg	equ	0xFE8
 10711                           postinc1	equ	0xFE6
 10712                           plusw1	equ	0xFE3
 10713                           fsr1h	equ	0xFE2
 10714                           fsr1l	equ	0xFE1
 10715                           indf2	equ	0xFDF
 10716                           postinc2	equ	0xFDE
 10717                           postdec2	equ	0xFDD
 10718                           plusw2	equ	0xFDB
 10719                           fsr2h	equ	0xFDA
 10720                           fsr2l	equ	0xFD9
 10721                           status	equ	0xFD8
 10722                           
 10723 ;; *************** function _Network_Init *****************
 10724 ;; Defined at:
 10725 ;;		line 65 in file "../../TCPIP Library/source/network.c"
 10726 ;; Parameters:    Size  Location     Type
 10727 ;;		None
 10728 ;; Auto vars:     Size  Location     Type
 10729 ;;		None
 10730 ;; Return value:  Size  Location     Type
 10731 ;;		None               void
 10732 ;; Registers used:
 10733 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10734 ;; Tracked objects:
 10735 ;;		On entry : 0/2
 10736 ;;		On exit  : F/2
 10737 ;;		Unchanged: 0/0
 10738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10743 ;;Total ram usage:        0 bytes
 10744 ;; Hardware stack levels used:    1
 10745 ;; Hardware stack levels required when called:    9
 10746 ;; This function calls:
 10747 ;;		_ARPV4_Init
 10748 ;;		_ETH_Init
 10749 ;;		_IPV4_Init
 10750 ;;		_TCP_Init
 10751 ;;		_time
 10752 ;; This function is called by:
 10753 ;;		_main
 10754 ;; This function uses a non-reentrant model
 10755 ;;
 10756                           
 10757                           	psect	text48
 10758  0087B8                     __ptext48:
 10759                           	opt stack 0
 10760  0087B8                     _Network_Init:
 10761                           	opt stack 21
 10762                           
 10763                           ;network.c: 67: ETH_Init();
 10764                           
 10765                           ; BSR set to: 1
 10766                           ;incstack = 0
 10767  0087B8  EC40  F037         	call	_ETH_Init	;wreg free
 10768                           
 10769                           ;network.c: 68: ARPV4_Init();
 10770  0087BC  EC6B  F045         	call	_ARPV4_Init	;wreg free
 10771                           
 10772                           ;network.c: 69: IPV4_Init();
 10773  0087C0  EC01  F046         	call	_IPV4_Init	;wreg free
 10774                           
 10775                           ; BSR set to: 1
 10776                           ;network.c: 70: TCP_Init();
 10777  0087C4  EC5E  F045         	call	_TCP_Init	;wreg free
 10778                           
 10779                           ; BSR set to: 2
 10780                           ;network.c: 72: time(&arpTimer);
 10781  0087C8  0EB3               	movlw	low _arpTimer
 10782  0087CA  6E02               	movwf	time@t,c
 10783  0087CC  0E02               	movlw	high _arpTimer
 10784  0087CE  6E03               	movwf	time@t+1,c
 10785  0087D0  EC36  F040         	call	_time	;wreg free
 10786                           
 10787                           ;network.c: 73: arpTimer += 10;
 10788  0087D4  0E0A               	movlw	10
 10789  0087D6  0102               	movlb	2	; () banked
 10790  0087D8  27B3               	addwf	_arpTimer& (0+255),f,b
 10791  0087DA  0E00               	movlw	0
 10792  0087DC  23B4               	addwfc	(_arpTimer+1)& (0+255),f,b
 10793  0087DE  23B5               	addwfc	(_arpTimer+2)& (0+255),f,b
 10794  0087E0  23B6               	addwfc	(_arpTimer+3)& (0+255),f,b
 10795                           
 10796                           ; BSR set to: 2
 10797  0087E2  0C00               	retlw	0	;funcret
 10798  0087E4                     __end_of_Network_Init:
 10799                           	opt stack 0
 10800                           tosu	equ	0xFFF
 10801                           tosh	equ	0xFFE
 10802                           tosl	equ	0xFFD
 10803                           pclath	equ	0xFFA
 10804                           tblptru	equ	0xFF8
 10805                           tblptrh	equ	0xFF7
 10806                           tblptrl	equ	0xFF6
 10807                           tablat	equ	0xFF5
 10808                           prodh	equ	0xFF4
 10809                           prodl	equ	0xFF3
 10810                           intcon	equ	0xFF2
 10811                           intcon2	equ	0xFF1
 10812                           indf0	equ	0xFEF
 10813                           postinc0	equ	0xFEE
 10814                           fsr0h	equ	0xFEA
 10815                           fsr0l	equ	0xFE9
 10816                           wreg	equ	0xFE8
 10817                           postinc1	equ	0xFE6
 10818                           plusw1	equ	0xFE3
 10819                           fsr1h	equ	0xFE2
 10820                           fsr1l	equ	0xFE1
 10821                           indf2	equ	0xFDF
 10822                           postinc2	equ	0xFDE
 10823                           postdec2	equ	0xFDD
 10824                           plusw2	equ	0xFDB
 10825                           fsr2h	equ	0xFDA
 10826                           fsr2l	equ	0xFD9
 10827                           status	equ	0xFD8
 10828                           
 10829 ;; *************** function _TCP_Init *****************
 10830 ;; Defined at:
 10831 ;;		line 1173 in file "../../TCPIP Library/source/tcpv4.c"
 10832 ;; Parameters:    Size  Location     Type
 10833 ;;		None
 10834 ;; Auto vars:     Size  Location     Type
 10835 ;;		None
 10836 ;; Return value:  Size  Location     Type
 10837 ;;		None               void
 10838 ;; Registers used:
 10839 ;;		wreg, status,2
 10840 ;; Tracked objects:
 10841 ;;		On entry : F/1
 10842 ;;		On exit  : F/2
 10843 ;;		Unchanged: 0/0
 10844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10849 ;;Total ram usage:        0 bytes
 10850 ;; Hardware stack levels used:    1
 10851 ;; Hardware stack levels required when called:    3
 10852 ;; This function calls:
 10853 ;;		Nothing
 10854 ;; This function is called by:
 10855 ;;		_Network_Init
 10856 ;; This function uses a non-reentrant model
 10857 ;;
 10858                           
 10859                           	psect	text49
 10860  008ABC                     __ptext49:
 10861                           	opt stack 0
 10862  008ABC                     _TCP_Init:
 10863                           	opt stack 26
 10864                           
 10865                           ; BSR set to: 1
 10866                           ;tcpv4.c: 1175: tcbList = (0);
 10867                           
 10868                           ; BSR set to: 2
 10869                           ;incstack = 0
 10870  008ABC  6BA2               	clrf	_tcbList& (0+255),b
 10871  008ABE  6BA3               	clrf	(_tcbList+1)& (0+255),b
 10872                           
 10873                           ;tcpv4.c: 1176: tcbListSize = 0;
 10874  008AC0  6BA7               	clrf	_tcbListSize& (0+255),b
 10875                           
 10876                           ; BSR set to: 1
 10877                           ;tcpv4.c: 1177: nextAvailablePort = (1024u);
 10878  008AC2  0E04               	movlw	4
 10879  008AC4  6F9D               	movwf	(_nextAvailablePort+1)& (0+255),b
 10880  008AC6  0E00               	movlw	0
 10881  008AC8  6B9C               	clrf	_nextAvailablePort& (0+255),b
 10882                           
 10883                           ; BSR set to: 1
 10884                           ;tcpv4.c: 1178: nextSequenceNumber = 0;
 10885  008ACA  0102               	movlb	2	; () banked
 10886  008ACC  6B2E               	clrf	_nextSequenceNumber& (0+255),b
 10887  008ACE  6B2F               	clrf	(_nextSequenceNumber+1)& (0+255),b
 10888  008AD0  6B30               	clrf	(_nextSequenceNumber+2)& (0+255),b
 10889  008AD2  6B31               	clrf	(_nextSequenceNumber+3)& (0+255),b
 10890                           
 10891                           ; BSR set to: 2
 10892  008AD4  0012               	return		;funcret
 10893  008AD6                     __end_of_TCP_Init:
 10894                           	opt stack 0
 10895                           tosu	equ	0xFFF
 10896                           tosh	equ	0xFFE
 10897                           tosl	equ	0xFFD
 10898                           pclath	equ	0xFFA
 10899                           tblptru	equ	0xFF8
 10900                           tblptrh	equ	0xFF7
 10901                           tblptrl	equ	0xFF6
 10902                           tablat	equ	0xFF5
 10903                           prodh	equ	0xFF4
 10904                           prodl	equ	0xFF3
 10905                           intcon	equ	0xFF2
 10906                           intcon2	equ	0xFF1
 10907                           indf0	equ	0xFEF
 10908                           postinc0	equ	0xFEE
 10909                           fsr0h	equ	0xFEA
 10910                           fsr0l	equ	0xFE9
 10911                           wreg	equ	0xFE8
 10912                           postinc1	equ	0xFE6
 10913                           plusw1	equ	0xFE3
 10914                           fsr1h	equ	0xFE2
 10915                           fsr1l	equ	0xFE1
 10916                           indf2	equ	0xFDF
 10917                           postinc2	equ	0xFDE
 10918                           postdec2	equ	0xFDD
 10919                           plusw2	equ	0xFDB
 10920                           fsr2h	equ	0xFDA
 10921                           fsr2l	equ	0xFD9
 10922                           status	equ	0xFD8
 10923                           
 10924 ;; *************** function _IPV4_Init *****************
 10925 ;; Defined at:
 10926 ;;		line 78 in file "../../TCPIP Library/source/ipv4.c"
 10927 ;; Parameters:    Size  Location     Type
 10928 ;;		None
 10929 ;; Auto vars:     Size  Location     Type
 10930 ;;		None
 10931 ;; Return value:  Size  Location     Type
 10932 ;;		None               void
 10933 ;; Registers used:
 10934 ;;		None
 10935 ;; Tracked objects:
 10936 ;;		On entry : 0/2
 10937 ;;		On exit  : F/1
 10938 ;;		Unchanged: 0/0
 10939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10944 ;;Total ram usage:        0 bytes
 10945 ;; Hardware stack levels used:    1
 10946 ;; Hardware stack levels required when called:    3
 10947 ;; This function calls:
 10948 ;;		Nothing
 10949 ;; This function is called by:
 10950 ;;		_Network_Init
 10951 ;; This function uses a non-reentrant model
 10952 ;;
 10953                           
 10954                           	psect	text50
 10955  008C02                     __ptext50:
 10956                           	opt stack 0
 10957  008C02                     _IPV4_Init:
 10958                           	opt stack 26
 10959                           
 10960                           ;ipv4.c: 80: ipv4Address = 0;
 10961                           
 10962                           ; BSR set to: 2
 10963                           ;incstack = 0
 10964  008C02  0101               	movlb	1	; () banked
 10965  008C04  6B8E               	clrf	_ipv4Address& (0+255),b
 10966  008C06  6B8F               	clrf	(_ipv4Address+1)& (0+255),b
 10967  008C08  6B90               	clrf	(_ipv4Address+2)& (0+255),b
 10968  008C0A  6B91               	clrf	(_ipv4Address+3)& (0+255),b
 10969                           
 10970                           ; BSR set to: 1
 10971  008C0C  0012               	return		;funcret
 10972  008C0E                     __end_of_IPV4_Init:
 10973                           	opt stack 0
 10974                           tosu	equ	0xFFF
 10975                           tosh	equ	0xFFE
 10976                           tosl	equ	0xFFD
 10977                           pclath	equ	0xFFA
 10978                           tblptru	equ	0xFF8
 10979                           tblptrh	equ	0xFF7
 10980                           tblptrl	equ	0xFF6
 10981                           tablat	equ	0xFF5
 10982                           prodh	equ	0xFF4
 10983                           prodl	equ	0xFF3
 10984                           intcon	equ	0xFF2
 10985                           intcon2	equ	0xFF1
 10986                           indf0	equ	0xFEF
 10987                           postinc0	equ	0xFEE
 10988                           fsr0h	equ	0xFEA
 10989                           fsr0l	equ	0xFE9
 10990                           wreg	equ	0xFE8
 10991                           postinc1	equ	0xFE6
 10992                           plusw1	equ	0xFE3
 10993                           fsr1h	equ	0xFE2
 10994                           fsr1l	equ	0xFE1
 10995                           indf2	equ	0xFDF
 10996                           postinc2	equ	0xFDE
 10997                           postdec2	equ	0xFDD
 10998                           plusw2	equ	0xFDB
 10999                           fsr2h	equ	0xFDA
 11000                           fsr2l	equ	0xFD9
 11001                           status	equ	0xFD8
 11002                           
 11003 ;; *************** function _ETH_Init *****************
 11004 ;; Defined at:
 11005 ;;		line 94 in file "../../TCPIP Library/ethernet_drivers/encX24J600_driver.c"
 11006 ;; Parameters:    Size  Location     Type
 11007 ;;		None
 11008 ;; Auto vars:     Size  Location     Type
 11009 ;;  phcon1_val      2   21[COMRAM] unsigned int 
 11010 ;; Return value:  Size  Location     Type
 11011 ;;		None               void
 11012 ;; Registers used:
 11013 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11014 ;; Tracked objects:
 11015 ;;		On entry : 0/2
 11016 ;;		On exit  : 0/0
 11017 ;;		Unchanged: 0/0
 11018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11020 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11021 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11022 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11023 ;;Total ram usage:        4 bytes
 11024 ;; Hardware stack levels used:    1
 11025 ;; Hardware stack levels required when called:    8
 11026 ;; This function calls:
 11027 ;;		_ENCx24_BFS
 11028 ;;		_ENCx24_PHYWrite
 11029 ;;		_ENCx24_PhyRead
 11030 ;;		_ENCx24_Read
 11031 ;;		_ENCx24_Write
 11032 ;;		_ETH_CheckLinkUp
 11033 ;;		_ETH_GetMAC
 11034 ;;		_ETH_SendSystemReset
 11035 ;;		_SPI_ExchangeByte
 11036 ;; This function is called by:
 11037 ;;		_Network_Init
 11038 ;; This function uses a non-reentrant model
 11039 ;;
 11040                           
 11041                           	psect	text51
 11042  006E80                     __ptext51:
 11043                           	opt stack 0
 11044  006E80                     _ETH_Init:
 11045                           	opt stack 21
 11046                           
 11047                           ;encX24J600_driver.c: 96: uint16_t phcon1_val;
 11048                           ;encX24J600_driver.c: 99: LATBbits.LATB5 = 0;
 11049                           
 11050                           ; BSR set to: 1
 11051                           ;incstack = 0
 11052  006E80  9A8A               	bcf	3978,5,c	;volatile
 11053                           
 11054                           ;encX24J600_driver.c: 100: TRISBbits.TRISB5 = 0;
 11055  006E82  9A93               	bcf	3987,5,c	;volatile
 11056                           
 11057                           ;encX24J600_driver.c: 101: _delay((unsigned long)((10)*(41666667UL/4000.0)));
 11058  006E84  0E88               	movlw	136
 11059  006E86  6E14               	movwf	??_ETH_Init& (0+255),c
 11060  006E88  0E46               	movlw	70
 11061  006E8A                     u16227:
 11062  006E8A  2EE8               	decfsz	wreg,f,c
 11063  006E8C  D7FE               	goto	u16227
 11064  006E8E  2E14               	decfsz	??_ETH_Init& (0+255),f,c
 11065  006E90  D7FC               	goto	u16227
 11066  006E92  D000               	nop2	
 11067                           
 11068                           ;encX24J600_driver.c: 105: PORTBbits.RB2 = 1;
 11069  006E94  8481               	bsf	3969,2,c	;volatile
 11070                           
 11071                           ;encX24J600_driver.c: 106: TRISBbits.TRISB2 = 0;
 11072  006E96  9493               	bcf	3987,2,c	;volatile
 11073                           
 11074                           ;encX24J600_driver.c: 109: LATBbits.LATB5 = 1;
 11075  006E98  8A8A               	bsf	3978,5,c	;volatile
 11076                           
 11077                           ;encX24J600_driver.c: 110: _delay((unsigned long)((400)*(41666667UL/4000000.0)));
 11078  006E9A  0E06               	movlw	6
 11079  006E9C  6E14               	movwf	??_ETH_Init& (0+255),c
 11080  006E9E  0E68               	movlw	104
 11081  006EA0                     u16237:
 11082  006EA0  2EE8               	decfsz	wreg,f,c
 11083  006EA2  D7FE               	goto	u16237
 11084  006EA4  2E14               	decfsz	??_ETH_Init& (0+255),f,c
 11085  006EA6  D7FC               	goto	u16237
 11086                           
 11087                           ;encX24J600_driver.c: 113: TRISBbits.TRISB2 = 1;
 11088  006EA8  8493               	bsf	3987,2,c	;volatile
 11089  006EAA  868A               	bsf	3978,3,c	;volatile
 11090                           
 11091                           ;encX24J600_driver.c: 117: ethData.error = 0;
 11092  006EAC  0101               	movlb	1	; () banked
 11093  006EAE  9183               	bcf	_ethData& (0+255),0,b	;volatile
 11094                           
 11095                           ; BSR set to: 1
 11096                           ;encX24J600_driver.c: 118: ethData.up = 0;
 11097  006EB0  9583               	bcf	_ethData& (0+255),2,b	;volatile
 11098                           
 11099                           ; BSR set to: 1
 11100                           ;encX24J600_driver.c: 119: ethData.linkChange = 0;
 11101  006EB2  9983               	bcf	_ethData& (0+255),4,b	;volatile
 11102                           
 11103                           ; BSR set to: 1
 11104                           ;encX24J600_driver.c: 120: ethData.bufferBusy = 0;
 11105  006EB4  9B83               	bcf	_ethData& (0+255),5,b	;volatile
 11106                           
 11107                           ; BSR set to: 1
 11108                           ;encX24J600_driver.c: 121: ethData.saveRDPT = 0;
 11109  006EB6  6B86               	clrf	(_ethData+3)& (0+255),b	;volatile
 11110  006EB8  6B87               	clrf	(_ethData+4)& (0+255),b	;volatile
 11111                           
 11112                           ; BSR set to: 1
 11113                           ;encX24J600_driver.c: 123: ETH_SendSystemReset();
 11114  006EBA  EC05  F03F         	call	_ETH_SendSystemReset	;wreg free
 11115                           
 11116                           ;encX24J600_driver.c: 126: nextPacketPointer = 0x1600ul;
 11117  006EBE  0E16               	movlw	22
 11118  006EC0  0101               	movlb	1	; () banked
 11119  006EC2  6F9F               	movwf	(_nextPacketPointer+1)& (0+255),b
 11120  006EC4  6B9E               	clrf	_nextPacketPointer& (0+255),b
 11121                           
 11122                           ; BSR set to: 1
 11123                           ;encX24J600_driver.c: 129: ENCx24_Write(XJ600_ETXSTL, 0x0000ul);
 11124  006EC6  0E00               	movlw	0
 11125  006EC8  6A06               	clrf	ENCx24_Write@data+1,c
 11126  006ECA  6A05               	clrf	ENCx24_Write@data,c
 11127  006ECC  EC72  F042         	call	_ENCx24_Write
 11128                           
 11129                           ;encX24J600_driver.c: 130: ENCx24_Write(XJ600_ERXSTL, 0x1600ul);
 11130  006ED0  0E16               	movlw	22
 11131  006ED2  6E06               	movwf	ENCx24_Write@data+1,c
 11132  006ED4  6A05               	clrf	ENCx24_Write@data,c
 11133  006ED6  0E04               	movlw	4
 11134  006ED8  EC72  F042         	call	_ENCx24_Write
 11135                           
 11136                           ;encX24J600_driver.c: 131: ENCx24_Write(XJ600_ERXTAILL, 0x6000ul - 2);
 11137  006EDC  0E5F               	movlw	95
 11138  006EDE  6E06               	movwf	ENCx24_Write@data+1,c
 11139  006EE0  0EFE               	movlw	254
 11140  006EE2  6E05               	movwf	ENCx24_Write@data,c
 11141  006EE4  0E06               	movlw	6
 11142  006EE6  EC72  F042         	call	_ENCx24_Write
 11143                           
 11144                           ;encX24J600_driver.c: 132: ENCx24_Write(XJ600_EUDASTL,0x15FFul + 1);
 11145  006EEA  0E16               	movlw	22
 11146  006EEC  6E06               	movwf	ENCx24_Write@data+1,c
 11147  006EEE  6A05               	clrf	ENCx24_Write@data,c
 11148  006EF0  0EF6               	movlw	246
 11149  006EF2  EC72  F042         	call	_ENCx24_Write
 11150                           
 11151                           ;encX24J600_driver.c: 133: ENCx24_Write(XJ600_EUDANDL,0x15FFul + 1);
 11152  006EF6  0E16               	movlw	22
 11153  006EF8  6E06               	movwf	ENCx24_Write@data+1,c
 11154  006EFA  6A05               	clrf	ENCx24_Write@data,c
 11155  006EFC  0EF8               	movlw	248
 11156  006EFE  EC72  F042         	call	_ENCx24_Write
 11157                           
 11158                           ;encX24J600_driver.c: 135: phcon1_val = ENCx24_PhyRead(PHCON1);
 11159  006F02  0E00               	movlw	0
 11160  006F04  EC50  F042         	call	_ENCx24_PhyRead
 11161  006F08  C00B  F016         	movff	?_ENCx24_PhyRead,ETH_Init@phcon1_val
 11162  006F0C  C00C  F017         	movff	?_ENCx24_PhyRead+1,ETH_Init@phcon1_val+1
 11163                           
 11164                           ;encX24J600_driver.c: 136: phcon1_val &= 0xF7FF;
 11165  006F10  9617               	bcf	ETH_Init@phcon1_val+1,3,c
 11166                           
 11167                           ;encX24J600_driver.c: 137: ENCx24_PHYWrite(PHCON1, phcon1_val);
 11168  006F12  C016  F00B         	movff	ETH_Init@phcon1_val,ENCx24_PHYWrite@data
 11169  006F16  C017  F00C         	movff	ETH_Init@phcon1_val+1,ENCx24_PHYWrite@data+1
 11170  006F1A  0E00               	movlw	0
 11171  006F1C  ECF2  F043         	call	_ENCx24_PHYWrite
 11172                           
 11173                           ;encX24J600_driver.c: 144: ENCx24_PHYWrite(PHANA,0x05E1);
 11174  006F20  0E05               	movlw	5
 11175  006F22  6E0C               	movwf	ENCx24_PHYWrite@data+1,c
 11176  006F24  0EE1               	movlw	225
 11177  006F26  6E0B               	movwf	ENCx24_PHYWrite@data,c
 11178  006F28  0E04               	movlw	4
 11179  006F2A  ECF2  F043         	call	_ENCx24_PHYWrite
 11180                           
 11181                           ;encX24J600_driver.c: 147: while((ENCx24_Read(XJ600_ESTATL)&0X1100)!=0x1100)
 11182  006F2E  D008               	goto	l10048
 11183  006F30                     l10046:
 11184                           
 11185                           ;encX24J600_driver.c: 148: {
 11186                           ;encX24J600_driver.c: 149: _delay((unsigned long)((256)*(41666667UL/4000000.0)));
 11187  006F30  0E04               	movlw	4
 11188  006F32  6E14               	movwf	??_ETH_Init& (0+255),c
 11189  006F34  0E75               	movlw	117
 11190  006F36                     u16247:
 11191  006F36  2EE8               	decfsz	wreg,f,c
 11192  006F38  D7FE               	goto	u16247
 11193  006F3A  2E14               	decfsz	??_ETH_Init& (0+255),f,c
 11194  006F3C  D7FC               	goto	u16247
 11195  006F3E  F000               	nop	
 11196  006F40                     l10048:
 11197  006F40  6A14               	clrf	??_ETH_Init& (0+255),c
 11198  006F42  0E11               	movlw	17
 11199  006F44  6E15               	movwf	(??_ETH_Init+1)& (0+255),c
 11200  006F46  0EFA               	movlw	250
 11201  006F48  ECC0  F041         	call	_ENCx24_Read
 11202  006F4C  5014               	movf	??_ETH_Init,w,c
 11203  006F4E  1605               	andwf	?_ENCx24_Read,f,c
 11204  006F50  5015               	movf	??_ETH_Init+1,w,c
 11205  006F52  1606               	andwf	?_ENCx24_Read+1,f,c
 11206  006F54  0E11               	movlw	17
 11207  006F56  1806               	xorwf	?_ENCx24_Read+1,w,c
 11208  006F58  1005               	iorwf	?_ENCx24_Read,w,c
 11209  006F5A  E1EA               	bnz	l10046
 11210                           
 11211                           ;encX24J600_driver.c: 150: }
 11212                           ;encX24J600_driver.c: 163: ENCx24_Write(XJ600_ERXFCONL, 0x0059);
 11213  006F5C  6A06               	clrf	ENCx24_Write@data+1,c
 11214  006F5E  0E59               	movlw	89
 11215  006F60  6E05               	movwf	ENCx24_Write@data,c
 11216  006F62  0E34               	movlw	52
 11217  006F64  EC72  F042         	call	_ENCx24_Write
 11218                           
 11219                           ;encX24J600_driver.c: 173: ENCx24_Write(XJ600_EIEL,0x884B);
 11220  006F68  0E88               	movlw	136
 11221  006F6A  6E06               	movwf	ENCx24_Write@data+1,c
 11222  006F6C  0E4B               	movlw	75
 11223  006F6E  6E05               	movwf	ENCx24_Write@data,c
 11224  006F70  0E72               	movlw	114
 11225  006F72  EC72  F042         	call	_ENCx24_Write
 11226                           
 11227                           ;encX24J600_driver.c: 176: ENCx24_BFS(XJ600_ECON1L,0x0001);
 11228  006F76  6A06               	clrf	ENCx24_BFS@bitMask+1,c
 11229  006F78  0E01               	movlw	1
 11230  006F7A  6E05               	movwf	ENCx24_BFS@bitMask,c
 11231  006F7C  0EFE               	movlw	254
 11232  006F7E  EC93  F042         	call	_ENCx24_BFS
 11233                           
 11234                           ;encX24J600_driver.c: 180: SPI_ExchangeByte(b0sel_inst);
 11235  006F82  0EC0               	movlw	192
 11236  006F84  ECEE  F045         	call	_SPI_ExchangeByte
 11237                           
 11238                           ;encX24J600_driver.c: 182: ETH_GetMAC((uint8_t *)&ethMAC);
 11239  006F88  0EA7               	movlw	low _ethMAC
 11240  006F8A  6E08               	movwf	ETH_GetMAC@macAddr,c
 11241  006F8C  0E02               	movlw	high _ethMAC
 11242  006F8E  6E09               	movwf	ETH_GetMAC@macAddr+1,c
 11243  006F90  ECC8  F03E         	call	_ETH_GetMAC	;wreg free
 11244                           
 11245                           ;encX24J600_driver.c: 185: ETH_CheckLinkUp();
 11246  006F94  EF65  F043         	goto	_ETH_CheckLinkUp	;wreg free
 11247  006F98                     __end_of_ETH_Init:
 11248                           	opt stack 0
 11249                           tosu	equ	0xFFF
 11250                           tosh	equ	0xFFE
 11251                           tosl	equ	0xFFD
 11252                           pclath	equ	0xFFA
 11253                           tblptru	equ	0xFF8
 11254                           tblptrh	equ	0xFF7
 11255                           tblptrl	equ	0xFF6
 11256                           tablat	equ	0xFF5
 11257                           prodh	equ	0xFF4
 11258                           prodl	equ	0xFF3
 11259                           intcon	equ	0xFF2
 11260                           intcon2	equ	0xFF1
 11261                           indf0	equ	0xFEF
 11262                           postinc0	equ	0xFEE
 11263                           fsr0h	equ	0xFEA
 11264                           fsr0l	equ	0xFE9
 11265                           wreg	equ	0xFE8
 11266                           postinc1	equ	0xFE6
 11267                           plusw1	equ	0xFE3
 11268                           fsr1h	equ	0xFE2
 11269                           fsr1l	equ	0xFE1
 11270                           indf2	equ	0xFDF
 11271                           postinc2	equ	0xFDE
 11272                           postdec2	equ	0xFDD
 11273                           plusw2	equ	0xFDB
 11274                           fsr2h	equ	0xFDA
 11275                           fsr2l	equ	0xFD9
 11276                           status	equ	0xFD8
 11277                           
 11278 ;; *************** function _ETH_SendSystemReset *****************
 11279 ;; Defined at:
 11280 ;;		line 67 in file "../../TCPIP Library/ethernet_drivers/encX24J600_driver.c"
 11281 ;; Parameters:    Size  Location     Type
 11282 ;;		None
 11283 ;; Auto vars:     Size  Location     Type
 11284 ;;		None
 11285 ;; Return value:  Size  Location     Type
 11286 ;;		None               void
 11287 ;; Registers used:
 11288 ;;		wreg, status,2, status,0, cstack
 11289 ;; Tracked objects:
 11290 ;;		On entry : F/1
 11291 ;;		On exit  : 0/0
 11292 ;;		Unchanged: 0/0
 11293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11296 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11297 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11298 ;;Total ram usage:        2 bytes
 11299 ;; Hardware stack levels used:    1
 11300 ;; Hardware stack levels required when called:    6
 11301 ;; This function calls:
 11302 ;;		_ENCx24_BFS
 11303 ;;		_ENCx24_Read
 11304 ;;		_ENCx24_Write
 11305 ;; This function is called by:
 11306 ;;		_ETH_Init
 11307 ;; This function uses a non-reentrant model
 11308 ;;
 11309                           
 11310                           	psect	text52
 11311  007E0A                     __ptext52:
 11312                           	opt stack 0
 11313  007E0A                     _ETH_SendSystemReset:
 11314                           	opt stack 22
 11315  007E0A                     l9658:
 11316                           
 11317                           ;encX24J600_driver.c: 73: {
 11318                           ;encX24J600_driver.c: 74: ENCx24_Write( XJ600_EUDASTL , 0x1234 );
 11319  007E0A  0E12               	movlw	18
 11320  007E0C  6E06               	movwf	ENCx24_Write@data+1,c
 11321  007E0E  0E34               	movlw	52
 11322  007E10  6E05               	movwf	ENCx24_Write@data,c
 11323  007E12  0EF6               	movlw	246
 11324  007E14  EC72  F042         	call	_ENCx24_Write
 11325                           
 11326                           ;encX24J600_driver.c: 75: } while(0x1234 != ENCx24_Read(XJ600_EUDASTL));
 11327  007E18  0EF6               	movlw	246
 11328  007E1A  ECC0  F041         	call	_ENCx24_Read
 11329  007E1E  0E34               	movlw	52
 11330  007E20  1805               	xorwf	?_ENCx24_Read,w,c
 11331  007E22  E1F3               	bnz	l9658
 11332  007E24  0E12               	movlw	18
 11333  007E26  1806               	xorwf	?_ENCx24_Read+1,w,c
 11334  007E28  E1F0               	bnz	l9658
 11335                           
 11336                           ;encX24J600_driver.c: 78: ENCx24_BFS(XJ600_ECON2L, 0x0010);
 11337  007E2A  6A06               	clrf	ENCx24_BFS@bitMask+1,c
 11338  007E2C  0E10               	movlw	16
 11339  007E2E  6E05               	movwf	ENCx24_BFS@bitMask,c
 11340  007E30  0E6E               	movlw	110
 11341  007E32  EC93  F042         	call	_ENCx24_BFS
 11342  007E36                     l9662:
 11343  007E36  6A0B               	clrf	??_ETH_SendSystemReset& (0+255),c
 11344  007E38  0E1A               	movlw	26
 11345  007E3A  6E0C               	movwf	(??_ETH_SendSystemReset+1)& (0+255),c
 11346  007E3C  0EFA               	movlw	250
 11347  007E3E  ECC0  F041         	call	_ENCx24_Read
 11348  007E42  500B               	movf	??_ETH_SendSystemReset,w,c
 11349  007E44  1605               	andwf	?_ENCx24_Read,f,c
 11350  007E46  500C               	movf	??_ETH_SendSystemReset+1,w,c
 11351  007E48  1606               	andwf	?_ENCx24_Read+1,f,c
 11352  007E4A  0E1A               	movlw	26
 11353  007E4C  1806               	xorwf	?_ENCx24_Read+1,w,c
 11354  007E4E  1005               	iorwf	?_ENCx24_Read,w,c
 11355  007E50  E1F2               	bnz	l9662
 11356                           
 11357                           ;encX24J600_driver.c: 81: _delay((unsigned long)((1)*(41666667UL/4000.0)));
 11358  007E52  0E0E               	movlw	14
 11359  007E54  6E0B               	movwf	??_ETH_SendSystemReset& (0+255),c
 11360  007E56  0E86               	movlw	134
 11361  007E58                     u16257:
 11362  007E58  2EE8               	decfsz	wreg,f,c
 11363  007E5A  D7FE               	goto	u16257
 11364  007E5C  2E0B               	decfsz	??_ETH_SendSystemReset& (0+255),f,c
 11365  007E5E  D7FC               	goto	u16257
 11366                           
 11367                           ;encX24J600_driver.c: 83: }while(0x0 != ENCx24_Read(XJ600_EUDASTL));
 11368  007E60  0EF6               	movlw	246
 11369  007E62  ECC0  F041         	call	_ENCx24_Read
 11370  007E66  5005               	movf	?_ENCx24_Read,w,c
 11371  007E68  1006               	iorwf	?_ENCx24_Read+1,w,c
 11372  007E6A  E1CF               	bnz	l9658
 11373                           
 11374                           ;encX24J600_driver.c: 85: _delay((unsigned long)((1)*(41666667UL/4000.0)));
 11375  007E6C  0E0E               	movlw	14
 11376  007E6E  6E0B               	movwf	??_ETH_SendSystemReset& (0+255),c
 11377  007E70  0E86               	movlw	134
 11378  007E72                     u16267:
 11379  007E72  2EE8               	decfsz	wreg,f,c
 11380  007E74  D7FE               	goto	u16267
 11381  007E76  2E0B               	decfsz	??_ETH_SendSystemReset& (0+255),f,c
 11382  007E78  D7FC               	goto	u16267
 11383  007E7A  0012               	return		;funcret
 11384  007E7C                     __end_of_ETH_SendSystemReset:
 11385                           	opt stack 0
 11386                           tosu	equ	0xFFF
 11387                           tosh	equ	0xFFE
 11388                           tosl	equ	0xFFD
 11389                           pclath	equ	0xFFA
 11390                           tblptru	equ	0xFF8
 11391                           tblptrh	equ	0xFF7
 11392                           tblptrl	equ	0xFF6
 11393                           tablat	equ	0xFF5
 11394                           prodh	equ	0xFF4
 11395                           prodl	equ	0xFF3
 11396                           intcon	equ	0xFF2
 11397                           intcon2	equ	0xFF1
 11398                           indf0	equ	0xFEF
 11399                           postinc0	equ	0xFEE
 11400                           fsr0h	equ	0xFEA
 11401                           fsr0l	equ	0xFE9
 11402                           wreg	equ	0xFE8
 11403                           postinc1	equ	0xFE6
 11404                           plusw1	equ	0xFE3
 11405                           fsr1h	equ	0xFE2
 11406                           fsr1l	equ	0xFE1
 11407                           indf2	equ	0xFDF
 11408                           postinc2	equ	0xFDE
 11409                           postdec2	equ	0xFDD
 11410                           plusw2	equ	0xFDB
 11411                           fsr2h	equ	0xFDA
 11412                           fsr2l	equ	0xFD9
 11413                           status	equ	0xFD8
 11414                           
 11415 ;; *************** function _ETH_CheckLinkUp *****************
 11416 ;; Defined at:
 11417 ;;		line 198 in file "../../TCPIP Library/ethernet_drivers/encX24J600_driver.c"
 11418 ;; Parameters:    Size  Location     Type
 11419 ;;		None
 11420 ;; Auto vars:     Size  Location     Type
 11421 ;;  value           4   14[COMRAM] unsigned long 
 11422 ;;  ret             1   18[COMRAM] unsigned char 
 11423 ;; Return value:  Size  Location     Type
 11424 ;;                  1    wreg      unsigned char 
 11425 ;; Registers used:
 11426 ;;		wreg, status,2, status,0, cstack
 11427 ;; Tracked objects:
 11428 ;;		On entry : 0/2
 11429 ;;		On exit  : 0/0
 11430 ;;		Unchanged: 0/0
 11431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11433 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11435 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11436 ;;Total ram usage:        5 bytes
 11437 ;; Hardware stack levels used:    1
 11438 ;; Hardware stack levels required when called:    7
 11439 ;; This function calls:
 11440 ;;		_ETH_readLinkStatus
 11441 ;; This function is called by:
 11442 ;;		_ETH_Init
 11443 ;;		_Network_WaitForLink
 11444 ;; This function uses a non-reentrant model
 11445 ;;
 11446                           
 11447                           	psect	text53
 11448  0086CA                     __ptext53:
 11449                           	opt stack 0
 11450  0086CA                     _ETH_CheckLinkUp:
 11451                           	opt stack 22
 11452                           
 11453                           ;encX24J600_driver.c: 200: uint32_t value;
 11454                           ;encX24J600_driver.c: 201: bool ret = 0;
 11455                           
 11456                           ;incstack = 0
 11457  0086CA  6A13               	clrf	ETH_CheckLinkUp@ret,c
 11458  0086CC                     i5L__ptext54:
 11459                           	opt stack 0
 11460  0086CC                     i5L_ETH_readLinkStatus:
 11461                           	opt stack 0
 11462  0086CC                     i5Ll9248:
 11463                           	opt stack 22
 11464                           
 11465                           ;encX24J600_driver.c: 195: return (ENCx24_Read(XJ600_ESTATL));
 11466  0086CC  0EFA               	movlw	250
 11467  0086CE  ECC0  F041         	call	_ENCx24_Read
 11468  0086D2  C005  F00B         	movff	?_ENCx24_Read,?_ETH_readLinkStatus
 11469  0086D6  C006  F00C         	movff	?_ENCx24_Read+1,?_ETH_readLinkStatus+1
 11470  0086DA  6A0D               	clrf	?_ETH_readLinkStatus+2,c
 11471  0086DC  6A0E               	clrf	?_ETH_readLinkStatus+3,c
 11472  0086DE                     i5Ll436:
 11473                           	opt stack 22
 11474  0086DE  C00B  F00F         	movff	?_ETH_readLinkStatus,ETH_CheckLinkUp@value
 11475  0086E2  C00C  F010         	movff	?_ETH_readLinkStatus+1,ETH_CheckLinkUp@value+1
 11476  0086E6  C00D  F011         	movff	?_ETH_readLinkStatus+2,ETH_CheckLinkUp@value+2
 11477  0086EA  C00E  F012         	movff	?_ETH_readLinkStatus+3,ETH_CheckLinkUp@value+3
 11478                           
 11479                           ;encX24J600_driver.c: 204: if(value & 0x0100)
 11480  0086EE  A010               	btfss	ETH_CheckLinkUp@value+1,0,c
 11481  0086F0  D004               	goto	l439
 11482                           
 11483                           ;encX24J600_driver.c: 205: {
 11484                           ;encX24J600_driver.c: 206: ethData.up = 1;
 11485  0086F2  0101               	movlb	1	; () banked
 11486  0086F4  8583               	bsf	_ethData& (0+255),2,b	;volatile
 11487                           
 11488                           ; BSR set to: 1
 11489                           ;encX24J600_driver.c: 207: ret = 1;
 11490  0086F6  0E01               	movlw	1
 11491  0086F8  6E13               	movwf	ETH_CheckLinkUp@ret,c
 11492  0086FA                     l439:
 11493                           
 11494                           ;encX24J600_driver.c: 208: }
 11495                           ;encX24J600_driver.c: 209: return ret;
 11496  0086FA  5013               	movf	ETH_CheckLinkUp@ret,w,c
 11497  0086FC  0012               	return		;funcret
 11498  0086FE                     __end_of_ETH_CheckLinkUp:
 11499                           	opt stack 0
 11500                           tosu	equ	0xFFF
 11501                           tosh	equ	0xFFE
 11502                           tosl	equ	0xFFD
 11503                           pclath	equ	0xFFA
 11504                           tblptru	equ	0xFF8
 11505                           tblptrh	equ	0xFF7
 11506                           tblptrl	equ	0xFF6
 11507                           tablat	equ	0xFF5
 11508                           prodh	equ	0xFF4
 11509                           prodl	equ	0xFF3
 11510                           intcon	equ	0xFF2
 11511                           intcon2	equ	0xFF1
 11512                           indf0	equ	0xFEF
 11513                           postinc0	equ	0xFEE
 11514                           fsr0h	equ	0xFEA
 11515                           fsr0l	equ	0xFE9
 11516                           wreg	equ	0xFE8
 11517                           postinc1	equ	0xFE6
 11518                           plusw1	equ	0xFE3
 11519                           fsr1h	equ	0xFE2
 11520                           fsr1l	equ	0xFE1
 11521                           indf2	equ	0xFDF
 11522                           postinc2	equ	0xFDE
 11523                           postdec2	equ	0xFDD
 11524                           plusw2	equ	0xFDB
 11525                           fsr2h	equ	0xFDA
 11526                           fsr2l	equ	0xFD9
 11527                           status	equ	0xFD8
 11528                           
 11529 ;; *************** function _ETH_readLinkStatus *****************
 11530 ;; Defined at:
 11531 ;;		line 193 in file "../../TCPIP Library/ethernet_drivers/encX24J600_driver.c"
 11532 ;; Parameters:    Size  Location     Type
 11533 ;;		None
 11534 ;; Auto vars:     Size  Location     Type
 11535 ;;		None
 11536 ;; Return value:  Size  Location     Type
 11537 ;;                  4   10[COMRAM] unsigned long 
 11538 ;; Registers used:
 11539 ;;		wreg, status,2, status,0, cstack
 11540 ;; Tracked objects:
 11541 ;;		On entry : 0/2
 11542 ;;		On exit  : 0/0
 11543 ;;		Unchanged: 0/0
 11544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11545 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11548 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11549 ;;Total ram usage:        4 bytes
 11550 ;; Hardware stack levels used:    1
 11551 ;; Hardware stack levels required when called:    6
 11552 ;; This function calls:
 11553 ;;		_ENCx24_Read
 11554 ;; This function is called by:
 11555 ;;		_ETH_CheckLinkUp
 11556 ;; This function uses a non-reentrant model
 11557 ;;
 11558                           
 11559                           	psect	text54
 11560  000000                     __ptext54:
 11561                           	opt stack 0
 11562  000000                     _ETH_readLinkStatus:
 11563                           	opt stack 0
 11564  000000                     __end_of_ETH_readLinkStatus:
 11565                           	opt stack 0
 11566                           tosu	equ	0xFFF
 11567                           tosh	equ	0xFFE
 11568                           tosl	equ	0xFFD
 11569                           pclath	equ	0xFFA
 11570                           tblptru	equ	0xFF8
 11571                           tblptrh	equ	0xFF7
 11572                           tblptrl	equ	0xFF6
 11573                           tablat	equ	0xFF5
 11574                           prodh	equ	0xFF4
 11575                           prodl	equ	0xFF3
 11576                           intcon	equ	0xFF2
 11577                           intcon2	equ	0xFF1
 11578                           indf0	equ	0xFEF
 11579                           postinc0	equ	0xFEE
 11580                           fsr0h	equ	0xFEA
 11581                           fsr0l	equ	0xFE9
 11582                           wreg	equ	0xFE8
 11583                           postinc1	equ	0xFE6
 11584                           plusw1	equ	0xFE3
 11585                           fsr1h	equ	0xFE2
 11586                           fsr1l	equ	0xFE1
 11587                           indf2	equ	0xFDF
 11588                           postinc2	equ	0xFDE
 11589                           postdec2	equ	0xFDD
 11590                           plusw2	equ	0xFDB
 11591                           fsr2h	equ	0xFDA
 11592                           fsr2l	equ	0xFD9
 11593                           status	equ	0xFD8
 11594                           
 11595 ;; *************** function _ENCx24_PhyRead *****************
 11596 ;; Defined at:
 11597 ;;		line 203 in file "../../TCPIP Library/ethernet_drivers/encX24j600_spi.c"
 11598 ;; Parameters:    Size  Location     Type
 11599 ;;  a               1    wreg     enum E6676
 11600 ;; Auto vars:     Size  Location     Type
 11601 ;;  a               1   12[COMRAM] enum E6676
 11602 ;; Return value:  Size  Location     Type
 11603 ;;                  2   10[COMRAM] unsigned int 
 11604 ;; Registers used:
 11605 ;;		wreg, status,2, status,0, cstack
 11606 ;; Tracked objects:
 11607 ;;		On entry : 0/1
 11608 ;;		On exit  : 0/0
 11609 ;;		Unchanged: 0/0
 11610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11611 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11612 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11614 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11615 ;;Total ram usage:        3 bytes
 11616 ;; Hardware stack levels used:    1
 11617 ;; Hardware stack levels required when called:    6
 11618 ;; This function calls:
 11619 ;;		_ENCx24_BFC
 11620 ;;		_ENCx24_BFS
 11621 ;;		_ENCx24_Read
 11622 ;;		_ENCx24_Write
 11623 ;; This function is called by:
 11624 ;;		_ETH_Init
 11625 ;; This function uses a non-reentrant model
 11626 ;;
 11627                           
 11628                           	psect	text55
 11629  0084A0                     __ptext55:
 11630                           	opt stack 0
 11631  0084A0                     _ENCx24_PhyRead:
 11632                           	opt stack 22
 11633                           
 11634                           ;incstack = 0
 11635                           ;ENCx24_PhyRead@a stored from wreg
 11636  0084A0  6E0D               	movwf	ENCx24_PhyRead@a,c
 11637                           
 11638                           ;encX24j600_spi.c: 205: ENCx24_Write(XJ600_MIREGADRL,0x0100|a);
 11639  0084A2  0E00               	movlw	0
 11640  0084A4  100D               	iorwf	ENCx24_PhyRead@a,w,c
 11641  0084A6  6E05               	movwf	ENCx24_Write@data,c
 11642  0084A8  0E01               	movlw	1
 11643  0084AA  6E06               	movwf	ENCx24_Write@data+1,c
 11644  0084AC  0E54               	movlw	84
 11645  0084AE  EC72  F042         	call	_ENCx24_Write
 11646                           
 11647                           ;encX24j600_spi.c: 206: ENCx24_BFS(XJ600_MICMDL,0x0001);
 11648  0084B2  6A06               	clrf	ENCx24_BFS@bitMask+1,c
 11649  0084B4  0E01               	movlw	1
 11650  0084B6  6E05               	movwf	ENCx24_BFS@bitMask,c
 11651  0084B8  0E52               	movlw	82
 11652  0084BA  EC93  F042         	call	_ENCx24_BFS
 11653  0084BE                     l9672:
 11654  0084BE  0E6A               	movlw	106
 11655  0084C0  ECC0  F041         	call	_ENCx24_Read
 11656  0084C4  B005               	btfsc	?_ENCx24_Read,0,c
 11657  0084C6  D7FB               	goto	l9672
 11658                           
 11659                           ;encX24j600_spi.c: 208: ENCx24_BFC(XJ600_MICMDL,0x0001);
 11660  0084C8  6A06               	clrf	ENCx24_BFC@bitMask+1,c
 11661  0084CA  0E01               	movlw	1
 11662  0084CC  6E05               	movwf	ENCx24_BFC@bitMask,c
 11663  0084CE  0E52               	movlw	82
 11664  0084D0  ECB3  F042         	call	_ENCx24_BFC
 11665                           
 11666                           ;encX24j600_spi.c: 209: return ENCx24_Read(XJ600_MIRDL);
 11667  0084D4  0E68               	movlw	104
 11668  0084D6  ECC0  F041         	call	_ENCx24_Read
 11669  0084DA  C005  F00B         	movff	?_ENCx24_Read,?_ENCx24_PhyRead
 11670  0084DE  C006  F00C         	movff	?_ENCx24_Read+1,?_ENCx24_PhyRead+1
 11671  0084E2  0012               	return		;funcret
 11672  0084E4                     __end_of_ENCx24_PhyRead:
 11673                           	opt stack 0
 11674                           tosu	equ	0xFFF
 11675                           tosh	equ	0xFFE
 11676                           tosl	equ	0xFFD
 11677                           pclath	equ	0xFFA
 11678                           tblptru	equ	0xFF8
 11679                           tblptrh	equ	0xFF7
 11680                           tblptrl	equ	0xFF6
 11681                           tablat	equ	0xFF5
 11682                           prodh	equ	0xFF4
 11683                           prodl	equ	0xFF3
 11684                           intcon	equ	0xFF2
 11685                           intcon2	equ	0xFF1
 11686                           indf0	equ	0xFEF
 11687                           postinc0	equ	0xFEE
 11688                           fsr0h	equ	0xFEA
 11689                           fsr0l	equ	0xFE9
 11690                           wreg	equ	0xFE8
 11691                           postinc1	equ	0xFE6
 11692                           plusw1	equ	0xFE3
 11693                           fsr1h	equ	0xFE2
 11694                           fsr1l	equ	0xFE1
 11695                           indf2	equ	0xFDF
 11696                           postinc2	equ	0xFDE
 11697                           postdec2	equ	0xFDD
 11698                           plusw2	equ	0xFDB
 11699                           fsr2h	equ	0xFDA
 11700                           fsr2l	equ	0xFD9
 11701                           status	equ	0xFD8
 11702                           
 11703 ;; *************** function _ENCx24_PHYWrite *****************
 11704 ;; Defined at:
 11705 ;;		line 217 in file "../../TCPIP Library/ethernet_drivers/encX24j600_spi.c"
 11706 ;; Parameters:    Size  Location     Type
 11707 ;;  a               1    wreg     enum E6676
 11708 ;;  data            2   10[COMRAM] unsigned int 
 11709 ;; Auto vars:     Size  Location     Type
 11710 ;;  a               1   12[COMRAM] enum E6676
 11711 ;; Return value:  Size  Location     Type
 11712 ;;		None               void
 11713 ;; Registers used:
 11714 ;;		wreg, status,2, status,0, cstack
 11715 ;; Tracked objects:
 11716 ;;		On entry : 0/1
 11717 ;;		On exit  : 0/0
 11718 ;;		Unchanged: 0/0
 11719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11720 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11721 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11723 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11724 ;;Total ram usage:        3 bytes
 11725 ;; Hardware stack levels used:    1
 11726 ;; Hardware stack levels required when called:    6
 11727 ;; This function calls:
 11728 ;;		_ENCx24_Read
 11729 ;;		_ENCx24_Write
 11730 ;; This function is called by:
 11731 ;;		_ETH_Init
 11732 ;; This function uses a non-reentrant model
 11733 ;;
 11734                           
 11735                           	psect	text56
 11736  0087E4                     __ptext56:
 11737                           	opt stack 0
 11738  0087E4                     _ENCx24_PHYWrite:
 11739                           	opt stack 22
 11740                           
 11741                           ;incstack = 0
 11742                           ;ENCx24_PHYWrite@a stored from wreg
 11743  0087E4  6E0D               	movwf	ENCx24_PHYWrite@a,c
 11744                           
 11745                           ;encX24j600_spi.c: 219: ENCx24_Write(XJ600_MIREGADRL, 0x0100|a);
 11746  0087E6  0E00               	movlw	0
 11747  0087E8  100D               	iorwf	ENCx24_PHYWrite@a,w,c
 11748  0087EA  6E05               	movwf	ENCx24_Write@data,c
 11749  0087EC  0E01               	movlw	1
 11750  0087EE  6E06               	movwf	ENCx24_Write@data+1,c
 11751  0087F0  0E54               	movlw	84
 11752  0087F2  EC72  F042         	call	_ENCx24_Write
 11753                           
 11754                           ;encX24j600_spi.c: 220: ENCx24_Write(XJ600_MIWRL, data);
 11755  0087F6  C00B  F005         	movff	ENCx24_PHYWrite@data,ENCx24_Write@data
 11756  0087FA  C00C  F006         	movff	ENCx24_PHYWrite@data+1,ENCx24_Write@data+1
 11757  0087FE  0E66               	movlw	102
 11758  008800  EC72  F042         	call	_ENCx24_Write
 11759  008804                     l9680:
 11760  008804  0E6A               	movlw	106
 11761  008806  ECC0  F041         	call	_ENCx24_Read
 11762  00880A  A005               	btfss	?_ENCx24_Read,0,c
 11763  00880C  0012               	return		;funcret
 11764  00880E  D7FA               	goto	l9680
 11765  008810                     __end_of_ENCx24_PHYWrite:
 11766                           	opt stack 0
 11767                           tosu	equ	0xFFF
 11768                           tosh	equ	0xFFE
 11769                           tosl	equ	0xFFD
 11770                           pclath	equ	0xFFA
 11771                           tblptru	equ	0xFF8
 11772                           tblptrh	equ	0xFF7
 11773                           tblptrl	equ	0xFF6
 11774                           tablat	equ	0xFF5
 11775                           prodh	equ	0xFF4
 11776                           prodl	equ	0xFF3
 11777                           intcon	equ	0xFF2
 11778                           intcon2	equ	0xFF1
 11779                           indf0	equ	0xFEF
 11780                           postinc0	equ	0xFEE
 11781                           fsr0h	equ	0xFEA
 11782                           fsr0l	equ	0xFE9
 11783                           wreg	equ	0xFE8
 11784                           postinc1	equ	0xFE6
 11785                           plusw1	equ	0xFE3
 11786                           fsr1h	equ	0xFE2
 11787                           fsr1l	equ	0xFE1
 11788                           indf2	equ	0xFDF
 11789                           postinc2	equ	0xFDE
 11790                           postdec2	equ	0xFDD
 11791                           plusw2	equ	0xFDB
 11792                           fsr2h	equ	0xFDA
 11793                           fsr2l	equ	0xFD9
 11794                           status	equ	0xFD8
 11795                           
 11796 ;; *************** function _ARPV4_Init *****************
 11797 ;; Defined at:
 11798 ;;		line 86 in file "../../TCPIP Library/source/arpv4.c"
 11799 ;; Parameters:    Size  Location     Type
 11800 ;;		None
 11801 ;; Auto vars:     Size  Location     Type
 11802 ;;  x               1    1[COMRAM] unsigned char 
 11803 ;; Return value:  Size  Location     Type
 11804 ;;		None               void
 11805 ;; Registers used:
 11806 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11807 ;; Tracked objects:
 11808 ;;		On entry : 0/2
 11809 ;;		On exit  : 0/0
 11810 ;;		Unchanged: 0/0
 11811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11813 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11815 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11816 ;;Total ram usage:        1 bytes
 11817 ;; Hardware stack levels used:    1
 11818 ;; Hardware stack levels required when called:    3
 11819 ;; This function calls:
 11820 ;;		Nothing
 11821 ;; This function is called by:
 11822 ;;		_Network_Init
 11823 ;; This function uses a non-reentrant model
 11824 ;;
 11825                           
 11826                           	psect	text57
 11827  008AD6                     __ptext57:
 11828                           	opt stack 0
 11829  008AD6                     _ARPV4_Init:
 11830                           	opt stack 26
 11831                           
 11832                           ;arpv4.c: 88: for(uint8_t x= 0 ; x < sizeof(arpMap); x++)
 11833                           
 11834                           ;incstack = 0
 11835  008AD6  6A02               	clrf	ARPV4_Init@x,c
 11836  008AD8                     l10108:
 11837                           
 11838                           ;arpv4.c: 89: ((char *)arpMap)[x] = 0;
 11839  008AD8  0E00               	movlw	low _arpMap
 11840  008ADA  2402               	addwf	ARPV4_Init@x,w,c
 11841  008ADC  6ED9               	movwf	fsr2l,c
 11842  008ADE  6ADA               	clrf	fsr2h,c
 11843  008AE0  0E03               	movlw	high _arpMap
 11844  008AE2  22DA               	addwfc	fsr2h,f,c
 11845  008AE4  6ADF               	clrf	indf2,c
 11846  008AE6  2A02               	incf	ARPV4_Init@x,f,c
 11847  008AE8  0E67               	movlw	103
 11848  008AEA  6402               	cpfsgt	ARPV4_Init@x,c
 11849  008AEC  D7F5               	goto	l10108
 11850  008AEE  0C67               	retlw	103
 11851  008AF0                     __end_of_ARPV4_Init:
 11852                           	opt stack 0
 11853                           tosu	equ	0xFFF
 11854                           tosh	equ	0xFFE
 11855                           tosl	equ	0xFFD
 11856                           pclath	equ	0xFFA
 11857                           tblptru	equ	0xFF8
 11858                           tblptrh	equ	0xFF7
 11859                           tblptrl	equ	0xFF6
 11860                           tablat	equ	0xFF5
 11861                           prodh	equ	0xFF4
 11862                           prodl	equ	0xFF3
 11863                           intcon	equ	0xFF2
 11864                           intcon2	equ	0xFF1
 11865                           indf0	equ	0xFEF
 11866                           postinc0	equ	0xFEE
 11867                           fsr0h	equ	0xFEA
 11868                           fsr0l	equ	0xFE9
 11869                           wreg	equ	0xFE8
 11870                           postinc1	equ	0xFE6
 11871                           plusw1	equ	0xFE3
 11872                           fsr1h	equ	0xFE2
 11873                           fsr1l	equ	0xFE1
 11874                           indf2	equ	0xFDF
 11875                           postinc2	equ	0xFDE
 11876                           postdec2	equ	0xFDD
 11877                           plusw2	equ	0xFDB
 11878                           fsr2h	equ	0xFDA
 11879                           fsr2l	equ	0xFD9
 11880                           status	equ	0xFD8
 11881                           
 11882 ;; *************** function _IPV4_GetMyIP *****************
 11883 ;; Defined at:
 11884 ;;		line 288 in file "../../TCPIP Library/source/ipv4.c"
 11885 ;; Parameters:    Size  Location     Type
 11886 ;;		None
 11887 ;; Auto vars:     Size  Location     Type
 11888 ;;		None
 11889 ;; Return value:  Size  Location     Type
 11890 ;;                  4    1[COMRAM] unsigned long 
 11891 ;; Registers used:
 11892 ;;		None
 11893 ;; Tracked objects:
 11894 ;;		On entry : E/0
 11895 ;;		On exit  : E/0
 11896 ;;		Unchanged: E/0
 11897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11898 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11901 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11902 ;;Total ram usage:        4 bytes
 11903 ;; Hardware stack levels used:    1
 11904 ;; Hardware stack levels required when called:    3
 11905 ;; This function calls:
 11906 ;;		Nothing
 11907 ;; This function is called by:
 11908 ;;		_main
 11909 ;; This function uses a non-reentrant model
 11910 ;;
 11911                           
 11912                           	psect	text58
 11913  008B80                     __ptext58:
 11914                           	opt stack 0
 11915  008B80                     _IPV4_GetMyIP:
 11916                           	opt stack 27
 11917                           
 11918                           ;ipv4.c: 290: return(ipv4Address);
 11919                           
 11920                           ;incstack = 0
 11921  008B80  C18E  F002         	movff	_ipv4Address,?_IPV4_GetMyIP
 11922  008B84  C18F  F003         	movff	_ipv4Address+1,?_IPV4_GetMyIP+1
 11923  008B88  C190  F004         	movff	_ipv4Address+2,?_IPV4_GetMyIP+2
 11924  008B8C  C191  F005         	movff	_ipv4Address+3,?_IPV4_GetMyIP+3
 11925  008B90  0012               	return		;funcret
 11926  008B92                     __end_of_IPV4_GetMyIP:
 11927                           	opt stack 0
 11928                           tosu	equ	0xFFF
 11929                           tosh	equ	0xFFE
 11930                           tosl	equ	0xFFD
 11931                           pclath	equ	0xFFA
 11932                           tblptru	equ	0xFF8
 11933                           tblptrh	equ	0xFF7
 11934                           tblptrl	equ	0xFF6
 11935                           tablat	equ	0xFF5
 11936                           prodh	equ	0xFF4
 11937                           prodl	equ	0xFF3
 11938                           intcon	equ	0xFF2
 11939                           intcon2	equ	0xFF1
 11940                           indf0	equ	0xFEF
 11941                           postinc0	equ	0xFEE
 11942                           fsr0h	equ	0xFEA
 11943                           fsr0l	equ	0xFE9
 11944                           wreg	equ	0xFE8
 11945                           postinc1	equ	0xFE6
 11946                           plusw1	equ	0xFE3
 11947                           fsr1h	equ	0xFE2
 11948                           fsr1l	equ	0xFE1
 11949                           indf2	equ	0xFDF
 11950                           postinc2	equ	0xFDE
 11951                           postdec2	equ	0xFDD
 11952                           plusw2	equ	0xFDB
 11953                           fsr2h	equ	0xFDA
 11954                           fsr2l	equ	0xFD9
 11955                           status	equ	0xFD8
 11956                           
 11957 ;; *************** function _DEMO_TCP_Client *****************
 11958 ;; Defined at:
 11959 ;;		line 81 in file "main.c"
 11960 ;; Parameters:    Size  Location     Type
 11961 ;;		None
 11962 ;; Auto vars:     Size  Location     Type
 11963 ;;  strTmp         17  132[BANK0 ] unsigned char [17]
 11964 ;;  rx_len          2  129[BANK0 ] unsigned int 
 11965 ;;  pot             2  126[BANK0 ] unsigned int 
 11966 ;;  temperature     2  124[BANK0 ] unsigned int 
 11967 ;;  ledNr           1  131[BANK0 ] unsigned char 
 11968 ;;  socketState     1  128[BANK0 ] enum E7369
 11969 ;; Return value:  Size  Location     Type
 11970 ;;		None               void
 11971 ;; Registers used:
 11972 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 11973 ;; Tracked objects:
 11974 ;;		On entry : F/2
 11975 ;;		On exit  : 0/0
 11976 ;;		Unchanged: 0/0
 11977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11979 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11980 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11981 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11982 ;;Total ram usage:       27 bytes
 11983 ;; Hardware stack levels used:    1
 11984 ;; Hardware stack levels required when called:   13
 11985 ;; This function calls:
 11986 ;;		_ADC_GetConversion
 11987 ;;		_TCP_Connect
 11988 ;;		_TCP_GetReceivedData
 11989 ;;		_TCP_InsertRxBuffer
 11990 ;;		_TCP_Send
 11991 ;;		_TCP_SendDone
 11992 ;;		_TCP_SocketInit
 11993 ;;		_TCP_SocketPoll
 11994 ;;		_lcd_goto2
 11995 ;;		_lcd_puts
 11996 ;;		_memset
 11997 ;;		_sprintf
 11998 ;;		_strlen
 11999 ;;		_time
 12000 ;; This function is called by:
 12001 ;;		_main
 12002 ;; This function uses a non-reentrant model
 12003 ;;
 12004                           
 12005                           	psect	text59
 12006  005FD0                     __ptext59:
 12007                           	opt stack 0
 12008  005FD0                     _DEMO_TCP_Client:
 12009                           	opt stack 17
 12010                           
 12011                           ; BSR set to: 2
 12012                           ;main.c: 95: uint16_t temperature, pot;
 12013                           ;main.c: 96: char strTmp[17];
 12014                           ;main.c: 97: uint8_t ledNr;
 12015                           ;main.c: 99: socketState = TCP_SocketPoll(&port60TCB);
 12016                           
 12017                           ; BSR set to: 2
 12018                           
 12019                           ;incstack = 0
 12020  005FD0  0E36               	movlw	low DEMO_TCP_Client@port60TCB
 12021  005FD2  6E0A               	movwf	TCP_SocketPoll@socket_ptr,c
 12022  005FD4  0E02               	movlw	high DEMO_TCP_Client@port60TCB
 12023  005FD6  6E0B               	movwf	TCP_SocketPoll@socket_ptr+1,c
 12024  005FD8  ECAB  F044         	call	_TCP_SocketPoll	;wreg free
 12025  005FDC  0100               	movlb	0	; () banked
 12026  005FDE  6FE0               	movwf	DEMO_TCP_Client@socketState& (0+255),b
 12027                           
 12028                           ; BSR set to: 0
 12029                           ;main.c: 101: time(&t_client);
 12030  005FE0  0ED0               	movlw	low DEMO_TCP_Client@t_client
 12031  005FE2  6E02               	movwf	time@t,c
 12032  005FE4  0E01               	movlw	high DEMO_TCP_Client@t_client
 12033  005FE6  6E03               	movwf	time@t+1,c
 12034  005FE8  EC36  F040         	call	_time	;wreg free
 12035                           
 12036                           ;main.c: 103: switch(socketState)
 12037  005FEC  D14A               	goto	l10572
 12038  005FEE                     l10496:
 12039                           
 12040                           ; BSR set to: 0
 12041                           ;main.c: 107: TCP_SocketInit(&port60TCB);
 12042  005FEE  0E36               	movlw	low DEMO_TCP_Client@port60TCB
 12043  005FF0  6E0A               	movwf	TCP_SocketInit@tcbPtr,c
 12044  005FF2  0E02               	movlw	high DEMO_TCP_Client@port60TCB
 12045  005FF4  6E0B               	movwf	TCP_SocketInit@tcbPtr+1,c
 12046  005FF6  EF51  F039         	goto	_TCP_SocketInit	;wreg free
 12047  005FFA                     l10498:
 12048                           
 12049                           ; BSR set to: 0
 12050                           ;main.c: 111: if(t_client >= t_clientOld)
 12051  005FFA  0102               	movlb	2	; () banked
 12052  005FFC  511E               	movf	DEMO_TCP_Client@t_clientOld& (0+255),w,b
 12053  005FFE  0101               	movlb	1	; () banked
 12054  006000  5DD0               	subwf	DEMO_TCP_Client@t_client& (0+255),w,b
 12055  006002  0102               	movlb	2	; () banked
 12056  006004  511F               	movf	(DEMO_TCP_Client@t_clientOld+1)& (0+255),w,b
 12057  006006  0101               	movlb	1	; () banked
 12058  006008  59D1               	subwfb	(DEMO_TCP_Client@t_client+1)& (0+255),w,b
 12059  00600A  0102               	movlb	2	; () banked
 12060  00600C  5120               	movf	(DEMO_TCP_Client@t_clientOld+2)& (0+255),w,b
 12061  00600E  0101               	movlb	1	; () banked
 12062  006010  59D2               	subwfb	(DEMO_TCP_Client@t_client+2)& (0+255),w,b
 12063  006012  51D3               	movf	(DEMO_TCP_Client@t_client+3)& (0+255),w,b
 12064  006014  0A80               	xorlw	128
 12065  006016  0100               	movlb	0	; () banked
 12066  006018  6FDA               	movwf	??_DEMO_TCP_Client& (0+255),b
 12067  00601A  0102               	movlb	2	; () banked
 12068  00601C  5121               	movf	(DEMO_TCP_Client@t_clientOld+3)& (0+255),w,b
 12069  00601E  0A80               	xorlw	128
 12070  006020  0100               	movlb	0	; () banked
 12071  006022  59DA               	subwfb	??_DEMO_TCP_Client& (0+255),w,b
 12072  006024  A0D8               	btfss	status,0,c
 12073  006026  0012               	return	
 12074                           
 12075                           ; BSR set to: 0
 12076                           ;main.c: 112: {
 12077                           ;main.c: 114: t_clientOld = t_client + 2;
 12078  006028  0E02               	movlw	2
 12079  00602A  0101               	movlb	1	; () banked
 12080  00602C  25D0               	addwf	DEMO_TCP_Client@t_client& (0+255),w,b
 12081  00602E  0102               	movlb	2	; () banked
 12082  006030  6F1E               	movwf	DEMO_TCP_Client@t_clientOld& (0+255),b
 12083  006032  0E00               	movlw	0
 12084  006034  0101               	movlb	1	; () banked
 12085  006036  21D1               	addwfc	(DEMO_TCP_Client@t_client+1)& (0+255),w,b
 12086  006038  0102               	movlb	2	; () banked
 12087  00603A  6F1F               	movwf	(DEMO_TCP_Client@t_clientOld+1)& (0+255),b
 12088  00603C  0E00               	movlw	0
 12089  00603E  0101               	movlb	1	; () banked
 12090  006040  21D2               	addwfc	(DEMO_TCP_Client@t_client+2)& (0+255),w,b
 12091  006042  0102               	movlb	2	; () banked
 12092  006044  6F20               	movwf	(DEMO_TCP_Client@t_clientOld+2)& (0+255),b
 12093  006046  0E00               	movlw	0
 12094  006048  0101               	movlb	1	; () banked
 12095  00604A  21D3               	addwfc	(DEMO_TCP_Client@t_client+3)& (0+255),w,b
 12096  00604C  0102               	movlb	2	; () banked
 12097  00604E  6F21               	movwf	(DEMO_TCP_Client@t_clientOld+3)& (0+255),b
 12098                           
 12099                           ; BSR set to: 2
 12100                           ;main.c: 115: TCP_InsertRxBuffer(&port60TCB, rxdataPort60, sizeof(rxdataPort60));
 12101  006050  0E36               	movlw	low DEMO_TCP_Client@port60TCB
 12102  006052  6E0A               	movwf	TCP_InsertRxBuffer@tcbPtr,c
 12103  006054  0E02               	movlw	high DEMO_TCP_Client@port60TCB
 12104  006056  6E0B               	movwf	TCP_InsertRxBuffer@tcbPtr+1,c
 12105  006058  0E6D               	movlw	low DEMO_TCP_Client@rxdataPort60
 12106  00605A  6E0C               	movwf	TCP_InsertRxBuffer@data,c
 12107  00605C  0E02               	movlw	high DEMO_TCP_Client@rxdataPort60
 12108  00605E  6E0D               	movwf	TCP_InsertRxBuffer@data+1,c
 12109  006060  6A0F               	clrf	TCP_InsertRxBuffer@data_len+1,c
 12110  006062  0E32               	movlw	50
 12111  006064  6E0E               	movwf	TCP_InsertRxBuffer@data_len,c
 12112  006066  ECFF  F03D         	call	_TCP_InsertRxBuffer	;wreg free
 12113                           
 12114                           ;main.c: 116: TCP_Connect(&port60TCB, &remoteSocket);
 12115  00606A  0E36               	movlw	low DEMO_TCP_Client@port60TCB
 12116  00606C  0100               	movlb	0	; () banked
 12117  00606E  6FD4               	movwf	TCP_Connect@tcbPtr& (0+255),b
 12118  006070  0E02               	movlw	high DEMO_TCP_Client@port60TCB
 12119  006072  6FD5               	movwf	(TCP_Connect@tcbPtr+1)& (0+255),b
 12120  006074  0EAD               	movlw	low _remoteSocket
 12121  006076  6FD6               	movwf	TCP_Connect@srvaddr& (0+255),b
 12122  006078  0E02               	movlw	high _remoteSocket
 12123  00607A  6FD7               	movwf	(TCP_Connect@srvaddr+1)& (0+255),b
 12124  00607C  EF18  F03A         	goto	_TCP_Connect	;wreg free
 12125  006080                     l10506:
 12126                           
 12127                           ; BSR set to: 0
 12128                           ;main.c: 122: if (TCP_SendDone(&port60TCB))
 12129  006080  0E36               	movlw	low DEMO_TCP_Client@port60TCB
 12130  006082  6E0A               	movwf	TCP_SendDone@tcbPtr,c
 12131  006084  0E02               	movlw	high DEMO_TCP_Client@port60TCB
 12132  006086  6E0B               	movwf	TCP_SendDone@tcbPtr+1,c
 12133  006088  EC48  F044         	call	_TCP_SendDone	;wreg free
 12134  00608C  0900               	iorlw	0
 12135  00608E  B4D8               	btfsc	status,2,c
 12136  006090  0012               	return	
 12137                           
 12138                           ;main.c: 123: {
 12139                           ;main.c: 124: rx_len = TCP_GetReceivedData(&port60TCB);
 12140  006092  0E36               	movlw	low DEMO_TCP_Client@port60TCB
 12141  006094  6E0A               	movwf	TCP_GetReceivedData@tcbPtr,c
 12142  006096  0E02               	movlw	high DEMO_TCP_Client@port60TCB
 12143  006098  6E0B               	movwf	TCP_GetReceivedData@tcbPtr+1,c
 12144  00609A  EC42  F03E         	call	_TCP_GetReceivedData	;wreg free
 12145  00609E  C00A  F0E1         	movff	?_TCP_GetReceivedData,DEMO_TCP_Client@rx_len
 12146  0060A2  C00B  F0E2         	movff	?_TCP_GetReceivedData+1,DEMO_TCP_Client@rx_len+1
 12147                           
 12148                           ;main.c: 126: if(rx_len > 0)
 12149  0060A6  0100               	movlb	0	; () banked
 12150  0060A8  51E1               	movf	DEMO_TCP_Client@rx_len& (0+255),w,b
 12151  0060AA  11E2               	iorwf	(DEMO_TCP_Client@rx_len+1)& (0+255),w,b
 12152  0060AC  E101 D084          	bz	l10558
 12153                           
 12154                           ; BSR set to: 0
 12155                           ;main.c: 127: {
 12156                           ;main.c: 129: if (rx_len > 16) {
 12157  0060B0  51E2               	movf	(DEMO_TCP_Client@rx_len+1)& (0+255),w,b
 12158  0060B2  E103               	bnz	u15990
 12159  0060B4  0E11               	movlw	17
 12160  0060B6  5DE1               	subwf	DEMO_TCP_Client@rx_len& (0+255),w,b
 12161  0060B8  E303               	bnc	l10516
 12162  0060BA                     u15990:
 12163                           
 12164                           ; BSR set to: 0
 12165                           ;main.c: 130: rxdataPort60[16] = 0;
 12166  0060BA  0102               	movlb	2	; () banked
 12167  0060BC  6B7D               	clrf	(DEMO_TCP_Client@rxdataPort60+16)& (0+255),b
 12168                           
 12169                           ;main.c: 131: } else {
 12170  0060BE  D007               	goto	l10518
 12171  0060C0                     l10516:
 12172                           
 12173                           ; BSR set to: 0
 12174                           ;main.c: 132: rxdataPort60[rx_len] = 0;
 12175  0060C0  0E6D               	movlw	low DEMO_TCP_Client@rxdataPort60
 12176  0060C2  25E1               	addwf	DEMO_TCP_Client@rx_len& (0+255),w,b
 12177  0060C4  6ED9               	movwf	fsr2l,c
 12178  0060C6  0E02               	movlw	high DEMO_TCP_Client@rxdataPort60
 12179  0060C8  21E2               	addwfc	(DEMO_TCP_Client@rx_len+1)& (0+255),w,b
 12180  0060CA  6EDA               	movwf	fsr2h,c
 12181  0060CC  6ADF               	clrf	indf2,c
 12182  0060CE                     l10518:
 12183                           
 12184                           ;main.c: 133: }
 12185                           ;main.c: 135: ledNr = rxdataPort60[4];
 12186  0060CE  C271  F0E3         	movff	DEMO_TCP_Client@rxdataPort60+4,DEMO_TCP_Client@ledNr
 12187                           
 12188                           ;main.c: 136: if((ledNr >= '0') && (ledNr < '8')) {
 12189  0060D2  0E2F               	movlw	47
 12190  0060D4  0100               	movlb	0	; () banked
 12191  0060D6  65E3               	cpfsgt	DEMO_TCP_Client@ledNr& (0+255),b
 12192  0060D8  D005               	goto	l1680
 12193                           
 12194                           ; BSR set to: 0
 12195  0060DA  0E38               	movlw	56
 12196  0060DC  61E3               	cpfslt	DEMO_TCP_Client@ledNr& (0+255),b
 12197  0060DE  D002               	goto	l1680
 12198                           
 12199                           ; BSR set to: 0
 12200                           ;main.c: 137: ledNr = ledNr - '0';
 12201  0060E0  0ED0               	movlw	208
 12202  0060E2  27E3               	addwf	DEMO_TCP_Client@ledNr& (0+255),f,b
 12203  0060E4                     l1680:
 12204                           
 12205                           ; BSR set to: 0
 12206                           ;main.c: 138: }
 12207                           ;main.c: 140: if(rxdataPort60[0] == 'l' && rxdataPort60[1] == 'e' && rxdataPort60[2] == 
      +                          'd') {
 12208  0060E4  0E6C               	movlw	108
 12209  0060E6  0102               	movlb	2	; () banked
 12210  0060E8  196D               	xorwf	DEMO_TCP_Client@rxdataPort60& (0+255),w,b
 12211  0060EA  E133               	bnz	l10544
 12212                           
 12213                           ; BSR set to: 2
 12214  0060EC  0E65               	movlw	101
 12215  0060EE  196E               	xorwf	(DEMO_TCP_Client@rxdataPort60+1)& (0+255),w,b
 12216  0060F0  E130               	bnz	l10544
 12217                           
 12218                           ; BSR set to: 2
 12219  0060F2  0E64               	movlw	100
 12220  0060F4  196F               	xorwf	(DEMO_TCP_Client@rxdataPort60+2)& (0+255),w,b
 12221  0060F6  E12D               	bnz	l10544
 12222                           
 12223                           ; BSR set to: 2
 12224                           ;main.c: 141: if(rxdataPort60[6] == 'o' && rxdataPort60[7] == 'n') {
 12225  0060F8  0E6F               	movlw	111
 12226  0060FA  1973               	xorwf	(DEMO_TCP_Client@rxdataPort60+6)& (0+255),w,b
 12227  0060FC  E112               	bnz	l10536
 12228                           
 12229                           ; BSR set to: 2
 12230  0060FE  0E6E               	movlw	110
 12231  006100  1974               	xorwf	(DEMO_TCP_Client@rxdataPort60+7)& (0+255),w,b
 12232  006102  E10F               	bnz	l10536
 12233                           
 12234                           ; BSR set to: 2
 12235                           ;main.c: 142: PORTJ = PORTJ | (1 << ledNr);
 12236  006104  C0E3  F0DA         	movff	DEMO_TCP_Client@ledNr,??_DEMO_TCP_Client
 12237  006108  0E01               	movlw	1
 12238  00610A  0100               	movlb	0	; () banked
 12239  00610C  6FDB               	movwf	(??_DEMO_TCP_Client+1)& (0+255),b
 12240  00610E  2BDA               	incf	??_DEMO_TCP_Client& (0+255),f,b
 12241  006110  D002               	goto	u16074
 12242  006112                     u16075:
 12243  006112  90D8               	bcf	status,0,c
 12244  006114  37DB               	rlcf	(??_DEMO_TCP_Client+1)& (0+255),f,b
 12245  006116                     u16074:
 12246  006116  2FDA               	decfsz	??_DEMO_TCP_Client& (0+255),f,b
 12247  006118  D7FC               	goto	u16075
 12248  00611A  0100               	movlb	0	; () banked
 12249  00611C  51DB               	movf	(??_DEMO_TCP_Client+1)& (0+255),w,b
 12250  00611E  1288               	iorwf	3976,f,c	;volatile
 12251                           
 12252                           ;main.c: 143: }else {
 12253  006120  D03E               	goto	l10556
 12254  006122                     l10536:
 12255                           
 12256                           ; BSR set to: 2
 12257                           ;main.c: 144: if(rxdataPort60[6] == 'o' && rxdataPort60[7] == 'f' && rxdataPort60[8] == 
      +                          'f') {
 12258  006122  0E6F               	movlw	111
 12259  006124  1973               	xorwf	(DEMO_TCP_Client@rxdataPort60+6)& (0+255),w,b
 12260  006126  E13B               	bnz	l10556
 12261                           
 12262                           ; BSR set to: 2
 12263  006128  0E66               	movlw	102
 12264  00612A  1974               	xorwf	(DEMO_TCP_Client@rxdataPort60+7)& (0+255),w,b
 12265  00612C  E138               	bnz	l10556
 12266                           
 12267                           ; BSR set to: 2
 12268  00612E  0E66               	movlw	102
 12269  006130  1975               	xorwf	(DEMO_TCP_Client@rxdataPort60+8)& (0+255),w,b
 12270  006132  E135               	bnz	l10556
 12271                           
 12272                           ; BSR set to: 2
 12273                           ;main.c: 145: PORTJ = PORTJ & (~(1 << ledNr));
 12274  006134  C0E3  F0DA         	movff	DEMO_TCP_Client@ledNr,??_DEMO_TCP_Client
 12275  006138  0E01               	movlw	1
 12276  00613A  0100               	movlb	0	; () banked
 12277  00613C  6FDB               	movwf	(??_DEMO_TCP_Client+1)& (0+255),b
 12278  00613E  2BDA               	incf	??_DEMO_TCP_Client& (0+255),f,b
 12279  006140  D002               	goto	u16114
 12280  006142                     u16115:
 12281  006142  90D8               	bcf	status,0,c
 12282  006144  37DB               	rlcf	(??_DEMO_TCP_Client+1)& (0+255),f,b
 12283  006146                     u16114:
 12284  006146  2FDA               	decfsz	??_DEMO_TCP_Client& (0+255),f,b
 12285  006148  D7FC               	goto	u16115
 12286  00614A  0100               	movlb	0	; () banked
 12287  00614C  1DDB               	comf	(??_DEMO_TCP_Client+1)& (0+255),w,b
 12288  00614E  1688               	andwf	3976,f,c	;volatile
 12289  006150  D026               	goto	l10556
 12290  006152                     l10544:
 12291                           
 12292                           ; BSR set to: 2
 12293                           ;main.c: 150: memset(strTmp,' ',sizeof(strTmp));
 12294  006152  0EE4               	movlw	low DEMO_TCP_Client@strTmp
 12295  006154  6E02               	movwf	memset@p1,c
 12296  006156  6A03               	clrf	memset@p1+1,c
 12297  006158  6A05               	clrf	memset@c+1,c
 12298  00615A  0E20               	movlw	32
 12299  00615C  6E04               	movwf	memset@c,c
 12300  00615E  6A07               	clrf	memset@n+1,c
 12301  006160  0E11               	movlw	17
 12302  006162  6E06               	movwf	memset@n,c
 12303  006164  EC33  F044         	call	_memset	;wreg free
 12304                           
 12305                           ; BSR set to: 2
 12306                           ;main.c: 151: lcd_goto2(0);
 12307  006168  0E00               	movlw	0
 12308  00616A  ECE7  F045         	call	_lcd_goto2
 12309                           
 12310                           ;main.c: 152: lcd_puts(strTmp);
 12311  00616E  0EE4               	movlw	low DEMO_TCP_Client@strTmp
 12312  006170  6E04               	movwf	lcd_puts@s,c
 12313  006172  6A05               	clrf	lcd_puts@s+1,c
 12314  006174  ECD0  F044         	call	_lcd_puts	;wreg free
 12315                           
 12316                           ;main.c: 153: sprintf(strTmp,"%s",rxdataPort60);
 12317  006178  0EE4               	movlw	low DEMO_TCP_Client@strTmp
 12318  00617A  6E21               	movwf	sprintf@wh,c
 12319  00617C  6A22               	clrf	sprintf@wh+1,c
 12320  00617E  0EE6               	movlw	low STR_4
 12321  006180  6E23               	movwf	sprintf@f,c
 12322  006182  0E6D               	movlw	low DEMO_TCP_Client@rxdataPort60
 12323  006184  6E24               	movwf	?_sprintf+3,c
 12324  006186  0E02               	movlw	high DEMO_TCP_Client@rxdataPort60
 12325  006188  6E25               	movwf	?_sprintf+4,c
 12326  00618A  EC08  F044         	call	_sprintf	;wreg free
 12327                           
 12328                           ;main.c: 154: lcd_goto2(0);
 12329  00618E  0E00               	movlw	0
 12330  006190  ECE7  F045         	call	_lcd_goto2
 12331                           
 12332                           ;main.c: 155: lcd_puts(strTmp);
 12333  006194  0EE4               	movlw	low DEMO_TCP_Client@strTmp
 12334  006196  6E04               	movwf	lcd_puts@s,c
 12335  006198  6A05               	clrf	lcd_puts@s+1,c
 12336  00619A  ECD0  F044         	call	_lcd_puts	;wreg free
 12337  00619E                     l10556:
 12338                           
 12339                           ;main.c: 156: }
 12340                           ;main.c: 159: TCP_InsertRxBuffer(&port60TCB, rxdataPort60, sizeof(rxdataPort60));
 12341  00619E  0E36               	movlw	low DEMO_TCP_Client@port60TCB
 12342  0061A0  6E0A               	movwf	TCP_InsertRxBuffer@tcbPtr,c
 12343  0061A2  0E02               	movlw	high DEMO_TCP_Client@port60TCB
 12344  0061A4  6E0B               	movwf	TCP_InsertRxBuffer@tcbPtr+1,c
 12345  0061A6  0E6D               	movlw	low DEMO_TCP_Client@rxdataPort60
 12346  0061A8  6E0C               	movwf	TCP_InsertRxBuffer@data,c
 12347  0061AA  0E02               	movlw	high DEMO_TCP_Client@rxdataPort60
 12348  0061AC  6E0D               	movwf	TCP_InsertRxBuffer@data+1,c
 12349  0061AE  6A0F               	clrf	TCP_InsertRxBuffer@data_len+1,c
 12350  0061B0  0E32               	movlw	50
 12351  0061B2  6E0E               	movwf	TCP_InsertRxBuffer@data_len,c
 12352  0061B4  ECFF  F03D         	call	_TCP_InsertRxBuffer	;wreg free
 12353  0061B8                     l10558:
 12354                           
 12355                           ;main.c: 160: }
 12356                           ;main.c: 162: if(t_client >= t_clientOld)
 12357  0061B8  0102               	movlb	2	; () banked
 12358  0061BA  511E               	movf	DEMO_TCP_Client@t_clientOld& (0+255),w,b
 12359  0061BC  0101               	movlb	1	; () banked
 12360  0061BE  5DD0               	subwf	DEMO_TCP_Client@t_client& (0+255),w,b
 12361  0061C0  0102               	movlb	2	; () banked
 12362  0061C2  511F               	movf	(DEMO_TCP_Client@t_clientOld+1)& (0+255),w,b
 12363  0061C4  0101               	movlb	1	; () banked
 12364  0061C6  59D1               	subwfb	(DEMO_TCP_Client@t_client+1)& (0+255),w,b
 12365  0061C8  0102               	movlb	2	; () banked
 12366  0061CA  5120               	movf	(DEMO_TCP_Client@t_clientOld+2)& (0+255),w,b
 12367  0061CC  0101               	movlb	1	; () banked
 12368  0061CE  59D2               	subwfb	(DEMO_TCP_Client@t_client+2)& (0+255),w,b
 12369  0061D0  51D3               	movf	(DEMO_TCP_Client@t_client+3)& (0+255),w,b
 12370  0061D2  0A80               	xorlw	128
 12371  0061D4  0100               	movlb	0	; () banked
 12372  0061D6  6FDA               	movwf	??_DEMO_TCP_Client& (0+255),b
 12373  0061D8  0102               	movlb	2	; () banked
 12374  0061DA  5121               	movf	(DEMO_TCP_Client@t_clientOld+3)& (0+255),w,b
 12375  0061DC  0A80               	xorlw	128
 12376  0061DE  0100               	movlb	0	; () banked
 12377  0061E0  59DA               	subwfb	??_DEMO_TCP_Client& (0+255),w,b
 12378  0061E2  A0D8               	btfss	status,0,c
 12379  0061E4  0012               	return	
 12380                           
 12381                           ; BSR set to: 0
 12382                           ;main.c: 163: {
 12383                           ;main.c: 165: t_clientOld = t_client + 2;
 12384  0061E6  0E02               	movlw	2
 12385  0061E8  0101               	movlb	1	; () banked
 12386  0061EA  25D0               	addwf	DEMO_TCP_Client@t_client& (0+255),w,b
 12387  0061EC  0102               	movlb	2	; () banked
 12388  0061EE  6F1E               	movwf	DEMO_TCP_Client@t_clientOld& (0+255),b
 12389  0061F0  0E00               	movlw	0
 12390  0061F2  0101               	movlb	1	; () banked
 12391  0061F4  21D1               	addwfc	(DEMO_TCP_Client@t_client+1)& (0+255),w,b
 12392  0061F6  0102               	movlb	2	; () banked
 12393  0061F8  6F1F               	movwf	(DEMO_TCP_Client@t_clientOld+1)& (0+255),b
 12394  0061FA  0E00               	movlw	0
 12395  0061FC  0101               	movlb	1	; () banked
 12396  0061FE  21D2               	addwfc	(DEMO_TCP_Client@t_client+2)& (0+255),w,b
 12397  006200  0102               	movlb	2	; () banked
 12398  006202  6F20               	movwf	(DEMO_TCP_Client@t_clientOld+2)& (0+255),b
 12399  006204  0E00               	movlw	0
 12400  006206  0101               	movlb	1	; () banked
 12401  006208  21D3               	addwfc	(DEMO_TCP_Client@t_client+3)& (0+255),w,b
 12402  00620A  0102               	movlb	2	; () banked
 12403  00620C  6F21               	movwf	(DEMO_TCP_Client@t_clientOld+3)& (0+255),b
 12404                           
 12405                           ; BSR set to: 2
 12406                           ;main.c: 166: temperature = ADC_GetConversion(channel_AN3);
 12407  00620E  0E03               	movlw	3
 12408  006210  ECC5  F043         	call	_ADC_GetConversion
 12409  006214  C002  F0DC         	movff	?_ADC_GetConversion,DEMO_TCP_Client@temperature
 12410  006218  C003  F0DD         	movff	?_ADC_GetConversion+1,DEMO_TCP_Client@temperature+1
 12411                           
 12412                           ;main.c: 167: pot = ADC_GetConversion(channel_AN2);
 12413  00621C  0E02               	movlw	2
 12414  00621E  ECC5  F043         	call	_ADC_GetConversion
 12415  006222  C002  F0DE         	movff	?_ADC_GetConversion,DEMO_TCP_Client@pot
 12416  006226  C003  F0DF         	movff	?_ADC_GetConversion+1,DEMO_TCP_Client@pot+1
 12417                           
 12418                           ;main.c: 168: sprintf(txdataPort60,"Temperature: 0x%3x; LED: 0x%1x; Buttons: 0x%1x; Pot:
      +                           0x%3x \n", temperature, PORTJ, (PORTB & 0x0F), pot);
 12419  00622A  0E68               	movlw	low DEMO_TCP_Client@txdataPort60
 12420  00622C  6E21               	movwf	sprintf@wh,c
 12421  00622E  0E03               	movlw	high DEMO_TCP_Client@txdataPort60
 12422  006230  6E22               	movwf	sprintf@wh+1,c
 12423  006232  0E39               	movlw	low STR_5
 12424  006234  6E23               	movwf	sprintf@f,c
 12425  006236  C0DC  F024         	movff	DEMO_TCP_Client@temperature,?_sprintf+3
 12426  00623A  C0DD  F025         	movff	DEMO_TCP_Client@temperature+1,?_sprintf+4
 12427  00623E  CF88 F026          	movff	3976,?_sprintf+5	;volatile
 12428  006242  6A27               	clrf	?_sprintf+6,c
 12429  006244  5081               	movf	3969,w,c	;volatile
 12430  006246  0B0F               	andlw	15
 12431  006248  6E28               	movwf	?_sprintf+7,c
 12432  00624A  6A29               	clrf	?_sprintf+8,c
 12433  00624C  C0DE  F02A         	movff	DEMO_TCP_Client@pot,?_sprintf+9
 12434  006250  C0DF  F02B         	movff	DEMO_TCP_Client@pot+1,?_sprintf+10
 12435  006254  EC08  F044         	call	_sprintf	;wreg free
 12436                           
 12437                           ;main.c: 170: TCP_Send(&port60TCB, txdataPort60, strlen(txdataPort60));
 12438  006258  0E36               	movlw	low DEMO_TCP_Client@port60TCB
 12439  00625A  0100               	movlb	0	; () banked
 12440  00625C  6FB4               	movwf	TCP_Send@tcbPtr& (0+255),b
 12441  00625E  0E02               	movlw	high DEMO_TCP_Client@port60TCB
 12442  006260  6FB5               	movwf	(TCP_Send@tcbPtr+1)& (0+255),b
 12443  006262  0E68               	movlw	low DEMO_TCP_Client@txdataPort60
 12444  006264  6FB6               	movwf	TCP_Send@data& (0+255),b
 12445  006266  0E03               	movlw	high DEMO_TCP_Client@txdataPort60
 12446  006268  6FB7               	movwf	(TCP_Send@data+1)& (0+255),b
 12447  00626A  0E68               	movlw	low DEMO_TCP_Client@txdataPort60
 12448  00626C  6E02               	movwf	strlen@s,c
 12449  00626E  0E03               	movlw	high DEMO_TCP_Client@txdataPort60
 12450  006270  6E03               	movwf	strlen@s+1,c
 12451  006272  EC5D  F044         	call	_strlen	;wreg free
 12452  006276  C002  F0B8         	movff	?_strlen,TCP_Send@dataLen
 12453  00627A  C003  F0B9         	movff	?_strlen+1,TCP_Send@dataLen+1
 12454  00627E  EF7B  F03A         	goto	_TCP_Send	;wreg free
 12455  006282                     l10572:
 12456  006282  0100               	movlb	0	; () banked
 12457  006284  51E0               	movf	DEMO_TCP_Client@socketState& (0+255),w,b
 12458                           
 12459                           ; Switch size 1, requested type "speed"
 12460                           ; Number of cases is 3, Range of values is 0 to 3
 12461                           ; switch strategies available:
 12462                           ; Name         Instructions Cycles
 12463                           ; simple_byte           10     6 (average)
 12464                           ;	Chosen strategy is simple_byte
 12465  006286  E101 D6B2          	bz	l10496
 12466  00628A  0A01               	xorlw	1	; case 1
 12467  00628C  E101 D6B5          	bz	l10498
 12468  006290  0A02               	xorlw	2	; case 3
 12469  006292  E101 D6F5          	bz	l10506
 12470  006296  0012               	return		;funcret
 12471  006298                     __end_of_DEMO_TCP_Client:
 12472                           	opt stack 0
 12473                           tosu	equ	0xFFF
 12474                           tosh	equ	0xFFE
 12475                           tosl	equ	0xFFD
 12476                           pclath	equ	0xFFA
 12477                           tblptru	equ	0xFF8
 12478                           tblptrh	equ	0xFF7
 12479                           tblptrl	equ	0xFF6
 12480                           tablat	equ	0xFF5
 12481                           prodh	equ	0xFF4
 12482                           prodl	equ	0xFF3
 12483                           intcon	equ	0xFF2
 12484                           intcon2	equ	0xFF1
 12485                           indf0	equ	0xFEF
 12486                           postinc0	equ	0xFEE
 12487                           fsr0h	equ	0xFEA
 12488                           fsr0l	equ	0xFE9
 12489                           wreg	equ	0xFE8
 12490                           postinc1	equ	0xFE6
 12491                           plusw1	equ	0xFE3
 12492                           fsr1h	equ	0xFE2
 12493                           fsr1l	equ	0xFE1
 12494                           indf2	equ	0xFDF
 12495                           postinc2	equ	0xFDE
 12496                           postdec2	equ	0xFDD
 12497                           plusw2	equ	0xFDB
 12498                           fsr2h	equ	0xFDA
 12499                           fsr2l	equ	0xFD9
 12500                           status	equ	0xFD8
 12501                           
 12502 ;; *************** function _time *****************
 12503 ;; Defined at:
 12504 ;;		line 198 in file "../board_support_package/picdem2_net/rtcc.c"
 12505 ;; Parameters:    Size  Location     Type
 12506 ;;  t               2    1[COMRAM] PTR long 
 12507 ;;		 -> main@now_p(4), DEMO_TCP_Client@t_client(4), Network_Manage@now(4), arpTimer(4), 
 12508 ;;		 -> NULL(0), 
 12509 ;; Auto vars:     Size  Location     Type
 12510 ;;  the_time        4    6[COMRAM] long 
 12511 ;;  gie_val         1    5[COMRAM] unsigned char 
 12512 ;; Return value:  Size  Location     Type
 12513 ;;                  4    1[COMRAM] long 
 12514 ;; Registers used:
 12515 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12516 ;; Tracked objects:
 12517 ;;		On entry : 0/2
 12518 ;;		On exit  : 0/0
 12519 ;;		Unchanged: 0/0
 12520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12521 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12522 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12524 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12525 ;;Total ram usage:        9 bytes
 12526 ;; Hardware stack levels used:    1
 12527 ;; Hardware stack levels required when called:    3
 12528 ;; This function calls:
 12529 ;;		Nothing
 12530 ;; This function is called by:
 12531 ;;		_Network_Init
 12532 ;;		_Network_Manage
 12533 ;;		_SYSLOG_Init
 12534 ;;		_SYSLOG_Write
 12535 ;;		_DEMO_TCP_Client
 12536 ;;		_main
 12537 ;; This function uses a non-reentrant model
 12538 ;;
 12539                           
 12540                           	psect	text60
 12541  00806C                     __ptext60:
 12542                           	opt stack 0
 12543  00806C                     _time:
 12544                           	opt stack 27
 12545                           
 12546                           ;rtcc.c: 200: bool gie_val;
 12547                           ;rtcc.c: 201: time_t the_time;
 12548                           ;rtcc.c: 203: gie_val = GIE;
 12549                           
 12550                           ;incstack = 0
 12551  00806C  0E00               	movlw	0
 12552  00806E  BEF2               	btfsc	intcon,7,c	;volatile
 12553  008070  0E01               	movlw	1
 12554  008072  6E06               	movwf	time@gie_val,c
 12555                           
 12556                           ;rtcc.c: 204: GIE = 0;
 12557  008074  9EF2               	bcf	intcon,7,c	;volatile
 12558                           
 12559                           ;rtcc.c: 205: the_time = deviceTime;
 12560  008076  C2E4  F007         	movff	_deviceTime,time@the_time	;volatile
 12561  00807A  C2E5  F008         	movff	_deviceTime+1,time@the_time+1	;volatile
 12562  00807E  C2E6  F009         	movff	_deviceTime+2,time@the_time+2	;volatile
 12563  008082  C2E7  F00A         	movff	_deviceTime+3,time@the_time+3	;volatile
 12564                           
 12565                           ;rtcc.c: 206: GIE = gie_val;
 12566  008086  A006               	btfss	time@gie_val,0,c
 12567  008088  D002               	goto	u15310
 12568  00808A  8EF2               	bsf	intcon,7,c	;volatile
 12569  00808C  D001               	goto	l9992
 12570  00808E                     u15310:
 12571  00808E  9EF2               	bcf	intcon,7,c	;volatile
 12572  008090                     l9992:
 12573                           
 12574                           ;rtcc.c: 208: if(t)
 12575  008090  5002               	movf	time@t,w,c
 12576  008092  1003               	iorwf	time@t+1,w,c
 12577  008094  E00C               	bz	l9996
 12578                           
 12579                           ;rtcc.c: 209: {
 12580                           ;rtcc.c: 210: *t = the_time;
 12581  008096  C002  FFD9         	movff	time@t,fsr2l
 12582  00809A  C003  FFDA         	movff	time@t+1,fsr2h
 12583  00809E  C007  FFDE         	movff	time@the_time,postinc2
 12584  0080A2  C008  FFDE         	movff	time@the_time+1,postinc2
 12585  0080A6  C009  FFDE         	movff	time@the_time+2,postinc2
 12586  0080AA  C00A  FFDE         	movff	time@the_time+3,postinc2
 12587  0080AE                     l9996:
 12588                           
 12589                           ;rtcc.c: 211: }
 12590                           ;rtcc.c: 213: return (the_time);
 12591  0080AE  C007  F002         	movff	time@the_time,?_time
 12592  0080B2  C008  F003         	movff	time@the_time+1,?_time+1
 12593  0080B6  C009  F004         	movff	time@the_time+2,?_time+2
 12594  0080BA  C00A  F005         	movff	time@the_time+3,?_time+3
 12595  0080BE  0012               	return		;funcret
 12596  0080C0                     __end_of_time:
 12597                           	opt stack 0
 12598                           tosu	equ	0xFFF
 12599                           tosh	equ	0xFFE
 12600                           tosl	equ	0xFFD
 12601                           pclath	equ	0xFFA
 12602                           tblptru	equ	0xFF8
 12603                           tblptrh	equ	0xFF7
 12604                           tblptrl	equ	0xFF6
 12605                           tablat	equ	0xFF5
 12606                           prodh	equ	0xFF4
 12607                           prodl	equ	0xFF3
 12608                           intcon	equ	0xFF2
 12609                           intcon2	equ	0xFF1
 12610                           indf0	equ	0xFEF
 12611                           postinc0	equ	0xFEE
 12612                           fsr0h	equ	0xFEA
 12613                           fsr0l	equ	0xFE9
 12614                           wreg	equ	0xFE8
 12615                           postinc1	equ	0xFE6
 12616                           plusw1	equ	0xFE3
 12617                           fsr1h	equ	0xFE2
 12618                           fsr1l	equ	0xFE1
 12619                           indf2	equ	0xFDF
 12620                           postinc2	equ	0xFDE
 12621                           postdec2	equ	0xFDD
 12622                           plusw2	equ	0xFDB
 12623                           fsr2h	equ	0xFDA
 12624                           fsr2l	equ	0xFD9
 12625                           status	equ	0xFD8
 12626                           
 12627 ;; *************** function _strlen *****************
 12628 ;; Defined at:
 12629 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strlen.c"
 12630 ;; Parameters:    Size  Location     Type
 12631 ;;  s               2    1[COMRAM] PTR const unsigned char 
 12632 ;;		 -> DEMO_TCP_Client@txdataPort60(80), 
 12633 ;; Auto vars:     Size  Location     Type
 12634 ;;  cp              2    3[COMRAM] PTR const unsigned char 
 12635 ;;		 -> DEMO_TCP_Client@txdataPort60(80), 
 12636 ;; Return value:  Size  Location     Type
 12637 ;;                  2    1[COMRAM] unsigned int 
 12638 ;; Registers used:
 12639 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12640 ;; Tracked objects:
 12641 ;;		On entry : F/0
 12642 ;;		On exit  : F/0
 12643 ;;		Unchanged: F/0
 12644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12645 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12646 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12648 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12649 ;;Total ram usage:        4 bytes
 12650 ;; Hardware stack levels used:    1
 12651 ;; Hardware stack levels required when called:    3
 12652 ;; This function calls:
 12653 ;;		Nothing
 12654 ;; This function is called by:
 12655 ;;		_DEMO_TCP_Client
 12656 ;; This function uses a non-reentrant model
 12657 ;;
 12658                           
 12659                           	psect	text61
 12660  0088BA                     __ptext61:
 12661                           	opt stack 0
 12662  0088BA                     _strlen:
 12663                           	opt stack 26
 12664                           
 12665                           ; BSR set to: 0
 12666                           
 12667                           ;incstack = 0
 12668  0088BA  C002  F004         	movff	strlen@s,strlen@cp
 12669  0088BE  C003  F005         	movff	strlen@s+1,strlen@cp+1
 12670  0088C2  D002               	goto	l10398
 12671  0088C4                     l10396:
 12672                           
 12673                           ; BSR set to: 0
 12674  0088C4  4A04               	infsnz	strlen@cp,f,c
 12675  0088C6  2A05               	incf	strlen@cp+1,f,c
 12676  0088C8                     l10398:
 12677                           
 12678                           ; BSR set to: 0
 12679  0088C8  C004  FFD9         	movff	strlen@cp,fsr2l
 12680  0088CC  C005  FFDA         	movff	strlen@cp+1,fsr2h
 12681  0088D0  50DF               	movf	indf2,w,c
 12682  0088D2  E1F8               	bnz	l10396
 12683                           
 12684                           ; BSR set to: 0
 12685  0088D4  5002               	movf	strlen@s,w,c
 12686  0088D6  5C04               	subwf	strlen@cp,w,c
 12687  0088D8  6E02               	movwf	?_strlen,c
 12688  0088DA  5003               	movf	strlen@s+1,w,c
 12689  0088DC  5805               	subwfb	strlen@cp+1,w,c
 12690  0088DE  6E03               	movwf	?_strlen+1,c
 12691                           
 12692                           ; BSR set to: 0
 12693  0088E0  0012               	return		;funcret
 12694  0088E2                     __end_of_strlen:
 12695                           	opt stack 0
 12696                           tosu	equ	0xFFF
 12697                           tosh	equ	0xFFE
 12698                           tosl	equ	0xFFD
 12699                           pclath	equ	0xFFA
 12700                           tblptru	equ	0xFF8
 12701                           tblptrh	equ	0xFF7
 12702                           tblptrl	equ	0xFF6
 12703                           tablat	equ	0xFF5
 12704                           prodh	equ	0xFF4
 12705                           prodl	equ	0xFF3
 12706                           intcon	equ	0xFF2
 12707                           intcon2	equ	0xFF1
 12708                           indf0	equ	0xFEF
 12709                           postinc0	equ	0xFEE
 12710                           fsr0h	equ	0xFEA
 12711                           fsr0l	equ	0xFE9
 12712                           wreg	equ	0xFE8
 12713                           postinc1	equ	0xFE6
 12714                           plusw1	equ	0xFE3
 12715                           fsr1h	equ	0xFE2
 12716                           fsr1l	equ	0xFE1
 12717                           indf2	equ	0xFDF
 12718                           postinc2	equ	0xFDE
 12719                           postdec2	equ	0xFDD
 12720                           plusw2	equ	0xFDB
 12721                           fsr2h	equ	0xFDA
 12722                           fsr2l	equ	0xFD9
 12723                           status	equ	0xFD8
 12724                           
 12725 ;; *************** function _sprintf *****************
 12726 ;; Defined at:
 12727 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprintf.c"
 12728 ;; Parameters:    Size  Location     Type
 12729 ;;  wh              2   32[COMRAM] PTR unsigned char 
 12730 ;;		 -> main@str(32), DEMO_TCP_Client@txdataPort60(80), DEMO_TCP_Client@strTmp(17), Network_Read@debug_str(80), 
 12731 ;;  f               1   34[COMRAM] PTR const unsigned char 
 12732 ;;		 -> STR_8(12), STR_5(61), STR_4(3), STR_1(8), 
 12733 ;; Auto vars:     Size  Location     Type
 12734 ;;  pb              5   44[COMRAM] struct __prbuf
 12735 ;;  ap              1   43[COMRAM] PTR void [1]
 12736 ;;		 -> ?_sprintf(2), ?_printf(2), 
 12737 ;; Return value:  Size  Location     Type
 12738 ;;                  2   32[COMRAM] int 
 12739 ;; Registers used:
 12740 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12741 ;; Tracked objects:
 12742 ;;		On entry : 0/2
 12743 ;;		On exit  : 0/0
 12744 ;;		Unchanged: 0/0
 12745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12746 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12747 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12749 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12750 ;;Total ram usage:       17 bytes
 12751 ;; Hardware stack levels used:    1
 12752 ;; Hardware stack levels required when called:    5
 12753 ;; This function calls:
 12754 ;;		__doprnt
 12755 ;; This function is called by:
 12756 ;;		_Network_Read
 12757 ;;		_DEMO_TCP_Client
 12758 ;;		_main
 12759 ;; This function uses a non-reentrant model
 12760 ;;
 12761                           
 12762                           	psect	text62
 12763  008810                     __ptext62:
 12764                           	opt stack 0
 12765  008810                     _sprintf:
 12766                           	opt stack 25
 12767                           
 12768                           ; BSR set to: 0
 12769                           ;incstack = 0
 12770  008810  C021  F02D         	movff	sprintf@wh,sprintf@pb
 12771  008814  C022  F02E         	movff	sprintf@wh+1,sprintf@pb+1
 12772  008818  6A2F               	clrf	sprintf@pb+2,c
 12773  00881A  6A30               	clrf	sprintf@pb+3,c
 12774  00881C  6A31               	clrf	sprintf@pb+4,c
 12775  00881E  0E24               	movlw	low (?_sprintf+3)
 12776  008820  6E2C               	movwf	sprintf@ap,c
 12777  008822  C023  F00E         	movff	sprintf@f,__doprnt@f
 12778  008826  0E2C               	movlw	low sprintf@ap
 12779  008828  6E0F               	movwf	__doprnt@ap,c
 12780  00882A  0E2D               	movlw	sprintf@pb& (0+255)
 12781  00882C  EC0D  F023         	call	__doprnt
 12782  008830  C02D  FFD9         	movff	sprintf@pb,fsr2l
 12783  008834  C02E  FFDA         	movff	sprintf@pb+1,fsr2h
 12784  008838  6ADF               	clrf	indf2,c
 12785  00883A  0C00               	retlw	0	;funcret
 12786  00883C                     __end_of_sprintf:
 12787                           	opt stack 0
 12788                           tosu	equ	0xFFF
 12789                           tosh	equ	0xFFE
 12790                           tosl	equ	0xFFD
 12791                           pclath	equ	0xFFA
 12792                           tblptru	equ	0xFF8
 12793                           tblptrh	equ	0xFF7
 12794                           tblptrl	equ	0xFF6
 12795                           tablat	equ	0xFF5
 12796                           prodh	equ	0xFF4
 12797                           prodl	equ	0xFF3
 12798                           intcon	equ	0xFF2
 12799                           intcon2	equ	0xFF1
 12800                           indf0	equ	0xFEF
 12801                           postinc0	equ	0xFEE
 12802                           fsr0h	equ	0xFEA
 12803                           fsr0l	equ	0xFE9
 12804                           wreg	equ	0xFE8
 12805                           postinc1	equ	0xFE6
 12806                           plusw1	equ	0xFE3
 12807                           fsr1h	equ	0xFE2
 12808                           fsr1l	equ	0xFE1
 12809                           indf2	equ	0xFDF
 12810                           postinc2	equ	0xFDE
 12811                           postdec2	equ	0xFDD
 12812                           plusw2	equ	0xFDB
 12813                           fsr2h	equ	0xFDA
 12814                           fsr2l	equ	0xFD9
 12815                           status	equ	0xFD8
 12816                           
 12817 ;; *************** function __doprnt *****************
 12818 ;; Defined at:
 12819 ;;		line 458 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
 12820 ;; Parameters:    Size  Location     Type
 12821 ;;  pb              1    wreg     PTR struct __prbuf
 12822 ;;		 -> sprintf@pb(5), printf@pb(5), 
 12823 ;;  f               1   13[COMRAM] PTR const unsigned char 
 12824 ;;		 -> STR_8(12), STR_5(61), STR_4(3), STR_3(10), 
 12825 ;;		 -> STR_2(28), STR_1(8), 
 12826 ;;  ap              1   14[COMRAM] PTR PTR void 
 12827 ;;		 -> sprintf@ap(1), printf@ap(1), 
 12828 ;; Auto vars:     Size  Location     Type
 12829 ;;  pb              1   31[COMRAM] PTR struct __prbuf
 12830 ;;		 -> sprintf@pb(5), printf@pb(5), 
 12831 ;;  idx             1   19[COMRAM] unsigned char 
 12832 ;;  tmpval          4    0        struct .
 12833 ;;  width           2   28[COMRAM] int 
 12834 ;;  val             2   26[COMRAM] unsigned int 
 12835 ;;  cp              2   23[COMRAM] PTR const unsigned char 
 12836 ;;		 -> ?_sprintf(2), ?_printf(2), STR_9(7), main@str(32), 
 12837 ;;		 -> STR_7(13), STR_6(17), DEMO_TCP_Client@txdataPort60(80), DEMO_TCP_Client@strTmp(17), 
 12838 ;;		 -> DEMO_TCP_Client@rxdataPort60(50), Network_Read@debug_str(80), NULL(0), 
 12839 ;;  len             2   21[COMRAM] unsigned int 
 12840 ;;  c               1   30[COMRAM] char 
 12841 ;;  flag            1   25[COMRAM] unsigned char 
 12842 ;;  prec            1   20[COMRAM] char 
 12843 ;; Return value:  Size  Location     Type
 12844 ;;                  2   13[COMRAM] int 
 12845 ;; Registers used:
 12846 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12847 ;; Tracked objects:
 12848 ;;		On entry : 0/2
 12849 ;;		On exit  : 0/0
 12850 ;;		Unchanged: 0/0
 12851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12852 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12853 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12854 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12855 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12856 ;;Total ram usage:       19 bytes
 12857 ;; Hardware stack levels used:    1
 12858 ;; Hardware stack levels required when called:    4
 12859 ;; This function calls:
 12860 ;;		Absolute function
 12861 ;;		___lwdiv
 12862 ;;		___lwmod
 12863 ;;		___wmul
 12864 ;;		_isdigit
 12865 ;;		_putch
 12866 ;; This function is called by:
 12867 ;;		_printf
 12868 ;;		_sprintf
 12869 ;; This function uses a non-reentrant model
 12870 ;;
 12871                           
 12872                           	psect	text63
 12873  00461A                     __ptext63:
 12874                           	opt stack 0
 12875  00461A                     __doprnt:
 12876                           	opt stack 25
 12877                           
 12878                           ;incstack = 0
 12879                           ;__doprnt@pb stored from wreg
 12880  00461A  6E20               	movwf	__doprnt@pb,c
 12881                           
 12882                           ;doprnt.c: 499: signed char c;
 12883                           ;doprnt.c: 501: int width;
 12884                           ;doprnt.c: 506: signed char prec;
 12885                           ;doprnt.c: 508: unsigned char flag;
 12886                           ;doprnt.c: 523: union {
 12887                           ;doprnt.c: 524: unsigned long vd;
 12888                           ;doprnt.c: 525: double integ;
 12889                           ;doprnt.c: 526: } tmpval;
 12890                           ;doprnt.c: 528: unsigned int val;
 12891                           ;doprnt.c: 529: unsigned len;
 12892                           ;doprnt.c: 530: const char * cp;
 12893                           ;doprnt.c: 536: while(c = *f++) {
 12894  00461C  D2D1               	goto	l9634
 12895  00461E                     l9466:
 12896                           
 12897                           ;doprnt.c: 538: if(c != '%')
 12898  00461E  0E25               	movlw	37
 12899  004620  181F               	xorwf	__doprnt@c,w,c
 12900  004622  E02F               	bz	l1710
 12901                           
 12902                           ;doprnt.c: 540: {
 12903                           ;doprnt.c: 541: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 12904  004624  5020               	movf	__doprnt@pb,w,c
 12905  004626  6ED9               	movwf	fsr2l,c
 12906  004628  6ADA               	clrf	fsr2h,c
 12907  00462A  0E02               	movlw	2
 12908  00462C  26D9               	addwf	fsr2l,f,c
 12909  00462E  50DE               	movf	postinc2,w,c
 12910  004630  10DE               	iorwf	postinc2,w,c
 12911  004632  10DE               	iorwf	postinc2,w,c
 12912  004634  E012               	bz	l9472
 12913  004636  5020               	movf	__doprnt@pb,w,c
 12914  004638  6ED9               	movwf	fsr2l,c
 12915  00463A  6ADA               	clrf	fsr2h,c
 12916  00463C  0E02               	movlw	2
 12917  00463E  26D9               	addwf	fsr2l,f,c
 12918  004640  D801               	call	u14568
 12919  004642  D2BE               	goto	l9634
 12920  004644                     u14568:
 12921  004644  0005               	push	
 12922  004646  6EFA               	movwf	pclath,c
 12923  004648  50DE               	movf	postinc2,w,c
 12924  00464A  6EFD               	movwf	tosl,c
 12925  00464C  50DE               	movf	postinc2,w,c
 12926  00464E  6EFE               	movwf	tosh,c
 12927  004650  50DE               	movf	postinc2,w,c
 12928  004652  6EFF               	movwf	tosu,c
 12929  004654  50FA               	movf	pclath,w,c
 12930  004656  501F               	movf	__doprnt@c,w,c
 12931  004658  0012               	return		;indir
 12932  00465A                     l9472:
 12933  00465A  5020               	movf	__doprnt@pb,w,c
 12934  00465C  6ED9               	movwf	fsr2l,c
 12935  00465E  6ADA               	clrf	fsr2h,c
 12936  004660  CFDE F010          	movff	postinc2,??__doprnt
 12937  004664  CFDD F011          	movff	postdec2,??__doprnt+1
 12938  004668  C010  FFD9         	movff	??__doprnt,fsr2l
 12939  00466C  C011  FFDA         	movff	??__doprnt+1,fsr2h
 12940  004670  C01F  FFDF         	movff	__doprnt@c,indf2
 12941  004674  5020               	movf	__doprnt@pb,w,c
 12942  004676  6ED9               	movwf	fsr2l,c
 12943  004678  6ADA               	clrf	fsr2h,c
 12944  00467A  2ADE               	incf	postinc2,f,c
 12945  00467C  0E00               	movlw	0
 12946  00467E  22DD               	addwfc	postdec2,f,c
 12947  004680  D29F               	goto	l9634
 12948  004682                     l1710:
 12949                           
 12950                           ;doprnt.c: 543: }
 12951                           ;doprnt.c: 546: width = 0;
 12952  004682  6A1D               	clrf	__doprnt@width,c
 12953  004684  6A1E               	clrf	__doprnt@width+1,c
 12954                           
 12955                           ;doprnt.c: 548: flag = 0;
 12956  004686  6A1A               	clrf	__doprnt@flag,c
 12957                           
 12958                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 12959  004688  C00E  FFF6         	movff	__doprnt@f,tblptrl
 12960  00468C                     	if	1	;There is more than 1 active tblptr byte
 12961  00468C  0E10               	movlw	high __smallconst
 12962  00468E  6EF7               	movwf	tblptrh,c
 12963  004690                     	endif
 12964  004690                     	if	0	;tblptru may be non-zero
 12965  004690                     	endif
 12966  004690                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12967  004690  0E00               	movlw	low (__smallconst shr (0+16))
 12968  004692  6EF8               	movwf	tblptru,c
 12969  004694                     	endif
 12970  004694  0008               	tblrd		*
 12971  004696  50F5               	movf	tablat,w,c
 12972  004698  EC42  F045         	call	_isdigit
 12973  00469C  E201 D108          	bnc	l9534
 12974                           
 12975                           ;doprnt.c: 598: width = 0;
 12976  0046A0  6A1D               	clrf	__doprnt@width,c
 12977  0046A2  6A1E               	clrf	__doprnt@width+1,c
 12978  0046A4                     l9480:
 12979                           
 12980                           ;doprnt.c: 600: width *= 10;
 12981  0046A4  C01D  F002         	movff	__doprnt@width,___wmul@multiplier
 12982  0046A8  C01E  F003         	movff	__doprnt@width+1,___wmul@multiplier+1
 12983  0046AC  6A05               	clrf	___wmul@multiplicand+1,c
 12984  0046AE  0E0A               	movlw	10
 12985  0046B0  6E04               	movwf	___wmul@multiplicand,c
 12986  0046B2  EC98  F044         	call	___wmul	;wreg free
 12987  0046B6  C002  F01D         	movff	?___wmul,__doprnt@width
 12988  0046BA  C003  F01E         	movff	?___wmul+1,__doprnt@width+1
 12989                           
 12990                           ;doprnt.c: 601: width += *f++ - '0';
 12991  0046BE  0ED0               	movlw	208
 12992  0046C0  6E10               	movwf	??__doprnt& (0+255),c
 12993  0046C2  6811               	setf	(??__doprnt+1)& (0+255),c
 12994  0046C4  C00E  FFF6         	movff	__doprnt@f,tblptrl
 12995  0046C8                     	if	1	;There is more than 1 active tblptr byte
 12996  0046C8  0E10               	movlw	high __smallconst
 12997  0046CA  6EF7               	movwf	tblptrh,c
 12998  0046CC                     	endif
 12999  0046CC                     	if	0	;tblptru may be non-zero
 13000  0046CC                     	endif
 13001  0046CC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13002  0046CC  0E00               	movlw	low (__smallconst shr (0+16))
 13003  0046CE  6EF8               	movwf	tblptru,c
 13004  0046D0                     	endif
 13005  0046D0  0008               	tblrd		*
 13006  0046D2  50F5               	movf	tablat,w,c
 13007  0046D4  6E12               	movwf	(??__doprnt+2)& (0+255),c
 13008  0046D6  6A13               	clrf	(??__doprnt+3)& (0+255),c
 13009  0046D8  5010               	movf	??__doprnt,w,c
 13010  0046DA  2612               	addwf	??__doprnt+2,f,c
 13011  0046DC  5011               	movf	??__doprnt+1,w,c
 13012  0046DE  2213               	addwfc	??__doprnt+3,f,c
 13013  0046E0  5012               	movf	??__doprnt+2,w,c
 13014  0046E2  261D               	addwf	__doprnt@width,f,c
 13015  0046E4  5013               	movf	??__doprnt+3,w,c
 13016  0046E6  221E               	addwfc	__doprnt@width+1,f,c
 13017  0046E8  2A0E               	incf	__doprnt@f,f,c
 13018                           
 13019                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 13020  0046EA  C00E  FFF6         	movff	__doprnt@f,tblptrl
 13021  0046EE                     	if	1	;There is more than 1 active tblptr byte
 13022  0046EE  0E10               	movlw	high __smallconst
 13023  0046F0  6EF7               	movwf	tblptrh,c
 13024  0046F2                     	endif
 13025  0046F2                     	if	0	;tblptru may be non-zero
 13026  0046F2                     	endif
 13027  0046F2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13028  0046F2  0E00               	movlw	low (__smallconst shr (0+16))
 13029  0046F4  6EF8               	movwf	tblptru,c
 13030  0046F6                     	endif
 13031  0046F6  0008               	tblrd		*
 13032  0046F8  50F5               	movf	tablat,w,c
 13033  0046FA  EC42  F045         	call	_isdigit
 13034  0046FE  E201 D0D7          	bnc	l9534
 13035  004702  D7D0               	goto	l9480
 13036  004704                     l9488:
 13037                           
 13038                           ;doprnt.c: 721: flag |= 0x80;
 13039  004704  8E1A               	bsf	__doprnt@flag,7,c
 13040                           
 13041                           ;doprnt.c: 723: break;
 13042  004706  D0F0               	goto	l9536
 13043  004708                     l9490:
 13044                           
 13045                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 13046  004708  500F               	movf	__doprnt@ap,w,c
 13047  00470A  6ED9               	movwf	fsr2l,c
 13048  00470C  6ADA               	clrf	fsr2h,c
 13049  00470E  0E02               	movlw	2
 13050  004710  26DF               	addwf	indf2,f,c
 13051  004712  5CDF               	subwf	indf2,w,c
 13052  004714  6ED9               	movwf	fsr2l,c
 13053  004716  6ADA               	clrf	fsr2h,c
 13054  004718  CFDE F018          	movff	postinc2,__doprnt@cp
 13055  00471C  CFDE F019          	movff	postinc2,__doprnt@cp+1
 13056                           
 13057                           ;doprnt.c: 740: if(!cp)
 13058  004720  5018               	movf	__doprnt@cp,w,c
 13059  004722  1019               	iorwf	__doprnt@cp+1,w,c
 13060  004724  E106               	bnz	l9496
 13061                           
 13062                           ;doprnt.c: 741: cp = "(null)";
 13063  004726  0EDF               	movlw	low STR_9
 13064  004728  6E18               	movwf	__doprnt@cp,c
 13065  00472A  5018               	movf	__doprnt@cp,w,c
 13066  00472C  A4D8               	btfss	status,2,c
 13067  00472E  0E10               	movlw	high __smallconst
 13068  004730  6E19               	movwf	__doprnt@cp+1,c
 13069  004732                     l9496:
 13070                           
 13071                           ;doprnt.c: 745: len = 0;
 13072  004732  6A16               	clrf	__doprnt@len,c
 13073  004734  6A17               	clrf	__doprnt@len+1,c
 13074                           
 13075                           ;doprnt.c: 746: while(cp[len])
 13076  004736  D002               	goto	l9500
 13077  004738                     l9498:
 13078                           
 13079                           ;doprnt.c: 747: len++;
 13080  004738  4A16               	infsnz	__doprnt@len,f,c
 13081  00473A  2A17               	incf	__doprnt@len+1,f,c
 13082  00473C                     l9500:
 13083  00473C  5016               	movf	__doprnt@len,w,c
 13084  00473E  2418               	addwf	__doprnt@cp,w,c
 13085  004740  6E10               	movwf	??__doprnt& (0+255),c
 13086  004742  5017               	movf	__doprnt@len+1,w,c
 13087  004744  2019               	addwfc	__doprnt@cp+1,w,c
 13088  004746  6E11               	movwf	(??__doprnt+1)& (0+255),c
 13089  004748  C010  FFF6         	movff	??__doprnt,tblptrl
 13090  00474C  C011  FFF7         	movff	??__doprnt+1,tblptrh
 13091  004750  0E00               	movlw	low (__smallconst shr (0+16))
 13092  004752  6EF8               	movwf	tblptru,c
 13093  004754  0E0F               	movlw	(high __ramtop+-1)
 13094  004756  64F7               	cpfsgt	tblptrh,c
 13095  004758  D003               	bra	u14607
 13096  00475A  0008               	tblrd		*
 13097  00475C  50F5               	movf	tablat,w,c
 13098  00475E  D005               	bra	u14600
 13099  004760                     u14607:
 13100  004760  CFF6 FFE9          	movff	tblptrl,fsr0l
 13101  004764  CFF7 FFEA          	movff	tblptrh,fsr0h
 13102  004768  50EF               	movf	indf0,w,c
 13103  00476A                     u14600:
 13104  00476A  0900               	iorlw	0
 13105  00476C  E1E5               	bnz	l9498
 13106                           
 13107                           ;doprnt.c: 757: if(width > len)
 13108  00476E  501D               	movf	__doprnt@width,w,c
 13109  004770  5C16               	subwf	__doprnt@len,w,c
 13110  004772  501E               	movf	__doprnt@width+1,w,c
 13111  004774  5817               	subwfb	__doprnt@len+1,w,c
 13112  004776  E205               	bc	l1728
 13113                           
 13114                           ;doprnt.c: 758: width -= len;
 13115  004778  5016               	movf	__doprnt@len,w,c
 13116  00477A  5E1D               	subwf	__doprnt@width,f,c
 13117  00477C  5017               	movf	__doprnt@len+1,w,c
 13118  00477E  5A1E               	subwfb	__doprnt@width+1,f,c
 13119  004780  D030               	goto	l9514
 13120  004782                     l1728:
 13121                           
 13122                           ;doprnt.c: 759: else
 13123                           ;doprnt.c: 760: width = 0;
 13124  004782  6A1D               	clrf	__doprnt@width,c
 13125  004784  6A1E               	clrf	__doprnt@width+1,c
 13126  004786  D02D               	goto	l9514
 13127  004788                     l9506:
 13128                           
 13129                           ;doprnt.c: 765: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 13130  004788  5020               	movf	__doprnt@pb,w,c
 13131  00478A  6ED9               	movwf	fsr2l,c
 13132  00478C  6ADA               	clrf	fsr2h,c
 13133  00478E  0E02               	movlw	2
 13134  004790  26D9               	addwf	fsr2l,f,c
 13135  004792  50DE               	movf	postinc2,w,c
 13136  004794  10DE               	iorwf	postinc2,w,c
 13137  004796  10DE               	iorwf	postinc2,w,c
 13138  004798  E011               	bz	l9510
 13139  00479A  5020               	movf	__doprnt@pb,w,c
 13140  00479C  6ED9               	movwf	fsr2l,c
 13141  00479E  6ADA               	clrf	fsr2h,c
 13142  0047A0  0E02               	movlw	2
 13143  0047A2  26D9               	addwf	fsr2l,f,c
 13144  0047A4  D801               	call	u14648
 13145  0047A6  D01D               	goto	l9514
 13146  0047A8                     u14648:
 13147  0047A8  0005               	push	
 13148  0047AA  6EFA               	movwf	pclath,c
 13149  0047AC  50DE               	movf	postinc2,w,c
 13150  0047AE  6EFD               	movwf	tosl,c
 13151  0047B0  50DE               	movf	postinc2,w,c
 13152  0047B2  6EFE               	movwf	tosh,c
 13153  0047B4  50DE               	movf	postinc2,w,c
 13154  0047B6  6EFF               	movwf	tosu,c
 13155  0047B8  50FA               	movf	pclath,w,c
 13156  0047BA  0C20               	retlw	32	;indir
 13157  0047BC                     l9510:
 13158  0047BC  5020               	movf	__doprnt@pb,w,c
 13159  0047BE  6ED9               	movwf	fsr2l,c
 13160  0047C0  6ADA               	clrf	fsr2h,c
 13161  0047C2  CFDE F010          	movff	postinc2,??__doprnt
 13162  0047C6  CFDD F011          	movff	postdec2,??__doprnt+1
 13163  0047CA  C010  FFD9         	movff	??__doprnt,fsr2l
 13164  0047CE  C011  FFDA         	movff	??__doprnt+1,fsr2h
 13165  0047D2  0E20               	movlw	32
 13166  0047D4  6EDF               	movwf	indf2,c
 13167  0047D6  5020               	movf	__doprnt@pb,w,c
 13168  0047D8  6ED9               	movwf	fsr2l,c
 13169  0047DA  6ADA               	clrf	fsr2h,c
 13170  0047DC  2ADE               	incf	postinc2,f,c
 13171  0047DE  0E00               	movlw	0
 13172  0047E0  22DD               	addwfc	postdec2,f,c
 13173  0047E2                     l9514:
 13174  0047E2  061D               	decf	__doprnt@width,f,c
 13175  0047E4  A0D8               	btfss	status,0,c
 13176  0047E6  061E               	decf	__doprnt@width+1,f,c
 13177  0047E8  281D               	incf	__doprnt@width,w,c
 13178  0047EA  E1CE               	bnz	l9506
 13179  0047EC  281E               	incf	__doprnt@width+1,w,c
 13180  0047EE  E054               	bz	l9528
 13181  0047F0  D7CB               	goto	l9506
 13182  0047F2                     l9516:
 13183                           
 13184                           ;doprnt.c: 768: if(pb->func) (pb->func(*cp++)); else ((*pb->ptr++ = *cp++));
 13185  0047F2  5020               	movf	__doprnt@pb,w,c
 13186  0047F4  6ED9               	movwf	fsr2l,c
 13187  0047F6  6ADA               	clrf	fsr2h,c
 13188  0047F8  0E02               	movlw	2
 13189  0047FA  26D9               	addwf	fsr2l,f,c
 13190  0047FC  50DE               	movf	postinc2,w,c
 13191  0047FE  10DE               	iorwf	postinc2,w,c
 13192  004800  10DE               	iorwf	postinc2,w,c
 13193  004802  E025               	bz	l9522
 13194  004804  5020               	movf	__doprnt@pb,w,c
 13195  004806  6ED9               	movwf	fsr2l,c
 13196  004808  6ADA               	clrf	fsr2h,c
 13197  00480A  0E02               	movlw	2
 13198  00480C  26D9               	addwf	fsr2l,f,c
 13199  00480E  D801               	call	u14678
 13200  004810  D01B               	goto	l9520
 13201  004812                     u14678:
 13202  004812  0005               	push	
 13203  004814  6EFA               	movwf	pclath,c
 13204  004816  50DE               	movf	postinc2,w,c
 13205  004818  6EFD               	movwf	tosl,c
 13206  00481A  50DE               	movf	postinc2,w,c
 13207  00481C  6EFE               	movwf	tosh,c
 13208  00481E  50DE               	movf	postinc2,w,c
 13209  004820  6EFF               	movwf	tosu,c
 13210  004822  50FA               	movf	pclath,w,c
 13211  004824  C018  FFF6         	movff	__doprnt@cp,tblptrl
 13212  004828  C019  FFF7         	movff	__doprnt@cp+1,tblptrh
 13213  00482C  0E00               	movlw	low (__smallconst shr (0+16))
 13214  00482E  6EF8               	movwf	tblptru,c
 13215  004830  0E0F               	movlw	(high __ramtop+-1)
 13216  004832  64F7               	cpfsgt	tblptrh,c
 13217  004834  D003               	bra	u14687
 13218  004836  0008               	tblrd		*
 13219  004838  50F5               	movf	tablat,w,c
 13220  00483A  D005               	bra	u14680
 13221  00483C                     u14687:
 13222  00483C  CFF6 FFE9          	movff	tblptrl,fsr0l
 13223  004840  CFF7 FFEA          	movff	tblptrh,fsr0h
 13224  004844  50EF               	movf	indf0,w,c
 13225  004846                     u14680:
 13226  004846  0012               	return		;indir
 13227  004848                     l9520:
 13228  004848  4A18               	infsnz	__doprnt@cp,f,c
 13229  00484A  2A19               	incf	__doprnt@cp+1,f,c
 13230  00484C  D025               	goto	l9528
 13231  00484E                     l9522:
 13232  00484E  C018  FFF6         	movff	__doprnt@cp,tblptrl
 13233  004852  C019  FFF7         	movff	__doprnt@cp+1,tblptrh
 13234  004856  0E00               	movlw	low (__smallconst shr (0+16))
 13235  004858  6EF8               	movwf	tblptru,c
 13236  00485A  5020               	movf	__doprnt@pb,w,c
 13237  00485C  6ED9               	movwf	fsr2l,c
 13238  00485E  6ADA               	clrf	fsr2h,c
 13239  004860  CFDE F010          	movff	postinc2,??__doprnt
 13240  004864  CFDD F011          	movff	postdec2,??__doprnt+1
 13241  004868  C010  FFD9         	movff	??__doprnt,fsr2l
 13242  00486C  C011  FFDA         	movff	??__doprnt+1,fsr2h
 13243  004870  0E0F               	movlw	(high __ramtop+-1)
 13244  004872  64F7               	cpfsgt	tblptrh,c
 13245  004874  D003               	bra	u14697
 13246  004876  0008               	tblrd		*
 13247  004878  50F5               	movf	tablat,w,c
 13248  00487A  D005               	bra	u14690
 13249  00487C                     u14697:
 13250  00487C  CFF6 FFE9          	movff	tblptrl,fsr0l
 13251  004880  CFF7 FFEA          	movff	tblptrh,fsr0h
 13252  004884  50EF               	movf	indf0,w,c
 13253  004886                     u14690:
 13254  004886  6EDF               	movwf	indf2,c
 13255  004888  4A18               	infsnz	__doprnt@cp,f,c
 13256  00488A  2A19               	incf	__doprnt@cp+1,f,c
 13257  00488C  5020               	movf	__doprnt@pb,w,c
 13258  00488E  6ED9               	movwf	fsr2l,c
 13259  004890  6ADA               	clrf	fsr2h,c
 13260  004892  2ADE               	incf	postinc2,f,c
 13261  004894  0E00               	movlw	0
 13262  004896  22DD               	addwfc	postdec2,f,c
 13263  004898                     l9528:
 13264  004898  0616               	decf	__doprnt@len,f,c
 13265  00489A  A0D8               	btfss	status,0,c
 13266  00489C  0617               	decf	__doprnt@len+1,f,c
 13267  00489E  2816               	incf	__doprnt@len,w,c
 13268  0048A0  E1A8               	bnz	l9516
 13269  0048A2  2817               	incf	__doprnt@len+1,w,c
 13270  0048A4  E101 D18C          	bz	l9634
 13271  0048A8  D7A4               	goto	l9516
 13272  0048AA                     l9530:
 13273                           
 13274                           ;doprnt.c: 818: flag |= 0xC0;
 13275  0048AA  0EC0               	movlw	192
 13276  0048AC  121A               	iorwf	__doprnt@flag,f,c
 13277                           
 13278                           ;doprnt.c: 819: break;
 13279  0048AE  D01C               	goto	l9536
 13280  0048B0                     l9534:
 13281  0048B0  2A0E               	incf	__doprnt@f,f,c
 13282  0048B2  040E               	decf	__doprnt@f,w,c
 13283  0048B4  6E10               	movwf	??__doprnt& (0+255),c
 13284  0048B6  C010  FFF6         	movff	??__doprnt,tblptrl
 13285  0048BA                     	if	1	;There is more than 1 active tblptr byte
 13286  0048BA  0E10               	movlw	high __smallconst
 13287  0048BC  6EF7               	movwf	tblptrh,c
 13288  0048BE                     	endif
 13289  0048BE                     	if	0	;tblptru may be non-zero
 13290  0048BE                     	endif
 13291  0048BE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13292  0048BE  0E00               	movlw	low (__smallconst shr (0+16))
 13293  0048C0  6EF8               	movwf	tblptru,c
 13294  0048C2                     	endif
 13295  0048C2  0008               	tblrd		*
 13296  0048C4  CFF5 F01F          	movff	tablat,__doprnt@c
 13297  0048C8  501F               	movf	__doprnt@c,w,c
 13298                           
 13299                           ; Switch size 1, requested type "speed"
 13300                           ; Number of cases is 6, Range of values is 0 to 120
 13301                           ; switch strategies available:
 13302                           ; Name         Instructions Cycles
 13303                           ; simple_byte           19    10 (average)
 13304                           ;	Chosen strategy is simple_byte
 13305  0048CA  E101 D188          	bz	l1718
 13306  0048CE  0A64               	xorlw	100	; case 100
 13307  0048D0  E00B               	bz	l9536
 13308  0048D2  0A0D               	xorlw	13	; case 105
 13309  0048D4  E009               	bz	l9536
 13310  0048D6  0A1A               	xorlw	26	; case 115
 13311  0048D8  E101 D716          	bz	l9490
 13312  0048DC  0A06               	xorlw	6	; case 117
 13313  0048DE  E0E5               	bz	l9530
 13314  0048E0  0A0D               	xorlw	13	; case 120
 13315  0048E2  E101 D70F          	bz	l9488
 13316  0048E6  D16C               	goto	l9634
 13317  0048E8                     l9536:
 13318                           
 13319                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 13320  0048E8  C01A  F010         	movff	__doprnt@flag,??__doprnt
 13321  0048EC  0EC0               	movlw	192
 13322  0048EE  1610               	andwf	??__doprnt,f,c
 13323  0048F0  E115               	bnz	l9546
 13324                           
 13325                           ;doprnt.c: 1253: {
 13326                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
 13327  0048F2  500F               	movf	__doprnt@ap,w,c
 13328  0048F4  6ED9               	movwf	fsr2l,c
 13329  0048F6  6ADA               	clrf	fsr2h,c
 13330  0048F8  0E02               	movlw	2
 13331  0048FA  26DF               	addwf	indf2,f,c
 13332  0048FC  5CDF               	subwf	indf2,w,c
 13333  0048FE  6ED9               	movwf	fsr2l,c
 13334  004900  6ADA               	clrf	fsr2h,c
 13335  004902  CFDE F01B          	movff	postinc2,__doprnt@val
 13336  004906  CFDE F01C          	movff	postinc2,__doprnt@val+1
 13337                           
 13338                           ;doprnt.c: 1261: if((int)val < 0) {
 13339  00490A  AE1C               	btfss	__doprnt@val+1,7,c
 13340  00490C  D046               	goto	l9578
 13341                           
 13342                           ;doprnt.c: 1262: flag |= 0x03;
 13343  00490E  0E03               	movlw	3
 13344  004910  121A               	iorwf	__doprnt@flag,f,c
 13345                           
 13346                           ;doprnt.c: 1263: val = -val;
 13347  004912  6C1B               	negf	__doprnt@val,c
 13348  004914  1E1C               	comf	__doprnt@val+1,f,c
 13349  004916  B0D8               	btfsc	status,0,c
 13350  004918  2A1C               	incf	__doprnt@val+1,f,c
 13351  00491A  D03F               	goto	l9578
 13352  00491C                     l9546:
 13353                           
 13354                           ;doprnt.c: 1268: else
 13355                           ;doprnt.c: 1273: {
 13356                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 13357  00491C  500F               	movf	__doprnt@ap,w,c
 13358  00491E  6ED9               	movwf	fsr2l,c
 13359  004920  6ADA               	clrf	fsr2h,c
 13360  004922  0E02               	movlw	2
 13361  004924  26DF               	addwf	indf2,f,c
 13362  004926  5CDF               	subwf	indf2,w,c
 13363  004928  6ED9               	movwf	fsr2l,c
 13364  00492A  6ADA               	clrf	fsr2h,c
 13365  00492C  CFDE F01B          	movff	postinc2,__doprnt@val
 13366  004930  CFDE F01C          	movff	postinc2,__doprnt@val+1
 13367  004934  D032               	goto	l9578
 13368  004936                     l9548:
 13369                           
 13370                           ;doprnt.c: 1302: case 0xC0:
 13371                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 13372  004936  0E01               	movlw	1
 13373  004938  6E1F               	movwf	__doprnt@c,c
 13374  00493A                     l9554:
 13375                           
 13376                           ;doprnt.c: 1306: if(val < dpowers[c])
 13377  00493A  501F               	movf	__doprnt@c,w,c
 13378  00493C  0D02               	mullw	2
 13379  00493E  50F3               	movf	prodl,w,c
 13380  004940  0F01               	addlw	low _dpowers
 13381  004942  6E10               	movwf	??__doprnt& (0+255),c
 13382  004944  C010  FFF6         	movff	??__doprnt,tblptrl
 13383  004948                     	if	1	;There is more than 1 active tblptr byte
 13384  004948  0E10               	movlw	high __smallconst
 13385  00494A  6EF7               	movwf	tblptrh,c
 13386  00494C                     	endif
 13387  00494C                     	if	0	;tblptru may be non-zero
 13388  00494C                     	endif
 13389  00494C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13390  00494C  0E00               	movlw	low (__smallconst shr (0+16))
 13391  00494E  6EF8               	movwf	tblptru,c
 13392  004950                     	endif
 13393  004950  0009               	tblrd		*+
 13394  004952  50F5               	movf	tablat,w,c
 13395  004954  5C1B               	subwf	__doprnt@val,w,c
 13396  004956  0009               	tblrd		*+
 13397  004958  50F5               	movf	tablat,w,c
 13398  00495A  581C               	subwfb	__doprnt@val+1,w,c
 13399  00495C  E325               	bnc	l9580
 13400  00495E  2A1F               	incf	__doprnt@c,f,c
 13401  004960  0E05               	movlw	5
 13402  004962  181F               	xorwf	__doprnt@c,w,c
 13403  004964  E021               	bz	l9580
 13404  004966  D7E9               	goto	l9554
 13405  004968                     l9562:
 13406                           
 13407                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 13408  004968  0E01               	movlw	1
 13409  00496A  6E1F               	movwf	__doprnt@c,c
 13410  00496C                     l9568:
 13411                           
 13412                           ;doprnt.c: 1317: if(val < hexpowers[c])
 13413  00496C  501F               	movf	__doprnt@c,w,c
 13414  00496E  0D02               	mullw	2
 13415  004970  50F3               	movf	prodl,w,c
 13416  004972  0F0B               	addlw	low _hexpowers
 13417  004974  6E10               	movwf	??__doprnt& (0+255),c
 13418  004976  C010  FFF6         	movff	??__doprnt,tblptrl
 13419  00497A                     	if	1	;There is more than 1 active tblptr byte
 13420  00497A  0E10               	movlw	high __smallconst
 13421  00497C  6EF7               	movwf	tblptrh,c
 13422  00497E                     	endif
 13423  00497E                     	if	0	;tblptru may be non-zero
 13424  00497E                     	endif
 13425  00497E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13426  00497E  0E00               	movlw	low (__smallconst shr (0+16))
 13427  004980  6EF8               	movwf	tblptru,c
 13428  004982                     	endif
 13429  004982  0009               	tblrd		*+
 13430  004984  50F5               	movf	tablat,w,c
 13431  004986  5C1B               	subwf	__doprnt@val,w,c
 13432  004988  0009               	tblrd		*+
 13433  00498A  50F5               	movf	tablat,w,c
 13434  00498C  581C               	subwfb	__doprnt@val+1,w,c
 13435  00498E  E30C               	bnc	l9580
 13436  004990  2A1F               	incf	__doprnt@c,f,c
 13437  004992  0E04               	movlw	4
 13438  004994  181F               	xorwf	__doprnt@c,w,c
 13439  004996  E008               	bz	l9580
 13440  004998  D7E9               	goto	l9568
 13441  00499A                     l9578:
 13442  00499A  501A               	movf	__doprnt@flag,w,c
 13443  00499C  0BC0               	andlw	192
 13444                           
 13445                           ; Switch size 1, requested type "speed"
 13446                           ; Number of cases is 3, Range of values is 0 to 192
 13447                           ; switch strategies available:
 13448                           ; Name         Instructions Cycles
 13449                           ; simple_byte           10     6 (average)
 13450                           ;	Chosen strategy is simple_byte
 13451  00499E  E0CB               	bz	l9548
 13452  0049A0  0A80               	xorlw	128	; case 128
 13453  0049A2  E0E2               	bz	l9562
 13454  0049A4  0A40               	xorlw	64	; case 192
 13455  0049A6  E0C7               	bz	l9548
 13456  0049A8                     l9580:
 13457                           
 13458                           ;doprnt.c: 1345: if(width && flag & 0x03)
 13459  0049A8  501D               	movf	__doprnt@width,w,c
 13460  0049AA  101E               	iorwf	__doprnt@width+1,w,c
 13461  0049AC  E008               	bz	l9586
 13462  0049AE  C01A  F010         	movff	__doprnt@flag,??__doprnt
 13463  0049B2  0E03               	movlw	3
 13464  0049B4  1610               	andwf	??__doprnt,f,c
 13465  0049B6  E003               	bz	l9586
 13466                           
 13467                           ;doprnt.c: 1346: width--;
 13468  0049B8  061D               	decf	__doprnt@width,f,c
 13469  0049BA  A0D8               	btfss	status,0,c
 13470  0049BC  061E               	decf	__doprnt@width+1,f,c
 13471  0049BE                     l9586:
 13472                           
 13473                           ;doprnt.c: 1381: if(width > c)
 13474  0049BE  0E80               	movlw	128
 13475  0049C0  BE1F               	btfsc	__doprnt@c,7,c
 13476  0049C2  0E7F               	movlw	127
 13477  0049C4  6E10               	movwf	??__doprnt& (0+255),c
 13478  0049C6  501D               	movf	__doprnt@width,w,c
 13479  0049C8  5C1F               	subwf	__doprnt@c,w,c
 13480  0049CA  501E               	movf	__doprnt@width+1,w,c
 13481  0049CC  0A80               	xorlw	128
 13482  0049CE  5810               	subwfb	??__doprnt& (0+255),w,c
 13483  0049D0  E207               	bc	l1757
 13484                           
 13485                           ;doprnt.c: 1382: width -= c;
 13486  0049D2  501F               	movf	__doprnt@c,w,c
 13487  0049D4  5E1D               	subwf	__doprnt@width,f,c
 13488  0049D6  0E00               	movlw	0
 13489  0049D8  BE1F               	btfsc	__doprnt@c,7,c
 13490  0049DA  0EFF               	movlw	255
 13491  0049DC  5A1E               	subwfb	__doprnt@width+1,f,c
 13492  0049DE  D002               	goto	l9590
 13493  0049E0                     l1757:
 13494                           
 13495                           ;doprnt.c: 1383: else
 13496                           ;doprnt.c: 1384: width = 0;
 13497  0049E0  6A1D               	clrf	__doprnt@width,c
 13498  0049E2  6A1E               	clrf	__doprnt@width+1,c
 13499  0049E4                     l9590:
 13500                           
 13501                           ;doprnt.c: 1422: {
 13502                           ;doprnt.c: 1424: if(width
 13503                           ;doprnt.c: 1428: )
 13504  0049E4  501D               	movf	__doprnt@width,w,c
 13505  0049E6  101E               	iorwf	__doprnt@width+1,w,c
 13506  0049E8  E033               	bz	l9602
 13507  0049EA                     l9592:
 13508                           
 13509                           ;doprnt.c: 1430: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 13510  0049EA  5020               	movf	__doprnt@pb,w,c
 13511  0049EC  6ED9               	movwf	fsr2l,c
 13512  0049EE  6ADA               	clrf	fsr2h,c
 13513  0049F0  0E02               	movlw	2
 13514  0049F2  26D9               	addwf	fsr2l,f,c
 13515  0049F4  50DE               	movf	postinc2,w,c
 13516  0049F6  10DE               	iorwf	postinc2,w,c
 13517  0049F8  10DE               	iorwf	postinc2,w,c
 13518  0049FA  E011               	bz	l9596
 13519  0049FC  5020               	movf	__doprnt@pb,w,c
 13520  0049FE  6ED9               	movwf	fsr2l,c
 13521  004A00  6ADA               	clrf	fsr2h,c
 13522  004A02  0E02               	movlw	2
 13523  004A04  26D9               	addwf	fsr2l,f,c
 13524  004A06  D801               	call	u14828
 13525  004A08  D01D               	goto	l9600
 13526  004A0A                     u14828:
 13527  004A0A  0005               	push	
 13528  004A0C  6EFA               	movwf	pclath,c
 13529  004A0E  50DE               	movf	postinc2,w,c
 13530  004A10  6EFD               	movwf	tosl,c
 13531  004A12  50DE               	movf	postinc2,w,c
 13532  004A14  6EFE               	movwf	tosh,c
 13533  004A16  50DE               	movf	postinc2,w,c
 13534  004A18  6EFF               	movwf	tosu,c
 13535  004A1A  50FA               	movf	pclath,w,c
 13536  004A1C  0C20               	retlw	32	;indir
 13537  004A1E                     l9596:
 13538  004A1E  5020               	movf	__doprnt@pb,w,c
 13539  004A20  6ED9               	movwf	fsr2l,c
 13540  004A22  6ADA               	clrf	fsr2h,c
 13541  004A24  CFDE F010          	movff	postinc2,??__doprnt
 13542  004A28  CFDD F011          	movff	postdec2,??__doprnt+1
 13543  004A2C  C010  FFD9         	movff	??__doprnt,fsr2l
 13544  004A30  C011  FFDA         	movff	??__doprnt+1,fsr2h
 13545  004A34  0E20               	movlw	32
 13546  004A36  6EDF               	movwf	indf2,c
 13547  004A38  5020               	movf	__doprnt@pb,w,c
 13548  004A3A  6ED9               	movwf	fsr2l,c
 13549  004A3C  6ADA               	clrf	fsr2h,c
 13550  004A3E  2ADE               	incf	postinc2,f,c
 13551  004A40  0E00               	movlw	0
 13552  004A42  22DD               	addwfc	postdec2,f,c
 13553  004A44                     l9600:
 13554                           
 13555                           ;doprnt.c: 1431: while(--width);
 13556  004A44  061D               	decf	__doprnt@width,f,c
 13557  004A46  A0D8               	btfss	status,0,c
 13558  004A48  061E               	decf	__doprnt@width+1,f,c
 13559  004A4A  501D               	movf	__doprnt@width,w,c
 13560  004A4C  101E               	iorwf	__doprnt@width+1,w,c
 13561  004A4E  E1CD               	bnz	l9592
 13562  004A50                     l9602:
 13563                           
 13564                           ;doprnt.c: 1438: if(flag & 0x03)
 13565  004A50  C01A  F010         	movff	__doprnt@flag,??__doprnt
 13566  004A54  0E03               	movlw	3
 13567  004A56  1610               	andwf	??__doprnt,f,c
 13568  004A58  E02D               	bz	l9612
 13569                           
 13570                           ;doprnt.c: 1439: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 13571  004A5A  5020               	movf	__doprnt@pb,w,c
 13572  004A5C  6ED9               	movwf	fsr2l,c
 13573  004A5E  6ADA               	clrf	fsr2h,c
 13574  004A60  0E02               	movlw	2
 13575  004A62  26D9               	addwf	fsr2l,f,c
 13576  004A64  50DE               	movf	postinc2,w,c
 13577  004A66  10DE               	iorwf	postinc2,w,c
 13578  004A68  10DE               	iorwf	postinc2,w,c
 13579  004A6A  E011               	bz	l9608
 13580  004A6C  5020               	movf	__doprnt@pb,w,c
 13581  004A6E  6ED9               	movwf	fsr2l,c
 13582  004A70  6ADA               	clrf	fsr2h,c
 13583  004A72  0E02               	movlw	2
 13584  004A74  26D9               	addwf	fsr2l,f,c
 13585  004A76  D801               	call	u14868
 13586  004A78  D01D               	goto	l9612
 13587  004A7A                     u14868:
 13588  004A7A  0005               	push	
 13589  004A7C  6EFA               	movwf	pclath,c
 13590  004A7E  50DE               	movf	postinc2,w,c
 13591  004A80  6EFD               	movwf	tosl,c
 13592  004A82  50DE               	movf	postinc2,w,c
 13593  004A84  6EFE               	movwf	tosh,c
 13594  004A86  50DE               	movf	postinc2,w,c
 13595  004A88  6EFF               	movwf	tosu,c
 13596  004A8A  50FA               	movf	pclath,w,c
 13597  004A8C  0C2D               	retlw	45	;indir
 13598  004A8E                     l9608:
 13599  004A8E  5020               	movf	__doprnt@pb,w,c
 13600  004A90  6ED9               	movwf	fsr2l,c
 13601  004A92  6ADA               	clrf	fsr2h,c
 13602  004A94  CFDE F010          	movff	postinc2,??__doprnt
 13603  004A98  CFDD F011          	movff	postdec2,??__doprnt+1
 13604  004A9C  C010  FFD9         	movff	??__doprnt,fsr2l
 13605  004AA0  C011  FFDA         	movff	??__doprnt+1,fsr2h
 13606  004AA4  0E2D               	movlw	45
 13607  004AA6  6EDF               	movwf	indf2,c
 13608  004AA8  5020               	movf	__doprnt@pb,w,c
 13609  004AAA  6ED9               	movwf	fsr2l,c
 13610  004AAC  6ADA               	clrf	fsr2h,c
 13611  004AAE  2ADE               	incf	postinc2,f,c
 13612  004AB0  0E00               	movlw	0
 13613  004AB2  22DD               	addwfc	postdec2,f,c
 13614  004AB4                     l9612:
 13615                           
 13616                           ;doprnt.c: 1469: }
 13617                           ;doprnt.c: 1472: prec = c;
 13618  004AB4  C01F  F015         	movff	__doprnt@c,__doprnt@prec
 13619                           
 13620                           ;doprnt.c: 1474: while(prec--) {
 13621  004AB8  D080               	goto	l9632
 13622  004ABA                     l9614:
 13623                           
 13624                           ;doprnt.c: 1486: case 0xC0:
 13625                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 13626  004ABA  5015               	movf	__doprnt@prec,w,c
 13627  004ABC  0D02               	mullw	2
 13628  004ABE  50F3               	movf	prodl,w,c
 13629  004AC0  0F01               	addlw	low _dpowers
 13630  004AC2  6E10               	movwf	??__doprnt& (0+255),c
 13631  004AC4  C010  FFF6         	movff	??__doprnt,tblptrl
 13632  004AC8                     	if	1	;There is more than 1 active tblptr byte
 13633  004AC8  0E10               	movlw	high __smallconst
 13634  004ACA  6EF7               	movwf	tblptrh,c
 13635  004ACC                     	endif
 13636  004ACC                     	if	0	;tblptru may be non-zero
 13637  004ACC                     	endif
 13638  004ACC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13639  004ACC  0E00               	movlw	low (__smallconst shr (0+16))
 13640  004ACE  6EF8               	movwf	tblptru,c
 13641  004AD0                     	endif
 13642  004AD0  0009               	tblrd		*+
 13643  004AD2  CFF5 F004          	movff	tablat,___lwdiv@divisor
 13644  004AD6  000A               	tblrd		*-
 13645  004AD8  CFF5 F005          	movff	tablat,___lwdiv@divisor+1
 13646  004ADC  C01B  F002         	movff	__doprnt@val,___lwdiv@dividend
 13647  004AE0  C01C  F003         	movff	__doprnt@val+1,___lwdiv@dividend+1
 13648  004AE4  EC9B  F041         	call	___lwdiv
 13649  004AE8  C002  F009         	movff	?___lwdiv,___lwmod@dividend
 13650  004AEC  C003  F00A         	movff	?___lwdiv+1,___lwmod@dividend+1
 13651  004AF0  6A0C               	clrf	___lwmod@divisor+1,c
 13652  004AF2  0E0A               	movlw	10
 13653  004AF4  6E0B               	movwf	___lwmod@divisor,c
 13654  004AF6  ECF2  F042         	call	___lwmod	;wreg free
 13655  004AFA  5009               	movf	?___lwmod,w,c
 13656  004AFC  0F30               	addlw	48
 13657  004AFE  6E1F               	movwf	__doprnt@c,c
 13658                           
 13659                           ;doprnt.c: 1491: break;
 13660  004B00  D02E               	goto	l9624
 13661  004B02                     l9616:
 13662                           
 13663                           ;doprnt.c: 1499: {
 13664                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 13665  004B02  C01B  F002         	movff	__doprnt@val,___lwdiv@dividend
 13666  004B06  C01C  F003         	movff	__doprnt@val+1,___lwdiv@dividend+1
 13667  004B0A  5015               	movf	__doprnt@prec,w,c
 13668  004B0C  0D02               	mullw	2
 13669  004B0E  50F3               	movf	prodl,w,c
 13670  004B10  0F0B               	addlw	low _hexpowers
 13671  004B12  6E10               	movwf	??__doprnt& (0+255),c
 13672  004B14  C010  FFF6         	movff	??__doprnt,tblptrl
 13673  004B18                     	if	1	;There is more than 1 active tblptr byte
 13674  004B18  0E10               	movlw	high __smallconst
 13675  004B1A  6EF7               	movwf	tblptrh,c
 13676  004B1C                     	endif
 13677  004B1C                     	if	0	;tblptru may be non-zero
 13678  004B1C                     	endif
 13679  004B1C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13680  004B1C  0E00               	movlw	low (__smallconst shr (0+16))
 13681  004B1E  6EF8               	movwf	tblptru,c
 13682  004B20                     	endif
 13683  004B20  0009               	tblrd		*+
 13684  004B22  CFF5 F004          	movff	tablat,___lwdiv@divisor
 13685  004B26  000A               	tblrd		*-
 13686  004B28  CFF5 F005          	movff	tablat,___lwdiv@divisor+1
 13687  004B2C  EC9B  F041         	call	___lwdiv	;wreg free
 13688  004B30  5002               	movf	?___lwdiv,w,c
 13689  004B32  0B0F               	andlw	15
 13690  004B34  6E14               	movwf	__doprnt@idx,c
 13691                           
 13692                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
 13693  004B36  5014               	movf	__doprnt@idx,w,c
 13694  004B38  0F92               	addlw	low STR_10
 13695  004B3A  6E10               	movwf	??__doprnt& (0+255),c
 13696  004B3C  C010  FFF6         	movff	??__doprnt,tblptrl
 13697  004B40                     	if	1	;There is more than 1 active tblptr byte
 13698  004B40  0E10               	movlw	high __smallconst
 13699  004B42  6EF7               	movwf	tblptrh,c
 13700  004B44                     	endif
 13701  004B44                     	if	0	;tblptru may be non-zero
 13702  004B44                     	endif
 13703  004B44                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13704  004B44  0E00               	movlw	low (__smallconst shr (0+16))
 13705  004B46  6EF8               	movwf	tblptru,c
 13706  004B48                     	endif
 13707  004B48  0008               	tblrd		*
 13708  004B4A  CFF5 F01F          	movff	tablat,__doprnt@c
 13709                           
 13710                           ;doprnt.c: 1508: }
 13711                           ;doprnt.c: 1510: break;
 13712  004B4E  D007               	goto	l9624
 13713  004B50                     l9622:
 13714  004B50  501A               	movf	__doprnt@flag,w,c
 13715  004B52  0BC0               	andlw	192
 13716                           
 13717                           ; Switch size 1, requested type "speed"
 13718                           ; Number of cases is 3, Range of values is 0 to 192
 13719                           ; switch strategies available:
 13720                           ; Name         Instructions Cycles
 13721                           ; simple_byte           10     6 (average)
 13722                           ;	Chosen strategy is simple_byte
 13723  004B54  E0B2               	bz	l9614
 13724  004B56  0A80               	xorlw	128	; case 128
 13725  004B58  E0D4               	bz	l9616
 13726  004B5A  0A40               	xorlw	64	; case 192
 13727  004B5C  E0AE               	bz	l9614
 13728  004B5E                     l9624:
 13729                           
 13730                           ;doprnt.c: 1524: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 13731  004B5E  5020               	movf	__doprnt@pb,w,c
 13732  004B60  6ED9               	movwf	fsr2l,c
 13733  004B62  6ADA               	clrf	fsr2h,c
 13734  004B64  0E02               	movlw	2
 13735  004B66  26D9               	addwf	fsr2l,f,c
 13736  004B68  50DE               	movf	postinc2,w,c
 13737  004B6A  10DE               	iorwf	postinc2,w,c
 13738  004B6C  10DE               	iorwf	postinc2,w,c
 13739  004B6E  E012               	bz	l9628
 13740  004B70  5020               	movf	__doprnt@pb,w,c
 13741  004B72  6ED9               	movwf	fsr2l,c
 13742  004B74  6ADA               	clrf	fsr2h,c
 13743  004B76  0E02               	movlw	2
 13744  004B78  26D9               	addwf	fsr2l,f,c
 13745  004B7A  D801               	call	u14888
 13746  004B7C  D01E               	goto	l9632
 13747  004B7E                     u14888:
 13748  004B7E  0005               	push	
 13749  004B80  6EFA               	movwf	pclath,c
 13750  004B82  50DE               	movf	postinc2,w,c
 13751  004B84  6EFD               	movwf	tosl,c
 13752  004B86  50DE               	movf	postinc2,w,c
 13753  004B88  6EFE               	movwf	tosh,c
 13754  004B8A  50DE               	movf	postinc2,w,c
 13755  004B8C  6EFF               	movwf	tosu,c
 13756  004B8E  50FA               	movf	pclath,w,c
 13757  004B90  501F               	movf	__doprnt@c,w,c
 13758  004B92  0012               	return		;indir
 13759  004B94                     l9628:
 13760  004B94  5020               	movf	__doprnt@pb,w,c
 13761  004B96  6ED9               	movwf	fsr2l,c
 13762  004B98  6ADA               	clrf	fsr2h,c
 13763  004B9A  CFDE F010          	movff	postinc2,??__doprnt
 13764  004B9E  CFDD F011          	movff	postdec2,??__doprnt+1
 13765  004BA2  C010  FFD9         	movff	??__doprnt,fsr2l
 13766  004BA6  C011  FFDA         	movff	??__doprnt+1,fsr2h
 13767  004BAA  C01F  FFDF         	movff	__doprnt@c,indf2
 13768  004BAE  5020               	movf	__doprnt@pb,w,c
 13769  004BB0  6ED9               	movwf	fsr2l,c
 13770  004BB2  6ADA               	clrf	fsr2h,c
 13771  004BB4  2ADE               	incf	postinc2,f,c
 13772  004BB6  0E00               	movlw	0
 13773  004BB8  22DD               	addwfc	postdec2,f,c
 13774  004BBA                     l9632:
 13775  004BBA  0615               	decf	__doprnt@prec,f,c
 13776  004BBC  2815               	incf	__doprnt@prec,w,c
 13777  004BBE  E1C8               	bnz	l9622
 13778  004BC0                     l9634:
 13779  004BC0  2A0E               	incf	__doprnt@f,f,c
 13780  004BC2  040E               	decf	__doprnt@f,w,c
 13781  004BC4  6E10               	movwf	??__doprnt& (0+255),c
 13782  004BC6  C010  FFF6         	movff	??__doprnt,tblptrl
 13783  004BCA                     	if	1	;There is more than 1 active tblptr byte
 13784  004BCA  0E10               	movlw	high __smallconst
 13785  004BCC  6EF7               	movwf	tblptrh,c
 13786  004BCE                     	endif
 13787  004BCE                     	if	0	;tblptru may be non-zero
 13788  004BCE                     	endif
 13789  004BCE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13790  004BCE  0E00               	movlw	low (__smallconst shr (0+16))
 13791  004BD0  6EF8               	movwf	tblptru,c
 13792  004BD2                     	endif
 13793  004BD2  0008               	tblrd		*
 13794  004BD4  CFF5 F01F          	movff	tablat,__doprnt@c
 13795  004BD8  501F               	movf	__doprnt@c,w,c
 13796  004BDA  E001 D520          	bnz	l9466
 13797  004BDE                     l1718:
 13798                           
 13799                           ;doprnt.c: 1540: return 0;
 13800  004BDE  6A0E               	clrf	?__doprnt,c
 13801  004BE0  6A0F               	clrf	?__doprnt+1,c
 13802  004BE2  0012               	return		;funcret
 13803  004BE4                     __end_of__doprnt:
 13804                           	opt stack 0
 13805                           tosu	equ	0xFFF
 13806                           tosh	equ	0xFFE
 13807                           tosl	equ	0xFFD
 13808                           pclath	equ	0xFFA
 13809                           tblptru	equ	0xFF8
 13810                           tblptrh	equ	0xFF7
 13811                           tblptrl	equ	0xFF6
 13812                           tablat	equ	0xFF5
 13813                           prodh	equ	0xFF4
 13814                           prodl	equ	0xFF3
 13815                           intcon	equ	0xFF2
 13816                           intcon2	equ	0xFF1
 13817                           indf0	equ	0xFEF
 13818                           postinc0	equ	0xFEE
 13819                           fsr0h	equ	0xFEA
 13820                           fsr0l	equ	0xFE9
 13821                           wreg	equ	0xFE8
 13822                           postinc1	equ	0xFE6
 13823                           plusw1	equ	0xFE3
 13824                           fsr1h	equ	0xFE2
 13825                           fsr1l	equ	0xFE1
 13826                           indf2	equ	0xFDF
 13827                           postinc2	equ	0xFDE
 13828                           postdec2	equ	0xFDD
 13829                           plusw2	equ	0xFDB
 13830                           fsr2h	equ	0xFDA
 13831                           fsr2l	equ	0xFD9
 13832                           status	equ	0xFD8
 13833                           
 13834 ;; *************** function _putch *****************
 13835 ;; Defined at:
 13836 ;;		line 77 in file "../board_support_package/picdem2_net/uart.c"
 13837 ;; Parameters:    Size  Location     Type
 13838 ;;  data            1    wreg     unsigned char 
 13839 ;; Auto vars:     Size  Location     Type
 13840 ;;  data            1    1[COMRAM] unsigned char 
 13841 ;; Return value:  Size  Location     Type
 13842 ;;		None               void
 13843 ;; Registers used:
 13844 ;;		wreg, status,2, status,0
 13845 ;; Tracked objects:
 13846 ;;		On entry : 0/2
 13847 ;;		On exit  : 0/0
 13848 ;;		Unchanged: 0/0
 13849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13851 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13853 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13854 ;;Total ram usage:        1 bytes
 13855 ;; Hardware stack levels used:    1
 13856 ;; Hardware stack levels required when called:    3
 13857 ;; This function calls:
 13858 ;;		Nothing
 13859 ;; This function is called by:
 13860 ;;		_printf
 13861 ;;		__doprnt
 13862 ;; This function uses a non-reentrant model
 13863 ;;
 13864                           
 13865                           	psect	text64
 13866  008AF0                     __ptext64:
 13867                           	opt stack 0
 13868  008AF0                     _putch:
 13869                           	opt stack 25
 13870                           
 13871                           ;incstack = 0
 13872                           ;putch@data stored from wreg
 13873  008AF0  6E02               	movwf	putch@data,c
 13874                           
 13875                           ;uart.c: 79: if(data == '\n')
 13876  008AF2  0E0A               	movlw	10
 13877  008AF4  1802               	xorwf	putch@data,w,c
 13878  008AF6  E104               	bnz	l354
 13879  008AF8                     l351:
 13880  008AF8  A89E               	btfss	3998,4,c	;volatile
 13881  008AFA  D7FE               	goto	l351
 13882                           
 13883                           ;uart.c: 83: TXREG1 = '\r';
 13884  008AFC  0E0D               	movlw	13
 13885  008AFE  6EAD               	movwf	4013,c	;volatile
 13886  008B00                     l354:
 13887  008B00  A89E               	btfss	3998,4,c	;volatile
 13888  008B02  D7FE               	goto	l354
 13889                           
 13890                           ;uart.c: 87: TXREG1 = data;
 13891  008B04  C002  FFAD         	movff	putch@data,4013	;volatile
 13892  008B08  0012               	return		;funcret
 13893  008B0A                     __end_of_putch:
 13894                           	opt stack 0
 13895                           tosu	equ	0xFFF
 13896                           tosh	equ	0xFFE
 13897                           tosl	equ	0xFFD
 13898                           pclath	equ	0xFFA
 13899                           tblptru	equ	0xFF8
 13900                           tblptrh	equ	0xFF7
 13901                           tblptrl	equ	0xFF6
 13902                           tablat	equ	0xFF5
 13903                           prodh	equ	0xFF4
 13904                           prodl	equ	0xFF3
 13905                           intcon	equ	0xFF2
 13906                           intcon2	equ	0xFF1
 13907                           indf0	equ	0xFEF
 13908                           postinc0	equ	0xFEE
 13909                           fsr0h	equ	0xFEA
 13910                           fsr0l	equ	0xFE9
 13911                           wreg	equ	0xFE8
 13912                           postinc1	equ	0xFE6
 13913                           plusw1	equ	0xFE3
 13914                           fsr1h	equ	0xFE2
 13915                           fsr1l	equ	0xFE1
 13916                           indf2	equ	0xFDF
 13917                           postinc2	equ	0xFDE
 13918                           postdec2	equ	0xFDD
 13919                           plusw2	equ	0xFDB
 13920                           fsr2h	equ	0xFDA
 13921                           fsr2l	equ	0xFD9
 13922                           status	equ	0xFD8
 13923                           
 13924 ;; *************** function _isdigit *****************
 13925 ;; Defined at:
 13926 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
 13927 ;; Parameters:    Size  Location     Type
 13928 ;;  c               1    wreg     unsigned char 
 13929 ;; Auto vars:     Size  Location     Type
 13930 ;;  c               1    3[COMRAM] unsigned char 
 13931 ;; Return value:  Size  Location     Type
 13932 ;;		None               void
 13933 ;; Registers used:
 13934 ;;		wreg, status,2, status,0
 13935 ;; Tracked objects:
 13936 ;;		On entry : 0/2
 13937 ;;		On exit  : 0/0
 13938 ;;		Unchanged: 0/0
 13939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13941 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13942 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13943 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13944 ;;Total ram usage:        3 bytes
 13945 ;; Hardware stack levels used:    1
 13946 ;; Hardware stack levels required when called:    3
 13947 ;; This function calls:
 13948 ;;		Nothing
 13949 ;; This function is called by:
 13950 ;;		__doprnt
 13951 ;; This function uses a non-reentrant model
 13952 ;;
 13953                           
 13954                           	psect	text65
 13955  008A84                     __ptext65:
 13956                           	opt stack 0
 13957  008A84                     _isdigit:
 13958                           	opt stack 25
 13959                           
 13960                           ;incstack = 0
 13961                           ;isdigit@c stored from wreg
 13962  008A84  6E04               	movwf	isdigit@c,c
 13963  008A86  6A03               	clrf	_isdigit$4832,c
 13964  008A88  0E3A               	movlw	58
 13965  008A8A  6004               	cpfslt	isdigit@c,c
 13966  008A8C  D005               	goto	l9186
 13967  008A8E  0E2F               	movlw	47
 13968  008A90  6404               	cpfsgt	isdigit@c,c
 13969  008A92  D002               	goto	l9186
 13970  008A94  0E01               	movlw	1
 13971  008A96  6E03               	movwf	_isdigit$4832,c
 13972  008A98                     l9186:
 13973  008A98  C003  F002         	movff	_isdigit$4832,??_isdigit
 13974  008A9C  3002               	rrcf	??_isdigit,w,c
 13975  008A9E  0012               	return		;funcret
 13976  008AA0                     __end_of_isdigit:
 13977                           	opt stack 0
 13978                           tosu	equ	0xFFF
 13979                           tosh	equ	0xFFE
 13980                           tosl	equ	0xFFD
 13981                           pclath	equ	0xFFA
 13982                           tblptru	equ	0xFF8
 13983                           tblptrh	equ	0xFF7
 13984                           tblptrl	equ	0xFF6
 13985                           tablat	equ	0xFF5
 13986                           prodh	equ	0xFF4
 13987                           prodl	equ	0xFF3
 13988                           intcon	equ	0xFF2
 13989                           intcon2	equ	0xFF1
 13990                           indf0	equ	0xFEF
 13991                           postinc0	equ	0xFEE
 13992                           fsr0h	equ	0xFEA
 13993                           fsr0l	equ	0xFE9
 13994                           wreg	equ	0xFE8
 13995                           postinc1	equ	0xFE6
 13996                           plusw1	equ	0xFE3
 13997                           fsr1h	equ	0xFE2
 13998                           fsr1l	equ	0xFE1
 13999                           indf2	equ	0xFDF
 14000                           postinc2	equ	0xFDE
 14001                           postdec2	equ	0xFDD
 14002                           plusw2	equ	0xFDB
 14003                           fsr2h	equ	0xFDA
 14004                           fsr2l	equ	0xFD9
 14005                           status	equ	0xFD8
 14006                           
 14007 ;; *************** function ___wmul *****************
 14008 ;; Defined at:
 14009 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 14010 ;; Parameters:    Size  Location     Type
 14011 ;;  multiplier      2    1[COMRAM] unsigned int 
 14012 ;;  multiplicand    2    3[COMRAM] unsigned int 
 14013 ;; Auto vars:     Size  Location     Type
 14014 ;;  product         2    5[COMRAM] unsigned int 
 14015 ;; Return value:  Size  Location     Type
 14016 ;;                  2    1[COMRAM] unsigned int 
 14017 ;; Registers used:
 14018 ;;		wreg, status,2, status,0, prodl, prodh
 14019 ;; Tracked objects:
 14020 ;;		On entry : 0/2
 14021 ;;		On exit  : 0/0
 14022 ;;		Unchanged: 0/0
 14023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14024 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14025 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14027 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14028 ;;Total ram usage:        6 bytes
 14029 ;; Hardware stack levels used:    1
 14030 ;; Hardware stack levels required when called:    3
 14031 ;; This function calls:
 14032 ;;		Nothing
 14033 ;; This function is called by:
 14034 ;;		__doprnt
 14035 ;; This function uses a non-reentrant model
 14036 ;;
 14037                           
 14038                           	psect	text66
 14039  008930                     __ptext66:
 14040                           	opt stack 0
 14041  008930                     ___wmul:
 14042                           	opt stack 25
 14043                           
 14044                           ;incstack = 0
 14045  008930  5002               	movf	___wmul@multiplier,w,c
 14046  008932  0204               	mulwf	___wmul@multiplicand,c
 14047  008934  CFF3 F006          	movff	prodl,___wmul@product
 14048  008938  CFF4 F007          	movff	prodh,___wmul@product+1
 14049  00893C  5002               	movf	___wmul@multiplier,w,c
 14050  00893E  0205               	mulwf	___wmul@multiplicand+1,c
 14051  008940  50F3               	movf	prodl,w,c
 14052  008942  2607               	addwf	___wmul@product+1,f,c
 14053  008944  5003               	movf	___wmul@multiplier+1,w,c
 14054  008946  0204               	mulwf	___wmul@multiplicand,c
 14055  008948  50F3               	movf	prodl,w,c
 14056  00894A  2607               	addwf	___wmul@product+1,f,c
 14057  00894C  C006  F002         	movff	___wmul@product,?___wmul
 14058  008950  C007  F003         	movff	___wmul@product+1,?___wmul+1
 14059  008954  0012               	return		;funcret
 14060  008956                     __end_of___wmul:
 14061                           	opt stack 0
 14062                           tosu	equ	0xFFF
 14063                           tosh	equ	0xFFE
 14064                           tosl	equ	0xFFD
 14065                           pclath	equ	0xFFA
 14066                           tblptru	equ	0xFF8
 14067                           tblptrh	equ	0xFF7
 14068                           tblptrl	equ	0xFF6
 14069                           tablat	equ	0xFF5
 14070                           prodh	equ	0xFF4
 14071                           prodl	equ	0xFF3
 14072                           intcon	equ	0xFF2
 14073                           intcon2	equ	0xFF1
 14074                           indf0	equ	0xFEF
 14075                           postinc0	equ	0xFEE
 14076                           fsr0h	equ	0xFEA
 14077                           fsr0l	equ	0xFE9
 14078                           wreg	equ	0xFE8
 14079                           postinc1	equ	0xFE6
 14080                           plusw1	equ	0xFE3
 14081                           fsr1h	equ	0xFE2
 14082                           fsr1l	equ	0xFE1
 14083                           indf2	equ	0xFDF
 14084                           postinc2	equ	0xFDE
 14085                           postdec2	equ	0xFDD
 14086                           plusw2	equ	0xFDB
 14087                           fsr2h	equ	0xFDA
 14088                           fsr2l	equ	0xFD9
 14089                           status	equ	0xFD8
 14090                           
 14091 ;; *************** function ___lwmod *****************
 14092 ;; Defined at:
 14093 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
 14094 ;; Parameters:    Size  Location     Type
 14095 ;;  dividend        2    8[COMRAM] unsigned int 
 14096 ;;  divisor         2   10[COMRAM] unsigned int 
 14097 ;; Auto vars:     Size  Location     Type
 14098 ;;  counter         1   12[COMRAM] unsigned char 
 14099 ;; Return value:  Size  Location     Type
 14100 ;;                  2    8[COMRAM] unsigned int 
 14101 ;; Registers used:
 14102 ;;		wreg, status,2, status,0
 14103 ;; Tracked objects:
 14104 ;;		On entry : 0/2
 14105 ;;		On exit  : 0/0
 14106 ;;		Unchanged: 0/0
 14107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14108 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14109 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14111 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14112 ;;Total ram usage:        5 bytes
 14113 ;; Hardware stack levels used:    1
 14114 ;; Hardware stack levels required when called:    3
 14115 ;; This function calls:
 14116 ;;		Nothing
 14117 ;; This function is called by:
 14118 ;;		__doprnt
 14119 ;; This function uses a non-reentrant model
 14120 ;;
 14121                           
 14122                           	psect	text67
 14123  0085E4                     __ptext67:
 14124                           	opt stack 0
 14125  0085E4                     ___lwmod:
 14126                           	opt stack 25
 14127                           
 14128                           ;incstack = 0
 14129  0085E4  500B               	movf	___lwmod@divisor,w,c
 14130  0085E6  100C               	iorwf	___lwmod@divisor+1,w,c
 14131  0085E8  E017               	bz	l2190
 14132  0085EA  0E01               	movlw	1
 14133  0085EC  6E0D               	movwf	___lwmod@counter,c
 14134  0085EE  D004               	goto	l9224
 14135  0085F0                     l9222:
 14136  0085F0  90D8               	bcf	status,0,c
 14137  0085F2  360B               	rlcf	___lwmod@divisor,f,c
 14138  0085F4  360C               	rlcf	___lwmod@divisor+1,f,c
 14139  0085F6  2A0D               	incf	___lwmod@counter,f,c
 14140  0085F8                     l9224:
 14141  0085F8  AE0C               	btfss	___lwmod@divisor+1,7,c
 14142  0085FA  D7FA               	goto	l9222
 14143  0085FC                     l9226:
 14144  0085FC  500B               	movf	___lwmod@divisor,w,c
 14145  0085FE  5C09               	subwf	___lwmod@dividend,w,c
 14146  008600  500C               	movf	___lwmod@divisor+1,w,c
 14147  008602  580A               	subwfb	___lwmod@dividend+1,w,c
 14148  008604  E304               	bnc	l9230
 14149  008606  500B               	movf	___lwmod@divisor,w,c
 14150  008608  5E09               	subwf	___lwmod@dividend,f,c
 14151  00860A  500C               	movf	___lwmod@divisor+1,w,c
 14152  00860C  5A0A               	subwfb	___lwmod@dividend+1,f,c
 14153  00860E                     l9230:
 14154  00860E  90D8               	bcf	status,0,c
 14155  008610  320C               	rrcf	___lwmod@divisor+1,f,c
 14156  008612  320B               	rrcf	___lwmod@divisor,f,c
 14157  008614  2E0D               	decfsz	___lwmod@counter,f,c
 14158  008616  D7F2               	goto	l9226
 14159  008618                     l2190:
 14160  008618  C009  F009         	movff	___lwmod@dividend,?___lwmod
 14161  00861C  C00A  F00A         	movff	___lwmod@dividend+1,?___lwmod+1
 14162  008620  0012               	return		;funcret
 14163  008622                     __end_of___lwmod:
 14164                           	opt stack 0
 14165                           tosu	equ	0xFFF
 14166                           tosh	equ	0xFFE
 14167                           tosl	equ	0xFFD
 14168                           pclath	equ	0xFFA
 14169                           tblptru	equ	0xFF8
 14170                           tblptrh	equ	0xFF7
 14171                           tblptrl	equ	0xFF6
 14172                           tablat	equ	0xFF5
 14173                           prodh	equ	0xFF4
 14174                           prodl	equ	0xFF3
 14175                           intcon	equ	0xFF2
 14176                           intcon2	equ	0xFF1
 14177                           indf0	equ	0xFEF
 14178                           postinc0	equ	0xFEE
 14179                           fsr0h	equ	0xFEA
 14180                           fsr0l	equ	0xFE9
 14181                           wreg	equ	0xFE8
 14182                           postinc1	equ	0xFE6
 14183                           plusw1	equ	0xFE3
 14184                           fsr1h	equ	0xFE2
 14185                           fsr1l	equ	0xFE1
 14186                           indf2	equ	0xFDF
 14187                           postinc2	equ	0xFDE
 14188                           postdec2	equ	0xFDD
 14189                           plusw2	equ	0xFDB
 14190                           fsr2h	equ	0xFDA
 14191                           fsr2l	equ	0xFD9
 14192                           status	equ	0xFD8
 14193                           
 14194 ;; *************** function ___lwdiv *****************
 14195 ;; Defined at:
 14196 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 14197 ;; Parameters:    Size  Location     Type
 14198 ;;  dividend        2    1[COMRAM] unsigned int 
 14199 ;;  divisor         2    3[COMRAM] unsigned int 
 14200 ;; Auto vars:     Size  Location     Type
 14201 ;;  quotient        2    6[COMRAM] unsigned int 
 14202 ;;  counter         1    5[COMRAM] unsigned char 
 14203 ;; Return value:  Size  Location     Type
 14204 ;;                  2    1[COMRAM] unsigned int 
 14205 ;; Registers used:
 14206 ;;		wreg, status,2, status,0
 14207 ;; Tracked objects:
 14208 ;;		On entry : 0/2
 14209 ;;		On exit  : 0/0
 14210 ;;		Unchanged: 0/0
 14211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14212 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14213 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14215 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14216 ;;Total ram usage:        7 bytes
 14217 ;; Hardware stack levels used:    1
 14218 ;; Hardware stack levels required when called:    3
 14219 ;; This function calls:
 14220 ;;		Nothing
 14221 ;; This function is called by:
 14222 ;;		__doprnt
 14223 ;; This function uses a non-reentrant model
 14224 ;;
 14225                           
 14226                           	psect	text68
 14227  008336                     __ptext68:
 14228                           	opt stack 0
 14229  008336                     ___lwdiv:
 14230                           	opt stack 25
 14231                           
 14232                           ;incstack = 0
 14233  008336  6A07               	clrf	___lwdiv@quotient,c
 14234  008338  6A08               	clrf	___lwdiv@quotient+1,c
 14235  00833A  5004               	movf	___lwdiv@divisor,w,c
 14236  00833C  1005               	iorwf	___lwdiv@divisor+1,w,c
 14237  00833E  E01B               	bz	l2180
 14238  008340  0E01               	movlw	1
 14239  008342  6E06               	movwf	___lwdiv@counter,c
 14240  008344  D004               	goto	l9204
 14241  008346                     l9202:
 14242  008346  90D8               	bcf	status,0,c
 14243  008348  3604               	rlcf	___lwdiv@divisor,f,c
 14244  00834A  3605               	rlcf	___lwdiv@divisor+1,f,c
 14245  00834C  2A06               	incf	___lwdiv@counter,f,c
 14246  00834E                     l9204:
 14247  00834E  AE05               	btfss	___lwdiv@divisor+1,7,c
 14248  008350  D7FA               	goto	l9202
 14249  008352                     l9206:
 14250  008352  90D8               	bcf	status,0,c
 14251  008354  3607               	rlcf	___lwdiv@quotient,f,c
 14252  008356  3608               	rlcf	___lwdiv@quotient+1,f,c
 14253  008358  5004               	movf	___lwdiv@divisor,w,c
 14254  00835A  5C02               	subwf	___lwdiv@dividend,w,c
 14255  00835C  5005               	movf	___lwdiv@divisor+1,w,c
 14256  00835E  5803               	subwfb	___lwdiv@dividend+1,w,c
 14257  008360  E305               	bnc	l9214
 14258  008362  5004               	movf	___lwdiv@divisor,w,c
 14259  008364  5E02               	subwf	___lwdiv@dividend,f,c
 14260  008366  5005               	movf	___lwdiv@divisor+1,w,c
 14261  008368  5A03               	subwfb	___lwdiv@dividend+1,f,c
 14262  00836A  8007               	bsf	___lwdiv@quotient,0,c
 14263  00836C                     l9214:
 14264  00836C  90D8               	bcf	status,0,c
 14265  00836E  3205               	rrcf	___lwdiv@divisor+1,f,c
 14266  008370  3204               	rrcf	___lwdiv@divisor,f,c
 14267  008372  2E06               	decfsz	___lwdiv@counter,f,c
 14268  008374  D7EE               	goto	l9206
 14269  008376                     l2180:
 14270  008376  C007  F002         	movff	___lwdiv@quotient,?___lwdiv
 14271  00837A  C008  F003         	movff	___lwdiv@quotient+1,?___lwdiv+1
 14272  00837E  0012               	return		;funcret
 14273  008380                     __end_of___lwdiv:
 14274                           	opt stack 0
 14275                           tosu	equ	0xFFF
 14276                           tosh	equ	0xFFE
 14277                           tosl	equ	0xFFD
 14278                           pclath	equ	0xFFA
 14279                           tblptru	equ	0xFF8
 14280                           tblptrh	equ	0xFF7
 14281                           tblptrl	equ	0xFF6
 14282                           tablat	equ	0xFF5
 14283                           prodh	equ	0xFF4
 14284                           prodl	equ	0xFF3
 14285                           intcon	equ	0xFF2
 14286                           intcon2	equ	0xFF1
 14287                           indf0	equ	0xFEF
 14288                           postinc0	equ	0xFEE
 14289                           fsr0h	equ	0xFEA
 14290                           fsr0l	equ	0xFE9
 14291                           wreg	equ	0xFE8
 14292                           postinc1	equ	0xFE6
 14293                           plusw1	equ	0xFE3
 14294                           fsr1h	equ	0xFE2
 14295                           fsr1l	equ	0xFE1
 14296                           indf2	equ	0xFDF
 14297                           postinc2	equ	0xFDE
 14298                           postdec2	equ	0xFDD
 14299                           plusw2	equ	0xFDB
 14300                           fsr2h	equ	0xFDA
 14301                           fsr2l	equ	0xFD9
 14302                           status	equ	0xFD8
 14303                           
 14304 ;; *************** function _memset *****************
 14305 ;; Defined at:
 14306 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 14307 ;; Parameters:    Size  Location     Type
 14308 ;;  p1              2    1[COMRAM] PTR void 
 14309 ;;		 -> main@str(32), DEMO_TCP_Client@strTmp(17), 
 14310 ;;  c               2    3[COMRAM] int 
 14311 ;;  n               2    5[COMRAM] unsigned int 
 14312 ;; Auto vars:     Size  Location     Type
 14313 ;;  p               2    7[COMRAM] PTR unsigned char 
 14314 ;;		 -> main@str(32), DEMO_TCP_Client@strTmp(17), 
 14315 ;; Return value:  Size  Location     Type
 14316 ;;                  2    1[COMRAM] PTR void 
 14317 ;; Registers used:
 14318 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14319 ;; Tracked objects:
 14320 ;;		On entry : F/2
 14321 ;;		On exit  : F/2
 14322 ;;		Unchanged: F/0
 14323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14324 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14325 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14327 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14328 ;;Total ram usage:        8 bytes
 14329 ;; Hardware stack levels used:    1
 14330 ;; Hardware stack levels required when called:    3
 14331 ;; This function calls:
 14332 ;;		Nothing
 14333 ;; This function is called by:
 14334 ;;		_DEMO_TCP_Client
 14335 ;;		_main
 14336 ;; This function uses a non-reentrant model
 14337 ;;
 14338                           
 14339                           	psect	text69
 14340  008866                     __ptext69:
 14341                           	opt stack 0
 14342  008866                     _memset:
 14343                           	opt stack 27
 14344                           
 14345                           ; BSR set to: 2
 14346                           
 14347                           ;incstack = 0
 14348  008866  C002  F008         	movff	memset@p1,memset@p
 14349  00886A  C003  F009         	movff	memset@p1+1,memset@p+1
 14350  00886E  D008               	goto	l10392
 14351  008870                     l10388:
 14352                           
 14353                           ; BSR set to: 2
 14354  008870  C008  FFD9         	movff	memset@p,fsr2l
 14355  008874  C009  FFDA         	movff	memset@p+1,fsr2h
 14356  008878  C004  FFDF         	movff	memset@c,indf2
 14357                           
 14358                           ; BSR set to: 2
 14359  00887C  4A08               	infsnz	memset@p,f,c
 14360  00887E  2A09               	incf	memset@p+1,f,c
 14361  008880                     l10392:
 14362                           
 14363                           ; BSR set to: 2
 14364  008880  0606               	decf	memset@n,f,c
 14365  008882  A0D8               	btfss	status,0,c
 14366  008884  0607               	decf	memset@n+1,f,c
 14367  008886  2806               	incf	memset@n,w,c
 14368  008888  E1F3               	bnz	l10388
 14369  00888A  2807               	incf	memset@n+1,w,c
 14370  00888C  E1F1               	bnz	l10388
 14371                           
 14372                           ; BSR set to: 2
 14373  00888E  0012               	return		;funcret
 14374  008890                     __end_of_memset:
 14375                           	opt stack 0
 14376                           tosu	equ	0xFFF
 14377                           tosh	equ	0xFFE
 14378                           tosl	equ	0xFFD
 14379                           pclath	equ	0xFFA
 14380                           tblptru	equ	0xFF8
 14381                           tblptrh	equ	0xFF7
 14382                           tblptrl	equ	0xFF6
 14383                           tablat	equ	0xFF5
 14384                           prodh	equ	0xFF4
 14385                           prodl	equ	0xFF3
 14386                           intcon	equ	0xFF2
 14387                           intcon2	equ	0xFF1
 14388                           indf0	equ	0xFEF
 14389                           postinc0	equ	0xFEE
 14390                           fsr0h	equ	0xFEA
 14391                           fsr0l	equ	0xFE9
 14392                           wreg	equ	0xFE8
 14393                           postinc1	equ	0xFE6
 14394                           plusw1	equ	0xFE3
 14395                           fsr1h	equ	0xFE2
 14396                           fsr1l	equ	0xFE1
 14397                           indf2	equ	0xFDF
 14398                           postinc2	equ	0xFDE
 14399                           postdec2	equ	0xFDD
 14400                           plusw2	equ	0xFDB
 14401                           fsr2h	equ	0xFDA
 14402                           fsr2l	equ	0xFD9
 14403                           status	equ	0xFD8
 14404                           
 14405 ;; *************** function _lcd_puts *****************
 14406 ;; Defined at:
 14407 ;;		line 86 in file "../board_support_package/picdem2_net/lcd.c"
 14408 ;; Parameters:    Size  Location     Type
 14409 ;;  s               2    3[COMRAM] PTR const unsigned char 
 14410 ;;		 -> main@str(32), DEMO_TCP_Client@strTmp(17), 
 14411 ;; Auto vars:     Size  Location     Type
 14412 ;;		None
 14413 ;; Return value:  Size  Location     Type
 14414 ;;		None               void
 14415 ;; Registers used:
 14416 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14417 ;; Tracked objects:
 14418 ;;		On entry : 0/2
 14419 ;;		On exit  : 0/0
 14420 ;;		Unchanged: 0/0
 14421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14422 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14425 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14426 ;;Total ram usage:        2 bytes
 14427 ;; Hardware stack levels used:    1
 14428 ;; Hardware stack levels required when called:    5
 14429 ;; This function calls:
 14430 ;;		_lcd_putch
 14431 ;; This function is called by:
 14432 ;;		_DEMO_TCP_Client
 14433 ;;		_main
 14434 ;; This function uses a non-reentrant model
 14435 ;;
 14436                           
 14437                           	psect	text70
 14438  0089A0                     __ptext70:
 14439                           	opt stack 0
 14440  0089A0                     _lcd_puts:
 14441                           	opt stack 25
 14442                           
 14443                           ;lcd.c: 88: while(*s)
 14444                           
 14445                           ; BSR set to: 2
 14446                           ;incstack = 0
 14447  0089A0  D009               	goto	l9978
 14448  0089A2                     l9974:
 14449                           
 14450                           ;lcd.c: 89: lcd_putch(*s++);
 14451  0089A2  C004  FFD9         	movff	lcd_puts@s,fsr2l
 14452  0089A6  C005  FFDA         	movff	lcd_puts@s+1,fsr2h
 14453  0089AA  50DF               	movf	indf2,w,c
 14454  0089AC  EC50  F045         	call	_lcd_putch
 14455  0089B0  4A04               	infsnz	lcd_puts@s,f,c
 14456  0089B2  2A05               	incf	lcd_puts@s+1,f,c
 14457  0089B4                     l9978:
 14458  0089B4  C004  FFD9         	movff	lcd_puts@s,fsr2l
 14459  0089B8  C005  FFDA         	movff	lcd_puts@s+1,fsr2h
 14460  0089BC  50DF               	movf	indf2,w,c
 14461  0089BE  E1F1               	bnz	l9974
 14462  0089C0  0012               	return		;funcret
 14463  0089C2                     __end_of_lcd_puts:
 14464                           	opt stack 0
 14465                           tosu	equ	0xFFF
 14466                           tosh	equ	0xFFE
 14467                           tosl	equ	0xFFD
 14468                           pclath	equ	0xFFA
 14469                           tblptru	equ	0xFF8
 14470                           tblptrh	equ	0xFF7
 14471                           tblptrl	equ	0xFF6
 14472                           tablat	equ	0xFF5
 14473                           prodh	equ	0xFF4
 14474                           prodl	equ	0xFF3
 14475                           intcon	equ	0xFF2
 14476                           intcon2	equ	0xFF1
 14477                           indf0	equ	0xFEF
 14478                           postinc0	equ	0xFEE
 14479                           fsr0h	equ	0xFEA
 14480                           fsr0l	equ	0xFE9
 14481                           wreg	equ	0xFE8
 14482                           postinc1	equ	0xFE6
 14483                           plusw1	equ	0xFE3
 14484                           fsr1h	equ	0xFE2
 14485                           fsr1l	equ	0xFE1
 14486                           indf2	equ	0xFDF
 14487                           postinc2	equ	0xFDE
 14488                           postdec2	equ	0xFDD
 14489                           plusw2	equ	0xFDB
 14490                           fsr2h	equ	0xFDA
 14491                           fsr2l	equ	0xFD9
 14492                           status	equ	0xFD8
 14493                           
 14494 ;; *************** function _lcd_putch *****************
 14495 ;; Defined at:
 14496 ;;		line 76 in file "../board_support_package/picdem2_net/lcd.c"
 14497 ;; Parameters:    Size  Location     Type
 14498 ;;  c               1    wreg     unsigned char 
 14499 ;; Auto vars:     Size  Location     Type
 14500 ;;  c               1    2[COMRAM] unsigned char 
 14501 ;; Return value:  Size  Location     Type
 14502 ;;		None               void
 14503 ;; Registers used:
 14504 ;;		wreg, status,2, status,0, cstack
 14505 ;; Tracked objects:
 14506 ;;		On entry : 0/2
 14507 ;;		On exit  : 0/0
 14508 ;;		Unchanged: 0/0
 14509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14511 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14513 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14514 ;;Total ram usage:        1 bytes
 14515 ;; Hardware stack levels used:    1
 14516 ;; Hardware stack levels required when called:    4
 14517 ;; This function calls:
 14518 ;;		_lcd_busy
 14519 ;;		_lcd_write_data
 14520 ;; This function is called by:
 14521 ;;		_lcd_puts
 14522 ;; This function uses a non-reentrant model
 14523 ;;
 14524                           
 14525                           	psect	text71
 14526  008AA0                     __ptext71:
 14527                           	opt stack 0
 14528  008AA0                     _lcd_putch:
 14529                           	opt stack 25
 14530                           
 14531                           ;incstack = 0
 14532                           ;lcd_putch@c stored from wreg
 14533  008AA0  6E03               	movwf	lcd_putch@c,c
 14534                           
 14535                           ;lcd.c: 78: if(c >= ' ' && c < 127)
 14536  008AA2  0E1F               	movlw	31
 14537  008AA4  6403               	cpfsgt	lcd_putch@c,c
 14538  008AA6  EF12  F046         	goto	_lcd_busy
 14539  008AAA  0E7F               	movlw	127
 14540  008AAC  6003               	cpfslt	lcd_putch@c,c
 14541  008AAE  EF12  F046         	goto	_lcd_busy
 14542                           
 14543                           ;lcd.c: 79: {
 14544                           ;lcd.c: 80: lcd_write_data(c);
 14545  008AB2  5003               	movf	lcd_putch@c,w,c
 14546  008AB4  EC13  F045         	call	_lcd_write_data
 14547                           
 14548                           ;lcd.c: 81: }
 14549                           ;lcd.c: 82: lcd_busy();
 14550  008AB8  EF12  F046         	goto	_lcd_busy	;wreg free
 14551  008ABC                     __end_of_lcd_putch:
 14552                           	opt stack 0
 14553                           tosu	equ	0xFFF
 14554                           tosh	equ	0xFFE
 14555                           tosl	equ	0xFFD
 14556                           pclath	equ	0xFFA
 14557                           tblptru	equ	0xFF8
 14558                           tblptrh	equ	0xFF7
 14559                           tblptrl	equ	0xFF6
 14560                           tablat	equ	0xFF5
 14561                           prodh	equ	0xFF4
 14562                           prodl	equ	0xFF3
 14563                           intcon	equ	0xFF2
 14564                           intcon2	equ	0xFF1
 14565                           indf0	equ	0xFEF
 14566                           postinc0	equ	0xFEE
 14567                           fsr0h	equ	0xFEA
 14568                           fsr0l	equ	0xFE9
 14569                           wreg	equ	0xFE8
 14570                           postinc1	equ	0xFE6
 14571                           plusw1	equ	0xFE3
 14572                           fsr1h	equ	0xFE2
 14573                           fsr1l	equ	0xFE1
 14574                           indf2	equ	0xFDF
 14575                           postinc2	equ	0xFDE
 14576                           postdec2	equ	0xFDD
 14577                           plusw2	equ	0xFDB
 14578                           fsr2h	equ	0xFDA
 14579                           fsr2l	equ	0xFD9
 14580                           status	equ	0xFD8
 14581                           
 14582 ;; *************** function _lcd_write_data *****************
 14583 ;; Defined at:
 14584 ;;		line 71 in file "../board_support_package/picdem2_net/lcd_hw.c"
 14585 ;; Parameters:    Size  Location     Type
 14586 ;;  d               1    wreg     unsigned char 
 14587 ;; Auto vars:     Size  Location     Type
 14588 ;;  d               1    1[COMRAM] unsigned char 
 14589 ;; Return value:  Size  Location     Type
 14590 ;;		None               void
 14591 ;; Registers used:
 14592 ;;		wreg
 14593 ;; Tracked objects:
 14594 ;;		On entry : 0/2
 14595 ;;		On exit  : 0/0
 14596 ;;		Unchanged: 0/0
 14597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14599 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14601 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14602 ;;Total ram usage:        1 bytes
 14603 ;; Hardware stack levels used:    1
 14604 ;; Hardware stack levels required when called:    3
 14605 ;; This function calls:
 14606 ;;		Nothing
 14607 ;; This function is called by:
 14608 ;;		_lcd_putch
 14609 ;; This function uses a non-reentrant model
 14610 ;;
 14611                           
 14612                           	psect	text72
 14613  008A26                     __ptext72:
 14614                           	opt stack 0
 14615  008A26                     _lcd_write_data:
 14616                           	opt stack 25
 14617                           
 14618                           ;incstack = 0
 14619                           ;lcd_write_data@d stored from wreg
 14620  008A26  6E02               	movwf	lcd_write_data@d,c
 14621                           
 14622                           ;lcd_hw.c: 73: LATH1 = 0;
 14623  008A28  9290               	bcf	3984,1,c	;volatile
 14624                           
 14625                           ;lcd_hw.c: 74: LATH2 = 1;
 14626  008A2A  8490               	bsf	3984,2,c	;volatile
 14627                           
 14628                           ;lcd_hw.c: 75: LATE = d;
 14629  008A2C  C002  FF8D         	movff	lcd_write_data@d,3981	;volatile
 14630                           
 14631                           ;lcd_hw.c: 76: _delay((unsigned long)((1)*(41666667UL/4000000.0)));
 14632  008A30  0E03               	movlw	3
 14633  008A32                     u16277:
 14634  008A32  2EE8               	decfsz	wreg,f,c
 14635  008A34  D7FE               	goto	u16277
 14636  008A36  F000               	nop	
 14637                           
 14638                           ;lcd_hw.c: 77: LATH0 = 1;
 14639  008A38  8090               	bsf	3984,0,c	;volatile
 14640                           
 14641                           ;lcd_hw.c: 78: _delay((unsigned long)((1)*(41666667UL/4000000.0)));
 14642  008A3A  0E03               	movlw	3
 14643  008A3C                     u16287:
 14644  008A3C  2EE8               	decfsz	wreg,f,c
 14645  008A3E  D7FE               	goto	u16287
 14646  008A40  F000               	nop	
 14647                           
 14648                           ;lcd_hw.c: 79: LATH0 = 0;
 14649  008A42  9090               	bcf	3984,0,c	;volatile
 14650  008A44  0012               	return		;funcret
 14651  008A46                     __end_of_lcd_write_data:
 14652                           	opt stack 0
 14653                           tosu	equ	0xFFF
 14654                           tosh	equ	0xFFE
 14655                           tosl	equ	0xFFD
 14656                           pclath	equ	0xFFA
 14657                           tblptru	equ	0xFF8
 14658                           tblptrh	equ	0xFF7
 14659                           tblptrl	equ	0xFF6
 14660                           tablat	equ	0xFF5
 14661                           prodh	equ	0xFF4
 14662                           prodl	equ	0xFF3
 14663                           intcon	equ	0xFF2
 14664                           intcon2	equ	0xFF1
 14665                           indf0	equ	0xFEF
 14666                           postinc0	equ	0xFEE
 14667                           fsr0h	equ	0xFEA
 14668                           fsr0l	equ	0xFE9
 14669                           wreg	equ	0xFE8
 14670                           postinc1	equ	0xFE6
 14671                           plusw1	equ	0xFE3
 14672                           fsr1h	equ	0xFE2
 14673                           fsr1l	equ	0xFE1
 14674                           indf2	equ	0xFDF
 14675                           postinc2	equ	0xFDE
 14676                           postdec2	equ	0xFDD
 14677                           plusw2	equ	0xFDB
 14678                           fsr2h	equ	0xFDA
 14679                           fsr2l	equ	0xFD9
 14680                           status	equ	0xFD8
 14681                           
 14682 ;; *************** function _lcd_goto2 *****************
 14683 ;; Defined at:
 14684 ;;		line 102 in file "../board_support_package/picdem2_net/lcd.c"
 14685 ;; Parameters:    Size  Location     Type
 14686 ;;  pos             1    wreg     unsigned char 
 14687 ;; Auto vars:     Size  Location     Type
 14688 ;;  pos             1    2[COMRAM] unsigned char 
 14689 ;; Return value:  Size  Location     Type
 14690 ;;		None               void
 14691 ;; Registers used:
 14692 ;;		wreg, status,2, status,0, cstack
 14693 ;; Tracked objects:
 14694 ;;		On entry : 0/2
 14695 ;;		On exit  : 0/0
 14696 ;;		Unchanged: 0/0
 14697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14699 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14701 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14702 ;;Total ram usage:        1 bytes
 14703 ;; Hardware stack levels used:    1
 14704 ;; Hardware stack levels required when called:    4
 14705 ;; This function calls:
 14706 ;;		_lcd_busy
 14707 ;;		_lcd_write_ctrl
 14708 ;; This function is called by:
 14709 ;;		_DEMO_TCP_Client
 14710 ;; This function uses a non-reentrant model
 14711 ;;
 14712                           
 14713                           	psect	text73
 14714  008BCE                     __ptext73:
 14715                           	opt stack 0
 14716  008BCE                     _lcd_goto2:
 14717                           	opt stack 25
 14718                           
 14719                           ;incstack = 0
 14720                           ;lcd_goto2@pos stored from wreg
 14721  008BCE  6E03               	movwf	lcd_goto2@pos,c
 14722                           
 14723                           ;lcd.c: 104: lcd_write_ctrl(0xC0+pos);
 14724  008BD0  5003               	movf	lcd_goto2@pos,w,c
 14725  008BD2  0FC0               	addlw	192
 14726  008BD4  EC23  F045         	call	_lcd_write_ctrl
 14727                           
 14728                           ;lcd.c: 105: lcd_busy();
 14729  008BD8  EF12  F046         	goto	_lcd_busy	;wreg free
 14730  008BDC                     __end_of_lcd_goto2:
 14731                           	opt stack 0
 14732                           tosu	equ	0xFFF
 14733                           tosh	equ	0xFFE
 14734                           tosl	equ	0xFFD
 14735                           pclath	equ	0xFFA
 14736                           tblptru	equ	0xFF8
 14737                           tblptrh	equ	0xFF7
 14738                           tblptrl	equ	0xFF6
 14739                           tablat	equ	0xFF5
 14740                           prodh	equ	0xFF4
 14741                           prodl	equ	0xFF3
 14742                           intcon	equ	0xFF2
 14743                           intcon2	equ	0xFF1
 14744                           indf0	equ	0xFEF
 14745                           postinc0	equ	0xFEE
 14746                           fsr0h	equ	0xFEA
 14747                           fsr0l	equ	0xFE9
 14748                           wreg	equ	0xFE8
 14749                           postinc1	equ	0xFE6
 14750                           plusw1	equ	0xFE3
 14751                           fsr1h	equ	0xFE2
 14752                           fsr1l	equ	0xFE1
 14753                           indf2	equ	0xFDF
 14754                           postinc2	equ	0xFDE
 14755                           postdec2	equ	0xFDD
 14756                           plusw2	equ	0xFDB
 14757                           fsr2h	equ	0xFDA
 14758                           fsr2l	equ	0xFD9
 14759                           status	equ	0xFD8
 14760                           
 14761 ;; *************** function _lcd_write_ctrl *****************
 14762 ;; Defined at:
 14763 ;;		line 59 in file "../board_support_package/picdem2_net/lcd_hw.c"
 14764 ;; Parameters:    Size  Location     Type
 14765 ;;  c               1    wreg     unsigned char 
 14766 ;; Auto vars:     Size  Location     Type
 14767 ;;  c               1    1[COMRAM] unsigned char 
 14768 ;; Return value:  Size  Location     Type
 14769 ;;		None               void
 14770 ;; Registers used:
 14771 ;;		wreg
 14772 ;; Tracked objects:
 14773 ;;		On entry : 0/2
 14774 ;;		On exit  : 0/0
 14775 ;;		Unchanged: 0/0
 14776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14778 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14780 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14781 ;;Total ram usage:        1 bytes
 14782 ;; Hardware stack levels used:    1
 14783 ;; Hardware stack levels required when called:    3
 14784 ;; This function calls:
 14785 ;;		Nothing
 14786 ;; This function is called by:
 14787 ;;		_lcd_goto1
 14788 ;;		_lcd_goto2
 14789 ;;		_lcd_init
 14790 ;; This function uses a non-reentrant model
 14791 ;;
 14792                           
 14793                           	psect	text74
 14794  008A46                     __ptext74:
 14795                           	opt stack 0
 14796  008A46                     _lcd_write_ctrl:
 14797                           	opt stack 26
 14798                           
 14799                           ;incstack = 0
 14800                           ;lcd_write_ctrl@c stored from wreg
 14801  008A46  6E02               	movwf	lcd_write_ctrl@c,c
 14802                           
 14803                           ;lcd_hw.c: 61: LATH1 = 0;
 14804  008A48  9290               	bcf	3984,1,c	;volatile
 14805                           
 14806                           ;lcd_hw.c: 62: LATH2 = 0;
 14807  008A4A  9490               	bcf	3984,2,c	;volatile
 14808                           
 14809                           ;lcd_hw.c: 64: _delay((unsigned long)((50)*(41666667UL/4000000.0)));
 14810  008A4C  0EAD               	movlw	173
 14811  008A4E                     u16297:
 14812  008A4E  2EE8               	decfsz	wreg,f,c
 14813  008A50  D7FE               	goto	u16297
 14814  008A52  F000               	nop	
 14815                           
 14816                           ;lcd_hw.c: 65: LATE = c;
 14817  008A54  C002  FF8D         	movff	lcd_write_ctrl@c,3981	;volatile
 14818                           
 14819                           ;lcd_hw.c: 66: LATH0 = 1;
 14820  008A58  8090               	bsf	3984,0,c	;volatile
 14821                           
 14822                           ;lcd_hw.c: 67: _delay((unsigned long)((50)*(41666667UL/4000000.0)));
 14823  008A5A  0EAD               	movlw	173
 14824  008A5C                     u16307:
 14825  008A5C  2EE8               	decfsz	wreg,f,c
 14826  008A5E  D7FE               	goto	u16307
 14827  008A60  F000               	nop	
 14828                           
 14829                           ;lcd_hw.c: 68: LATH0 = 0;
 14830  008A62  9090               	bcf	3984,0,c	;volatile
 14831  008A64  0012               	return		;funcret
 14832  008A66                     __end_of_lcd_write_ctrl:
 14833                           	opt stack 0
 14834                           tosu	equ	0xFFF
 14835                           tosh	equ	0xFFE
 14836                           tosl	equ	0xFFD
 14837                           pclath	equ	0xFFA
 14838                           tblptru	equ	0xFF8
 14839                           tblptrh	equ	0xFF7
 14840                           tblptrl	equ	0xFF6
 14841                           tablat	equ	0xFF5
 14842                           prodh	equ	0xFF4
 14843                           prodl	equ	0xFF3
 14844                           intcon	equ	0xFF2
 14845                           intcon2	equ	0xFF1
 14846                           indf0	equ	0xFEF
 14847                           postinc0	equ	0xFEE
 14848                           fsr0h	equ	0xFEA
 14849                           fsr0l	equ	0xFE9
 14850                           wreg	equ	0xFE8
 14851                           postinc1	equ	0xFE6
 14852                           plusw1	equ	0xFE3
 14853                           fsr1h	equ	0xFE2
 14854                           fsr1l	equ	0xFE1
 14855                           indf2	equ	0xFDF
 14856                           postinc2	equ	0xFDE
 14857                           postdec2	equ	0xFDD
 14858                           plusw2	equ	0xFDB
 14859                           fsr2h	equ	0xFDA
 14860                           fsr2l	equ	0xFD9
 14861                           status	equ	0xFD8
 14862                           
 14863 ;; *************** function _lcd_busy *****************
 14864 ;; Defined at:
 14865 ;;		line 82 in file "../board_support_package/picdem2_net/lcd_hw.c"
 14866 ;; Parameters:    Size  Location     Type
 14867 ;;		None
 14868 ;; Auto vars:     Size  Location     Type
 14869 ;;		None
 14870 ;; Return value:  Size  Location     Type
 14871 ;;		None               void
 14872 ;; Registers used:
 14873 ;;		wreg
 14874 ;; Tracked objects:
 14875 ;;		On entry : 0/2
 14876 ;;		On exit  : 0/0
 14877 ;;		Unchanged: 0/0
 14878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14883 ;;Total ram usage:        0 bytes
 14884 ;; Hardware stack levels used:    1
 14885 ;; Hardware stack levels required when called:    3
 14886 ;; This function calls:
 14887 ;;		Nothing
 14888 ;; This function is called by:
 14889 ;;		_lcd_putch
 14890 ;;		_lcd_goto1
 14891 ;;		_lcd_goto2
 14892 ;;		_lcd_init
 14893 ;; This function uses a non-reentrant model
 14894 ;;
 14895                           
 14896                           	psect	text75
 14897  008C24                     __ptext75:
 14898                           	opt stack 0
 14899  008C24                     _lcd_busy:
 14900                           	opt stack 25
 14901                           
 14902                           ;lcd_hw.c: 84: _delay((unsigned long)((50)*(41666667UL/4000000.0)));
 14903                           
 14904                           ;incstack = 0
 14905  008C24  0EAD               	movlw	173
 14906  008C26                     u16317:
 14907  008C26  2EE8               	decfsz	wreg,f,c
 14908  008C28  D7FE               	goto	u16317
 14909  008C2A  F000               	nop	
 14910  008C2C  0012               	return		;funcret
 14911  008C2E                     __end_of_lcd_busy:
 14912                           	opt stack 0
 14913                           tosu	equ	0xFFF
 14914                           tosh	equ	0xFFE
 14915                           tosl	equ	0xFFD
 14916                           pclath	equ	0xFFA
 14917                           tblptru	equ	0xFF8
 14918                           tblptrh	equ	0xFF7
 14919                           tblptrl	equ	0xFF6
 14920                           tablat	equ	0xFF5
 14921                           prodh	equ	0xFF4
 14922                           prodl	equ	0xFF3
 14923                           intcon	equ	0xFF2
 14924                           intcon2	equ	0xFF1
 14925                           indf0	equ	0xFEF
 14926                           postinc0	equ	0xFEE
 14927                           fsr0h	equ	0xFEA
 14928                           fsr0l	equ	0xFE9
 14929                           wreg	equ	0xFE8
 14930                           postinc1	equ	0xFE6
 14931                           plusw1	equ	0xFE3
 14932                           fsr1h	equ	0xFE2
 14933                           fsr1l	equ	0xFE1
 14934                           indf2	equ	0xFDF
 14935                           postinc2	equ	0xFDE
 14936                           postdec2	equ	0xFDD
 14937                           plusw2	equ	0xFDB
 14938                           fsr2h	equ	0xFDA
 14939                           fsr2l	equ	0xFD9
 14940                           status	equ	0xFD8
 14941                           
 14942 ;; *************** function _TCP_SocketInit *****************
 14943 ;; Defined at:
 14944 ;;		line 1181 in file "../../TCPIP Library/source/tcpv4.c"
 14945 ;; Parameters:    Size  Location     Type
 14946 ;;  tcbPtr          2    9[COMRAM] PTR struct .
 14947 ;;		 -> DEMO_TCP_Client@port60TCB(55), 
 14948 ;; Auto vars:     Size  Location     Type
 14949 ;;  ret             1    0        enum E177
 14950 ;; Return value:  Size  Location     Type
 14951 ;;                  1    wreg      enum E177
 14952 ;; Registers used:
 14953 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14954 ;; Tracked objects:
 14955 ;;		On entry : D/0
 14956 ;;		On exit  : 0/0
 14957 ;;		Unchanged: 0/0
 14958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14959 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14960 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14962 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14963 ;;Total ram usage:        3 bytes
 14964 ;; Hardware stack levels used:    1
 14965 ;; Hardware stack levels required when called:    4
 14966 ;; This function calls:
 14967 ;;		_TCB_Check
 14968 ;;		_TCB_Insert
 14969 ;;		_TCB_Reset
 14970 ;; This function is called by:
 14971 ;;		_DEMO_TCP_Client
 14972 ;; This function uses a non-reentrant model
 14973 ;;
 14974                           
 14975                           	psect	text76
 14976  0072A2                     __ptext76:
 14977                           	opt stack 0
 14978  0072A2                     _TCP_SocketInit:
 14979                           	opt stack 25
 14980                           
 14981                           ;tcpv4.c: 1186: if(TCB_Check(tcbPtr) == 0)
 14982                           
 14983                           ;incstack = 0
 14984  0072A2  C00A  F002         	movff	TCP_SocketInit@tcbPtr,TCB_Check@ptr
 14985  0072A6  C00B  F003         	movff	TCP_SocketInit@tcbPtr+1,TCB_Check@ptr+1
 14986  0072AA  EC85  F03E         	call	_TCB_Check	;wreg free
 14987  0072AE  0900               	iorlw	0
 14988  0072B0  A4D8               	btfss	status,2,c
 14989  0072B2  0012               	return	
 14990                           
 14991                           ;tcpv4.c: 1187: {
 14992                           ;tcpv4.c: 1188: TCB_Reset(tcbPtr);
 14993  0072B4  C00A  F002         	movff	TCP_SocketInit@tcbPtr,TCB_Reset@tcbPtr
 14994  0072B8  C00B  F003         	movff	TCP_SocketInit@tcbPtr+1,TCB_Reset@tcbPtr+1
 14995  0072BC  EC4C  F031         	call	_TCB_Reset	;wreg free
 14996                           
 14997                           ;tcpv4.c: 1190: tcbPtr->localWnd = 0;
 14998  0072C0  EE20 F01A          	lfsr	2,26
 14999  0072C4  500A               	movf	TCP_SocketInit@tcbPtr,w,c
 15000  0072C6  26D9               	addwf	fsr2l,f,c
 15001  0072C8  500B               	movf	TCP_SocketInit@tcbPtr+1,w,c
 15002  0072CA  22DA               	addwfc	fsr2h,f,c
 15003  0072CC  6ADE               	clrf	postinc2,c
 15004  0072CE  6ADD               	clrf	postdec2,c
 15005                           
 15006                           ;tcpv4.c: 1191: tcbPtr->mss = 1460u;
 15007  0072D0  EE20 F01C          	lfsr	2,28
 15008  0072D4  500A               	movf	TCP_SocketInit@tcbPtr,w,c
 15009  0072D6  26D9               	addwf	fsr2l,f,c
 15010  0072D8  500B               	movf	TCP_SocketInit@tcbPtr+1,w,c
 15011  0072DA  22DA               	addwfc	fsr2h,f,c
 15012  0072DC  0EB4               	movlw	180
 15013  0072DE  6EDE               	movwf	postinc2,c
 15014  0072E0  0E05               	movlw	5
 15015  0072E2  6EDD               	movwf	postdec2,c
 15016                           
 15017                           ;tcpv4.c: 1192: tcbPtr->fsmState = CLOSED;
 15018  0072E4  EE20 F02A          	lfsr	2,42
 15019  0072E8  500A               	movf	TCP_SocketInit@tcbPtr,w,c
 15020  0072EA  26D9               	addwf	fsr2l,f,c
 15021  0072EC  500B               	movf	TCP_SocketInit@tcbPtr+1,w,c
 15022  0072EE  22DA               	addwfc	fsr2h,f,c
 15023  0072F0  6ADF               	clrf	indf2,c
 15024                           
 15025                           ;tcpv4.c: 1193: tcbPtr->connectionEvent = NOP;
 15026  0072F2  EE20 F02B          	lfsr	2,43
 15027  0072F6  500A               	movf	TCP_SocketInit@tcbPtr,w,c
 15028  0072F8  26D9               	addwf	fsr2l,f,c
 15029  0072FA  500B               	movf	TCP_SocketInit@tcbPtr+1,w,c
 15030  0072FC  22DA               	addwfc	fsr2h,f,c
 15031  0072FE  0E0D               	movlw	13
 15032  007300  6EDF               	movwf	indf2,c
 15033                           
 15034                           ;tcpv4.c: 1194: tcbPtr->rxBufferStart = (0);
 15035  007302  EE20 F01E          	lfsr	2,30
 15036  007306  500A               	movf	TCP_SocketInit@tcbPtr,w,c
 15037  007308  26D9               	addwf	fsr2l,f,c
 15038  00730A  500B               	movf	TCP_SocketInit@tcbPtr+1,w,c
 15039  00730C  22DA               	addwfc	fsr2h,f,c
 15040  00730E  6ADE               	clrf	postinc2,c
 15041  007310  6ADD               	clrf	postdec2,c
 15042                           
 15043                           ;tcpv4.c: 1195: tcbPtr->rxBufState = NO_BUFF;
 15044  007312  EE20 F022          	lfsr	2,34
 15045  007316  500A               	movf	TCP_SocketInit@tcbPtr,w,c
 15046  007318  26D9               	addwf	fsr2l,f,c
 15047  00731A  500B               	movf	TCP_SocketInit@tcbPtr+1,w,c
 15048  00731C  22DA               	addwfc	fsr2h,f,c
 15049  00731E  6ADF               	clrf	indf2,c
 15050                           
 15051                           ;tcpv4.c: 1196: tcbPtr->txBufferStart = (0);
 15052  007320  EE20 F023          	lfsr	2,35
 15053  007324  500A               	movf	TCP_SocketInit@tcbPtr,w,c
 15054  007326  26D9               	addwf	fsr2l,f,c
 15055  007328  500B               	movf	TCP_SocketInit@tcbPtr+1,w,c
 15056  00732A  22DA               	addwfc	fsr2h,f,c
 15057  00732C  6ADE               	clrf	postinc2,c
 15058  00732E  6ADD               	clrf	postdec2,c
 15059                           
 15060                           ;tcpv4.c: 1197: tcbPtr->txBufferPtr = (0);
 15061  007330  EE20 F025          	lfsr	2,37
 15062  007334  500A               	movf	TCP_SocketInit@tcbPtr,w,c
 15063  007336  26D9               	addwf	fsr2l,f,c
 15064  007338  500B               	movf	TCP_SocketInit@tcbPtr+1,w,c
 15065  00733A  22DA               	addwfc	fsr2h,f,c
 15066  00733C  6ADE               	clrf	postinc2,c
 15067  00733E  6ADD               	clrf	postdec2,c
 15068                           
 15069                           ;tcpv4.c: 1198: tcbPtr->bytesToSend = 0;
 15070  007340  EE20 F027          	lfsr	2,39
 15071  007344  500A               	movf	TCP_SocketInit@tcbPtr,w,c
 15072  007346  26D9               	addwf	fsr2l,f,c
 15073  007348  500B               	movf	TCP_SocketInit@tcbPtr+1,w,c
 15074  00734A  22DA               	addwfc	fsr2h,f,c
 15075  00734C  6ADE               	clrf	postinc2,c
 15076  00734E  6ADD               	clrf	postdec2,c
 15077                           
 15078                           ;tcpv4.c: 1199: tcbPtr->txBufState = NO_BUFF;
 15079  007350  EE20 F029          	lfsr	2,41
 15080  007354  500A               	movf	TCP_SocketInit@tcbPtr,w,c
 15081  007356  26D9               	addwf	fsr2l,f,c
 15082  007358  500B               	movf	TCP_SocketInit@tcbPtr+1,w,c
 15083  00735A  22DA               	addwfc	fsr2h,f,c
 15084  00735C  6ADF               	clrf	indf2,c
 15085                           
 15086                           ;tcpv4.c: 1201: TCB_Insert(tcbPtr);
 15087  00735E  C00A  F002         	movff	TCP_SocketInit@tcbPtr,TCB_Insert@ptr
 15088  007362  C00B  F003         	movff	TCP_SocketInit@tcbPtr+1,TCB_Insert@ptr+1
 15089  007366  EF50  F041         	goto	_TCB_Insert	;wreg free
 15090  00736A                     __end_of_TCP_SocketInit:
 15091                           	opt stack 0
 15092                           tosu	equ	0xFFF
 15093                           tosh	equ	0xFFE
 15094                           tosl	equ	0xFFD
 15095                           pclath	equ	0xFFA
 15096                           tblptru	equ	0xFF8
 15097                           tblptrh	equ	0xFF7
 15098                           tblptrl	equ	0xFF6
 15099                           tablat	equ	0xFF5
 15100                           prodh	equ	0xFF4
 15101                           prodl	equ	0xFF3
 15102                           intcon	equ	0xFF2
 15103                           intcon2	equ	0xFF1
 15104                           indf0	equ	0xFEF
 15105                           postinc0	equ	0xFEE
 15106                           fsr0h	equ	0xFEA
 15107                           fsr0l	equ	0xFE9
 15108                           wreg	equ	0xFE8
 15109                           postinc1	equ	0xFE6
 15110                           plusw1	equ	0xFE3
 15111                           fsr1h	equ	0xFE2
 15112                           fsr1l	equ	0xFE1
 15113                           indf2	equ	0xFDF
 15114                           postinc2	equ	0xFDE
 15115                           postdec2	equ	0xFDD
 15116                           plusw2	equ	0xFDB
 15117                           fsr2h	equ	0xFDA
 15118                           fsr2l	equ	0xFD9
 15119                           status	equ	0xFD8
 15120                           
 15121 ;; *************** function _TCB_Insert *****************
 15122 ;; Defined at:
 15123 ;;		line 80 in file "../../TCPIP Library/source/tcpv4.c"
 15124 ;; Parameters:    Size  Location     Type
 15125 ;;  ptr             2    1[COMRAM] PTR struct .
 15126 ;;		 -> DEMO_TCP_Client@port60TCB(55), 
 15127 ;; Auto vars:     Size  Location     Type
 15128 ;;		None
 15129 ;; Return value:  Size  Location     Type
 15130 ;;		None               void
 15131 ;; Registers used:
 15132 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15133 ;; Tracked objects:
 15134 ;;		On entry : 0/0
 15135 ;;		On exit  : F/1
 15136 ;;		Unchanged: 0/0
 15137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15138 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15141 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15142 ;;Total ram usage:        2 bytes
 15143 ;; Hardware stack levels used:    1
 15144 ;; Hardware stack levels required when called:    3
 15145 ;; This function calls:
 15146 ;;		Nothing
 15147 ;; This function is called by:
 15148 ;;		_TCP_SocketInit
 15149 ;; This function uses a non-reentrant model
 15150 ;;
 15151                           
 15152                           	psect	text77
 15153  0082A0                     __ptext77:
 15154                           	opt stack 0
 15155  0082A0                     _TCB_Insert:
 15156                           	opt stack 25
 15157                           
 15158                           ;tcpv4.c: 84: if(tcbList != (0))
 15159                           
 15160                           ;incstack = 0
 15161  0082A0  0101               	movlb	1	; () banked
 15162  0082A2  51A2               	movf	_tcbList& (0+255),w,b
 15163  0082A4  11A3               	iorwf	(_tcbList+1)& (0+255),w,b
 15164  0082A6  E00A               	bz	l1185
 15165                           
 15166                           ; BSR set to: 1
 15167                           ;tcpv4.c: 85: {
 15168                           ;tcpv4.c: 87: tcbList->prevTCB = ptr;
 15169  0082A8  EE20 F02E          	lfsr	2,46
 15170  0082AC  51A2               	movf	_tcbList& (0+255),w,b
 15171  0082AE  26D9               	addwf	fsr2l,f,c
 15172  0082B0  51A3               	movf	(_tcbList+1)& (0+255),w,b
 15173  0082B2  22DA               	addwfc	fsr2h,f,c
 15174  0082B4  C002  FFDE         	movff	TCB_Insert@ptr,postinc2
 15175  0082B8  C003  FFDD         	movff	TCB_Insert@ptr+1,postdec2
 15176  0082BC                     l1185:
 15177                           
 15178                           ; BSR set to: 1
 15179                           ;tcpv4.c: 88: }
 15180                           ;tcpv4.c: 89: ptr->nextTCB = tcbList;
 15181  0082BC  EE20 F02C          	lfsr	2,44
 15182  0082C0  5002               	movf	TCB_Insert@ptr,w,c
 15183  0082C2  26D9               	addwf	fsr2l,f,c
 15184  0082C4  5003               	movf	TCB_Insert@ptr+1,w,c
 15185  0082C6  22DA               	addwfc	fsr2h,f,c
 15186  0082C8  C1A2  FFDE         	movff	_tcbList,postinc2
 15187  0082CC  C1A3  FFDD         	movff	_tcbList+1,postdec2
 15188                           
 15189                           ; BSR set to: 1
 15190                           ;tcpv4.c: 90: tcbList = ptr;
 15191  0082D0  C002  F1A2         	movff	TCB_Insert@ptr,_tcbList
 15192  0082D4  C003  F1A3         	movff	TCB_Insert@ptr+1,_tcbList+1
 15193                           
 15194                           ; BSR set to: 1
 15195                           ;tcpv4.c: 91: ptr->prevTCB = (0);
 15196  0082D8  EE20 F02E          	lfsr	2,46
 15197  0082DC  5002               	movf	TCB_Insert@ptr,w,c
 15198  0082DE  26D9               	addwf	fsr2l,f,c
 15199  0082E0  5003               	movf	TCB_Insert@ptr+1,w,c
 15200  0082E2  22DA               	addwfc	fsr2h,f,c
 15201  0082E4  6ADE               	clrf	postinc2,c
 15202  0082E6  6ADD               	clrf	postdec2,c
 15203                           
 15204                           ; BSR set to: 1
 15205                           ;tcpv4.c: 92: tcbListSize ++;
 15206  0082E8  2BA7               	incf	_tcbListSize& (0+255),f,b
 15207                           
 15208                           ; BSR set to: 1
 15209  0082EA  0C00               	retlw	0	;funcret
 15210  0082EC                     __end_of_TCB_Insert:
 15211                           	opt stack 0
 15212                           tosu	equ	0xFFF
 15213                           tosh	equ	0xFFE
 15214                           tosl	equ	0xFFD
 15215                           pclath	equ	0xFFA
 15216                           tblptru	equ	0xFF8
 15217                           tblptrh	equ	0xFF7
 15218                           tblptrl	equ	0xFF6
 15219                           tablat	equ	0xFF5
 15220                           prodh	equ	0xFF4
 15221                           prodl	equ	0xFF3
 15222                           intcon	equ	0xFF2
 15223                           intcon2	equ	0xFF1
 15224                           indf0	equ	0xFEF
 15225                           postinc0	equ	0xFEE
 15226                           fsr0h	equ	0xFEA
 15227                           fsr0l	equ	0xFE9
 15228                           wreg	equ	0xFE8
 15229                           postinc1	equ	0xFE6
 15230                           plusw1	equ	0xFE3
 15231                           fsr1h	equ	0xFE2
 15232                           fsr1l	equ	0xFE1
 15233                           indf2	equ	0xFDF
 15234                           postinc2	equ	0xFDE
 15235                           postdec2	equ	0xFDD
 15236                           plusw2	equ	0xFDB
 15237                           fsr2h	equ	0xFDA
 15238                           fsr2l	equ	0xFD9
 15239                           status	equ	0xFD8
 15240                           
 15241 ;; *************** function _TCP_SendDone *****************
 15242 ;; Defined at:
 15243 ;;		line 1347 in file "../../TCPIP Library/source/tcpv4.c"
 15244 ;; Parameters:    Size  Location     Type
 15245 ;;  tcbPtr          2    9[COMRAM] PTR struct .
 15246 ;;		 -> DEMO_TCP_Client@port60TCB(55), 
 15247 ;; Auto vars:     Size  Location     Type
 15248 ;;  ret             1   11[COMRAM] unsigned char 
 15249 ;; Return value:  Size  Location     Type
 15250 ;;                  1    wreg      unsigned char 
 15251 ;; Registers used:
 15252 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15253 ;; Tracked objects:
 15254 ;;		On entry : D/0
 15255 ;;		On exit  : 0/0
 15256 ;;		Unchanged: 0/0
 15257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15258 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15259 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15261 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15262 ;;Total ram usage:        3 bytes
 15263 ;; Hardware stack levels used:    1
 15264 ;; Hardware stack levels required when called:    4
 15265 ;; This function calls:
 15266 ;;		_TCB_Check
 15267 ;; This function is called by:
 15268 ;;		_DEMO_TCP_Client
 15269 ;; This function uses a non-reentrant model
 15270 ;;
 15271                           
 15272                           	psect	text78
 15273  008890                     __ptext78:
 15274                           	opt stack 0
 15275  008890                     _TCP_SendDone:
 15276                           	opt stack 25
 15277                           
 15278                           ;tcpv4.c: 1349: bool ret = 0;
 15279                           
 15280                           ; BSR set to: 1
 15281                           ;incstack = 0
 15282  008890  6A0C               	clrf	TCP_SendDone@ret,c
 15283                           
 15284                           ;tcpv4.c: 1351: if(TCB_Check(tcbPtr))
 15285  008892  C00A  F002         	movff	TCP_SendDone@tcbPtr,TCB_Check@ptr
 15286  008896  C00B  F003         	movff	TCP_SendDone@tcbPtr+1,TCB_Check@ptr+1
 15287  00889A  EC85  F03E         	call	_TCB_Check	;wreg free
 15288  00889E  0900               	iorlw	0
 15289  0088A0  E00A               	bz	l1455
 15290                           
 15291                           ;tcpv4.c: 1352: {
 15292                           ;tcpv4.c: 1353: if (tcbPtr->txBufState == NO_BUFF)
 15293  0088A2  EE20 F029          	lfsr	2,41
 15294  0088A6  500A               	movf	TCP_SendDone@tcbPtr,w,c
 15295  0088A8  26D9               	addwf	fsr2l,f,c
 15296  0088AA  500B               	movf	TCP_SendDone@tcbPtr+1,w,c
 15297  0088AC  22DA               	addwfc	fsr2h,f,c
 15298  0088AE  50DF               	movf	indf2,w,c
 15299  0088B0  E102               	bnz	l1455
 15300                           
 15301                           ;tcpv4.c: 1354: {
 15302                           ;tcpv4.c: 1355: ret = 1;
 15303  0088B2  0E01               	movlw	1
 15304  0088B4  6E0C               	movwf	TCP_SendDone@ret,c
 15305  0088B6                     l1455:
 15306                           
 15307                           ;tcpv4.c: 1356: }
 15308                           ;tcpv4.c: 1357: }
 15309                           ;tcpv4.c: 1358: return ret;
 15310  0088B6  500C               	movf	TCP_SendDone@ret,w,c
 15311  0088B8  0012               	return		;funcret
 15312  0088BA                     __end_of_TCP_SendDone:
 15313                           	opt stack 0
 15314                           tosu	equ	0xFFF
 15315                           tosh	equ	0xFFE
 15316                           tosl	equ	0xFFD
 15317                           pclath	equ	0xFFA
 15318                           tblptru	equ	0xFF8
 15319                           tblptrh	equ	0xFF7
 15320                           tblptrl	equ	0xFF6
 15321                           tablat	equ	0xFF5
 15322                           prodh	equ	0xFF4
 15323                           prodl	equ	0xFF3
 15324                           intcon	equ	0xFF2
 15325                           intcon2	equ	0xFF1
 15326                           indf0	equ	0xFEF
 15327                           postinc0	equ	0xFEE
 15328                           fsr0h	equ	0xFEA
 15329                           fsr0l	equ	0xFE9
 15330                           wreg	equ	0xFE8
 15331                           postinc1	equ	0xFE6
 15332                           plusw1	equ	0xFE3
 15333                           fsr1h	equ	0xFE2
 15334                           fsr1l	equ	0xFE1
 15335                           indf2	equ	0xFDF
 15336                           postinc2	equ	0xFDE
 15337                           postdec2	equ	0xFDD
 15338                           plusw2	equ	0xFDB
 15339                           fsr2h	equ	0xFDA
 15340                           fsr2l	equ	0xFD9
 15341                           status	equ	0xFD8
 15342                           
 15343 ;; *************** function _TCP_Send *****************
 15344 ;; Defined at:
 15345 ;;		line 1318 in file "../../TCPIP Library/source/tcpv4.c"
 15346 ;; Parameters:    Size  Location     Type
 15347 ;;  tcbPtr          2   84[BANK0 ] PTR struct .
 15348 ;;		 -> DEMO_TCP_Client@port60TCB(55), 
 15349 ;;  data            2   86[BANK0 ] PTR unsigned char 
 15350 ;;		 -> DEMO_TCP_Client@txdataPort60(80), 
 15351 ;;  dataLen         2   88[BANK0 ] unsigned int 
 15352 ;; Auto vars:     Size  Location     Type
 15353 ;;  ret             1    0        unsigned char 
 15354 ;; Return value:  Size  Location     Type
 15355 ;;                  1    wreg      unsigned char 
 15356 ;; Registers used:
 15357 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15358 ;; Tracked objects:
 15359 ;;		On entry : F/0
 15360 ;;		On exit  : 0/0
 15361 ;;		Unchanged: 0/0
 15362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15363 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15364 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15366 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15367 ;;Total ram usage:        7 bytes
 15368 ;; Hardware stack levels used:    1
 15369 ;; Hardware stack levels required when called:   10
 15370 ;; This function calls:
 15371 ;;		_TCP_Snd
 15372 ;;		_TCP_SocketPoll
 15373 ;; This function is called by:
 15374 ;;		_DEMO_TCP_Client
 15375 ;; This function uses a non-reentrant model
 15376 ;;
 15377                           
 15378                           	psect	text79
 15379  0074F6                     __ptext79:
 15380                           	opt stack 0
 15381  0074F6                     _TCP_Send:
 15382                           	opt stack 19
 15383                           
 15384                           ; BSR set to: 0
 15385                           ;tcpv4.c: 1322: if (TCP_SocketPoll(tcbPtr) == SOCKET_CONNECTED)
 15386                           
 15387                           ; BSR set to: 0
 15388                           
 15389                           ;incstack = 0
 15390  0074F6  C0B4  F00A         	movff	TCP_Send@tcbPtr,TCP_SocketPoll@socket_ptr
 15391  0074FA  C0B5  F00B         	movff	TCP_Send@tcbPtr+1,TCP_SocketPoll@socket_ptr+1
 15392  0074FE  ECAB  F044         	call	_TCP_SocketPoll	;wreg free
 15393  007502  0A03               	xorlw	3
 15394  007504  A4D8               	btfss	status,2,c
 15395  007506  0012               	return	
 15396                           
 15397                           ;tcpv4.c: 1323: {
 15398                           ;tcpv4.c: 1324: if (tcbPtr->txBufState == NO_BUFF)
 15399  007508  0100               	movlb	0	; () banked
 15400  00750A  EE20 F029          	lfsr	2,41
 15401  00750E  51B4               	movf	TCP_Send@tcbPtr& (0+255),w,b
 15402  007510  26D9               	addwf	fsr2l,f,c
 15403  007512  51B5               	movf	(TCP_Send@tcbPtr+1)& (0+255),w,b
 15404  007514  22DA               	addwfc	fsr2h,f,c
 15405  007516  50DF               	movf	indf2,w,c
 15406  007518  A4D8               	btfss	status,2,c
 15407  00751A  0012               	return	
 15408                           
 15409                           ; BSR set to: 0
 15410                           ;tcpv4.c: 1325: {
 15411                           ;tcpv4.c: 1326: if (data != (0))
 15412  00751C  51B6               	movf	TCP_Send@data& (0+255),w,b
 15413  00751E  11B7               	iorwf	(TCP_Send@data+1)& (0+255),w,b
 15414  007520  B4D8               	btfsc	status,2,c
 15415  007522  0012               	return	
 15416                           
 15417                           ; BSR set to: 0
 15418                           ;tcpv4.c: 1327: {
 15419                           ;tcpv4.c: 1328: tcbPtr->txBufferStart = data;
 15420  007524  EE20 F023          	lfsr	2,35
 15421  007528  51B4               	movf	TCP_Send@tcbPtr& (0+255),w,b
 15422  00752A  26D9               	addwf	fsr2l,f,c
 15423  00752C  51B5               	movf	(TCP_Send@tcbPtr+1)& (0+255),w,b
 15424  00752E  22DA               	addwfc	fsr2h,f,c
 15425  007530  C0B6  FFDE         	movff	TCP_Send@data,postinc2
 15426  007534  C0B7  FFDD         	movff	TCP_Send@data+1,postdec2
 15427                           
 15428                           ; BSR set to: 0
 15429                           ;tcpv4.c: 1329: tcbPtr->txBufferPtr = tcbPtr->txBufferStart;
 15430  007538  EE20 F023          	lfsr	2,35
 15431  00753C  51B4               	movf	TCP_Send@tcbPtr& (0+255),w,b
 15432  00753E  26D9               	addwf	fsr2l,f,c
 15433  007540  51B5               	movf	(TCP_Send@tcbPtr+1)& (0+255),w,b
 15434  007542  22DA               	addwfc	fsr2h,f,c
 15435  007544  EE10 F025          	lfsr	1,37
 15436  007548  51B4               	movf	TCP_Send@tcbPtr& (0+255),w,b
 15437  00754A  26E1               	addwf	fsr1l,f,c
 15438  00754C  51B5               	movf	(TCP_Send@tcbPtr+1)& (0+255),w,b
 15439  00754E  22E2               	addwfc	fsr1h,f,c
 15440  007550  CFDE FFE6          	movff	postinc2,postinc1
 15441  007554  CFDD FFE5          	movff	postdec2,postdec1
 15442                           
 15443                           ; BSR set to: 0
 15444                           ;tcpv4.c: 1330: tcbPtr->bytesToSend = dataLen;
 15445  007558  EE20 F027          	lfsr	2,39
 15446  00755C  51B4               	movf	TCP_Send@tcbPtr& (0+255),w,b
 15447  00755E  26D9               	addwf	fsr2l,f,c
 15448  007560  51B5               	movf	(TCP_Send@tcbPtr+1)& (0+255),w,b
 15449  007562  22DA               	addwfc	fsr2h,f,c
 15450  007564  C0B8  FFDE         	movff	TCP_Send@dataLen,postinc2
 15451  007568  C0B9  FFDD         	movff	TCP_Send@dataLen+1,postdec2
 15452                           
 15453                           ; BSR set to: 0
 15454                           ;tcpv4.c: 1331: tcbPtr->txBufState = TX_BUFF_IN_USE;
 15455  00756C  EE20 F029          	lfsr	2,41
 15456  007570  51B4               	movf	TCP_Send@tcbPtr& (0+255),w,b
 15457  007572  26D9               	addwf	fsr2l,f,c
 15458  007574  51B5               	movf	(TCP_Send@tcbPtr+1)& (0+255),w,b
 15459  007576  22DA               	addwfc	fsr2h,f,c
 15460  007578  0E02               	movlw	2
 15461  00757A  6EDF               	movwf	indf2,c
 15462                           
 15463                           ; BSR set to: 0
 15464                           ;tcpv4.c: 1333: tcbPtr->timeoutReloadValue = ((unsigned long)1*2);
 15465  00757C  EE20 F032          	lfsr	2,50
 15466  007580  51B4               	movf	TCP_Send@tcbPtr& (0+255),w,b
 15467  007582  26D9               	addwf	fsr2l,f,c
 15468  007584  51B5               	movf	(TCP_Send@tcbPtr+1)& (0+255),w,b
 15469  007586  22DA               	addwfc	fsr2h,f,c
 15470  007588  0E02               	movlw	2
 15471  00758A  6EDE               	movwf	postinc2,c
 15472  00758C  6ADD               	clrf	postdec2,c
 15473                           
 15474                           ; BSR set to: 0
 15475                           ;tcpv4.c: 1334: tcbPtr->timeoutsCount = (5u);
 15476  00758E  EE20 F034          	lfsr	2,52
 15477  007592  51B4               	movf	TCP_Send@tcbPtr& (0+255),w,b
 15478  007594  26D9               	addwf	fsr2l,f,c
 15479  007596  51B5               	movf	(TCP_Send@tcbPtr+1)& (0+255),w,b
 15480  007598  22DA               	addwfc	fsr2h,f,c
 15481  00759A  0E05               	movlw	5
 15482  00759C  6EDF               	movwf	indf2,c
 15483                           
 15484                           ; BSR set to: 0
 15485                           ;tcpv4.c: 1336: tcbPtr->flags = 0x10U;
 15486  00759E  EE20 F035          	lfsr	2,53
 15487  0075A2  51B4               	movf	TCP_Send@tcbPtr& (0+255),w,b
 15488  0075A4  26D9               	addwf	fsr2l,f,c
 15489  0075A6  51B5               	movf	(TCP_Send@tcbPtr+1)& (0+255),w,b
 15490  0075A8  22DA               	addwfc	fsr2h,f,c
 15491  0075AA  0E10               	movlw	16
 15492  0075AC  6EDF               	movwf	indf2,c
 15493                           
 15494                           ; BSR set to: 0
 15495                           ;tcpv4.c: 1338: TCP_Snd(tcbPtr);
 15496  0075AE  C0B4  F058         	movff	TCP_Send@tcbPtr,TCP_Snd@tcbPtr
 15497  0075B2  C0B5  F059         	movff	TCP_Send@tcbPtr+1,TCP_Snd@tcbPtr+1
 15498  0075B6  EF31  F01D         	goto	_TCP_Snd	;wreg free
 15499  0075BA                     __end_of_TCP_Send:
 15500                           	opt stack 0
 15501                           tosu	equ	0xFFF
 15502                           tosh	equ	0xFFE
 15503                           tosl	equ	0xFFD
 15504                           pclath	equ	0xFFA
 15505                           tblptru	equ	0xFF8
 15506                           tblptrh	equ	0xFF7
 15507                           tblptrl	equ	0xFF6
 15508                           tablat	equ	0xFF5
 15509                           prodh	equ	0xFF4
 15510                           prodl	equ	0xFF3
 15511                           intcon	equ	0xFF2
 15512                           intcon2	equ	0xFF1
 15513                           indf0	equ	0xFEF
 15514                           postinc0	equ	0xFEE
 15515                           fsr0h	equ	0xFEA
 15516                           fsr0l	equ	0xFE9
 15517                           wreg	equ	0xFE8
 15518                           postinc1	equ	0xFE6
 15519                           postdec1	equ	0xFE5
 15520                           plusw1	equ	0xFE3
 15521                           fsr1h	equ	0xFE2
 15522                           fsr1l	equ	0xFE1
 15523                           indf2	equ	0xFDF
 15524                           postinc2	equ	0xFDE
 15525                           postdec2	equ	0xFDD
 15526                           plusw2	equ	0xFDB
 15527                           fsr2h	equ	0xFDA
 15528                           fsr2l	equ	0xFD9
 15529                           status	equ	0xFD8
 15530                           
 15531 ;; *************** function _TCP_InsertRxBuffer *****************
 15532 ;; Defined at:
 15533 ;;		line 1361 in file "../../TCPIP Library/source/tcpv4.c"
 15534 ;; Parameters:    Size  Location     Type
 15535 ;;  tcbPtr          2    9[COMRAM] PTR struct .
 15536 ;;		 -> DEMO_TCP_Client@port60TCB(55), 
 15537 ;;  data            2   11[COMRAM] PTR unsigned char 
 15538 ;;		 -> DEMO_TCP_Client@rxdataPort60(50), 
 15539 ;;  data_len        2   13[COMRAM] unsigned int 
 15540 ;; Auto vars:     Size  Location     Type
 15541 ;;  ret             1    0        unsigned char 
 15542 ;; Return value:  Size  Location     Type
 15543 ;;                  1    wreg      unsigned char 
 15544 ;; Registers used:
 15545 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15546 ;; Tracked objects:
 15547 ;;		On entry : 0/2
 15548 ;;		On exit  : 0/0
 15549 ;;		Unchanged: 0/0
 15550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15551 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15552 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15554 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15555 ;;Total ram usage:        7 bytes
 15556 ;; Hardware stack levels used:    1
 15557 ;; Hardware stack levels required when called:    4
 15558 ;; This function calls:
 15559 ;;		_TCB_Check
 15560 ;; This function is called by:
 15561 ;;		_DEMO_TCP_Client
 15562 ;; This function uses a non-reentrant model
 15563 ;;
 15564                           
 15565                           	psect	text80
 15566  007BFE                     __ptext80:
 15567                           	opt stack 0
 15568  007BFE                     _TCP_InsertRxBuffer:
 15569                           	opt stack 25
 15570                           
 15571                           ;tcpv4.c: 1365: if (TCB_Check(tcbPtr))
 15572                           
 15573                           ;incstack = 0
 15574  007BFE  C00A  F002         	movff	TCP_InsertRxBuffer@tcbPtr,TCB_Check@ptr
 15575  007C02  C00B  F003         	movff	TCP_InsertRxBuffer@tcbPtr+1,TCB_Check@ptr+1
 15576  007C06  EC85  F03E         	call	_TCB_Check	;wreg free
 15577  007C0A  0900               	iorlw	0
 15578  007C0C  B4D8               	btfsc	status,2,c
 15579  007C0E  0012               	return	
 15580                           
 15581                           ;tcpv4.c: 1366: {
 15582                           ;tcpv4.c: 1367: if (tcbPtr->rxBufState == NO_BUFF)
 15583  007C10  EE20 F022          	lfsr	2,34
 15584  007C14  500A               	movf	TCP_InsertRxBuffer@tcbPtr,w,c
 15585  007C16  26D9               	addwf	fsr2l,f,c
 15586  007C18  500B               	movf	TCP_InsertRxBuffer@tcbPtr+1,w,c
 15587  007C1A  22DA               	addwfc	fsr2h,f,c
 15588  007C1C  50DF               	movf	indf2,w,c
 15589  007C1E  A4D8               	btfss	status,2,c
 15590  007C20  0012               	return	
 15591                           
 15592                           ;tcpv4.c: 1368: {
 15593                           ;tcpv4.c: 1369: if (data != (0))
 15594  007C22  500C               	movf	TCP_InsertRxBuffer@data,w,c
 15595  007C24  100D               	iorwf	TCP_InsertRxBuffer@data+1,w,c
 15596  007C26  B4D8               	btfsc	status,2,c
 15597  007C28  0012               	return	
 15598                           
 15599                           ;tcpv4.c: 1370: {
 15600                           ;tcpv4.c: 1371: tcbPtr->rxBufferStart = data;
 15601  007C2A  EE20 F01E          	lfsr	2,30
 15602  007C2E  500A               	movf	TCP_InsertRxBuffer@tcbPtr,w,c
 15603  007C30  26D9               	addwf	fsr2l,f,c
 15604  007C32  500B               	movf	TCP_InsertRxBuffer@tcbPtr+1,w,c
 15605  007C34  22DA               	addwfc	fsr2h,f,c
 15606  007C36  C00C  FFDE         	movff	TCP_InsertRxBuffer@data,postinc2
 15607  007C3A  C00D  FFDD         	movff	TCP_InsertRxBuffer@data+1,postdec2
 15608                           
 15609                           ;tcpv4.c: 1372: tcbPtr->rxBufferPtr = tcbPtr->rxBufferStart;
 15610  007C3E  EE20 F01E          	lfsr	2,30
 15611  007C42  500A               	movf	TCP_InsertRxBuffer@tcbPtr,w,c
 15612  007C44  26D9               	addwf	fsr2l,f,c
 15613  007C46  500B               	movf	TCP_InsertRxBuffer@tcbPtr+1,w,c
 15614  007C48  22DA               	addwfc	fsr2h,f,c
 15615  007C4A  EE10 F020          	lfsr	1,32
 15616  007C4E  500A               	movf	TCP_InsertRxBuffer@tcbPtr,w,c
 15617  007C50  26E1               	addwf	fsr1l,f,c
 15618  007C52  500B               	movf	TCP_InsertRxBuffer@tcbPtr+1,w,c
 15619  007C54  22E2               	addwfc	fsr1h,f,c
 15620  007C56  CFDE FFE6          	movff	postinc2,postinc1
 15621  007C5A  CFDD FFE5          	movff	postdec2,postdec1
 15622                           
 15623                           ;tcpv4.c: 1373: tcbPtr->localWnd = data_len;
 15624  007C5E  EE20 F01A          	lfsr	2,26
 15625  007C62  500A               	movf	TCP_InsertRxBuffer@tcbPtr,w,c
 15626  007C64  26D9               	addwf	fsr2l,f,c
 15627  007C66  500B               	movf	TCP_InsertRxBuffer@tcbPtr+1,w,c
 15628  007C68  22DA               	addwfc	fsr2h,f,c
 15629  007C6A  C00E  FFDE         	movff	TCP_InsertRxBuffer@data_len,postinc2
 15630  007C6E  C00F  FFDD         	movff	TCP_InsertRxBuffer@data_len+1,postdec2
 15631                           
 15632                           ;tcpv4.c: 1374: tcbPtr->rxBufState = RX_BUFF_IN_USE;
 15633  007C72  EE20 F022          	lfsr	2,34
 15634  007C76  500A               	movf	TCP_InsertRxBuffer@tcbPtr,w,c
 15635  007C78  26D9               	addwf	fsr2l,f,c
 15636  007C7A  500B               	movf	TCP_InsertRxBuffer@tcbPtr+1,w,c
 15637  007C7C  22DA               	addwfc	fsr2h,f,c
 15638  007C7E  0E01               	movlw	1
 15639  007C80  6EDF               	movwf	indf2,c
 15640  007C82  0C01               	retlw	1
 15641  007C84                     __end_of_TCP_InsertRxBuffer:
 15642                           	opt stack 0
 15643                           tosu	equ	0xFFF
 15644                           tosh	equ	0xFFE
 15645                           tosl	equ	0xFFD
 15646                           pclath	equ	0xFFA
 15647                           tblptru	equ	0xFF8
 15648                           tblptrh	equ	0xFF7
 15649                           tblptrl	equ	0xFF6
 15650                           tablat	equ	0xFF5
 15651                           prodh	equ	0xFF4
 15652                           prodl	equ	0xFF3
 15653                           intcon	equ	0xFF2
 15654                           intcon2	equ	0xFF1
 15655                           indf0	equ	0xFEF
 15656                           postinc0	equ	0xFEE
 15657                           fsr0h	equ	0xFEA
 15658                           fsr0l	equ	0xFE9
 15659                           wreg	equ	0xFE8
 15660                           postinc1	equ	0xFE6
 15661                           postdec1	equ	0xFE5
 15662                           plusw1	equ	0xFE3
 15663                           fsr1h	equ	0xFE2
 15664                           fsr1l	equ	0xFE1
 15665                           indf2	equ	0xFDF
 15666                           postinc2	equ	0xFDE
 15667                           postdec2	equ	0xFDD
 15668                           plusw2	equ	0xFDB
 15669                           fsr2h	equ	0xFDA
 15670                           fsr2l	equ	0xFD9
 15671                           status	equ	0xFD8
 15672                           
 15673 ;; *************** function _TCP_GetReceivedData *****************
 15674 ;; Defined at:
 15675 ;;		line 1383 in file "../../TCPIP Library/source/tcpv4.c"
 15676 ;; Parameters:    Size  Location     Type
 15677 ;;  tcbPtr          2    9[COMRAM] PTR struct .
 15678 ;;		 -> DEMO_TCP_Client@port60TCB(55), 
 15679 ;; Auto vars:     Size  Location     Type
 15680 ;;  ret             2   15[COMRAM] int 
 15681 ;; Return value:  Size  Location     Type
 15682 ;;                  2    9[COMRAM] int 
 15683 ;; Registers used:
 15684 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15685 ;; Tracked objects:
 15686 ;;		On entry : 0/0
 15687 ;;		On exit  : 0/0
 15688 ;;		Unchanged: 0/0
 15689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15690 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15691 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15692 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15693 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15694 ;;Total ram usage:        8 bytes
 15695 ;; Hardware stack levels used:    1
 15696 ;; Hardware stack levels required when called:    4
 15697 ;; This function calls:
 15698 ;;		_TCB_Check
 15699 ;; This function is called by:
 15700 ;;		_DEMO_TCP_Client
 15701 ;; This function uses a non-reentrant model
 15702 ;;
 15703                           
 15704                           	psect	text81
 15705  007C84                     __ptext81:
 15706                           	opt stack 0
 15707  007C84                     _TCP_GetReceivedData:
 15708                           	opt stack 25
 15709                           
 15710                           ;tcpv4.c: 1385: int16_t ret = 0;
 15711                           
 15712                           ;incstack = 0
 15713  007C84  6A10               	clrf	TCP_GetReceivedData@ret,c
 15714  007C86  6A11               	clrf	TCP_GetReceivedData@ret+1,c
 15715                           
 15716                           ;tcpv4.c: 1387: if (TCB_Check(tcbPtr))
 15717  007C88  C00A  F002         	movff	TCP_GetReceivedData@tcbPtr,TCB_Check@ptr
 15718  007C8C  C00B  F003         	movff	TCP_GetReceivedData@tcbPtr+1,TCB_Check@ptr+1
 15719  007C90  EC85  F03E         	call	_TCB_Check	;wreg free
 15720  007C94  0900               	iorlw	0
 15721  007C96  E034               	bz	l10382
 15722                           
 15723                           ;tcpv4.c: 1388: {
 15724                           ;tcpv4.c: 1389: if (tcbPtr->rxBufState == RX_BUFF_IN_USE)
 15725  007C98  EE20 F022          	lfsr	2,34
 15726  007C9C  500A               	movf	TCP_GetReceivedData@tcbPtr,w,c
 15727  007C9E  26D9               	addwf	fsr2l,f,c
 15728  007CA0  500B               	movf	TCP_GetReceivedData@tcbPtr+1,w,c
 15729  007CA2  22DA               	addwfc	fsr2h,f,c
 15730  007CA4  04DE               	decf	postinc2,w,c
 15731  007CA6  E12C               	bnz	l10382
 15732                           
 15733                           ;tcpv4.c: 1390: {
 15734                           ;tcpv4.c: 1391: ret = tcbPtr->rxBufferPtr - tcbPtr->rxBufferStart;
 15735  007CA8  EE20 F01E          	lfsr	2,30
 15736  007CAC  500A               	movf	TCP_GetReceivedData@tcbPtr,w,c
 15737  007CAE  26D9               	addwf	fsr2l,f,c
 15738  007CB0  500B               	movf	TCP_GetReceivedData@tcbPtr+1,w,c
 15739  007CB2  22DA               	addwfc	fsr2h,f,c
 15740  007CB4  CFDE F00C          	movff	postinc2,??_TCP_GetReceivedData
 15741  007CB8  CFDD F00D          	movff	postdec2,??_TCP_GetReceivedData+1
 15742  007CBC  EE20 F020          	lfsr	2,32
 15743  007CC0  500A               	movf	TCP_GetReceivedData@tcbPtr,w,c
 15744  007CC2  26D9               	addwf	fsr2l,f,c
 15745  007CC4  500B               	movf	TCP_GetReceivedData@tcbPtr+1,w,c
 15746  007CC6  22DA               	addwfc	fsr2h,f,c
 15747  007CC8  CFDE F00E          	movff	postinc2,??_TCP_GetReceivedData+2
 15748  007CCC  CFDD F00F          	movff	postdec2,??_TCP_GetReceivedData+3
 15749  007CD0  500C               	movf	??_TCP_GetReceivedData,w,c
 15750  007CD2  5C0E               	subwf	??_TCP_GetReceivedData+2,w,c
 15751  007CD4  6E10               	movwf	TCP_GetReceivedData@ret,c
 15752  007CD6  500D               	movf	??_TCP_GetReceivedData+1,w,c
 15753  007CD8  580F               	subwfb	??_TCP_GetReceivedData+3,w,c
 15754  007CDA  6E11               	movwf	TCP_GetReceivedData@ret+1,c
 15755                           
 15756                           ;tcpv4.c: 1393: if (ret != 0)
 15757  007CDC  1010               	iorwf	TCP_GetReceivedData@ret,w,c
 15758  007CDE  E010               	bz	l10382
 15759                           
 15760                           ;tcpv4.c: 1394: {
 15761                           ;tcpv4.c: 1395: tcbPtr->localWnd = 0;
 15762  007CE0  EE20 F01A          	lfsr	2,26
 15763  007CE4  500A               	movf	TCP_GetReceivedData@tcbPtr,w,c
 15764  007CE6  26D9               	addwf	fsr2l,f,c
 15765  007CE8  500B               	movf	TCP_GetReceivedData@tcbPtr+1,w,c
 15766  007CEA  22DA               	addwfc	fsr2h,f,c
 15767  007CEC  6ADE               	clrf	postinc2,c
 15768  007CEE  6ADD               	clrf	postdec2,c
 15769                           
 15770                           ;tcpv4.c: 1396: tcbPtr->rxBufState = NO_BUFF;
 15771  007CF0  EE20 F022          	lfsr	2,34
 15772  007CF4  500A               	movf	TCP_GetReceivedData@tcbPtr,w,c
 15773  007CF6  26D9               	addwf	fsr2l,f,c
 15774  007CF8  500B               	movf	TCP_GetReceivedData@tcbPtr+1,w,c
 15775  007CFA  22DA               	addwfc	fsr2h,f,c
 15776  007CFC  0E00               	movlw	0
 15777  007CFE  6ADF               	clrf	indf2,c
 15778  007D00                     l10382:
 15779                           
 15780                           ;tcpv4.c: 1397: }
 15781                           ;tcpv4.c: 1398: }
 15782                           ;tcpv4.c: 1399: }
 15783                           ;tcpv4.c: 1400: return ret;
 15784  007D00  C010  F00A         	movff	TCP_GetReceivedData@ret,?_TCP_GetReceivedData
 15785  007D04  C011  F00B         	movff	TCP_GetReceivedData@ret+1,?_TCP_GetReceivedData+1
 15786  007D08  0012               	return		;funcret
 15787  007D0A                     __end_of_TCP_GetReceivedData:
 15788                           	opt stack 0
 15789                           tosu	equ	0xFFF
 15790                           tosh	equ	0xFFE
 15791                           tosl	equ	0xFFD
 15792                           pclath	equ	0xFFA
 15793                           tblptru	equ	0xFF8
 15794                           tblptrh	equ	0xFF7
 15795                           tblptrl	equ	0xFF6
 15796                           tablat	equ	0xFF5
 15797                           prodh	equ	0xFF4
 15798                           prodl	equ	0xFF3
 15799                           intcon	equ	0xFF2
 15800                           intcon2	equ	0xFF1
 15801                           indf0	equ	0xFEF
 15802                           postinc0	equ	0xFEE
 15803                           fsr0h	equ	0xFEA
 15804                           fsr0l	equ	0xFE9
 15805                           wreg	equ	0xFE8
 15806                           postinc1	equ	0xFE6
 15807                           postdec1	equ	0xFE5
 15808                           plusw1	equ	0xFE3
 15809                           fsr1h	equ	0xFE2
 15810                           fsr1l	equ	0xFE1
 15811                           indf2	equ	0xFDF
 15812                           postinc2	equ	0xFDE
 15813                           postdec2	equ	0xFDD
 15814                           plusw2	equ	0xFDB
 15815                           fsr2h	equ	0xFDA
 15816                           fsr2l	equ	0xFD9
 15817                           status	equ	0xFD8
 15818                           
 15819 ;; *************** function _TCP_Connect *****************
 15820 ;; Defined at:
 15821 ;;		line 1272 in file "../../TCPIP Library/source/tcpv4.c"
 15822 ;; Parameters:    Size  Location     Type
 15823 ;;  tcbPtr          2  116[BANK0 ] PTR struct .
 15824 ;;		 -> DEMO_TCP_Client@port60TCB(55), 
 15825 ;;  srvaddr         2  118[BANK0 ] PTR struct .
 15826 ;;		 -> remoteSocket(6), 
 15827 ;; Auto vars:     Size  Location     Type
 15828 ;;  ret             1    0        unsigned char 
 15829 ;; Return value:  Size  Location     Type
 15830 ;;                  1    wreg      unsigned char 
 15831 ;; Registers used:
 15832 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15833 ;; Tracked objects:
 15834 ;;		On entry : F/0
 15835 ;;		On exit  : 0/0
 15836 ;;		Unchanged: 0/0
 15837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15838 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15839 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15840 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15841 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15842 ;;Total ram usage:        7 bytes
 15843 ;; Hardware stack levels used:    1
 15844 ;; Hardware stack levels required when called:   12
 15845 ;; This function calls:
 15846 ;;		_TCP_FiniteStateMachine
 15847 ;;		_TCP_SocketPoll
 15848 ;; This function is called by:
 15849 ;;		_DEMO_TCP_Client
 15850 ;; This function uses a non-reentrant model
 15851 ;;
 15852                           
 15853                           	psect	text82
 15854  007430                     __ptext82:
 15855                           	opt stack 0
 15856  007430                     _TCP_Connect:
 15857                           	opt stack 17
 15858                           
 15859                           ; BSR set to: 0
 15860                           ;tcpv4.c: 1276: if (TCP_SocketPoll(tcbPtr) == SOCKET_CLOSED)
 15861                           
 15862                           ; BSR set to: 0
 15863                           
 15864                           ;incstack = 0
 15865  007430  C0D4  F00A         	movff	TCP_Connect@tcbPtr,TCP_SocketPoll@socket_ptr
 15866  007434  C0D5  F00B         	movff	TCP_Connect@tcbPtr+1,TCP_SocketPoll@socket_ptr+1
 15867  007438  ECAB  F044         	call	_TCP_SocketPoll	;wreg free
 15868  00743C  06E8               	decf	wreg,f,c
 15869  00743E  A4D8               	btfss	status,2,c
 15870  007440  0012               	return	
 15871                           
 15872                           ;tcpv4.c: 1277: {
 15873                           ;tcpv4.c: 1278: tcbPtr->destIP = srvaddr->addr.s_addr;
 15874  007442  0100               	movlb	0	; () banked
 15875  007444  EE20 F002          	lfsr	2,2
 15876  007448  51D6               	movf	TCP_Connect@srvaddr& (0+255),w,b
 15877  00744A  26D9               	addwf	fsr2l,f,c
 15878  00744C  51D7               	movf	(TCP_Connect@srvaddr+1)& (0+255),w,b
 15879  00744E  22DA               	addwfc	fsr2h,f,c
 15880  007450  EE10 F002          	lfsr	1,2
 15881  007454  51D4               	movf	TCP_Connect@tcbPtr& (0+255),w,b
 15882  007456  26E1               	addwf	fsr1l,f,c
 15883  007458  51D5               	movf	(TCP_Connect@tcbPtr+1)& (0+255),w,b
 15884  00745A  22E2               	addwfc	fsr1h,f,c
 15885  00745C  CFDE FFE6          	movff	postinc2,postinc1
 15886  007460  CFDE FFE6          	movff	postinc2,postinc1
 15887  007464  CFDE FFE6          	movff	postinc2,postinc1
 15888  007468  CFDE FFE6          	movff	postinc2,postinc1
 15889                           
 15890                           ;tcpv4.c: 1279: tcbPtr->destPort = srvaddr->port;
 15891  00746C  C0D6  FFD9         	movff	TCP_Connect@srvaddr,fsr2l
 15892  007470  C0D7  FFDA         	movff	TCP_Connect@srvaddr+1,fsr2h
 15893  007474  EE10 F006          	lfsr	1,6
 15894  007478  51D4               	movf	TCP_Connect@tcbPtr& (0+255),w,b
 15895  00747A  26E1               	addwf	fsr1l,f,c
 15896  00747C  51D5               	movf	(TCP_Connect@tcbPtr+1)& (0+255),w,b
 15897  00747E  22E2               	addwfc	fsr1h,f,c
 15898  007480  CFDE FFE6          	movff	postinc2,postinc1
 15899  007484  CFDD FFE5          	movff	postdec2,postdec1
 15900                           
 15901                           ; BSR set to: 0
 15902                           ;tcpv4.c: 1280: if(tcbPtr->localPort == 0)
 15903  007488  C0D4  FFD9         	movff	TCP_Connect@tcbPtr,fsr2l
 15904  00748C  C0D5  FFDA         	movff	TCP_Connect@tcbPtr+1,fsr2h
 15905  007490  50DE               	movf	postinc2,w,c
 15906  007492  10DE               	iorwf	postinc2,w,c
 15907  007494  E10B               	bnz	l10300
 15908                           
 15909                           ; BSR set to: 0
 15910                           ;tcpv4.c: 1281: {
 15911                           ;tcpv4.c: 1283: tcbPtr->localPort = nextAvailablePort++;
 15912  007496  C0D4  FFD9         	movff	TCP_Connect@tcbPtr,fsr2l
 15913  00749A  C0D5  FFDA         	movff	TCP_Connect@tcbPtr+1,fsr2h
 15914  00749E  C19C  FFDE         	movff	_nextAvailablePort,postinc2
 15915  0074A2  C19D  FFDD         	movff	_nextAvailablePort+1,postdec2
 15916                           
 15917                           ; BSR set to: 0
 15918  0074A6  0101               	movlb	1	; () banked
 15919  0074A8  4B9C               	infsnz	_nextAvailablePort& (0+255),f,b
 15920  0074AA  2B9D               	incf	(_nextAvailablePort+1)& (0+255),f,b
 15921  0074AC                     l10300:
 15922                           
 15923                           ;tcpv4.c: 1284: }
 15924                           ;tcpv4.c: 1286: tcbPtr->socketState = SOCKET_IN_PROGRESS;
 15925  0074AC  0100               	movlb	0	; () banked
 15926  0074AE  EE20 F036          	lfsr	2,54
 15927  0074B2  51D4               	movf	TCP_Connect@tcbPtr& (0+255),w,b
 15928  0074B4  26D9               	addwf	fsr2l,f,c
 15929  0074B6  51D5               	movf	(TCP_Connect@tcbPtr+1)& (0+255),w,b
 15930  0074B8  22DA               	addwfc	fsr2h,f,c
 15931  0074BA  0E02               	movlw	2
 15932  0074BC  6EDF               	movwf	indf2,c
 15933                           
 15934                           ; BSR set to: 0
 15935                           ;tcpv4.c: 1287: tcbPtr->localSeqno = nextSequenceNumber;
 15936  0074BE  EE20 F010          	lfsr	2,16
 15937  0074C2  51D4               	movf	TCP_Connect@tcbPtr& (0+255),w,b
 15938  0074C4  26D9               	addwf	fsr2l,f,c
 15939  0074C6  51D5               	movf	(TCP_Connect@tcbPtr+1)& (0+255),w,b
 15940  0074C8  22DA               	addwfc	fsr2h,f,c
 15941  0074CA  C22E  FFDE         	movff	_nextSequenceNumber,postinc2
 15942  0074CE  C22F  FFDE         	movff	_nextSequenceNumber+1,postinc2
 15943  0074D2  C230  FFDE         	movff	_nextSequenceNumber+2,postinc2
 15944  0074D6  C231  FFDE         	movff	_nextSequenceNumber+3,postinc2
 15945                           
 15946                           ; BSR set to: 0
 15947                           ;tcpv4.c: 1288: tcbPtr->connectionEvent = ACTIVE_OPEN;
 15948  0074DA  EE20 F02B          	lfsr	2,43
 15949  0074DE  51D4               	movf	TCP_Connect@tcbPtr& (0+255),w,b
 15950  0074E0  26D9               	addwf	fsr2l,f,c
 15951  0074E2  51D5               	movf	(TCP_Connect@tcbPtr+1)& (0+255),w,b
 15952  0074E4  22DA               	addwfc	fsr2h,f,c
 15953  0074E6  0E01               	movlw	1
 15954  0074E8  6EDF               	movwf	indf2,c
 15955                           
 15956                           ; BSR set to: 0
 15957                           ;tcpv4.c: 1290: currentTCB = tcbPtr;
 15958  0074EA  C0D4  F0FE         	movff	TCP_Connect@tcbPtr,_currentTCB
 15959  0074EE  C0D5  F0FF         	movff	TCP_Connect@tcbPtr+1,_currentTCB+1
 15960                           
 15961                           ; BSR set to: 0
 15962  0074F2  EF75  F008         	goto	_TCP_FiniteStateMachine	;wreg free
 15963  0074F6                     __end_of_TCP_Connect:
 15964                           	opt stack 0
 15965                           tosu	equ	0xFFF
 15966                           tosh	equ	0xFFE
 15967                           tosl	equ	0xFFD
 15968                           pclath	equ	0xFFA
 15969                           tblptru	equ	0xFF8
 15970                           tblptrh	equ	0xFF7
 15971                           tblptrl	equ	0xFF6
 15972                           tablat	equ	0xFF5
 15973                           prodh	equ	0xFF4
 15974                           prodl	equ	0xFF3
 15975                           intcon	equ	0xFF2
 15976                           intcon2	equ	0xFF1
 15977                           indf0	equ	0xFEF
 15978                           postinc0	equ	0xFEE
 15979                           fsr0h	equ	0xFEA
 15980                           fsr0l	equ	0xFE9
 15981                           wreg	equ	0xFE8
 15982                           postinc1	equ	0xFE6
 15983                           postdec1	equ	0xFE5
 15984                           plusw1	equ	0xFE3
 15985                           fsr1h	equ	0xFE2
 15986                           fsr1l	equ	0xFE1
 15987                           indf2	equ	0xFDF
 15988                           postinc2	equ	0xFDE
 15989                           postdec2	equ	0xFDD
 15990                           plusw2	equ	0xFDB
 15991                           fsr2h	equ	0xFDA
 15992                           fsr2l	equ	0xFD9
 15993                           status	equ	0xFD8
 15994                           
 15995 ;; *************** function _TCP_SocketPoll *****************
 15996 ;; Defined at:
 15997 ;;		line 1220 in file "../../TCPIP Library/source/tcpv4.c"
 15998 ;; Parameters:    Size  Location     Type
 15999 ;;  socket_ptr      2    9[COMRAM] PTR struct .
 16000 ;;		 -> DEMO_TCP_Client@port60TCB(55), 
 16001 ;; Auto vars:     Size  Location     Type
 16002 ;;  tmpSocketSta    1   11[COMRAM] enum E667
 16003 ;; Return value:  Size  Location     Type
 16004 ;;                  1    wreg      enum E667
 16005 ;; Registers used:
 16006 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16007 ;; Tracked objects:
 16008 ;;		On entry : D/2
 16009 ;;		On exit  : 0/0
 16010 ;;		Unchanged: 0/0
 16011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16012 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16013 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16015 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16016 ;;Total ram usage:        3 bytes
 16017 ;; Hardware stack levels used:    1
 16018 ;; Hardware stack levels required when called:    4
 16019 ;; This function calls:
 16020 ;;		_TCB_Check
 16021 ;; This function is called by:
 16022 ;;		_TCP_Connect
 16023 ;;		_TCP_Send
 16024 ;;		_DEMO_TCP_Client
 16025 ;; This function uses a non-reentrant model
 16026 ;;
 16027                           
 16028                           	psect	text83
 16029  008956                     __ptext83:
 16030                           	opt stack 0
 16031  008956                     _TCP_SocketPoll:
 16032                           	opt stack 25
 16033                           
 16034                           ;tcpv4.c: 1222: socketState_t tmpSocketState;
 16035                           ;tcpv4.c: 1224: tmpSocketState = NOT_A_SOCKET;
 16036                           
 16037                           ;incstack = 0
 16038  008956  6A0C               	clrf	TCP_SocketPoll@tmpSocketState,c
 16039                           
 16040                           ;tcpv4.c: 1226: if(TCB_Check(socket_ptr))
 16041  008958  C00A  F002         	movff	TCP_SocketPoll@socket_ptr,TCB_Check@ptr
 16042  00895C  C00B  F003         	movff	TCP_SocketPoll@socket_ptr+1,TCB_Check@ptr+1
 16043  008960  EC85  F03E         	call	_TCB_Check	;wreg free
 16044  008964  0900               	iorlw	0
 16045  008966  E008               	bz	l9898
 16046                           
 16047                           ;tcpv4.c: 1227: {
 16048                           ;tcpv4.c: 1228: tmpSocketState = socket_ptr->socketState;
 16049  008968  EE20 F036          	lfsr	2,54
 16050  00896C  500A               	movf	TCP_SocketPoll@socket_ptr,w,c
 16051  00896E  26D9               	addwf	fsr2l,f,c
 16052  008970  500B               	movf	TCP_SocketPoll@socket_ptr+1,w,c
 16053  008972  22DA               	addwfc	fsr2h,f,c
 16054  008974  50DF               	movf	indf2,w,c
 16055  008976  6E0C               	movwf	TCP_SocketPoll@tmpSocketState,c
 16056  008978                     l9898:
 16057                           
 16058                           ;tcpv4.c: 1229: }
 16059                           ;tcpv4.c: 1231: return tmpSocketState;
 16060  008978  500C               	movf	TCP_SocketPoll@tmpSocketState,w,c
 16061  00897A  0012               	return		;funcret
 16062  00897C                     __end_of_TCP_SocketPoll:
 16063                           	opt stack 0
 16064                           tosu	equ	0xFFF
 16065                           tosh	equ	0xFFE
 16066                           tosl	equ	0xFFD
 16067                           pclath	equ	0xFFA
 16068                           tblptru	equ	0xFF8
 16069                           tblptrh	equ	0xFF7
 16070                           tblptrl	equ	0xFF6
 16071                           tablat	equ	0xFF5
 16072                           prodh	equ	0xFF4
 16073                           prodl	equ	0xFF3
 16074                           intcon	equ	0xFF2
 16075                           intcon2	equ	0xFF1
 16076                           indf0	equ	0xFEF
 16077                           postinc0	equ	0xFEE
 16078                           fsr0h	equ	0xFEA
 16079                           fsr0l	equ	0xFE9
 16080                           wreg	equ	0xFE8
 16081                           postinc1	equ	0xFE6
 16082                           postdec1	equ	0xFE5
 16083                           plusw1	equ	0xFE3
 16084                           fsr1h	equ	0xFE2
 16085                           fsr1l	equ	0xFE1
 16086                           indf2	equ	0xFDF
 16087                           postinc2	equ	0xFDE
 16088                           postdec2	equ	0xFDD
 16089                           plusw2	equ	0xFDB
 16090                           fsr2h	equ	0xFDA
 16091                           fsr2l	equ	0xFD9
 16092                           status	equ	0xFD8
 16093                           
 16094 ;; *************** function _TCB_Check *****************
 16095 ;; Defined at:
 16096 ;;		line 162 in file "../../TCPIP Library/source/tcpv4.c"
 16097 ;; Parameters:    Size  Location     Type
 16098 ;;  ptr             2    1[COMRAM] PTR struct .
 16099 ;;		 -> DEMO_TCP_Client@port60TCB(55), 
 16100 ;; Auto vars:     Size  Location     Type
 16101 ;;  tcbPtr          2    7[COMRAM] PTR struct .
 16102 ;;		 -> ?_sprintf(2), ?_printf(2), main@str(32), STR_7(13), 
 16103 ;;		 -> STR_6(17), DEMO_TCP_Client@txdataPort60(80), DEMO_TCP_Client@strTmp(17), DEMO_TCP_Client@rxdataPort60(50), 
 16104 ;;		 -> DEMO_TCP_Client@port60TCB(55), Network_Read@debug_str(80), NULL(0), 
 16105 ;;  count           1    6[COMRAM] char 
 16106 ;;  ret             1    5[COMRAM] unsigned char 
 16107 ;; Return value:  Size  Location     Type
 16108 ;;                  1    wreg      unsigned char 
 16109 ;; Registers used:
 16110 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 16111 ;; Tracked objects:
 16112 ;;		On entry : 0/0
 16113 ;;		On exit  : 0/0
 16114 ;;		Unchanged: 0/0
 16115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16116 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16117 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16118 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16119 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16120 ;;Total ram usage:        8 bytes
 16121 ;; Hardware stack levels used:    1
 16122 ;; Hardware stack levels required when called:    3
 16123 ;; This function calls:
 16124 ;;		Nothing
 16125 ;; This function is called by:
 16126 ;;		_TCP_SocketInit
 16127 ;;		_TCP_SocketPoll
 16128 ;;		_TCP_SendDone
 16129 ;;		_TCP_InsertRxBuffer
 16130 ;;		_TCP_GetReceivedData
 16131 ;; This function uses a non-reentrant model
 16132 ;;
 16133                           
 16134                           	psect	text84
 16135  007D0A                     __ptext84:
 16136                           	opt stack 0
 16137  007D0A                     _TCB_Check:
 16138                           	opt stack 25
 16139                           
 16140                           ;tcpv4.c: 164: tcpTCB_t *tcbPtr;
 16141                           ;tcpv4.c: 165: bool ret = 0;
 16142                           
 16143                           ;incstack = 0
 16144  007D0A  6A06               	clrf	TCB_Check@ret,c
 16145                           
 16146                           ;tcpv4.c: 166: socklistsize_t count = 0;
 16147  007D0C  6A07               	clrf	TCB_Check@count,c
 16148                           
 16149                           ;tcpv4.c: 168: if((tcbList != (0)) && (ptr != (0)))
 16150  007D0E  0101               	movlb	1	; () banked
 16151  007D10  51A2               	movf	_tcbList& (0+255),w,b
 16152  007D12  11A3               	iorwf	(_tcbList+1)& (0+255),w,b
 16153  007D14  E03B               	bz	l9460
 16154                           
 16155                           ; BSR set to: 1
 16156  007D16  5002               	movf	TCB_Check@ptr,w,c
 16157  007D18  1003               	iorwf	TCB_Check@ptr+1,w,c
 16158  007D1A  E038               	bz	l9460
 16159                           
 16160                           ; BSR set to: 1
 16161                           ;tcpv4.c: 169: {
 16162                           ;tcpv4.c: 171: tcbPtr = tcbList;
 16163  007D1C  C1A2  F008         	movff	_tcbList,TCB_Check@tcbPtr
 16164  007D20  C1A3  F009         	movff	_tcbList+1,TCB_Check@tcbPtr+1
 16165                           
 16166                           ;tcpv4.c: 172: while((tcbPtr != (0)) && (count < tcbListSize))
 16167  007D24  D028               	goto	l9456
 16168  007D26                     l9446:
 16169                           
 16170                           ; BSR set to: 1
 16171                           ;tcpv4.c: 173: {
 16172                           ;tcpv4.c: 174: if (tcbPtr == ptr)
 16173  007D26  5002               	movf	TCB_Check@ptr,w,c
 16174  007D28  1808               	xorwf	TCB_Check@tcbPtr,w,c
 16175  007D2A  E106               	bnz	l9452
 16176  007D2C  5003               	movf	TCB_Check@ptr+1,w,c
 16177  007D2E  1809               	xorwf	TCB_Check@tcbPtr+1,w,c
 16178  007D30  E103               	bnz	l9452
 16179                           
 16180                           ; BSR set to: 1
 16181                           ;tcpv4.c: 175: {
 16182                           ;tcpv4.c: 176: ret = 1;
 16183  007D32  0E01               	movlw	1
 16184  007D34  6E06               	movwf	TCB_Check@ret,c
 16185                           
 16186                           ;tcpv4.c: 177: break;
 16187  007D36  D02A               	goto	l9460
 16188  007D38                     l9452:
 16189                           
 16190                           ; BSR set to: 1
 16191                           ;tcpv4.c: 179: else
 16192                           ;tcpv4.c: 180: {
 16193                           ;tcpv4.c: 181: tcbPtr = tcbPtr->nextTCB;
 16194  007D38  0E2C               	movlw	44
 16195  007D3A  2408               	addwf	TCB_Check@tcbPtr,w,c
 16196  007D3C  6E04               	movwf	??_TCB_Check& (0+255),c
 16197  007D3E  0E00               	movlw	0
 16198  007D40  2009               	addwfc	TCB_Check@tcbPtr+1,w,c
 16199  007D42  6E05               	movwf	(??_TCB_Check+1)& (0+255),c
 16200  007D44  C004  FFF6         	movff	??_TCB_Check,tblptrl
 16201  007D48  C005  FFF7         	movff	??_TCB_Check+1,tblptrh
 16202  007D4C  0E00               	movlw	low (__smallconst shr (0+16))
 16203  007D4E  6EF8               	movwf	tblptru,c
 16204  007D50  0E0F               	movlw	(high __ramtop+-1)
 16205  007D52  64F7               	cpfsgt	tblptrh,c
 16206  007D54  D007               	bra	u14517
 16207  007D56  0009               	tblrd		*+
 16208  007D58  CFF5 F008          	movff	tablat,TCB_Check@tcbPtr
 16209  007D5C  0009               	tblrd		*+
 16210  007D5E  CFF5 F009          	movff	tablat,TCB_Check@tcbPtr+1
 16211  007D62  D008               	bra	u14510
 16212  007D64                     u14517:
 16213  007D64  CFF6 FFE9          	movff	tblptrl,fsr0l
 16214  007D68  CFF7 FFEA          	movff	tblptrh,fsr0h
 16215  007D6C  CFEE F008          	movff	postinc0,TCB_Check@tcbPtr
 16216  007D70  CFEE F009          	movff	postinc0,TCB_Check@tcbPtr+1
 16217  007D74                     u14510:
 16218                           
 16219                           ;tcpv4.c: 182: count ++;
 16220  007D74  2A07               	incf	TCB_Check@count,f,c
 16221  007D76                     l9456:
 16222  007D76  5008               	movf	TCB_Check@tcbPtr,w,c
 16223  007D78  1009               	iorwf	TCB_Check@tcbPtr+1,w,c
 16224  007D7A  E008               	bz	l9460
 16225  007D7C  5007               	movf	TCB_Check@count,w,c
 16226  007D7E  0A80               	xorlw	128
 16227  007D80  6E04               	movwf	??_TCB_Check& (0+255),c
 16228  007D82  0101               	movlb	1	; () banked
 16229  007D84  51A7               	movf	_tcbListSize& (0+255),w,b
 16230  007D86  0A80               	xorlw	128
 16231  007D88  5C04               	subwf	??_TCB_Check& (0+255),w,c
 16232  007D8A  E3CD               	bnc	l9446
 16233  007D8C                     l9460:
 16234                           
 16235                           ;tcpv4.c: 183: }
 16236                           ;tcpv4.c: 184: }
 16237                           ;tcpv4.c: 185: }
 16238                           ;tcpv4.c: 186: return ret;
 16239  007D8C  5006               	movf	TCB_Check@ret,w,c
 16240  007D8E  0012               	return		;funcret
 16241  007D90                     __end_of_TCB_Check:
 16242                           	opt stack 0
 16243                           tosu	equ	0xFFF
 16244                           tosh	equ	0xFFE
 16245                           tosl	equ	0xFFD
 16246                           pclath	equ	0xFFA
 16247                           tblptru	equ	0xFF8
 16248                           tblptrh	equ	0xFF7
 16249                           tblptrl	equ	0xFF6
 16250                           tablat	equ	0xFF5
 16251                           prodh	equ	0xFF4
 16252                           prodl	equ	0xFF3
 16253                           intcon	equ	0xFF2
 16254                           intcon2	equ	0xFF1
 16255                           indf0	equ	0xFEF
 16256                           postinc0	equ	0xFEE
 16257                           fsr0h	equ	0xFEA
 16258                           fsr0l	equ	0xFE9
 16259                           wreg	equ	0xFE8
 16260                           postinc1	equ	0xFE6
 16261                           postdec1	equ	0xFE5
 16262                           plusw1	equ	0xFE3
 16263                           fsr1h	equ	0xFE2
 16264                           fsr1l	equ	0xFE1
 16265                           indf2	equ	0xFDF
 16266                           postinc2	equ	0xFDE
 16267                           postdec2	equ	0xFDD
 16268                           plusw2	equ	0xFDB
 16269                           fsr2h	equ	0xFDA
 16270                           fsr2l	equ	0xFD9
 16271                           status	equ	0xFD8
 16272                           
 16273 ;; *************** function _TCP_FiniteStateMachine *****************
 16274 ;; Defined at:
 16275 ;;		line 602 in file "../../TCPIP Library/source/tcpv4.c"
 16276 ;; Parameters:    Size  Location     Type
 16277 ;;		None
 16278 ;; Auto vars:     Size  Location     Type
 16279 ;;  notAckBytes     2  112[BANK0 ] unsigned int 
 16280 ;;  nextState       1  115[BANK0 ] enum E638
 16281 ;;  event           1  114[BANK0 ] enum E651
 16282 ;;  ret             1  111[BANK0 ] unsigned char 
 16283 ;; Return value:  Size  Location     Type
 16284 ;;                  1    wreg      unsigned char 
 16285 ;; Registers used:
 16286 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16287 ;; Tracked objects:
 16288 ;;		On entry : 0/0
 16289 ;;		On exit  : F/0
 16290 ;;		Unchanged: 0/0
 16291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16293 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16294 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16295 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16296 ;;Total ram usage:       17 bytes
 16297 ;; Hardware stack levels used:    1
 16298 ;; Hardware stack levels required when called:   11
 16299 ;; This function calls:
 16300 ;;		_TCB_Reset
 16301 ;;		_TCP_PayloadSave
 16302 ;;		_TCP_Snd
 16303 ;; This function is called by:
 16304 ;;		_TCP_Recv
 16305 ;;		_TCP_Connect
 16306 ;;		_TCP_Update
 16307 ;; This function uses a non-reentrant model
 16308 ;;
 16309                           
 16310                           	psect	text85
 16311  0010EA                     __ptext85:
 16312                           	opt stack 0
 16313  0010EA                     _TCP_FiniteStateMachine:
 16314                           	opt stack 17
 16315                           
 16316                           ;tcpv4.c: 604: uint16_t notAckBytes;
 16317                           ;tcpv4.c: 605: bool ret = 0;
 16318                           
 16319                           ;incstack = 0
 16320  0010EA  0100               	movlb	0	; () banked
 16321  0010EC  6BCF               	clrf	TCP_FiniteStateMachine@ret& (0+255),b
 16322                           
 16323                           ; BSR set to: 0
 16324                           ;tcpv4.c: 607: tcp_fsm_states_t nextState = currentTCB->fsmState;
 16325  0010EE  0E2A               	movlw	42
 16326  0010F0  25FE               	addwf	_currentTCB& (0+255),w,b
 16327  0010F2  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 16328  0010F4  0E00               	movlw	0
 16329  0010F6  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16330  0010F8  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16331  0010FA  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 16332  0010FE  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 16333  001102  0E00               	movlw	low (__smallconst shr (0+16))
 16334  001104  6EF8               	movwf	tblptru,c
 16335  001106  0E0F               	movlw	(high __ramtop+-1)
 16336  001108  64F7               	cpfsgt	tblptrh,c
 16337  00110A  D003               	bra	u12237
 16338  00110C  0008               	tblrd		*
 16339  00110E  50F5               	movf	tablat,w,c
 16340  001110  D005               	bra	u12230
 16341  001112                     u12237:
 16342  001112  CFF6 FFE9          	movff	tblptrl,fsr0l
 16343  001116  CFF7 FFEA          	movff	tblptrh,fsr0h
 16344  00111A  50EF               	movf	indf0,w,c
 16345  00111C                     u12230:
 16346  00111C  0100               	movlb	0	; () banked
 16347  00111E  6FD3               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 16348                           
 16349                           ;tcpv4.c: 608: tcpEvent_t event = currentTCB->connectionEvent;
 16350  001120  0E2B               	movlw	43
 16351  001122  25FE               	addwf	_currentTCB& (0+255),w,b
 16352  001124  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 16353  001126  0E00               	movlw	0
 16354  001128  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16355  00112A  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16356  00112C  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 16357  001130  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 16358  001134  0E00               	movlw	low (__smallconst shr (0+16))
 16359  001136  6EF8               	movwf	tblptru,c
 16360  001138  0E0F               	movlw	(high __ramtop+-1)
 16361  00113A  64F7               	cpfsgt	tblptrh,c
 16362  00113C  D003               	bra	u12247
 16363  00113E  0008               	tblrd		*
 16364  001140  50F5               	movf	tablat,w,c
 16365  001142  D005               	bra	u12240
 16366  001144                     u12247:
 16367  001144  CFF6 FFE9          	movff	tblptrl,fsr0l
 16368  001148  CFF7 FFEA          	movff	tblptrh,fsr0h
 16369  00114C  50EF               	movf	indf0,w,c
 16370  00114E                     u12240:
 16371  00114E  0100               	movlb	0	; () banked
 16372  001150  6FD2               	movwf	TCP_FiniteStateMachine@event& (0+255),b
 16373                           
 16374                           ;tcpv4.c: 610: switch (currentTCB->fsmState)
 16375  001152  EFC0  F01C         	goto	l9170
 16376  001156                     l8832:
 16377                           
 16378                           ; BSR set to: 0
 16379                           ;tcpv4.c: 616: ;
 16380                           ;tcpv4.c: 619: currentTCB->destIP = receivedRemoteAddress;
 16381  001156  0E02               	movlw	2
 16382  001158  25FE               	addwf	_currentTCB& (0+255),w,b
 16383  00115A  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 16384  00115C  0E00               	movlw	0
 16385  00115E  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16386  001160  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16387  001162  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 16388  001166  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 16389  00116A  0E00               	movlw	low (__smallconst shr (0+16))
 16390  00116C  6EF8               	movwf	tblptru,c
 16391  00116E  0E0F               	movlw	(high __ramtop+-1)
 16392  001170  64F7               	cpfsgt	tblptrh,c
 16393  001172  D00D               	bra	u12257
 16394  001174  C196  FFF5         	movff	_receivedRemoteAddress,tablat
 16395  001178  000D               	tblwt		*+
 16396  00117A  C197  FFF5         	movff	_receivedRemoteAddress+1,tablat
 16397  00117E  000D               	tblwt		*+
 16398  001180  C198  FFF5         	movff	_receivedRemoteAddress+2,tablat
 16399  001184  000D               	tblwt		*+
 16400  001186  C199  FFF5         	movff	_receivedRemoteAddress+3,tablat
 16401  00118A  000C               	tblwt		*
 16402  00118C  D00C               	bra	u12250
 16403  00118E                     u12257:
 16404  00118E  CFF6 FFE9          	movff	tblptrl,fsr0l
 16405  001192  CFF7 FFEA          	movff	tblptrh,fsr0h
 16406  001196  C196  FFEE         	movff	_receivedRemoteAddress,postinc0
 16407  00119A  C197  FFEE         	movff	_receivedRemoteAddress+1,postinc0
 16408  00119E  C198  FFEE         	movff	_receivedRemoteAddress+2,postinc0
 16409  0011A2  C199  FFEF         	movff	_receivedRemoteAddress+3,indf0
 16410  0011A6                     u12250:
 16411                           
 16412                           ;tcpv4.c: 620: currentTCB->destPort = tcpHeader.sourcePort;
 16413  0011A6  0E06               	movlw	6
 16414  0011A8  0100               	movlb	0	; () banked
 16415  0011AA  25FE               	addwf	_currentTCB& (0+255),w,b
 16416  0011AC  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 16417  0011AE  0E00               	movlw	0
 16418  0011B0  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16419  0011B2  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16420  0011B4  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 16421  0011B8  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 16422  0011BC  0E00               	movlw	low (__smallconst shr (0+16))
 16423  0011BE  6EF8               	movwf	tblptru,c
 16424  0011C0  0E0F               	movlw	(high __ramtop+-1)
 16425  0011C2  64F7               	cpfsgt	tblptrh,c
 16426  0011C4  D007               	bra	u12267
 16427  0011C6  C1BC  FFF5         	movff	_tcpHeader,tablat
 16428  0011CA  000D               	tblwt		*+
 16429  0011CC  C1BD  FFF5         	movff	_tcpHeader+1,tablat
 16430  0011D0  000C               	tblwt		*
 16431  0011D2  D008               	bra	u12260
 16432  0011D4                     u12267:
 16433  0011D4  CFF6 FFE9          	movff	tblptrl,fsr0l
 16434  0011D8  CFF7 FFEA          	movff	tblptrh,fsr0h
 16435  0011DC  C1BC  FFEE         	movff	_tcpHeader,postinc0
 16436  0011E0  C1BD  FFEF         	movff	_tcpHeader+1,indf0
 16437  0011E4                     u12260:
 16438                           
 16439                           ;tcpv4.c: 623: currentTCB->localLastAck = 0;
 16440  0011E4  0E14               	movlw	20
 16441  0011E6  0100               	movlb	0	; () banked
 16442  0011E8  25FE               	addwf	_currentTCB& (0+255),w,b
 16443  0011EA  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 16444  0011EC  0E00               	movlw	0
 16445  0011EE  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16446  0011F0  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16447  0011F2  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 16448  0011F6  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 16449  0011FA  0E00               	movlw	low (__smallconst shr (0+16))
 16450  0011FC  6EF8               	movwf	tblptru,c
 16451  0011FE  0E0F               	movlw	(high __ramtop+-1)
 16452  001200  64F7               	cpfsgt	tblptrh,c
 16453  001202  D009               	bra	u12277
 16454  001204  6AF5               	clrf	tablat,c
 16455  001206  000D               	tblwt		*+
 16456  001208  6AF5               	clrf	tablat,c
 16457  00120A  000D               	tblwt		*+
 16458  00120C  6AF5               	clrf	tablat,c
 16459  00120E  000D               	tblwt		*+
 16460  001210  6AF5               	clrf	tablat,c
 16461  001212  000C               	tblwt		*
 16462  001214  D008               	bra	u12270
 16463  001216                     u12277:
 16464  001216  CFF6 FFE9          	movff	tblptrl,fsr0l
 16465  00121A  CFF7 FFEA          	movff	tblptrh,fsr0h
 16466  00121E  6AEE               	clrf	postinc0,c
 16467  001220  6AEE               	clrf	postinc0,c
 16468  001222  6AEE               	clrf	postinc0,c
 16469  001224  6AEF               	clrf	indf0,c
 16470  001226                     u12270:
 16471                           
 16472                           ;tcpv4.c: 625: currentTCB->remoteSeqno = tcpHeader.sequenceNumber;
 16473  001226  0E08               	movlw	8
 16474  001228  0100               	movlb	0	; () banked
 16475  00122A  25FE               	addwf	_currentTCB& (0+255),w,b
 16476  00122C  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 16477  00122E  0E00               	movlw	0
 16478  001230  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16479  001232  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16480  001234  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 16481  001238  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 16482  00123C  0E00               	movlw	low (__smallconst shr (0+16))
 16483  00123E  6EF8               	movwf	tblptru,c
 16484  001240  0E0F               	movlw	(high __ramtop+-1)
 16485  001242  64F7               	cpfsgt	tblptrh,c
 16486  001244  D00D               	bra	u12287
 16487  001246  C1C0  FFF5         	movff	_tcpHeader+4,tablat
 16488  00124A  000D               	tblwt		*+
 16489  00124C  C1C1  FFF5         	movff	_tcpHeader+5,tablat
 16490  001250  000D               	tblwt		*+
 16491  001252  C1C2  FFF5         	movff	_tcpHeader+6,tablat
 16492  001256  000D               	tblwt		*+
 16493  001258  C1C3  FFF5         	movff	_tcpHeader+7,tablat
 16494  00125C  000C               	tblwt		*
 16495  00125E  D00C               	bra	u12280
 16496  001260                     u12287:
 16497  001260  CFF6 FFE9          	movff	tblptrl,fsr0l
 16498  001264  CFF7 FFEA          	movff	tblptrh,fsr0h
 16499  001268  C1C0  FFEE         	movff	_tcpHeader+4,postinc0
 16500  00126C  C1C1  FFEE         	movff	_tcpHeader+5,postinc0
 16501  001270  C1C2  FFEE         	movff	_tcpHeader+6,postinc0
 16502  001274  C1C3  FFEF         	movff	_tcpHeader+7,indf0
 16503  001278                     u12280:
 16504                           
 16505                           ;tcpv4.c: 626: currentTCB->remoteAck = currentTCB->remoteSeqno + 1;
 16506  001278  0E08               	movlw	8
 16507  00127A  0100               	movlb	0	; () banked
 16508  00127C  25FE               	addwf	_currentTCB& (0+255),w,b
 16509  00127E  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 16510  001280  0E00               	movlw	0
 16511  001282  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16512  001284  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16513  001286  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 16514  00128A  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 16515  00128E  0E00               	movlw	low (__smallconst shr (0+16))
 16516  001290  6EF8               	movwf	tblptru,c
 16517  001292  0E0F               	movlw	(high __ramtop+-1)
 16518  001294  64F7               	cpfsgt	tblptrh,c
 16519  001296  D00D               	bra	u12297
 16520  001298  0009               	tblrd		*+
 16521  00129A  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 16522  00129E  0009               	tblrd		*+
 16523  0012A0  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 16524  0012A4  0009               	tblrd		*+
 16525  0012A6  CFF5 F0C7          	movff	tablat,??_TCP_FiniteStateMachine+4
 16526  0012AA  0009               	tblrd		*+
 16527  0012AC  CFF5 F0C8          	movff	tablat,??_TCP_FiniteStateMachine+5
 16528  0012B0  D00C               	bra	u12290
 16529  0012B2                     u12297:
 16530  0012B2  CFF6 FFE9          	movff	tblptrl,fsr0l
 16531  0012B6  CFF7 FFEA          	movff	tblptrh,fsr0h
 16532  0012BA  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 16533  0012BE  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 16534  0012C2  CFEE F0C7          	movff	postinc0,??_TCP_FiniteStateMachine+4
 16535  0012C6  CFEE F0C8          	movff	postinc0,??_TCP_FiniteStateMachine+5
 16536  0012CA                     u12290:
 16537  0012CA  0E01               	movlw	1
 16538  0012CC  0100               	movlb	0	; () banked
 16539  0012CE  25C5               	addwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 16540  0012D0  6FC9               	movwf	(??_TCP_FiniteStateMachine+6)& (0+255),b
 16541  0012D2  0E00               	movlw	0
 16542  0012D4  21C6               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 16543  0012D6  6FCA               	movwf	(??_TCP_FiniteStateMachine+7)& (0+255),b
 16544  0012D8  0E00               	movlw	0
 16545  0012DA  21C7               	addwfc	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 16546  0012DC  6FCB               	movwf	(??_TCP_FiniteStateMachine+8)& (0+255),b
 16547  0012DE  0E00               	movlw	0
 16548  0012E0  21C8               	addwfc	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 16549  0012E2  6FCC               	movwf	(??_TCP_FiniteStateMachine+9)& (0+255),b
 16550  0012E4  0E0C               	movlw	12
 16551  0012E6  25FE               	addwf	_currentTCB& (0+255),w,b
 16552  0012E8  6FCD               	movwf	(??_TCP_FiniteStateMachine+10)& (0+255),b
 16553  0012EA  0E00               	movlw	0
 16554  0012EC  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16555  0012EE  6FCE               	movwf	(??_TCP_FiniteStateMachine+11)& (0+255),b
 16556  0012F0  C0CD  FFF6         	movff	??_TCP_FiniteStateMachine+10,tblptrl
 16557  0012F4  C0CE  FFF7         	movff	??_TCP_FiniteStateMachine+11,tblptrh
 16558  0012F8  0E00               	movlw	low (__smallconst shr (0+16))
 16559  0012FA  6EF8               	movwf	tblptru,c
 16560  0012FC  0E0F               	movlw	(high __ramtop+-1)
 16561  0012FE  64F7               	cpfsgt	tblptrh,c
 16562  001300  D00D               	bra	u12307
 16563  001302  C0C9  FFF5         	movff	??_TCP_FiniteStateMachine+6,tablat
 16564  001306  000D               	tblwt		*+
 16565  001308  C0CA  FFF5         	movff	??_TCP_FiniteStateMachine+7,tablat
 16566  00130C  000D               	tblwt		*+
 16567  00130E  C0CB  FFF5         	movff	??_TCP_FiniteStateMachine+8,tablat
 16568  001312  000D               	tblwt		*+
 16569  001314  C0CC  FFF5         	movff	??_TCP_FiniteStateMachine+9,tablat
 16570  001318  000C               	tblwt		*
 16571  00131A  D00C               	bra	u12300
 16572  00131C                     u12307:
 16573  00131C  CFF6 FFE9          	movff	tblptrl,fsr0l
 16574  001320  CFF7 FFEA          	movff	tblptrh,fsr0h
 16575  001324  C0C9  FFEE         	movff	??_TCP_FiniteStateMachine+6,postinc0
 16576  001328  C0CA  FFEE         	movff	??_TCP_FiniteStateMachine+7,postinc0
 16577  00132C  C0CB  FFEE         	movff	??_TCP_FiniteStateMachine+8,postinc0
 16578  001330  C0CC  FFEF         	movff	??_TCP_FiniteStateMachine+9,indf0
 16579  001334                     u12300:
 16580                           
 16581                           ;tcpv4.c: 629: currentTCB->remoteWnd = ((((uint16_t)tcpHeader.windowSize & (uint16_t)0xF
      +                          F00) >> 8) | (((uint16_t)tcpHeader.windowSize & (uint16_t)0x00FF) << 8));
 16582  001334  0101               	movlb	1	; () banked
 16583  001336  51CA               	movf	(_tcpHeader+14)& (0+255),w,b
 16584  001338  0100               	movlb	0	; () banked
 16585  00133A  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16586  00133C  6BC3               	clrf	??_TCP_FiniteStateMachine& (0+255),b
 16587  00133E  EE21  F0CA         	lfsr	2,_tcpHeader+14
 16588  001342  CFDE F0C5          	movff	postinc2,??_TCP_FiniteStateMachine+2
 16589  001346  CFDD F0C6          	movff	postdec2,??_TCP_FiniteStateMachine+3
 16590  00134A  C0C6  F0C5         	movff	??_TCP_FiniteStateMachine+3,??_TCP_FiniteStateMachine+2
 16591  00134E  6BC6               	clrf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 16592  001350  6BC6               	clrf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 16593  001352  51C3               	movf	??_TCP_FiniteStateMachine& (0+255),w,b
 16594  001354  13C5               	iorwf	(??_TCP_FiniteStateMachine+2)& (0+255),f,b
 16595  001356  51C4               	movf	(??_TCP_FiniteStateMachine+1)& (0+255),w,b
 16596  001358  13C6               	iorwf	(??_TCP_FiniteStateMachine+3)& (0+255),f,b
 16597  00135A  0E18               	movlw	24
 16598  00135C  25FE               	addwf	_currentTCB& (0+255),w,b
 16599  00135E  6FC7               	movwf	(??_TCP_FiniteStateMachine+4)& (0+255),b
 16600  001360  0E00               	movlw	0
 16601  001362  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16602  001364  6FC8               	movwf	(??_TCP_FiniteStateMachine+5)& (0+255),b
 16603  001366  C0C7  FFF6         	movff	??_TCP_FiniteStateMachine+4,tblptrl
 16604  00136A  C0C8  FFF7         	movff	??_TCP_FiniteStateMachine+5,tblptrh
 16605  00136E  0E00               	movlw	low (__smallconst shr (0+16))
 16606  001370  6EF8               	movwf	tblptru,c
 16607  001372  0E0F               	movlw	(high __ramtop+-1)
 16608  001374  64F7               	cpfsgt	tblptrh,c
 16609  001376  D007               	bra	u12317
 16610  001378  C0C5  FFF5         	movff	??_TCP_FiniteStateMachine+2,tablat
 16611  00137C  000D               	tblwt		*+
 16612  00137E  C0C6  FFF5         	movff	??_TCP_FiniteStateMachine+3,tablat
 16613  001382  000C               	tblwt		*
 16614  001384  D008               	bra	u12310
 16615  001386                     u12317:
 16616  001386  CFF6 FFE9          	movff	tblptrl,fsr0l
 16617  00138A  CFF7 FFEA          	movff	tblptrh,fsr0h
 16618  00138E  C0C5  FFEE         	movff	??_TCP_FiniteStateMachine+2,postinc0
 16619  001392  C0C6  FFEF         	movff	??_TCP_FiniteStateMachine+3,indf0
 16620  001396                     u12310:
 16621                           
 16622                           ;tcpv4.c: 630: currentTCB->mss = tcpMss;
 16623  001396  0E1C               	movlw	28
 16624  001398  0100               	movlb	0	; () banked
 16625  00139A  25FE               	addwf	_currentTCB& (0+255),w,b
 16626  00139C  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 16627  00139E  0E00               	movlw	0
 16628  0013A0  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16629  0013A2  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16630  0013A4  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 16631  0013A8  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 16632  0013AC  0E00               	movlw	low (__smallconst shr (0+16))
 16633  0013AE  6EF8               	movwf	tblptru,c
 16634  0013B0  0E0F               	movlw	(high __ramtop+-1)
 16635  0013B2  64F7               	cpfsgt	tblptrh,c
 16636  0013B4  D007               	bra	u12327
 16637  0013B6  C1A4  FFF5         	movff	_tcpMss,tablat
 16638  0013BA  000D               	tblwt		*+
 16639  0013BC  C1A5  FFF5         	movff	_tcpMss+1,tablat
 16640  0013C0  000C               	tblwt		*
 16641  0013C2  D008               	bra	u12320
 16642  0013C4                     u12327:
 16643  0013C4  CFF6 FFE9          	movff	tblptrl,fsr0l
 16644  0013C8  CFF7 FFEA          	movff	tblptrh,fsr0h
 16645  0013CC  C1A4  FFEE         	movff	_tcpMss,postinc0
 16646  0013D0  C1A5  FFEF         	movff	_tcpMss+1,indf0
 16647  0013D4                     u12320:
 16648                           
 16649                           ;tcpv4.c: 633: currentTCB->flags = 0x02U | 0x10U;
 16650  0013D4  0E35               	movlw	53
 16651  0013D6  0100               	movlb	0	; () banked
 16652  0013D8  25FE               	addwf	_currentTCB& (0+255),w,b
 16653  0013DA  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 16654  0013DC  0E00               	movlw	0
 16655  0013DE  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16656  0013E0  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16657  0013E2  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 16658  0013E6  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 16659  0013EA  0E00               	movlw	low (__smallconst shr (0+16))
 16660  0013EC  6EF8               	movwf	tblptru,c
 16661  0013EE  0E0F               	movlw	(high __ramtop+-1)
 16662  0013F0  64F7               	cpfsgt	tblptrh,c
 16663  0013F2  D004               	bra	u12337
 16664  0013F4  0E12               	movlw	18
 16665  0013F6  6EF5               	movwf	tablat,c
 16666  0013F8  000C               	tblwt		*
 16667  0013FA  D006               	bra	u12330
 16668  0013FC                     u12337:
 16669  0013FC  CFF6 FFE9          	movff	tblptrl,fsr0l
 16670  001400  CFF7 FFEA          	movff	tblptrh,fsr0h
 16671  001404  0E12               	movlw	18
 16672  001406  6EEF               	movwf	indf0,c
 16673  001408                     u12330:
 16674                           
 16675                           ;tcpv4.c: 634: currentTCB->timeout = ((unsigned long)1*2);
 16676  001408  0E30               	movlw	48
 16677  00140A  0100               	movlb	0	; () banked
 16678  00140C  25FE               	addwf	_currentTCB& (0+255),w,b
 16679  00140E  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 16680  001410  0E00               	movlw	0
 16681  001412  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16682  001414  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16683  001416  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 16684  00141A  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 16685  00141E  0E00               	movlw	low (__smallconst shr (0+16))
 16686  001420  6EF8               	movwf	tblptru,c
 16687  001422  0E0F               	movlw	(high __ramtop+-1)
 16688  001424  64F7               	cpfsgt	tblptrh,c
 16689  001426  D006               	bra	u12347
 16690  001428  0E02               	movlw	2
 16691  00142A  6EF5               	movwf	tablat,c
 16692  00142C  000D               	tblwt		*+
 16693  00142E  6AF5               	clrf	tablat,c
 16694  001430  000C               	tblwt		*
 16695  001432  D007               	bra	u12340
 16696  001434                     u12347:
 16697  001434  CFF6 FFE9          	movff	tblptrl,fsr0l
 16698  001438  CFF7 FFEA          	movff	tblptrh,fsr0h
 16699  00143C  0E02               	movlw	2
 16700  00143E  6EEE               	movwf	postinc0,c
 16701  001440  6AEF               	clrf	indf0,c
 16702  001442                     u12340:
 16703                           
 16704                           ;tcpv4.c: 635: currentTCB->timeoutReloadValue = ((unsigned long)1*2);
 16705  001442  0E32               	movlw	50
 16706  001444  0100               	movlb	0	; () banked
 16707  001446  25FE               	addwf	_currentTCB& (0+255),w,b
 16708  001448  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 16709  00144A  0E00               	movlw	0
 16710  00144C  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16711  00144E  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16712  001450  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 16713  001454  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 16714  001458  0E00               	movlw	low (__smallconst shr (0+16))
 16715  00145A  6EF8               	movwf	tblptru,c
 16716  00145C  0E0F               	movlw	(high __ramtop+-1)
 16717  00145E  64F7               	cpfsgt	tblptrh,c
 16718  001460  D006               	bra	u12357
 16719  001462  0E02               	movlw	2
 16720  001464  6EF5               	movwf	tablat,c
 16721  001466  000D               	tblwt		*+
 16722  001468  6AF5               	clrf	tablat,c
 16723  00146A  000C               	tblwt		*
 16724  00146C  D007               	bra	u12350
 16725  00146E                     u12357:
 16726  00146E  CFF6 FFE9          	movff	tblptrl,fsr0l
 16727  001472  CFF7 FFEA          	movff	tblptrh,fsr0h
 16728  001476  0E02               	movlw	2
 16729  001478  6EEE               	movwf	postinc0,c
 16730  00147A  6AEF               	clrf	indf0,c
 16731  00147C                     u12350:
 16732                           
 16733                           ;tcpv4.c: 636: currentTCB->timeoutsCount = (3u);
 16734  00147C  0E34               	movlw	52
 16735  00147E  0100               	movlb	0	; () banked
 16736  001480  25FE               	addwf	_currentTCB& (0+255),w,b
 16737  001482  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 16738  001484  0E00               	movlw	0
 16739  001486  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16740  001488  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16741  00148A  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 16742  00148E  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 16743  001492  0E00               	movlw	low (__smallconst shr (0+16))
 16744  001494  6EF8               	movwf	tblptru,c
 16745  001496  0E0F               	movlw	(high __ramtop+-1)
 16746  001498  64F7               	cpfsgt	tblptrh,c
 16747  00149A  D004               	bra	u12367
 16748  00149C  0E03               	movlw	3
 16749  00149E  6EF5               	movwf	tablat,c
 16750  0014A0  000C               	tblwt		*
 16751  0014A2  D006               	bra	u12360
 16752  0014A4                     u12367:
 16753  0014A4  CFF6 FFE9          	movff	tblptrl,fsr0l
 16754  0014A8  CFF7 FFEA          	movff	tblptrh,fsr0h
 16755  0014AC  0E03               	movlw	3
 16756  0014AE  6EEF               	movwf	indf0,c
 16757  0014B0                     u12360:
 16758  0014B0                     l8846:
 16759                           
 16760                           ;tcpv4.c: 638: TCP_Snd(currentTCB);
 16761  0014B0  C0FE  F058         	movff	_currentTCB,TCP_Snd@tcbPtr
 16762  0014B4  C0FF  F059         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 16763  0014B8  EC31  F01D         	call	_TCP_Snd	;wreg free
 16764                           
 16765                           ; BSR set to: 0
 16766                           ;tcpv4.c: 639: nextState = SYN_RECEIVED;
 16767  0014BC  0E03               	movlw	3
 16768  0014BE  EFB7  F01A         	goto	L14
 16769  0014C2                     l1293:
 16770                           
 16771                           ;tcpv4.c: 642: ;
 16772                           ;tcpv4.c: 643: nextState = CLOSE;
 16773  0014C2  0100               	movlb	0	; () banked
 16774  0014C4  6BD3               	clrf	TCP_FiniteStateMachine@nextState& (0+255),b
 16775                           
 16776                           ; BSR set to: 0
 16777                           ;tcpv4.c: 644: TCB_Reset(currentTCB);
 16778  0014C6  C0FE  F002         	movff	_currentTCB,TCB_Reset@tcbPtr
 16779  0014CA  C0FF  F003         	movff	_currentTCB+1,TCB_Reset@tcbPtr+1
 16780  0014CE  EC4C  F031         	call	_TCB_Reset	;wreg free
 16781                           
 16782                           ;tcpv4.c: 645: break;
 16783  0014D2  EFFA  F01C         	goto	l9172
 16784  0014D6                     l8854:
 16785  0014D6  0100               	movlb	0	; () banked
 16786  0014D8  51D2               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 16787                           
 16788                           ; Switch size 1, requested type "speed"
 16789                           ; Number of cases is 2, Range of values is 0 to 3
 16790                           ; switch strategies available:
 16791                           ; Name         Instructions Cycles
 16792                           ; simple_byte            7     4 (average)
 16793                           ;	Chosen strategy is simple_byte
 16794  0014DA  E0F3               	bz	l1293
 16795  0014DC  0A03               	xorlw	3	; case 3
 16796  0014DE  E101 D63A          	bz	l8832
 16797                           
 16798                           ;tcpv4.c: 650: break;
 16799  0014E2  EFFA  F01C         	goto	l9172
 16800  0014E6                     l8856:
 16801                           
 16802                           ; BSR set to: 0
 16803                           ;tcpv4.c: 655: ;
 16804                           ;tcpv4.c: 657: currentTCB->remoteSeqno = tcpHeader.sequenceNumber;
 16805  0014E6  0E08               	movlw	8
 16806  0014E8  25FE               	addwf	_currentTCB& (0+255),w,b
 16807  0014EA  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 16808  0014EC  0E00               	movlw	0
 16809  0014EE  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16810  0014F0  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16811  0014F2  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 16812  0014F6  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 16813  0014FA  0E00               	movlw	low (__smallconst shr (0+16))
 16814  0014FC  6EF8               	movwf	tblptru,c
 16815  0014FE  0E0F               	movlw	(high __ramtop+-1)
 16816  001500  64F7               	cpfsgt	tblptrh,c
 16817  001502  D00D               	bra	u12377
 16818  001504  C1C0  FFF5         	movff	_tcpHeader+4,tablat
 16819  001508  000D               	tblwt		*+
 16820  00150A  C1C1  FFF5         	movff	_tcpHeader+5,tablat
 16821  00150E  000D               	tblwt		*+
 16822  001510  C1C2  FFF5         	movff	_tcpHeader+6,tablat
 16823  001514  000D               	tblwt		*+
 16824  001516  C1C3  FFF5         	movff	_tcpHeader+7,tablat
 16825  00151A  000C               	tblwt		*
 16826  00151C  D00C               	bra	u12370
 16827  00151E                     u12377:
 16828  00151E  CFF6 FFE9          	movff	tblptrl,fsr0l
 16829  001522  CFF7 FFEA          	movff	tblptrh,fsr0h
 16830  001526  C1C0  FFEE         	movff	_tcpHeader+4,postinc0
 16831  00152A  C1C1  FFEE         	movff	_tcpHeader+5,postinc0
 16832  00152E  C1C2  FFEE         	movff	_tcpHeader+6,postinc0
 16833  001532  C1C3  FFEF         	movff	_tcpHeader+7,indf0
 16834  001536                     u12370:
 16835                           
 16836                           ;tcpv4.c: 658: currentTCB->remoteAck = tcpHeader.sequenceNumber + 1;
 16837  001536  0E01               	movlw	1
 16838  001538  0101               	movlb	1	; () banked
 16839  00153A  25C0               	addwf	(_tcpHeader+4)& (0+255),w,b
 16840  00153C  0100               	movlb	0	; () banked
 16841  00153E  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 16842  001540  0E00               	movlw	0
 16843  001542  0101               	movlb	1	; () banked
 16844  001544  21C1               	addwfc	(_tcpHeader+5)& (0+255),w,b
 16845  001546  0100               	movlb	0	; () banked
 16846  001548  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16847  00154A  0E00               	movlw	0
 16848  00154C  0101               	movlb	1	; () banked
 16849  00154E  21C2               	addwfc	(_tcpHeader+6)& (0+255),w,b
 16850  001550  0100               	movlb	0	; () banked
 16851  001552  6FC5               	movwf	(??_TCP_FiniteStateMachine+2)& (0+255),b
 16852  001554  0E00               	movlw	0
 16853  001556  0101               	movlb	1	; () banked
 16854  001558  21C3               	addwfc	(_tcpHeader+7)& (0+255),w,b
 16855  00155A  0100               	movlb	0	; () banked
 16856  00155C  6FC6               	movwf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 16857  00155E  0E0C               	movlw	12
 16858  001560  25FE               	addwf	_currentTCB& (0+255),w,b
 16859  001562  6FC7               	movwf	(??_TCP_FiniteStateMachine+4)& (0+255),b
 16860  001564  0E00               	movlw	0
 16861  001566  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16862  001568  6FC8               	movwf	(??_TCP_FiniteStateMachine+5)& (0+255),b
 16863  00156A  C0C7  FFF6         	movff	??_TCP_FiniteStateMachine+4,tblptrl
 16864  00156E  C0C8  FFF7         	movff	??_TCP_FiniteStateMachine+5,tblptrh
 16865  001572  0E00               	movlw	low (__smallconst shr (0+16))
 16866  001574  6EF8               	movwf	tblptru,c
 16867  001576  0E0F               	movlw	(high __ramtop+-1)
 16868  001578  64F7               	cpfsgt	tblptrh,c
 16869  00157A  D00D               	bra	u12387
 16870  00157C  C0C3  FFF5         	movff	??_TCP_FiniteStateMachine,tablat
 16871  001580  000D               	tblwt		*+
 16872  001582  C0C4  FFF5         	movff	??_TCP_FiniteStateMachine+1,tablat
 16873  001586  000D               	tblwt		*+
 16874  001588  C0C5  FFF5         	movff	??_TCP_FiniteStateMachine+2,tablat
 16875  00158C  000D               	tblwt		*+
 16876  00158E  C0C6  FFF5         	movff	??_TCP_FiniteStateMachine+3,tablat
 16877  001592  000C               	tblwt		*
 16878  001594  D00C               	bra	u12380
 16879  001596                     u12387:
 16880  001596  CFF6 FFE9          	movff	tblptrl,fsr0l
 16881  00159A  CFF7 FFEA          	movff	tblptrh,fsr0h
 16882  00159E  C0C3  FFEE         	movff	??_TCP_FiniteStateMachine,postinc0
 16883  0015A2  C0C4  FFEE         	movff	??_TCP_FiniteStateMachine+1,postinc0
 16884  0015A6  C0C5  FFEE         	movff	??_TCP_FiniteStateMachine+2,postinc0
 16885  0015AA  C0C6  FFEF         	movff	??_TCP_FiniteStateMachine+3,indf0
 16886  0015AE                     u12380:
 16887                           
 16888                           ;tcpv4.c: 661: currentTCB->remoteWnd = ((((uint16_t)tcpHeader.windowSize & (uint16_t)0xF
      +                          F00) >> 8) | (((uint16_t)tcpHeader.windowSize & (uint16_t)0x00FF) << 8));
 16889  0015AE  0101               	movlb	1	; () banked
 16890  0015B0  51CA               	movf	(_tcpHeader+14)& (0+255),w,b
 16891  0015B2  0100               	movlb	0	; () banked
 16892  0015B4  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16893  0015B6  6BC3               	clrf	??_TCP_FiniteStateMachine& (0+255),b
 16894  0015B8  EE21  F0CA         	lfsr	2,_tcpHeader+14
 16895  0015BC  CFDE F0C5          	movff	postinc2,??_TCP_FiniteStateMachine+2
 16896  0015C0  CFDD F0C6          	movff	postdec2,??_TCP_FiniteStateMachine+3
 16897  0015C4  C0C6  F0C5         	movff	??_TCP_FiniteStateMachine+3,??_TCP_FiniteStateMachine+2
 16898  0015C8  6BC6               	clrf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 16899  0015CA  6BC6               	clrf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 16900  0015CC  51C3               	movf	??_TCP_FiniteStateMachine& (0+255),w,b
 16901  0015CE  13C5               	iorwf	(??_TCP_FiniteStateMachine+2)& (0+255),f,b
 16902  0015D0  51C4               	movf	(??_TCP_FiniteStateMachine+1)& (0+255),w,b
 16903  0015D2  13C6               	iorwf	(??_TCP_FiniteStateMachine+3)& (0+255),f,b
 16904  0015D4  0E18               	movlw	24
 16905  0015D6  25FE               	addwf	_currentTCB& (0+255),w,b
 16906  0015D8  6FC7               	movwf	(??_TCP_FiniteStateMachine+4)& (0+255),b
 16907  0015DA  0E00               	movlw	0
 16908  0015DC  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16909  0015DE  6FC8               	movwf	(??_TCP_FiniteStateMachine+5)& (0+255),b
 16910  0015E0  C0C7  FFF6         	movff	??_TCP_FiniteStateMachine+4,tblptrl
 16911  0015E4  C0C8  FFF7         	movff	??_TCP_FiniteStateMachine+5,tblptrh
 16912  0015E8  0E00               	movlw	low (__smallconst shr (0+16))
 16913  0015EA  6EF8               	movwf	tblptru,c
 16914  0015EC  0E0F               	movlw	(high __ramtop+-1)
 16915  0015EE  64F7               	cpfsgt	tblptrh,c
 16916  0015F0  D007               	bra	u12397
 16917  0015F2  C0C5  FFF5         	movff	??_TCP_FiniteStateMachine+2,tablat
 16918  0015F6  000D               	tblwt		*+
 16919  0015F8  C0C6  FFF5         	movff	??_TCP_FiniteStateMachine+3,tablat
 16920  0015FC  000C               	tblwt		*
 16921  0015FE  D008               	bra	u12390
 16922  001600                     u12397:
 16923  001600  CFF6 FFE9          	movff	tblptrl,fsr0l
 16924  001604  CFF7 FFEA          	movff	tblptrh,fsr0h
 16925  001608  C0C5  FFEE         	movff	??_TCP_FiniteStateMachine+2,postinc0
 16926  00160C  C0C6  FFEF         	movff	??_TCP_FiniteStateMachine+3,indf0
 16927  001610                     u12390:
 16928                           
 16929                           ;tcpv4.c: 662: currentTCB->mss = tcpMss;
 16930  001610  0E1C               	movlw	28
 16931  001612  0100               	movlb	0	; () banked
 16932  001614  25FE               	addwf	_currentTCB& (0+255),w,b
 16933  001616  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 16934  001618  0E00               	movlw	0
 16935  00161A  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16936  00161C  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16937  00161E  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 16938  001622  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 16939  001626  0E00               	movlw	low (__smallconst shr (0+16))
 16940  001628  6EF8               	movwf	tblptru,c
 16941  00162A  0E0F               	movlw	(high __ramtop+-1)
 16942  00162C  64F7               	cpfsgt	tblptrh,c
 16943  00162E  D007               	bra	u12407
 16944  001630  C1A4  FFF5         	movff	_tcpMss,tablat
 16945  001634  000D               	tblwt		*+
 16946  001636  C1A5  FFF5         	movff	_tcpMss+1,tablat
 16947  00163A  000C               	tblwt		*
 16948  00163C  D008               	bra	u12400
 16949  00163E                     u12407:
 16950  00163E  CFF6 FFE9          	movff	tblptrl,fsr0l
 16951  001642  CFF7 FFEA          	movff	tblptrh,fsr0h
 16952  001646  C1A4  FFEE         	movff	_tcpMss,postinc0
 16953  00164A  C1A5  FFEF         	movff	_tcpMss+1,indf0
 16954  00164E                     u12400:
 16955                           
 16956                           ;tcpv4.c: 665: currentTCB->timeout = ((unsigned long)1*2);
 16957  00164E  0E30               	movlw	48
 16958  001650  0100               	movlb	0	; () banked
 16959  001652  25FE               	addwf	_currentTCB& (0+255),w,b
 16960  001654  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 16961  001656  0E00               	movlw	0
 16962  001658  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16963  00165A  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16964  00165C  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 16965  001660  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 16966  001664  0E00               	movlw	low (__smallconst shr (0+16))
 16967  001666  6EF8               	movwf	tblptru,c
 16968  001668  0E0F               	movlw	(high __ramtop+-1)
 16969  00166A  64F7               	cpfsgt	tblptrh,c
 16970  00166C  D006               	bra	u12417
 16971  00166E  0E02               	movlw	2
 16972  001670  6EF5               	movwf	tablat,c
 16973  001672  000D               	tblwt		*+
 16974  001674  6AF5               	clrf	tablat,c
 16975  001676  000C               	tblwt		*
 16976  001678  D007               	bra	u12410
 16977  00167A                     u12417:
 16978  00167A  CFF6 FFE9          	movff	tblptrl,fsr0l
 16979  00167E  CFF7 FFEA          	movff	tblptrh,fsr0h
 16980  001682  0E02               	movlw	2
 16981  001684  6EEE               	movwf	postinc0,c
 16982  001686  6AEF               	clrf	indf0,c
 16983  001688                     u12410:
 16984                           
 16985                           ;tcpv4.c: 666: currentTCB->timeoutReloadValue = ((unsigned long)1*2);
 16986  001688  0E32               	movlw	50
 16987  00168A  0100               	movlb	0	; () banked
 16988  00168C  25FE               	addwf	_currentTCB& (0+255),w,b
 16989  00168E  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 16990  001690  0E00               	movlw	0
 16991  001692  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 16992  001694  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 16993  001696  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 16994  00169A  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 16995  00169E  0E00               	movlw	low (__smallconst shr (0+16))
 16996  0016A0  6EF8               	movwf	tblptru,c
 16997  0016A2  0E0F               	movlw	(high __ramtop+-1)
 16998  0016A4  64F7               	cpfsgt	tblptrh,c
 16999  0016A6  D006               	bra	u12427
 17000  0016A8  0E02               	movlw	2
 17001  0016AA  6EF5               	movwf	tablat,c
 17002  0016AC  000D               	tblwt		*+
 17003  0016AE  6AF5               	clrf	tablat,c
 17004  0016B0  000C               	tblwt		*
 17005  0016B2  D007               	bra	u12420
 17006  0016B4                     u12427:
 17007  0016B4  CFF6 FFE9          	movff	tblptrl,fsr0l
 17008  0016B8  CFF7 FFEA          	movff	tblptrh,fsr0h
 17009  0016BC  0E02               	movlw	2
 17010  0016BE  6EEE               	movwf	postinc0,c
 17011  0016C0  6AEF               	clrf	indf0,c
 17012  0016C2                     u12420:
 17013                           
 17014                           ;tcpv4.c: 667: currentTCB->timeoutsCount = (3u);
 17015  0016C2  0E34               	movlw	52
 17016  0016C4  0100               	movlb	0	; () banked
 17017  0016C6  25FE               	addwf	_currentTCB& (0+255),w,b
 17018  0016C8  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17019  0016CA  0E00               	movlw	0
 17020  0016CC  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17021  0016CE  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17022  0016D0  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17023  0016D4  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17024  0016D8  0E00               	movlw	low (__smallconst shr (0+16))
 17025  0016DA  6EF8               	movwf	tblptru,c
 17026  0016DC  0E0F               	movlw	(high __ramtop+-1)
 17027  0016DE  64F7               	cpfsgt	tblptrh,c
 17028  0016E0  D004               	bra	u12437
 17029  0016E2  0E03               	movlw	3
 17030  0016E4  6EF5               	movwf	tablat,c
 17031  0016E6  000C               	tblwt		*
 17032  0016E8  D006               	bra	u12430
 17033  0016EA                     u12437:
 17034  0016EA  CFF6 FFE9          	movff	tblptrl,fsr0l
 17035  0016EE  CFF7 FFEA          	movff	tblptrh,fsr0h
 17036  0016F2  0E03               	movlw	3
 17037  0016F4  6EEF               	movwf	indf0,c
 17038  0016F6                     u12430:
 17039                           
 17040                           ;tcpv4.c: 668: currentTCB->flags = 0x02U | 0x10U;
 17041  0016F6  0E35               	movlw	53
 17042  0016F8  0100               	movlb	0	; () banked
 17043  0016FA  25FE               	addwf	_currentTCB& (0+255),w,b
 17044  0016FC  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17045  0016FE  0E00               	movlw	0
 17046  001700  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17047  001702  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17048  001704  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17049  001708  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17050  00170C  0E00               	movlw	low (__smallconst shr (0+16))
 17051  00170E  6EF8               	movwf	tblptru,c
 17052  001710  0E0F               	movlw	(high __ramtop+-1)
 17053  001712  64F7               	cpfsgt	tblptrh,c
 17054  001714  D004               	bra	u12447
 17055  001716  0E12               	movlw	18
 17056  001718  6EF5               	movwf	tablat,c
 17057  00171A  000C               	tblwt		*
 17058  00171C  D006               	bra	u12440
 17059  00171E                     u12447:
 17060  00171E  CFF6 FFE9          	movff	tblptrl,fsr0l
 17061  001722  CFF7 FFEA          	movff	tblptrh,fsr0h
 17062  001726  0E12               	movlw	18
 17063  001728  6EEF               	movwf	indf0,c
 17064  00172A                     u12440:
 17065  00172A  D6C2               	goto	l8846
 17066  00172C                     l8874:
 17067                           
 17068                           ; BSR set to: 0
 17069                           ;tcpv4.c: 676: ;
 17070                           ;tcpv4.c: 678: currentTCB->timeout = 0;
 17071  00172C  0E30               	movlw	48
 17072  00172E  25FE               	addwf	_currentTCB& (0+255),w,b
 17073  001730  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17074  001732  0E00               	movlw	0
 17075  001734  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17076  001736  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17077  001738  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17078  00173C  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17079  001740  0E00               	movlw	low (__smallconst shr (0+16))
 17080  001742  6EF8               	movwf	tblptru,c
 17081  001744  0E0F               	movlw	(high __ramtop+-1)
 17082  001746  64F7               	cpfsgt	tblptrh,c
 17083  001748  D005               	bra	u12457
 17084  00174A  6AF5               	clrf	tablat,c
 17085  00174C  000D               	tblwt		*+
 17086  00174E  6AF5               	clrf	tablat,c
 17087  001750  000C               	tblwt		*
 17088  001752  D006               	bra	u12450
 17089  001754                     u12457:
 17090  001754  CFF6 FFE9          	movff	tblptrl,fsr0l
 17091  001758  CFF7 FFEA          	movff	tblptrh,fsr0h
 17092  00175C  6AEE               	clrf	postinc0,c
 17093  00175E  6AEF               	clrf	indf0,c
 17094  001760                     u12450:
 17095                           
 17096                           ;tcpv4.c: 680: if ((currentTCB->localSeqno + 1) == tcpHeader.ackNumber)
 17097  001760  0E10               	movlw	16
 17098  001762  0100               	movlb	0	; () banked
 17099  001764  25FE               	addwf	_currentTCB& (0+255),w,b
 17100  001766  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17101  001768  0E00               	movlw	0
 17102  00176A  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17103  00176C  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17104  00176E  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17105  001772  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17106  001776  0E00               	movlw	low (__smallconst shr (0+16))
 17107  001778  6EF8               	movwf	tblptru,c
 17108  00177A  0E0F               	movlw	(high __ramtop+-1)
 17109  00177C  64F7               	cpfsgt	tblptrh,c
 17110  00177E  D00D               	bra	u12467
 17111  001780  0009               	tblrd		*+
 17112  001782  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 17113  001786  0009               	tblrd		*+
 17114  001788  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 17115  00178C  0009               	tblrd		*+
 17116  00178E  CFF5 F0C7          	movff	tablat,??_TCP_FiniteStateMachine+4
 17117  001792  0009               	tblrd		*+
 17118  001794  CFF5 F0C8          	movff	tablat,??_TCP_FiniteStateMachine+5
 17119  001798  D00C               	bra	u12460
 17120  00179A                     u12467:
 17121  00179A  CFF6 FFE9          	movff	tblptrl,fsr0l
 17122  00179E  CFF7 FFEA          	movff	tblptrh,fsr0h
 17123  0017A2  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 17124  0017A6  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 17125  0017AA  CFEE F0C7          	movff	postinc0,??_TCP_FiniteStateMachine+4
 17126  0017AE  CFEE F0C8          	movff	postinc0,??_TCP_FiniteStateMachine+5
 17127  0017B2                     u12460:
 17128  0017B2  0E01               	movlw	1
 17129  0017B4  0100               	movlb	0	; () banked
 17130  0017B6  25C5               	addwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 17131  0017B8  6FC9               	movwf	(??_TCP_FiniteStateMachine+6)& (0+255),b
 17132  0017BA  0E00               	movlw	0
 17133  0017BC  21C6               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 17134  0017BE  6FCA               	movwf	(??_TCP_FiniteStateMachine+7)& (0+255),b
 17135  0017C0  0E00               	movlw	0
 17136  0017C2  21C7               	addwfc	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 17137  0017C4  6FCB               	movwf	(??_TCP_FiniteStateMachine+8)& (0+255),b
 17138  0017C6  0E00               	movlw	0
 17139  0017C8  21C8               	addwfc	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 17140  0017CA  6FCC               	movwf	(??_TCP_FiniteStateMachine+9)& (0+255),b
 17141  0017CC  0101               	movlb	1	; () banked
 17142  0017CE  51C4               	movf	(_tcpHeader+8)& (0+255),w,b
 17143  0017D0  0100               	movlb	0	; () banked
 17144  0017D2  19C9               	xorwf	(??_TCP_FiniteStateMachine+6)& (0+255),w,b
 17145  0017D4  E10F               	bnz	u12471
 17146  0017D6  0101               	movlb	1	; () banked
 17147  0017D8  51C5               	movf	(_tcpHeader+9)& (0+255),w,b
 17148  0017DA  0100               	movlb	0	; () banked
 17149  0017DC  19CA               	xorwf	(??_TCP_FiniteStateMachine+7)& (0+255),w,b
 17150  0017DE  E10A               	bnz	u12471
 17151  0017E0  0101               	movlb	1	; () banked
 17152  0017E2  51C6               	movf	(_tcpHeader+10)& (0+255),w,b
 17153  0017E4  0100               	movlb	0	; () banked
 17154  0017E6  19CB               	xorwf	(??_TCP_FiniteStateMachine+8)& (0+255),w,b
 17155  0017E8  E105               	bnz	u12471
 17156  0017EA  0101               	movlb	1	; () banked
 17157  0017EC  51C7               	movf	(_tcpHeader+11)& (0+255),w,b
 17158  0017EE  0100               	movlb	0	; () banked
 17159  0017F0  19CC               	xorwf	(??_TCP_FiniteStateMachine+9)& (0+255),w,b
 17160  0017F2  A4D8               	btfss	status,2,c
 17161  0017F4                     u12471:
 17162  0017F4  D14F               	goto	l8888
 17163                           
 17164                           ; BSR set to: 0
 17165                           ;tcpv4.c: 681: {
 17166                           ;tcpv4.c: 683: currentTCB->localSeqno = currentTCB->localSeqno + 1;
 17167  0017F6  0E10               	movlw	16
 17168  0017F8  25FE               	addwf	_currentTCB& (0+255),w,b
 17169  0017FA  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17170  0017FC  0E00               	movlw	0
 17171  0017FE  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17172  001800  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17173  001802  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17174  001806  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17175  00180A  0E00               	movlw	low (__smallconst shr (0+16))
 17176  00180C  6EF8               	movwf	tblptru,c
 17177  00180E  0E0F               	movlw	(high __ramtop+-1)
 17178  001810  64F7               	cpfsgt	tblptrh,c
 17179  001812  D00D               	bra	u12487
 17180  001814  0009               	tblrd		*+
 17181  001816  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 17182  00181A  0009               	tblrd		*+
 17183  00181C  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 17184  001820  0009               	tblrd		*+
 17185  001822  CFF5 F0C7          	movff	tablat,??_TCP_FiniteStateMachine+4
 17186  001826  0009               	tblrd		*+
 17187  001828  CFF5 F0C8          	movff	tablat,??_TCP_FiniteStateMachine+5
 17188  00182C  D00C               	bra	u12480
 17189  00182E                     u12487:
 17190  00182E  CFF6 FFE9          	movff	tblptrl,fsr0l
 17191  001832  CFF7 FFEA          	movff	tblptrh,fsr0h
 17192  001836  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 17193  00183A  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 17194  00183E  CFEE F0C7          	movff	postinc0,??_TCP_FiniteStateMachine+4
 17195  001842  CFEE F0C8          	movff	postinc0,??_TCP_FiniteStateMachine+5
 17196  001846                     u12480:
 17197  001846  0E01               	movlw	1
 17198  001848  0100               	movlb	0	; () banked
 17199  00184A  25C5               	addwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 17200  00184C  6FC9               	movwf	(??_TCP_FiniteStateMachine+6)& (0+255),b
 17201  00184E  0E00               	movlw	0
 17202  001850  21C6               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 17203  001852  6FCA               	movwf	(??_TCP_FiniteStateMachine+7)& (0+255),b
 17204  001854  0E00               	movlw	0
 17205  001856  21C7               	addwfc	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 17206  001858  6FCB               	movwf	(??_TCP_FiniteStateMachine+8)& (0+255),b
 17207  00185A  0E00               	movlw	0
 17208  00185C  21C8               	addwfc	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 17209  00185E  6FCC               	movwf	(??_TCP_FiniteStateMachine+9)& (0+255),b
 17210  001860  0E10               	movlw	16
 17211  001862  25FE               	addwf	_currentTCB& (0+255),w,b
 17212  001864  6FCD               	movwf	(??_TCP_FiniteStateMachine+10)& (0+255),b
 17213  001866  0E00               	movlw	0
 17214  001868  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17215  00186A  6FCE               	movwf	(??_TCP_FiniteStateMachine+11)& (0+255),b
 17216  00186C  C0CD  FFF6         	movff	??_TCP_FiniteStateMachine+10,tblptrl
 17217  001870  C0CE  FFF7         	movff	??_TCP_FiniteStateMachine+11,tblptrh
 17218  001874  0E00               	movlw	low (__smallconst shr (0+16))
 17219  001876  6EF8               	movwf	tblptru,c
 17220  001878  0E0F               	movlw	(high __ramtop+-1)
 17221  00187A  64F7               	cpfsgt	tblptrh,c
 17222  00187C  D00D               	bra	u12497
 17223  00187E  C0C9  FFF5         	movff	??_TCP_FiniteStateMachine+6,tablat
 17224  001882  000D               	tblwt		*+
 17225  001884  C0CA  FFF5         	movff	??_TCP_FiniteStateMachine+7,tablat
 17226  001888  000D               	tblwt		*+
 17227  00188A  C0CB  FFF5         	movff	??_TCP_FiniteStateMachine+8,tablat
 17228  00188E  000D               	tblwt		*+
 17229  001890  C0CC  FFF5         	movff	??_TCP_FiniteStateMachine+9,tablat
 17230  001894  000C               	tblwt		*
 17231  001896  D00C               	bra	u12490
 17232  001898                     u12497:
 17233  001898  CFF6 FFE9          	movff	tblptrl,fsr0l
 17234  00189C  CFF7 FFEA          	movff	tblptrh,fsr0h
 17235  0018A0  C0C9  FFEE         	movff	??_TCP_FiniteStateMachine+6,postinc0
 17236  0018A4  C0CA  FFEE         	movff	??_TCP_FiniteStateMachine+7,postinc0
 17237  0018A8  C0CB  FFEE         	movff	??_TCP_FiniteStateMachine+8,postinc0
 17238  0018AC  C0CC  FFEF         	movff	??_TCP_FiniteStateMachine+9,indf0
 17239  0018B0                     u12490:
 17240                           
 17241                           ;tcpv4.c: 684: currentTCB->flags = 0x10U;
 17242  0018B0  0E35               	movlw	53
 17243  0018B2  0100               	movlb	0	; () banked
 17244  0018B4  25FE               	addwf	_currentTCB& (0+255),w,b
 17245  0018B6  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17246  0018B8  0E00               	movlw	0
 17247  0018BA  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17248  0018BC  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17249  0018BE  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17250  0018C2  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17251  0018C6  0E00               	movlw	low (__smallconst shr (0+16))
 17252  0018C8  6EF8               	movwf	tblptru,c
 17253  0018CA  0E0F               	movlw	(high __ramtop+-1)
 17254  0018CC  64F7               	cpfsgt	tblptrh,c
 17255  0018CE  D004               	bra	u12507
 17256  0018D0  0E10               	movlw	16
 17257  0018D2  6EF5               	movwf	tablat,c
 17258  0018D4  000C               	tblwt		*
 17259  0018D6  D006               	bra	u12500
 17260  0018D8                     u12507:
 17261  0018D8  CFF6 FFE9          	movff	tblptrl,fsr0l
 17262  0018DC  CFF7 FFEA          	movff	tblptrh,fsr0h
 17263  0018E0  0E10               	movlw	16
 17264  0018E2  6EEF               	movwf	indf0,c
 17265  0018E4                     u12500:
 17266                           
 17267                           ;tcpv4.c: 687: currentTCB->remoteSeqno = tcpHeader.sequenceNumber;
 17268  0018E4  0E08               	movlw	8
 17269  0018E6  0100               	movlb	0	; () banked
 17270  0018E8  25FE               	addwf	_currentTCB& (0+255),w,b
 17271  0018EA  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17272  0018EC  0E00               	movlw	0
 17273  0018EE  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17274  0018F0  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17275  0018F2  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17276  0018F6  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17277  0018FA  0E00               	movlw	low (__smallconst shr (0+16))
 17278  0018FC  6EF8               	movwf	tblptru,c
 17279  0018FE  0E0F               	movlw	(high __ramtop+-1)
 17280  001900  64F7               	cpfsgt	tblptrh,c
 17281  001902  D00D               	bra	u12517
 17282  001904  C1C0  FFF5         	movff	_tcpHeader+4,tablat
 17283  001908  000D               	tblwt		*+
 17284  00190A  C1C1  FFF5         	movff	_tcpHeader+5,tablat
 17285  00190E  000D               	tblwt		*+
 17286  001910  C1C2  FFF5         	movff	_tcpHeader+6,tablat
 17287  001914  000D               	tblwt		*+
 17288  001916  C1C3  FFF5         	movff	_tcpHeader+7,tablat
 17289  00191A  000C               	tblwt		*
 17290  00191C  D00C               	bra	u12510
 17291  00191E                     u12517:
 17292  00191E  CFF6 FFE9          	movff	tblptrl,fsr0l
 17293  001922  CFF7 FFEA          	movff	tblptrh,fsr0h
 17294  001926  C1C0  FFEE         	movff	_tcpHeader+4,postinc0
 17295  00192A  C1C1  FFEE         	movff	_tcpHeader+5,postinc0
 17296  00192E  C1C2  FFEE         	movff	_tcpHeader+6,postinc0
 17297  001932  C1C3  FFEF         	movff	_tcpHeader+7,indf0
 17298  001936                     u12510:
 17299                           
 17300                           ;tcpv4.c: 689: currentTCB->remoteAck = tcpHeader.sequenceNumber + 1;
 17301  001936  0E01               	movlw	1
 17302  001938  0101               	movlb	1	; () banked
 17303  00193A  25C0               	addwf	(_tcpHeader+4)& (0+255),w,b
 17304  00193C  0100               	movlb	0	; () banked
 17305  00193E  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17306  001940  0E00               	movlw	0
 17307  001942  0101               	movlb	1	; () banked
 17308  001944  21C1               	addwfc	(_tcpHeader+5)& (0+255),w,b
 17309  001946  0100               	movlb	0	; () banked
 17310  001948  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17311  00194A  0E00               	movlw	0
 17312  00194C  0101               	movlb	1	; () banked
 17313  00194E  21C2               	addwfc	(_tcpHeader+6)& (0+255),w,b
 17314  001950  0100               	movlb	0	; () banked
 17315  001952  6FC5               	movwf	(??_TCP_FiniteStateMachine+2)& (0+255),b
 17316  001954  0E00               	movlw	0
 17317  001956  0101               	movlb	1	; () banked
 17318  001958  21C3               	addwfc	(_tcpHeader+7)& (0+255),w,b
 17319  00195A  0100               	movlb	0	; () banked
 17320  00195C  6FC6               	movwf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 17321  00195E  0E0C               	movlw	12
 17322  001960  25FE               	addwf	_currentTCB& (0+255),w,b
 17323  001962  6FC7               	movwf	(??_TCP_FiniteStateMachine+4)& (0+255),b
 17324  001964  0E00               	movlw	0
 17325  001966  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17326  001968  6FC8               	movwf	(??_TCP_FiniteStateMachine+5)& (0+255),b
 17327  00196A  C0C7  FFF6         	movff	??_TCP_FiniteStateMachine+4,tblptrl
 17328  00196E  C0C8  FFF7         	movff	??_TCP_FiniteStateMachine+5,tblptrh
 17329  001972  0E00               	movlw	low (__smallconst shr (0+16))
 17330  001974  6EF8               	movwf	tblptru,c
 17331  001976  0E0F               	movlw	(high __ramtop+-1)
 17332  001978  64F7               	cpfsgt	tblptrh,c
 17333  00197A  D00D               	bra	u12527
 17334  00197C  C0C3  FFF5         	movff	??_TCP_FiniteStateMachine,tablat
 17335  001980  000D               	tblwt		*+
 17336  001982  C0C4  FFF5         	movff	??_TCP_FiniteStateMachine+1,tablat
 17337  001986  000D               	tblwt		*+
 17338  001988  C0C5  FFF5         	movff	??_TCP_FiniteStateMachine+2,tablat
 17339  00198C  000D               	tblwt		*+
 17340  00198E  C0C6  FFF5         	movff	??_TCP_FiniteStateMachine+3,tablat
 17341  001992  000C               	tblwt		*
 17342  001994  D00C               	bra	u12520
 17343  001996                     u12527:
 17344  001996  CFF6 FFE9          	movff	tblptrl,fsr0l
 17345  00199A  CFF7 FFEA          	movff	tblptrh,fsr0h
 17346  00199E  C0C3  FFEE         	movff	??_TCP_FiniteStateMachine,postinc0
 17347  0019A2  C0C4  FFEE         	movff	??_TCP_FiniteStateMachine+1,postinc0
 17348  0019A6  C0C5  FFEE         	movff	??_TCP_FiniteStateMachine+2,postinc0
 17349  0019AA  C0C6  FFEF         	movff	??_TCP_FiniteStateMachine+3,indf0
 17350  0019AE                     u12520:
 17351                           
 17352                           ;tcpv4.c: 691: currentTCB->remoteWnd = ((((uint16_t)tcpHeader.windowSize & (uint16_t)0xF
      +                          F00) >> 8) | (((uint16_t)tcpHeader.windowSize & (uint16_t)0x00FF) << 8));
 17353  0019AE  0101               	movlb	1	; () banked
 17354  0019B0  51CA               	movf	(_tcpHeader+14)& (0+255),w,b
 17355  0019B2  0100               	movlb	0	; () banked
 17356  0019B4  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17357  0019B6  6BC3               	clrf	??_TCP_FiniteStateMachine& (0+255),b
 17358  0019B8  EE21  F0CA         	lfsr	2,_tcpHeader+14
 17359  0019BC  CFDE F0C5          	movff	postinc2,??_TCP_FiniteStateMachine+2
 17360  0019C0  CFDD F0C6          	movff	postdec2,??_TCP_FiniteStateMachine+3
 17361  0019C4  C0C6  F0C5         	movff	??_TCP_FiniteStateMachine+3,??_TCP_FiniteStateMachine+2
 17362  0019C8  6BC6               	clrf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 17363  0019CA  6BC6               	clrf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 17364  0019CC  51C3               	movf	??_TCP_FiniteStateMachine& (0+255),w,b
 17365  0019CE  13C5               	iorwf	(??_TCP_FiniteStateMachine+2)& (0+255),f,b
 17366  0019D0  51C4               	movf	(??_TCP_FiniteStateMachine+1)& (0+255),w,b
 17367  0019D2  13C6               	iorwf	(??_TCP_FiniteStateMachine+3)& (0+255),f,b
 17368  0019D4  0E18               	movlw	24
 17369  0019D6  25FE               	addwf	_currentTCB& (0+255),w,b
 17370  0019D8  6FC7               	movwf	(??_TCP_FiniteStateMachine+4)& (0+255),b
 17371  0019DA  0E00               	movlw	0
 17372  0019DC  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17373  0019DE  6FC8               	movwf	(??_TCP_FiniteStateMachine+5)& (0+255),b
 17374  0019E0  C0C7  FFF6         	movff	??_TCP_FiniteStateMachine+4,tblptrl
 17375  0019E4  C0C8  FFF7         	movff	??_TCP_FiniteStateMachine+5,tblptrh
 17376  0019E8  0E00               	movlw	low (__smallconst shr (0+16))
 17377  0019EA  6EF8               	movwf	tblptru,c
 17378  0019EC  0E0F               	movlw	(high __ramtop+-1)
 17379  0019EE  64F7               	cpfsgt	tblptrh,c
 17380  0019F0  D007               	bra	u12537
 17381  0019F2  C0C5  FFF5         	movff	??_TCP_FiniteStateMachine+2,tablat
 17382  0019F6  000D               	tblwt		*+
 17383  0019F8  C0C6  FFF5         	movff	??_TCP_FiniteStateMachine+3,tablat
 17384  0019FC  000C               	tblwt		*
 17385  0019FE  D008               	bra	u12530
 17386  001A00                     u12537:
 17387  001A00  CFF6 FFE9          	movff	tblptrl,fsr0l
 17388  001A04  CFF7 FFEA          	movff	tblptrh,fsr0h
 17389  001A08  C0C5  FFEE         	movff	??_TCP_FiniteStateMachine+2,postinc0
 17390  001A0C  C0C6  FFEF         	movff	??_TCP_FiniteStateMachine+3,indf0
 17391  001A10                     u12530:
 17392                           
 17393                           ;tcpv4.c: 692: currentTCB->mss = tcpMss;
 17394  001A10  0E1C               	movlw	28
 17395  001A12  0100               	movlb	0	; () banked
 17396  001A14  25FE               	addwf	_currentTCB& (0+255),w,b
 17397  001A16  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17398  001A18  0E00               	movlw	0
 17399  001A1A  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17400  001A1C  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17401  001A1E  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17402  001A22  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17403  001A26  0E00               	movlw	low (__smallconst shr (0+16))
 17404  001A28  6EF8               	movwf	tblptru,c
 17405  001A2A  0E0F               	movlw	(high __ramtop+-1)
 17406  001A2C  64F7               	cpfsgt	tblptrh,c
 17407  001A2E  D007               	bra	u12547
 17408  001A30  C1A4  FFF5         	movff	_tcpMss,tablat
 17409  001A34  000D               	tblwt		*+
 17410  001A36  C1A5  FFF5         	movff	_tcpMss+1,tablat
 17411  001A3A  000C               	tblwt		*
 17412  001A3C  D008               	bra	u12540
 17413  001A3E                     u12547:
 17414  001A3E  CFF6 FFE9          	movff	tblptrl,fsr0l
 17415  001A42  CFF7 FFEA          	movff	tblptrh,fsr0h
 17416  001A46  C1A4  FFEE         	movff	_tcpMss,postinc0
 17417  001A4A  C1A5  FFEF         	movff	_tcpMss+1,indf0
 17418  001A4E                     u12540:
 17419                           
 17420                           ;tcpv4.c: 694: if(TCP_Snd(currentTCB))
 17421  001A4E  C0FE  F058         	movff	_currentTCB,TCP_Snd@tcbPtr
 17422  001A52  C0FF  F059         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 17423  001A56  EC31  F01D         	call	_TCP_Snd	;wreg free
 17424  001A5A  0900               	iorlw	0
 17425  001A5C  E102 EFFA  F01C    	bz	l9172
 17426                           
 17427                           ; BSR set to: 0
 17428                           ;tcpv4.c: 695: {
 17429                           ;tcpv4.c: 696: nextState = ESTABLISHED;
 17430  001A62  0E04               	movlw	4
 17431  001A64  6FD3               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 17432                           
 17433                           ; BSR set to: 0
 17434                           ;tcpv4.c: 697: currentTCB->socketState = SOCKET_CONNECTED;
 17435  001A66  0E36               	movlw	54
 17436  001A68  25FE               	addwf	_currentTCB& (0+255),w,b
 17437  001A6A  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17438  001A6C  0E00               	movlw	0
 17439  001A6E  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17440  001A70  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17441  001A72  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17442  001A76  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17443  001A7A  0E00               	movlw	low (__smallconst shr (0+16))
 17444  001A7C  6EF8               	movwf	tblptru,c
 17445  001A7E  0E0F               	movlw	(high __ramtop+-1)
 17446  001A80  64F7               	cpfsgt	tblptrh,c
 17447  001A82  D004               	bra	u12567
 17448  001A84  0E03               	movlw	3
 17449  001A86  6EF5               	movwf	tablat,c
 17450  001A88  000C               	tblwt		*
 17451  001A8A  D002               	bra	u12560
 17452  001A8C                     u12567:
 17453  001A8C  EFBF  F012         	goto	u13057
 17454  001A90                     u12560:
 17455  001A90  EFFA  F01C         	goto	l9172
 17456  001A94                     l8888:
 17457                           
 17458                           ; BSR set to: 0
 17459                           ;tcpv4.c: 700: else
 17460                           ;tcpv4.c: 701: {
 17461                           ;tcpv4.c: 703: currentTCB->localSeqno = tcpHeader.ackNumber;
 17462  001A94  0E10               	movlw	16
 17463  001A96  25FE               	addwf	_currentTCB& (0+255),w,b
 17464  001A98  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17465  001A9A  0E00               	movlw	0
 17466  001A9C  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17467  001A9E  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17468  001AA0  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17469  001AA4  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17470  001AA8  0E00               	movlw	low (__smallconst shr (0+16))
 17471  001AAA  6EF8               	movwf	tblptru,c
 17472  001AAC  0E0F               	movlw	(high __ramtop+-1)
 17473  001AAE  64F7               	cpfsgt	tblptrh,c
 17474  001AB0  D00D               	bra	u12577
 17475  001AB2  C1C4  FFF5         	movff	_tcpHeader+8,tablat
 17476  001AB6  000D               	tblwt		*+
 17477  001AB8  C1C5  FFF5         	movff	_tcpHeader+9,tablat
 17478  001ABC  000D               	tblwt		*+
 17479  001ABE  C1C6  FFF5         	movff	_tcpHeader+10,tablat
 17480  001AC2  000D               	tblwt		*+
 17481  001AC4  C1C7  FFF5         	movff	_tcpHeader+11,tablat
 17482  001AC8  000C               	tblwt		*
 17483  001ACA  D00C               	bra	u12570
 17484  001ACC                     u12577:
 17485  001ACC  CFF6 FFE9          	movff	tblptrl,fsr0l
 17486  001AD0  CFF7 FFEA          	movff	tblptrh,fsr0h
 17487  001AD4  C1C4  FFEE         	movff	_tcpHeader+8,postinc0
 17488  001AD8  C1C5  FFEE         	movff	_tcpHeader+9,postinc0
 17489  001ADC  C1C6  FFEE         	movff	_tcpHeader+10,postinc0
 17490  001AE0  C1C7  FFEF         	movff	_tcpHeader+11,indf0
 17491  001AE4                     u12570:
 17492                           
 17493                           ;tcpv4.c: 704: currentTCB->flags = 0x04U | 0x10U;
 17494  001AE4  0E35               	movlw	53
 17495  001AE6  0100               	movlb	0	; () banked
 17496  001AE8  25FE               	addwf	_currentTCB& (0+255),w,b
 17497  001AEA  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17498  001AEC  0E00               	movlw	0
 17499  001AEE  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17500  001AF0  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17501  001AF2  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17502  001AF6  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17503  001AFA  0E00               	movlw	low (__smallconst shr (0+16))
 17504  001AFC  6EF8               	movwf	tblptru,c
 17505  001AFE  0E0F               	movlw	(high __ramtop+-1)
 17506  001B00  64F7               	cpfsgt	tblptrh,c
 17507  001B02  D004               	bra	u12587
 17508  001B04  0E14               	movlw	20
 17509  001B06  6EF5               	movwf	tablat,c
 17510  001B08  000C               	tblwt		*
 17511  001B0A  D006               	bra	u12580
 17512  001B0C                     u12587:
 17513  001B0C  CFF6 FFE9          	movff	tblptrl,fsr0l
 17514  001B10  CFF7 FFEA          	movff	tblptrh,fsr0h
 17515  001B14  0E14               	movlw	20
 17516  001B16  6EEF               	movwf	indf0,c
 17517  001B18                     u12580:
 17518                           
 17519                           ;tcpv4.c: 705: if(TCP_Snd(currentTCB))
 17520  001B18  C0FE  F058         	movff	_currentTCB,TCP_Snd@tcbPtr
 17521  001B1C  C0FF  F059         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 17522  001B20  EC31  F01D         	call	_TCP_Snd	;wreg free
 17523  001B24                     L10:
 17524  001B24  0900               	iorlw	0
 17525  001B26  E001 D4CC          	bnz	l1293
 17526  001B2A  EFFA  F01C         	goto	l9172
 17527  001B2E                     l8896:
 17528                           
 17529                           ; BSR set to: 0
 17530                           ;tcpv4.c: 713: ;
 17531                           ;tcpv4.c: 715: currentTCB->timeout = 0;
 17532  001B2E  0E30               	movlw	48
 17533  001B30  25FE               	addwf	_currentTCB& (0+255),w,b
 17534  001B32  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17535  001B34  0E00               	movlw	0
 17536  001B36  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17537  001B38  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17538  001B3A  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17539  001B3E  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17540  001B42  0E00               	movlw	low (__smallconst shr (0+16))
 17541  001B44  6EF8               	movwf	tblptru,c
 17542  001B46  0E0F               	movlw	(high __ramtop+-1)
 17543  001B48  64F7               	cpfsgt	tblptrh,c
 17544  001B4A  D005               	bra	u12607
 17545  001B4C  6AF5               	clrf	tablat,c
 17546  001B4E  000D               	tblwt		*+
 17547  001B50  6AF5               	clrf	tablat,c
 17548  001B52  000C               	tblwt		*
 17549  001B54  D006               	bra	u12600
 17550  001B56                     u12607:
 17551  001B56  CFF6 FFE9          	movff	tblptrl,fsr0l
 17552  001B5A  CFF7 FFEA          	movff	tblptrh,fsr0h
 17553  001B5E  6AEE               	clrf	postinc0,c
 17554  001B60  6AEF               	clrf	indf0,c
 17555  001B62                     u12600:
 17556                           
 17557                           ;tcpv4.c: 717: if ((currentTCB->localSeqno + 1) == tcpHeader.ackNumber)
 17558  001B62  0E10               	movlw	16
 17559  001B64  0100               	movlb	0	; () banked
 17560  001B66  25FE               	addwf	_currentTCB& (0+255),w,b
 17561  001B68  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17562  001B6A  0E00               	movlw	0
 17563  001B6C  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17564  001B6E  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17565  001B70  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17566  001B74  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17567  001B78  0E00               	movlw	low (__smallconst shr (0+16))
 17568  001B7A  6EF8               	movwf	tblptru,c
 17569  001B7C  0E0F               	movlw	(high __ramtop+-1)
 17570  001B7E  64F7               	cpfsgt	tblptrh,c
 17571  001B80  D00D               	bra	u12617
 17572  001B82  0009               	tblrd		*+
 17573  001B84  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 17574  001B88  0009               	tblrd		*+
 17575  001B8A  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 17576  001B8E  0009               	tblrd		*+
 17577  001B90  CFF5 F0C7          	movff	tablat,??_TCP_FiniteStateMachine+4
 17578  001B94  0009               	tblrd		*+
 17579  001B96  CFF5 F0C8          	movff	tablat,??_TCP_FiniteStateMachine+5
 17580  001B9A  D00C               	bra	u12610
 17581  001B9C                     u12617:
 17582  001B9C  CFF6 FFE9          	movff	tblptrl,fsr0l
 17583  001BA0  CFF7 FFEA          	movff	tblptrh,fsr0h
 17584  001BA4  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 17585  001BA8  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 17586  001BAC  CFEE F0C7          	movff	postinc0,??_TCP_FiniteStateMachine+4
 17587  001BB0  CFEE F0C8          	movff	postinc0,??_TCP_FiniteStateMachine+5
 17588  001BB4                     u12610:
 17589  001BB4  0E01               	movlw	1
 17590  001BB6  0100               	movlb	0	; () banked
 17591  001BB8  25C5               	addwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 17592  001BBA  6FC9               	movwf	(??_TCP_FiniteStateMachine+6)& (0+255),b
 17593  001BBC  0E00               	movlw	0
 17594  001BBE  21C6               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 17595  001BC0  6FCA               	movwf	(??_TCP_FiniteStateMachine+7)& (0+255),b
 17596  001BC2  0E00               	movlw	0
 17597  001BC4  21C7               	addwfc	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 17598  001BC6  6FCB               	movwf	(??_TCP_FiniteStateMachine+8)& (0+255),b
 17599  001BC8  0E00               	movlw	0
 17600  001BCA  21C8               	addwfc	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 17601  001BCC  6FCC               	movwf	(??_TCP_FiniteStateMachine+9)& (0+255),b
 17602  001BCE  0101               	movlb	1	; () banked
 17603  001BD0  51C4               	movf	(_tcpHeader+8)& (0+255),w,b
 17604  001BD2  0100               	movlb	0	; () banked
 17605  001BD4  19C9               	xorwf	(??_TCP_FiniteStateMachine+6)& (0+255),w,b
 17606  001BD6  E10F               	bnz	u12621
 17607  001BD8  0101               	movlb	1	; () banked
 17608  001BDA  51C5               	movf	(_tcpHeader+9)& (0+255),w,b
 17609  001BDC  0100               	movlb	0	; () banked
 17610  001BDE  19CA               	xorwf	(??_TCP_FiniteStateMachine+7)& (0+255),w,b
 17611  001BE0  E10A               	bnz	u12621
 17612  001BE2  0101               	movlb	1	; () banked
 17613  001BE4  51C6               	movf	(_tcpHeader+10)& (0+255),w,b
 17614  001BE6  0100               	movlb	0	; () banked
 17615  001BE8  19CB               	xorwf	(??_TCP_FiniteStateMachine+8)& (0+255),w,b
 17616  001BEA  E105               	bnz	u12621
 17617  001BEC  0101               	movlb	1	; () banked
 17618  001BEE  51C7               	movf	(_tcpHeader+11)& (0+255),w,b
 17619  001BF0  0100               	movlb	0	; () banked
 17620  001BF2  19CC               	xorwf	(??_TCP_FiniteStateMachine+9)& (0+255),w,b
 17621  001BF4  A4D8               	btfss	status,2,c
 17622  001BF6                     u12621:
 17623  001BF6  D145               	goto	l8908
 17624                           
 17625                           ; BSR set to: 0
 17626                           ;tcpv4.c: 718: {
 17627                           ;tcpv4.c: 720: currentTCB->localSeqno = currentTCB->localSeqno + 1;
 17628  001BF8  0E10               	movlw	16
 17629  001BFA  25FE               	addwf	_currentTCB& (0+255),w,b
 17630  001BFC  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17631  001BFE  0E00               	movlw	0
 17632  001C00  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17633  001C02  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17634  001C04  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17635  001C08  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17636  001C0C  0E00               	movlw	low (__smallconst shr (0+16))
 17637  001C0E  6EF8               	movwf	tblptru,c
 17638  001C10  0E0F               	movlw	(high __ramtop+-1)
 17639  001C12  64F7               	cpfsgt	tblptrh,c
 17640  001C14  D00D               	bra	u12637
 17641  001C16  0009               	tblrd		*+
 17642  001C18  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 17643  001C1C  0009               	tblrd		*+
 17644  001C1E  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 17645  001C22  0009               	tblrd		*+
 17646  001C24  CFF5 F0C7          	movff	tablat,??_TCP_FiniteStateMachine+4
 17647  001C28  0009               	tblrd		*+
 17648  001C2A  CFF5 F0C8          	movff	tablat,??_TCP_FiniteStateMachine+5
 17649  001C2E  D00C               	bra	u12630
 17650  001C30                     u12637:
 17651  001C30  CFF6 FFE9          	movff	tblptrl,fsr0l
 17652  001C34  CFF7 FFEA          	movff	tblptrh,fsr0h
 17653  001C38  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 17654  001C3C  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 17655  001C40  CFEE F0C7          	movff	postinc0,??_TCP_FiniteStateMachine+4
 17656  001C44  CFEE F0C8          	movff	postinc0,??_TCP_FiniteStateMachine+5
 17657  001C48                     u12630:
 17658  001C48  0E01               	movlw	1
 17659  001C4A  0100               	movlb	0	; () banked
 17660  001C4C  25C5               	addwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 17661  001C4E  6FC9               	movwf	(??_TCP_FiniteStateMachine+6)& (0+255),b
 17662  001C50  0E00               	movlw	0
 17663  001C52  21C6               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 17664  001C54  6FCA               	movwf	(??_TCP_FiniteStateMachine+7)& (0+255),b
 17665  001C56  0E00               	movlw	0
 17666  001C58  21C7               	addwfc	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 17667  001C5A  6FCB               	movwf	(??_TCP_FiniteStateMachine+8)& (0+255),b
 17668  001C5C  0E00               	movlw	0
 17669  001C5E  21C8               	addwfc	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 17670  001C60  6FCC               	movwf	(??_TCP_FiniteStateMachine+9)& (0+255),b
 17671  001C62  0E10               	movlw	16
 17672  001C64  25FE               	addwf	_currentTCB& (0+255),w,b
 17673  001C66  6FCD               	movwf	(??_TCP_FiniteStateMachine+10)& (0+255),b
 17674  001C68  0E00               	movlw	0
 17675  001C6A  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17676  001C6C  6FCE               	movwf	(??_TCP_FiniteStateMachine+11)& (0+255),b
 17677  001C6E  C0CD  FFF6         	movff	??_TCP_FiniteStateMachine+10,tblptrl
 17678  001C72  C0CE  FFF7         	movff	??_TCP_FiniteStateMachine+11,tblptrh
 17679  001C76  0E00               	movlw	low (__smallconst shr (0+16))
 17680  001C78  6EF8               	movwf	tblptru,c
 17681  001C7A  0E0F               	movlw	(high __ramtop+-1)
 17682  001C7C  64F7               	cpfsgt	tblptrh,c
 17683  001C7E  D00D               	bra	u12647
 17684  001C80  C0C9  FFF5         	movff	??_TCP_FiniteStateMachine+6,tablat
 17685  001C84  000D               	tblwt		*+
 17686  001C86  C0CA  FFF5         	movff	??_TCP_FiniteStateMachine+7,tablat
 17687  001C8A  000D               	tblwt		*+
 17688  001C8C  C0CB  FFF5         	movff	??_TCP_FiniteStateMachine+8,tablat
 17689  001C90  000D               	tblwt		*+
 17690  001C92  C0CC  FFF5         	movff	??_TCP_FiniteStateMachine+9,tablat
 17691  001C96  000C               	tblwt		*
 17692  001C98  D00C               	bra	u12640
 17693  001C9A                     u12647:
 17694  001C9A  CFF6 FFE9          	movff	tblptrl,fsr0l
 17695  001C9E  CFF7 FFEA          	movff	tblptrh,fsr0h
 17696  001CA2  C0C9  FFEE         	movff	??_TCP_FiniteStateMachine+6,postinc0
 17697  001CA6  C0CA  FFEE         	movff	??_TCP_FiniteStateMachine+7,postinc0
 17698  001CAA  C0CB  FFEE         	movff	??_TCP_FiniteStateMachine+8,postinc0
 17699  001CAE  C0CC  FFEF         	movff	??_TCP_FiniteStateMachine+9,indf0
 17700  001CB2                     u12640:
 17701                           
 17702                           ;tcpv4.c: 721: currentTCB->flags = 0x10U;
 17703  001CB2  0E35               	movlw	53
 17704  001CB4  0100               	movlb	0	; () banked
 17705  001CB6  25FE               	addwf	_currentTCB& (0+255),w,b
 17706  001CB8  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17707  001CBA  0E00               	movlw	0
 17708  001CBC  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17709  001CBE  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17710  001CC0  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17711  001CC4  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17712  001CC8  0E00               	movlw	low (__smallconst shr (0+16))
 17713  001CCA  6EF8               	movwf	tblptru,c
 17714  001CCC  0E0F               	movlw	(high __ramtop+-1)
 17715  001CCE  64F7               	cpfsgt	tblptrh,c
 17716  001CD0  D004               	bra	u12657
 17717  001CD2  0E10               	movlw	16
 17718  001CD4  6EF5               	movwf	tablat,c
 17719  001CD6  000C               	tblwt		*
 17720  001CD8  D006               	bra	u12650
 17721  001CDA                     u12657:
 17722  001CDA  CFF6 FFE9          	movff	tblptrl,fsr0l
 17723  001CDE  CFF7 FFEA          	movff	tblptrh,fsr0h
 17724  001CE2  0E10               	movlw	16
 17725  001CE4  6EEF               	movwf	indf0,c
 17726  001CE6                     u12650:
 17727                           
 17728                           ;tcpv4.c: 724: currentTCB->remoteSeqno = tcpHeader.sequenceNumber;
 17729  001CE6  0E08               	movlw	8
 17730  001CE8  0100               	movlb	0	; () banked
 17731  001CEA  25FE               	addwf	_currentTCB& (0+255),w,b
 17732  001CEC  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17733  001CEE  0E00               	movlw	0
 17734  001CF0  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17735  001CF2  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17736  001CF4  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17737  001CF8  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17738  001CFC  0E00               	movlw	low (__smallconst shr (0+16))
 17739  001CFE  6EF8               	movwf	tblptru,c
 17740  001D00  0E0F               	movlw	(high __ramtop+-1)
 17741  001D02  64F7               	cpfsgt	tblptrh,c
 17742  001D04  D00D               	bra	u12667
 17743  001D06  C1C0  FFF5         	movff	_tcpHeader+4,tablat
 17744  001D0A  000D               	tblwt		*+
 17745  001D0C  C1C1  FFF5         	movff	_tcpHeader+5,tablat
 17746  001D10  000D               	tblwt		*+
 17747  001D12  C1C2  FFF5         	movff	_tcpHeader+6,tablat
 17748  001D16  000D               	tblwt		*+
 17749  001D18  C1C3  FFF5         	movff	_tcpHeader+7,tablat
 17750  001D1C  000C               	tblwt		*
 17751  001D1E  D00C               	bra	u12660
 17752  001D20                     u12667:
 17753  001D20  CFF6 FFE9          	movff	tblptrl,fsr0l
 17754  001D24  CFF7 FFEA          	movff	tblptrh,fsr0h
 17755  001D28  C1C0  FFEE         	movff	_tcpHeader+4,postinc0
 17756  001D2C  C1C1  FFEE         	movff	_tcpHeader+5,postinc0
 17757  001D30  C1C2  FFEE         	movff	_tcpHeader+6,postinc0
 17758  001D34  C1C3  FFEF         	movff	_tcpHeader+7,indf0
 17759  001D38                     u12660:
 17760                           
 17761                           ;tcpv4.c: 725: currentTCB->remoteAck = tcpHeader.sequenceNumber + 1;
 17762  001D38  0E01               	movlw	1
 17763  001D3A  0101               	movlb	1	; () banked
 17764  001D3C  25C0               	addwf	(_tcpHeader+4)& (0+255),w,b
 17765  001D3E  0100               	movlb	0	; () banked
 17766  001D40  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17767  001D42  0E00               	movlw	0
 17768  001D44  0101               	movlb	1	; () banked
 17769  001D46  21C1               	addwfc	(_tcpHeader+5)& (0+255),w,b
 17770  001D48  0100               	movlb	0	; () banked
 17771  001D4A  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17772  001D4C  0E00               	movlw	0
 17773  001D4E  0101               	movlb	1	; () banked
 17774  001D50  21C2               	addwfc	(_tcpHeader+6)& (0+255),w,b
 17775  001D52  0100               	movlb	0	; () banked
 17776  001D54  6FC5               	movwf	(??_TCP_FiniteStateMachine+2)& (0+255),b
 17777  001D56  0E00               	movlw	0
 17778  001D58  0101               	movlb	1	; () banked
 17779  001D5A  21C3               	addwfc	(_tcpHeader+7)& (0+255),w,b
 17780  001D5C  0100               	movlb	0	; () banked
 17781  001D5E  6FC6               	movwf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 17782  001D60  0E0C               	movlw	12
 17783  001D62  25FE               	addwf	_currentTCB& (0+255),w,b
 17784  001D64  6FC7               	movwf	(??_TCP_FiniteStateMachine+4)& (0+255),b
 17785  001D66  0E00               	movlw	0
 17786  001D68  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17787  001D6A  6FC8               	movwf	(??_TCP_FiniteStateMachine+5)& (0+255),b
 17788  001D6C  C0C7  FFF6         	movff	??_TCP_FiniteStateMachine+4,tblptrl
 17789  001D70  C0C8  FFF7         	movff	??_TCP_FiniteStateMachine+5,tblptrh
 17790  001D74  0E00               	movlw	low (__smallconst shr (0+16))
 17791  001D76  6EF8               	movwf	tblptru,c
 17792  001D78  0E0F               	movlw	(high __ramtop+-1)
 17793  001D7A  64F7               	cpfsgt	tblptrh,c
 17794  001D7C  D00D               	bra	u12677
 17795  001D7E  C0C3  FFF5         	movff	??_TCP_FiniteStateMachine,tablat
 17796  001D82  000D               	tblwt		*+
 17797  001D84  C0C4  FFF5         	movff	??_TCP_FiniteStateMachine+1,tablat
 17798  001D88  000D               	tblwt		*+
 17799  001D8A  C0C5  FFF5         	movff	??_TCP_FiniteStateMachine+2,tablat
 17800  001D8E  000D               	tblwt		*+
 17801  001D90  C0C6  FFF5         	movff	??_TCP_FiniteStateMachine+3,tablat
 17802  001D94  000C               	tblwt		*
 17803  001D96  D00C               	bra	u12670
 17804  001D98                     u12677:
 17805  001D98  CFF6 FFE9          	movff	tblptrl,fsr0l
 17806  001D9C  CFF7 FFEA          	movff	tblptrh,fsr0h
 17807  001DA0  C0C3  FFEE         	movff	??_TCP_FiniteStateMachine,postinc0
 17808  001DA4  C0C4  FFEE         	movff	??_TCP_FiniteStateMachine+1,postinc0
 17809  001DA8  C0C5  FFEE         	movff	??_TCP_FiniteStateMachine+2,postinc0
 17810  001DAC  C0C6  FFEF         	movff	??_TCP_FiniteStateMachine+3,indf0
 17811  001DB0                     u12670:
 17812                           
 17813                           ;tcpv4.c: 727: currentTCB->remoteWnd = ((((uint16_t)tcpHeader.windowSize & (uint16_t)0xF
      +                          F00) >> 8) | (((uint16_t)tcpHeader.windowSize & (uint16_t)0x00FF) << 8));
 17814  001DB0  0101               	movlb	1	; () banked
 17815  001DB2  51CA               	movf	(_tcpHeader+14)& (0+255),w,b
 17816  001DB4  0100               	movlb	0	; () banked
 17817  001DB6  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17818  001DB8  6BC3               	clrf	??_TCP_FiniteStateMachine& (0+255),b
 17819  001DBA  EE21  F0CA         	lfsr	2,_tcpHeader+14
 17820  001DBE  CFDE F0C5          	movff	postinc2,??_TCP_FiniteStateMachine+2
 17821  001DC2  CFDD F0C6          	movff	postdec2,??_TCP_FiniteStateMachine+3
 17822  001DC6  C0C6  F0C5         	movff	??_TCP_FiniteStateMachine+3,??_TCP_FiniteStateMachine+2
 17823  001DCA  6BC6               	clrf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 17824  001DCC  6BC6               	clrf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 17825  001DCE  51C3               	movf	??_TCP_FiniteStateMachine& (0+255),w,b
 17826  001DD0  13C5               	iorwf	(??_TCP_FiniteStateMachine+2)& (0+255),f,b
 17827  001DD2  51C4               	movf	(??_TCP_FiniteStateMachine+1)& (0+255),w,b
 17828  001DD4  13C6               	iorwf	(??_TCP_FiniteStateMachine+3)& (0+255),f,b
 17829  001DD6  0E18               	movlw	24
 17830  001DD8  25FE               	addwf	_currentTCB& (0+255),w,b
 17831  001DDA  6FC7               	movwf	(??_TCP_FiniteStateMachine+4)& (0+255),b
 17832  001DDC  0E00               	movlw	0
 17833  001DDE  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17834  001DE0  6FC8               	movwf	(??_TCP_FiniteStateMachine+5)& (0+255),b
 17835  001DE2  C0C7  FFF6         	movff	??_TCP_FiniteStateMachine+4,tblptrl
 17836  001DE6  C0C8  FFF7         	movff	??_TCP_FiniteStateMachine+5,tblptrh
 17837  001DEA  0E00               	movlw	low (__smallconst shr (0+16))
 17838  001DEC  6EF8               	movwf	tblptru,c
 17839  001DEE  0E0F               	movlw	(high __ramtop+-1)
 17840  001DF0  64F7               	cpfsgt	tblptrh,c
 17841  001DF2  D007               	bra	u12687
 17842  001DF4  C0C5  FFF5         	movff	??_TCP_FiniteStateMachine+2,tablat
 17843  001DF8  000D               	tblwt		*+
 17844  001DFA  C0C6  FFF5         	movff	??_TCP_FiniteStateMachine+3,tablat
 17845  001DFE  000C               	tblwt		*
 17846  001E00  D008               	bra	u12680
 17847  001E02                     u12687:
 17848  001E02  CFF6 FFE9          	movff	tblptrl,fsr0l
 17849  001E06  CFF7 FFEA          	movff	tblptrh,fsr0h
 17850  001E0A  C0C5  FFEE         	movff	??_TCP_FiniteStateMachine+2,postinc0
 17851  001E0E  C0C6  FFEF         	movff	??_TCP_FiniteStateMachine+3,indf0
 17852  001E12                     u12680:
 17853                           
 17854                           ;tcpv4.c: 728: currentTCB->mss = tcpMss;
 17855  001E12  0E1C               	movlw	28
 17856  001E14  0100               	movlb	0	; () banked
 17857  001E16  25FE               	addwf	_currentTCB& (0+255),w,b
 17858  001E18  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17859  001E1A  0E00               	movlw	0
 17860  001E1C  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17861  001E1E  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17862  001E20  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17863  001E24  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17864  001E28  0E00               	movlw	low (__smallconst shr (0+16))
 17865  001E2A  6EF8               	movwf	tblptru,c
 17866  001E2C  0E0F               	movlw	(high __ramtop+-1)
 17867  001E2E  64F7               	cpfsgt	tblptrh,c
 17868  001E30  D007               	bra	u12697
 17869  001E32  C1A4  FFF5         	movff	_tcpMss,tablat
 17870  001E36  000D               	tblwt		*+
 17871  001E38  C1A5  FFF5         	movff	_tcpMss+1,tablat
 17872  001E3C  000C               	tblwt		*
 17873  001E3E  D008               	bra	u12690
 17874  001E40                     u12697:
 17875  001E40  CFF6 FFE9          	movff	tblptrl,fsr0l
 17876  001E44  CFF7 FFEA          	movff	tblptrh,fsr0h
 17877  001E48  C1A4  FFEE         	movff	_tcpMss,postinc0
 17878  001E4C  C1A5  FFEF         	movff	_tcpMss+1,indf0
 17879  001E50                     u12690:
 17880                           
 17881                           ;tcpv4.c: 730: nextState = ESTABLISHED;
 17882  001E50  0E04               	movlw	4
 17883  001E52  0100               	movlb	0	; () banked
 17884  001E54  6FD3               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 17885                           
 17886                           ; BSR set to: 0
 17887                           ;tcpv4.c: 731: currentTCB->socketState = SOCKET_CONNECTED;
 17888  001E56  0E36               	movlw	54
 17889  001E58  25FE               	addwf	_currentTCB& (0+255),w,b
 17890  001E5A  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17891  001E5C  0E00               	movlw	0
 17892  001E5E  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17893  001E60  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17894  001E62  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17895  001E66  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17896  001E6A  0E00               	movlw	low (__smallconst shr (0+16))
 17897  001E6C  6EF8               	movwf	tblptru,c
 17898  001E6E  0E0F               	movlw	(high __ramtop+-1)
 17899  001E70  64F7               	cpfsgt	tblptrh,c
 17900  001E72  D004               	bra	u12707
 17901  001E74  0E03               	movlw	3
 17902  001E76  6EF5               	movwf	tablat,c
 17903  001E78  000C               	tblwt		*
 17904  001E7A  D001               	bra	u12700
 17905  001E7C                     u12707:
 17906  001E7C  D380               	goto	u13057
 17907  001E7E                     u12700:
 17908                           
 17909                           ;tcpv4.c: 732: }
 17910  001E7E  EFFA  F01C         	goto	l9172
 17911  001E82                     l8908:
 17912                           
 17913                           ; BSR set to: 0
 17914                           ;tcpv4.c: 733: else
 17915                           ;tcpv4.c: 734: {
 17916                           ;tcpv4.c: 736: currentTCB->localSeqno = tcpHeader.ackNumber;
 17917  001E82  0E10               	movlw	16
 17918  001E84  25FE               	addwf	_currentTCB& (0+255),w,b
 17919  001E86  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17920  001E88  0E00               	movlw	0
 17921  001E8A  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17922  001E8C  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17923  001E8E  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17924  001E92  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17925  001E96  0E00               	movlw	low (__smallconst shr (0+16))
 17926  001E98  6EF8               	movwf	tblptru,c
 17927  001E9A  0E0F               	movlw	(high __ramtop+-1)
 17928  001E9C  64F7               	cpfsgt	tblptrh,c
 17929  001E9E  D00D               	bra	u12717
 17930  001EA0  C1C4  FFF5         	movff	_tcpHeader+8,tablat
 17931  001EA4  000D               	tblwt		*+
 17932  001EA6  C1C5  FFF5         	movff	_tcpHeader+9,tablat
 17933  001EAA  000D               	tblwt		*+
 17934  001EAC  C1C6  FFF5         	movff	_tcpHeader+10,tablat
 17935  001EB0  000D               	tblwt		*+
 17936  001EB2  C1C7  FFF5         	movff	_tcpHeader+11,tablat
 17937  001EB6  000C               	tblwt		*
 17938  001EB8  D00C               	bra	u12710
 17939  001EBA                     u12717:
 17940  001EBA  CFF6 FFE9          	movff	tblptrl,fsr0l
 17941  001EBE  CFF7 FFEA          	movff	tblptrh,fsr0h
 17942  001EC2  C1C4  FFEE         	movff	_tcpHeader+8,postinc0
 17943  001EC6  C1C5  FFEE         	movff	_tcpHeader+9,postinc0
 17944  001ECA  C1C6  FFEE         	movff	_tcpHeader+10,postinc0
 17945  001ECE  C1C7  FFEF         	movff	_tcpHeader+11,indf0
 17946  001ED2                     u12710:
 17947                           
 17948                           ;tcpv4.c: 737: currentTCB->flags = 0x04U;
 17949  001ED2  0E35               	movlw	53
 17950  001ED4  0100               	movlb	0	; () banked
 17951  001ED6  25FE               	addwf	_currentTCB& (0+255),w,b
 17952  001ED8  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17953  001EDA  0E00               	movlw	0
 17954  001EDC  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17955  001EDE  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17956  001EE0  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17957  001EE4  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17958  001EE8  0E00               	movlw	low (__smallconst shr (0+16))
 17959  001EEA  6EF8               	movwf	tblptru,c
 17960  001EEC  0E0F               	movlw	(high __ramtop+-1)
 17961  001EEE  64F7               	cpfsgt	tblptrh,c
 17962  001EF0  D004               	bra	u12727
 17963  001EF2  0E04               	movlw	4
 17964  001EF4  6EF5               	movwf	tablat,c
 17965  001EF6  000C               	tblwt		*
 17966  001EF8  D006               	bra	u12720
 17967  001EFA                     u12727:
 17968  001EFA  CFF6 FFE9          	movff	tblptrl,fsr0l
 17969  001EFE  CFF7 FFEA          	movff	tblptrh,fsr0h
 17970  001F02  0E04               	movlw	4
 17971  001F04  6EEF               	movwf	indf0,c
 17972  001F06                     u12720:
 17973                           
 17974                           ;tcpv4.c: 738: if(TCP_Snd(currentTCB))
 17975  001F06  C0FE  F058         	movff	_currentTCB,TCP_Snd@tcbPtr
 17976  001F0A  C0FF  F059         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 17977  001F0E  EC31  F01D         	call	_TCP_Snd	;wreg free
 17978  001F12  D608               	goto	L10
 17979  001F14                     l8918:
 17980                           
 17981                           ; BSR set to: 0
 17982                           ;tcpv4.c: 752: ;
 17983                           ;tcpv4.c: 755: if (currentTCB->timeoutsCount)
 17984  001F14  0E34               	movlw	52
 17985  001F16  25FE               	addwf	_currentTCB& (0+255),w,b
 17986  001F18  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 17987  001F1A  0E00               	movlw	0
 17988  001F1C  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 17989  001F1E  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 17990  001F20  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 17991  001F24  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 17992  001F28  0E00               	movlw	low (__smallconst shr (0+16))
 17993  001F2A  6EF8               	movwf	tblptru,c
 17994  001F2C  0E0F               	movlw	(high __ramtop+-1)
 17995  001F2E  64F7               	cpfsgt	tblptrh,c
 17996  001F30  D003               	bra	u12747
 17997  001F32  0008               	tblrd		*
 17998  001F34  50F5               	movf	tablat,w,c
 17999  001F36  D005               	bra	u12740
 18000  001F38                     u12747:
 18001  001F38  CFF6 FFE9          	movff	tblptrl,fsr0l
 18002  001F3C  CFF7 FFEA          	movff	tblptrh,fsr0h
 18003  001F40  50EF               	movf	indf0,w,c
 18004  001F42                     u12740:
 18005  001F42  0900               	iorlw	0
 18006  001F44  E05A               	bz	l8934
 18007                           
 18008                           ;tcpv4.c: 756: {
 18009                           ;tcpv4.c: 757: if(TCP_Snd(currentTCB))
 18010  001F46  C0FE  F058         	movff	_currentTCB,TCP_Snd@tcbPtr
 18011  001F4A  C0FF  F059         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 18012  001F4E  EC31  F01D         	call	_TCP_Snd	;wreg free
 18013  001F52  0900               	iorlw	0
 18014  001F54  E102 EFFA  F01C    	bz	l9172
 18015                           
 18016                           ; BSR set to: 0
 18017                           ;tcpv4.c: 758: {
 18018                           ;tcpv4.c: 759: if (currentTCB->flags & 0x04U)
 18019  001F5A  0E35               	movlw	53
 18020  001F5C  25FE               	addwf	_currentTCB& (0+255),w,b
 18021  001F5E  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18022  001F60  0E00               	movlw	0
 18023  001F62  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18024  001F64  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18025  001F66  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18026  001F6A  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18027  001F6E  0E00               	movlw	low (__smallconst shr (0+16))
 18028  001F70  6EF8               	movwf	tblptru,c
 18029  001F72  0E0F               	movlw	(high __ramtop+-1)
 18030  001F74  64F7               	cpfsgt	tblptrh,c
 18031  001F76  D003               	bra	u12777
 18032  001F78  0008               	tblrd		*
 18033  001F7A  50F5               	movf	tablat,w,c
 18034  001F7C  D005               	bra	u12770
 18035  001F7E                     u12777:
 18036  001F7E  CFF6 FFE9          	movff	tblptrl,fsr0l
 18037  001F82  CFF7 FFEA          	movff	tblptrh,fsr0h
 18038  001F86  50EF               	movf	indf0,w,c
 18039  001F88                     u12770:
 18040  001F88  0100               	movlb	0	; () banked
 18041  001F8A  6FC5               	movwf	(??_TCP_FiniteStateMachine+2)& (0+255),b
 18042  001F8C  B5C5               	btfsc	(??_TCP_FiniteStateMachine+2)& (0+255),2,b
 18043  001F8E  EF61  F00A         	goto	l1293
 18044                           
 18045                           ; BSR set to: 0
 18046                           ;tcpv4.c: 764: if(currentTCB->flags & 0x10U)
 18047  001F92  0E35               	movlw	53
 18048  001F94  25FE               	addwf	_currentTCB& (0+255),w,b
 18049  001F96  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18050  001F98  0E00               	movlw	0
 18051  001F9A  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18052  001F9C  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18053  001F9E  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18054  001FA2  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18055  001FA6  0E00               	movlw	low (__smallconst shr (0+16))
 18056  001FA8  6EF8               	movwf	tblptru,c
 18057  001FAA  0E0F               	movlw	(high __ramtop+-1)
 18058  001FAC  64F7               	cpfsgt	tblptrh,c
 18059  001FAE  D003               	bra	u12797
 18060  001FB0  0008               	tblrd		*
 18061  001FB2  50F5               	movf	tablat,w,c
 18062  001FB4  D005               	bra	u12790
 18063  001FB6                     u12797:
 18064  001FB6  CFF6 FFE9          	movff	tblptrl,fsr0l
 18065  001FBA  CFF7 FFEA          	movff	tblptrh,fsr0h
 18066  001FBE  50EF               	movf	indf0,w,c
 18067  001FC0                     u12790:
 18068  001FC0  0100               	movlb	0	; () banked
 18069  001FC2  6FC5               	movwf	(??_TCP_FiniteStateMachine+2)& (0+255),b
 18070  001FC4  A9C5               	btfss	(??_TCP_FiniteStateMachine+2)& (0+255),4,b
 18071  001FC6  EFFA  F01C         	goto	l9172
 18072                           
 18073                           ; BSR set to: 0
 18074                           ;tcpv4.c: 765: {
 18075                           ;tcpv4.c: 766: nextState = ESTABLISHED;
 18076  001FCA  0E04               	movlw	4
 18077  001FCC  6FD3               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 18078                           
 18079                           ; BSR set to: 0
 18080                           ;tcpv4.c: 767: currentTCB->socketState = SOCKET_CONNECTED;
 18081  001FCE  0E36               	movlw	54
 18082  001FD0  25FE               	addwf	_currentTCB& (0+255),w,b
 18083  001FD2  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18084  001FD4  0E00               	movlw	0
 18085  001FD6  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18086  001FD8  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18087  001FDA  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18088  001FDE  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18089  001FE2  0E00               	movlw	low (__smallconst shr (0+16))
 18090  001FE4  6EF8               	movwf	tblptru,c
 18091  001FE6  0E0F               	movlw	(high __ramtop+-1)
 18092  001FE8  64F7               	cpfsgt	tblptrh,c
 18093  001FEA  D004               	bra	u12817
 18094  001FEC  0E03               	movlw	3
 18095  001FEE  6EF5               	movwf	tablat,c
 18096  001FF0  000C               	tblwt		*
 18097  001FF2  D001               	bra	u12810
 18098  001FF4                     u12817:
 18099  001FF4  D2C4               	goto	u13057
 18100  001FF6                     u12810:
 18101  001FF6  EFFA  F01C         	goto	l9172
 18102  001FFA                     l8934:
 18103                           
 18104                           ;tcpv4.c: 771: {
 18105                           ;tcpv4.c: 773: currentTCB->flags = 0x04U;
 18106  001FFA  0E35               	movlw	53
 18107  001FFC  0100               	movlb	0	; () banked
 18108  001FFE  25FE               	addwf	_currentTCB& (0+255),w,b
 18109  002000  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18110  002002  0E00               	movlw	0
 18111  002004  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18112  002006  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18113  002008  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18114  00200C  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18115  002010  0E00               	movlw	low (__smallconst shr (0+16))
 18116  002012  6EF8               	movwf	tblptru,c
 18117  002014  0E0F               	movlw	(high __ramtop+-1)
 18118  002016  64F7               	cpfsgt	tblptrh,c
 18119  002018  D004               	bra	u12827
 18120  00201A  0E04               	movlw	4
 18121  00201C  6EF5               	movwf	tablat,c
 18122  00201E  000C               	tblwt		*
 18123  002020  D006               	bra	u12820
 18124  002022                     u12827:
 18125  002022  CFF6 FFE9          	movff	tblptrl,fsr0l
 18126  002026  CFF7 FFEA          	movff	tblptrh,fsr0h
 18127  00202A  0E04               	movlw	4
 18128  00202C  6EEF               	movwf	indf0,c
 18129  00202E                     u12820:
 18130                           
 18131                           ;tcpv4.c: 774: if(TCP_Snd(currentTCB))
 18132  00202E  C0FE  F058         	movff	_currentTCB,TCP_Snd@tcbPtr
 18133  002032  C0FF  F059         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 18134  002036  EC31  F01D         	call	_TCP_Snd	;wreg free
 18135  00203A  D574               	goto	L10
 18136  00203C                     l8946:
 18137  00203C  0100               	movlb	0	; () banked
 18138  00203E  51D2               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 18139                           
 18140                           ; Switch size 1, requested type "speed"
 18141                           ; Number of cases is 7, Range of values is 0 to 12
 18142                           ; switch strategies available:
 18143                           ; Name         Instructions Cycles
 18144                           ; simple_byte           22    12 (average)
 18145                           ;	Chosen strategy is simple_byte
 18146  002040  E102 EF61  F00A    	bz	l1293
 18147  002046  0A03               	xorlw	3	; case 3
 18148  002048  E102 EF73  F00A    	bz	l8856
 18149  00204E  0A07               	xorlw	7	; case 4
 18150  002050  E101 D56D          	bz	l8896
 18151  002054  0A01               	xorlw	1	; case 5
 18152  002056  E102 EF96  F00B    	bz	l8874
 18153  00205C  0A0C               	xorlw	12	; case 9
 18154  00205E  E102 EF61  F00A    	bz	l1293
 18155  002064  0A03               	xorlw	3	; case 10
 18156  002066  E102 EF61  F00A    	bz	l1293
 18157  00206C  0A06               	xorlw	6	; case 12
 18158  00206E  E101 D751          	bz	l8918
 18159  002072  EFFA  F01C         	goto	l9172
 18160  002076                     l8948:
 18161                           
 18162                           ; BSR set to: 0
 18163                           ;tcpv4.c: 796: ;
 18164                           ;tcpv4.c: 797: if (currentTCB->localPort == tcpHeader.destPort)
 18165  002076  C0FE  FFF6         	movff	_currentTCB,tblptrl
 18166  00207A  C0FF  FFF7         	movff	_currentTCB+1,tblptrh
 18167  00207E  0E00               	movlw	low (__smallconst shr (0+16))
 18168  002080  6EF8               	movwf	tblptru,c
 18169  002082  0E0F               	movlw	(high __ramtop+-1)
 18170  002084  64F7               	cpfsgt	tblptrh,c
 18171  002086  D007               	bra	u12847
 18172  002088  0009               	tblrd		*+
 18173  00208A  CFF5 F0C3          	movff	tablat,??_TCP_FiniteStateMachine
 18174  00208E  0009               	tblrd		*+
 18175  002090  CFF5 F0C4          	movff	tablat,??_TCP_FiniteStateMachine+1
 18176  002094  D008               	bra	u12840
 18177  002096                     u12847:
 18178  002096  CFF6 FFE9          	movff	tblptrl,fsr0l
 18179  00209A  CFF7 FFEA          	movff	tblptrh,fsr0h
 18180  00209E  CFEE F0C3          	movff	postinc0,??_TCP_FiniteStateMachine
 18181  0020A2  CFEE F0C4          	movff	postinc0,??_TCP_FiniteStateMachine+1
 18182  0020A6                     u12840:
 18183  0020A6  0101               	movlb	1	; () banked
 18184  0020A8  51BE               	movf	(_tcpHeader+2)& (0+255),w,b
 18185  0020AA  0100               	movlb	0	; () banked
 18186  0020AC  19C3               	xorwf	??_TCP_FiniteStateMachine& (0+255),w,b
 18187  0020AE  E105               	bnz	u12851
 18188  0020B0  0101               	movlb	1	; () banked
 18189  0020B2  51BF               	movf	(_tcpHeader+3)& (0+255),w,b
 18190  0020B4  0100               	movlb	0	; () banked
 18191  0020B6  19C4               	xorwf	(??_TCP_FiniteStateMachine+1)& (0+255),w,b
 18192  0020B8  A4D8               	btfss	status,2,c
 18193  0020BA                     u12851:
 18194  0020BA  EFFA  F01C         	goto	l9172
 18195                           
 18196                           ; BSR set to: 0
 18197                           ;tcpv4.c: 798: {
 18198                           ;tcpv4.c: 800: currentTCB->timeout = 0;
 18199  0020BE  0E30               	movlw	48
 18200  0020C0  25FE               	addwf	_currentTCB& (0+255),w,b
 18201  0020C2  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18202  0020C4  0E00               	movlw	0
 18203  0020C6  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18204  0020C8  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18205  0020CA  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18206  0020CE  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18207  0020D2  0E00               	movlw	low (__smallconst shr (0+16))
 18208  0020D4  6EF8               	movwf	tblptru,c
 18209  0020D6  0E0F               	movlw	(high __ramtop+-1)
 18210  0020D8  64F7               	cpfsgt	tblptrh,c
 18211  0020DA  D005               	bra	u12867
 18212  0020DC  6AF5               	clrf	tablat,c
 18213  0020DE  000D               	tblwt		*+
 18214  0020E0  6AF5               	clrf	tablat,c
 18215  0020E2  000C               	tblwt		*
 18216  0020E4  D006               	bra	u12860
 18217  0020E6                     u12867:
 18218  0020E6  CFF6 FFE9          	movff	tblptrl,fsr0l
 18219  0020EA  CFF7 FFEA          	movff	tblptrh,fsr0h
 18220  0020EE  6AEE               	clrf	postinc0,c
 18221  0020F0  6AEF               	clrf	indf0,c
 18222  0020F2                     u12860:
 18223                           
 18224                           ;tcpv4.c: 804: if ((currentTCB->destIP == receivedRemoteAddress) && (currentTCB->destPor
      +                          t == tcpHeader.sourcePort))
 18225  0020F2  0E02               	movlw	2
 18226  0020F4  0100               	movlb	0	; () banked
 18227  0020F6  25FE               	addwf	_currentTCB& (0+255),w,b
 18228  0020F8  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18229  0020FA  0E00               	movlw	0
 18230  0020FC  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18231  0020FE  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18232  002100  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18233  002104  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18234  002108  0E00               	movlw	low (__smallconst shr (0+16))
 18235  00210A  6EF8               	movwf	tblptru,c
 18236  00210C  0E0F               	movlw	(high __ramtop+-1)
 18237  00210E  64F7               	cpfsgt	tblptrh,c
 18238  002110  D00D               	bra	u12877
 18239  002112  0009               	tblrd		*+
 18240  002114  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 18241  002118  0009               	tblrd		*+
 18242  00211A  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 18243  00211E  0009               	tblrd		*+
 18244  002120  CFF5 F0C7          	movff	tablat,??_TCP_FiniteStateMachine+4
 18245  002124  0009               	tblrd		*+
 18246  002126  CFF5 F0C8          	movff	tablat,??_TCP_FiniteStateMachine+5
 18247  00212A  D00C               	bra	u12870
 18248  00212C                     u12877:
 18249  00212C  CFF6 FFE9          	movff	tblptrl,fsr0l
 18250  002130  CFF7 FFEA          	movff	tblptrh,fsr0h
 18251  002134  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 18252  002138  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 18253  00213C  CFEE F0C7          	movff	postinc0,??_TCP_FiniteStateMachine+4
 18254  002140  CFEE F0C8          	movff	postinc0,??_TCP_FiniteStateMachine+5
 18255  002144                     u12870:
 18256  002144  0101               	movlb	1	; () banked
 18257  002146  5196               	movf	_receivedRemoteAddress& (0+255),w,b
 18258  002148  0100               	movlb	0	; () banked
 18259  00214A  19C5               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 18260  00214C  E10F               	bnz	u12881
 18261  00214E  0101               	movlb	1	; () banked
 18262  002150  5197               	movf	(_receivedRemoteAddress+1)& (0+255),w,b
 18263  002152  0100               	movlb	0	; () banked
 18264  002154  19C6               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 18265  002156  E17E               	bnz	l8958
 18266  002158  0101               	movlb	1	; () banked
 18267  00215A  5198               	movf	(_receivedRemoteAddress+2)& (0+255),w,b
 18268  00215C  0100               	movlb	0	; () banked
 18269  00215E  19C7               	xorwf	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 18270  002160  E179               	bnz	l8958
 18271  002162  0101               	movlb	1	; () banked
 18272  002164  5199               	movf	(_receivedRemoteAddress+3)& (0+255),w,b
 18273  002166  0100               	movlb	0	; () banked
 18274  002168  19C8               	xorwf	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 18275  00216A  A4D8               	btfss	status,2,c
 18276  00216C                     u12881:
 18277  00216C  D073               	goto	l8958
 18278                           
 18279                           ; BSR set to: 0
 18280  00216E  0E06               	movlw	6
 18281  002170  25FE               	addwf	_currentTCB& (0+255),w,b
 18282  002172  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18283  002174  0E00               	movlw	0
 18284  002176  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18285  002178  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18286  00217A  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18287  00217E  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18288  002182  0E00               	movlw	low (__smallconst shr (0+16))
 18289  002184  6EF8               	movwf	tblptru,c
 18290  002186  0E0F               	movlw	(high __ramtop+-1)
 18291  002188  64F7               	cpfsgt	tblptrh,c
 18292  00218A  D007               	bra	u12897
 18293  00218C  0009               	tblrd		*+
 18294  00218E  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 18295  002192  0009               	tblrd		*+
 18296  002194  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 18297  002198  D008               	bra	u12890
 18298  00219A                     u12897:
 18299  00219A  CFF6 FFE9          	movff	tblptrl,fsr0l
 18300  00219E  CFF7 FFEA          	movff	tblptrh,fsr0h
 18301  0021A2  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 18302  0021A6  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 18303  0021AA                     u12890:
 18304  0021AA  0101               	movlb	1	; () banked
 18305  0021AC  51BC               	movf	_tcpHeader& (0+255),w,b
 18306  0021AE  0100               	movlb	0	; () banked
 18307  0021B0  19C5               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 18308  0021B2  E150               	bnz	l8958
 18309  0021B4  0101               	movlb	1	; () banked
 18310  0021B6  51BD               	movf	(_tcpHeader+1)& (0+255),w,b
 18311  0021B8  0100               	movlb	0	; () banked
 18312  0021BA  19C6               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 18313  0021BC  E14B               	bnz	l8958
 18314                           
 18315                           ; BSR set to: 0
 18316                           ;tcpv4.c: 805: if ((currentTCB->localSeqno + 1) == tcpHeader.ackNumber)
 18317  0021BE  0E10               	movlw	16
 18318  0021C0  25FE               	addwf	_currentTCB& (0+255),w,b
 18319  0021C2  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18320  0021C4  0E00               	movlw	0
 18321  0021C6  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18322  0021C8  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18323  0021CA  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18324  0021CE  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18325  0021D2  0E00               	movlw	low (__smallconst shr (0+16))
 18326  0021D4  6EF8               	movwf	tblptru,c
 18327  0021D6  0E0F               	movlw	(high __ramtop+-1)
 18328  0021D8  64F7               	cpfsgt	tblptrh,c
 18329  0021DA  D00D               	bra	u12917
 18330  0021DC  0009               	tblrd		*+
 18331  0021DE  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 18332  0021E2  0009               	tblrd		*+
 18333  0021E4  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 18334  0021E8  0009               	tblrd		*+
 18335  0021EA  CFF5 F0C7          	movff	tablat,??_TCP_FiniteStateMachine+4
 18336  0021EE  0009               	tblrd		*+
 18337  0021F0  CFF5 F0C8          	movff	tablat,??_TCP_FiniteStateMachine+5
 18338  0021F4  D00C               	bra	u12910
 18339  0021F6                     u12917:
 18340  0021F6  CFF6 FFE9          	movff	tblptrl,fsr0l
 18341  0021FA  CFF7 FFEA          	movff	tblptrh,fsr0h
 18342  0021FE  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 18343  002202  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 18344  002206  CFEE F0C7          	movff	postinc0,??_TCP_FiniteStateMachine+4
 18345  00220A  CFEE F0C8          	movff	postinc0,??_TCP_FiniteStateMachine+5
 18346  00220E                     u12910:
 18347  00220E  0E01               	movlw	1
 18348  002210  0100               	movlb	0	; () banked
 18349  002212  25C5               	addwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 18350  002214  6FC9               	movwf	(??_TCP_FiniteStateMachine+6)& (0+255),b
 18351  002216  0E00               	movlw	0
 18352  002218  21C6               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 18353  00221A  6FCA               	movwf	(??_TCP_FiniteStateMachine+7)& (0+255),b
 18354  00221C  0E00               	movlw	0
 18355  00221E  21C7               	addwfc	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 18356  002220  6FCB               	movwf	(??_TCP_FiniteStateMachine+8)& (0+255),b
 18357  002222  0E00               	movlw	0
 18358  002224  21C8               	addwfc	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 18359  002226  6FCC               	movwf	(??_TCP_FiniteStateMachine+9)& (0+255),b
 18360  002228  0101               	movlb	1	; () banked
 18361  00222A  51C4               	movf	(_tcpHeader+8)& (0+255),w,b
 18362  00222C  0100               	movlb	0	; () banked
 18363  00222E  19C9               	xorwf	(??_TCP_FiniteStateMachine+6)& (0+255),w,b
 18364  002230  E111               	bnz	l8958
 18365  002232  0101               	movlb	1	; () banked
 18366  002234  51C5               	movf	(_tcpHeader+9)& (0+255),w,b
 18367  002236  0100               	movlb	0	; () banked
 18368  002238  19CA               	xorwf	(??_TCP_FiniteStateMachine+7)& (0+255),w,b
 18369  00223A  E10C               	bnz	l8958
 18370  00223C  0101               	movlb	1	; () banked
 18371  00223E  51C6               	movf	(_tcpHeader+10)& (0+255),w,b
 18372  002240  0100               	movlb	0	; () banked
 18373  002242  19CB               	xorwf	(??_TCP_FiniteStateMachine+8)& (0+255),w,b
 18374  002244  E107               	bnz	l8958
 18375  002246  0101               	movlb	1	; () banked
 18376  002248  51C7               	movf	(_tcpHeader+11)& (0+255),w,b
 18377  00224A  0100               	movlb	0	; () banked
 18378  00224C  19CC               	xorwf	(??_TCP_FiniteStateMachine+9)& (0+255),w,b
 18379  00224E  E102               	bnz	l8958
 18380                           
 18381                           ; BSR set to: 0
 18382                           ;tcpv4.c: 807: nextState = ESTABLISHED;
 18383  002250  0E04               	movlw	4
 18384  002252  6FD3               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 18385  002254                     l8958:
 18386                           
 18387                           ; BSR set to: 0
 18388                           ;tcpv4.c: 808: currentTCB->socketState = SOCKET_CONNECTED;
 18389  002254  0E36               	movlw	54
 18390  002256  25FE               	addwf	_currentTCB& (0+255),w,b
 18391  002258  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18392  00225A  0E00               	movlw	0
 18393  00225C  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18394  00225E  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18395  002260  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18396  002264  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18397  002268  0E00               	movlw	low (__smallconst shr (0+16))
 18398  00226A  6EF8               	movwf	tblptru,c
 18399  00226C  0E0F               	movlw	(high __ramtop+-1)
 18400  00226E  64F7               	cpfsgt	tblptrh,c
 18401  002270  D004               	bra	u12937
 18402  002272  0E03               	movlw	3
 18403  002274  6EF5               	movwf	tablat,c
 18404  002276  000C               	tblwt		*
 18405  002278  D001               	bra	u12930
 18406  00227A                     u12937:
 18407  00227A  D181               	goto	u13057
 18408  00227C                     u12930:
 18409  00227C  EFFA  F01C         	goto	l9172
 18410  002280                     l8960:
 18411                           
 18412                           ; BSR set to: 0
 18413                           ;tcpv4.c: 812: ;
 18414                           ;tcpv4.c: 816: if ((currentTCB->destIP == receivedRemoteAddress) && (currentTCB->destPor
      +                          t == tcpHeader.sourcePort))
 18415  002280  0E02               	movlw	2
 18416  002282  25FE               	addwf	_currentTCB& (0+255),w,b
 18417  002284  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18418  002286  0E00               	movlw	0
 18419  002288  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18420  00228A  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18421  00228C  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18422  002290  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18423  002294  0E00               	movlw	low (__smallconst shr (0+16))
 18424  002296  6EF8               	movwf	tblptru,c
 18425  002298  0E0F               	movlw	(high __ramtop+-1)
 18426  00229A  64F7               	cpfsgt	tblptrh,c
 18427  00229C  D00D               	bra	u12947
 18428  00229E  0009               	tblrd		*+
 18429  0022A0  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 18430  0022A4  0009               	tblrd		*+
 18431  0022A6  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 18432  0022AA  0009               	tblrd		*+
 18433  0022AC  CFF5 F0C7          	movff	tablat,??_TCP_FiniteStateMachine+4
 18434  0022B0  0009               	tblrd		*+
 18435  0022B2  CFF5 F0C8          	movff	tablat,??_TCP_FiniteStateMachine+5
 18436  0022B6  D00C               	bra	u12940
 18437  0022B8                     u12947:
 18438  0022B8  CFF6 FFE9          	movff	tblptrl,fsr0l
 18439  0022BC  CFF7 FFEA          	movff	tblptrh,fsr0h
 18440  0022C0  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 18441  0022C4  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 18442  0022C8  CFEE F0C7          	movff	postinc0,??_TCP_FiniteStateMachine+4
 18443  0022CC  CFEE F0C8          	movff	postinc0,??_TCP_FiniteStateMachine+5
 18444  0022D0                     u12940:
 18445  0022D0  0101               	movlb	1	; () banked
 18446  0022D2  5196               	movf	_receivedRemoteAddress& (0+255),w,b
 18447  0022D4  0100               	movlb	0	; () banked
 18448  0022D6  19C5               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 18449  0022D8  E10F               	bnz	u12951
 18450  0022DA  0101               	movlb	1	; () banked
 18451  0022DC  5197               	movf	(_receivedRemoteAddress+1)& (0+255),w,b
 18452  0022DE  0100               	movlb	0	; () banked
 18453  0022E0  19C6               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 18454  0022E2  E10A               	bnz	u12951
 18455  0022E4  0101               	movlb	1	; () banked
 18456  0022E6  5198               	movf	(_receivedRemoteAddress+2)& (0+255),w,b
 18457  0022E8  0100               	movlb	0	; () banked
 18458  0022EA  19C7               	xorwf	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 18459  0022EC  E105               	bnz	u12951
 18460  0022EE  0101               	movlb	1	; () banked
 18461  0022F0  5199               	movf	(_receivedRemoteAddress+3)& (0+255),w,b
 18462  0022F2  0100               	movlb	0	; () banked
 18463  0022F4  19C8               	xorwf	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 18464  0022F6  A4D8               	btfss	status,2,c
 18465  0022F8                     u12951:
 18466  0022F8  EFFA  F01C         	goto	l9172
 18467                           
 18468                           ; BSR set to: 0
 18469  0022FC  0E06               	movlw	6
 18470  0022FE  25FE               	addwf	_currentTCB& (0+255),w,b
 18471  002300  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18472  002302  0E00               	movlw	0
 18473  002304  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18474  002306  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18475  002308  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18476  00230C  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18477  002310  0E00               	movlw	low (__smallconst shr (0+16))
 18478  002312  6EF8               	movwf	tblptru,c
 18479  002314  0E0F               	movlw	(high __ramtop+-1)
 18480  002316  64F7               	cpfsgt	tblptrh,c
 18481  002318  D007               	bra	u12967
 18482  00231A  0009               	tblrd		*+
 18483  00231C  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 18484  002320  0009               	tblrd		*+
 18485  002322  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 18486  002326  D008               	bra	u12960
 18487  002328                     u12967:
 18488  002328  CFF6 FFE9          	movff	tblptrl,fsr0l
 18489  00232C  CFF7 FFEA          	movff	tblptrh,fsr0h
 18490  002330  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 18491  002334  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 18492  002338                     u12960:
 18493  002338  0101               	movlb	1	; () banked
 18494  00233A  51BC               	movf	_tcpHeader& (0+255),w,b
 18495  00233C  0100               	movlb	0	; () banked
 18496  00233E  19C5               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 18497  002340  E105               	bnz	u12971
 18498  002342  0101               	movlb	1	; () banked
 18499  002344  51BD               	movf	(_tcpHeader+1)& (0+255),w,b
 18500  002346  0100               	movlb	0	; () banked
 18501  002348  19C6               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 18502  00234A  A4D8               	btfss	status,2,c
 18503  00234C                     u12971:
 18504  00234C  EFFA  F01C         	goto	l9172
 18505                           
 18506                           ; BSR set to: 0
 18507                           ;tcpv4.c: 817: {
 18508                           ;tcpv4.c: 820: if (currentTCB->remoteAck == tcpHeader.sequenceNumber)
 18509  002350  0E0C               	movlw	12
 18510  002352  25FE               	addwf	_currentTCB& (0+255),w,b
 18511  002354  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18512  002356  0E00               	movlw	0
 18513  002358  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18514  00235A  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18515  00235C  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18516  002360  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18517  002364  0E00               	movlw	low (__smallconst shr (0+16))
 18518  002366  6EF8               	movwf	tblptru,c
 18519  002368  0E0F               	movlw	(high __ramtop+-1)
 18520  00236A  64F7               	cpfsgt	tblptrh,c
 18521  00236C  D00D               	bra	u12987
 18522  00236E  0009               	tblrd		*+
 18523  002370  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 18524  002374  0009               	tblrd		*+
 18525  002376  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 18526  00237A  0009               	tblrd		*+
 18527  00237C  CFF5 F0C7          	movff	tablat,??_TCP_FiniteStateMachine+4
 18528  002380  0009               	tblrd		*+
 18529  002382  CFF5 F0C8          	movff	tablat,??_TCP_FiniteStateMachine+5
 18530  002386  D00C               	bra	u12980
 18531  002388                     u12987:
 18532  002388  CFF6 FFE9          	movff	tblptrl,fsr0l
 18533  00238C  CFF7 FFEA          	movff	tblptrh,fsr0h
 18534  002390  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 18535  002394  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 18536  002398  CFEE F0C7          	movff	postinc0,??_TCP_FiniteStateMachine+4
 18537  00239C  CFEE F0C8          	movff	postinc0,??_TCP_FiniteStateMachine+5
 18538  0023A0                     u12980:
 18539  0023A0  0101               	movlb	1	; () banked
 18540  0023A2  51C0               	movf	(_tcpHeader+4)& (0+255),w,b
 18541  0023A4  0100               	movlb	0	; () banked
 18542  0023A6  19C5               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 18543  0023A8  E10F               	bnz	u12991
 18544  0023AA  0101               	movlb	1	; () banked
 18545  0023AC  51C1               	movf	(_tcpHeader+5)& (0+255),w,b
 18546  0023AE  0100               	movlb	0	; () banked
 18547  0023B0  19C6               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 18548  0023B2  E10A               	bnz	u12991
 18549  0023B4  0101               	movlb	1	; () banked
 18550  0023B6  51C2               	movf	(_tcpHeader+6)& (0+255),w,b
 18551  0023B8  0100               	movlb	0	; () banked
 18552  0023BA  19C7               	xorwf	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 18553  0023BC  E105               	bnz	u12991
 18554  0023BE  0101               	movlb	1	; () banked
 18555  0023C0  51C3               	movf	(_tcpHeader+7)& (0+255),w,b
 18556  0023C2  0100               	movlb	0	; () banked
 18557  0023C4  19C8               	xorwf	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 18558  0023C6  A4D8               	btfss	status,2,c
 18559  0023C8                     u12991:
 18560  0023C8  EFFA  F01C         	goto	l9172
 18561                           
 18562                           ; BSR set to: 0
 18563                           ;tcpv4.c: 821: {
 18564                           ;tcpv4.c: 823: if ((currentTCB->localSeqno + 1) == tcpHeader.ackNumber)
 18565  0023CC  0E10               	movlw	16
 18566  0023CE  25FE               	addwf	_currentTCB& (0+255),w,b
 18567  0023D0  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18568  0023D2  0E00               	movlw	0
 18569  0023D4  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18570  0023D6  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18571  0023D8  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18572  0023DC  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18573  0023E0  0E00               	movlw	low (__smallconst shr (0+16))
 18574  0023E2  6EF8               	movwf	tblptru,c
 18575  0023E4  0E0F               	movlw	(high __ramtop+-1)
 18576  0023E6  64F7               	cpfsgt	tblptrh,c
 18577  0023E8  D00D               	bra	u13007
 18578  0023EA  0009               	tblrd		*+
 18579  0023EC  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 18580  0023F0  0009               	tblrd		*+
 18581  0023F2  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 18582  0023F6  0009               	tblrd		*+
 18583  0023F8  CFF5 F0C7          	movff	tablat,??_TCP_FiniteStateMachine+4
 18584  0023FC  0009               	tblrd		*+
 18585  0023FE  CFF5 F0C8          	movff	tablat,??_TCP_FiniteStateMachine+5
 18586  002402  D00C               	bra	u13000
 18587  002404                     u13007:
 18588  002404  CFF6 FFE9          	movff	tblptrl,fsr0l
 18589  002408  CFF7 FFEA          	movff	tblptrh,fsr0h
 18590  00240C  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 18591  002410  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 18592  002414  CFEE F0C7          	movff	postinc0,??_TCP_FiniteStateMachine+4
 18593  002418  CFEE F0C8          	movff	postinc0,??_TCP_FiniteStateMachine+5
 18594  00241C                     u13000:
 18595  00241C  0E01               	movlw	1
 18596  00241E  0100               	movlb	0	; () banked
 18597  002420  25C5               	addwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 18598  002422  6FC9               	movwf	(??_TCP_FiniteStateMachine+6)& (0+255),b
 18599  002424  0E00               	movlw	0
 18600  002426  21C6               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 18601  002428  6FCA               	movwf	(??_TCP_FiniteStateMachine+7)& (0+255),b
 18602  00242A  0E00               	movlw	0
 18603  00242C  21C7               	addwfc	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 18604  00242E  6FCB               	movwf	(??_TCP_FiniteStateMachine+8)& (0+255),b
 18605  002430  0E00               	movlw	0
 18606  002432  21C8               	addwfc	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 18607  002434  6FCC               	movwf	(??_TCP_FiniteStateMachine+9)& (0+255),b
 18608  002436  0101               	movlb	1	; () banked
 18609  002438  51C4               	movf	(_tcpHeader+8)& (0+255),w,b
 18610  00243A  0100               	movlb	0	; () banked
 18611  00243C  19C9               	xorwf	(??_TCP_FiniteStateMachine+6)& (0+255),w,b
 18612  00243E  E10F               	bnz	u13011
 18613  002440  0101               	movlb	1	; () banked
 18614  002442  51C5               	movf	(_tcpHeader+9)& (0+255),w,b
 18615  002444  0100               	movlb	0	; () banked
 18616  002446  19CA               	xorwf	(??_TCP_FiniteStateMachine+7)& (0+255),w,b
 18617  002448  E10A               	bnz	u13011
 18618  00244A  0101               	movlb	1	; () banked
 18619  00244C  51C6               	movf	(_tcpHeader+10)& (0+255),w,b
 18620  00244E  0100               	movlb	0	; () banked
 18621  002450  19CB               	xorwf	(??_TCP_FiniteStateMachine+8)& (0+255),w,b
 18622  002452  E105               	bnz	u13011
 18623  002454  0101               	movlb	1	; () banked
 18624  002456  51C7               	movf	(_tcpHeader+11)& (0+255),w,b
 18625  002458  0100               	movlb	0	; () banked
 18626  00245A  19CC               	xorwf	(??_TCP_FiniteStateMachine+9)& (0+255),w,b
 18627  00245C  A4D8               	btfss	status,2,c
 18628  00245E                     u13011:
 18629  00245E  EFFA  F01C         	goto	l9172
 18630                           
 18631                           ; BSR set to: 0
 18632                           ;tcpv4.c: 824: {
 18633                           ;tcpv4.c: 825: currentTCB->localSeqno = currentTCB->localSeqno + 1;
 18634  002462  0E10               	movlw	16
 18635  002464  25FE               	addwf	_currentTCB& (0+255),w,b
 18636  002466  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18637  002468  0E00               	movlw	0
 18638  00246A  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18639  00246C  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18640  00246E  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18641  002472  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18642  002476  0E00               	movlw	low (__smallconst shr (0+16))
 18643  002478  6EF8               	movwf	tblptru,c
 18644  00247A  0E0F               	movlw	(high __ramtop+-1)
 18645  00247C  64F7               	cpfsgt	tblptrh,c
 18646  00247E  D00D               	bra	u13027
 18647  002480  0009               	tblrd		*+
 18648  002482  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 18649  002486  0009               	tblrd		*+
 18650  002488  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 18651  00248C  0009               	tblrd		*+
 18652  00248E  CFF5 F0C7          	movff	tablat,??_TCP_FiniteStateMachine+4
 18653  002492  0009               	tblrd		*+
 18654  002494  CFF5 F0C8          	movff	tablat,??_TCP_FiniteStateMachine+5
 18655  002498  D00C               	bra	u13020
 18656  00249A                     u13027:
 18657  00249A  CFF6 FFE9          	movff	tblptrl,fsr0l
 18658  00249E  CFF7 FFEA          	movff	tblptrh,fsr0h
 18659  0024A2  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 18660  0024A6  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 18661  0024AA  CFEE F0C7          	movff	postinc0,??_TCP_FiniteStateMachine+4
 18662  0024AE  CFEE F0C8          	movff	postinc0,??_TCP_FiniteStateMachine+5
 18663  0024B2                     u13020:
 18664  0024B2  0E01               	movlw	1
 18665  0024B4  0100               	movlb	0	; () banked
 18666  0024B6  25C5               	addwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 18667  0024B8  6FC9               	movwf	(??_TCP_FiniteStateMachine+6)& (0+255),b
 18668  0024BA  0E00               	movlw	0
 18669  0024BC  21C6               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 18670  0024BE  6FCA               	movwf	(??_TCP_FiniteStateMachine+7)& (0+255),b
 18671  0024C0  0E00               	movlw	0
 18672  0024C2  21C7               	addwfc	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 18673  0024C4  6FCB               	movwf	(??_TCP_FiniteStateMachine+8)& (0+255),b
 18674  0024C6  0E00               	movlw	0
 18675  0024C8  21C8               	addwfc	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 18676  0024CA  6FCC               	movwf	(??_TCP_FiniteStateMachine+9)& (0+255),b
 18677  0024CC  0E10               	movlw	16
 18678  0024CE  25FE               	addwf	_currentTCB& (0+255),w,b
 18679  0024D0  6FCD               	movwf	(??_TCP_FiniteStateMachine+10)& (0+255),b
 18680  0024D2  0E00               	movlw	0
 18681  0024D4  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18682  0024D6  6FCE               	movwf	(??_TCP_FiniteStateMachine+11)& (0+255),b
 18683  0024D8  C0CD  FFF6         	movff	??_TCP_FiniteStateMachine+10,tblptrl
 18684  0024DC  C0CE  FFF7         	movff	??_TCP_FiniteStateMachine+11,tblptrh
 18685  0024E0  0E00               	movlw	low (__smallconst shr (0+16))
 18686  0024E2  6EF8               	movwf	tblptru,c
 18687  0024E4  0E0F               	movlw	(high __ramtop+-1)
 18688  0024E6  64F7               	cpfsgt	tblptrh,c
 18689  0024E8  D00D               	bra	u13037
 18690  0024EA  C0C9  FFF5         	movff	??_TCP_FiniteStateMachine+6,tablat
 18691  0024EE  000D               	tblwt		*+
 18692  0024F0  C0CA  FFF5         	movff	??_TCP_FiniteStateMachine+7,tablat
 18693  0024F4  000D               	tblwt		*+
 18694  0024F6  C0CB  FFF5         	movff	??_TCP_FiniteStateMachine+8,tablat
 18695  0024FA  000D               	tblwt		*+
 18696  0024FC  C0CC  FFF5         	movff	??_TCP_FiniteStateMachine+9,tablat
 18697  002500  000C               	tblwt		*
 18698  002502  D00C               	bra	u13030
 18699  002504                     u13037:
 18700  002504  CFF6 FFE9          	movff	tblptrl,fsr0l
 18701  002508  CFF7 FFEA          	movff	tblptrh,fsr0h
 18702  00250C  C0C9  FFEE         	movff	??_TCP_FiniteStateMachine+6,postinc0
 18703  002510  C0CA  FFEE         	movff	??_TCP_FiniteStateMachine+7,postinc0
 18704  002514  C0CB  FFEE         	movff	??_TCP_FiniteStateMachine+8,postinc0
 18705  002518  C0CC  FFEF         	movff	??_TCP_FiniteStateMachine+9,indf0
 18706  00251C                     u13030:
 18707                           
 18708                           ;tcpv4.c: 827: currentTCB->timeout = 0;
 18709  00251C  0E30               	movlw	48
 18710  00251E  0100               	movlb	0	; () banked
 18711  002520  25FE               	addwf	_currentTCB& (0+255),w,b
 18712  002522  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18713  002524  0E00               	movlw	0
 18714  002526  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18715  002528  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18716  00252A  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18717  00252E  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18718  002532  0E00               	movlw	low (__smallconst shr (0+16))
 18719  002534  6EF8               	movwf	tblptru,c
 18720  002536  0E0F               	movlw	(high __ramtop+-1)
 18721  002538  64F7               	cpfsgt	tblptrh,c
 18722  00253A  D005               	bra	u13047
 18723  00253C  6AF5               	clrf	tablat,c
 18724  00253E  000D               	tblwt		*+
 18725  002540  6AF5               	clrf	tablat,c
 18726  002542  000C               	tblwt		*
 18727  002544  D006               	bra	u13040
 18728  002546                     u13047:
 18729  002546  CFF6 FFE9          	movff	tblptrl,fsr0l
 18730  00254A  CFF7 FFEA          	movff	tblptrh,fsr0h
 18731  00254E  6AEE               	clrf	postinc0,c
 18732  002550  6AEF               	clrf	indf0,c
 18733  002552                     u13040:
 18734                           
 18735                           ;tcpv4.c: 829: nextState = ESTABLISHED;
 18736  002552  0E04               	movlw	4
 18737  002554  0100               	movlb	0	; () banked
 18738  002556  6FD3               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 18739                           
 18740                           ; BSR set to: 0
 18741                           ;tcpv4.c: 830: currentTCB->socketState = SOCKET_CONNECTED;
 18742  002558  0E36               	movlw	54
 18743  00255A  25FE               	addwf	_currentTCB& (0+255),w,b
 18744  00255C  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18745  00255E  0E00               	movlw	0
 18746  002560  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18747  002562  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18748  002564  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18749  002568  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18750  00256C  0E00               	movlw	low (__smallconst shr (0+16))
 18751  00256E  6EF8               	movwf	tblptru,c
 18752  002570  0E0F               	movlw	(high __ramtop+-1)
 18753  002572  64F7               	cpfsgt	tblptrh,c
 18754  002574  D004               	bra	u13057
 18755  002576  0E03               	movlw	3
 18756  002578  6EF5               	movwf	tablat,c
 18757  00257A  000C               	tblwt		*
 18758  00257C  D006               	bra	u13050
 18759  00257E                     u13057:
 18760  00257E  CFF6 FFE9          	movff	tblptrl,fsr0l
 18761  002582  CFF7 FFEA          	movff	tblptrh,fsr0h
 18762  002586  0E03               	movlw	3
 18763  002588  6EEF               	movwf	indf0,c
 18764  00258A                     u13050:
 18765  00258A  EFFA  F01C         	goto	l9172
 18766  00258E                     l8974:
 18767                           
 18768                           ; BSR set to: 0
 18769                           ;tcpv4.c: 836: ;
 18770                           ;tcpv4.c: 838: currentTCB->timeout = 0;
 18771  00258E  0E30               	movlw	48
 18772  002590  25FE               	addwf	_currentTCB& (0+255),w,b
 18773  002592  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18774  002594  0E00               	movlw	0
 18775  002596  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18776  002598  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18777  00259A  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18778  00259E  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18779  0025A2  0E00               	movlw	low (__smallconst shr (0+16))
 18780  0025A4  6EF8               	movwf	tblptru,c
 18781  0025A6  0E0F               	movlw	(high __ramtop+-1)
 18782  0025A8  64F7               	cpfsgt	tblptrh,c
 18783  0025AA  D005               	bra	u13067
 18784  0025AC  6AF5               	clrf	tablat,c
 18785  0025AE  000D               	tblwt		*+
 18786  0025B0  6AF5               	clrf	tablat,c
 18787  0025B2  000C               	tblwt		*
 18788  0025B4  D006               	bra	u13060
 18789  0025B6                     u13067:
 18790  0025B6  CFF6 FFE9          	movff	tblptrl,fsr0l
 18791  0025BA  CFF7 FFEA          	movff	tblptrh,fsr0h
 18792  0025BE  6AEE               	clrf	postinc0,c
 18793  0025C0  6AEF               	clrf	indf0,c
 18794  0025C2                     u13060:
 18795                           
 18796                           ;tcpv4.c: 840: currentTCB->flags = 0x01U;
 18797  0025C2  0E35               	movlw	53
 18798  0025C4  0100               	movlb	0	; () banked
 18799  0025C6  25FE               	addwf	_currentTCB& (0+255),w,b
 18800  0025C8  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18801  0025CA  0E00               	movlw	0
 18802  0025CC  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18803  0025CE  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18804  0025D0  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18805  0025D4  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18806  0025D8  0E00               	movlw	low (__smallconst shr (0+16))
 18807  0025DA  6EF8               	movwf	tblptru,c
 18808  0025DC  0E0F               	movlw	(high __ramtop+-1)
 18809  0025DE  64F7               	cpfsgt	tblptrh,c
 18810  0025E0  D004               	bra	u13077
 18811  0025E2  0E01               	movlw	1
 18812  0025E4  6EF5               	movwf	tablat,c
 18813  0025E6  000C               	tblwt		*
 18814  0025E8  D006               	bra	u13070
 18815  0025EA                     u13077:
 18816  0025EA  CFF6 FFE9          	movff	tblptrl,fsr0l
 18817  0025EE  CFF7 FFEA          	movff	tblptrh,fsr0h
 18818  0025F2  0E01               	movlw	1
 18819  0025F4  6EEF               	movwf	indf0,c
 18820  0025F6                     u13070:
 18821                           
 18822                           ;tcpv4.c: 841: currentTCB->timeout = ((unsigned long)1*2);
 18823  0025F6  0E30               	movlw	48
 18824  0025F8  0100               	movlb	0	; () banked
 18825  0025FA  25FE               	addwf	_currentTCB& (0+255),w,b
 18826  0025FC  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18827  0025FE  0E00               	movlw	0
 18828  002600  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18829  002602  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18830  002604  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18831  002608  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18832  00260C  0E00               	movlw	low (__smallconst shr (0+16))
 18833  00260E  6EF8               	movwf	tblptru,c
 18834  002610  0E0F               	movlw	(high __ramtop+-1)
 18835  002612  64F7               	cpfsgt	tblptrh,c
 18836  002614  D006               	bra	u13087
 18837  002616  0E02               	movlw	2
 18838  002618  6EF5               	movwf	tablat,c
 18839  00261A  000D               	tblwt		*+
 18840  00261C  6AF5               	clrf	tablat,c
 18841  00261E  000C               	tblwt		*
 18842  002620  D007               	bra	u13080
 18843  002622                     u13087:
 18844  002622  CFF6 FFE9          	movff	tblptrl,fsr0l
 18845  002626  CFF7 FFEA          	movff	tblptrh,fsr0h
 18846  00262A  0E02               	movlw	2
 18847  00262C  6EEE               	movwf	postinc0,c
 18848  00262E  6AEF               	clrf	indf0,c
 18849  002630                     u13080:
 18850                           
 18851                           ;tcpv4.c: 842: currentTCB->timeoutReloadValue = ((unsigned long)1*2);
 18852  002630  0E32               	movlw	50
 18853  002632  0100               	movlb	0	; () banked
 18854  002634  25FE               	addwf	_currentTCB& (0+255),w,b
 18855  002636  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18856  002638  0E00               	movlw	0
 18857  00263A  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18858  00263C  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18859  00263E  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18860  002642  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18861  002646  0E00               	movlw	low (__smallconst shr (0+16))
 18862  002648  6EF8               	movwf	tblptru,c
 18863  00264A  0E0F               	movlw	(high __ramtop+-1)
 18864  00264C  64F7               	cpfsgt	tblptrh,c
 18865  00264E  D006               	bra	u13097
 18866  002650  0E02               	movlw	2
 18867  002652  6EF5               	movwf	tablat,c
 18868  002654  000D               	tblwt		*+
 18869  002656  6AF5               	clrf	tablat,c
 18870  002658  000C               	tblwt		*
 18871  00265A  D007               	bra	u13090
 18872  00265C                     u13097:
 18873  00265C  CFF6 FFE9          	movff	tblptrl,fsr0l
 18874  002660  CFF7 FFEA          	movff	tblptrh,fsr0h
 18875  002664  0E02               	movlw	2
 18876  002666  6EEE               	movwf	postinc0,c
 18877  002668  6AEF               	clrf	indf0,c
 18878  00266A                     u13090:
 18879                           
 18880                           ;tcpv4.c: 843: currentTCB->timeoutsCount = (5u);
 18881  00266A  0E34               	movlw	52
 18882  00266C  0100               	movlb	0	; () banked
 18883  00266E  25FE               	addwf	_currentTCB& (0+255),w,b
 18884  002670  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18885  002672  0E00               	movlw	0
 18886  002674  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18887  002676  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18888  002678  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18889  00267C  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18890  002680  0E00               	movlw	low (__smallconst shr (0+16))
 18891  002682  6EF8               	movwf	tblptru,c
 18892  002684  0E0F               	movlw	(high __ramtop+-1)
 18893  002686  64F7               	cpfsgt	tblptrh,c
 18894  002688  D004               	bra	u13107
 18895  00268A  0E05               	movlw	5
 18896  00268C  6EF5               	movwf	tablat,c
 18897  00268E  000C               	tblwt		*
 18898  002690  D006               	bra	u13100
 18899  002692                     u13107:
 18900  002692  CFF6 FFE9          	movff	tblptrl,fsr0l
 18901  002696  CFF7 FFEA          	movff	tblptrh,fsr0h
 18902  00269A  0E05               	movlw	5
 18903  00269C  6EEF               	movwf	indf0,c
 18904  00269E                     u13100:
 18905  00269E                     l8976:
 18906                           
 18907                           ;tcpv4.c: 845: nextState = FIN_WAIT_1;
 18908  00269E  0E05               	movlw	5
 18909  0026A0  0100               	movlb	0	; () banked
 18910  0026A2  6FD3               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 18911  0026A4                     l8978:
 18912                           
 18913                           ;tcpv4.c: 846: TCP_Snd(currentTCB);
 18914  0026A4  C0FE  F058         	movff	_currentTCB,TCP_Snd@tcbPtr
 18915  0026A8  C0FF  F059         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 18916  0026AC  EC31  F01D         	call	_TCP_Snd	;wreg free
 18917                           
 18918                           ;tcpv4.c: 847: break;
 18919  0026B0  EFFA  F01C         	goto	l9172
 18920  0026B4                     l8980:
 18921                           
 18922                           ; BSR set to: 0
 18923                           ;tcpv4.c: 849: case RCV_RST:
 18924                           ;tcpv4.c: 851: ;
 18925                           ;tcpv4.c: 853: if (currentTCB->localPort == tcpHeader.destPort)
 18926  0026B4  C0FE  FFF6         	movff	_currentTCB,tblptrl
 18927  0026B8  C0FF  FFF7         	movff	_currentTCB+1,tblptrh
 18928  0026BC  0E00               	movlw	low (__smallconst shr (0+16))
 18929  0026BE  6EF8               	movwf	tblptru,c
 18930  0026C0  0E0F               	movlw	(high __ramtop+-1)
 18931  0026C2  64F7               	cpfsgt	tblptrh,c
 18932  0026C4  D007               	bra	u13117
 18933  0026C6  0009               	tblrd		*+
 18934  0026C8  CFF5 F0C3          	movff	tablat,??_TCP_FiniteStateMachine
 18935  0026CC  0009               	tblrd		*+
 18936  0026CE  CFF5 F0C4          	movff	tablat,??_TCP_FiniteStateMachine+1
 18937  0026D2  D008               	bra	u13110
 18938  0026D4                     u13117:
 18939  0026D4  CFF6 FFE9          	movff	tblptrl,fsr0l
 18940  0026D8  CFF7 FFEA          	movff	tblptrh,fsr0h
 18941  0026DC  CFEE F0C3          	movff	postinc0,??_TCP_FiniteStateMachine
 18942  0026E0  CFEE F0C4          	movff	postinc0,??_TCP_FiniteStateMachine+1
 18943  0026E4                     u13110:
 18944  0026E4  0101               	movlb	1	; () banked
 18945  0026E6  51BE               	movf	(_tcpHeader+2)& (0+255),w,b
 18946  0026E8  0100               	movlb	0	; () banked
 18947  0026EA  19C3               	xorwf	??_TCP_FiniteStateMachine& (0+255),w,b
 18948  0026EC  E105               	bnz	u13121
 18949  0026EE  0101               	movlb	1	; () banked
 18950  0026F0  51BF               	movf	(_tcpHeader+3)& (0+255),w,b
 18951  0026F2  0100               	movlb	0	; () banked
 18952  0026F4  19C4               	xorwf	(??_TCP_FiniteStateMachine+1)& (0+255),w,b
 18953  0026F6  A4D8               	btfss	status,2,c
 18954  0026F8                     u13121:
 18955  0026F8  EFFA  F01C         	goto	l9172
 18956                           
 18957                           ; BSR set to: 0
 18958                           ;tcpv4.c: 854: {
 18959                           ;tcpv4.c: 855: if (currentTCB->remoteAck == tcpHeader.sequenceNumber)
 18960  0026FC  0E0C               	movlw	12
 18961  0026FE  25FE               	addwf	_currentTCB& (0+255),w,b
 18962  002700  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 18963  002702  0E00               	movlw	0
 18964  002704  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 18965  002706  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 18966  002708  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 18967  00270C  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 18968  002710  0E00               	movlw	low (__smallconst shr (0+16))
 18969  002712  6EF8               	movwf	tblptru,c
 18970  002714  0E0F               	movlw	(high __ramtop+-1)
 18971  002716  64F7               	cpfsgt	tblptrh,c
 18972  002718  D00D               	bra	u13137
 18973  00271A  0009               	tblrd		*+
 18974  00271C  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 18975  002720  0009               	tblrd		*+
 18976  002722  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 18977  002726  0009               	tblrd		*+
 18978  002728  CFF5 F0C7          	movff	tablat,??_TCP_FiniteStateMachine+4
 18979  00272C  0009               	tblrd		*+
 18980  00272E  CFF5 F0C8          	movff	tablat,??_TCP_FiniteStateMachine+5
 18981  002732  D00C               	bra	u13130
 18982  002734                     u13137:
 18983  002734  CFF6 FFE9          	movff	tblptrl,fsr0l
 18984  002738  CFF7 FFEA          	movff	tblptrh,fsr0h
 18985  00273C  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 18986  002740  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 18987  002744  CFEE F0C7          	movff	postinc0,??_TCP_FiniteStateMachine+4
 18988  002748  CFEE F0C8          	movff	postinc0,??_TCP_FiniteStateMachine+5
 18989  00274C                     u13130:
 18990  00274C  0101               	movlb	1	; () banked
 18991  00274E  51C0               	movf	(_tcpHeader+4)& (0+255),w,b
 18992  002750  0100               	movlb	0	; () banked
 18993  002752  19C5               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 18994  002754  E10F               	bnz	u13141
 18995  002756  0101               	movlb	1	; () banked
 18996  002758  51C1               	movf	(_tcpHeader+5)& (0+255),w,b
 18997  00275A  0100               	movlb	0	; () banked
 18998  00275C  19C6               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 18999  00275E  E10A               	bnz	u13141
 19000  002760  0101               	movlb	1	; () banked
 19001  002762  51C2               	movf	(_tcpHeader+6)& (0+255),w,b
 19002  002764  0100               	movlb	0	; () banked
 19003  002766  19C7               	xorwf	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 19004  002768  E105               	bnz	u13141
 19005  00276A  0101               	movlb	1	; () banked
 19006  00276C  51C3               	movf	(_tcpHeader+7)& (0+255),w,b
 19007  00276E  0100               	movlb	0	; () banked
 19008  002770  19C8               	xorwf	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 19009  002772  A4D8               	btfss	status,2,c
 19010  002774                     u13141:
 19011  002774  EFFA  F01C         	goto	l9172
 19012                           
 19013                           ; BSR set to: 0
 19014                           ;tcpv4.c: 856: {
 19015                           ;tcpv4.c: 857: ;
 19016                           ;tcpv4.c: 858: currentTCB->destIP = 0;
 19017  002778  0E02               	movlw	2
 19018  00277A  25FE               	addwf	_currentTCB& (0+255),w,b
 19019  00277C  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19020  00277E  0E00               	movlw	0
 19021  002780  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19022  002782  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19023  002784  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19024  002788  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19025  00278C  0E00               	movlw	low (__smallconst shr (0+16))
 19026  00278E  6EF8               	movwf	tblptru,c
 19027  002790  0E0F               	movlw	(high __ramtop+-1)
 19028  002792  64F7               	cpfsgt	tblptrh,c
 19029  002794  D009               	bra	u13157
 19030  002796  6AF5               	clrf	tablat,c
 19031  002798  000D               	tblwt		*+
 19032  00279A  6AF5               	clrf	tablat,c
 19033  00279C  000D               	tblwt		*+
 19034  00279E  6AF5               	clrf	tablat,c
 19035  0027A0  000D               	tblwt		*+
 19036  0027A2  6AF5               	clrf	tablat,c
 19037  0027A4  000C               	tblwt		*
 19038  0027A6  D008               	bra	u13150
 19039  0027A8                     u13157:
 19040  0027A8  CFF6 FFE9          	movff	tblptrl,fsr0l
 19041  0027AC  CFF7 FFEA          	movff	tblptrh,fsr0h
 19042  0027B0  6AEE               	clrf	postinc0,c
 19043  0027B2  6AEE               	clrf	postinc0,c
 19044  0027B4  6AEE               	clrf	postinc0,c
 19045  0027B6  6AEF               	clrf	indf0,c
 19046  0027B8                     u13150:
 19047                           
 19048                           ;tcpv4.c: 859: currentTCB->destPort = 0;
 19049  0027B8  0E06               	movlw	6
 19050  0027BA  0100               	movlb	0	; () banked
 19051  0027BC  25FE               	addwf	_currentTCB& (0+255),w,b
 19052  0027BE  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19053  0027C0  0E00               	movlw	0
 19054  0027C2  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19055  0027C4  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19056  0027C6  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19057  0027CA  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19058  0027CE  0E00               	movlw	low (__smallconst shr (0+16))
 19059  0027D0  6EF8               	movwf	tblptru,c
 19060  0027D2  0E0F               	movlw	(high __ramtop+-1)
 19061  0027D4  64F7               	cpfsgt	tblptrh,c
 19062  0027D6  D005               	bra	u13167
 19063  0027D8  6AF5               	clrf	tablat,c
 19064  0027DA  000D               	tblwt		*+
 19065  0027DC  6AF5               	clrf	tablat,c
 19066  0027DE  000C               	tblwt		*
 19067  0027E0  D006               	bra	u13160
 19068  0027E2                     u13167:
 19069  0027E2  CFF6 FFE9          	movff	tblptrl,fsr0l
 19070  0027E6  CFF7 FFEA          	movff	tblptrh,fsr0h
 19071  0027EA  6AEE               	clrf	postinc0,c
 19072  0027EC  6AEF               	clrf	indf0,c
 19073  0027EE                     u13160:
 19074                           
 19075                           ;tcpv4.c: 860: currentTCB->localSeqno = 0;
 19076  0027EE  0E10               	movlw	16
 19077  0027F0  0100               	movlb	0	; () banked
 19078  0027F2  25FE               	addwf	_currentTCB& (0+255),w,b
 19079  0027F4  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19080  0027F6  0E00               	movlw	0
 19081  0027F8  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19082  0027FA  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19083  0027FC  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19084  002800  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19085  002804  0E00               	movlw	low (__smallconst shr (0+16))
 19086  002806  6EF8               	movwf	tblptru,c
 19087  002808  0E0F               	movlw	(high __ramtop+-1)
 19088  00280A  64F7               	cpfsgt	tblptrh,c
 19089  00280C  D009               	bra	u13177
 19090  00280E  6AF5               	clrf	tablat,c
 19091  002810  000D               	tblwt		*+
 19092  002812  6AF5               	clrf	tablat,c
 19093  002814  000D               	tblwt		*+
 19094  002816  6AF5               	clrf	tablat,c
 19095  002818  000D               	tblwt		*+
 19096  00281A  6AF5               	clrf	tablat,c
 19097  00281C  000C               	tblwt		*
 19098  00281E  D008               	bra	u13170
 19099  002820                     u13177:
 19100  002820  CFF6 FFE9          	movff	tblptrl,fsr0l
 19101  002824  CFF7 FFEA          	movff	tblptrh,fsr0h
 19102  002828  6AEE               	clrf	postinc0,c
 19103  00282A  6AEE               	clrf	postinc0,c
 19104  00282C  6AEE               	clrf	postinc0,c
 19105  00282E  6AEF               	clrf	indf0,c
 19106  002830                     u13170:
 19107                           
 19108                           ;tcpv4.c: 861: currentTCB->localLastAck = 0;
 19109  002830  0E14               	movlw	20
 19110  002832  0100               	movlb	0	; () banked
 19111  002834  25FE               	addwf	_currentTCB& (0+255),w,b
 19112  002836  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19113  002838  0E00               	movlw	0
 19114  00283A  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19115  00283C  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19116  00283E  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19117  002842  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19118  002846  0E00               	movlw	low (__smallconst shr (0+16))
 19119  002848  6EF8               	movwf	tblptru,c
 19120  00284A  0E0F               	movlw	(high __ramtop+-1)
 19121  00284C  64F7               	cpfsgt	tblptrh,c
 19122  00284E  D009               	bra	u13187
 19123  002850  6AF5               	clrf	tablat,c
 19124  002852  000D               	tblwt		*+
 19125  002854  6AF5               	clrf	tablat,c
 19126  002856  000D               	tblwt		*+
 19127  002858  6AF5               	clrf	tablat,c
 19128  00285A  000D               	tblwt		*+
 19129  00285C  6AF5               	clrf	tablat,c
 19130  00285E  000C               	tblwt		*
 19131  002860  D008               	bra	u13180
 19132  002862                     u13187:
 19133  002862  CFF6 FFE9          	movff	tblptrl,fsr0l
 19134  002866  CFF7 FFEA          	movff	tblptrh,fsr0h
 19135  00286A  6AEE               	clrf	postinc0,c
 19136  00286C  6AEE               	clrf	postinc0,c
 19137  00286E  6AEE               	clrf	postinc0,c
 19138  002870  6AEF               	clrf	indf0,c
 19139  002872                     u13180:
 19140                           
 19141                           ;tcpv4.c: 862: currentTCB->remoteSeqno = 0;
 19142  002872  0E08               	movlw	8
 19143  002874  0100               	movlb	0	; () banked
 19144  002876  25FE               	addwf	_currentTCB& (0+255),w,b
 19145  002878  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19146  00287A  0E00               	movlw	0
 19147  00287C  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19148  00287E  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19149  002880  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19150  002884  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19151  002888  0E00               	movlw	low (__smallconst shr (0+16))
 19152  00288A  6EF8               	movwf	tblptru,c
 19153  00288C  0E0F               	movlw	(high __ramtop+-1)
 19154  00288E  64F7               	cpfsgt	tblptrh,c
 19155  002890  D009               	bra	u13197
 19156  002892  6AF5               	clrf	tablat,c
 19157  002894  000D               	tblwt		*+
 19158  002896  6AF5               	clrf	tablat,c
 19159  002898  000D               	tblwt		*+
 19160  00289A  6AF5               	clrf	tablat,c
 19161  00289C  000D               	tblwt		*+
 19162  00289E  6AF5               	clrf	tablat,c
 19163  0028A0  000C               	tblwt		*
 19164  0028A2  D008               	bra	u13190
 19165  0028A4                     u13197:
 19166  0028A4  CFF6 FFE9          	movff	tblptrl,fsr0l
 19167  0028A8  CFF7 FFEA          	movff	tblptrh,fsr0h
 19168  0028AC  6AEE               	clrf	postinc0,c
 19169  0028AE  6AEE               	clrf	postinc0,c
 19170  0028B0  6AEE               	clrf	postinc0,c
 19171  0028B2  6AEF               	clrf	indf0,c
 19172  0028B4                     u13190:
 19173                           
 19174                           ;tcpv4.c: 863: currentTCB->remoteAck = 0;
 19175  0028B4  0E0C               	movlw	12
 19176  0028B6  0100               	movlb	0	; () banked
 19177  0028B8  25FE               	addwf	_currentTCB& (0+255),w,b
 19178  0028BA  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19179  0028BC  0E00               	movlw	0
 19180  0028BE  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19181  0028C0  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19182  0028C2  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19183  0028C6  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19184  0028CA  0E00               	movlw	low (__smallconst shr (0+16))
 19185  0028CC  6EF8               	movwf	tblptru,c
 19186  0028CE  0E0F               	movlw	(high __ramtop+-1)
 19187  0028D0  64F7               	cpfsgt	tblptrh,c
 19188  0028D2  D009               	bra	u13207
 19189  0028D4  6AF5               	clrf	tablat,c
 19190  0028D6  000D               	tblwt		*+
 19191  0028D8  6AF5               	clrf	tablat,c
 19192  0028DA  000D               	tblwt		*+
 19193  0028DC  6AF5               	clrf	tablat,c
 19194  0028DE  000D               	tblwt		*+
 19195  0028E0  6AF5               	clrf	tablat,c
 19196  0028E2  000C               	tblwt		*
 19197  0028E4  D008               	bra	u13200
 19198  0028E6                     u13207:
 19199  0028E6  CFF6 FFE9          	movff	tblptrl,fsr0l
 19200  0028EA  CFF7 FFEA          	movff	tblptrh,fsr0h
 19201  0028EE  6AEE               	clrf	postinc0,c
 19202  0028F0  6AEE               	clrf	postinc0,c
 19203  0028F2  6AEE               	clrf	postinc0,c
 19204  0028F4  6AEF               	clrf	indf0,c
 19205  0028F6                     u13200:
 19206                           
 19207                           ;tcpv4.c: 864: currentTCB->remoteWnd = 0;
 19208  0028F6  0E18               	movlw	24
 19209  0028F8  0100               	movlb	0	; () banked
 19210  0028FA  25FE               	addwf	_currentTCB& (0+255),w,b
 19211  0028FC  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19212  0028FE  0E00               	movlw	0
 19213  002900  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19214  002902  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19215  002904  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19216  002908  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19217  00290C  0E00               	movlw	low (__smallconst shr (0+16))
 19218  00290E  6EF8               	movwf	tblptru,c
 19219  002910  0E0F               	movlw	(high __ramtop+-1)
 19220  002912  64F7               	cpfsgt	tblptrh,c
 19221  002914  D005               	bra	u13217
 19222  002916  6AF5               	clrf	tablat,c
 19223  002918  000D               	tblwt		*+
 19224  00291A  6AF5               	clrf	tablat,c
 19225  00291C  000C               	tblwt		*
 19226  00291E  D006               	bra	u13210
 19227  002920                     u13217:
 19228  002920  CFF6 FFE9          	movff	tblptrl,fsr0l
 19229  002924  CFF7 FFEA          	movff	tblptrh,fsr0h
 19230  002928  6AEE               	clrf	postinc0,c
 19231  00292A  6AEF               	clrf	indf0,c
 19232  00292C                     u13210:
 19233                           
 19234                           ;tcpv4.c: 865: currentTCB->mss = 0;
 19235  00292C  0E1C               	movlw	28
 19236  00292E  0100               	movlb	0	; () banked
 19237  002930  25FE               	addwf	_currentTCB& (0+255),w,b
 19238  002932  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19239  002934  0E00               	movlw	0
 19240  002936  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19241  002938  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19242  00293A  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19243  00293E  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19244  002942  0E00               	movlw	low (__smallconst shr (0+16))
 19245  002944  6EF8               	movwf	tblptru,c
 19246  002946  0E0F               	movlw	(high __ramtop+-1)
 19247  002948  64F7               	cpfsgt	tblptrh,c
 19248  00294A  D005               	bra	u13227
 19249  00294C  6AF5               	clrf	tablat,c
 19250  00294E  000D               	tblwt		*+
 19251  002950  6AF5               	clrf	tablat,c
 19252  002952  000C               	tblwt		*
 19253  002954  D006               	bra	u13220
 19254  002956                     u13227:
 19255  002956  CFF6 FFE9          	movff	tblptrl,fsr0l
 19256  00295A  CFF7 FFEA          	movff	tblptrh,fsr0h
 19257  00295E  6AEE               	clrf	postinc0,c
 19258  002960  6AEF               	clrf	indf0,c
 19259  002962                     u13220:
 19260  002962                     l8986:
 19261                           
 19262                           ;tcpv4.c: 867: nextState = LISTEN;
 19263  002962  0E01               	movlw	1
 19264  002964  0100               	movlb	0	; () banked
 19265  002966  EFB7  F01A         	goto	L14
 19266  00296A                     l8988:
 19267                           
 19268                           ; BSR set to: 0
 19269                           ;tcpv4.c: 872: ;
 19270                           ;tcpv4.c: 873: if (currentTCB->timeoutsCount)
 19271  00296A  0E34               	movlw	52
 19272  00296C  25FE               	addwf	_currentTCB& (0+255),w,b
 19273  00296E  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19274  002970  0E00               	movlw	0
 19275  002972  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19276  002974  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19277  002976  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19278  00297A  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19279  00297E  0E00               	movlw	low (__smallconst shr (0+16))
 19280  002980  6EF8               	movwf	tblptru,c
 19281  002982  0E0F               	movlw	(high __ramtop+-1)
 19282  002984  64F7               	cpfsgt	tblptrh,c
 19283  002986  D003               	bra	u13237
 19284  002988  0008               	tblrd		*
 19285  00298A  50F5               	movf	tablat,w,c
 19286  00298C  D005               	bra	u13230
 19287  00298E                     u13237:
 19288  00298E  CFF6 FFE9          	movff	tblptrl,fsr0l
 19289  002992  CFF7 FFEA          	movff	tblptrh,fsr0h
 19290  002996  50EF               	movf	indf0,w,c
 19291  002998                     u13230:
 19292  002998  0900               	iorlw	0
 19293  00299A  E001 D683          	bnz	l8978
 19294                           
 19295                           ;tcpv4.c: 877: else
 19296                           ;tcpv4.c: 878: {
 19297                           ;tcpv4.c: 880: currentTCB->flags = 0x04U;
 19298  00299E  0E35               	movlw	53
 19299  0029A0  0100               	movlb	0	; () banked
 19300  0029A2  25FE               	addwf	_currentTCB& (0+255),w,b
 19301  0029A4  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19302  0029A6  0E00               	movlw	0
 19303  0029A8  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19304  0029AA  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19305  0029AC  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19306  0029B0  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19307  0029B4  0E00               	movlw	low (__smallconst shr (0+16))
 19308  0029B6  6EF8               	movwf	tblptru,c
 19309  0029B8  0E0F               	movlw	(high __ramtop+-1)
 19310  0029BA  64F7               	cpfsgt	tblptrh,c
 19311  0029BC  D004               	bra	u13257
 19312  0029BE  0E04               	movlw	4
 19313  0029C0  6EF5               	movwf	tablat,c
 19314  0029C2  000C               	tblwt		*
 19315  0029C4  D006               	bra	u13250
 19316  0029C6                     u13257:
 19317  0029C6  CFF6 FFE9          	movff	tblptrl,fsr0l
 19318  0029CA  CFF7 FFEA          	movff	tblptrh,fsr0h
 19319  0029CE  0E04               	movlw	4
 19320  0029D0  6EEF               	movwf	indf0,c
 19321  0029D2                     u13250:
 19322                           
 19323                           ;tcpv4.c: 881: if(TCP_Snd(currentTCB))
 19324  0029D2  C0FE  F058         	movff	_currentTCB,TCP_Snd@tcbPtr
 19325  0029D6  C0FF  F059         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 19326  0029DA  EC31  F01D         	call	_TCP_Snd	;wreg free
 19327  0029DE  0900               	iorlw	0
 19328  0029E0  E102 EFFA  F01C    	bz	l9172
 19329                           
 19330                           ; BSR set to: 0
 19331                           ;tcpv4.c: 882: {
 19332                           ;tcpv4.c: 883: currentTCB->destIP = 0;
 19333  0029E6  0E02               	movlw	2
 19334  0029E8  25FE               	addwf	_currentTCB& (0+255),w,b
 19335  0029EA  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19336  0029EC  0E00               	movlw	0
 19337  0029EE  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19338  0029F0  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19339  0029F2  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19340  0029F6  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19341  0029FA  0E00               	movlw	low (__smallconst shr (0+16))
 19342  0029FC  6EF8               	movwf	tblptru,c
 19343  0029FE  0E0F               	movlw	(high __ramtop+-1)
 19344  002A00  64F7               	cpfsgt	tblptrh,c
 19345  002A02  D009               	bra	u13277
 19346  002A04  6AF5               	clrf	tablat,c
 19347  002A06  000D               	tblwt		*+
 19348  002A08  6AF5               	clrf	tablat,c
 19349  002A0A  000D               	tblwt		*+
 19350  002A0C  6AF5               	clrf	tablat,c
 19351  002A0E  000D               	tblwt		*+
 19352  002A10  6AF5               	clrf	tablat,c
 19353  002A12  000C               	tblwt		*
 19354  002A14  D008               	bra	u13270
 19355  002A16                     u13277:
 19356  002A16  CFF6 FFE9          	movff	tblptrl,fsr0l
 19357  002A1A  CFF7 FFEA          	movff	tblptrh,fsr0h
 19358  002A1E  6AEE               	clrf	postinc0,c
 19359  002A20  6AEE               	clrf	postinc0,c
 19360  002A22  6AEE               	clrf	postinc0,c
 19361  002A24  6AEF               	clrf	indf0,c
 19362  002A26                     u13270:
 19363                           
 19364                           ;tcpv4.c: 884: currentTCB->destPort = 0;
 19365  002A26  0E06               	movlw	6
 19366  002A28  0100               	movlb	0	; () banked
 19367  002A2A  25FE               	addwf	_currentTCB& (0+255),w,b
 19368  002A2C  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19369  002A2E  0E00               	movlw	0
 19370  002A30  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19371  002A32  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19372  002A34  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19373  002A38  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19374  002A3C  0E00               	movlw	low (__smallconst shr (0+16))
 19375  002A3E  6EF8               	movwf	tblptru,c
 19376  002A40  0E0F               	movlw	(high __ramtop+-1)
 19377  002A42  64F7               	cpfsgt	tblptrh,c
 19378  002A44  D005               	bra	u13287
 19379  002A46  6AF5               	clrf	tablat,c
 19380  002A48  000D               	tblwt		*+
 19381  002A4A  6AF5               	clrf	tablat,c
 19382  002A4C  000C               	tblwt		*
 19383  002A4E  D006               	bra	u13280
 19384  002A50                     u13287:
 19385  002A50  CFF6 FFE9          	movff	tblptrl,fsr0l
 19386  002A54  CFF7 FFEA          	movff	tblptrh,fsr0h
 19387  002A58  6AEE               	clrf	postinc0,c
 19388  002A5A  6AEF               	clrf	indf0,c
 19389  002A5C                     u13280:
 19390                           
 19391                           ;tcpv4.c: 885: currentTCB->localSeqno = 0;
 19392  002A5C  0E10               	movlw	16
 19393  002A5E  0100               	movlb	0	; () banked
 19394  002A60  25FE               	addwf	_currentTCB& (0+255),w,b
 19395  002A62  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19396  002A64  0E00               	movlw	0
 19397  002A66  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19398  002A68  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19399  002A6A  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19400  002A6E  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19401  002A72  0E00               	movlw	low (__smallconst shr (0+16))
 19402  002A74  6EF8               	movwf	tblptru,c
 19403  002A76  0E0F               	movlw	(high __ramtop+-1)
 19404  002A78  64F7               	cpfsgt	tblptrh,c
 19405  002A7A  D009               	bra	u13297
 19406  002A7C  6AF5               	clrf	tablat,c
 19407  002A7E  000D               	tblwt		*+
 19408  002A80  6AF5               	clrf	tablat,c
 19409  002A82  000D               	tblwt		*+
 19410  002A84  6AF5               	clrf	tablat,c
 19411  002A86  000D               	tblwt		*+
 19412  002A88  6AF5               	clrf	tablat,c
 19413  002A8A  000C               	tblwt		*
 19414  002A8C  D008               	bra	u13290
 19415  002A8E                     u13297:
 19416  002A8E  CFF6 FFE9          	movff	tblptrl,fsr0l
 19417  002A92  CFF7 FFEA          	movff	tblptrh,fsr0h
 19418  002A96  6AEE               	clrf	postinc0,c
 19419  002A98  6AEE               	clrf	postinc0,c
 19420  002A9A  6AEE               	clrf	postinc0,c
 19421  002A9C  6AEF               	clrf	indf0,c
 19422  002A9E                     u13290:
 19423                           
 19424                           ;tcpv4.c: 886: currentTCB->localLastAck = 0;
 19425  002A9E  0E14               	movlw	20
 19426  002AA0  0100               	movlb	0	; () banked
 19427  002AA2  25FE               	addwf	_currentTCB& (0+255),w,b
 19428  002AA4  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19429  002AA6  0E00               	movlw	0
 19430  002AA8  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19431  002AAA  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19432  002AAC  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19433  002AB0  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19434  002AB4  0E00               	movlw	low (__smallconst shr (0+16))
 19435  002AB6  6EF8               	movwf	tblptru,c
 19436  002AB8  0E0F               	movlw	(high __ramtop+-1)
 19437  002ABA  64F7               	cpfsgt	tblptrh,c
 19438  002ABC  D009               	bra	u13307
 19439  002ABE  6AF5               	clrf	tablat,c
 19440  002AC0  000D               	tblwt		*+
 19441  002AC2  6AF5               	clrf	tablat,c
 19442  002AC4  000D               	tblwt		*+
 19443  002AC6  6AF5               	clrf	tablat,c
 19444  002AC8  000D               	tblwt		*+
 19445  002ACA  6AF5               	clrf	tablat,c
 19446  002ACC  000C               	tblwt		*
 19447  002ACE  D008               	bra	u13300
 19448  002AD0                     u13307:
 19449  002AD0  CFF6 FFE9          	movff	tblptrl,fsr0l
 19450  002AD4  CFF7 FFEA          	movff	tblptrh,fsr0h
 19451  002AD8  6AEE               	clrf	postinc0,c
 19452  002ADA  6AEE               	clrf	postinc0,c
 19453  002ADC  6AEE               	clrf	postinc0,c
 19454  002ADE  6AEF               	clrf	indf0,c
 19455  002AE0                     u13300:
 19456                           
 19457                           ;tcpv4.c: 887: currentTCB->remoteSeqno = 0;
 19458  002AE0  0E08               	movlw	8
 19459  002AE2  0100               	movlb	0	; () banked
 19460  002AE4  25FE               	addwf	_currentTCB& (0+255),w,b
 19461  002AE6  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19462  002AE8  0E00               	movlw	0
 19463  002AEA  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19464  002AEC  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19465  002AEE  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19466  002AF2  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19467  002AF6  0E00               	movlw	low (__smallconst shr (0+16))
 19468  002AF8  6EF8               	movwf	tblptru,c
 19469  002AFA  0E0F               	movlw	(high __ramtop+-1)
 19470  002AFC  64F7               	cpfsgt	tblptrh,c
 19471  002AFE  D009               	bra	u13317
 19472  002B00  6AF5               	clrf	tablat,c
 19473  002B02  000D               	tblwt		*+
 19474  002B04  6AF5               	clrf	tablat,c
 19475  002B06  000D               	tblwt		*+
 19476  002B08  6AF5               	clrf	tablat,c
 19477  002B0A  000D               	tblwt		*+
 19478  002B0C  6AF5               	clrf	tablat,c
 19479  002B0E  000C               	tblwt		*
 19480  002B10  D008               	bra	u13310
 19481  002B12                     u13317:
 19482  002B12  CFF6 FFE9          	movff	tblptrl,fsr0l
 19483  002B16  CFF7 FFEA          	movff	tblptrh,fsr0h
 19484  002B1A  6AEE               	clrf	postinc0,c
 19485  002B1C  6AEE               	clrf	postinc0,c
 19486  002B1E  6AEE               	clrf	postinc0,c
 19487  002B20  6AEF               	clrf	indf0,c
 19488  002B22                     u13310:
 19489                           
 19490                           ;tcpv4.c: 888: currentTCB->remoteAck = 0;
 19491  002B22  0E0C               	movlw	12
 19492  002B24  0100               	movlb	0	; () banked
 19493  002B26  25FE               	addwf	_currentTCB& (0+255),w,b
 19494  002B28  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19495  002B2A  0E00               	movlw	0
 19496  002B2C  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19497  002B2E  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19498  002B30  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19499  002B34  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19500  002B38  0E00               	movlw	low (__smallconst shr (0+16))
 19501  002B3A  6EF8               	movwf	tblptru,c
 19502  002B3C  0E0F               	movlw	(high __ramtop+-1)
 19503  002B3E  64F7               	cpfsgt	tblptrh,c
 19504  002B40  D009               	bra	u13327
 19505  002B42  6AF5               	clrf	tablat,c
 19506  002B44  000D               	tblwt		*+
 19507  002B46  6AF5               	clrf	tablat,c
 19508  002B48  000D               	tblwt		*+
 19509  002B4A  6AF5               	clrf	tablat,c
 19510  002B4C  000D               	tblwt		*+
 19511  002B4E  6AF5               	clrf	tablat,c
 19512  002B50  000C               	tblwt		*
 19513  002B52  D008               	bra	u13320
 19514  002B54                     u13327:
 19515  002B54  CFF6 FFE9          	movff	tblptrl,fsr0l
 19516  002B58  CFF7 FFEA          	movff	tblptrh,fsr0h
 19517  002B5C  6AEE               	clrf	postinc0,c
 19518  002B5E  6AEE               	clrf	postinc0,c
 19519  002B60  6AEE               	clrf	postinc0,c
 19520  002B62  6AEF               	clrf	indf0,c
 19521  002B64                     u13320:
 19522                           
 19523                           ;tcpv4.c: 889: currentTCB->remoteWnd = 0;
 19524  002B64  0E18               	movlw	24
 19525  002B66  0100               	movlb	0	; () banked
 19526  002B68  25FE               	addwf	_currentTCB& (0+255),w,b
 19527  002B6A  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19528  002B6C  0E00               	movlw	0
 19529  002B6E  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19530  002B70  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19531  002B72  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19532  002B76  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19533  002B7A  0E00               	movlw	low (__smallconst shr (0+16))
 19534  002B7C  6EF8               	movwf	tblptru,c
 19535  002B7E  0E0F               	movlw	(high __ramtop+-1)
 19536  002B80  64F7               	cpfsgt	tblptrh,c
 19537  002B82  D005               	bra	u13337
 19538  002B84  6AF5               	clrf	tablat,c
 19539  002B86  000D               	tblwt		*+
 19540  002B88  6AF5               	clrf	tablat,c
 19541  002B8A  000C               	tblwt		*
 19542  002B8C  D006               	bra	u13330
 19543  002B8E                     u13337:
 19544  002B8E  CFF6 FFE9          	movff	tblptrl,fsr0l
 19545  002B92  CFF7 FFEA          	movff	tblptrh,fsr0h
 19546  002B96  6AEE               	clrf	postinc0,c
 19547  002B98  6AEF               	clrf	indf0,c
 19548  002B9A                     u13330:
 19549                           
 19550                           ;tcpv4.c: 890: currentTCB->mss = 0;
 19551  002B9A  0E1C               	movlw	28
 19552  002B9C  0100               	movlb	0	; () banked
 19553  002B9E  25FE               	addwf	_currentTCB& (0+255),w,b
 19554  002BA0  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19555  002BA2  0E00               	movlw	0
 19556  002BA4  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19557  002BA6  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19558  002BA8  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19559  002BAC  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19560  002BB0  0E00               	movlw	low (__smallconst shr (0+16))
 19561  002BB2  6EF8               	movwf	tblptru,c
 19562  002BB4  0E0F               	movlw	(high __ramtop+-1)
 19563  002BB6  64F7               	cpfsgt	tblptrh,c
 19564  002BB8  D005               	bra	u13347
 19565  002BBA  6AF5               	clrf	tablat,c
 19566  002BBC  000D               	tblwt		*+
 19567  002BBE  6AF5               	clrf	tablat,c
 19568  002BC0  000C               	tblwt		*
 19569  002BC2  D006               	bra	u13340
 19570  002BC4                     u13347:
 19571  002BC4  CFF6 FFE9          	movff	tblptrl,fsr0l
 19572  002BC8  CFF7 FFEA          	movff	tblptrh,fsr0h
 19573  002BCC  6AEE               	clrf	postinc0,c
 19574  002BCE  6AEF               	clrf	indf0,c
 19575  002BD0                     u13340:
 19576  002BD0  D6C8               	goto	l8986
 19577  002BD2                     l9002:
 19578  002BD2  0100               	movlb	0	; () banked
 19579  002BD4  51D2               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 19580                           
 19581                           ; Switch size 1, requested type "speed"
 19582                           ; Number of cases is 6, Range of values is 0 to 12
 19583                           ; switch strategies available:
 19584                           ; Name         Instructions Cycles
 19585                           ; simple_byte           19    10 (average)
 19586                           ;	Chosen strategy is simple_byte
 19587  002BD6  E101 D4DA          	bz	l8974
 19588  002BDA  0A04               	xorlw	4	; case 4
 19589  002BDC  E102 EF40  F011    	bz	l8960
 19590  002BE2  0A01               	xorlw	1	; case 5
 19591  002BE4  E102 EF3B  F010    	bz	l8948
 19592  002BEA  0A0C               	xorlw	12	; case 9
 19593  002BEC  E101 D562          	bz	l8980
 19594  002BF0  0A03               	xorlw	3	; case 10
 19595  002BF2  E101 D55F          	bz	l8980
 19596  002BF6  0A06               	xorlw	6	; case 12
 19597  002BF8  E101 D6B7          	bz	l8988
 19598  002BFC  EFFA  F01C         	goto	l9172
 19599  002C00                     l9004:
 19600                           
 19601                           ; BSR set to: 0
 19602                           ;tcpv4.c: 904: ;
 19603                           ;tcpv4.c: 905: if (currentTCB->destIP == receivedRemoteAddress)
 19604  002C00  0E02               	movlw	2
 19605  002C02  25FE               	addwf	_currentTCB& (0+255),w,b
 19606  002C04  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19607  002C06  0E00               	movlw	0
 19608  002C08  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19609  002C0A  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19610  002C0C  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19611  002C10  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19612  002C14  0E00               	movlw	low (__smallconst shr (0+16))
 19613  002C16  6EF8               	movwf	tblptru,c
 19614  002C18  0E0F               	movlw	(high __ramtop+-1)
 19615  002C1A  64F7               	cpfsgt	tblptrh,c
 19616  002C1C  D00D               	bra	u13357
 19617  002C1E  0009               	tblrd		*+
 19618  002C20  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 19619  002C24  0009               	tblrd		*+
 19620  002C26  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 19621  002C2A  0009               	tblrd		*+
 19622  002C2C  CFF5 F0C7          	movff	tablat,??_TCP_FiniteStateMachine+4
 19623  002C30  0009               	tblrd		*+
 19624  002C32  CFF5 F0C8          	movff	tablat,??_TCP_FiniteStateMachine+5
 19625  002C36  D00C               	bra	u13350
 19626  002C38                     u13357:
 19627  002C38  CFF6 FFE9          	movff	tblptrl,fsr0l
 19628  002C3C  CFF7 FFEA          	movff	tblptrh,fsr0h
 19629  002C40  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 19630  002C44  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 19631  002C48  CFEE F0C7          	movff	postinc0,??_TCP_FiniteStateMachine+4
 19632  002C4C  CFEE F0C8          	movff	postinc0,??_TCP_FiniteStateMachine+5
 19633  002C50                     u13350:
 19634  002C50  0101               	movlb	1	; () banked
 19635  002C52  5196               	movf	_receivedRemoteAddress& (0+255),w,b
 19636  002C54  0100               	movlb	0	; () banked
 19637  002C56  19C5               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 19638  002C58  E10F               	bnz	u13361
 19639  002C5A  0101               	movlb	1	; () banked
 19640  002C5C  5197               	movf	(_receivedRemoteAddress+1)& (0+255),w,b
 19641  002C5E  0100               	movlb	0	; () banked
 19642  002C60  19C6               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 19643  002C62  E10A               	bnz	u13361
 19644  002C64  0101               	movlb	1	; () banked
 19645  002C66  5198               	movf	(_receivedRemoteAddress+2)& (0+255),w,b
 19646  002C68  0100               	movlb	0	; () banked
 19647  002C6A  19C7               	xorwf	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 19648  002C6C  E105               	bnz	u13361
 19649  002C6E  0101               	movlb	1	; () banked
 19650  002C70  5199               	movf	(_receivedRemoteAddress+3)& (0+255),w,b
 19651  002C72  0100               	movlb	0	; () banked
 19652  002C74  19C8               	xorwf	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 19653  002C76  A4D8               	btfss	status,2,c
 19654  002C78                     u13361:
 19655  002C78  EFFA  F01C         	goto	l9172
 19656                           
 19657                           ; BSR set to: 0
 19658                           ;tcpv4.c: 906: {
 19659                           ;tcpv4.c: 910: if (currentTCB->remoteAck == tcpHeader.sequenceNumber)
 19660  002C7C  0E0C               	movlw	12
 19661  002C7E  25FE               	addwf	_currentTCB& (0+255),w,b
 19662  002C80  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19663  002C82  0E00               	movlw	0
 19664  002C84  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19665  002C86  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19666  002C88  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19667  002C8C  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19668  002C90  0E00               	movlw	low (__smallconst shr (0+16))
 19669  002C92  6EF8               	movwf	tblptru,c
 19670  002C94  0E0F               	movlw	(high __ramtop+-1)
 19671  002C96  64F7               	cpfsgt	tblptrh,c
 19672  002C98  D00D               	bra	u13377
 19673  002C9A  0009               	tblrd		*+
 19674  002C9C  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 19675  002CA0  0009               	tblrd		*+
 19676  002CA2  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 19677  002CA6  0009               	tblrd		*+
 19678  002CA8  CFF5 F0C7          	movff	tablat,??_TCP_FiniteStateMachine+4
 19679  002CAC  0009               	tblrd		*+
 19680  002CAE  CFF5 F0C8          	movff	tablat,??_TCP_FiniteStateMachine+5
 19681  002CB2  D00C               	bra	u13370
 19682  002CB4                     u13377:
 19683  002CB4  CFF6 FFE9          	movff	tblptrl,fsr0l
 19684  002CB8  CFF7 FFEA          	movff	tblptrh,fsr0h
 19685  002CBC  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 19686  002CC0  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 19687  002CC4  CFEE F0C7          	movff	postinc0,??_TCP_FiniteStateMachine+4
 19688  002CC8  CFEE F0C8          	movff	postinc0,??_TCP_FiniteStateMachine+5
 19689  002CCC                     u13370:
 19690  002CCC  0101               	movlb	1	; () banked
 19691  002CCE  51C0               	movf	(_tcpHeader+4)& (0+255),w,b
 19692  002CD0  0100               	movlb	0	; () banked
 19693  002CD2  19C5               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 19694  002CD4  E10F               	bnz	u13381
 19695  002CD6  0101               	movlb	1	; () banked
 19696  002CD8  51C1               	movf	(_tcpHeader+5)& (0+255),w,b
 19697  002CDA  0100               	movlb	0	; () banked
 19698  002CDC  19C6               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 19699  002CDE  E10A               	bnz	u13381
 19700  002CE0  0101               	movlb	1	; () banked
 19701  002CE2  51C2               	movf	(_tcpHeader+6)& (0+255),w,b
 19702  002CE4  0100               	movlb	0	; () banked
 19703  002CE6  19C7               	xorwf	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 19704  002CE8  E105               	bnz	u13381
 19705  002CEA  0101               	movlb	1	; () banked
 19706  002CEC  51C3               	movf	(_tcpHeader+7)& (0+255),w,b
 19707  002CEE  0100               	movlb	0	; () banked
 19708  002CF0  19C8               	xorwf	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 19709  002CF2  A4D8               	btfss	status,2,c
 19710  002CF4                     u13381:
 19711  002CF4  EFFA  F01C         	goto	l9172
 19712                           
 19713                           ; BSR set to: 0
 19714                           ;tcpv4.c: 911: {
 19715                           ;tcpv4.c: 915: if (currentTCB->localLastAck < tcpHeader.ackNumber)
 19716  002CF8  0E14               	movlw	20
 19717  002CFA  25FE               	addwf	_currentTCB& (0+255),w,b
 19718  002CFC  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19719  002CFE  0E00               	movlw	0
 19720  002D00  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19721  002D02  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19722  002D04  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19723  002D08  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19724  002D0C  0E00               	movlw	low (__smallconst shr (0+16))
 19725  002D0E  6EF8               	movwf	tblptru,c
 19726  002D10  0E0F               	movlw	(high __ramtop+-1)
 19727  002D12  64F7               	cpfsgt	tblptrh,c
 19728  002D14  D00D               	bra	u13397
 19729  002D16  0009               	tblrd		*+
 19730  002D18  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 19731  002D1C  0009               	tblrd		*+
 19732  002D1E  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 19733  002D22  0009               	tblrd		*+
 19734  002D24  CFF5 F0C7          	movff	tablat,??_TCP_FiniteStateMachine+4
 19735  002D28  0009               	tblrd		*+
 19736  002D2A  CFF5 F0C8          	movff	tablat,??_TCP_FiniteStateMachine+5
 19737  002D2E  D00C               	bra	u13390
 19738  002D30                     u13397:
 19739  002D30  CFF6 FFE9          	movff	tblptrl,fsr0l
 19740  002D34  CFF7 FFEA          	movff	tblptrh,fsr0h
 19741  002D38  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 19742  002D3C  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 19743  002D40  CFEE F0C7          	movff	postinc0,??_TCP_FiniteStateMachine+4
 19744  002D44  CFEE F0C8          	movff	postinc0,??_TCP_FiniteStateMachine+5
 19745  002D48                     u13390:
 19746  002D48  0101               	movlb	1	; () banked
 19747  002D4A  51C4               	movf	(_tcpHeader+8)& (0+255),w,b
 19748  002D4C  0100               	movlb	0	; () banked
 19749  002D4E  5DC5               	subwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 19750  002D50  0101               	movlb	1	; () banked
 19751  002D52  51C5               	movf	(_tcpHeader+9)& (0+255),w,b
 19752  002D54  0100               	movlb	0	; () banked
 19753  002D56  59C6               	subwfb	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 19754  002D58  0101               	movlb	1	; () banked
 19755  002D5A  51C6               	movf	(_tcpHeader+10)& (0+255),w,b
 19756  002D5C  0100               	movlb	0	; () banked
 19757  002D5E  59C7               	subwfb	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 19758  002D60  0101               	movlb	1	; () banked
 19759  002D62  51C7               	movf	(_tcpHeader+11)& (0+255),w,b
 19760  002D64  0100               	movlb	0	; () banked
 19761  002D66  59C8               	subwfb	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 19762  002D68  E302 EFFA  F01C    	bc	l9172
 19763                           
 19764                           ; BSR set to: 0
 19765                           ;tcpv4.c: 916: {
 19766                           ;tcpv4.c: 918: if ((currentTCB->localSeqno + 1) >= tcpHeader.ackNumber)
 19767  002D6E  0E10               	movlw	16
 19768  002D70  25FE               	addwf	_currentTCB& (0+255),w,b
 19769  002D72  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19770  002D74  0E00               	movlw	0
 19771  002D76  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19772  002D78  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19773  002D7A  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19774  002D7E  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19775  002D82  0E00               	movlw	low (__smallconst shr (0+16))
 19776  002D84  6EF8               	movwf	tblptru,c
 19777  002D86  0E0F               	movlw	(high __ramtop+-1)
 19778  002D88  64F7               	cpfsgt	tblptrh,c
 19779  002D8A  D00D               	bra	u13417
 19780  002D8C  0009               	tblrd		*+
 19781  002D8E  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 19782  002D92  0009               	tblrd		*+
 19783  002D94  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 19784  002D98  0009               	tblrd		*+
 19785  002D9A  CFF5 F0C7          	movff	tablat,??_TCP_FiniteStateMachine+4
 19786  002D9E  0009               	tblrd		*+
 19787  002DA0  CFF5 F0C8          	movff	tablat,??_TCP_FiniteStateMachine+5
 19788  002DA4  D00C               	bra	u13410
 19789  002DA6                     u13417:
 19790  002DA6  CFF6 FFE9          	movff	tblptrl,fsr0l
 19791  002DAA  CFF7 FFEA          	movff	tblptrh,fsr0h
 19792  002DAE  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 19793  002DB2  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 19794  002DB6  CFEE F0C7          	movff	postinc0,??_TCP_FiniteStateMachine+4
 19795  002DBA  CFEE F0C8          	movff	postinc0,??_TCP_FiniteStateMachine+5
 19796  002DBE                     u13410:
 19797  002DBE  0E01               	movlw	1
 19798  002DC0  0100               	movlb	0	; () banked
 19799  002DC2  25C5               	addwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 19800  002DC4  6FC9               	movwf	(??_TCP_FiniteStateMachine+6)& (0+255),b
 19801  002DC6  0E00               	movlw	0
 19802  002DC8  21C6               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 19803  002DCA  6FCA               	movwf	(??_TCP_FiniteStateMachine+7)& (0+255),b
 19804  002DCC  0E00               	movlw	0
 19805  002DCE  21C7               	addwfc	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 19806  002DD0  6FCB               	movwf	(??_TCP_FiniteStateMachine+8)& (0+255),b
 19807  002DD2  0E00               	movlw	0
 19808  002DD4  21C8               	addwfc	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 19809  002DD6  6FCC               	movwf	(??_TCP_FiniteStateMachine+9)& (0+255),b
 19810  002DD8  0101               	movlb	1	; () banked
 19811  002DDA  51C4               	movf	(_tcpHeader+8)& (0+255),w,b
 19812  002DDC  0100               	movlb	0	; () banked
 19813  002DDE  5DC9               	subwf	(??_TCP_FiniteStateMachine+6)& (0+255),w,b
 19814  002DE0  0101               	movlb	1	; () banked
 19815  002DE2  51C5               	movf	(_tcpHeader+9)& (0+255),w,b
 19816  002DE4  0100               	movlb	0	; () banked
 19817  002DE6  59CA               	subwfb	(??_TCP_FiniteStateMachine+7)& (0+255),w,b
 19818  002DE8  0101               	movlb	1	; () banked
 19819  002DEA  51C6               	movf	(_tcpHeader+10)& (0+255),w,b
 19820  002DEC  0100               	movlb	0	; () banked
 19821  002DEE  59CB               	subwfb	(??_TCP_FiniteStateMachine+8)& (0+255),w,b
 19822  002DF0  0101               	movlb	1	; () banked
 19823  002DF2  51C7               	movf	(_tcpHeader+11)& (0+255),w,b
 19824  002DF4  0100               	movlb	0	; () banked
 19825  002DF6  59CC               	subwfb	(??_TCP_FiniteStateMachine+9)& (0+255),w,b
 19826  002DF8  E201 D196          	bnc	l9028
 19827                           
 19828                           ; BSR set to: 0
 19829                           ;tcpv4.c: 919: {
 19830                           ;tcpv4.c: 920: notAckBytes = currentTCB->localSeqno - tcpHeader.ackNumber;
 19831  002DFC  0E10               	movlw	16
 19832  002DFE  25FE               	addwf	_currentTCB& (0+255),w,b
 19833  002E00  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19834  002E02  0E00               	movlw	0
 19835  002E04  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19836  002E06  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19837  002E08  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19838  002E0C  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19839  002E10  0E00               	movlw	low (__smallconst shr (0+16))
 19840  002E12  6EF8               	movwf	tblptru,c
 19841  002E14  0E0F               	movlw	(high __ramtop+-1)
 19842  002E16  64F7               	cpfsgt	tblptrh,c
 19843  002E18  D007               	bra	u13437
 19844  002E1A  0009               	tblrd		*+
 19845  002E1C  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 19846  002E20  0009               	tblrd		*+
 19847  002E22  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 19848  002E26  D008               	bra	u13430
 19849  002E28                     u13437:
 19850  002E28  CFF6 FFE9          	movff	tblptrl,fsr0l
 19851  002E2C  CFF7 FFEA          	movff	tblptrh,fsr0h
 19852  002E30  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 19853  002E34  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 19854  002E38                     u13430:
 19855  002E38  0101               	movlb	1	; () banked
 19856  002E3A  51C4               	movf	(_tcpHeader+8)& (0+255),w,b
 19857  002E3C  0100               	movlb	0	; () banked
 19858  002E3E  5DC5               	subwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 19859  002E40  6FD0               	movwf	TCP_FiniteStateMachine@notAckBytes& (0+255),b
 19860  002E42  0101               	movlb	1	; () banked
 19861  002E44  51C5               	movf	(_tcpHeader+9)& (0+255),w,b
 19862  002E46  0100               	movlb	0	; () banked
 19863  002E48  59C6               	subwfb	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 19864  002E4A  6FD1               	movwf	(TCP_FiniteStateMachine@notAckBytes+1)& (0+255),b
 19865                           
 19866                           ;tcpv4.c: 923: currentTCB->txBufferPtr = currentTCB->txBufferPtr - notAckBytes;
 19867  002E4C  0E25               	movlw	37
 19868  002E4E  25FE               	addwf	_currentTCB& (0+255),w,b
 19869  002E50  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19870  002E52  0E00               	movlw	0
 19871  002E54  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19872  002E56  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19873  002E58  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19874  002E5C  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19875  002E60  0E00               	movlw	low (__smallconst shr (0+16))
 19876  002E62  6EF8               	movwf	tblptru,c
 19877  002E64  0E0F               	movlw	(high __ramtop+-1)
 19878  002E66  64F7               	cpfsgt	tblptrh,c
 19879  002E68  D007               	bra	u13447
 19880  002E6A  0009               	tblrd		*+
 19881  002E6C  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 19882  002E70  0009               	tblrd		*+
 19883  002E72  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 19884  002E76  D008               	bra	u13440
 19885  002E78                     u13447:
 19886  002E78  CFF6 FFE9          	movff	tblptrl,fsr0l
 19887  002E7C  CFF7 FFEA          	movff	tblptrh,fsr0h
 19888  002E80  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 19889  002E84  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 19890  002E88                     u13440:
 19891  002E88  0100               	movlb	0	; () banked
 19892  002E8A  51D0               	movf	TCP_FiniteStateMachine@notAckBytes& (0+255),w,b
 19893  002E8C  5FC5               	subwf	(??_TCP_FiniteStateMachine+2)& (0+255),f,b
 19894  002E8E  51D1               	movf	(TCP_FiniteStateMachine@notAckBytes+1)& (0+255),w,b
 19895  002E90  5BC6               	subwfb	(??_TCP_FiniteStateMachine+3)& (0+255),f,b
 19896  002E92  0E25               	movlw	37
 19897  002E94  25FE               	addwf	_currentTCB& (0+255),w,b
 19898  002E96  6FC7               	movwf	(??_TCP_FiniteStateMachine+4)& (0+255),b
 19899  002E98  0E00               	movlw	0
 19900  002E9A  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19901  002E9C  6FC8               	movwf	(??_TCP_FiniteStateMachine+5)& (0+255),b
 19902  002E9E  C0C7  FFF6         	movff	??_TCP_FiniteStateMachine+4,tblptrl
 19903  002EA2  C0C8  FFF7         	movff	??_TCP_FiniteStateMachine+5,tblptrh
 19904  002EA6  0E00               	movlw	low (__smallconst shr (0+16))
 19905  002EA8  6EF8               	movwf	tblptru,c
 19906  002EAA  0E0F               	movlw	(high __ramtop+-1)
 19907  002EAC  64F7               	cpfsgt	tblptrh,c
 19908  002EAE  D007               	bra	u13457
 19909  002EB0  C0C5  FFF5         	movff	??_TCP_FiniteStateMachine+2,tablat
 19910  002EB4  000D               	tblwt		*+
 19911  002EB6  C0C6  FFF5         	movff	??_TCP_FiniteStateMachine+3,tablat
 19912  002EBA  000C               	tblwt		*
 19913  002EBC  D008               	bra	u13450
 19914  002EBE                     u13457:
 19915  002EBE  CFF6 FFE9          	movff	tblptrl,fsr0l
 19916  002EC2  CFF7 FFEA          	movff	tblptrh,fsr0h
 19917  002EC6  C0C5  FFEE         	movff	??_TCP_FiniteStateMachine+2,postinc0
 19918  002ECA  C0C6  FFEF         	movff	??_TCP_FiniteStateMachine+3,indf0
 19919  002ECE                     u13450:
 19920                           
 19921                           ;tcpv4.c: 924: currentTCB->bytesToSend = currentTCB->bytesToSend + notAckBytes;
 19922  002ECE  0E27               	movlw	39
 19923  002ED0  0100               	movlb	0	; () banked
 19924  002ED2  25FE               	addwf	_currentTCB& (0+255),w,b
 19925  002ED4  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19926  002ED6  0E00               	movlw	0
 19927  002ED8  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19928  002EDA  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19929  002EDC  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19930  002EE0  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19931  002EE4  0E00               	movlw	low (__smallconst shr (0+16))
 19932  002EE6  6EF8               	movwf	tblptru,c
 19933  002EE8  0E0F               	movlw	(high __ramtop+-1)
 19934  002EEA  64F7               	cpfsgt	tblptrh,c
 19935  002EEC  D007               	bra	u13467
 19936  002EEE  0009               	tblrd		*+
 19937  002EF0  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 19938  002EF4  0009               	tblrd		*+
 19939  002EF6  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 19940  002EFA  D008               	bra	u13460
 19941  002EFC                     u13467:
 19942  002EFC  CFF6 FFE9          	movff	tblptrl,fsr0l
 19943  002F00  CFF7 FFEA          	movff	tblptrh,fsr0h
 19944  002F04  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 19945  002F08  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 19946  002F0C                     u13460:
 19947  002F0C  0100               	movlb	0	; () banked
 19948  002F0E  51D0               	movf	TCP_FiniteStateMachine@notAckBytes& (0+255),w,b
 19949  002F10  27C5               	addwf	(??_TCP_FiniteStateMachine+2)& (0+255),f,b
 19950  002F12  51D1               	movf	(TCP_FiniteStateMachine@notAckBytes+1)& (0+255),w,b
 19951  002F14  23C6               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),f,b
 19952  002F16  0E27               	movlw	39
 19953  002F18  25FE               	addwf	_currentTCB& (0+255),w,b
 19954  002F1A  6FC7               	movwf	(??_TCP_FiniteStateMachine+4)& (0+255),b
 19955  002F1C  0E00               	movlw	0
 19956  002F1E  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19957  002F20  6FC8               	movwf	(??_TCP_FiniteStateMachine+5)& (0+255),b
 19958  002F22  C0C7  FFF6         	movff	??_TCP_FiniteStateMachine+4,tblptrl
 19959  002F26  C0C8  FFF7         	movff	??_TCP_FiniteStateMachine+5,tblptrh
 19960  002F2A  0E00               	movlw	low (__smallconst shr (0+16))
 19961  002F2C  6EF8               	movwf	tblptru,c
 19962  002F2E  0E0F               	movlw	(high __ramtop+-1)
 19963  002F30  64F7               	cpfsgt	tblptrh,c
 19964  002F32  D007               	bra	u13477
 19965  002F34  C0C5  FFF5         	movff	??_TCP_FiniteStateMachine+2,tablat
 19966  002F38  000D               	tblwt		*+
 19967  002F3A  C0C6  FFF5         	movff	??_TCP_FiniteStateMachine+3,tablat
 19968  002F3E  000C               	tblwt		*
 19969  002F40  D008               	bra	u13470
 19970  002F42                     u13477:
 19971  002F42  CFF6 FFE9          	movff	tblptrl,fsr0l
 19972  002F46  CFF7 FFEA          	movff	tblptrh,fsr0h
 19973  002F4A  C0C5  FFEE         	movff	??_TCP_FiniteStateMachine+2,postinc0
 19974  002F4E  C0C6  FFEF         	movff	??_TCP_FiniteStateMachine+3,indf0
 19975  002F52                     u13470:
 19976                           
 19977                           ;tcpv4.c: 927: if(currentTCB->bytesToSend == 0)
 19978  002F52  0E27               	movlw	39
 19979  002F54  0100               	movlb	0	; () banked
 19980  002F56  25FE               	addwf	_currentTCB& (0+255),w,b
 19981  002F58  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 19982  002F5A  0E00               	movlw	0
 19983  002F5C  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 19984  002F5E  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 19985  002F60  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 19986  002F64  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 19987  002F68  0E00               	movlw	low (__smallconst shr (0+16))
 19988  002F6A  6EF8               	movwf	tblptru,c
 19989  002F6C  0E0F               	movlw	(high __ramtop+-1)
 19990  002F6E  64F7               	cpfsgt	tblptrh,c
 19991  002F70  D007               	bra	u13487
 19992  002F72  0009               	tblrd		*+
 19993  002F74  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 19994  002F78  0009               	tblrd		*+
 19995  002F7A  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 19996  002F7E  D008               	bra	u13480
 19997  002F80                     u13487:
 19998  002F80  CFF6 FFE9          	movff	tblptrl,fsr0l
 19999  002F84  CFF7 FFEA          	movff	tblptrh,fsr0h
 20000  002F88  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 20001  002F8C  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 20002  002F90                     u13480:
 20003  002F90  0100               	movlb	0	; () banked
 20004  002F92  51C5               	movf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 20005  002F94  11C6               	iorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 20006  002F96  E131               	bnz	l9018
 20007                           
 20008                           ; BSR set to: 0
 20009                           ;tcpv4.c: 928: {
 20010                           ;tcpv4.c: 929: if (currentTCB->txBufState == TX_BUFF_IN_USE)
 20011  002F98  0E29               	movlw	41
 20012  002F9A  25FE               	addwf	_currentTCB& (0+255),w,b
 20013  002F9C  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 20014  002F9E  0E00               	movlw	0
 20015  002FA0  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 20016  002FA2  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 20017  002FA4  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 20018  002FA8  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 20019  002FAC  0E00               	movlw	low (__smallconst shr (0+16))
 20020  002FAE  6EF8               	movwf	tblptru,c
 20021  002FB0  0E0F               	movlw	(high __ramtop+-1)
 20022  002FB2  64F7               	cpfsgt	tblptrh,c
 20023  002FB4  D003               	bra	u13507
 20024  002FB6  0008               	tblrd		*
 20025  002FB8  50F5               	movf	tablat,w,c
 20026  002FBA  D005               	bra	u13500
 20027  002FBC                     u13507:
 20028  002FBC  CFF6 FFE9          	movff	tblptrl,fsr0l
 20029  002FC0  CFF7 FFEA          	movff	tblptrh,fsr0h
 20030  002FC4  50EF               	movf	indf0,w,c
 20031  002FC6                     u13500:
 20032  002FC6  0A02               	xorlw	2
 20033  002FC8  E118               	bnz	l9018
 20034                           
 20035                           ;tcpv4.c: 930: {
 20036                           ;tcpv4.c: 931: currentTCB->txBufState = NO_BUFF;
 20037  002FCA  0E29               	movlw	41
 20038  002FCC  0100               	movlb	0	; () banked
 20039  002FCE  25FE               	addwf	_currentTCB& (0+255),w,b
 20040  002FD0  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 20041  002FD2  0E00               	movlw	0
 20042  002FD4  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 20043  002FD6  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 20044  002FD8  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 20045  002FDC  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 20046  002FE0  0E00               	movlw	low (__smallconst shr (0+16))
 20047  002FE2  6EF8               	movwf	tblptru,c
 20048  002FE4  0E0F               	movlw	(high __ramtop+-1)
 20049  002FE6  64F7               	cpfsgt	tblptrh,c
 20050  002FE8  D003               	bra	u13527
 20051  002FEA  6AF5               	clrf	tablat,c
 20052  002FEC  000C               	tblwt		*
 20053  002FEE  D005               	bra	u13520
 20054  002FF0                     u13527:
 20055  002FF0  CFF6 FFE9          	movff	tblptrl,fsr0l
 20056  002FF4  CFF7 FFEA          	movff	tblptrh,fsr0h
 20057  002FF8  6AEF               	clrf	indf0,c
 20058  002FFA                     u13520:
 20059  002FFA                     l9018:
 20060                           
 20061                           ;tcpv4.c: 932: }
 20062                           ;tcpv4.c: 933: }
 20063                           ;tcpv4.c: 935: currentTCB->localLastAck = tcpHeader.ackNumber - 1;
 20064  002FFA  EE21  F0C4         	lfsr	2,_tcpHeader+8
 20065  002FFE  0EFF               	movlw	255
 20066  003000  24DE               	addwf	postinc2,w,c
 20067  003002  0100               	movlb	0	; () banked
 20068  003004  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 20069  003006  0EFF               	movlw	255
 20070  003008  20DE               	addwfc	postinc2,w,c
 20071  00300A  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 20072  00300C  0EFF               	movlw	255
 20073  00300E  20DE               	addwfc	postinc2,w,c
 20074  003010  6FC5               	movwf	(??_TCP_FiniteStateMachine+2)& (0+255),b
 20075  003012  0EFF               	movlw	255
 20076  003014  20DE               	addwfc	postinc2,w,c
 20077  003016  6FC6               	movwf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 20078  003018  0E14               	movlw	20
 20079  00301A  25FE               	addwf	_currentTCB& (0+255),w,b
 20080  00301C  6FC7               	movwf	(??_TCP_FiniteStateMachine+4)& (0+255),b
 20081  00301E  0E00               	movlw	0
 20082  003020  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 20083  003022  6FC8               	movwf	(??_TCP_FiniteStateMachine+5)& (0+255),b
 20084  003024  C0C7  FFF6         	movff	??_TCP_FiniteStateMachine+4,tblptrl
 20085  003028  C0C8  FFF7         	movff	??_TCP_FiniteStateMachine+5,tblptrh
 20086  00302C  0E00               	movlw	low (__smallconst shr (0+16))
 20087  00302E  6EF8               	movwf	tblptru,c
 20088  003030  0E0F               	movlw	(high __ramtop+-1)
 20089  003032  64F7               	cpfsgt	tblptrh,c
 20090  003034  D00D               	bra	u13537
 20091  003036  C0C3  FFF5         	movff	??_TCP_FiniteStateMachine,tablat
 20092  00303A  000D               	tblwt		*+
 20093  00303C  C0C4  FFF5         	movff	??_TCP_FiniteStateMachine+1,tablat
 20094  003040  000D               	tblwt		*+
 20095  003042  C0C5  FFF5         	movff	??_TCP_FiniteStateMachine+2,tablat
 20096  003046  000D               	tblwt		*+
 20097  003048  C0C6  FFF5         	movff	??_TCP_FiniteStateMachine+3,tablat
 20098  00304C  000C               	tblwt		*
 20099  00304E  D00C               	bra	u13530
 20100  003050                     u13537:
 20101  003050  CFF6 FFE9          	movff	tblptrl,fsr0l
 20102  003054  CFF7 FFEA          	movff	tblptrh,fsr0h
 20103  003058  C0C3  FFEE         	movff	??_TCP_FiniteStateMachine,postinc0
 20104  00305C  C0C4  FFEE         	movff	??_TCP_FiniteStateMachine+1,postinc0
 20105  003060  C0C5  FFEE         	movff	??_TCP_FiniteStateMachine+2,postinc0
 20106  003064  C0C6  FFEF         	movff	??_TCP_FiniteStateMachine+3,indf0
 20107  003068                     u13530:
 20108                           
 20109                           ;tcpv4.c: 936: currentTCB->localSeqno = tcpHeader.ackNumber;
 20110  003068  0E10               	movlw	16
 20111  00306A  0100               	movlb	0	; () banked
 20112  00306C  25FE               	addwf	_currentTCB& (0+255),w,b
 20113  00306E  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 20114  003070  0E00               	movlw	0
 20115  003072  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 20116  003074  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 20117  003076  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 20118  00307A  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 20119  00307E  0E00               	movlw	low (__smallconst shr (0+16))
 20120  003080  6EF8               	movwf	tblptru,c
 20121  003082  0E0F               	movlw	(high __ramtop+-1)
 20122  003084  64F7               	cpfsgt	tblptrh,c
 20123  003086  D00D               	bra	u13547
 20124  003088  C1C4  FFF5         	movff	_tcpHeader+8,tablat
 20125  00308C  000D               	tblwt		*+
 20126  00308E  C1C5  FFF5         	movff	_tcpHeader+9,tablat
 20127  003092  000D               	tblwt		*+
 20128  003094  C1C6  FFF5         	movff	_tcpHeader+10,tablat
 20129  003098  000D               	tblwt		*+
 20130  00309A  C1C7  FFF5         	movff	_tcpHeader+11,tablat
 20131  00309E  000C               	tblwt		*
 20132  0030A0  D00C               	bra	u13540
 20133  0030A2                     u13547:
 20134  0030A2  CFF6 FFE9          	movff	tblptrl,fsr0l
 20135  0030A6  CFF7 FFEA          	movff	tblptrh,fsr0h
 20136  0030AA  C1C4  FFEE         	movff	_tcpHeader+8,postinc0
 20137  0030AE  C1C5  FFEE         	movff	_tcpHeader+9,postinc0
 20138  0030B2  C1C6  FFEE         	movff	_tcpHeader+10,postinc0
 20139  0030B6  C1C7  FFEF         	movff	_tcpHeader+11,indf0
 20140  0030BA                     u13540:
 20141                           
 20142                           ;tcpv4.c: 939: if(rcvPayloadLen > 0)
 20143  0030BA  0101               	movlb	1	; () banked
 20144  0030BC  51A0               	movf	_rcvPayloadLen& (0+255),w,b
 20145  0030BE  11A1               	iorwf	(_rcvPayloadLen+1)& (0+255),w,b
 20146  0030C0  E102 EFFA  F01C    	bz	l9172
 20147                           
 20148                           ; BSR set to: 1
 20149                           ;tcpv4.c: 940: {
 20150                           ;tcpv4.c: 941: currentTCB->remoteSeqno = tcpHeader.sequenceNumber;
 20151  0030C6  0E08               	movlw	8
 20152  0030C8  0100               	movlb	0	; () banked
 20153  0030CA  25FE               	addwf	_currentTCB& (0+255),w,b
 20154  0030CC  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 20155  0030CE  0E00               	movlw	0
 20156  0030D0  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 20157  0030D2  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 20158  0030D4  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 20159  0030D8  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 20160  0030DC  0E00               	movlw	low (__smallconst shr (0+16))
 20161  0030DE  6EF8               	movwf	tblptru,c
 20162  0030E0  0E0F               	movlw	(high __ramtop+-1)
 20163  0030E2  64F7               	cpfsgt	tblptrh,c
 20164  0030E4  D00D               	bra	u13567
 20165  0030E6  C1C0  FFF5         	movff	_tcpHeader+4,tablat
 20166  0030EA  000D               	tblwt		*+
 20167  0030EC  C1C1  FFF5         	movff	_tcpHeader+5,tablat
 20168  0030F0  000D               	tblwt		*+
 20169  0030F2  C1C2  FFF5         	movff	_tcpHeader+6,tablat
 20170  0030F6  000D               	tblwt		*+
 20171  0030F8  C1C3  FFF5         	movff	_tcpHeader+7,tablat
 20172  0030FC  000C               	tblwt		*
 20173  0030FE  D00C               	bra	u13560
 20174  003100                     u13567:
 20175  003100  CFF6 FFE9          	movff	tblptrl,fsr0l
 20176  003104  CFF7 FFEA          	movff	tblptrh,fsr0h
 20177  003108  C1C0  FFEE         	movff	_tcpHeader+4,postinc0
 20178  00310C  C1C1  FFEE         	movff	_tcpHeader+5,postinc0
 20179  003110  C1C2  FFEE         	movff	_tcpHeader+6,postinc0
 20180  003114  C1C3  FFEF         	movff	_tcpHeader+7,indf0
 20181  003118                     u13560:
 20182                           
 20183                           ;tcpv4.c: 944: TCP_PayloadSave(rcvPayloadLen);
 20184  003118  C1A0  F05A         	movff	_rcvPayloadLen,TCP_PayloadSave@len
 20185  00311C  C1A1  F05B         	movff	_rcvPayloadLen+1,TCP_PayloadSave@len+1
 20186  003120  EC5E  F02E         	call	_TCP_PayloadSave	;wreg free
 20187  003124  EFFA  F01C         	goto	l9172
 20188  003128                     l9028:
 20189                           
 20190                           ; BSR set to: 0
 20191                           ;tcpv4.c: 947: {
 20192                           ;tcpv4.c: 951: currentTCB->flags = 0x04U | 0x10U;
 20193  003128  0E35               	movlw	53
 20194  00312A  25FE               	addwf	_currentTCB& (0+255),w,b
 20195  00312C  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 20196  00312E  0E00               	movlw	0
 20197  003130  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 20198  003132  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 20199  003134  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 20200  003138  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 20201  00313C  0E00               	movlw	low (__smallconst shr (0+16))
 20202  00313E  6EF8               	movwf	tblptru,c
 20203  003140  0E0F               	movlw	(high __ramtop+-1)
 20204  003142  64F7               	cpfsgt	tblptrh,c
 20205  003144  D004               	bra	u13577
 20206  003146  0E14               	movlw	20
 20207  003148  6EF5               	movwf	tablat,c
 20208  00314A  000C               	tblwt		*
 20209  00314C  D006               	bra	u13570
 20210  00314E                     u13577:
 20211  00314E  CFF6 FFE9          	movff	tblptrl,fsr0l
 20212  003152  CFF7 FFEA          	movff	tblptrh,fsr0h
 20213  003156  0E14               	movlw	20
 20214  003158  6EEF               	movwf	indf0,c
 20215  00315A                     u13570:
 20216                           
 20217                           ;tcpv4.c: 952: if (TCP_Snd(currentTCB))
 20218  00315A  C0FE  F058         	movff	_currentTCB,TCP_Snd@tcbPtr
 20219  00315E  C0FF  F059         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 20220  003162  EC31  F01D         	call	_TCP_Snd	;wreg free
 20221  003166  EF92  F00D         	goto	L10
 20222  00316A                     l9036:
 20223                           
 20224                           ; BSR set to: 0
 20225                           ;tcpv4.c: 963: ;
 20226                           ;tcpv4.c: 964: currentTCB->flags = 0x01U;
 20227  00316A  0E35               	movlw	53
 20228  00316C  25FE               	addwf	_currentTCB& (0+255),w,b
 20229  00316E  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 20230  003170  0E00               	movlw	0
 20231  003172  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 20232  003174  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 20233  003176  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 20234  00317A  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 20235  00317E  0E00               	movlw	low (__smallconst shr (0+16))
 20236  003180  6EF8               	movwf	tblptru,c
 20237  003182  0E0F               	movlw	(high __ramtop+-1)
 20238  003184  64F7               	cpfsgt	tblptrh,c
 20239  003186  D004               	bra	u13597
 20240  003188  0E01               	movlw	1
 20241  00318A  6EF5               	movwf	tablat,c
 20242  00318C  000C               	tblwt		*
 20243  00318E  D006               	bra	u13590
 20244  003190                     u13597:
 20245  003190  CFF6 FFE9          	movff	tblptrl,fsr0l
 20246  003194  CFF7 FFEA          	movff	tblptrh,fsr0h
 20247  003198  0E01               	movlw	1
 20248  00319A  6EEF               	movwf	indf0,c
 20249  00319C                     u13590:
 20250  00319C  EF4F  F013         	goto	l8976
 20251  0031A0                     l9042:
 20252                           
 20253                           ; BSR set to: 0
 20254                           ;tcpv4.c: 971: ;
 20255                           ;tcpv4.c: 974: currentTCB->localSeqno = tcpHeader.ackNumber;
 20256  0031A0  0E10               	movlw	16
 20257  0031A2  25FE               	addwf	_currentTCB& (0+255),w,b
 20258  0031A4  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 20259  0031A6  0E00               	movlw	0
 20260  0031A8  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 20261  0031AA  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 20262  0031AC  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 20263  0031B0  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 20264  0031B4  0E00               	movlw	low (__smallconst shr (0+16))
 20265  0031B6  6EF8               	movwf	tblptru,c
 20266  0031B8  0E0F               	movlw	(high __ramtop+-1)
 20267  0031BA  64F7               	cpfsgt	tblptrh,c
 20268  0031BC  D00D               	bra	u13607
 20269  0031BE  C1C4  FFF5         	movff	_tcpHeader+8,tablat
 20270  0031C2  000D               	tblwt		*+
 20271  0031C4  C1C5  FFF5         	movff	_tcpHeader+9,tablat
 20272  0031C8  000D               	tblwt		*+
 20273  0031CA  C1C6  FFF5         	movff	_tcpHeader+10,tablat
 20274  0031CE  000D               	tblwt		*+
 20275  0031D0  C1C7  FFF5         	movff	_tcpHeader+11,tablat
 20276  0031D4  000C               	tblwt		*
 20277  0031D6  D00C               	bra	u13600
 20278  0031D8                     u13607:
 20279  0031D8  CFF6 FFE9          	movff	tblptrl,fsr0l
 20280  0031DC  CFF7 FFEA          	movff	tblptrh,fsr0h
 20281  0031E0  C1C4  FFEE         	movff	_tcpHeader+8,postinc0
 20282  0031E4  C1C5  FFEE         	movff	_tcpHeader+9,postinc0
 20283  0031E8  C1C6  FFEE         	movff	_tcpHeader+10,postinc0
 20284  0031EC  C1C7  FFEF         	movff	_tcpHeader+11,indf0
 20285  0031F0                     u13600:
 20286                           
 20287                           ;tcpv4.c: 975: currentTCB->remoteAck = currentTCB->remoteAck + 1;
 20288  0031F0  0E0C               	movlw	12
 20289  0031F2  0100               	movlb	0	; () banked
 20290  0031F4  25FE               	addwf	_currentTCB& (0+255),w,b
 20291  0031F6  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 20292  0031F8  0E00               	movlw	0
 20293  0031FA  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 20294  0031FC  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 20295  0031FE  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 20296  003202  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 20297  003206  0E00               	movlw	low (__smallconst shr (0+16))
 20298  003208  6EF8               	movwf	tblptru,c
 20299  00320A  0E0F               	movlw	(high __ramtop+-1)
 20300  00320C  64F7               	cpfsgt	tblptrh,c
 20301  00320E  D00D               	bra	u13617
 20302  003210  0009               	tblrd		*+
 20303  003212  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 20304  003216  0009               	tblrd		*+
 20305  003218  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 20306  00321C  0009               	tblrd		*+
 20307  00321E  CFF5 F0C7          	movff	tablat,??_TCP_FiniteStateMachine+4
 20308  003222  0009               	tblrd		*+
 20309  003224  CFF5 F0C8          	movff	tablat,??_TCP_FiniteStateMachine+5
 20310  003228  D00C               	bra	u13610
 20311  00322A                     u13617:
 20312  00322A  CFF6 FFE9          	movff	tblptrl,fsr0l
 20313  00322E  CFF7 FFEA          	movff	tblptrh,fsr0h
 20314  003232  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 20315  003236  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 20316  00323A  CFEE F0C7          	movff	postinc0,??_TCP_FiniteStateMachine+4
 20317  00323E  CFEE F0C8          	movff	postinc0,??_TCP_FiniteStateMachine+5
 20318  003242                     u13610:
 20319  003242  0E01               	movlw	1
 20320  003244  0100               	movlb	0	; () banked
 20321  003246  25C5               	addwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 20322  003248  6FC9               	movwf	(??_TCP_FiniteStateMachine+6)& (0+255),b
 20323  00324A  0E00               	movlw	0
 20324  00324C  21C6               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 20325  00324E  6FCA               	movwf	(??_TCP_FiniteStateMachine+7)& (0+255),b
 20326  003250  0E00               	movlw	0
 20327  003252  21C7               	addwfc	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 20328  003254  6FCB               	movwf	(??_TCP_FiniteStateMachine+8)& (0+255),b
 20329  003256  0E00               	movlw	0
 20330  003258  21C8               	addwfc	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 20331  00325A  6FCC               	movwf	(??_TCP_FiniteStateMachine+9)& (0+255),b
 20332  00325C  0E0C               	movlw	12
 20333  00325E  25FE               	addwf	_currentTCB& (0+255),w,b
 20334  003260  6FCD               	movwf	(??_TCP_FiniteStateMachine+10)& (0+255),b
 20335  003262  0E00               	movlw	0
 20336  003264  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 20337  003266  6FCE               	movwf	(??_TCP_FiniteStateMachine+11)& (0+255),b
 20338  003268  C0CD  FFF6         	movff	??_TCP_FiniteStateMachine+10,tblptrl
 20339  00326C  C0CE  FFF7         	movff	??_TCP_FiniteStateMachine+11,tblptrh
 20340  003270  0E00               	movlw	low (__smallconst shr (0+16))
 20341  003272  6EF8               	movwf	tblptru,c
 20342  003274  0E0F               	movlw	(high __ramtop+-1)
 20343  003276  64F7               	cpfsgt	tblptrh,c
 20344  003278  D00D               	bra	u13627
 20345  00327A  C0C9  FFF5         	movff	??_TCP_FiniteStateMachine+6,tablat
 20346  00327E  000D               	tblwt		*+
 20347  003280  C0CA  FFF5         	movff	??_TCP_FiniteStateMachine+7,tablat
 20348  003284  000D               	tblwt		*+
 20349  003286  C0CB  FFF5         	movff	??_TCP_FiniteStateMachine+8,tablat
 20350  00328A  000D               	tblwt		*+
 20351  00328C  C0CC  FFF5         	movff	??_TCP_FiniteStateMachine+9,tablat
 20352  003290  000C               	tblwt		*
 20353  003292  D00C               	bra	u13620
 20354  003294                     u13627:
 20355  003294  CFF6 FFE9          	movff	tblptrl,fsr0l
 20356  003298  CFF7 FFEA          	movff	tblptrh,fsr0h
 20357  00329C  C0C9  FFEE         	movff	??_TCP_FiniteStateMachine+6,postinc0
 20358  0032A0  C0CA  FFEE         	movff	??_TCP_FiniteStateMachine+7,postinc0
 20359  0032A4  C0CB  FFEE         	movff	??_TCP_FiniteStateMachine+8,postinc0
 20360  0032A8  C0CC  FFEF         	movff	??_TCP_FiniteStateMachine+9,indf0
 20361  0032AC                     u13620:
 20362                           
 20363                           ;tcpv4.c: 977: currentTCB->socketState = SOCKET_CLOSING;
 20364  0032AC  0E36               	movlw	54
 20365  0032AE  0100               	movlb	0	; () banked
 20366  0032B0  25FE               	addwf	_currentTCB& (0+255),w,b
 20367  0032B2  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 20368  0032B4  0E00               	movlw	0
 20369  0032B6  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 20370  0032B8  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 20371  0032BA  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 20372  0032BE  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 20373  0032C2  0E00               	movlw	low (__smallconst shr (0+16))
 20374  0032C4  6EF8               	movwf	tblptru,c
 20375  0032C6  0E0F               	movlw	(high __ramtop+-1)
 20376  0032C8  64F7               	cpfsgt	tblptrh,c
 20377  0032CA  D004               	bra	u13637
 20378  0032CC  0E04               	movlw	4
 20379  0032CE  6EF5               	movwf	tablat,c
 20380  0032D0  000C               	tblwt		*
 20381  0032D2  D006               	bra	u13630
 20382  0032D4                     u13637:
 20383  0032D4  CFF6 FFE9          	movff	tblptrl,fsr0l
 20384  0032D8  CFF7 FFEA          	movff	tblptrh,fsr0h
 20385  0032DC  0E04               	movlw	4
 20386  0032DE  6EEF               	movwf	indf0,c
 20387  0032E0                     u13630:
 20388                           
 20389                           ;tcpv4.c: 978: currentTCB->timeout = ((unsigned long)1*2);
 20390  0032E0  0E30               	movlw	48
 20391  0032E2  0100               	movlb	0	; () banked
 20392  0032E4  25FE               	addwf	_currentTCB& (0+255),w,b
 20393  0032E6  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 20394  0032E8  0E00               	movlw	0
 20395  0032EA  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 20396  0032EC  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 20397  0032EE  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 20398  0032F2  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 20399  0032F6  0E00               	movlw	low (__smallconst shr (0+16))
 20400  0032F8  6EF8               	movwf	tblptru,c
 20401  0032FA  0E0F               	movlw	(high __ramtop+-1)
 20402  0032FC  64F7               	cpfsgt	tblptrh,c
 20403  0032FE  D006               	bra	u13647
 20404  003300  0E02               	movlw	2
 20405  003302  6EF5               	movwf	tablat,c
 20406  003304  000D               	tblwt		*+
 20407  003306  6AF5               	clrf	tablat,c
 20408  003308  000C               	tblwt		*
 20409  00330A  D007               	bra	u13640
 20410  00330C                     u13647:
 20411  00330C  CFF6 FFE9          	movff	tblptrl,fsr0l
 20412  003310  CFF7 FFEA          	movff	tblptrh,fsr0h
 20413  003314  0E02               	movlw	2
 20414  003316  6EEE               	movwf	postinc0,c
 20415  003318  6AEF               	clrf	indf0,c
 20416  00331A                     u13640:
 20417                           
 20418                           ;tcpv4.c: 979: currentTCB->timeoutReloadValue = ((unsigned long)1*2);
 20419  00331A  0E32               	movlw	50
 20420  00331C  0100               	movlb	0	; () banked
 20421  00331E  25FE               	addwf	_currentTCB& (0+255),w,b
 20422  003320  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 20423  003322  0E00               	movlw	0
 20424  003324  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 20425  003326  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 20426  003328  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 20427  00332C  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 20428  003330  0E00               	movlw	low (__smallconst shr (0+16))
 20429  003332  6EF8               	movwf	tblptru,c
 20430  003334  0E0F               	movlw	(high __ramtop+-1)
 20431  003336  64F7               	cpfsgt	tblptrh,c
 20432  003338  D006               	bra	u13657
 20433  00333A  0E02               	movlw	2
 20434  00333C  6EF5               	movwf	tablat,c
 20435  00333E  000D               	tblwt		*+
 20436  003340  6AF5               	clrf	tablat,c
 20437  003342  000C               	tblwt		*
 20438  003344  D007               	bra	u13650
 20439  003346                     u13657:
 20440  003346  CFF6 FFE9          	movff	tblptrl,fsr0l
 20441  00334A  CFF7 FFEA          	movff	tblptrh,fsr0h
 20442  00334E  0E02               	movlw	2
 20443  003350  6EEE               	movwf	postinc0,c
 20444  003352  6AEF               	clrf	indf0,c
 20445  003354                     u13650:
 20446                           
 20447                           ;tcpv4.c: 980: currentTCB->timeoutsCount = (5u);
 20448  003354  0E34               	movlw	52
 20449  003356  0100               	movlb	0	; () banked
 20450  003358  25FE               	addwf	_currentTCB& (0+255),w,b
 20451  00335A  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 20452  00335C  0E00               	movlw	0
 20453  00335E  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 20454  003360  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 20455  003362  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 20456  003366  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 20457  00336A  0E00               	movlw	low (__smallconst shr (0+16))
 20458  00336C  6EF8               	movwf	tblptru,c
 20459  00336E  0E0F               	movlw	(high __ramtop+-1)
 20460  003370  64F7               	cpfsgt	tblptrh,c
 20461  003372  D004               	bra	u13667
 20462  003374  0E05               	movlw	5
 20463  003376  6EF5               	movwf	tablat,c
 20464  003378  000C               	tblwt		*
 20465  00337A  D006               	bra	u13660
 20466  00337C                     u13667:
 20467  00337C  CFF6 FFE9          	movff	tblptrl,fsr0l
 20468  003380  CFF7 FFEA          	movff	tblptrh,fsr0h
 20469  003384  0E05               	movlw	5
 20470  003386  6EEF               	movwf	indf0,c
 20471  003388                     u13660:
 20472                           
 20473                           ;tcpv4.c: 982: currentTCB->flags = 0x01U | 0x10U;
 20474  003388  0E35               	movlw	53
 20475  00338A  0100               	movlb	0	; () banked
 20476  00338C  25FE               	addwf	_currentTCB& (0+255),w,b
 20477  00338E  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 20478  003390  0E00               	movlw	0
 20479  003392  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 20480  003394  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 20481  003396  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 20482  00339A  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 20483  00339E  0E00               	movlw	low (__smallconst shr (0+16))
 20484  0033A0  6EF8               	movwf	tblptru,c
 20485  0033A2  0E0F               	movlw	(high __ramtop+-1)
 20486  0033A4  64F7               	cpfsgt	tblptrh,c
 20487  0033A6  D004               	bra	u13677
 20488  0033A8  0E11               	movlw	17
 20489  0033AA  6EF5               	movwf	tablat,c
 20490  0033AC  000C               	tblwt		*
 20491  0033AE  D006               	bra	u13670
 20492  0033B0                     u13677:
 20493  0033B0  CFF6 FFE9          	movff	tblptrl,fsr0l
 20494  0033B4  CFF7 FFEA          	movff	tblptrh,fsr0h
 20495  0033B8  0E11               	movlw	17
 20496  0033BA  6EEF               	movwf	indf0,c
 20497  0033BC                     u13670:
 20498                           
 20499                           ;tcpv4.c: 984: nextState = LAST_ACK;
 20500  0033BC  0E09               	movlw	9
 20501  0033BE  EF50  F013         	goto	L12
 20502  0033C2                     l9050:
 20503                           
 20504                           ; BSR set to: 0
 20505                           ;tcpv4.c: 993: ;
 20506                           ;tcpv4.c: 994: if (currentTCB->timeoutsCount)
 20507  0033C2  0E34               	movlw	52
 20508  0033C4  25FE               	addwf	_currentTCB& (0+255),w,b
 20509  0033C6  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 20510  0033C8  0E00               	movlw	0
 20511  0033CA  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 20512  0033CC  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 20513  0033CE  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 20514  0033D2  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 20515  0033D6  0E00               	movlw	low (__smallconst shr (0+16))
 20516  0033D8  6EF8               	movwf	tblptru,c
 20517  0033DA  0E0F               	movlw	(high __ramtop+-1)
 20518  0033DC  64F7               	cpfsgt	tblptrh,c
 20519  0033DE  D003               	bra	u13687
 20520  0033E0  0008               	tblrd		*
 20521  0033E2  50F5               	movf	tablat,w,c
 20522  0033E4  D005               	bra	u13680
 20523  0033E6                     u13687:
 20524  0033E6  CFF6 FFE9          	movff	tblptrl,fsr0l
 20525  0033EA  CFF7 FFEA          	movff	tblptrh,fsr0h
 20526  0033EE  50EF               	movf	indf0,w,c
 20527  0033F0                     u13680:
 20528  0033F0  0900               	iorlw	0
 20529  0033F2  E002 EF52  F013    	bnz	l8978
 20530                           
 20531                           ;tcpv4.c: 998: {
 20532                           ;tcpv4.c: 1000: currentTCB->flags = 0x04U;
 20533  0033F8  0E35               	movlw	53
 20534  0033FA  0100               	movlb	0	; () banked
 20535  0033FC  25FE               	addwf	_currentTCB& (0+255),w,b
 20536  0033FE  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 20537  003400  0E00               	movlw	0
 20538  003402  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 20539  003404  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 20540  003406  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 20541  00340A  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 20542  00340E  0E00               	movlw	low (__smallconst shr (0+16))
 20543  003410  6EF8               	movwf	tblptru,c
 20544  003412  0E0F               	movlw	(high __ramtop+-1)
 20545  003414  64F7               	cpfsgt	tblptrh,c
 20546  003416  D004               	bra	u13707
 20547  003418  0E04               	movlw	4
 20548  00341A  6EF5               	movwf	tablat,c
 20549  00341C  000C               	tblwt		*
 20550  00341E  D006               	bra	u13700
 20551  003420                     u13707:
 20552  003420  CFF6 FFE9          	movff	tblptrl,fsr0l
 20553  003424  CFF7 FFEA          	movff	tblptrh,fsr0h
 20554  003428  0E04               	movlw	4
 20555  00342A  6EEF               	movwf	indf0,c
 20556  00342C                     u13700:
 20557                           
 20558                           ;tcpv4.c: 1001: if(TCP_Snd(currentTCB))
 20559  00342C  C0FE  F058         	movff	_currentTCB,TCP_Snd@tcbPtr
 20560  003430  C0FF  F059         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 20561  003434  EC31  F01D         	call	_TCP_Snd	;wreg free
 20562  003438  EF92  F00D         	goto	L10
 20563  00343C                     l9064:
 20564  00343C  0100               	movlb	0	; () banked
 20565  00343E  51D2               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 20566                           
 20567                           ; Switch size 1, requested type "speed"
 20568                           ; Number of cases is 7, Range of values is 0 to 12
 20569                           ; switch strategies available:
 20570                           ; Name         Instructions Cycles
 20571                           ; simple_byte           22    12 (average)
 20572                           ;	Chosen strategy is simple_byte
 20573  003440  E101 D693          	bz	l9036
 20574  003444  0A04               	xorlw	4	; case 4
 20575  003446  E102 EF00  F016    	bz	l9004
 20576  00344C  0A02               	xorlw	2	; case 6
 20577  00344E  E101 D6A7          	bz	l9042
 20578  003452  0A01               	xorlw	1	; case 7
 20579  003454  E101 D6A4          	bz	l9042
 20580  003458  0A0E               	xorlw	14	; case 9
 20581  00345A  E102 EF61  F00A    	bz	l1293
 20582  003460  0A03               	xorlw	3	; case 10
 20583  003462  E102 EF61  F00A    	bz	l1293
 20584  003468  0A06               	xorlw	6	; case 12
 20585  00346A  E0AB               	bz	l9050
 20586  00346C  D2C3               	goto	l9172
 20587  00346E                     l9066:
 20588                           
 20589                           ; BSR set to: 0
 20590                           ;tcpv4.c: 1016: ;
 20591                           ;tcpv4.c: 1017: currentTCB->flags = 0x10U;
 20592  00346E  0E35               	movlw	53
 20593  003470  25FE               	addwf	_currentTCB& (0+255),w,b
 20594  003472  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 20595  003474  0E00               	movlw	0
 20596  003476  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 20597  003478  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 20598  00347A  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 20599  00347E  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 20600  003482  0E00               	movlw	low (__smallconst shr (0+16))
 20601  003484  6EF8               	movwf	tblptru,c
 20602  003486  0E0F               	movlw	(high __ramtop+-1)
 20603  003488  64F7               	cpfsgt	tblptrh,c
 20604  00348A  D004               	bra	u13727
 20605  00348C  0E10               	movlw	16
 20606  00348E  6EF5               	movwf	tablat,c
 20607  003490  000C               	tblwt		*
 20608  003492  D006               	bra	u13720
 20609  003494                     u13727:
 20610  003494  CFF6 FFE9          	movff	tblptrl,fsr0l
 20611  003498  CFF7 FFEA          	movff	tblptrh,fsr0h
 20612  00349C  0E10               	movlw	16
 20613  00349E  6EEF               	movwf	indf0,c
 20614  0034A0                     u13720:
 20615                           
 20616                           ;tcpv4.c: 1018: if(TCP_Snd(currentTCB))
 20617  0034A0  C0FE  F058         	movff	_currentTCB,TCP_Snd@tcbPtr
 20618  0034A4  C0FF  F059         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 20619  0034A8  EC31  F01D         	call	_TCP_Snd	;wreg free
 20620  0034AC  0900               	iorlw	0
 20621  0034AE  E101 D2A1          	bz	l9172
 20622                           
 20623                           ; BSR set to: 0
 20624                           ;tcpv4.c: 1019: {
 20625                           ;tcpv4.c: 1020: nextState = CLOSING;
 20626  0034B2  0E08               	movlw	8
 20627  0034B4  D05C               	goto	L14
 20628  0034B6                     l9072:
 20629                           
 20630                           ; BSR set to: 0
 20631                           ;tcpv4.c: 1024: ;
 20632                           ;tcpv4.c: 1026: currentTCB->timeout = ((unsigned long)1*2);
 20633  0034B6  0E30               	movlw	48
 20634  0034B8  25FE               	addwf	_currentTCB& (0+255),w,b
 20635  0034BA  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 20636  0034BC  0E00               	movlw	0
 20637  0034BE  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 20638  0034C0  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 20639  0034C2  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 20640  0034C6  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 20641  0034CA  0E00               	movlw	low (__smallconst shr (0+16))
 20642  0034CC  6EF8               	movwf	tblptru,c
 20643  0034CE  0E0F               	movlw	(high __ramtop+-1)
 20644  0034D0  64F7               	cpfsgt	tblptrh,c
 20645  0034D2  D006               	bra	u13747
 20646  0034D4  0E02               	movlw	2
 20647  0034D6  6EF5               	movwf	tablat,c
 20648  0034D8  000D               	tblwt		*+
 20649  0034DA  6AF5               	clrf	tablat,c
 20650  0034DC  000C               	tblwt		*
 20651  0034DE  D007               	bra	u13740
 20652  0034E0                     u13747:
 20653  0034E0  CFF6 FFE9          	movff	tblptrl,fsr0l
 20654  0034E4  CFF7 FFEA          	movff	tblptrh,fsr0h
 20655  0034E8  0E02               	movlw	2
 20656  0034EA  6EEE               	movwf	postinc0,c
 20657  0034EC  6AEF               	clrf	indf0,c
 20658  0034EE                     u13740:
 20659                           
 20660                           ;tcpv4.c: 1027: currentTCB->timeoutsCount = 1;
 20661  0034EE  0E34               	movlw	52
 20662  0034F0  0100               	movlb	0	; () banked
 20663  0034F2  25FE               	addwf	_currentTCB& (0+255),w,b
 20664  0034F4  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 20665  0034F6  0E00               	movlw	0
 20666  0034F8  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 20667  0034FA  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 20668  0034FC  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 20669  003500  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 20670  003504  0E00               	movlw	low (__smallconst shr (0+16))
 20671  003506  6EF8               	movwf	tblptru,c
 20672  003508  0E0F               	movlw	(high __ramtop+-1)
 20673  00350A  64F7               	cpfsgt	tblptrh,c
 20674  00350C  D004               	bra	u13757
 20675  00350E  0E01               	movlw	1
 20676  003510  6EF5               	movwf	tablat,c
 20677  003512  000C               	tblwt		*
 20678  003514  D006               	bra	u13750
 20679  003516                     u13757:
 20680  003516  CFF6 FFE9          	movff	tblptrl,fsr0l
 20681  00351A  CFF7 FFEA          	movff	tblptrh,fsr0h
 20682  00351E  0E01               	movlw	1
 20683  003520  6EEF               	movwf	indf0,c
 20684  003522                     u13750:
 20685                           
 20686                           ;tcpv4.c: 1028: nextState = FIN_WAIT_2;
 20687  003522  0E06               	movlw	6
 20688  003524  EFB2  F014         	goto	L18
 20689  003528                     l9076:
 20690                           
 20691                           ; BSR set to: 0
 20692                           ;tcpv4.c: 1031: ;
 20693                           ;tcpv4.c: 1032: currentTCB->flags = 0x10U;
 20694  003528  0E35               	movlw	53
 20695  00352A  25FE               	addwf	_currentTCB& (0+255),w,b
 20696  00352C  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 20697  00352E  0E00               	movlw	0
 20698  003530  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 20699  003532  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 20700  003534  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 20701  003538  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 20702  00353C  0E00               	movlw	low (__smallconst shr (0+16))
 20703  00353E  6EF8               	movwf	tblptru,c
 20704  003540  0E0F               	movlw	(high __ramtop+-1)
 20705  003542  64F7               	cpfsgt	tblptrh,c
 20706  003544  D004               	bra	u13767
 20707  003546  0E10               	movlw	16
 20708  003548  6EF5               	movwf	tablat,c
 20709  00354A  000C               	tblwt		*
 20710  00354C  D006               	bra	u13760
 20711  00354E                     u13767:
 20712  00354E  CFF6 FFE9          	movff	tblptrl,fsr0l
 20713  003552  CFF7 FFEA          	movff	tblptrh,fsr0h
 20714  003556  0E10               	movlw	16
 20715  003558  6EEF               	movwf	indf0,c
 20716  00355A                     u13760:
 20717                           
 20718                           ;tcpv4.c: 1033: if(TCP_Snd(currentTCB))
 20719  00355A  C0FE  F058         	movff	_currentTCB,TCP_Snd@tcbPtr
 20720  00355E  C0FF  F059         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 20721  003562  EC31  F01D         	call	_TCP_Snd	;wreg free
 20722  003566  0900               	iorlw	0
 20723  003568  E101 D244          	bz	l9172
 20724  00356C                     l9080:
 20725                           
 20726                           ; BSR set to: 0
 20727                           ;tcpv4.c: 1034: {
 20728                           ;tcpv4.c: 1035: nextState = TIME_WAIT;
 20729  00356C  0E0A               	movlw	10
 20730  00356E                     L14:
 20731  00356E  6FD3               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 20732  003570  D241               	goto	l9172
 20733  003572                     l9082:
 20734                           
 20735                           ; BSR set to: 0
 20736                           ;tcpv4.c: 1039: ;
 20737                           ;tcpv4.c: 1040: if (currentTCB->timeoutsCount)
 20738  003572  0E34               	movlw	52
 20739  003574  25FE               	addwf	_currentTCB& (0+255),w,b
 20740  003576  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 20741  003578  0E00               	movlw	0
 20742  00357A  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 20743  00357C  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 20744  00357E  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 20745  003582  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 20746  003586  0E00               	movlw	low (__smallconst shr (0+16))
 20747  003588  6EF8               	movwf	tblptru,c
 20748  00358A  0E0F               	movlw	(high __ramtop+-1)
 20749  00358C  64F7               	cpfsgt	tblptrh,c
 20750  00358E  D003               	bra	u13787
 20751  003590  0008               	tblrd		*
 20752  003592  50F5               	movf	tablat,w,c
 20753  003594  D005               	bra	u13780
 20754  003596                     u13787:
 20755  003596  CFF6 FFE9          	movff	tblptrl,fsr0l
 20756  00359A  CFF7 FFEA          	movff	tblptrh,fsr0h
 20757  00359E  50EF               	movf	indf0,w,c
 20758  0035A0                     u13780:
 20759  0035A0  0900               	iorlw	0
 20760  0035A2  E002 EF52  F013    	bnz	l8978
 20761                           
 20762                           ;tcpv4.c: 1044: {
 20763                           ;tcpv4.c: 1046: currentTCB->flags = 0x04U;
 20764  0035A8  0E35               	movlw	53
 20765  0035AA  0100               	movlb	0	; () banked
 20766  0035AC  25FE               	addwf	_currentTCB& (0+255),w,b
 20767  0035AE  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 20768  0035B0  0E00               	movlw	0
 20769  0035B2  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 20770  0035B4  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 20771  0035B6  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 20772  0035BA  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 20773  0035BE  0E00               	movlw	low (__smallconst shr (0+16))
 20774  0035C0  6EF8               	movwf	tblptru,c
 20775  0035C2  0E0F               	movlw	(high __ramtop+-1)
 20776  0035C4  64F7               	cpfsgt	tblptrh,c
 20777  0035C6  D004               	bra	u13807
 20778  0035C8  0E04               	movlw	4
 20779  0035CA  6EF5               	movwf	tablat,c
 20780  0035CC  000C               	tblwt		*
 20781  0035CE  D006               	bra	u13800
 20782  0035D0                     u13807:
 20783  0035D0  CFF6 FFE9          	movff	tblptrl,fsr0l
 20784  0035D4  CFF7 FFEA          	movff	tblptrh,fsr0h
 20785  0035D8  0E04               	movlw	4
 20786  0035DA  6EEF               	movwf	indf0,c
 20787  0035DC                     u13800:
 20788                           
 20789                           ;tcpv4.c: 1047: if(TCP_Snd(currentTCB))
 20790  0035DC  C0FE  F058         	movff	_currentTCB,TCP_Snd@tcbPtr
 20791  0035E0  C0FF  F059         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 20792  0035E4  EC31  F01D         	call	_TCP_Snd	;wreg free
 20793  0035E8  EF92  F00D         	goto	L10
 20794  0035EC                     l9096:
 20795  0035EC  0100               	movlb	0	; () banked
 20796  0035EE  51D2               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 20797                           
 20798                           ; Switch size 1, requested type "speed"
 20799                           ; Number of cases is 4, Range of values is 4 to 12
 20800                           ; switch strategies available:
 20801                           ; Name         Instructions Cycles
 20802                           ; simple_byte           13     7 (average)
 20803                           ;	Chosen strategy is simple_byte
 20804  0035F0  0A04               	xorlw	4	; case 4
 20805  0035F2  E101 D760          	bz	l9072
 20806  0035F6  0A02               	xorlw	2	; case 6
 20807  0035F8  E101 D739          	bz	l9066
 20808  0035FC  0A01               	xorlw	1	; case 7
 20809  0035FE  E094               	bz	l9076
 20810  003600  0A0B               	xorlw	11	; case 12
 20811  003602  E0B7               	bz	l9082
 20812  003604  D1F7               	goto	l9172
 20813  003606                     l9098:
 20814                           
 20815                           ; BSR set to: 0
 20816                           ;tcpv4.c: 1062: ;
 20817                           ;tcpv4.c: 1063: if(TCP_Snd(currentTCB))
 20818  003606  C0FE  F058         	movff	_currentTCB,TCP_Snd@tcbPtr
 20819  00360A  C0FF  F059         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 20820  00360E  EC31  F01D         	call	_TCP_Snd	;wreg free
 20821  003612  D7A9               	goto	L15
 20822  003614                     l9102:
 20823                           
 20824                           ; BSR set to: 0
 20825                           ;tcpv4.c: 1069: ;
 20826                           ;tcpv4.c: 1070: if (currentTCB->timeoutsCount)
 20827  003614  0E34               	movlw	52
 20828  003616  25FE               	addwf	_currentTCB& (0+255),w,b
 20829  003618  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 20830  00361A  0E00               	movlw	0
 20831  00361C  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 20832  00361E  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 20833  003620  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 20834  003624  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 20835  003628  0E00               	movlw	low (__smallconst shr (0+16))
 20836  00362A  6EF8               	movwf	tblptru,c
 20837  00362C  0E0F               	movlw	(high __ramtop+-1)
 20838  00362E  64F7               	cpfsgt	tblptrh,c
 20839  003630  D003               	bra	u13837
 20840  003632  0008               	tblrd		*
 20841  003634  50F5               	movf	tablat,w,c
 20842  003636  D005               	bra	u13830
 20843  003638                     u13837:
 20844  003638  CFF6 FFE9          	movff	tblptrl,fsr0l
 20845  00363C  CFF7 FFEA          	movff	tblptrh,fsr0h
 20846  003640  50EF               	movf	indf0,w,c
 20847  003642                     u13830:
 20848  003642  0900               	iorlw	0
 20849  003644  E002 EF52  F013    	bnz	l8978
 20850                           
 20851                           ;tcpv4.c: 1074: {
 20852                           ;tcpv4.c: 1076: currentTCB->flags = 0x04U;
 20853  00364A  0E35               	movlw	53
 20854  00364C  0100               	movlb	0	; () banked
 20855  00364E  25FE               	addwf	_currentTCB& (0+255),w,b
 20856  003650  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 20857  003652  0E00               	movlw	0
 20858  003654  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 20859  003656  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 20860  003658  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 20861  00365C  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 20862  003660  0E00               	movlw	low (__smallconst shr (0+16))
 20863  003662  6EF8               	movwf	tblptru,c
 20864  003664  0E0F               	movlw	(high __ramtop+-1)
 20865  003666  64F7               	cpfsgt	tblptrh,c
 20866  003668  D004               	bra	u13857
 20867  00366A  0E04               	movlw	4
 20868  00366C  6EF5               	movwf	tablat,c
 20869  00366E  000C               	tblwt		*
 20870  003670  D006               	bra	u13850
 20871  003672                     u13857:
 20872  003672  CFF6 FFE9          	movff	tblptrl,fsr0l
 20873  003676  CFF7 FFEA          	movff	tblptrh,fsr0h
 20874  00367A  0E04               	movlw	4
 20875  00367C  6EEF               	movwf	indf0,c
 20876  00367E                     u13850:
 20877                           
 20878                           ;tcpv4.c: 1077: if(TCP_Snd(currentTCB))
 20879  00367E  C0FE  F058         	movff	_currentTCB,TCP_Snd@tcbPtr
 20880  003682  C0FF  F059         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 20881  003686  EC31  F01D         	call	_TCP_Snd	;wreg free
 20882  00368A  EF92  F00D         	goto	L10
 20883  00368E                     l9116:
 20884  00368E  0100               	movlb	0	; () banked
 20885  003690  51D2               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 20886                           
 20887                           ; Switch size 1, requested type "speed"
 20888                           ; Number of cases is 2, Range of values is 6 to 12
 20889                           ; switch strategies available:
 20890                           ; Name         Instructions Cycles
 20891                           ; simple_byte            7     4 (average)
 20892                           ;	Chosen strategy is simple_byte
 20893  003692  0A06               	xorlw	6	; case 6
 20894  003694  E0B8               	bz	l9098
 20895  003696  0A0A               	xorlw	10	; case 12
 20896  003698  E0BD               	bz	l9102
 20897  00369A  D1AC               	goto	l9172
 20898  00369C                     l9122:
 20899  00369C  0100               	movlb	0	; () banked
 20900  00369E  51D2               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 20901                           
 20902                           ; Switch size 1, requested type "speed"
 20903                           ; Number of cases is 1, Range of values is 4 to 4
 20904                           ; switch strategies available:
 20905                           ; Name         Instructions Cycles
 20906                           ; simple_byte            4     3 (average)
 20907                           ;	Chosen strategy is simple_byte
 20908  0036A0  0A04               	xorlw	4	; case 4
 20909  0036A2  E101 D763          	bz	l9080
 20910  0036A6  D1A6               	goto	l9172
 20911  0036A8                     l9124:
 20912                           
 20913                           ; BSR set to: 0
 20914                           ;tcpv4.c: 1107: case RCV_ACK:
 20915                           ;tcpv4.c: 1108: if ((currentTCB->destIP == receivedRemoteAddress) &&
 20916                           ;tcpv4.c: 1109: (currentTCB->destPort == tcpHeader.sourcePort))
 20917  0036A8  0E02               	movlw	2
 20918  0036AA  25FE               	addwf	_currentTCB& (0+255),w,b
 20919  0036AC  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 20920  0036AE  0E00               	movlw	0
 20921  0036B0  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 20922  0036B2  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 20923  0036B4  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 20924  0036B8  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 20925  0036BC  0E00               	movlw	low (__smallconst shr (0+16))
 20926  0036BE  6EF8               	movwf	tblptru,c
 20927  0036C0  0E0F               	movlw	(high __ramtop+-1)
 20928  0036C2  64F7               	cpfsgt	tblptrh,c
 20929  0036C4  D00D               	bra	u13877
 20930  0036C6  0009               	tblrd		*+
 20931  0036C8  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 20932  0036CC  0009               	tblrd		*+
 20933  0036CE  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 20934  0036D2  0009               	tblrd		*+
 20935  0036D4  CFF5 F0C7          	movff	tablat,??_TCP_FiniteStateMachine+4
 20936  0036D8  0009               	tblrd		*+
 20937  0036DA  CFF5 F0C8          	movff	tablat,??_TCP_FiniteStateMachine+5
 20938  0036DE  D00C               	bra	u13870
 20939  0036E0                     u13877:
 20940  0036E0  CFF6 FFE9          	movff	tblptrl,fsr0l
 20941  0036E4  CFF7 FFEA          	movff	tblptrh,fsr0h
 20942  0036E8  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 20943  0036EC  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 20944  0036F0  CFEE F0C7          	movff	postinc0,??_TCP_FiniteStateMachine+4
 20945  0036F4  CFEE F0C8          	movff	postinc0,??_TCP_FiniteStateMachine+5
 20946  0036F8                     u13870:
 20947  0036F8  0101               	movlb	1	; () banked
 20948  0036FA  5196               	movf	_receivedRemoteAddress& (0+255),w,b
 20949  0036FC  0100               	movlb	0	; () banked
 20950  0036FE  19C5               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 20951  003700  E10F               	bnz	u13881
 20952  003702  0101               	movlb	1	; () banked
 20953  003704  5197               	movf	(_receivedRemoteAddress+1)& (0+255),w,b
 20954  003706  0100               	movlb	0	; () banked
 20955  003708  19C6               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 20956  00370A  E10A               	bnz	u13881
 20957  00370C  0101               	movlb	1	; () banked
 20958  00370E  5198               	movf	(_receivedRemoteAddress+2)& (0+255),w,b
 20959  003710  0100               	movlb	0	; () banked
 20960  003712  19C7               	xorwf	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 20961  003714  E105               	bnz	u13881
 20962  003716  0101               	movlb	1	; () banked
 20963  003718  5199               	movf	(_receivedRemoteAddress+3)& (0+255),w,b
 20964  00371A  0100               	movlb	0	; () banked
 20965  00371C  19C8               	xorwf	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 20966  00371E  A4D8               	btfss	status,2,c
 20967  003720                     u13881:
 20968  003720  D169               	goto	l9172
 20969                           
 20970                           ; BSR set to: 0
 20971  003722  0E06               	movlw	6
 20972  003724  25FE               	addwf	_currentTCB& (0+255),w,b
 20973  003726  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 20974  003728  0E00               	movlw	0
 20975  00372A  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 20976  00372C  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 20977  00372E  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 20978  003732  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 20979  003736  0E00               	movlw	low (__smallconst shr (0+16))
 20980  003738  6EF8               	movwf	tblptru,c
 20981  00373A  0E0F               	movlw	(high __ramtop+-1)
 20982  00373C  64F7               	cpfsgt	tblptrh,c
 20983  00373E  D007               	bra	u13897
 20984  003740  0009               	tblrd		*+
 20985  003742  CFF5 F0C5          	movff	tablat,??_TCP_FiniteStateMachine+2
 20986  003746  0009               	tblrd		*+
 20987  003748  CFF5 F0C6          	movff	tablat,??_TCP_FiniteStateMachine+3
 20988  00374C  D008               	bra	u13890
 20989  00374E                     u13897:
 20990  00374E  CFF6 FFE9          	movff	tblptrl,fsr0l
 20991  003752  CFF7 FFEA          	movff	tblptrh,fsr0h
 20992  003756  CFEE F0C5          	movff	postinc0,??_TCP_FiniteStateMachine+2
 20993  00375A  CFEE F0C6          	movff	postinc0,??_TCP_FiniteStateMachine+3
 20994  00375E                     u13890:
 20995  00375E  0101               	movlb	1	; () banked
 20996  003760  51BC               	movf	_tcpHeader& (0+255),w,b
 20997  003762  0100               	movlb	0	; () banked
 20998  003764  19C5               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 20999  003766  E105               	bnz	u13901
 21000  003768  0101               	movlb	1	; () banked
 21001  00376A  51BD               	movf	(_tcpHeader+1)& (0+255),w,b
 21002  00376C  0100               	movlb	0	; () banked
 21003  00376E  19C6               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 21004  003770  D13E               	goto	L16
 21005  003772                     u13901:
 21006  003772  D140               	goto	l9172
 21007  003774                     l9132:
 21008                           
 21009                           ; BSR set to: 0
 21010                           ;tcpv4.c: 1117: if (currentTCB->timeoutsCount)
 21011  003774  0E34               	movlw	52
 21012  003776  25FE               	addwf	_currentTCB& (0+255),w,b
 21013  003778  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 21014  00377A  0E00               	movlw	0
 21015  00377C  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 21016  00377E  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 21017  003780  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 21018  003784  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 21019  003788  0E00               	movlw	low (__smallconst shr (0+16))
 21020  00378A  6EF8               	movwf	tblptru,c
 21021  00378C  0E0F               	movlw	(high __ramtop+-1)
 21022  00378E  64F7               	cpfsgt	tblptrh,c
 21023  003790  D003               	bra	u13917
 21024  003792  0008               	tblrd		*
 21025  003794  50F5               	movf	tablat,w,c
 21026  003796  D005               	bra	u13910
 21027  003798                     u13917:
 21028  003798  CFF6 FFE9          	movff	tblptrl,fsr0l
 21029  00379C  CFF7 FFEA          	movff	tblptrh,fsr0h
 21030  0037A0  50EF               	movf	indf0,w,c
 21031  0037A2                     u13910:
 21032  0037A2  0900               	iorlw	0
 21033  0037A4  E002 EF52  F013    	bnz	l8978
 21034                           
 21035                           ;tcpv4.c: 1121: {
 21036                           ;tcpv4.c: 1123: currentTCB->flags = 0x04U;
 21037  0037AA  0E35               	movlw	53
 21038  0037AC  0100               	movlb	0	; () banked
 21039  0037AE  25FE               	addwf	_currentTCB& (0+255),w,b
 21040  0037B0  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 21041  0037B2  0E00               	movlw	0
 21042  0037B4  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 21043  0037B6  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 21044  0037B8  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 21045  0037BC  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 21046  0037C0  0E00               	movlw	low (__smallconst shr (0+16))
 21047  0037C2  6EF8               	movwf	tblptru,c
 21048  0037C4  0E0F               	movlw	(high __ramtop+-1)
 21049  0037C6  64F7               	cpfsgt	tblptrh,c
 21050  0037C8  D004               	bra	u13937
 21051  0037CA  0E04               	movlw	4
 21052  0037CC  6EF5               	movwf	tablat,c
 21053  0037CE  000C               	tblwt		*
 21054  0037D0  D006               	bra	u13930
 21055  0037D2                     u13937:
 21056  0037D2  CFF6 FFE9          	movff	tblptrl,fsr0l
 21057  0037D6  CFF7 FFEA          	movff	tblptrh,fsr0h
 21058  0037DA  0E04               	movlw	4
 21059  0037DC  6EEF               	movwf	indf0,c
 21060  0037DE                     u13930:
 21061                           
 21062                           ;tcpv4.c: 1124: if(TCP_Snd(currentTCB))
 21063  0037DE  C0FE  F058         	movff	_currentTCB,TCP_Snd@tcbPtr
 21064  0037E2  C0FF  F059         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 21065  0037E6  EC31  F01D         	call	_TCP_Snd	;wreg free
 21066  0037EA  EF92  F00D         	goto	L10
 21067  0037EE                     l9146:
 21068  0037EE  0100               	movlb	0	; () banked
 21069  0037F0  51D2               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 21070                           
 21071                           ; Switch size 1, requested type "speed"
 21072                           ; Number of cases is 3, Range of values is 4 to 12
 21073                           ; switch strategies available:
 21074                           ; Name         Instructions Cycles
 21075                           ; simple_byte           10     6 (average)
 21076                           ;	Chosen strategy is simple_byte
 21077  0037F2  0A04               	xorlw	4	; case 4
 21078  0037F4  E101 D758          	bz	l9124
 21079  0037F8  0A03               	xorlw	3	; case 7
 21080  0037FA  E101 D755          	bz	l9124
 21081  0037FE  0A0B               	xorlw	11	; case 12
 21082  003800  E0B9               	bz	l9132
 21083  003802  D0F8               	goto	l9172
 21084  003804                     l9150:
 21085                           
 21086                           ; BSR set to: 0
 21087                           ;tcpv4.c: 1143: ;
 21088                           ;tcpv4.c: 1145: currentTCB->timeout = ((unsigned long)1*2);
 21089  003804  0E30               	movlw	48
 21090  003806  25FE               	addwf	_currentTCB& (0+255),w,b
 21091  003808  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 21092  00380A  0E00               	movlw	0
 21093  00380C  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 21094  00380E  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 21095  003810  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 21096  003814  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 21097  003818  0E00               	movlw	low (__smallconst shr (0+16))
 21098  00381A  6EF8               	movwf	tblptru,c
 21099  00381C  0E0F               	movlw	(high __ramtop+-1)
 21100  00381E  64F7               	cpfsgt	tblptrh,c
 21101  003820  D006               	bra	u13957
 21102  003822  0E02               	movlw	2
 21103  003824  6EF5               	movwf	tablat,c
 21104  003826  000D               	tblwt		*+
 21105  003828  6AF5               	clrf	tablat,c
 21106  00382A  000C               	tblwt		*
 21107  00382C  D007               	bra	u13950
 21108  00382E                     u13957:
 21109  00382E  CFF6 FFE9          	movff	tblptrl,fsr0l
 21110  003832  CFF7 FFEA          	movff	tblptrh,fsr0h
 21111  003836  0E02               	movlw	2
 21112  003838  6EEE               	movwf	postinc0,c
 21113  00383A  6AEF               	clrf	indf0,c
 21114  00383C                     u13950:
 21115                           
 21116                           ;tcpv4.c: 1146: currentTCB->timeoutReloadValue = ((unsigned long)1*2);
 21117  00383C  0E32               	movlw	50
 21118  00383E  0100               	movlb	0	; () banked
 21119  003840  25FE               	addwf	_currentTCB& (0+255),w,b
 21120  003842  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 21121  003844  0E00               	movlw	0
 21122  003846  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 21123  003848  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 21124  00384A  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 21125  00384E  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 21126  003852  0E00               	movlw	low (__smallconst shr (0+16))
 21127  003854  6EF8               	movwf	tblptru,c
 21128  003856  0E0F               	movlw	(high __ramtop+-1)
 21129  003858  64F7               	cpfsgt	tblptrh,c
 21130  00385A  D006               	bra	u13967
 21131  00385C  0E02               	movlw	2
 21132  00385E  6EF5               	movwf	tablat,c
 21133  003860  000D               	tblwt		*+
 21134  003862  6AF5               	clrf	tablat,c
 21135  003864  000C               	tblwt		*
 21136  003866  D007               	bra	u13960
 21137  003868                     u13967:
 21138  003868  CFF6 FFE9          	movff	tblptrl,fsr0l
 21139  00386C  CFF7 FFEA          	movff	tblptrh,fsr0h
 21140  003870  0E02               	movlw	2
 21141  003872  6EEE               	movwf	postinc0,c
 21142  003874  6AEF               	clrf	indf0,c
 21143  003876                     u13960:
 21144                           
 21145                           ;tcpv4.c: 1147: currentTCB->timeoutsCount = (3u);
 21146  003876  0E34               	movlw	52
 21147  003878  0100               	movlb	0	; () banked
 21148  00387A  25FE               	addwf	_currentTCB& (0+255),w,b
 21149  00387C  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 21150  00387E  0E00               	movlw	0
 21151  003880  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 21152  003882  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 21153  003884  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 21154  003888  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 21155  00388C  0E00               	movlw	low (__smallconst shr (0+16))
 21156  00388E  6EF8               	movwf	tblptru,c
 21157  003890  0E0F               	movlw	(high __ramtop+-1)
 21158  003892  64F7               	cpfsgt	tblptrh,c
 21159  003894  D004               	bra	u13977
 21160  003896  0E03               	movlw	3
 21161  003898  6EF5               	movwf	tablat,c
 21162  00389A  000C               	tblwt		*
 21163  00389C  D006               	bra	u13970
 21164  00389E                     u13977:
 21165  00389E  CFF6 FFE9          	movff	tblptrl,fsr0l
 21166  0038A2  CFF7 FFEA          	movff	tblptrh,fsr0h
 21167  0038A6  0E03               	movlw	3
 21168  0038A8  6EEF               	movwf	indf0,c
 21169  0038AA                     u13970:
 21170                           
 21171                           ;tcpv4.c: 1148: currentTCB->flags = 0x02U;
 21172  0038AA  0E35               	movlw	53
 21173  0038AC  0100               	movlb	0	; () banked
 21174  0038AE  25FE               	addwf	_currentTCB& (0+255),w,b
 21175  0038B0  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 21176  0038B2  0E00               	movlw	0
 21177  0038B4  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 21178  0038B6  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 21179  0038B8  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 21180  0038BC  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 21181  0038C0  0E00               	movlw	low (__smallconst shr (0+16))
 21182  0038C2  6EF8               	movwf	tblptru,c
 21183  0038C4  0E0F               	movlw	(high __ramtop+-1)
 21184  0038C6  64F7               	cpfsgt	tblptrh,c
 21185  0038C8  D004               	bra	u13987
 21186  0038CA  0E02               	movlw	2
 21187  0038CC  6EF5               	movwf	tablat,c
 21188  0038CE  000C               	tblwt		*
 21189  0038D0  D006               	bra	u13980
 21190  0038D2                     u13987:
 21191  0038D2  CFF6 FFE9          	movff	tblptrl,fsr0l
 21192  0038D6  CFF7 FFEA          	movff	tblptrh,fsr0h
 21193  0038DA  0E02               	movlw	2
 21194  0038DC  6EEF               	movwf	indf0,c
 21195  0038DE                     u13980:
 21196                           
 21197                           ;tcpv4.c: 1149: TCP_Snd(currentTCB);
 21198  0038DE  C0FE  F058         	movff	_currentTCB,TCP_Snd@tcbPtr
 21199  0038E2  C0FF  F059         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 21200  0038E6  EC31  F01D         	call	_TCP_Snd	;wreg free
 21201                           
 21202                           ; BSR set to: 0
 21203                           ;tcpv4.c: 1150: nextState = SYN_SENT;
 21204  0038EA  0E02               	movlw	2
 21205  0038EC  6FD3               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 21206                           
 21207                           ; BSR set to: 0
 21208                           ;tcpv4.c: 1151: ret = 1;
 21209  0038EE  0E01               	movlw	1
 21210  0038F0  6FCF               	movwf	TCP_FiniteStateMachine@ret& (0+255),b
 21211                           
 21212                           ;tcpv4.c: 1152: break;
 21213  0038F2  D080               	goto	l9172
 21214  0038F4                     l9158:
 21215                           
 21216                           ; BSR set to: 0
 21217                           ;tcpv4.c: 1154: ;
 21218                           ;tcpv4.c: 1155: currentTCB->destIP = 0;
 21219  0038F4  0E02               	movlw	2
 21220  0038F6  25FE               	addwf	_currentTCB& (0+255),w,b
 21221  0038F8  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 21222  0038FA  0E00               	movlw	0
 21223  0038FC  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 21224  0038FE  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 21225  003900  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 21226  003904  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 21227  003908  0E00               	movlw	low (__smallconst shr (0+16))
 21228  00390A  6EF8               	movwf	tblptru,c
 21229  00390C  0E0F               	movlw	(high __ramtop+-1)
 21230  00390E  64F7               	cpfsgt	tblptrh,c
 21231  003910  D009               	bra	u13997
 21232  003912  6AF5               	clrf	tablat,c
 21233  003914  000D               	tblwt		*+
 21234  003916  6AF5               	clrf	tablat,c
 21235  003918  000D               	tblwt		*+
 21236  00391A  6AF5               	clrf	tablat,c
 21237  00391C  000D               	tblwt		*+
 21238  00391E  6AF5               	clrf	tablat,c
 21239  003920  000C               	tblwt		*
 21240  003922  D008               	bra	u13990
 21241  003924                     u13997:
 21242  003924  CFF6 FFE9          	movff	tblptrl,fsr0l
 21243  003928  CFF7 FFEA          	movff	tblptrh,fsr0h
 21244  00392C  6AEE               	clrf	postinc0,c
 21245  00392E  6AEE               	clrf	postinc0,c
 21246  003930  6AEE               	clrf	postinc0,c
 21247  003932  6AEF               	clrf	indf0,c
 21248  003934                     u13990:
 21249                           
 21250                           ;tcpv4.c: 1156: currentTCB->destPort = 0;
 21251  003934  0E06               	movlw	6
 21252  003936  0100               	movlb	0	; () banked
 21253  003938  25FE               	addwf	_currentTCB& (0+255),w,b
 21254  00393A  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 21255  00393C  0E00               	movlw	0
 21256  00393E  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 21257  003940  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 21258  003942  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 21259  003946  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 21260  00394A  0E00               	movlw	low (__smallconst shr (0+16))
 21261  00394C  6EF8               	movwf	tblptru,c
 21262  00394E  0E0F               	movlw	(high __ramtop+-1)
 21263  003950  64F7               	cpfsgt	tblptrh,c
 21264  003952  D005               	bra	u14007
 21265  003954  6AF5               	clrf	tablat,c
 21266  003956  000D               	tblwt		*+
 21267  003958  6AF5               	clrf	tablat,c
 21268  00395A  000C               	tblwt		*
 21269  00395C  D006               	bra	u14000
 21270  00395E                     u14007:
 21271  00395E  CFF6 FFE9          	movff	tblptrl,fsr0l
 21272  003962  CFF7 FFEA          	movff	tblptrh,fsr0h
 21273  003966  6AEE               	clrf	postinc0,c
 21274  003968  6AEF               	clrf	indf0,c
 21275  00396A                     u14000:
 21276                           
 21277                           ;tcpv4.c: 1157: nextState = LISTEN;
 21278  00396A  0E01               	movlw	1
 21279  00396C  0100               	movlb	0	; () banked
 21280  00396E  D7BE               	goto	L17
 21281  003970                     l9166:
 21282  003970  0100               	movlb	0	; () banked
 21283  003972  51D2               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 21284                           
 21285                           ; Switch size 1, requested type "speed"
 21286                           ; Number of cases is 2, Range of values is 1 to 2
 21287                           ; switch strategies available:
 21288                           ; Name         Instructions Cycles
 21289                           ; simple_byte            7     4 (average)
 21290                           ;	Chosen strategy is simple_byte
 21291  003974  0A01               	xorlw	1	; case 1
 21292  003976  E101 D745          	bz	l9150
 21293  00397A  0A03               	xorlw	3	; case 2
 21294  00397C  E0BB               	bz	l9158
 21295  00397E  D03A               	goto	l9172
 21296  003980                     l9170:
 21297                           
 21298                           ; BSR set to: 0
 21299  003980  0E2A               	movlw	42
 21300  003982  25FE               	addwf	_currentTCB& (0+255),w,b
 21301  003984  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 21302  003986  0E00               	movlw	0
 21303  003988  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 21304  00398A  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 21305  00398C  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 21306  003990  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 21307  003994  0E00               	movlw	low (__smallconst shr (0+16))
 21308  003996  6EF8               	movwf	tblptru,c
 21309  003998  0E0F               	movlw	(high __ramtop+-1)
 21310  00399A  64F7               	cpfsgt	tblptrh,c
 21311  00399C  D003               	bra	u14017
 21312  00399E  0008               	tblrd		*
 21313  0039A0  50F5               	movf	tablat,w,c
 21314  0039A2  D005               	bra	u14010
 21315  0039A4                     u14017:
 21316  0039A4  CFF6 FFE9          	movff	tblptrl,fsr0l
 21317  0039A8  CFF7 FFEA          	movff	tblptrh,fsr0h
 21318  0039AC  50EF               	movf	indf0,w,c
 21319  0039AE                     u14010:
 21320                           
 21321                           ; Switch size 1, requested type "speed"
 21322                           ; Number of cases is 11, Range of values is 0 to 10
 21323                           ; switch strategies available:
 21324                           ; Name         Instructions Cycles
 21325                           ; simple_byte           34    18 (average)
 21326                           ;	Chosen strategy is simple_byte
 21327  0039AE  0A00               	xorlw	0	; case 0
 21328  0039B0  E0DF               	bz	l9166
 21329  0039B2  0A01               	xorlw	1	; case 1
 21330  0039B4  E102 EF6B  F00A    	bz	l8854
 21331  0039BA  0A03               	xorlw	3	; case 2
 21332  0039BC  E102 EF1E  F010    	bz	l8946
 21333  0039C2  0A01               	xorlw	1	; case 3
 21334  0039C4  E102 EFE9  F015    	bz	l9002
 21335  0039CA  0A07               	xorlw	7	; case 4
 21336  0039CC  E101 D536          	bz	l9064
 21337  0039D0  0A01               	xorlw	1	; case 5
 21338  0039D2  E101 D60B          	bz	l9096
 21339  0039D6  0A03               	xorlw	3	; case 6
 21340  0039D8  E101 D659          	bz	l9116
 21341  0039DC  0A01               	xorlw	1	; case 7
 21342  0039DE  E00A               	bz	l9172
 21343  0039E0  0A0F               	xorlw	15	; case 8
 21344  0039E2  E101 D65B          	bz	l9122
 21345  0039E6  0A01               	xorlw	1	; case 9
 21346  0039E8  E101 D701          	bz	l9146
 21347  0039EC  0A03               	xorlw	3	; case 10
 21348  0039EE                     L16:
 21349  0039EE  E102 EF61  F00A    	bz	l1293
 21350  0039F4                     l9172:
 21351                           
 21352                           ;tcpv4.c: 1167: currentTCB->connectionEvent = NOP;
 21353  0039F4  0E2B               	movlw	43
 21354  0039F6  0100               	movlb	0	; () banked
 21355  0039F8  25FE               	addwf	_currentTCB& (0+255),w,b
 21356  0039FA  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 21357  0039FC  0E00               	movlw	0
 21358  0039FE  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 21359  003A00  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 21360  003A02  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 21361  003A06  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 21362  003A0A  0E00               	movlw	low (__smallconst shr (0+16))
 21363  003A0C  6EF8               	movwf	tblptru,c
 21364  003A0E  0E0F               	movlw	(high __ramtop+-1)
 21365  003A10  64F7               	cpfsgt	tblptrh,c
 21366  003A12  D004               	bra	u14027
 21367  003A14  0E0D               	movlw	13
 21368  003A16  6EF5               	movwf	tablat,c
 21369  003A18  000C               	tblwt		*
 21370  003A1A  D006               	bra	u14020
 21371  003A1C                     u14027:
 21372  003A1C  CFF6 FFE9          	movff	tblptrl,fsr0l
 21373  003A20  CFF7 FFEA          	movff	tblptrh,fsr0h
 21374  003A24  0E0D               	movlw	13
 21375  003A26  6EEF               	movwf	indf0,c
 21376  003A28                     u14020:
 21377                           
 21378                           ;tcpv4.c: 1168: currentTCB->fsmState = nextState;
 21379  003A28  0E2A               	movlw	42
 21380  003A2A  0100               	movlb	0	; () banked
 21381  003A2C  25FE               	addwf	_currentTCB& (0+255),w,b
 21382  003A2E  6FC3               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 21383  003A30  0E00               	movlw	0
 21384  003A32  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 21385  003A34  6FC4               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 21386  003A36  C0C3  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 21387  003A3A  C0C4  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 21388  003A3E  0E00               	movlw	low (__smallconst shr (0+16))
 21389  003A40  6EF8               	movwf	tblptru,c
 21390  003A42  0E0F               	movlw	(high __ramtop+-1)
 21391  003A44  64F7               	cpfsgt	tblptrh,c
 21392  003A46  D004               	bra	u14037
 21393  003A48  C0D3  FFF5         	movff	TCP_FiniteStateMachine@nextState,tablat
 21394  003A4C  000C               	tblwt		*
 21395  003A4E  D006               	bra	u14030
 21396  003A50                     u14037:
 21397  003A50  CFF6 FFE9          	movff	tblptrl,fsr0l
 21398  003A54  CFF7 FFEA          	movff	tblptrh,fsr0h
 21399  003A58  C0D3  FFEF         	movff	TCP_FiniteStateMachine@nextState,indf0
 21400  003A5C                     u14030:
 21401                           
 21402                           ;tcpv4.c: 1169: return ret;
 21403  003A5C  0100               	movlb	0	; () banked
 21404  003A5E  51CF               	movf	TCP_FiniteStateMachine@ret& (0+255),w,b
 21405                           
 21406                           ; BSR set to: 0
 21407  003A60  0012               	return		;funcret
 21408  003A62                     __end_of_TCP_FiniteStateMachine:
 21409                           	opt stack 0
 21410                           tosu	equ	0xFFF
 21411                           tosh	equ	0xFFE
 21412                           tosl	equ	0xFFD
 21413                           pclath	equ	0xFFA
 21414                           tblptru	equ	0xFF8
 21415                           tblptrh	equ	0xFF7
 21416                           tblptrl	equ	0xFF6
 21417                           tablat	equ	0xFF5
 21418                           prodh	equ	0xFF4
 21419                           prodl	equ	0xFF3
 21420                           intcon	equ	0xFF2
 21421                           intcon2	equ	0xFF1
 21422                           indf0	equ	0xFEF
 21423                           postinc0	equ	0xFEE
 21424                           fsr0h	equ	0xFEA
 21425                           fsr0l	equ	0xFE9
 21426                           wreg	equ	0xFE8
 21427                           postinc1	equ	0xFE6
 21428                           postdec1	equ	0xFE5
 21429                           plusw1	equ	0xFE3
 21430                           fsr1h	equ	0xFE2
 21431                           fsr1l	equ	0xFE1
 21432                           indf2	equ	0xFDF
 21433                           postinc2	equ	0xFDE
 21434                           postdec2	equ	0xFDD
 21435                           plusw2	equ	0xFDB
 21436                           fsr2h	equ	0xFDA
 21437                           fsr2l	equ	0xFD9
 21438                           status	equ	0xFD8
 21439                           
 21440 ;; *************** function _TCP_PayloadSave *****************
 21441 ;; Defined at:
 21442 ;;		line 310 in file "../../TCPIP Library/source/tcpv4.c"
 21443 ;; Parameters:    Size  Location     Type
 21444 ;;  len             2   89[COMRAM] unsigned int 
 21445 ;; Auto vars:     Size  Location     Type
 21446 ;;  buffer_size     2   97[BANK0 ] unsigned int 
 21447 ;;  ret             1    0        unsigned char 
 21448 ;; Return value:  Size  Location     Type
 21449 ;;                  1    wreg      unsigned char 
 21450 ;; Registers used:
 21451 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21452 ;; Tracked objects:
 21453 ;;		On entry : 0/1
 21454 ;;		On exit  : 0/0
 21455 ;;		Unchanged: 0/0
 21456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21457 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21458 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21459 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21460 ;;      Totals:         2      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21461 ;;Total ram usage:       17 bytes
 21462 ;; Hardware stack levels used:    1
 21463 ;; Hardware stack levels required when called:   10
 21464 ;; This function calls:
 21465 ;;		_ETH_ReadBlock
 21466 ;;		_TCP_Snd
 21467 ;; This function is called by:
 21468 ;;		_TCP_FiniteStateMachine
 21469 ;; This function uses a non-reentrant model
 21470 ;;
 21471                           
 21472                           	psect	text86
 21473  005CBC                     __ptext86:
 21474                           	opt stack 0
 21475  005CBC                     _TCP_PayloadSave:
 21476                           	opt stack 17
 21477                           
 21478                           ;tcpv4.c: 313: uint16_t buffer_size;
 21479                           ;tcpv4.c: 316: if (currentTCB->rxBufState == RX_BUFF_IN_USE)
 21480                           
 21481                           ; BSR set to: 0
 21482                           ;incstack = 0
 21483  005CBC  0E22               	movlw	34
 21484  005CBE  0100               	movlb	0	; () banked
 21485  005CC0  25FE               	addwf	_currentTCB& (0+255),w,b
 21486  005CC2  6FB4               	movwf	??_TCP_PayloadSave& (0+255),b
 21487  005CC4  0E00               	movlw	0
 21488  005CC6  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 21489  005CC8  6FB5               	movwf	(??_TCP_PayloadSave+1)& (0+255),b
 21490  005CCA  C0B4  FFF6         	movff	??_TCP_PayloadSave,tblptrl
 21491  005CCE  C0B5  FFF7         	movff	??_TCP_PayloadSave+1,tblptrh
 21492  005CD2  0E00               	movlw	low (__smallconst shr (0+16))
 21493  005CD4  6EF8               	movwf	tblptru,c
 21494  005CD6  0E0F               	movlw	(high __ramtop+-1)
 21495  005CD8  64F7               	cpfsgt	tblptrh,c
 21496  005CDA  D003               	bra	u11867
 21497  005CDC  0008               	tblrd		*
 21498  005CDE  50F5               	movf	tablat,w,c
 21499  005CE0  D005               	bra	u11860
 21500  005CE2                     u11867:
 21501  005CE2  CFF6 FFE9          	movff	tblptrl,fsr0l
 21502  005CE6  CFF7 FFEA          	movff	tblptrh,fsr0h
 21503  005CEA  50EF               	movf	indf0,w,c
 21504  005CEC                     u11860:
 21505  005CEC  06E8               	decf	wreg,f,c
 21506  005CEE  A4D8               	btfss	status,2,c
 21507  005CF0  0012               	return	
 21508                           
 21509                           ;tcpv4.c: 317: {
 21510                           ;tcpv4.c: 319: if (currentTCB->localWnd >= len)
 21511  005CF2  0E1A               	movlw	26
 21512  005CF4  0100               	movlb	0	; () banked
 21513  005CF6  25FE               	addwf	_currentTCB& (0+255),w,b
 21514  005CF8  6FB4               	movwf	??_TCP_PayloadSave& (0+255),b
 21515  005CFA  0E00               	movlw	0
 21516  005CFC  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 21517  005CFE  6FB5               	movwf	(??_TCP_PayloadSave+1)& (0+255),b
 21518  005D00  C0B4  FFF6         	movff	??_TCP_PayloadSave,tblptrl
 21519  005D04  C0B5  FFF7         	movff	??_TCP_PayloadSave+1,tblptrh
 21520  005D08  0E00               	movlw	low (__smallconst shr (0+16))
 21521  005D0A  6EF8               	movwf	tblptru,c
 21522  005D0C  0E0F               	movlw	(high __ramtop+-1)
 21523  005D0E  64F7               	cpfsgt	tblptrh,c
 21524  005D10  D007               	bra	u11887
 21525  005D12  0009               	tblrd		*+
 21526  005D14  CFF5 F0B6          	movff	tablat,??_TCP_PayloadSave+2
 21527  005D18  0009               	tblrd		*+
 21528  005D1A  CFF5 F0B7          	movff	tablat,??_TCP_PayloadSave+3
 21529  005D1E  D008               	bra	u11880
 21530  005D20                     u11887:
 21531  005D20  CFF6 FFE9          	movff	tblptrl,fsr0l
 21532  005D24  CFF7 FFEA          	movff	tblptrh,fsr0h
 21533  005D28  CFEE F0B6          	movff	postinc0,??_TCP_PayloadSave+2
 21534  005D2C  CFEE F0B7          	movff	postinc0,??_TCP_PayloadSave+3
 21535  005D30                     u11880:
 21536  005D30  505A               	movf	TCP_PayloadSave@len,w,c
 21537  005D32  0100               	movlb	0	; () banked
 21538  005D34  5DB6               	subwf	(??_TCP_PayloadSave+2)& (0+255),w,b
 21539  005D36  505B               	movf	TCP_PayloadSave@len+1,w,c
 21540  005D38  59B7               	subwfb	(??_TCP_PayloadSave+3)& (0+255),w,b
 21541  005D3A  E305               	bnc	l8620
 21542                           
 21543                           ; BSR set to: 0
 21544                           ;tcpv4.c: 320: {
 21545                           ;tcpv4.c: 321: buffer_size = len;
 21546  005D3C  C05A  F0C1         	movff	TCP_PayloadSave@len,TCP_PayloadSave@buffer_size
 21547  005D40  C05B  F0C2         	movff	TCP_PayloadSave@len+1,TCP_PayloadSave@buffer_size+1
 21548                           
 21549                           ;tcpv4.c: 322: }else
 21550  005D44  D01E               	goto	l8622
 21551  005D46                     l8620:
 21552                           
 21553                           ; BSR set to: 0
 21554                           ;tcpv4.c: 323: {
 21555                           ;tcpv4.c: 324: buffer_size = currentTCB->localWnd;
 21556  005D46  0E1A               	movlw	26
 21557  005D48  25FE               	addwf	_currentTCB& (0+255),w,b
 21558  005D4A  6FB4               	movwf	??_TCP_PayloadSave& (0+255),b
 21559  005D4C  0E00               	movlw	0
 21560  005D4E  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 21561  005D50  6FB5               	movwf	(??_TCP_PayloadSave+1)& (0+255),b
 21562  005D52  C0B4  FFF6         	movff	??_TCP_PayloadSave,tblptrl
 21563  005D56  C0B5  FFF7         	movff	??_TCP_PayloadSave+1,tblptrh
 21564  005D5A  0E00               	movlw	low (__smallconst shr (0+16))
 21565  005D5C  6EF8               	movwf	tblptru,c
 21566  005D5E  0E0F               	movlw	(high __ramtop+-1)
 21567  005D60  64F7               	cpfsgt	tblptrh,c
 21568  005D62  D007               	bra	u11907
 21569  005D64  0009               	tblrd		*+
 21570  005D66  CFF5 F0C1          	movff	tablat,TCP_PayloadSave@buffer_size
 21571  005D6A  0009               	tblrd		*+
 21572  005D6C  CFF5 F0C2          	movff	tablat,TCP_PayloadSave@buffer_size+1
 21573  005D70  D008               	bra	u11900
 21574  005D72                     u11907:
 21575  005D72  CFF6 FFE9          	movff	tblptrl,fsr0l
 21576  005D76  CFF7 FFEA          	movff	tblptrh,fsr0h
 21577  005D7A  CFEE F0C1          	movff	postinc0,TCP_PayloadSave@buffer_size
 21578  005D7E  CFEE F0C2          	movff	postinc0,TCP_PayloadSave@buffer_size+1
 21579  005D82                     u11900:
 21580  005D82                     l8622:
 21581                           
 21582                           ;tcpv4.c: 325: }
 21583                           ;tcpv4.c: 327: ETH_ReadBlock(currentTCB->rxBufferPtr, buffer_size);
 21584  005D82  0E20               	movlw	32
 21585  005D84  0100               	movlb	0	; () banked
 21586  005D86  25FE               	addwf	_currentTCB& (0+255),w,b
 21587  005D88  6FB4               	movwf	??_TCP_PayloadSave& (0+255),b
 21588  005D8A  0E00               	movlw	0
 21589  005D8C  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 21590  005D8E  6FB5               	movwf	(??_TCP_PayloadSave+1)& (0+255),b
 21591  005D90  C0B4  FFF6         	movff	??_TCP_PayloadSave,tblptrl
 21592  005D94  C0B5  FFF7         	movff	??_TCP_PayloadSave+1,tblptrh
 21593  005D98  0E00               	movlw	low (__smallconst shr (0+16))
 21594  005D9A  6EF8               	movwf	tblptru,c
 21595  005D9C  0E0F               	movlw	(high __ramtop+-1)
 21596  005D9E  64F7               	cpfsgt	tblptrh,c
 21597  005DA0  D007               	bra	u11917
 21598  005DA2  0009               	tblrd		*+
 21599  005DA4  CFF5 F003          	movff	tablat,ETH_ReadBlock@data
 21600  005DA8  0009               	tblrd		*+
 21601  005DAA  CFF5 F004          	movff	tablat,ETH_ReadBlock@data+1
 21602  005DAE  D008               	bra	u11910
 21603  005DB0                     u11917:
 21604  005DB0  CFF6 FFE9          	movff	tblptrl,fsr0l
 21605  005DB4  CFF7 FFEA          	movff	tblptrh,fsr0h
 21606  005DB8  CFEE F003          	movff	postinc0,ETH_ReadBlock@data
 21607  005DBC  CFEE F004          	movff	postinc0,ETH_ReadBlock@data+1
 21608  005DC0                     u11910:
 21609  005DC0  C0C1  F005         	movff	TCP_PayloadSave@buffer_size,ETH_ReadBlock@length
 21610  005DC4  C0C2  F006         	movff	TCP_PayloadSave@buffer_size+1,ETH_ReadBlock@length+1
 21611  005DC8  EC24  F03D         	call	_ETH_ReadBlock	;wreg free
 21612                           
 21613                           ; BSR set to: 1
 21614                           ;tcpv4.c: 328: currentTCB->rxBufferPtr = currentTCB->rxBufferPtr + buffer_size;
 21615  005DCC  0E20               	movlw	32
 21616  005DCE  0100               	movlb	0	; () banked
 21617  005DD0  25FE               	addwf	_currentTCB& (0+255),w,b
 21618  005DD2  6FB4               	movwf	??_TCP_PayloadSave& (0+255),b
 21619  005DD4  0E00               	movlw	0
 21620  005DD6  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 21621  005DD8  6FB5               	movwf	(??_TCP_PayloadSave+1)& (0+255),b
 21622  005DDA  C0B4  FFF6         	movff	??_TCP_PayloadSave,tblptrl
 21623  005DDE  C0B5  FFF7         	movff	??_TCP_PayloadSave+1,tblptrh
 21624  005DE2  0E00               	movlw	low (__smallconst shr (0+16))
 21625  005DE4  6EF8               	movwf	tblptru,c
 21626  005DE6  0E0F               	movlw	(high __ramtop+-1)
 21627  005DE8  64F7               	cpfsgt	tblptrh,c
 21628  005DEA  D007               	bra	u11927
 21629  005DEC  0009               	tblrd		*+
 21630  005DEE  CFF5 F0B6          	movff	tablat,??_TCP_PayloadSave+2
 21631  005DF2  0009               	tblrd		*+
 21632  005DF4  CFF5 F0B7          	movff	tablat,??_TCP_PayloadSave+3
 21633  005DF8  D008               	bra	u11920
 21634  005DFA                     u11927:
 21635  005DFA  CFF6 FFE9          	movff	tblptrl,fsr0l
 21636  005DFE  CFF7 FFEA          	movff	tblptrh,fsr0h
 21637  005E02  CFEE F0B6          	movff	postinc0,??_TCP_PayloadSave+2
 21638  005E06  CFEE F0B7          	movff	postinc0,??_TCP_PayloadSave+3
 21639  005E0A                     u11920:
 21640  005E0A  0100               	movlb	0	; () banked
 21641  005E0C  51C1               	movf	TCP_PayloadSave@buffer_size& (0+255),w,b
 21642  005E0E  27B6               	addwf	(??_TCP_PayloadSave+2)& (0+255),f,b
 21643  005E10  51C2               	movf	(TCP_PayloadSave@buffer_size+1)& (0+255),w,b
 21644  005E12  23B7               	addwfc	(??_TCP_PayloadSave+3)& (0+255),f,b
 21645  005E14  0E20               	movlw	32
 21646  005E16  25FE               	addwf	_currentTCB& (0+255),w,b
 21647  005E18  6FB8               	movwf	(??_TCP_PayloadSave+4)& (0+255),b
 21648  005E1A  0E00               	movlw	0
 21649  005E1C  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 21650  005E1E  6FB9               	movwf	(??_TCP_PayloadSave+5)& (0+255),b
 21651  005E20  C0B8  FFF6         	movff	??_TCP_PayloadSave+4,tblptrl
 21652  005E24  C0B9  FFF7         	movff	??_TCP_PayloadSave+5,tblptrh
 21653  005E28  0E00               	movlw	low (__smallconst shr (0+16))
 21654  005E2A  6EF8               	movwf	tblptru,c
 21655  005E2C  0E0F               	movlw	(high __ramtop+-1)
 21656  005E2E  64F7               	cpfsgt	tblptrh,c
 21657  005E30  D007               	bra	u11937
 21658  005E32  C0B6  FFF5         	movff	??_TCP_PayloadSave+2,tablat
 21659  005E36  000D               	tblwt		*+
 21660  005E38  C0B7  FFF5         	movff	??_TCP_PayloadSave+3,tablat
 21661  005E3C  000C               	tblwt		*
 21662  005E3E  D008               	bra	u11930
 21663  005E40                     u11937:
 21664  005E40  CFF6 FFE9          	movff	tblptrl,fsr0l
 21665  005E44  CFF7 FFEA          	movff	tblptrh,fsr0h
 21666  005E48  C0B6  FFEE         	movff	??_TCP_PayloadSave+2,postinc0
 21667  005E4C  C0B7  FFEF         	movff	??_TCP_PayloadSave+3,indf0
 21668  005E50                     u11930:
 21669                           
 21670                           ;tcpv4.c: 331: currentTCB->localWnd = currentTCB->localWnd - buffer_size;
 21671  005E50  0E1A               	movlw	26
 21672  005E52  0100               	movlb	0	; () banked
 21673  005E54  25FE               	addwf	_currentTCB& (0+255),w,b
 21674  005E56  6FB4               	movwf	??_TCP_PayloadSave& (0+255),b
 21675  005E58  0E00               	movlw	0
 21676  005E5A  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 21677  005E5C  6FB5               	movwf	(??_TCP_PayloadSave+1)& (0+255),b
 21678  005E5E  C0B4  FFF6         	movff	??_TCP_PayloadSave,tblptrl
 21679  005E62  C0B5  FFF7         	movff	??_TCP_PayloadSave+1,tblptrh
 21680  005E66  0E00               	movlw	low (__smallconst shr (0+16))
 21681  005E68  6EF8               	movwf	tblptru,c
 21682  005E6A  0E0F               	movlw	(high __ramtop+-1)
 21683  005E6C  64F7               	cpfsgt	tblptrh,c
 21684  005E6E  D007               	bra	u11947
 21685  005E70  0009               	tblrd		*+
 21686  005E72  CFF5 F0B6          	movff	tablat,??_TCP_PayloadSave+2
 21687  005E76  0009               	tblrd		*+
 21688  005E78  CFF5 F0B7          	movff	tablat,??_TCP_PayloadSave+3
 21689  005E7C  D008               	bra	u11940
 21690  005E7E                     u11947:
 21691  005E7E  CFF6 FFE9          	movff	tblptrl,fsr0l
 21692  005E82  CFF7 FFEA          	movff	tblptrh,fsr0h
 21693  005E86  CFEE F0B6          	movff	postinc0,??_TCP_PayloadSave+2
 21694  005E8A  CFEE F0B7          	movff	postinc0,??_TCP_PayloadSave+3
 21695  005E8E                     u11940:
 21696  005E8E  0100               	movlb	0	; () banked
 21697  005E90  51C1               	movf	TCP_PayloadSave@buffer_size& (0+255),w,b
 21698  005E92  5FB6               	subwf	(??_TCP_PayloadSave+2)& (0+255),f,b
 21699  005E94  51C2               	movf	(TCP_PayloadSave@buffer_size+1)& (0+255),w,b
 21700  005E96  5BB7               	subwfb	(??_TCP_PayloadSave+3)& (0+255),f,b
 21701  005E98  0E1A               	movlw	26
 21702  005E9A  25FE               	addwf	_currentTCB& (0+255),w,b
 21703  005E9C  6FB8               	movwf	(??_TCP_PayloadSave+4)& (0+255),b
 21704  005E9E  0E00               	movlw	0
 21705  005EA0  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 21706  005EA2  6FB9               	movwf	(??_TCP_PayloadSave+5)& (0+255),b
 21707  005EA4  C0B8  FFF6         	movff	??_TCP_PayloadSave+4,tblptrl
 21708  005EA8  C0B9  FFF7         	movff	??_TCP_PayloadSave+5,tblptrh
 21709  005EAC  0E00               	movlw	low (__smallconst shr (0+16))
 21710  005EAE  6EF8               	movwf	tblptru,c
 21711  005EB0  0E0F               	movlw	(high __ramtop+-1)
 21712  005EB2  64F7               	cpfsgt	tblptrh,c
 21713  005EB4  D007               	bra	u11957
 21714  005EB6  C0B6  FFF5         	movff	??_TCP_PayloadSave+2,tablat
 21715  005EBA  000D               	tblwt		*+
 21716  005EBC  C0B7  FFF5         	movff	??_TCP_PayloadSave+3,tablat
 21717  005EC0  000C               	tblwt		*
 21718  005EC2  D008               	bra	u11950
 21719  005EC4                     u11957:
 21720  005EC4  CFF6 FFE9          	movff	tblptrl,fsr0l
 21721  005EC8  CFF7 FFEA          	movff	tblptrh,fsr0h
 21722  005ECC  C0B6  FFEE         	movff	??_TCP_PayloadSave+2,postinc0
 21723  005ED0  C0B7  FFEF         	movff	??_TCP_PayloadSave+3,indf0
 21724  005ED4                     u11950:
 21725                           
 21726                           ;tcpv4.c: 332: currentTCB->remoteAck = currentTCB->remoteSeqno + buffer_size;
 21727  005ED4  0E08               	movlw	8
 21728  005ED6  0100               	movlb	0	; () banked
 21729  005ED8  25FE               	addwf	_currentTCB& (0+255),w,b
 21730  005EDA  6FB4               	movwf	??_TCP_PayloadSave& (0+255),b
 21731  005EDC  0E00               	movlw	0
 21732  005EDE  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 21733  005EE0  6FB5               	movwf	(??_TCP_PayloadSave+1)& (0+255),b
 21734  005EE2  C0B4  FFF6         	movff	??_TCP_PayloadSave,tblptrl
 21735  005EE6  C0B5  FFF7         	movff	??_TCP_PayloadSave+1,tblptrh
 21736  005EEA  0E00               	movlw	low (__smallconst shr (0+16))
 21737  005EEC  6EF8               	movwf	tblptru,c
 21738  005EEE  0E0F               	movlw	(high __ramtop+-1)
 21739  005EF0  64F7               	cpfsgt	tblptrh,c
 21740  005EF2  D00D               	bra	u11967
 21741  005EF4  0009               	tblrd		*+
 21742  005EF6  CFF5 F0B6          	movff	tablat,??_TCP_PayloadSave+2
 21743  005EFA  0009               	tblrd		*+
 21744  005EFC  CFF5 F0B7          	movff	tablat,??_TCP_PayloadSave+3
 21745  005F00  0009               	tblrd		*+
 21746  005F02  CFF5 F0B8          	movff	tablat,??_TCP_PayloadSave+4
 21747  005F06  0009               	tblrd		*+
 21748  005F08  CFF5 F0B9          	movff	tablat,??_TCP_PayloadSave+5
 21749  005F0C  D00C               	bra	u11960
 21750  005F0E                     u11967:
 21751  005F0E  CFF6 FFE9          	movff	tblptrl,fsr0l
 21752  005F12  CFF7 FFEA          	movff	tblptrh,fsr0h
 21753  005F16  CFEE F0B6          	movff	postinc0,??_TCP_PayloadSave+2
 21754  005F1A  CFEE F0B7          	movff	postinc0,??_TCP_PayloadSave+3
 21755  005F1E  CFEE F0B8          	movff	postinc0,??_TCP_PayloadSave+4
 21756  005F22  CFEE F0B9          	movff	postinc0,??_TCP_PayloadSave+5
 21757  005F26                     u11960:
 21758  005F26  0100               	movlb	0	; () banked
 21759  005F28  51C1               	movf	TCP_PayloadSave@buffer_size& (0+255),w,b
 21760  005F2A  25B6               	addwf	(??_TCP_PayloadSave+2)& (0+255),w,b
 21761  005F2C  6FBA               	movwf	(??_TCP_PayloadSave+6)& (0+255),b
 21762  005F2E  51C2               	movf	(TCP_PayloadSave@buffer_size+1)& (0+255),w,b
 21763  005F30  21B7               	addwfc	(??_TCP_PayloadSave+3)& (0+255),w,b
 21764  005F32  6FBB               	movwf	(??_TCP_PayloadSave+7)& (0+255),b
 21765  005F34  0E00               	movlw	0
 21766  005F36  21B8               	addwfc	(??_TCP_PayloadSave+4)& (0+255),w,b
 21767  005F38  6FBC               	movwf	(??_TCP_PayloadSave+8)& (0+255),b
 21768  005F3A  0E00               	movlw	0
 21769  005F3C  21B9               	addwfc	(??_TCP_PayloadSave+5)& (0+255),w,b
 21770  005F3E  6FBD               	movwf	(??_TCP_PayloadSave+9)& (0+255),b
 21771  005F40  0E0C               	movlw	12
 21772  005F42  25FE               	addwf	_currentTCB& (0+255),w,b
 21773  005F44  6FBE               	movwf	(??_TCP_PayloadSave+10)& (0+255),b
 21774  005F46  0E00               	movlw	0
 21775  005F48  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 21776  005F4A  6FBF               	movwf	(??_TCP_PayloadSave+11)& (0+255),b
 21777  005F4C  C0BE  FFF6         	movff	??_TCP_PayloadSave+10,tblptrl
 21778  005F50  C0BF  FFF7         	movff	??_TCP_PayloadSave+11,tblptrh
 21779  005F54  0E00               	movlw	low (__smallconst shr (0+16))
 21780  005F56  6EF8               	movwf	tblptru,c
 21781  005F58  0E0F               	movlw	(high __ramtop+-1)
 21782  005F5A  64F7               	cpfsgt	tblptrh,c
 21783  005F5C  D00D               	bra	u11977
 21784  005F5E  C0BA  FFF5         	movff	??_TCP_PayloadSave+6,tablat
 21785  005F62  000D               	tblwt		*+
 21786  005F64  C0BB  FFF5         	movff	??_TCP_PayloadSave+7,tablat
 21787  005F68  000D               	tblwt		*+
 21788  005F6A  C0BC  FFF5         	movff	??_TCP_PayloadSave+8,tablat
 21789  005F6E  000D               	tblwt		*+
 21790  005F70  C0BD  FFF5         	movff	??_TCP_PayloadSave+9,tablat
 21791  005F74  000C               	tblwt		*
 21792  005F76  D00C               	bra	u11970
 21793  005F78                     u11977:
 21794  005F78  CFF6 FFE9          	movff	tblptrl,fsr0l
 21795  005F7C  CFF7 FFEA          	movff	tblptrh,fsr0h
 21796  005F80  C0BA  FFEE         	movff	??_TCP_PayloadSave+6,postinc0
 21797  005F84  C0BB  FFEE         	movff	??_TCP_PayloadSave+7,postinc0
 21798  005F88  C0BC  FFEE         	movff	??_TCP_PayloadSave+8,postinc0
 21799  005F8C  C0BD  FFEF         	movff	??_TCP_PayloadSave+9,indf0
 21800  005F90                     u11970:
 21801                           
 21802                           ;tcpv4.c: 335: currentTCB->flags = 0x10U;
 21803  005F90  0E35               	movlw	53
 21804  005F92  0100               	movlb	0	; () banked
 21805  005F94  25FE               	addwf	_currentTCB& (0+255),w,b
 21806  005F96  6FB4               	movwf	??_TCP_PayloadSave& (0+255),b
 21807  005F98  0E00               	movlw	0
 21808  005F9A  21FF               	addwfc	(_currentTCB+1)& (0+255),w,b
 21809  005F9C  6FB5               	movwf	(??_TCP_PayloadSave+1)& (0+255),b
 21810  005F9E  C0B4  FFF6         	movff	??_TCP_PayloadSave,tblptrl
 21811  005FA2  C0B5  FFF7         	movff	??_TCP_PayloadSave+1,tblptrh
 21812  005FA6  0E00               	movlw	low (__smallconst shr (0+16))
 21813  005FA8  6EF8               	movwf	tblptru,c
 21814  005FAA  0E0F               	movlw	(high __ramtop+-1)
 21815  005FAC  64F7               	cpfsgt	tblptrh,c
 21816  005FAE  D004               	bra	u11987
 21817  005FB0  0E10               	movlw	16
 21818  005FB2  6EF5               	movwf	tablat,c
 21819  005FB4  000C               	tblwt		*
 21820  005FB6  D006               	bra	u11980
 21821  005FB8                     u11987:
 21822  005FB8  CFF6 FFE9          	movff	tblptrl,fsr0l
 21823  005FBC  CFF7 FFEA          	movff	tblptrh,fsr0h
 21824  005FC0  0E10               	movlw	16
 21825  005FC2  6EEF               	movwf	indf0,c
 21826  005FC4                     u11980:
 21827                           
 21828                           ;tcpv4.c: 336: TCP_Snd(currentTCB);
 21829  005FC4  C0FE  F058         	movff	_currentTCB,TCP_Snd@tcbPtr
 21830  005FC8  C0FF  F059         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 21831  005FCC  EF31  F01D         	goto	_TCP_Snd	;wreg free
 21832  005FD0                     __end_of_TCP_PayloadSave:
 21833                           	opt stack 0
 21834                           tosu	equ	0xFFF
 21835                           tosh	equ	0xFFE
 21836                           tosl	equ	0xFFD
 21837                           pclath	equ	0xFFA
 21838                           tblptru	equ	0xFF8
 21839                           tblptrh	equ	0xFF7
 21840                           tblptrl	equ	0xFF6
 21841                           tablat	equ	0xFF5
 21842                           prodh	equ	0xFF4
 21843                           prodl	equ	0xFF3
 21844                           intcon	equ	0xFF2
 21845                           intcon2	equ	0xFF1
 21846                           indf0	equ	0xFEF
 21847                           postinc0	equ	0xFEE
 21848                           fsr0h	equ	0xFEA
 21849                           fsr0l	equ	0xFE9
 21850                           wreg	equ	0xFE8
 21851                           postinc1	equ	0xFE6
 21852                           postdec1	equ	0xFE5
 21853                           plusw1	equ	0xFE3
 21854                           fsr1h	equ	0xFE2
 21855                           fsr1l	equ	0xFE1
 21856                           indf2	equ	0xFDF
 21857                           postinc2	equ	0xFDE
 21858                           postdec2	equ	0xFDD
 21859                           plusw2	equ	0xFDB
 21860                           fsr2h	equ	0xFDA
 21861                           fsr2l	equ	0xFD9
 21862                           status	equ	0xFD8
 21863                           
 21864 ;; *************** function _TCP_Snd *****************
 21865 ;; Defined at:
 21866 ;;		line 200 in file "../../TCPIP Library/source/tcpv4.c"
 21867 ;; Parameters:    Size  Location     Type
 21868 ;;  tcbPtr          2   87[COMRAM] PTR struct .
 21869 ;;		 -> ?_sprintf(2), ?_printf(2), main@str(32), STR_7(13), 
 21870 ;;		 -> STR_6(17), DEMO_TCP_Client@txdataPort60(80), DEMO_TCP_Client@strTmp(17), DEMO_TCP_Client@rxdataPort60(50), 
 21871 ;;		 -> DEMO_TCP_Client@port60TCB(55), Network_Read@debug_str(80), NULL(0), 
 21872 ;; Auto vars:     Size  Location     Type
 21873 ;;  txHeader       20   64[BANK0 ] struct .
 21874 ;;  tcpDataLengt    2   62[BANK0 ] unsigned int 
 21875 ;;  payloadLengt    2   59[BANK0 ] unsigned int 
 21876 ;;  cksm            2   57[BANK0 ] unsigned int 
 21877 ;;  data            2   55[BANK0 ] PTR unsigned char 
 21878 ;;		 -> ?_sprintf(2), ?_printf(2), main@str(32), STR_7(13), 
 21879 ;;		 -> STR_6(17), DEMO_TCP_Client@txdataPort60(80), DEMO_TCP_Client@strTmp(17), DEMO_TCP_Client@rxdataPort60(50), 
 21880 ;;		 -> Network_Read@debug_str(80), NULL(0), 
 21881 ;;  ret             1   61[BANK0 ] unsigned char 
 21882 ;; Return value:  Size  Location     Type
 21883 ;;                  1    wreg      unsigned char 
 21884 ;; Registers used:
 21885 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21886 ;; Tracked objects:
 21887 ;;		On entry : 0/0
 21888 ;;		On exit  : F/0
 21889 ;;		Unchanged: 0/0
 21890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21891 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21892 ;;      Locals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21893 ;;      Temps:          0      48       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21894 ;;      Totals:         2      77       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21895 ;;Total ram usage:       79 bytes
 21896 ;; Hardware stack levels used:    1
 21897 ;; Hardware stack levels required when called:    9
 21898 ;; This function calls:
 21899 ;;		_ETH_Insert
 21900 ;;		_ETH_TxComputeChecksum
 21901 ;;		_ETH_WriteBlock
 21902 ;;		_IPV4_Send
 21903 ;;		_IPv4_Start
 21904 ;; This function is called by:
 21905 ;;		_TCP_PayloadSave
 21906 ;;		_TCP_FiniteStateMachine
 21907 ;;		_TCP_Send
 21908 ;; This function uses a non-reentrant model
 21909 ;;
 21910                           
 21911                           	psect	text87
 21912  003A62                     __ptext87:
 21913                           	opt stack 0
 21914  003A62                     _TCP_Snd:
 21915                           	opt stack 18
 21916                           
 21917                           ;tcpv4.c: 203: tcpHeader_t txHeader;
 21918                           ;tcpv4.c: 204: uint16_t payloadLength;
 21919                           ;tcpv4.c: 205: uint16_t cksm;
 21920                           ;tcpv4.c: 206: uint16_t tcpDataLength;
 21921                           ;tcpv4.c: 207: uint8_t *data;
 21922                           ;tcpv4.c: 209: txHeader.sourcePort = ((((uint16_t)tcbPtr->localPort & (uint16_t)0xFF00) 
      +                          >> 8) | (((uint16_t)tcbPtr->localPort & (uint16_t)0x00FF) << 8));
 21923                           
 21924                           ;incstack = 0
 21925  003A62  C058  FFF6         	movff	TCP_Snd@tcbPtr,tblptrl
 21926  003A66  C059  FFF7         	movff	TCP_Snd@tcbPtr+1,tblptrh
 21927  003A6A  0E00               	movlw	low (__smallconst shr (0+16))
 21928  003A6C  6EF8               	movwf	tblptru,c
 21929  003A6E  0E0F               	movlw	(high __ramtop+-1)
 21930  003A70  64F7               	cpfsgt	tblptrh,c
 21931  003A72  D007               	bra	u11157
 21932  003A74  0009               	tblrd		*+
 21933  003A76  CFF5 F067          	movff	tablat,??_TCP_Snd
 21934  003A7A  0009               	tblrd		*+
 21935  003A7C  CFF5 F068          	movff	tablat,??_TCP_Snd+1
 21936  003A80  D008               	bra	u11150
 21937  003A82                     u11157:
 21938  003A82  CFF6 FFE9          	movff	tblptrl,fsr0l
 21939  003A86  CFF7 FFEA          	movff	tblptrh,fsr0h
 21940  003A8A  CFEE F067          	movff	postinc0,??_TCP_Snd
 21941  003A8E  CFEE F068          	movff	postinc0,??_TCP_Snd+1
 21942  003A92                     u11150:
 21943  003A92  0100               	movlb	0	; () banked
 21944  003A94  5167               	movf	??_TCP_Snd& (0+255),w,b
 21945  003A96  6F6A               	movwf	(??_TCP_Snd+3)& (0+255),b
 21946  003A98  6B69               	clrf	(??_TCP_Snd+2)& (0+255),b
 21947  003A9A  C058  FFF6         	movff	TCP_Snd@tcbPtr,tblptrl
 21948  003A9E  C059  FFF7         	movff	TCP_Snd@tcbPtr+1,tblptrh
 21949  003AA2  0E00               	movlw	low (__smallconst shr (0+16))
 21950  003AA4  6EF8               	movwf	tblptru,c
 21951  003AA6  0E0F               	movlw	(high __ramtop+-1)
 21952  003AA8  64F7               	cpfsgt	tblptrh,c
 21953  003AAA  D007               	bra	u11167
 21954  003AAC  0009               	tblrd		*+
 21955  003AAE  CFF5 F06B          	movff	tablat,??_TCP_Snd+4
 21956  003AB2  0009               	tblrd		*+
 21957  003AB4  CFF5 F06C          	movff	tablat,??_TCP_Snd+5
 21958  003AB8  D008               	bra	u11160
 21959  003ABA                     u11167:
 21960  003ABA  CFF6 FFE9          	movff	tblptrl,fsr0l
 21961  003ABE  CFF7 FFEA          	movff	tblptrh,fsr0h
 21962  003AC2  CFEE F06B          	movff	postinc0,??_TCP_Snd+4
 21963  003AC6  CFEE F06C          	movff	postinc0,??_TCP_Snd+5
 21964  003ACA                     u11160:
 21965  003ACA  C06C  F06B         	movff	??_TCP_Snd+5,??_TCP_Snd+4
 21966  003ACE  0100               	movlb	0	; () banked
 21967  003AD0  6B6C               	clrf	(??_TCP_Snd+5)& (0+255),b
 21968  003AD2  6B6C               	clrf	(??_TCP_Snd+5)& (0+255),b
 21969  003AD4  5169               	movf	(??_TCP_Snd+2)& (0+255),w,b
 21970  003AD6  116B               	iorwf	(??_TCP_Snd+4)& (0+255),w,b
 21971  003AD8  6FA0               	movwf	TCP_Snd@txHeader& (0+255),b
 21972  003ADA  516A               	movf	(??_TCP_Snd+3)& (0+255),w,b
 21973  003ADC  116C               	iorwf	(??_TCP_Snd+5)& (0+255),w,b
 21974  003ADE  6FA1               	movwf	(TCP_Snd@txHeader+1)& (0+255),b
 21975                           
 21976                           ;tcpv4.c: 210: txHeader.destPort = ((((uint16_t)tcbPtr->destPort & (uint16_t)0xFF00) >> 
      +                          8) | (((uint16_t)tcbPtr->destPort & (uint16_t)0x00FF) << 8));
 21977  003AE0  0E06               	movlw	6
 21978  003AE2  2458               	addwf	TCP_Snd@tcbPtr,w,c
 21979  003AE4  6F67               	movwf	??_TCP_Snd& (0+255),b
 21980  003AE6  0E00               	movlw	0
 21981  003AE8  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 21982  003AEA  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 21983  003AEC  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 21984  003AF0  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 21985  003AF4  0E00               	movlw	low (__smallconst shr (0+16))
 21986  003AF6  6EF8               	movwf	tblptru,c
 21987  003AF8  0E0F               	movlw	(high __ramtop+-1)
 21988  003AFA  64F7               	cpfsgt	tblptrh,c
 21989  003AFC  D007               	bra	u11177
 21990  003AFE  0009               	tblrd		*+
 21991  003B00  CFF5 F069          	movff	tablat,??_TCP_Snd+2
 21992  003B04  0009               	tblrd		*+
 21993  003B06  CFF5 F06A          	movff	tablat,??_TCP_Snd+3
 21994  003B0A  D008               	bra	u11170
 21995  003B0C                     u11177:
 21996  003B0C  CFF6 FFE9          	movff	tblptrl,fsr0l
 21997  003B10  CFF7 FFEA          	movff	tblptrh,fsr0h
 21998  003B14  CFEE F069          	movff	postinc0,??_TCP_Snd+2
 21999  003B18  CFEE F06A          	movff	postinc0,??_TCP_Snd+3
 22000  003B1C                     u11170:
 22001  003B1C  0100               	movlb	0	; () banked
 22002  003B1E  5169               	movf	(??_TCP_Snd+2)& (0+255),w,b
 22003  003B20  6F6C               	movwf	(??_TCP_Snd+5)& (0+255),b
 22004  003B22  6B6B               	clrf	(??_TCP_Snd+4)& (0+255),b
 22005  003B24  0E06               	movlw	6
 22006  003B26  2458               	addwf	TCP_Snd@tcbPtr,w,c
 22007  003B28  6F6D               	movwf	(??_TCP_Snd+6)& (0+255),b
 22008  003B2A  0E00               	movlw	0
 22009  003B2C  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 22010  003B2E  6F6E               	movwf	(??_TCP_Snd+7)& (0+255),b
 22011  003B30  C06D  FFF6         	movff	??_TCP_Snd+6,tblptrl
 22012  003B34  C06E  FFF7         	movff	??_TCP_Snd+7,tblptrh
 22013  003B38  0E00               	movlw	low (__smallconst shr (0+16))
 22014  003B3A  6EF8               	movwf	tblptru,c
 22015  003B3C  0E0F               	movlw	(high __ramtop+-1)
 22016  003B3E  64F7               	cpfsgt	tblptrh,c
 22017  003B40  D007               	bra	u11187
 22018  003B42  0009               	tblrd		*+
 22019  003B44  CFF5 F06F          	movff	tablat,??_TCP_Snd+8
 22020  003B48  0009               	tblrd		*+
 22021  003B4A  CFF5 F070          	movff	tablat,??_TCP_Snd+9
 22022  003B4E  D008               	bra	u11180
 22023  003B50                     u11187:
 22024  003B50  CFF6 FFE9          	movff	tblptrl,fsr0l
 22025  003B54  CFF7 FFEA          	movff	tblptrh,fsr0h
 22026  003B58  CFEE F06F          	movff	postinc0,??_TCP_Snd+8
 22027  003B5C  CFEE F070          	movff	postinc0,??_TCP_Snd+9
 22028  003B60                     u11180:
 22029  003B60  C070  F06F         	movff	??_TCP_Snd+9,??_TCP_Snd+8
 22030  003B64  0100               	movlb	0	; () banked
 22031  003B66  6B70               	clrf	(??_TCP_Snd+9)& (0+255),b
 22032  003B68  6B70               	clrf	(??_TCP_Snd+9)& (0+255),b
 22033  003B6A  516B               	movf	(??_TCP_Snd+4)& (0+255),w,b
 22034  003B6C  116F               	iorwf	(??_TCP_Snd+8)& (0+255),w,b
 22035  003B6E  6FA2               	movwf	(TCP_Snd@txHeader+2)& (0+255),b
 22036  003B70  516C               	movf	(??_TCP_Snd+5)& (0+255),w,b
 22037  003B72  1170               	iorwf	(??_TCP_Snd+9)& (0+255),w,b
 22038  003B74  6FA3               	movwf	(TCP_Snd@txHeader+3)& (0+255),b
 22039                           
 22040                           ;tcpv4.c: 212: txHeader.sequenceNumber = ((((uint32_t)tcbPtr->localSeqno&(uint32_t)0xff0
      +                          00000) >> 24) | (((uint32_t)tcbPtr->localSeqno&(uint32_t)0x00ff0000) >> 8) | (((uint32_t
      +                          )tcbPtr->localSeqno&(uint32_t)0x0000ff00) << 8) | (((uint32_t)tcbPtr->localSeqno&(uint32
      +                          _
 22041  003B76  0E10               	movlw	16
 22042  003B78  2458               	addwf	TCP_Snd@tcbPtr,w,c
 22043  003B7A  6F67               	movwf	??_TCP_Snd& (0+255),b
 22044  003B7C  0E00               	movlw	0
 22045  003B7E  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 22046  003B80  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 22047  003B82  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 22048  003B86  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 22049  003B8A  0E00               	movlw	low (__smallconst shr (0+16))
 22050  003B8C  6EF8               	movwf	tblptru,c
 22051  003B8E  0E0F               	movlw	(high __ramtop+-1)
 22052  003B90  64F7               	cpfsgt	tblptrh,c
 22053  003B92  D00D               	bra	u11197
 22054  003B94  0009               	tblrd		*+
 22055  003B96  CFF5 F069          	movff	tablat,??_TCP_Snd+2
 22056  003B9A  0009               	tblrd		*+
 22057  003B9C  CFF5 F06A          	movff	tablat,??_TCP_Snd+3
 22058  003BA0  0009               	tblrd		*+
 22059  003BA2  CFF5 F06B          	movff	tablat,??_TCP_Snd+4
 22060  003BA6  0009               	tblrd		*+
 22061  003BA8  CFF5 F06C          	movff	tablat,??_TCP_Snd+5
 22062  003BAC  D00C               	bra	u11190
 22063  003BAE                     u11197:
 22064  003BAE  CFF6 FFE9          	movff	tblptrl,fsr0l
 22065  003BB2  CFF7 FFEA          	movff	tblptrh,fsr0h
 22066  003BB6  CFEE F069          	movff	postinc0,??_TCP_Snd+2
 22067  003BBA  CFEE F06A          	movff	postinc0,??_TCP_Snd+3
 22068  003BBE  CFEE F06B          	movff	postinc0,??_TCP_Snd+4
 22069  003BC2  CFEE F06C          	movff	postinc0,??_TCP_Snd+5
 22070  003BC6                     u11190:
 22071  003BC6  0100               	movlb	0	; () banked
 22072  003BC8  5169               	movf	(??_TCP_Snd+2)& (0+255),w,b
 22073  003BCA  6F6D               	movwf	(??_TCP_Snd+6)& (0+255),b
 22074  003BCC  6B6E               	clrf	(??_TCP_Snd+7)& (0+255),b
 22075  003BCE  6B6F               	clrf	(??_TCP_Snd+8)& (0+255),b
 22076  003BD0  6B70               	clrf	(??_TCP_Snd+9)& (0+255),b
 22077  003BD2  C06D  F070         	movff	??_TCP_Snd+6,??_TCP_Snd+9
 22078  003BD6  6B6F               	clrf	(??_TCP_Snd+8)& (0+255),b
 22079  003BD8  6B6E               	clrf	(??_TCP_Snd+7)& (0+255),b
 22080  003BDA  6B6D               	clrf	(??_TCP_Snd+6)& (0+255),b
 22081  003BDC  0E10               	movlw	16
 22082  003BDE  2458               	addwf	TCP_Snd@tcbPtr,w,c
 22083  003BE0  6F71               	movwf	(??_TCP_Snd+10)& (0+255),b
 22084  003BE2  0E00               	movlw	0
 22085  003BE4  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 22086  003BE6  6F72               	movwf	(??_TCP_Snd+11)& (0+255),b
 22087  003BE8  C071  FFF6         	movff	??_TCP_Snd+10,tblptrl
 22088  003BEC  C072  FFF7         	movff	??_TCP_Snd+11,tblptrh
 22089  003BF0  0E00               	movlw	low (__smallconst shr (0+16))
 22090  003BF2  6EF8               	movwf	tblptru,c
 22091  003BF4  0E0F               	movlw	(high __ramtop+-1)
 22092  003BF6  64F7               	cpfsgt	tblptrh,c
 22093  003BF8  D00D               	bra	u11207
 22094  003BFA  0009               	tblrd		*+
 22095  003BFC  CFF5 F073          	movff	tablat,??_TCP_Snd+12
 22096  003C00  0009               	tblrd		*+
 22097  003C02  CFF5 F074          	movff	tablat,??_TCP_Snd+13
 22098  003C06  0009               	tblrd		*+
 22099  003C08  CFF5 F075          	movff	tablat,??_TCP_Snd+14
 22100  003C0C  0009               	tblrd		*+
 22101  003C0E  CFF5 F076          	movff	tablat,??_TCP_Snd+15
 22102  003C12  D00C               	bra	u11200
 22103  003C14                     u11207:
 22104  003C14  CFF6 FFE9          	movff	tblptrl,fsr0l
 22105  003C18  CFF7 FFEA          	movff	tblptrh,fsr0h
 22106  003C1C  CFEE F073          	movff	postinc0,??_TCP_Snd+12
 22107  003C20  CFEE F074          	movff	postinc0,??_TCP_Snd+13
 22108  003C24  CFEE F075          	movff	postinc0,??_TCP_Snd+14
 22109  003C28  CFEE F076          	movff	postinc0,??_TCP_Snd+15
 22110  003C2C                     u11200:
 22111  003C2C  0100               	movlb	0	; () banked
 22112  003C2E  6B77               	clrf	(??_TCP_Snd+16)& (0+255),b
 22113  003C30  5174               	movf	(??_TCP_Snd+13)& (0+255),w,b
 22114  003C32  6F78               	movwf	(??_TCP_Snd+17)& (0+255),b
 22115  003C34  6B79               	clrf	(??_TCP_Snd+18)& (0+255),b
 22116  003C36  6B7A               	clrf	(??_TCP_Snd+19)& (0+255),b
 22117  003C38  C079  F07A         	movff	??_TCP_Snd+18,??_TCP_Snd+19
 22118  003C3C  C078  F079         	movff	??_TCP_Snd+17,??_TCP_Snd+18
 22119  003C40  C077  F078         	movff	??_TCP_Snd+16,??_TCP_Snd+17
 22120  003C44  6B77               	clrf	(??_TCP_Snd+16)& (0+255),b
 22121  003C46  0E10               	movlw	16
 22122  003C48  2458               	addwf	TCP_Snd@tcbPtr,w,c
 22123  003C4A  6F7B               	movwf	(??_TCP_Snd+20)& (0+255),b
 22124  003C4C  0E00               	movlw	0
 22125  003C4E  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 22126  003C50  6F7C               	movwf	(??_TCP_Snd+21)& (0+255),b
 22127  003C52  C07B  FFF6         	movff	??_TCP_Snd+20,tblptrl
 22128  003C56  C07C  FFF7         	movff	??_TCP_Snd+21,tblptrh
 22129  003C5A  0E00               	movlw	low (__smallconst shr (0+16))
 22130  003C5C  6EF8               	movwf	tblptru,c
 22131  003C5E  0E0F               	movlw	(high __ramtop+-1)
 22132  003C60  64F7               	cpfsgt	tblptrh,c
 22133  003C62  D00D               	bra	u11217
 22134  003C64  0009               	tblrd		*+
 22135  003C66  CFF5 F07D          	movff	tablat,??_TCP_Snd+22
 22136  003C6A  0009               	tblrd		*+
 22137  003C6C  CFF5 F07E          	movff	tablat,??_TCP_Snd+23
 22138  003C70  0009               	tblrd		*+
 22139  003C72  CFF5 F07F          	movff	tablat,??_TCP_Snd+24
 22140  003C76  0009               	tblrd		*+
 22141  003C78  CFF5 F080          	movff	tablat,??_TCP_Snd+25
 22142  003C7C  D00C               	bra	u11210
 22143  003C7E                     u11217:
 22144  003C7E  CFF6 FFE9          	movff	tblptrl,fsr0l
 22145  003C82  CFF7 FFEA          	movff	tblptrh,fsr0h
 22146  003C86  CFEE F07D          	movff	postinc0,??_TCP_Snd+22
 22147  003C8A  CFEE F07E          	movff	postinc0,??_TCP_Snd+23
 22148  003C8E  CFEE F07F          	movff	postinc0,??_TCP_Snd+24
 22149  003C92  CFEE F080          	movff	postinc0,??_TCP_Snd+25
 22150  003C96                     u11210:
 22151  003C96  C07E  F07D         	movff	??_TCP_Snd+23,??_TCP_Snd+22
 22152  003C9A  C07F  F07E         	movff	??_TCP_Snd+24,??_TCP_Snd+23
 22153  003C9E  C080  F07F         	movff	??_TCP_Snd+25,??_TCP_Snd+24
 22154  003CA2  0100               	movlb	0	; () banked
 22155  003CA4  6B80               	clrf	(??_TCP_Snd+25)& (0+255),b
 22156  003CA6  6B81               	clrf	(??_TCP_Snd+26)& (0+255),b
 22157  003CA8  517E               	movf	(??_TCP_Snd+23)& (0+255),w,b
 22158  003CAA  6F82               	movwf	(??_TCP_Snd+27)& (0+255),b
 22159  003CAC  6B83               	clrf	(??_TCP_Snd+28)& (0+255),b
 22160  003CAE  6B84               	clrf	(??_TCP_Snd+29)& (0+255),b
 22161  003CB0  0E10               	movlw	16
 22162  003CB2  2458               	addwf	TCP_Snd@tcbPtr,w,c
 22163  003CB4  6F85               	movwf	(??_TCP_Snd+30)& (0+255),b
 22164  003CB6  0E00               	movlw	0
 22165  003CB8  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 22166  003CBA  6F86               	movwf	(??_TCP_Snd+31)& (0+255),b
 22167  003CBC  C085  FFF6         	movff	??_TCP_Snd+30,tblptrl
 22168  003CC0  C086  FFF7         	movff	??_TCP_Snd+31,tblptrh
 22169  003CC4  0E00               	movlw	low (__smallconst shr (0+16))
 22170  003CC6  6EF8               	movwf	tblptru,c
 22171  003CC8  0E0F               	movlw	(high __ramtop+-1)
 22172  003CCA  64F7               	cpfsgt	tblptrh,c
 22173  003CCC  D00D               	bra	u11227
 22174  003CCE  0009               	tblrd		*+
 22175  003CD0  CFF5 F087          	movff	tablat,??_TCP_Snd+32
 22176  003CD4  0009               	tblrd		*+
 22177  003CD6  CFF5 F088          	movff	tablat,??_TCP_Snd+33
 22178  003CDA  0009               	tblrd		*+
 22179  003CDC  CFF5 F089          	movff	tablat,??_TCP_Snd+34
 22180  003CE0  0009               	tblrd		*+
 22181  003CE2  CFF5 F08A          	movff	tablat,??_TCP_Snd+35
 22182  003CE6  D00C               	bra	u11220
 22183  003CE8                     u11227:
 22184  003CE8  CFF6 FFE9          	movff	tblptrl,fsr0l
 22185  003CEC  CFF7 FFEA          	movff	tblptrh,fsr0h
 22186  003CF0  CFEE F087          	movff	postinc0,??_TCP_Snd+32
 22187  003CF4  CFEE F088          	movff	postinc0,??_TCP_Snd+33
 22188  003CF8  CFEE F089          	movff	postinc0,??_TCP_Snd+34
 22189  003CFC  CFEE F08A          	movff	postinc0,??_TCP_Snd+35
 22190  003D00                     u11220:
 22191  003D00  0100               	movlb	0	; () banked
 22192  003D02  6B8B               	clrf	(??_TCP_Snd+36)& (0+255),b
 22193  003D04  6B8C               	clrf	(??_TCP_Snd+37)& (0+255),b
 22194  003D06  6B8D               	clrf	(??_TCP_Snd+38)& (0+255),b
 22195  003D08  518A               	movf	(??_TCP_Snd+35)& (0+255),w,b
 22196  003D0A  6F8E               	movwf	(??_TCP_Snd+39)& (0+255),b
 22197  003D0C  0E19               	movlw	25
 22198  003D0E  D005               	goto	u11230
 22199  003D10                     u11235:
 22200  003D10  90D8               	bcf	status,0,c
 22201  003D12  338E               	rrcf	(??_TCP_Snd+39)& (0+255),f,b
 22202  003D14  338D               	rrcf	(??_TCP_Snd+38)& (0+255),f,b
 22203  003D16  338C               	rrcf	(??_TCP_Snd+37)& (0+255),f,b
 22204  003D18  338B               	rrcf	(??_TCP_Snd+36)& (0+255),f,b
 22205  003D1A                     u11230:
 22206  003D1A  2EE8               	decfsz	wreg,f,c
 22207  003D1C  D7F9               	goto	u11235
 22208  003D1E  5181               	movf	(??_TCP_Snd+26)& (0+255),w,b
 22209  003D20  118B               	iorwf	(??_TCP_Snd+36)& (0+255),w,b
 22210  003D22  6F8F               	movwf	(??_TCP_Snd+40)& (0+255),b
 22211  003D24  5182               	movf	(??_TCP_Snd+27)& (0+255),w,b
 22212  003D26  118C               	iorwf	(??_TCP_Snd+37)& (0+255),w,b
 22213  003D28  6F90               	movwf	(??_TCP_Snd+41)& (0+255),b
 22214  003D2A  5183               	movf	(??_TCP_Snd+28)& (0+255),w,b
 22215  003D2C  118D               	iorwf	(??_TCP_Snd+38)& (0+255),w,b
 22216  003D2E  6F91               	movwf	(??_TCP_Snd+42)& (0+255),b
 22217  003D30  5184               	movf	(??_TCP_Snd+29)& (0+255),w,b
 22218  003D32  118E               	iorwf	(??_TCP_Snd+39)& (0+255),w,b
 22219  003D34  6F92               	movwf	(??_TCP_Snd+43)& (0+255),b
 22220  003D36  5177               	movf	(??_TCP_Snd+16)& (0+255),w,b
 22221  003D38  118F               	iorwf	(??_TCP_Snd+40)& (0+255),w,b
 22222  003D3A  6F93               	movwf	(??_TCP_Snd+44)& (0+255),b
 22223  003D3C  5178               	movf	(??_TCP_Snd+17)& (0+255),w,b
 22224  003D3E  1190               	iorwf	(??_TCP_Snd+41)& (0+255),w,b
 22225  003D40  6F94               	movwf	(??_TCP_Snd+45)& (0+255),b
 22226  003D42  5179               	movf	(??_TCP_Snd+18)& (0+255),w,b
 22227  003D44  1191               	iorwf	(??_TCP_Snd+42)& (0+255),w,b
 22228  003D46  6F95               	movwf	(??_TCP_Snd+46)& (0+255),b
 22229  003D48  517A               	movf	(??_TCP_Snd+19)& (0+255),w,b
 22230  003D4A  1192               	iorwf	(??_TCP_Snd+43)& (0+255),w,b
 22231  003D4C  6F96               	movwf	(??_TCP_Snd+47)& (0+255),b
 22232  003D4E  516D               	movf	(??_TCP_Snd+6)& (0+255),w,b
 22233  003D50  1193               	iorwf	(??_TCP_Snd+44)& (0+255),w,b
 22234  003D52  6FA4               	movwf	(TCP_Snd@txHeader+4)& (0+255),b
 22235  003D54  516E               	movf	(??_TCP_Snd+7)& (0+255),w,b
 22236  003D56  1194               	iorwf	(??_TCP_Snd+45)& (0+255),w,b
 22237  003D58  6FA5               	movwf	(TCP_Snd@txHeader+5)& (0+255),b
 22238  003D5A  516F               	movf	(??_TCP_Snd+8)& (0+255),w,b
 22239  003D5C  1195               	iorwf	(??_TCP_Snd+46)& (0+255),w,b
 22240  003D5E  6FA6               	movwf	(TCP_Snd@txHeader+6)& (0+255),b
 22241  003D60  5170               	movf	(??_TCP_Snd+9)& (0+255),w,b
 22242  003D62  1196               	iorwf	(??_TCP_Snd+47)& (0+255),w,b
 22243  003D64  6FA7               	movwf	(TCP_Snd@txHeader+7)& (0+255),b
 22244                           
 22245                           ;tcpv4.c: 214: txHeader.ackNumber = ((((uint32_t)tcbPtr->remoteAck&(uint32_t)0xff000000)
      +                           >> 24) | (((uint32_t)tcbPtr->remoteAck&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)tcbPtr
      +                          ->remoteAck&(uint32_t)0x0000ff00) << 8) | (((uint32_t)tcbPtr->remoteAck&(uint32_t)0x0000
      +                          0
 22246  003D66  0E0C               	movlw	12
 22247  003D68  2458               	addwf	TCP_Snd@tcbPtr,w,c
 22248  003D6A  6F67               	movwf	??_TCP_Snd& (0+255),b
 22249  003D6C  0E00               	movlw	0
 22250  003D6E  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 22251  003D70  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 22252  003D72  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 22253  003D76  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 22254  003D7A  0E00               	movlw	low (__smallconst shr (0+16))
 22255  003D7C  6EF8               	movwf	tblptru,c
 22256  003D7E  0E0F               	movlw	(high __ramtop+-1)
 22257  003D80  64F7               	cpfsgt	tblptrh,c
 22258  003D82  D00D               	bra	u11247
 22259  003D84  0009               	tblrd		*+
 22260  003D86  CFF5 F069          	movff	tablat,??_TCP_Snd+2
 22261  003D8A  0009               	tblrd		*+
 22262  003D8C  CFF5 F06A          	movff	tablat,??_TCP_Snd+3
 22263  003D90  0009               	tblrd		*+
 22264  003D92  CFF5 F06B          	movff	tablat,??_TCP_Snd+4
 22265  003D96  0009               	tblrd		*+
 22266  003D98  CFF5 F06C          	movff	tablat,??_TCP_Snd+5
 22267  003D9C  D00C               	bra	u11240
 22268  003D9E                     u11247:
 22269  003D9E  CFF6 FFE9          	movff	tblptrl,fsr0l
 22270  003DA2  CFF7 FFEA          	movff	tblptrh,fsr0h
 22271  003DA6  CFEE F069          	movff	postinc0,??_TCP_Snd+2
 22272  003DAA  CFEE F06A          	movff	postinc0,??_TCP_Snd+3
 22273  003DAE  CFEE F06B          	movff	postinc0,??_TCP_Snd+4
 22274  003DB2  CFEE F06C          	movff	postinc0,??_TCP_Snd+5
 22275  003DB6                     u11240:
 22276  003DB6  0100               	movlb	0	; () banked
 22277  003DB8  5169               	movf	(??_TCP_Snd+2)& (0+255),w,b
 22278  003DBA  6F6D               	movwf	(??_TCP_Snd+6)& (0+255),b
 22279  003DBC  6B6E               	clrf	(??_TCP_Snd+7)& (0+255),b
 22280  003DBE  6B6F               	clrf	(??_TCP_Snd+8)& (0+255),b
 22281  003DC0  6B70               	clrf	(??_TCP_Snd+9)& (0+255),b
 22282  003DC2  C06D  F070         	movff	??_TCP_Snd+6,??_TCP_Snd+9
 22283  003DC6  6B6F               	clrf	(??_TCP_Snd+8)& (0+255),b
 22284  003DC8  6B6E               	clrf	(??_TCP_Snd+7)& (0+255),b
 22285  003DCA  6B6D               	clrf	(??_TCP_Snd+6)& (0+255),b
 22286  003DCC  0E0C               	movlw	12
 22287  003DCE  2458               	addwf	TCP_Snd@tcbPtr,w,c
 22288  003DD0  6F71               	movwf	(??_TCP_Snd+10)& (0+255),b
 22289  003DD2  0E00               	movlw	0
 22290  003DD4  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 22291  003DD6  6F72               	movwf	(??_TCP_Snd+11)& (0+255),b
 22292  003DD8  C071  FFF6         	movff	??_TCP_Snd+10,tblptrl
 22293  003DDC  C072  FFF7         	movff	??_TCP_Snd+11,tblptrh
 22294  003DE0  0E00               	movlw	low (__smallconst shr (0+16))
 22295  003DE2  6EF8               	movwf	tblptru,c
 22296  003DE4  0E0F               	movlw	(high __ramtop+-1)
 22297  003DE6  64F7               	cpfsgt	tblptrh,c
 22298  003DE8  D00D               	bra	u11257
 22299  003DEA  0009               	tblrd		*+
 22300  003DEC  CFF5 F073          	movff	tablat,??_TCP_Snd+12
 22301  003DF0  0009               	tblrd		*+
 22302  003DF2  CFF5 F074          	movff	tablat,??_TCP_Snd+13
 22303  003DF6  0009               	tblrd		*+
 22304  003DF8  CFF5 F075          	movff	tablat,??_TCP_Snd+14
 22305  003DFC  0009               	tblrd		*+
 22306  003DFE  CFF5 F076          	movff	tablat,??_TCP_Snd+15
 22307  003E02  D00C               	bra	u11250
 22308  003E04                     u11257:
 22309  003E04  CFF6 FFE9          	movff	tblptrl,fsr0l
 22310  003E08  CFF7 FFEA          	movff	tblptrh,fsr0h
 22311  003E0C  CFEE F073          	movff	postinc0,??_TCP_Snd+12
 22312  003E10  CFEE F074          	movff	postinc0,??_TCP_Snd+13
 22313  003E14  CFEE F075          	movff	postinc0,??_TCP_Snd+14
 22314  003E18  CFEE F076          	movff	postinc0,??_TCP_Snd+15
 22315  003E1C                     u11250:
 22316  003E1C  0100               	movlb	0	; () banked
 22317  003E1E  6B77               	clrf	(??_TCP_Snd+16)& (0+255),b
 22318  003E20  5174               	movf	(??_TCP_Snd+13)& (0+255),w,b
 22319  003E22  6F78               	movwf	(??_TCP_Snd+17)& (0+255),b
 22320  003E24  6B79               	clrf	(??_TCP_Snd+18)& (0+255),b
 22321  003E26  6B7A               	clrf	(??_TCP_Snd+19)& (0+255),b
 22322  003E28  C079  F07A         	movff	??_TCP_Snd+18,??_TCP_Snd+19
 22323  003E2C  C078  F079         	movff	??_TCP_Snd+17,??_TCP_Snd+18
 22324  003E30  C077  F078         	movff	??_TCP_Snd+16,??_TCP_Snd+17
 22325  003E34  6B77               	clrf	(??_TCP_Snd+16)& (0+255),b
 22326  003E36  0E0C               	movlw	12
 22327  003E38  2458               	addwf	TCP_Snd@tcbPtr,w,c
 22328  003E3A  6F7B               	movwf	(??_TCP_Snd+20)& (0+255),b
 22329  003E3C  0E00               	movlw	0
 22330  003E3E  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 22331  003E40  6F7C               	movwf	(??_TCP_Snd+21)& (0+255),b
 22332  003E42  C07B  FFF6         	movff	??_TCP_Snd+20,tblptrl
 22333  003E46  C07C  FFF7         	movff	??_TCP_Snd+21,tblptrh
 22334  003E4A  0E00               	movlw	low (__smallconst shr (0+16))
 22335  003E4C  6EF8               	movwf	tblptru,c
 22336  003E4E  0E0F               	movlw	(high __ramtop+-1)
 22337  003E50  64F7               	cpfsgt	tblptrh,c
 22338  003E52  D00D               	bra	u11267
 22339  003E54  0009               	tblrd		*+
 22340  003E56  CFF5 F07D          	movff	tablat,??_TCP_Snd+22
 22341  003E5A  0009               	tblrd		*+
 22342  003E5C  CFF5 F07E          	movff	tablat,??_TCP_Snd+23
 22343  003E60  0009               	tblrd		*+
 22344  003E62  CFF5 F07F          	movff	tablat,??_TCP_Snd+24
 22345  003E66  0009               	tblrd		*+
 22346  003E68  CFF5 F080          	movff	tablat,??_TCP_Snd+25
 22347  003E6C  D00C               	bra	u11260
 22348  003E6E                     u11267:
 22349  003E6E  CFF6 FFE9          	movff	tblptrl,fsr0l
 22350  003E72  CFF7 FFEA          	movff	tblptrh,fsr0h
 22351  003E76  CFEE F07D          	movff	postinc0,??_TCP_Snd+22
 22352  003E7A  CFEE F07E          	movff	postinc0,??_TCP_Snd+23
 22353  003E7E  CFEE F07F          	movff	postinc0,??_TCP_Snd+24
 22354  003E82  CFEE F080          	movff	postinc0,??_TCP_Snd+25
 22355  003E86                     u11260:
 22356  003E86  C07E  F07D         	movff	??_TCP_Snd+23,??_TCP_Snd+22
 22357  003E8A  C07F  F07E         	movff	??_TCP_Snd+24,??_TCP_Snd+23
 22358  003E8E  C080  F07F         	movff	??_TCP_Snd+25,??_TCP_Snd+24
 22359  003E92  0100               	movlb	0	; () banked
 22360  003E94  6B80               	clrf	(??_TCP_Snd+25)& (0+255),b
 22361  003E96  6B81               	clrf	(??_TCP_Snd+26)& (0+255),b
 22362  003E98  517E               	movf	(??_TCP_Snd+23)& (0+255),w,b
 22363  003E9A  6F82               	movwf	(??_TCP_Snd+27)& (0+255),b
 22364  003E9C  6B83               	clrf	(??_TCP_Snd+28)& (0+255),b
 22365  003E9E  6B84               	clrf	(??_TCP_Snd+29)& (0+255),b
 22366  003EA0  0E0C               	movlw	12
 22367  003EA2  2458               	addwf	TCP_Snd@tcbPtr,w,c
 22368  003EA4  6F85               	movwf	(??_TCP_Snd+30)& (0+255),b
 22369  003EA6  0E00               	movlw	0
 22370  003EA8  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 22371  003EAA  6F86               	movwf	(??_TCP_Snd+31)& (0+255),b
 22372  003EAC  C085  FFF6         	movff	??_TCP_Snd+30,tblptrl
 22373  003EB0  C086  FFF7         	movff	??_TCP_Snd+31,tblptrh
 22374  003EB4  0E00               	movlw	low (__smallconst shr (0+16))
 22375  003EB6  6EF8               	movwf	tblptru,c
 22376  003EB8  0E0F               	movlw	(high __ramtop+-1)
 22377  003EBA  64F7               	cpfsgt	tblptrh,c
 22378  003EBC  D00D               	bra	u11277
 22379  003EBE  0009               	tblrd		*+
 22380  003EC0  CFF5 F087          	movff	tablat,??_TCP_Snd+32
 22381  003EC4  0009               	tblrd		*+
 22382  003EC6  CFF5 F088          	movff	tablat,??_TCP_Snd+33
 22383  003ECA  0009               	tblrd		*+
 22384  003ECC  CFF5 F089          	movff	tablat,??_TCP_Snd+34
 22385  003ED0  0009               	tblrd		*+
 22386  003ED2  CFF5 F08A          	movff	tablat,??_TCP_Snd+35
 22387  003ED6  D00C               	bra	u11270
 22388  003ED8                     u11277:
 22389  003ED8  CFF6 FFE9          	movff	tblptrl,fsr0l
 22390  003EDC  CFF7 FFEA          	movff	tblptrh,fsr0h
 22391  003EE0  CFEE F087          	movff	postinc0,??_TCP_Snd+32
 22392  003EE4  CFEE F088          	movff	postinc0,??_TCP_Snd+33
 22393  003EE8  CFEE F089          	movff	postinc0,??_TCP_Snd+34
 22394  003EEC  CFEE F08A          	movff	postinc0,??_TCP_Snd+35
 22395  003EF0                     u11270:
 22396  003EF0  0100               	movlb	0	; () banked
 22397  003EF2  6B8B               	clrf	(??_TCP_Snd+36)& (0+255),b
 22398  003EF4  6B8C               	clrf	(??_TCP_Snd+37)& (0+255),b
 22399  003EF6  6B8D               	clrf	(??_TCP_Snd+38)& (0+255),b
 22400  003EF8  518A               	movf	(??_TCP_Snd+35)& (0+255),w,b
 22401  003EFA  6F8E               	movwf	(??_TCP_Snd+39)& (0+255),b
 22402  003EFC  0E19               	movlw	25
 22403  003EFE  D005               	goto	u11280
 22404  003F00                     u11285:
 22405  003F00  90D8               	bcf	status,0,c
 22406  003F02  338E               	rrcf	(??_TCP_Snd+39)& (0+255),f,b
 22407  003F04  338D               	rrcf	(??_TCP_Snd+38)& (0+255),f,b
 22408  003F06  338C               	rrcf	(??_TCP_Snd+37)& (0+255),f,b
 22409  003F08  338B               	rrcf	(??_TCP_Snd+36)& (0+255),f,b
 22410  003F0A                     u11280:
 22411  003F0A  2EE8               	decfsz	wreg,f,c
 22412  003F0C  D7F9               	goto	u11285
 22413  003F0E  5181               	movf	(??_TCP_Snd+26)& (0+255),w,b
 22414  003F10  118B               	iorwf	(??_TCP_Snd+36)& (0+255),w,b
 22415  003F12  6F8F               	movwf	(??_TCP_Snd+40)& (0+255),b
 22416  003F14  5182               	movf	(??_TCP_Snd+27)& (0+255),w,b
 22417  003F16  118C               	iorwf	(??_TCP_Snd+37)& (0+255),w,b
 22418  003F18  6F90               	movwf	(??_TCP_Snd+41)& (0+255),b
 22419  003F1A  5183               	movf	(??_TCP_Snd+28)& (0+255),w,b
 22420  003F1C  118D               	iorwf	(??_TCP_Snd+38)& (0+255),w,b
 22421  003F1E  6F91               	movwf	(??_TCP_Snd+42)& (0+255),b
 22422  003F20  5184               	movf	(??_TCP_Snd+29)& (0+255),w,b
 22423  003F22  118E               	iorwf	(??_TCP_Snd+39)& (0+255),w,b
 22424  003F24  6F92               	movwf	(??_TCP_Snd+43)& (0+255),b
 22425  003F26  5177               	movf	(??_TCP_Snd+16)& (0+255),w,b
 22426  003F28  118F               	iorwf	(??_TCP_Snd+40)& (0+255),w,b
 22427  003F2A  6F93               	movwf	(??_TCP_Snd+44)& (0+255),b
 22428  003F2C  5178               	movf	(??_TCP_Snd+17)& (0+255),w,b
 22429  003F2E  1190               	iorwf	(??_TCP_Snd+41)& (0+255),w,b
 22430  003F30  6F94               	movwf	(??_TCP_Snd+45)& (0+255),b
 22431  003F32  5179               	movf	(??_TCP_Snd+18)& (0+255),w,b
 22432  003F34  1191               	iorwf	(??_TCP_Snd+42)& (0+255),w,b
 22433  003F36  6F95               	movwf	(??_TCP_Snd+46)& (0+255),b
 22434  003F38  517A               	movf	(??_TCP_Snd+19)& (0+255),w,b
 22435  003F3A  1192               	iorwf	(??_TCP_Snd+43)& (0+255),w,b
 22436  003F3C  6F96               	movwf	(??_TCP_Snd+47)& (0+255),b
 22437  003F3E  516D               	movf	(??_TCP_Snd+6)& (0+255),w,b
 22438  003F40  1193               	iorwf	(??_TCP_Snd+44)& (0+255),w,b
 22439  003F42  6FA8               	movwf	(TCP_Snd@txHeader+8)& (0+255),b
 22440  003F44  516E               	movf	(??_TCP_Snd+7)& (0+255),w,b
 22441  003F46  1194               	iorwf	(??_TCP_Snd+45)& (0+255),w,b
 22442  003F48  6FA9               	movwf	(TCP_Snd@txHeader+9)& (0+255),b
 22443  003F4A  516F               	movf	(??_TCP_Snd+8)& (0+255),w,b
 22444  003F4C  1195               	iorwf	(??_TCP_Snd+46)& (0+255),w,b
 22445  003F4E  6FAA               	movwf	(TCP_Snd@txHeader+10)& (0+255),b
 22446  003F50  5170               	movf	(??_TCP_Snd+9)& (0+255),w,b
 22447  003F52  1196               	iorwf	(??_TCP_Snd+47)& (0+255),w,b
 22448  003F54  6FAB               	movwf	(TCP_Snd@txHeader+11)& (0+255),b
 22449                           
 22450                           ; BSR set to: 0
 22451                           ;tcpv4.c: 216: txHeader.ns = 0;
 22452  003F56  91AC               	bcf	(TCP_Snd@txHeader+12)& (0+255),0,b
 22453                           
 22454                           ; BSR set to: 0
 22455                           ;tcpv4.c: 217: txHeader.reserved = 0;
 22456  003F58  0EF1               	movlw	-15
 22457  003F5A  17AC               	andwf	(TCP_Snd@txHeader+12)& (0+255),f,b
 22458                           
 22459                           ; BSR set to: 0
 22460                           ;tcpv4.c: 218: txHeader.dataOffset = 5;
 22461  003F5C  51AC               	movf	(TCP_Snd@txHeader+12)& (0+255),w,b
 22462  003F5E  0B0F               	andlw	-241
 22463  003F60  0950               	iorlw	80
 22464  003F62  6FAC               	movwf	(TCP_Snd@txHeader+12)& (0+255),b
 22465                           
 22466                           ;tcpv4.c: 219: txHeader.windowSize = ((((uint16_t)tcbPtr->localWnd & (uint16_t)0xFF00) >
      +                          > 8) | (((uint16_t)tcbPtr->localWnd & (uint16_t)0x00FF) << 8));
 22467  003F64  0E1A               	movlw	26
 22468  003F66  2458               	addwf	TCP_Snd@tcbPtr,w,c
 22469  003F68  6F67               	movwf	??_TCP_Snd& (0+255),b
 22470  003F6A  0E00               	movlw	0
 22471  003F6C  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 22472  003F6E  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 22473  003F70  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 22474  003F74  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 22475  003F78  0E00               	movlw	low (__smallconst shr (0+16))
 22476  003F7A  6EF8               	movwf	tblptru,c
 22477  003F7C  0E0F               	movlw	(high __ramtop+-1)
 22478  003F7E  64F7               	cpfsgt	tblptrh,c
 22479  003F80  D007               	bra	u11297
 22480  003F82  0009               	tblrd		*+
 22481  003F84  CFF5 F069          	movff	tablat,??_TCP_Snd+2
 22482  003F88  0009               	tblrd		*+
 22483  003F8A  CFF5 F06A          	movff	tablat,??_TCP_Snd+3
 22484  003F8E  D008               	bra	u11290
 22485  003F90                     u11297:
 22486  003F90  CFF6 FFE9          	movff	tblptrl,fsr0l
 22487  003F94  CFF7 FFEA          	movff	tblptrh,fsr0h
 22488  003F98  CFEE F069          	movff	postinc0,??_TCP_Snd+2
 22489  003F9C  CFEE F06A          	movff	postinc0,??_TCP_Snd+3
 22490  003FA0                     u11290:
 22491  003FA0  0100               	movlb	0	; () banked
 22492  003FA2  5169               	movf	(??_TCP_Snd+2)& (0+255),w,b
 22493  003FA4  6F6C               	movwf	(??_TCP_Snd+5)& (0+255),b
 22494  003FA6  6B6B               	clrf	(??_TCP_Snd+4)& (0+255),b
 22495  003FA8  0E1A               	movlw	26
 22496  003FAA  2458               	addwf	TCP_Snd@tcbPtr,w,c
 22497  003FAC  6F6D               	movwf	(??_TCP_Snd+6)& (0+255),b
 22498  003FAE  0E00               	movlw	0
 22499  003FB0  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 22500  003FB2  6F6E               	movwf	(??_TCP_Snd+7)& (0+255),b
 22501  003FB4  C06D  FFF6         	movff	??_TCP_Snd+6,tblptrl
 22502  003FB8  C06E  FFF7         	movff	??_TCP_Snd+7,tblptrh
 22503  003FBC  0E00               	movlw	low (__smallconst shr (0+16))
 22504  003FBE  6EF8               	movwf	tblptru,c
 22505  003FC0  0E0F               	movlw	(high __ramtop+-1)
 22506  003FC2  64F7               	cpfsgt	tblptrh,c
 22507  003FC4  D007               	bra	u11307
 22508  003FC6  0009               	tblrd		*+
 22509  003FC8  CFF5 F06F          	movff	tablat,??_TCP_Snd+8
 22510  003FCC  0009               	tblrd		*+
 22511  003FCE  CFF5 F070          	movff	tablat,??_TCP_Snd+9
 22512  003FD2  D008               	bra	u11300
 22513  003FD4                     u11307:
 22514  003FD4  CFF6 FFE9          	movff	tblptrl,fsr0l
 22515  003FD8  CFF7 FFEA          	movff	tblptrh,fsr0h
 22516  003FDC  CFEE F06F          	movff	postinc0,??_TCP_Snd+8
 22517  003FE0  CFEE F070          	movff	postinc0,??_TCP_Snd+9
 22518  003FE4                     u11300:
 22519  003FE4  C070  F06F         	movff	??_TCP_Snd+9,??_TCP_Snd+8
 22520  003FE8  0100               	movlb	0	; () banked
 22521  003FEA  6B70               	clrf	(??_TCP_Snd+9)& (0+255),b
 22522  003FEC  6B70               	clrf	(??_TCP_Snd+9)& (0+255),b
 22523  003FEE  516B               	movf	(??_TCP_Snd+4)& (0+255),w,b
 22524  003FF0  116F               	iorwf	(??_TCP_Snd+8)& (0+255),w,b
 22525  003FF2  6FAE               	movwf	(TCP_Snd@txHeader+14)& (0+255),b
 22526  003FF4  516C               	movf	(??_TCP_Snd+5)& (0+255),w,b
 22527  003FF6  1170               	iorwf	(??_TCP_Snd+9)& (0+255),w,b
 22528  003FF8  6FAF               	movwf	(TCP_Snd@txHeader+15)& (0+255),b
 22529                           
 22530                           ; BSR set to: 0
 22531                           ;tcpv4.c: 220: txHeader.checksum = 0;
 22532  003FFA  6BB0               	clrf	(TCP_Snd@txHeader+16)& (0+255),b
 22533  003FFC  6BB1               	clrf	(TCP_Snd@txHeader+17)& (0+255),b
 22534                           
 22535                           ; BSR set to: 0
 22536                           ;tcpv4.c: 221: txHeader.urgentPtr = 0;
 22537  003FFE  6BB2               	clrf	(TCP_Snd@txHeader+18)& (0+255),b
 22538  004000  6BB3               	clrf	(TCP_Snd@txHeader+19)& (0+255),b
 22539                           
 22540                           ;tcpv4.c: 223: if ((tcbPtr->flags) & (0x02U | 0x04U))
 22541  004002  0E35               	movlw	53
 22542  004004  2458               	addwf	TCP_Snd@tcbPtr,w,c
 22543  004006  6F67               	movwf	??_TCP_Snd& (0+255),b
 22544  004008  0E00               	movlw	0
 22545  00400A  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 22546  00400C  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 22547  00400E  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 22548  004012  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 22549  004016  0E00               	movlw	low (__smallconst shr (0+16))
 22550  004018  6EF8               	movwf	tblptru,c
 22551  00401A  0E0F               	movlw	(high __ramtop+-1)
 22552  00401C  64F7               	cpfsgt	tblptrh,c
 22553  00401E  D003               	bra	u11317
 22554  004020  0008               	tblrd		*
 22555  004022  50F5               	movf	tablat,w,c
 22556  004024  D005               	bra	u11310
 22557  004026                     u11317:
 22558  004026  CFF6 FFE9          	movff	tblptrl,fsr0l
 22559  00402A  CFF7 FFEA          	movff	tblptrh,fsr0h
 22560  00402E  50EF               	movf	indf0,w,c
 22561  004030                     u11310:
 22562  004030  0100               	movlb	0	; () banked
 22563  004032  6F69               	movwf	(??_TCP_Snd+2)& (0+255),b
 22564  004034  0E06               	movlw	6
 22565  004036  1769               	andwf	(??_TCP_Snd+2)& (0+255),f,b
 22566  004038  E003               	bz	l8416
 22567                           
 22568                           ; BSR set to: 0
 22569                           ;tcpv4.c: 224: {
 22570                           ;tcpv4.c: 225: tcpDataLength = 0;
 22571  00403A  6B9E               	clrf	TCP_Snd@tcpDataLength& (0+255),b
 22572  00403C  6B9F               	clrf	(TCP_Snd@tcpDataLength+1)& (0+255),b
 22573                           
 22574                           ;tcpv4.c: 226: } else
 22575  00403E  D188               	goto	l1212
 22576  004040                     l8416:
 22577                           
 22578                           ; BSR set to: 0
 22579                           ;tcpv4.c: 227: {
 22580                           ;tcpv4.c: 228: tcpDataLength = tcbPtr->bytesToSend;
 22581  004040  0E27               	movlw	39
 22582  004042  2458               	addwf	TCP_Snd@tcbPtr,w,c
 22583  004044  6F67               	movwf	??_TCP_Snd& (0+255),b
 22584  004046  0E00               	movlw	0
 22585  004048  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 22586  00404A  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 22587  00404C  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 22588  004050  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 22589  004054  0E00               	movlw	low (__smallconst shr (0+16))
 22590  004056  6EF8               	movwf	tblptru,c
 22591  004058  0E0F               	movlw	(high __ramtop+-1)
 22592  00405A  64F7               	cpfsgt	tblptrh,c
 22593  00405C  D007               	bra	u11337
 22594  00405E  0009               	tblrd		*+
 22595  004060  CFF5 F09E          	movff	tablat,TCP_Snd@tcpDataLength
 22596  004064  0009               	tblrd		*+
 22597  004066  CFF5 F09F          	movff	tablat,TCP_Snd@tcpDataLength+1
 22598  00406A  D008               	bra	u11330
 22599  00406C                     u11337:
 22600  00406C  CFF6 FFE9          	movff	tblptrl,fsr0l
 22601  004070  CFF7 FFEA          	movff	tblptrh,fsr0h
 22602  004074  CFEE F09E          	movff	postinc0,TCP_Snd@tcpDataLength
 22603  004078  CFEE F09F          	movff	postinc0,TCP_Snd@tcpDataLength+1
 22604  00407C                     u11330:
 22605                           
 22606                           ;tcpv4.c: 230: if (tcpDataLength != 0)
 22607  00407C  0100               	movlb	0	; () banked
 22608  00407E  519E               	movf	TCP_Snd@tcpDataLength& (0+255),w,b
 22609  004080  119F               	iorwf	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 22610  004082  E101 D165          	bz	l1212
 22611                           
 22612                           ; BSR set to: 0
 22613                           ;tcpv4.c: 231: {
 22614                           ;tcpv4.c: 232: if(tcpDataLength > tcbPtr->remoteWnd)
 22615  004086  0E18               	movlw	24
 22616  004088  2458               	addwf	TCP_Snd@tcbPtr,w,c
 22617  00408A  6F67               	movwf	??_TCP_Snd& (0+255),b
 22618  00408C  0E00               	movlw	0
 22619  00408E  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 22620  004090  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 22621  004092  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 22622  004096  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 22623  00409A  0E00               	movlw	low (__smallconst shr (0+16))
 22624  00409C  6EF8               	movwf	tblptru,c
 22625  00409E  0E0F               	movlw	(high __ramtop+-1)
 22626  0040A0  64F7               	cpfsgt	tblptrh,c
 22627  0040A2  D007               	bra	u11357
 22628  0040A4  0009               	tblrd		*+
 22629  0040A6  CFF5 F069          	movff	tablat,??_TCP_Snd+2
 22630  0040AA  0009               	tblrd		*+
 22631  0040AC  CFF5 F06A          	movff	tablat,??_TCP_Snd+3
 22632  0040B0  D008               	bra	u11350
 22633  0040B2                     u11357:
 22634  0040B2  CFF6 FFE9          	movff	tblptrl,fsr0l
 22635  0040B6  CFF7 FFEA          	movff	tblptrh,fsr0h
 22636  0040BA  CFEE F069          	movff	postinc0,??_TCP_Snd+2
 22637  0040BE  CFEE F06A          	movff	postinc0,??_TCP_Snd+3
 22638  0040C2                     u11350:
 22639  0040C2  0100               	movlb	0	; () banked
 22640  0040C4  519E               	movf	TCP_Snd@tcpDataLength& (0+255),w,b
 22641  0040C6  5D69               	subwf	(??_TCP_Snd+2)& (0+255),w,b
 22642  0040C8  519F               	movf	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 22643  0040CA  596A               	subwfb	(??_TCP_Snd+3)& (0+255),w,b
 22644  0040CC  E21E               	bc	l1214
 22645                           
 22646                           ; BSR set to: 0
 22647                           ;tcpv4.c: 233: {
 22648                           ;tcpv4.c: 234: tcpDataLength = tcbPtr->remoteWnd;
 22649  0040CE  0E18               	movlw	24
 22650  0040D0  2458               	addwf	TCP_Snd@tcbPtr,w,c
 22651  0040D2  6F67               	movwf	??_TCP_Snd& (0+255),b
 22652  0040D4  0E00               	movlw	0
 22653  0040D6  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 22654  0040D8  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 22655  0040DA  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 22656  0040DE  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 22657  0040E2  0E00               	movlw	low (__smallconst shr (0+16))
 22658  0040E4  6EF8               	movwf	tblptru,c
 22659  0040E6  0E0F               	movlw	(high __ramtop+-1)
 22660  0040E8  64F7               	cpfsgt	tblptrh,c
 22661  0040EA  D007               	bra	u11377
 22662  0040EC  0009               	tblrd		*+
 22663  0040EE  CFF5 F09E          	movff	tablat,TCP_Snd@tcpDataLength
 22664  0040F2  0009               	tblrd		*+
 22665  0040F4  CFF5 F09F          	movff	tablat,TCP_Snd@tcpDataLength+1
 22666  0040F8  D008               	bra	u11370
 22667  0040FA                     u11377:
 22668  0040FA  CFF6 FFE9          	movff	tblptrl,fsr0l
 22669  0040FE  CFF7 FFEA          	movff	tblptrh,fsr0h
 22670  004102  CFEE F09E          	movff	postinc0,TCP_Snd@tcpDataLength
 22671  004106  CFEE F09F          	movff	postinc0,TCP_Snd@tcpDataLength+1
 22672  00410A                     u11370:
 22673  00410A                     l1214:
 22674                           
 22675                           ;tcpv4.c: 235: }
 22676                           ;tcpv4.c: 237: if(tcpDataLength > tcbPtr->mss)
 22677  00410A  0E1C               	movlw	28
 22678  00410C  2458               	addwf	TCP_Snd@tcbPtr,w,c
 22679  00410E  0100               	movlb	0	; () banked
 22680  004110  6F67               	movwf	??_TCP_Snd& (0+255),b
 22681  004112  0E00               	movlw	0
 22682  004114  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 22683  004116  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 22684  004118  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 22685  00411C  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 22686  004120  0E00               	movlw	low (__smallconst shr (0+16))
 22687  004122  6EF8               	movwf	tblptru,c
 22688  004124  0E0F               	movlw	(high __ramtop+-1)
 22689  004126  64F7               	cpfsgt	tblptrh,c
 22690  004128  D007               	bra	u11387
 22691  00412A  0009               	tblrd		*+
 22692  00412C  CFF5 F069          	movff	tablat,??_TCP_Snd+2
 22693  004130  0009               	tblrd		*+
 22694  004132  CFF5 F06A          	movff	tablat,??_TCP_Snd+3
 22695  004136  D008               	bra	u11380
 22696  004138                     u11387:
 22697  004138  CFF6 FFE9          	movff	tblptrl,fsr0l
 22698  00413C  CFF7 FFEA          	movff	tblptrh,fsr0h
 22699  004140  CFEE F069          	movff	postinc0,??_TCP_Snd+2
 22700  004144  CFEE F06A          	movff	postinc0,??_TCP_Snd+3
 22701  004148                     u11380:
 22702  004148  0100               	movlb	0	; () banked
 22703  00414A  519E               	movf	TCP_Snd@tcpDataLength& (0+255),w,b
 22704  00414C  5D69               	subwf	(??_TCP_Snd+2)& (0+255),w,b
 22705  00414E  519F               	movf	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 22706  004150  596A               	subwfb	(??_TCP_Snd+3)& (0+255),w,b
 22707  004152  E21E               	bc	l1215
 22708                           
 22709                           ; BSR set to: 0
 22710                           ;tcpv4.c: 238: {
 22711                           ;tcpv4.c: 239: tcpDataLength = tcbPtr->mss;
 22712  004154  0E1C               	movlw	28
 22713  004156  2458               	addwf	TCP_Snd@tcbPtr,w,c
 22714  004158  6F67               	movwf	??_TCP_Snd& (0+255),b
 22715  00415A  0E00               	movlw	0
 22716  00415C  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 22717  00415E  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 22718  004160  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 22719  004164  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 22720  004168  0E00               	movlw	low (__smallconst shr (0+16))
 22721  00416A  6EF8               	movwf	tblptru,c
 22722  00416C  0E0F               	movlw	(high __ramtop+-1)
 22723  00416E  64F7               	cpfsgt	tblptrh,c
 22724  004170  D007               	bra	u11407
 22725  004172  0009               	tblrd		*+
 22726  004174  CFF5 F09E          	movff	tablat,TCP_Snd@tcpDataLength
 22727  004178  0009               	tblrd		*+
 22728  00417A  CFF5 F09F          	movff	tablat,TCP_Snd@tcpDataLength+1
 22729  00417E  D008               	bra	u11400
 22730  004180                     u11407:
 22731  004180  CFF6 FFE9          	movff	tblptrl,fsr0l
 22732  004184  CFF7 FFEA          	movff	tblptrh,fsr0h
 22733  004188  CFEE F09E          	movff	postinc0,TCP_Snd@tcpDataLength
 22734  00418C  CFEE F09F          	movff	postinc0,TCP_Snd@tcpDataLength+1
 22735  004190                     u11400:
 22736  004190                     l1215:
 22737                           
 22738                           ;tcpv4.c: 240: }
 22739                           ;tcpv4.c: 241: data = tcbPtr->txBufferPtr;
 22740  004190  0E25               	movlw	37
 22741  004192  2458               	addwf	TCP_Snd@tcbPtr,w,c
 22742  004194  0100               	movlb	0	; () banked
 22743  004196  6F67               	movwf	??_TCP_Snd& (0+255),b
 22744  004198  0E00               	movlw	0
 22745  00419A  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 22746  00419C  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 22747  00419E  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 22748  0041A2  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 22749  0041A6  0E00               	movlw	low (__smallconst shr (0+16))
 22750  0041A8  6EF8               	movwf	tblptru,c
 22751  0041AA  0E0F               	movlw	(high __ramtop+-1)
 22752  0041AC  64F7               	cpfsgt	tblptrh,c
 22753  0041AE  D007               	bra	u11417
 22754  0041B0  0009               	tblrd		*+
 22755  0041B2  CFF5 F097          	movff	tablat,TCP_Snd@data
 22756  0041B6  0009               	tblrd		*+
 22757  0041B8  CFF5 F098          	movff	tablat,TCP_Snd@data+1
 22758  0041BC  D008               	bra	u11410
 22759  0041BE                     u11417:
 22760  0041BE  CFF6 FFE9          	movff	tblptrl,fsr0l
 22761  0041C2  CFF7 FFEA          	movff	tblptrh,fsr0h
 22762  0041C6  CFEE F097          	movff	postinc0,TCP_Snd@data
 22763  0041CA  CFEE F098          	movff	postinc0,TCP_Snd@data+1
 22764  0041CE                     u11410:
 22765                           
 22766                           ;tcpv4.c: 244: tcbPtr->txBufferPtr = tcbPtr->txBufferPtr + tcpDataLength;
 22767  0041CE  0E25               	movlw	37
 22768  0041D0  2458               	addwf	TCP_Snd@tcbPtr,w,c
 22769  0041D2  0100               	movlb	0	; () banked
 22770  0041D4  6F67               	movwf	??_TCP_Snd& (0+255),b
 22771  0041D6  0E00               	movlw	0
 22772  0041D8  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 22773  0041DA  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 22774  0041DC  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 22775  0041E0  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 22776  0041E4  0E00               	movlw	low (__smallconst shr (0+16))
 22777  0041E6  6EF8               	movwf	tblptru,c
 22778  0041E8  0E0F               	movlw	(high __ramtop+-1)
 22779  0041EA  64F7               	cpfsgt	tblptrh,c
 22780  0041EC  D007               	bra	u11427
 22781  0041EE  0009               	tblrd		*+
 22782  0041F0  CFF5 F069          	movff	tablat,??_TCP_Snd+2
 22783  0041F4  0009               	tblrd		*+
 22784  0041F6  CFF5 F06A          	movff	tablat,??_TCP_Snd+3
 22785  0041FA  D008               	bra	u11420
 22786  0041FC                     u11427:
 22787  0041FC  CFF6 FFE9          	movff	tblptrl,fsr0l
 22788  004200  CFF7 FFEA          	movff	tblptrh,fsr0h
 22789  004204  CFEE F069          	movff	postinc0,??_TCP_Snd+2
 22790  004208  CFEE F06A          	movff	postinc0,??_TCP_Snd+3
 22791  00420C                     u11420:
 22792  00420C  0100               	movlb	0	; () banked
 22793  00420E  519E               	movf	TCP_Snd@tcpDataLength& (0+255),w,b
 22794  004210  2769               	addwf	(??_TCP_Snd+2)& (0+255),f,b
 22795  004212  519F               	movf	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 22796  004214  236A               	addwfc	(??_TCP_Snd+3)& (0+255),f,b
 22797  004216  0E25               	movlw	37
 22798  004218  2458               	addwf	TCP_Snd@tcbPtr,w,c
 22799  00421A  6F6B               	movwf	(??_TCP_Snd+4)& (0+255),b
 22800  00421C  0E00               	movlw	0
 22801  00421E  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 22802  004220  6F6C               	movwf	(??_TCP_Snd+5)& (0+255),b
 22803  004222  C06B  FFF6         	movff	??_TCP_Snd+4,tblptrl
 22804  004226  C06C  FFF7         	movff	??_TCP_Snd+5,tblptrh
 22805  00422A  0E00               	movlw	low (__smallconst shr (0+16))
 22806  00422C  6EF8               	movwf	tblptru,c
 22807  00422E  0E0F               	movlw	(high __ramtop+-1)
 22808  004230  64F7               	cpfsgt	tblptrh,c
 22809  004232  D007               	bra	u11437
 22810  004234  C069  FFF5         	movff	??_TCP_Snd+2,tablat
 22811  004238  000D               	tblwt		*+
 22812  00423A  C06A  FFF5         	movff	??_TCP_Snd+3,tablat
 22813  00423E  000C               	tblwt		*
 22814  004240  D008               	bra	u11430
 22815  004242                     u11437:
 22816  004242  CFF6 FFE9          	movff	tblptrl,fsr0l
 22817  004246  CFF7 FFEA          	movff	tblptrh,fsr0h
 22818  00424A  C069  FFEE         	movff	??_TCP_Snd+2,postinc0
 22819  00424E  C06A  FFEF         	movff	??_TCP_Snd+3,indf0
 22820  004252                     u11430:
 22821                           
 22822                           ;tcpv4.c: 245: tcbPtr->bytesToSend = tcbPtr->bytesToSend - tcpDataLength;
 22823  004252  0E27               	movlw	39
 22824  004254  2458               	addwf	TCP_Snd@tcbPtr,w,c
 22825  004256  0100               	movlb	0	; () banked
 22826  004258  6F67               	movwf	??_TCP_Snd& (0+255),b
 22827  00425A  0E00               	movlw	0
 22828  00425C  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 22829  00425E  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 22830  004260  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 22831  004264  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 22832  004268  0E00               	movlw	low (__smallconst shr (0+16))
 22833  00426A  6EF8               	movwf	tblptru,c
 22834  00426C  0E0F               	movlw	(high __ramtop+-1)
 22835  00426E  64F7               	cpfsgt	tblptrh,c
 22836  004270  D007               	bra	u11447
 22837  004272  0009               	tblrd		*+
 22838  004274  CFF5 F069          	movff	tablat,??_TCP_Snd+2
 22839  004278  0009               	tblrd		*+
 22840  00427A  CFF5 F06A          	movff	tablat,??_TCP_Snd+3
 22841  00427E  D008               	bra	u11440
 22842  004280                     u11447:
 22843  004280  CFF6 FFE9          	movff	tblptrl,fsr0l
 22844  004284  CFF7 FFEA          	movff	tblptrh,fsr0h
 22845  004288  CFEE F069          	movff	postinc0,??_TCP_Snd+2
 22846  00428C  CFEE F06A          	movff	postinc0,??_TCP_Snd+3
 22847  004290                     u11440:
 22848  004290  0100               	movlb	0	; () banked
 22849  004292  519E               	movf	TCP_Snd@tcpDataLength& (0+255),w,b
 22850  004294  5F69               	subwf	(??_TCP_Snd+2)& (0+255),f,b
 22851  004296  519F               	movf	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 22852  004298  5B6A               	subwfb	(??_TCP_Snd+3)& (0+255),f,b
 22853  00429A  0E27               	movlw	39
 22854  00429C  2458               	addwf	TCP_Snd@tcbPtr,w,c
 22855  00429E  6F6B               	movwf	(??_TCP_Snd+4)& (0+255),b
 22856  0042A0  0E00               	movlw	0
 22857  0042A2  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 22858  0042A4  6F6C               	movwf	(??_TCP_Snd+5)& (0+255),b
 22859  0042A6  C06B  FFF6         	movff	??_TCP_Snd+4,tblptrl
 22860  0042AA  C06C  FFF7         	movff	??_TCP_Snd+5,tblptrh
 22861  0042AE  0E00               	movlw	low (__smallconst shr (0+16))
 22862  0042B0  6EF8               	movwf	tblptru,c
 22863  0042B2  0E0F               	movlw	(high __ramtop+-1)
 22864  0042B4  64F7               	cpfsgt	tblptrh,c
 22865  0042B6  D007               	bra	u11457
 22866  0042B8  C069  FFF5         	movff	??_TCP_Snd+2,tablat
 22867  0042BC  000D               	tblwt		*+
 22868  0042BE  C06A  FFF5         	movff	??_TCP_Snd+3,tablat
 22869  0042C2  000C               	tblwt		*
 22870  0042C4  D008               	bra	u11450
 22871  0042C6                     u11457:
 22872  0042C6  CFF6 FFE9          	movff	tblptrl,fsr0l
 22873  0042CA  CFF7 FFEA          	movff	tblptrh,fsr0h
 22874  0042CE  C069  FFEE         	movff	??_TCP_Snd+2,postinc0
 22875  0042D2  C06A  FFEF         	movff	??_TCP_Snd+3,indf0
 22876  0042D6                     u11450:
 22877                           
 22878                           ;tcpv4.c: 247: if (tcbPtr->bytesToSend == 0)
 22879  0042D6  0E27               	movlw	39
 22880  0042D8  2458               	addwf	TCP_Snd@tcbPtr,w,c
 22881  0042DA  0100               	movlb	0	; () banked
 22882  0042DC  6F67               	movwf	??_TCP_Snd& (0+255),b
 22883  0042DE  0E00               	movlw	0
 22884  0042E0  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 22885  0042E2  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 22886  0042E4  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 22887  0042E8  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 22888  0042EC  0E00               	movlw	low (__smallconst shr (0+16))
 22889  0042EE  6EF8               	movwf	tblptru,c
 22890  0042F0  0E0F               	movlw	(high __ramtop+-1)
 22891  0042F2  64F7               	cpfsgt	tblptrh,c
 22892  0042F4  D007               	bra	u11467
 22893  0042F6  0009               	tblrd		*+
 22894  0042F8  CFF5 F069          	movff	tablat,??_TCP_Snd+2
 22895  0042FC  0009               	tblrd		*+
 22896  0042FE  CFF5 F06A          	movff	tablat,??_TCP_Snd+3
 22897  004302  D008               	bra	u11460
 22898  004304                     u11467:
 22899  004304  CFF6 FFE9          	movff	tblptrl,fsr0l
 22900  004308  CFF7 FFEA          	movff	tblptrh,fsr0h
 22901  00430C  CFEE F069          	movff	postinc0,??_TCP_Snd+2
 22902  004310  CFEE F06A          	movff	postinc0,??_TCP_Snd+3
 22903  004314                     u11460:
 22904  004314  0100               	movlb	0	; () banked
 22905  004316  5169               	movf	(??_TCP_Snd+2)& (0+255),w,b
 22906  004318  116A               	iorwf	(??_TCP_Snd+3)& (0+255),w,b
 22907  00431A  E11A               	bnz	l1212
 22908                           
 22909                           ; BSR set to: 0
 22910                           ;tcpv4.c: 248: {
 22911                           ;tcpv4.c: 249: tcbPtr->flags |= 0x08U;
 22912  00431C  0E35               	movlw	53
 22913  00431E  2458               	addwf	TCP_Snd@tcbPtr,w,c
 22914  004320  6F67               	movwf	??_TCP_Snd& (0+255),b
 22915  004322  0E00               	movlw	0
 22916  004324  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 22917  004326  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 22918  004328  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 22919  00432C  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 22920  004330  0E00               	movlw	low (__smallconst shr (0+16))
 22921  004332  6EF8               	movwf	tblptru,c
 22922  004334  0E0F               	movlw	(high __ramtop+-1)
 22923  004336  64F7               	cpfsgt	tblptrh,c
 22924  004338  D005               	bra	u11487
 22925  00433A  0E08               	movlw	8
 22926  00433C  0008               	tblrd		*
 22927  00433E  12F5               	iorwf	tablat,f,c
 22928  004340  000C               	tblwt		*
 22929  004342  D006               	bra	u11480
 22930  004344                     u11487:
 22931  004344  CFF6 FFE9          	movff	tblptrl,fsr0l
 22932  004348  CFF7 FFEA          	movff	tblptrh,fsr0h
 22933  00434C  0E08               	movlw	8
 22934  00434E  12EF               	iorwf	indf0,f,c
 22935  004350                     u11480:
 22936  004350                     l1212:
 22937                           
 22938                           ;tcpv4.c: 250: }
 22939                           ;tcpv4.c: 251: }
 22940                           ;tcpv4.c: 252: }
 22941                           ;tcpv4.c: 254: txHeader.flags = tcbPtr->flags;
 22942  004350  0E35               	movlw	53
 22943  004352  2458               	addwf	TCP_Snd@tcbPtr,w,c
 22944  004354  0100               	movlb	0	; () banked
 22945  004356  6F67               	movwf	??_TCP_Snd& (0+255),b
 22946  004358  0E00               	movlw	0
 22947  00435A  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 22948  00435C  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 22949  00435E  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 22950  004362  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 22951  004366  0E00               	movlw	low (__smallconst shr (0+16))
 22952  004368  6EF8               	movwf	tblptru,c
 22953  00436A  0E0F               	movlw	(high __ramtop+-1)
 22954  00436C  64F7               	cpfsgt	tblptrh,c
 22955  00436E  D003               	bra	u11497
 22956  004370  0008               	tblrd		*
 22957  004372  50F5               	movf	tablat,w,c
 22958  004374  D005               	bra	u11490
 22959  004376                     u11497:
 22960  004376  CFF6 FFE9          	movff	tblptrl,fsr0l
 22961  00437A  CFF7 FFEA          	movff	tblptrh,fsr0h
 22962  00437E  50EF               	movf	indf0,w,c
 22963  004380                     u11490:
 22964  004380  0100               	movlb	0	; () banked
 22965  004382  6FAD               	movwf	(TCP_Snd@txHeader+13)& (0+255),b
 22966                           
 22967                           ; BSR set to: 0
 22968                           ;tcpv4.c: 255: payloadLength = sizeof(tcpHeader_t) + tcpDataLength;
 22969  004384  0E14               	movlw	20
 22970  004386  259E               	addwf	TCP_Snd@tcpDataLength& (0+255),w,b
 22971  004388  6F9B               	movwf	TCP_Snd@payloadLength& (0+255),b
 22972  00438A  0E00               	movlw	0
 22973  00438C  219F               	addwfc	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 22974  00438E  6F9C               	movwf	(TCP_Snd@payloadLength+1)& (0+255),b
 22975                           
 22976                           ; BSR set to: 0
 22977                           ;tcpv4.c: 257: ret = IPv4_Start(tcbPtr->destIP, TCP);
 22978  004390  0E02               	movlw	2
 22979  004392  2458               	addwf	TCP_Snd@tcbPtr,w,c
 22980  004394  6F67               	movwf	??_TCP_Snd& (0+255),b
 22981  004396  0E00               	movlw	0
 22982  004398  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 22983  00439A  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 22984  00439C  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 22985  0043A0  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 22986  0043A4  0E00               	movlw	low (__smallconst shr (0+16))
 22987  0043A6  6EF8               	movwf	tblptru,c
 22988  0043A8  0E0F               	movlw	(high __ramtop+-1)
 22989  0043AA  64F7               	cpfsgt	tblptrh,c
 22990  0043AC  D00D               	bra	u11507
 22991  0043AE  0009               	tblrd		*+
 22992  0043B0  CFF5 F04B          	movff	tablat,IPv4_Start@destAddress
 22993  0043B4  0009               	tblrd		*+
 22994  0043B6  CFF5 F04C          	movff	tablat,IPv4_Start@destAddress+1
 22995  0043BA  0009               	tblrd		*+
 22996  0043BC  CFF5 F04D          	movff	tablat,IPv4_Start@destAddress+2
 22997  0043C0  0009               	tblrd		*+
 22998  0043C2  CFF5 F04E          	movff	tablat,IPv4_Start@destAddress+3
 22999  0043C6  D00C               	bra	u11500
 23000  0043C8                     u11507:
 23001  0043C8  CFF6 FFE9          	movff	tblptrl,fsr0l
 23002  0043CC  CFF7 FFEA          	movff	tblptrh,fsr0h
 23003  0043D0  CFEE F04B          	movff	postinc0,IPv4_Start@destAddress
 23004  0043D4  CFEE F04C          	movff	postinc0,IPv4_Start@destAddress+1
 23005  0043D8  CFEE F04D          	movff	postinc0,IPv4_Start@destAddress+2
 23006  0043DC  CFEE F04E          	movff	postinc0,IPv4_Start@destAddress+3
 23007  0043E0                     u11500:
 23008  0043E0  0E06               	movlw	6
 23009  0043E2  6E4F               	movwf	IPv4_Start@protocol,c
 23010  0043E4  EC79  F036         	call	_IPv4_Start	;wreg free
 23011  0043E8  6F9D               	movwf	TCP_Snd@ret& (0+255),b
 23012                           
 23013                           ; BSR set to: 0
 23014                           ;tcpv4.c: 258: if (ret)
 23015  0043EA  519D               	movf	TCP_Snd@ret& (0+255),w,b
 23016  0043EC  E041               	bz	l8448
 23017                           
 23018                           ; BSR set to: 0
 23019                           ;tcpv4.c: 259: {
 23020                           ;tcpv4.c: 260: ETH_WriteBlock((uint8_t *) &txHeader, sizeof(tcpHeader_t));
 23021  0043EE  0EA0               	movlw	low TCP_Snd@txHeader
 23022  0043F0  6E03               	movwf	ETH_WriteBlock@data,c
 23023  0043F2  6A04               	clrf	ETH_WriteBlock@data+1,c
 23024  0043F4  6A06               	clrf	ETH_WriteBlock@len+1,c
 23025  0043F6  0E14               	movlw	20
 23026  0043F8  6E05               	movwf	ETH_WriteBlock@len,c
 23027  0043FA  ECDF  F03F         	call	_ETH_WriteBlock	;wreg free
 23028                           
 23029                           ;tcpv4.c: 262: if (tcpDataLength > 0)
 23030  0043FE  0100               	movlb	0	; () banked
 23031  004400  519E               	movf	TCP_Snd@tcpDataLength& (0+255),w,b
 23032  004402  119F               	iorwf	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 23033  004404  E00A               	bz	l8440
 23034                           
 23035                           ; BSR set to: 0
 23036                           ;tcpv4.c: 263: {
 23037                           ;tcpv4.c: 264: ETH_WriteBlock( data, tcpDataLength);
 23038  004406  C097  F003         	movff	TCP_Snd@data,ETH_WriteBlock@data
 23039  00440A  C098  F004         	movff	TCP_Snd@data+1,ETH_WriteBlock@data+1
 23040  00440E  C09E  F005         	movff	TCP_Snd@tcpDataLength,ETH_WriteBlock@len
 23041  004412  C09F  F006         	movff	TCP_Snd@tcpDataLength+1,ETH_WriteBlock@len+1
 23042  004416  ECDF  F03F         	call	_ETH_WriteBlock	;wreg free
 23043  00441A                     l8440:
 23044                           
 23045                           ;tcpv4.c: 265: }
 23046                           ;tcpv4.c: 267: cksm = payloadLength + TCP;
 23047  00441A  0E06               	movlw	6
 23048  00441C  0100               	movlb	0	; () banked
 23049  00441E  259B               	addwf	TCP_Snd@payloadLength& (0+255),w,b
 23050  004420  6F99               	movwf	TCP_Snd@cksm& (0+255),b
 23051  004422  0E00               	movlw	0
 23052  004424  219C               	addwfc	(TCP_Snd@payloadLength+1)& (0+255),w,b
 23053  004426  6F9A               	movwf	(TCP_Snd@cksm+1)& (0+255),b
 23054                           
 23055                           ; BSR set to: 0
 23056                           ;tcpv4.c: 269: cksm = ETH_TxComputeChecksum(sizeof(ethernetFrame_t) + sizeof(ipv4Header_
      +                          t) - 8, payloadLength + 8, cksm);
 23057  004428  6A0E               	clrf	ETH_TxComputeChecksum@position+1,c
 23058  00442A  0E1A               	movlw	26
 23059  00442C  6E0D               	movwf	ETH_TxComputeChecksum@position,c
 23060  00442E  0E08               	movlw	8
 23061  004430  259B               	addwf	TCP_Snd@payloadLength& (0+255),w,b
 23062  004432  6E0F               	movwf	ETH_TxComputeChecksum@length,c
 23063  004434  0E00               	movlw	0
 23064  004436  219C               	addwfc	(TCP_Snd@payloadLength+1)& (0+255),w,b
 23065  004438  6E10               	movwf	ETH_TxComputeChecksum@length+1,c
 23066  00443A  C099  F011         	movff	TCP_Snd@cksm,ETH_TxComputeChecksum@seed
 23067  00443E  C09A  F012         	movff	TCP_Snd@cksm+1,ETH_TxComputeChecksum@seed+1
 23068  004442  ECDD  F03A         	call	_ETH_TxComputeChecksum	;wreg free
 23069  004446  C00D  F099         	movff	?_ETH_TxComputeChecksum,TCP_Snd@cksm
 23070  00444A  C00E  F09A         	movff	?_ETH_TxComputeChecksum+1,TCP_Snd@cksm+1
 23071                           
 23072                           ;tcpv4.c: 270: ETH_Insert((char *)&cksm, 2, sizeof(ethernetFrame_t) + sizeof(ipv4Header_
      +                          t) + (int)(((char*)&((tcpHeader_t *)1)->checksum)-1));
 23073  00444E  6A0C               	clrf	ETH_Insert@len+1,c
 23074  004450  0E02               	movlw	2
 23075  004452  6E0B               	movwf	ETH_Insert@len,c
 23076  004454  6A0E               	clrf	ETH_Insert@offset+1,c
 23077  004456  0E32               	movlw	50
 23078  004458  6E0D               	movwf	ETH_Insert@offset,c
 23079  00445A  0E99               	movlw	TCP_Snd@cksm& (0+255)
 23080  00445C  EC8A  F040         	call	_ETH_Insert
 23081                           
 23082                           ;tcpv4.c: 272: ret = IPV4_Send(payloadLength);
 23083  004460  C09B  F01D         	movff	TCP_Snd@payloadLength,IPV4_Send@payloadLength
 23084  004464  C09C  F01E         	movff	TCP_Snd@payloadLength+1,IPV4_Send@payloadLength+1
 23085  004468  EC76  F03F         	call	_IPV4_Send	;wreg free
 23086  00446C  0100               	movlb	0	; () banked
 23087  00446E  6F9D               	movwf	TCP_Snd@ret& (0+255),b
 23088  004470                     l8448:
 23089                           
 23090                           ; BSR set to: 0
 23091                           ;tcpv4.c: 273: }
 23092                           ;tcpv4.c: 277: if (ret == 0)
 23093  004470  519D               	movf	TCP_Snd@ret& (0+255),w,b
 23094  004472  E173               	bnz	l8454
 23095                           
 23096                           ; BSR set to: 0
 23097                           ;tcpv4.c: 278: {
 23098                           ;tcpv4.c: 281: tcbPtr->timeoutsCount = tcbPtr->timeoutsCount + 1;
 23099  004474  0E34               	movlw	52
 23100  004476  2458               	addwf	TCP_Snd@tcbPtr,w,c
 23101  004478  6F67               	movwf	??_TCP_Snd& (0+255),b
 23102  00447A  0E00               	movlw	0
 23103  00447C  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 23104  00447E  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 23105  004480  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 23106  004484  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 23107  004488  0E00               	movlw	low (__smallconst shr (0+16))
 23108  00448A  6EF8               	movwf	tblptru,c
 23109  00448C  0E0F               	movlw	(high __ramtop+-1)
 23110  00448E  64F7               	cpfsgt	tblptrh,c
 23111  004490  D003               	bra	u11547
 23112  004492  0008               	tblrd		*
 23113  004494  50F5               	movf	tablat,w,c
 23114  004496  D005               	bra	u11540
 23115  004498                     u11547:
 23116  004498  CFF6 FFE9          	movff	tblptrl,fsr0l
 23117  00449C  CFF7 FFEA          	movff	tblptrh,fsr0h
 23118  0044A0  50EF               	movf	indf0,w,c
 23119  0044A2                     u11540:
 23120  0044A2  0100               	movlb	0	; () banked
 23121  0044A4  6F69               	movwf	(??_TCP_Snd+2)& (0+255),b
 23122  0044A6  2B69               	incf	(??_TCP_Snd+2)& (0+255),f,b
 23123  0044A8  0E34               	movlw	52
 23124  0044AA  2458               	addwf	TCP_Snd@tcbPtr,w,c
 23125  0044AC  6F6A               	movwf	(??_TCP_Snd+3)& (0+255),b
 23126  0044AE  0E00               	movlw	0
 23127  0044B0  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 23128  0044B2  6F6B               	movwf	(??_TCP_Snd+4)& (0+255),b
 23129  0044B4  C06A  FFF6         	movff	??_TCP_Snd+3,tblptrl
 23130  0044B8  C06B  FFF7         	movff	??_TCP_Snd+4,tblptrh
 23131  0044BC  0E00               	movlw	low (__smallconst shr (0+16))
 23132  0044BE  6EF8               	movwf	tblptru,c
 23133  0044C0  0E0F               	movlw	(high __ramtop+-1)
 23134  0044C2  64F7               	cpfsgt	tblptrh,c
 23135  0044C4  D004               	bra	u11557
 23136  0044C6  C069  FFF5         	movff	??_TCP_Snd+2,tablat
 23137  0044CA  000C               	tblwt		*
 23138  0044CC  D006               	bra	u11550
 23139  0044CE                     u11557:
 23140  0044CE  CFF6 FFE9          	movff	tblptrl,fsr0l
 23141  0044D2  CFF7 FFEA          	movff	tblptrh,fsr0h
 23142  0044D6  C069  FFEF         	movff	??_TCP_Snd+2,indf0
 23143  0044DA                     u11550:
 23144                           
 23145                           ;tcpv4.c: 283: if (tcbPtr->timeout == 0)
 23146  0044DA  0E30               	movlw	48
 23147  0044DC  2458               	addwf	TCP_Snd@tcbPtr,w,c
 23148  0044DE  0100               	movlb	0	; () banked
 23149  0044E0  6F67               	movwf	??_TCP_Snd& (0+255),b
 23150  0044E2  0E00               	movlw	0
 23151  0044E4  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 23152  0044E6  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 23153  0044E8  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 23154  0044EC  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 23155  0044F0  0E00               	movlw	low (__smallconst shr (0+16))
 23156  0044F2  6EF8               	movwf	tblptru,c
 23157  0044F4  0E0F               	movlw	(high __ramtop+-1)
 23158  0044F6  64F7               	cpfsgt	tblptrh,c
 23159  0044F8  D007               	bra	u11567
 23160  0044FA  0009               	tblrd		*+
 23161  0044FC  CFF5 F069          	movff	tablat,??_TCP_Snd+2
 23162  004500  0009               	tblrd		*+
 23163  004502  CFF5 F06A          	movff	tablat,??_TCP_Snd+3
 23164  004506  D008               	bra	u11560
 23165  004508                     u11567:
 23166  004508  CFF6 FFE9          	movff	tblptrl,fsr0l
 23167  00450C  CFF7 FFEA          	movff	tblptrh,fsr0h
 23168  004510  CFEE F069          	movff	postinc0,??_TCP_Snd+2
 23169  004514  CFEE F06A          	movff	postinc0,??_TCP_Snd+3
 23170  004518                     u11560:
 23171  004518  0100               	movlb	0	; () banked
 23172  00451A  5169               	movf	(??_TCP_Snd+2)& (0+255),w,b
 23173  00451C  116A               	iorwf	(??_TCP_Snd+3)& (0+255),w,b
 23174  00451E  E17A               	bnz	l8456
 23175                           
 23176                           ; BSR set to: 0
 23177                           ;tcpv4.c: 284: {
 23178                           ;tcpv4.c: 285: tcbPtr->timeout = ((unsigned long)1*2);
 23179  004520  0E30               	movlw	48
 23180  004522  2458               	addwf	TCP_Snd@tcbPtr,w,c
 23181  004524  6F67               	movwf	??_TCP_Snd& (0+255),b
 23182  004526  0E00               	movlw	0
 23183  004528  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 23184  00452A  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 23185  00452C  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 23186  004530  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 23187  004534  0E00               	movlw	low (__smallconst shr (0+16))
 23188  004536  6EF8               	movwf	tblptru,c
 23189  004538  0E0F               	movlw	(high __ramtop+-1)
 23190  00453A  64F7               	cpfsgt	tblptrh,c
 23191  00453C  D006               	bra	u11587
 23192  00453E  0E02               	movlw	2
 23193  004540  6EF5               	movwf	tablat,c
 23194  004542  000D               	tblwt		*+
 23195  004544  6AF5               	clrf	tablat,c
 23196  004546  000C               	tblwt		*
 23197  004548  D007               	bra	u11580
 23198  00454A                     u11587:
 23199  00454A  CFF6 FFE9          	movff	tblptrl,fsr0l
 23200  00454E  CFF7 FFEA          	movff	tblptrh,fsr0h
 23201  004552  0E02               	movlw	2
 23202  004554  6EEE               	movwf	postinc0,c
 23203  004556  6AEF               	clrf	indf0,c
 23204  004558                     u11580:
 23205  004558  D05D               	goto	l8456
 23206  00455A                     l8454:
 23207                           
 23208                           ; BSR set to: 0
 23209                           ;tcpv4.c: 288: else
 23210                           ;tcpv4.c: 289: {
 23211                           ;tcpv4.c: 291: tcbPtr->localSeqno = tcbPtr->localSeqno + tcpDataLength;
 23212  00455A  0E10               	movlw	16
 23213  00455C  2458               	addwf	TCP_Snd@tcbPtr,w,c
 23214  00455E  6F67               	movwf	??_TCP_Snd& (0+255),b
 23215  004560  0E00               	movlw	0
 23216  004562  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 23217  004564  6F68               	movwf	(??_TCP_Snd+1)& (0+255),b
 23218  004566  C067  FFF6         	movff	??_TCP_Snd,tblptrl
 23219  00456A  C068  FFF7         	movff	??_TCP_Snd+1,tblptrh
 23220  00456E  0E00               	movlw	low (__smallconst shr (0+16))
 23221  004570  6EF8               	movwf	tblptru,c
 23222  004572  0E0F               	movlw	(high __ramtop+-1)
 23223  004574  64F7               	cpfsgt	tblptrh,c
 23224  004576  D00D               	bra	u11597
 23225  004578  0009               	tblrd		*+
 23226  00457A  CFF5 F069          	movff	tablat,??_TCP_Snd+2
 23227  00457E  0009               	tblrd		*+
 23228  004580  CFF5 F06A          	movff	tablat,??_TCP_Snd+3
 23229  004584  0009               	tblrd		*+
 23230  004586  CFF5 F06B          	movff	tablat,??_TCP_Snd+4
 23231  00458A  0009               	tblrd		*+
 23232  00458C  CFF5 F06C          	movff	tablat,??_TCP_Snd+5
 23233  004590  D00C               	bra	u11590
 23234  004592                     u11597:
 23235  004592  CFF6 FFE9          	movff	tblptrl,fsr0l
 23236  004596  CFF7 FFEA          	movff	tblptrh,fsr0h
 23237  00459A  CFEE F069          	movff	postinc0,??_TCP_Snd+2
 23238  00459E  CFEE F06A          	movff	postinc0,??_TCP_Snd+3
 23239  0045A2  CFEE F06B          	movff	postinc0,??_TCP_Snd+4
 23240  0045A6  CFEE F06C          	movff	postinc0,??_TCP_Snd+5
 23241  0045AA                     u11590:
 23242  0045AA  0100               	movlb	0	; () banked
 23243  0045AC  519E               	movf	TCP_Snd@tcpDataLength& (0+255),w,b
 23244  0045AE  2569               	addwf	(??_TCP_Snd+2)& (0+255),w,b
 23245  0045B0  6F6D               	movwf	(??_TCP_Snd+6)& (0+255),b
 23246  0045B2  519F               	movf	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 23247  0045B4  216A               	addwfc	(??_TCP_Snd+3)& (0+255),w,b
 23248  0045B6  6F6E               	movwf	(??_TCP_Snd+7)& (0+255),b
 23249  0045B8  0E00               	movlw	0
 23250  0045BA  216B               	addwfc	(??_TCP_Snd+4)& (0+255),w,b
 23251  0045BC  6F6F               	movwf	(??_TCP_Snd+8)& (0+255),b
 23252  0045BE  0E00               	movlw	0
 23253  0045C0  216C               	addwfc	(??_TCP_Snd+5)& (0+255),w,b
 23254  0045C2  6F70               	movwf	(??_TCP_Snd+9)& (0+255),b
 23255  0045C4  0E10               	movlw	16
 23256  0045C6  2458               	addwf	TCP_Snd@tcbPtr,w,c
 23257  0045C8  6F71               	movwf	(??_TCP_Snd+10)& (0+255),b
 23258  0045CA  0E00               	movlw	0
 23259  0045CC  2059               	addwfc	TCP_Snd@tcbPtr+1,w,c
 23260  0045CE  6F72               	movwf	(??_TCP_Snd+11)& (0+255),b
 23261  0045D0  C071  FFF6         	movff	??_TCP_Snd+10,tblptrl
 23262  0045D4  C072  FFF7         	movff	??_TCP_Snd+11,tblptrh
 23263  0045D8  0E00               	movlw	low (__smallconst shr (0+16))
 23264  0045DA  6EF8               	movwf	tblptru,c
 23265  0045DC  0E0F               	movlw	(high __ramtop+-1)
 23266  0045DE  64F7               	cpfsgt	tblptrh,c
 23267  0045E0  D00D               	bra	u11607
 23268  0045E2  C06D  FFF5         	movff	??_TCP_Snd+6,tablat
 23269  0045E6  000D               	tblwt		*+
 23270  0045E8  C06E  FFF5         	movff	??_TCP_Snd+7,tablat
 23271  0045EC  000D               	tblwt		*+
 23272  0045EE  C06F  FFF5         	movff	??_TCP_Snd+8,tablat
 23273  0045F2  000D               	tblwt		*+
 23274  0045F4  C070  FFF5         	movff	??_TCP_Snd+9,tablat
 23275  0045F8  000C               	tblwt		*
 23276  0045FA  D00C               	bra	u11600
 23277  0045FC                     u11607:
 23278  0045FC  CFF6 FFE9          	movff	tblptrl,fsr0l
 23279  004600  CFF7 FFEA          	movff	tblptrh,fsr0h
 23280  004604  C06D  FFEE         	movff	??_TCP_Snd+6,postinc0
 23281  004608  C06E  FFEE         	movff	??_TCP_Snd+7,postinc0
 23282  00460C  C06F  FFEE         	movff	??_TCP_Snd+8,postinc0
 23283  004610  C070  FFEF         	movff	??_TCP_Snd+9,indf0
 23284  004614                     u11600:
 23285  004614                     l8456:
 23286                           
 23287                           ;tcpv4.c: 293: }
 23288                           ;tcpv4.c: 295: return ret;
 23289  004614  0100               	movlb	0	; () banked
 23290  004616  519D               	movf	TCP_Snd@ret& (0+255),w,b
 23291                           
 23292                           ; BSR set to: 0
 23293  004618  0012               	return		;funcret
 23294  00461A                     __end_of_TCP_Snd:
 23295                           	opt stack 0
 23296                           tosu	equ	0xFFF
 23297                           tosh	equ	0xFFE
 23298                           tosl	equ	0xFFD
 23299                           pclath	equ	0xFFA
 23300                           tblptru	equ	0xFF8
 23301                           tblptrh	equ	0xFF7
 23302                           tblptrl	equ	0xFF6
 23303                           tablat	equ	0xFF5
 23304                           prodh	equ	0xFF4
 23305                           prodl	equ	0xFF3
 23306                           intcon	equ	0xFF2
 23307                           intcon2	equ	0xFF1
 23308                           indf0	equ	0xFEF
 23309                           postinc0	equ	0xFEE
 23310                           fsr0h	equ	0xFEA
 23311                           fsr0l	equ	0xFE9
 23312                           wreg	equ	0xFE8
 23313                           postinc1	equ	0xFE6
 23314                           postdec1	equ	0xFE5
 23315                           plusw1	equ	0xFE3
 23316                           fsr1h	equ	0xFE2
 23317                           fsr1l	equ	0xFE1
 23318                           indf2	equ	0xFDF
 23319                           postinc2	equ	0xFDE
 23320                           postdec2	equ	0xFDD
 23321                           plusw2	equ	0xFDB
 23322                           fsr2h	equ	0xFDA
 23323                           fsr2l	equ	0xFD9
 23324                           status	equ	0xFD8
 23325                           
 23326 ;; *************** function _IPv4_Start *****************
 23327 ;; Defined at:
 23328 ;;		line 213 in file "../../TCPIP Library/source/ipv4.c"
 23329 ;; Parameters:    Size  Location     Type
 23330 ;;  destAddress     4   74[COMRAM] unsigned long 
 23331 ;;  protocol        1   78[COMRAM] enum E6803
 23332 ;; Auto vars:     Size  Location     Type
 23333 ;;  targetAddres    4    0[BANK0 ] unsigned long 
 23334 ;;  macAddress      2    4[BANK0 ] PTR const struct .
 23335 ;;		 -> arpMap.macAddress(6), broadcastMAC(6), arpMap(104), NULL(0), 
 23336 ;;  ret             1    6[BANK0 ] enum E6944
 23337 ;; Return value:  Size  Location     Type
 23338 ;;                  1    wreg      enum E366
 23339 ;; Registers used:
 23340 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23341 ;; Tracked objects:
 23342 ;;		On entry : 0/0
 23343 ;;		On exit  : F/0
 23344 ;;		Unchanged: 0/0
 23345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23346 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23347 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23348 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23349 ;;      Totals:        13       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23350 ;;Total ram usage:       20 bytes
 23351 ;; Hardware stack levels used:    1
 23352 ;; Hardware stack levels required when called:    8
 23353 ;; This function calls:
 23354 ;;		_ARPV4_Lookup
 23355 ;;		_ARPV4_Request
 23356 ;;		_ETH_Write16
 23357 ;;		_ETH_Write32
 23358 ;;		_ETH_Write8
 23359 ;;		_ETH_WriteStart
 23360 ;; This function is called by:
 23361 ;;		_ICMP_EchoReply
 23362 ;;		_TCP_Snd
 23363 ;;		_UDP_Start
 23364 ;; This function uses a non-reentrant model
 23365 ;;
 23366                           
 23367                           	psect	text88
 23368  006CF2                     __ptext88:
 23369                           	opt stack 0
 23370  006CF2                     _IPv4_Start:
 23371                           	opt stack 18
 23372                           
 23373                           ;ipv4.c: 215: error_msg ret = ERROR;
 23374                           
 23375                           ; BSR set to: 0
 23376                           ;incstack = 0
 23377  006CF2  0100               	movlb	0	; () banked
 23378  006CF4  6B66               	clrf	IPv4_Start@ret& (0+255),b
 23379                           
 23380                           ; BSR set to: 0
 23381                           ;ipv4.c: 217: const mac48Address_t *macAddress;
 23382                           ;ipv4.c: 218: uint32_t targetAddress;
 23383                           ;ipv4.c: 221: if(((ipv4Address != 0) || (protocol == UDP))
 23384                           ;ipv4.c: 222: && (ipv4Address != 0x7F000001))
 23385  006CF6  0101               	movlb	1	; () banked
 23386  006CF8  518E               	movf	_ipv4Address& (0+255),w,b
 23387  006CFA  118F               	iorwf	(_ipv4Address+1)& (0+255),w,b
 23388  006CFC  1190               	iorwf	(_ipv4Address+2)& (0+255),w,b
 23389  006CFE  1191               	iorwf	(_ipv4Address+3)& (0+255),w,b
 23390  006D00  E103               	bnz	l8288
 23391                           
 23392                           ; BSR set to: 1
 23393  006D02  0E11               	movlw	17
 23394  006D04  184F               	xorwf	IPv4_Start@protocol,w,c
 23395  006D06  E162               	bnz	l8302
 23396  006D08                     l8288:
 23397                           
 23398                           ; BSR set to: 1
 23399  006D08  058E               	decf	_ipv4Address& (0+255),w,b
 23400  006D0A  E105               	bnz	u11030
 23401  006D0C  0E7F               	movlw	127
 23402  006D0E  1991               	xorwf	(_ipv4Address+3)& (0+255),w,b
 23403  006D10  118F               	iorwf	(_ipv4Address+1)& (0+255),w,b
 23404  006D12  1190               	iorwf	(_ipv4Address+2)& (0+255),w,b
 23405  006D14  E05B               	bz	l8302
 23406  006D16                     u11030:
 23407                           
 23408                           ; BSR set to: 1
 23409                           ;ipv4.c: 223: {
 23410                           ;ipv4.c: 224: if(destAddress != 0xFFFFFFFF)
 23411  006D16  284B               	incf	IPv4_Start@destAddress,w,c
 23412  006D18  E106               	bnz	u11040
 23413  006D1A  284C               	incf	IPv4_Start@destAddress+1,w,c
 23414  006D1C  E104               	bnz	u11040
 23415  006D1E  284D               	incf	IPv4_Start@destAddress+2,w,c
 23416  006D20  E102               	bnz	u11040
 23417  006D22  284E               	incf	IPv4_Start@destAddress+3,w,c
 23418  006D24  E056               	bz	l8306
 23419  006D26                     u11040:
 23420                           
 23421                           ; BSR set to: 1
 23422                           ;ipv4.c: 225: {
 23423                           ;ipv4.c: 226: if((ipv4SubnetMask & destAddress) == (ipv4SubnetMask & ipv4Address))
 23424  006D26  518E               	movf	_ipv4Address& (0+255),w,b
 23425  006D28  1592               	andwf	_ipv4SubnetMask& (0+255),w,b
 23426  006D2A  6E50               	movwf	??_IPv4_Start& (0+255),c
 23427  006D2C  518F               	movf	(_ipv4Address+1)& (0+255),w,b
 23428  006D2E  1593               	andwf	(_ipv4SubnetMask+1)& (0+255),w,b
 23429  006D30  6E51               	movwf	(??_IPv4_Start+1)& (0+255),c
 23430  006D32  5190               	movf	(_ipv4Address+2)& (0+255),w,b
 23431  006D34  1594               	andwf	(_ipv4SubnetMask+2)& (0+255),w,b
 23432  006D36  6E52               	movwf	(??_IPv4_Start+2)& (0+255),c
 23433  006D38  5191               	movf	(_ipv4Address+3)& (0+255),w,b
 23434  006D3A  1595               	andwf	(_ipv4SubnetMask+3)& (0+255),w,b
 23435  006D3C  6E53               	movwf	(??_IPv4_Start+3)& (0+255),c
 23436  006D3E  504B               	movf	IPv4_Start@destAddress,w,c
 23437  006D40  1592               	andwf	_ipv4SubnetMask& (0+255),w,b
 23438  006D42  6E54               	movwf	(??_IPv4_Start+4)& (0+255),c
 23439  006D44  504C               	movf	IPv4_Start@destAddress+1,w,c
 23440  006D46  1593               	andwf	(_ipv4SubnetMask+1)& (0+255),w,b
 23441  006D48  6E55               	movwf	(??_IPv4_Start+5)& (0+255),c
 23442  006D4A  504D               	movf	IPv4_Start@destAddress+2,w,c
 23443  006D4C  1594               	andwf	(_ipv4SubnetMask+2)& (0+255),w,b
 23444  006D4E  6E56               	movwf	(??_IPv4_Start+6)& (0+255),c
 23445  006D50  504E               	movf	IPv4_Start@destAddress+3,w,c
 23446  006D52  1595               	andwf	(_ipv4SubnetMask+3)& (0+255),w,b
 23447  006D54  6E57               	movwf	(??_IPv4_Start+7)& (0+255),c
 23448  006D56  5050               	movf	??_IPv4_Start,w,c
 23449  006D58  1854               	xorwf	??_IPv4_Start+4,w,c
 23450  006D5A  E112               	bnz	l1035
 23451  006D5C  5051               	movf	??_IPv4_Start+1,w,c
 23452  006D5E  1855               	xorwf	??_IPv4_Start+5,w,c
 23453  006D60  E10F               	bnz	l1035
 23454  006D62  5052               	movf	??_IPv4_Start+2,w,c
 23455  006D64  1856               	xorwf	??_IPv4_Start+6,w,c
 23456  006D66  E10C               	bnz	l1035
 23457  006D68  5053               	movf	??_IPv4_Start+3,w,c
 23458  006D6A  1857               	xorwf	??_IPv4_Start+7,w,c
 23459  006D6C  E109               	bnz	l1035
 23460                           
 23461                           ; BSR set to: 1
 23462                           ;ipv4.c: 227: {
 23463                           ;ipv4.c: 228: targetAddress = destAddress;
 23464  006D6E  C04B  F060         	movff	IPv4_Start@destAddress,IPv4_Start@targetAddress
 23465  006D72  C04C  F061         	movff	IPv4_Start@destAddress+1,IPv4_Start@targetAddress+1
 23466  006D76  C04D  F062         	movff	IPv4_Start@destAddress+2,IPv4_Start@targetAddress+2
 23467  006D7A  C04E  F063         	movff	IPv4_Start@destAddress+3,IPv4_Start@targetAddress+3
 23468                           
 23469                           ;ipv4.c: 229: }
 23470  006D7E  D008               	goto	l8296
 23471  006D80                     l1035:
 23472                           
 23473                           ; BSR set to: 1
 23474                           ;ipv4.c: 230: else
 23475                           ;ipv4.c: 231: {
 23476                           ;ipv4.c: 232: targetAddress = ipv4Router;
 23477  006D80  C22A  F060         	movff	_ipv4Router,IPv4_Start@targetAddress
 23478  006D84  C22B  F061         	movff	_ipv4Router+1,IPv4_Start@targetAddress+1
 23479  006D88  C22C  F062         	movff	_ipv4Router+2,IPv4_Start@targetAddress+2
 23480  006D8C  C22D  F063         	movff	_ipv4Router+3,IPv4_Start@targetAddress+3
 23481  006D90                     l8296:
 23482                           
 23483                           ; BSR set to: 1
 23484                           ;ipv4.c: 233: }
 23485                           ;ipv4.c: 235: macAddress= ARPV4_Lookup(targetAddress);
 23486  006D90  C060  F002         	movff	IPv4_Start@targetAddress,ARPV4_Lookup@ip_address
 23487  006D94  C061  F003         	movff	IPv4_Start@targetAddress+1,ARPV4_Lookup@ip_address+1
 23488  006D98  C062  F004         	movff	IPv4_Start@targetAddress+2,ARPV4_Lookup@ip_address+2
 23489  006D9C  C063  F005         	movff	IPv4_Start@targetAddress+3,ARPV4_Lookup@ip_address+3
 23490  006DA0  EC03  F041         	call	_ARPV4_Lookup	;wreg free
 23491  006DA4  C002  F064         	movff	?_ARPV4_Lookup,IPv4_Start@macAddress
 23492  006DA8  C003  F065         	movff	?_ARPV4_Lookup+1,IPv4_Start@macAddress+1
 23493                           
 23494                           ; BSR set to: 1
 23495                           ;ipv4.c: 236: if(macAddress == 0)
 23496  006DAC  0100               	movlb	0	; () banked
 23497  006DAE  5164               	movf	IPv4_Start@macAddress& (0+255),w,b
 23498  006DB0  1165               	iorwf	(IPv4_Start@macAddress+1)& (0+255),w,b
 23499  006DB2  E116               	bnz	l8308
 23500                           
 23501                           ; BSR set to: 0
 23502                           ;ipv4.c: 237: {
 23503                           ;ipv4.c: 238: ret = ARPV4_Request(targetAddress);
 23504  006DB4  C060  F00F         	movff	IPv4_Start@targetAddress,ARPV4_Request@destAddress
 23505  006DB8  C061  F010         	movff	IPv4_Start@targetAddress+1,ARPV4_Request@destAddress+1
 23506  006DBC  C062  F011         	movff	IPv4_Start@targetAddress+2,ARPV4_Request@destAddress+2
 23507  006DC0  C063  F012         	movff	IPv4_Start@targetAddress+3,ARPV4_Request@destAddress+3
 23508  006DC4  ECD1  F034         	call	_ARPV4_Request	;wreg free
 23509  006DC8  0100               	movlb	0	; () banked
 23510  006DCA  6F66               	movwf	IPv4_Start@ret& (0+255),b
 23511  006DCC                     l8302:
 23512                           
 23513                           ;ipv4.c: 239: return ret;
 23514  006DCC  0100               	movlb	0	; () banked
 23515  006DCE  5166               	movf	IPv4_Start@ret& (0+255),w,b
 23516  006DD0  0012               	return	
 23517  006DD2                     l8306:
 23518                           
 23519                           ; BSR set to: 1
 23520                           ;ipv4.c: 242: else
 23521                           ;ipv4.c: 243: {
 23522                           ;ipv4.c: 244: macAddress = &broadcastMAC;
 23523  006DD2  0E28               	movlw	low _broadcastMAC
 23524  006DD4  0100               	movlb	0	; () banked
 23525  006DD6  6F64               	movwf	IPv4_Start@macAddress& (0+255),b
 23526  006DD8  5164               	movf	IPv4_Start@macAddress& (0+255),w,b
 23527  006DDA  A4D8               	btfss	status,2,c
 23528  006DDC  0E10               	movlw	high __smallconst
 23529  006DDE  6F65               	movwf	(IPv4_Start@macAddress+1)& (0+255),b
 23530  006DE0                     l8308:
 23531                           
 23532                           ; BSR set to: 0
 23533                           ;ipv4.c: 245: }
 23534                           ;ipv4.c: 246: ret = ETH_WriteStart(macAddress, 0x0800);
 23535  006DE0  C064  F00B         	movff	IPv4_Start@macAddress,ETH_WriteStart@destMAC
 23536  006DE4  C065  F00C         	movff	IPv4_Start@macAddress+1,ETH_WriteStart@destMAC+1
 23537  006DE8  0E08               	movlw	8
 23538  006DEA  6E0E               	movwf	ETH_WriteStart@type+1,c
 23539  006DEC  6A0D               	clrf	ETH_WriteStart@type,c
 23540  006DEE  EC60  F040         	call	_ETH_WriteStart	;wreg free
 23541  006DF2  0100               	movlb	0	; () banked
 23542  006DF4  6F66               	movwf	IPv4_Start@ret& (0+255),b
 23543                           
 23544                           ; BSR set to: 0
 23545                           ;ipv4.c: 247: if(ret == SUCCESS)
 23546  006DF6  0566               	decf	IPv4_Start@ret& (0+255),w,b
 23547  006DF8  E1E9               	bnz	l8302
 23548                           
 23549                           ; BSR set to: 0
 23550                           ;ipv4.c: 248: {
 23551                           ;ipv4.c: 249: ETH_Write16(0x4500);
 23552  006DFA  0E45               	movlw	69
 23553  006DFC  6E04               	movwf	ETH_Write16@data+1,c
 23554  006DFE  6A03               	clrf	ETH_Write16@data,c
 23555  006E00  ECE1  F044         	call	_ETH_Write16	;wreg free
 23556                           
 23557                           ;ipv4.c: 250: ETH_Write16(0);
 23558  006E04  6A04               	clrf	ETH_Write16@data+1,c
 23559  006E06  6A03               	clrf	ETH_Write16@data,c
 23560  006E08  ECE1  F044         	call	_ETH_Write16	;wreg free
 23561                           
 23562                           ;ipv4.c: 251: ETH_Write32(0xAA554000);
 23563  006E0C  6A03               	clrf	ETH_Write32@data,c
 23564  006E0E  0E40               	movlw	64
 23565  006E10  6E04               	movwf	ETH_Write32@data+1,c
 23566  006E12  0E55               	movlw	85
 23567  006E14  6E05               	movwf	ETH_Write32@data+2,c
 23568  006E16  0EAA               	movlw	170
 23569  006E18  6E06               	movwf	ETH_Write32@data+3,c
 23570  006E1A  ECAE  F043         	call	_ETH_Write32	;wreg free
 23571                           
 23572                           ;ipv4.c: 252: ETH_Write8(64u);
 23573  006E1E  0E40               	movlw	64
 23574  006E20  EC85  F045         	call	_ETH_Write8
 23575                           
 23576                           ;ipv4.c: 253: ETH_Write8(protocol);
 23577  006E24  504F               	movf	IPv4_Start@protocol,w,c
 23578  006E26  EC85  F045         	call	_ETH_Write8
 23579                           
 23580                           ;ipv4.c: 254: ETH_Write16(0);
 23581  006E2A  6A04               	clrf	ETH_Write16@data+1,c
 23582  006E2C  6A03               	clrf	ETH_Write16@data,c
 23583  006E2E  ECE1  F044         	call	_ETH_Write16	;wreg free
 23584                           
 23585                           ;ipv4.c: 255: ETH_Write32(ipv4Address);
 23586  006E32  C18E  F003         	movff	_ipv4Address,ETH_Write32@data
 23587  006E36  C18F  F004         	movff	_ipv4Address+1,ETH_Write32@data+1
 23588  006E3A  C190  F005         	movff	_ipv4Address+2,ETH_Write32@data+2
 23589  006E3E  C191  F006         	movff	_ipv4Address+3,ETH_Write32@data+3
 23590  006E42  ECAE  F043         	call	_ETH_Write32	;wreg free
 23591                           
 23592                           ;ipv4.c: 256: ETH_Write32(destAddress);
 23593  006E46  C04B  F003         	movff	IPv4_Start@destAddress,ETH_Write32@data
 23594  006E4A  C04C  F004         	movff	IPv4_Start@destAddress+1,ETH_Write32@data+1
 23595  006E4E  C04D  F005         	movff	IPv4_Start@destAddress+2,ETH_Write32@data+2
 23596  006E52  C04E  F006         	movff	IPv4_Start@destAddress+3,ETH_Write32@data+3
 23597  006E56  ECAE  F043         	call	_ETH_Write32	;wreg free
 23598                           
 23599                           ;ipv4.c: 259: ipv4Header.srcIpAddress = ipv4Address;
 23600  006E5A  C18E  F1B4         	movff	_ipv4Address,_ipv4Header+12
 23601  006E5E  C18F  F1B5         	movff	_ipv4Address+1,_ipv4Header+13
 23602  006E62  C190  F1B6         	movff	_ipv4Address+2,_ipv4Header+14
 23603  006E66  C191  F1B7         	movff	_ipv4Address+3,_ipv4Header+15
 23604                           
 23605                           ;ipv4.c: 260: ipv4Header.dstIpAddress = destAddress;
 23606  006E6A  C04B  F1B8         	movff	IPv4_Start@destAddress,_ipv4Header+16
 23607  006E6E  C04C  F1B9         	movff	IPv4_Start@destAddress+1,_ipv4Header+17
 23608  006E72  C04D  F1BA         	movff	IPv4_Start@destAddress+2,_ipv4Header+18
 23609  006E76  C04E  F1BB         	movff	IPv4_Start@destAddress+3,_ipv4Header+19
 23610                           
 23611                           ;ipv4.c: 261: ipv4Header.protocol = protocol;
 23612  006E7A  C04F  F1B1         	movff	IPv4_Start@protocol,_ipv4Header+9
 23613  006E7E  D7A6               	goto	l8302
 23614  006E80                     __end_of_IPv4_Start:
 23615                           	opt stack 0
 23616                           tosu	equ	0xFFF
 23617                           tosh	equ	0xFFE
 23618                           tosl	equ	0xFFD
 23619                           pclath	equ	0xFFA
 23620                           tblptru	equ	0xFF8
 23621                           tblptrh	equ	0xFF7
 23622                           tblptrl	equ	0xFF6
 23623                           tablat	equ	0xFF5
 23624                           prodh	equ	0xFF4
 23625                           prodl	equ	0xFF3
 23626                           intcon	equ	0xFF2
 23627                           intcon2	equ	0xFF1
 23628                           indf0	equ	0xFEF
 23629                           postinc0	equ	0xFEE
 23630                           fsr0h	equ	0xFEA
 23631                           fsr0l	equ	0xFE9
 23632                           wreg	equ	0xFE8
 23633                           postinc1	equ	0xFE6
 23634                           postdec1	equ	0xFE5
 23635                           plusw1	equ	0xFE3
 23636                           fsr1h	equ	0xFE2
 23637                           fsr1l	equ	0xFE1
 23638                           indf2	equ	0xFDF
 23639                           postinc2	equ	0xFDE
 23640                           postdec2	equ	0xFDD
 23641                           plusw2	equ	0xFDB
 23642                           fsr2h	equ	0xFDA
 23643                           fsr2l	equ	0xFD9
 23644                           status	equ	0xFD8
 23645                           
 23646 ;; *************** function _ETH_Write8 *****************
 23647 ;; Defined at:
 23648 ;;		line 334 in file "../../TCPIP Library/ethernet_drivers/encX24j600_spi.c"
 23649 ;; Parameters:    Size  Location     Type
 23650 ;;  data            1    wreg     unsigned char 
 23651 ;; Auto vars:     Size  Location     Type
 23652 ;;  data            1    2[COMRAM] unsigned char 
 23653 ;; Return value:  Size  Location     Type
 23654 ;;		None               void
 23655 ;; Registers used:
 23656 ;;		wreg, status,2, status,0, cstack
 23657 ;; Tracked objects:
 23658 ;;		On entry : 0/0
 23659 ;;		On exit  : 0/0
 23660 ;;		Unchanged: 0/0
 23661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23663 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23665 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23666 ;;Total ram usage:        1 bytes
 23667 ;; Hardware stack levels used:    1
 23668 ;; Hardware stack levels required when called:    4
 23669 ;; This function calls:
 23670 ;;		_SPI_ExchangeByte
 23671 ;; This function is called by:
 23672 ;;		_DHCP_Request
 23673 ;;		_DHCP_WriteZeros
 23674 ;;		_IPv4_Start
 23675 ;; This function uses a non-reentrant model
 23676 ;;
 23677                           
 23678                           	psect	text89
 23679  008B0A                     __ptext89:
 23680                           	opt stack 0
 23681  008B0A                     _ETH_Write8:
 23682                           	opt stack 21
 23683                           
 23684                           ; BSR set to: 0
 23685                           ;incstack = 0
 23686                           ;ETH_Write8@data stored from wreg
 23687  008B0A  6E03               	movwf	ETH_Write8@data,c
 23688                           
 23689                           ;encX24j600_spi.c: 336: do{LATB3 = 0;} while(0);
 23690  008B0C  968A               	bcf	3978,3,c	;volatile
 23691                           
 23692                           ;encX24j600_spi.c: 337: TXPacketSize += 1;
 23693  008B0E  0101               	movlb	1	; () banked
 23694  008B10  4B9A               	infsnz	_TXPacketSize& (0+255),f,b
 23695  008B12  2B9B               	incf	(_TXPacketSize+1)& (0+255),f,b
 23696                           
 23697                           ; BSR set to: 1
 23698                           ;encX24j600_spi.c: 338: SPI_ExchangeByte(wgpdata_inst);
 23699  008B14  0E2A               	movlw	42
 23700  008B16  ECEE  F045         	call	_SPI_ExchangeByte
 23701                           
 23702                           ;encX24j600_spi.c: 339: SPI_ExchangeByte(data);
 23703  008B1A  5003               	movf	ETH_Write8@data,w,c
 23704  008B1C  ECEE  F045         	call	_SPI_ExchangeByte
 23705  008B20  868A               	bsf	3978,3,c	;volatile
 23706  008B22  0012               	return		;funcret
 23707  008B24                     __end_of_ETH_Write8:
 23708                           	opt stack 0
 23709                           tosu	equ	0xFFF
 23710                           tosh	equ	0xFFE
 23711                           tosl	equ	0xFFD
 23712                           pclath	equ	0xFFA
 23713                           tblptru	equ	0xFF8
 23714                           tblptrh	equ	0xFF7
 23715                           tblptrl	equ	0xFF6
 23716                           tablat	equ	0xFF5
 23717                           prodh	equ	0xFF4
 23718                           prodl	equ	0xFF3
 23719                           intcon	equ	0xFF2
 23720                           intcon2	equ	0xFF1
 23721                           indf0	equ	0xFEF
 23722                           postinc0	equ	0xFEE
 23723                           fsr0h	equ	0xFEA
 23724                           fsr0l	equ	0xFE9
 23725                           wreg	equ	0xFE8
 23726                           postinc1	equ	0xFE6
 23727                           postdec1	equ	0xFE5
 23728                           plusw1	equ	0xFE3
 23729                           fsr1h	equ	0xFE2
 23730                           fsr1l	equ	0xFE1
 23731                           indf2	equ	0xFDF
 23732                           postinc2	equ	0xFDE
 23733                           postdec2	equ	0xFDD
 23734                           plusw2	equ	0xFDB
 23735                           fsr2h	equ	0xFDA
 23736                           fsr2l	equ	0xFD9
 23737                           status	equ	0xFD8
 23738                           
 23739 ;; *************** function _ETH_Write32 *****************
 23740 ;; Defined at:
 23741 ;;		line 376 in file "../../TCPIP Library/ethernet_drivers/encX24j600_spi.c"
 23742 ;; Parameters:    Size  Location     Type
 23743 ;;  data            4    2[COMRAM] unsigned long 
 23744 ;; Auto vars:     Size  Location     Type
 23745 ;;		None
 23746 ;; Return value:  Size  Location     Type
 23747 ;;		None               void
 23748 ;; Registers used:
 23749 ;;		wreg, status,2, status,0, cstack
 23750 ;; Tracked objects:
 23751 ;;		On entry : 0/0
 23752 ;;		On exit  : 0/0
 23753 ;;		Unchanged: 0/0
 23754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23755 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23758 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23759 ;;Total ram usage:        4 bytes
 23760 ;; Hardware stack levels used:    1
 23761 ;; Hardware stack levels required when called:    4
 23762 ;; This function calls:
 23763 ;;		_SPI_ExchangeByte
 23764 ;; This function is called by:
 23765 ;;		_DHCP_Request
 23766 ;;		_IPv4_Start
 23767 ;; This function uses a non-reentrant model
 23768 ;;
 23769                           
 23770                           	psect	text90
 23771  00875C                     __ptext90:
 23772                           	opt stack 0
 23773  00875C                     _ETH_Write32:
 23774                           	opt stack 21
 23775                           
 23776                           ;incstack = 0
 23777                           ;encX24j600_spi.c: 378: do{LATB3 = 0;} while(0);
 23778  00875C  968A               	bcf	3978,3,c	;volatile
 23779                           
 23780                           ;encX24j600_spi.c: 379: TXPacketSize += 4;
 23781  00875E  0E04               	movlw	4
 23782  008760  0101               	movlb	1	; () banked
 23783  008762  279A               	addwf	_TXPacketSize& (0+255),f,b
 23784  008764  0E00               	movlw	0
 23785  008766  239B               	addwfc	(_TXPacketSize+1)& (0+255),f,b
 23786                           
 23787                           ; BSR set to: 1
 23788                           ;encX24j600_spi.c: 380: SPI_ExchangeByte(wgpdata_inst);
 23789  008768  0E2A               	movlw	42
 23790  00876A  ECEE  F045         	call	_SPI_ExchangeByte
 23791                           
 23792                           ;encX24j600_spi.c: 381: SPI_ExchangeByte(((uint8_t*) &data)[3]);
 23793  00876E  5006               	movf	ETH_Write32@data+3,w,c
 23794  008770  ECEE  F045         	call	_SPI_ExchangeByte
 23795                           
 23796                           ;encX24j600_spi.c: 382: SPI_ExchangeByte(((uint8_t*) &data)[2]);
 23797  008774  5005               	movf	ETH_Write32@data+2,w,c
 23798  008776  ECEE  F045         	call	_SPI_ExchangeByte
 23799                           
 23800                           ;encX24j600_spi.c: 383: SPI_ExchangeByte(((uint8_t*) &data)[1]);
 23801  00877A  5004               	movf	ETH_Write32@data+1,w,c
 23802  00877C  ECEE  F045         	call	_SPI_ExchangeByte
 23803                           
 23804                           ;encX24j600_spi.c: 384: SPI_ExchangeByte(((uint8_t*) &data)[0]);
 23805  008780  5003               	movf	ETH_Write32@data,w,c
 23806  008782  ECEE  F045         	call	_SPI_ExchangeByte
 23807  008786  868A               	bsf	3978,3,c	;volatile
 23808  008788  0012               	return		;funcret
 23809  00878A                     __end_of_ETH_Write32:
 23810                           	opt stack 0
 23811                           tosu	equ	0xFFF
 23812                           tosh	equ	0xFFE
 23813                           tosl	equ	0xFFD
 23814                           pclath	equ	0xFFA
 23815                           tblptru	equ	0xFF8
 23816                           tblptrh	equ	0xFF7
 23817                           tblptrl	equ	0xFF6
 23818                           tablat	equ	0xFF5
 23819                           prodh	equ	0xFF4
 23820                           prodl	equ	0xFF3
 23821                           intcon	equ	0xFF2
 23822                           intcon2	equ	0xFF1
 23823                           indf0	equ	0xFEF
 23824                           postinc0	equ	0xFEE
 23825                           fsr0h	equ	0xFEA
 23826                           fsr0l	equ	0xFE9
 23827                           wreg	equ	0xFE8
 23828                           postinc1	equ	0xFE6
 23829                           postdec1	equ	0xFE5
 23830                           plusw1	equ	0xFE3
 23831                           fsr1h	equ	0xFE2
 23832                           fsr1l	equ	0xFE1
 23833                           indf2	equ	0xFDF
 23834                           postinc2	equ	0xFDE
 23835                           postdec2	equ	0xFDD
 23836                           plusw2	equ	0xFDB
 23837                           fsr2h	equ	0xFDA
 23838                           fsr2l	equ	0xFD9
 23839                           status	equ	0xFD8
 23840                           
 23841 ;; *************** function _ARPV4_Request *****************
 23842 ;; Defined at:
 23843 ;;		line 194 in file "../../TCPIP Library/source/arpv4.c"
 23844 ;; Parameters:    Size  Location     Type
 23845 ;;  destAddress     4   14[COMRAM] unsigned long 
 23846 ;; Auto vars:     Size  Location     Type
 23847 ;;  header         28   46[COMRAM] struct .
 23848 ;;  ret             1   45[COMRAM] enum E450
 23849 ;; Return value:  Size  Location     Type
 23850 ;;                  1    wreg      enum E450
 23851 ;; Registers used:
 23852 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23853 ;; Tracked objects:
 23854 ;;		On entry : F/0
 23855 ;;		On exit  : 0/0
 23856 ;;		Unchanged: 0/0
 23857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23858 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23859 ;;      Locals:        29       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23860 ;;      Temps:         27       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23861 ;;      Totals:        60       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23862 ;;Total ram usage:       60 bytes
 23863 ;; Hardware stack levels used:    1
 23864 ;; Hardware stack levels required when called:    7
 23865 ;; This function calls:
 23866 ;;		_ETH_GetMAC
 23867 ;;		_ETH_Send
 23868 ;;		_ETH_WriteBlock
 23869 ;;		_ETH_WriteStart
 23870 ;; This function is called by:
 23871 ;;		_IPv4_Start
 23872 ;; This function uses a non-reentrant model
 23873 ;;
 23874                           
 23875                           	psect	text91
 23876  0069A2                     __ptext91:
 23877                           	opt stack 0
 23878  0069A2                     _ARPV4_Request:
 23879                           	opt stack 18
 23880                           
 23881                           ; BSR set to: 0
 23882                           ;arpv4.c: 200: arpHeader_t header;
 23883                           ;arpv4.c: 201: header.htype = ((((uint16_t)1 & (uint16_t)0xFF00) >> 8) | (((uint16_t)1 &
      +                           (uint16_t)0x00FF) << 8));
 23884                           
 23885                           ; BSR set to: 0
 23886                           
 23887                           ;incstack = 0
 23888  0069A2  0E01               	movlw	1
 23889  0069A4  6E30               	movwf	ARPV4_Request@header+1,c
 23890  0069A6  6A2F               	clrf	ARPV4_Request@header,c
 23891                           
 23892                           ;arpv4.c: 202: header.ptype = ((((uint16_t)0x0800 & (uint16_t)0xFF00) >> 8) | (((uint16_
      +                          t)0x0800 & (uint16_t)0x00FF) << 8));
 23893  0069A8  6A32               	clrf	ARPV4_Request@header+3,c
 23894  0069AA  0E08               	movlw	8
 23895  0069AC  6E31               	movwf	ARPV4_Request@header+2,c
 23896                           
 23897                           ;arpv4.c: 203: header.hlen = 6;
 23898  0069AE  0E06               	movlw	6
 23899  0069B0  6E33               	movwf	ARPV4_Request@header+4,c
 23900                           
 23901                           ;arpv4.c: 204: header.plen = 4;
 23902  0069B2  0E04               	movlw	4
 23903  0069B4  6E34               	movwf	ARPV4_Request@header+5,c
 23904                           
 23905                           ;arpv4.c: 205: header.oper = ((((uint16_t)1 & (uint16_t)0xFF00) >> 8) | (((uint16_t)1 & 
      +                          (uint16_t)0x00FF) << 8));
 23906  0069B6  0E01               	movlw	1
 23907  0069B8  6E36               	movwf	ARPV4_Request@header+7,c
 23908  0069BA  6A35               	clrf	ARPV4_Request@header+6,c
 23909                           
 23910                           ; BSR set to: 0
 23911                           ;arpv4.c: 206: ETH_GetMAC((char*)&header.sha);
 23912  0069BC  0E37               	movlw	low (ARPV4_Request@header+8)
 23913  0069BE  6E08               	movwf	ETH_GetMAC@macAddr,c
 23914  0069C0  6A09               	clrf	ETH_GetMAC@macAddr+1,c
 23915  0069C2  ECC8  F03E         	call	_ETH_GetMAC	;wreg free
 23916                           
 23917                           ;arpv4.c: 207: header.spa = ((((uint32_t)ipv4Address&(uint32_t)0xff000000) >> 24) | (((u
      +                          int32_t)ipv4Address&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)ipv4Address&(uint32_t)0x00
      +                          00ff00) << 8) | (((uint32_t)ipv4Address&(uint32_t)0x000000ff) << 24) );
 23918  0069C6  0101               	movlb	1	; () banked
 23919  0069C8  518E               	movf	_ipv4Address& (0+255),w,b
 23920  0069CA  6E13               	movwf	??_ARPV4_Request& (0+255),c
 23921  0069CC  6A14               	clrf	(??_ARPV4_Request+1)& (0+255),c
 23922  0069CE  6A15               	clrf	(??_ARPV4_Request+2)& (0+255),c
 23923  0069D0  6A16               	clrf	(??_ARPV4_Request+3)& (0+255),c
 23924  0069D2  C013  F016         	movff	??_ARPV4_Request,??_ARPV4_Request+3
 23925  0069D6  6A15               	clrf	??_ARPV4_Request+2,c
 23926  0069D8  6A14               	clrf	??_ARPV4_Request+1,c
 23927  0069DA  6A13               	clrf	??_ARPV4_Request,c
 23928  0069DC  6A17               	clrf	(??_ARPV4_Request+4)& (0+255),c
 23929  0069DE  518F               	movf	(_ipv4Address+1)& (0+255),w,b
 23930  0069E0  6E18               	movwf	(??_ARPV4_Request+5)& (0+255),c
 23931  0069E2  6A19               	clrf	(??_ARPV4_Request+6)& (0+255),c
 23932  0069E4  6A1A               	clrf	(??_ARPV4_Request+7)& (0+255),c
 23933  0069E6  C019  F01A         	movff	??_ARPV4_Request+6,??_ARPV4_Request+7
 23934  0069EA  C018  F019         	movff	??_ARPV4_Request+5,??_ARPV4_Request+6
 23935  0069EE  C017  F018         	movff	??_ARPV4_Request+4,??_ARPV4_Request+5
 23936  0069F2  6A17               	clrf	??_ARPV4_Request+4,c
 23937  0069F4  6A1B               	clrf	(??_ARPV4_Request+8)& (0+255),c
 23938  0069F6  5190               	movf	(_ipv4Address+2)& (0+255),w,b
 23939  0069F8  6E1C               	movwf	(??_ARPV4_Request+9)& (0+255),c
 23940  0069FA  6A1D               	clrf	(??_ARPV4_Request+10)& (0+255),c
 23941  0069FC  501B               	movf	??_ARPV4_Request+8,w,c
 23942  0069FE  6E1E               	movwf	(??_ARPV4_Request+11)& (0+255),c
 23943  006A00  501C               	movf	??_ARPV4_Request+9,w,c
 23944  006A02  6E1F               	movwf	(??_ARPV4_Request+12)& (0+255),c
 23945  006A04  501D               	movf	??_ARPV4_Request+10,w,c
 23946  006A06  6E20               	movwf	(??_ARPV4_Request+13)& (0+255),c
 23947  006A08  6A21               	clrf	(??_ARPV4_Request+14)& (0+255),c
 23948  006A0A  6A22               	clrf	(??_ARPV4_Request+15)& (0+255),c
 23949  006A0C  6A23               	clrf	(??_ARPV4_Request+16)& (0+255),c
 23950  006A0E  6A24               	clrf	(??_ARPV4_Request+17)& (0+255),c
 23951  006A10  5191               	movf	(_ipv4Address+3)& (0+255),w,b
 23952  006A12  6E25               	movwf	(??_ARPV4_Request+18)& (0+255),c
 23953  006A14  0E19               	movlw	25
 23954  006A16  D005               	goto	u10950
 23955  006A18                     u10955:
 23956  006A18  90D8               	bcf	status,0,c
 23957  006A1A  3225               	rrcf	??_ARPV4_Request+18,f,c
 23958  006A1C  3224               	rrcf	??_ARPV4_Request+17,f,c
 23959  006A1E  3223               	rrcf	??_ARPV4_Request+16,f,c
 23960  006A20  3222               	rrcf	??_ARPV4_Request+15,f,c
 23961  006A22                     u10950:
 23962  006A22  2EE8               	decfsz	wreg,f,c
 23963  006A24  D7F9               	goto	u10955
 23964  006A26  501E               	movf	??_ARPV4_Request+11,w,c
 23965  006A28  1022               	iorwf	??_ARPV4_Request+15,w,c
 23966  006A2A  6E26               	movwf	(??_ARPV4_Request+19)& (0+255),c
 23967  006A2C  501F               	movf	??_ARPV4_Request+12,w,c
 23968  006A2E  1023               	iorwf	??_ARPV4_Request+16,w,c
 23969  006A30  6E27               	movwf	(??_ARPV4_Request+20)& (0+255),c
 23970  006A32  5020               	movf	??_ARPV4_Request+13,w,c
 23971  006A34  1024               	iorwf	??_ARPV4_Request+17,w,c
 23972  006A36  6E28               	movwf	(??_ARPV4_Request+21)& (0+255),c
 23973  006A38  5021               	movf	??_ARPV4_Request+14,w,c
 23974  006A3A  1025               	iorwf	??_ARPV4_Request+18,w,c
 23975  006A3C  6E29               	movwf	(??_ARPV4_Request+22)& (0+255),c
 23976  006A3E  5017               	movf	??_ARPV4_Request+4,w,c
 23977  006A40  1026               	iorwf	??_ARPV4_Request+19,w,c
 23978  006A42  6E2A               	movwf	(??_ARPV4_Request+23)& (0+255),c
 23979  006A44  5018               	movf	??_ARPV4_Request+5,w,c
 23980  006A46  1027               	iorwf	??_ARPV4_Request+20,w,c
 23981  006A48  6E2B               	movwf	(??_ARPV4_Request+24)& (0+255),c
 23982  006A4A  5019               	movf	??_ARPV4_Request+6,w,c
 23983  006A4C  1028               	iorwf	??_ARPV4_Request+21,w,c
 23984  006A4E  6E2C               	movwf	(??_ARPV4_Request+25)& (0+255),c
 23985  006A50  501A               	movf	??_ARPV4_Request+7,w,c
 23986  006A52  1029               	iorwf	??_ARPV4_Request+22,w,c
 23987  006A54  6E2D               	movwf	(??_ARPV4_Request+26)& (0+255),c
 23988  006A56  5013               	movf	??_ARPV4_Request,w,c
 23989  006A58  102A               	iorwf	??_ARPV4_Request+23,w,c
 23990  006A5A  6E3D               	movwf	ARPV4_Request@header+14,c
 23991  006A5C  5014               	movf	??_ARPV4_Request+1,w,c
 23992  006A5E  102B               	iorwf	??_ARPV4_Request+24,w,c
 23993  006A60  6E3E               	movwf	ARPV4_Request@header+15,c
 23994  006A62  5015               	movf	??_ARPV4_Request+2,w,c
 23995  006A64  102C               	iorwf	??_ARPV4_Request+25,w,c
 23996  006A66  6E3F               	movwf	ARPV4_Request@header+16,c
 23997  006A68  5016               	movf	??_ARPV4_Request+3,w,c
 23998  006A6A  102D               	iorwf	??_ARPV4_Request+26,w,c
 23999  006A6C  6E40               	movwf	ARPV4_Request@header+17,c
 24000                           
 24001                           ; BSR set to: 1
 24002                           ;arpv4.c: 208: header.tpa= ((((uint32_t)destAddress&(uint32_t)0xff000000) >> 24) | (((ui
      +                          nt32_t)destAddress&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)destAddress&(uint32_t)0x000
      +                          0ff00) << 8) | (((uint32_t)destAddress&(uint32_t)0x000000ff) << 24) );
 24003  006A6E  500F               	movf	ARPV4_Request@destAddress,w,c
 24004  006A70  6E13               	movwf	??_ARPV4_Request& (0+255),c
 24005  006A72  6A14               	clrf	(??_ARPV4_Request+1)& (0+255),c
 24006  006A74  6A15               	clrf	(??_ARPV4_Request+2)& (0+255),c
 24007  006A76  6A16               	clrf	(??_ARPV4_Request+3)& (0+255),c
 24008  006A78  C013  F016         	movff	??_ARPV4_Request,??_ARPV4_Request+3
 24009  006A7C  6A15               	clrf	??_ARPV4_Request+2,c
 24010  006A7E  6A14               	clrf	??_ARPV4_Request+1,c
 24011  006A80  6A13               	clrf	??_ARPV4_Request,c
 24012  006A82  6A17               	clrf	(??_ARPV4_Request+4)& (0+255),c
 24013  006A84  5010               	movf	ARPV4_Request@destAddress+1,w,c
 24014  006A86  6E18               	movwf	(??_ARPV4_Request+5)& (0+255),c
 24015  006A88  6A19               	clrf	(??_ARPV4_Request+6)& (0+255),c
 24016  006A8A  6A1A               	clrf	(??_ARPV4_Request+7)& (0+255),c
 24017  006A8C  C019  F01A         	movff	??_ARPV4_Request+6,??_ARPV4_Request+7
 24018  006A90  C018  F019         	movff	??_ARPV4_Request+5,??_ARPV4_Request+6
 24019  006A94  C017  F018         	movff	??_ARPV4_Request+4,??_ARPV4_Request+5
 24020  006A98  6A17               	clrf	??_ARPV4_Request+4,c
 24021  006A9A  6A1B               	clrf	(??_ARPV4_Request+8)& (0+255),c
 24022  006A9C  5011               	movf	ARPV4_Request@destAddress+2,w,c
 24023  006A9E  6E1C               	movwf	(??_ARPV4_Request+9)& (0+255),c
 24024  006AA0  6A1D               	clrf	(??_ARPV4_Request+10)& (0+255),c
 24025  006AA2  501B               	movf	??_ARPV4_Request+8,w,c
 24026  006AA4  6E1E               	movwf	(??_ARPV4_Request+11)& (0+255),c
 24027  006AA6  501C               	movf	??_ARPV4_Request+9,w,c
 24028  006AA8  6E1F               	movwf	(??_ARPV4_Request+12)& (0+255),c
 24029  006AAA  501D               	movf	??_ARPV4_Request+10,w,c
 24030  006AAC  6E20               	movwf	(??_ARPV4_Request+13)& (0+255),c
 24031  006AAE  6A21               	clrf	(??_ARPV4_Request+14)& (0+255),c
 24032  006AB0  6A22               	clrf	(??_ARPV4_Request+15)& (0+255),c
 24033  006AB2  6A23               	clrf	(??_ARPV4_Request+16)& (0+255),c
 24034  006AB4  6A24               	clrf	(??_ARPV4_Request+17)& (0+255),c
 24035  006AB6  5012               	movf	ARPV4_Request@destAddress+3,w,c
 24036  006AB8  6E25               	movwf	(??_ARPV4_Request+18)& (0+255),c
 24037  006ABA  0E19               	movlw	25
 24038  006ABC  D005               	goto	u10960
 24039  006ABE                     u10965:
 24040  006ABE  90D8               	bcf	status,0,c
 24041  006AC0  3225               	rrcf	??_ARPV4_Request+18,f,c
 24042  006AC2  3224               	rrcf	??_ARPV4_Request+17,f,c
 24043  006AC4  3223               	rrcf	??_ARPV4_Request+16,f,c
 24044  006AC6  3222               	rrcf	??_ARPV4_Request+15,f,c
 24045  006AC8                     u10960:
 24046  006AC8  2EE8               	decfsz	wreg,f,c
 24047  006ACA  D7F9               	goto	u10965
 24048  006ACC  501E               	movf	??_ARPV4_Request+11,w,c
 24049  006ACE  1022               	iorwf	??_ARPV4_Request+15,w,c
 24050  006AD0  6E26               	movwf	(??_ARPV4_Request+19)& (0+255),c
 24051  006AD2  501F               	movf	??_ARPV4_Request+12,w,c
 24052  006AD4  1023               	iorwf	??_ARPV4_Request+16,w,c
 24053  006AD6  6E27               	movwf	(??_ARPV4_Request+20)& (0+255),c
 24054  006AD8  5020               	movf	??_ARPV4_Request+13,w,c
 24055  006ADA  1024               	iorwf	??_ARPV4_Request+17,w,c
 24056  006ADC  6E28               	movwf	(??_ARPV4_Request+21)& (0+255),c
 24057  006ADE  5021               	movf	??_ARPV4_Request+14,w,c
 24058  006AE0  1025               	iorwf	??_ARPV4_Request+18,w,c
 24059  006AE2  6E29               	movwf	(??_ARPV4_Request+22)& (0+255),c
 24060  006AE4  5017               	movf	??_ARPV4_Request+4,w,c
 24061  006AE6  1026               	iorwf	??_ARPV4_Request+19,w,c
 24062  006AE8  6E2A               	movwf	(??_ARPV4_Request+23)& (0+255),c
 24063  006AEA  5018               	movf	??_ARPV4_Request+5,w,c
 24064  006AEC  1027               	iorwf	??_ARPV4_Request+20,w,c
 24065  006AEE  6E2B               	movwf	(??_ARPV4_Request+24)& (0+255),c
 24066  006AF0  5019               	movf	??_ARPV4_Request+6,w,c
 24067  006AF2  1028               	iorwf	??_ARPV4_Request+21,w,c
 24068  006AF4  6E2C               	movwf	(??_ARPV4_Request+25)& (0+255),c
 24069  006AF6  501A               	movf	??_ARPV4_Request+7,w,c
 24070  006AF8  1029               	iorwf	??_ARPV4_Request+22,w,c
 24071  006AFA  6E2D               	movwf	(??_ARPV4_Request+26)& (0+255),c
 24072  006AFC  5013               	movf	??_ARPV4_Request,w,c
 24073  006AFE  102A               	iorwf	??_ARPV4_Request+23,w,c
 24074  006B00  6E47               	movwf	ARPV4_Request@header+24,c
 24075  006B02  5014               	movf	??_ARPV4_Request+1,w,c
 24076  006B04  102B               	iorwf	??_ARPV4_Request+24,w,c
 24077  006B06  6E48               	movwf	ARPV4_Request@header+25,c
 24078  006B08  5015               	movf	??_ARPV4_Request+2,w,c
 24079  006B0A  102C               	iorwf	??_ARPV4_Request+25,w,c
 24080  006B0C  6E49               	movwf	ARPV4_Request@header+26,c
 24081  006B0E  5016               	movf	??_ARPV4_Request+3,w,c
 24082  006B10  102D               	iorwf	??_ARPV4_Request+26,w,c
 24083  006B12  6E4A               	movwf	ARPV4_Request@header+27,c
 24084                           
 24085                           ; BSR set to: 1
 24086                           ;arpv4.c: 209: header.tha.s.byte1 = 0;
 24087  006B14  6A41               	clrf	ARPV4_Request@header+18,c
 24088                           
 24089                           ; BSR set to: 1
 24090                           ;arpv4.c: 210: header.tha.s.byte2 = 0;
 24091  006B16  6A42               	clrf	ARPV4_Request@header+19,c
 24092                           
 24093                           ; BSR set to: 1
 24094                           ;arpv4.c: 211: header.tha.s.byte3 = 0;
 24095  006B18  6A43               	clrf	ARPV4_Request@header+20,c
 24096                           
 24097                           ; BSR set to: 1
 24098                           ;arpv4.c: 212: header.tha.s.byte4 = 0;
 24099  006B1A  6A44               	clrf	ARPV4_Request@header+21,c
 24100                           
 24101                           ; BSR set to: 1
 24102                           ;arpv4.c: 213: header.tha.s.byte5 = 0;
 24103  006B1C  6A45               	clrf	ARPV4_Request@header+22,c
 24104                           
 24105                           ; BSR set to: 1
 24106                           ;arpv4.c: 214: header.tha.s.byte6 = 0;
 24107  006B1E  6A46               	clrf	ARPV4_Request@header+23,c
 24108                           
 24109                           ; BSR set to: 1
 24110                           ;arpv4.c: 216: ret = ETH_WriteStart(&broadcastMAC,0x0806);
 24111  006B20  0E28               	movlw	low _broadcastMAC
 24112  006B22  6E0B               	movwf	ETH_WriteStart@destMAC,c
 24113  006B24  500B               	movf	ETH_WriteStart@destMAC,w,c
 24114  006B26  A4D8               	btfss	status,2,c
 24115  006B28  0E10               	movlw	high __smallconst
 24116  006B2A  6E0C               	movwf	ETH_WriteStart@destMAC+1,c
 24117  006B2C  0E08               	movlw	8
 24118  006B2E  6E0E               	movwf	ETH_WriteStart@type+1,c
 24119  006B30  0E06               	movlw	6
 24120  006B32  6E0D               	movwf	ETH_WriteStart@type,c
 24121  006B34  EC60  F040         	call	_ETH_WriteStart	;wreg free
 24122  006B38  6E2E               	movwf	ARPV4_Request@ret,c
 24123                           
 24124                           ;arpv4.c: 217: if(ret == SUCCESS)
 24125  006B3A  042E               	decf	ARPV4_Request@ret,w,c
 24126  006B3C  E10E               	bnz	l8252
 24127                           
 24128                           ;arpv4.c: 218: {
 24129                           ;arpv4.c: 219: ETH_WriteBlock((char*)&header,sizeof(arpHeader_t));
 24130  006B3E  0E2F               	movlw	low ARPV4_Request@header
 24131  006B40  6E03               	movwf	ETH_WriteBlock@data,c
 24132  006B42  6A04               	clrf	ETH_WriteBlock@data+1,c
 24133  006B44  6A06               	clrf	ETH_WriteBlock@len+1,c
 24134  006B46  0E1C               	movlw	28
 24135  006B48  6E05               	movwf	ETH_WriteBlock@len,c
 24136  006B4A  ECDF  F03F         	call	_ETH_WriteBlock	;wreg free
 24137                           
 24138                           ;arpv4.c: 220: ret = ETH_Send();
 24139  006B4E  ECF2  F044         	call	_ETH_Send	;wreg free
 24140  006B52  6E2E               	movwf	ARPV4_Request@ret,c
 24141                           
 24142                           ; BSR set to: 1
 24143                           ;arpv4.c: 221: if(ret == SUCCESS)
 24144  006B54  042E               	decf	ARPV4_Request@ret,w,c
 24145  006B56  E101               	bnz	l8252
 24146                           
 24147                           ; BSR set to: 1
 24148                           ;arpv4.c: 222: {
 24149                           ;arpv4.c: 223: return MAC_NOT_FOUND;
 24150  006B58  0C05               	retlw	5
 24151  006B5A                     l8252:
 24152                           
 24153                           ;arpv4.c: 224: }
 24154                           ;arpv4.c: 225: }
 24155                           ;arpv4.c: 226: return ret;
 24156  006B5A  502E               	movf	ARPV4_Request@ret,w,c
 24157  006B5C  0012               	return		;funcret
 24158  006B5E                     __end_of_ARPV4_Request:
 24159                           	opt stack 0
 24160                           tosu	equ	0xFFF
 24161                           tosh	equ	0xFFE
 24162                           tosl	equ	0xFFD
 24163                           pclath	equ	0xFFA
 24164                           tblptru	equ	0xFF8
 24165                           tblptrh	equ	0xFF7
 24166                           tblptrl	equ	0xFF6
 24167                           tablat	equ	0xFF5
 24168                           prodh	equ	0xFF4
 24169                           prodl	equ	0xFF3
 24170                           intcon	equ	0xFF2
 24171                           intcon2	equ	0xFF1
 24172                           indf0	equ	0xFEF
 24173                           postinc0	equ	0xFEE
 24174                           fsr0h	equ	0xFEA
 24175                           fsr0l	equ	0xFE9
 24176                           wreg	equ	0xFE8
 24177                           postinc1	equ	0xFE6
 24178                           postdec1	equ	0xFE5
 24179                           plusw1	equ	0xFE3
 24180                           fsr1h	equ	0xFE2
 24181                           fsr1l	equ	0xFE1
 24182                           indf2	equ	0xFDF
 24183                           postinc2	equ	0xFDE
 24184                           postdec2	equ	0xFDD
 24185                           plusw2	equ	0xFDB
 24186                           fsr2h	equ	0xFDA
 24187                           fsr2l	equ	0xFD9
 24188                           status	equ	0xFD8
 24189                           
 24190 ;; *************** function _ETH_WriteStart *****************
 24191 ;; Defined at:
 24192 ;;		line 366 in file "../../TCPIP Library/ethernet_drivers/encX24J600_driver.c"
 24193 ;; Parameters:    Size  Location     Type
 24194 ;;  destMAC         2   10[COMRAM] PTR const struct .
 24195 ;;		 -> arpMap.macAddress(6), broadcastMAC(6), header.sha(6), ARPV4_Packet@header(28), 
 24196 ;;		 -> arpMap(104), NULL(0), 
 24197 ;;  type            2   12[COMRAM] unsigned int 
 24198 ;; Auto vars:     Size  Location     Type
 24199 ;;		None
 24200 ;; Return value:  Size  Location     Type
 24201 ;;                  1    wreg      enum E6988
 24202 ;; Registers used:
 24203 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24204 ;; Tracked objects:
 24205 ;;		On entry : E/1
 24206 ;;		On exit  : 0/0
 24207 ;;		Unchanged: 0/0
 24208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24209 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24212 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24213 ;;Total ram usage:        4 bytes
 24214 ;; Hardware stack levels used:    1
 24215 ;; Hardware stack levels required when called:    6
 24216 ;; This function calls:
 24217 ;;		_ENCx24_Read
 24218 ;;		_ENCx24_Write
 24219 ;;		_ETH_Write16
 24220 ;;		_ETH_WriteBlock
 24221 ;; This function is called by:
 24222 ;;		_ARPV4_Packet
 24223 ;;		_ARPV4_Request
 24224 ;;		_IPv4_Start
 24225 ;; This function uses a non-reentrant model
 24226 ;;
 24227                           
 24228                           	psect	text92
 24229  0080C0                     __ptext92:
 24230                           	opt stack 0
 24231  0080C0                     _ETH_WriteStart:
 24232                           	opt stack 19
 24233                           
 24234                           ;encX24J600_driver.c: 368: TXPacketSize = 0;
 24235                           
 24236                           ;incstack = 0
 24237  0080C0  0101               	movlb	1	; () banked
 24238  0080C2  6B9A               	clrf	_TXPacketSize& (0+255),b
 24239  0080C4  6B9B               	clrf	(_TXPacketSize+1)& (0+255),b
 24240                           
 24241                           ;encX24J600_driver.c: 369: if(ethData.bufferBusy)
 24242  0080C6  BB83               	btfsc	_ethData& (0+255),5,b	;volatile
 24243                           
 24244                           ; BSR set to: 1
 24245                           ;encX24J600_driver.c: 370: {
 24246                           ;encX24J600_driver.c: 371: return BUFFER_BUSY;
 24247  0080C8  0C03               	retlw	3
 24248                           
 24249                           ; BSR set to: 1
 24250                           ;encX24J600_driver.c: 372: }
 24251                           ;encX24J600_driver.c: 373: if((ENCx24_Read(XJ600_ECON1L) & 0x02))
 24252  0080CA  0EFE               	movlw	254
 24253  0080CC  ECC0  F041         	call	_ENCx24_Read
 24254  0080D0  B205               	btfsc	?_ENCx24_Read,1,c
 24255                           
 24256                           ;encX24J600_driver.c: 374: {
 24257                           ;encX24J600_driver.c: 375: return TX_LOGIC_NOT_IDLE;
 24258  0080D2  0C04               	retlw	4
 24259                           
 24260                           ;encX24J600_driver.c: 376: }
 24261                           ;encX24J600_driver.c: 378: ENCx24_Write(XJ600_EGPWRPTL, 0x0000ul);
 24262  0080D4  6A06               	clrf	ENCx24_Write@data+1,c
 24263  0080D6  6A05               	clrf	ENCx24_Write@data,c
 24264  0080D8  0E88               	movlw	136
 24265  0080DA  EC72  F042         	call	_ENCx24_Write
 24266                           
 24267                           ;encX24J600_driver.c: 380: ETH_WriteBlock((char *)destMAC,6);
 24268  0080DE  C00B  F003         	movff	ETH_WriteStart@destMAC,ETH_WriteBlock@data
 24269  0080E2  C00C  F004         	movff	ETH_WriteStart@destMAC+1,ETH_WriteBlock@data+1
 24270  0080E6  6A06               	clrf	ETH_WriteBlock@len+1,c
 24271  0080E8  0E06               	movlw	6
 24272  0080EA  6E05               	movwf	ETH_WriteBlock@len,c
 24273  0080EC  ECDF  F03F         	call	_ETH_WriteBlock	;wreg free
 24274                           
 24275                           ;encX24J600_driver.c: 381: ETH_WriteBlock((char *)&ethMAC,6);
 24276  0080F0  0EA7               	movlw	low _ethMAC
 24277  0080F2  6E03               	movwf	ETH_WriteBlock@data,c
 24278  0080F4  0E02               	movlw	high _ethMAC
 24279  0080F6  6E04               	movwf	ETH_WriteBlock@data+1,c
 24280  0080F8  6A06               	clrf	ETH_WriteBlock@len+1,c
 24281  0080FA  0E06               	movlw	6
 24282  0080FC  6E05               	movwf	ETH_WriteBlock@len,c
 24283  0080FE  ECDF  F03F         	call	_ETH_WriteBlock	;wreg free
 24284                           
 24285                           ;encX24J600_driver.c: 382: ETH_Write16(type);
 24286  008102  C00D  F003         	movff	ETH_WriteStart@type,ETH_Write16@data
 24287  008106  C00E  F004         	movff	ETH_WriteStart@type+1,ETH_Write16@data+1
 24288  00810A  ECE1  F044         	call	_ETH_Write16	;wreg free
 24289                           
 24290                           ;encX24J600_driver.c: 383: ethData.bufferBusy = 1;
 24291  00810E  0101               	movlb	1	; () banked
 24292  008110  8B83               	bsf	_ethData& (0+255),5,b	;volatile
 24293                           
 24294                           ; BSR set to: 1
 24295                           ;encX24J600_driver.c: 385: return SUCCESS;
 24296  008112  0C01               	retlw	1	;funcret
 24297  008114                     __end_of_ETH_WriteStart:
 24298                           	opt stack 0
 24299                           tosu	equ	0xFFF
 24300                           tosh	equ	0xFFE
 24301                           tosl	equ	0xFFD
 24302                           pclath	equ	0xFFA
 24303                           tblptru	equ	0xFF8
 24304                           tblptrh	equ	0xFF7
 24305                           tblptrl	equ	0xFF6
 24306                           tablat	equ	0xFF5
 24307                           prodh	equ	0xFF4
 24308                           prodl	equ	0xFF3
 24309                           intcon	equ	0xFF2
 24310                           intcon2	equ	0xFF1
 24311                           indf0	equ	0xFEF
 24312                           postinc0	equ	0xFEE
 24313                           fsr0h	equ	0xFEA
 24314                           fsr0l	equ	0xFE9
 24315                           wreg	equ	0xFE8
 24316                           postinc1	equ	0xFE6
 24317                           postdec1	equ	0xFE5
 24318                           plusw1	equ	0xFE3
 24319                           fsr1h	equ	0xFE2
 24320                           fsr1l	equ	0xFE1
 24321                           indf2	equ	0xFDF
 24322                           postinc2	equ	0xFDE
 24323                           postdec2	equ	0xFDD
 24324                           plusw2	equ	0xFDB
 24325                           fsr2h	equ	0xFDA
 24326                           fsr2l	equ	0xFD9
 24327                           status	equ	0xFD8
 24328                           
 24329 ;; *************** function _ETH_WriteBlock *****************
 24330 ;; Defined at:
 24331 ;;		line 393 in file "../../TCPIP Library/ethernet_drivers/encX24j600_spi.c"
 24332 ;; Parameters:    Size  Location     Type
 24333 ;;  data            2    2[COMRAM] PTR void 
 24334 ;;		 -> arpMap.macAddress(6), ?_sprintf(2), ?_printf(2), main@str(32), 
 24335 ;;		 -> STR_7(13), STR_6(17), DEMO_TCP_Client@txdataPort60(80), DEMO_TCP_Client@strTmp(17), 
 24336 ;;		 -> DEMO_TCP_Client@rxdataPort60(50), TCP_Snd@txHeader(20), Network_Read@debug_str(80), dhcpName(21), 
 24337 ;;		 -> DHCP_Request@ethMAC(6), broadcastMAC(6), ARPV4_Request@header(28), header.sha(6), 
 24338 ;;		 -> ARPV4_Packet@header(28), arpMap(104), ethMAC(6), NULL(0), 
 24339 ;;  len             2    4[COMRAM] unsigned int 
 24340 ;; Auto vars:     Size  Location     Type
 24341 ;;  p               2    6[COMRAM] PTR unsigned char 
 24342 ;;		 -> arpMap.macAddress(6), ?_sprintf(2), ?_printf(2), main@str(32), 
 24343 ;;		 -> STR_7(13), STR_6(17), DEMO_TCP_Client@txdataPort60(80), DEMO_TCP_Client@strTmp(17), 
 24344 ;;		 -> DEMO_TCP_Client@rxdataPort60(50), TCP_Snd@txHeader(20), Network_Read@debug_str(80), dhcpName(21), 
 24345 ;;		 -> DHCP_Request@ethMAC(6), broadcastMAC(6), ARPV4_Request@header(28), header.sha(6), 
 24346 ;;		 -> ARPV4_Packet@header(28), arpMap(104), ethMAC(6), NULL(0), 
 24347 ;; Return value:  Size  Location     Type
 24348 ;;                  2    2[COMRAM] unsigned int 
 24349 ;; Registers used:
 24350 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24351 ;; Tracked objects:
 24352 ;;		On entry : 0/1
 24353 ;;		On exit  : 0/0
 24354 ;;		Unchanged: 0/0
 24355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24356 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24357 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24359 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24360 ;;Total ram usage:        6 bytes
 24361 ;; Hardware stack levels used:    1
 24362 ;; Hardware stack levels required when called:    4
 24363 ;; This function calls:
 24364 ;;		_SPI_ExchangeByte
 24365 ;; This function is called by:
 24366 ;;		_ETH_WriteStart
 24367 ;;		_ARPV4_Packet
 24368 ;;		_ARPV4_Request
 24369 ;;		_DHCP_Request
 24370 ;;		_TCP_Snd
 24371 ;; This function uses a non-reentrant model
 24372 ;;
 24373                           
 24374                           	psect	text93
 24375  007FBE                     __ptext93:
 24376                           	opt stack 0
 24377  007FBE                     _ETH_WriteBlock:
 24378                           	opt stack 20
 24379                           
 24380                           ;encX24j600_spi.c: 395: char *p = data;
 24381                           
 24382                           ;incstack = 0
 24383  007FBE  C003  F007         	movff	ETH_WriteBlock@data,ETH_WriteBlock@p
 24384  007FC2  C004  F008         	movff	ETH_WriteBlock@data+1,ETH_WriteBlock@p+1
 24385  007FC6  968A               	bcf	3978,3,c	;volatile
 24386                           
 24387                           ;encX24j600_spi.c: 398: TXPacketSize += len;
 24388  007FC8  5005               	movf	ETH_WriteBlock@len,w,c
 24389  007FCA  0101               	movlb	1	; () banked
 24390  007FCC  279A               	addwf	_TXPacketSize& (0+255),f,b
 24391  007FCE  5006               	movf	ETH_WriteBlock@len+1,w,c
 24392  007FD0  239B               	addwfc	(_TXPacketSize+1)& (0+255),f,b
 24393                           
 24394                           ; BSR set to: 1
 24395                           ;encX24j600_spi.c: 399: SPI_ExchangeByte(wgpdata_inst);
 24396  007FD2  0E2A               	movlw	42
 24397  007FD4  ECEE  F045         	call	_SPI_ExchangeByte
 24398                           
 24399                           ;encX24j600_spi.c: 400: while(len--)
 24400  007FD8  D015               	goto	l8030
 24401  007FDA                     l8026:
 24402                           
 24403                           ;encX24j600_spi.c: 401: {
 24404                           ;encX24j600_spi.c: 402: SPI_ExchangeByte(*p++);
 24405  007FDA  C007  FFF6         	movff	ETH_WriteBlock@p,tblptrl
 24406  007FDE  C008  FFF7         	movff	ETH_WriteBlock@p+1,tblptrh
 24407  007FE2  0E00               	movlw	low (__smallconst shr (0+16))
 24408  007FE4  6EF8               	movwf	tblptru,c
 24409  007FE6  0E0F               	movlw	(high __ramtop+-1)
 24410  007FE8  64F7               	cpfsgt	tblptrh,c
 24411  007FEA  D003               	bra	u10837
 24412  007FEC  0008               	tblrd		*
 24413  007FEE  50F5               	movf	tablat,w,c
 24414  007FF0  D005               	bra	u10830
 24415  007FF2                     u10837:
 24416  007FF2  CFF6 FFE9          	movff	tblptrl,fsr0l
 24417  007FF6  CFF7 FFEA          	movff	tblptrh,fsr0h
 24418  007FFA  50EF               	movf	indf0,w,c
 24419  007FFC                     u10830:
 24420  007FFC  ECEE  F045         	call	_SPI_ExchangeByte
 24421  008000  4A07               	infsnz	ETH_WriteBlock@p,f,c
 24422  008002  2A08               	incf	ETH_WriteBlock@p+1,f,c
 24423  008004                     l8030:
 24424  008004  0605               	decf	ETH_WriteBlock@len,f,c
 24425  008006  A0D8               	btfss	status,0,c
 24426  008008  0606               	decf	ETH_WriteBlock@len+1,f,c
 24427  00800A  2805               	incf	ETH_WriteBlock@len,w,c
 24428  00800C  E1E6               	bnz	l8026
 24429  00800E  2806               	incf	ETH_WriteBlock@len+1,w,c
 24430  008010  E1E4               	bnz	l8026
 24431                           
 24432                           ;encX24j600_spi.c: 403: }
 24433                           ;encX24j600_spi.c: 404: do{LATB3 = 1;} while(0);
 24434  008012  868A               	bsf	3978,3,c	;volatile
 24435  008014  0012               	return		;funcret
 24436  008016                     __end_of_ETH_WriteBlock:
 24437                           	opt stack 0
 24438                           tosu	equ	0xFFF
 24439                           tosh	equ	0xFFE
 24440                           tosl	equ	0xFFD
 24441                           pclath	equ	0xFFA
 24442                           tblptru	equ	0xFF8
 24443                           tblptrh	equ	0xFF7
 24444                           tblptrl	equ	0xFF6
 24445                           tablat	equ	0xFF5
 24446                           prodh	equ	0xFF4
 24447                           prodl	equ	0xFF3
 24448                           intcon	equ	0xFF2
 24449                           intcon2	equ	0xFF1
 24450                           indf0	equ	0xFEF
 24451                           postinc0	equ	0xFEE
 24452                           fsr0h	equ	0xFEA
 24453                           fsr0l	equ	0xFE9
 24454                           wreg	equ	0xFE8
 24455                           postinc1	equ	0xFE6
 24456                           postdec1	equ	0xFE5
 24457                           plusw1	equ	0xFE3
 24458                           fsr1h	equ	0xFE2
 24459                           fsr1l	equ	0xFE1
 24460                           indf2	equ	0xFDF
 24461                           postinc2	equ	0xFDE
 24462                           postdec2	equ	0xFDD
 24463                           plusw2	equ	0xFDB
 24464                           fsr2h	equ	0xFDA
 24465                           fsr2l	equ	0xFD9
 24466                           status	equ	0xFD8
 24467                           
 24468 ;; *************** function _ETH_Write16 *****************
 24469 ;; Defined at:
 24470 ;;		line 347 in file "../../TCPIP Library/ethernet_drivers/encX24j600_spi.c"
 24471 ;; Parameters:    Size  Location     Type
 24472 ;;  data            2    2[COMRAM] unsigned int 
 24473 ;; Auto vars:     Size  Location     Type
 24474 ;;		None
 24475 ;; Return value:  Size  Location     Type
 24476 ;;		None               void
 24477 ;; Registers used:
 24478 ;;		wreg, status,2, status,0, cstack
 24479 ;; Tracked objects:
 24480 ;;		On entry : 0/0
 24481 ;;		On exit  : 0/0
 24482 ;;		Unchanged: 0/0
 24483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24484 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24487 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24488 ;;Total ram usage:        2 bytes
 24489 ;; Hardware stack levels used:    1
 24490 ;; Hardware stack levels required when called:    4
 24491 ;; This function calls:
 24492 ;;		_SPI_ExchangeByte
 24493 ;; This function is called by:
 24494 ;;		_ETH_WriteStart
 24495 ;;		_DHCP_Request
 24496 ;;		_ICMP_EchoReply
 24497 ;;		_IPv4_Start
 24498 ;;		_UDP_Start
 24499 ;; This function uses a non-reentrant model
 24500 ;;
 24501                           
 24502                           	psect	text94
 24503  0089C2                     __ptext94:
 24504                           	opt stack 0
 24505  0089C2                     _ETH_Write16:
 24506                           	opt stack 20
 24507                           
 24508                           ;incstack = 0
 24509                           ;encX24j600_spi.c: 349: do{LATB3 = 0;} while(0);
 24510  0089C2  968A               	bcf	3978,3,c	;volatile
 24511                           
 24512                           ;encX24j600_spi.c: 350: TXPacketSize += 2;
 24513  0089C4  0E02               	movlw	2
 24514  0089C6  0101               	movlb	1	; () banked
 24515  0089C8  279A               	addwf	_TXPacketSize& (0+255),f,b
 24516  0089CA  0E00               	movlw	0
 24517  0089CC  239B               	addwfc	(_TXPacketSize+1)& (0+255),f,b
 24518                           
 24519                           ; BSR set to: 1
 24520                           ;encX24j600_spi.c: 351: SPI_ExchangeByte(wgpdata_inst);
 24521  0089CE  0E2A               	movlw	42
 24522  0089D0  ECEE  F045         	call	_SPI_ExchangeByte
 24523                           
 24524                           ;encX24j600_spi.c: 352: SPI_ExchangeByte(((uint8_t*) &data)[1]);
 24525  0089D4  5004               	movf	ETH_Write16@data+1,w,c
 24526  0089D6  ECEE  F045         	call	_SPI_ExchangeByte
 24527                           
 24528                           ;encX24j600_spi.c: 353: SPI_ExchangeByte(((uint8_t*) &data)[0]);
 24529  0089DA  5003               	movf	ETH_Write16@data,w,c
 24530  0089DC  ECEE  F045         	call	_SPI_ExchangeByte
 24531  0089E0  868A               	bsf	3978,3,c	;volatile
 24532  0089E2  0012               	return		;funcret
 24533  0089E4                     __end_of_ETH_Write16:
 24534                           	opt stack 0
 24535                           tosu	equ	0xFFF
 24536                           tosh	equ	0xFFE
 24537                           tosl	equ	0xFFD
 24538                           pclath	equ	0xFFA
 24539                           tblptru	equ	0xFF8
 24540                           tblptrh	equ	0xFF7
 24541                           tblptrl	equ	0xFF6
 24542                           tablat	equ	0xFF5
 24543                           prodh	equ	0xFF4
 24544                           prodl	equ	0xFF3
 24545                           intcon	equ	0xFF2
 24546                           intcon2	equ	0xFF1
 24547                           indf0	equ	0xFEF
 24548                           postinc0	equ	0xFEE
 24549                           fsr0h	equ	0xFEA
 24550                           fsr0l	equ	0xFE9
 24551                           wreg	equ	0xFE8
 24552                           postinc1	equ	0xFE6
 24553                           postdec1	equ	0xFE5
 24554                           plusw1	equ	0xFE3
 24555                           fsr1h	equ	0xFE2
 24556                           fsr1l	equ	0xFE1
 24557                           indf2	equ	0xFDF
 24558                           postinc2	equ	0xFDE
 24559                           postdec2	equ	0xFDD
 24560                           plusw2	equ	0xFDB
 24561                           fsr2h	equ	0xFDA
 24562                           fsr2l	equ	0xFD9
 24563                           status	equ	0xFD8
 24564                           
 24565 ;; *************** function _ETH_GetMAC *****************
 24566 ;; Defined at:
 24567 ;;		line 456 in file "../../TCPIP Library/ethernet_drivers/encX24J600_driver.c"
 24568 ;; Parameters:    Size  Location     Type
 24569 ;;  macAddr         2    7[COMRAM] PTR unsigned char 
 24570 ;;		 -> DHCP_Handler@ethMAC(6), DHCP_Request@ethMAC(6), ARPV4_Request@header(28), header.sha(6), 
 24571 ;;		 -> ARPV4_Packet@header(28), ethMAC(6), 
 24572 ;; Auto vars:     Size  Location     Type
 24573 ;;		None
 24574 ;; Return value:  Size  Location     Type
 24575 ;;		None               void
 24576 ;; Registers used:
 24577 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24578 ;; Tracked objects:
 24579 ;;		On entry : 0/0
 24580 ;;		On exit  : 0/0
 24581 ;;		Unchanged: 0/0
 24582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24583 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24586 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24587 ;;Total ram usage:        2 bytes
 24588 ;; Hardware stack levels used:    1
 24589 ;; Hardware stack levels required when called:    6
 24590 ;; This function calls:
 24591 ;;		_ETH_MACRead8
 24592 ;; This function is called by:
 24593 ;;		_ETH_Init
 24594 ;;		_ARPV4_Packet
 24595 ;;		_ARPV4_Request
 24596 ;;		_DHCP_Request
 24597 ;;		_DHCP_Handler
 24598 ;; This function uses a non-reentrant model
 24599 ;;
 24600                           
 24601                           	psect	text95
 24602  007D90                     __ptext95:
 24603                           	opt stack 0
 24604  007D90                     _ETH_GetMAC:
 24605                           	opt stack 18
 24606                           
 24607                           ;encX24J600_driver.c: 459: *macAddr++ = ETH_MACRead8(XJ600_MAADR1L);
 24608                           
 24609                           ;incstack = 0
 24610  007D90  0E64               	movlw	100
 24611  007D92  EC11  F043         	call	_ETH_MACRead8
 24612  007D96  C008  FFD9         	movff	ETH_GetMAC@macAddr,fsr2l
 24613  007D9A  C009  FFDA         	movff	ETH_GetMAC@macAddr+1,fsr2h
 24614  007D9E  6EDF               	movwf	indf2,c
 24615  007DA0  4A08               	infsnz	ETH_GetMAC@macAddr,f,c
 24616  007DA2  2A09               	incf	ETH_GetMAC@macAddr+1,f,c
 24617                           
 24618                           ;encX24J600_driver.c: 460: *macAddr++ = ETH_MACRead8(XJ600_MAADR1H);
 24619  007DA4  0E65               	movlw	101
 24620  007DA6  EC11  F043         	call	_ETH_MACRead8
 24621  007DAA  C008  FFD9         	movff	ETH_GetMAC@macAddr,fsr2l
 24622  007DAE  C009  FFDA         	movff	ETH_GetMAC@macAddr+1,fsr2h
 24623  007DB2  6EDF               	movwf	indf2,c
 24624  007DB4  4A08               	infsnz	ETH_GetMAC@macAddr,f,c
 24625  007DB6  2A09               	incf	ETH_GetMAC@macAddr+1,f,c
 24626                           
 24627                           ;encX24J600_driver.c: 461: *macAddr++ = ETH_MACRead8(XJ600_MAADR2L);
 24628  007DB8  0E62               	movlw	98
 24629  007DBA  EC11  F043         	call	_ETH_MACRead8
 24630  007DBE  C008  FFD9         	movff	ETH_GetMAC@macAddr,fsr2l
 24631  007DC2  C009  FFDA         	movff	ETH_GetMAC@macAddr+1,fsr2h
 24632  007DC6  6EDF               	movwf	indf2,c
 24633  007DC8  4A08               	infsnz	ETH_GetMAC@macAddr,f,c
 24634  007DCA  2A09               	incf	ETH_GetMAC@macAddr+1,f,c
 24635                           
 24636                           ;encX24J600_driver.c: 462: *macAddr++ = ETH_MACRead8(XJ600_MAADR2H);
 24637  007DCC  0E63               	movlw	99
 24638  007DCE  EC11  F043         	call	_ETH_MACRead8
 24639  007DD2  C008  FFD9         	movff	ETH_GetMAC@macAddr,fsr2l
 24640  007DD6  C009  FFDA         	movff	ETH_GetMAC@macAddr+1,fsr2h
 24641  007DDA  6EDF               	movwf	indf2,c
 24642  007DDC  4A08               	infsnz	ETH_GetMAC@macAddr,f,c
 24643  007DDE  2A09               	incf	ETH_GetMAC@macAddr+1,f,c
 24644                           
 24645                           ;encX24J600_driver.c: 463: *macAddr++ = ETH_MACRead8(XJ600_MAADR3L);
 24646  007DE0  0E60               	movlw	96
 24647  007DE2  EC11  F043         	call	_ETH_MACRead8
 24648  007DE6  C008  FFD9         	movff	ETH_GetMAC@macAddr,fsr2l
 24649  007DEA  C009  FFDA         	movff	ETH_GetMAC@macAddr+1,fsr2h
 24650  007DEE  6EDF               	movwf	indf2,c
 24651  007DF0  4A08               	infsnz	ETH_GetMAC@macAddr,f,c
 24652  007DF2  2A09               	incf	ETH_GetMAC@macAddr+1,f,c
 24653                           
 24654                           ;encX24J600_driver.c: 464: *macAddr++ = ETH_MACRead8(XJ600_MAADR3H);
 24655  007DF4  0E61               	movlw	97
 24656  007DF6  EC11  F043         	call	_ETH_MACRead8
 24657  007DFA  C008  FFD9         	movff	ETH_GetMAC@macAddr,fsr2l
 24658  007DFE  C009  FFDA         	movff	ETH_GetMAC@macAddr+1,fsr2h
 24659  007E02  6EDF               	movwf	indf2,c
 24660  007E04  4A08               	infsnz	ETH_GetMAC@macAddr,f,c
 24661  007E06  2A09               	incf	ETH_GetMAC@macAddr+1,f,c
 24662  007E08  0012               	return		;funcret
 24663  007E0A                     __end_of_ETH_GetMAC:
 24664                           	opt stack 0
 24665                           tosu	equ	0xFFF
 24666                           tosh	equ	0xFFE
 24667                           tosl	equ	0xFFD
 24668                           pclath	equ	0xFFA
 24669                           tblptru	equ	0xFF8
 24670                           tblptrh	equ	0xFF7
 24671                           tblptrl	equ	0xFF6
 24672                           tablat	equ	0xFF5
 24673                           prodh	equ	0xFF4
 24674                           prodl	equ	0xFF3
 24675                           intcon	equ	0xFF2
 24676                           intcon2	equ	0xFF1
 24677                           indf0	equ	0xFEF
 24678                           postinc0	equ	0xFEE
 24679                           fsr0h	equ	0xFEA
 24680                           fsr0l	equ	0xFE9
 24681                           wreg	equ	0xFE8
 24682                           postinc1	equ	0xFE6
 24683                           postdec1	equ	0xFE5
 24684                           plusw1	equ	0xFE3
 24685                           fsr1h	equ	0xFE2
 24686                           fsr1l	equ	0xFE1
 24687                           indf2	equ	0xFDF
 24688                           postinc2	equ	0xFDE
 24689                           postdec2	equ	0xFDD
 24690                           plusw2	equ	0xFDB
 24691                           fsr2h	equ	0xFDA
 24692                           fsr2l	equ	0xFD9
 24693                           status	equ	0xFD8
 24694                           
 24695 ;; *************** function _ETH_MACRead8 *****************
 24696 ;; Defined at:
 24697 ;;		line 504 in file "../../TCPIP Library/ethernet_drivers/encX24j600_spi.c"
 24698 ;; Parameters:    Size  Location     Type
 24699 ;;  a               1    wreg     enum E6725
 24700 ;; Auto vars:     Size  Location     Type
 24701 ;;  a               1    6[COMRAM] enum E6725
 24702 ;;  bank            1    5[COMRAM] unsigned char 
 24703 ;;  v               1    4[COMRAM] unsigned char 
 24704 ;; Return value:  Size  Location     Type
 24705 ;;                  1    wreg      unsigned char 
 24706 ;; Registers used:
 24707 ;;		wreg, status,2, status,0, cstack
 24708 ;; Tracked objects:
 24709 ;;		On entry : 0/0
 24710 ;;		On exit  : 0/0
 24711 ;;		Unchanged: 0/0
 24712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24714 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24716 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24717 ;;Total ram usage:        3 bytes
 24718 ;; Hardware stack levels used:    1
 24719 ;; Hardware stack levels required when called:    5
 24720 ;; This function calls:
 24721 ;;		_ENCx24_BankselSPI
 24722 ;;		_SPI_ExchangeByte
 24723 ;; This function is called by:
 24724 ;;		_ETH_GetMAC
 24725 ;; This function uses a non-reentrant model
 24726 ;;
 24727                           
 24728                           	psect	text96
 24729  008622                     __ptext96:
 24730                           	opt stack 0
 24731  008622                     _ETH_MACRead8:
 24732                           	opt stack 18
 24733                           
 24734                           ;incstack = 0
 24735                           ;ETH_MACRead8@a stored from wreg
 24736  008622  6E07               	movwf	ETH_MACRead8@a,c
 24737                           
 24738                           ;encX24j600_spi.c: 506: uint8_t v;
 24739                           ;encX24j600_spi.c: 507: uint8_t bank;
 24740                           ;encX24j600_spi.c: 509: bank = a & 0xE0;
 24741  008624  5007               	movf	ETH_MACRead8@a,w,c
 24742  008626  0BE0               	andlw	224
 24743  008628  6E06               	movwf	ETH_MACRead8@bank,c
 24744                           
 24745                           ;encX24j600_spi.c: 510: if(bank != 0X80)
 24746  00862A  0E80               	movlw	128
 24747  00862C  1806               	xorwf	ETH_MACRead8@bank,w,c
 24748  00862E  E009               	bz	l739
 24749                           
 24750                           ;encX24j600_spi.c: 511: {
 24751                           ;encX24j600_spi.c: 512: ENCx24_BankselSPI(a);
 24752  008630  5007               	movf	ETH_MACRead8@a,w,c
 24753  008632  EC0B  F040         	call	_ENCx24_BankselSPI
 24754  008636  968A               	bcf	3978,3,c	;volatile
 24755                           
 24756                           ;encX24j600_spi.c: 514: SPI_ExchangeByte(rcr_inst| (a & 0x1F));
 24757  008638  5007               	movf	ETH_MACRead8@a,w,c
 24758  00863A  0B1F               	andlw	31
 24759  00863C  ECEE  F045         	call	_SPI_ExchangeByte
 24760                           
 24761                           ;encX24j600_spi.c: 515: }
 24762  008640  D007               	goto	l738
 24763  008642                     l739:
 24764  008642  968A               	bcf	3978,3,c	;volatile
 24765                           
 24766                           ;encX24j600_spi.c: 519: SPI_ExchangeByte(rcru_inst);
 24767  008644  0E20               	movlw	32
 24768  008646  ECEE  F045         	call	_SPI_ExchangeByte
 24769                           
 24770                           ;encX24j600_spi.c: 520: SPI_ExchangeByte(a);
 24771  00864A  5007               	movf	ETH_MACRead8@a,w,c
 24772  00864C  ECEE  F045         	call	_SPI_ExchangeByte
 24773  008650                     l738:
 24774                           
 24775                           ;encX24j600_spi.c: 521: }
 24776                           ;encX24j600_spi.c: 522: v = SPI_ExchangeByte(0);
 24777  008650  0E00               	movlw	0
 24778  008652  ECEE  F045         	call	_SPI_ExchangeByte
 24779  008656  6E05               	movwf	ETH_MACRead8@v,c
 24780  008658  868A               	bsf	3978,3,c	;volatile
 24781                           
 24782                           ;encX24j600_spi.c: 525: return v;
 24783  00865A  5005               	movf	ETH_MACRead8@v,w,c
 24784  00865C  0012               	return		;funcret
 24785  00865E                     __end_of_ETH_MACRead8:
 24786                           	opt stack 0
 24787                           tosu	equ	0xFFF
 24788                           tosh	equ	0xFFE
 24789                           tosl	equ	0xFFD
 24790                           pclath	equ	0xFFA
 24791                           tblptru	equ	0xFF8
 24792                           tblptrh	equ	0xFF7
 24793                           tblptrl	equ	0xFF6
 24794                           tablat	equ	0xFF5
 24795                           prodh	equ	0xFF4
 24796                           prodl	equ	0xFF3
 24797                           intcon	equ	0xFF2
 24798                           intcon2	equ	0xFF1
 24799                           indf0	equ	0xFEF
 24800                           postinc0	equ	0xFEE
 24801                           fsr0h	equ	0xFEA
 24802                           fsr0l	equ	0xFE9
 24803                           wreg	equ	0xFE8
 24804                           postinc1	equ	0xFE6
 24805                           postdec1	equ	0xFE5
 24806                           plusw1	equ	0xFE3
 24807                           fsr1h	equ	0xFE2
 24808                           fsr1l	equ	0xFE1
 24809                           indf2	equ	0xFDF
 24810                           postinc2	equ	0xFDE
 24811                           postdec2	equ	0xFDD
 24812                           plusw2	equ	0xFDB
 24813                           fsr2h	equ	0xFDA
 24814                           fsr2l	equ	0xFD9
 24815                           status	equ	0xFD8
 24816                           
 24817 ;; *************** function _ARPV4_Lookup *****************
 24818 ;; Defined at:
 24819 ;;		line 234 in file "../../TCPIP Library/source/arpv4.c"
 24820 ;; Parameters:    Size  Location     Type
 24821 ;;  ip_address      4    1[COMRAM] unsigned long 
 24822 ;; Auto vars:     Size  Location     Type
 24823 ;;  entry_pointe    2    9[COMRAM] PTR struct .
 24824 ;;		 -> arpMap(104), 
 24825 ;;  x               1   11[COMRAM] unsigned char 
 24826 ;; Return value:  Size  Location     Type
 24827 ;;                  2    1[COMRAM] PTR struct .
 24828 ;; Registers used:
 24829 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24830 ;; Tracked objects:
 24831 ;;		On entry : F/1
 24832 ;;		On exit  : F/1
 24833 ;;		Unchanged: F/0
 24834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24835 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24836 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24837 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24838 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24839 ;;Total ram usage:       11 bytes
 24840 ;; Hardware stack levels used:    1
 24841 ;; Hardware stack levels required when called:    3
 24842 ;; This function calls:
 24843 ;;		Nothing
 24844 ;; This function is called by:
 24845 ;;		_IPv4_Start
 24846 ;; This function uses a non-reentrant model
 24847 ;;
 24848                           
 24849                           	psect	text97
 24850  008206                     __ptext97:
 24851                           	opt stack 0
 24852  008206                     _ARPV4_Lookup:
 24853                           	opt stack 22
 24854                           
 24855                           ; BSR set to: 1
 24856                           ;arpv4.c: 236: arpMap_t *entry_pointer = arpMap;
 24857                           
 24858                           ;incstack = 0
 24859  008206  0E00               	movlw	low _arpMap
 24860  008208  6E0A               	movwf	ARPV4_Lookup@entry_pointer,c
 24861  00820A  0E03               	movlw	high _arpMap
 24862  00820C  6E0B               	movwf	ARPV4_Lookup@entry_pointer+1,c
 24863                           
 24864                           ; BSR set to: 1
 24865                           ;arpv4.c: 237: uint8_t x;
 24866                           ;arpv4.c: 239: for(x = 0; x < 8; x++)
 24867  00820E  6A0C               	clrf	ARPV4_Lookup@x,c
 24868  008210                     l8262:
 24869                           
 24870                           ; BSR set to: 1
 24871                           ;arpv4.c: 240: {
 24872                           ;arpv4.c: 241: if(entry_pointer->ipAddress == ip_address)
 24873  008210  EE20 F006          	lfsr	2,6
 24874  008214  500A               	movf	ARPV4_Lookup@entry_pointer,w,c
 24875  008216  26D9               	addwf	fsr2l,f,c
 24876  008218  500B               	movf	ARPV4_Lookup@entry_pointer+1,w,c
 24877  00821A  22DA               	addwfc	fsr2h,f,c
 24878  00821C  5002               	movf	ARPV4_Lookup@ip_address,w,c
 24879  00821E  18DE               	xorwf	postinc2,w,c
 24880  008220  E10E               	bnz	l8268
 24881  008222  5003               	movf	ARPV4_Lookup@ip_address+1,w,c
 24882  008224  18DE               	xorwf	postinc2,w,c
 24883  008226  E10B               	bnz	l8268
 24884  008228  5004               	movf	ARPV4_Lookup@ip_address+2,w,c
 24885  00822A  18DE               	xorwf	postinc2,w,c
 24886  00822C  E108               	bnz	l8268
 24887  00822E  5005               	movf	ARPV4_Lookup@ip_address+3,w,c
 24888  008230  18DE               	xorwf	postinc2,w,c
 24889  008232  E105               	bnz	l8268
 24890                           
 24891                           ; BSR set to: 1
 24892                           ;arpv4.c: 242: return &entry_pointer->macAddress;
 24893  008234  C00A  F002         	movff	ARPV4_Lookup@entry_pointer,?_ARPV4_Lookup
 24894  008238  C00B  F003         	movff	ARPV4_Lookup@entry_pointer+1,?_ARPV4_Lookup+1
 24895  00823C  0012               	return	
 24896  00823E                     l8268:
 24897                           
 24898                           ; BSR set to: 1
 24899                           ;arpv4.c: 243: entry_pointer ++;
 24900  00823E  0E0D               	movlw	13
 24901  008240  260A               	addwf	ARPV4_Lookup@entry_pointer,f,c
 24902  008242  0E00               	movlw	0
 24903  008244  220B               	addwfc	ARPV4_Lookup@entry_pointer+1,f,c
 24904                           
 24905                           ; BSR set to: 1
 24906  008246  2A0C               	incf	ARPV4_Lookup@x,f,c
 24907                           
 24908                           ; BSR set to: 1
 24909  008248  0E07               	movlw	7
 24910  00824A  640C               	cpfsgt	ARPV4_Lookup@x,c
 24911  00824C  D7E1               	goto	l8262
 24912                           
 24913                           ; BSR set to: 1
 24914                           ;arpv4.c: 244: }
 24915                           ;arpv4.c: 245: return 0;
 24916  00824E  6A02               	clrf	?_ARPV4_Lookup,c
 24917  008250  6A03               	clrf	?_ARPV4_Lookup+1,c
 24918                           
 24919                           ; BSR set to: 1
 24920  008252  0012               	return		;funcret
 24921  008254                     __end_of_ARPV4_Lookup:
 24922                           	opt stack 0
 24923                           tosu	equ	0xFFF
 24924                           tosh	equ	0xFFE
 24925                           tosl	equ	0xFFD
 24926                           pclath	equ	0xFFA
 24927                           tblptru	equ	0xFF8
 24928                           tblptrh	equ	0xFF7
 24929                           tblptrl	equ	0xFF6
 24930                           tablat	equ	0xFF5
 24931                           prodh	equ	0xFF4
 24932                           prodl	equ	0xFF3
 24933                           intcon	equ	0xFF2
 24934                           intcon2	equ	0xFF1
 24935                           indf0	equ	0xFEF
 24936                           postinc0	equ	0xFEE
 24937                           fsr0h	equ	0xFEA
 24938                           fsr0l	equ	0xFE9
 24939                           wreg	equ	0xFE8
 24940                           postinc1	equ	0xFE6
 24941                           postdec1	equ	0xFE5
 24942                           plusw1	equ	0xFE3
 24943                           fsr1h	equ	0xFE2
 24944                           fsr1l	equ	0xFE1
 24945                           indf2	equ	0xFDF
 24946                           postinc2	equ	0xFDE
 24947                           postdec2	equ	0xFDD
 24948                           plusw2	equ	0xFDB
 24949                           fsr2h	equ	0xFDA
 24950                           fsr2l	equ	0xFD9
 24951                           status	equ	0xFD8
 24952                           
 24953 ;; *************** function _IPV4_Send *****************
 24954 ;; Defined at:
 24955 ;;		line 267 in file "../../TCPIP Library/source/ipv4.c"
 24956 ;; Parameters:    Size  Location     Type
 24957 ;;  payloadLengt    2   28[COMRAM] unsigned int 
 24958 ;; Auto vars:     Size  Location     Type
 24959 ;;  totalLength     2   37[COMRAM] unsigned int 
 24960 ;;  cksm            2   35[COMRAM] unsigned int 
 24961 ;;  ret             1   34[COMRAM] enum E6944
 24962 ;; Return value:  Size  Location     Type
 24963 ;;                  1    wreg      enum E366
 24964 ;; Registers used:
 24965 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24966 ;; Tracked objects:
 24967 ;;		On entry : 0/0
 24968 ;;		On exit  : F/1
 24969 ;;		Unchanged: 0/0
 24970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24971 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24972 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24973 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24974 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24975 ;;Total ram usage:       11 bytes
 24976 ;; Hardware stack levels used:    1
 24977 ;; Hardware stack levels required when called:    8
 24978 ;; This function calls:
 24979 ;;		_ETH_Insert
 24980 ;;		_ETH_Send
 24981 ;;		_ETH_TxComputeChecksum
 24982 ;; This function is called by:
 24983 ;;		_ICMP_EchoReply
 24984 ;;		_TCP_Snd
 24985 ;;		_UDP_Send
 24986 ;; This function uses a non-reentrant model
 24987 ;;
 24988                           
 24989                           	psect	text98
 24990  007EEC                     __ptext98:
 24991                           	opt stack 0
 24992  007EEC                     _IPV4_Send:
 24993                           	opt stack 18
 24994                           
 24995                           ;ipv4.c: 269: uint16_t totalLength;
 24996                           ;ipv4.c: 270: uint16_t cksm;
 24997                           ;ipv4.c: 271: error_msg ret;
 24998                           ;ipv4.c: 273: totalLength = 20 + payloadLength;
 24999                           
 25000                           ; BSR set to: 1
 25001                           ;incstack = 0
 25002  007EEC  0E14               	movlw	20
 25003  007EEE  241D               	addwf	IPV4_Send@payloadLength,w,c
 25004  007EF0  6E26               	movwf	IPV4_Send@totalLength,c
 25005  007EF2  0E00               	movlw	0
 25006  007EF4  201E               	addwfc	IPV4_Send@payloadLength+1,w,c
 25007  007EF6  6E27               	movwf	IPV4_Send@totalLength+1,c
 25008                           
 25009                           ;ipv4.c: 274: totalLength = ((((uint16_t)totalLength & (uint16_t)0xFF00) >> 8) | (((uint
      +                          16_t)totalLength & (uint16_t)0x00FF) << 8));
 25010  007EF8  5026               	movf	IPV4_Send@totalLength,w,c
 25011  007EFA  6E20               	movwf	(??_IPV4_Send+1)& (0+255),c
 25012  007EFC  6A1F               	clrf	??_IPV4_Send& (0+255),c
 25013  007EFE  5027               	movf	IPV4_Send@totalLength+1,w,c
 25014  007F00  6E21               	movwf	(??_IPV4_Send+2)& (0+255),c
 25015  007F02  6A22               	clrf	(??_IPV4_Send+3)& (0+255),c
 25016  007F04  501F               	movf	??_IPV4_Send,w,c
 25017  007F06  1021               	iorwf	??_IPV4_Send+2,w,c
 25018  007F08  6E26               	movwf	IPV4_Send@totalLength,c
 25019  007F0A  5020               	movf	??_IPV4_Send+1,w,c
 25020  007F0C  1022               	iorwf	??_IPV4_Send+3,w,c
 25021  007F0E  6E27               	movwf	IPV4_Send@totalLength+1,c
 25022                           
 25023                           ;ipv4.c: 277: ETH_Insert((char *)&totalLength, 2, sizeof(ethernetFrame_t) + (int)(((char
      +                          *)&((ipv4Header_t *)1)->length)-1));
 25024  007F10  6A0C               	clrf	ETH_Insert@len+1,c
 25025  007F12  0E02               	movlw	2
 25026  007F14  6E0B               	movwf	ETH_Insert@len,c
 25027  007F16  6A0E               	clrf	ETH_Insert@offset+1,c
 25028  007F18  0E10               	movlw	16
 25029  007F1A  6E0D               	movwf	ETH_Insert@offset,c
 25030  007F1C  0E26               	movlw	IPV4_Send@totalLength& (0+255)
 25031  007F1E  EC8A  F040         	call	_ETH_Insert
 25032                           
 25033                           ;ipv4.c: 279: cksm = ETH_TxComputeChecksum(sizeof(ethernetFrame_t),sizeof(ipv4Header_t),
      +                          0);
 25034  007F22  6A0E               	clrf	ETH_TxComputeChecksum@position+1,c
 25035  007F24  0E0E               	movlw	14
 25036  007F26  6E0D               	movwf	ETH_TxComputeChecksum@position,c
 25037  007F28  6A10               	clrf	ETH_TxComputeChecksum@length+1,c
 25038  007F2A  0E14               	movlw	20
 25039  007F2C  6E0F               	movwf	ETH_TxComputeChecksum@length,c
 25040  007F2E  6A12               	clrf	ETH_TxComputeChecksum@seed+1,c
 25041  007F30  6A11               	clrf	ETH_TxComputeChecksum@seed,c
 25042  007F32  ECDD  F03A         	call	_ETH_TxComputeChecksum	;wreg free
 25043  007F36  C00D  F024         	movff	?_ETH_TxComputeChecksum,IPV4_Send@cksm
 25044  007F3A  C00E  F025         	movff	?_ETH_TxComputeChecksum+1,IPV4_Send@cksm+1
 25045                           
 25046                           ;ipv4.c: 281: ETH_Insert((char *)&cksm, 2, sizeof(ethernetFrame_t) + (int)(((char*)&((ip
      +                          v4Header_t *)1)->headerCksm)-1));
 25047  007F3E  6A0C               	clrf	ETH_Insert@len+1,c
 25048  007F40  0E02               	movlw	2
 25049  007F42  6E0B               	movwf	ETH_Insert@len,c
 25050  007F44  6A0E               	clrf	ETH_Insert@offset+1,c
 25051  007F46  0E18               	movlw	24
 25052  007F48  6E0D               	movwf	ETH_Insert@offset,c
 25053  007F4A  0E24               	movlw	IPV4_Send@cksm& (0+255)
 25054  007F4C  EC8A  F040         	call	_ETH_Insert
 25055                           
 25056                           ;ipv4.c: 282: ret = ETH_Send();
 25057  007F50  ECF2  F044         	call	_ETH_Send	;wreg free
 25058  007F54  6E23               	movwf	IPV4_Send@ret,c
 25059                           
 25060                           ; BSR set to: 1
 25061                           ;ipv4.c: 284: return ret;
 25062  007F56  5023               	movf	IPV4_Send@ret,w,c
 25063                           
 25064                           ; BSR set to: 1
 25065  007F58  0012               	return		;funcret
 25066  007F5A                     __end_of_IPV4_Send:
 25067                           	opt stack 0
 25068                           tosu	equ	0xFFF
 25069                           tosh	equ	0xFFE
 25070                           tosl	equ	0xFFD
 25071                           pclath	equ	0xFFA
 25072                           tblptru	equ	0xFF8
 25073                           tblptrh	equ	0xFF7
 25074                           tblptrl	equ	0xFF6
 25075                           tablat	equ	0xFF5
 25076                           prodh	equ	0xFF4
 25077                           prodl	equ	0xFF3
 25078                           intcon	equ	0xFF2
 25079                           intcon2	equ	0xFF1
 25080                           indf0	equ	0xFEF
 25081                           postinc0	equ	0xFEE
 25082                           fsr0h	equ	0xFEA
 25083                           fsr0l	equ	0xFE9
 25084                           wreg	equ	0xFE8
 25085                           postinc1	equ	0xFE6
 25086                           postdec1	equ	0xFE5
 25087                           plusw1	equ	0xFE3
 25088                           fsr1h	equ	0xFE2
 25089                           fsr1l	equ	0xFE1
 25090                           indf2	equ	0xFDF
 25091                           postinc2	equ	0xFDE
 25092                           postdec2	equ	0xFDD
 25093                           plusw2	equ	0xFDB
 25094                           fsr2h	equ	0xFDA
 25095                           fsr2l	equ	0xFD9
 25096                           status	equ	0xFD8
 25097                           
 25098 ;; *************** function _ETH_TxComputeChecksum *****************
 25099 ;; Defined at:
 25100 ;;		line 501 in file "../../TCPIP Library/ethernet_drivers/encX24J600_driver.c"
 25101 ;; Parameters:    Size  Location     Type
 25102 ;;  position        2   12[COMRAM] unsigned int 
 25103 ;;  length          2   14[COMRAM] unsigned int 
 25104 ;;  seed            2   16[COMRAM] unsigned int 
 25105 ;; Auto vars:     Size  Location     Type
 25106 ;;  cksm            4   22[COMRAM] unsigned long 
 25107 ;;  econ1Val        2   26[COMRAM] unsigned int 
 25108 ;; Return value:  Size  Location     Type
 25109 ;;                  2   12[COMRAM] unsigned int 
 25110 ;; Registers used:
 25111 ;;		wreg, status,2, status,0, cstack
 25112 ;; Tracked objects:
 25113 ;;		On entry : 0/0
 25114 ;;		On exit  : 0/0
 25115 ;;		Unchanged: 0/0
 25116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25117 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25118 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25119 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25120 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25121 ;;Total ram usage:       16 bytes
 25122 ;; Hardware stack levels used:    1
 25123 ;; Hardware stack levels required when called:    7
 25124 ;; This function calls:
 25125 ;;		_ENCx24_BFC
 25126 ;;		_ENCx24_BFS
 25127 ;;		_ENCx24_Read
 25128 ;;		_ENCx24_Write
 25129 ;;		_waitForDMA
 25130 ;; This function is called by:
 25131 ;;		_ICMP_EchoReply
 25132 ;;		_IPV4_Send
 25133 ;;		_TCP_Snd
 25134 ;;		_UDP_Send
 25135 ;; This function uses a non-reentrant model
 25136 ;;
 25137                           
 25138                           	psect	text99
 25139  0075BA                     __ptext99:
 25140                           	opt stack 0
 25141  0075BA                     _ETH_TxComputeChecksum:
 25142                           	opt stack 0
 25143  0075BA                     i6L__ptext100:
 25144                           	opt stack 0
 25145  0075BA                     i6L_waitForDMA:
 25146                           	opt stack 0
 25147  0075BA                     i6Ll501:
 25148                           	opt stack 0
 25149  0075BA                     i6Ll8142:
 25150                           	opt stack 18
 25151                           
 25152                           ;encX24J600_driver.c: 487: {
 25153                           ;encX24J600_driver.c: 488: econ1_val = ENCx24_Read(XJ600_ECON1L);
 25154  0075BA  0EFE               	movlw	254
 25155  0075BC  ECC0  F041         	call	_ENCx24_Read
 25156  0075C0  C005  F00B         	movff	?_ENCx24_Read,waitForDMA@econ1_val
 25157  0075C4  C006  F00C         	movff	?_ENCx24_Read+1,waitForDMA@econ1_val+1
 25158  0075C8                     i6Ll8144:
 25159                           	opt stack 18
 25160                           
 25161                           ;encX24J600_driver.c: 489: } while ( econ1_val & 0x0020 );
 25162  0075C8  BA0B               	btfsc	waitForDMA@econ1_val,5,c
 25163  0075CA                     i6Lu10921:
 25164                           	opt stack 0
 25165  0075CA  D7F7               	goto	i6Ll501
 25166  0075CC                     i6Lu10920:
 25167                           	opt stack 0
 25168  0075CC                     i6Ll503:
 25169                           	opt stack 18
 25170                           
 25171                           ;encX24J600_driver.c: 515: ENCx24_BFC(XJ600_ECON1L, econ1Val);
 25172  0075CC  6A06               	clrf	ENCx24_BFC@bitMask+1,c
 25173  0075CE  0E1C               	movlw	28
 25174  0075D0  6E05               	movwf	ENCx24_BFC@bitMask,c
 25175  0075D2  0EFE               	movlw	254
 25176  0075D4  ECB3  F042         	call	_ENCx24_BFC
 25177                           
 25178                           ;encX24J600_driver.c: 518: ENCx24_Write(XJ600_EDMASTL, position);
 25179  0075D8  C00D  F005         	movff	ETH_TxComputeChecksum@position,ENCx24_Write@data
 25180  0075DC  C00E  F006         	movff	ETH_TxComputeChecksum@position+1,ENCx24_Write@data+1
 25181  0075E0  0E0A               	movlw	10
 25182  0075E2  EC72  F042         	call	_ENCx24_Write
 25183                           
 25184                           ;encX24J600_driver.c: 520: ENCx24_Write(XJ600_EDMALENL, length);
 25185  0075E6  C00F  F005         	movff	ETH_TxComputeChecksum@length,ENCx24_Write@data
 25186  0075EA  C010  F006         	movff	ETH_TxComputeChecksum@length+1,ENCx24_Write@data+1
 25187  0075EE  0E0C               	movlw	12
 25188  0075F0  EC72  F042         	call	_ENCx24_Write
 25189                           
 25190                           ;encX24J600_driver.c: 522: econ1Val = 0x0020;
 25191  0075F4  6A1C               	clrf	ETH_TxComputeChecksum@econ1Val+1,c
 25192  0075F6  0E20               	movlw	32
 25193  0075F8  6E1B               	movwf	ETH_TxComputeChecksum@econ1Val,c
 25194                           
 25195                           ;encX24J600_driver.c: 524: if (seed)
 25196  0075FA  5011               	movf	ETH_TxComputeChecksum@seed,w,c
 25197  0075FC  1012               	iorwf	ETH_TxComputeChecksum@seed+1,w,c
 25198  0075FE  E016               	bz	l8168
 25199                           
 25200                           ;encX24J600_driver.c: 525: {
 25201                           ;encX24J600_driver.c: 526: econ1Val |= 0x0008;
 25202  007600  861B               	bsf	ETH_TxComputeChecksum@econ1Val,3,c
 25203                           
 25204                           ;encX24J600_driver.c: 527: seed=~(seed);
 25205  007602  1E11               	comf	ETH_TxComputeChecksum@seed,f,c
 25206  007604  1E12               	comf	ETH_TxComputeChecksum@seed+1,f,c
 25207                           
 25208                           ;encX24J600_driver.c: 528: seed = ((((uint16_t)seed & (uint16_t)0xFF00) >> 8) | (((uint1
      +                          6_t)seed & (uint16_t)0x00FF) << 8));
 25209  007606  5011               	movf	ETH_TxComputeChecksum@seed,w,c
 25210  007608  6E14               	movwf	(??_ETH_TxComputeChecksum+1)& (0+255),c
 25211  00760A  6A13               	clrf	??_ETH_TxComputeChecksum& (0+255),c
 25212  00760C  5012               	movf	ETH_TxComputeChecksum@seed+1,w,c
 25213  00760E  6E15               	movwf	(??_ETH_TxComputeChecksum+2)& (0+255),c
 25214  007610  6A16               	clrf	(??_ETH_TxComputeChecksum+3)& (0+255),c
 25215  007612  5013               	movf	??_ETH_TxComputeChecksum,w,c
 25216  007614  1015               	iorwf	??_ETH_TxComputeChecksum+2,w,c
 25217  007616  6E11               	movwf	ETH_TxComputeChecksum@seed,c
 25218  007618  5014               	movf	??_ETH_TxComputeChecksum+1,w,c
 25219  00761A  1016               	iorwf	??_ETH_TxComputeChecksum+3,w,c
 25220  00761C  6E12               	movwf	ETH_TxComputeChecksum@seed+1,c
 25221                           
 25222                           ;encX24J600_driver.c: 529: ENCx24_Write(XJ600_EDMACSL, seed);
 25223  00761E  C011  F005         	movff	ETH_TxComputeChecksum@seed,ENCx24_Write@data
 25224  007622  C012  F006         	movff	ETH_TxComputeChecksum@seed+1,ENCx24_Write@data+1
 25225  007626  0E10               	movlw	16
 25226  007628  EC72  F042         	call	_ENCx24_Write
 25227  00762C                     l8168:
 25228                           
 25229                           ;encX24J600_driver.c: 530: }
 25230                           ;encX24J600_driver.c: 532: ENCx24_BFS(XJ600_ECON1L, econ1Val);
 25231  00762C  C01B  F005         	movff	ETH_TxComputeChecksum@econ1Val,ENCx24_BFS@bitMask
 25232  007630  C01C  F006         	movff	ETH_TxComputeChecksum@econ1Val+1,ENCx24_BFS@bitMask+1
 25233  007634  0EFE               	movlw	254
 25234  007636  EC93  F042         	call	_ENCx24_BFS
 25235  00763A                     i7L__ptext100:
 25236                           	opt stack 0
 25237  00763A                     i7L_waitForDMA:
 25238                           	opt stack 0
 25239  00763A                     i7Ll501:
 25240                           	opt stack 0
 25241  00763A                     i7Ll8142:
 25242                           	opt stack 18
 25243                           
 25244                           ;encX24J600_driver.c: 487: {
 25245                           ;encX24J600_driver.c: 488: econ1_val = ENCx24_Read(XJ600_ECON1L);
 25246  00763A  0EFE               	movlw	254
 25247  00763C  ECC0  F041         	call	_ENCx24_Read
 25248  007640  C005  F00B         	movff	?_ENCx24_Read,waitForDMA@econ1_val
 25249  007644  C006  F00C         	movff	?_ENCx24_Read+1,waitForDMA@econ1_val+1
 25250  007648                     i7Ll8144:
 25251                           	opt stack 18
 25252                           
 25253                           ;encX24J600_driver.c: 489: } while ( econ1_val & 0x0020 );
 25254  007648  BA0B               	btfsc	waitForDMA@econ1_val,5,c
 25255  00764A                     i7Lu10921:
 25256                           	opt stack 0
 25257  00764A  D7F7               	goto	i7Ll501
 25258  00764C                     i7Lu10920:
 25259                           	opt stack 0
 25260  00764C                     i7Ll503:
 25261                           	opt stack 18
 25262                           
 25263                           ;encX24J600_driver.c: 535: cksm = ENCx24_Read(XJ600_EDMACSL);
 25264  00764C  0E10               	movlw	16
 25265  00764E  ECC0  F041         	call	_ENCx24_Read
 25266  007652  C005  F017         	movff	?_ENCx24_Read,ETH_TxComputeChecksum@cksm
 25267  007656  C006  F018         	movff	?_ENCx24_Read+1,ETH_TxComputeChecksum@cksm+1
 25268  00765A  6A19               	clrf	ETH_TxComputeChecksum@cksm+2,c
 25269  00765C  6A1A               	clrf	ETH_TxComputeChecksum@cksm+3,c
 25270                           
 25271                           ;encX24J600_driver.c: 536: return cksm;
 25272  00765E  C017  F00D         	movff	ETH_TxComputeChecksum@cksm,?_ETH_TxComputeChecksum
 25273  007662  C018  F00E         	movff	ETH_TxComputeChecksum@cksm+1,?_ETH_TxComputeChecksum+1
 25274  007666  0012               	return		;funcret
 25275  007668                     __end_of_ETH_TxComputeChecksum:
 25276                           	opt stack 0
 25277                           tosu	equ	0xFFF
 25278                           tosh	equ	0xFFE
 25279                           tosl	equ	0xFFD
 25280                           pclath	equ	0xFFA
 25281                           tblptru	equ	0xFF8
 25282                           tblptrh	equ	0xFF7
 25283                           tblptrl	equ	0xFF6
 25284                           tablat	equ	0xFF5
 25285                           prodh	equ	0xFF4
 25286                           prodl	equ	0xFF3
 25287                           intcon	equ	0xFF2
 25288                           intcon2	equ	0xFF1
 25289                           indf0	equ	0xFEF
 25290                           postinc0	equ	0xFEE
 25291                           fsr0h	equ	0xFEA
 25292                           fsr0l	equ	0xFE9
 25293                           wreg	equ	0xFE8
 25294                           postinc1	equ	0xFE6
 25295                           postdec1	equ	0xFE5
 25296                           plusw1	equ	0xFE3
 25297                           fsr1h	equ	0xFE2
 25298                           fsr1l	equ	0xFE1
 25299                           indf2	equ	0xFDF
 25300                           postinc2	equ	0xFDE
 25301                           postdec2	equ	0xFDD
 25302                           plusw2	equ	0xFDB
 25303                           fsr2h	equ	0xFDA
 25304                           fsr2l	equ	0xFD9
 25305                           status	equ	0xFD8
 25306                           
 25307 ;; *************** function _waitForDMA *****************
 25308 ;; Defined at:
 25309 ;;		line 483 in file "../../TCPIP Library/ethernet_drivers/encX24J600_driver.c"
 25310 ;; Parameters:    Size  Location     Type
 25311 ;;		None
 25312 ;; Auto vars:     Size  Location     Type
 25313 ;;  econ1_val       2   10[COMRAM] unsigned int 
 25314 ;; Return value:  Size  Location     Type
 25315 ;;		None               void
 25316 ;; Registers used:
 25317 ;;		wreg, status,2, status,0, cstack
 25318 ;; Tracked objects:
 25319 ;;		On entry : 0/0
 25320 ;;		On exit  : 0/0
 25321 ;;		Unchanged: 0/0
 25322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25324 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25326 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25327 ;;Total ram usage:        2 bytes
 25328 ;; Hardware stack levels used:    1
 25329 ;; Hardware stack levels required when called:    6
 25330 ;; This function calls:
 25331 ;;		_ENCx24_Read
 25332 ;; This function is called by:
 25333 ;;		_ETH_Copy
 25334 ;;		_ETH_TxComputeChecksum
 25335 ;;		_ETH_RxComputeChecksum
 25336 ;; This function uses a non-reentrant model
 25337 ;;
 25338                           
 25339                           	psect	text100
 25340  000000                     __ptext100:
 25341                           	opt stack 0
 25342  000000                     _waitForDMA:
 25343                           	opt stack 0
 25344  000000                     __end_of_waitForDMA:
 25345                           	opt stack 0
 25346                           tosu	equ	0xFFF
 25347                           tosh	equ	0xFFE
 25348                           tosl	equ	0xFFD
 25349                           pclath	equ	0xFFA
 25350                           tblptru	equ	0xFF8
 25351                           tblptrh	equ	0xFF7
 25352                           tblptrl	equ	0xFF6
 25353                           tablat	equ	0xFF5
 25354                           prodh	equ	0xFF4
 25355                           prodl	equ	0xFF3
 25356                           intcon	equ	0xFF2
 25357                           intcon2	equ	0xFF1
 25358                           indf0	equ	0xFEF
 25359                           postinc0	equ	0xFEE
 25360                           fsr0h	equ	0xFEA
 25361                           fsr0l	equ	0xFE9
 25362                           wreg	equ	0xFE8
 25363                           postinc1	equ	0xFE6
 25364                           postdec1	equ	0xFE5
 25365                           plusw1	equ	0xFE3
 25366                           fsr1h	equ	0xFE2
 25367                           fsr1l	equ	0xFE1
 25368                           indf2	equ	0xFDF
 25369                           postinc2	equ	0xFDE
 25370                           postdec2	equ	0xFDD
 25371                           plusw2	equ	0xFDB
 25372                           fsr2h	equ	0xFDA
 25373                           fsr2l	equ	0xFD9
 25374                           status	equ	0xFD8
 25375                           
 25376 ;; *************** function _ENCx24_BFS *****************
 25377 ;; Defined at:
 25378 ;;		line 151 in file "../../TCPIP Library/ethernet_drivers/encX24j600_spi.c"
 25379 ;; Parameters:    Size  Location     Type
 25380 ;;  a               1    wreg     enum E6725
 25381 ;;  bitMask         2    4[COMRAM] unsigned int 
 25382 ;; Auto vars:     Size  Location     Type
 25383 ;;  a               1    7[COMRAM] enum E6725
 25384 ;;  bank            1    6[COMRAM] unsigned char 
 25385 ;; Return value:  Size  Location     Type
 25386 ;;		None               void
 25387 ;; Registers used:
 25388 ;;		wreg, status,2, status,0, cstack
 25389 ;; Tracked objects:
 25390 ;;		On entry : 0/0
 25391 ;;		On exit  : 0/0
 25392 ;;		Unchanged: 0/0
 25393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25394 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25395 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25397 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25398 ;;Total ram usage:        4 bytes
 25399 ;; Hardware stack levels used:    1
 25400 ;; Hardware stack levels required when called:    5
 25401 ;; This function calls:
 25402 ;;		_ENCx24_BankselSPI
 25403 ;;		_SPI_ExchangeByte
 25404 ;; This function is called by:
 25405 ;;		_ETH_SendSystemReset
 25406 ;;		_ETH_Init
 25407 ;;		_ETH_ResetReceiver
 25408 ;;		_ETH_Copy
 25409 ;;		_ETH_TxComputeChecksum
 25410 ;;		_ETH_RxComputeChecksum
 25411 ;;		_ENCx24_PhyRead
 25412 ;; This function uses a non-reentrant model
 25413 ;;
 25414                           
 25415                           	psect	text101
 25416  008526                     __ptext101:
 25417                           	opt stack 0
 25418  008526                     _ENCx24_BFS:
 25419                           	opt stack 19
 25420                           
 25421                           ;incstack = 0
 25422                           ;ENCx24_BFS@a stored from wreg
 25423  008526  6E08               	movwf	ENCx24_BFS@a,c
 25424                           
 25425                           ;encX24j600_spi.c: 153: uint8_t bank;
 25426                           ;encX24j600_spi.c: 154: bank = a & 0xE0;
 25427  008528  5008               	movf	ENCx24_BFS@a,w,c
 25428  00852A  0BE0               	andlw	224
 25429  00852C  6E07               	movwf	ENCx24_BFS@bank,c
 25430                           
 25431                           ;encX24j600_spi.c: 155: if(bank != 0X80)
 25432  00852E  0E80               	movlw	128
 25433  008530  1807               	xorwf	ENCx24_BFS@bank,w,c
 25434  008532  E00A               	bz	l578
 25435                           
 25436                           ;encX24j600_spi.c: 156: {
 25437                           ;encX24j600_spi.c: 157: ENCx24_BankselSPI(a);
 25438  008534  5008               	movf	ENCx24_BFS@a,w,c
 25439  008536  EC0B  F040         	call	_ENCx24_BankselSPI
 25440  00853A  968A               	bcf	3978,3,c	;volatile
 25441                           
 25442                           ;encX24j600_spi.c: 159: SPI_ExchangeByte(bfs_inst | (a & 0x1F));
 25443  00853C  5008               	movf	ENCx24_BFS@a,w,c
 25444  00853E  0B1F               	andlw	31
 25445  008540  0980               	iorlw	128
 25446  008542  ECEE  F045         	call	_SPI_ExchangeByte
 25447                           
 25448                           ;encX24j600_spi.c: 160: }
 25449  008546  D007               	goto	l577
 25450  008548                     l578:
 25451  008548  968A               	bcf	3978,3,c	;volatile
 25452                           
 25453                           ;encX24j600_spi.c: 164: SPI_ExchangeByte(bfsu_inst);
 25454  00854A  0E24               	movlw	36
 25455  00854C  ECEE  F045         	call	_SPI_ExchangeByte
 25456                           
 25457                           ;encX24j600_spi.c: 165: SPI_ExchangeByte(a);
 25458  008550  5008               	movf	ENCx24_BFS@a,w,c
 25459  008552  ECEE  F045         	call	_SPI_ExchangeByte
 25460  008556                     l577:
 25461                           
 25462                           ;encX24j600_spi.c: 166: }
 25463                           ;encX24j600_spi.c: 167: SPI_ExchangeByte(bitMask);
 25464  008556  5005               	movf	ENCx24_BFS@bitMask,w,c
 25465  008558  ECEE  F045         	call	_SPI_ExchangeByte
 25466                           
 25467                           ;encX24j600_spi.c: 168: SPI_ExchangeByte(bitMask>>8);
 25468  00855C  5006               	movf	ENCx24_BFS@bitMask+1,w,c
 25469  00855E  ECEE  F045         	call	_SPI_ExchangeByte
 25470  008562  868A               	bsf	3978,3,c	;volatile
 25471  008564  0012               	return		;funcret
 25472  008566                     __end_of_ENCx24_BFS:
 25473                           	opt stack 0
 25474                           tosu	equ	0xFFF
 25475                           tosh	equ	0xFFE
 25476                           tosl	equ	0xFFD
 25477                           pclath	equ	0xFFA
 25478                           tblptru	equ	0xFF8
 25479                           tblptrh	equ	0xFF7
 25480                           tblptrl	equ	0xFF6
 25481                           tablat	equ	0xFF5
 25482                           prodh	equ	0xFF4
 25483                           prodl	equ	0xFF3
 25484                           intcon	equ	0xFF2
 25485                           intcon2	equ	0xFF1
 25486                           indf0	equ	0xFEF
 25487                           postinc0	equ	0xFEE
 25488                           fsr0h	equ	0xFEA
 25489                           fsr0l	equ	0xFE9
 25490                           wreg	equ	0xFE8
 25491                           postinc1	equ	0xFE6
 25492                           postdec1	equ	0xFE5
 25493                           plusw1	equ	0xFE3
 25494                           fsr1h	equ	0xFE2
 25495                           fsr1l	equ	0xFE1
 25496                           indf2	equ	0xFDF
 25497                           postinc2	equ	0xFDE
 25498                           postdec2	equ	0xFDD
 25499                           plusw2	equ	0xFDB
 25500                           fsr2h	equ	0xFDA
 25501                           fsr2l	equ	0xFD9
 25502                           status	equ	0xFD8
 25503                           
 25504 ;; *************** function _ENCx24_BFC *****************
 25505 ;; Defined at:
 25506 ;;		line 177 in file "../../TCPIP Library/ethernet_drivers/encX24j600_spi.c"
 25507 ;; Parameters:    Size  Location     Type
 25508 ;;  a               1    wreg     enum E6725
 25509 ;;  bitMask         2    4[COMRAM] unsigned int 
 25510 ;; Auto vars:     Size  Location     Type
 25511 ;;  a               1    7[COMRAM] enum E6725
 25512 ;;  bank            1    6[COMRAM] unsigned char 
 25513 ;; Return value:  Size  Location     Type
 25514 ;;		None               void
 25515 ;; Registers used:
 25516 ;;		wreg, status,2, status,0, cstack
 25517 ;; Tracked objects:
 25518 ;;		On entry : 0/0
 25519 ;;		On exit  : 0/0
 25520 ;;		Unchanged: 0/0
 25521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25522 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25523 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25525 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25526 ;;Total ram usage:        4 bytes
 25527 ;; Hardware stack levels used:    1
 25528 ;; Hardware stack levels required when called:    5
 25529 ;; This function calls:
 25530 ;;		_ENCx24_BankselSPI
 25531 ;;		_SPI_ExchangeByte
 25532 ;; This function is called by:
 25533 ;;		_ETH_EventHandler
 25534 ;;		_ETH_ResetReceiver
 25535 ;;		_ETH_Copy
 25536 ;;		_ETH_TxComputeChecksum
 25537 ;;		_ETH_RxComputeChecksum
 25538 ;;		_ENCx24_PhyRead
 25539 ;; This function uses a non-reentrant model
 25540 ;;
 25541                           
 25542                           	psect	text102
 25543  008566                     __ptext102:
 25544                           	opt stack 0
 25545  008566                     _ENCx24_BFC:
 25546                           	opt stack 19
 25547                           
 25548                           ;incstack = 0
 25549                           ;ENCx24_BFC@a stored from wreg
 25550  008566  6E08               	movwf	ENCx24_BFC@a,c
 25551                           
 25552                           ;encX24j600_spi.c: 179: uint8_t bank;
 25553                           ;encX24j600_spi.c: 180: bank = a & 0xE0;
 25554  008568  5008               	movf	ENCx24_BFC@a,w,c
 25555  00856A  0BE0               	andlw	224
 25556  00856C  6E07               	movwf	ENCx24_BFC@bank,c
 25557                           
 25558                           ;encX24j600_spi.c: 181: if(bank != 0X80)
 25559  00856E  0E80               	movlw	128
 25560  008570  1807               	xorwf	ENCx24_BFC@bank,w,c
 25561  008572  E00A               	bz	l589
 25562                           
 25563                           ;encX24j600_spi.c: 182: {
 25564                           ;encX24j600_spi.c: 183: ENCx24_BankselSPI(a);
 25565  008574  5008               	movf	ENCx24_BFC@a,w,c
 25566  008576  EC0B  F040         	call	_ENCx24_BankselSPI
 25567  00857A  968A               	bcf	3978,3,c	;volatile
 25568                           
 25569                           ;encX24j600_spi.c: 185: SPI_ExchangeByte(bfc_inst | (a & 0x1F));
 25570  00857C  5008               	movf	ENCx24_BFC@a,w,c
 25571  00857E  0B1F               	andlw	31
 25572  008580  09A0               	iorlw	160
 25573  008582  ECEE  F045         	call	_SPI_ExchangeByte
 25574                           
 25575                           ;encX24j600_spi.c: 186: }
 25576  008586  D007               	goto	l588
 25577  008588                     l589:
 25578  008588  968A               	bcf	3978,3,c	;volatile
 25579                           
 25580                           ;encX24j600_spi.c: 190: SPI_ExchangeByte(bfcu_inst);
 25581  00858A  0E26               	movlw	38
 25582  00858C  ECEE  F045         	call	_SPI_ExchangeByte
 25583                           
 25584                           ;encX24j600_spi.c: 191: SPI_ExchangeByte(a);
 25585  008590  5008               	movf	ENCx24_BFC@a,w,c
 25586  008592  ECEE  F045         	call	_SPI_ExchangeByte
 25587  008596                     l588:
 25588                           
 25589                           ;encX24j600_spi.c: 192: }
 25590                           ;encX24j600_spi.c: 193: SPI_ExchangeByte(bitMask);
 25591  008596  5005               	movf	ENCx24_BFC@bitMask,w,c
 25592  008598  ECEE  F045         	call	_SPI_ExchangeByte
 25593                           
 25594                           ;encX24j600_spi.c: 194: SPI_ExchangeByte(bitMask>>8);
 25595  00859C  5006               	movf	ENCx24_BFC@bitMask+1,w,c
 25596  00859E  ECEE  F045         	call	_SPI_ExchangeByte
 25597  0085A2  868A               	bsf	3978,3,c	;volatile
 25598  0085A4  0012               	return		;funcret
 25599  0085A6                     __end_of_ENCx24_BFC:
 25600                           	opt stack 0
 25601                           tosu	equ	0xFFF
 25602                           tosh	equ	0xFFE
 25603                           tosl	equ	0xFFD
 25604                           pclath	equ	0xFFA
 25605                           tblptru	equ	0xFF8
 25606                           tblptrh	equ	0xFF7
 25607                           tblptrl	equ	0xFF6
 25608                           tablat	equ	0xFF5
 25609                           prodh	equ	0xFF4
 25610                           prodl	equ	0xFF3
 25611                           intcon	equ	0xFF2
 25612                           intcon2	equ	0xFF1
 25613                           indf0	equ	0xFEF
 25614                           postinc0	equ	0xFEE
 25615                           fsr0h	equ	0xFEA
 25616                           fsr0l	equ	0xFE9
 25617                           wreg	equ	0xFE8
 25618                           postinc1	equ	0xFE6
 25619                           postdec1	equ	0xFE5
 25620                           plusw1	equ	0xFE3
 25621                           fsr1h	equ	0xFE2
 25622                           fsr1l	equ	0xFE1
 25623                           indf2	equ	0xFDF
 25624                           postinc2	equ	0xFDE
 25625                           postdec2	equ	0xFDD
 25626                           plusw2	equ	0xFDB
 25627                           fsr2h	equ	0xFDA
 25628                           fsr2l	equ	0xFD9
 25629                           status	equ	0xFD8
 25630                           
 25631 ;; *************** function _ETH_Send *****************
 25632 ;; Defined at:
 25633 ;;		line 393 in file "../../TCPIP Library/ethernet_drivers/encX24J600_driver.c"
 25634 ;; Parameters:    Size  Location     Type
 25635 ;;		None
 25636 ;; Auto vars:     Size  Location     Type
 25637 ;;		None
 25638 ;; Return value:  Size  Location     Type
 25639 ;;                  1    wreg      enum E6988
 25640 ;; Registers used:
 25641 ;;		wreg, status,2, status,0, cstack
 25642 ;; Tracked objects:
 25643 ;;		On entry : 0/1
 25644 ;;		On exit  : F/1
 25645 ;;		Unchanged: 0/0
 25646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25651 ;;Total ram usage:        0 bytes
 25652 ;; Hardware stack levels used:    1
 25653 ;; Hardware stack levels required when called:    6
 25654 ;; This function calls:
 25655 ;;		_ENCx24_Write
 25656 ;;		_ETH_Set_TXRTS
 25657 ;; This function is called by:
 25658 ;;		_ARPV4_Packet
 25659 ;;		_ARPV4_Request
 25660 ;;		_IPV4_Send
 25661 ;; This function uses a non-reentrant model
 25662 ;;
 25663                           
 25664                           	psect	text103
 25665  0089E4                     __ptext103:
 25666                           	opt stack 0
 25667  0089E4                     _ETH_Send:
 25668                           	opt stack 18
 25669                           
 25670                           ;encX24J600_driver.c: 396: ENCx24_Write(XJ600_ETXLENL, TXPacketSize);
 25671                           
 25672                           ;incstack = 0
 25673  0089E4  C19A  F005         	movff	_TXPacketSize,ENCx24_Write@data
 25674  0089E8  C19B  F006         	movff	_TXPacketSize+1,ENCx24_Write@data+1
 25675  0089EC  0E02               	movlw	2
 25676  0089EE  EC72  F042         	call	_ENCx24_Write
 25677                           
 25678                           ;encX24J600_driver.c: 397: if (!ethData.up)
 25679  0089F2  0101               	movlb	1	; () banked
 25680  0089F4  A583               	btfss	_ethData& (0+255),2,b	;volatile
 25681                           
 25682                           ; BSR set to: 1
 25683                           ;encX24J600_driver.c: 398: {
 25684                           ;encX24J600_driver.c: 399: return LINK_NOT_FOUND;
 25685  0089F6  0C02               	retlw	2
 25686                           
 25687                           ; BSR set to: 1
 25688                           ;encX24J600_driver.c: 400: }
 25689                           ;encX24J600_driver.c: 401: if(!ethData.bufferBusy)
 25690  0089F8  AB83               	btfss	_ethData& (0+255),5,b	;volatile
 25691                           
 25692                           ; BSR set to: 1
 25693                           ;encX24J600_driver.c: 402: {
 25694                           ;encX24J600_driver.c: 403: return BUFFER_BUSY;
 25695  0089FA  0C03               	retlw	3
 25696                           
 25697                           ; BSR set to: 1
 25698                           ;encX24J600_driver.c: 404: }
 25699                           ;encX24J600_driver.c: 405: ETH_Set_TXRTS();
 25700  0089FC  EC07  F046         	call	_ETH_Set_TXRTS	;wreg free
 25701                           
 25702                           ;encX24J600_driver.c: 406: ethData.bufferBusy = 0;
 25703  008A00  0101               	movlb	1	; () banked
 25704  008A02  9B83               	bcf	_ethData& (0+255),5,b	;volatile
 25705                           
 25706                           ; BSR set to: 1
 25707                           
 25708                           ; BSR set to: 1
 25709                           ;encX24J600_driver.c: 408: return SUCCESS;
 25710  008A04  0C01               	retlw	1	;funcret
 25711  008A06                     __end_of_ETH_Send:
 25712                           	opt stack 0
 25713                           tosu	equ	0xFFF
 25714                           tosh	equ	0xFFE
 25715                           tosl	equ	0xFFD
 25716                           pclath	equ	0xFFA
 25717                           tblptru	equ	0xFF8
 25718                           tblptrh	equ	0xFF7
 25719                           tblptrl	equ	0xFF6
 25720                           tablat	equ	0xFF5
 25721                           prodh	equ	0xFF4
 25722                           prodl	equ	0xFF3
 25723                           intcon	equ	0xFF2
 25724                           intcon2	equ	0xFF1
 25725                           indf0	equ	0xFEF
 25726                           postinc0	equ	0xFEE
 25727                           fsr0h	equ	0xFEA
 25728                           fsr0l	equ	0xFE9
 25729                           wreg	equ	0xFE8
 25730                           postinc1	equ	0xFE6
 25731                           postdec1	equ	0xFE5
 25732                           plusw1	equ	0xFE3
 25733                           fsr1h	equ	0xFE2
 25734                           fsr1l	equ	0xFE1
 25735                           indf2	equ	0xFDF
 25736                           postinc2	equ	0xFDE
 25737                           postdec2	equ	0xFDD
 25738                           plusw2	equ	0xFDB
 25739                           fsr2h	equ	0xFDA
 25740                           fsr2l	equ	0xFD9
 25741                           status	equ	0xFD8
 25742                           
 25743 ;; *************** function _ETH_Set_TXRTS *****************
 25744 ;; Defined at:
 25745 ;;		line 435 in file "../../TCPIP Library/ethernet_drivers/encX24j600_spi.c"
 25746 ;; Parameters:    Size  Location     Type
 25747 ;;		None
 25748 ;; Auto vars:     Size  Location     Type
 25749 ;;		None
 25750 ;; Return value:  Size  Location     Type
 25751 ;;		None               void
 25752 ;; Registers used:
 25753 ;;		wreg, status,2, cstack
 25754 ;; Tracked objects:
 25755 ;;		On entry : F/1
 25756 ;;		On exit  : 0/0
 25757 ;;		Unchanged: 0/0
 25758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25763 ;;Total ram usage:        0 bytes
 25764 ;; Hardware stack levels used:    1
 25765 ;; Hardware stack levels required when called:    4
 25766 ;; This function calls:
 25767 ;;		_SPI_ExchangeByte
 25768 ;; This function is called by:
 25769 ;;		_ETH_Send
 25770 ;; This function uses a non-reentrant model
 25771 ;;
 25772                           
 25773                           	psect	text104
 25774  008C0E                     __ptext104:
 25775                           	opt stack 0
 25776  008C0E                     _ETH_Set_TXRTS:
 25777                           	opt stack 19
 25778                           
 25779                           ; BSR set to: 1
 25780                           
 25781                           ; BSR set to: 1
 25782                           ;incstack = 0
 25783                           ;encX24j600_spi.c: 437: do{LATB3 = 0;} while(0);
 25784  008C0E  968A               	bcf	3978,3,c	;volatile
 25785                           
 25786                           ; BSR set to: 1
 25787                           ;encX24j600_spi.c: 438: SPI_ExchangeByte(settxrts_inst);
 25788  008C10  0ED4               	movlw	212
 25789  008C12  ECEE  F045         	call	_SPI_ExchangeByte
 25790  008C16  868A               	bsf	3978,3,c	;volatile
 25791  008C18  0012               	return		;funcret
 25792  008C1A                     __end_of_ETH_Set_TXRTS:
 25793                           	opt stack 0
 25794                           tosu	equ	0xFFF
 25795                           tosh	equ	0xFFE
 25796                           tosl	equ	0xFFD
 25797                           pclath	equ	0xFFA
 25798                           tblptru	equ	0xFF8
 25799                           tblptrh	equ	0xFF7
 25800                           tblptrl	equ	0xFF6
 25801                           tablat	equ	0xFF5
 25802                           prodh	equ	0xFF4
 25803                           prodl	equ	0xFF3
 25804                           intcon	equ	0xFF2
 25805                           intcon2	equ	0xFF1
 25806                           indf0	equ	0xFEF
 25807                           postinc0	equ	0xFEE
 25808                           fsr0h	equ	0xFEA
 25809                           fsr0l	equ	0xFE9
 25810                           wreg	equ	0xFE8
 25811                           postinc1	equ	0xFE6
 25812                           postdec1	equ	0xFE5
 25813                           plusw1	equ	0xFE3
 25814                           fsr1h	equ	0xFE2
 25815                           fsr1l	equ	0xFE1
 25816                           indf2	equ	0xFDF
 25817                           postinc2	equ	0xFDE
 25818                           postdec2	equ	0xFDD
 25819                           plusw2	equ	0xFDB
 25820                           fsr2h	equ	0xFDA
 25821                           fsr2l	equ	0xFD9
 25822                           status	equ	0xFD8
 25823                           
 25824 ;; *************** function _ETH_Insert *****************
 25825 ;; Defined at:
 25826 ;;		line 416 in file "../../TCPIP Library/ethernet_drivers/encX24j600_spi.c"
 25827 ;; Parameters:    Size  Location     Type
 25828 ;;  data            1    wreg     PTR unsigned char 
 25829 ;;		 -> UDP_Send@cksm(2), UDP_Send@udpLength(2), TCP_Snd@cksm(2), IPV4_Send@cksm(2), 
 25830 ;;		 -> IPV4_Send@totalLength(2), ICMP_EchoReply@cksm(2), 
 25831 ;;  len             2   10[COMRAM] unsigned int 
 25832 ;;  offset          2   12[COMRAM] unsigned int 
 25833 ;; Auto vars:     Size  Location     Type
 25834 ;;  data            1   16[COMRAM] PTR unsigned char 
 25835 ;;		 -> UDP_Send@cksm(2), UDP_Send@udpLength(2), TCP_Snd@cksm(2), IPV4_Send@cksm(2), 
 25836 ;;		 -> IPV4_Send@totalLength(2), ICMP_EchoReply@cksm(2), 
 25837 ;;  current_tx_p    2   14[COMRAM] unsigned int 
 25838 ;; Return value:  Size  Location     Type
 25839 ;;		None               void
 25840 ;; Registers used:
 25841 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25842 ;; Tracked objects:
 25843 ;;		On entry : 0/0
 25844 ;;		On exit  : 0/0
 25845 ;;		Unchanged: 0/0
 25846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25847 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25848 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25850 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25851 ;;Total ram usage:        7 bytes
 25852 ;; Hardware stack levels used:    1
 25853 ;; Hardware stack levels required when called:    6
 25854 ;; This function calls:
 25855 ;;		_ENCx24_Read
 25856 ;;		_ENCx24_Write
 25857 ;;		_SPI_ExchangeByte
 25858 ;; This function is called by:
 25859 ;;		_ICMP_EchoReply
 25860 ;;		_IPV4_Send
 25861 ;;		_TCP_Snd
 25862 ;;		_UDP_Send
 25863 ;; This function uses a non-reentrant model
 25864 ;;
 25865                           
 25866                           	psect	text105
 25867  008114                     __ptext105:
 25868                           	opt stack 0
 25869  008114                     _ETH_Insert:
 25870                           	opt stack 19
 25871                           
 25872                           ;incstack = 0
 25873                           ;ETH_Insert@data stored from wreg
 25874  008114  6E11               	movwf	ETH_Insert@data,c
 25875                           
 25876                           ;encX24j600_spi.c: 420: current_tx_pointer = ENCx24_Read(XJ600_EGPWRPTL);
 25877  008116  0E88               	movlw	136
 25878  008118  ECC0  F041         	call	_ENCx24_Read
 25879  00811C  C005  F00F         	movff	?_ENCx24_Read,ETH_Insert@current_tx_pointer
 25880  008120  C006  F010         	movff	?_ENCx24_Read+1,ETH_Insert@current_tx_pointer+1
 25881                           
 25882                           ;encX24j600_spi.c: 421: ENCx24_Write(XJ600_EGPWRPTL, offset);
 25883  008124  C00D  F005         	movff	ETH_Insert@offset,ENCx24_Write@data
 25884  008128  C00E  F006         	movff	ETH_Insert@offset+1,ENCx24_Write@data+1
 25885  00812C  0E88               	movlw	136
 25886  00812E  EC72  F042         	call	_ENCx24_Write
 25887  008132  968A               	bcf	3978,3,c	;volatile
 25888                           
 25889                           ;encX24j600_spi.c: 424: SPI_ExchangeByte(wgpdata_inst);
 25890  008134  0E2A               	movlw	42
 25891  008136  ECEE  F045         	call	_SPI_ExchangeByte
 25892                           
 25893                           ;encX24j600_spi.c: 425: while(len--)
 25894  00813A  D007               	goto	l8212
 25895  00813C                     l8208:
 25896                           
 25897                           ;encX24j600_spi.c: 426: SPI_ExchangeByte(*data++);
 25898  00813C  5011               	movf	ETH_Insert@data,w,c
 25899  00813E  6ED9               	movwf	fsr2l,c
 25900  008140  6ADA               	clrf	fsr2h,c
 25901  008142  50DF               	movf	indf2,w,c
 25902  008144  ECEE  F045         	call	_SPI_ExchangeByte
 25903  008148  2A11               	incf	ETH_Insert@data,f,c
 25904  00814A                     l8212:
 25905  00814A  060B               	decf	ETH_Insert@len,f,c
 25906  00814C  A0D8               	btfss	status,0,c
 25907  00814E  060C               	decf	ETH_Insert@len+1,f,c
 25908  008150  280B               	incf	ETH_Insert@len,w,c
 25909  008152  E1F4               	bnz	l8208
 25910  008154  280C               	incf	ETH_Insert@len+1,w,c
 25911  008156  E1F2               	bnz	l8208
 25912                           
 25913                           ;encX24j600_spi.c: 427: do{LATB3 = 1;} while(0);
 25914  008158  868A               	bsf	3978,3,c	;volatile
 25915                           
 25916                           ;encX24j600_spi.c: 429: ENCx24_Write(XJ600_EGPWRPTL, current_tx_pointer);
 25917  00815A  C00F  F005         	movff	ETH_Insert@current_tx_pointer,ENCx24_Write@data
 25918  00815E  C010  F006         	movff	ETH_Insert@current_tx_pointer+1,ENCx24_Write@data+1
 25919  008162  0E88               	movlw	136
 25920  008164  EF72  F042         	goto	_ENCx24_Write
 25921  008168                     __end_of_ETH_Insert:
 25922                           	opt stack 0
 25923                           tosu	equ	0xFFF
 25924                           tosh	equ	0xFFE
 25925                           tosl	equ	0xFFD
 25926                           pclath	equ	0xFFA
 25927                           tblptru	equ	0xFF8
 25928                           tblptrh	equ	0xFF7
 25929                           tblptrl	equ	0xFF6
 25930                           tablat	equ	0xFF5
 25931                           prodh	equ	0xFF4
 25932                           prodl	equ	0xFF3
 25933                           intcon	equ	0xFF2
 25934                           intcon2	equ	0xFF1
 25935                           indf0	equ	0xFEF
 25936                           postinc0	equ	0xFEE
 25937                           fsr0h	equ	0xFEA
 25938                           fsr0l	equ	0xFE9
 25939                           wreg	equ	0xFE8
 25940                           postinc1	equ	0xFE6
 25941                           postdec1	equ	0xFE5
 25942                           plusw1	equ	0xFE3
 25943                           fsr1h	equ	0xFE2
 25944                           fsr1l	equ	0xFE1
 25945                           indf2	equ	0xFDF
 25946                           postinc2	equ	0xFDE
 25947                           postdec2	equ	0xFDD
 25948                           plusw2	equ	0xFDB
 25949                           fsr2h	equ	0xFDA
 25950                           fsr2l	equ	0xFD9
 25951                           status	equ	0xFD8
 25952                           
 25953 ;; *************** function _ENCx24_Write *****************
 25954 ;; Defined at:
 25955 ;;		line 124 in file "../../TCPIP Library/ethernet_drivers/encX24j600_spi.c"
 25956 ;; Parameters:    Size  Location     Type
 25957 ;;  a               1    wreg     enum E6725
 25958 ;;  data            2    4[COMRAM] unsigned int 
 25959 ;; Auto vars:     Size  Location     Type
 25960 ;;  a               1    7[COMRAM] enum E6725
 25961 ;;  bank            1    6[COMRAM] unsigned char 
 25962 ;; Return value:  Size  Location     Type
 25963 ;;		None               void
 25964 ;; Registers used:
 25965 ;;		wreg, status,2, status,0, cstack
 25966 ;; Tracked objects:
 25967 ;;		On entry : 0/2
 25968 ;;		On exit  : 0/0
 25969 ;;		Unchanged: 0/0
 25970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25971 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25972 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25974 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25975 ;;Total ram usage:        4 bytes
 25976 ;; Hardware stack levels used:    1
 25977 ;; Hardware stack levels required when called:    5
 25978 ;; This function calls:
 25979 ;;		_ENCx24_BankselSPI
 25980 ;;		_SPI_ExchangeByte
 25981 ;; This function is called by:
 25982 ;;		_ETH_SendSystemReset
 25983 ;;		_ETH_Init
 25984 ;;		_ETH_EventHandler
 25985 ;;		_ETH_ResetReceiver
 25986 ;;		_ETH_Dump
 25987 ;;		_ETH_Flush
 25988 ;;		_ETH_WriteStart
 25989 ;;		_ETH_Send
 25990 ;;		_ETH_Copy
 25991 ;;		_ETH_TxComputeChecksum
 25992 ;;		_ETH_RxComputeChecksum
 25993 ;;		_ENCx24_PhyRead
 25994 ;;		_ENCx24_PHYWrite
 25995 ;;		_ETH_Insert
 25996 ;; This function uses a non-reentrant model
 25997 ;;
 25998                           
 25999                           	psect	text106
 26000  0084E4                     __ptext106:
 26001                           	opt stack 0
 26002  0084E4                     _ENCx24_Write:
 26003                           	opt stack 19
 26004                           
 26005                           ;incstack = 0
 26006                           ;ENCx24_Write@a stored from wreg
 26007  0084E4  6E08               	movwf	ENCx24_Write@a,c
 26008                           
 26009                           ;encX24j600_spi.c: 126: uint8_t bank;
 26010                           ;encX24j600_spi.c: 127: bank = a & 0xE0;
 26011  0084E6  5008               	movf	ENCx24_Write@a,w,c
 26012  0084E8  0BE0               	andlw	224
 26013  0084EA  6E07               	movwf	ENCx24_Write@bank,c
 26014                           
 26015                           ;encX24j600_spi.c: 128: if(bank != 0X80)
 26016  0084EC  0E80               	movlw	128
 26017  0084EE  1807               	xorwf	ENCx24_Write@bank,w,c
 26018  0084F0  E00B               	bz	l567
 26019                           
 26020                           ;encX24j600_spi.c: 129: {
 26021                           ;encX24j600_spi.c: 130: ENCx24_BankselSPI(a);
 26022  0084F2  5008               	movf	ENCx24_Write@a,w,c
 26023  0084F4  EC0B  F040         	call	_ENCx24_BankselSPI
 26024  0084F8  968A               	bcf	3978,3,c	;volatile
 26025                           
 26026                           ;encX24j600_spi.c: 132: a &= 0x1F;
 26027  0084FA  0E1F               	movlw	31
 26028  0084FC  1608               	andwf	ENCx24_Write@a,f,c
 26029                           
 26030                           ;encX24j600_spi.c: 133: SPI_ExchangeByte(wcr_inst | (a));
 26031  0084FE  5008               	movf	ENCx24_Write@a,w,c
 26032  008500  0940               	iorlw	64
 26033  008502  ECEE  F045         	call	_SPI_ExchangeByte
 26034                           
 26035                           ;encX24j600_spi.c: 134: }
 26036  008506  D007               	goto	l566
 26037  008508                     l567:
 26038  008508  968A               	bcf	3978,3,c	;volatile
 26039                           
 26040                           ;encX24j600_spi.c: 138: SPI_ExchangeByte(wcru_inst);
 26041  00850A  0E22               	movlw	34
 26042  00850C  ECEE  F045         	call	_SPI_ExchangeByte
 26043                           
 26044                           ;encX24j600_spi.c: 139: SPI_ExchangeByte(a);
 26045  008510  5008               	movf	ENCx24_Write@a,w,c
 26046  008512  ECEE  F045         	call	_SPI_ExchangeByte
 26047  008516                     l566:
 26048                           
 26049                           ;encX24j600_spi.c: 140: }
 26050                           ;encX24j600_spi.c: 141: SPI_ExchangeByte(((uint8_t*) &data)[0]);
 26051  008516  5005               	movf	ENCx24_Write@data,w,c
 26052  008518  ECEE  F045         	call	_SPI_ExchangeByte
 26053                           
 26054                           ;encX24j600_spi.c: 142: SPI_ExchangeByte(((uint8_t*) &data)[1]);
 26055  00851C  5006               	movf	ENCx24_Write@data+1,w,c
 26056  00851E  ECEE  F045         	call	_SPI_ExchangeByte
 26057  008522  868A               	bsf	3978,3,c	;volatile
 26058  008524  0012               	return		;funcret
 26059  008526                     __end_of_ENCx24_Write:
 26060                           	opt stack 0
 26061                           tosu	equ	0xFFF
 26062                           tosh	equ	0xFFE
 26063                           tosl	equ	0xFFD
 26064                           pclath	equ	0xFFA
 26065                           tblptru	equ	0xFF8
 26066                           tblptrh	equ	0xFF7
 26067                           tblptrl	equ	0xFF6
 26068                           tablat	equ	0xFF5
 26069                           prodh	equ	0xFF4
 26070                           prodl	equ	0xFF3
 26071                           intcon	equ	0xFF2
 26072                           intcon2	equ	0xFF1
 26073                           indf0	equ	0xFEF
 26074                           postinc0	equ	0xFEE
 26075                           fsr0h	equ	0xFEA
 26076                           fsr0l	equ	0xFE9
 26077                           wreg	equ	0xFE8
 26078                           postinc1	equ	0xFE6
 26079                           postdec1	equ	0xFE5
 26080                           plusw1	equ	0xFE3
 26081                           fsr1h	equ	0xFE2
 26082                           fsr1l	equ	0xFE1
 26083                           indf2	equ	0xFDF
 26084                           postinc2	equ	0xFDE
 26085                           postdec2	equ	0xFDD
 26086                           plusw2	equ	0xFDB
 26087                           fsr2h	equ	0xFDA
 26088                           fsr2l	equ	0xFD9
 26089                           status	equ	0xFD8
 26090                           
 26091 ;; *************** function _ENCx24_Read *****************
 26092 ;; Defined at:
 26093 ;;		line 95 in file "../../TCPIP Library/ethernet_drivers/encX24j600_spi.c"
 26094 ;; Parameters:    Size  Location     Type
 26095 ;;  a               1    wreg     enum E6725
 26096 ;; Auto vars:     Size  Location     Type
 26097 ;;  a               1    9[COMRAM] enum E6725
 26098 ;;  v               2    7[COMRAM] unsigned int 
 26099 ;;  bank            1    6[COMRAM] unsigned char 
 26100 ;; Return value:  Size  Location     Type
 26101 ;;                  2    4[COMRAM] unsigned int 
 26102 ;; Registers used:
 26103 ;;		wreg, status,2, status,0, cstack
 26104 ;; Tracked objects:
 26105 ;;		On entry : 0/2
 26106 ;;		On exit  : 0/0
 26107 ;;		Unchanged: 0/0
 26108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26109 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26110 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26112 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26113 ;;Total ram usage:        6 bytes
 26114 ;; Hardware stack levels used:    1
 26115 ;; Hardware stack levels required when called:    5
 26116 ;; This function calls:
 26117 ;;		_ENCx24_BankselSPI
 26118 ;;		_SPI_ExchangeByte
 26119 ;; This function is called by:
 26120 ;;		_ETH_SendSystemReset
 26121 ;;		_ETH_Init
 26122 ;;		_ETH_readLinkStatus
 26123 ;;		_ETH_EventHandler
 26124 ;;		_ETH_Dump
 26125 ;;		_ETH_WriteStart
 26126 ;;		_ETH_Copy
 26127 ;;		_waitForDMA
 26128 ;;		_ETH_TxComputeChecksum
 26129 ;;		_ETH_RxComputeChecksum
 26130 ;;		_ETH_SaveRDPT
 26131 ;;		_ETH_ResetByteCount
 26132 ;;		_ETH_GetByteCount
 26133 ;;		_ENCx24_PhyRead
 26134 ;;		_ENCx24_PHYWrite
 26135 ;;		_ETH_Insert
 26136 ;; This function uses a non-reentrant model
 26137 ;;
 26138                           
 26139                           	psect	text107
 26140  008380                     __ptext107:
 26141                           	opt stack 0
 26142  008380                     _ENCx24_Read:
 26143                           	opt stack 22
 26144                           
 26145                           ;incstack = 0
 26146                           ;ENCx24_Read@a stored from wreg
 26147  008380  6E0A               	movwf	ENCx24_Read@a,c
 26148                           
 26149                           ;encX24j600_spi.c: 97: uint16_t v;
 26150                           ;encX24j600_spi.c: 98: uint8_t bank;
 26151                           ;encX24j600_spi.c: 100: bank = a & 0xE0;
 26152  008382  500A               	movf	ENCx24_Read@a,w,c
 26153  008384  0BE0               	andlw	224
 26154  008386  6E07               	movwf	ENCx24_Read@bank,c
 26155                           
 26156                           ;encX24j600_spi.c: 101: if(bank != 0X80)
 26157  008388  0E80               	movlw	128
 26158  00838A  1807               	xorwf	ENCx24_Read@bank,w,c
 26159  00838C  E009               	bz	l556
 26160                           
 26161                           ;encX24j600_spi.c: 102: {
 26162                           ;encX24j600_spi.c: 103: ENCx24_BankselSPI(a);
 26163  00838E  500A               	movf	ENCx24_Read@a,w,c
 26164  008390  EC0B  F040         	call	_ENCx24_BankselSPI
 26165  008394  968A               	bcf	3978,3,c	;volatile
 26166                           
 26167                           ;encX24j600_spi.c: 105: SPI_ExchangeByte(rcr_inst| (a & 0x1F));
 26168  008396  500A               	movf	ENCx24_Read@a,w,c
 26169  008398  0B1F               	andlw	31
 26170  00839A  ECEE  F045         	call	_SPI_ExchangeByte
 26171                           
 26172                           ;encX24j600_spi.c: 106: }
 26173  00839E  D007               	goto	l555
 26174  0083A0                     l556:
 26175  0083A0  968A               	bcf	3978,3,c	;volatile
 26176                           
 26177                           ;encX24j600_spi.c: 110: SPI_ExchangeByte(rcru_inst);
 26178  0083A2  0E20               	movlw	32
 26179  0083A4  ECEE  F045         	call	_SPI_ExchangeByte
 26180                           
 26181                           ;encX24j600_spi.c: 111: SPI_ExchangeByte(a);
 26182  0083A8  500A               	movf	ENCx24_Read@a,w,c
 26183  0083AA  ECEE  F045         	call	_SPI_ExchangeByte
 26184  0083AE                     l555:
 26185                           
 26186                           ;encX24j600_spi.c: 112: }
 26187                           ;encX24j600_spi.c: 113: ((uint8_t*)&v)[0] = SPI_ExchangeByte(0);
 26188  0083AE  0E00               	movlw	0
 26189  0083B0  ECEE  F045         	call	_SPI_ExchangeByte
 26190  0083B4  6E08               	movwf	ENCx24_Read@v,c
 26191                           
 26192                           ;encX24j600_spi.c: 114: ((uint8_t*)&v)[1] = SPI_ExchangeByte(0);
 26193  0083B6  0E00               	movlw	0
 26194  0083B8  ECEE  F045         	call	_SPI_ExchangeByte
 26195  0083BC  6E09               	movwf	ENCx24_Read@v+1,c
 26196  0083BE  868A               	bsf	3978,3,c	;volatile
 26197                           
 26198                           ;encX24j600_spi.c: 116: return v;
 26199  0083C0  C008  F005         	movff	ENCx24_Read@v,?_ENCx24_Read
 26200  0083C4  C009  F006         	movff	ENCx24_Read@v+1,?_ENCx24_Read+1
 26201  0083C8  0012               	return		;funcret
 26202  0083CA                     __end_of_ENCx24_Read:
 26203                           	opt stack 0
 26204                           tosu	equ	0xFFF
 26205                           tosh	equ	0xFFE
 26206                           tosl	equ	0xFFD
 26207                           pclath	equ	0xFFA
 26208                           tblptru	equ	0xFF8
 26209                           tblptrh	equ	0xFF7
 26210                           tblptrl	equ	0xFF6
 26211                           tablat	equ	0xFF5
 26212                           prodh	equ	0xFF4
 26213                           prodl	equ	0xFF3
 26214                           intcon	equ	0xFF2
 26215                           intcon2	equ	0xFF1
 26216                           indf0	equ	0xFEF
 26217                           postinc0	equ	0xFEE
 26218                           fsr0h	equ	0xFEA
 26219                           fsr0l	equ	0xFE9
 26220                           wreg	equ	0xFE8
 26221                           postinc1	equ	0xFE6
 26222                           postdec1	equ	0xFE5
 26223                           plusw1	equ	0xFE3
 26224                           fsr1h	equ	0xFE2
 26225                           fsr1l	equ	0xFE1
 26226                           indf2	equ	0xFDF
 26227                           postinc2	equ	0xFDE
 26228                           postdec2	equ	0xFDD
 26229                           plusw2	equ	0xFDB
 26230                           fsr2h	equ	0xFDA
 26231                           fsr2l	equ	0xFD9
 26232                           status	equ	0xFD8
 26233                           
 26234 ;; *************** function _ENCx24_BankselSPI *****************
 26235 ;; Defined at:
 26236 ;;		line 61 in file "../../TCPIP Library/ethernet_drivers/encX24j600_spi.c"
 26237 ;; Parameters:    Size  Location     Type
 26238 ;;  a               1    wreg     enum E6725
 26239 ;; Auto vars:     Size  Location     Type
 26240 ;;  a               1    2[COMRAM] enum E6725
 26241 ;;  bank            1    3[COMRAM] unsigned char 
 26242 ;; Return value:  Size  Location     Type
 26243 ;;		None               void
 26244 ;; Registers used:
 26245 ;;		wreg, status,2, status,0, cstack
 26246 ;; Tracked objects:
 26247 ;;		On entry : 0/0
 26248 ;;		On exit  : 0/0
 26249 ;;		Unchanged: 0/0
 26250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26252 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26254 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26255 ;;Total ram usage:        2 bytes
 26256 ;; Hardware stack levels used:    1
 26257 ;; Hardware stack levels required when called:    4
 26258 ;; This function calls:
 26259 ;;		_SPI_ExchangeByte
 26260 ;; This function is called by:
 26261 ;;		_ENCx24_Read
 26262 ;;		_ENCx24_Write
 26263 ;;		_ENCx24_BFS
 26264 ;;		_ENCx24_BFC
 26265 ;;		_ETH_MACRead8
 26266 ;; This function uses a non-reentrant model
 26267 ;;
 26268                           
 26269                           	psect	text108
 26270  008016                     __ptext108:
 26271                           	opt stack 0
 26272  008016                     _ENCx24_BankselSPI:
 26273                           	opt stack 22
 26274                           
 26275                           ;incstack = 0
 26276                           ;ENCx24_BankselSPI@a stored from wreg
 26277  008016  6E03               	movwf	ENCx24_BankselSPI@a,c
 26278                           
 26279                           ;encX24j600_spi.c: 63: uint8_t bank;
 26280                           ;encX24j600_spi.c: 64: bank = a & 0xE0;
 26281  008018  5003               	movf	ENCx24_BankselSPI@a,w,c
 26282  00801A  0BE0               	andlw	224
 26283  00801C  6E04               	movwf	ENCx24_BankselSPI@bank,c
 26284                           
 26285                           ;encX24j600_spi.c: 65: if( bank != last_bank && bank!=0X80)
 26286  00801E  0101               	movlb	1	; () banked
 26287  008020  19A6               	xorwf	_last_bank& (0+255),w,b
 26288  008022  B4D8               	btfsc	status,2,c
 26289  008024  0012               	return	
 26290                           
 26291                           ; BSR set to: 1
 26292  008026  0E80               	movlw	128
 26293  008028  1804               	xorwf	ENCx24_BankselSPI@bank,w,c
 26294  00802A  B4D8               	btfsc	status,2,c
 26295  00802C  0012               	return	
 26296                           
 26297                           ; BSR set to: 1
 26298                           ;encX24j600_spi.c: 66: {
 26299                           ;encX24j600_spi.c: 67: last_bank = bank;
 26300  00802E  C004  F1A6         	movff	ENCx24_BankselSPI@bank,_last_bank
 26301                           
 26302                           ; BSR set to: 1
 26303                           
 26304                           ;encX24j600_spi.c: 68: do{LATB3 = 0;} while(0);
 26305  008032  968A               	bcf	3978,3,c	;volatile
 26306  008034  D010               	goto	l7990
 26307  008036                     l7980:
 26308                           
 26309                           ; BSR set to: 1
 26310                           ;encX24j600_spi.c: 72: SPI_ExchangeByte(b0sel_inst);
 26311  008036  0EC0               	movlw	192
 26312  008038  ECEE  F045         	call	_SPI_ExchangeByte
 26313                           
 26314                           ;encX24j600_spi.c: 73: break;
 26315  00803C  D015               	goto	l547
 26316  00803E                     l7982:
 26317                           
 26318                           ; BSR set to: 1
 26319                           ;encX24j600_spi.c: 75: SPI_ExchangeByte(b1sel_inst);
 26320  00803E  0EC2               	movlw	194
 26321  008040  ECEE  F045         	call	_SPI_ExchangeByte
 26322                           
 26323                           ;encX24j600_spi.c: 76: break;
 26324  008044  D011               	goto	l547
 26325  008046                     l7984:
 26326                           
 26327                           ; BSR set to: 1
 26328                           ;encX24j600_spi.c: 78: SPI_ExchangeByte(b2sel_inst);
 26329  008046  0EC4               	movlw	196
 26330  008048  ECEE  F045         	call	_SPI_ExchangeByte
 26331                           
 26332                           ;encX24j600_spi.c: 79: break;
 26333  00804C  D00D               	goto	l547
 26334  00804E                     l7986:
 26335                           
 26336                           ; BSR set to: 1
 26337                           ;encX24j600_spi.c: 81: SPI_ExchangeByte(b3sel_inst);
 26338  00804E  0EC6               	movlw	198
 26339  008050  ECEE  F045         	call	_SPI_ExchangeByte
 26340                           
 26341                           ;encX24j600_spi.c: 82: break;
 26342  008054  D009               	goto	l547
 26343  008056                     l7990:
 26344                           
 26345                           ; BSR set to: 1
 26346  008056  5004               	movf	ENCx24_BankselSPI@bank,w,c
 26347                           
 26348                           ; Switch size 1, requested type "speed"
 26349                           ; Number of cases is 5, Range of values is 0 to 224
 26350                           ; switch strategies available:
 26351                           ; Name         Instructions Cycles
 26352                           ; simple_byte           16     9 (average)
 26353                           ;	Chosen strategy is simple_byte
 26354  008058  E0EE               	bz	l7980
 26355  00805A  0A20               	xorlw	32	; case 32
 26356  00805C  E0F0               	bz	l7982
 26357  00805E  0A60               	xorlw	96	; case 64
 26358  008060  E0F2               	bz	l7984
 26359  008062  0A20               	xorlw	32	; case 96
 26360  008064  E0F4               	bz	l7986
 26361  008066  0A80               	xorlw	128	; case 224
 26362  008068                     l547:
 26363  008068  868A               	bsf	3978,3,c	;volatile
 26364  00806A  0012               	return		;funcret
 26365  00806C                     __end_of_ENCx24_BankselSPI:
 26366                           	opt stack 0
 26367                           tosu	equ	0xFFF
 26368                           tosh	equ	0xFFE
 26369                           tosl	equ	0xFFD
 26370                           pclath	equ	0xFFA
 26371                           tblptru	equ	0xFF8
 26372                           tblptrh	equ	0xFF7
 26373                           tblptrl	equ	0xFF6
 26374                           tablat	equ	0xFF5
 26375                           prodh	equ	0xFF4
 26376                           prodl	equ	0xFF3
 26377                           intcon	equ	0xFF2
 26378                           intcon2	equ	0xFF1
 26379                           indf0	equ	0xFEF
 26380                           postinc0	equ	0xFEE
 26381                           fsr0h	equ	0xFEA
 26382                           fsr0l	equ	0xFE9
 26383                           wreg	equ	0xFE8
 26384                           postinc1	equ	0xFE6
 26385                           postdec1	equ	0xFE5
 26386                           plusw1	equ	0xFE3
 26387                           fsr1h	equ	0xFE2
 26388                           fsr1l	equ	0xFE1
 26389                           indf2	equ	0xFDF
 26390                           postinc2	equ	0xFDE
 26391                           postdec2	equ	0xFDD
 26392                           plusw2	equ	0xFDB
 26393                           fsr2h	equ	0xFDA
 26394                           fsr2l	equ	0xFD9
 26395                           status	equ	0xFD8
 26396                           
 26397 ;; *************** function _ETH_ReadBlock *****************
 26398 ;; Defined at:
 26399 ;;		line 305 in file "../../TCPIP Library/ethernet_drivers/encX24j600_spi.c"
 26400 ;; Parameters:    Size  Location     Type
 26401 ;;  data            2    2[COMRAM] PTR void 
 26402 ;;		 -> ?_sprintf(2), ?_printf(2), main@str(32), STR_7(13), 
 26403 ;;		 -> STR_6(17), DEMO_TCP_Client@txdataPort60(80), DEMO_TCP_Client@strTmp(17), DEMO_TCP_Client@rxdataPort60(50), 
 26404 ;;		 -> udpHeader(8), tcpHeader(20), Network_Read@debug_str(80), Network_Read@header(14), 
 26405 ;;		 -> ipv4Header(20), ICMP_Receive@icmpHdr(8), DHCP_Handler@ethPktMAC(6), ARPV4_Packet@header(28), 
 26406 ;;		 -> NULL(0), 
 26407 ;;  length          2    4[COMRAM] unsigned int 
 26408 ;; Auto vars:     Size  Location     Type
 26409 ;;  len             2    9[COMRAM] unsigned int 
 26410 ;;  p               2    7[COMRAM] PTR unsigned char 
 26411 ;;		 -> ?_sprintf(2), ?_printf(2), main@str(32), STR_7(13), 
 26412 ;;		 -> STR_6(17), DEMO_TCP_Client@txdataPort60(80), DEMO_TCP_Client@strTmp(17), DEMO_TCP_Client@rxdataPort60(50), 
 26413 ;;		 -> udpHeader(8), tcpHeader(20), Network_Read@debug_str(80), Network_Read@header(14), 
 26414 ;;		 -> ipv4Header(20), ICMP_Receive@icmpHdr(8), DHCP_Handler@ethPktMAC(6), ARPV4_Packet@header(28), 
 26415 ;;		 -> NULL(0), 
 26416 ;; Return value:  Size  Location     Type
 26417 ;;                  2    2[COMRAM] unsigned int 
 26418 ;; Registers used:
 26419 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26420 ;; Tracked objects:
 26421 ;;		On entry : 0/2
 26422 ;;		On exit  : F/1
 26423 ;;		Unchanged: 0/0
 26424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26425 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26426 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26427 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26428 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26429 ;;Total ram usage:        9 bytes
 26430 ;; Hardware stack levels used:    1
 26431 ;; Hardware stack levels required when called:    4
 26432 ;; This function calls:
 26433 ;;		_SPI_ExchangeByte
 26434 ;; This function is called by:
 26435 ;;		_ARPV4_Packet
 26436 ;;		_DHCP_Handler
 26437 ;;		_ICMP_Receive
 26438 ;;		_IPV4_Packet
 26439 ;;		_Network_Read
 26440 ;;		_TCP_PayloadSave
 26441 ;;		_TCP_Recv
 26442 ;;		_UDP_Receive
 26443 ;; This function uses a non-reentrant model
 26444 ;;
 26445                           
 26446                           	psect	text109
 26447  007A48                     __ptext109:
 26448                           	opt stack 0
 26449  007A48                     _ETH_ReadBlock:
 26450                           	opt stack 22
 26451                           
 26452                           ;encX24j600_spi.c: 307: uint16_t len = length;
 26453                           
 26454                           ;incstack = 0
 26455  007A48  C005  F00A         	movff	ETH_ReadBlock@length,ETH_ReadBlock@len
 26456  007A4C  C006  F00B         	movff	ETH_ReadBlock@length+1,ETH_ReadBlock@len+1
 26457                           
 26458                           ;encX24j600_spi.c: 308: char *p = data;
 26459  007A50  C003  F008         	movff	ETH_ReadBlock@data,ETH_ReadBlock@p
 26460  007A54  C004  F009         	movff	ETH_ReadBlock@data+1,ETH_ReadBlock@p+1
 26461                           
 26462                           ;encX24j600_spi.c: 309: if(rxPacketStatusVector.ByteCount)
 26463  007A58  0102               	movlb	2	; () banked
 26464  007A5A  5118               	movf	_rxPacketStatusVector& (0+255),w,b
 26465  007A5C  1119               	iorwf	(_rxPacketStatusVector+1)& (0+255),w,b
 26466  007A5E  E03A               	bz	l635
 26467                           
 26468                           ; BSR set to: 2
 26469                           ;encX24j600_spi.c: 310: {
 26470                           ;encX24j600_spi.c: 311: if(length > rxPacketStatusVector.ByteCount)
 26471  007A60  5005               	movf	ETH_ReadBlock@length,w,c
 26472  007A62  5D18               	subwf	_rxPacketStatusVector& (0+255),w,b
 26473  007A64  5006               	movf	ETH_ReadBlock@length+1,w,c
 26474  007A66  5919               	subwfb	(_rxPacketStatusVector+1)& (0+255),w,b
 26475  007A68  E204               	bc	l8346
 26476                           
 26477                           ; BSR set to: 2
 26478                           ;encX24j600_spi.c: 312: {
 26479                           ;encX24j600_spi.c: 313: len = rxPacketStatusVector.ByteCount;
 26480  007A6A  C218  F00A         	movff	_rxPacketStatusVector,ETH_ReadBlock@len
 26481  007A6E  C219  F00B         	movff	_rxPacketStatusVector+1,ETH_ReadBlock@len+1
 26482  007A72                     l8346:
 26483                           
 26484                           ; BSR set to: 2
 26485                           ;encX24j600_spi.c: 314: }
 26486                           ;encX24j600_spi.c: 315: rxPacketStatusVector.ByteCount -= len;
 26487  007A72  500A               	movf	ETH_ReadBlock@len,w,c
 26488  007A74  5F18               	subwf	_rxPacketStatusVector& (0+255),f,b
 26489  007A76  500B               	movf	ETH_ReadBlock@len+1,w,c
 26490  007A78  5B19               	subwfb	(_rxPacketStatusVector+1)& (0+255),f,b
 26491                           
 26492                           ; BSR set to: 2
 26493  007A7A  968A               	bcf	3978,3,c	;volatile
 26494                           
 26495                           ; BSR set to: 2
 26496                           ;encX24j600_spi.c: 317: SPI_ExchangeByte(rrxdata_inst);
 26497  007A7C  0E2C               	movlw	44
 26498  007A7E  ECEE  F045         	call	_SPI_ExchangeByte
 26499                           
 26500                           ;encX24j600_spi.c: 318: while(len--) *p++=SPI_ExchangeByte(0);
 26501  007A82  D019               	goto	l8356
 26502  007A84                     l8352:
 26503  007A84  C008  FFF6         	movff	ETH_ReadBlock@p,tblptrl
 26504  007A88  C009  FFF7         	movff	ETH_ReadBlock@p+1,tblptrh
 26505  007A8C  0E00               	movlw	low (__smallconst shr (0+16))
 26506  007A8E  6EF8               	movwf	tblptru,c
 26507  007A90  0E00               	movlw	0
 26508  007A92  ECEE  F045         	call	_SPI_ExchangeByte
 26509  007A96  6E07               	movwf	??_ETH_ReadBlock& (0+255),c
 26510  007A98  0E0F               	movlw	(high __ramtop+-1)
 26511  007A9A  64F7               	cpfsgt	tblptrh,c
 26512  007A9C  D004               	bra	u11107
 26513  007A9E  C007  FFF5         	movff	??_ETH_ReadBlock,tablat
 26514  007AA2  000C               	tblwt		*
 26515  007AA4  D006               	bra	u11100
 26516  007AA6                     u11107:
 26517  007AA6  CFF6 FFE9          	movff	tblptrl,fsr0l
 26518  007AAA  CFF7 FFEA          	movff	tblptrh,fsr0h
 26519  007AAE  C007  FFEF         	movff	??_ETH_ReadBlock,indf0
 26520  007AB2                     u11100:
 26521  007AB2  4A08               	infsnz	ETH_ReadBlock@p,f,c
 26522  007AB4  2A09               	incf	ETH_ReadBlock@p+1,f,c
 26523  007AB6                     l8356:
 26524  007AB6  060A               	decf	ETH_ReadBlock@len,f,c
 26525  007AB8  A0D8               	btfss	status,0,c
 26526  007ABA  060B               	decf	ETH_ReadBlock@len+1,f,c
 26527  007ABC  280A               	incf	ETH_ReadBlock@len,w,c
 26528  007ABE  E1E2               	bnz	l8352
 26529  007AC0  280B               	incf	ETH_ReadBlock@len+1,w,c
 26530  007AC2  E1E0               	bnz	l8352
 26531                           
 26532                           ;encX24j600_spi.c: 319: do{LATB3 = 1;} while(0);
 26533  007AC4  868A               	bsf	3978,3,c	;volatile
 26534                           
 26535                           ;encX24j600_spi.c: 320: ethData.error=0;
 26536  007AC6  0101               	movlb	1	; () banked
 26537  007AC8  9183               	bcf	_ethData& (0+255),0,b	;volatile
 26538                           
 26539                           ;encX24j600_spi.c: 321: return length;
 26540  007ACA  C005  F003         	movff	ETH_ReadBlock@length,?_ETH_ReadBlock
 26541  007ACE  C006  F004         	movff	ETH_ReadBlock@length+1,?_ETH_ReadBlock+1
 26542  007AD2  0012               	return	
 26543  007AD4                     l635:
 26544                           
 26545                           ; BSR set to: 2
 26546                           ;encX24j600_spi.c: 323: else
 26547                           ;encX24j600_spi.c: 324: {
 26548                           ;encX24j600_spi.c: 325: ethData.error= 1;
 26549  007AD4  0101               	movlb	1	; () banked
 26550  007AD6  8183               	bsf	_ethData& (0+255),0,b	;volatile
 26551                           
 26552                           ;encX24j600_spi.c: 326: return 0;
 26553  007AD8  6A03               	clrf	?_ETH_ReadBlock,c
 26554  007ADA  6A04               	clrf	?_ETH_ReadBlock+1,c
 26555                           
 26556                           ; BSR set to: 1
 26557  007ADC  0012               	return		;funcret
 26558  007ADE                     __end_of_ETH_ReadBlock:
 26559                           	opt stack 0
 26560                           tosu	equ	0xFFF
 26561                           tosh	equ	0xFFE
 26562                           tosl	equ	0xFFD
 26563                           pclath	equ	0xFFA
 26564                           tblptru	equ	0xFF8
 26565                           tblptrh	equ	0xFF7
 26566                           tblptrl	equ	0xFF6
 26567                           tablat	equ	0xFF5
 26568                           prodh	equ	0xFF4
 26569                           prodl	equ	0xFF3
 26570                           intcon	equ	0xFF2
 26571                           intcon2	equ	0xFF1
 26572                           indf0	equ	0xFEF
 26573                           postinc0	equ	0xFEE
 26574                           fsr0h	equ	0xFEA
 26575                           fsr0l	equ	0xFE9
 26576                           wreg	equ	0xFE8
 26577                           postinc1	equ	0xFE6
 26578                           postdec1	equ	0xFE5
 26579                           plusw1	equ	0xFE3
 26580                           fsr1h	equ	0xFE2
 26581                           fsr1l	equ	0xFE1
 26582                           indf2	equ	0xFDF
 26583                           postinc2	equ	0xFDE
 26584                           postdec2	equ	0xFDD
 26585                           plusw2	equ	0xFDB
 26586                           fsr2h	equ	0xFDA
 26587                           fsr2l	equ	0xFD9
 26588                           status	equ	0xFD8
 26589                           
 26590 ;; *************** function _SPI_ExchangeByte *****************
 26591 ;; Defined at:
 26592 ;;		line 55 in file "../board_support_package/picdem2_net/mssp_spi_master.c"
 26593 ;; Parameters:    Size  Location     Type
 26594 ;;  v               1    wreg     unsigned char 
 26595 ;; Auto vars:     Size  Location     Type
 26596 ;;  v               1    1[COMRAM] unsigned char 
 26597 ;; Return value:  Size  Location     Type
 26598 ;;                  1    wreg      unsigned char 
 26599 ;; Registers used:
 26600 ;;		wreg, status,2
 26601 ;; Tracked objects:
 26602 ;;		On entry : 0/2
 26603 ;;		On exit  : 0/0
 26604 ;;		Unchanged: 0/0
 26605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26607 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26609 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26610 ;;Total ram usage:        1 bytes
 26611 ;; Hardware stack levels used:    1
 26612 ;; Hardware stack levels required when called:    3
 26613 ;; This function calls:
 26614 ;;		Nothing
 26615 ;; This function is called by:
 26616 ;;		_ETH_Init
 26617 ;;		_ETH_NextPacketUpdate
 26618 ;;		_ENCx24_BankselSPI
 26619 ;;		_ENCx24_Read
 26620 ;;		_ENCx24_Write
 26621 ;;		_ENCx24_BFS
 26622 ;;		_ENCx24_BFC
 26623 ;;		_ETH_Read8
 26624 ;;		_ETH_Read16
 26625 ;;		_ETH_Read32
 26626 ;;		_ETH_ReadBlock
 26627 ;;		_ETH_Write8
 26628 ;;		_ETH_Write16
 26629 ;;		_ETH_Write32
 26630 ;;		_ETH_WriteBlock
 26631 ;;		_ETH_Insert
 26632 ;;		_ETH_Set_TXRTS
 26633 ;;		_ETH_SetPktDec
 26634 ;;		_ETH_SetRXptr
 26635 ;;		_ETH_MACRead8
 26636 ;; This function uses a non-reentrant model
 26637 ;;
 26638                           
 26639                           	psect	text110
 26640  008BDC                     __ptext110:
 26641                           	opt stack 0
 26642  008BDC                     _SPI_ExchangeByte:
 26643                           	opt stack 23
 26644                           
 26645                           ; BSR set to: 1
 26646                           ;incstack = 0
 26647                           ;SPI_ExchangeByte@v stored from wreg
 26648  008BDC  6E02               	movwf	SPI_ExchangeByte@v,c
 26649                           
 26650                           ;mssp_spi_master.c: 57: SSP1BUF = v;
 26651  008BDE  C002  FFC9         	movff	SPI_ExchangeByte@v,4041	;volatile
 26652  008BE2                     l283:
 26653  008BE2  A0C7               	btfss	4039,0,c	;volatile
 26654  008BE4  D7FE               	goto	l283
 26655                           
 26656                           ;mssp_spi_master.c: 59: return SSPBUF;
 26657  008BE6  50C9               	movf	4041,w,c	;volatile
 26658  008BE8  0012               	return		;funcret
 26659  008BEA                     __end_of_SPI_ExchangeByte:
 26660                           	opt stack 0
 26661                           tosu	equ	0xFFF
 26662                           tosh	equ	0xFFE
 26663                           tosl	equ	0xFFD
 26664                           pclath	equ	0xFFA
 26665                           tblptru	equ	0xFF8
 26666                           tblptrh	equ	0xFF7
 26667                           tblptrl	equ	0xFF6
 26668                           tablat	equ	0xFF5
 26669                           prodh	equ	0xFF4
 26670                           prodl	equ	0xFF3
 26671                           intcon	equ	0xFF2
 26672                           intcon2	equ	0xFF1
 26673                           indf0	equ	0xFEF
 26674                           postinc0	equ	0xFEE
 26675                           fsr0h	equ	0xFEA
 26676                           fsr0l	equ	0xFE9
 26677                           wreg	equ	0xFE8
 26678                           postinc1	equ	0xFE6
 26679                           postdec1	equ	0xFE5
 26680                           plusw1	equ	0xFE3
 26681                           fsr1h	equ	0xFE2
 26682                           fsr1l	equ	0xFE1
 26683                           indf2	equ	0xFDF
 26684                           postinc2	equ	0xFDE
 26685                           postdec2	equ	0xFDD
 26686                           plusw2	equ	0xFDB
 26687                           fsr2h	equ	0xFDA
 26688                           fsr2l	equ	0xFD9
 26689                           status	equ	0xFD8
 26690                           
 26691 ;; *************** function _TCB_Reset *****************
 26692 ;; Defined at:
 26693 ;;		line 134 in file "../../TCPIP Library/source/tcpv4.c"
 26694 ;; Parameters:    Size  Location     Type
 26695 ;;  tcbPtr          2    1[COMRAM] PTR struct .
 26696 ;;		 -> ?_sprintf(2), ?_printf(2), main@str(32), STR_7(13), 
 26697 ;;		 -> STR_6(17), DEMO_TCP_Client@txdataPort60(80), DEMO_TCP_Client@strTmp(17), DEMO_TCP_Client@rxdataPort60(50), 
 26698 ;;		 -> DEMO_TCP_Client@port60TCB(55), Network_Read@debug_str(80), NULL(0), 
 26699 ;; Auto vars:     Size  Location     Type
 26700 ;;		None
 26701 ;; Return value:  Size  Location     Type
 26702 ;;		None               void
 26703 ;; Registers used:
 26704 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 26705 ;; Tracked objects:
 26706 ;;		On entry : 0/0
 26707 ;;		On exit  : 0/0
 26708 ;;		Unchanged: 0/0
 26709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26710 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26712 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26713 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26714 ;;Total ram usage:        4 bytes
 26715 ;; Hardware stack levels used:    1
 26716 ;; Hardware stack levels required when called:    3
 26717 ;; This function calls:
 26718 ;;		Nothing
 26719 ;; This function is called by:
 26720 ;;		_TCP_FiniteStateMachine
 26721 ;;		_TCP_SocketInit
 26722 ;; This function uses a non-reentrant model
 26723 ;;
 26724                           
 26725                           	psect	text111
 26726  006298                     __ptext111:
 26727                           	opt stack 0
 26728  006298                     _TCB_Reset:
 26729                           	opt stack 24
 26730                           
 26731                           ;tcpv4.c: 136: tcbPtr->destIP = 0;
 26732                           
 26733                           ;incstack = 0
 26734  006298  0E02               	movlw	2
 26735  00629A  2402               	addwf	TCB_Reset@tcbPtr,w,c
 26736  00629C  6E04               	movwf	??_TCB_Reset& (0+255),c
 26737  00629E  0E00               	movlw	0
 26738  0062A0  2003               	addwfc	TCB_Reset@tcbPtr+1,w,c
 26739  0062A2  6E05               	movwf	(??_TCB_Reset+1)& (0+255),c
 26740  0062A4  C004  FFF6         	movff	??_TCB_Reset,tblptrl
 26741  0062A8  C005  FFF7         	movff	??_TCB_Reset+1,tblptrh
 26742  0062AC  0E00               	movlw	low (__smallconst shr (0+16))
 26743  0062AE  6EF8               	movwf	tblptru,c
 26744  0062B0  0E0F               	movlw	(high __ramtop+-1)
 26745  0062B2  64F7               	cpfsgt	tblptrh,c
 26746  0062B4  D009               	bra	u11737
 26747  0062B6  6AF5               	clrf	tablat,c
 26748  0062B8  000D               	tblwt		*+
 26749  0062BA  6AF5               	clrf	tablat,c
 26750  0062BC  000D               	tblwt		*+
 26751  0062BE  6AF5               	clrf	tablat,c
 26752  0062C0  000D               	tblwt		*+
 26753  0062C2  6AF5               	clrf	tablat,c
 26754  0062C4  000C               	tblwt		*
 26755  0062C6  D008               	bra	u11730
 26756  0062C8                     u11737:
 26757  0062C8  CFF6 FFE9          	movff	tblptrl,fsr0l
 26758  0062CC  CFF7 FFEA          	movff	tblptrh,fsr0h
 26759  0062D0  6AEE               	clrf	postinc0,c
 26760  0062D2  6AEE               	clrf	postinc0,c
 26761  0062D4  6AEE               	clrf	postinc0,c
 26762  0062D6  6AEF               	clrf	indf0,c
 26763  0062D8                     u11730:
 26764                           
 26765                           ;tcpv4.c: 137: tcbPtr->destPort = 0;
 26766  0062D8  0E06               	movlw	6
 26767  0062DA  2402               	addwf	TCB_Reset@tcbPtr,w,c
 26768  0062DC  6E04               	movwf	??_TCB_Reset& (0+255),c
 26769  0062DE  0E00               	movlw	0
 26770  0062E0  2003               	addwfc	TCB_Reset@tcbPtr+1,w,c
 26771  0062E2  6E05               	movwf	(??_TCB_Reset+1)& (0+255),c
 26772  0062E4  C004  FFF6         	movff	??_TCB_Reset,tblptrl
 26773  0062E8  C005  FFF7         	movff	??_TCB_Reset+1,tblptrh
 26774  0062EC  0E00               	movlw	low (__smallconst shr (0+16))
 26775  0062EE  6EF8               	movwf	tblptru,c
 26776  0062F0  0E0F               	movlw	(high __ramtop+-1)
 26777  0062F2  64F7               	cpfsgt	tblptrh,c
 26778  0062F4  D005               	bra	u11747
 26779  0062F6  6AF5               	clrf	tablat,c
 26780  0062F8  000D               	tblwt		*+
 26781  0062FA  6AF5               	clrf	tablat,c
 26782  0062FC  000C               	tblwt		*
 26783  0062FE  D006               	bra	u11740
 26784  006300                     u11747:
 26785  006300  CFF6 FFE9          	movff	tblptrl,fsr0l
 26786  006304  CFF7 FFEA          	movff	tblptrh,fsr0h
 26787  006308  6AEE               	clrf	postinc0,c
 26788  00630A  6AEF               	clrf	indf0,c
 26789  00630C                     u11740:
 26790                           
 26791                           ;tcpv4.c: 138: tcbPtr->localSeqno = 0;
 26792  00630C  0E10               	movlw	16
 26793  00630E  2402               	addwf	TCB_Reset@tcbPtr,w,c
 26794  006310  6E04               	movwf	??_TCB_Reset& (0+255),c
 26795  006312  0E00               	movlw	0
 26796  006314  2003               	addwfc	TCB_Reset@tcbPtr+1,w,c
 26797  006316  6E05               	movwf	(??_TCB_Reset+1)& (0+255),c
 26798  006318  C004  FFF6         	movff	??_TCB_Reset,tblptrl
 26799  00631C  C005  FFF7         	movff	??_TCB_Reset+1,tblptrh
 26800  006320  0E00               	movlw	low (__smallconst shr (0+16))
 26801  006322  6EF8               	movwf	tblptru,c
 26802  006324  0E0F               	movlw	(high __ramtop+-1)
 26803  006326  64F7               	cpfsgt	tblptrh,c
 26804  006328  D009               	bra	u11757
 26805  00632A  6AF5               	clrf	tablat,c
 26806  00632C  000D               	tblwt		*+
 26807  00632E  6AF5               	clrf	tablat,c
 26808  006330  000D               	tblwt		*+
 26809  006332  6AF5               	clrf	tablat,c
 26810  006334  000D               	tblwt		*+
 26811  006336  6AF5               	clrf	tablat,c
 26812  006338  000C               	tblwt		*
 26813  00633A  D008               	bra	u11750
 26814  00633C                     u11757:
 26815  00633C  CFF6 FFE9          	movff	tblptrl,fsr0l
 26816  006340  CFF7 FFEA          	movff	tblptrh,fsr0h
 26817  006344  6AEE               	clrf	postinc0,c
 26818  006346  6AEE               	clrf	postinc0,c
 26819  006348  6AEE               	clrf	postinc0,c
 26820  00634A  6AEF               	clrf	indf0,c
 26821  00634C                     u11750:
 26822                           
 26823                           ;tcpv4.c: 139: tcbPtr->localLastAck = 0;
 26824  00634C  0E14               	movlw	20
 26825  00634E  2402               	addwf	TCB_Reset@tcbPtr,w,c
 26826  006350  6E04               	movwf	??_TCB_Reset& (0+255),c
 26827  006352  0E00               	movlw	0
 26828  006354  2003               	addwfc	TCB_Reset@tcbPtr+1,w,c
 26829  006356  6E05               	movwf	(??_TCB_Reset+1)& (0+255),c
 26830  006358  C004  FFF6         	movff	??_TCB_Reset,tblptrl
 26831  00635C  C005  FFF7         	movff	??_TCB_Reset+1,tblptrh
 26832  006360  0E00               	movlw	low (__smallconst shr (0+16))
 26833  006362  6EF8               	movwf	tblptru,c
 26834  006364  0E0F               	movlw	(high __ramtop+-1)
 26835  006366  64F7               	cpfsgt	tblptrh,c
 26836  006368  D009               	bra	u11767
 26837  00636A  6AF5               	clrf	tablat,c
 26838  00636C  000D               	tblwt		*+
 26839  00636E  6AF5               	clrf	tablat,c
 26840  006370  000D               	tblwt		*+
 26841  006372  6AF5               	clrf	tablat,c
 26842  006374  000D               	tblwt		*+
 26843  006376  6AF5               	clrf	tablat,c
 26844  006378  000C               	tblwt		*
 26845  00637A  D008               	bra	u11760
 26846  00637C                     u11767:
 26847  00637C  CFF6 FFE9          	movff	tblptrl,fsr0l
 26848  006380  CFF7 FFEA          	movff	tblptrh,fsr0h
 26849  006384  6AEE               	clrf	postinc0,c
 26850  006386  6AEE               	clrf	postinc0,c
 26851  006388  6AEE               	clrf	postinc0,c
 26852  00638A  6AEF               	clrf	indf0,c
 26853  00638C                     u11760:
 26854                           
 26855                           ;tcpv4.c: 140: tcbPtr->remoteSeqno = 0;
 26856  00638C  0E08               	movlw	8
 26857  00638E  2402               	addwf	TCB_Reset@tcbPtr,w,c
 26858  006390  6E04               	movwf	??_TCB_Reset& (0+255),c
 26859  006392  0E00               	movlw	0
 26860  006394  2003               	addwfc	TCB_Reset@tcbPtr+1,w,c
 26861  006396  6E05               	movwf	(??_TCB_Reset+1)& (0+255),c
 26862  006398  C004  FFF6         	movff	??_TCB_Reset,tblptrl
 26863  00639C  C005  FFF7         	movff	??_TCB_Reset+1,tblptrh
 26864  0063A0  0E00               	movlw	low (__smallconst shr (0+16))
 26865  0063A2  6EF8               	movwf	tblptru,c
 26866  0063A4  0E0F               	movlw	(high __ramtop+-1)
 26867  0063A6  64F7               	cpfsgt	tblptrh,c
 26868  0063A8  D009               	bra	u11777
 26869  0063AA  6AF5               	clrf	tablat,c
 26870  0063AC  000D               	tblwt		*+
 26871  0063AE  6AF5               	clrf	tablat,c
 26872  0063B0  000D               	tblwt		*+
 26873  0063B2  6AF5               	clrf	tablat,c
 26874  0063B4  000D               	tblwt		*+
 26875  0063B6  6AF5               	clrf	tablat,c
 26876  0063B8  000C               	tblwt		*
 26877  0063BA  D008               	bra	u11770
 26878  0063BC                     u11777:
 26879  0063BC  CFF6 FFE9          	movff	tblptrl,fsr0l
 26880  0063C0  CFF7 FFEA          	movff	tblptrh,fsr0h
 26881  0063C4  6AEE               	clrf	postinc0,c
 26882  0063C6  6AEE               	clrf	postinc0,c
 26883  0063C8  6AEE               	clrf	postinc0,c
 26884  0063CA  6AEF               	clrf	indf0,c
 26885  0063CC                     u11770:
 26886                           
 26887                           ;tcpv4.c: 141: tcbPtr->remoteAck = 0;
 26888  0063CC  0E0C               	movlw	12
 26889  0063CE  2402               	addwf	TCB_Reset@tcbPtr,w,c
 26890  0063D0  6E04               	movwf	??_TCB_Reset& (0+255),c
 26891  0063D2  0E00               	movlw	0
 26892  0063D4  2003               	addwfc	TCB_Reset@tcbPtr+1,w,c
 26893  0063D6  6E05               	movwf	(??_TCB_Reset+1)& (0+255),c
 26894  0063D8  C004  FFF6         	movff	??_TCB_Reset,tblptrl
 26895  0063DC  C005  FFF7         	movff	??_TCB_Reset+1,tblptrh
 26896  0063E0  0E00               	movlw	low (__smallconst shr (0+16))
 26897  0063E2  6EF8               	movwf	tblptru,c
 26898  0063E4  0E0F               	movlw	(high __ramtop+-1)
 26899  0063E6  64F7               	cpfsgt	tblptrh,c
 26900  0063E8  D009               	bra	u11787
 26901  0063EA  6AF5               	clrf	tablat,c
 26902  0063EC  000D               	tblwt		*+
 26903  0063EE  6AF5               	clrf	tablat,c
 26904  0063F0  000D               	tblwt		*+
 26905  0063F2  6AF5               	clrf	tablat,c
 26906  0063F4  000D               	tblwt		*+
 26907  0063F6  6AF5               	clrf	tablat,c
 26908  0063F8  000C               	tblwt		*
 26909  0063FA  D008               	bra	u11780
 26910  0063FC                     u11787:
 26911  0063FC  CFF6 FFE9          	movff	tblptrl,fsr0l
 26912  006400  CFF7 FFEA          	movff	tblptrh,fsr0h
 26913  006404  6AEE               	clrf	postinc0,c
 26914  006406  6AEE               	clrf	postinc0,c
 26915  006408  6AEE               	clrf	postinc0,c
 26916  00640A  6AEF               	clrf	indf0,c
 26917  00640C                     u11780:
 26918                           
 26919                           ;tcpv4.c: 142: tcbPtr->remoteWnd = 0;
 26920  00640C  0E18               	movlw	24
 26921  00640E  2402               	addwf	TCB_Reset@tcbPtr,w,c
 26922  006410  6E04               	movwf	??_TCB_Reset& (0+255),c
 26923  006412  0E00               	movlw	0
 26924  006414  2003               	addwfc	TCB_Reset@tcbPtr+1,w,c
 26925  006416  6E05               	movwf	(??_TCB_Reset+1)& (0+255),c
 26926  006418  C004  FFF6         	movff	??_TCB_Reset,tblptrl
 26927  00641C  C005  FFF7         	movff	??_TCB_Reset+1,tblptrh
 26928  006420  0E00               	movlw	low (__smallconst shr (0+16))
 26929  006422  6EF8               	movwf	tblptru,c
 26930  006424  0E0F               	movlw	(high __ramtop+-1)
 26931  006426  64F7               	cpfsgt	tblptrh,c
 26932  006428  D005               	bra	u11797
 26933  00642A  6AF5               	clrf	tablat,c
 26934  00642C  000D               	tblwt		*+
 26935  00642E  6AF5               	clrf	tablat,c
 26936  006430  000C               	tblwt		*
 26937  006432  D006               	bra	u11790
 26938  006434                     u11797:
 26939  006434  CFF6 FFE9          	movff	tblptrl,fsr0l
 26940  006438  CFF7 FFEA          	movff	tblptrh,fsr0h
 26941  00643C  6AEE               	clrf	postinc0,c
 26942  00643E  6AEF               	clrf	indf0,c
 26943  006440                     u11790:
 26944                           
 26945                           ;tcpv4.c: 144: tcbPtr->timeout = 0;
 26946  006440  0E30               	movlw	48
 26947  006442  2402               	addwf	TCB_Reset@tcbPtr,w,c
 26948  006444  6E04               	movwf	??_TCB_Reset& (0+255),c
 26949  006446  0E00               	movlw	0
 26950  006448  2003               	addwfc	TCB_Reset@tcbPtr+1,w,c
 26951  00644A  6E05               	movwf	(??_TCB_Reset+1)& (0+255),c
 26952  00644C  C004  FFF6         	movff	??_TCB_Reset,tblptrl
 26953  006450  C005  FFF7         	movff	??_TCB_Reset+1,tblptrh
 26954  006454  0E00               	movlw	low (__smallconst shr (0+16))
 26955  006456  6EF8               	movwf	tblptru,c
 26956  006458  0E0F               	movlw	(high __ramtop+-1)
 26957  00645A  64F7               	cpfsgt	tblptrh,c
 26958  00645C  D005               	bra	u11807
 26959  00645E  6AF5               	clrf	tablat,c
 26960  006460  000D               	tblwt		*+
 26961  006462  6AF5               	clrf	tablat,c
 26962  006464  000C               	tblwt		*
 26963  006466  D006               	bra	u11800
 26964  006468                     u11807:
 26965  006468  CFF6 FFE9          	movff	tblptrl,fsr0l
 26966  00646C  CFF7 FFEA          	movff	tblptrh,fsr0h
 26967  006470  6AEE               	clrf	postinc0,c
 26968  006472  6AEF               	clrf	indf0,c
 26969  006474                     u11800:
 26970                           
 26971                           ;tcpv4.c: 145: tcbPtr->timeoutReloadValue = 0;
 26972  006474  0E32               	movlw	50
 26973  006476  2402               	addwf	TCB_Reset@tcbPtr,w,c
 26974  006478  6E04               	movwf	??_TCB_Reset& (0+255),c
 26975  00647A  0E00               	movlw	0
 26976  00647C  2003               	addwfc	TCB_Reset@tcbPtr+1,w,c
 26977  00647E  6E05               	movwf	(??_TCB_Reset+1)& (0+255),c
 26978  006480  C004  FFF6         	movff	??_TCB_Reset,tblptrl
 26979  006484  C005  FFF7         	movff	??_TCB_Reset+1,tblptrh
 26980  006488  0E00               	movlw	low (__smallconst shr (0+16))
 26981  00648A  6EF8               	movwf	tblptru,c
 26982  00648C  0E0F               	movlw	(high __ramtop+-1)
 26983  00648E  64F7               	cpfsgt	tblptrh,c
 26984  006490  D005               	bra	u11817
 26985  006492  6AF5               	clrf	tablat,c
 26986  006494  000D               	tblwt		*+
 26987  006496  6AF5               	clrf	tablat,c
 26988  006498  000C               	tblwt		*
 26989  00649A  D006               	bra	u11810
 26990  00649C                     u11817:
 26991  00649C  CFF6 FFE9          	movff	tblptrl,fsr0l
 26992  0064A0  CFF7 FFEA          	movff	tblptrh,fsr0h
 26993  0064A4  6AEE               	clrf	postinc0,c
 26994  0064A6  6AEF               	clrf	indf0,c
 26995  0064A8                     u11810:
 26996                           
 26997                           ;tcpv4.c: 146: tcbPtr->timeoutsCount = 0;
 26998  0064A8  0E34               	movlw	52
 26999  0064AA  2402               	addwf	TCB_Reset@tcbPtr,w,c
 27000  0064AC  6E04               	movwf	??_TCB_Reset& (0+255),c
 27001  0064AE  0E00               	movlw	0
 27002  0064B0  2003               	addwfc	TCB_Reset@tcbPtr+1,w,c
 27003  0064B2  6E05               	movwf	(??_TCB_Reset+1)& (0+255),c
 27004  0064B4  C004  FFF6         	movff	??_TCB_Reset,tblptrl
 27005  0064B8  C005  FFF7         	movff	??_TCB_Reset+1,tblptrh
 27006  0064BC  0E00               	movlw	low (__smallconst shr (0+16))
 27007  0064BE  6EF8               	movwf	tblptru,c
 27008  0064C0  0E0F               	movlw	(high __ramtop+-1)
 27009  0064C2  64F7               	cpfsgt	tblptrh,c
 27010  0064C4  D003               	bra	u11827
 27011  0064C6  6AF5               	clrf	tablat,c
 27012  0064C8  000C               	tblwt		*
 27013  0064CA  D005               	bra	u11820
 27014  0064CC                     u11827:
 27015  0064CC  CFF6 FFE9          	movff	tblptrl,fsr0l
 27016  0064D0  CFF7 FFEA          	movff	tblptrh,fsr0h
 27017  0064D4  6AEF               	clrf	indf0,c
 27018  0064D6                     u11820:
 27019                           
 27020                           ;tcpv4.c: 147: tcbPtr->flags = 0;
 27021  0064D6  0E35               	movlw	53
 27022  0064D8  2402               	addwf	TCB_Reset@tcbPtr,w,c
 27023  0064DA  6E04               	movwf	??_TCB_Reset& (0+255),c
 27024  0064DC  0E00               	movlw	0
 27025  0064DE  2003               	addwfc	TCB_Reset@tcbPtr+1,w,c
 27026  0064E0  6E05               	movwf	(??_TCB_Reset+1)& (0+255),c
 27027  0064E2  C004  FFF6         	movff	??_TCB_Reset,tblptrl
 27028  0064E6  C005  FFF7         	movff	??_TCB_Reset+1,tblptrh
 27029  0064EA  0E00               	movlw	low (__smallconst shr (0+16))
 27030  0064EC  6EF8               	movwf	tblptru,c
 27031  0064EE  0E0F               	movlw	(high __ramtop+-1)
 27032  0064F0  64F7               	cpfsgt	tblptrh,c
 27033  0064F2  D003               	bra	u11837
 27034  0064F4  6AF5               	clrf	tablat,c
 27035  0064F6  000C               	tblwt		*
 27036  0064F8  D005               	bra	u11830
 27037  0064FA                     u11837:
 27038  0064FA  CFF6 FFE9          	movff	tblptrl,fsr0l
 27039  0064FE  CFF7 FFEA          	movff	tblptrh,fsr0h
 27040  006502  6AEF               	clrf	indf0,c
 27041  006504                     u11830:
 27042                           
 27043                           ;tcpv4.c: 149: tcbPtr->localPort = 0;
 27044  006504  C002  FFF6         	movff	TCB_Reset@tcbPtr,tblptrl
 27045  006508  C003  FFF7         	movff	TCB_Reset@tcbPtr+1,tblptrh
 27046  00650C  0E00               	movlw	low (__smallconst shr (0+16))
 27047  00650E  6EF8               	movwf	tblptru,c
 27048  006510  0E0F               	movlw	(high __ramtop+-1)
 27049  006512  64F7               	cpfsgt	tblptrh,c
 27050  006514  D005               	bra	u11847
 27051  006516  6AF5               	clrf	tablat,c
 27052  006518  000D               	tblwt		*+
 27053  00651A  6AF5               	clrf	tablat,c
 27054  00651C  000C               	tblwt		*
 27055  00651E  D006               	bra	u11840
 27056  006520                     u11847:
 27057  006520  CFF6 FFE9          	movff	tblptrl,fsr0l
 27058  006524  CFF7 FFEA          	movff	tblptrh,fsr0h
 27059  006528  6AEE               	clrf	postinc0,c
 27060  00652A  6AEF               	clrf	indf0,c
 27061  00652C                     u11840:
 27062                           
 27063                           ;tcpv4.c: 150: tcbPtr->socketState = SOCKET_CLOSED;
 27064  00652C  0E36               	movlw	54
 27065  00652E  2402               	addwf	TCB_Reset@tcbPtr,w,c
 27066  006530  6E04               	movwf	??_TCB_Reset& (0+255),c
 27067  006532  0E00               	movlw	0
 27068  006534  2003               	addwfc	TCB_Reset@tcbPtr+1,w,c
 27069  006536  6E05               	movwf	(??_TCB_Reset+1)& (0+255),c
 27070  006538  C004  FFF6         	movff	??_TCB_Reset,tblptrl
 27071  00653C  C005  FFF7         	movff	??_TCB_Reset+1,tblptrh
 27072  006540  0E00               	movlw	low (__smallconst shr (0+16))
 27073  006542  6EF8               	movwf	tblptru,c
 27074  006544  0E0F               	movlw	(high __ramtop+-1)
 27075  006546  64F7               	cpfsgt	tblptrh,c
 27076  006548  D004               	bra	u11857
 27077  00654A  0E01               	movlw	1
 27078  00654C  6EF5               	movwf	tablat,c
 27079  00654E  000C               	tblwt		*
 27080  006550  D006               	bra	u11850
 27081  006552                     u11857:
 27082  006552  CFF6 FFE9          	movff	tblptrl,fsr0l
 27083  006556  CFF7 FFEA          	movff	tblptrh,fsr0h
 27084  00655A  0E01               	movlw	1
 27085  00655C  6EEF               	movwf	indf0,c
 27086  00655E                     u11850:
 27087  00655E  0012               	return		;funcret
 27088  006560                     __end_of_TCB_Reset:
 27089                           	opt stack 0
 27090                           tosu	equ	0xFFF
 27091                           tosh	equ	0xFFE
 27092                           tosl	equ	0xFFD
 27093                           pclath	equ	0xFFA
 27094                           tblptru	equ	0xFF8
 27095                           tblptrh	equ	0xFF7
 27096                           tblptrl	equ	0xFF6
 27097                           tablat	equ	0xFF5
 27098                           prodh	equ	0xFF4
 27099                           prodl	equ	0xFF3
 27100                           intcon	equ	0xFF2
 27101                           intcon2	equ	0xFF1
 27102                           indf0	equ	0xFEF
 27103                           postinc0	equ	0xFEE
 27104                           fsr0h	equ	0xFEA
 27105                           fsr0l	equ	0xFE9
 27106                           wreg	equ	0xFE8
 27107                           postinc1	equ	0xFE6
 27108                           postdec1	equ	0xFE5
 27109                           plusw1	equ	0xFE3
 27110                           fsr1h	equ	0xFE2
 27111                           fsr1l	equ	0xFE1
 27112                           indf2	equ	0xFDF
 27113                           postinc2	equ	0xFDE
 27114                           postdec2	equ	0xFDD
 27115                           plusw2	equ	0xFDB
 27116                           fsr2h	equ	0xFDA
 27117                           fsr2l	equ	0xFD9
 27118                           status	equ	0xFD8
 27119                           
 27120 ;; *************** function _ADC_GetConversion *****************
 27121 ;; Defined at:
 27122 ;;		line 106 in file "../board_support_package/picdem2_net/adc.c"
 27123 ;; Parameters:    Size  Location     Type
 27124 ;;  channel         1    wreg     enum E6609
 27125 ;; Auto vars:     Size  Location     Type
 27126 ;;  channel         1    4[COMRAM] enum E6609
 27127 ;; Return value:  Size  Location     Type
 27128 ;;                  2    1[COMRAM] unsigned int 
 27129 ;; Registers used:
 27130 ;;		wreg, status,2, status,0
 27131 ;; Tracked objects:
 27132 ;;		On entry : 0/2
 27133 ;;		On exit  : 0/0
 27134 ;;		Unchanged: 0/0
 27135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27136 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27137 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27138 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27139 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27140 ;;Total ram usage:        4 bytes
 27141 ;; Hardware stack levels used:    1
 27142 ;; Hardware stack levels required when called:    3
 27143 ;; This function calls:
 27144 ;;		Nothing
 27145 ;; This function is called by:
 27146 ;;		_DEMO_TCP_Client
 27147 ;; This function uses a non-reentrant model
 27148 ;;
 27149                           
 27150                           	psect	text112
 27151  00878A                     __ptext112:
 27152                           	opt stack 0
 27153  00878A                     _ADC_GetConversion:
 27154                           	opt stack 26
 27155                           
 27156                           ;incstack = 0
 27157                           ;ADC_GetConversion@channel stored from wreg
 27158  00878A  6E05               	movwf	ADC_GetConversion@channel,c
 27159                           
 27160                           ;adc.c: 109: ADCON0bits.CHS = channel;
 27161  00878C  C005  F004         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
 27162  008790  4604               	rlncf	??_ADC_GetConversion,f,c
 27163  008792  4604               	rlncf	??_ADC_GetConversion,f,c
 27164  008794  50C2               	movf	4034,w,c	;volatile
 27165  008796  1804               	xorwf	??_ADC_GetConversion,w,c
 27166  008798  0BC3               	andlw	-61
 27167  00879A  1804               	xorwf	??_ADC_GetConversion,w,c
 27168  00879C  6EC2               	movwf	4034,c	;volatile
 27169                           
 27170                           ;adc.c: 112: ADCON0bits.ADON = 1;
 27171  00879E  80C2               	bsf	4034,0,c	;volatile
 27172                           
 27173                           ;adc.c: 115: _delay((unsigned long)((5)*(41666667UL/4000000.0)));
 27174  0087A0  0E11               	movlw	17
 27175  0087A2                     u16327:
 27176  0087A2  2EE8               	decfsz	wreg,f,c
 27177  0087A4  D7FE               	goto	u16327
 27178  0087A6  F000               	nop	
 27179                           
 27180                           ;adc.c: 118: ADCON0bits.GO_nDONE = 1;
 27181  0087A8  82C2               	bsf	4034,1,c	;volatile
 27182  0087AA                     l33:
 27183  0087AA  B2C2               	btfsc	4034,1,c	;volatile
 27184  0087AC  D7FE               	goto	l33
 27185                           
 27186                           ;adc.c: 123: }
 27187                           ;adc.c: 127: return (ADRES);
 27188  0087AE  CFC3 F002          	movff	4035,?_ADC_GetConversion	;volatile
 27189  0087B2  CFC4 F003          	movff	4036,?_ADC_GetConversion+1	;volatile
 27190  0087B6  0012               	return		;funcret
 27191  0087B8                     __end_of_ADC_GetConversion:
 27192                           	opt stack 0
 27193                           tosu	equ	0xFFF
 27194                           tosh	equ	0xFFE
 27195                           tosl	equ	0xFFD
 27196                           pclath	equ	0xFFA
 27197                           tblptru	equ	0xFF8
 27198                           tblptrh	equ	0xFF7
 27199                           tblptrl	equ	0xFF6
 27200                           tablat	equ	0xFF5
 27201                           prodh	equ	0xFF4
 27202                           prodl	equ	0xFF3
 27203                           intcon	equ	0xFF2
 27204                           intcon2	equ	0xFF1
 27205                           indf0	equ	0xFEF
 27206                           postinc0	equ	0xFEE
 27207                           fsr0h	equ	0xFEA
 27208                           fsr0l	equ	0xFE9
 27209                           wreg	equ	0xFE8
 27210                           postinc1	equ	0xFE6
 27211                           postdec1	equ	0xFE5
 27212                           plusw1	equ	0xFE3
 27213                           fsr1h	equ	0xFE2
 27214                           fsr1l	equ	0xFE1
 27215                           indf2	equ	0xFDF
 27216                           postinc2	equ	0xFDE
 27217                           postdec2	equ	0xFDD
 27218                           plusw2	equ	0xFDB
 27219                           fsr2h	equ	0xFDA
 27220                           fsr2l	equ	0xFD9
 27221                           status	equ	0xFD8
 27222                           
 27223 ;; *************** function _low_isr *****************
 27224 ;; Defined at:
 27225 ;;		line 64 in file "main.c"
 27226 ;; Parameters:    Size  Location     Type
 27227 ;;		None
 27228 ;; Auto vars:     Size  Location     Type
 27229 ;;		None
 27230 ;; Return value:  Size  Location     Type
 27231 ;;		None               void
 27232 ;; Registers used:
 27233 ;;		None
 27234 ;; Tracked objects:
 27235 ;;		On entry : 0/0
 27236 ;;		On exit  : 0/0
 27237 ;;		Unchanged: 0/0
 27238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27241 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27242 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27243 ;;Total ram usage:        1 bytes
 27244 ;; Hardware stack levels used:    1
 27245 ;; Hardware stack levels required when called:    2
 27246 ;; This function calls:
 27247 ;;		Nothing
 27248 ;; This function is called by:
 27249 ;;		Interrupt level 1
 27250 ;; This function uses a non-reentrant model
 27251 ;;
 27252                           
 27253                           	psect	intcodelo
 27254  000018                     __pintcodelo:
 27255                           	opt stack 0
 27256  000018                     _low_isr:
 27257                           	opt stack 15
 27258                           
 27259                           ;incstack = 0
 27260  000018  805E               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 27261  00001A  CFE0 F001          	movff	bsr,??_low_isr
 27262                           
 27263                           ;main.c: 69: __nop();
 27264  00001E  F000               	nop	
 27265  000020  C001  FFE0         	movff	??_low_isr,bsr
 27266  000024  905E               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 27267  000026  0010               	retfie	
 27268  000028                     __end_of_low_isr:
 27269                           	opt stack 0
 27270                           tosu	equ	0xFFF
 27271                           tosh	equ	0xFFE
 27272                           tosl	equ	0xFFD
 27273                           pclath	equ	0xFFA
 27274                           tblptru	equ	0xFF8
 27275                           tblptrh	equ	0xFF7
 27276                           tblptrl	equ	0xFF6
 27277                           tablat	equ	0xFF5
 27278                           prodh	equ	0xFF4
 27279                           prodl	equ	0xFF3
 27280                           intcon	equ	0xFF2
 27281                           intcon2	equ	0xFF1
 27282                           indf0	equ	0xFEF
 27283                           postinc0	equ	0xFEE
 27284                           fsr0h	equ	0xFEA
 27285                           fsr0l	equ	0xFE9
 27286                           wreg	equ	0xFE8
 27287                           postinc1	equ	0xFE6
 27288                           postdec1	equ	0xFE5
 27289                           plusw1	equ	0xFE3
 27290                           fsr1h	equ	0xFE2
 27291                           fsr1l	equ	0xFE1
 27292                           bsr	equ	0xFE0
 27293                           indf2	equ	0xFDF
 27294                           postinc2	equ	0xFDE
 27295                           postdec2	equ	0xFDD
 27296                           plusw2	equ	0xFDB
 27297                           fsr2h	equ	0xFDA
 27298                           fsr2l	equ	0xFD9
 27299                           status	equ	0xFD8
 27300                           
 27301 ;; *************** function _high_isr *****************
 27302 ;; Defined at:
 27303 ;;		line 59 in file "main.c"
 27304 ;; Parameters:    Size  Location     Type
 27305 ;;		None
 27306 ;; Auto vars:     Size  Location     Type
 27307 ;;		None
 27308 ;; Return value:  Size  Location     Type
 27309 ;;		None               void
 27310 ;; Registers used:
 27311 ;;		wreg, status,2, status,0, cstack
 27312 ;; Tracked objects:
 27313 ;;		On entry : 0/0
 27314 ;;		On exit  : 0/0
 27315 ;;		Unchanged: 0/0
 27316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27321 ;;Total ram usage:        0 bytes
 27322 ;; Hardware stack levels used:    1
 27323 ;; Hardware stack levels required when called:    1
 27324 ;; This function calls:
 27325 ;;		_rtcc_handler
 27326 ;; This function is called by:
 27327 ;;		Interrupt level 2
 27328 ;; This function uses a non-reentrant model
 27329 ;;
 27330                           
 27331                           	psect	intcode
 27332  000008                     __pintcode:
 27333                           	opt stack 0
 27334  000008                     _high_isr:
 27335                           	opt stack 15
 27336                           
 27337                           ;incstack = 0
 27338  000008  825E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 27339  00000A  EF17  F046         	goto	int_func
 27340                           tosu	equ	0xFFF
 27341                           tosh	equ	0xFFE
 27342                           tosl	equ	0xFFD
 27343                           pclath	equ	0xFFA
 27344                           tblptru	equ	0xFF8
 27345                           tblptrh	equ	0xFF7
 27346                           tblptrl	equ	0xFF6
 27347                           tablat	equ	0xFF5
 27348                           prodh	equ	0xFF4
 27349                           prodl	equ	0xFF3
 27350                           intcon	equ	0xFF2
 27351                           intcon2	equ	0xFF1
 27352                           indf0	equ	0xFEF
 27353                           postinc0	equ	0xFEE
 27354                           fsr0h	equ	0xFEA
 27355                           fsr0l	equ	0xFE9
 27356                           wreg	equ	0xFE8
 27357                           postinc1	equ	0xFE6
 27358                           postdec1	equ	0xFE5
 27359                           plusw1	equ	0xFE3
 27360                           fsr1h	equ	0xFE2
 27361                           fsr1l	equ	0xFE1
 27362                           bsr	equ	0xFE0
 27363                           indf2	equ	0xFDF
 27364                           postinc2	equ	0xFDE
 27365                           postdec2	equ	0xFDD
 27366                           plusw2	equ	0xFDB
 27367                           fsr2h	equ	0xFDA
 27368                           fsr2l	equ	0xFD9
 27369                           status	equ	0xFD8
 27370                           
 27371                           	psect	intcode_body
 27372  008C2E                     __pintcode_body:
 27373                           	opt stack 15
 27374  008C2E                     int_func:
 27375                           	opt stack 15
 27376                           
 27377                           ;main.c: 61: rtcc_handler();
 27378  008C2E  EC71  F044         	call	_rtcc_handler	;wreg free
 27379  008C32  925E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 27380  008C34  0011               	retfie		f
 27381  008C36                     __end_of_high_isr:
 27382                           	opt stack 0
 27383                           tosu	equ	0xFFF
 27384                           tosh	equ	0xFFE
 27385                           tosl	equ	0xFFD
 27386                           pclath	equ	0xFFA
 27387                           tblptru	equ	0xFF8
 27388                           tblptrh	equ	0xFF7
 27389                           tblptrl	equ	0xFF6
 27390                           tablat	equ	0xFF5
 27391                           prodh	equ	0xFF4
 27392                           prodl	equ	0xFF3
 27393                           intcon	equ	0xFF2
 27394                           intcon2	equ	0xFF1
 27395                           indf0	equ	0xFEF
 27396                           postinc0	equ	0xFEE
 27397                           fsr0h	equ	0xFEA
 27398                           fsr0l	equ	0xFE9
 27399                           wreg	equ	0xFE8
 27400                           postinc1	equ	0xFE6
 27401                           postdec1	equ	0xFE5
 27402                           plusw1	equ	0xFE3
 27403                           fsr1h	equ	0xFE2
 27404                           fsr1l	equ	0xFE1
 27405                           bsr	equ	0xFE0
 27406                           indf2	equ	0xFDF
 27407                           postinc2	equ	0xFDE
 27408                           postdec2	equ	0xFDD
 27409                           plusw2	equ	0xFDB
 27410                           fsr2h	equ	0xFDA
 27411                           fsr2l	equ	0xFD9
 27412                           status	equ	0xFD8
 27413                           
 27414 ;; *************** function _rtcc_handler *****************
 27415 ;; Defined at:
 27416 ;;		line 122 in file "../board_support_package/picdem2_net/rtcc.c"
 27417 ;; Parameters:    Size  Location     Type
 27418 ;;		None
 27419 ;; Auto vars:     Size  Location     Type
 27420 ;;		None
 27421 ;; Return value:  Size  Location     Type
 27422 ;;		None               void
 27423 ;; Registers used:
 27424 ;;		wreg, status,2, status,0
 27425 ;; Tracked objects:
 27426 ;;		On entry : 0/0
 27427 ;;		On exit  : 0/0
 27428 ;;		Unchanged: 0/0
 27429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27434 ;;Total ram usage:        0 bytes
 27435 ;; Hardware stack levels used:    1
 27436 ;; This function calls:
 27437 ;;		Nothing
 27438 ;; This function is called by:
 27439 ;;		_high_isr
 27440 ;; This function uses a non-reentrant model
 27441 ;;
 27442                           
 27443                           	psect	text115
 27444  0088E2                     __ptext115:
 27445                           	opt stack 0
 27446  0088E2                     _rtcc_handler:
 27447                           	opt stack 15
 27448                           
 27449                           ;rtcc.c: 124: if(TMR1IE && TMR1IF)
 27450                           
 27451                           ;incstack = 0
 27452  0088E2  B09D               	btfsc	3997,0,c	;volatile
 27453  0088E4  A09E               	btfss	3998,0,c	;volatile
 27454  0088E6  0012               	return	
 27455                           
 27456                           ;rtcc.c: 125: {
 27457                           ;rtcc.c: 126: TMR1IF = 0;
 27458  0088E8  909E               	bcf	3998,0,c	;volatile
 27459                           
 27460                           ;rtcc.c: 127: TMR1ON = 0;
 27461  0088EA  90CD               	bcf	4045,0,c	;volatile
 27462                           
 27463                           ;rtcc.c: 128: TMR1 = 32768UL;
 27464  0088EC  0E80               	movlw	128
 27465  0088EE  6ECF               	movwf	4047,c	;volatile
 27466  0088F0  6ACE               	clrf	4046,c	;volatile
 27467                           
 27468                           ;rtcc.c: 129: TMR1ON = 1;
 27469  0088F2  80CD               	bsf	4045,0,c	;volatile
 27470                           
 27471                           ;rtcc.c: 130: deviceTime++;
 27472  0088F4  0102               	movlb	2	; () banked
 27473  0088F6  2BE4               	incf	_deviceTime& (0+255),f,b	;volatile
 27474  0088F8  0E00               	movlw	0
 27475  0088FA  23E5               	addwfc	(_deviceTime+1)& (0+255),f,b	;volatile
 27476  0088FC  23E6               	addwfc	(_deviceTime+2)& (0+255),f,b	;volatile
 27477  0088FE  23E7               	addwfc	(_deviceTime+3)& (0+255),f,b	;volatile
 27478                           
 27479                           ; BSR set to: 2
 27480                           ;rtcc.c: 131: localTime++;
 27481  008900  2BE8               	incf	_localTime& (0+255),f,b	;volatile
 27482  008902  23E9               	addwfc	(_localTime+1)& (0+255),f,b	;volatile
 27483  008904  23EA               	addwfc	(_localTime+2)& (0+255),f,b	;volatile
 27484  008906  23EB               	addwfc	(_localTime+3)& (0+255),f,b	;volatile
 27485  008908  0C00               	retlw	0	;funcret
 27486  00890A                     __end_of_rtcc_handler:
 27487                           	opt stack 0
 27488                           tosu	equ	0xFFF
 27489                           tosh	equ	0xFFE
 27490                           tosl	equ	0xFFD
 27491                           pclath	equ	0xFFA
 27492                           tblptru	equ	0xFF8
 27493                           tblptrh	equ	0xFF7
 27494                           tblptrl	equ	0xFF6
 27495                           tablat	equ	0xFF5
 27496                           prodh	equ	0xFF4
 27497                           prodl	equ	0xFF3
 27498                           intcon	equ	0xFF2
 27499                           intcon2	equ	0xFF1
 27500                           indf0	equ	0xFEF
 27501                           postinc0	equ	0xFEE
 27502                           fsr0h	equ	0xFEA
 27503                           fsr0l	equ	0xFE9
 27504                           wreg	equ	0xFE8
 27505                           postinc1	equ	0xFE6
 27506                           postdec1	equ	0xFE5
 27507                           plusw1	equ	0xFE3
 27508                           fsr1h	equ	0xFE2
 27509                           fsr1l	equ	0xFE1
 27510                           bsr	equ	0xFE0
 27511                           indf2	equ	0xFDF
 27512                           postinc2	equ	0xFDE
 27513                           postdec2	equ	0xFDD
 27514                           plusw2	equ	0xFDB
 27515                           fsr2h	equ	0xFDA
 27516                           fsr2l	equ	0xFD9
 27517                           status	equ	0xFD8
 27518                           tosu	equ	0xFFF
 27519                           tosh	equ	0xFFE
 27520                           tosl	equ	0xFFD
 27521                           pclath	equ	0xFFA
 27522                           tblptru	equ	0xFF8
 27523                           tblptrh	equ	0xFF7
 27524                           tblptrl	equ	0xFF6
 27525                           tablat	equ	0xFF5
 27526                           prodh	equ	0xFF4
 27527                           prodl	equ	0xFF3
 27528                           intcon	equ	0xFF2
 27529                           intcon2	equ	0xFF1
 27530                           indf0	equ	0xFEF
 27531                           postinc0	equ	0xFEE
 27532                           fsr0h	equ	0xFEA
 27533                           fsr0l	equ	0xFE9
 27534                           wreg	equ	0xFE8
 27535                           postinc1	equ	0xFE6
 27536                           postdec1	equ	0xFE5
 27537                           plusw1	equ	0xFE3
 27538                           fsr1h	equ	0xFE2
 27539                           fsr1l	equ	0xFE1
 27540                           bsr	equ	0xFE0
 27541                           indf2	equ	0xFDF
 27542                           postinc2	equ	0xFDE
 27543                           postdec2	equ	0xFDD
 27544                           plusw2	equ	0xFDB
 27545                           fsr2h	equ	0xFDA
 27546                           fsr2l	equ	0xFD9
 27547                           status	equ	0xFD8
 27548                           
 27549                           	psect	text116
 27550  000000                     __ptext116:
 27551                           	opt stack 0
 27552                           tosu	equ	0xFFF
 27553                           tosh	equ	0xFFE
 27554                           tosl	equ	0xFFD
 27555                           pclath	equ	0xFFA
 27556                           tblptru	equ	0xFF8
 27557                           tblptrh	equ	0xFF7
 27558                           tblptrl	equ	0xFF6
 27559                           tablat	equ	0xFF5
 27560                           prodh	equ	0xFF4
 27561                           prodl	equ	0xFF3
 27562                           intcon	equ	0xFF2
 27563                           intcon2	equ	0xFF1
 27564                           indf0	equ	0xFEF
 27565                           postinc0	equ	0xFEE
 27566                           fsr0h	equ	0xFEA
 27567                           fsr0l	equ	0xFE9
 27568                           wreg	equ	0xFE8
 27569                           postinc1	equ	0xFE6
 27570                           postdec1	equ	0xFE5
 27571                           plusw1	equ	0xFE3
 27572                           fsr1h	equ	0xFE2
 27573                           fsr1l	equ	0xFE1
 27574                           bsr	equ	0xFE0
 27575                           indf2	equ	0xFDF
 27576                           postinc2	equ	0xFDE
 27577                           postdec2	equ	0xFDD
 27578                           plusw2	equ	0xFDB
 27579                           fsr2h	equ	0xFDA
 27580                           fsr2l	equ	0xFD9
 27581                           status	equ	0xFD8
 27582                           
 27583                           	psect	rparam
 27584  0000                     tosu	equ	0xFFF
 27585                           tosh	equ	0xFFE
 27586                           tosl	equ	0xFFD
 27587                           pclath	equ	0xFFA
 27588                           tblptru	equ	0xFF8
 27589                           tblptrh	equ	0xFF7
 27590                           tblptrl	equ	0xFF6
 27591                           tablat	equ	0xFF5
 27592                           prodh	equ	0xFF4
 27593                           prodl	equ	0xFF3
 27594                           intcon	equ	0xFF2
 27595                           intcon2	equ	0xFF1
 27596                           indf0	equ	0xFEF
 27597                           postinc0	equ	0xFEE
 27598                           fsr0h	equ	0xFEA
 27599                           fsr0l	equ	0xFE9
 27600                           wreg	equ	0xFE8
 27601                           postinc1	equ	0xFE6
 27602                           postdec1	equ	0xFE5
 27603                           plusw1	equ	0xFE3
 27604                           fsr1h	equ	0xFE2
 27605                           fsr1l	equ	0xFE1
 27606                           bsr	equ	0xFE0
 27607                           indf2	equ	0xFDF
 27608                           postinc2	equ	0xFDE
 27609                           postdec2	equ	0xFDD
 27610                           plusw2	equ	0xFDB
 27611                           fsr2h	equ	0xFDA
 27612                           fsr2l	equ	0xFD9
 27613                           status	equ	0xFD8
 27614                           
 27615                           	psect	temp
 27616  00005E                     btemp:
 27617                           	opt stack 0
 27618  00005E                     	ds	1
 27619  0000                     int$flags	set	btemp
 27620                           tosu	equ	0xFFF
 27621                           tosh	equ	0xFFE
 27622                           tosl	equ	0xFFD
 27623                           pclath	equ	0xFFA
 27624                           tblptru	equ	0xFF8
 27625                           tblptrh	equ	0xFF7
 27626                           tblptrl	equ	0xFF6
 27627                           tablat	equ	0xFF5
 27628                           prodh	equ	0xFF4
 27629                           prodl	equ	0xFF3
 27630                           intcon	equ	0xFF2
 27631                           intcon2	equ	0xFF1
 27632                           indf0	equ	0xFEF
 27633                           postinc0	equ	0xFEE
 27634                           fsr0h	equ	0xFEA
 27635                           fsr0l	equ	0xFE9
 27636                           wreg	equ	0xFE8
 27637                           postinc1	equ	0xFE6
 27638                           postdec1	equ	0xFE5
 27639                           plusw1	equ	0xFE3
 27640                           fsr1h	equ	0xFE2
 27641                           fsr1l	equ	0xFE1
 27642                           bsr	equ	0xFE0
 27643                           indf2	equ	0xFDF
 27644                           postinc2	equ	0xFDE
 27645                           postdec2	equ	0xFDD
 27646                           plusw2	equ	0xFDB
 27647                           fsr2h	equ	0xFDA
 27648                           fsr2l	equ	0xFD9
 27649                           status	equ	0xFD8


Data Sizes:
    Strings     176
    Constant    56
    Data        1
    BSS         450
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     92      93
    BANK0           160    158     160
    BANK1           256    131     212
    BANK2           256     45     236
    BANK3           256      0     184
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          128      0       0
    BANK15           96      0       0

Pointer List with Targets:

    TCB_Check@ptr.prevTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Check@ptr.nextTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Check@ptr.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCB_Check@ptr.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCB_Check@ptr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCB_Check@ptr.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    Network_Read@debug_str.prevTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    Network_Read@debug_str.nextTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    Network_Read@debug_str.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    Network_Read@debug_str.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    Network_Read@debug_str.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    Network_Read@debug_str.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    DEMO_TCP_Client@rxdataPort60.prevTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    DEMO_TCP_Client@rxdataPort60.nextTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    DEMO_TCP_Client@rxdataPort60.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    DEMO_TCP_Client@rxdataPort60.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    DEMO_TCP_Client@rxdataPort60.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    DEMO_TCP_Client@rxdataPort60.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    DEMO_TCP_Client@strTmp.prevTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    DEMO_TCP_Client@strTmp.nextTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    DEMO_TCP_Client@strTmp.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    DEMO_TCP_Client@strTmp.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    DEMO_TCP_Client@strTmp.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    DEMO_TCP_Client@strTmp.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    DEMO_TCP_Client@txdataPort60.prevTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    DEMO_TCP_Client@txdataPort60.nextTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    DEMO_TCP_Client@txdataPort60.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    DEMO_TCP_Client@txdataPort60.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    DEMO_TCP_Client@txdataPort60.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    DEMO_TCP_Client@txdataPort60.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    main@str.prevTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    main@str.nextTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    main@str.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    main@str.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    main@str.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    main@str.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    ?_printf.prevTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    ?_printf.nextTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    ?_printf.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    ?_printf.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    ?_printf.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    ?_printf.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    ?_sprintf.prevTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    ?_sprintf.nextTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    ?_sprintf.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    ?_sprintf.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    ?_sprintf.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    ?_sprintf.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    F7463.nextTCB.prevTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    F7463.nextTCB.nextTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    F7463.nextTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    F7463.nextTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    F7463.nextTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    F7463.nextTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    F7463.prevTCB.prevTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    F7463.prevTCB.nextTCB	PTR void  size(2) Largest target is 0
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    F7463.prevTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    F7463.prevTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    F7463.prevTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    F7463.prevTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 61
		 -> STR_8(CODE[12]), STR_5(CODE[61]), STR_4(CODE[3]), STR_1(CODE[8]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), ?_printf(COMRAM[2]), 

    sprintf@wh	PTR unsigned char  size(2) Largest target is 80
		 -> main@str(BANK2[32]), DEMO_TCP_Client@txdataPort60(BANK3[80]), DEMO_TCP_Client@strTmp(BANK0[17]), Network_Read@debug_str(BANK1[80]), 

    pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 0
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 80
		 -> main@str(BANK2[32]), DEMO_TCP_Client@txdataPort60(BANK3[80]), DEMO_TCP_Client@strTmp(BANK0[17]), Network_Read@debug_str(BANK1[80]), 
		 -> NULL(NULL[0]), 

    printf@f	PTR const unsigned char  size(1) Largest target is 28
		 -> STR_3(CODE[10]), STR_2(CODE[28]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), ?_printf(COMRAM[2]), 

    pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 0
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 80
		 -> main@str(BANK2[32]), DEMO_TCP_Client@txdataPort60(BANK3[80]), DEMO_TCP_Client@strTmp(BANK0[17]), Network_Read@debug_str(BANK1[80]), 
		 -> NULL(NULL[0]), 

    memset@p1	PTR void  size(2) Largest target is 32
		 -> main@str(BANK2[32]), DEMO_TCP_Client@strTmp(BANK0[17]), 

    memset@p	PTR unsigned char  size(2) Largest target is 32
		 -> main@str(BANK2[32]), DEMO_TCP_Client@strTmp(BANK0[17]), 

    memcmp@s2	PTR const void  size(1) Largest target is 6
		 -> DHCP_Handler@ethMAC(BANK0[6]), 

    memcmp@s1	PTR const void  size(1) Largest target is 6
		 -> DHCP_Handler@ethPktMAC(BANK0[6]), 

    _doprnt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), printf@ap(COMRAM[1]), 

    _doprnt@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> ?_sprintf(COMRAM[2]), ?_printf(COMRAM[2]), STR_9(CODE[7]), main@str(BANK2[32]), 
		 -> STR_7(CODE[13]), STR_6(CODE[17]), DEMO_TCP_Client@txdataPort60(BANK3[80]), DEMO_TCP_Client@strTmp(BANK0[17]), 
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), Network_Read@debug_str(BANK1[80]), NULL(NULL[0]), 

    _doprnt@f	PTR const unsigned char  size(1) Largest target is 61
		 -> STR_8(CODE[12]), STR_5(CODE[61]), STR_4(CODE[3]), STR_3(CODE[10]), 
		 -> STR_2(CODE[28]), STR_1(CODE[8]), 

    S4564__prbuf$func	PTR FTN(unsigned char ,)void  size(3) Largest target is 0
		 -> Absolute function(), putch(), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 0
		 -> Absolute function(), putch(), 

    S4564__prbuf$ptr	PTR unsigned char  size(2) Largest target is 80
		 -> main@str(BANK2[32]), DEMO_TCP_Client@txdataPort60(BANK3[80]), DEMO_TCP_Client@strTmp(BANK0[17]), Network_Read@debug_str(BANK1[80]), 
		 -> NULL(NULL[0]), 

    _doprnt@pb.ptr	PTR unsigned char  size(2) Largest target is 80
		 -> main@str(BANK2[32]), DEMO_TCP_Client@txdataPort60(BANK3[80]), DEMO_TCP_Client@strTmp(BANK0[17]), Network_Read@debug_str(BANK1[80]), 
		 -> NULL(NULL[0]), 

    _doprnt@pb	PTR struct __prbuf size(1) Largest target is 6
		 -> sprintf@pb(COMRAM[5]), printf@pb(COMRAM[5]), 

    sp__memset	PTR void  size(2) Largest target is 32
		 -> main@str(BANK2[32]), DEMO_TCP_Client@strTmp(BANK0[17]), 

    F7463.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    F7463.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    F7463.txBufferPtr	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    F7463.txBufferStart	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    F7463.rxBufferPtr	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    F7463.rxBufferStart	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    UDP_Receive@hptr.callBack	PTR FTN(int ,)void  size(3) Largest target is 0
		 -> DHCP_Handler(), 

    UDP_Receive@hptr	PTR const struct . size(1) Largest target is 5
		 -> UDP_CallBackTable(CODE[5]), 

    TCP_Update@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Update@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Update@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCP_Update@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCP_Update@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCP_Update@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCP_Update@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> ?_sprintf(COMRAM[2]), ?_printf(COMRAM[2]), main@str(BANK2[32]), STR_7(CODE[13]), 
		 -> STR_6(CODE[17]), DEMO_TCP_Client@txdataPort60(BANK3[80]), DEMO_TCP_Client@strTmp(BANK0[17]), DEMO_TCP_Client@rxdataPort60(BANK2[50]), 
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), Network_Read@debug_str(BANK1[80]), NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), 

    TCP_InsertRxBuffer@data	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), 

    TCP_InsertRxBuffer@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), 

    TCP_SendDone@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_SendDone@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_SendDone@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCP_SendDone@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCP_SendDone@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCP_SendDone@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCP_SendDone@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), 

    TCP_Send@data	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), 

    TCP_Send@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Send@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Send@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCP_Send@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCP_Send@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCP_Send@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCP_Send@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), 

    TCP_Close@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Close@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Close@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCP_Close@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCP_Close@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCP_Close@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCP_Connect@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Connect@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Connect@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCP_Connect@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCP_Connect@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCP_Connect@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCP_Connect@srvaddr	PTR struct . size(2) Largest target is 6
		 -> remoteSocket(BANK2[6]), 

    TCP_Connect@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), 

    TCP_Listen@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Listen@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Listen@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCP_Listen@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCP_Listen@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCP_Listen@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCP_Bind@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Bind@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Bind@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCP_Bind@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCP_Bind@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCP_Bind@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr.txBufferPtr	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr.txBufferStart	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr.rxBufferStart	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr	PTR struct . size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), 

    TCP_SocketInit@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), 

    TCP_Recv@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Recv@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Recv@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCP_Recv@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCP_Recv@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCP_Recv@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCP_Recv@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> ?_sprintf(COMRAM[2]), ?_printf(COMRAM[2]), main@str(BANK2[32]), STR_7(CODE[13]), 
		 -> STR_6(CODE[17]), DEMO_TCP_Client@txdataPort60(BANK3[80]), DEMO_TCP_Client@strTmp(BANK0[17]), DEMO_TCP_Client@rxdataPort60(BANK2[50]), 
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), Network_Read@debug_str(BANK1[80]), NULL(NULL[0]), 

    currentTCB.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    currentTCB.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    currentTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    currentTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    currentTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    currentTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    currentTCB	PTR struct . size(2) Largest target is 61
		 -> ?_sprintf(COMRAM[2]), ?_printf(COMRAM[2]), main@str(BANK2[32]), STR_7(CODE[13]), 
		 -> STR_6(CODE[17]), DEMO_TCP_Client@txdataPort60(BANK3[80]), DEMO_TCP_Client@strTmp(BANK0[17]), DEMO_TCP_Client@rxdataPort60(BANK2[50]), 
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), Network_Read@debug_str(BANK1[80]), NULL(NULL[0]), 

    TCP_Snd@data	PTR unsigned char  size(2) Largest target is 80
		 -> ?_sprintf(COMRAM[2]), ?_printf(COMRAM[2]), main@str(BANK2[32]), STR_7(CODE[13]), 
		 -> STR_6(CODE[17]), DEMO_TCP_Client@txdataPort60(BANK3[80]), DEMO_TCP_Client@strTmp(BANK0[17]), DEMO_TCP_Client@rxdataPort60(BANK2[50]), 
		 -> Network_Read@debug_str(BANK1[80]), NULL(NULL[0]), 

    TCP_Snd@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Snd@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCP_Snd@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCP_Snd@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCP_Snd@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCP_Snd@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCP_Snd@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> ?_sprintf(COMRAM[2]), ?_printf(COMRAM[2]), main@str(BANK2[32]), STR_7(CODE[13]), 
		 -> STR_6(CODE[17]), DEMO_TCP_Client@txdataPort60(BANK3[80]), DEMO_TCP_Client@strTmp(BANK0[17]), DEMO_TCP_Client@rxdataPort60(BANK2[50]), 
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), Network_Read@debug_str(BANK1[80]), NULL(NULL[0]), 

    TCB_Check@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Check@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Check@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCB_Check@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCB_Check@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCB_Check@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCB_Check@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> ?_sprintf(COMRAM[2]), ?_printf(COMRAM[2]), main@str(BANK2[32]), STR_7(CODE[13]), 
		 -> STR_6(CODE[17]), DEMO_TCP_Client@txdataPort60(BANK3[80]), DEMO_TCP_Client@strTmp(BANK0[17]), DEMO_TCP_Client@rxdataPort60(BANK2[50]), 
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), Network_Read@debug_str(BANK1[80]), NULL(NULL[0]), 

    TCB_Check@ptr	PTR struct . size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), 

    TCB_Reset@tcbPtr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Reset@tcbPtr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Reset@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCB_Reset@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCB_Reset@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCB_Reset@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCB_Reset@tcbPtr	PTR struct . size(2) Largest target is 61
		 -> ?_sprintf(COMRAM[2]), ?_printf(COMRAM[2]), main@str(BANK2[32]), STR_7(CODE[13]), 
		 -> STR_6(CODE[17]), DEMO_TCP_Client@txdataPort60(BANK3[80]), DEMO_TCP_Client@strTmp(BANK0[17]), DEMO_TCP_Client@rxdataPort60(BANK2[50]), 
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), Network_Read@debug_str(BANK1[80]), NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Remove@ptr.txBufferPtr	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCB_Remove@ptr.txBufferStart	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCB_Remove@ptr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCB_Remove@ptr.rxBufferStart	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCB_Insert@ptr.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    TCB_Insert@ptr.txBufferPtr	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCB_Insert@ptr.txBufferStart	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    TCB_Insert@ptr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCB_Insert@ptr.rxBufferStart	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    tcbList.prevTCB.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    tcbList.prevTCB.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    tcbList.prevTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    tcbList.prevTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    tcbList.prevTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    tcbList.prevTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    S3055$prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    tcbList.prevTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    S3055$nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    tcbList.nextTCB	PTR void  size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    S3055$txBufferPtr	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    tcbList.txBufferPtr	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    S3055$txBufferStart	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    tcbList.txBufferStart	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK3[80]), NULL(NULL[0]), 

    S3055$rxBufferPtr	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    tcbList.rxBufferPtr	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    S3055$rxBufferStart	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    tcbList.rxBufferStart	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), NULL(NULL[0]), 

    TCB_Insert@ptr	PTR struct . size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), 

    tcbList	PTR struct . size(2) Largest target is 61
		 -> DEMO_TCP_Client@port60TCB(BANK2[55]), NULL(NULL[0]), 

    SYSLOG_Write@message	PTR const unsigned char  size(2) Largest target is 32
		 -> main@str(BANK2[32]), STR_7(CODE[13]), STR_6(CODE[17]), 

    sp__MAC_getAddress	PTR const struct . size(1) Largest target is 6
		 -> macAddress(CODE[6]), 

    IPv4_Start@macAddress	PTR const struct . size(2) Largest target is 104
		 -> arpMap.macAddress(BANK3[6]), broadcastMAC(CODE[6]), arpMap(BANK3[104]), NULL(NULL[0]), 

    IPV4_PseudoHeaderChecksum@v	PTR unsigned int  size(1) Largest target is 12
		 -> IPV4_PseudoHeaderChecksum@tmp(COMRAM[12]), 

    ICMP_EchoReply@icmpHdr	PTR struct . size(1) Largest target is 8
		 -> ICMP_Receive@icmpHdr(BANK0[8]), 

    ICMP_EchoReply@ipv4Hdr	PTR struct . size(2) Largest target is 20
		 -> ipv4Header(BANK1[20]), 

    ICMP_Receive@ipv4Hdr	PTR struct . size(2) Largest target is 20
		 -> ipv4Header(BANK1[20]), 

    S2143$callBack	PTR FTN(int ,)void  size(3) Largest target is 0
		 -> DHCP_Handler(), 

    UDP_CallBackTable.callBack	PTR FTN(int ,)void  size(3) Largest target is 0
		 -> DHCP_Handler(), 

    sp__ARPV4_Lookup	PTR struct . size(2) Largest target is 104
		 -> arpMap.macAddress(BANK3[6]), arpMap(BANK3[104]), NULL(NULL[0]), 

    ARPV4_Lookup@entry_pointer	PTR struct . size(2) Largest target is 104
		 -> arpMap(BANK3[104]), 

    ARPV4_Update@entryPointer	PTR struct . size(2) Largest target is 104
		 -> arpMap(BANK3[104]), 

    ARPV4_Packet@arpPtr	PTR struct . size(2) Largest target is 104
		 -> arpMap(BANK3[104]), 

    ARPV4_Packet@entryPointer	PTR struct . size(2) Largest target is 104
		 -> arpMap(BANK3[104]), 

    ETH_Insert@data	PTR unsigned char  size(1) Largest target is 2
		 -> UDP_Send@cksm(COMRAM[2]), UDP_Send@udpLength(COMRAM[2]), TCP_Snd@cksm(BANK0[2]), IPV4_Send@cksm(COMRAM[2]), 
		 -> IPV4_Send@totalLength(COMRAM[2]), ICMP_EchoReply@cksm(BANK0[2]), 

    ETH_WriteBlock@data	PTR void  size(2) Largest target is 104
		 -> arpMap.macAddress(BANK3[6]), ?_sprintf(COMRAM[2]), ?_printf(COMRAM[2]), main@str(BANK2[32]), 
		 -> STR_7(CODE[13]), STR_6(CODE[17]), DEMO_TCP_Client@txdataPort60(BANK3[80]), DEMO_TCP_Client@strTmp(BANK0[17]), 
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), TCP_Snd@txHeader(BANK0[20]), Network_Read@debug_str(BANK1[80]), dhcpName(CODE[21]), 
		 -> DHCP_Request@ethMAC(BANK0[6]), broadcastMAC(CODE[6]), ARPV4_Request@header(COMRAM[28]), header.sha(COMRAM[6]), 
		 -> ARPV4_Packet@header(COMRAM[28]), arpMap(BANK3[104]), ethMAC(BANK2[6]), NULL(NULL[0]), 

    ETH_WriteBlock@p	PTR unsigned char  size(2) Largest target is 104
		 -> arpMap.macAddress(BANK3[6]), ?_sprintf(COMRAM[2]), ?_printf(COMRAM[2]), main@str(BANK2[32]), 
		 -> STR_7(CODE[13]), STR_6(CODE[17]), DEMO_TCP_Client@txdataPort60(BANK3[80]), DEMO_TCP_Client@strTmp(BANK0[17]), 
		 -> DEMO_TCP_Client@rxdataPort60(BANK2[50]), TCP_Snd@txHeader(BANK0[20]), Network_Read@debug_str(BANK1[80]), dhcpName(CODE[21]), 
		 -> DHCP_Request@ethMAC(BANK0[6]), broadcastMAC(CODE[6]), ARPV4_Request@header(COMRAM[28]), header.sha(COMRAM[6]), 
		 -> ARPV4_Packet@header(COMRAM[28]), arpMap(BANK3[104]), ethMAC(BANK2[6]), NULL(NULL[0]), 

    ETH_ReadBlock@data	PTR void  size(2) Largest target is 50
		 -> ?_sprintf(COMRAM[2]), ?_printf(COMRAM[2]), main@str(BANK2[32]), STR_7(CODE[13]), 
		 -> STR_6(CODE[17]), DEMO_TCP_Client@txdataPort60(BANK3[80]), DEMO_TCP_Client@strTmp(BANK0[17]), DEMO_TCP_Client@rxdataPort60(BANK2[50]), 
		 -> udpHeader(BANK2[8]), tcpHeader(BANK1[20]), Network_Read@debug_str(BANK1[80]), Network_Read@header(BANK1[14]), 
		 -> ipv4Header(BANK1[20]), ICMP_Receive@icmpHdr(BANK0[8]), DHCP_Handler@ethPktMAC(BANK0[6]), ARPV4_Packet@header(COMRAM[28]), 
		 -> NULL(NULL[0]), 

    ETH_ReadBlock@p	PTR unsigned char  size(2) Largest target is 50
		 -> ?_sprintf(COMRAM[2]), ?_printf(COMRAM[2]), main@str(BANK2[32]), STR_7(CODE[13]), 
		 -> STR_6(CODE[17]), DEMO_TCP_Client@txdataPort60(BANK3[80]), DEMO_TCP_Client@strTmp(BANK0[17]), DEMO_TCP_Client@rxdataPort60(BANK2[50]), 
		 -> udpHeader(BANK2[8]), tcpHeader(BANK1[20]), Network_Read@debug_str(BANK1[80]), Network_Read@header(BANK1[14]), 
		 -> ipv4Header(BANK1[20]), ICMP_Receive@icmpHdr(BANK0[8]), DHCP_Handler@ethPktMAC(BANK0[6]), ARPV4_Packet@header(COMRAM[28]), 
		 -> NULL(NULL[0]), 

    ETH_GetMAC@macAddr	PTR unsigned char  size(2) Largest target is 28
		 -> DHCP_Handler@ethMAC(BANK0[6]), DHCP_Request@ethMAC(BANK0[6]), ARPV4_Request@header(COMRAM[28]), header.sha(COMRAM[6]), 
		 -> ARPV4_Packet@header(COMRAM[28]), ethMAC(BANK2[6]), 

    ETH_WriteStart@destMAC	PTR const struct . size(2) Largest target is 104
		 -> arpMap.macAddress(BANK3[6]), broadcastMAC(CODE[6]), header.sha(COMRAM[6]), ARPV4_Packet@header(COMRAM[28]), 
		 -> arpMap(BANK3[104]), NULL(NULL[0]), 

    time@t	PTR long  size(2) Largest target is 4
		 -> main@now_p(BANK2[4]), DEMO_TCP_Client@t_client(BANK1[4]), Network_Manage@now(BANK1[4]), arpTimer(BANK2[4]), 
		 -> NULL(NULL[0]), 

    lcd_puts@s	PTR const unsigned char  size(2) Largest target is 32
		 -> main@str(BANK2[32]), DEMO_TCP_Client@strTmp(BANK0[17]), 


Critical Paths under _main in COMRAM

    _lcd_goto1->_lcd_write_ctrl
    _initHW->_lcd_init
    _lcd_init->_lcd_write_ctrl
    _SYSLOG_Write->_printf
    _SYSLOG_Init->_printf
    _printf->__doprnt
    _Network_WaitForLink->_ETH_CheckLinkUp
    _UDP_Receive->_DHCP_Handler
    _ETH_Read32->_SPI_ExchangeByte
    _TCP_ParseTCPOptions->_ETH_Dump
    _ETH_Read8->_SPI_ExchangeByte
    _ETH_Read16->_SPI_ExchangeByte
    _ETH_Dump->_ENCx24_Read
    _ICMP_Receive->_ICMP_EchoReply
    _ICMP_EchoReply->_IPv4_Start
    _ETH_SaveRDPT->_ENCx24_Read
    _ETH_Copy->_waitForDMA
    _ETH_RxComputeChecksum->_waitForDMA
    _ETH_NextPacketUpdate->_ETH_SetRXptr
    _ETH_SetRXptr->_SPI_ExchangeByte
    _ETH_Flush->_ENCx24_Write
    _ETH_SetPktDec->_SPI_ExchangeByte
    _ARPV4_Packet->_ETH_WriteStart
    _ETH_EventHandler->_ENCx24_Read
    _ETH_ResetReceiver->_ENCx24_BFC
    _ETH_ResetReceiver->_ENCx24_BFS
    _ETH_ResetReceiver->_ENCx24_Write
    _DHCP_Request->_UDP_Start
    _UDP_Start->_IPv4_Start
    _ETH_ResetByteCount->_ENCx24_Read
    _UDP_Send->_IPV4_Send
    _ETH_GetByteCount->_ENCx24_Read
    _DHCP_WriteZeros->_ETH_Write8
    _Network_Init->_ETH_Init
    _ETH_Init->_ETH_CheckLinkUp
    _ETH_SendSystemReset->_ENCx24_Read
    _ETH_CheckLinkUp->_ETH_readLinkStatus
    _ETH_readLinkStatus->_ENCx24_Read
    _ENCx24_PhyRead->_ENCx24_Read
    _ENCx24_PHYWrite->_ENCx24_Read
    _DEMO_TCP_Client->_TCP_Connect
    _sprintf->__doprnt
    __doprnt->___lwmod
    ___lwmod->___lwdiv
    _lcd_puts->_lcd_putch
    _lcd_putch->_lcd_write_data
    _lcd_goto2->_lcd_write_ctrl
    _TCP_SocketInit->_TCB_Check
    _TCP_SendDone->_TCB_Check
    _TCP_Send->_TCP_Snd
    _TCP_InsertRxBuffer->_TCB_Check
    _TCP_GetReceivedData->_TCB_Check
    _TCP_SocketPoll->_TCB_Check
    _TCP_FiniteStateMachine->_TCP_PayloadSave
    _TCP_PayloadSave->_TCP_Snd
    _TCP_Snd->_IPv4_Start
    _IPv4_Start->_ARPV4_Request
    _ETH_Write8->_SPI_ExchangeByte
    _ETH_Write32->_SPI_ExchangeByte
    _ARPV4_Request->_ETH_WriteStart
    _ETH_WriteStart->_ENCx24_Read
    _ETH_WriteBlock->_SPI_ExchangeByte
    _ETH_Write16->_SPI_ExchangeByte
    _ETH_GetMAC->_ETH_MACRead8
    _ETH_MACRead8->_ENCx24_BankselSPI
    _IPV4_Send->_ETH_TxComputeChecksum
    _ETH_TxComputeChecksum->_waitForDMA
    _waitForDMA->_ENCx24_Read
    _ENCx24_BFS->_ENCx24_BankselSPI
    _ENCx24_BFC->_ENCx24_BankselSPI
    _ETH_Send->_ENCx24_Write
    _ETH_Set_TXRTS->_SPI_ExchangeByte
    _ETH_Insert->_ENCx24_Read
    _ENCx24_Write->_ENCx24_BankselSPI
    _ENCx24_Read->_ENCx24_BankselSPI
    _ENCx24_BankselSPI->_SPI_ExchangeByte
    _ETH_ReadBlock->_SPI_ExchangeByte

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _TCP_Update->_TCP_FiniteStateMachine
    _Network_Read->_IPV4_Packet
    _IPV4_Packet->_TCP_Recv
    _UDP_Receive->_DHCP_Handler
    _DHCP_Handler->_DHCP_Request
    _TCP_Recv->_TCP_FiniteStateMachine
    _ICMP_Receive->_ICMP_EchoReply
    _ICMP_EchoReply->_IPv4_Start
    _DHCP_Manage->_DHCP_Request
    _DHCP_Request->_UDP_Start
    _UDP_Start->_IPv4_Start
    _DEMO_TCP_Client->_TCP_Connect
    _TCP_Send->_TCP_Snd
    _TCP_Connect->_TCP_FiniteStateMachine
    _TCP_FiniteStateMachine->_TCP_PayloadSave
    _TCP_PayloadSave->_TCP_Snd
    _TCP_Snd->_IPv4_Start

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Network_Manage
    _Network_Manage->_Network_Read
    _Network_Read->_IPV4_Packet

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _low_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _low_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Critical Paths under _low_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                45    45      0  790800
                                              0 BANK2     45    45      0
                    _DEMO_TCP_Client
                       _IPV4_GetMyIP
                       _Network_Init
                     _Network_Manage
                _Network_WaitForLink
                        _SYSLOG_Init
                       _SYSLOG_Write
                             _initHW
                          _lcd_goto1
                           _lcd_puts
                             _memset
                            _sprintf
                               _time
 ---------------------------------------------------------------------------------
 (1) _lcd_goto1                                            1     1      0      62
                                              2 COMRAM     1     1      0
                           _lcd_busy
                     _lcd_write_ctrl
 ---------------------------------------------------------------------------------
 (1) _initHW                                               0     0      0     133
                     _ADC_Initialize
                           _LED_Init
                           _lcd_init
                          _rtcc_init
                           _spi_init
                          _uart_init
 ---------------------------------------------------------------------------------
 (2) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _spi_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _rtcc_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             5     5      0      31
                                              2 COMRAM     1     1      0
                           _lcd_busy
                      _lcd_init_pins
                     _lcd_write_ctrl
 ---------------------------------------------------------------------------------
 (3) _lcd_init_pins                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_Init                                             1     1      0     102
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSLOG_Write                                         4     2      2    5825
                                             43 COMRAM     4     2      2
                             _printf
                               _time
 ---------------------------------------------------------------------------------
 (1) _SYSLOG_Init                                          4     4      0    5524
                                             43 COMRAM     4     4      0
                             _printf
                               _time
 ---------------------------------------------------------------------------------
 (2) _printf                                              11     7      4    4789
                                             32 COMRAM    11     7      4
                            __doprnt
 ---------------------------------------------------------------------------------
 (1) _Network_WaitForLink                                  0     0      0     520
                    _ETH_CheckLinkUp
 ---------------------------------------------------------------------------------
 (1) _Network_Manage                                       5     5      0  536402
                                            126 BANK1      5     5      0
                       _ARPV4_Update
                        _DHCP_Manage
                   _ETH_EventHandler
                       _Network_Read
                         _TCP_Update
                               _time
 ---------------------------------------------------------------------------------
 (2) _TCP_Update                                          12    12      0  130817
                                            116 BANK0     12    12      0
             _TCP_FiniteStateMachine
 ---------------------------------------------------------------------------------
 (2) _Network_Read                                        98    98      0  328137
                                             28 BANK1     98    98      0
                       _ARPV4_Packet
                          _ETH_Flush
               _ETH_NextPacketUpdate
                      _ETH_ReadBlock
                        _IPV4_Packet
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _IPV4_Packet                                         73    73      0  298891
                                            153 BANK0      5     5      0
                                              0 BANK1     28    28      0
                           _ETH_Dump
                      _ETH_ReadBlock
              _ETH_RxComputeChecksum
                       _ICMP_Receive
          _IPV4_PseudoHeaderChecksum
                           _TCP_Recv
                        _UDP_Receive
 ---------------------------------------------------------------------------------
 (4) _UDP_Receive                                         11     9      2   77059
                                             55 BANK0     11     9      2
                       _DHCP_Handler *
                      _ETH_ReadBlock
 ---------------------------------------------------------------------------------
 (5) _DHCP_Handler                                        36    34      2   74943
                                             88 COMRAM     4     2      2
                                             23 BANK0     32    32      0
                       _DHCP_Request
                           _ETH_Dump
                         _ETH_GetMAC
                         _ETH_Read16
                         _ETH_Read32
                          _ETH_Read8
                      _ETH_ReadBlock
                             _memcmp
 ---------------------------------------------------------------------------------
 (6) _memcmp                                               6     3      3     377
                                              1 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (6) _ETH_Read32                                           8     4      4     176
                                              2 COMRAM     8     4      4
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (4) _TCP_Recv                                            37    31      6  138185
                                            116 BANK0     37    31      6
                      _ETH_ReadBlock
             _TCP_FiniteStateMachine
                _TCP_ParseTCPOptions
 ---------------------------------------------------------------------------------
 (5) _TCP_ParseTCPOptions                                  6     6      0    5596
                                             14 COMRAM     6     6      0
                           _ETH_Dump
                         _ETH_Read16
                          _ETH_Read8
 ---------------------------------------------------------------------------------
 (6) _ETH_Read8                                            1     1      0      65
                                              2 COMRAM     1     1      0
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (6) _ETH_Read16                                           4     2      2     102
                                              2 COMRAM     4     2      2
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (6) _ETH_Dump                                             4     2      2    4929
                                             10 COMRAM     4     2      2
                        _ENCx24_Read
                       _ENCx24_Write
 ---------------------------------------------------------------------------------
 (4) _IPV4_PseudoHeaderChecksum                           24    22      2     578
                                              1 COMRAM    24    22      2
 ---------------------------------------------------------------------------------
 (4) _ICMP_Receive                                        15    13      2   68217
                                             89 COMRAM     2     0      2
                                             21 BANK0     13    13      0
                      _ETH_ReadBlock
                       _ETH_SaveRDPT
                     _ICMP_EchoReply
 ---------------------------------------------------------------------------------
 (5) _ICMP_EchoReply                                      16    14      2   65699
                                             87 COMRAM     2     0      2
                                              7 BANK0     14    14      0
                           _ETH_Copy
                         _ETH_Insert
                       _ETH_SaveRDPT
              _ETH_TxComputeChecksum
                        _ETH_Write16
                          _IPV4_Send
                         _IPv4_Start
 ---------------------------------------------------------------------------------
 (6) _ETH_SaveRDPT                                         0     0      0     449
                        _ENCx24_Read
 ---------------------------------------------------------------------------------
 (6) _ETH_Copy                                             4     2      2    6745
                                             12 COMRAM     4     2      2
                         _ENCx24_BFC
                         _ENCx24_BFS
                        _ENCx24_Read
                       _ENCx24_Write
                         _waitForDMA
 ---------------------------------------------------------------------------------
 (4) _ETH_RxComputeChecksum                               14    10      4    7551
                                             12 COMRAM    14    10      4
                         _ENCx24_BFC
                         _ENCx24_BFS
                        _ENCx24_Read
                       _ENCx24_Write
                         _waitForDMA
 ---------------------------------------------------------------------------------
 (3) _ETH_NextPacketUpdate                                 0     0      0     217
                       _ETH_SetRXptr
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (4) _ETH_SetRXptr                                         2     0      2     186
                                              2 COMRAM     2     0      2
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (3) _ETH_Flush                                            2     2      0    3394
                                              8 COMRAM     2     2      0
                       _ENCx24_Write
                      _ETH_SetPktDec
 ---------------------------------------------------------------------------------
 (4) _ETH_SetPktDec                                        0     0      0      31
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (3) _ARPV4_Packet                                        70    70      0   17059
                                             14 COMRAM    70    70      0
                         _ETH_GetMAC
                      _ETH_ReadBlock
                           _ETH_Send
                     _ETH_WriteBlock
                     _ETH_WriteStart
 ---------------------------------------------------------------------------------
 (2) _ETH_EventHandler                                     8     8      0   10803
                                             10 COMRAM     8     8      0
                         _ENCx24_BFC
                        _ENCx24_Read
                       _ENCx24_Write
                  _ETH_ResetReceiver
 ---------------------------------------------------------------------------------
 (3) _ETH_ResetReceiver                                    0     0      0    5562
                         _ENCx24_BFC
                         _ENCx24_BFS
                       _ENCx24_Write
 ---------------------------------------------------------------------------------
 (2) _DHCP_Manage                                          0     0      0   65709
                       _DHCP_Request
 ---------------------------------------------------------------------------------
 (6) _DHCP_Request                                        10    10      0   65709
                                             15 BANK0      8     8      0
                    _DHCP_WriteZeros
                         _ETH_GetMAC
                        _ETH_Write16
                        _ETH_Write32
                         _ETH_Write8
                     _ETH_WriteBlock
                           _UDP_Send
                          _UDP_Start
 ---------------------------------------------------------------------------------
 (7) _UDP_Start                                            9     1      8   28641
                                             87 COMRAM     1     1      0
                                              7 BANK0      8     0      8
                 _ETH_ResetByteCount
                        _ETH_Write16
                         _IPv4_Start
 ---------------------------------------------------------------------------------
 (8) _ETH_ResetByteCount                                   0     0      0     449
                        _ENCx24_Read
 ---------------------------------------------------------------------------------
 (7) _UDP_Send                                             9     9      0   30925
                                             39 COMRAM     9     9      0
                   _ETH_GetByteCount
                         _ETH_Insert
              _ETH_TxComputeChecksum
                          _IPV4_Send
 ---------------------------------------------------------------------------------
 (8) _ETH_GetByteCount                                     4     2      2     483
                                             10 COMRAM     4     2      2
                        _ENCx24_Read
 ---------------------------------------------------------------------------------
 (7) _DHCP_WriteZeros                                      2     0      2     183
                                              3 COMRAM     2     0      2
                         _ETH_Write8
 ---------------------------------------------------------------------------------
 (2) _ARPV4_Update                                         3     3      0     105
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Network_Init                                         0     0      0   22139
                         _ARPV4_Init
                           _ETH_Init
                          _IPV4_Init
                           _TCP_Init
                               _time
 ---------------------------------------------------------------------------------
 (2) _TCP_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IPV4_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ETH_Init                                             4     4      0   21339
                                             19 COMRAM     4     4      0
                         _ENCx24_BFS
                    _ENCx24_PHYWrite
                     _ENCx24_PhyRead
                        _ENCx24_Read
                       _ENCx24_Write
                    _ETH_CheckLinkUp
                         _ETH_GetMAC
                _ETH_SendSystemReset
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (3) _ETH_SendSystemReset                                  2     2      0    4938
                                             10 COMRAM     2     2      0
                         _ENCx24_BFS
                        _ENCx24_Read
                       _ENCx24_Write
 ---------------------------------------------------------------------------------
 (2) _ETH_CheckLinkUp                                      5     5      0     520
                                             14 COMRAM     5     5      0
                 _ETH_readLinkStatus
 ---------------------------------------------------------------------------------
 (3) _ETH_readLinkStatus                                   4     0      4     449
                                             10 COMRAM     4     0      4
                        _ENCx24_Read
 ---------------------------------------------------------------------------------
 (3) _ENCx24_PhyRead                                       3     1      2    6042
                                             10 COMRAM     3     1      2
                         _ENCx24_BFC
                         _ENCx24_BFS
                        _ENCx24_Read
                       _ENCx24_Write
 ---------------------------------------------------------------------------------
 (3) _ENCx24_PHYWrite                                      3     1      2    4017
                                             10 COMRAM     3     1      2
                        _ENCx24_Read
                       _ENCx24_Write
 ---------------------------------------------------------------------------------
 (2) _ARPV4_Init                                           1     1      0      99
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _IPV4_GetMyIP                                         4     0      4       0
                                              1 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _DEMO_TCP_Client                                     27    27      0  211683
                                            122 BANK0     27    27      0
                  _ADC_GetConversion
                        _TCP_Connect
                _TCP_GetReceivedData
                 _TCP_InsertRxBuffer
                           _TCP_Send
                       _TCP_SendDone
                     _TCP_SocketInit
                     _TCP_SocketPoll
                          _lcd_goto2
                           _lcd_puts
                             _memset
                            _sprintf
                             _strlen
                               _time
 ---------------------------------------------------------------------------------
 (1) _time                                                 9     5      4     701
                                              1 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     170
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             17     6     11    5333
                                             32 COMRAM    17     6     11
                            __doprnt
 ---------------------------------------------------------------------------------
 (2) __doprnt                                             23    21      2    4473
                                             13 COMRAM    19    17      2
                   Absolute function *
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch *
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      62
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     412
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     412
                                              8 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     601
                                              1 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _memset                                               8     2      6     587
                                              1 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             2     0      2     324
                                              3 COMRAM     2     0      2
                          _lcd_putch
 ---------------------------------------------------------------------------------
 (2) _lcd_putch                                            1     1      0     124
                                              2 COMRAM     1     1      0
                           _lcd_busy
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (3) _lcd_write_data                                       1     1      0      31
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _lcd_goto2                                            1     1      0      62
                                              2 COMRAM     1     1      0
                           _lcd_busy
                     _lcd_write_ctrl
 ---------------------------------------------------------------------------------
 (2) _lcd_write_ctrl                                       1     1      0      31
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _lcd_busy                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TCP_SocketInit                                       3     1      2    3042
                                              9 COMRAM     3     1      2
                          _TCB_Check
                         _TCB_Insert
                          _TCB_Reset
 ---------------------------------------------------------------------------------
 (3) _TCB_Insert                                           2     0      2     164
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TCP_SendDone                                         3     1      2     718
                                              9 COMRAM     3     1      2
                          _TCB_Check
 ---------------------------------------------------------------------------------
 (2) _TCP_Send                                             7     1      6   64419
                                             89 COMRAM     1     1      0
                                             84 BANK0      6     0      6
                            _TCP_Snd
                     _TCP_SocketPoll
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _TCP_InsertRxBuffer                                   7     1      6    1342
                                              9 COMRAM     7     1      6
                          _TCB_Check
 ---------------------------------------------------------------------------------
 (2) _TCP_GetReceivedData                                  8     6      2     873
                                              9 COMRAM     8     6      2
                          _TCB_Check
 ---------------------------------------------------------------------------------
 (2) _TCP_Connect                                          7     3      4  131655
                                             91 COMRAM     1     1      0
                                            116 BANK0      6     2      4
             _TCP_FiniteStateMachine
                     _TCP_SocketPoll
 ---------------------------------------------------------------------------------
 (2) _TCP_SocketPoll                                       3     1      2     834
                                              9 COMRAM     3     1      2
                          _TCB_Check
 ---------------------------------------------------------------------------------
 (3) _TCB_Check                                            8     6      2     579
                                              1 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (3) _TCP_FiniteStateMachine                              17    17      0  130337
                                             99 BANK0     17    17      0
                          _TCB_Reset
                    _TCP_PayloadSave
                            _TCP_Snd
 ---------------------------------------------------------------------------------
 (4) _TCP_PayloadSave                                     17    15      2   65053
                                             89 COMRAM     2     0      2
                                             84 BANK0     15    15      0
                      _ETH_ReadBlock
                            _TCP_Snd
 ---------------------------------------------------------------------------------
 (4) _TCP_Snd                                             79    77      2   62918
                                             87 COMRAM     2     0      2
                                              7 BANK0     77    77      0
                         _ETH_Insert
              _ETH_TxComputeChecksum
                     _ETH_WriteBlock
                          _IPV4_Send
                         _IPv4_Start
 ---------------------------------------------------------------------------------
 (5) _IPv4_Start                                          20    15      5   26425
                                             74 COMRAM    13     8      5
                                              0 BANK0      7     7      0
                       _ARPV4_Lookup
                      _ARPV4_Request
                        _ETH_Write16
                        _ETH_Write32
                         _ETH_Write8
                     _ETH_WriteStart
 ---------------------------------------------------------------------------------
 (6) _ETH_Write8                                           1     1      0      62
                                              2 COMRAM     1     1      0
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (6) _ETH_Write32                                          4     0      4    1494
                                              2 COMRAM     4     0      4
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (6) _ARPV4_Request                                       60    56      4   14609
                                             14 COMRAM    60    56      4
                         _ETH_GetMAC
                           _ETH_Send
                     _ETH_WriteBlock
                     _ETH_WriteStart
 ---------------------------------------------------------------------------------
 (6) _ETH_WriteStart                                       4     0      4    7641
                                             10 COMRAM     4     0      4
                        _ENCx24_Read
                       _ENCx24_Write
                        _ETH_Write16
                     _ETH_WriteBlock
 ---------------------------------------------------------------------------------
 (7) _ETH_WriteBlock                                       6     2      4    1928
                                              2 COMRAM     6     2      4
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (7) _ETH_Write16                                          2     0      2    1336
                                              2 COMRAM     2     0      2
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (7) _ETH_GetMAC                                           2     0      2     816
                                              7 COMRAM     2     0      2
                       _ETH_MACRead8
 ---------------------------------------------------------------------------------
 (8) _ETH_MACRead8                                         3     3      0     412
                                              4 COMRAM     3     3      0
                  _ENCx24_BankselSPI
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (6) _ARPV4_Lookup                                        11     7      4     257
                                              1 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (5) _IPV4_Send                                           11     9      2   16946
                                             28 COMRAM    11     9      2
                         _ETH_Insert
                           _ETH_Send
              _ETH_TxComputeChecksum
 ---------------------------------------------------------------------------------
 (6) _ETH_TxComputeChecksum                               16    10      6    7877
                                             12 COMRAM    16    10      6
                         _ENCx24_BFC
                         _ENCx24_BFS
                        _ENCx24_Read
                       _ENCx24_Write
                         _waitForDMA
 ---------------------------------------------------------------------------------
 (7) _waitForDMA                                           2     2      0     483
                                             10 COMRAM     2     2      0
                        _ENCx24_Read
 ---------------------------------------------------------------------------------
 (7) _ENCx24_BFS                                           4     2      2    1163
                                              4 COMRAM     4     2      2
                  _ENCx24_BankselSPI
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (7) _ENCx24_BFC                                           4     2      2    1073
                                              4 COMRAM     4     2      2
                  _ENCx24_BankselSPI
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (7) _ETH_Send                                             0     0      0    3357
                       _ENCx24_Write
                      _ETH_Set_TXRTS
 ---------------------------------------------------------------------------------
 (8) _ETH_Set_TXRTS                                        0     0      0      31
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (6) _ETH_Insert                                           7     3      4    5235
                                             10 COMRAM     7     3      4
                        _ENCx24_Read
                       _ENCx24_Write
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (7) _ENCx24_Write                                         4     2      2    3326
                                              4 COMRAM     4     2      2
                  _ENCx24_BankselSPI
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (4) _ENCx24_Read                                          6     4      2     449
                                              4 COMRAM     6     4      2
                  _ENCx24_BankselSPI
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (5) _ENCx24_BankselSPI                                    2     2      0     189
                                              2 COMRAM     2     2      0
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (5) _ETH_ReadBlock                                        9     5      4    1840
                                              2 COMRAM     9     5      4
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (5) _SPI_ExchangeByte                                     1     1      0      31
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _TCB_Reset                                            4     2      2    1843
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversion                                    4     2      2      31
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _low_isr                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _high_isr                                            0     0      0       0
                       _rtcc_handler
 ---------------------------------------------------------------------------------
 (16) _rtcc_handler                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DEMO_TCP_Client
     _ADC_GetConversion
     _TCP_Connect
       _TCP_FiniteStateMachine
         _TCB_Reset
         _TCP_PayloadSave
           _ETH_ReadBlock
             _SPI_ExchangeByte
           _TCP_Snd
             _ETH_Insert
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ETH_TxComputeChecksum
               _ENCx24_BFC
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_BFS
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _waitForDMA
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
             _ETH_WriteBlock
               _SPI_ExchangeByte
             _IPV4_Send
               _ETH_Insert
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_Write
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ETH_Send
                 _ENCx24_Write
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ETH_Set_TXRTS
                   _SPI_ExchangeByte
               _ETH_TxComputeChecksum
                 _ENCx24_BFC
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_BFS
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_Write
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _waitForDMA
                   _ENCx24_Read
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
             _IPv4_Start
               _ARPV4_Lookup
               _ARPV4_Request
                 _ETH_GetMAC
                   _ETH_MACRead8
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                 _ETH_Send
                   _ENCx24_Write
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ETH_Set_TXRTS
                     _SPI_ExchangeByte
                 _ETH_WriteBlock
                   _SPI_ExchangeByte
                 _ETH_WriteStart
                   _ENCx24_Read
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ENCx24_Write
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ETH_Write16
                     _SPI_ExchangeByte
                   _ETH_WriteBlock
                     _SPI_ExchangeByte
               _ETH_Write16
                 _SPI_ExchangeByte
               _ETH_Write32
                 _SPI_ExchangeByte
               _ETH_Write8
                 _SPI_ExchangeByte
               _ETH_WriteStart
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_Write
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ETH_Write16
                   _SPI_ExchangeByte
                 _ETH_WriteBlock
                   _SPI_ExchangeByte
         _TCP_Snd
           _ETH_Insert
             _ENCx24_Read
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ENCx24_Write
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _SPI_ExchangeByte
           _ETH_TxComputeChecksum
             _ENCx24_BFC
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ENCx24_BFS
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ENCx24_Read
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ENCx24_Write
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _waitForDMA
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
           _ETH_WriteBlock
             _SPI_ExchangeByte
           _IPV4_Send
             _ETH_Insert
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ETH_Send
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ETH_Set_TXRTS
                 _SPI_ExchangeByte
             _ETH_TxComputeChecksum
               _ENCx24_BFC
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_BFS
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _waitForDMA
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
           _IPv4_Start
             _ARPV4_Lookup
             _ARPV4_Request
               _ETH_GetMAC
                 _ETH_MACRead8
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
               _ETH_Send
                 _ENCx24_Write
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ETH_Set_TXRTS
                   _SPI_ExchangeByte
               _ETH_WriteBlock
                 _SPI_ExchangeByte
               _ETH_WriteStart
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_Write
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ETH_Write16
                   _SPI_ExchangeByte
                 _ETH_WriteBlock
                   _SPI_ExchangeByte
             _ETH_Write16
               _SPI_ExchangeByte
             _ETH_Write32
               _SPI_ExchangeByte
             _ETH_Write8
               _SPI_ExchangeByte
             _ETH_WriteStart
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ETH_Write16
                 _SPI_ExchangeByte
               _ETH_WriteBlock
                 _SPI_ExchangeByte
       _TCP_SocketPoll
         _TCB_Check
     _TCP_GetReceivedData
       _TCB_Check
     _TCP_InsertRxBuffer
       _TCB_Check
     _TCP_Send
       _TCP_Snd
         _ETH_Insert
           _ENCx24_Read
             _ENCx24_BankselSPI
               _SPI_ExchangeByte
             _SPI_ExchangeByte
           _ENCx24_Write
             _ENCx24_BankselSPI
               _SPI_ExchangeByte
             _SPI_ExchangeByte
           _SPI_ExchangeByte
         _ETH_TxComputeChecksum
           _ENCx24_BFC
             _ENCx24_BankselSPI
               _SPI_ExchangeByte
             _SPI_ExchangeByte
           _ENCx24_BFS
             _ENCx24_BankselSPI
               _SPI_ExchangeByte
             _SPI_ExchangeByte
           _ENCx24_Read
             _ENCx24_BankselSPI
               _SPI_ExchangeByte
             _SPI_ExchangeByte
           _ENCx24_Write
             _ENCx24_BankselSPI
               _SPI_ExchangeByte
             _SPI_ExchangeByte
           _waitForDMA
             _ENCx24_Read
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
         _ETH_WriteBlock
           _SPI_ExchangeByte
         _IPV4_Send
           _ETH_Insert
             _ENCx24_Read
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ENCx24_Write
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _SPI_ExchangeByte
           _ETH_Send
             _ENCx24_Write
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ETH_Set_TXRTS
               _SPI_ExchangeByte
           _ETH_TxComputeChecksum
             _ENCx24_BFC
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ENCx24_BFS
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ENCx24_Read
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ENCx24_Write
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _waitForDMA
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
         _IPv4_Start
           _ARPV4_Lookup
           _ARPV4_Request
             _ETH_GetMAC
               _ETH_MACRead8
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
             _ETH_Send
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ETH_Set_TXRTS
                 _SPI_ExchangeByte
             _ETH_WriteBlock
               _SPI_ExchangeByte
             _ETH_WriteStart
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ETH_Write16
                 _SPI_ExchangeByte
               _ETH_WriteBlock
                 _SPI_ExchangeByte
           _ETH_Write16
             _SPI_ExchangeByte
           _ETH_Write32
             _SPI_ExchangeByte
           _ETH_Write8
             _SPI_ExchangeByte
           _ETH_WriteStart
             _ENCx24_Read
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ENCx24_Write
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ETH_Write16
               _SPI_ExchangeByte
             _ETH_WriteBlock
               _SPI_ExchangeByte
       _TCP_SocketPoll
         _TCB_Check
       _strlen (ARG)
     _TCP_SendDone
       _TCB_Check
     _TCP_SocketInit
       _TCB_Check
       _TCB_Insert
       _TCB_Reset
     _TCP_SocketPoll
       _TCB_Check
     _lcd_goto2
       _lcd_busy
       _lcd_write_ctrl
     _lcd_puts
       _lcd_putch
         _lcd_busy
         _lcd_write_data
     _memset
     _sprintf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         ___wmul *
         _isdigit *
         _putch *
     _strlen
     _time
   _IPV4_GetMyIP
   _Network_Init
     _ARPV4_Init
     _ETH_Init
       _ENCx24_BFS
         _ENCx24_BankselSPI
           _SPI_ExchangeByte
         _SPI_ExchangeByte
       _ENCx24_PHYWrite
         _ENCx24_Read
           _ENCx24_BankselSPI
             _SPI_ExchangeByte
           _SPI_ExchangeByte
         _ENCx24_Write
           _ENCx24_BankselSPI
             _SPI_ExchangeByte
           _SPI_ExchangeByte
       _ENCx24_PhyRead
         _ENCx24_BFC
           _ENCx24_BankselSPI
             _SPI_ExchangeByte
           _SPI_ExchangeByte
         _ENCx24_BFS
           _ENCx24_BankselSPI
             _SPI_ExchangeByte
           _SPI_ExchangeByte
         _ENCx24_Read
           _ENCx24_BankselSPI
             _SPI_ExchangeByte
           _SPI_ExchangeByte
         _ENCx24_Write
           _ENCx24_BankselSPI
             _SPI_ExchangeByte
           _SPI_ExchangeByte
       _ENCx24_Read
         _ENCx24_BankselSPI
           _SPI_ExchangeByte
         _SPI_ExchangeByte
       _ENCx24_Write
         _ENCx24_BankselSPI
           _SPI_ExchangeByte
         _SPI_ExchangeByte
       _ETH_CheckLinkUp
         _ETH_readLinkStatus
           _ENCx24_Read
             _ENCx24_BankselSPI
               _SPI_ExchangeByte
             _SPI_ExchangeByte
       _ETH_GetMAC
         _ETH_MACRead8
           _ENCx24_BankselSPI
             _SPI_ExchangeByte
           _SPI_ExchangeByte
       _ETH_SendSystemReset
         _ENCx24_BFS
           _ENCx24_BankselSPI
             _SPI_ExchangeByte
           _SPI_ExchangeByte
         _ENCx24_Read
           _ENCx24_BankselSPI
             _SPI_ExchangeByte
           _SPI_ExchangeByte
         _ENCx24_Write
           _ENCx24_BankselSPI
             _SPI_ExchangeByte
           _SPI_ExchangeByte
       _SPI_ExchangeByte
     _IPV4_Init
     _TCP_Init
     _time
   _Network_Manage
     _ARPV4_Update
     _DHCP_Manage
       _DHCP_Request
         _DHCP_WriteZeros
           _ETH_Write8
             _SPI_ExchangeByte
         _ETH_GetMAC
           _ETH_MACRead8
             _ENCx24_BankselSPI
               _SPI_ExchangeByte
             _SPI_ExchangeByte
         _ETH_Write16
           _SPI_ExchangeByte
         _ETH_Write32
           _SPI_ExchangeByte
         _ETH_Write8
           _SPI_ExchangeByte
         _ETH_WriteBlock
           _SPI_ExchangeByte
         _UDP_Send
           _ETH_GetByteCount
             _ENCx24_Read
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
           _ETH_Insert
             _ENCx24_Read
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ENCx24_Write
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _SPI_ExchangeByte
           _ETH_TxComputeChecksum
             _ENCx24_BFC
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ENCx24_BFS
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ENCx24_Read
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ENCx24_Write
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _waitForDMA
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
           _IPV4_Send
             _ETH_Insert
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ETH_Send
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ETH_Set_TXRTS
                 _SPI_ExchangeByte
             _ETH_TxComputeChecksum
               _ENCx24_BFC
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_BFS
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _waitForDMA
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
         _UDP_Start
           _ETH_ResetByteCount
             _ENCx24_Read
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
           _ETH_Write16
             _SPI_ExchangeByte
           _IPv4_Start
             _ARPV4_Lookup
             _ARPV4_Request
               _ETH_GetMAC
                 _ETH_MACRead8
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
               _ETH_Send
                 _ENCx24_Write
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ETH_Set_TXRTS
                   _SPI_ExchangeByte
               _ETH_WriteBlock
                 _SPI_ExchangeByte
               _ETH_WriteStart
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_Write
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ETH_Write16
                   _SPI_ExchangeByte
                 _ETH_WriteBlock
                   _SPI_ExchangeByte
             _ETH_Write16
               _SPI_ExchangeByte
             _ETH_Write32
               _SPI_ExchangeByte
             _ETH_Write8
               _SPI_ExchangeByte
             _ETH_WriteStart
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ETH_Write16
                 _SPI_ExchangeByte
               _ETH_WriteBlock
                 _SPI_ExchangeByte
     _ETH_EventHandler
       _ENCx24_BFC
         _ENCx24_BankselSPI
           _SPI_ExchangeByte
         _SPI_ExchangeByte
       _ENCx24_Read
         _ENCx24_BankselSPI
           _SPI_ExchangeByte
         _SPI_ExchangeByte
       _ENCx24_Write
         _ENCx24_BankselSPI
           _SPI_ExchangeByte
         _SPI_ExchangeByte
       _ETH_ResetReceiver
         _ENCx24_BFC
           _ENCx24_BankselSPI
             _SPI_ExchangeByte
           _SPI_ExchangeByte
         _ENCx24_BFS
           _ENCx24_BankselSPI
             _SPI_ExchangeByte
           _SPI_ExchangeByte
         _ENCx24_Write
           _ENCx24_BankselSPI
             _SPI_ExchangeByte
           _SPI_ExchangeByte
     _Network_Read
       _ARPV4_Packet
         _ETH_GetMAC
           _ETH_MACRead8
             _ENCx24_BankselSPI
               _SPI_ExchangeByte
             _SPI_ExchangeByte
         _ETH_ReadBlock
           _SPI_ExchangeByte
         _ETH_Send
           _ENCx24_Write
             _ENCx24_BankselSPI
               _SPI_ExchangeByte
             _SPI_ExchangeByte
           _ETH_Set_TXRTS
             _SPI_ExchangeByte
         _ETH_WriteBlock
           _SPI_ExchangeByte
         _ETH_WriteStart
           _ENCx24_Read
             _ENCx24_BankselSPI
               _SPI_ExchangeByte
             _SPI_ExchangeByte
           _ENCx24_Write
             _ENCx24_BankselSPI
               _SPI_ExchangeByte
             _SPI_ExchangeByte
           _ETH_Write16
             _SPI_ExchangeByte
           _ETH_WriteBlock
             _SPI_ExchangeByte
       _ETH_Flush
         _ENCx24_Write
           _ENCx24_BankselSPI
             _SPI_ExchangeByte
           _SPI_ExchangeByte
         _ETH_SetPktDec
           _SPI_ExchangeByte
       _ETH_NextPacketUpdate
         _ETH_SetRXptr
           _SPI_ExchangeByte
         _SPI_ExchangeByte
       _ETH_ReadBlock
         _SPI_ExchangeByte
       _IPV4_Packet
         _ETH_Dump
           _ENCx24_Read
             _ENCx24_BankselSPI
               _SPI_ExchangeByte
             _SPI_ExchangeByte
           _ENCx24_Write
             _ENCx24_BankselSPI
               _SPI_ExchangeByte
             _SPI_ExchangeByte
         _ETH_ReadBlock
           _SPI_ExchangeByte
         _ETH_RxComputeChecksum
           _ENCx24_BFC
             _ENCx24_BankselSPI
               _SPI_ExchangeByte
             _SPI_ExchangeByte
           _ENCx24_BFS
             _ENCx24_BankselSPI
               _SPI_ExchangeByte
             _SPI_ExchangeByte
           _ENCx24_Read
             _ENCx24_BankselSPI
               _SPI_ExchangeByte
             _SPI_ExchangeByte
           _ENCx24_Write
             _ENCx24_BankselSPI
               _SPI_ExchangeByte
             _SPI_ExchangeByte
           _waitForDMA
             _ENCx24_Read
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
         _ICMP_Receive
           _ETH_ReadBlock
             _SPI_ExchangeByte
           _ETH_SaveRDPT
             _ENCx24_Read
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
           _ICMP_EchoReply
             _ETH_Copy
               _ENCx24_BFC
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_BFS
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _waitForDMA
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
             _ETH_Insert
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ETH_SaveRDPT
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
             _ETH_TxComputeChecksum
               _ENCx24_BFC
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_BFS
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _waitForDMA
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
             _ETH_Write16
               _SPI_ExchangeByte
             _IPV4_Send
               _ETH_Insert
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_Write
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ETH_Send
                 _ENCx24_Write
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ETH_Set_TXRTS
                   _SPI_ExchangeByte
               _ETH_TxComputeChecksum
                 _ENCx24_BFC
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_BFS
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_Write
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _waitForDMA
                   _ENCx24_Read
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
             _IPv4_Start
               _ARPV4_Lookup
               _ARPV4_Request
                 _ETH_GetMAC
                   _ETH_MACRead8
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                 _ETH_Send
                   _ENCx24_Write
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ETH_Set_TXRTS
                     _SPI_ExchangeByte
                 _ETH_WriteBlock
                   _SPI_ExchangeByte
                 _ETH_WriteStart
                   _ENCx24_Read
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ENCx24_Write
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ETH_Write16
                     _SPI_ExchangeByte
                   _ETH_WriteBlock
                     _SPI_ExchangeByte
               _ETH_Write16
                 _SPI_ExchangeByte
               _ETH_Write32
                 _SPI_ExchangeByte
               _ETH_Write8
                 _SPI_ExchangeByte
               _ETH_WriteStart
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_Write
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ETH_Write16
                   _SPI_ExchangeByte
                 _ETH_WriteBlock
                   _SPI_ExchangeByte
         _IPV4_PseudoHeaderChecksum
         _TCP_Recv
           _ETH_ReadBlock
             _SPI_ExchangeByte
           _TCP_FiniteStateMachine
             _TCB_Reset
             _TCP_PayloadSave
               _ETH_ReadBlock
                 _SPI_ExchangeByte
               _TCP_Snd
                 _ETH_Insert
                   _ENCx24_Read
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ENCx24_Write
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ETH_TxComputeChecksum
                   _ENCx24_BFC
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ENCx24_BFS
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ENCx24_Read
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ENCx24_Write
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _waitForDMA
                     _ENCx24_Read
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                 _ETH_WriteBlock
                   _SPI_ExchangeByte
                 _IPV4_Send
                   _ETH_Insert
                     _ENCx24_Read
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _ENCx24_Write
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ETH_Send
                     _ENCx24_Write
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _ETH_Set_TXRTS
                       _SPI_ExchangeByte
                   _ETH_TxComputeChecksum
                     _ENCx24_BFC
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _ENCx24_BFS
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _ENCx24_Read
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _ENCx24_Write
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _waitForDMA
                       _ENCx24_Read
                         _ENCx24_BankselSPI
                           _SPI_ExchangeByte
                         _SPI_ExchangeByte
                 _IPv4_Start
                   _ARPV4_Lookup
                   _ARPV4_Request
                     _ETH_GetMAC
                       _ETH_MACRead8
                         _ENCx24_BankselSPI
                           _SPI_ExchangeByte
                         _SPI_ExchangeByte
                     _ETH_Send
                       _ENCx24_Write
                         _ENCx24_BankselSPI
                           _SPI_ExchangeByte
                         _SPI_ExchangeByte
                       _ETH_Set_TXRTS
                         _SPI_ExchangeByte
                     _ETH_WriteBlock
                       _SPI_ExchangeByte
                     _ETH_WriteStart
                       _ENCx24_Read
                         _ENCx24_BankselSPI
                           _SPI_ExchangeByte
                         _SPI_ExchangeByte
                       _ENCx24_Write
                         _ENCx24_BankselSPI
                           _SPI_ExchangeByte
                         _SPI_ExchangeByte
                       _ETH_Write16
                         _SPI_ExchangeByte
                       _ETH_WriteBlock
                         _SPI_ExchangeByte
                   _ETH_Write16
                     _SPI_ExchangeByte
                   _ETH_Write32
                     _SPI_ExchangeByte
                   _ETH_Write8
                     _SPI_ExchangeByte
                   _ETH_WriteStart
                     _ENCx24_Read
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _ENCx24_Write
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _ETH_Write16
                       _SPI_ExchangeByte
                     _ETH_WriteBlock
                       _SPI_ExchangeByte
             _TCP_Snd
               _ETH_Insert
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_Write
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ETH_TxComputeChecksum
                 _ENCx24_BFC
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_BFS
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_Write
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _waitForDMA
                   _ENCx24_Read
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
               _ETH_WriteBlock
                 _SPI_ExchangeByte
               _IPV4_Send
                 _ETH_Insert
                   _ENCx24_Read
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ENCx24_Write
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ETH_Send
                   _ENCx24_Write
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ETH_Set_TXRTS
                     _SPI_ExchangeByte
                 _ETH_TxComputeChecksum
                   _ENCx24_BFC
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ENCx24_BFS
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ENCx24_Read
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ENCx24_Write
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _waitForDMA
                     _ENCx24_Read
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
               _IPv4_Start
                 _ARPV4_Lookup
                 _ARPV4_Request
                   _ETH_GetMAC
                     _ETH_MACRead8
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                   _ETH_Send
                     _ENCx24_Write
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _ETH_Set_TXRTS
                       _SPI_ExchangeByte
                   _ETH_WriteBlock
                     _SPI_ExchangeByte
                   _ETH_WriteStart
                     _ENCx24_Read
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _ENCx24_Write
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _ETH_Write16
                       _SPI_ExchangeByte
                     _ETH_WriteBlock
                       _SPI_ExchangeByte
                 _ETH_Write16
                   _SPI_ExchangeByte
                 _ETH_Write32
                   _SPI_ExchangeByte
                 _ETH_Write8
                   _SPI_ExchangeByte
                 _ETH_WriteStart
                   _ENCx24_Read
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ENCx24_Write
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ETH_Write16
                     _SPI_ExchangeByte
                   _ETH_WriteBlock
                     _SPI_ExchangeByte
           _TCP_ParseTCPOptions
             _ETH_Dump
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
             _ETH_Read16
               _SPI_ExchangeByte
             _ETH_Read8
               _SPI_ExchangeByte
         _UDP_Receive
           _DHCP_Handler *
             _DHCP_Request
               _DHCP_WriteZeros
                 _ETH_Write8
                   _SPI_ExchangeByte
               _ETH_GetMAC
                 _ETH_MACRead8
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
               _ETH_Write16
                 _SPI_ExchangeByte
               _ETH_Write32
                 _SPI_ExchangeByte
               _ETH_Write8
                 _SPI_ExchangeByte
               _ETH_WriteBlock
                 _SPI_ExchangeByte
               _UDP_Send
                 _ETH_GetByteCount
                   _ENCx24_Read
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                 _ETH_Insert
                   _ENCx24_Read
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ENCx24_Write
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ETH_TxComputeChecksum
                   _ENCx24_BFC
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ENCx24_BFS
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ENCx24_Read
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ENCx24_Write
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _waitForDMA
                     _ENCx24_Read
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                 _IPV4_Send
                   _ETH_Insert
                     _ENCx24_Read
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _ENCx24_Write
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ETH_Send
                     _ENCx24_Write
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _ETH_Set_TXRTS
                       _SPI_ExchangeByte
                   _ETH_TxComputeChecksum
                     _ENCx24_BFC
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _ENCx24_BFS
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _ENCx24_Read
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _ENCx24_Write
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _waitForDMA
                       _ENCx24_Read
                         _ENCx24_BankselSPI
                           _SPI_ExchangeByte
                         _SPI_ExchangeByte
               _UDP_Start
                 _ETH_ResetByteCount
                   _ENCx24_Read
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                 _ETH_Write16
                   _SPI_ExchangeByte
                 _IPv4_Start
                   _ARPV4_Lookup
                   _ARPV4_Request
                     _ETH_GetMAC
                       _ETH_MACRead8
                         _ENCx24_BankselSPI
                           _SPI_ExchangeByte
                         _SPI_ExchangeByte
                     _ETH_Send
                       _ENCx24_Write
                         _ENCx24_BankselSPI
                           _SPI_ExchangeByte
                         _SPI_ExchangeByte
                       _ETH_Set_TXRTS
                         _SPI_ExchangeByte
                     _ETH_WriteBlock
                       _SPI_ExchangeByte
                     _ETH_WriteStart
                       _ENCx24_Read
                         _ENCx24_BankselSPI
                           _SPI_ExchangeByte
                         _SPI_ExchangeByte
                       _ENCx24_Write
                         _ENCx24_BankselSPI
                           _SPI_ExchangeByte
                         _SPI_ExchangeByte
                       _ETH_Write16
                         _SPI_ExchangeByte
                       _ETH_WriteBlock
                         _SPI_ExchangeByte
                   _ETH_Write16
                     _SPI_ExchangeByte
                   _ETH_Write32
                     _SPI_ExchangeByte
                   _ETH_Write8
                     _SPI_ExchangeByte
                   _ETH_WriteStart
                     _ENCx24_Read
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _ENCx24_Write
                       _ENCx24_BankselSPI
                         _SPI_ExchangeByte
                       _SPI_ExchangeByte
                     _ETH_Write16
                       _SPI_ExchangeByte
                     _ETH_WriteBlock
                       _SPI_ExchangeByte
             _ETH_Dump
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
             _ETH_GetMAC
               _ETH_MACRead8
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
             _ETH_Read16
               _SPI_ExchangeByte
             _ETH_Read32
               _SPI_ExchangeByte
             _ETH_Read8
               _SPI_ExchangeByte
             _ETH_ReadBlock
               _SPI_ExchangeByte
             _memcmp
           _ETH_ReadBlock *
             _SPI_ExchangeByte
       _sprintf
         __doprnt
           Absolute function(Fake) *
           ___lwdiv *
           ___lwmod *
             ___lwdiv (ARG)
           ___wmul *
           _isdigit *
           _putch *
     _TCP_Update
       _TCP_FiniteStateMachine
         _TCB_Reset
         _TCP_PayloadSave
           _ETH_ReadBlock
             _SPI_ExchangeByte
           _TCP_Snd
             _ETH_Insert
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ETH_TxComputeChecksum
               _ENCx24_BFC
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_BFS
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _waitForDMA
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
             _ETH_WriteBlock
               _SPI_ExchangeByte
             _IPV4_Send
               _ETH_Insert
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_Write
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ETH_Send
                 _ENCx24_Write
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ETH_Set_TXRTS
                   _SPI_ExchangeByte
               _ETH_TxComputeChecksum
                 _ENCx24_BFC
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_BFS
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_Write
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _waitForDMA
                   _ENCx24_Read
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
             _IPv4_Start
               _ARPV4_Lookup
               _ARPV4_Request
                 _ETH_GetMAC
                   _ETH_MACRead8
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                 _ETH_Send
                   _ENCx24_Write
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ETH_Set_TXRTS
                     _SPI_ExchangeByte
                 _ETH_WriteBlock
                   _SPI_ExchangeByte
                 _ETH_WriteStart
                   _ENCx24_Read
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ENCx24_Write
                     _ENCx24_BankselSPI
                       _SPI_ExchangeByte
                     _SPI_ExchangeByte
                   _ETH_Write16
                     _SPI_ExchangeByte
                   _ETH_WriteBlock
                     _SPI_ExchangeByte
               _ETH_Write16
                 _SPI_ExchangeByte
               _ETH_Write32
                 _SPI_ExchangeByte
               _ETH_Write8
                 _SPI_ExchangeByte
               _ETH_WriteStart
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_Write
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ETH_Write16
                   _SPI_ExchangeByte
                 _ETH_WriteBlock
                   _SPI_ExchangeByte
         _TCP_Snd
           _ETH_Insert
             _ENCx24_Read
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ENCx24_Write
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _SPI_ExchangeByte
           _ETH_TxComputeChecksum
             _ENCx24_BFC
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ENCx24_BFS
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ENCx24_Read
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ENCx24_Write
               _ENCx24_BankselSPI
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _waitForDMA
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
           _ETH_WriteBlock
             _SPI_ExchangeByte
           _IPV4_Send
             _ETH_Insert
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _SPI_ExchangeByte
             _ETH_Send
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ETH_Set_TXRTS
                 _SPI_ExchangeByte
             _ETH_TxComputeChecksum
               _ENCx24_BFC
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_BFS
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _waitForDMA
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
           _IPv4_Start
             _ARPV4_Lookup
             _ARPV4_Request
               _ETH_GetMAC
                 _ETH_MACRead8
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
               _ETH_Send
                 _ENCx24_Write
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ETH_Set_TXRTS
                   _SPI_ExchangeByte
               _ETH_WriteBlock
                 _SPI_ExchangeByte
               _ETH_WriteStart
                 _ENCx24_Read
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ENCx24_Write
                   _ENCx24_BankselSPI
                     _SPI_ExchangeByte
                   _SPI_ExchangeByte
                 _ETH_Write16
                   _SPI_ExchangeByte
                 _ETH_WriteBlock
                   _SPI_ExchangeByte
             _ETH_Write16
               _SPI_ExchangeByte
             _ETH_Write32
               _SPI_ExchangeByte
             _ETH_Write8
               _SPI_ExchangeByte
             _ETH_WriteStart
               _ENCx24_Read
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ENCx24_Write
                 _ENCx24_BankselSPI
                   _SPI_ExchangeByte
                 _SPI_ExchangeByte
               _ETH_Write16
                 _SPI_ExchangeByte
               _ETH_WriteBlock
                 _SPI_ExchangeByte
     _time
   _Network_WaitForLink
     _ETH_CheckLinkUp
       _ETH_readLinkStatus
         _ENCx24_Read
           _ENCx24_BankselSPI
             _SPI_ExchangeByte
           _SPI_ExchangeByte
   _SYSLOG_Init
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         ___wmul *
         _isdigit *
         _putch *
     _time
   _SYSLOG_Write
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         ___wmul *
         _isdigit *
         _putch *
     _time
   _initHW
     _ADC_Initialize
     _LED_Init
     _lcd_init
       _lcd_busy
       _lcd_init_pins
       _lcd_write_ctrl
     _rtcc_init
     _spi_init
     _uart_init
   _lcd_goto1
     _lcd_busy
     _lcd_write_ctrl
   _lcd_puts
     _lcd_putch
       _lcd_busy
       _lcd_write_data
   _memset
   _sprintf
     __doprnt
       Absolute function(Fake) *
       ___lwdiv *
       ___lwmod *
         ___lwdiv (ARG)
       ___wmul *
       _isdigit *
       _putch *
   _time

 _low_isr (ROOT)

 _high_isr (ROOT)
   _rtcc_handler

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E7F      0       0      38        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      30        0.0%
BANK12             100      0       0      28        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      B8      11       71.9%
BITBANK2           100      0       0       8        0.0%
BANK2              100     2D      EC       9       92.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100     83      D4       7       82.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9E      A0       5      100.0%
BITBANK14           80      0       0      33        0.0%
BANK14              80      0       0      34        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BIGRAM_1            60      0       0      37        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5C      5D       1       98.9%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     375      29        0.0%
DATA                 0      0     375       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Wed Sep 09 15:17:32 2015

                         __CFG_BW$16 000000                 __end_of_DHCP_Handler 67CA  
                waitForDMA@econ1_val 000B                                   l33 87AA  
                                 bsr 000FE0                  ___wmul@multiplicand 0004  
                   ??_ICMP_EchoReply 0067           TCP_InsertRxBuffer@data_len 000E  
        ??_IPV4_PseudoHeaderChecksum 0004                       ??_ICMP_Receive 0075  
                       __CFG_CP0$OFF 000000                       ??_ENCx24_Write 0007  
                                l501 0000                                  l503 0016  
                                l351 8AF8                                  l354 8B00  
                                l283 8BE2                                  l436 0012  
                                l454 78F8                                  l439 86FA  
                                l448 78E8                                  l608 8728  
                                l473 832A                                  l617 8408  
                                l626 7FB0                                  l635 7AD4  
                                l547 8068                                  l555 83AE  
                                l491 79AC                                  l556 83A0  
                                l900 6732                                  l566 8516  
                                l902 6746                                  l567 8508  
                                l577 8556                                  l578 8548  
                                l738 8650                                  l739 8642  
                                l588 8596                                  l860 6906  
                                l589 8588                                  l859 6858  
                                l779 537A                                  _GIE 007F97  
                        ?_ETH_GetMAC 0008                 __end_of_DHCP_Request 69A2  
                 ICMP_EchoReply@cksm 006F              IPv4_Start@targetAddress 0060  
                        ?_ETH_Read32 0003                          ?_ETH_Read16 0003  
                       UDP_Start@ret 0058                                  prod 000FF3  
               TCP_Snd@tcpDataLength 009E                                  tosl 000FFD  
                                wreg 000FE8                          ?_ETH_Insert 000B  
                       __CFG_IESO$ON 000000                         __CFG_MODE$MM 000000  
                        ?_ETH_Write8 0001                       _ipv4SubnetMask 0192  
          TCP_FiniteStateMachine@ret 00CF                      ?_Network_Manage 0001  
                       __CFG_WDT$OFF 000000                                 l1035 6D80  
                               l1212 4350                                 l1108 8BC2  
                               l1214 410A                                 l1215 4190  
                               l1241 7034                                 l1242 702E  
                               l1253 70A4                                 l1270 4E96  
                               l1185 82BC                                 l1274 4F0A  
                               l2180 8376                                 l1268 4DDC  
                               l1293 14C2                                 l2190 8618  
                               l1710 4682                                 l1278 4F7E  
                               l1455 88B6                                 l1718 4BDE  
                               l1728 4782                                 l1680 60E4  
                               l1757 49E0                                 l1694 713E  
                               l8030 8004                                 l8026 7FDA  
                               l9002 2BD2                                 l8212 814A  
                               l9004 2C00                                 l8142 0000  
                               l8302 6DCC                                 l9102 3614  
                               l8208 813C                                 l8144 000E  
                               l8306 6DD2                                 l9122 369C  
                               l9050 33C2                                 l9042 31A0  
                               l9018 2FFA                                 l9202 8346  
                               l8252 6B5A                                 l8308 6DE0  
                               l9132 3774                                 l9124 36A8  
                               l9116 368E                                 l9036 316A  
                               l9028 3128                                 l9204 834E  
                               l8262 8210                                 l9150 3804  
                               l9214 836C                                 l9206 8352  
                               l9230 860E                                 l9222 85F0  
                               l8352 7A84                                 l8168 762C  
                               l8440 441A                                 l8416 4040  
                               l9080 356C                                 l9072 34B6  
                               l9064 343C                                 l9224 85F8  
                               l9304 8428                                 l8346 7A72  
                               l9146 37EE                                 l9082 3572  
                               l9066 346E                                 l9170 3980  
                               l9226 85FC                                 l9322 79F4  
                               l9402 4D24                                 l8602 8288  
                               l8356 7AB6                                 l8268 823E  
                               l8620 5D46                                 l9076 3528  
                               l9172 39F4                                 l9500 473C  
                               l9308 8436                                 l8604 828C  
                               l8454 455A                                 l8622 5D82  
                               l9166 3970                                 l9158 38F4  
                               l9510 47BC                                 l8374 8B3E  
                               l9430 4F48                                 l8710 675A  
                               l8702 671C                                 l8296 6D90  
                               l8288 6D08                                 l8456 4614  
                               l8448 4470                                 l9096 35EC  
                               l9600 4A44                                 l9520 4848  
                               l9248 0000                                 l8376 8B44  
                               l8368 8202                                 l9328 7A16  
                               l8464 8300                                 l8800 703C  
                               l9424 4ED4                                 l9098 3606  
                               l9186 8A98                                 l9602 4A50  
                               l9530 48AA                                 l9522 484E  
                               l9506 4788                                 l9514 47E2  
                               l9434 4FB6                                 l9418 4E60  
                               l8714 6760                                 l8722 6782  
                               l8730 67BA                                 l9362 7290  
                               l9346 71DE                                 l9452 7D38  
                               l9460 7D8C                                 l9612 4AB4  
                               l9516 47F2                                 l8396 7848  
                               l8820 7094                                 l8716 6770  
                               l8724 679E                                 l9356 7214  
                               l9446 7D26                                 l9622 4B50  
                               l9614 4ABA                                 l9534 48B0  
                               l8558 6844                                 l9286 73EA  
                               l8822 70A0                                 l8726 67AC  
                               l8718 6776                                 l8832 1156  
                               l9456 7D76                                 l9616 4B02  
                               l9624 4B5E                                 l9632 4BBA  
                               l9608 4A8E                                 l9528 4898  
                               l9536 48E8                                 l9480 46A4  
                               l9472 465A                                 l8816 7076  
                               l8680 6692                                 l9562 4968  
                               l9554 493A                                 l9546 491C  
                               l9490 4708                                 l9466 461E  
                               l9634 4BC0                                 l8762 6CEE  
                               l8818 7084                                 l9394 4CC8  
                               l8682 66A8                                 l7980 8036  
                               l8908 1E82                                 l9628 4B94  
                               l9580 49A8                                 l9548 4936  
                               l9716 86B4                                 l9388 4C7A  
                               l8596 8258                                 l8684 66BE  
                               l8676 666A                                 l7982 803E  
                               l7990 8056                                 l8934 1FFA  
                               l8918 1F14                                 l8854 14D6  
                               l8846 14B0                                 l9590 49E4  
                               l9662 7E36                                 l9398 4D0A  
                               l8694 66F8                                 l9822 560A  
                               l7984 8046                                 l8960 2280  
                               l8856 14E6                                 l9592 49EA  
                               l9568 496C                                 l9496 4732  
                               l9488 4704                                 l9680 8804  
                               l9672 84BE                                 l8784 6FEA  
                               l8776 6FCC                                 l8696 6700  
                               l9816 55EE                                 l7986 804E  
                               l8946 203C                                 l8874 172C  
                               l9586 49BE                                 l9578 499A  
                               l9498 4738                                 l9658 7E0A  
                               l9754 5238                                 l9738 51C4  
                               l8786 6FF0                                 l8778 6FD4  
                               l8980 26B4                                 l8948 2076  
                               l9596 4A1E                                 l9748 522A  
                               l9852 58E0                                 l9844 588C  
                               l9836 5846                                 l9828 57EC  
                               l8974 258E                                 l8958 2254  
                               STR_1 10D7                                 l8976 269E  
                               l8896 1B2E                                 l8888 1A94  
                               l9768 5354                                 l9784 54B8  
                               l9864 595E                                 STR_2 1076  
                               STR_3 10CD                                 l8986 2962  
                               l8978 26A4                                 STR_4 10E6  
                               STR_5 1039                                 l8988 296A  
                               l9868 596A                                 STR_6 10A3  
                               STR_7 10B4                                 l9974 89A2  
                               l9966 8A0A                                 STR_8 10C1  
                               STR_9 10DF                                 l9992 8090  
                               l9898 8978                                 l9978 89B4  
                               l9996 80AE                                 _GIEH 007F97  
                               _GIEL 007F96          __end_of_TCP_GetReceivedData 7D0A  
                               _LATE 000F8D                                 _LATH 000F90  
                               _LATJ 000F91                                 _IPEN 007E87  
                               _RBPU 007F8F                                 _TMR1 000FCE  
                    lcd_write_data@d 0002                        ?_ETH_MACRead8 0001  
                       lcd_goto1@pos 0003                         lcd_goto2@pos 0003  
                      __CFG_FCMEN$ON 000000                         __CFG_STVR$ON 000000  
             __end_of_lcd_write_data 8A46                      __end_of_TCP_Snd 461A  
             __end_of_lcd_write_ctrl 8A66                      _TCP_PayloadSave 5CBC  
                    lcd_write_ctrl@c 0002                                 _main 70A8  
                               _time 806C                                 fsr0h 000FEA  
                               fsr1h 000FE2                                 indf0 000FEF  
                               fsr0l 000FE9                                 fsr2h 000FDA  
                               fsr1l 000FE1                                 indf2 000FDF  
                               fsr2l 000FD9                                 btemp 005E  
                        _SYSLOG_Init 872E                                 prodh 000FF4  
                               prodl 000FF3                                 start 0028  
                      __CFG_FOSC2$ON 000000                         ?_IPV4_Packet 0001  
                 __size_of_ETH_Read8 0030                   __size_of_ETH_Flush 0034  
             __size_of_ETH_ReadBlock 0096                    SPI_ExchangeByte@v 0002  
                       ___param_bank 000010                __size_of_SYSLOG_Write 0026  
                 __size_of_IPV4_Init 000C                   __size_of_IPV4_Send 006E  
            DEMO_TCP_Client@t_client 01D0                          ?_TCB_Insert 0002  
                   ??_ENCx24_PhyRead 000D                         ?_ETH_Write32 0003  
                       ?_ETH_Write16 0003                      _DEMO_TCP_Client 5FD0  
                 TCP_Connect@srvaddr 00D6                   ETH_Flush@newRXTail 0009  
                 ETH_Init@phcon1_val 0016                     ARPV4_Request@ret 002E  
                __size_of_ARPV4_Init 001A             __size_of_ETH_CheckLinkUp 0034  
            ?_TCP_FiniteStateMachine 0001                     __end_of_LED_Init 8A26  
                       _BAUDCON1bits 000F7E                        __CFG_WAIT$OFF 000000  
      ETH_TxComputeChecksum@econ1Val 001B                     _ETH_GetByteCount 8A66  
                     __CFG_CCP2MX$ON 000000                                l10100 78FE  
                              l10120 8846                                l10300 74AC  
                              l10108 8AD8                                l10046 6F30  
                              l10142 7B9E                                l10048 6F40  
                              l10152 7BB6                                l10144 7BA4  
                              l10240 5C4E                                l10224 59A2  
                              l10138 7B96                                l10082 78C4  
                              l10226 59AC                     __end_of_ETH_Copy 79B0  
                              l10164 7BEC                                l10148 7BAE  
                              l10244 5C92                                l10158 7BD0  
                              l10078 78B6                                l10086 78E0  
                              l10184 76AC                                l10192 76E0  
                              l10506 6080                                l10186 76B4  
                              l10516 60C0                                l10188 76BC  
                              l10620 71AE                                l10382 7D00  
                              l10518 60CE                                l10462 8BC4  
                              l10392 8880                                l10536 6122  
                              l10544 6152                                l10480 7B5E  
                              l10388 8870                                l10396 88C4  
                              l10556 619E                                l10572 6282  
                   __end_of_ETH_Dump 8336                                l10732 76FC  
                              l10476 7B2E                                l10398 88C8  
                              l10558 61B8                                l10734 7706  
                              l10496 5FEE                                l10736 770A  
                              l10498 5FFA                     __end_of_ETH_Init 6F98  
                              l10598 70FC                    _nextPacketPointer 019E  
                   __end_of_ETH_Send 8A06                   __size_of_TCB_Check 0086  
                              ?_main 0001                                _ADRES 000FC3  
                              STR_10 1092                                ?_time 0002  
             __size_of_ETH_Set_TXRTS 000C  IPV4_PseudoHeaderChecksum@payloadLen 0002  
                              _CREN1 007D5C                                u11100 7AB2  
                              u11030 6D16                                u11040 6D26  
                              u11200 3C2C                                u11210 3C96  
                              u11107 7AA6                                u11300 3FE4  
                              u11220 3D00                                u12020 657A  
                              u12101 67AA                                u11310 4030  
                              u11230 3D1A                                u11150 3A92  
                              u11207 3C14                                u12031 6592  
                              u11400 4190                                u11240 3DB6  
                              u11160 3ACA                                u13000 241C  
                              u11217 3C7E                                u12041 65CC  
                              u11410 41CE                                u11330 407C  
                              u11250 3E1C                                u11170 3B1C  
                              u11307 3FD4                                u11235 3D10  
                              u11227 3CE8                                u13011 245E  
                              u11500 43E0                                u11420 420C  
                              u11260 3E86                                u11180 3B60  
                              u13100 269E                                u13020 24B2  
                              u12300 1334                                u11317 4026  
                              u11157 3A82                                u12061 665E  
                              u11430 4252                                u11350 40C2  
                              u11270 3EF0                                u11190 3BC6  
                              u13110 26E4                                u13030 251C  
                              u12310 1396                                u12230 111C  
                              u11407 4180                                u11247 3D9E  
                              u11167 3ABA                                u13007 2404  
                              u11600 4614                                u11440 4290  
                              u11280 3F0A                                u14000 396A  
                              u13200 28F6                                u13040 2552  
                              u12400 164E                                u12320 13D4  
                              u12240 114E                                u11417 41BE  
                              u11337 406C                                u11257 3E04  
                              u11177 3B0C                                u13121 26F8  
                              u11450 42D6                                u11370 410A  
                              u11290 3FA0                                u14010 39AE  
                              u13210 292C                                u13130 274C  
                              u13050 258A                                u12410 1688  
                              u12330 1408                                u12250 11A6  
                              u12170 6FFA                                u11507 43C8  
                              u11427 41FC                                u11267 3E6E  
                              u11187 3B50                                u13107 2692  
                              u13027 249A                                u12307 131C  
                              u11540 44A2                                u11460 4314  
                              u11380 4148                                u14020 3A28  
                              u13300 2AE0                                u13220 2962  
                              u13060 25C2                                u12500 18E4  
                              u12420 16C2                                u12340 1442  
                              u12260 11E4                                u11437 4242  
                              u11357 40B2                                u11285 3F00  
                              u11277 3ED8                                u11197 3BAE  
                              u13141 2774                                u13117 26D4  
                              u13037 2504                                u12317 1386  
                              u12237 1112                                u10830 7FFC  
                              u11550 44DA                                u14030 3A5C  
                              u13310 2B22                                u13230 2998  
                              u13150 27B8                                u13070 25F6  
                              u12510 1936                                u12430 16F6  
                              u12350 147C                                u12270 1226  
                              u11607 45FC                                u11447 4280  
                              u14007 395E                                u13207 28E6  
                              u13047 2546                                u12407 163E  
                              u12327 13C4                                u12247 1144  
                              u11800 6474                                u10920 0016  
                              u11560 4518                                u11480 4350  
                              u13320 2B64                                u13160 27EE  
                              u13080 2630                                u12600 1B62  
                              u12520 19AE                                u12440 172A  
                              u12360 14B0                                u12280 1278  
                              u10921 0014                                u11457 42C6  
                              u11377 40FA                                u11297 3F90  
                              u14017 39A4                                u13217 2920  
                              u13137 2734                                u13057 257E  
                              u12417 167A                                u12337 13FC  
                              u12257 118E                                u11810 64A8  
                              u11730 62D8                                u11490 4380  
                              u13410 2DBE                                u13330 2B9A  
                              u13250 29D2                                u13170 2830  
                              u13090 266A                                u12610 1BB4  
                              u12530 1A10                                u12450 1760  
                              u12370 1536                                u12290 12CA  
                              u11650 83D6                                u14210 4CAA  
                              u11547 4498                                u11467 4304  
                              u11387 4138                                u14027 3A1C  
                              u13307 2AD0                                u13227 2956  
                              u13067 25B6                                u12507 18D8  
                              u12427 16B4                                u12347 1434  
                              u12267 11D4                                u11820 64D6  
                              u11740 630C                                u11580 4558  
                              u11900 5D82                                u13500 2FC6  
                              u13340 2BD0                                u13180 2872  
                              u12700 1E7E                                u12540 1A4E  
                              u12460 17B2                                u12380 15AE  
                              u11660 7F66                                u10837 7FF2  
                              u11557 44CE                                u14037 3A50  
                              u13317 2B12                                u13237 298E  
                              u13157 27A8                                u13077 25EA  
                              u12621 1BF6                                u12517 191E  
                              u12437 16EA                                u12357 146E  
                              u12277 1216                                u11830 6504  
                              u11750 634C                                u10950 6A22  
                              u11590 45AA                                u11910 5DC0  
                              u13430 2E38                                u13350 2C50  
                              u13270 2A26                                u13190 28B4  
                              u12710 1ED2                                u12630 1C48  
                              u12390 1610                                u14230 4D06  
                              u11807 6468                                u11567 4508  
                              u11487 4344                                u13327 2B54  
                              u13167 27E2                                u13087 2622  
                              u12607 1B56                                u12527 1996  
                              u12471 17F4                                u12447 171E  
                              u12367 14A4                                u12287 1260  
                              u15111 53A4                                u15031 521C  
                              _LATB3 007C53                                u11840 652C  
                              u11760 638C                                u10960 6AC8  
                              u11920 5E0A                                u13600 31F0  
                              u13520 2FFA                                u13440 2E88  
                              u13280 2A5C                                u12720 1F06  
                              u12640 1CB2                                u12560 1A90  
                              u12480 1846                                u15120 543C  
                              u15200 5776                                u11817 649C  
                              u11737 62C8                                u11497 4376  
                              u13417 2DA6                                u13361 2C78  
                              u13337 2B8E                                u13257 29C6  
                              u13177 2820                                u13097 265C  
                              u12617 1B9C                                u12537 1A00  
                              u12457 1754                                u12377 151E  
                              u12297 12B2                                u14217 4C9A  
                              u11850 655E                                u11770 63CC  
                              u11930 5E50                                u13610 3242  
                              u13530 3068                                u13450 2ECE  
                              u13370 2CCC                                u13290 2A9E  
                              u12810 1FF6                                u12650 1CE6  
                              u12570 1AE4                                u12490 18B0  
                              u15210 57DA                                u11827 64CC  
                              u11747 6300                                u10955 6A18  
                              u11587 454A                                u11907 5D72  
                              u13507 2FBC                                u13347 2BC4  
                              u13187 2862                                u12707 1E7C  
                              u12547 1A3E                                u12467 179A  
                              u12387 1596                                u11780 640C  
                              u11940 5E8E                                u11860 5CEC  
                              u13700 342C                                u13620 32AC  
                              u13540 30BA                                u13460 2F0C  
                              u12820 202E                                u12740 1F42  
                              u12660 1D38                                u12580 1B18  
                              u15060 52D4                                u14420 4F46  
                              u14340 4E5E                                u11837 64FA  
                              u11757 633C                                u10965 6ABE  
                              u11597 4592                                u11917 5DB0  
                              u13437 2E28                                u13381 2CF4  
                              u13357 2C38                                u13277 2A16  
                              u13197 28A4                                u12717 1EBA  
                              u12637 1C30                                u12397 1600  
                              u15125 5432                                u14237 4CF6  
                              u15221 57EA                                u15205 576C  
                              u11790 6440                                u11950 5ED4  
                              u13630 32E0                                u13470 2F52  
                              u13390 2D48                                u12910 220E  
                              u12670 1DB0                                u14510 7D74  
                              u15310 808E                                u14430 4F7C  
                              u14350 4E94                                u14270 4D6A  
                              u11847 6520                                u11767 637C  
                              u11927 5DFA                                u13607 31D8  
                              u13527 2FF0                                u13447 2E78  
                              u13287 2A50                                u12727 1EFA  
                              u12647 1C9A                                u12567 1A8C  
                              u12487 182E                                u15151 54E4  
                              u15071 5338                                u11960 5F26  
                              u11880 5D30                                u13800 35DC  
                              u13720 34A0                                u13640 331A  
                              u13560 3118                                u13480 2F90  
                              u12840 20A6                                u12680 1E12  
                              u14600 476A                                u15160 5562  
                              u14280 4D7E                                _LATH0 007C80  
                              u11857 6552                                u11777 63BC  
                              u11937 5E40                                u13617 322A  
                              u13537 3050                                u13457 2EBE  
                              u13377 2CB4                                u13297 2A8E  
                              u12817 1FF4                                u12657 1CDA  
                              u12577 1ACC                                u12497 1898  
                              u15065 52CA                                _LATH1 007C81  
                              u11970 5F90                                u13650 3354  
                              u13570 315A                                u12930 227C  
                              u12770 1F88                                u12690 1E50  
                              u16114 6146                                u14450 4FB6  
                              u14290 4DCE                                _LATH2 007C82  
                              u11787 63FC                                u11947 5E7E  
                              u11867 5CE2                                u13707 3420  
                              u13627 3294                                u13547 30A2  
                              u13467 2EFC                                u12851 20BA  
                              u12827 2022                                u12747 1F38  
                              u12667 1D20                                u12587 1B0C  
                              u16115 6142                                u14427 4F3A  
                              u14347 4E52                                u11980 5FC4  
                              u13740 34EE                                u13660 3388  
                              u12940 22D0                                u12860 20F2  
                              u14460 504A                                u14380 4ED2  
                              u16140 713E                                u11797 6434  
                              u11957 5EC4                                u13901 3772  
                              u13637 32D4                                u13477 2F42  
                              u13397 2D30                                u12917 21F6  
                              u12677 1D98                                u14517 7D64  
                              u15165 5558                                u14437 4F70  
                              u14357 4E88                                u14277 4D5A  
                              u13910 37A2                                u13830 3642  
                              u13750 3522                                u13670 33BC  
                              u13590 319C                                u12870 2144  
                              u12790 1FC0                                u14470 5136  
                              u14390 4F08                                u15190 569A  
                              u11967 5F0E                                u11887 5D20  
                              u13807 35D0                                u13727 3494  
                              u13647 330C                                u13567 3100  
                              u13487 2F80                                u12951 22F8  
                              u12847 2096                                u12687 1E02  
                              u14607 4760                                u16207 777A  
                              u13760 355A                                u13680 33F0  
                              u12960 2338                                u11977 5F78  
                              u13657 3346                                u13577 314E  
                              u12937 227A                                u12881 216C  
                              u12777 1F7E                                u12697 1E40  
                              u14465 5040                                u14457 4FAA  
                              u14297 4DB6                                u16217 77B4  
                              u13930 37DE                                u13850 367E  
                              u12890 21AA                                u16074 6116  
                              u15610 5A32                                u11987 5FB8  
                              u13747 34E0                                u13667 337C  
                              u12971 234C                                u12947 22B8  
                              u12867 20E6                                u16307 8A5C  
                              u16075 6112          __size_of_ETH_readLinkStatus 0000  
                              u16227 6E8A                                u14475 512C  
                              u14387 4EC6                                u15195 5690  
                              u13780 35A0                                u12980 23A0  
                              u15700 5BA6                                u15620 5A78  
                              u13917 3798                                u13837 3638  
                              u13757 3516                                u13677 33B0  
                              u13597 3190                                u12877 212C  
                              u12797 1FB6                                u16317 8C26  
                              u16237 6EA0                                u14397 4EFC  
                              u16157 771E                                u13950 383C  
                              u13870 36F8                                u15710 5BD6  
                              u15630 5AB6                                u16327 87A2  
                              u13767 354E                                u13687 33E6  
                              u12991 23C8                                u12967 2328  
                              u16247 6F36                                u16167 772E  
                              u13960 3876                                u14680 4846  
                              u14648 47A8                                u14568 4644  
                              u15720 5C0E                                u13937 37D2  
                              u13881 3720                                u13857 3672  
                              u12897 219A                                u16257 7E58  
                              u15617 5A22                                u16177 773E  
                              u13970 38AA                                u13890 375E  
                              u14690 4886                                u15730 5C42  
                              u15650 5AEE                                u13787 3596  
                              u12987 2388                                u16267 7E72  
                              u15707 5B96                                u15627 5A68  
                              u16187 774E                                u13980 38DE  
                              u14828 4A0A                                u15740 5C8C  
                              u13957 382E                                u13877 36E0  
                              u16277 8A32                                u15717 5BCC  
                              u15637 5AA6                                u16197 7764  
                              u13990 3934                                u14678 4812  
                              u15670 5B24                                u15590 59E8  
                              u13967 3868                                u16287 8A3C  
                              u14687 483C                                u15727 5C02  
             __size_of_ETH_SetPktDec 000C                                u13977 389E  
                              u13897 374E                                u16297 8A4E  
                              u14697 487C                                u15737 5C36  
                              u15657 5AE4                                u15690 5B68  
                 __size_of_TCB_Reset 02C8                                u13987 38D2  
                              u15747 5C7C                                u14868 4A7A  
                              u13997 3924                                u15677 5B1A  
                              u15597 59D8                                u14888 4B7E  
                              u15697 5B58                      __end_of___lwdiv 8380  
                              u15990 60BA                      __end_of___lwmod 8622  
                __size_of_ENCx24_BFC 0040                  __size_of_ENCx24_BFS 0040  
                              _SPEN1 007D5F                                _TX1IF 007CF4  
                              _PORTB 000F81                                _PORTJ 000F88  
                    __end_of__doprnt 4BE4                                _TRISA 000F92  
                              _TRISE 000F96                                _TRISH 000F99  
                              _TRISJ 000F9A                       __CFG_ECCPMX$ON 000000  
     __size_of_ETH_TxComputeChecksum 00AE        __end_of_ETH_TxComputeChecksum 7668  
                  ??_ENCx24_PHYWrite 000D                 __size_of_DHCP_Manage 008E  
                   __end_of_TCP_Init 8AD6                     __end_of_TCP_Recv 5194  
                   __end_of_TCP_Send 75BA                          ?_IPv4_Start 004B  
                    __end_of_dpowers 100B                     __end_of_UDP_Send 7866  
                  ETH_GetMAC@macAddr 0008                          ?_TCP_Update 0001  
                    __end_of_isdigit 8AA0                                _putch 8AF0  
                  _ETH_ResetReceiver 8168                       ??_ETH_MACRead8 0005  
                 __size_of_UDP_Start 004E                      __end_of_low_isr 0028  
          __size_of_ETH_EventHandler 00A6            _IPV4_PseudoHeaderChecksum 79B0  
                              pclath 000FFA      TCP_FiniteStateMachine@nextState 00D3  
                              tablat 000FF5               TCP_InsertRxBuffer@data 000C  
                              time@t 0002                                plusw1 000FE3  
                              plusw2 000FDB                         _SYSLOG_Write 890A  
                    ?_lcd_write_data 0001                   ?_ETH_ResetReceiver 0001  
                    ??_lcd_init_pins 0002                      ?_lcd_write_ctrl 0001  
                              status 000FD8                   _TCP_InsertRxBuffer 7BFE  
                    __end_of_sprintf 883C                        ?_IPV4_GetMyIP 0002  
                      ?_ETH_SaveRDPT 0001           ETH_RxComputeChecksum@rxPtr 0017  
                      ?_ETH_SetRXptr 0003                  __size_of_ETH_GetMAC 007A  
                     __CFG_ETHLED$ON 000000        ETH_TxComputeChecksum@position 000D  
                __size_of_ETH_Read16 0048                  __size_of_ETH_Read32 0064  
               __end_of_ARPV4_Packet 55C8                      __initialization 845A  
                ??_ETH_ResetReceiver 0009                  __size_of_ETH_Insert 0054  
                    TCP_Send@dataLen 00B8                 __end_of_ARPV4_Lookup 8254  
                ?_TCP_InsertRxBuffer 000A                         __end_of_main 71B4  
               __end_of_ARPV4_Update 8866                         __end_of_time 80C0  
     __end_of_TCP_FiniteStateMachine 3A62                  __size_of_ETH_Write8 001A  
                        ETH_Copy@len 000D                      _DHCP_WriteZeros 8B3C  
                             ??_main 005D                               ??_time 0006  
                      __activetblptr 000003             DEMO_TCP_Client@port60TCB 0236  
                    TCP_SendDone@ret 000C                  _TCP_ParseTCPOptions 6F98  
                      _ETH_ReadBlock 7A48                      TCP_Snd@txHeader 00A0  
               ??_TCP_InsertRxBuffer 0010                    __end_of_ETH_Read8 872E  
                  __end_of_ETH_Flush 86CA            __end_of_ETH_ResetReceiver 81B8  
            __end_of_TCP_PayloadSave 5FD0                    __end_of_IPV4_Init 8C0E  
           __end_of_SPI_ExchangeByte 8BEA                    __end_of_IPV4_Send 7F5A  
                          ??_TCP_Snd 0067                               _ADCON0 000FC2  
                             _ADCON1 000FC1                               _ADCON2 000FC0  
                             _ADRESH 000FC4                               _ADRESL 000FC3  
                     ETH_Dump@length 000B                               ?_putch 0001  
                __size_of_TCB_Insert 004C                               _T1SYNC 007E6A  
                             _OSCCON 000FD3                       ??_IPV4_GetMyIP 0006  
                             _SPBRG1 000FAF                               _TMR1IE 007CE8  
                             _TMR1IF 007CF0                               _TMR1CS 007E69  
                     ??_ETH_SaveRDPT 000B                               _TMR1IP 007CF8  
                             _TMR1ON 007E68                        _ETH_Set_TXRTS 8C0E  
               __size_of_ENCx24_Read 004A                    __end_of_TCB_Check 7D90  
                             _SSPBUF 000FC9                 __end_of_ICMP_Receive 845A  
                     ??_ETH_SetRXptr 0005                        _ETH_SetPktDec 8BF6  
                             _TXREG1 000FAD                               _TXSTA1 000FAC  
                   __end_of_dhcpName 1028              __end_of_DEMO_TCP_Client 6298  
               ?_TCP_ParseTCPOptions 0001                    __end_of_TCB_Reset 6560  
               __end_of_ENCx24_Write 8526                __size_of_DHCP_Handler 026A  
                  main@no_ip_display 02BF                         ?_TCP_Connect 00D4  
                     __CFG_XINST$OFF 000000                      __CFG_EASHFT$OFF 000000  
                _ETH_SendSystemReset 7E0A                     __end_of_lcd_busy 8C2E  
                   __end_of_lcd_init 77BE                       ETH_ReadBlock@p 0008  
                   __end_of_high_isr 8C36                ICMP_EchoReply@icmpHdr 0074  
                   __end_of_lcd_puts 89C2                   _ETH_ResetByteCount 8BA2  
               TCP_Snd@payloadLength 009B                ICMP_EchoReply@ipv4Hdr 0058  
                             ___wmul 8930                  __size_of_IPv4_Start 018E  
                             _ethMAC 02A7                               _arpMap 0300  
                          ??___lwdiv 0006                            ??___lwmod 000D  
              __size_of_DHCP_Request 01D8                  __size_of_TCP_Update 033E  
                             _initHW 85A6                               _memcmp 8254  
                          ??__doprnt 0010                               _memset 8866  
                ETH_SetRXptr@address 0003                    __end_of_UDP_Start 8206  
                             clear_0 8460                               clear_1 846C  
                             clear_2 8478                               _tcpMss 01A4  
                       __doprnt@flag 001A                 __end_of_broadcastMAC 102E  
                             _printf 897C               ETH_EventHandler@eirVal 0011  
                ?_ETH_ResetByteCount 0001                         __doprnt@prec 0015  
                             main@ip 02E0                               _strlen 88BA  
                    UDP_Start@destIP 0067                 ETH_GetByteCount@wPtr 000D  
                       __pdataCOMRAM 005D                            ??_isdigit 0002  
                     ?_ETH_ReadBlock 0003                         ?_UDP_Receive 0097  
                       __mediumconst 0000                    ??_ETH_CheckLinkUp 000F  
               ?_ETH_SendSystemReset 0001                            ??_low_isr 0001  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8                     __end_of_spi_init 8BF6  
           ADC_GetConversion@channel 0005         __size_of_Network_WaitForLink 000E  
                 ETH_CheckLinkUp@ret 0013                            ??_sprintf 002C  
                       ??_ARPV4_Init 0002                DHCP_WriteZeros@length 0004  
                       _DHCP_Handler 6560                        DHCP_Handler@v 007F  
                     ETH_Insert@data 0011                      __CFG_FOSC$HSPLL 000000  
                     ?_ETH_Set_TXRTS 0001                           __accesstop 0060  
            __end_of__initialization 8496                       ?_ETH_SetPktDec 0001  
               ??_ETH_ResetByteCount 000B                         ??_ENCx24_BFC 0007  
                       ??_ENCx24_BFS 0007                   TCP_SendDone@tcbPtr 000A  
                          ?_LED_Init 0001                ??_TCP_ParseTCPOptions 000F  
                ENCx24_PHYWrite@data 000B                 DEMO_TCP_Client@ledNr 00E3  
                          ?_ETH_Copy 000D                            ?_ETH_Dump 000B  
                          ?_ETH_Init 0001                            ?_ETH_Send 0001  
                      ___rparam_used 000001                         _DHCP_Request 67CA  
                      ?_Network_Init 0001                        ?_Network_Read 0001  
             IPV4_Send@payloadLength 001D                IPv4_Start@destAddress 004B  
            __end_of_DHCP_WriteZeros 8B54                       __pcstackCOMRAM 0001  
              _ETH_RxComputeChecksum 736A              __size_of_ETH_WriteBlock 0058  
               __size_of_IPV4_Packet 03B6                __end_of_ARPV4_Request 6B5E  
                          LED_Init@x 0002                            ?_TCP_Init 0001  
                          ?_TCP_Recv 00D4                            ?_TCP_Send 00B4  
            __size_of_ETH_WriteStart 0054                            ?_UDP_Send 0001  
                      __end_of_putch 8B0A                 __end_of_ETH_MACRead8 865E  
               __size_of_ETH_Write16 0022                 __size_of_ETH_Write32 002E  
                 __end_of_ARPV4_Init 8AF0    TCP_ParseTCPOptions@tcpOptionsSize 0013  
                       _TXPacketSize 019A         __end_of_ETH_NextPacketUpdate 7EEC  
                       ??_ETH_GetMAC 000A                         _dhcpServerId 0226  
                       ETH_Read8@ret 0003                         ??_ETH_Read32 0007  
                       ??_ETH_Read16 0005                     ??_Network_Manage 017E  
                 __end_of_ENCx24_BFC 85A6                   __end_of_ENCx24_BFS 8566  
              ??_ETH_SendSystemReset 000B                         ??_ETH_Insert 000F  
                 __size_of_lcd_goto1 000E                   __size_of_lcd_goto2 000E  
         __size_of_ETH_ResetReceiver 0050                        TCB_Insert@ptr 0002  
                       ??_ETH_Write8 0003             DHCP_Handler@optionLength 0092  
                   ?_TCP_PayloadSave 005A                           __doprnt@ap 000F  
                         __doprnt@cp 0018                           __doprnt@pb 0020  
                 __size_of_lcd_putch 001C                              ??_putch 0002  
                         __pbssBANK0 00FE                           __pbssBANK1 0183  
                         __pbssBANK2 0200                           __pbssBANK3 0300  
                   _ETH_EventHandler 7866             __end_of_ETH_GetByteCount 8A84  
              __size_of_ARPV4_Packet 0434                           ??_LED_Init 0002  
              __size_of_ARPV4_Lookup 004E                         ?_SYSLOG_Init 0001  
                         ??_ETH_Copy 000F                           ??_ETH_Dump 000D  
                         ??_ETH_Init 0014                       ??_Network_Init 0018  
                     ??_Network_Read 011C                           ??_ETH_Send 0009  
              __size_of_ARPV4_Update 002A                     ?_DEMO_TCP_Client 0001  
                 ENCx24_BankselSPI@a 0003                           _macAddress 102E  
                    TCB_Reset@tcbPtr 0002                   __end_of_ETH_GetMAC 7E0A  
                      ETH_MACRead8@a 0007                        ETH_MACRead8@v 0005  
                 __end_of_ETH_Read16 8412                   __end_of_ETH_Read32 7FBE  
                       ??_TCB_Insert 0004                   __end_of_ETH_Insert 8168  
                       IPV4_Send@ret 0023                              ?___wmul 0002  
                         ??_TCP_Init 0002                           ??_TCP_Recv 00DA  
                         ??_TCP_Send 005A                      _ENCx24_PHYWrite 87E4  
                 __end_of_ETH_Write8 8B24                              ?_initHW 0001  
                         ??_UDP_Send 0028                              ?_memcmp 0002  
                         _deviceTime 02E4                              ?_memset 0002  
          ETH_EventHandler@macon2Val 000D             TCP_SocketPoll@socket_ptr 000A  
                            ?_printf 0021              __size_of_ADC_Initialize 0016  
                            _T1CKPS0 007E6C                              _T1CKPS1 007E6D  
                            ?_strlen 0002                 __end_of_IPV4_GetMyIP 8B92  
                    ??_ETH_ReadBlock 0007                 __end_of_ETH_SaveRDPT 8BA2  
                            _T1OSCEN 007E6B                 __end_of_ETH_SetRXptr 8B3C  
                 __size_of_uart_init 0016               TCP_GetReceivedData@ret 0010  
                 __size_of_rtcc_init 0038                         SYSLOG_Init@t 002C  
                     TCB_Check@count 0007              __size_of_TCP_SocketInit 00C8  
            __size_of_TCP_SocketPoll 0026                           _ipv4Header 01A8  
                       _ARPV4_Packet 5194                              _OSCTUNE 000F9B  
                       ??_IPv4_Start 0050                     ??_lcd_write_data 0002  
                            _SSP1BUF 000FC9                     ??_lcd_write_ctrl 0002  
                       _ARPV4_Lookup 8206                              _TCP_Snd 3A62  
                       ??_TCP_Update 00D4                __size_of_ICMP_Receive 0048  
                       _ARPV4_Update 883C                            ?_lcd_busy 0001  
                          ?_lcd_init 0001                            ?_high_isr 0001  
                    ??_ETH_Set_TXRTS 0003                            ?_lcd_puts 0004  
                    ??_ETH_SetPktDec 0003                __size_of_ENCx24_Write 0042  
             ARPV4_Lookup@ip_address 0002                           _ipv4Router 022A  
                         _led_values 0200                   __end_of_TCB_Insert 82EC  
                    TCP_Update@count 00DC                   UDP_Receive@udpcksm 0097  
                  ETH_Dump@newRXTail 000D                  SYSLOG_Write@message 002C  
               TCP_SocketInit@tcbPtr 000A                              __Hparam 0000  
       __size_of_TCP_GetReceivedData 0086                              __Lparam 0000  
             ?_ETH_RxComputeChecksum 000D                     ?_DHCP_WriteZeros 0004  
                  __end_of_lcd_goto1 8BC0                    __end_of_lcd_goto2 8BDC  
                          ?_spi_init 0001                    __end_of_lcd_putch 8ABC  
               __size_of_TCP_Connect 00C6                          time@gie_val 0006  
                    __size_of___wmul 0026                              ___lwdiv 8336  
                            ___lwmod 85E4                           _currentTCB 00FE  
                       __psmallconst 1000                        ?_TCP_SendDone 000A  
                 __end_of_IPv4_Start 6E80                              __doprnt 461A  
         __end_of_ETH_readLinkStatus 0000                      __size_of_initHW 003E  
                 __end_of_TCP_Update 5CBC                              __pcinit 845A  
                    __size_of_memcmp 004C                      __size_of_memset 002A  
                            __ramtop 1000                              __ptext0 70A8  
                            __ptext1 8BB2                              __ptext2 85A6  
                            __ptext3 8B54                              __ptext4 8BEA  
                            __ptext5 865E                              __ptext6 7714  
                            __ptext7 8C1A                              __ptext8 8A06  
                            __ptext9 8B6A                              _ethData 0183  
                            _ipv4DNS 0210                      __size_of_printf 0024  
  TCP_FiniteStateMachine@notAckBytes 00D0                        ??_DHCP_Manage 0059  
                  _ENCx24_BankselSPI 8016                         _ICMP_Receive 8412  
                    __size_of_strlen 0028                    __end_of_hexpowers 1013  
                            _dpowers 1001                              _tcbList 01A2  
                       _ENCx24_Write 84E4                              _isdigit 8A84  
                 ?_ENCx24_BankselSPI 0001                              _low_isr 0018  
               __size_of_UDP_Receive 00EE                _ETH_TxComputeChecksum 75BA  
            __size_of_ICMP_EchoReply 0194                              _sprintf 8810  
                      __doprnt@width 001D                    ?_SPI_ExchangeByte 0001  
                         ??_lcd_busy 0002                           ??_lcd_init 0003  
                            main@str 02C0                           ??_high_isr 0002  
                     __pintcode_body 8C2E                           ??_lcd_puts 0006  
               end_of_initialization 8496                  ??_ENCx24_BankselSPI 0003  
                        TCP_Snd@data 0097                          TCP_Snd@cksm 0099  
                          _ETH_Read8 86FE                            _ETH_Flush 8696  
                            memcmp@n 0003                   ??_SPI_ExchangeByte 0002  
                          _IPV4_Init 8C02                            _IPV4_Send 7EEC  
                 IPv4_Start@protocol 004F                              memset@c 0004  
                            memset@n 0006                              memset@p 0008  
                            int_func 8C2E                         _broadcastMAC 1028  
                   UDP_Start@dstPort 006D                 _ETH_NextPacketUpdate 7E7C  
              __end_of_lcd_init_pins 8C24                  ETH_ReadBlock@length 0005  
            __end_of_ENCx24_PHYWrite 8810                    __end_of_uart_init 8B6A  
                         _waitForDMA 0000                       ETH_Write8@data 0003  
                      ?_rtcc_handler 0001                    __end_of_rtcc_init 8696  
                   DHCP_Request@type 0070             TCP_InsertRxBuffer@tcbPtr 000A  
                          _TCB_Check 7D0A                     UDP_Start@srcPort 006B  
              __size_of_ETH_MACRead8 003C                              printf@f 0025  
                     _ETH_WriteBlock 7FBE            TCP_GetReceivedData@tcbPtr 000A  
                _Network_WaitForLink 8BC0                            _TCB_Reset 6298  
                            postdec1 000FE5                              postdec2 000FDD  
                         ??_spi_init 0002                              postinc0 000FEE  
                            postinc1 000FE6                              postinc2 000FDE  
                     ??_TCP_SendDone 000C                      _ETH_CheckLinkUp 86CA  
                     _ETH_WriteStart 80C0                   TCP_PayloadSave@len 005A  
              ARPV4_Packet@mergeFlag 0031                   _nextSequenceNumber 022E  
          __end_of_ENCx24_BankselSPI 806C                              strlen@s 0002  
           ETH_RxComputeChecksum@len 000D                            _PORTBbits 000F81  
                     DHCP_Handler@ip 0077                            _UDP_Start 81B8  
               __end_of_Network_Init 87E4                 __end_of_Network_Read 7714  
            __size_of_ENCx24_PhyRead 0044                            _TRISAbits 000F92  
                          _TRISBbits 000F93                            _TRISCbits 000F94  
                          _TRISDbits 000F95                        _rcvPayloadLen 01A0  
               ?_Network_WaitForLink 0001          __size_of_TCP_InsertRxBuffer 0086  
                  IPV4_Packet@hdrLen 00F9                  __end_of_DHCP_Manage 7BFE  
                      ??_ENCx24_Read 0007                    IPV4_Packet@length 00FA  
                  ICMP_EchoReply@ret 0073                           ?_ETH_Read8 0001  
                         ?_ETH_Flush 0001                           ?_IPV4_Init 0001  
                       _ETH_MACRead8 8622                           ?_IPV4_Send 001D  
              ?_ETH_NextPacketUpdate 0001                DEMO_TCP_Client@rx_len 00E1  
              DEMO_TCP_Client@strTmp 00E4                           main@old_ip 02B7  
                     ??_rtcc_handler 0002                           lcd_putch@c 0003  
             __end_of_ETH_WriteBlock 8016                    __size_of_LED_Init 0020  
                  TCP_Connect@tcbPtr 00D4                        _dhcpLeaseTime 018A  
                   ENCx24_PHYWrite@a 000D                 __size_of_SYSLOG_Init 002E  
                         ?_TCB_Check 0002                    __size_of_ETH_Copy 00A4  
                  __size_of_ETH_Dump 004A                    __size_of_ETH_Init 0118  
             __end_of_ETH_WriteStart 8114                    __size_of_ETH_Send 0022  
                         ?_TCB_Reset 0002                __size_of_IPV4_GetMyIP 0012  
              __size_of_ETH_SaveRDPT 0010                __size_of_ETH_SetRXptr 0018  
                     __end_of___wmul 8956             __end_of_ETH_EventHandler 790C  
           ARPV4_Request@destAddress 000F                       TCP_Recv@length 00D8  
                      __pidataCOMRAM 8C36                    _UDP_CallBackTable 1034  
                     TCP_Recv@tcbPtr 00F7                       _ADC_Initialize 8B6A  
                  __size_of_TCP_Init 001A                    __size_of_TCP_Recv 05B0  
                  __size_of_TCP_Send 00C4                       __end_of_initHW 85E4  
                     __end_of_memcmp 82A0                       __end_of_memset 8890  
                  __size_of_UDP_Send 00A8                       __end_of_printf 89A0  
          ETH_RxComputeChecksum@cksm 0015                           ?_UDP_Start 0067  
                ICMP_Receive@icmpHdr 007A            ETH_RxComputeChecksum@seed 000F  
                     __end_of_strlen 88E2                       _TCP_SocketInit 72A2  
                     _TCP_SocketPoll 8956                  ICMP_Receive@ipv4Hdr 005A  
                start_initialization 845A                ??_Network_WaitForLink 0014  
             ?_ETH_TxComputeChecksum 000D                        ETH_Read32@ret 0007  
                      ETH_Read16@ret 0005          __end_of_TCP_ParseTCPOptions 70A8  
                     TCP_Send@tcbPtr 00B4         TCP_SocketPoll@tmpSocketState 000C  
        ETH_TxComputeChecksum@length 000F          __size_of_ETH_ResetByteCount 0010  
                  ?_ETH_GetByteCount 000B                         _IPV4_GetMyIP 8B80  
                       _ETH_SaveRDPT 8B92                         TCB_Check@ret 0006  
                       TCB_Check@ptr 0002             ??_TCP_FiniteStateMachine 00C3  
            __end_of_ETH_CheckLinkUp 86FE                  __end_of_ENCx24_Read 83CA  
                       _ETH_SetRXptr 8B24                          ?_waitForDMA 0001  
                   ?_ENCx24_PHYWrite 000B                   ??_ETH_GetByteCount 000D  
                      ??_IPV4_Packet 0100                      ?_ETH_WriteBlock 0003  
              DHCP_Handler@ethPktMAC 0086                      ?_ETH_WriteStart 000B  
                      ??_ETH_Write32 0007                        ??_ETH_Write16 0005  
                           ??___wmul 0006            __end_of_UDP_CallBackTable 1039  
                        __doprnt@idx 0014                          __doprnt@len 0016  
             __end_of_ADC_Initialize 8B80                          __doprnt@val 001B  
                ARPV4_Request@header 002F                             ??_initHW 0004  
                           ??_memcmp 0005           __size_of_ENCx24_BankselSPI 0056  
                  ETH_ReadBlock@data 0003                             ??_memset 0008  
        __end_of_ETH_SendSystemReset 7E7C                             ??_printf 0025  
             __end_of_TCP_SocketInit 736A               __end_of_TCP_SocketPoll 897C  
                           ??_strlen 0004                ENCx24_BankselSPI@bank 0004  
                        _DHCP_Manage 7B70                 IPv4_Start@macAddress 0064  
                      ETH_Insert@len 000B                      IPV4_Packet@cksm 00FC  
                _TCP_GetReceivedData 7C84                        __pcstackBANK0 0060  
                      __pcstackBANK1 0100                        __pcstackBANK2 02B7  
              TCP_Recv@remoteAddress 00D4                       _ICMP_EchoReply 6B5E  
                           ?_TCP_Snd 0058                         _isdigit$4832 0003  
               __end_of_TCP_SendDone 88BA               __size_of_ARPV4_Request 01BC  
                        ??_ETH_Read8 0003                          ??_ETH_Flush 0009  
             ??_ETH_NextPacketUpdate 0005                          ??_IPV4_Init 0002  
                      ?_SYSLOG_Write 002C                          ??_IPV4_Send 001F  
                  __size_of_lcd_busy 000A                    __size_of_lcd_init 00AA  
                  ENCx24_BFC@bitMask 0005                    __size_of_high_isr 8C2E  
                          __doprnt@c 001F                            __doprnt@f 000E  
                  __size_of_lcd_puts 0022              ??_ETH_RxComputeChecksum 0011  
           __size_of_TCP_PayloadSave 0314                            __pnvBANK2 02E4  
               ?_TCP_GetReceivedData 000A      ICMP_EchoReply@ipv4PayloadLength 0071  
                   ___lwdiv@dividend 0002                          ??_TCB_Check 0004  
                          __pintcode 0008                          ??_TCB_Reset 0004  
                   ETH_MACRead8@bank 0006                            __ptext100 0000  
                          __ptext101 8526                            __ptext110 8BDC  
                          __ptext102 8566                            __ptext111 6298  
                          __ptext103 89E4                            __ptext112 878A  
                          __ptext104 8C0E                            __ptext105 8114  
                          __ptext106 84E4                            __ptext115 88E2  
                          __ptext107 8380                            __ptext116 0000  
                          __ptext108 8016                            __ptext109 7A48  
                 ARPV4_Packet@x_2060 0036                             ?___lwdiv 0002  
                           ?___lwmod 0009                        IPV4_Send@cksm 0024  
                    ?_ADC_Initialize 0001             __size_of_DEMO_TCP_Client 02C8  
                 ETH_WriteBlock@data 0003                             ?__doprnt 000E  
              __size_of_Network_Init 002C                __size_of_Network_Read 00AC  
                 ARPV4_Packet@header 0039                          __pintcodelo 0018  
                __end_of_IPV4_Packet 597E                   ARPV4_Packet@arpPtr 0033  
                  __size_of_spi_init 000C                            _lcd_goto1 8BB2  
                          _lcd_goto2 8BCE                   ARPV4_Packet@length 002F  
       IPV4_PseudoHeaderChecksum@len 0009                            _lcd_putch 8AA0  
       IPV4_PseudoHeaderChecksum@tmp 000E                      ?_TCP_SocketInit 000A  
           ARPV4_Update@entryPointer 0002                      ?_TCP_SocketPoll 000A  
                __end_of_ETH_Write16 89E4                  __end_of_ETH_Write32 878A  
                        __smallconst 1000                             _BAUDCON1 000F7E  
                        _clientState 005D                          ??_UDP_Start 0058  
         ETH_EventHandler@mabbipgVal 000B                             ?_isdigit 0001  
                     _ENCx24_PhyRead 84A0                __end_of_ETH_ReadBlock 7ADE  
               __end_of_rtcc_handler 890A               __end_of_ICMP_EchoReply 6CF2  
                           ?_low_isr 0001                  __size_of_waitForDMA 0000  
                          _last_bank 01A6                            _hexpowers 100B  
                   ___lwdiv@quotient 0007                            _localTime 02E8  
                DHCP_Request@started 006F                   _ETH_readLinkStatus 0000  
                           ?_sprintf 0021                       __size_of_putch 001A  
                        _ENCx24_Read 8380                       ??_SYSLOG_Write 002E  
                          _tcpHeader 01BC                __end_of_ETH_Set_TXRTS 8C1A  
      ETH_RxComputeChecksum@econ1Val 0019                __end_of_ETH_SetPktDec 8C02  
            __size_of_Network_Manage 0092                    ENCx24_BFS@bitMask 0005  
                     ___wmul@product 0006                            _udpHeader 029F  
                           _LATBbits 000F8A                             _LED_Init 8A06  
                           _LATDbits 000F8C                  ?_ETH_readLinkStatus 000B  
                           _ETH_Copy 790C                           TCP_Snd@ret 009D  
                           _ETH_Dump 82EC                             _ETH_Init 6E80  
                           _ETH_Send 89E4                ??_TCP_GetReceivedData 000C  
                   ?_ETH_CheckLinkUp 0001                      TCB_Check@tcbPtr 0008  
    __size_of_TCP_FiniteStateMachine 2978                          _ipv4Address 018E  
                      ??_TCP_Connect 00D8                         _Network_Init 87B8  
                       _Network_Read 7668                    _nextAvailablePort 019C  
                   __CFG_WDTPS$32768 000000            __size_of_SPI_ExchangeByte 000E  
                          _uart_init 8B54                             _SSP1CON1 000FC6  
                      ARPV4_Packet@x 0035                        SYSLOG_Write@t 002E  
                           _TCP_Init 8ABC                            _rtcc_init 865E  
                           _TCP_Recv 4BE4                             _TCP_Send 74F6  
 __size_of_IPV4_PseudoHeaderChecksum 0098                        _ARPV4_Request 69A2  
                           _UDP_Send 77BE           ?_IPV4_PseudoHeaderChecksum 0002  
                         ?_lcd_goto1 0001                           ?_lcd_goto2 0001  
                         ?_lcd_putch 0001                           _ADCON0bits 000FC2  
             __end_of_ENCx24_PhyRead 84E4                    ___wmul@multiplier 0002  
               ??_ETH_readLinkStatus 000F           DEMO_TCP_Client@t_clientOld 021E  
           __size_of_DHCP_WriteZeros 0018                        ARPV4_Lookup@x 000C  
        TCP_FiniteStateMachine@event 00D2                        ??_UDP_Receive 0099  
                    ?_ICMP_EchoReply 0058                            main@now_p 02BB  
                          lcd_puts@s 0004                        ARPV4_Update@x 0004  
                 __end_of_macAddress 1034           IPV4_PseudoHeaderChecksum@v 0008  
                      TCP_Recv@count 00F6                     TCP_Update@tcbPtr 00DE  
                      ?_DHCP_Handler 0059                     __size_of_TCP_Snd 0BB8  
              ETH_WriteStart@destMAC 000B                        TCP_Snd@tcbPtr 0058  
                      ?_DHCP_Request 0001              __size_of_lcd_write_data 0020  
                      IPv4_Start@ret 0066              __size_of_lcd_write_ctrl 0020  
                           __Hrparam 0000                          _IPV4_Packet 55C8  
                           __Lrparam 0000                    _ADC_GetConversion 878A  
                         ?_uart_init 0001                          _ETH_Write32 875C  
                        _ETH_Write16 89C2                     ETH_ReadBlock@len 000A  
                     ?_ARPV4_Request 000F                    ??_TCP_PayloadSave 00B4  
                         ?_rtcc_init 0001                   ?_ADC_GetConversion 0002  
                __end_of_TCP_Connect 74F6                     __size_of___lwdiv 004A  
                   ENCx24_Write@bank 0007                     __size_of___lwmod 003E  
                   ENCx24_Write@data 0005                   DEMO_TCP_Client@pot 00DE  
                  ?_ETH_EventHandler 0001                     __size_of__doprnt 05CA  
  __end_of_IPV4_PseudoHeaderChecksum 7A48               TCP_ParseTCPOptions@ret 0011  
             TCP_ParseTCPOptions@opt 0012                      ?_ENCx24_PhyRead 000B  
                        _tcbListSize 01A7             ARPV4_Packet@entryPointer 0037  
            ??_ETH_TxComputeChecksum 0013                   DHCP_Handler@ethMAC 008C  
                 ??_ETH_EventHandler 000B               _TCP_FiniteStateMachine 10EA  
                ??_ADC_GetConversion 0004           __end_of_TCP_InsertRxBuffer 7C84  
                 DHCP_Handler@length 0059                             _dhcpName 1013  
                  ??_DEMO_TCP_Client 00DA                __size_of_TCP_SendDone 002A  
             __size_of_lcd_init_pins 000A                       ENCx24_BFC@bank 0007  
        DEMO_TCP_Client@rxdataPort60 026D                     __size_of_isdigit 001C  
                 DHCP_Handler@option 0085                      ___lwdiv@divisor 0004  
                    ___lwdiv@counter 0006                      ENCx24_Read@bank 0007  
                   __size_of_low_isr 0010                             __ptext10 890A  
                           __ptext11 872E                             __ptext20 8254  
                           __ptext12 897C                             __ptext21 7F5A  
                           __ptext13 8BC0                             __ptext30 8B92  
                           __ptext22 4BE4                             __ptext14 7ADE  
                           __ptext31 790C                             __ptext23 6F98  
                           __ptext15 597E                             __ptext40 7B70  
                           __ptext32 736A                             __ptext24 86FE  
                           __ptext16 7668                             _arpTimer 02B3  
                           __ptext41 67CA                             __ptext33 7E7C  
                           __ptext25 83CA                             __ptext17 55C8  
                           __ptext50 8C02                             __ptext42 81B8  
                           __ptext34 8B24                             __ptext26 82EC  
                           __ptext18 71B4                             __ptext51 6E80  
                           __ptext43 8BA2                             __ptext35 8696  
                           __ptext27 79B0                             __ptext19 6560  
                           __ptext60 806C                             __ptext52 7E0A  
                           __ptext44 77BE                             __ptext36 8BF6  
                           __ptext28 8412                             __ptext61 88BA  
                           __ptext53 86CA                             __ptext45 8A66  
                           __ptext37 5194                             __ptext29 6B5E  
                           __ptext70 89A0                             __ptext62 8810  
                           __ptext54 0000                             __ptext46 8B3C  
                           __ptext38 7866                             __ptext71 8AA0  
                           __ptext63 461A                             __ptext55 84A0  
                           __ptext47 883C                             __ptext39 8168  
                           __ptext80 7BFE                             __ptext72 8A26  
                           __ptext64 8AF0                             __ptext56 87E4  
                           __ptext48 87B8                             __ptext81 7C84  
                           __ptext73 8BCE                             __ptext65 8A84  
                           __ptext57 8AD6                             __ptext49 8ABC  
                           __ptext90 875C                             __ptext82 7430  
                           __ptext74 8A46                             __ptext66 8930  
                           __ptext58 8B80                             __ptext91 69A2  
                           __ptext83 8956                             __ptext75 8C24  
                           __ptext67 85E4                             __ptext59 5FD0  
                           __ptext92 80C0                             __ptext84 7D0A  
                           __ptext76 72A2                             __ptext68 8336  
                           __ptext93 7FBE                             __ptext85 10EA  
                           __ptext77 82A0                             __ptext69 8866  
                           __ptext94 89C2                             __ptext86 5CBC  
                           __ptext78 8890                             __ptext95 7D90  
                           __ptext87 3A62                             __ptext79 74F6  
                           __ptext96 8622                             __ptext88 6CF2  
                           __ptext97 8206                             __ptext89 8B0A  
                           __ptext98 7EEC                             __ptext99 75BA  
                     ??_DHCP_Handler 005B                         _SSP1CON1bits 000FC6  
                     ENCx24_BFS@bank 0007                    ETH_WriteBlock@len 0005  
                           _lcd_busy 8C24                             _lcd_init 7714  
                 DHCP_Request@ethMAC 0071                             _high_isr 0008  
                         _ARPV4_Init 8AD6                         time@the_time 0007  
                           _lcd_puts 89A0                     __size_of_sprintf 002C  
                __end_of_UDP_Receive 72A2                         _remoteSocket 02AD  
                   ??_ETH_WriteBlock 0007                    _remoteIpv4Address 0232  
                 ETH_WriteStart@type 000D            ARPV4_Lookup@entry_pointer 000A  
                         _ENCx24_BFC 8566                           _ENCx24_BFS 8526  
                   ??_ETH_WriteStart 000F                        __size_of_main 010C  
                      ??_SYSLOG_Init 002C                       ??_DHCP_Request 0059  
                      __size_of_time 0054           DEMO_TCP_Client@temperature 00DC  
                    ENCx24_PhyRead@a 000D            __end_of_ADC_GetConversion 87B8  
                       ??_waitForDMA 000B                Network_Read@debug_str 0120  
                  UDP_Send@udpLength 002F           DEMO_TCP_Client@socketState 00E0  
       ETH_Insert@current_tx_pointer 000F                             _spi_init 8BEA  
                           int$flags 005E                 _rxPacketStatusVector 0218  
                       _TCP_SendDone 8890                         _SSP1STATbits 000FC7  
                        ??_lcd_goto1 0003                          ??_lcd_goto2 0003  
              __size_of_rtcc_handler 0028                 __end_of_SYSLOG_Write 8930  
          __size_of_ETH_GetByteCount 001E          __end_of_Network_WaitForLink 8BCE  
                        ??_lcd_putch 0003             ETH_EventHandler@estatVal 000F  
                       ?_DHCP_Manage 0001                           _ETH_GetMAC 7D90  
                          putch@data 0002                         TCP_Send@data 00B6  
                Network_Manage@nowPv 0222                           _ETH_Read32 7F5A  
                         _ETH_Read16 83CA            ETH_TxComputeChecksum@cksm 0017  
          ETH_TxComputeChecksum@seed 0011                             memcmp@s1 0007  
                           memcmp@s2 0002                           _ETH_Insert 8114  
            ETH_Copy@txBufferAddress 000F          DEMO_TCP_Client@txdataPort60 0368  
                      ?_ARPV4_Packet 0001                      ETH_Write32@data 0003  
                    ETH_Write16@data 0003                        ?_ARPV4_Lookup 0002  
                 __end_of_waitForDMA 0000                             isdigit@c 0004  
                           memset@p1 0002                           _ETH_Write8 8B0A  
                  ??_DHCP_WriteZeros 0006                        ?_ARPV4_Update 0001  
              _receivedRemoteAddress 0196           __end_of_ETH_ResetByteCount 8BB2  
                           intlevel1 0000                             intlevel2 0000  
                          sprintf@ap 002C                            sprintf@pb 002D  
                          sprintf@wh 0021                       _Network_Manage 7ADE  
                   ___lwmod@dividend 0009                      UDP_Receive@hptr 00A1  
       __size_of_TCP_ParseTCPOptions 0110       __size_of_ETH_RxComputeChecksum 00C6  
                   ??_ADC_Initialize 0002                        _lcd_init_pins 8C1A  
      __end_of_ETH_RxComputeChecksum 7430                         _rtcc_handler 88E2  
                        _TCP_Connect 7430                      ??_ARPV4_Request 0013  
                        ARPV4_Init@x 0002                     _SPI_ExchangeByte 8BDC  
                        ??_uart_init 0002                  __end_of_SYSLOG_Init 875C  
                   ??_TCP_SocketInit 000C                             printf@ap 0026  
                         _TCB_Insert 82A0                             printf@pb 0027  
                   ??_TCP_SocketPoll 000C                          ??_rtcc_init 0002  
           __size_of_ENCx24_PHYWrite 002C                 IPV4_Send@totalLength 0026  
                      ?_ICMP_Receive 005A                             sprintf@f 0023  
               ETH_CheckLinkUp@value 000F                     DHCP_Handler@myip 0093  
                      ?_ENCx24_Write 0005                      ETH_WriteBlock@p 0007  
      IPV4_PseudoHeaderChecksum@cksm 000A                      ___lwmod@divisor 000B  
                    ARPV4_Packet@ret 0032                             strlen@cp 0004  
                     ??_ARPV4_Packet 000F                      ___lwmod@counter 000D  
                        _UDP_Receive 71B4                       ??_ARPV4_Lookup 0006  
       __size_of_ETH_SendSystemReset 0072           TCP_PayloadSave@buffer_size 00C1  
                     ??_ARPV4_Update 0002                           _IPv4_Start 6CF2  
                  Network_Manage@now 017F                           _TCP_Update 597E  
             __end_of_Network_Manage 7B70                          ?_ARPV4_Init 0001  
                    DHCP_Handler@v16 0083                        ENCx24_Write@a 0008  
                       ?_ENCx24_Read 0005                          ENCx24_BFC@a 0008  
                       ENCx24_Read@a 000A                         ENCx24_Read@v 0008  
                        ENCx24_BFS@a 0008                   Network_Read@header 0170  
                        ?_ENCx24_BFC 0005                          ?_ENCx24_BFS 0005  
      __size_of_ETH_NextPacketUpdate 0070                         UDP_Receive@x 009F  
                     _lcd_write_data 8A26                       ?_lcd_init_pins 0001  
         __size_of_ADC_GetConversion 002E                       _lcd_write_ctrl 8A46  
                       UDP_Send@cksm 002D                     ETH_Insert@offset 000D  

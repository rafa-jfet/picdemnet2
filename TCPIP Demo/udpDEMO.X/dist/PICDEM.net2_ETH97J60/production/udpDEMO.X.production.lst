

Microchip Technology PIC18 PRO Macro Assembler V1.35 build -356382666 
                                                                                               Wed Sep 09 15:11:43 2015

Microchip Technology Omniscient Code Generator v1.35 (PRO mode) build 201507080246
     1                           	processor	18F97J60
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1
    91                           	psect	text74,global,reloc=2,class=CODE,delta=1
    92                           	psect	text75,global,reloc=2,class=CODE,delta=1
    93                           	psect	text76,global,reloc=2,class=CODE,delta=1
    94                           	psect	text77,global,reloc=2,class=CODE,delta=1
    95                           	psect	text78,global,reloc=2,class=CODE,delta=1
    96                           	psect	text79,global,reloc=2,class=CODE,delta=1
    97                           	psect	text80,global,reloc=2,class=CODE,delta=1
    98                           	psect	text81,global,reloc=2,class=CODE,delta=1
    99                           	psect	text82,global,reloc=2,class=CODE,delta=1
   100                           	psect	text83,global,reloc=2,class=CODE,delta=1
   101                           	psect	text84,global,reloc=2,class=CODE,delta=1
   102                           	psect	text85,global,reloc=2,class=CODE,delta=1
   103                           	psect	text86,global,reloc=2,class=CODE,delta=1
   104                           	psect	text87,global,reloc=2,class=CODE,delta=1
   105                           	psect	text88,global,reloc=2,class=CODE,delta=1
   106                           	psect	text89,global,reloc=2,class=CODE,delta=1
   107                           	psect	text90,global,reloc=2,class=CODE,delta=1
   108                           	psect	text91,global,reloc=2,class=CODE,delta=1
   109                           	psect	text92,global,reloc=2,class=CODE,delta=1
   110                           	psect	text93,global,reloc=2,class=CODE,delta=1
   111                           	psect	text94,global,reloc=2,class=CODE,delta=1
   112                           	psect	text95,global,reloc=2,class=CODE,delta=1
   113                           	psect	text96,global,reloc=2,class=CODE,delta=1
   114                           	psect	text97,global,reloc=2,class=CODE,delta=1
   115                           	psect	text98,global,reloc=2,class=CODE,delta=1
   116                           	psect	text99,global,reloc=2,class=CODE,delta=1
   117                           	psect	text100,global,reloc=2,class=CODE,delta=1
   118                           	psect	text101,global,reloc=2,class=CODE,delta=1
   119                           	psect	text102,global,reloc=2,class=CODE,delta=1
   120                           	psect	text103,global,reloc=2,class=CODE,delta=1
   121                           	psect	text104,global,reloc=2,class=CODE,delta=1
   122                           	psect	text105,global,reloc=2,class=CODE,delta=1
   123                           	psect	text106,global,reloc=2,class=CODE,delta=1
   124                           	psect	text107,global,reloc=2,class=CODE,delta=1
   125                           	psect	text108,global,reloc=2,class=CODE,delta=1
   126                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   127                           	psect	text110,global,reloc=2,class=CODE,delta=1
   128                           	psect	text111,global,reloc=2,class=CODE,delta=1
   129                           	psect	text112,global,reloc=2,class=CODE,delta=1
   130                           	psect	text113,global,reloc=2,class=CODE,delta=1
   131                           	psect	text114,global,reloc=2,class=CODE,delta=1
   132                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   133                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   134                           	psect	text116,global,reloc=2,class=CODE,delta=1
   135                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   136                           	psect	text117,global,reloc=2,class=CODE,delta=1
   137                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   138                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   139                           	psect	pa_nodes,global,class=CODE,delta=1
   140                           	dabs	1,0xE7E,2,_errataTemp
   141  0000                     tosu	equ	0xFFF
   142                           tosh	equ	0xFFE
   143                           tosl	equ	0xFFD
   144                           pclath	equ	0xFFA
   145                           tblptru	equ	0xFF8
   146                           tblptrh	equ	0xFF7
   147                           tblptrl	equ	0xFF6
   148                           tablat	equ	0xFF5
   149                           prodh	equ	0xFF4
   150                           prodl	equ	0xFF3
   151                           intcon	equ	0xFF2
   152                           indf0	equ	0xFEF
   153                           postinc0	equ	0xFEE
   154                           fsr0h	equ	0xFEA
   155                           fsr0l	equ	0xFE9
   156                           wreg	equ	0xFE8
   157                           postinc1	equ	0xFE6
   158                           plusw1	equ	0xFE3
   159                           fsr1h	equ	0xFE2
   160                           fsr1l	equ	0xFE1
   161                           bsr	equ	0xFE0
   162                           indf2	equ	0xFDF
   163                           postinc2	equ	0xFDE
   164                           postdec2	equ	0xFDD
   165                           plusw2	equ	0xFDB
   166                           fsr2h	equ	0xFDA
   167                           fsr2l	equ	0xFD9
   168                           status	equ	0xFD8
   169                           
   170                           	psect	idataCOMRAM
   171  006512                     __pidataCOMRAM:
   172                           	opt stack 0
   173                           
   174                           ;initializer for _clientState
   175  006512  01                 	db	1
   176                           tosu	equ	0xFFF
   177                           tosh	equ	0xFFE
   178                           tosl	equ	0xFFD
   179                           pclath	equ	0xFFA
   180                           tblptru	equ	0xFF8
   181                           tblptrh	equ	0xFF7
   182                           tblptrl	equ	0xFF6
   183                           tablat	equ	0xFF5
   184                           prodh	equ	0xFF4
   185                           prodl	equ	0xFF3
   186                           intcon	equ	0xFF2
   187                           indf0	equ	0xFEF
   188                           postinc0	equ	0xFEE
   189                           fsr0h	equ	0xFEA
   190                           fsr0l	equ	0xFE9
   191                           wreg	equ	0xFE8
   192                           postinc1	equ	0xFE6
   193                           plusw1	equ	0xFE3
   194                           fsr1h	equ	0xFE2
   195                           fsr1l	equ	0xFE1
   196                           bsr	equ	0xFE0
   197                           indf2	equ	0xFDF
   198                           postinc2	equ	0xFDE
   199                           postdec2	equ	0xFDD
   200                           plusw2	equ	0xFDB
   201                           fsr2h	equ	0xFDA
   202                           fsr2l	equ	0xFD9
   203                           status	equ	0xFD8
   204                           
   205                           	psect	smallconst
   206  001000                     __psmallconst:
   207                           	opt stack 0
   208  001000  00                 	db	0
   209  001001                     _dpowers:
   210                           	opt stack 0
   211  001001  0001               	dw	1
   212  001003  000A               	dw	10
   213  001005  0064               	dw	100
   214  001007  03E8               	dw	1000
   215  001009  2710               	dw	10000
   216  00100B                     __end_of_dpowers:
   217                           	opt stack 0
   218  00100B                     _hexpowers:
   219                           	opt stack 0
   220  00100B  0001               	dw	1
   221  00100D  0010               	dw	16
   222  00100F  0100               	dw	256
   223  001011  1000               	dw	4096
   224  001013                     __end_of_hexpowers:
   225                           	opt stack 0
   226  001013                     _dhcpName:
   227                           	opt stack 0
   228  001013  50                 	db	80
   229  001014  49                 	db	73
   230  001015  43                 	db	67
   231  001016  31                 	db	49
   232  001017  38                 	db	56
   233  001018  46                 	db	70
   234  001019  39                 	db	57
   235  00101A  37                 	db	55
   236  00101B  4A                 	db	74
   237  00101C  36                 	db	54
   238  00101D  30                 	db	48
   239  00101E  20                 	db	32
   240  00101F  45                 	db	69
   241  001020  54                 	db	84
   242  001021  48                 	db	72
   243  001022  45                 	db	69
   244  001023  52                 	db	82
   245  001024  4E                 	db	78
   246  001025  45                 	db	69
   247  001026  54                 	db	84
   248  001027  00                 	db	0
   249  001028                     __end_of_dhcpName:
   250                           	opt stack 0
   251  001028                     _UDP_CallBackTable:
   252                           	opt stack 0
   253  001028  FFFC               	dw	65532
   254  00102A  12                 	db	low _DEMO_UDP_IdlePkt
   255  00102B  61                 	db	high _DEMO_UDP_IdlePkt
   256  00102C  00                 	db	low (_DEMO_UDP_IdlePkt shr (0+16))
   257  00102D  FFFB               	dw	65531
   258  00102F  90                 	db	low _DEMO_UDP_Recv
   259  001030  2C                 	db	high _DEMO_UDP_Recv
   260  001031  00                 	db	low (_DEMO_UDP_Recv shr (0+16))
   261  001032  0044               	dw	68
   262  001034  9C                 	db	low _DHCP_Handler
   263  001035  3D                 	db	high _DHCP_Handler
   264  001036  00                 	db	low (_DHCP_Handler shr (0+16))
   265  001037                     __end_of_UDP_CallBackTable:
   266                           	opt stack 0
   267  001037                     _broadcastMAC:
   268                           	opt stack 0
   269  001037  FF                 	db	255
   270  001038  FF                 	db	255
   271  001039  FF                 	db	255
   272  00103A  FF                 	db	255
   273  00103B  FF                 	db	255
   274  00103C  FF                 	db	255
   275  00103D                     __end_of_broadcastMAC:
   276                           	opt stack 0
   277  00103D                     _macAddress:
   278                           	opt stack 0
   279  00103D  00                 	db	0
   280  00103E  DE                 	db	222
   281  00103F  AD                 	db	173
   282  001040  00                 	db	0
   283  001041  BE                 	db	190
   284  001042  EF                 	db	239
   285  001043                     __end_of_macAddress:
   286                           	opt stack 0
   287  001043                     STR_3:
   288                           
   289                           ; BSR set to: 14
   290  001043  0D                 	db	13
   291  001044  0A                 	db	10
   292  001045  0D                 	db	13
   293  001046  0A                 	db	10
   294  001047  53                 	db	83	;'S'
   295  001048  74                 	db	116	;'t'
   296  001049  61                 	db	97	;'a'
   297  00104A  72                 	db	114	;'r'
   298  00104B  74                 	db	116	;'t'
   299  00104C  69                 	db	105	;'i'
   300  00104D  6E                 	db	110	;'n'
   301  00104E  67                 	db	103	;'g'
   302  00104F  20                 	db	32
   303  001050  53                 	db	83	;'S'
   304  001051  79                 	db	121	;'y'
   305  001052  73                 	db	115	;'s'
   306  001053  6C                 	db	108	;'l'
   307  001054  6F                 	db	111	;'o'
   308  001055  67                 	db	103	;'g'
   309  001056  20                 	db	32
   310  001057  61                 	db	97	;'a'
   311  001058  74                 	db	116	;'t'
   312  001059  20                 	db	32
   313  00105A  25                 	db	37
   314  00105B  75                 	db	117	;'u'
   315  00105C  0D                 	db	13
   316  00105D  0A                 	db	10
   317  00105E  00                 	db	0
   318  00105F                     STR_9:
   319                           
   320                           ; BSR set to: 14
   321  00105F  30                 	db	48	;'0'
   322  001060  31                 	db	49	;'1'
   323  001061  32                 	db	50	;'2'
   324  001062  33                 	db	51	;'3'
   325  001063  34                 	db	52	;'4'
   326  001064  35                 	db	53	;'5'
   327  001065  36                 	db	54	;'6'
   328  001066  37                 	db	55	;'7'
   329  001067  38                 	db	56	;'8'
   330  001068  39                 	db	57	;'9'
   331  001069  61                 	db	97	;'a'
   332  00106A  62                 	db	98	;'b'
   333  00106B  63                 	db	99	;'c'
   334  00106C  64                 	db	100	;'d'
   335  00106D  65                 	db	101	;'e'
   336  00106E  66                 	db	102	;'f'
   337  00106F  00                 	db	0
   338  001070                     STR_5:
   339                           
   340                           ; BSR set to: 14
   341  001070  57                 	db	87	;'W'
   342  001071  61                 	db	97	;'a'
   343  001072  69                 	db	105	;'i'
   344  001073  74                 	db	116	;'t'
   345  001074  69                 	db	105	;'i'
   346  001075  6E                 	db	110	;'n'
   347  001076  67                 	db	103	;'g'
   348  001077  20                 	db	32
   349  001078  66                 	db	102	;'f'
   350  001079  6F                 	db	111	;'o'
   351  00107A  72                 	db	114	;'r'
   352  00107B  20                 	db	32
   353  00107C  4C                 	db	76	;'L'
   354  00107D  69                 	db	105	;'i'
   355  00107E  6E                 	db	110	;'n'
   356  00107F  6B                 	db	107	;'k'
   357  001080  00                 	db	0
   358  001081                     STR_1:
   359                           
   360                           ; BSR set to: 14
   361  001081  44                 	db	68	;'D'
   362  001082  4D                 	db	77	;'M'
   363  001083  41                 	db	65	;'A'
   364  001084  20                 	db	32
   365  001085  54                 	db	84	;'T'
   366  001086  49                 	db	73	;'I'
   367  001087  4D                 	db	77	;'M'
   368  001088  45                 	db	69	;'E'
   369  001089  4F                 	db	79	;'O'
   370  00108A  55                 	db	85	;'U'
   371  00108B  54                 	db	84	;'T'
   372  00108C  21                 	db	33
   373  00108D  21                 	db	33
   374  00108E  21                 	db	33
   375  00108F  00                 	db	0
   376  001090                     STR_6:
   377                           
   378                           ; BSR set to: 14
   379  001090  4C                 	db	76	;'L'
   380  001091  69                 	db	105	;'i'
   381  001092  6E                 	db	110	;'n'
   382  001093  6B                 	db	107	;'k'
   383  001094  20                 	db	32
   384  001095  73                 	db	115	;'s'
   385  001096  74                 	db	116	;'t'
   386  001097  61                 	db	97	;'a'
   387  001098  72                 	db	114	;'r'
   388  001099  74                 	db	116	;'t'
   389  00109A  65                 	db	101	;'e'
   390  00109B  64                 	db	100	;'d'
   391  00109C  00                 	db	0
   392  00109D                     STR_7:
   393                           
   394                           ; BSR set to: 14
   395  00109D  25                 	db	37
   396  00109E  64                 	db	100	;'d'
   397  00109F  2E                 	db	46
   398  0010A0  25                 	db	37
   399  0010A1  64                 	db	100	;'d'
   400  0010A2  2E                 	db	46
   401  0010A3  25                 	db	37
   402  0010A4  64                 	db	100	;'d'
   403  0010A5  2E                 	db	46
   404  0010A6  25                 	db	37
   405  0010A7  64                 	db	100	;'d'
   406  0010A8  00                 	db	0
   407  0010A9                     STR_4:
   408                           
   409                           ; BSR set to: 14
   410  0010A9  25                 	db	37
   411  0010AA  75                 	db	117	;'u'
   412  0010AB  20                 	db	32
   413  0010AC  3A                 	db	58	;':'
   414  0010AD  20                 	db	32
   415  0010AE  25                 	db	37
   416  0010AF  73                 	db	115	;'s'
   417  0010B0  0D                 	db	13
   418  0010B1  0A                 	db	10
   419  0010B2  00                 	db	0
   420  0010B3                     STR_2:
   421                           
   422                           ; BSR set to: 14
   423  0010B3  25                 	db	37
   424  0010B4  78                 	db	120	;'x'
   425  0010B5  20                 	db	32
   426  0010B6  3A                 	db	58	;':'
   427  0010B7  20                 	db	32
   428  0010B8  25                 	db	37
   429  0010B9  64                 	db	100	;'d'
   430  0010BA  00                 	db	0
   431  0010BB                     STR_8:
   432                           
   433                           ; BSR set to: 14
   434  0010BB  28                 	db	40
   435  0010BC  6E                 	db	110	;'n'
   436  0010BD  75                 	db	117	;'u'
   437  0010BE  6C                 	db	108	;'l'
   438  0010BF  6C                 	db	108	;'l'
   439  0010C0  29                 	db	41
   440  0010C1  00                 	db	0
   441                           
   442                           ; #config settings
   443  0010C2  00                 	db	0	; dummy byte at the end
   444  0000                     tosu	equ	0xFFF
   445                           tosh	equ	0xFFE
   446                           tosl	equ	0xFFD
   447                           pclath	equ	0xFFA
   448                           tblptru	equ	0xFF8
   449                           tblptrh	equ	0xFF7
   450                           tblptrl	equ	0xFF6
   451                           tablat	equ	0xFF5
   452                           prodh	equ	0xFF4
   453                           prodl	equ	0xFF3
   454                           intcon	equ	0xFF2
   455                           indf0	equ	0xFEF
   456                           postinc0	equ	0xFEE
   457                           fsr0h	equ	0xFEA
   458                           fsr0l	equ	0xFE9
   459                           wreg	equ	0xFE8
   460                           postinc1	equ	0xFE6
   461                           plusw1	equ	0xFE3
   462                           fsr1h	equ	0xFE2
   463                           fsr1l	equ	0xFE1
   464                           bsr	equ	0xFE0
   465                           indf2	equ	0xFDF
   466                           postinc2	equ	0xFDE
   467                           postdec2	equ	0xFDD
   468                           plusw2	equ	0xFDB
   469                           fsr2h	equ	0xFDA
   470                           fsr2l	equ	0xFD9
   471                           status	equ	0xFD8
   472                           
   473                           	psect	nvBANK2
   474  0002F3                     __pnvBANK2:
   475                           	opt stack 0
   476  0002F3                     _deviceTime:
   477                           	opt stack 0
   478  0002F3                     	ds	4
   479  0002F7                     _localTime:
   480                           	opt stack 0
   481  0002F7                     	ds	4
   482  0000                     _EDMADST	set	3828
   483  0000                     _EDMAND	set	3826
   484  0000                     _EDMAST	set	3824
   485  0000                     _ERXND	set	3818
   486  0000                     _ERXRDPT	set	3820
   487  0000                     _ERXST	set	3816
   488  0000                     _ETXND	set	3814
   489  0000                     _ETXST	set	3812
   490  0000                     _EWRPT	set	3810
   491  0000                     _MAIPG	set	3750
   492  0000                     _MAMXFL	set	3754
   493  0000                     _MIRD	set	3768
   494  0000                     _MIWR	set	3766
   495  0000                     _ECON2	set	3838
   496  0000                     _EIE	set	3835
   497  0000                     _EIEbits	set	3835
   498  0000                     _EPKTCNT	set	3801
   499  0000                     _ERXFCON	set	3800
   500  0000                     _ESTATbits	set	3837
   501  0000                     _MAADR1	set	3716
   502  0000                     _MAADR2	set	3717
   503  0000                     _MAADR3	set	3714
   504  0000                     _MAADR4	set	3715
   505  0000                     _MAADR5	set	3712
   506  0000                     _MAADR6	set	3713
   507  0000                     _MABBIPG	set	3748
   508  0000                     _MACON1	set	3744
   509  0000                     _MACON3	set	3746
   510  0000                     _MACON4	set	3747
   511  0000                     _MICMD	set	3762
   512  0000                     _MICMDbits	set	3762
   513  0000                     _MIREGADR	set	3764
   514  0000                     _MISTATbits	set	3722
   515  0000                     _ADRES	set	4035
   516  0000                     _ERDPT	set	3962
   517  0000                     _TMR1	set	4046
   518  0000                     _ADCON0	set	4034
   519  0000                     _ADCON0bits	set	4034
   520  0000                     _ADCON1	set	4033
   521  0000                     _ADCON2	set	4032
   522  0000                     _ADRESH	set	4036
   523  0000                     _ADRESL	set	4035
   524  0000                     _BAUDCON1	set	3966
   525  0000                     _BAUDCON1bits	set	3966
   526  0000                     _ECON1	set	4050
   527  0000                     _ECON1bits	set	4050
   528  0000                     _EIRbits	set	3936
   529  0000                     _INTCON	set	4082
   530  0000                     _IPR2bits	set	4002
   531  0000                     _LATDbits	set	3980
   532  0000                     _LATE	set	3981
   533  0000                     _LATH	set	3984
   534  0000                     _LATJ	set	3985
   535  0000                     _OSCCON	set	4051
   536  0000                     _OSCTUNE	set	3995
   537  0000                     _PIE2bits	set	4000
   538  0000                     _PIR2bits	set	4001
   539  0000                     _PORTJ	set	3976
   540  0000                     _PORTJbits	set	3976
   541  0000                     _SPBRG1	set	4015
   542  0000                     _SSP1CON1	set	4038
   543  0000                     _SSP1CON1bits	set	4038
   544  0000                     _SSP1STATbits	set	4039
   545  0000                     _TRISA	set	3986
   546  0000                     _TRISAbits	set	3986
   547  0000                     _TRISB	set	3987
   548  0000                     _TRISCbits	set	3988
   549  0000                     _TRISDbits	set	3989
   550  0000                     _TRISE	set	3990
   551  0000                     _TRISH	set	3993
   552  0000                     _TRISJ	set	3994
   553  0000                     _TXREG1	set	4013
   554  0000                     _TXSTA1	set	4012
   555  0000                     _CREN1	set	32092
   556  0000                     _GIE	set	32663
   557  0000                     _GIEH	set	32663
   558  0000                     _GIEL	set	32662
   559  0000                     _IPEN	set	32391
   560  0000                     _LATH0	set	31872
   561  0000                     _LATH1	set	31873
   562  0000                     _LATH2	set	31874
   563  0000                     _SPEN1	set	32095
   564  0000                     _T1CKPS0	set	32364
   565  0000                     _T1CKPS1	set	32365
   566  0000                     _T1OSCEN	set	32363
   567  0000                     _T1SYNC	set	32362
   568  0000                     _TMR1CS	set	32361
   569  0000                     _TMR1IE	set	31976
   570  0000                     _TMR1IF	set	31984
   571  0000                     _TMR1IP	set	31992
   572  0000                     _TMR1ON	set	32360
   573  0000                     _TX1IF	set	31988
   574                           tosu	equ	0xFFF
   575                           tosh	equ	0xFFE
   576                           tosl	equ	0xFFD
   577                           pclath	equ	0xFFA
   578                           tblptru	equ	0xFF8
   579                           tblptrh	equ	0xFF7
   580                           tblptrl	equ	0xFF6
   581                           tablat	equ	0xFF5
   582                           prodh	equ	0xFF4
   583                           prodl	equ	0xFF3
   584                           intcon	equ	0xFF2
   585                           indf0	equ	0xFEF
   586                           postinc0	equ	0xFEE
   587                           fsr0h	equ	0xFEA
   588                           fsr0l	equ	0xFE9
   589                           wreg	equ	0xFE8
   590                           postinc1	equ	0xFE6
   591                           plusw1	equ	0xFE3
   592                           fsr1h	equ	0xFE2
   593                           fsr1l	equ	0xFE1
   594                           bsr	equ	0xFE0
   595                           indf2	equ	0xFDF
   596                           postinc2	equ	0xFDE
   597                           postdec2	equ	0xFDD
   598                           plusw2	equ	0xFDB
   599                           fsr2h	equ	0xFDA
   600                           fsr2l	equ	0xFD9
   601                           status	equ	0xFD8
   602                           
   603                           	psect	cinit
   604  005E36                     __pcinit:
   605                           	opt stack 0
   606  005E36                     start_initialization:
   607                           	opt stack 0
   608  005E36                     __initialization:
   609                           	opt stack 0
   610                           
   611                           ; Clear objects allocated to BANK2 (190 bytes)
   612  005E36  EE02  F000         	lfsr	0,__pbssBANK2
   613  005E3A  0EBE               	movlw	190
   614  005E3C                     clear_0:
   615  005E3C  6AEE               	clrf	postinc0,c
   616  005E3E  06E8               	decf	wreg,f,c
   617  005E40  E1FD               	bnz	clear_0
   618                           
   619                           ; Clear objects allocated to BANK1 (40 bytes)
   620  005E42  EE01  F0BF         	lfsr	0,__pbssBANK1
   621  005E46  0E28               	movlw	40
   622  005E48                     clear_1:
   623  005E48  6AEE               	clrf	postinc0,c
   624  005E4A  06E8               	decf	wreg,f,c
   625  005E4C  E1FD               	bnz	clear_1
   626                           
   627                           ; Clear objects allocated to COMRAM (21 bytes)
   628  005E4E  EE00  F033         	lfsr	0,__pbssCOMRAM
   629  005E52  0E15               	movlw	21
   630  005E54                     clear_2:
   631  005E54  6AEE               	clrf	postinc0,c
   632  005E56  06E8               	decf	wreg,f,c
   633  005E58  E1FD               	bnz	clear_2
   634                           
   635                           ; Initialize objects allocated to COMRAM (1 bytes)
   636                           ; load TBLPTR registers with __pidataCOMRAM
   637  005E5A  0E12               	movlw	low __pidataCOMRAM
   638  005E5C  6EF6               	movwf	tblptrl,c
   639  005E5E  0E65               	movlw	high __pidataCOMRAM
   640  005E60  6EF7               	movwf	tblptrh,c
   641  005E62  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   642  005E64  6EF8               	movwf	tblptru,c
   643  005E66  0009               	tblrd		*+	;fetch initializer
   644  005E68  CFF5 F048          	movff	tablat,__pdataCOMRAM
   645  005E6C                     end_of_initialization:
   646                           	opt stack 0
   647  005E6C                     __end_of__initialization:
   648                           	opt stack 0
   649  005E6C  9049               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   650  005E6E  9249               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   651  005E70  0100               	movlb	0
   652  005E72  EFDA  F025         	goto	_main	;jump to C main() function
   653                           tosu	equ	0xFFF
   654                           tosh	equ	0xFFE
   655                           tosl	equ	0xFFD
   656                           pclath	equ	0xFFA
   657                           tblptru	equ	0xFF8
   658                           tblptrh	equ	0xFF7
   659                           tblptrl	equ	0xFF6
   660                           tablat	equ	0xFF5
   661                           prodh	equ	0xFF4
   662                           prodl	equ	0xFF3
   663                           intcon	equ	0xFF2
   664                           indf0	equ	0xFEF
   665                           postinc0	equ	0xFEE
   666                           fsr0h	equ	0xFEA
   667                           fsr0l	equ	0xFE9
   668                           wreg	equ	0xFE8
   669                           postinc1	equ	0xFE6
   670                           plusw1	equ	0xFE3
   671                           fsr1h	equ	0xFE2
   672                           fsr1l	equ	0xFE1
   673                           bsr	equ	0xFE0
   674                           indf2	equ	0xFDF
   675                           postinc2	equ	0xFDE
   676                           postdec2	equ	0xFDD
   677                           plusw2	equ	0xFDB
   678                           fsr2h	equ	0xFDA
   679                           fsr2l	equ	0xFD9
   680                           status	equ	0xFD8
   681                           
   682                           	psect	bssCOMRAM
   683  000033                     __pbssCOMRAM:
   684                           	opt stack 0
   685  000033                     _claim_dest_ip:
   686                           	opt stack 0
   687  000033                     	ds	4
   688  000037                     _ipv4Address:
   689                           	opt stack 0
   690  000037                     	ds	4
   691  00003B                     _receivedRemoteAddress:
   692                           	opt stack 0
   693  00003B                     	ds	4
   694  00003F                     _currentTCB:
   695                           	opt stack 0
   696  00003F                     	ds	2
   697  000041                     _nextPacketPointer:
   698                           	opt stack 0
   699  000041                     	ds	2
   700  000043                     _tcpMss:
   701                           	opt stack 0
   702  000043                     	ds	2
   703  000045                     _claim:
   704                           	opt stack 0
   705  000045                     	ds	1
   706  000046                     _idle_pkt_received:
   707                           	opt stack 0
   708  000046                     	ds	1
   709  000047                     _tcbListSize:
   710                           	opt stack 0
   711  000047                     	ds	1
   712                           tosu	equ	0xFFF
   713                           tosh	equ	0xFFE
   714                           tosl	equ	0xFFD
   715                           pclath	equ	0xFFA
   716                           tblptru	equ	0xFF8
   717                           tblptrh	equ	0xFF7
   718                           tblptrl	equ	0xFF6
   719                           tablat	equ	0xFF5
   720                           prodh	equ	0xFF4
   721                           prodl	equ	0xFF3
   722                           intcon	equ	0xFF2
   723                           indf0	equ	0xFEF
   724                           postinc0	equ	0xFEE
   725                           fsr0h	equ	0xFEA
   726                           fsr0l	equ	0xFE9
   727                           wreg	equ	0xFE8
   728                           postinc1	equ	0xFE6
   729                           plusw1	equ	0xFE3
   730                           fsr1h	equ	0xFE2
   731                           fsr1l	equ	0xFE1
   732                           bsr	equ	0xFE0
   733                           indf2	equ	0xFDF
   734                           postinc2	equ	0xFDE
   735                           postdec2	equ	0xFDD
   736                           plusw2	equ	0xFDB
   737                           fsr2h	equ	0xFDA
   738                           fsr2l	equ	0xFD9
   739                           status	equ	0xFD8
   740                           
   741                           	psect	dataCOMRAM
   742  000048                     __pdataCOMRAM:
   743                           	opt stack 0
   744  000048                     _clientState:
   745                           	opt stack 0
   746  000048                     	ds	1
   747                           tosu	equ	0xFFF
   748                           tosh	equ	0xFFE
   749                           tosl	equ	0xFFD
   750                           pclath	equ	0xFFA
   751                           tblptru	equ	0xFF8
   752                           tblptrh	equ	0xFF7
   753                           tblptrl	equ	0xFF6
   754                           tablat	equ	0xFF5
   755                           prodh	equ	0xFF4
   756                           prodl	equ	0xFF3
   757                           intcon	equ	0xFF2
   758                           indf0	equ	0xFEF
   759                           postinc0	equ	0xFEE
   760                           fsr0h	equ	0xFEA
   761                           fsr0l	equ	0xFE9
   762                           wreg	equ	0xFE8
   763                           postinc1	equ	0xFE6
   764                           plusw1	equ	0xFE3
   765                           fsr1h	equ	0xFE2
   766                           fsr1l	equ	0xFE1
   767                           bsr	equ	0xFE0
   768                           indf2	equ	0xFDF
   769                           postinc2	equ	0xFDE
   770                           postdec2	equ	0xFDD
   771                           plusw2	equ	0xFDB
   772                           fsr2h	equ	0xFDA
   773                           fsr2l	equ	0xFD9
   774                           status	equ	0xFD8
   775                           
   776                           	psect	bssBANK1
   777  0001BF                     __pbssBANK1:
   778                           	opt stack 0
   779  0001BF                     _ethData:
   780                           	opt stack 0
   781  0001BF                     	ds	7
   782  0001C6                     _dhcpLeaseTime:
   783                           	opt stack 0
   784  0001C6                     	ds	4
   785  0001CA                     _pot_initial_adcResult:
   786                           	opt stack 0
   787  0001CA                     	ds	2
   788  0001CC                     _rcvPayloadLen:
   789                           	opt stack 0
   790  0001CC                     	ds	2
   791  0001CE                     _tcbList:
   792                           	opt stack 0
   793  0001CE                     	ds	2
   794  0001D0                     _pot_init:
   795                           	opt stack 0
   796  0001D0                     	ds	1
   797  0001D1                     _tcpHeader:
   798                           	opt stack 0
   799  0001D1                     	ds	20
   800  0001E5                     _data:
   801                           	opt stack 0
   802  0001E5                     	ds	2
   803                           tosu	equ	0xFFF
   804                           tosh	equ	0xFFE
   805                           tosl	equ	0xFFD
   806                           pclath	equ	0xFFA
   807                           tblptru	equ	0xFF8
   808                           tblptrh	equ	0xFF7
   809                           tblptrl	equ	0xFF6
   810                           tablat	equ	0xFF5
   811                           prodh	equ	0xFF4
   812                           prodl	equ	0xFF3
   813                           intcon	equ	0xFF2
   814                           indf0	equ	0xFEF
   815                           postinc0	equ	0xFEE
   816                           fsr0h	equ	0xFEA
   817                           fsr0l	equ	0xFE9
   818                           wreg	equ	0xFE8
   819                           postinc1	equ	0xFE6
   820                           plusw1	equ	0xFE3
   821                           fsr1h	equ	0xFE2
   822                           fsr1l	equ	0xFE1
   823                           bsr	equ	0xFE0
   824                           indf2	equ	0xFDF
   825                           postinc2	equ	0xFDE
   826                           postdec2	equ	0xFDD
   827                           plusw2	equ	0xFDB
   828                           fsr2h	equ	0xFDA
   829                           fsr2l	equ	0xFD9
   830                           status	equ	0xFD8
   831                           
   832                           	psect	bssBANK2
   833  000200                     __pbssBANK2:
   834                           	opt stack 0
   835  000200                     _led_values:
   836                           	opt stack 0
   837  000200                     	ds	16
   838  000210                     _ipv4DNS:
   839                           	opt stack 0
   840  000210                     	ds	8
   841  000218                     Network_Manage@nowPv:
   842                           	opt stack 0
   843  000218                     	ds	4
   844  00021C                     _dhcpServerId:
   845                           	opt stack 0
   846  00021C                     	ds	4
   847  000220                     _ipv4Router:
   848                           	opt stack 0
   849  000220                     	ds	4
   850  000224                     _ipv4SubnetMask:
   851                           	opt stack 0
   852  000224                     	ds	4
   853  000228                     _remoteIpv4Address:
   854                           	opt stack 0
   855  000228                     	ds	4
   856  00022C                     _rxPacketStatusVector:
   857                           	opt stack 0
   858  00022C                     	ds	4
   859  000230                     _destPort:
   860                           	opt stack 0
   861  000230                     	ds	2
   862  000232                     _nextAvailablePort:
   863                           	opt stack 0
   864  000232                     	ds	2
   865  000234                     _arpMap:
   866                           	opt stack 0
   867  000234                     	ds	104
   868  00029C                     _ipv4Header:
   869                           	opt stack 0
   870  00029C                     	ds	20
   871  0002B0                     _udpHeader:
   872                           	opt stack 0
   873  0002B0                     	ds	8
   874  0002B8                     _arpTimer:
   875                           	opt stack 0
   876  0002B8                     	ds	4
   877  0002BC                     _idle_packet:
   878                           	opt stack 0
   879  0002BC                     	ds	2
   880                           tosu	equ	0xFFF
   881                           tosh	equ	0xFFE
   882                           tosl	equ	0xFFD
   883                           pclath	equ	0xFFA
   884                           tblptru	equ	0xFF8
   885                           tblptrh	equ	0xFF7
   886                           tblptrl	equ	0xFF6
   887                           tablat	equ	0xFF5
   888                           prodh	equ	0xFF4
   889                           prodl	equ	0xFF3
   890                           intcon	equ	0xFF2
   891                           indf0	equ	0xFEF
   892                           postinc0	equ	0xFEE
   893                           fsr0h	equ	0xFEA
   894                           fsr0l	equ	0xFE9
   895                           wreg	equ	0xFE8
   896                           postinc1	equ	0xFE6
   897                           plusw1	equ	0xFE3
   898                           fsr1h	equ	0xFE2
   899                           fsr1l	equ	0xFE1
   900                           bsr	equ	0xFE0
   901                           indf2	equ	0xFDF
   902                           postinc2	equ	0xFDE
   903                           postdec2	equ	0xFDD
   904                           plusw2	equ	0xFDB
   905                           fsr2h	equ	0xFDA
   906                           fsr2l	equ	0xFD9
   907                           status	equ	0xFD8
   908                           
   909                           	psect	cstackBANK2
   910  0002BE                     __pcstackBANK2:
   911                           	opt stack 0
   912  0002BE                     main@old_ip:
   913                           	opt stack 0
   914                           
   915                           ; 4 bytes @ 0x0
   916  0002BE                     	ds	4
   917  0002C2                     main@t:
   918                           	opt stack 0
   919                           
   920                           ; 4 bytes @ 0x4
   921  0002C2                     	ds	4
   922  0002C6                     main@no_ip_display:
   923                           	opt stack 0
   924                           
   925                           ; 1 bytes @ 0x8
   926  0002C6                     	ds	1
   927  0002C7                     main@now_p:
   928                           	opt stack 0
   929                           
   930                           ; 4 bytes @ 0x9
   931  0002C7                     	ds	4
   932  0002CB                     main@ip_timer:
   933                           	opt stack 0
   934                           
   935                           ; 4 bytes @ 0xD
   936  0002CB                     	ds	4
   937  0002CF                     main@str:
   938                           	opt stack 0
   939                           
   940                           ; 32 bytes @ 0x11
   941  0002CF                     	ds	32
   942  0002EF                     main@ip:
   943                           	opt stack 0
   944                           
   945                           ; 4 bytes @ 0x31
   946  0002EF                     	ds	4
   947                           tosu	equ	0xFFF
   948                           tosh	equ	0xFFE
   949                           tosl	equ	0xFFD
   950                           pclath	equ	0xFFA
   951                           tblptru	equ	0xFF8
   952                           tblptrh	equ	0xFF7
   953                           tblptrl	equ	0xFF6
   954                           tablat	equ	0xFF5
   955                           prodh	equ	0xFF4
   956                           prodl	equ	0xFF3
   957                           intcon	equ	0xFF2
   958                           indf0	equ	0xFEF
   959                           postinc0	equ	0xFEE
   960                           fsr0h	equ	0xFEA
   961                           fsr0l	equ	0xFE9
   962                           wreg	equ	0xFE8
   963                           postinc1	equ	0xFE6
   964                           plusw1	equ	0xFE3
   965                           fsr1h	equ	0xFE2
   966                           fsr1l	equ	0xFE1
   967                           bsr	equ	0xFE0
   968                           indf2	equ	0xFDF
   969                           postinc2	equ	0xFDE
   970                           postdec2	equ	0xFDD
   971                           plusw2	equ	0xFDB
   972                           fsr2h	equ	0xFDA
   973                           fsr2l	equ	0xFD9
   974                           status	equ	0xFD8
   975                           
   976                           	psect	cstackBANK1
   977  000100                     __pcstackBANK1:
   978                           	opt stack 0
   979  000100                     ??_TCP_FiniteStateMachine:
   980  000100                     UDP_Receive@udpcksm:
   981                           	opt stack 0
   982                           
   983                           ; 2 bytes @ 0x0
   984  000100                     	ds	2
   985  000102                     ??_UDP_Receive:
   986                           
   987                           ; 0 bytes @ 0x2
   988  000102                     	ds	6
   989  000108                     UDP_Receive@x:
   990                           	opt stack 0
   991                           
   992                           ; 2 bytes @ 0x8
   993  000108                     	ds	2
   994  00010A                     UDP_Receive@hptr:
   995                           	opt stack 0
   996                           
   997                           ; 1 bytes @ 0xA
   998  00010A                     	ds	2
   999  00010C                     TCP_FiniteStateMachine@ret:
  1000                           	opt stack 0
  1001                           
  1002                           ; 1 bytes @ 0xC
  1003  00010C                     	ds	1
  1004  00010D                     TCP_FiniteStateMachine@notAckBytes:
  1005                           	opt stack 0
  1006                           
  1007                           ; 2 bytes @ 0xD
  1008  00010D                     	ds	2
  1009  00010F                     TCP_FiniteStateMachine@event:
  1010                           	opt stack 0
  1011                           
  1012                           ; 1 bytes @ 0xF
  1013  00010F                     	ds	1
  1014  000110                     TCP_FiniteStateMachine@nextState:
  1015                           	opt stack 0
  1016                           
  1017                           ; 1 bytes @ 0x10
  1018  000110                     	ds	1
  1019  000111                     ??_TCP_Update:
  1020  000111                     TCP_Recv@remoteAddress:
  1021                           	opt stack 0
  1022                           
  1023                           ; 4 bytes @ 0x11
  1024  000111                     	ds	4
  1025  000115                     TCP_Recv@length:
  1026                           	opt stack 0
  1027                           
  1028                           ; 2 bytes @ 0x15
  1029  000115                     	ds	2
  1030  000117                     ??_TCP_Recv:
  1031                           
  1032                           ; 0 bytes @ 0x17
  1033  000117                     	ds	2
  1034  000119                     TCP_Update@count:
  1035                           	opt stack 0
  1036                           
  1037                           ; 2 bytes @ 0x19
  1038  000119                     	ds	2
  1039  00011B                     TCP_Update@tcbPtr:
  1040                           	opt stack 0
  1041                           
  1042                           ; 2 bytes @ 0x1B
  1043  00011B                     	ds	24
  1044  000133                     TCP_Recv@count:
  1045                           	opt stack 0
  1046                           
  1047                           ; 1 bytes @ 0x33
  1048  000133                     	ds	1
  1049  000134                     TCP_Recv@tcbPtr:
  1050                           	opt stack 0
  1051                           
  1052                           ; 2 bytes @ 0x34
  1053  000134                     	ds	2
  1054  000136                     ??_IPV4_Packet:
  1055                           
  1056                           ; 0 bytes @ 0x36
  1057  000136                     	ds	28
  1058  000152                     IPV4_Packet@hdrLen:
  1059                           	opt stack 0
  1060                           
  1061                           ; 1 bytes @ 0x52
  1062  000152                     	ds	1
  1063  000153                     IPV4_Packet@length:
  1064                           	opt stack 0
  1065                           
  1066                           ; 2 bytes @ 0x53
  1067  000153                     	ds	2
  1068  000155                     IPV4_Packet@cksm:
  1069                           	opt stack 0
  1070                           
  1071                           ; 2 bytes @ 0x55
  1072  000155                     	ds	2
  1073  000157                     ??_Network_Read:
  1074                           
  1075                           ; 0 bytes @ 0x57
  1076  000157                     	ds	4
  1077  00015B                     Network_Read@debug_str:
  1078                           	opt stack 0
  1079                           
  1080                           ; 80 bytes @ 0x5B
  1081  00015B                     	ds	80
  1082  0001AB                     Network_Read@header:
  1083                           	opt stack 0
  1084                           
  1085                           ; 14 bytes @ 0xAB
  1086  0001AB                     	ds	14
  1087  0001B9                     ??_Network_Manage:
  1088                           
  1089                           ; 0 bytes @ 0xB9
  1090  0001B9                     	ds	1
  1091  0001BA                     Network_Manage@now:
  1092                           	opt stack 0
  1093                           
  1094                           ; 4 bytes @ 0xBA
  1095  0001BA                     	ds	4
  1096  0001BE                     ??_main:
  1097                           
  1098                           ; 0 bytes @ 0xBE
  1099  0001BE                     	ds	1
  1100                           tosu	equ	0xFFF
  1101                           tosh	equ	0xFFE
  1102                           tosl	equ	0xFFD
  1103                           pclath	equ	0xFFA
  1104                           tblptru	equ	0xFF8
  1105                           tblptrh	equ	0xFF7
  1106                           tblptrl	equ	0xFF6
  1107                           tablat	equ	0xFF5
  1108                           prodh	equ	0xFF4
  1109                           prodl	equ	0xFF3
  1110                           intcon	equ	0xFF2
  1111                           indf0	equ	0xFEF
  1112                           postinc0	equ	0xFEE
  1113                           fsr0h	equ	0xFEA
  1114                           fsr0l	equ	0xFE9
  1115                           wreg	equ	0xFE8
  1116                           postinc1	equ	0xFE6
  1117                           plusw1	equ	0xFE3
  1118                           fsr1h	equ	0xFE2
  1119                           fsr1l	equ	0xFE1
  1120                           bsr	equ	0xFE0
  1121                           indf2	equ	0xFDF
  1122                           postinc2	equ	0xFDE
  1123                           postdec2	equ	0xFDD
  1124                           plusw2	equ	0xFDB
  1125                           fsr2h	equ	0xFDA
  1126                           fsr2l	equ	0xFD9
  1127                           status	equ	0xFD8
  1128                           
  1129                           	psect	cstackBANK0
  1130  000060                     __pcstackBANK0:
  1131                           	opt stack 0
  1132  000060                     ??_ETH_TxComputeChecksum:
  1133  000060                     ??_ARPV4_Packet:
  1134  000060                     ??_ARPV4_Request:
  1135  000060                     ?_sprintf:
  1136                           	opt stack 0
  1137  000060                     ?_printf:
  1138                           	opt stack 0
  1139  000060                     sprintf@wh:
  1140                           	opt stack 0
  1141                           
  1142                           ; 2 bytes @ 0x0
  1143  000060                     	ds	2
  1144  000062                     sprintf@f:
  1145                           	opt stack 0
  1146                           
  1147                           ; 1 bytes @ 0x2
  1148  000062                     	ds	2
  1149  000064                     printf@f:
  1150                           	opt stack 0
  1151                           
  1152                           ; 1 bytes @ 0x4
  1153  000064                     	ds	1
  1154  000065                     printf@ap:
  1155                           	opt stack 0
  1156                           
  1157                           ; 1 bytes @ 0x5
  1158  000065                     	ds	1
  1159  000066                     printf@pb:
  1160                           	opt stack 0
  1161                           
  1162                           ; 5 bytes @ 0x6
  1163  000066                     	ds	5
  1164  00006B                     ??_IPV4_Send:
  1165  00006B                     sprintf@ap:
  1166                           	opt stack 0
  1167  00006B                     SYSLOG_Write@t:
  1168                           	opt stack 0
  1169  00006B                     SYSLOG_Init@t:
  1170                           	opt stack 0
  1171                           
  1172                           ; 4 bytes @ 0xB
  1173  00006B                     	ds	1
  1174  00006C                     sprintf@pb:
  1175                           	opt stack 0
  1176                           
  1177                           ; 5 bytes @ 0xC
  1178  00006C                     	ds	1
  1179  00006D                     ETH_Copy@len:
  1180                           	opt stack 0
  1181                           
  1182                           ; 2 bytes @ 0xD
  1183  00006D                     	ds	2
  1184  00006F                     IPV4_Send@ret:
  1185                           	opt stack 0
  1186  00006F                     ETH_Copy@timer:
  1187                           	opt stack 0
  1188                           
  1189                           ; 2 bytes @ 0xF
  1190  00006F                     	ds	1
  1191  000070                     IPV4_Send@cksm:
  1192                           	opt stack 0
  1193                           
  1194                           ; 2 bytes @ 0x10
  1195  000070                     	ds	1
  1196  000071                     ETH_Copy@tmp_len:
  1197                           	opt stack 0
  1198                           
  1199                           ; 2 bytes @ 0x11
  1200  000071                     	ds	1
  1201  000072                     IPV4_Send@totalLength:
  1202                           	opt stack 0
  1203                           
  1204                           ; 2 bytes @ 0x12
  1205  000072                     	ds	2
  1206  000074                     ??_UDP_Send:
  1207                           
  1208                           ; 0 bytes @ 0x14
  1209  000074                     	ds	5
  1210  000079                     UDP_Send@cksm:
  1211                           	opt stack 0
  1212                           
  1213                           ; 2 bytes @ 0x19
  1214  000079                     	ds	2
  1215  00007B                     ARPV4_Request@ret:
  1216                           	opt stack 0
  1217  00007B                     UDP_Send@udpLength:
  1218                           	opt stack 0
  1219                           
  1220                           ; 2 bytes @ 0x1B
  1221  00007B                     	ds	1
  1222  00007C                     ARPV4_Request@header:
  1223                           	opt stack 0
  1224                           
  1225                           ; 28 bytes @ 0x1C
  1226  00007C                     	ds	4
  1227  000080                     ARPV4_Packet@length:
  1228                           	opt stack 0
  1229                           
  1230                           ; 2 bytes @ 0x20
  1231  000080                     	ds	2
  1232  000082                     ARPV4_Packet@mergeFlag:
  1233                           	opt stack 0
  1234                           
  1235                           ; 1 bytes @ 0x22
  1236  000082                     	ds	1
  1237  000083                     ARPV4_Packet@ret:
  1238                           	opt stack 0
  1239                           
  1240                           ; 1 bytes @ 0x23
  1241  000083                     	ds	1
  1242  000084                     ARPV4_Packet@arpPtr:
  1243                           	opt stack 0
  1244                           
  1245                           ; 2 bytes @ 0x24
  1246  000084                     	ds	2
  1247  000086                     ARPV4_Packet@x:
  1248                           	opt stack 0
  1249                           
  1250                           ; 1 bytes @ 0x26
  1251  000086                     	ds	1
  1252  000087                     ARPV4_Packet@x_1672:
  1253                           	opt stack 0
  1254                           
  1255                           ; 1 bytes @ 0x27
  1256  000087                     	ds	1
  1257  000088                     ARPV4_Packet@entryPointer:
  1258                           	opt stack 0
  1259                           
  1260                           ; 2 bytes @ 0x28
  1261  000088                     	ds	2
  1262  00008A                     ARPV4_Packet@header:
  1263                           	opt stack 0
  1264                           
  1265                           ; 28 bytes @ 0x2A
  1266  00008A                     	ds	14
  1267  000098                     IPv4_Start@targetAddress:
  1268                           	opt stack 0
  1269                           
  1270                           ; 4 bytes @ 0x38
  1271  000098                     	ds	4
  1272  00009C                     IPv4_Start@macAddress:
  1273                           	opt stack 0
  1274                           
  1275                           ; 2 bytes @ 0x3C
  1276  00009C                     	ds	2
  1277  00009E                     IPv4_Start@ret:
  1278                           	opt stack 0
  1279                           
  1280                           ; 1 bytes @ 0x3E
  1281  00009E                     	ds	1
  1282  00009F                     ICMP_EchoReply@ipv4Hdr:
  1283                           	opt stack 0
  1284  00009F                     TCP_Snd@tcbPtr:
  1285                           	opt stack 0
  1286  00009F                     UDP_Start@destIP:
  1287                           	opt stack 0
  1288                           
  1289                           ; 4 bytes @ 0x3F
  1290  00009F                     	ds	2
  1291  0000A1                     ??_ICMP_EchoReply:
  1292  0000A1                     ??_TCP_Snd:
  1293                           
  1294                           ; 0 bytes @ 0x41
  1295  0000A1                     	ds	2
  1296  0000A3                     UDP_Start@srcPort:
  1297                           	opt stack 0
  1298                           
  1299                           ; 2 bytes @ 0x43
  1300  0000A3                     	ds	2
  1301  0000A5                     UDP_Start@dstPort:
  1302                           	opt stack 0
  1303                           
  1304                           ; 2 bytes @ 0x45
  1305  0000A5                     	ds	2
  1306  0000A7                     ??_DEMO_UDP_Send:
  1307  0000A7                     DHCP_Request@started:
  1308                           	opt stack 0
  1309                           
  1310                           ; 1 bytes @ 0x47
  1311  0000A7                     	ds	1
  1312  0000A8                     DHCP_Request@type:
  1313                           	opt stack 0
  1314                           
  1315                           ; 1 bytes @ 0x48
  1316  0000A8                     	ds	1
  1317  0000A9                     ICMP_EchoReply@cksm:
  1318                           	opt stack 0
  1319  0000A9                     DHCP_Request@ethMAC:
  1320                           	opt stack 0
  1321                           
  1322                           ; 6 bytes @ 0x49
  1323  0000A9                     	ds	2
  1324  0000AB                     DEMO_UDP_Send@started:
  1325                           	opt stack 0
  1326  0000AB                     ICMP_EchoReply@ipv4PayloadLength:
  1327                           	opt stack 0
  1328                           
  1329                           ; 2 bytes @ 0x4B
  1330  0000AB                     	ds	1
  1331  0000AC                     DEMO_UDP_Send@pot_adcResult:
  1332                           	opt stack 0
  1333                           
  1334                           ; 2 bytes @ 0x4C
  1335  0000AC                     	ds	1
  1336  0000AD                     ICMP_EchoReply@ret:
  1337                           	opt stack 0
  1338                           
  1339                           ; 1 bytes @ 0x4D
  1340  0000AD                     	ds	1
  1341  0000AE                     ICMP_EchoReply@icmpHdr:
  1342                           	opt stack 0
  1343                           
  1344                           ; 1 bytes @ 0x4E
  1345  0000AE                     	ds	1
  1346  0000AF                     DHCP_Handler@length:
  1347                           	opt stack 0
  1348  0000AF                     ICMP_Receive@ipv4Hdr:
  1349                           	opt stack 0
  1350  0000AF                     
  1351                           ; 2 bytes @ 0x4F
  1352  0000AF                     	ds	2
  1353  0000B1                     ??_DHCP_Handler:
  1354  0000B1                     ??_ICMP_Receive:
  1355  0000B1                     DEMO_UDP_Recv@str:
  1356                           	opt stack 0
  1357                           
  1358                           ; 32 bytes @ 0x51
  1359  0000B1                     	ds	2
  1360  0000B3                     DHCP_Handler@ip:
  1361                           	opt stack 0
  1362                           
  1363                           ; 8 bytes @ 0x53
  1364  0000B3                     	ds	3
  1365  0000B6                     ICMP_Receive@icmpHdr:
  1366                           	opt stack 0
  1367                           
  1368                           ; 8 bytes @ 0x56
  1369  0000B6                     	ds	5
  1370  0000BB                     DHCP_Handler@v:
  1371                           	opt stack 0
  1372                           
  1373                           ; 4 bytes @ 0x5B
  1374  0000BB                     	ds	4
  1375  0000BF                     DHCP_Handler@v16:
  1376                           	opt stack 0
  1377                           
  1378                           ; 2 bytes @ 0x5F
  1379  0000BF                     	ds	2
  1380  0000C1                     DHCP_Handler@option:
  1381                           	opt stack 0
  1382                           
  1383                           ; 1 bytes @ 0x61
  1384  0000C1                     	ds	1
  1385  0000C2                     DHCP_Handler@ethPktMAC:
  1386                           	opt stack 0
  1387                           
  1388                           ; 6 bytes @ 0x62
  1389  0000C2                     	ds	6
  1390  0000C8                     DHCP_Handler@ethMAC:
  1391                           	opt stack 0
  1392                           
  1393                           ; 6 bytes @ 0x68
  1394  0000C8                     	ds	6
  1395  0000CE                     DHCP_Handler@optionLength:
  1396                           	opt stack 0
  1397                           
  1398                           ; 1 bytes @ 0x6E
  1399  0000CE                     	ds	1
  1400  0000CF                     DHCP_Handler@myip:
  1401                           	opt stack 0
  1402                           
  1403                           ; 4 bytes @ 0x6F
  1404  0000CF                     	ds	2
  1405  0000D1                     TCP_Snd@data:
  1406                           	opt stack 0
  1407  0000D1                     DEMO_UDP_Recv@str1:
  1408                           	opt stack 0
  1409                           
  1410                           ; 16 bytes @ 0x71
  1411  0000D1                     	ds	2
  1412  0000D3                     TCP_Snd@cksm:
  1413                           	opt stack 0
  1414                           
  1415                           ; 2 bytes @ 0x73
  1416  0000D3                     	ds	2
  1417  0000D5                     TCP_Snd@payloadLength:
  1418                           	opt stack 0
  1419                           
  1420                           ; 2 bytes @ 0x75
  1421  0000D5                     	ds	2
  1422  0000D7                     TCP_Snd@ret:
  1423                           	opt stack 0
  1424                           
  1425                           ; 1 bytes @ 0x77
  1426  0000D7                     	ds	1
  1427  0000D8                     TCP_Snd@tcpDataLength:
  1428                           	opt stack 0
  1429                           
  1430                           ; 2 bytes @ 0x78
  1431  0000D8                     	ds	2
  1432  0000DA                     TCP_Snd@txHeader:
  1433                           	opt stack 0
  1434                           
  1435                           ; 20 bytes @ 0x7A
  1436  0000DA                     	ds	7
  1437  0000E1                     DEMO_UDP_Recv@str2:
  1438                           	opt stack 0
  1439                           
  1440                           ; 16 bytes @ 0x81
  1441  0000E1                     	ds	13
  1442  0000EE                     TCP_PayloadSave@len:
  1443                           	opt stack 0
  1444                           
  1445                           ; 2 bytes @ 0x8E
  1446  0000EE                     	ds	2
  1447  0000F0                     ??_TCP_PayloadSave:
  1448                           
  1449                           ; 0 bytes @ 0x90
  1450  0000F0                     	ds	1
  1451  0000F1                     DEMO_UDP_Recv@temperature:
  1452                           	opt stack 0
  1453                           
  1454                           ; 2 bytes @ 0x91
  1455  0000F1                     	ds	2
  1456  0000F3                     DEMO_UDP_Recv@local_ip:
  1457                           	opt stack 0
  1458                           
  1459                           ; 4 bytes @ 0x93
  1460  0000F3                     	ds	5
  1461  0000F8                     DEMO_UDP_Recv@str_len:
  1462                           	opt stack 0
  1463                           
  1464                           ; 1 bytes @ 0x98
  1465  0000F8                     	ds	1
  1466  0000F9                     DEMO_UDP_Recv@destPort:
  1467                           	opt stack 0
  1468                           
  1469                           ; 2 bytes @ 0x99
  1470  0000F9                     	ds	2
  1471  0000FB                     DEMO_UDP_Recv@started:
  1472                           	opt stack 0
  1473                           
  1474                           ; 1 bytes @ 0x9B
  1475  0000FB                     	ds	1
  1476  0000FC                     DEMO_UDP_Recv@dest_ip:
  1477                           	opt stack 0
  1478                           
  1479                           ; 4 bytes @ 0x9C
  1480  0000FC                     	ds	1
  1481  0000FD                     TCP_PayloadSave@buffer_size:
  1482                           	opt stack 0
  1483                           
  1484                           ; 2 bytes @ 0x9D
  1485  0000FD                     	ds	3
  1486                           tosu	equ	0xFFF
  1487                           tosh	equ	0xFFE
  1488                           tosl	equ	0xFFD
  1489                           pclath	equ	0xFFA
  1490                           tblptru	equ	0xFF8
  1491                           tblptrh	equ	0xFF7
  1492                           tblptrl	equ	0xFF6
  1493                           tablat	equ	0xFF5
  1494                           prodh	equ	0xFF4
  1495                           prodl	equ	0xFF3
  1496                           intcon	equ	0xFF2
  1497                           indf0	equ	0xFEF
  1498                           postinc0	equ	0xFEE
  1499                           fsr0h	equ	0xFEA
  1500                           fsr0l	equ	0xFE9
  1501                           wreg	equ	0xFE8
  1502                           postinc1	equ	0xFE6
  1503                           plusw1	equ	0xFE3
  1504                           fsr1h	equ	0xFE2
  1505                           fsr1l	equ	0xFE1
  1506                           bsr	equ	0xFE0
  1507                           indf2	equ	0xFDF
  1508                           postinc2	equ	0xFDE
  1509                           postdec2	equ	0xFDD
  1510                           plusw2	equ	0xFDB
  1511                           fsr2h	equ	0xFDA
  1512                           fsr2l	equ	0xFD9
  1513                           status	equ	0xFD8
  1514                           
  1515                           	psect	cstackCOMRAM
  1516  000001                     __pcstackCOMRAM:
  1517                           	opt stack 0
  1518  000001                     i1PHY_WaitForBusy@ret:
  1519                           	opt stack 0
  1520                           
  1521                           ; 1 bytes @ 0x0
  1522  000001                     	ds	1
  1523  000002                     i1PHY_WaitForBusy@timeout:
  1524                           	opt stack 0
  1525                           
  1526                           ; 1 bytes @ 0x1
  1527  000002                     	ds	1
  1528  000003                     ?i1_PHY_Read:
  1529                           	opt stack 0
  1530                           
  1531                           ; 4 bytes @ 0x2
  1532  000003                     	ds	4
  1533  000007                     i1PHY_Read@reg:
  1534                           	opt stack 0
  1535                           
  1536                           ; 1 bytes @ 0x6
  1537  000007                     	ds	1
  1538  000008                     i1PHY_Read@ret:
  1539                           	opt stack 0
  1540                           
  1541                           ; 4 bytes @ 0x7
  1542  000008                     	ds	4
  1543  00000C                     ?i1_ETH_readLinkStatus:
  1544                           	opt stack 0
  1545                           
  1546                           ; 4 bytes @ 0xB
  1547  00000C                     	ds	4
  1548  000010                     i1ETH_CheckLinkUp@value:
  1549                           	opt stack 0
  1550                           
  1551                           ; 4 bytes @ 0xF
  1552  000010                     	ds	4
  1553  000014                     ??_low_isr:
  1554  000014                     
  1555                           ; 0 bytes @ 0x13
  1556  000014                     	ds	3
  1557  000017                     ??_ETH_Flush:
  1558  000017                     ??_DEMO_UDP_ClaimIPCheck:
  1559  000017                     ?_memcmp:
  1560                           	opt stack 0
  1561  000017                     ?_ADC_GetConversion:
  1562                           	opt stack 0
  1563  000017                     ?_ETH_Read16:
  1564                           	opt stack 0
  1565  000017                     ?_ETH_ReadBlock:
  1566                           	opt stack 0
  1567  000017                     ?_ETH_ComputeChecksum:
  1568                           	opt stack 0
  1569  000017                     ?_ETH_GetByteCount:
  1570                           	opt stack 0
  1571  000017                     ?_ARPV4_Lookup:
  1572                           	opt stack 0
  1573  000017                     ?_IPV4_PseudoHeaderChecksum:
  1574                           	opt stack 0
  1575  000017                     ?_UDP_GetDestPort:
  1576                           	opt stack 0
  1577  000017                     ?___wmul:
  1578                           	opt stack 0
  1579  000017                     ?___lwdiv:
  1580                           	opt stack 0
  1581  000017                     ?_time:
  1582                           	opt stack 0
  1583  000017                     ?_ETH_Read32:
  1584                           	opt stack 0
  1585  000017                     ?_IPV4_GetMyIP:
  1586                           	opt stack 0
  1587  000017                     ?_UDP_GetDestIP:
  1588                           	opt stack 0
  1589  000017                     lcd_write_ctrl@c:
  1590                           	opt stack 0
  1591  000017                     lcd_write_data@d:
  1592                           	opt stack 0
  1593  000017                     LED_Init@x:
  1594                           	opt stack 0
  1595  000017                     putch@data:
  1596                           	opt stack 0
  1597  000017                     PHY_WaitForBusy@ret:
  1598                           	opt stack 0
  1599  000017                     ETH_Read8@ret:
  1600                           	opt stack 0
  1601  000017                     ETH_Write8@data:
  1602                           	opt stack 0
  1603  000017                     ETH_GetMAC@mac:
  1604                           	opt stack 0
  1605  000017                     ARPV4_Init@x:
  1606                           	opt stack 0
  1607  000017                     DEMO_UDP_SetClaimIP@claim_ip:
  1608                           	opt stack 0
  1609  000017                     memcmp@s2:
  1610                           	opt stack 0
  1611  000017                     time@t:
  1612                           	opt stack 0
  1613  000017                     ETH_ReadBlock@buffer:
  1614                           	opt stack 0
  1615  000017                     ETH_Write16@data:
  1616                           	opt stack 0
  1617  000017                     ETH_WriteBlock@buffer:
  1618                           	opt stack 0
  1619  000017                     ETH_WriteStart@dest_mac:
  1620                           	opt stack 0
  1621  000017                     ETH_Send@packetEnd:
  1622                           	opt stack 0
  1623  000017                     ETH_Insert@len:
  1624                           	opt stack 0
  1625  000017                     ETH_Dump@length:
  1626                           	opt stack 0
  1627  000017                     ETH_ComputeChecksum@len:
  1628                           	opt stack 0
  1629  000017                     ARPV4_Update@entryPointer:
  1630                           	opt stack 0
  1631  000017                     IPV4_PseudoHeaderChecksum@payloadLen:
  1632                           	opt stack 0
  1633  000017                     TCB_Reset@tcbPtr:
  1634                           	opt stack 0
  1635  000017                     ___wmul@multiplier:
  1636                           	opt stack 0
  1637  000017                     ___lwdiv@dividend:
  1638                           	opt stack 0
  1639  000017                     memset@p1:
  1640                           	opt stack 0
  1641  000017                     ETH_Write32@data:
  1642                           	opt stack 0
  1643  000017                     ARPV4_Lookup@ip_address:
  1644                           	opt stack 0
  1645                           
  1646                           ; 4 bytes @ 0x16
  1647  000017                     	ds	1
  1648  000018                     ??_lcd_init:
  1649  000018                     ??_lcd_clear:
  1650  000018                     lcd_putch@c:
  1651                           	opt stack 0
  1652  000018                     lcd_goto1@pos:
  1653                           	opt stack 0
  1654  000018                     lcd_goto2@pos:
  1655                           	opt stack 0
  1656  000018                     PHY_WaitForBusy@timeout:
  1657                           	opt stack 0
  1658  000018                     UDP_Write8@data:
  1659                           	opt stack 0
  1660  000018                     DEMO_UDP_ClaimIPCheck@ret:
  1661                           	opt stack 0
  1662  000018                     DHCP_WriteZeros@length:
  1663                           	opt stack 0
  1664  000018                     memcmp@n:
  1665                           	opt stack 0
  1666                           
  1667                           ; 2 bytes @ 0x17
  1668  000018                     	ds	1
  1669  000019                     ??_ADC_GetConversion:
  1670  000019                     ??_IPV4_PseudoHeaderChecksum:
  1671  000019                     ??_TCB_Reset:
  1672  000019                     ?_PHY_Read:
  1673                           	opt stack 0
  1674  000019                     ARPV4_Update@x:
  1675                           	opt stack 0
  1676  000019                     lcd_puts@s:
  1677                           	opt stack 0
  1678  000019                     PHY_Write@data:
  1679                           	opt stack 0
  1680  000019                     ETH_Read16@ret:
  1681                           	opt stack 0
  1682  000019                     ETH_ReadBlock@length:
  1683                           	opt stack 0
  1684  000019                     ETH_WriteBlock@length:
  1685                           	opt stack 0
  1686  000019                     ETH_WriteStart@type:
  1687                           	opt stack 0
  1688  000019                     ETH_Insert@offset:
  1689                           	opt stack 0
  1690  000019                     ETH_ComputeChecksum@seed:
  1691                           	opt stack 0
  1692  000019                     ETH_GetByteCount@val:
  1693                           	opt stack 0
  1694  000019                     UDP_Write16@data:
  1695                           	opt stack 0
  1696  000019                     ___wmul@multiplicand:
  1697                           	opt stack 0
  1698  000019                     ___lwdiv@divisor:
  1699                           	opt stack 0
  1700  000019                     memset@c:
  1701                           	opt stack 0
  1702                           
  1703                           ; 2 bytes @ 0x18
  1704  000019                     	ds	1
  1705  00001A                     ??_memcmp:
  1706  00001A                     ADC_GetConversion@channel:
  1707                           	opt stack 0
  1708                           
  1709                           ; 1 bytes @ 0x19
  1710  00001A                     	ds	1
  1711  00001B                     ??_ETH_ReadBlock:
  1712  00001B                     ??_ETH_WriteStart:
  1713  00001B                     ??_ETH_ComputeChecksum:
  1714  00001B                     ??_TCP_ParseTCPOptions:
  1715  00001B                     ?_DEMO_UDP_MeasureTemp:
  1716                           	opt stack 0
  1717  00001B                     time@gie_val:
  1718                           	opt stack 0
  1719  00001B                     PHY_Write@reg:
  1720                           	opt stack 0
  1721  00001B                     ___lwdiv@counter:
  1722                           	opt stack 0
  1723  00001B                     ETH_WriteBlock@p:
  1724                           	opt stack 0
  1725  00001B                     ETH_Insert@current_tx_ptr:
  1726                           	opt stack 0
  1727  00001B                     ___wmul@product:
  1728                           	opt stack 0
  1729  00001B                     memset@n:
  1730                           	opt stack 0
  1731  00001B                     ETH_Read32@ret:
  1732                           	opt stack 0
  1733  00001B                     UDP_Write32@data:
  1734                           	opt stack 0
  1735                           
  1736                           ; 4 bytes @ 0x1A
  1737  00001B                     	ds	1
  1738  00001C                     PHY_Write@GIESave:
  1739                           	opt stack 0
  1740  00001C                     memcmp@s1:
  1741                           	opt stack 0
  1742  00001C                     ETH_ReadBlock@len:
  1743                           	opt stack 0
  1744  00001C                     ___lwdiv@quotient:
  1745                           	opt stack 0
  1746  00001C                     time@the_time:
  1747                           	opt stack 0
  1748                           
  1749                           ; 4 bytes @ 0x1B
  1750  00001C                     	ds	1
  1751  00001D                     PHY_Read@reg:
  1752                           	opt stack 0
  1753  00001D                     ETH_Insert@data:
  1754                           	opt stack 0
  1755  00001D                     IPV4_PseudoHeaderChecksum@v:
  1756                           	opt stack 0
  1757  00001D                     TCP_ParseTCPOptions@ret:
  1758                           	opt stack 0
  1759  00001D                     UDP_WriteBlock@length:
  1760                           	opt stack 0
  1761  00001D                     DEMO_UDP_MeasureTemp@adcResult:
  1762                           	opt stack 0
  1763  00001D                     memset@p:
  1764                           	opt stack 0
  1765  00001D                     ARPV4_Request@destAddress:
  1766                           	opt stack 0
  1767                           
  1768                           ; 4 bytes @ 0x1C
  1769  00001D                     	ds	1
  1770  00001E                     ?___lwmod:
  1771                           	opt stack 0
  1772  00001E                     IPV4_PseudoHeaderChecksum@len:
  1773                           	opt stack 0
  1774  00001E                     TCP_ParseTCPOptions@opt:
  1775                           	opt stack 0
  1776  00001E                     ETH_ReadBlock@p:
  1777                           	opt stack 0
  1778  00001E                     ___lwmod@dividend:
  1779                           	opt stack 0
  1780  00001E                     PHY_Read@ret:
  1781                           	opt stack 0
  1782                           
  1783                           ; 4 bytes @ 0x1D
  1784  00001E                     	ds	1
  1785  00001F                     UDP_WriteBlock@data:
  1786                           	opt stack 0
  1787  00001F                     ARPV4_Lookup@entry_pointer:
  1788                           	opt stack 0
  1789  00001F                     TCP_ParseTCPOptions@tcpOptionsSize:
  1790                           	opt stack 0
  1791  00001F                     ETH_ComputeChecksum@cksm:
  1792                           	opt stack 0
  1793  00001F                     IPV4_PseudoHeaderChecksum@cksm:
  1794                           	opt stack 0
  1795                           
  1796                           ; 4 bytes @ 0x1E
  1797  00001F                     	ds	1
  1798  000020                     UDP_ReadBlock@data:
  1799                           	opt stack 0
  1800  000020                     ___lwmod@divisor:
  1801                           	opt stack 0
  1802                           
  1803                           ; 2 bytes @ 0x1F
  1804  000020                     	ds	1
  1805  000021                     ARPV4_Lookup@x:
  1806                           	opt stack 0
  1807                           
  1808                           ; 1 bytes @ 0x20
  1809  000021                     	ds	1
  1810  000022                     ?_ETH_readLinkStatus:
  1811                           	opt stack 0
  1812  000022                     ___lwmod@counter:
  1813                           	opt stack 0
  1814  000022                     UDP_ReadBlock@length:
  1815                           	opt stack 0
  1816  000022                     IPv4_Start@destAddress:
  1817                           	opt stack 0
  1818                           
  1819                           ; 4 bytes @ 0x21
  1820  000022                     	ds	1
  1821  000023                     ?__doprnt:
  1822                           	opt stack 0
  1823  000023                     __doprnt@f:
  1824                           	opt stack 0
  1825  000023                     ETH_ComputeChecksum@v:
  1826                           	opt stack 0
  1827  000023                     IPV4_PseudoHeaderChecksum@tmp:
  1828                           	opt stack 0
  1829                           
  1830                           ; 12 bytes @ 0x22
  1831  000023                     	ds	1
  1832  000024                     __doprnt@ap:
  1833                           	opt stack 0
  1834                           
  1835                           ; 1 bytes @ 0x23
  1836  000024                     	ds	1
  1837  000025                     ??__doprnt:
  1838  000025                     ?_ETH_TxComputeChecksum:
  1839                           	opt stack 0
  1840  000025                     ?_ETH_RxComputeChecksum:
  1841                           	opt stack 0
  1842  000025                     ETH_TxComputeChecksum@position:
  1843                           	opt stack 0
  1844  000025                     ETH_RxComputeChecksum@len:
  1845                           	opt stack 0
  1846                           
  1847                           ; 2 bytes @ 0x24
  1848  000025                     	ds	1
  1849  000026                     IPv4_Start@protocol:
  1850                           	opt stack 0
  1851  000026                     ETH_CheckLinkUp@value:
  1852                           	opt stack 0
  1853                           
  1854                           ; 4 bytes @ 0x25
  1855  000026                     	ds	1
  1856  000027                     ??_IPv4_Start:
  1857  000027                     ETH_TxComputeChecksum@len:
  1858                           	opt stack 0
  1859  000027                     ETH_RxComputeChecksum@seed:
  1860                           	opt stack 0
  1861                           
  1862                           ; 2 bytes @ 0x26
  1863  000027                     	ds	1
  1864  000028                     __doprnt@idx:
  1865                           	opt stack 0
  1866                           
  1867                           ; 1 bytes @ 0x27
  1868  000028                     	ds	1
  1869  000029                     ??_ETH_RxComputeChecksum:
  1870  000029                     __doprnt@prec:
  1871                           	opt stack 0
  1872  000029                     ETH_TxComputeChecksum@seed:
  1873                           	opt stack 0
  1874                           
  1875                           ; 2 bytes @ 0x28
  1876  000029                     	ds	1
  1877  00002A                     ??_ETH_Init:
  1878  00002A                     __doprnt@cp:
  1879                           	opt stack 0
  1880                           
  1881                           ; 2 bytes @ 0x29
  1882  00002A                     	ds	1
  1883  00002B                     ETH_TxComputeChecksum@rxptr:
  1884                           	opt stack 0
  1885                           
  1886                           ; 2 bytes @ 0x2A
  1887  00002B                     	ds	1
  1888  00002C                     __doprnt@flag:
  1889                           	opt stack 0
  1890                           
  1891                           ; 1 bytes @ 0x2B
  1892  00002C                     	ds	1
  1893  00002D                     ETH_Init@mac:
  1894                           	opt stack 0
  1895  00002D                     ETH_RxComputeChecksum@rxptr:
  1896                           	opt stack 0
  1897  00002D                     __doprnt@val:
  1898                           	opt stack 0
  1899  00002D                     ETH_TxComputeChecksum@cksm:
  1900                           	opt stack 0
  1901                           
  1902                           ; 4 bytes @ 0x2C
  1903  00002D                     	ds	1
  1904  00002E                     
  1905                           ; 0 bytes @ 0x2D
  1906  00002E                     	ds	1
  1907  00002F                     UDP_Start@ret:
  1908                           	opt stack 0
  1909  00002F                     __doprnt@c:
  1910                           	opt stack 0
  1911  00002F                     ETH_RxComputeChecksum@cksm:
  1912                           	opt stack 0
  1913                           
  1914                           ; 4 bytes @ 0x2E
  1915  00002F                     	ds	1
  1916  000030                     __doprnt@pb:
  1917                           	opt stack 0
  1918                           
  1919                           ; 1 bytes @ 0x2F
  1920  000030                     	ds	1
  1921  000031                     IPV4_Send@payloadLength:
  1922                           	opt stack 0
  1923  000031                     SYSLOG_Write@message:
  1924                           	opt stack 0
  1925                           
  1926                           ; 2 bytes @ 0x30
  1927  000031                     	ds	2
  1928  000033                     tosu	equ	0xFFF
  1929                           tosh	equ	0xFFE
  1930                           tosl	equ	0xFFD
  1931                           pclath	equ	0xFFA
  1932                           tblptru	equ	0xFF8
  1933                           tblptrh	equ	0xFF7
  1934                           tblptrl	equ	0xFF6
  1935                           tablat	equ	0xFF5
  1936                           prodh	equ	0xFF4
  1937                           prodl	equ	0xFF3
  1938                           intcon	equ	0xFF2
  1939                           indf0	equ	0xFEF
  1940                           postinc0	equ	0xFEE
  1941                           fsr0h	equ	0xFEA
  1942                           fsr0l	equ	0xFE9
  1943                           wreg	equ	0xFE8
  1944                           postinc1	equ	0xFE6
  1945                           plusw1	equ	0xFE3
  1946                           fsr1h	equ	0xFE2
  1947                           fsr1l	equ	0xFE1
  1948                           bsr	equ	0xFE0
  1949                           indf2	equ	0xFDF
  1950                           postinc2	equ	0xFDE
  1951                           postdec2	equ	0xFDD
  1952                           plusw2	equ	0xFDB
  1953                           fsr2h	equ	0xFDA
  1954                           fsr2l	equ	0xFD9
  1955                           status	equ	0xFD8
  1956                           
  1957                           ; 0 bytes @ 0x32
  1958 ;;
  1959 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1960 ;;
  1961 ;; *************** function _main *****************
  1962 ;; Defined at:
  1963 ;;		line 70 in file "main.c"
  1964 ;; Parameters:    Size  Location     Type
  1965 ;;		None
  1966 ;; Auto vars:     Size  Location     Type
  1967 ;;  now_p           4    9[BANK2 ] long 
  1968 ;;  str            32   17[BANK2 ] unsigned char [32]
  1969 ;;  ip              4   49[BANK2 ] unsigned long 
  1970 ;;  ip_timer        4   13[BANK2 ] long 
  1971 ;;  t               4    4[BANK2 ] long 
  1972 ;;  old_ip          4    0[BANK2 ] unsigned long 
  1973 ;;  no_ip_displa    1    8[BANK2 ] unsigned char 
  1974 ;; Return value:  Size  Location     Type
  1975 ;;		None               void
  1976 ;; Registers used:
  1977 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  1978 ;; Tracked objects:
  1979 ;;		On entry : 0/0
  1980 ;;		On exit  : E/0
  1981 ;;		Unchanged: 0/0
  1982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1984 ;;      Locals:         0       0       0      53       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1985 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1986 ;;      Totals:         0       0       1      53       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1987 ;;Total ram usage:       54 bytes
  1988 ;; Hardware stack levels required when called:   19
  1989 ;; This function calls:
  1990 ;;		_DEMO_UDP_IPLockTimer
  1991 ;;		_DEMO_UDP_Send
  1992 ;;		_IPV4_GetMyIP
  1993 ;;		_Network_Init
  1994 ;;		_Network_Manage
  1995 ;;		_Network_WaitForLink
  1996 ;;		_SYSLOG_Init
  1997 ;;		_SYSLOG_Write
  1998 ;;		_initHW
  1999 ;;		_lcd_goto1
  2000 ;;		_lcd_puts
  2001 ;;		_memset
  2002 ;;		_sprintf
  2003 ;;		_time
  2004 ;; This function is called by:
  2005 ;;		Startup code after reset
  2006 ;; This function uses a non-reentrant model
  2007 ;;
  2008                           
  2009                           	psect	text0
  2010  004BB4                     __ptext0:
  2011                           	opt stack 0
  2012  004BB4                     _main:
  2013                           	opt stack 12
  2014                           
  2015                           ;main.c: 72: time_t t;
  2016                           ;main.c: 73: unsigned long ip, old_ip;
  2017                           ;main.c: 74: char str[32];
  2018                           ;main.c: 75: bool no_ip_display = 1;
  2019                           
  2020                           ; BSR set to: 14
  2021                           ;incstack = 0
  2022  004BB4  0E01               	movlw	1
  2023  004BB6  0102               	movlb	2	; () banked
  2024  004BB8  6FC6               	movwf	main@no_ip_display& (0+255),b
  2025                           
  2026                           ; BSR set to: 2
  2027                           ;main.c: 76: time_t ip_timer;
  2028                           ;main.c: 78: initHW();
  2029  004BBA  EC96  F02F         	call	_initHW	;wreg free
  2030                           
  2031                           ;main.c: 79: Network_Init();
  2032  004BBE  EC3D  F031         	call	_Network_Init	;wreg free
  2033                           
  2034                           ; BSR set to: 2
  2035                           ;main.c: 80: SYSLOG_Init();
  2036  004BC2  EC00  F030         	call	_SYSLOG_Init	;wreg free
  2037                           
  2038                           ;main.c: 83: IPEN = 1;
  2039  004BC6  8ED0               	bsf	4048,7,c	;volatile
  2040                           
  2041                           ;main.c: 84: GIEH = 1;
  2042  004BC8  8EF2               	bsf	intcon,7,c	;volatile
  2043                           
  2044                           ;main.c: 85: GIEL = 1;
  2045  004BCA  8CF2               	bsf	intcon,6,c	;volatile
  2046                           
  2047                           ;main.c: 88: SYSLOG_Write("Waiting for Link");
  2048  004BCC  0E70               	movlw	low STR_5
  2049  004BCE  D889               	call	PL651	;call to abstracted procedure
  2050  004BD0  EC06  F031         	call	_SYSLOG_Write	;wreg free
  2051                           
  2052                           ;main.c: 89: Network_WaitForLink();
  2053  004BD4  EC3A  F032         	call	_Network_WaitForLink	;wreg free
  2054                           
  2055                           ;main.c: 90: SYSLOG_Write("Link started");
  2056  004BD8  0E90               	movlw	low STR_6
  2057  004BDA  D883               	call	PL651	;call to abstracted procedure
  2058  004BDC  EC06  F031         	call	_SYSLOG_Write	;wreg free
  2059                           
  2060                           ;main.c: 92: time(&ip_timer);
  2061  004BE0  0ECB               	movlw	low main@ip_timer
  2062  004BE2  6E17               	movwf	time@t,c
  2063  004BE4  0E02               	movlw	high main@ip_timer
  2064  004BE6  6E18               	movwf	time@t+1,c
  2065  004BE8  EC4F  F02D         	call	_time	;wreg free
  2066  004BEC                     l10261:
  2067                           
  2068                           ;main.c: 93: ip_timer += 1;
  2069  004BEC  0102               	movlb	2	; () banked
  2070  004BEE  2BCB               	incf	main@ip_timer& (0+255),f,b
  2071  004BF0  0E00               	movlw	0
  2072  004BF2  23CC               	addwfc	(main@ip_timer+1)& (0+255),f,b
  2073  004BF4  23CD               	addwfc	(main@ip_timer+2)& (0+255),f,b
  2074  004BF6  23CE               	addwfc	(main@ip_timer+3)& (0+255),f,b
  2075  004BF8                     l10263:
  2076                           
  2077                           ;main.c: 96: {
  2078                           ;main.c: 97: time_t now_p;
  2079                           ;main.c: 98: time(&now_p);
  2080  004BF8  0EC7               	movlw	low main@now_p
  2081  004BFA  6E17               	movwf	time@t,c
  2082  004BFC  0E02               	movlw	high main@now_p
  2083  004BFE  6E18               	movwf	time@t+1,c
  2084  004C00  EC4F  F02D         	call	_time	;wreg free
  2085                           
  2086                           ;main.c: 99: Network_Manage();
  2087  004C04  EC72  F02B         	call	_Network_Manage	;wreg free
  2088                           
  2089                           ; BSR set to: 1
  2090                           ;main.c: 100: time(&t);
  2091  004C08  0EC2               	movlw	low main@t
  2092  004C0A  6E17               	movwf	time@t,c
  2093  004C0C  0E02               	movlw	high main@t
  2094  004C0E  6E18               	movwf	time@t+1,c
  2095  004C10  EC4F  F02D         	call	_time	;wreg free
  2096                           
  2097                           ;main.c: 102: ip = IPV4_GetMyIP();
  2098  004C14  EC31  F032         	call	_IPV4_GetMyIP	;wreg free
  2099  004C18  C017  F2EF         	movff	?_IPV4_GetMyIP,main@ip
  2100  004C1C  C018  F2F0         	movff	?_IPV4_GetMyIP+1,main@ip+1
  2101  004C20  C019  F2F1         	movff	?_IPV4_GetMyIP+2,main@ip+2
  2102  004C24  C01A  F2F2         	movff	?_IPV4_GetMyIP+3,main@ip+3
  2103                           
  2104                           ;main.c: 104: if((no_ip_display) || (old_ip != ip))
  2105  004C28  0102               	movlb	2	; () banked
  2106  004C2A  51C6               	movf	main@no_ip_display& (0+255),w,b
  2107  004C2C  E10C               	bnz	l1552
  2108                           
  2109                           ; BSR set to: 2
  2110  004C2E  51EF               	movf	main@ip& (0+255),w,b
  2111  004C30  19BE               	xorwf	main@old_ip& (0+255),w,b
  2112  004C32  E109               	bnz	u16190
  2113  004C34  51F0               	movf	(main@ip+1)& (0+255),w,b
  2114  004C36  19BF               	xorwf	(main@old_ip+1)& (0+255),w,b
  2115  004C38  E106               	bnz	u16190
  2116  004C3A  51F1               	movf	(main@ip+2)& (0+255),w,b
  2117  004C3C  19C0               	xorwf	(main@old_ip+2)& (0+255),w,b
  2118  004C3E  E103               	bnz	u16190
  2119  004C40  51F2               	movf	(main@ip+3)& (0+255),w,b
  2120  004C42  19C1               	xorwf	(main@old_ip+3)& (0+255),w,b
  2121  004C44  E039               	bz	l10287
  2122  004C46                     u16190:
  2123  004C46                     l1552:
  2124                           
  2125                           ; BSR set to: 2
  2126                           ;main.c: 105: {
  2127                           ;main.c: 106: old_ip = ip;
  2128  004C46  C2EF  F2BE         	movff	main@ip,main@old_ip
  2129  004C4A  C2F0  F2BF         	movff	main@ip+1,main@old_ip+1
  2130  004C4E  C2F1  F2C0         	movff	main@ip+2,main@old_ip+2
  2131  004C52  C2F2  F2C1         	movff	main@ip+3,main@old_ip+3
  2132                           
  2133                           ; BSR set to: 2
  2134                           ;main.c: 107: memset(str,0,sizeof(str));
  2135  004C56  0ECF               	movlw	low main@str
  2136  004C58  6E17               	movwf	memset@p1,c
  2137  004C5A  0E02               	movlw	high main@str
  2138  004C5C  6E18               	movwf	memset@p1+1,c
  2139  004C5E  6A1A               	clrf	memset@c+1,c
  2140  004C60  6A19               	clrf	memset@c,c
  2141  004C62  6A1C               	clrf	memset@n+1,c
  2142  004C64  0E20               	movlw	32
  2143  004C66  6E1B               	movwf	memset@n,c
  2144  004C68  ECB5  F030         	call	_memset	;wreg free
  2145                           
  2146                           ;main.c: 108: sprintf(str,"%d.%d.%d.%d",((char*)&ip)[3],((char*)&ip)[2],((char*)&ip)[1],
      +                          ((char*)&ip)[0]);
  2147  004C6C  0ECF               	movlw	low main@str
  2148  004C6E  0100               	movlb	0	; () banked
  2149  004C70  6F60               	movwf	sprintf@wh& (0+255),b
  2150  004C72  0E02               	movlw	high main@str
  2151  004C74  6F61               	movwf	(sprintf@wh+1)& (0+255),b
  2152  004C76  0E9D               	movlw	low STR_7
  2153  004C78  6F62               	movwf	sprintf@f& (0+255),b
  2154  004C7A  C2F2  F063         	movff	main@ip+3,?_sprintf+3
  2155  004C7E  6B64               	clrf	(?_sprintf+4)& (0+255),b
  2156  004C80  C2F1  F065         	movff	main@ip+2,?_sprintf+5
  2157  004C84  6B66               	clrf	(?_sprintf+6)& (0+255),b
  2158  004C86  C2F0  F067         	movff	main@ip+1,?_sprintf+7
  2159  004C8A  6B68               	clrf	(?_sprintf+8)& (0+255),b
  2160  004C8C  C2EF  F069         	movff	main@ip,?_sprintf+9
  2161  004C90  6B6A               	clrf	(?_sprintf+10)& (0+255),b
  2162  004C92  EC73  F030         	call	_sprintf	;wreg free
  2163                           
  2164                           ;main.c: 109: lcd_goto1(0);
  2165  004C96  0E00               	movlw	0
  2166  004C98  EC48  F032         	call	_lcd_goto1
  2167                           
  2168                           ;main.c: 110: lcd_puts(str);
  2169  004C9C  0ECF               	movlw	low main@str
  2170  004C9E  6E19               	movwf	lcd_puts@s,c
  2171  004CA0  0E02               	movlw	high main@str
  2172  004CA2  6E1A               	movwf	lcd_puts@s+1,c
  2173  004CA4  EC7E  F031         	call	_lcd_puts	;wreg free
  2174                           
  2175                           ;main.c: 111: SYSLOG_Write(str);
  2176  004CA8  0ECF               	movlw	low main@str
  2177  004CAA  6E31               	movwf	SYSLOG_Write@message,c
  2178  004CAC  0E02               	movlw	high main@str
  2179  004CAE  6E32               	movwf	SYSLOG_Write@message+1,c
  2180  004CB0  EC06  F031         	call	_SYSLOG_Write	;wreg free
  2181                           
  2182                           ;main.c: 112: no_ip_display = 0;
  2183  004CB4  0102               	movlb	2	; () banked
  2184  004CB6  6BC6               	clrf	main@no_ip_display& (0+255),b
  2185  004CB8                     l10287:
  2186                           
  2187                           ; BSR set to: 2
  2188                           ;main.c: 113: }
  2189                           ;main.c: 114: if(now_p >= ip_timer)
  2190  004CB8  51CB               	movf	main@ip_timer& (0+255),w,b
  2191  004CBA  5DC7               	subwf	main@now_p& (0+255),w,b
  2192  004CBC  51CC               	movf	(main@ip_timer+1)& (0+255),w,b
  2193  004CBE  59C8               	subwfb	(main@now_p+1)& (0+255),w,b
  2194  004CC0  51CD               	movf	(main@ip_timer+2)& (0+255),w,b
  2195  004CC2  59C9               	subwfb	(main@now_p+2)& (0+255),w,b
  2196  004CC4  51CA               	movf	(main@now_p+3)& (0+255),w,b
  2197  004CC6  0A80               	xorlw	128
  2198  004CC8  0101               	movlb	1	; () banked
  2199  004CCA  6FBE               	movwf	??_main& (0+255),b
  2200  004CCC  0102               	movlb	2	; () banked
  2201  004CCE  51CE               	movf	(main@ip_timer+3)& (0+255),w,b
  2202  004CD0  0A80               	xorlw	128
  2203  004CD2  0101               	movlb	1	; () banked
  2204  004CD4  59BE               	subwfb	??_main& (0+255),w,b
  2205  004CD6  E390               	bnc	l10263
  2206                           
  2207                           ; BSR set to: 1
  2208                           ;main.c: 115: {
  2209                           ;main.c: 116: DEMO_UDP_IPLockTimer();
  2210  004CD8  EC15  F032         	call	_DEMO_UDP_IPLockTimer	;wreg free
  2211                           
  2212                           ;main.c: 117: DEMO_UDP_Send();
  2213  004CDC  ECAF  F028         	call	_DEMO_UDP_Send	;wreg free
  2214  004CE0  D785               	goto	l10261
  2215  004CE2                     __end_of_main:
  2216                           	opt stack 0
  2217  004CE2                     PL651:
  2218                           	opt stack 12
  2219  004CE2  6E31               	movwf	SYSLOG_Write@message,c
  2220  004CE4  5031               	movf	SYSLOG_Write@message,w,c
  2221  004CE6  A4D8               	btfss	status,2,c
  2222  004CE8  0E10               	movlw	high __smallconst
  2223  004CEA  6E32               	movwf	SYSLOG_Write@message+1,c
  2224  004CEC  0012               	return	
  2225  004CEE                     __end_ofPL651:
  2226                           	opt stack 0
  2227                           tosu	equ	0xFFF
  2228                           tosh	equ	0xFFE
  2229                           tosl	equ	0xFFD
  2230                           pclath	equ	0xFFA
  2231                           tblptru	equ	0xFF8
  2232                           tblptrh	equ	0xFF7
  2233                           tblptrl	equ	0xFF6
  2234                           tablat	equ	0xFF5
  2235                           prodh	equ	0xFF4
  2236                           prodl	equ	0xFF3
  2237                           intcon	equ	0xFF2
  2238                           indf0	equ	0xFEF
  2239                           postinc0	equ	0xFEE
  2240                           fsr0h	equ	0xFEA
  2241                           fsr0l	equ	0xFE9
  2242                           wreg	equ	0xFE8
  2243                           postinc1	equ	0xFE6
  2244                           plusw1	equ	0xFE3
  2245                           fsr1h	equ	0xFE2
  2246                           fsr1l	equ	0xFE1
  2247                           bsr	equ	0xFE0
  2248                           indf2	equ	0xFDF
  2249                           postinc2	equ	0xFDE
  2250                           postdec2	equ	0xFDD
  2251                           plusw2	equ	0xFDB
  2252                           fsr2h	equ	0xFDA
  2253                           fsr2l	equ	0xFD9
  2254                           status	equ	0xFD8
  2255                           
  2256 ;; *************** function _initHW *****************
  2257 ;; Defined at:
  2258 ;;		line 50 in file "../board_support_package/picdem2_net/hardware.c"
  2259 ;; Parameters:    Size  Location     Type
  2260 ;;		None
  2261 ;; Auto vars:     Size  Location     Type
  2262 ;;		None
  2263 ;; Return value:  Size  Location     Type
  2264 ;;		None               void
  2265 ;; Registers used:
  2266 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2267 ;; Tracked objects:
  2268 ;;		On entry : F/2
  2269 ;;		On exit  : 0/0
  2270 ;;		Unchanged: 0/0
  2271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2276 ;;Total ram usage:        0 bytes
  2277 ;; Hardware stack levels used:    1
  2278 ;; Hardware stack levels required when called:   10
  2279 ;; This function calls:
  2280 ;;		_ADC_Initialize
  2281 ;;		_LED_Init
  2282 ;;		_lcd_init
  2283 ;;		_rtcc_init
  2284 ;;		_spi_init
  2285 ;;		_uart_init
  2286 ;; This function is called by:
  2287 ;;		_main
  2288 ;; This function uses a non-reentrant model
  2289 ;;
  2290                           
  2291                           	psect	text1
  2292  005F2C                     __ptext1:
  2293                           	opt stack 0
  2294  005F2C                     _initHW:
  2295                           	opt stack 20
  2296                           
  2297                           ; BSR set to: 2
  2298                           ;hardware.c: 53: OSCCON = 0x02;
  2299                           
  2300                           ;incstack = 0
  2301  005F2C  0E02               	movlw	2
  2302  005F2E  6ED3               	movwf	4051,c	;volatile
  2303                           
  2304                           ;hardware.c: 56: OSCTUNE = 0x40;
  2305  005F30  0E40               	movlw	64
  2306  005F32  6E9B               	movwf	3995,c	;volatile
  2307                           
  2308                           ; BSR set to: 2
  2309                           ;hardware.c: 59: TRISJ = 0;
  2310  005F34  6A9A               	clrf	3994,c	;volatile
  2311                           
  2312                           ; BSR set to: 2
  2313                           ;hardware.c: 60: LATJ = 0;
  2314  005F36  6A91               	clrf	3985,c	;volatile
  2315                           
  2316                           ; BSR set to: 2
  2317                           ;hardware.c: 62: TRISDbits.TRISD3 = 0;
  2318  005F38  9695               	bcf	3989,3,c	;volatile
  2319                           
  2320                           ; BSR set to: 2
  2321                           ;hardware.c: 63: LATDbits.LATD3 = 1;
  2322  005F3A  868C               	bsf	3980,3,c	;volatile
  2323                           
  2324                           ; BSR set to: 2
  2325                           ;hardware.c: 65: TRISCbits.TRISC3 = 0;
  2326  005F3C  9694               	bcf	3988,3,c	;volatile
  2327                           
  2328                           ; BSR set to: 2
  2329                           ;hardware.c: 66: TRISCbits.TRISC4 = 1;
  2330  005F3E  8894               	bsf	3988,4,c	;volatile
  2331                           
  2332                           ; BSR set to: 2
  2333                           ;hardware.c: 67: TRISCbits.TRISC5 = 0;
  2334  005F40  9A94               	bcf	3988,5,c	;volatile
  2335                           
  2336                           ;hardware.c: 69: TRISA = 0b11111100;
  2337  005F42  0EFC               	movlw	252
  2338  005F44  6E92               	movwf	3986,c	;volatile
  2339                           
  2340                           ;hardware.c: 98: TRISB = 0x0F;
  2341  005F46  0E0F               	movlw	15
  2342  005F48  6E93               	movwf	3987,c	;volatile
  2343                           
  2344                           ; BSR set to: 2
  2345                           ;hardware.c: 104: rtcc_init();
  2346  005F4A  EC7A  F02F         	call	_rtcc_init	;wreg free
  2347                           
  2348                           ; BSR set to: 2
  2349                           ;hardware.c: 107: spi_init();
  2350  005F4E  EC56  F032         	call	_spi_init	;wreg free
  2351                           
  2352                           ; BSR set to: 2
  2353                           ;hardware.c: 110: uart_init();
  2354  005F52  ECF5  F031         	call	_uart_init	;wreg free
  2355                           
  2356                           ; BSR set to: 2
  2357                           ;hardware.c: 113: lcd_init();
  2358  005F56  ECD7  F02A         	call	_lcd_init	;wreg free
  2359                           
  2360                           ;hardware.c: 119: ADC_Initialize();
  2361  005F5A  EC00  F032         	call	_ADC_Initialize	;wreg free
  2362                           
  2363                           ;hardware.c: 121: LED_Init();
  2364  005F5E  EF4E  F031         	goto	_LED_Init	;wreg free
  2365  005F62                     __end_of_initHW:
  2366                           	opt stack 0
  2367                           tosu	equ	0xFFF
  2368                           tosh	equ	0xFFE
  2369                           tosl	equ	0xFFD
  2370                           pclath	equ	0xFFA
  2371                           tblptru	equ	0xFF8
  2372                           tblptrh	equ	0xFF7
  2373                           tblptrl	equ	0xFF6
  2374                           tablat	equ	0xFF5
  2375                           prodh	equ	0xFF4
  2376                           prodl	equ	0xFF3
  2377                           intcon	equ	0xFF2
  2378                           indf0	equ	0xFEF
  2379                           postinc0	equ	0xFEE
  2380                           fsr0h	equ	0xFEA
  2381                           fsr0l	equ	0xFE9
  2382                           wreg	equ	0xFE8
  2383                           postinc1	equ	0xFE6
  2384                           plusw1	equ	0xFE3
  2385                           fsr1h	equ	0xFE2
  2386                           fsr1l	equ	0xFE1
  2387                           bsr	equ	0xFE0
  2388                           indf2	equ	0xFDF
  2389                           postinc2	equ	0xFDE
  2390                           postdec2	equ	0xFDD
  2391                           plusw2	equ	0xFDB
  2392                           fsr2h	equ	0xFDA
  2393                           fsr2l	equ	0xFD9
  2394                           status	equ	0xFD8
  2395                           
  2396 ;; *************** function _uart_init *****************
  2397 ;; Defined at:
  2398 ;;		line 55 in file "../board_support_package/picdem2_net/uart.c"
  2399 ;; Parameters:    Size  Location     Type
  2400 ;;		None
  2401 ;; Auto vars:     Size  Location     Type
  2402 ;;		None
  2403 ;; Return value:  Size  Location     Type
  2404 ;;		None               void
  2405 ;; Registers used:
  2406 ;;		wreg, status,2
  2407 ;; Tracked objects:
  2408 ;;		On entry : F/2
  2409 ;;		On exit  : F/2
  2410 ;;		Unchanged: F/0
  2411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2416 ;;Total ram usage:        0 bytes
  2417 ;; Hardware stack levels used:    1
  2418 ;; Hardware stack levels required when called:    8
  2419 ;; This function calls:
  2420 ;;		Nothing
  2421 ;; This function is called by:
  2422 ;;		_initHW
  2423 ;; This function uses a non-reentrant model
  2424 ;;
  2425                           
  2426                           	psect	text2
  2427  0063EA                     __ptext2:
  2428                           	opt stack 0
  2429  0063EA                     _uart_init:
  2430                           	opt stack 21
  2431                           
  2432                           ; BSR set to: 2
  2433                           ;uart.c: 58: TRISCbits.TRISC7 = 1;
  2434                           
  2435                           ;incstack = 0
  2436  0063EA  8E94               	bsf	3988,7,c	;volatile
  2437                           
  2438                           ;uart.c: 59: TRISCbits.TRISC6 = 0;
  2439  0063EC  9C94               	bcf	3988,6,c	;volatile
  2440                           
  2441                           ;uart.c: 62: BAUDCON1 = 0x00;
  2442  0063EE  6A7E               	clrf	3966,c	;volatile
  2443                           
  2444                           ; BSR set to: 2
  2445                           ;uart.c: 69: SPBRG1 = 89;
  2446  0063F0  0E59               	movlw	89
  2447  0063F2  6EAF               	movwf	4015,c	;volatile
  2448                           
  2449                           ; BSR set to: 2
  2450                           ;uart.c: 70: BAUDCON1bits.BRG16 = 1;
  2451  0063F4  867E               	bsf	3966,3,c	;volatile
  2452                           
  2453                           ;uart.c: 71: TXSTA1 = 0x26;
  2454  0063F6  0E26               	movlw	38
  2455  0063F8  6EAC               	movwf	4012,c	;volatile
  2456                           
  2457                           ; BSR set to: 2
  2458                           ;uart.c: 73: CREN1 = 1;
  2459  0063FA  88AB               	bsf	4011,4,c	;volatile
  2460                           
  2461                           ; BSR set to: 2
  2462                           ;uart.c: 74: SPEN1 = 1;
  2463  0063FC  8EAB               	bsf	4011,7,c	;volatile
  2464                           
  2465                           ; BSR set to: 2
  2466  0063FE  0C26               	retlw	38	;funcret
  2467  006400                     __end_of_uart_init:
  2468                           	opt stack 0
  2469                           tosu	equ	0xFFF
  2470                           tosh	equ	0xFFE
  2471                           tosl	equ	0xFFD
  2472                           pclath	equ	0xFFA
  2473                           tblptru	equ	0xFF8
  2474                           tblptrh	equ	0xFF7
  2475                           tblptrl	equ	0xFF6
  2476                           tablat	equ	0xFF5
  2477                           prodh	equ	0xFF4
  2478                           prodl	equ	0xFF3
  2479                           intcon	equ	0xFF2
  2480                           indf0	equ	0xFEF
  2481                           postinc0	equ	0xFEE
  2482                           fsr0h	equ	0xFEA
  2483                           fsr0l	equ	0xFE9
  2484                           wreg	equ	0xFE8
  2485                           postinc1	equ	0xFE6
  2486                           plusw1	equ	0xFE3
  2487                           fsr1h	equ	0xFE2
  2488                           fsr1l	equ	0xFE1
  2489                           bsr	equ	0xFE0
  2490                           indf2	equ	0xFDF
  2491                           postinc2	equ	0xFDE
  2492                           postdec2	equ	0xFDD
  2493                           plusw2	equ	0xFDB
  2494                           fsr2h	equ	0xFDA
  2495                           fsr2l	equ	0xFD9
  2496                           status	equ	0xFD8
  2497                           
  2498 ;; *************** function _spi_init *****************
  2499 ;; Defined at:
  2500 ;;		line 46 in file "../board_support_package/picdem2_net/mssp_spi_master.c"
  2501 ;; Parameters:    Size  Location     Type
  2502 ;;		None
  2503 ;; Auto vars:     Size  Location     Type
  2504 ;;		None
  2505 ;; Return value:  Size  Location     Type
  2506 ;;		None               void
  2507 ;; Registers used:
  2508 ;;		wreg, status,2
  2509 ;; Tracked objects:
  2510 ;;		On entry : F/2
  2511 ;;		On exit  : F/2
  2512 ;;		Unchanged: F/0
  2513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2518 ;;Total ram usage:        0 bytes
  2519 ;; Hardware stack levels used:    1
  2520 ;; Hardware stack levels required when called:    8
  2521 ;; This function calls:
  2522 ;;		Nothing
  2523 ;; This function is called by:
  2524 ;;		_initHW
  2525 ;; This function uses a non-reentrant model
  2526 ;;
  2527                           
  2528                           	psect	text3
  2529  0064AC                     __ptext3:
  2530                           	opt stack 0
  2531  0064AC                     _spi_init:
  2532                           	opt stack 21
  2533                           
  2534                           ; BSR set to: 2
  2535                           ;mssp_spi_master.c: 48: SSP1STATbits.CKE = 1;
  2536                           
  2537                           ; BSR set to: 2
  2538                           ;incstack = 0
  2539  0064AC  8CC7               	bsf	4039,6,c	;volatile
  2540                           
  2541                           ;mssp_spi_master.c: 49: SSP1STATbits.SMP = 0;
  2542  0064AE  9EC7               	bcf	4039,7,c	;volatile
  2543                           
  2544                           ; BSR set to: 2
  2545                           ;mssp_spi_master.c: 51: SSP1CON1 = 0x01;
  2546  0064B0  0E01               	movlw	1
  2547  0064B2  6EC6               	movwf	4038,c	;volatile
  2548                           
  2549                           ; BSR set to: 2
  2550                           ;mssp_spi_master.c: 52: SSP1CON1bits.SSPEN = 1;
  2551  0064B4  8AC6               	bsf	4038,5,c	;volatile
  2552                           
  2553                           ; BSR set to: 2
  2554  0064B6  0C01               	retlw	1	;funcret
  2555  0064B8                     __end_of_spi_init:
  2556                           	opt stack 0
  2557                           tosu	equ	0xFFF
  2558                           tosh	equ	0xFFE
  2559                           tosl	equ	0xFFD
  2560                           pclath	equ	0xFFA
  2561                           tblptru	equ	0xFF8
  2562                           tblptrh	equ	0xFF7
  2563                           tblptrl	equ	0xFF6
  2564                           tablat	equ	0xFF5
  2565                           prodh	equ	0xFF4
  2566                           prodl	equ	0xFF3
  2567                           intcon	equ	0xFF2
  2568                           indf0	equ	0xFEF
  2569                           postinc0	equ	0xFEE
  2570                           fsr0h	equ	0xFEA
  2571                           fsr0l	equ	0xFE9
  2572                           wreg	equ	0xFE8
  2573                           postinc1	equ	0xFE6
  2574                           plusw1	equ	0xFE3
  2575                           fsr1h	equ	0xFE2
  2576                           fsr1l	equ	0xFE1
  2577                           bsr	equ	0xFE0
  2578                           indf2	equ	0xFDF
  2579                           postinc2	equ	0xFDE
  2580                           postdec2	equ	0xFDD
  2581                           plusw2	equ	0xFDB
  2582                           fsr2h	equ	0xFDA
  2583                           fsr2l	equ	0xFD9
  2584                           status	equ	0xFD8
  2585                           
  2586 ;; *************** function _rtcc_init *****************
  2587 ;; Defined at:
  2588 ;;		line 77 in file "../board_support_package/picdem2_net/rtcc.c"
  2589 ;; Parameters:    Size  Location     Type
  2590 ;;		None
  2591 ;; Auto vars:     Size  Location     Type
  2592 ;;		None
  2593 ;; Return value:  Size  Location     Type
  2594 ;;		None               void
  2595 ;; Registers used:
  2596 ;;		wreg, status,2
  2597 ;; Tracked objects:
  2598 ;;		On entry : F/2
  2599 ;;		On exit  : F/2
  2600 ;;		Unchanged: 0/0
  2601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2606 ;;Total ram usage:        0 bytes
  2607 ;; Hardware stack levels used:    1
  2608 ;; Hardware stack levels required when called:    8
  2609 ;; This function calls:
  2610 ;;		Nothing
  2611 ;; This function is called by:
  2612 ;;		_initHW
  2613 ;; This function uses a non-reentrant model
  2614 ;;
  2615                           
  2616                           	psect	text4
  2617  005EF4                     __ptext4:
  2618                           	opt stack 0
  2619  005EF4                     _rtcc_init:
  2620                           	opt stack 21
  2621                           
  2622                           ; BSR set to: 2
  2623                           ;rtcc.c: 79: TMR1CS = 1;
  2624                           
  2625                           ; BSR set to: 2
  2626                           ;incstack = 0
  2627  005EF4  82CD               	bsf	4045,1,c	;volatile
  2628                           
  2629                           ;rtcc.c: 80: T1OSCEN = 1;
  2630  005EF6  86CD               	bsf	4045,3,c	;volatile
  2631                           
  2632                           ;rtcc.c: 81: T1CKPS0 = 0;
  2633  005EF8  98CD               	bcf	4045,4,c	;volatile
  2634                           
  2635                           ;rtcc.c: 82: T1CKPS1 = 0;
  2636  005EFA  9ACD               	bcf	4045,5,c	;volatile
  2637                           
  2638                           ;rtcc.c: 83: T1SYNC = 1;
  2639  005EFC  84CD               	bsf	4045,2,c	;volatile
  2640                           
  2641                           ;rtcc.c: 84: TMR1ON = 1;
  2642  005EFE  80CD               	bsf	4045,0,c	;volatile
  2643                           
  2644                           ; BSR set to: 2
  2645                           ;rtcc.c: 86: TMR1 = 32768UL;
  2646  005F00  0E80               	movlw	128
  2647  005F02  6ECF               	movwf	4047,c	;volatile
  2648  005F04  6ACE               	clrf	4046,c	;volatile
  2649                           
  2650                           ;rtcc.c: 87: deviceTime = 1293861600;
  2651  005F06  0EE0               	movlw	224
  2652  005F08  6FF3               	movwf	_deviceTime& (0+255),b	;volatile
  2653  005F0A  0EC2               	movlw	194
  2654  005F0C  6FF4               	movwf	(_deviceTime+1)& (0+255),b	;volatile
  2655  005F0E  0E1E               	movlw	30
  2656  005F10  6FF5               	movwf	(_deviceTime+2)& (0+255),b	;volatile
  2657  005F12  0E4D               	movlw	77
  2658  005F14  6FF6               	movwf	(_deviceTime+3)& (0+255),b	;volatile
  2659                           
  2660                           ;rtcc.c: 88: localTime = 1293861600 + 2208988800;
  2661  005F16  0E60               	movlw	96
  2662  005F18  6FF7               	movwf	_localTime& (0+255),b	;volatile
  2663  005F1A  0E41               	movlw	65
  2664  005F1C  6FF8               	movwf	(_localTime+1)& (0+255),b	;volatile
  2665  005F1E  0EC9               	movlw	201
  2666  005F20  6FF9               	movwf	(_localTime+2)& (0+255),b	;volatile
  2667  005F22  0ED0               	movlw	208
  2668  005F24  6FFA               	movwf	(_localTime+3)& (0+255),b	;volatile
  2669                           
  2670                           ; BSR set to: 2
  2671                           ;rtcc.c: 90: TMR1IP = 1;
  2672  005F26  809F               	bsf	3999,0,c	;volatile
  2673                           
  2674                           ; BSR set to: 2
  2675                           ;rtcc.c: 91: TMR1IE = 1;
  2676  005F28  809D               	bsf	3997,0,c	;volatile
  2677                           
  2678                           ; BSR set to: 2
  2679  005F2A  0CD0               	retlw	208	;funcret
  2680  005F2C                     __end_of_rtcc_init:
  2681                           	opt stack 0
  2682                           tosu	equ	0xFFF
  2683                           tosh	equ	0xFFE
  2684                           tosl	equ	0xFFD
  2685                           pclath	equ	0xFFA
  2686                           tblptru	equ	0xFF8
  2687                           tblptrh	equ	0xFF7
  2688                           tblptrl	equ	0xFF6
  2689                           tablat	equ	0xFF5
  2690                           prodh	equ	0xFF4
  2691                           prodl	equ	0xFF3
  2692                           intcon	equ	0xFF2
  2693                           indf0	equ	0xFEF
  2694                           postinc0	equ	0xFEE
  2695                           fsr0h	equ	0xFEA
  2696                           fsr0l	equ	0xFE9
  2697                           wreg	equ	0xFE8
  2698                           postinc1	equ	0xFE6
  2699                           plusw1	equ	0xFE3
  2700                           fsr1h	equ	0xFE2
  2701                           fsr1l	equ	0xFE1
  2702                           bsr	equ	0xFE0
  2703                           indf2	equ	0xFDF
  2704                           postinc2	equ	0xFDE
  2705                           postdec2	equ	0xFDD
  2706                           plusw2	equ	0xFDB
  2707                           fsr2h	equ	0xFDA
  2708                           fsr2l	equ	0xFD9
  2709                           status	equ	0xFD8
  2710                           
  2711 ;; *************** function _lcd_init *****************
  2712 ;; Defined at:
  2713 ;;		line 110 in file "../board_support_package/picdem2_net/lcd.c"
  2714 ;; Parameters:    Size  Location     Type
  2715 ;;		None
  2716 ;; Auto vars:     Size  Location     Type
  2717 ;;  y               2    0        volatile int 
  2718 ;;  x               2    0        volatile int 
  2719 ;; Return value:  Size  Location     Type
  2720 ;;		None               void
  2721 ;; Registers used:
  2722 ;;		wreg, cstack
  2723 ;; Tracked objects:
  2724 ;;		On entry : F/2
  2725 ;;		On exit  : 0/0
  2726 ;;		Unchanged: 0/0
  2727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2730 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2731 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2732 ;;Total ram usage:        1 bytes
  2733 ;; Hardware stack levels used:    1
  2734 ;; Hardware stack levels required when called:    9
  2735 ;; This function calls:
  2736 ;;		_lcd_busy
  2737 ;;		_lcd_init_pins
  2738 ;;		_lcd_write_ctrl
  2739 ;; This function is called by:
  2740 ;;		_initHW
  2741 ;; This function uses a non-reentrant model
  2742 ;;
  2743                           
  2744                           	psect	text5
  2745  0055AE                     __ptext5:
  2746                           	opt stack 0
  2747  0055AE                     _lcd_init:
  2748                           	opt stack 20
  2749                           
  2750                           ; BSR set to: 2
  2751                           ;lcd.c: 112: volatile int x,y;
  2752                           ;lcd.c: 114: lcd_init_pins();
  2753                           
  2754                           ; BSR set to: 2
  2755                           ;incstack = 0
  2756  0055AE  EC5C  F032         	call	_lcd_init_pins	;wreg free
  2757                           
  2758                           ; BSR set to: 2
  2759                           ;lcd.c: 116: _delay((unsigned long)((10)*(41666667UL/4000.0)));
  2760  0055B2  D846               	call	PL719	;call to abstracted procedure
  2761  0055B4                     u16217:
  2762  0055B4  2EE8               	decfsz	wreg,f,c
  2763  0055B6  D7FE               	goto	u16217
  2764  0055B8  2E18               	decfsz	??_lcd_init& (0+255),f,c
  2765  0055BA  D7FC               	goto	u16217
  2766  0055BC  D000               	nop2	
  2767                           
  2768                           ;lcd.c: 117: _delay((unsigned long)((10)*(41666667UL/4000.0)));
  2769  0055BE  D840               	call	PL719	;call to abstracted procedure
  2770  0055C0                     u16227:
  2771  0055C0  2EE8               	decfsz	wreg,f,c
  2772  0055C2  D7FE               	goto	u16227
  2773  0055C4  2E18               	decfsz	??_lcd_init& (0+255),f,c
  2774  0055C6  D7FC               	goto	u16227
  2775  0055C8  D000               	nop2	
  2776                           
  2777                           ;lcd.c: 118: _delay((unsigned long)((10)*(41666667UL/4000.0)));
  2778  0055CA  D83A               	call	PL719	;call to abstracted procedure
  2779  0055CC                     u16237:
  2780  0055CC  2EE8               	decfsz	wreg,f,c
  2781  0055CE  D7FE               	goto	u16237
  2782  0055D0  2E18               	decfsz	??_lcd_init& (0+255),f,c
  2783  0055D2  D7FC               	goto	u16237
  2784  0055D4  D000               	nop2	
  2785                           
  2786                           ;lcd.c: 119: _delay((unsigned long)((10)*(41666667UL/4000.0)));
  2787  0055D6  D834               	call	PL719	;call to abstracted procedure
  2788  0055D8                     u16247:
  2789  0055D8  2EE8               	decfsz	wreg,f,c
  2790  0055DA  D7FE               	goto	u16247
  2791  0055DC  2E18               	decfsz	??_lcd_init& (0+255),f,c
  2792  0055DE  D7FC               	goto	u16247
  2793  0055E0  D000               	nop2	
  2794                           
  2795                           ;lcd.c: 122: lcd_write_ctrl(0x03);
  2796  0055E2  0E03               	movlw	3
  2797  0055E4  EC6E  F031         	call	_lcd_write_ctrl
  2798                           
  2799                           ;lcd.c: 123: _delay((unsigned long)((4)*(41666667UL/4000.0)));
  2800  0055E8  D82E               	call	PL777	;call to abstracted procedure
  2801  0055EA                     u16257:
  2802  0055EA  2EE8               	decfsz	wreg,f,c
  2803  0055EC  D7FE               	goto	u16257
  2804  0055EE  2E18               	decfsz	??_lcd_init& (0+255),f,c
  2805  0055F0  D7FC               	goto	u16257
  2806  0055F2  F000               	nop	
  2807                           
  2808                           ;lcd.c: 124: lcd_write_ctrl(0x03);
  2809  0055F4  0E03               	movlw	3
  2810  0055F6  EC6E  F031         	call	_lcd_write_ctrl
  2811                           
  2812                           ;lcd.c: 125: _delay((unsigned long)((4)*(41666667UL/4000.0)));
  2813  0055FA  D825               	call	PL777	;call to abstracted procedure
  2814  0055FC                     u16267:
  2815  0055FC  2EE8               	decfsz	wreg,f,c
  2816  0055FE  D7FE               	goto	u16267
  2817  005600  2E18               	decfsz	??_lcd_init& (0+255),f,c
  2818  005602  D7FC               	goto	u16267
  2819  005604  F000               	nop	
  2820                           
  2821                           ;lcd.c: 126: lcd_write_ctrl(0x03);
  2822  005606  0E03               	movlw	3
  2823  005608  EC6E  F031         	call	_lcd_write_ctrl
  2824                           
  2825                           ;lcd.c: 129: lcd_write_ctrl(0x38);
  2826  00560C  0E38               	movlw	56
  2827  00560E  EC6E  F031         	call	_lcd_write_ctrl
  2828                           
  2829                           ;lcd.c: 131: lcd_busy();
  2830  005612  EC61  F032         	call	_lcd_busy	;wreg free
  2831                           
  2832                           ;lcd.c: 132: lcd_write_ctrl(0x0C);
  2833  005616  0E0C               	movlw	12
  2834  005618  EC6E  F031         	call	_lcd_write_ctrl
  2835                           
  2836                           ;lcd.c: 133: lcd_busy();
  2837  00561C  EC61  F032         	call	_lcd_busy	;wreg free
  2838                           
  2839                           ;lcd.c: 134: lcd_write_ctrl(0x01);
  2840  005620  0E01               	movlw	1
  2841  005622  EC6E  F031         	call	_lcd_write_ctrl
  2842                           
  2843                           ;lcd.c: 135: lcd_busy();
  2844  005626  EC61  F032         	call	_lcd_busy	;wreg free
  2845                           
  2846                           ;lcd.c: 138: lcd_write_ctrl(0x01);
  2847  00562A  0E01               	movlw	1
  2848  00562C  EC6E  F031         	call	_lcd_write_ctrl
  2849                           
  2850                           ;lcd.c: 139: _delay((unsigned long)((2)*(41666667UL/4000.0)));
  2851  005630  0E1C               	movlw	28
  2852  005632  6E18               	movwf	??_lcd_init& (0+255),c
  2853  005634  0E0D               	movlw	13
  2854  005636                     u16277:
  2855  005636  2EE8               	decfsz	wreg,f,c
  2856  005638  D7FE               	goto	u16277
  2857  00563A  2E18               	decfsz	??_lcd_init& (0+255),f,c
  2858  00563C  D7FC               	goto	u16277
  2859  00563E  0012               	return		;funcret
  2860  005640                     __end_of_lcd_init:
  2861                           	opt stack 0
  2862  005640                     PL719:
  2863                           	opt stack 20
  2864  005640  0E88               	movlw	136
  2865  005642  6E18               	movwf	??_lcd_init& (0+255),c
  2866  005644  0C46               	retlw	70
  2867  005646                     __end_ofPL719:
  2868                           	opt stack 0
  2869  005646                     PL777:
  2870                           	opt stack 20
  2871  005646  0E37               	movlw	55
  2872  005648  6E18               	movwf	??_lcd_init& (0+255),c
  2873  00564A  0C1B               	retlw	27
  2874  00564C                     __end_ofPL777:
  2875                           	opt stack 0
  2876                           tosu	equ	0xFFF
  2877                           tosh	equ	0xFFE
  2878                           tosl	equ	0xFFD
  2879                           pclath	equ	0xFFA
  2880                           tblptru	equ	0xFF8
  2881                           tblptrh	equ	0xFF7
  2882                           tblptrl	equ	0xFF6
  2883                           tablat	equ	0xFF5
  2884                           prodh	equ	0xFF4
  2885                           prodl	equ	0xFF3
  2886                           intcon	equ	0xFF2
  2887                           indf0	equ	0xFEF
  2888                           postinc0	equ	0xFEE
  2889                           fsr0h	equ	0xFEA
  2890                           fsr0l	equ	0xFE9
  2891                           wreg	equ	0xFE8
  2892                           postinc1	equ	0xFE6
  2893                           plusw1	equ	0xFE3
  2894                           fsr1h	equ	0xFE2
  2895                           fsr1l	equ	0xFE1
  2896                           bsr	equ	0xFE0
  2897                           indf2	equ	0xFDF
  2898                           postinc2	equ	0xFDE
  2899                           postdec2	equ	0xFDD
  2900                           plusw2	equ	0xFDB
  2901                           fsr2h	equ	0xFDA
  2902                           fsr2l	equ	0xFD9
  2903                           status	equ	0xFD8
  2904                           
  2905 ;; *************** function _lcd_init_pins *****************
  2906 ;; Defined at:
  2907 ;;		line 50 in file "../board_support_package/picdem2_net/lcd_hw.c"
  2908 ;; Parameters:    Size  Location     Type
  2909 ;;		None
  2910 ;; Auto vars:     Size  Location     Type
  2911 ;;		None
  2912 ;; Return value:  Size  Location     Type
  2913 ;;		None               void
  2914 ;; Registers used:
  2915 ;;		None
  2916 ;; Tracked objects:
  2917 ;;		On entry : F/2
  2918 ;;		On exit  : F/2
  2919 ;;		Unchanged: F/0
  2920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2925 ;;Total ram usage:        0 bytes
  2926 ;; Hardware stack levels used:    1
  2927 ;; Hardware stack levels required when called:    8
  2928 ;; This function calls:
  2929 ;;		Nothing
  2930 ;; This function is called by:
  2931 ;;		_lcd_init
  2932 ;; This function uses a non-reentrant model
  2933 ;;
  2934                           
  2935                           	psect	text6
  2936  0064B8                     __ptext6:
  2937                           	opt stack 0
  2938  0064B8                     _lcd_init_pins:
  2939                           	opt stack 20
  2940                           
  2941                           ; BSR set to: 2
  2942                           ;lcd_hw.c: 52: TRISE = 0;
  2943                           
  2944                           ;incstack = 0
  2945  0064B8  6A96               	clrf	3990,c	;volatile
  2946                           
  2947                           ;lcd_hw.c: 53: TRISH = 0x00;
  2948  0064BA  6A99               	clrf	3993,c	;volatile
  2949                           
  2950                           ;lcd_hw.c: 54: LATE = 0;
  2951  0064BC  6A8D               	clrf	3981,c	;volatile
  2952                           
  2953                           ;lcd_hw.c: 55: LATH = 0;
  2954  0064BE  6A90               	clrf	3984,c	;volatile
  2955                           
  2956                           ; BSR set to: 2
  2957  0064C0  0012               	return		;funcret
  2958  0064C2                     __end_of_lcd_init_pins:
  2959                           	opt stack 0
  2960                           tosu	equ	0xFFF
  2961                           tosh	equ	0xFFE
  2962                           tosl	equ	0xFFD
  2963                           pclath	equ	0xFFA
  2964                           tblptru	equ	0xFF8
  2965                           tblptrh	equ	0xFF7
  2966                           tblptrl	equ	0xFF6
  2967                           tablat	equ	0xFF5
  2968                           prodh	equ	0xFF4
  2969                           prodl	equ	0xFF3
  2970                           intcon	equ	0xFF2
  2971                           indf0	equ	0xFEF
  2972                           postinc0	equ	0xFEE
  2973                           fsr0h	equ	0xFEA
  2974                           fsr0l	equ	0xFE9
  2975                           wreg	equ	0xFE8
  2976                           postinc1	equ	0xFE6
  2977                           plusw1	equ	0xFE3
  2978                           fsr1h	equ	0xFE2
  2979                           fsr1l	equ	0xFE1
  2980                           bsr	equ	0xFE0
  2981                           indf2	equ	0xFDF
  2982                           postinc2	equ	0xFDE
  2983                           postdec2	equ	0xFDD
  2984                           plusw2	equ	0xFDB
  2985                           fsr2h	equ	0xFDA
  2986                           fsr2l	equ	0xFD9
  2987                           status	equ	0xFD8
  2988                           
  2989 ;; *************** function _LED_Init *****************
  2990 ;; Defined at:
  2991 ;;		line 55 in file "../board_support_package/picdem2_net/led_driver.c"
  2992 ;; Parameters:    Size  Location     Type
  2993 ;;		None
  2994 ;; Auto vars:     Size  Location     Type
  2995 ;;  x               1   22[COMRAM] unsigned char 
  2996 ;; Return value:  Size  Location     Type
  2997 ;;		None               void
  2998 ;; Registers used:
  2999 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3000 ;; Tracked objects:
  3001 ;;		On entry : 0/2
  3002 ;;		On exit  : 0/0
  3003 ;;		Unchanged: 0/0
  3004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3006 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3008 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3009 ;;Total ram usage:        1 bytes
  3010 ;; Hardware stack levels used:    1
  3011 ;; Hardware stack levels required when called:    8
  3012 ;; This function calls:
  3013 ;;		Nothing
  3014 ;; This function is called by:
  3015 ;;		_initHW
  3016 ;; This function uses a non-reentrant model
  3017 ;;
  3018                           
  3019                           	psect	text7
  3020  00629C                     __ptext7:
  3021                           	opt stack 0
  3022  00629C                     _LED_Init:
  3023                           	opt stack 21
  3024                           
  3025                           ;led_driver.c: 57: uint8_t x = 0;
  3026                           
  3027                           ; BSR set to: 2
  3028                           ;incstack = 0
  3029  00629C  6A17               	clrf	LED_Init@x,c
  3030                           
  3031                           ;led_driver.c: 58: for(x = 0; x < 8; x++)
  3032  00629E  6A17               	clrf	LED_Init@x,c
  3033  0062A0                     l9903:
  3034                           
  3035                           ;led_driver.c: 59: {
  3036                           ;led_driver.c: 60: led_values[x].value = 0;
  3037  0062A0  5017               	movf	LED_Init@x,w,c
  3038  0062A2  0D02               	mullw	2
  3039  0062A4  0E00               	movlw	low _led_values
  3040  0062A6  24F3               	addwf	prodl,w,c
  3041  0062A8  6ED9               	movwf	fsr2l,c
  3042  0062AA  0E02               	movlw	high _led_values
  3043  0062AC  20F4               	addwfc	prodh,w,c
  3044  0062AE  6EDA               	movwf	fsr2h,c
  3045  0062B0  6ADF               	clrf	indf2,c
  3046  0062B2  2A17               	incf	LED_Init@x,f,c
  3047  0062B4  0E07               	movlw	7
  3048  0062B6  6417               	cpfsgt	LED_Init@x,c
  3049  0062B8  D7F3               	goto	l9903
  3050  0062BA  0C07               	retlw	7
  3051  0062BC                     __end_of_LED_Init:
  3052                           	opt stack 0
  3053                           tosu	equ	0xFFF
  3054                           tosh	equ	0xFFE
  3055                           tosl	equ	0xFFD
  3056                           pclath	equ	0xFFA
  3057                           tblptru	equ	0xFF8
  3058                           tblptrh	equ	0xFF7
  3059                           tblptrl	equ	0xFF6
  3060                           tablat	equ	0xFF5
  3061                           prodh	equ	0xFF4
  3062                           prodl	equ	0xFF3
  3063                           intcon	equ	0xFF2
  3064                           indf0	equ	0xFEF
  3065                           postinc0	equ	0xFEE
  3066                           fsr0h	equ	0xFEA
  3067                           fsr0l	equ	0xFE9
  3068                           wreg	equ	0xFE8
  3069                           postinc1	equ	0xFE6
  3070                           plusw1	equ	0xFE3
  3071                           fsr1h	equ	0xFE2
  3072                           fsr1l	equ	0xFE1
  3073                           bsr	equ	0xFE0
  3074                           indf2	equ	0xFDF
  3075                           postinc2	equ	0xFDE
  3076                           postdec2	equ	0xFDD
  3077                           plusw2	equ	0xFDB
  3078                           fsr2h	equ	0xFDA
  3079                           fsr2l	equ	0xFD9
  3080                           status	equ	0xFD8
  3081                           
  3082 ;; *************** function _ADC_Initialize *****************
  3083 ;; Defined at:
  3084 ;;		line 55 in file "../board_support_package/picdem2_net/adc.c"
  3085 ;; Parameters:    Size  Location     Type
  3086 ;;		None
  3087 ;; Auto vars:     Size  Location     Type
  3088 ;;		None
  3089 ;; Return value:  Size  Location     Type
  3090 ;;		None               void
  3091 ;; Registers used:
  3092 ;;		wreg, status,2
  3093 ;; Tracked objects:
  3094 ;;		On entry : 0/2
  3095 ;;		On exit  : 0/0
  3096 ;;		Unchanged: 0/0
  3097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3102 ;;Total ram usage:        0 bytes
  3103 ;; Hardware stack levels used:    1
  3104 ;; Hardware stack levels required when called:    8
  3105 ;; This function calls:
  3106 ;;		Nothing
  3107 ;; This function is called by:
  3108 ;;		_initHW
  3109 ;; This function uses a non-reentrant model
  3110 ;;
  3111                           
  3112                           	psect	text8
  3113  006400                     __ptext8:
  3114                           	opt stack 0
  3115  006400                     _ADC_Initialize:
  3116                           	opt stack 21
  3117                           
  3118                           ;adc.c: 59: TRISAbits.RA2 = 1;
  3119                           
  3120                           ;incstack = 0
  3121  006400  8492               	bsf	3986,2,c	;volatile
  3122                           
  3123                           ;adc.c: 60: TRISAbits.RA3 = 1;
  3124  006402  8692               	bsf	3986,3,c	;volatile
  3125                           
  3126                           ;adc.c: 63: ADCON0 = 0x0D;
  3127  006404  0E0D               	movlw	13
  3128  006406  6EC2               	movwf	4034,c	;volatile
  3129                           
  3130                           ;adc.c: 66: ADCON1 = 0x06;
  3131  006408  0E06               	movlw	6
  3132  00640A  6EC1               	movwf	4033,c	;volatile
  3133                           
  3134                           ;adc.c: 69: ADCON2 = 0xBE;
  3135  00640C  0EBE               	movlw	190
  3136  00640E  6EC0               	movwf	4032,c	;volatile
  3137                           
  3138                           ;adc.c: 72: ADRESL = 0x00;
  3139  006410  6AC3               	clrf	4035,c	;volatile
  3140                           
  3141                           ;adc.c: 75: ADRESH = 0x00;
  3142  006412  6AC4               	clrf	4036,c	;volatile
  3143  006414  0012               	return		;funcret
  3144  006416                     __end_of_ADC_Initialize:
  3145                           	opt stack 0
  3146                           tosu	equ	0xFFF
  3147                           tosh	equ	0xFFE
  3148                           tosl	equ	0xFFD
  3149                           pclath	equ	0xFFA
  3150                           tblptru	equ	0xFF8
  3151                           tblptrh	equ	0xFF7
  3152                           tblptrl	equ	0xFF6
  3153                           tablat	equ	0xFF5
  3154                           prodh	equ	0xFF4
  3155                           prodl	equ	0xFF3
  3156                           intcon	equ	0xFF2
  3157                           indf0	equ	0xFEF
  3158                           postinc0	equ	0xFEE
  3159                           fsr0h	equ	0xFEA
  3160                           fsr0l	equ	0xFE9
  3161                           wreg	equ	0xFE8
  3162                           postinc1	equ	0xFE6
  3163                           plusw1	equ	0xFE3
  3164                           fsr1h	equ	0xFE2
  3165                           fsr1l	equ	0xFE1
  3166                           bsr	equ	0xFE0
  3167                           indf2	equ	0xFDF
  3168                           postinc2	equ	0xFDE
  3169                           postdec2	equ	0xFDD
  3170                           plusw2	equ	0xFDB
  3171                           fsr2h	equ	0xFDA
  3172                           fsr2l	equ	0xFD9
  3173                           status	equ	0xFD8
  3174                           
  3175 ;; *************** function _SYSLOG_Init *****************
  3176 ;; Defined at:
  3177 ;;		line 43 in file "../../TCPIP Library/source/syslog.c"
  3178 ;; Parameters:    Size  Location     Type
  3179 ;;		None
  3180 ;; Auto vars:     Size  Location     Type
  3181 ;;  t               4   11[BANK0 ] unsigned long 
  3182 ;; Return value:  Size  Location     Type
  3183 ;;		None               void
  3184 ;; Registers used:
  3185 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3186 ;; Tracked objects:
  3187 ;;		On entry : F/2
  3188 ;;		On exit  : 0/0
  3189 ;;		Unchanged: 0/0
  3190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3192 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3194 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3195 ;;Total ram usage:        4 bytes
  3196 ;; Hardware stack levels used:    1
  3197 ;; Hardware stack levels required when called:   11
  3198 ;; This function calls:
  3199 ;;		_printf
  3200 ;;		_time
  3201 ;; This function is called by:
  3202 ;;		_main
  3203 ;; This function uses a non-reentrant model
  3204 ;;
  3205                           
  3206                           	psect	text9
  3207  006000                     __ptext9:
  3208                           	opt stack 0
  3209  006000                     _SYSLOG_Init:
  3210                           	opt stack 19
  3211                           
  3212                           ; BSR set to: 2
  3213                           ;syslog.c: 45: unsigned long t = time(0);
  3214                           
  3215                           ;incstack = 0
  3216  006000  6A17               	clrf	time@t,c
  3217  006002  6A18               	clrf	time@t+1,c
  3218  006004  EC4F  F02D         	call	_time	;wreg free
  3219  006008  C017  F06B         	movff	?_time,SYSLOG_Init@t
  3220  00600C  C018  F06C         	movff	?_time+1,SYSLOG_Init@t+1
  3221  006010  C019  F06D         	movff	?_time+2,SYSLOG_Init@t+2
  3222  006014  C01A  F06E         	movff	?_time+3,SYSLOG_Init@t+3
  3223                           
  3224                           ;syslog.c: 47: printf("\r\n\r\nStarting Syslog at %u\r\n",t);
  3225  006018  C06B  F060         	movff	SYSLOG_Init@t,?_printf
  3226  00601C  C06C  F061         	movff	SYSLOG_Init@t+1,?_printf+1
  3227  006020  C06D  F062         	movff	SYSLOG_Init@t+2,?_printf+2
  3228  006024  C06E  F063         	movff	SYSLOG_Init@t+3,?_printf+3
  3229  006028  0E43               	movlw	STR_3& (0+255)
  3230  00602A  EF19  F031         	goto	_printf
  3231  00602E                     __end_of_SYSLOG_Init:
  3232                           	opt stack 0
  3233                           tosu	equ	0xFFF
  3234                           tosh	equ	0xFFE
  3235                           tosl	equ	0xFFD
  3236                           pclath	equ	0xFFA
  3237                           tblptru	equ	0xFF8
  3238                           tblptrh	equ	0xFF7
  3239                           tblptrl	equ	0xFF6
  3240                           tablat	equ	0xFF5
  3241                           prodh	equ	0xFF4
  3242                           prodl	equ	0xFF3
  3243                           intcon	equ	0xFF2
  3244                           indf0	equ	0xFEF
  3245                           postinc0	equ	0xFEE
  3246                           fsr0h	equ	0xFEA
  3247                           fsr0l	equ	0xFE9
  3248                           wreg	equ	0xFE8
  3249                           postinc1	equ	0xFE6
  3250                           plusw1	equ	0xFE3
  3251                           fsr1h	equ	0xFE2
  3252                           fsr1l	equ	0xFE1
  3253                           bsr	equ	0xFE0
  3254                           indf2	equ	0xFDF
  3255                           postinc2	equ	0xFDE
  3256                           postdec2	equ	0xFDD
  3257                           plusw2	equ	0xFDB
  3258                           fsr2h	equ	0xFDA
  3259                           fsr2l	equ	0xFD9
  3260                           status	equ	0xFD8
  3261                           
  3262 ;; *************** function _Network_WaitForLink *****************
  3263 ;; Defined at:
  3264 ;;		line 76 in file "../../TCPIP Library/source/network.c"
  3265 ;; Parameters:    Size  Location     Type
  3266 ;;		None
  3267 ;; Auto vars:     Size  Location     Type
  3268 ;;		None
  3269 ;; Return value:  Size  Location     Type
  3270 ;;		None               void
  3271 ;; Registers used:
  3272 ;;		wreg, status,2, status,0, cstack
  3273 ;; Tracked objects:
  3274 ;;		On entry : 0/2
  3275 ;;		On exit  : 0/0
  3276 ;;		Unchanged: 0/0
  3277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3282 ;;Total ram usage:        0 bytes
  3283 ;; Hardware stack levels used:    1
  3284 ;; Hardware stack levels required when called:   12
  3285 ;; This function calls:
  3286 ;;		_ETH_CheckLinkUp
  3287 ;; This function is called by:
  3288 ;;		_main
  3289 ;; This function uses a non-reentrant model
  3290 ;;
  3291                           
  3292                           	psect	text10
  3293  006474                     __ptext10:
  3294                           	opt stack 0
  3295  006474                     _Network_WaitForLink:
  3296                           	opt stack 18
  3297                           
  3298                           ;network.c: 78: while(!ETH_CheckLinkUp()) __nop();
  3299                           
  3300                           ;incstack = 0
  3301  006474  D001               	goto	l10175
  3302  006476                     l1017:
  3303  006476  F000               	nop	
  3304  006478                     l10175:
  3305  006478  ECE7  F02F         	call	_ETH_CheckLinkUp	;wreg free
  3306  00647C  0900               	iorlw	0
  3307  00647E  E0FB               	bz	l1017
  3308  006480  0012               	return		;funcret
  3309  006482                     __end_of_Network_WaitForLink:
  3310                           	opt stack 0
  3311                           tosu	equ	0xFFF
  3312                           tosh	equ	0xFFE
  3313                           tosl	equ	0xFFD
  3314                           pclath	equ	0xFFA
  3315                           tblptru	equ	0xFF8
  3316                           tblptrh	equ	0xFF7
  3317                           tblptrl	equ	0xFF6
  3318                           tablat	equ	0xFF5
  3319                           prodh	equ	0xFF4
  3320                           prodl	equ	0xFF3
  3321                           intcon	equ	0xFF2
  3322                           indf0	equ	0xFEF
  3323                           postinc0	equ	0xFEE
  3324                           fsr0h	equ	0xFEA
  3325                           fsr0l	equ	0xFE9
  3326                           wreg	equ	0xFE8
  3327                           postinc1	equ	0xFE6
  3328                           plusw1	equ	0xFE3
  3329                           fsr1h	equ	0xFE2
  3330                           fsr1l	equ	0xFE1
  3331                           bsr	equ	0xFE0
  3332                           indf2	equ	0xFDF
  3333                           postinc2	equ	0xFDE
  3334                           postdec2	equ	0xFDD
  3335                           plusw2	equ	0xFDB
  3336                           fsr2h	equ	0xFDA
  3337                           fsr2l	equ	0xFD9
  3338                           status	equ	0xFD8
  3339                           
  3340 ;; *************** function _Network_Manage *****************
  3341 ;; Defined at:
  3342 ;;		line 81 in file "../../TCPIP Library/source/network.c"
  3343 ;; Parameters:    Size  Location     Type
  3344 ;;		None
  3345 ;; Auto vars:     Size  Location     Type
  3346 ;;  now             4  186[BANK1 ] long 
  3347 ;; Return value:  Size  Location     Type
  3348 ;;		None               void
  3349 ;; Registers used:
  3350 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  3351 ;; Tracked objects:
  3352 ;;		On entry : 0/2
  3353 ;;		On exit  : F/1
  3354 ;;		Unchanged: 0/0
  3355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3357 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3358 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3359 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3360 ;;Total ram usage:        5 bytes
  3361 ;; Hardware stack levels used:    1
  3362 ;; Hardware stack levels required when called:   18
  3363 ;; This function calls:
  3364 ;;		_ARPV4_Update
  3365 ;;		_DHCP_Manage
  3366 ;;		_ETH_EventHandler
  3367 ;;		_Network_Read
  3368 ;;		_TCP_Update
  3369 ;;		_time
  3370 ;; This function is called by:
  3371 ;;		_main
  3372 ;; This function uses a non-reentrant model
  3373 ;;
  3374                           
  3375                           	psect	text11
  3376  0056E4                     __ptext11:
  3377                           	opt stack 0
  3378  0056E4                     _Network_Manage:
  3379                           	opt stack 12
  3380                           
  3381                           ;network.c: 83: time_t now;
  3382                           ;network.c: 84: static time_t nowPv = 0;
  3383                           ;network.c: 86: ETH_EventHandler();
  3384                           
  3385                           ;incstack = 0
  3386  0056E4  EC63  F02E         	call	_ETH_EventHandler	;wreg free
  3387                           
  3388                           ;network.c: 87: Network_Read();
  3389  0056E8  EC85  F029         	call	_Network_Read	;wreg free
  3390                           
  3391                           ;network.c: 90: time(&now);
  3392  0056EC  0EBA               	movlw	low Network_Manage@now
  3393  0056EE  6E17               	movwf	time@t,c
  3394  0056F0  0E01               	movlw	high Network_Manage@now
  3395  0056F2  6E18               	movwf	time@t+1,c
  3396  0056F4  EC4F  F02D         	call	_time	;wreg free
  3397                           
  3398                           ;network.c: 91: if(now >= arpTimer)
  3399  0056F8  0102               	movlb	2	; () banked
  3400  0056FA  51B8               	movf	_arpTimer& (0+255),w,b
  3401  0056FC  0101               	movlb	1	; () banked
  3402  0056FE  5DBA               	subwf	Network_Manage@now& (0+255),w,b
  3403  005700  0102               	movlb	2	; () banked
  3404  005702  51B9               	movf	(_arpTimer+1)& (0+255),w,b
  3405  005704  0101               	movlb	1	; () banked
  3406  005706  59BB               	subwfb	(Network_Manage@now+1)& (0+255),w,b
  3407  005708  0102               	movlb	2	; () banked
  3408  00570A  51BA               	movf	(_arpTimer+2)& (0+255),w,b
  3409  00570C  0101               	movlb	1	; () banked
  3410  00570E  59BC               	subwfb	(Network_Manage@now+2)& (0+255),w,b
  3411  005710  51BD               	movf	(Network_Manage@now+3)& (0+255),w,b
  3412  005712  0A80               	xorlw	128
  3413  005714  6FB9               	movwf	??_Network_Manage& (0+255),b
  3414  005716  0102               	movlb	2	; () banked
  3415  005718  51BB               	movf	(_arpTimer+3)& (0+255),w,b
  3416  00571A  0A80               	xorlw	128
  3417  00571C  0101               	movlb	1	; () banked
  3418  00571E  59B9               	subwfb	??_Network_Manage& (0+255),w,b
  3419  005720  E303               	bnc	l10189
  3420                           
  3421                           ; BSR set to: 1
  3422                           ;network.c: 92: {
  3423                           ;network.c: 93: ARPV4_Update();
  3424  005722  ECCA  F030         	call	_ARPV4_Update	;wreg free
  3425                           
  3426                           ; BSR set to: 1
  3427                           ;network.c: 94: arpTimer += 10;
  3428  005726  D821               	call	PL665	;call to abstracted procedure
  3429  005728                     l10189:
  3430                           
  3431                           ;network.c: 95: }
  3432                           ;network.c: 96: if(now > nowPv)
  3433  005728  0101               	movlb	1	; () banked
  3434  00572A  51BA               	movf	Network_Manage@now& (0+255),w,b
  3435  00572C  0102               	movlb	2	; () banked
  3436  00572E  5D18               	subwf	Network_Manage@nowPv& (0+255),w,b
  3437  005730  0101               	movlb	1	; () banked
  3438  005732  51BB               	movf	(Network_Manage@now+1)& (0+255),w,b
  3439  005734  0102               	movlb	2	; () banked
  3440  005736  5919               	subwfb	(Network_Manage@nowPv+1)& (0+255),w,b
  3441  005738  0101               	movlb	1	; () banked
  3442  00573A  51BC               	movf	(Network_Manage@now+2)& (0+255),w,b
  3443  00573C  0102               	movlb	2	; () banked
  3444  00573E  591A               	subwfb	(Network_Manage@nowPv+2)& (0+255),w,b
  3445  005740  511B               	movf	(Network_Manage@nowPv+3)& (0+255),w,b
  3446  005742  0A80               	xorlw	128
  3447  005744  0101               	movlb	1	; () banked
  3448  005746  6FB9               	movwf	??_Network_Manage& (0+255),b
  3449  005748  51BD               	movf	(Network_Manage@now+3)& (0+255),w,b
  3450  00574A  0A80               	xorlw	128
  3451  00574C  59B9               	subwfb	??_Network_Manage& (0+255),w,b
  3452  00574E  E204               	bc	l10193
  3453                           
  3454                           ; BSR set to: 1
  3455                           ;network.c: 97: {
  3456                           ;network.c: 98: DHCP_Manage();
  3457  005750  EC4A  F02C         	call	_DHCP_Manage	;wreg free
  3458                           
  3459                           ;network.c: 100: TCP_Update();
  3460  005754  EC00  F020         	call	_TCP_Update	;wreg free
  3461  005758                     l10193:
  3462                           
  3463                           ; BSR set to: 1
  3464                           ;network.c: 101: }
  3465                           ;network.c: 102: nowPv = now;
  3466  005758  C1BA  F218         	movff	Network_Manage@now,Network_Manage@nowPv
  3467  00575C  C1BB  F219         	movff	Network_Manage@now+1,Network_Manage@nowPv+1
  3468  005760  C1BC  F21A         	movff	Network_Manage@now+2,Network_Manage@nowPv+2
  3469  005764  C1BD  F21B         	movff	Network_Manage@now+3,Network_Manage@nowPv+3
  3470                           
  3471                           ; BSR set to: 1
  3472  005768  0012               	return		;funcret
  3473  00576A                     __end_of_Network_Manage:
  3474                           	opt stack 0
  3475  00576A                     PL665:
  3476                           	opt stack 17
  3477  00576A  0E0A               	movlw	10
  3478  00576C  0102               	movlb	2	; () banked
  3479  00576E  27B8               	addwf	_arpTimer& (0+255),f,b
  3480  005770  0E00               	movlw	0
  3481  005772  23B9               	addwfc	(_arpTimer+1)& (0+255),f,b
  3482  005774  23BA               	addwfc	(_arpTimer+2)& (0+255),f,b
  3483  005776  23BB               	addwfc	(_arpTimer+3)& (0+255),f,b
  3484  005778  0C00               	retlw	0
  3485  00577A                     __end_ofPL665:
  3486                           	opt stack 0
  3487                           tosu	equ	0xFFF
  3488                           tosh	equ	0xFFE
  3489                           tosl	equ	0xFFD
  3490                           pclath	equ	0xFFA
  3491                           tblptru	equ	0xFF8
  3492                           tblptrh	equ	0xFF7
  3493                           tblptrl	equ	0xFF6
  3494                           tablat	equ	0xFF5
  3495                           prodh	equ	0xFF4
  3496                           prodl	equ	0xFF3
  3497                           intcon	equ	0xFF2
  3498                           indf0	equ	0xFEF
  3499                           postinc0	equ	0xFEE
  3500                           fsr0h	equ	0xFEA
  3501                           fsr0l	equ	0xFE9
  3502                           wreg	equ	0xFE8
  3503                           postinc1	equ	0xFE6
  3504                           plusw1	equ	0xFE3
  3505                           fsr1h	equ	0xFE2
  3506                           fsr1l	equ	0xFE1
  3507                           bsr	equ	0xFE0
  3508                           indf2	equ	0xFDF
  3509                           postinc2	equ	0xFDE
  3510                           postdec2	equ	0xFDD
  3511                           plusw2	equ	0xFDB
  3512                           fsr2h	equ	0xFDA
  3513                           fsr2l	equ	0xFD9
  3514                           status	equ	0xFD8
  3515                           
  3516 ;; *************** function _TCP_Update *****************
  3517 ;; Defined at:
  3518 ;;		line 1417 in file "../../TCPIP Library/source/tcpv4.c"
  3519 ;; Parameters:    Size  Location     Type
  3520 ;;		None
  3521 ;; Auto vars:     Size  Location     Type
  3522 ;;  tcbPtr          2   27[BANK1 ] PTR struct .
  3523 ;;		 -> ?_sprintf(2), ?_printf(2), main@str(32), STR_6(13), 
  3524 ;;		 -> STR_5(17), Network_Read@debug_str(80), STR_1(15), NULL(0), 
  3525 ;;  count           2   25[BANK1 ] int 
  3526 ;; Return value:  Size  Location     Type
  3527 ;;		None               void
  3528 ;; Registers used:
  3529 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3530 ;; Tracked objects:
  3531 ;;		On entry : E/1
  3532 ;;		On exit  : F/1
  3533 ;;		Unchanged: 0/0
  3534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3536 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3537 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3538 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3539 ;;Total ram usage:       12 bytes
  3540 ;; Hardware stack levels used:    1
  3541 ;; Hardware stack levels required when called:   15
  3542 ;; This function calls:
  3543 ;;		_TCP_FiniteStateMachine
  3544 ;; This function is called by:
  3545 ;;		_Network_Manage
  3546 ;; This function uses a non-reentrant model
  3547 ;;
  3548                           
  3549                           	psect	text12
  3550  004000                     __ptext12:
  3551                           	opt stack 0
  3552  004000                     _TCP_Update:
  3553                           	opt stack 14
  3554                           
  3555                           ;tcpv4.c: 1425: nextSequenceNumber++;
  3556                           
  3557                           ; BSR set to: 1
  3558                           ;incstack = 0
  3559  004000  0101               	movlb	1	; () banked
  3560  004002  6B19               	clrf	TCP_Update@count& (0+255),b
  3561  004004  6B1A               	clrf	(TCP_Update@count+1)& (0+255),b
  3562                           
  3563                           ; BSR set to: 1
  3564                           ;tcpv4.c: 1428: nextAvailablePort = nextAvailablePort + 1;
  3565  004006  0102               	movlb	2	; () banked
  3566  004008  4B32               	infsnz	_nextAvailablePort& (0+255),f,b
  3567  00400A  2B33               	incf	(_nextAvailablePort+1)& (0+255),f,b
  3568                           
  3569                           ; BSR set to: 2
  3570                           ;tcpv4.c: 1429: if (nextAvailablePort < (1024u))
  3571  00400C  0E04               	movlw	4
  3572  00400E  5D33               	subwf	(_nextAvailablePort+1)& (0+255),w,b
  3573  004010  E203               	bc	l10105
  3574                           
  3575                           ; BSR set to: 2
  3576                           ;tcpv4.c: 1430: {
  3577                           ;tcpv4.c: 1431: nextAvailablePort = (1024u);
  3578  004012  0E04               	movlw	4
  3579  004014  6F33               	movwf	(_nextAvailablePort+1)& (0+255),b
  3580  004016  6B32               	clrf	_nextAvailablePort& (0+255),b
  3581  004018                     l10105:
  3582                           
  3583                           ; BSR set to: 2
  3584                           ;tcpv4.c: 1432: }
  3585                           ;tcpv4.c: 1435: tcbPtr = tcbList;
  3586  004018  C1CE  F11B         	movff	_tcbList,TCP_Update@tcbPtr
  3587  00401C  C1CF  F11C         	movff	_tcbList+1,TCP_Update@tcbPtr+1
  3588                           
  3589                           ;tcpv4.c: 1436: while((tcbPtr != (0)) && (count < tcbListSize))
  3590  004020  D0E8               	goto	l10125
  3591  004022                     l10107:
  3592                           
  3593                           ; BSR set to: 1
  3594                           ;tcpv4.c: 1437: {
  3595                           ;tcpv4.c: 1438: if (tcbPtr->timeout > 0)
  3596  004022  0E30               	movlw	48
  3597  004024  D8FB               	call	PL455	;call to abstracted procedure
  3598  004026  64F7               	cpfsgt	tblptrh,c
  3599  004028  D002               	bra	u15897
  3600  00402A  D905               	call	PL629	;call to abstracted procedure
  3601  00402C  D003               	bra	u15890
  3602  00402E                     u15897:
  3603  00402E  EC6D  F011         	call	PL431	;call to abstracted procedure
  3604  004032  D908               	call	PL701	;call to abstracted procedure
  3605  004034                     u15890:
  3606  004034  0101               	movlb	1	; () banked
  3607  004036  5113               	movf	(??_TCP_Update+2)& (0+255),w,b
  3608  004038  1114               	iorwf	(??_TCP_Update+3)& (0+255),w,b
  3609  00403A  E101 D0C5          	bz	l10121
  3610                           
  3611                           ; BSR set to: 1
  3612                           ;tcpv4.c: 1439: {
  3613                           ;tcpv4.c: 1440: ;
  3614                           ;tcpv4.c: 1441: tcbPtr->timeout = tcbPtr->timeout - 1;
  3615  00403E  6911               	setf	??_TCP_Update& (0+255),b
  3616  004040  6912               	setf	(??_TCP_Update+1)& (0+255),b
  3617  004042  0E30               	movlw	48
  3618  004044  251B               	addwf	TCP_Update@tcbPtr& (0+255),w,b
  3619  004046  6F13               	movwf	(??_TCP_Update+2)& (0+255),b
  3620  004048  0E00               	movlw	0
  3621  00404A  211C               	addwfc	(TCP_Update@tcbPtr+1)& (0+255),w,b
  3622  00404C  6F14               	movwf	(??_TCP_Update+3)& (0+255),b
  3623  00404E  C113  FFF6         	movff	??_TCP_Update+2,tblptrl
  3624  004052  C114  FFF7         	movff	??_TCP_Update+3,tblptrh
  3625  004056  0E00               	movlw	low (__smallconst shr (0+16))
  3626  004058  6EF8               	movwf	tblptru,c
  3627  00405A  0E0F               	movlw	(high __ramtop+-1)
  3628  00405C  64F7               	cpfsgt	tblptrh,c
  3629  00405E  D007               	bra	u15917
  3630  004060  0009               	tblrd		*+
  3631  004062  CFF5 F115          	movff	tablat,??_TCP_Update+4
  3632  004066  0009               	tblrd		*+
  3633  004068  CFF5 F116          	movff	tablat,??_TCP_Update+5
  3634  00406C  D006               	bra	u15910
  3635  00406E                     u15917:
  3636  00406E  EC6D  F011         	call	PL431	;call to abstracted procedure
  3637  004072  CFEE F115          	movff	postinc0,??_TCP_Update+4
  3638  004076  CFEE F116          	movff	postinc0,??_TCP_Update+5
  3639  00407A                     u15910:
  3640  00407A  0101               	movlb	1	; () banked
  3641  00407C  5111               	movf	??_TCP_Update& (0+255),w,b
  3642  00407E  2715               	addwf	(??_TCP_Update+4)& (0+255),f,b
  3643  004080  5112               	movf	(??_TCP_Update+1)& (0+255),w,b
  3644  004082  2316               	addwfc	(??_TCP_Update+5)& (0+255),f,b
  3645  004084  0E30               	movlw	48
  3646  004086  251B               	addwf	TCP_Update@tcbPtr& (0+255),w,b
  3647  004088  6F17               	movwf	(??_TCP_Update+6)& (0+255),b
  3648  00408A  0E00               	movlw	0
  3649  00408C  211C               	addwfc	(TCP_Update@tcbPtr+1)& (0+255),w,b
  3650  00408E  6F18               	movwf	(??_TCP_Update+7)& (0+255),b
  3651  004090  C117  FFF6         	movff	??_TCP_Update+6,tblptrl
  3652  004094  C118  FFF7         	movff	??_TCP_Update+7,tblptrh
  3653  004098  0E00               	movlw	low (__smallconst shr (0+16))
  3654  00409A  6EF8               	movwf	tblptru,c
  3655  00409C  0E0F               	movlw	(high __ramtop+-1)
  3656  00409E  64F7               	cpfsgt	tblptrh,c
  3657  0040A0  D007               	bra	u15927
  3658  0040A2  C115  FFF5         	movff	??_TCP_Update+4,tablat
  3659  0040A6  000D               	tblwt		*+
  3660  0040A8  C116  FFF5         	movff	??_TCP_Update+5,tablat
  3661  0040AC  000C               	tblwt		*
  3662  0040AE  D006               	bra	u15920
  3663  0040B0                     u15927:
  3664  0040B0  EC6D  F011         	call	PL431	;call to abstracted procedure
  3665  0040B4  C115  FFEE         	movff	??_TCP_Update+4,postinc0
  3666  0040B8  C116  FFEF         	movff	??_TCP_Update+5,indf0
  3667  0040BC                     u15920:
  3668                           
  3669                           ;tcpv4.c: 1443: if (tcbPtr->timeout == 0)
  3670  0040BC  0E30               	movlw	48
  3671  0040BE  0101               	movlb	1	; () banked
  3672  0040C0  D8AD               	call	PL455	;call to abstracted procedure
  3673  0040C2  64F7               	cpfsgt	tblptrh,c
  3674  0040C4  D002               	bra	u15937
  3675  0040C6  D8B7               	call	PL629	;call to abstracted procedure
  3676  0040C8  D003               	bra	u15930
  3677  0040CA                     u15937:
  3678  0040CA  EC6D  F011         	call	PL431	;call to abstracted procedure
  3679  0040CE  D8BA               	call	PL701	;call to abstracted procedure
  3680  0040D0                     u15930:
  3681  0040D0  0101               	movlb	1	; () banked
  3682  0040D2  5113               	movf	(??_TCP_Update+2)& (0+255),w,b
  3683  0040D4  1114               	iorwf	(??_TCP_Update+3)& (0+255),w,b
  3684  0040D6  E178               	bnz	l10121
  3685                           
  3686                           ; BSR set to: 1
  3687                           ;tcpv4.c: 1444: {
  3688                           ;tcpv4.c: 1445: if (tcbPtr->timeoutsCount > 0)
  3689  0040D8  0E34               	movlw	52
  3690  0040DA  D8A0               	call	PL455	;call to abstracted procedure
  3691  0040DC  64F7               	cpfsgt	tblptrh,c
  3692  0040DE  D003               	bra	u15957
  3693  0040E0  0008               	tblrd		*
  3694  0040E2  50F5               	movf	tablat,w,c
  3695  0040E4  D003               	bra	u15950
  3696  0040E6                     u15957:
  3697  0040E6  EC6D  F011         	call	PL431	;call to abstracted procedure
  3698  0040EA  50EF               	movf	indf0,w,c
  3699  0040EC                     u15950:
  3700  0040EC  0900               	iorlw	0
  3701  0040EE  E06C               	bz	l10121
  3702                           
  3703                           ;tcpv4.c: 1446: {
  3704                           ;tcpv4.c: 1448: if (tcbPtr->connectionEvent == NOP)
  3705  0040F0  0E2B               	movlw	43
  3706  0040F2  0101               	movlb	1	; () banked
  3707  0040F4  D893               	call	PL455	;call to abstracted procedure
  3708  0040F6  64F7               	cpfsgt	tblptrh,c
  3709  0040F8  D003               	bra	u15977
  3710  0040FA  0008               	tblrd		*
  3711  0040FC  50F5               	movf	tablat,w,c
  3712  0040FE  D003               	bra	u15970
  3713  004100                     u15977:
  3714  004100  EC6D  F011         	call	PL431	;call to abstracted procedure
  3715  004104  50EF               	movf	indf0,w,c
  3716  004106                     u15970:
  3717  004106  0A0D               	xorlw	13
  3718  004108  E15F               	bnz	l10121
  3719                           
  3720                           ;tcpv4.c: 1449: {
  3721                           ;tcpv4.c: 1450: tcbPtr->timeout = tcbPtr->timeoutReloadValue;
  3722  00410A  0E32               	movlw	50
  3723  00410C  0101               	movlb	1	; () banked
  3724  00410E  D886               	call	PL455	;call to abstracted procedure
  3725  004110  64F7               	cpfsgt	tblptrh,c
  3726  004112  D002               	bra	u15997
  3727  004114  D890               	call	PL629	;call to abstracted procedure
  3728  004116  D003               	bra	u15990
  3729  004118                     u15997:
  3730  004118  EC6D  F011         	call	PL431	;call to abstracted procedure
  3731  00411C  D893               	call	PL701	;call to abstracted procedure
  3732  00411E                     u15990:
  3733  00411E  0E30               	movlw	48
  3734  004120  0101               	movlb	1	; () banked
  3735  004122  251B               	addwf	TCP_Update@tcbPtr& (0+255),w,b
  3736  004124  6F15               	movwf	(??_TCP_Update+4)& (0+255),b
  3737  004126  0E00               	movlw	0
  3738  004128  211C               	addwfc	(TCP_Update@tcbPtr+1)& (0+255),w,b
  3739  00412A  6F16               	movwf	(??_TCP_Update+5)& (0+255),b
  3740  00412C  C115  FFF6         	movff	??_TCP_Update+4,tblptrl
  3741  004130  C116  FFF7         	movff	??_TCP_Update+5,tblptrh
  3742  004134  0E00               	movlw	low (__smallconst shr (0+16))
  3743  004136  6EF8               	movwf	tblptru,c
  3744  004138  0E0F               	movlw	(high __ramtop+-1)
  3745  00413A  64F7               	cpfsgt	tblptrh,c
  3746  00413C  D007               	bra	u16007
  3747  00413E  C113  FFF5         	movff	??_TCP_Update+2,tablat
  3748  004142  000D               	tblwt		*+
  3749  004144  C114  FFF5         	movff	??_TCP_Update+3,tablat
  3750  004148  000C               	tblwt		*
  3751  00414A  D006               	bra	u16000
  3752  00414C                     u16007:
  3753  00414C  EC6D  F011         	call	PL431	;call to abstracted procedure
  3754  004150  C113  FFEE         	movff	??_TCP_Update+2,postinc0
  3755  004154  C114  FFEF         	movff	??_TCP_Update+3,indf0
  3756  004158                     u16000:
  3757                           
  3758                           ;tcpv4.c: 1451: tcbPtr->timeoutsCount = tcbPtr->timeoutsCount - 1;
  3759  004158  0E34               	movlw	52
  3760  00415A  0101               	movlb	1	; () banked
  3761  00415C  D85F               	call	PL455	;call to abstracted procedure
  3762  00415E  64F7               	cpfsgt	tblptrh,c
  3763  004160  D003               	bra	u16017
  3764  004162  0008               	tblrd		*
  3765  004164  50F5               	movf	tablat,w,c
  3766  004166  D003               	bra	u16010
  3767  004168                     u16017:
  3768  004168  EC6D  F011         	call	PL431	;call to abstracted procedure
  3769  00416C  50EF               	movf	indf0,w,c
  3770  00416E                     u16010:
  3771  00416E  0101               	movlb	1	; () banked
  3772  004170  6F13               	movwf	(??_TCP_Update+2)& (0+255),b
  3773  004172  0713               	decf	(??_TCP_Update+2)& (0+255),f,b
  3774  004174  0E34               	movlw	52
  3775  004176  251B               	addwf	TCP_Update@tcbPtr& (0+255),w,b
  3776  004178  6F14               	movwf	(??_TCP_Update+3)& (0+255),b
  3777  00417A  0E00               	movlw	0
  3778  00417C  211C               	addwfc	(TCP_Update@tcbPtr+1)& (0+255),w,b
  3779  00417E  6F15               	movwf	(??_TCP_Update+4)& (0+255),b
  3780  004180  C114  FFF6         	movff	??_TCP_Update+3,tblptrl
  3781  004184  C115  FFF7         	movff	??_TCP_Update+4,tblptrh
  3782  004188  0E00               	movlw	low (__smallconst shr (0+16))
  3783  00418A  6EF8               	movwf	tblptru,c
  3784  00418C  0E0F               	movlw	(high __ramtop+-1)
  3785  00418E  64F7               	cpfsgt	tblptrh,c
  3786  004190  D004               	bra	u16027
  3787  004192  C113  FFF5         	movff	??_TCP_Update+2,tablat
  3788  004196  000C               	tblwt		*
  3789  004198  D004               	bra	u16020
  3790  00419A                     u16027:
  3791  00419A  EC6D  F011         	call	PL431	;call to abstracted procedure
  3792  00419E  C113  FFEF         	movff	??_TCP_Update+2,indf0
  3793  0041A2                     u16020:
  3794                           
  3795                           ;tcpv4.c: 1452: tcbPtr->connectionEvent = TIMEOUT;
  3796  0041A2  0E2B               	movlw	43
  3797  0041A4  0101               	movlb	1	; () banked
  3798  0041A6  D83A               	call	PL455	;call to abstracted procedure
  3799  0041A8  64F7               	cpfsgt	tblptrh,c
  3800  0041AA  D004               	bra	u16037
  3801  0041AC  0E0C               	movlw	12
  3802  0041AE  6EF5               	movwf	tablat,c
  3803  0041B0  000C               	tblwt		*
  3804  0041B2  D004               	bra	u16030
  3805  0041B4                     u16037:
  3806  0041B4  EC6D  F011         	call	PL431	;call to abstracted procedure
  3807  0041B8  0E0C               	movlw	12
  3808  0041BA  6EEF               	movwf	indf0,c
  3809  0041BC                     u16030:
  3810                           
  3811                           ;tcpv4.c: 1453: currentTCB = tcbPtr;
  3812  0041BC  C11B  F03F         	movff	TCP_Update@tcbPtr,_currentTCB
  3813  0041C0  C11C  F040         	movff	TCP_Update@tcbPtr+1,_currentTCB+1
  3814                           
  3815                           ;tcpv4.c: 1454: TCP_FiniteStateMachine();
  3816  0041C4  EC62  F008         	call	_TCP_FiniteStateMachine	;wreg free
  3817  0041C8                     l10121:
  3818                           
  3819                           ;tcpv4.c: 1455: }
  3820                           ;tcpv4.c: 1456: }
  3821                           ;tcpv4.c: 1457: }
  3822                           ;tcpv4.c: 1458: }
  3823                           ;tcpv4.c: 1459: tcbPtr = tcbPtr->nextTCB;
  3824  0041C8  0E2C               	movlw	44
  3825  0041CA  0101               	movlb	1	; () banked
  3826  0041CC  D827               	call	PL455	;call to abstracted procedure
  3827  0041CE  64F7               	cpfsgt	tblptrh,c
  3828  0041D0  D007               	bra	u16047
  3829  0041D2  0009               	tblrd		*+
  3830  0041D4  CFF5 F11B          	movff	tablat,TCP_Update@tcbPtr
  3831  0041D8  0009               	tblrd		*+
  3832  0041DA  CFF5 F11C          	movff	tablat,TCP_Update@tcbPtr+1
  3833  0041DE  D006               	bra	u16040
  3834  0041E0                     u16047:
  3835  0041E0  EC6D  F011         	call	PL431	;call to abstracted procedure
  3836  0041E4  CFEE F11B          	movff	postinc0,TCP_Update@tcbPtr
  3837  0041E8  CFEE F11C          	movff	postinc0,TCP_Update@tcbPtr+1
  3838  0041EC                     u16040:
  3839                           
  3840                           ;tcpv4.c: 1460: count ++;
  3841  0041EC  0101               	movlb	1	; () banked
  3842  0041EE  4B19               	infsnz	TCP_Update@count& (0+255),f,b
  3843  0041F0  2B1A               	incf	(TCP_Update@count+1)& (0+255),f,b
  3844  0041F2                     l10125:
  3845  0041F2  0101               	movlb	1	; () banked
  3846  0041F4  511B               	movf	TCP_Update@tcbPtr& (0+255),w,b
  3847  0041F6  111C               	iorwf	(TCP_Update@tcbPtr+1)& (0+255),w,b
  3848  0041F8  B4D8               	btfsc	status,2,c
  3849  0041FA  0012               	return	
  3850                           
  3851                           ; BSR set to: 1
  3852  0041FC  C047  F111         	movff	_tcbListSize,??_TCP_Update
  3853  004200  6B12               	clrf	(??_TCP_Update+1)& (0+255),b
  3854  004202  BF11               	btfsc	??_TCP_Update& (0+255),7,b
  3855  004204  0712               	decf	(??_TCP_Update+1)& (0+255),f,b
  3856  004206  5111               	movf	??_TCP_Update& (0+255),w,b
  3857  004208  5D19               	subwf	TCP_Update@count& (0+255),w,b
  3858  00420A  511A               	movf	(TCP_Update@count+1)& (0+255),w,b
  3859  00420C  0A80               	xorlw	128
  3860  00420E  6F13               	movwf	(??_TCP_Update+2)& (0+255),b
  3861  004210  5112               	movf	(??_TCP_Update+1)& (0+255),w,b
  3862  004212  0A80               	xorlw	128
  3863  004214  5913               	subwfb	(??_TCP_Update+2)& (0+255),w,b
  3864  004216  E201 D704          	bnc	l10107
  3865                           
  3866                           ; BSR set to: 1
  3867  00421A  0012               	return		;funcret
  3868  00421C                     __end_of_TCP_Update:
  3869                           	opt stack 0
  3870  00421C                     PL455:
  3871                           	opt stack 14
  3872  00421C  251B               	addwf	TCP_Update@tcbPtr& (0+255),w,b
  3873  00421E  6F11               	movwf	??_TCP_Update& (0+255),b
  3874  004220  0E00               	movlw	0
  3875  004222  211C               	addwfc	(TCP_Update@tcbPtr+1)& (0+255),w,b
  3876  004224  6F12               	movwf	(??_TCP_Update+1)& (0+255),b
  3877  004226  C111  FFF6         	movff	??_TCP_Update,tblptrl
  3878  00422A  C112  FFF7         	movff	??_TCP_Update+1,tblptrh
  3879  00422E  0E00               	movlw	low (__smallconst shr (0+16))
  3880  004230  6EF8               	movwf	tblptru,c
  3881  004232  0E0F               	movlw	(high __ramtop+-1)
  3882  004234  0012               	return	
  3883  004236                     __end_ofPL455:
  3884                           	opt stack 0
  3885  004236                     PL629:
  3886                           	opt stack 14
  3887  004236  0009               	tblrd		*+
  3888  004238  CFF5 F113          	movff	tablat,??_TCP_Update+2
  3889  00423C  0009               	tblrd		*+
  3890  00423E  CFF5 F114          	movff	tablat,??_TCP_Update+3
  3891  004242  0012               	return	
  3892  004244                     __end_ofPL629:
  3893                           	opt stack 0
  3894  004244                     PL701:
  3895                           	opt stack 14
  3896  004244  CFEE F113          	movff	postinc0,??_TCP_Update+2
  3897  004248  CFEE F114          	movff	postinc0,??_TCP_Update+3
  3898  00424C  0012               	return	
  3899  00424E                     __end_ofPL701:
  3900                           	opt stack 0
  3901                           tosu	equ	0xFFF
  3902                           tosh	equ	0xFFE
  3903                           tosl	equ	0xFFD
  3904                           pclath	equ	0xFFA
  3905                           tblptru	equ	0xFF8
  3906                           tblptrh	equ	0xFF7
  3907                           tblptrl	equ	0xFF6
  3908                           tablat	equ	0xFF5
  3909                           prodh	equ	0xFF4
  3910                           prodl	equ	0xFF3
  3911                           intcon	equ	0xFF2
  3912                           indf0	equ	0xFEF
  3913                           postinc0	equ	0xFEE
  3914                           fsr0h	equ	0xFEA
  3915                           fsr0l	equ	0xFE9
  3916                           wreg	equ	0xFE8
  3917                           postinc1	equ	0xFE6
  3918                           plusw1	equ	0xFE3
  3919                           fsr1h	equ	0xFE2
  3920                           fsr1l	equ	0xFE1
  3921                           bsr	equ	0xFE0
  3922                           indf2	equ	0xFDF
  3923                           postinc2	equ	0xFDE
  3924                           postdec2	equ	0xFDD
  3925                           plusw2	equ	0xFDB
  3926                           fsr2h	equ	0xFDA
  3927                           fsr2l	equ	0xFD9
  3928                           status	equ	0xFD8
  3929                           
  3930 ;; *************** function _Network_Read *****************
  3931 ;; Defined at:
  3932 ;;		line 105 in file "../../TCPIP Library/source/network.c"
  3933 ;; Parameters:    Size  Location     Type
  3934 ;;		None
  3935 ;; Auto vars:     Size  Location     Type
  3936 ;;  debug_str      80   91[BANK1 ] unsigned char [80]
  3937 ;;  header         14  171[BANK1 ] struct .
  3938 ;; Return value:  Size  Location     Type
  3939 ;;		None               void
  3940 ;; Registers used:
  3941 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  3942 ;; Tracked objects:
  3943 ;;		On entry : 0/2
  3944 ;;		On exit  : 0/0
  3945 ;;		Unchanged: 0/0
  3946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3948 ;;      Locals:         0       0      94       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3949 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3950 ;;      Totals:         0       0      98       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3951 ;;Total ram usage:       98 bytes
  3952 ;; Hardware stack levels used:    1
  3953 ;; Hardware stack levels required when called:   17
  3954 ;; This function calls:
  3955 ;;		_ARPV4_Packet
  3956 ;;		_ETH_Flush
  3957 ;;		_ETH_NextPacketUpdate
  3958 ;;		_ETH_ReadBlock
  3959 ;;		_IPV4_Packet
  3960 ;;		_sprintf
  3961 ;; This function is called by:
  3962 ;;		_Network_Manage
  3963 ;; This function uses a non-reentrant model
  3964 ;;
  3965                           
  3966                           	psect	text13
  3967  00530A                     __ptext13:
  3968                           	opt stack 0
  3969  00530A                     _Network_Read:
  3970                           	opt stack 12
  3971                           
  3972                           ;network.c: 107: ethernetFrame_t header;
  3973                           ;network.c: 108: char debug_str[80];
  3974                           ;network.c: 110: if(ethData.pktReady)
  3975                           
  3976                           ; BSR set to: 1
  3977                           ;incstack = 0
  3978  00530A  0101               	movlb	1	; () banked
  3979  00530C  A3BF               	btfss	_ethData& (0+255),1,b	;volatile
  3980  00530E  0012               	return	
  3981                           
  3982                           ; BSR set to: 1
  3983                           ;network.c: 111: {
  3984                           ;network.c: 112: ETH_NextPacketUpdate();
  3985  005310  EC24  F02D         	call	_ETH_NextPacketUpdate	;wreg free
  3986                           
  3987                           ; BSR set to: 2
  3988                           ;network.c: 113: ETH_ReadBlock((char *)&header, sizeof(header));
  3989  005314  0EAB               	movlw	low Network_Read@header
  3990  005316  6E17               	movwf	ETH_ReadBlock@buffer,c
  3991  005318  0E01               	movlw	high Network_Read@header
  3992  00531A  6E18               	movwf	ETH_ReadBlock@buffer+1,c
  3993  00531C  6A1A               	clrf	ETH_ReadBlock@length+1,c
  3994  00531E  0E0E               	movlw	14
  3995  005320  6E19               	movwf	ETH_ReadBlock@length,c
  3996  005322  ECC5  F02C         	call	_ETH_ReadBlock	;wreg free
  3997                           
  3998                           ; BSR set to: 2
  3999                           ;network.c: 114: header.id.type = ((((uint16_t)header.id.type & (uint16_t)0xFF00) >> 8) 
      +                          | (((uint16_t)header.id.type & (uint16_t)0x00FF) << 8));
  4000  005326  0101               	movlb	1	; () banked
  4001  005328  51B7               	movf	(Network_Read@header+12)& (0+255),w,b
  4002  00532A  6F58               	movwf	(??_Network_Read+1)& (0+255),b
  4003  00532C  6B57               	clrf	??_Network_Read& (0+255),b
  4004  00532E  EE21  F0B7         	lfsr	2,Network_Read@header+12
  4005  005332  CFDE F159          	movff	postinc2,??_Network_Read+2
  4006  005336  CFDD F15A          	movff	postdec2,??_Network_Read+3
  4007  00533A  C15A  F159         	movff	??_Network_Read+3,??_Network_Read+2
  4008  00533E  6B5A               	clrf	(??_Network_Read+3)& (0+255),b
  4009  005340  6B5A               	clrf	(??_Network_Read+3)& (0+255),b
  4010  005342  5157               	movf	??_Network_Read& (0+255),w,b
  4011  005344  1159               	iorwf	(??_Network_Read+2)& (0+255),w,b
  4012  005346  6FB7               	movwf	(Network_Read@header+12)& (0+255),b
  4013  005348  5158               	movf	(??_Network_Read+1)& (0+255),w,b
  4014  00534A  115A               	iorwf	(??_Network_Read+3)& (0+255),w,b
  4015  00534C  6FB8               	movwf	(Network_Read@header+13)& (0+255),b
  4016                           
  4017                           ;network.c: 115: switch (header.id.type)
  4018  00534E  D01B               	goto	l10081
  4019  005350                     l10073:
  4020                           
  4021                           ; BSR set to: 1
  4022                           ;network.c: 121: ;
  4023                           ;network.c: 122: ARPV4_Packet();
  4024  005350  EC3A  F01A         	call	_ARPV4_Packet	;wreg free
  4025                           
  4026                           ;network.c: 123: break;
  4027  005354  EF79  F02D         	goto	_ETH_Flush
  4028  005358                     l10075:
  4029                           
  4030                           ; BSR set to: 1
  4031                           ;network.c: 125: ;
  4032                           ;network.c: 126: IPV4_Packet();
  4033  005358  ECDB  F01B         	call	_IPV4_Packet	;wreg free
  4034                           
  4035                           ;network.c: 127: break;
  4036  00535C  EF79  F02D         	goto	_ETH_Flush
  4037  005360                     l10077:
  4038                           
  4039                           ; BSR set to: 1
  4040                           ;network.c: 132: sprintf(debug_str,"%x : %d",header.id.type,header.id.length);
  4041  005360  0E5B               	movlw	low Network_Read@debug_str
  4042  005362  0100               	movlb	0	; () banked
  4043  005364  6F60               	movwf	sprintf@wh& (0+255),b
  4044  005366  0E01               	movlw	high Network_Read@debug_str
  4045  005368  6F61               	movwf	(sprintf@wh+1)& (0+255),b
  4046  00536A  0EB3               	movlw	low STR_2
  4047  00536C  6F62               	movwf	sprintf@f& (0+255),b
  4048  00536E  C1B7  F063         	movff	Network_Read@header+12,?_sprintf+3
  4049  005372  C1B8  F064         	movff	Network_Read@header+13,?_sprintf+4
  4050  005376  C1B7  F065         	movff	Network_Read@header+12,?_sprintf+5
  4051  00537A  C1B8  F066         	movff	Network_Read@header+13,?_sprintf+6
  4052  00537E  EC73  F030         	call	_sprintf	;wreg free
  4053                           
  4054                           ;network.c: 133: ;
  4055                           ;network.c: 134: break;
  4056  005382  EF79  F02D         	goto	_ETH_Flush
  4057  005386                     l10081:
  4058                           
  4059                           ; BSR set to: 1
  4060  005386  EE21  F0B7         	lfsr	2,Network_Read@header+12
  4061  00538A  CFDE F157          	movff	postinc2,??_Network_Read
  4062  00538E  CFDD F158          	movff	postdec2,??_Network_Read+1
  4063                           
  4064                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 3 sub-sw
      +                          itches
  4065                           ; Switch size 1, requested type "space"
  4066                           ; Number of cases is 3, Range of values is 8 to 134
  4067                           ; switch strategies available:
  4068                           ; Name         Instructions Cycles
  4069                           ; simple_byte           10     6 (average)
  4070                           ;	Chosen strategy is simple_byte
  4071  005392  5158               	movf	(??_Network_Read+1)& (0+255),w,b
  4072  005394  0A08               	xorlw	8	; case 8
  4073  005396  E005               	bz	l10399
  4074  005398  0A89               	xorlw	137	; case 129
  4075  00539A  E008               	bz	l10401
  4076  00539C  0A07               	xorlw	7	; case 134
  4077  00539E  E008               	bz	l10403
  4078  0053A0  D7DF               	goto	l10077
  4079  0053A2                     l10399:
  4080                           
  4081                           ; BSR set to: 1
  4082                           ; Switch size 1, requested type "space"
  4083                           ; Number of cases is 2, Range of values is 0 to 6
  4084                           ; switch strategies available:
  4085                           ; Name         Instructions Cycles
  4086                           ; simple_byte            7     4 (average)
  4087                           ;	Chosen strategy is simple_byte
  4088  0053A2  5157               	movf	??_Network_Read& (0+255),w,b
  4089  0053A4  E0D9               	bz	l10075
  4090  0053A6  0A06               	xorlw	6	; case 6
  4091  0053A8  E0D3               	bz	l10073
  4092  0053AA  D7DA               	goto	l10077
  4093  0053AC                     l10401:
  4094                           
  4095                           ; BSR set to: 1
  4096                           ; Switch size 1, requested type "space"
  4097                           ; Number of cases is 1, Range of values is 0 to 0
  4098                           ; switch strategies available:
  4099                           ; Name         Instructions Cycles
  4100                           ; simple_byte            4     3 (average)
  4101                           ;	Chosen strategy is simple_byte
  4102  0053AC  5157               	movf	??_Network_Read& (0+255),w,b
  4103  0053AE  D002               	goto	L1
  4104  0053B0                     l10403:
  4105                           
  4106                           ; BSR set to: 1
  4107                           ; Switch size 1, requested type "space"
  4108                           ; Number of cases is 1, Range of values is 221 to 221
  4109                           ; switch strategies available:
  4110                           ; Name         Instructions Cycles
  4111                           ; simple_byte            4     3 (average)
  4112                           ;	Chosen strategy is simple_byte
  4113  0053B0  5157               	movf	??_Network_Read& (0+255),w,b
  4114  0053B2  0ADD               	xorlw	221	; case 221
  4115  0053B4                     L1:
  4116  0053B4  E1D5               	bnz	l10077
  4117                           
  4118                           ;network.c: 136: ETH_Flush();
  4119  0053B6  EF79  F02D         	goto	_ETH_Flush	;wreg free
  4120  0053BA                     __end_of_Network_Read:
  4121                           	opt stack 0
  4122                           tosu	equ	0xFFF
  4123                           tosh	equ	0xFFE
  4124                           tosl	equ	0xFFD
  4125                           pclath	equ	0xFFA
  4126                           tblptru	equ	0xFF8
  4127                           tblptrh	equ	0xFF7
  4128                           tblptrl	equ	0xFF6
  4129                           tablat	equ	0xFF5
  4130                           prodh	equ	0xFF4
  4131                           prodl	equ	0xFF3
  4132                           intcon	equ	0xFF2
  4133                           indf0	equ	0xFEF
  4134                           postinc0	equ	0xFEE
  4135                           fsr0h	equ	0xFEA
  4136                           fsr0l	equ	0xFE9
  4137                           wreg	equ	0xFE8
  4138                           postinc1	equ	0xFE6
  4139                           plusw1	equ	0xFE3
  4140                           fsr1h	equ	0xFE2
  4141                           fsr1l	equ	0xFE1
  4142                           bsr	equ	0xFE0
  4143                           indf2	equ	0xFDF
  4144                           postinc2	equ	0xFDE
  4145                           postdec2	equ	0xFDD
  4146                           plusw2	equ	0xFDB
  4147                           fsr2h	equ	0xFDA
  4148                           fsr2l	equ	0xFD9
  4149                           status	equ	0xFD8
  4150                           
  4151 ;; *************** function _sprintf *****************
  4152 ;; Defined at:
  4153 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprintf.c"
  4154 ;; Parameters:    Size  Location     Type
  4155 ;;  wh              2    0[BANK0 ] PTR unsigned char 
  4156 ;;		 -> main@str(32), Network_Read@debug_str(80), 
  4157 ;;  f               1    2[BANK0 ] PTR const unsigned char 
  4158 ;;		 -> STR_7(12), STR_2(8), 
  4159 ;; Auto vars:     Size  Location     Type
  4160 ;;  pb              5   12[BANK0 ] struct __prbuf
  4161 ;;  ap              1   11[BANK0 ] PTR void [1]
  4162 ;;		 -> ?_sprintf(2), ?_printf(2), 
  4163 ;; Return value:  Size  Location     Type
  4164 ;;                  2    0[BANK0 ] int 
  4165 ;; Registers used:
  4166 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4167 ;; Tracked objects:
  4168 ;;		On entry : F/0
  4169 ;;		On exit  : 0/0
  4170 ;;		Unchanged: 0/0
  4171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4172 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4173 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4175 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4176 ;;Total ram usage:       17 bytes
  4177 ;; Hardware stack levels used:    1
  4178 ;; Hardware stack levels required when called:   10
  4179 ;; This function calls:
  4180 ;;		__doprnt
  4181 ;; This function is called by:
  4182 ;;		_Network_Read
  4183 ;;		_main
  4184 ;; This function uses a non-reentrant model
  4185 ;;
  4186                           
  4187                           	psect	text14
  4188  0060E6                     __ptext14:
  4189                           	opt stack 0
  4190  0060E6                     _sprintf:
  4191                           	opt stack 20
  4192                           
  4193                           ; BSR set to: 0
  4194                           
  4195                           ;incstack = 0
  4196  0060E6  C060  F06C         	movff	sprintf@wh,sprintf@pb
  4197  0060EA  C061  F06D         	movff	sprintf@wh+1,sprintf@pb+1
  4198                           
  4199                           ; BSR set to: 0
  4200  0060EE  6B6E               	clrf	(sprintf@pb+2)& (0+255),b
  4201  0060F0  6B6F               	clrf	(sprintf@pb+3)& (0+255),b
  4202  0060F2  6B70               	clrf	(sprintf@pb+4)& (0+255),b
  4203  0060F4  0E63               	movlw	low (?_sprintf+3)
  4204  0060F6  6F6B               	movwf	sprintf@ap& (0+255),b
  4205                           
  4206                           ; BSR set to: 0
  4207  0060F8  C062  F023         	movff	sprintf@f,__doprnt@f
  4208  0060FC  0E6B               	movlw	low sprintf@ap
  4209  0060FE  6E24               	movwf	__doprnt@ap,c
  4210  006100  0E6C               	movlw	sprintf@pb& (0+255)
  4211  006102  EC56  F01D         	call	__doprnt
  4212  006106  C06C  FFD9         	movff	sprintf@pb,fsr2l
  4213  00610A  C06D  FFDA         	movff	sprintf@pb+1,fsr2h
  4214  00610E  6ADF               	clrf	indf2,c
  4215  006110  0C00               	retlw	0	;funcret
  4216  006112                     __end_of_sprintf:
  4217                           	opt stack 0
  4218                           tosu	equ	0xFFF
  4219                           tosh	equ	0xFFE
  4220                           tosl	equ	0xFFD
  4221                           pclath	equ	0xFFA
  4222                           tblptru	equ	0xFF8
  4223                           tblptrh	equ	0xFF7
  4224                           tblptrl	equ	0xFF6
  4225                           tablat	equ	0xFF5
  4226                           prodh	equ	0xFF4
  4227                           prodl	equ	0xFF3
  4228                           intcon	equ	0xFF2
  4229                           indf0	equ	0xFEF
  4230                           postinc0	equ	0xFEE
  4231                           fsr0h	equ	0xFEA
  4232                           fsr0l	equ	0xFE9
  4233                           wreg	equ	0xFE8
  4234                           postinc1	equ	0xFE6
  4235                           plusw1	equ	0xFE3
  4236                           fsr1h	equ	0xFE2
  4237                           fsr1l	equ	0xFE1
  4238                           bsr	equ	0xFE0
  4239                           indf2	equ	0xFDF
  4240                           postinc2	equ	0xFDE
  4241                           postdec2	equ	0xFDD
  4242                           plusw2	equ	0xFDB
  4243                           fsr2h	equ	0xFDA
  4244                           fsr2l	equ	0xFD9
  4245                           status	equ	0xFD8
  4246                           
  4247 ;; *************** function _IPV4_Packet *****************
  4248 ;; Defined at:
  4249 ;;		line 115 in file "../../TCPIP Library/source/ipv4.c"
  4250 ;; Parameters:    Size  Location     Type
  4251 ;;		None
  4252 ;; Auto vars:     Size  Location     Type
  4253 ;;  msg            40    0        unsigned char [40]
  4254 ;;  cksm            2   85[BANK1 ] unsigned int 
  4255 ;;  length          2   83[BANK1 ] unsigned int 
  4256 ;;  hdrLen          1   82[BANK1 ] unsigned char 
  4257 ;; Return value:  Size  Location     Type
  4258 ;;                  1    wreg      enum E6944
  4259 ;; Registers used:
  4260 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  4261 ;; Tracked objects:
  4262 ;;		On entry : 0/1
  4263 ;;		On exit  : 0/0
  4264 ;;		Unchanged: 0/0
  4265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4267 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4268 ;;      Temps:          0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4269 ;;      Totals:         0       0      33       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4270 ;;Total ram usage:       33 bytes
  4271 ;; Hardware stack levels used:    1
  4272 ;; Hardware stack levels required when called:   16
  4273 ;; This function calls:
  4274 ;;		_ETH_Dump
  4275 ;;		_ETH_ReadBlock
  4276 ;;		_ETH_RxComputeChecksum
  4277 ;;		_ICMP_Receive
  4278 ;;		_IPV4_PseudoHeaderChecksum
  4279 ;;		_TCP_Recv
  4280 ;;		_UDP_Receive
  4281 ;; This function is called by:
  4282 ;;		_Network_Read
  4283 ;; This function uses a non-reentrant model
  4284 ;;
  4285                           
  4286                           	psect	text15
  4287  0037B6                     __ptext15:
  4288                           	opt stack 0
  4289  0037B6                     _IPV4_Packet:
  4290                           	opt stack 12
  4291                           
  4292                           ;ipv4.c: 118: uint16_t length = 0;
  4293                           
  4294                           ;incstack = 0
  4295  0037B6  0101               	movlb	1	; () banked
  4296  0037B8  6B53               	clrf	IPV4_Packet@length& (0+255),b
  4297  0037BA  6B54               	clrf	(IPV4_Packet@length+1)& (0+255),b
  4298                           
  4299                           ; BSR set to: 1
  4300                           ;ipv4.c: 119: char msg[40];
  4301                           ;ipv4.c: 120: uint8_t hdrLen;
  4302                           ;ipv4.c: 123: cksm = ETH_RxComputeChecksum(sizeof(ipv4Header_t), 0);
  4303  0037BC  6A26               	clrf	ETH_RxComputeChecksum@len+1,c
  4304  0037BE  0E14               	movlw	20
  4305  0037C0  6E25               	movwf	ETH_RxComputeChecksum@len,c
  4306  0037C2  6A28               	clrf	ETH_RxComputeChecksum@seed+1,c
  4307  0037C4  6A27               	clrf	ETH_RxComputeChecksum@seed,c
  4308  0037C6  ECD4  F02E         	call	_ETH_RxComputeChecksum	;wreg free
  4309                           
  4310                           ;ipv4.c: 124: if (cksm != 0)
  4311  0037CA  D944               	call	PL607	;call to abstracted procedure
  4312  0037CC  E001               	bz	l9781
  4313  0037CE  0012               	return	
  4314  0037D0                     l9781:
  4315                           
  4316                           ; BSR set to: 1
  4317                           ;ipv4.c: 128: }
  4318                           ;ipv4.c: 130: ETH_ReadBlock((char *)&ipv4Header, sizeof(ipv4Header_t));
  4319  0037D0  0E9C               	movlw	low _ipv4Header
  4320  0037D2  6E17               	movwf	ETH_ReadBlock@buffer,c
  4321  0037D4  0E02               	movlw	high _ipv4Header
  4322  0037D6  EC35  F01A         	call	PL755	;call to abstracted procedure
  4323  0037DA  ECC5  F02C         	call	_ETH_ReadBlock	;wreg free
  4324                           
  4325                           ; BSR set to: 2
  4326                           ;ipv4.c: 131: if(ipv4Header.version != 4)
  4327  0037DE  399C               	swapf	_ipv4Header& (0+255),w,b
  4328  0037E0  0B0F               	andlw	15
  4329  0037E2  0A04               	xorlw	4
  4330  0037E4  E001               	bz	l9787
  4331  0037E6  0012               	return	
  4332  0037E8                     l9787:
  4333                           
  4334                           ; BSR set to: 2
  4335                           ;ipv4.c: 134: }
  4336                           ;ipv4.c: 136: ipv4Header.dstIpAddress = ((((uint32_t)ipv4Header.dstIpAddress&(uint32_t)0
      +                          xff000000) >> 24) | (((uint32_t)ipv4Header.dstIpAddress&(uint32_t)0x00ff0000) >> 8) | ((
      +                          (uint32_t)ipv4Header.dstIpAddress&(uint32_t)0x0000ff00) << 8) | (((uint32_t)ipv4Header.d
  4337  0037E8  51AC               	movf	(_ipv4Header+16)& (0+255),w,b
  4338  0037EA  D93C               	call	PL621	;call to abstracted procedure
  4339  0037EC  EE22  F0AC         	lfsr	2,_ipv4Header+16
  4340  0037F0  D8FA               	call	PL533	;call to abstracted procedure
  4341  0037F2  C2AC  F13E         	movff	_ipv4Header+16,??_IPV4_Packet+8
  4342  0037F6  C2AD  F13F         	movff	_ipv4Header+17,??_IPV4_Packet+9
  4343  0037FA  C2AE  F140         	movff	_ipv4Header+18,??_IPV4_Packet+10
  4344  0037FE  C2AF  F141         	movff	_ipv4Header+19,??_IPV4_Packet+11
  4345  003802  D90E               	call	PL583	;call to abstracted procedure
  4346  003804  EE22  F0AC         	lfsr	2,_ipv4Header+16
  4347  003808  D8BE               	call	PL477	;call to abstracted procedure
  4348  00380A  6FAC               	movwf	(_ipv4Header+16)& (0+255),b
  4349  00380C  D93B               	call	PL735	;call to abstracted procedure
  4350  00380E  6FAD               	movwf	(_ipv4Header+17)& (0+255),b
  4351  003810  D943               	call	PL749	;call to abstracted procedure
  4352  003812  6FAE               	movwf	(_ipv4Header+18)& (0+255),b
  4353  003814  D932               	call	PL733	;call to abstracted procedure
  4354  003816  6FAF               	movwf	(_ipv4Header+19)& (0+255),b
  4355                           
  4356                           ;ipv4.c: 137: ipv4Header.srcIpAddress = ((((uint32_t)ipv4Header.srcIpAddress&(uint32_t)0
      +                          xff000000) >> 24) | (((uint32_t)ipv4Header.srcIpAddress&(uint32_t)0x00ff0000) >> 8) | ((
      +                          (uint32_t)ipv4Header.srcIpAddress&(uint32_t)0x0000ff00) << 8) | (((uint32_t)ipv4Header.s
  4357  003818  51A8               	movf	(_ipv4Header+12)& (0+255),w,b
  4358  00381A  D924               	call	PL621	;call to abstracted procedure
  4359  00381C  EE22  F0A8         	lfsr	2,_ipv4Header+12
  4360  003820  D8E2               	call	PL533	;call to abstracted procedure
  4361  003822  C2A8  F13E         	movff	_ipv4Header+12,??_IPV4_Packet+8
  4362  003826  C2A9  F13F         	movff	_ipv4Header+13,??_IPV4_Packet+9
  4363  00382A  C2AA  F140         	movff	_ipv4Header+14,??_IPV4_Packet+10
  4364  00382E  C2AB  F141         	movff	_ipv4Header+15,??_IPV4_Packet+11
  4365  003832  D8F6               	call	PL583	;call to abstracted procedure
  4366  003834  EE22  F0A8         	lfsr	2,_ipv4Header+12
  4367  003838  D8A6               	call	PL477	;call to abstracted procedure
  4368  00383A  6FA8               	movwf	(_ipv4Header+12)& (0+255),b
  4369  00383C  D923               	call	PL735	;call to abstracted procedure
  4370  00383E  6FA9               	movwf	(_ipv4Header+13)& (0+255),b
  4371  003840  D92B               	call	PL749	;call to abstracted procedure
  4372  003842  6FAA               	movwf	(_ipv4Header+14)& (0+255),b
  4373  003844  D91A               	call	PL733	;call to abstracted procedure
  4374  003846  6FAB               	movwf	(_ipv4Header+15)& (0+255),b
  4375                           
  4376                           ; BSR set to: 2
  4377                           ;ipv4.c: 139: if((ipv4Header.dstIpAddress == ipv4Address) ||( ipv4Header.dstIpAddress ==
      +                           0xFFFFFFFF))
  4378  003848  5037               	movf	_ipv4Address,w,c
  4379  00384A  19AC               	xorwf	(_ipv4Header+16)& (0+255),w,b
  4380  00384C  E109               	bnz	u15610
  4381  00384E  5038               	movf	_ipv4Address+1,w,c
  4382  003850  19AD               	xorwf	(_ipv4Header+17)& (0+255),w,b
  4383  003852  E106               	bnz	u15610
  4384  003854  5039               	movf	_ipv4Address+2,w,c
  4385  003856  19AE               	xorwf	(_ipv4Header+18)& (0+255),w,b
  4386  003858  E103               	bnz	u15610
  4387  00385A  503A               	movf	_ipv4Address+3,w,c
  4388  00385C  19AF               	xorwf	(_ipv4Header+19)& (0+255),w,b
  4389  00385E  E009               	bz	l9793
  4390  003860                     u15610:
  4391                           
  4392                           ; BSR set to: 2
  4393  003860  29AC               	incf	(_ipv4Header+16)& (0+255),w,b
  4394  003862  E106               	bnz	u15621
  4395  003864  29AD               	incf	(_ipv4Header+17)& (0+255),w,b
  4396  003866  E104               	bnz	u15621
  4397  003868  29AE               	incf	(_ipv4Header+18)& (0+255),w,b
  4398  00386A  E102               	bnz	u15621
  4399  00386C  29AF               	incf	(_ipv4Header+19)& (0+255),w,b
  4400  00386E  A4D8               	btfss	status,2,c
  4401  003870                     u15621:
  4402  003870  0012               	return	
  4403  003872                     l9793:
  4404                           
  4405                           ; BSR set to: 2
  4406                           ;ipv4.c: 140: {
  4407                           ;ipv4.c: 141: ipv4Header.length = ((((uint16_t)ipv4Header.length & (uint16_t)0xFF00) >> 
      +                          8) | (((uint16_t)ipv4Header.length & (uint16_t)0x00FF) << 8));
  4408  003872  519E               	movf	(_ipv4Header+2)& (0+255),w,b
  4409  003874  0101               	movlb	1	; () banked
  4410  003876  6F37               	movwf	(??_IPV4_Packet+1)& (0+255),b
  4411  003878  6B36               	clrf	??_IPV4_Packet& (0+255),b
  4412  00387A  EE22  F09E         	lfsr	2,_ipv4Header+2
  4413  00387E  CFDE F138          	movff	postinc2,??_IPV4_Packet+2
  4414  003882  CFDD F139          	movff	postdec2,??_IPV4_Packet+3
  4415  003886  C139  F138         	movff	??_IPV4_Packet+3,??_IPV4_Packet+2
  4416  00388A  6B39               	clrf	(??_IPV4_Packet+3)& (0+255),b
  4417  00388C  6B39               	clrf	(??_IPV4_Packet+3)& (0+255),b
  4418  00388E  5136               	movf	??_IPV4_Packet& (0+255),w,b
  4419  003890  1138               	iorwf	(??_IPV4_Packet+2)& (0+255),w,b
  4420  003892  0102               	movlb	2	; () banked
  4421  003894  6F9E               	movwf	(_ipv4Header+2)& (0+255),b
  4422  003896  0101               	movlb	1	; () banked
  4423  003898  5137               	movf	(??_IPV4_Packet+1)& (0+255),w,b
  4424  00389A  1139               	iorwf	(??_IPV4_Packet+3)& (0+255),w,b
  4425  00389C  0102               	movlb	2	; () banked
  4426  00389E  6F9F               	movwf	(_ipv4Header+3)& (0+255),b
  4427                           
  4428                           ; BSR set to: 2
  4429                           ;ipv4.c: 143: hdrLen = (uint8_t)(ipv4Header.ihl << 2);
  4430  0038A0  D900               	call	PL759	;call to abstracted procedure
  4431  0038A2  90D8               	bcf	status,0,c
  4432  0038A4  3736               	rlcf	??_IPV4_Packet& (0+255),f,b
  4433  0038A6  90D8               	bcf	status,0,c
  4434  0038A8  3536               	rlcf	??_IPV4_Packet& (0+255),w,b
  4435  0038AA  6F52               	movwf	IPV4_Packet@hdrLen& (0+255),b
  4436                           
  4437                           ; BSR set to: 1
  4438                           ;ipv4.c: 145: if (ipv4Header.ihl > 5)
  4439  0038AC  0102               	movlb	2	; () banked
  4440  0038AE  D8F9               	call	PL759	;call to abstracted procedure
  4441  0038B0  0E05               	movlw	5
  4442  0038B2  6536               	cpfsgt	??_IPV4_Packet& (0+255),b
  4443  0038B4  D05F               	goto	l9833
  4444                           
  4445                           ; BSR set to: 1
  4446                           ;ipv4.c: 146: {
  4447                           ;ipv4.c: 148: ETH_Dump((uint16_t)(hdrLen - sizeof(ipv4Header_t)));
  4448  0038B6  0EEC               	movlw	236
  4449  0038B8  2552               	addwf	IPV4_Packet@hdrLen& (0+255),w,b
  4450  0038BA  6E17               	movwf	ETH_Dump@length,c
  4451  0038BC  6A18               	clrf	ETH_Dump@length+1,c
  4452  0038BE  0EFF               	movlw	255
  4453  0038C0  2218               	addwfc	ETH_Dump@length+1,f,c
  4454  0038C2  EC2E  F030         	call	_ETH_Dump	;wreg free
  4455  0038C6  D056               	goto	l9833
  4456  0038C8                     l9801:
  4457                           
  4458                           ; BSR set to: 2
  4459                           ;ipv4.c: 154: {
  4460                           ;ipv4.c: 156: ;
  4461                           ;ipv4.c: 157: length = ipv4Header.length - hdrLen;
  4462  0038C8  0101               	movlb	1	; () banked
  4463  0038CA  5152               	movf	IPV4_Packet@hdrLen& (0+255),w,b
  4464  0038CC  0102               	movlb	2	; () banked
  4465  0038CE  5D9E               	subwf	(_ipv4Header+2)& (0+255),w,b
  4466  0038D0  D89E               	call	PL565	;call to abstracted procedure
  4467                           
  4468                           ; BSR set to: 1
  4469                           ;ipv4.c: 158: cksm = ETH_RxComputeChecksum(length, 0);
  4470  0038D2  C153  F025         	movff	IPV4_Packet@length,ETH_RxComputeChecksum@len
  4471  0038D6  C154  F026         	movff	IPV4_Packet@length+1,ETH_RxComputeChecksum@len+1
  4472  0038DA  6A28               	clrf	ETH_RxComputeChecksum@seed+1,c
  4473  0038DC  6A27               	clrf	ETH_RxComputeChecksum@seed,c
  4474  0038DE  ECD4  F02E         	call	_ETH_RxComputeChecksum	;wreg free
  4475                           
  4476                           ;ipv4.c: 160: if (cksm == 0)
  4477  0038E2  D8B8               	call	PL607	;call to abstracted procedure
  4478  0038E4  A4D8               	btfss	status,2,c
  4479  0038E6  0012               	return	
  4480                           
  4481                           ; BSR set to: 1
  4482                           ;ipv4.c: 161: {
  4483                           ;ipv4.c: 162: ICMP_Receive(&ipv4Header);
  4484  0038E8  0E9C               	movlw	low _ipv4Header
  4485  0038EA  0100               	movlb	0	; () banked
  4486  0038EC  6FAF               	movwf	ICMP_Receive@ipv4Hdr& (0+255),b
  4487  0038EE  0E02               	movlw	high _ipv4Header
  4488  0038F0  6FB0               	movwf	(ICMP_Receive@ipv4Hdr+1)& (0+255),b
  4489  0038F2  EF3D  F02E         	goto	_ICMP_Receive	;wreg free
  4490  0038F6                     l9809:
  4491                           
  4492                           ; BSR set to: 2
  4493                           ;ipv4.c: 174: ;
  4494                           ;ipv4.c: 175: length = ipv4Header.length - hdrLen;
  4495  0038F6  0101               	movlb	1	; () banked
  4496  0038F8  5152               	movf	IPV4_Packet@hdrLen& (0+255),w,b
  4497  0038FA  0102               	movlb	2	; () banked
  4498  0038FC  5D9E               	subwf	(_ipv4Header+2)& (0+255),w,b
  4499  0038FE  D887               	call	PL565	;call to abstracted procedure
  4500                           
  4501                           ; BSR set to: 1
  4502                           ;ipv4.c: 176: cksm = IPV4_PseudoHeaderChecksum(length);
  4503  003900  D8C6               	call	PL739	;call to abstracted procedure
  4504  003902  EC26  F02B         	call	_IPV4_PseudoHeaderChecksum	;wreg free
  4505                           
  4506                           ; BSR set to: 1
  4507                           ;ipv4.c: 177: cksm = ETH_RxComputeChecksum(length, cksm);
  4508  003906  D899               	call	PL597	;call to abstracted procedure
  4509  003908  ECD4  F02E         	call	_ETH_RxComputeChecksum	;wreg free
  4510  00390C  C025  F155         	movff	?_ETH_RxComputeChecksum,IPV4_Packet@cksm
  4511  003910  C026  F156         	movff	?_ETH_RxComputeChecksum+1,IPV4_Packet@cksm+1
  4512                           
  4513                           ;ipv4.c: 178: UDP_Receive(cksm);
  4514  003914  C155  F100         	movff	IPV4_Packet@cksm,UDP_Receive@udpcksm
  4515  003918  C156  F101         	movff	IPV4_Packet@cksm+1,UDP_Receive@udpcksm+1
  4516  00391C  EF29  F028         	goto	_UDP_Receive	;wreg free
  4517  003920                     l9817:
  4518                           
  4519                           ; BSR set to: 2
  4520                           ;ipv4.c: 183: ;
  4521                           ;ipv4.c: 184: length = ipv4Header.length - hdrLen;
  4522  003920  0101               	movlb	1	; () banked
  4523  003922  5152               	movf	IPV4_Packet@hdrLen& (0+255),w,b
  4524  003924  0102               	movlb	2	; () banked
  4525  003926  5D9E               	subwf	(_ipv4Header+2)& (0+255),w,b
  4526  003928  D872               	call	PL565	;call to abstracted procedure
  4527                           
  4528                           ; BSR set to: 1
  4529                           ;ipv4.c: 185: cksm = IPV4_PseudoHeaderChecksum(length);
  4530  00392A  D8B1               	call	PL739	;call to abstracted procedure
  4531  00392C  EC26  F02B         	call	_IPV4_PseudoHeaderChecksum	;wreg free
  4532                           
  4533                           ; BSR set to: 1
  4534                           ;ipv4.c: 186: cksm = ETH_RxComputeChecksum(length, cksm);
  4535  003930  D884               	call	PL597	;call to abstracted procedure
  4536  003932  ECD4  F02E         	call	_ETH_RxComputeChecksum	;wreg free
  4537                           
  4538                           ;ipv4.c: 189: if (cksm == 0)
  4539  003936  D88E               	call	PL607	;call to abstracted procedure
  4540  003938  A4D8               	btfss	status,2,c
  4541  00393A  0012               	return	
  4542                           
  4543                           ; BSR set to: 1
  4544                           ;ipv4.c: 190: {
  4545                           ;ipv4.c: 191: remoteIpv4Address = ipv4Header.srcIpAddress;
  4546  00393C  C2A8  F228         	movff	_ipv4Header+12,_remoteIpv4Address
  4547  003940  C2A9  F229         	movff	_ipv4Header+13,_remoteIpv4Address+1
  4548  003944  C2AA  F22A         	movff	_ipv4Header+14,_remoteIpv4Address+2
  4549  003948  C2AB  F22B         	movff	_ipv4Header+15,_remoteIpv4Address+3
  4550                           
  4551                           ; BSR set to: 1
  4552                           ;ipv4.c: 192: TCP_Recv(remoteIpv4Address, length);
  4553  00394C  C228  F111         	movff	_remoteIpv4Address,TCP_Recv@remoteAddress
  4554  003950  C229  F112         	movff	_remoteIpv4Address+1,TCP_Recv@remoteAddress+1
  4555  003954  C22A  F113         	movff	_remoteIpv4Address+2,TCP_Recv@remoteAddress+2
  4556  003958  C22B  F114         	movff	_remoteIpv4Address+3,TCP_Recv@remoteAddress+3
  4557  00395C  C153  F115         	movff	IPV4_Packet@length,TCP_Recv@length
  4558  003960  C154  F116         	movff	IPV4_Packet@length+1,TCP_Recv@length+1
  4559  003964  EF4F  F018         	goto	_TCP_Recv	;wreg free
  4560  003968                     l9829:
  4561                           
  4562                           ; BSR set to: 2
  4563                           ;ipv4.c: 199: ETH_Dump(ipv4Header.length);
  4564  003968  C29E  F017         	movff	_ipv4Header+2,ETH_Dump@length
  4565  00396C  C29F  F018         	movff	_ipv4Header+3,ETH_Dump@length+1
  4566  003970  EF2E  F030         	goto	_ETH_Dump	;wreg free
  4567  003974                     l9833:
  4568  003974  0102               	movlb	2	; () banked
  4569  003976  51A5               	movf	(_ipv4Header+9)& (0+255),w,b
  4570                           
  4571                           ; Switch size 1, requested type "space"
  4572                           ; Number of cases is 3, Range of values is 1 to 17
  4573                           ; switch strategies available:
  4574                           ; Name         Instructions Cycles
  4575                           ; simple_byte           10     6 (average)
  4576                           ;	Chosen strategy is simple_byte
  4577  003978  0A01               	xorlw	1	; case 1
  4578  00397A  E0A6               	bz	l9801
  4579  00397C  0A07               	xorlw	7	; case 6
  4580  00397E  E0D0               	bz	l9817
  4581  003980  0A17               	xorlw	23	; case 17
  4582  003982  E0B9               	bz	l9809
  4583  003984  D7F1               	goto	l9829
  4584  003986                     __end_of_IPV4_Packet:
  4585                           	opt stack 0
  4586  003986                     PL477:
  4587                           	opt stack 12
  4588  003986  14DE               	andwf	postinc2,w,c
  4589  003988  6F46               	movwf	(??_IPV4_Packet+16)& (0+255),b
  4590  00398A  0E00               	movlw	0
  4591  00398C  14DE               	andwf	postinc2,w,c
  4592  00398E  6F47               	movwf	(??_IPV4_Packet+17)& (0+255),b
  4593  003990  0E00               	movlw	0
  4594  003992  14DE               	andwf	postinc2,w,c
  4595  003994  6F48               	movwf	(??_IPV4_Packet+18)& (0+255),b
  4596  003996  0EFF               	movlw	255
  4597  003998  14DE               	andwf	postinc2,w,c
  4598  00399A  6F49               	movwf	(??_IPV4_Packet+19)& (0+255),b
  4599  00399C  0E19               	movlw	25
  4600  00399E  D005               	goto	u15590
  4601  0039A0                     u15595:
  4602  0039A0  90D8               	bcf	status,0,c
  4603  0039A2  3349               	rrcf	(??_IPV4_Packet+19)& (0+255),f,b
  4604  0039A4  3348               	rrcf	(??_IPV4_Packet+18)& (0+255),f,b
  4605  0039A6  3347               	rrcf	(??_IPV4_Packet+17)& (0+255),f,b
  4606  0039A8  3346               	rrcf	(??_IPV4_Packet+16)& (0+255),f,b
  4607  0039AA                     u15590:
  4608  0039AA  2EE8               	decfsz	wreg,f,c
  4609  0039AC  D7F9               	goto	u15595
  4610  0039AE  5142               	movf	(??_IPV4_Packet+12)& (0+255),w,b
  4611  0039B0  1146               	iorwf	(??_IPV4_Packet+16)& (0+255),w,b
  4612  0039B2  6F4A               	movwf	(??_IPV4_Packet+20)& (0+255),b
  4613  0039B4  5143               	movf	(??_IPV4_Packet+13)& (0+255),w,b
  4614  0039B6  1147               	iorwf	(??_IPV4_Packet+17)& (0+255),w,b
  4615  0039B8  6F4B               	movwf	(??_IPV4_Packet+21)& (0+255),b
  4616  0039BA  5144               	movf	(??_IPV4_Packet+14)& (0+255),w,b
  4617  0039BC  1148               	iorwf	(??_IPV4_Packet+18)& (0+255),w,b
  4618  0039BE  6F4C               	movwf	(??_IPV4_Packet+22)& (0+255),b
  4619  0039C0  5145               	movf	(??_IPV4_Packet+15)& (0+255),w,b
  4620  0039C2  1149               	iorwf	(??_IPV4_Packet+19)& (0+255),w,b
  4621  0039C4  6F4D               	movwf	(??_IPV4_Packet+23)& (0+255),b
  4622  0039C6  513A               	movf	(??_IPV4_Packet+4)& (0+255),w,b
  4623  0039C8  114A               	iorwf	(??_IPV4_Packet+20)& (0+255),w,b
  4624  0039CA  6F4E               	movwf	(??_IPV4_Packet+24)& (0+255),b
  4625  0039CC  513B               	movf	(??_IPV4_Packet+5)& (0+255),w,b
  4626  0039CE  114B               	iorwf	(??_IPV4_Packet+21)& (0+255),w,b
  4627  0039D0  6F4F               	movwf	(??_IPV4_Packet+25)& (0+255),b
  4628  0039D2  513C               	movf	(??_IPV4_Packet+6)& (0+255),w,b
  4629  0039D4  114C               	iorwf	(??_IPV4_Packet+22)& (0+255),w,b
  4630  0039D6  6F50               	movwf	(??_IPV4_Packet+26)& (0+255),b
  4631  0039D8  513D               	movf	(??_IPV4_Packet+7)& (0+255),w,b
  4632  0039DA  114D               	iorwf	(??_IPV4_Packet+23)& (0+255),w,b
  4633  0039DC  6F51               	movwf	(??_IPV4_Packet+27)& (0+255),b
  4634  0039DE  5136               	movf	??_IPV4_Packet& (0+255),w,b
  4635  0039E0  114E               	iorwf	(??_IPV4_Packet+24)& (0+255),w,b
  4636  0039E2  0102               	movlb	2	; () banked
  4637  0039E4  0012               	return	
  4638  0039E6                     __end_ofPL477:
  4639                           	opt stack 0
  4640  0039E6                     PL533:
  4641                           	opt stack 12
  4642  0039E6  0E00               	movlw	0
  4643  0039E8  14DE               	andwf	postinc2,w,c
  4644  0039EA  6F3A               	movwf	(??_IPV4_Packet+4)& (0+255),b
  4645  0039EC  0EFF               	movlw	255
  4646  0039EE  14DE               	andwf	postinc2,w,c
  4647  0039F0  6F3B               	movwf	(??_IPV4_Packet+5)& (0+255),b
  4648  0039F2  0E00               	movlw	0
  4649  0039F4  14DE               	andwf	postinc2,w,c
  4650  0039F6  6F3C               	movwf	(??_IPV4_Packet+6)& (0+255),b
  4651  0039F8  0E00               	movlw	0
  4652  0039FA  14DE               	andwf	postinc2,w,c
  4653  0039FC  6F3D               	movwf	(??_IPV4_Packet+7)& (0+255),b
  4654  0039FE  C13C  F13D         	movff	??_IPV4_Packet+6,??_IPV4_Packet+7
  4655  003A02  C13B  F13C         	movff	??_IPV4_Packet+5,??_IPV4_Packet+6
  4656  003A06  C13A  F13B         	movff	??_IPV4_Packet+4,??_IPV4_Packet+5
  4657  003A0A  6B3A               	clrf	(??_IPV4_Packet+4)& (0+255),b
  4658  003A0C  0012               	return	
  4659  003A0E                     __end_ofPL533:
  4660                           	opt stack 0
  4661  003A0E                     PL565:
  4662                           	opt stack 12
  4663  003A0E  0101               	movlb	1	; () banked
  4664  003A10  6F53               	movwf	IPV4_Packet@length& (0+255),b
  4665  003A12  0102               	movlb	2	; () banked
  4666  003A14  519F               	movf	(_ipv4Header+3)& (0+255),w,b
  4667  003A16  A0D8               	btfss	status,0,c
  4668  003A18  059F               	decf	(_ipv4Header+3)& (0+255),w,b
  4669  003A1A  0101               	movlb	1	; () banked
  4670  003A1C  6F54               	movwf	(IPV4_Packet@length+1)& (0+255),b
  4671  003A1E  0012               	return	
  4672  003A20                     __end_ofPL565:
  4673                           	opt stack 0
  4674  003A20                     PL583:
  4675                           	opt stack 12
  4676  003A20  C13F  F13E         	movff	??_IPV4_Packet+9,??_IPV4_Packet+8
  4677  003A24  C140  F13F         	movff	??_IPV4_Packet+10,??_IPV4_Packet+9
  4678  003A28  C141  F140         	movff	??_IPV4_Packet+11,??_IPV4_Packet+10
  4679  003A2C  6B41               	clrf	(??_IPV4_Packet+11)& (0+255),b
  4680  003A2E  6B42               	clrf	(??_IPV4_Packet+12)& (0+255),b
  4681  003A30  513F               	movf	(??_IPV4_Packet+9)& (0+255),w,b
  4682  003A32  6F43               	movwf	(??_IPV4_Packet+13)& (0+255),b
  4683  003A34  6B44               	clrf	(??_IPV4_Packet+14)& (0+255),b
  4684  003A36  6B45               	clrf	(??_IPV4_Packet+15)& (0+255),b
  4685  003A38  0C00               	retlw	0
  4686  003A3A                     __end_ofPL583:
  4687                           	opt stack 0
  4688  003A3A                     PL597:
  4689                           	opt stack 12
  4690  003A3A  C017  F155         	movff	?_IPV4_PseudoHeaderChecksum,IPV4_Packet@cksm
  4691  003A3E  C018  F156         	movff	?_IPV4_PseudoHeaderChecksum+1,IPV4_Packet@cksm+1
  4692  003A42  C153  F025         	movff	IPV4_Packet@length,ETH_RxComputeChecksum@len
  4693  003A46  C154  F026         	movff	IPV4_Packet@length+1,ETH_RxComputeChecksum@len+1
  4694  003A4A  C155  F027         	movff	IPV4_Packet@cksm,ETH_RxComputeChecksum@seed
  4695  003A4E  C156  F028         	movff	IPV4_Packet@cksm+1,ETH_RxComputeChecksum@seed+1
  4696  003A52  0012               	return	
  4697  003A54                     __end_ofPL597:
  4698                           	opt stack 0
  4699  003A54                     PL607:
  4700                           	opt stack 12
  4701  003A54  C025  F155         	movff	?_ETH_RxComputeChecksum,IPV4_Packet@cksm
  4702  003A58  C026  F156         	movff	?_ETH_RxComputeChecksum+1,IPV4_Packet@cksm+1
  4703  003A5C  0101               	movlb	1	; () banked
  4704  003A5E  5155               	movf	IPV4_Packet@cksm& (0+255),w,b
  4705  003A60  1156               	iorwf	(IPV4_Packet@cksm+1)& (0+255),w,b
  4706  003A62  0012               	return	
  4707  003A64                     __end_ofPL607:
  4708                           	opt stack 0
  4709  003A64                     PL621:
  4710                           	opt stack 12
  4711  003A64  0101               	movlb	1	; () banked
  4712  003A66  6F36               	movwf	??_IPV4_Packet& (0+255),b
  4713  003A68  6B37               	clrf	(??_IPV4_Packet+1)& (0+255),b
  4714  003A6A  6B38               	clrf	(??_IPV4_Packet+2)& (0+255),b
  4715  003A6C  6B39               	clrf	(??_IPV4_Packet+3)& (0+255),b
  4716  003A6E  C136  F139         	movff	??_IPV4_Packet,??_IPV4_Packet+3
  4717  003A72  6B38               	clrf	(??_IPV4_Packet+2)& (0+255),b
  4718  003A74  6B37               	clrf	(??_IPV4_Packet+1)& (0+255),b
  4719  003A76  6B36               	clrf	??_IPV4_Packet& (0+255),b
  4720  003A78  0012               	return	
  4721  003A7A                     __end_ofPL621:
  4722                           	opt stack 0
  4723  003A7A                     PL733:
  4724                           	opt stack 12
  4725  003A7A  0101               	movlb	1	; () banked
  4726  003A7C  5139               	movf	(??_IPV4_Packet+3)& (0+255),w,b
  4727  003A7E  1151               	iorwf	(??_IPV4_Packet+27)& (0+255),w,b
  4728  003A80  0102               	movlb	2	; () banked
  4729  003A82  0012               	return	
  4730  003A84                     __end_ofPL733:
  4731                           	opt stack 0
  4732  003A84                     PL735:
  4733                           	opt stack 12
  4734  003A84  0101               	movlb	1	; () banked
  4735  003A86  5137               	movf	(??_IPV4_Packet+1)& (0+255),w,b
  4736  003A88  114F               	iorwf	(??_IPV4_Packet+25)& (0+255),w,b
  4737  003A8A  0102               	movlb	2	; () banked
  4738  003A8C  0012               	return	
  4739  003A8E                     __end_ofPL735:
  4740                           	opt stack 0
  4741  003A8E                     PL739:
  4742                           	opt stack 12
  4743  003A8E  C153  F017         	movff	IPV4_Packet@length,IPV4_PseudoHeaderChecksum@payloadLen
  4744  003A92  C154  F018         	movff	IPV4_Packet@length+1,IPV4_PseudoHeaderChecksum@payloadLen+1
  4745  003A96  0012               	return	
  4746  003A98                     __end_ofPL739:
  4747                           	opt stack 0
  4748  003A98                     PL749:
  4749                           	opt stack 12
  4750  003A98  0101               	movlb	1	; () banked
  4751  003A9A  5138               	movf	(??_IPV4_Packet+2)& (0+255),w,b
  4752  003A9C  1150               	iorwf	(??_IPV4_Packet+26)& (0+255),w,b
  4753  003A9E  0102               	movlb	2	; () banked
  4754  003AA0  0012               	return	
  4755  003AA2                     __end_ofPL749:
  4756                           	opt stack 0
  4757  003AA2                     PL759:
  4758                           	opt stack 12
  4759  003AA2  519C               	movf	_ipv4Header& (0+255),w,b
  4760  003AA4  0B0F               	andlw	15
  4761  003AA6  0101               	movlb	1	; () banked
  4762  003AA8  6F36               	movwf	??_IPV4_Packet& (0+255),b
  4763  003AAA  0012               	return	
  4764  003AAC                     __end_ofPL759:
  4765                           	opt stack 0
  4766                           tosu	equ	0xFFF
  4767                           tosh	equ	0xFFE
  4768                           tosl	equ	0xFFD
  4769                           pclath	equ	0xFFA
  4770                           tblptru	equ	0xFF8
  4771                           tblptrh	equ	0xFF7
  4772                           tblptrl	equ	0xFF6
  4773                           tablat	equ	0xFF5
  4774                           prodh	equ	0xFF4
  4775                           prodl	equ	0xFF3
  4776                           intcon	equ	0xFF2
  4777                           indf0	equ	0xFEF
  4778                           postinc0	equ	0xFEE
  4779                           fsr0h	equ	0xFEA
  4780                           fsr0l	equ	0xFE9
  4781                           wreg	equ	0xFE8
  4782                           postinc1	equ	0xFE6
  4783                           plusw1	equ	0xFE3
  4784                           fsr1h	equ	0xFE2
  4785                           fsr1l	equ	0xFE1
  4786                           bsr	equ	0xFE0
  4787                           indf2	equ	0xFDF
  4788                           postinc2	equ	0xFDE
  4789                           postdec2	equ	0xFDD
  4790                           plusw2	equ	0xFDB
  4791                           fsr2h	equ	0xFDA
  4792                           fsr2l	equ	0xFD9
  4793                           status	equ	0xFD8
  4794                           
  4795 ;; *************** function _UDP_Receive *****************
  4796 ;; Defined at:
  4797 ;;		line 126 in file "../../TCPIP Library/source/udpv4.c"
  4798 ;; Parameters:    Size  Location     Type
  4799 ;;  udpcksm         2    0[BANK1 ] unsigned int 
  4800 ;; Auto vars:     Size  Location     Type
  4801 ;;  x               2    8[BANK1 ] unsigned int 
  4802 ;;  hptr            1   10[BANK1 ] PTR const struct .
  4803 ;;		 -> UDP_CallBackTable(15), 
  4804 ;;  ret             1    0        enum E367
  4805 ;; Return value:  Size  Location     Type
  4806 ;;                  1    wreg      enum E6944
  4807 ;; Registers used:
  4808 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
  4809 ;; Tracked objects:
  4810 ;;		On entry : 0/1
  4811 ;;		On exit  : 0/0
  4812 ;;		Unchanged: 0/0
  4813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4814 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4815 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4816 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4817 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4818 ;;Total ram usage:       11 bytes
  4819 ;; Hardware stack levels used:    1
  4820 ;; Hardware stack levels required when called:   15
  4821 ;; This function calls:
  4822 ;;		_DEMO_UDP_IdlePkt
  4823 ;;		_DEMO_UDP_Recv
  4824 ;;		_DHCP_Handler
  4825 ;;		_ETH_ReadBlock
  4826 ;; This function is called by:
  4827 ;;		_IPV4_Packet
  4828 ;; This function uses a non-reentrant model
  4829 ;;
  4830                           
  4831                           	psect	text16
  4832  005052                     __ptext16:
  4833                           	opt stack 0
  4834  005052                     _UDP_Receive:
  4835                           	opt stack 12
  4836                           
  4837                           ;udpv4.c: 129: const udp_handler_t *hptr;
  4838                           ;udpv4.c: 130: uint16_t x;
  4839                           ;udpv4.c: 132: hptr = UDP_CallBackTable;
  4840                           
  4841                           ;incstack = 0
  4842  005052  0E28               	movlw	low _UDP_CallBackTable
  4843  005054  0101               	movlb	1	; () banked
  4844  005056  6F0A               	movwf	UDP_Receive@hptr& (0+255),b
  4845                           
  4846                           ; BSR set to: 1
  4847                           ;udpv4.c: 133: ETH_ReadBlock((char *)&udpHeader,sizeof(udpHeader));
  4848  005058  0EB0               	movlw	low _udpHeader
  4849  00505A  6E17               	movwf	ETH_ReadBlock@buffer,c
  4850  00505C  0E02               	movlw	high _udpHeader
  4851  00505E  6E18               	movwf	ETH_ReadBlock@buffer+1,c
  4852  005060  EC5F  F02E         	call	PL787	;call to abstracted procedure
  4853  005064  ECC5  F02C         	call	_ETH_ReadBlock	;wreg free
  4854                           
  4855                           ; BSR set to: 2
  4856                           ;udpv4.c: 135: if((udpHeader.checksum == 0) || (udpcksm == 0))
  4857  005068  51B6               	movf	(_udpHeader+6)& (0+255),w,b
  4858  00506A  11B7               	iorwf	(_udpHeader+7)& (0+255),w,b
  4859  00506C  E005               	bz	l9537
  4860                           
  4861                           ; BSR set to: 2
  4862  00506E  0101               	movlb	1	; () banked
  4863  005070  5100               	movf	UDP_Receive@udpcksm& (0+255),w,b
  4864  005072  1101               	iorwf	(UDP_Receive@udpcksm+1)& (0+255),w,b
  4865  005074  A4D8               	btfss	status,2,c
  4866  005076  0012               	return	
  4867  005078                     l9537:
  4868                           
  4869                           ;udpv4.c: 136: {
  4870                           ;udpv4.c: 137: udpHeader.dstPort = ((((uint16_t)udpHeader.dstPort & (uint16_t)0xFF00) >>
      +                           8) | (((uint16_t)udpHeader.dstPort & (uint16_t)0x00FF) << 8));
  4871  005078  0102               	movlb	2	; () banked
  4872  00507A  51B2               	movf	(_udpHeader+2)& (0+255),w,b
  4873  00507C  0101               	movlb	1	; () banked
  4874  00507E  6F03               	movwf	(??_UDP_Receive+1)& (0+255),b
  4875  005080  6B02               	clrf	??_UDP_Receive& (0+255),b
  4876  005082  EE22  F0B2         	lfsr	2,_udpHeader+2
  4877  005086  D85C               	call	PL637	;call to abstracted procedure
  4878  005088  1104               	iorwf	(??_UDP_Receive+2)& (0+255),w,b
  4879  00508A  0102               	movlb	2	; () banked
  4880  00508C  6FB2               	movwf	(_udpHeader+2)& (0+255),b
  4881  00508E  D862               	call	PL737	;call to abstracted procedure
  4882  005090  6FB3               	movwf	(_udpHeader+3)& (0+255),b
  4883                           
  4884                           ; BSR set to: 2
  4885                           ;udpv4.c: 138: destPort = ((((uint16_t)udpHeader.srcPort & (uint16_t)0xFF00) >> 8) | (((
      +                          uint16_t)udpHeader.srcPort & (uint16_t)0x00FF) << 8));
  4886  005092  51B0               	movf	_udpHeader& (0+255),w,b
  4887  005094  0101               	movlb	1	; () banked
  4888  005096  6F03               	movwf	(??_UDP_Receive+1)& (0+255),b
  4889  005098  6B02               	clrf	??_UDP_Receive& (0+255),b
  4890  00509A  0102               	movlb	2	; () banked
  4891  00509C  51B1               	movf	(_udpHeader+1)& (0+255),w,b
  4892  00509E  0101               	movlb	1	; () banked
  4893  0050A0  6F04               	movwf	(??_UDP_Receive+2)& (0+255),b
  4894  0050A2  6B05               	clrf	(??_UDP_Receive+3)& (0+255),b
  4895  0050A4  5102               	movf	??_UDP_Receive& (0+255),w,b
  4896  0050A6  1104               	iorwf	(??_UDP_Receive+2)& (0+255),w,b
  4897  0050A8  0102               	movlb	2	; () banked
  4898  0050AA  6F30               	movwf	_destPort& (0+255),b
  4899  0050AC  D853               	call	PL737	;call to abstracted procedure
  4900  0050AE  6F31               	movwf	(_destPort+1)& (0+255),b
  4901                           
  4902                           ; BSR set to: 2
  4903                           ;udpv4.c: 142: for(x = 0; x < (sizeof(UDP_CallBackTable) / sizeof(*(UDP_CallBackTable)))
      +                          ;x++)
  4904                           
  4905                           ; BSR set to: 2
  4906  0050B0  0101               	movlb	1	; () banked
  4907  0050B2  6B08               	clrf	UDP_Receive@x& (0+255),b
  4908  0050B4  6B09               	clrf	(UDP_Receive@x+1)& (0+255),b
  4909  0050B6                     l9549:
  4910                           
  4911                           ; BSR set to: 1
  4912                           ;udpv4.c: 143: {
  4913                           ;udpv4.c: 144: if(hptr->portNumber == udpHeader.dstPort)
  4914  0050B6  C10A  FFF6         	movff	UDP_Receive@hptr,tblptrl
  4915  0050BA  D83D               	call	PL527	;call to abstracted procedure
  4916  0050BC  0102               	movlb	2	; () banked
  4917  0050BE  51B2               	movf	(_udpHeader+2)& (0+255),w,b
  4918  0050C0  0009               	tblrd		*+
  4919  0050C2  18F5               	xorwf	tablat,w,c
  4920  0050C4  E12C               	bnz	l9555
  4921  0050C6  51B3               	movf	(_udpHeader+3)& (0+255),w,b
  4922  0050C8  0009               	tblrd		*+
  4923  0050CA  18F5               	xorwf	tablat,w,c
  4924  0050CC  E128               	bnz	l9555
  4925                           
  4926                           ; BSR set to: 2
  4927                           ;udpv4.c: 145: {
  4928                           ;udpv4.c: 146: hptr->callBack(((((uint16_t)udpHeader.length & (uint16_t)0xFF00) >> 8) | 
      +                          (((uint16_t)udpHeader.length & (uint16_t)0x00FF) << 8)) - sizeof(udpHeader));
  4929  0050CE  51B4               	movf	(_udpHeader+4)& (0+255),w,b
  4930  0050D0  0101               	movlb	1	; () banked
  4931  0050D2  6F03               	movwf	(??_UDP_Receive+1)& (0+255),b
  4932  0050D4  6B02               	clrf	??_UDP_Receive& (0+255),b
  4933  0050D6  EE22  F0B4         	lfsr	2,_udpHeader+4
  4934  0050DA  D832               	call	PL637	;call to abstracted procedure
  4935  0050DC  1304               	iorwf	(??_UDP_Receive+2)& (0+255),f,b
  4936  0050DE  5103               	movf	(??_UDP_Receive+1)& (0+255),w,b
  4937  0050E0  1305               	iorwf	(??_UDP_Receive+3)& (0+255),f,b
  4938  0050E2  0EF8               	movlw	248
  4939  0050E4  2504               	addwf	(??_UDP_Receive+2)& (0+255),w,b
  4940  0050E6  0100               	movlb	0	; () banked
  4941  0050E8  6FAF               	movwf	DHCP_Handler@length& (0+255),b
  4942  0050EA  0EFF               	movlw	255
  4943  0050EC  0101               	movlb	1	; () banked
  4944  0050EE  2105               	addwfc	(??_UDP_Receive+3)& (0+255),w,b
  4945  0050F0  0100               	movlb	0	; () banked
  4946  0050F2  6FB0               	movwf	(DHCP_Handler@length+1)& (0+255),b
  4947  0050F4  C10A  F106         	movff	UDP_Receive@hptr,??_UDP_Receive+4
  4948  0050F8  0E02               	movlw	2
  4949  0050FA  0101               	movlb	1	; () banked
  4950  0050FC  2706               	addwf	(??_UDP_Receive+4)& (0+255),f,b
  4951  0050FE  C106  FFF6         	movff	??_UDP_Receive+4,tblptrl
  4952  005102  D819               	call	PL527	;call to abstracted procedure
  4953  005104  0005               	push	
  4954  005106  6EFA               	movwf	pclath,c
  4955  005108  0009               	tblrd		*+
  4956  00510A  50F5               	movf	tablat,w,c
  4957  00510C  6EFD               	movwf	tosl,c
  4958  00510E  0009               	tblrd		*+
  4959  005110  50F5               	movf	tablat,w,c
  4960  005112  6EFE               	movwf	tosh,c
  4961  005114  0009               	tblrd		*+
  4962  005116  50F5               	movf	tablat,w,c
  4963  005118  6EFF               	movwf	tosu,c
  4964  00511A  50FA               	movf	pclath,w,c
  4965  00511C  0012               	return		;indir
  4966  00511E                     l9555:
  4967                           
  4968                           ; BSR set to: 2
  4969                           ;udpv4.c: 149: }
  4970                           ;udpv4.c: 150: hptr ++;
  4971  00511E  0E05               	movlw	5
  4972  005120  0101               	movlb	1	; () banked
  4973  005122  270A               	addwf	UDP_Receive@hptr& (0+255),f,b
  4974                           
  4975                           ; BSR set to: 1
  4976  005124  4B08               	infsnz	UDP_Receive@x& (0+255),f,b
  4977  005126  2B09               	incf	(UDP_Receive@x+1)& (0+255),f,b
  4978                           
  4979                           ; BSR set to: 1
  4980  005128  5109               	movf	(UDP_Receive@x+1)& (0+255),w,b
  4981  00512A  E104               	bnz	l1462
  4982  00512C  0E03               	movlw	3
  4983  00512E  5D08               	subwf	UDP_Receive@x& (0+255),w,b
  4984  005130  E3C2               	bnc	l9549
  4985  005132  0012               	return	
  4986  005134                     l1462:
  4987  005134  0012               	return		;funcret
  4988  005136                     __end_of_UDP_Receive:
  4989                           	opt stack 0
  4990  005136                     PL527:
  4991                           	opt stack 12
  4992  005136                     	if	1	;There is more than 1 active tblptr byte
  4993  005136  0E10               	movlw	high __smallconst
  4994  005138  6EF7               	movwf	tblptrh,c
  4995  00513A                     	endif
  4996  00513A                     	if	0	;tblptru may be non-zero
  4997  00513A                     	endif
  4998  00513A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4999  00513A  0E00               	movlw	low (__smallconst shr (0+16))
  5000  00513C  6EF8               	movwf	tblptru,c
  5001  00513E                     	endif
  5002  00513E  0012               	return	
  5003  005140                     __end_ofPL527:
  5004                           	opt stack 0
  5005  005140                     PL637:
  5006                           	opt stack 12
  5007  005140  CFDE F104          	movff	postinc2,??_UDP_Receive+2
  5008  005144  CFDD F105          	movff	postdec2,??_UDP_Receive+3
  5009  005148  C105  F104         	movff	??_UDP_Receive+3,??_UDP_Receive+2
  5010  00514C  6B05               	clrf	(??_UDP_Receive+3)& (0+255),b
  5011  00514E  6B05               	clrf	(??_UDP_Receive+3)& (0+255),b
  5012  005150  5102               	movf	??_UDP_Receive& (0+255),w,b
  5013  005152  0012               	return	
  5014  005154                     __end_ofPL637:
  5015                           	opt stack 0
  5016  005154                     PL737:
  5017                           	opt stack 12
  5018  005154  0101               	movlb	1	; () banked
  5019  005156  5103               	movf	(??_UDP_Receive+1)& (0+255),w,b
  5020  005158  1105               	iorwf	(??_UDP_Receive+3)& (0+255),w,b
  5021  00515A  0102               	movlb	2	; () banked
  5022  00515C  0012               	return	
  5023  00515E                     __end_ofPL737:
  5024                           	opt stack 0
  5025                           tosu	equ	0xFFF
  5026                           tosh	equ	0xFFE
  5027                           tosl	equ	0xFFD
  5028                           pclath	equ	0xFFA
  5029                           tblptru	equ	0xFF8
  5030                           tblptrh	equ	0xFF7
  5031                           tblptrl	equ	0xFF6
  5032                           tablat	equ	0xFF5
  5033                           prodh	equ	0xFF4
  5034                           prodl	equ	0xFF3
  5035                           intcon	equ	0xFF2
  5036                           indf0	equ	0xFEF
  5037                           postinc0	equ	0xFEE
  5038                           fsr0h	equ	0xFEA
  5039                           fsr0l	equ	0xFE9
  5040                           wreg	equ	0xFE8
  5041                           postinc1	equ	0xFE6
  5042                           plusw1	equ	0xFE3
  5043                           fsr1h	equ	0xFE2
  5044                           fsr1l	equ	0xFE1
  5045                           bsr	equ	0xFE0
  5046                           indf2	equ	0xFDF
  5047                           postinc2	equ	0xFDE
  5048                           postdec2	equ	0xFDD
  5049                           plusw2	equ	0xFDB
  5050                           fsr2h	equ	0xFDA
  5051                           fsr2l	equ	0xFD9
  5052                           status	equ	0xFD8
  5053                           
  5054 ;; *************** function _DEMO_UDP_Recv *****************
  5055 ;; Defined at:
  5056 ;;		line 110 in file "udp_demo.c"
  5057 ;; Parameters:    Size  Location     Type
  5058 ;;  length          2   79[BANK0 ] int 
  5059 ;; Auto vars:     Size  Location     Type
  5060 ;;  str            32   81[BANK0 ] unsigned char [32]
  5061 ;;  str2           16  129[BANK0 ] unsigned char [16]
  5062 ;;  str1           16  113[BANK0 ] unsigned char [16]
  5063 ;;  dest_ip         4  156[BANK0 ] unsigned long 
  5064 ;;  local_ip        4  147[BANK0 ] unsigned long 
  5065 ;;  destPort        2  153[BANK0 ] unsigned int 
  5066 ;;  temperature     2  145[BANK0 ] unsigned int 
  5067 ;;  started         1  155[BANK0 ] unsigned char 
  5068 ;;  str_len         1  152[BANK0 ] unsigned char 
  5069 ;;  message         1    0        unsigned char 
  5070 ;; Return value:  Size  Location     Type
  5071 ;;		None               void
  5072 ;; Registers used:
  5073 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5074 ;; Tracked objects:
  5075 ;;		On entry : F/1
  5076 ;;		On exit  : 0/0
  5077 ;;		Unchanged: 0/0
  5078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5079 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5080 ;;      Locals:         0      79       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5082 ;;      Totals:         0      81       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5083 ;;Total ram usage:       81 bytes
  5084 ;; Hardware stack levels used:    1
  5085 ;; Hardware stack levels required when called:   13
  5086 ;; This function calls:
  5087 ;;		_DEMO_UDP_ClaimIPCheck
  5088 ;;		_DEMO_UDP_MeasureTemp
  5089 ;;		_DEMO_UDP_SetClaimIP
  5090 ;;		_UDP_GetDestIP
  5091 ;;		_UDP_GetDestPort
  5092 ;;		_UDP_Read8
  5093 ;;		_UDP_ReadBlock
  5094 ;;		_UDP_Send
  5095 ;;		_UDP_Start
  5096 ;;		_UDP_Write16
  5097 ;;		_UDP_Write8
  5098 ;;		_UDP_WriteBlock
  5099 ;;		_lcd_clear
  5100 ;;		_lcd_goto1
  5101 ;;		_lcd_goto2
  5102 ;;		_lcd_puts
  5103 ;;		_memset
  5104 ;; This function is called by:
  5105 ;;		_UDP_Receive
  5106 ;; This function uses a non-reentrant model
  5107 ;;
  5108                           
  5109                           	psect	text17
  5110  002C90                     __ptext17:
  5111                           	opt stack 0
  5112  002C90                     _DEMO_UDP_Recv:
  5113                           	opt stack 13
  5114                           
  5115                           ; BSR set to: 1
  5116                           ;udp_demo.c: 121: UDP_ReadBlock(&data,sizeof(data));
  5117                           
  5118                           ; BSR set to: 1
  5119                           
  5120                           ;incstack = 0
  5121  002C90  0EE5               	movlw	low _data
  5122  002C92  6E20               	movwf	UDP_ReadBlock@data,c
  5123  002C94  0E01               	movlw	high _data
  5124  002C96  EC9A  F030         	call	PL725	;call to abstracted procedure
  5125  002C9A  EC0B  F032         	call	_UDP_ReadBlock	;wreg free
  5126                           
  5127                           ; BSR set to: 2
  5128                           ;udp_demo.c: 122: if(data.command== 'C')
  5129  002C9E  0E43               	movlw	67
  5130  002CA0  0101               	movlb	1	; () banked
  5131  002CA2  19E5               	xorwf	_data& (0+255),w,b
  5132  002CA4  E101 D1A6          	bz	l9473
  5133  002CA8  0012               	return	
  5134  002CAA                     l9289:
  5135                           
  5136                           ; BSR set to: 1
  5137                           ;udp_demo.c: 127: if(!DEMO_UDP_ClaimIPCheck())
  5138  002CAA  ECE9  F031         	call	_DEMO_UDP_ClaimIPCheck	;wreg free
  5139  002CAE  B0D8               	btfsc	status,0,c
  5140  002CB0  0012               	return	
  5141                           
  5142                           ;udp_demo.c: 128: {
  5143                           ;udp_demo.c: 129: DEMO_UDP_SetClaimIP(1);
  5144  002CB2  0E01               	movlw	1
  5145  002CB4  EC7F  F032         	call	_DEMO_UDP_SetClaimIP
  5146                           
  5147                           ;udp_demo.c: 130: destPort = UDP_GetDestPort();
  5148  002CB8  EC66  F032         	call	_UDP_GetDestPort	;wreg free
  5149  002CBC  D9E5               	call	PL697	;call to abstracted procedure
  5150                           
  5151                           ;udp_demo.c: 131: dest_ip = UDP_GetDestIP();
  5152  002CBE  EC1F  F032         	call	_UDP_GetDestIP	;wreg free
  5153  002CC2  C017  F0FC         	movff	?_UDP_GetDestIP,DEMO_UDP_Recv@dest_ip
  5154  002CC6  C018  F0FD         	movff	?_UDP_GetDestIP+1,DEMO_UDP_Recv@dest_ip+1
  5155  002CCA  C019  F0FE         	movff	?_UDP_GetDestIP+2,DEMO_UDP_Recv@dest_ip+2
  5156  002CCE  C01A  F0FF         	movff	?_UDP_GetDestIP+3,DEMO_UDP_Recv@dest_ip+3
  5157                           
  5158                           ;udp_demo.c: 132: claim_dest_ip = dest_ip;
  5159  002CD2  C0FC  F033         	movff	DEMO_UDP_Recv@dest_ip,_claim_dest_ip
  5160  002CD6  C0FD  F034         	movff	DEMO_UDP_Recv@dest_ip+1,_claim_dest_ip+1
  5161  002CDA  C0FE  F035         	movff	DEMO_UDP_Recv@dest_ip+2,_claim_dest_ip+2
  5162  002CDE  C0FF  F036         	movff	DEMO_UDP_Recv@dest_ip+3,_claim_dest_ip+3
  5163                           
  5164                           ;udp_demo.c: 134: started = UDP_Start(claim_dest_ip,65533,destPort);
  5165  002CE2  D9BB               	call	PL505	;call to abstracted procedure
  5166  002CE4  ECC9  F02D         	call	_UDP_Start	;wreg free
  5167  002CE8  0100               	movlb	0	; () banked
  5168  002CEA  6FFB               	movwf	DEMO_UDP_Recv@started& (0+255),b
  5169                           
  5170                           ; BSR set to: 0
  5171                           ;udp_demo.c: 135: if(started==SUCCESS)
  5172  002CEC  05FB               	decf	DEMO_UDP_Recv@started& (0+255),w,b
  5173  002CEE  E108               	bnz	l9309
  5174                           
  5175                           ; BSR set to: 0
  5176                           ;udp_demo.c: 136: {
  5177                           ;udp_demo.c: 137: UDP_Write8(message);
  5178  002CF0  0E01               	movlw	1
  5179  002CF2                     i1L__ptext83:
  5180                           	opt stack 0
  5181  002CF2                     i1L_UDP_Write8:
  5182                           	opt stack 15
  5183                           
  5184                           ;incstack = 0
  5185                           ;UDP_Write8@data stored from wreg
  5186  002CF2  6E18               	movwf	UDP_Write8@data,c
  5187  002CF4                     i1Ll8683:
  5188                           	opt stack 15
  5189                           
  5190                           ;udpv4.c: 184: ETH_Write8(data);
  5191  002CF4  5018               	movf	UDP_Write8@data,w,c
  5192  002CF6  EC75  F032         	call	_ETH_Write8
  5193  002CFA                     i1Ll1477:
  5194                           	opt stack 13
  5195                           
  5196                           ;udp_demo.c: 138: UDP_Send();
  5197  002CFA  EC04  F02C         	call	_UDP_Send	;wreg free
  5198                           
  5199                           ;udp_demo.c: 139: }
  5200  002CFE  D003               	goto	l9311
  5201  002D00                     l9309:
  5202                           
  5203                           ; BSR set to: 0
  5204                           ;udp_demo.c: 140: else
  5205                           ;udp_demo.c: 141: {
  5206                           ;udp_demo.c: 142: DEMO_UDP_SetClaimIP(0);
  5207  002D00  0E00               	movlw	0
  5208  002D02  EC7F  F032         	call	_DEMO_UDP_SetClaimIP
  5209  002D06                     l9311:
  5210                           
  5211                           ;udp_demo.c: 143: }
  5212                           ;udp_demo.c: 144: pot_init = 1;
  5213  002D06  0E01               	movlw	1
  5214  002D08  0101               	movlb	1	; () banked
  5215  002D0A  6FD0               	movwf	_pot_init& (0+255),b
  5216  002D0C  0C01               	retlw	1
  5217  002D0E                     l9313:
  5218                           
  5219                           ; BSR set to: 1
  5220                           ;udp_demo.c: 149: destPort=UDP_GetDestPort();
  5221  002D0E  EC66  F032         	call	_UDP_GetDestPort	;wreg free
  5222  002D12  D9BA               	call	PL697	;call to abstracted procedure
  5223  002D14  EC1F  F032         	call	_UDP_GetDestIP	;wreg free
  5224                           
  5225                           ;udp_demo.c: 151: local_ip = ipv4Address;
  5226  002D18  C037  F0F3         	movff	_ipv4Address,DEMO_UDP_Recv@local_ip
  5227  002D1C  C038  F0F4         	movff	_ipv4Address+1,DEMO_UDP_Recv@local_ip+1
  5228  002D20  C039  F0F5         	movff	_ipv4Address+2,DEMO_UDP_Recv@local_ip+2
  5229  002D24  C03A  F0F6         	movff	_ipv4Address+3,DEMO_UDP_Recv@local_ip+3
  5230                           
  5231                           ;udp_demo.c: 152: if(DEMO_UDP_ClaimIPCheck())
  5232  002D28  ECE9  F031         	call	_DEMO_UDP_ClaimIPCheck	;wreg free
  5233  002D2C  E303               	bnc	l9321
  5234                           
  5235                           ;udp_demo.c: 153: {
  5236                           ;udp_demo.c: 154: DEMO_UDP_SetClaimIP(0);
  5237  002D2E  0E00               	movlw	0
  5238  002D30  EC7F  F032         	call	_DEMO_UDP_SetClaimIP
  5239  002D34                     l9321:
  5240                           
  5241                           ;udp_demo.c: 155: }
  5242                           ;udp_demo.c: 157: started = UDP_Start(claim_dest_ip,65533,destPort);
  5243  002D34  D992               	call	PL505	;call to abstracted procedure
  5244  002D36  ECC9  F02D         	call	_UDP_Start	;wreg free
  5245  002D3A  0100               	movlb	0	; () banked
  5246  002D3C  6FFB               	movwf	DEMO_UDP_Recv@started& (0+255),b
  5247                           
  5248                           ; BSR set to: 0
  5249                           ;udp_demo.c: 158: if(started==SUCCESS)
  5250  002D3E  05FB               	decf	DEMO_UDP_Recv@started& (0+255),w,b
  5251  002D40  E110               	bnz	l9329
  5252                           
  5253                           ; BSR set to: 0
  5254                           ;udp_demo.c: 159: {
  5255                           ;udp_demo.c: 160: UDP_WriteBlock(&local_ip, sizeof(local_ip));
  5256  002D42  6A1E               	clrf	UDP_WriteBlock@length+1,c
  5257  002D44  0E04               	movlw	4
  5258  002D46  6E1D               	movwf	UDP_WriteBlock@length,c
  5259  002D48  0EF3               	movlw	DEMO_UDP_Recv@local_ip& (0+255)
  5260  002D4A                     i2L__ptext31:
  5261                           	opt stack 0
  5262  002D4A                     i2L_UDP_WriteBlock:
  5263                           	opt stack 15
  5264                           
  5265                           ;incstack = 0
  5266                           ;UDP_WriteBlock@data stored from wreg
  5267  002D4A  6E1F               	movwf	UDP_WriteBlock@data,c
  5268  002D4C                     i2Ll8687:
  5269                           	opt stack 15
  5270                           
  5271                           ;udpv4.c: 200: ETH_WriteBlock(data,length);
  5272  002D4C  C01F  F017         	movff	UDP_WriteBlock@data,ETH_WriteBlock@buffer
  5273  002D50  6A18               	clrf	ETH_WriteBlock@buffer+1,c
  5274  002D52  C01D  F019         	movff	UDP_WriteBlock@length,ETH_WriteBlock@length
  5275  002D56  C01E  F01A         	movff	UDP_WriteBlock@length+1,ETH_WriteBlock@length+1
  5276  002D5A  EC89  F02E         	call	_ETH_WriteBlock	;wreg free
  5277  002D5E                     i2Ll1486:
  5278                           	opt stack 13
  5279                           
  5280                           ;udp_demo.c: 161: UDP_Send();
  5281  002D5E  EC04  F02C         	call	_UDP_Send	;wreg free
  5282  002D62                     l9329:
  5283                           
  5284                           ; BSR set to: 0
  5285                           ;udp_demo.c: 162: }
  5286                           ;udp_demo.c: 163: PORTJ = 0;
  5287  002D62  6A88               	clrf	3976,c	;volatile
  5288                           
  5289                           ; BSR set to: 0
  5290                           ;udp_demo.c: 164: pot_init = 0;
  5291  002D64  0101               	movlb	1	; () banked
  5292  002D66  6BD0               	clrf	_pot_init& (0+255),b
  5293                           
  5294                           ; BSR set to: 1
  5295                           ;udp_demo.c: 165: lcd_clear();
  5296  002D68  EF2C  F031         	goto	_lcd_clear	;wreg free
  5297  002D6C                     l9335:
  5298                           
  5299                           ; BSR set to: 1
  5300                           ;udp_demo.c: 169: if(DEMO_UDP_ClaimIPCheck())
  5301  002D6C  ECE9  F031         	call	_DEMO_UDP_ClaimIPCheck	;wreg free
  5302  002D70  A0D8               	btfss	status,0,c
  5303  002D72  0012               	return	
  5304                           
  5305                           ;udp_demo.c: 170: {
  5306                           ;udp_demo.c: 171: dest_ip = UDP_GetDestIP();
  5307  002D74  EC1F  F032         	call	_UDP_GetDestIP	;wreg free
  5308                           
  5309                           ;udp_demo.c: 172: if(claim_dest_ip == dest_ip)
  5310  002D78  D964               	call	PL451	;call to abstracted procedure
  5311  002D7A  E109               	bnz	u14731
  5312  002D7C  51FD               	movf	(DEMO_UDP_Recv@dest_ip+1)& (0+255),w,b
  5313  002D7E  1834               	xorwf	_claim_dest_ip+1,w,c
  5314  002D80  E106               	bnz	u14731
  5315  002D82  51FE               	movf	(DEMO_UDP_Recv@dest_ip+2)& (0+255),w,b
  5316  002D84  1835               	xorwf	_claim_dest_ip+2,w,c
  5317  002D86  E103               	bnz	u14731
  5318  002D88  51FF               	movf	(DEMO_UDP_Recv@dest_ip+3)& (0+255),w,b
  5319  002D8A  1836               	xorwf	_claim_dest_ip+3,w,c
  5320  002D8C  A4D8               	btfss	status,2,c
  5321  002D8E                     u14731:
  5322  002D8E  0012               	return	
  5323                           
  5324                           ; BSR set to: 0
  5325                           ;udp_demo.c: 173: {
  5326                           ;udp_demo.c: 174: if(PORTJbits.RJ0 == 0)
  5327  002D90  B088               	btfsc	3976,0,c	;volatile
  5328  002D92  D002               	goto	l1660
  5329                           
  5330                           ; BSR set to: 0
  5331                           ;udp_demo.c: 175: {
  5332                           ;udp_demo.c: 176: PORTJbits.RJ0=1;
  5333  002D94  8088               	bsf	3976,0,c	;volatile
  5334                           
  5335                           ;udp_demo.c: 177: }
  5336  002D96  0012               	return	
  5337  002D98                     l1660:
  5338                           
  5339                           ; BSR set to: 0
  5340                           ;udp_demo.c: 178: else
  5341                           ;udp_demo.c: 179: {
  5342                           ;udp_demo.c: 180: PORTJbits.RJ0=0;
  5343  002D98  9088               	bcf	3976,0,c	;volatile
  5344  002D9A  0012               	return	
  5345  002D9C                     l9345:
  5346                           
  5347                           ; BSR set to: 1
  5348                           ;udp_demo.c: 189: if(DEMO_UDP_ClaimIPCheck())
  5349  002D9C  ECE9  F031         	call	_DEMO_UDP_ClaimIPCheck	;wreg free
  5350  002DA0  A0D8               	btfss	status,0,c
  5351  002DA2  0012               	return	
  5352                           
  5353                           ;udp_demo.c: 190: {
  5354                           ;udp_demo.c: 191: dest_ip = UDP_GetDestIP();
  5355  002DA4  EC1F  F032         	call	_UDP_GetDestIP	;wreg free
  5356                           
  5357                           ;udp_demo.c: 192: if(claim_dest_ip == dest_ip)
  5358  002DA8  D94C               	call	PL451	;call to abstracted procedure
  5359  002DAA  E109               	bnz	u14761
  5360  002DAC  51FD               	movf	(DEMO_UDP_Recv@dest_ip+1)& (0+255),w,b
  5361  002DAE  1834               	xorwf	_claim_dest_ip+1,w,c
  5362  002DB0  E106               	bnz	u14761
  5363  002DB2  51FE               	movf	(DEMO_UDP_Recv@dest_ip+2)& (0+255),w,b
  5364  002DB4  1835               	xorwf	_claim_dest_ip+2,w,c
  5365  002DB6  E103               	bnz	u14761
  5366  002DB8  51FF               	movf	(DEMO_UDP_Recv@dest_ip+3)& (0+255),w,b
  5367  002DBA  1836               	xorwf	_claim_dest_ip+3,w,c
  5368  002DBC  A4D8               	btfss	status,2,c
  5369  002DBE                     u14761:
  5370  002DBE  0012               	return	
  5371                           
  5372                           ; BSR set to: 0
  5373                           ;udp_demo.c: 193: {
  5374                           ;udp_demo.c: 194: if(PORTJbits.RJ1 == 0)
  5375  002DC0  B288               	btfsc	3976,1,c	;volatile
  5376  002DC2  D002               	goto	l1665
  5377                           
  5378                           ; BSR set to: 0
  5379                           ;udp_demo.c: 195: {
  5380                           ;udp_demo.c: 196: PORTJbits.RJ1=1;
  5381  002DC4  8288               	bsf	3976,1,c	;volatile
  5382                           
  5383                           ;udp_demo.c: 197: }
  5384  002DC6  0012               	return	
  5385  002DC8                     l1665:
  5386                           
  5387                           ; BSR set to: 0
  5388                           ;udp_demo.c: 198: else
  5389                           ;udp_demo.c: 199: {
  5390                           ;udp_demo.c: 200: PORTJbits.RJ1=0;
  5391  002DC8  9288               	bcf	3976,1,c	;volatile
  5392  002DCA  0012               	return	
  5393  002DCC                     l9355:
  5394                           
  5395                           ; BSR set to: 1
  5396                           ;udp_demo.c: 209: if(DEMO_UDP_ClaimIPCheck())
  5397  002DCC  ECE9  F031         	call	_DEMO_UDP_ClaimIPCheck	;wreg free
  5398  002DD0  A0D8               	btfss	status,0,c
  5399  002DD2  0012               	return	
  5400                           
  5401                           ;udp_demo.c: 210: {
  5402                           ;udp_demo.c: 211: dest_ip = UDP_GetDestIP();
  5403  002DD4  EC1F  F032         	call	_UDP_GetDestIP	;wreg free
  5404                           
  5405                           ;udp_demo.c: 212: if(claim_dest_ip == dest_ip)
  5406  002DD8  D934               	call	PL451	;call to abstracted procedure
  5407  002DDA  E109               	bnz	u14791
  5408  002DDC  51FD               	movf	(DEMO_UDP_Recv@dest_ip+1)& (0+255),w,b
  5409  002DDE  1834               	xorwf	_claim_dest_ip+1,w,c
  5410  002DE0  E106               	bnz	u14791
  5411  002DE2  51FE               	movf	(DEMO_UDP_Recv@dest_ip+2)& (0+255),w,b
  5412  002DE4  1835               	xorwf	_claim_dest_ip+2,w,c
  5413  002DE6  E103               	bnz	u14791
  5414  002DE8  51FF               	movf	(DEMO_UDP_Recv@dest_ip+3)& (0+255),w,b
  5415  002DEA  1836               	xorwf	_claim_dest_ip+3,w,c
  5416  002DEC  A4D8               	btfss	status,2,c
  5417  002DEE                     u14791:
  5418  002DEE  0012               	return	
  5419                           
  5420                           ; BSR set to: 0
  5421                           ;udp_demo.c: 213: {
  5422                           ;udp_demo.c: 214: if(PORTJbits.RJ2 == 0)
  5423  002DF0  B488               	btfsc	3976,2,c	;volatile
  5424  002DF2  D002               	goto	l1670
  5425                           
  5426                           ; BSR set to: 0
  5427                           ;udp_demo.c: 215: {
  5428                           ;udp_demo.c: 216: PORTJbits.RJ2=1;
  5429  002DF4  8488               	bsf	3976,2,c	;volatile
  5430                           
  5431                           ;udp_demo.c: 217: }
  5432  002DF6  0012               	return	
  5433  002DF8                     l1670:
  5434                           
  5435                           ; BSR set to: 0
  5436                           ;udp_demo.c: 218: else
  5437                           ;udp_demo.c: 219: {
  5438                           ;udp_demo.c: 220: PORTJbits.RJ2=0;
  5439  002DF8  9488               	bcf	3976,2,c	;volatile
  5440  002DFA  0012               	return	
  5441  002DFC                     l9365:
  5442                           
  5443                           ; BSR set to: 1
  5444                           ;udp_demo.c: 229: if(DEMO_UDP_ClaimIPCheck())
  5445  002DFC  ECE9  F031         	call	_DEMO_UDP_ClaimIPCheck	;wreg free
  5446  002E00  A0D8               	btfss	status,0,c
  5447  002E02  0012               	return	
  5448                           
  5449                           ;udp_demo.c: 230: {
  5450                           ;udp_demo.c: 231: dest_ip = UDP_GetDestIP();
  5451  002E04  EC1F  F032         	call	_UDP_GetDestIP	;wreg free
  5452                           
  5453                           ;udp_demo.c: 232: if(claim_dest_ip == dest_ip)
  5454  002E08  D91C               	call	PL451	;call to abstracted procedure
  5455  002E0A  E109               	bnz	u14821
  5456  002E0C  51FD               	movf	(DEMO_UDP_Recv@dest_ip+1)& (0+255),w,b
  5457  002E0E  1834               	xorwf	_claim_dest_ip+1,w,c
  5458  002E10  E106               	bnz	u14821
  5459  002E12  51FE               	movf	(DEMO_UDP_Recv@dest_ip+2)& (0+255),w,b
  5460  002E14  1835               	xorwf	_claim_dest_ip+2,w,c
  5461  002E16  E103               	bnz	u14821
  5462  002E18  51FF               	movf	(DEMO_UDP_Recv@dest_ip+3)& (0+255),w,b
  5463  002E1A  1836               	xorwf	_claim_dest_ip+3,w,c
  5464  002E1C  A4D8               	btfss	status,2,c
  5465  002E1E                     u14821:
  5466  002E1E  0012               	return	
  5467                           
  5468                           ; BSR set to: 0
  5469                           ;udp_demo.c: 233: {
  5470                           ;udp_demo.c: 234: if(PORTJbits.RJ3 == 0)
  5471  002E20  B688               	btfsc	3976,3,c	;volatile
  5472  002E22  D002               	goto	l1675
  5473                           
  5474                           ; BSR set to: 0
  5475                           ;udp_demo.c: 235: {
  5476                           ;udp_demo.c: 236: PORTJbits.RJ3=1;
  5477  002E24  8688               	bsf	3976,3,c	;volatile
  5478                           
  5479                           ;udp_demo.c: 237: }
  5480  002E26  0012               	return	
  5481  002E28                     l1675:
  5482                           
  5483                           ; BSR set to: 0
  5484                           ;udp_demo.c: 238: else
  5485                           ;udp_demo.c: 239: {
  5486                           ;udp_demo.c: 240: PORTJbits.RJ3=0;
  5487  002E28  9688               	bcf	3976,3,c	;volatile
  5488  002E2A  0012               	return	
  5489  002E2C                     l9375:
  5490                           
  5491                           ; BSR set to: 1
  5492                           ;udp_demo.c: 249: if(DEMO_UDP_ClaimIPCheck())
  5493  002E2C  ECE9  F031         	call	_DEMO_UDP_ClaimIPCheck	;wreg free
  5494  002E30  A0D8               	btfss	status,0,c
  5495  002E32  0012               	return	
  5496                           
  5497                           ;udp_demo.c: 250: {
  5498                           ;udp_demo.c: 251: dest_ip = UDP_GetDestIP();
  5499  002E34  EC1F  F032         	call	_UDP_GetDestIP	;wreg free
  5500                           
  5501                           ;udp_demo.c: 252: if(claim_dest_ip == dest_ip)
  5502  002E38  D904               	call	PL451	;call to abstracted procedure
  5503  002E3A  E109               	bnz	u14851
  5504  002E3C  51FD               	movf	(DEMO_UDP_Recv@dest_ip+1)& (0+255),w,b
  5505  002E3E  1834               	xorwf	_claim_dest_ip+1,w,c
  5506  002E40  E106               	bnz	u14851
  5507  002E42  51FE               	movf	(DEMO_UDP_Recv@dest_ip+2)& (0+255),w,b
  5508  002E44  1835               	xorwf	_claim_dest_ip+2,w,c
  5509  002E46  E103               	bnz	u14851
  5510  002E48  51FF               	movf	(DEMO_UDP_Recv@dest_ip+3)& (0+255),w,b
  5511  002E4A  1836               	xorwf	_claim_dest_ip+3,w,c
  5512  002E4C  A4D8               	btfss	status,2,c
  5513  002E4E                     u14851:
  5514  002E4E  0012               	return	
  5515                           
  5516                           ; BSR set to: 0
  5517                           ;udp_demo.c: 253: {
  5518                           ;udp_demo.c: 254: if(PORTJbits.RJ4 == 0)
  5519  002E50  B888               	btfsc	3976,4,c	;volatile
  5520  002E52  D002               	goto	l1680
  5521                           
  5522                           ; BSR set to: 0
  5523                           ;udp_demo.c: 255: {
  5524                           ;udp_demo.c: 256: PORTJbits.RJ4=1;
  5525  002E54  8888               	bsf	3976,4,c	;volatile
  5526                           
  5527                           ;udp_demo.c: 257: }
  5528  002E56  0012               	return	
  5529  002E58                     l1680:
  5530                           
  5531                           ; BSR set to: 0
  5532                           ;udp_demo.c: 258: else
  5533                           ;udp_demo.c: 259: {
  5534                           ;udp_demo.c: 260: PORTJbits.RJ4=0;
  5535  002E58  9888               	bcf	3976,4,c	;volatile
  5536  002E5A  0012               	return	
  5537  002E5C                     l9385:
  5538                           
  5539                           ; BSR set to: 1
  5540                           ;udp_demo.c: 269: if(DEMO_UDP_ClaimIPCheck())
  5541  002E5C  ECE9  F031         	call	_DEMO_UDP_ClaimIPCheck	;wreg free
  5542  002E60  A0D8               	btfss	status,0,c
  5543  002E62  0012               	return	
  5544                           
  5545                           ;udp_demo.c: 270: {
  5546                           ;udp_demo.c: 271: dest_ip = UDP_GetDestIP();
  5547  002E64  EC1F  F032         	call	_UDP_GetDestIP	;wreg free
  5548                           
  5549                           ;udp_demo.c: 272: if(claim_dest_ip == dest_ip)
  5550  002E68  D8EC               	call	PL451	;call to abstracted procedure
  5551  002E6A  E109               	bnz	u14881
  5552  002E6C  51FD               	movf	(DEMO_UDP_Recv@dest_ip+1)& (0+255),w,b
  5553  002E6E  1834               	xorwf	_claim_dest_ip+1,w,c
  5554  002E70  E106               	bnz	u14881
  5555  002E72  51FE               	movf	(DEMO_UDP_Recv@dest_ip+2)& (0+255),w,b
  5556  002E74  1835               	xorwf	_claim_dest_ip+2,w,c
  5557  002E76  E103               	bnz	u14881
  5558  002E78  51FF               	movf	(DEMO_UDP_Recv@dest_ip+3)& (0+255),w,b
  5559  002E7A  1836               	xorwf	_claim_dest_ip+3,w,c
  5560  002E7C  A4D8               	btfss	status,2,c
  5561  002E7E                     u14881:
  5562  002E7E  0012               	return	
  5563                           
  5564                           ; BSR set to: 0
  5565                           ;udp_demo.c: 273: {
  5566                           ;udp_demo.c: 274: if(PORTJbits.RJ5 == 0)
  5567  002E80  BA88               	btfsc	3976,5,c	;volatile
  5568  002E82  D002               	goto	l1685
  5569                           
  5570                           ; BSR set to: 0
  5571                           ;udp_demo.c: 275: {
  5572                           ;udp_demo.c: 276: PORTJbits.RJ5=1;
  5573  002E84  8A88               	bsf	3976,5,c	;volatile
  5574                           
  5575                           ;udp_demo.c: 277: }
  5576  002E86  0012               	return	
  5577  002E88                     l1685:
  5578                           
  5579                           ; BSR set to: 0
  5580                           ;udp_demo.c: 278: else
  5581                           ;udp_demo.c: 279: {
  5582                           ;udp_demo.c: 280: PORTJbits.RJ5=0;
  5583  002E88  9A88               	bcf	3976,5,c	;volatile
  5584  002E8A  0012               	return	
  5585  002E8C                     l9395:
  5586                           
  5587                           ; BSR set to: 1
  5588                           ;udp_demo.c: 289: if(DEMO_UDP_ClaimIPCheck())
  5589  002E8C  ECE9  F031         	call	_DEMO_UDP_ClaimIPCheck	;wreg free
  5590  002E90  A0D8               	btfss	status,0,c
  5591  002E92  0012               	return	
  5592                           
  5593                           ;udp_demo.c: 290: {
  5594                           ;udp_demo.c: 291: dest_ip = UDP_GetDestIP();
  5595  002E94  EC1F  F032         	call	_UDP_GetDestIP	;wreg free
  5596                           
  5597                           ;udp_demo.c: 292: if(claim_dest_ip == dest_ip)
  5598  002E98  D8D4               	call	PL451	;call to abstracted procedure
  5599  002E9A  E109               	bnz	u14911
  5600  002E9C  51FD               	movf	(DEMO_UDP_Recv@dest_ip+1)& (0+255),w,b
  5601  002E9E  1834               	xorwf	_claim_dest_ip+1,w,c
  5602  002EA0  E106               	bnz	u14911
  5603  002EA2  51FE               	movf	(DEMO_UDP_Recv@dest_ip+2)& (0+255),w,b
  5604  002EA4  1835               	xorwf	_claim_dest_ip+2,w,c
  5605  002EA6  E103               	bnz	u14911
  5606  002EA8  51FF               	movf	(DEMO_UDP_Recv@dest_ip+3)& (0+255),w,b
  5607  002EAA  1836               	xorwf	_claim_dest_ip+3,w,c
  5608  002EAC  A4D8               	btfss	status,2,c
  5609  002EAE                     u14911:
  5610  002EAE  0012               	return	
  5611                           
  5612                           ; BSR set to: 0
  5613                           ;udp_demo.c: 293: {
  5614                           ;udp_demo.c: 294: if(PORTJbits.RJ6 == 0)
  5615  002EB0  BC88               	btfsc	3976,6,c	;volatile
  5616  002EB2  D002               	goto	l1690
  5617                           
  5618                           ; BSR set to: 0
  5619                           ;udp_demo.c: 295: {
  5620                           ;udp_demo.c: 296: PORTJbits.RJ6=1;
  5621  002EB4  8C88               	bsf	3976,6,c	;volatile
  5622                           
  5623                           ;udp_demo.c: 297: }
  5624  002EB6  0012               	return	
  5625  002EB8                     l1690:
  5626                           
  5627                           ; BSR set to: 0
  5628                           ;udp_demo.c: 298: else
  5629                           ;udp_demo.c: 299: {
  5630                           ;udp_demo.c: 300: PORTJbits.RJ6=0;
  5631  002EB8  9C88               	bcf	3976,6,c	;volatile
  5632  002EBA  0012               	return	
  5633  002EBC                     l9405:
  5634                           
  5635                           ; BSR set to: 1
  5636                           ;udp_demo.c: 309: if(DEMO_UDP_ClaimIPCheck())
  5637  002EBC  ECE9  F031         	call	_DEMO_UDP_ClaimIPCheck	;wreg free
  5638  002EC0  A0D8               	btfss	status,0,c
  5639  002EC2  0012               	return	
  5640                           
  5641                           ;udp_demo.c: 310: {
  5642                           ;udp_demo.c: 311: dest_ip = UDP_GetDestIP();
  5643  002EC4  EC1F  F032         	call	_UDP_GetDestIP	;wreg free
  5644                           
  5645                           ;udp_demo.c: 312: if(claim_dest_ip == dest_ip)
  5646  002EC8  D8BC               	call	PL451	;call to abstracted procedure
  5647  002ECA  E109               	bnz	u14941
  5648  002ECC  51FD               	movf	(DEMO_UDP_Recv@dest_ip+1)& (0+255),w,b
  5649  002ECE  1834               	xorwf	_claim_dest_ip+1,w,c
  5650  002ED0  E106               	bnz	u14941
  5651  002ED2  51FE               	movf	(DEMO_UDP_Recv@dest_ip+2)& (0+255),w,b
  5652  002ED4  1835               	xorwf	_claim_dest_ip+2,w,c
  5653  002ED6  E103               	bnz	u14941
  5654  002ED8  51FF               	movf	(DEMO_UDP_Recv@dest_ip+3)& (0+255),w,b
  5655  002EDA  1836               	xorwf	_claim_dest_ip+3,w,c
  5656  002EDC  A4D8               	btfss	status,2,c
  5657  002EDE                     u14941:
  5658  002EDE  0012               	return	
  5659                           
  5660                           ; BSR set to: 0
  5661                           ;udp_demo.c: 313: {
  5662                           ;udp_demo.c: 314: if(PORTJbits.RJ7 == 0)
  5663  002EE0  BE88               	btfsc	3976,7,c	;volatile
  5664  002EE2  D002               	goto	l1695
  5665                           
  5666                           ; BSR set to: 0
  5667                           ;udp_demo.c: 315: {
  5668                           ;udp_demo.c: 316: PORTJbits.RJ7=1;
  5669  002EE4  8E88               	bsf	3976,7,c	;volatile
  5670                           
  5671                           ;udp_demo.c: 317: }
  5672  002EE6  0012               	return	
  5673  002EE8                     l1695:
  5674                           
  5675                           ; BSR set to: 0
  5676                           ;udp_demo.c: 318: else
  5677                           ;udp_demo.c: 319: {
  5678                           ;udp_demo.c: 320: PORTJbits.RJ7=0;
  5679  002EE8  9E88               	bcf	3976,7,c	;volatile
  5680  002EEA  0012               	return	
  5681  002EEC                     l9415:
  5682                           
  5683                           ; BSR set to: 1
  5684                           ;udp_demo.c: 327: if(DEMO_UDP_ClaimIPCheck())
  5685  002EEC  ECE9  F031         	call	_DEMO_UDP_ClaimIPCheck	;wreg free
  5686  002EF0  A0D8               	btfss	status,0,c
  5687  002EF2  0012               	return	
  5688                           
  5689                           ;udp_demo.c: 328: {
  5690                           ;udp_demo.c: 329: lcd_clear();
  5691  002EF4  EC2C  F031         	call	_lcd_clear	;wreg free
  5692                           
  5693                           ;udp_demo.c: 330: memset(str,0,sizeof(str));
  5694  002EF8  0EB1               	movlw	low DEMO_UDP_Recv@str
  5695  002EFA  D8C0               	call	PL653	;call to abstracted procedure
  5696  002EFC  0E20               	movlw	32
  5697  002EFE  6E1B               	movwf	memset@n,c
  5698  002F00  ECB5  F030         	call	_memset	;wreg free
  5699                           
  5700                           ;udp_demo.c: 331: memset(str1,0,sizeof(str1));
  5701  002F04  0ED1               	movlw	low DEMO_UDP_Recv@str1
  5702  002F06  D8BA               	call	PL653	;call to abstracted procedure
  5703  002F08  0E10               	movlw	16
  5704  002F0A  6E1B               	movwf	memset@n,c
  5705  002F0C  ECB5  F030         	call	_memset	;wreg free
  5706                           
  5707                           ;udp_demo.c: 332: memset(str2,0,sizeof(str2));
  5708  002F10  0EE1               	movlw	low DEMO_UDP_Recv@str2
  5709  002F12  D8B4               	call	PL653	;call to abstracted procedure
  5710  002F14  0E10               	movlw	16
  5711  002F16  6E1B               	movwf	memset@n,c
  5712  002F18  ECB5  F030         	call	_memset	;wreg free
  5713                           
  5714                           ;udp_demo.c: 333: dest_ip = UDP_GetDestIP();
  5715  002F1C  EC1F  F032         	call	_UDP_GetDestIP	;wreg free
  5716                           
  5717                           ;udp_demo.c: 334: if(claim_dest_ip == dest_ip)
  5718  002F20  D890               	call	PL451	;call to abstracted procedure
  5719  002F22  E109               	bnz	u14971
  5720  002F24  51FD               	movf	(DEMO_UDP_Recv@dest_ip+1)& (0+255),w,b
  5721  002F26  1834               	xorwf	_claim_dest_ip+1,w,c
  5722  002F28  E106               	bnz	u14971
  5723  002F2A  51FE               	movf	(DEMO_UDP_Recv@dest_ip+2)& (0+255),w,b
  5724  002F2C  1835               	xorwf	_claim_dest_ip+2,w,c
  5725  002F2E  E103               	bnz	u14971
  5726  002F30  51FF               	movf	(DEMO_UDP_Recv@dest_ip+3)& (0+255),w,b
  5727  002F32  1836               	xorwf	_claim_dest_ip+3,w,c
  5728  002F34  A4D8               	btfss	status,2,c
  5729  002F36                     u14971:
  5730  002F36  0012               	return	
  5731  002F38                     i3L__ptext33:
  5732                           	opt stack 0
  5733  002F38                     i3L_UDP_Read8:
  5734                           	opt stack 0
  5735  002F38                     i3Ll8679:
  5736                           	opt stack 15
  5737                           
  5738                           ; BSR set to: 0
  5739                           ;udpv4.c: 168: return (ETH_Read8());
  5740  002F38  EC17  F030         	call	_ETH_Read8	;wreg free
  5741  002F3C                     i3Ll1468:
  5742                           	opt stack 13
  5743  002F3C  0100               	movlb	0	; () banked
  5744  002F3E  6FF8               	movwf	DEMO_UDP_Recv@str_len& (0+255),b
  5745                           
  5746                           ; BSR set to: 0
  5747                           ;udp_demo.c: 337: if(str_len > 16)
  5748  002F40  0E10               	movlw	16
  5749  002F42  65F8               	cpfsgt	DEMO_UDP_Recv@str_len& (0+255),b
  5750  002F44  D01C               	goto	l9447
  5751                           
  5752                           ; BSR set to: 0
  5753                           ;udp_demo.c: 338: {
  5754                           ;udp_demo.c: 339: UDP_ReadBlock(&str1,16);
  5755  002F46  0ED1               	movlw	low DEMO_UDP_Recv@str1
  5756  002F48  6E20               	movwf	UDP_ReadBlock@data,c
  5757  002F4A  6A21               	clrf	UDP_ReadBlock@data+1,c
  5758  002F4C  6A23               	clrf	UDP_ReadBlock@length+1,c
  5759  002F4E  0E10               	movlw	16
  5760  002F50  6E22               	movwf	UDP_ReadBlock@length,c
  5761  002F52  EC0B  F032         	call	_UDP_ReadBlock	;wreg free
  5762                           
  5763                           ; BSR set to: 2
  5764                           ;udp_demo.c: 340: lcd_goto1(0);
  5765  002F56  0E00               	movlw	0
  5766  002F58  EC48  F032         	call	_lcd_goto1
  5767                           
  5768                           ;udp_demo.c: 341: lcd_puts(str1);
  5769  002F5C  0ED1               	movlw	low DEMO_UDP_Recv@str1
  5770  002F5E  6E19               	movwf	lcd_puts@s,c
  5771  002F60  6A1A               	clrf	lcd_puts@s+1,c
  5772  002F62  EC7E  F031         	call	_lcd_puts	;wreg free
  5773                           
  5774                           ;udp_demo.c: 342: str_len-= 16;
  5775  002F66  0E10               	movlw	16
  5776  002F68  0100               	movlb	0	; () banked
  5777  002F6A  5FF8               	subwf	DEMO_UDP_Recv@str_len& (0+255),f,b
  5778                           
  5779                           ; BSR set to: 0
  5780                           ;udp_demo.c: 343: UDP_ReadBlock(&str2,str_len);
  5781  002F6C  0EE1               	movlw	low DEMO_UDP_Recv@str2
  5782  002F6E  D891               	call	PL709	;call to abstracted procedure
  5783  002F70  EC0B  F032         	call	_UDP_ReadBlock	;wreg free
  5784                           
  5785                           ; BSR set to: 2
  5786                           ;udp_demo.c: 344: lcd_goto2(0);
  5787  002F74  0E00               	movlw	0
  5788  002F76  EC41  F032         	call	_lcd_goto2
  5789                           
  5790                           ;udp_demo.c: 345: lcd_puts(str2);
  5791  002F7A  0EE1               	movlw	low DEMO_UDP_Recv@str2
  5792  002F7C  D008               	goto	L2
  5793  002F7E                     l9447:
  5794                           
  5795                           ; BSR set to: 0
  5796                           ;udp_demo.c: 347: else
  5797                           ;udp_demo.c: 348: {
  5798                           ;udp_demo.c: 349: UDP_ReadBlock(&str,str_len);
  5799  002F7E  0EB1               	movlw	low DEMO_UDP_Recv@str
  5800  002F80  D888               	call	PL709	;call to abstracted procedure
  5801  002F82  EC0B  F032         	call	_UDP_ReadBlock	;wreg free
  5802                           
  5803                           ; BSR set to: 2
  5804                           ;udp_demo.c: 350: lcd_goto1(0);
  5805  002F86  0E00               	movlw	0
  5806  002F88  EC48  F032         	call	_lcd_goto1
  5807                           
  5808                           ;udp_demo.c: 351: lcd_puts(str);
  5809  002F8C  0EB1               	movlw	low DEMO_UDP_Recv@str
  5810  002F8E                     L2:
  5811  002F8E  6E19               	movwf	lcd_puts@s,c
  5812  002F90  6A1A               	clrf	lcd_puts@s+1,c
  5813  002F92  EF84  F031         	goto	l8489	;wreg free
  5814  002F96                     l9453:
  5815                           
  5816                           ; BSR set to: 1
  5817                           ;udp_demo.c: 357: if(DEMO_UDP_ClaimIPCheck())
  5818  002F96  ECE9  F031         	call	_DEMO_UDP_ClaimIPCheck	;wreg free
  5819  002F9A  A0D8               	btfss	status,0,c
  5820  002F9C  0012               	return	
  5821                           
  5822                           ;udp_demo.c: 358: {
  5823                           ;udp_demo.c: 359: dest_ip = UDP_GetDestIP();
  5824  002F9E  EC1F  F032         	call	_UDP_GetDestIP	;wreg free
  5825                           
  5826                           ;udp_demo.c: 360: if(claim_dest_ip == dest_ip)
  5827  002FA2  D84F               	call	PL451	;call to abstracted procedure
  5828  002FA4  E14D               	bnz	l1706
  5829  002FA6  51FD               	movf	(DEMO_UDP_Recv@dest_ip+1)& (0+255),w,b
  5830  002FA8  1834               	xorwf	_claim_dest_ip+1,w,c
  5831  002FAA  E14A               	bnz	l1706
  5832  002FAC  51FE               	movf	(DEMO_UDP_Recv@dest_ip+2)& (0+255),w,b
  5833  002FAE  1835               	xorwf	_claim_dest_ip+2,w,c
  5834  002FB0  E147               	bnz	l1706
  5835  002FB2  51FF               	movf	(DEMO_UDP_Recv@dest_ip+3)& (0+255),w,b
  5836  002FB4  1836               	xorwf	_claim_dest_ip+3,w,c
  5837  002FB6  A4D8               	btfss	status,2,c
  5838  002FB8  0012               	return	
  5839                           
  5840                           ; BSR set to: 0
  5841                           ;udp_demo.c: 361: {
  5842                           ;udp_demo.c: 362: destPort=UDP_GetDestPort();
  5843  002FBA  EC66  F032         	call	_UDP_GetDestPort	;wreg free
  5844  002FBE  D864               	call	PL697	;call to abstracted procedure
  5845                           
  5846                           ;udp_demo.c: 363: temperature = DEMO_UDP_MeasureTemp();
  5847  002FC0  ECD1  F031         	call	_DEMO_UDP_MeasureTemp	;wreg free
  5848  002FC4  C01B  F0F1         	movff	?_DEMO_UDP_MeasureTemp,DEMO_UDP_Recv@temperature
  5849  002FC8  C01C  F0F2         	movff	?_DEMO_UDP_MeasureTemp+1,DEMO_UDP_Recv@temperature+1
  5850                           
  5851                           ;udp_demo.c: 364: started = UDP_Start(claim_dest_ip,65533,destPort);
  5852  002FCC  D846               	call	PL505	;call to abstracted procedure
  5853  002FCE  ECC9  F02D         	call	_UDP_Start	;wreg free
  5854  002FD2  0100               	movlb	0	; () banked
  5855  002FD4  6FFB               	movwf	DEMO_UDP_Recv@started& (0+255),b
  5856                           
  5857                           ; BSR set to: 0
  5858                           ;udp_demo.c: 365: if(started==SUCCESS)
  5859  002FD6  05FB               	decf	DEMO_UDP_Recv@started& (0+255),w,b
  5860  002FD8  A4D8               	btfss	status,2,c
  5861  002FDA  0012               	return	
  5862                           
  5863                           ; BSR set to: 0
  5864                           ;udp_demo.c: 366: {
  5865                           ;udp_demo.c: 367: UDP_Write16(temperature);
  5866  002FDC  C0F1  F019         	movff	DEMO_UDP_Recv@temperature,UDP_Write16@data
  5867  002FE0  C0F2  F01A         	movff	DEMO_UDP_Recv@temperature+1,UDP_Write16@data+1
  5868  002FE4                     i4L__ptext32:
  5869                           	opt stack 0
  5870  002FE4                     i4L_UDP_Write16:
  5871                           	opt stack 0
  5872  002FE4                     i4Ll8685:
  5873                           	opt stack 15
  5874                           
  5875                           ; BSR set to: 0
  5876                           ;udpv4.c: 189: ETH_Write16(data);
  5877  002FE4  C019  F017         	movff	UDP_Write16@data,ETH_Write16@data
  5878  002FE8  C01A  F018         	movff	UDP_Write16@data+1,ETH_Write16@data+1
  5879  002FEC  EC4F  F032         	call	_ETH_Write16	;wreg free
  5880  002FF0                     i4Ll1480:
  5881                           	opt stack 0
  5882  002FF0  EF04  F02C         	goto	_UDP_Send
  5883  002FF4                     l9473:
  5884                           
  5885                           ; BSR set to: 1
  5886  002FF4  51E6               	movf	(_data+1)& (0+255),w,b
  5887                           
  5888                           ; Switch size 1, requested type "space"
  5889                           ; Number of cases is 12, Range of values is 49 to 84
  5890                           ; switch strategies available:
  5891                           ; Name         Instructions Cycles
  5892                           ; simple_byte           37    19 (average)
  5893                           ;	Chosen strategy is simple_byte
  5894  002FF6  0A31               	xorlw	49	; case 49
  5895  002FF8  E101 D6B8          	bz	l9335
  5896  002FFC  0A03               	xorlw	3	; case 50
  5897  002FFE  E101 D6CD          	bz	l9345
  5898  003002  0A01               	xorlw	1	; case 51
  5899  003004  E101 D6E2          	bz	l9355
  5900  003008  0A07               	xorlw	7	; case 52
  5901  00300A  E101 D6F7          	bz	l9365
  5902  00300E  0A01               	xorlw	1	; case 53
  5903  003010  E101 D70C          	bz	l9375
  5904  003014  0A03               	xorlw	3	; case 54
  5905  003016  E101 D721          	bz	l9385
  5906  00301A  0A01               	xorlw	1	; case 55
  5907  00301C  E101 D736          	bz	l9395
  5908  003020  0A0F               	xorlw	15	; case 56
  5909  003022  E101 D74B          	bz	l9405
  5910  003026  0A7B               	xorlw	123	; case 67
  5911  003028  E101 D63F          	bz	l9289
  5912  00302C  0A07               	xorlw	7	; case 68
  5913  00302E  E101 D75D          	bz	l9415
  5914  003032  0A16               	xorlw	22	; case 82
  5915  003034  E101 D66B          	bz	l9313
  5916  003038  0A06               	xorlw	6	; case 84
  5917  00303A  A4D8               	btfss	status,2,c
  5918  00303C  0012               	return	
  5919  00303E  D7AB               	goto	l9453
  5920  003040                     l1706:
  5921  003040  0012               	return		;funcret
  5922  003042                     __end_of_DEMO_UDP_Recv:
  5923                           	opt stack 0
  5924  003042                     PL451:
  5925                           	opt stack 13
  5926  003042  C017  F0FC         	movff	?_UDP_GetDestIP,DEMO_UDP_Recv@dest_ip
  5927  003046  C018  F0FD         	movff	?_UDP_GetDestIP+1,DEMO_UDP_Recv@dest_ip+1
  5928  00304A  C019  F0FE         	movff	?_UDP_GetDestIP+2,DEMO_UDP_Recv@dest_ip+2
  5929  00304E  C01A  F0FF         	movff	?_UDP_GetDestIP+3,DEMO_UDP_Recv@dest_ip+3
  5930  003052  0100               	movlb	0	; () banked
  5931  003054  51FC               	movf	DEMO_UDP_Recv@dest_ip& (0+255),w,b
  5932  003056  1833               	xorwf	_claim_dest_ip,w,c
  5933  003058  0012               	return	
  5934  00305A                     __end_ofPL451:
  5935                           	opt stack 0
  5936  00305A                     PL505:
  5937                           	opt stack 13
  5938  00305A  C033  F09F         	movff	_claim_dest_ip,UDP_Start@destIP
  5939  00305E  C034  F0A0         	movff	_claim_dest_ip+1,UDP_Start@destIP+1
  5940  003062  C035  F0A1         	movff	_claim_dest_ip+2,UDP_Start@destIP+2
  5941  003066  C036  F0A2         	movff	_claim_dest_ip+3,UDP_Start@destIP+3
  5942  00306A  0100               	movlb	0	; () banked
  5943  00306C  69A4               	setf	(UDP_Start@srcPort+1)& (0+255),b
  5944  00306E  0EFD               	movlw	253
  5945  003070  6FA3               	movwf	UDP_Start@srcPort& (0+255),b
  5946  003072  C0F9  F0A5         	movff	DEMO_UDP_Recv@destPort,UDP_Start@dstPort
  5947  003076  C0FA  F0A6         	movff	DEMO_UDP_Recv@destPort+1,UDP_Start@dstPort+1
  5948  00307A  0CFD               	retlw	253
  5949  00307C                     __end_ofPL505:
  5950                           	opt stack 0
  5951  00307C                     PL653:
  5952                           	opt stack 13
  5953  00307C  6E17               	movwf	memset@p1,c
  5954  00307E  6A18               	clrf	memset@p1+1,c
  5955  003080  6A1A               	clrf	memset@c+1,c
  5956  003082  6A19               	clrf	memset@c,c
  5957  003084  6A1C               	clrf	memset@n+1,c
  5958  003086  0012               	return	
  5959  003088                     __end_ofPL653:
  5960                           	opt stack 0
  5961  003088                     PL697:
  5962                           	opt stack 13
  5963  003088  C017  F0F9         	movff	?_UDP_GetDestPort,DEMO_UDP_Recv@destPort
  5964  00308C  C018  F0FA         	movff	?_UDP_GetDestPort+1,DEMO_UDP_Recv@destPort+1
  5965  003090  0012               	return	
  5966  003092                     __end_ofPL697:
  5967                           	opt stack 0
  5968  003092                     PL709:
  5969                           	opt stack 13
  5970  003092  6E20               	movwf	UDP_ReadBlock@data,c
  5971  003094  6A21               	clrf	UDP_ReadBlock@data+1,c
  5972  003096  C0F8  F022         	movff	DEMO_UDP_Recv@str_len,UDP_ReadBlock@length
  5973  00309A  6A23               	clrf	UDP_ReadBlock@length+1,c
  5974  00309C  0012               	return	
  5975  00309E                     __end_ofPL709:
  5976                           	opt stack 0
  5977                           tosu	equ	0xFFF
  5978                           tosh	equ	0xFFE
  5979                           tosl	equ	0xFFD
  5980                           pclath	equ	0xFFA
  5981                           tblptru	equ	0xFF8
  5982                           tblptrh	equ	0xFF7
  5983                           tblptrl	equ	0xFF6
  5984                           tablat	equ	0xFF5
  5985                           prodh	equ	0xFF4
  5986                           prodl	equ	0xFF3
  5987                           intcon	equ	0xFF2
  5988                           indf0	equ	0xFEF
  5989                           postinc0	equ	0xFEE
  5990                           fsr0h	equ	0xFEA
  5991                           fsr0l	equ	0xFE9
  5992                           wreg	equ	0xFE8
  5993                           postinc1	equ	0xFE6
  5994                           plusw1	equ	0xFE3
  5995                           fsr1h	equ	0xFE2
  5996                           fsr1l	equ	0xFE1
  5997                           bsr	equ	0xFE0
  5998                           indf2	equ	0xFDF
  5999                           postinc2	equ	0xFDE
  6000                           postdec2	equ	0xFDD
  6001                           plusw2	equ	0xFDB
  6002                           fsr2h	equ	0xFDA
  6003                           fsr2l	equ	0xFD9
  6004                           status	equ	0xFD8
  6005                           
  6006 ;; *************** function _DEMO_UDP_IdlePkt *****************
  6007 ;; Defined at:
  6008 ;;		line 94 in file "udp_demo.c"
  6009 ;; Parameters:    Size  Location     Type
  6010 ;;  length          2   79[BANK0 ] int 
  6011 ;; Auto vars:     Size  Location     Type
  6012 ;;		None
  6013 ;; Return value:  Size  Location     Type
  6014 ;;		None               void
  6015 ;; Registers used:
  6016 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6017 ;; Tracked objects:
  6018 ;;		On entry : F/1
  6019 ;;		On exit  : F/2
  6020 ;;		Unchanged: 0/0
  6021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6022 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6025 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6026 ;;Total ram usage:        2 bytes
  6027 ;; Hardware stack levels used:    1
  6028 ;; Hardware stack levels required when called:   11
  6029 ;; This function calls:
  6030 ;;		_UDP_ReadBlock
  6031 ;; This function is called by:
  6032 ;;		_UDP_Receive
  6033 ;; This function uses a non-reentrant model
  6034 ;;
  6035                           
  6036                           	psect	text18
  6037  006112                     __ptext18:
  6038                           	opt stack 0
  6039  006112                     _DEMO_UDP_IdlePkt:
  6040                           	opt stack 15
  6041                           
  6042                           ; BSR set to: 1
  6043                           ;udp_demo.c: 98: UDP_ReadBlock(&idle_packet,sizeof(idle_packet));
  6044                           
  6045                           ;incstack = 0
  6046  006112  0EBC               	movlw	low _idle_packet
  6047  006114  6E20               	movwf	UDP_ReadBlock@data,c
  6048  006116  0E02               	movlw	high _idle_packet
  6049  006118  D80D               	call	PL725	;call to abstracted procedure
  6050  00611A  EC0B  F032         	call	_UDP_ReadBlock	;wreg free
  6051                           
  6052                           ; BSR set to: 2
  6053                           ;udp_demo.c: 99: if(idle_packet.command== 'C')
  6054  00611E  0E43               	movlw	67
  6055  006120  19BC               	xorwf	_idle_packet& (0+255),w,b
  6056  006122  E004               	bz	l9279
  6057  006124  0012               	return	
  6058  006126                     l9275:
  6059                           
  6060                           ; BSR set to: 2
  6061                           ;udp_demo.c: 103: idle_pkt_received =1;
  6062  006126  0E01               	movlw	1
  6063  006128  6E46               	movwf	_idle_pkt_received,c
  6064                           
  6065                           ;udp_demo.c: 104: break;
  6066  00612A  0C01               	retlw	1
  6067  00612C                     l9279:
  6068                           
  6069                           ; BSR set to: 2
  6070  00612C  51BD               	movf	(_idle_packet+1)& (0+255),w,b
  6071                           
  6072                           ; Switch size 1, requested type "space"
  6073                           ; Number of cases is 1, Range of values is 73 to 73
  6074                           ; switch strategies available:
  6075                           ; Name         Instructions Cycles
  6076                           ; simple_byte            4     3 (average)
  6077                           ;	Chosen strategy is simple_byte
  6078  00612E  0A49               	xorlw	73	; case 73
  6079  006130  E0FA               	bz	l9275
  6080                           
  6081                           ; BSR set to: 2
  6082  006132  0012               	return		;funcret
  6083  006134                     __end_of_DEMO_UDP_IdlePkt:
  6084                           	opt stack 0
  6085  006134                     PL725:
  6086                           	opt stack 13
  6087  006134  6E21               	movwf	UDP_ReadBlock@data+1,c
  6088  006136  6A23               	clrf	UDP_ReadBlock@length+1,c
  6089  006138  0E02               	movlw	2
  6090  00613A  6E22               	movwf	UDP_ReadBlock@length,c
  6091  00613C  0C02               	retlw	2
  6092  00613E                     __end_ofPL725:
  6093                           	opt stack 0
  6094                           tosu	equ	0xFFF
  6095                           tosh	equ	0xFFE
  6096                           tosl	equ	0xFFD
  6097                           pclath	equ	0xFFA
  6098                           tblptru	equ	0xFF8
  6099                           tblptrh	equ	0xFF7
  6100                           tblptrl	equ	0xFF6
  6101                           tablat	equ	0xFF5
  6102                           prodh	equ	0xFF4
  6103                           prodl	equ	0xFF3
  6104                           intcon	equ	0xFF2
  6105                           indf0	equ	0xFEF
  6106                           postinc0	equ	0xFEE
  6107                           fsr0h	equ	0xFEA
  6108                           fsr0l	equ	0xFE9
  6109                           wreg	equ	0xFE8
  6110                           postinc1	equ	0xFE6
  6111                           plusw1	equ	0xFE3
  6112                           fsr1h	equ	0xFE2
  6113                           fsr1l	equ	0xFE1
  6114                           bsr	equ	0xFE0
  6115                           indf2	equ	0xFDF
  6116                           postinc2	equ	0xFDE
  6117                           postdec2	equ	0xFDD
  6118                           plusw2	equ	0xFDB
  6119                           fsr2h	equ	0xFDA
  6120                           fsr2l	equ	0xFD9
  6121                           status	equ	0xFD8
  6122                           
  6123 ;; *************** function _DHCP_Handler *****************
  6124 ;; Defined at:
  6125 ;;		line 162 in file "../../TCPIP Library/source/dhcp_client.c"
  6126 ;; Parameters:    Size  Location     Type
  6127 ;;  length          2   79[BANK0 ] int 
  6128 ;; Auto vars:     Size  Location     Type
  6129 ;;  optionLength    1  110[BANK0 ] unsigned char 
  6130 ;;  option          1   97[BANK0 ] unsigned char 
  6131 ;;  ip              8   83[BANK0 ] unsigned int [4]
  6132 ;;  ethMAC          6  104[BANK0 ] struct .
  6133 ;;  ethPktMAC       6   98[BANK0 ] struct .
  6134 ;;  myip            4  111[BANK0 ] unsigned long 
  6135 ;;  v               4   91[BANK0 ] unsigned long 
  6136 ;;  v16             2   95[BANK0 ] unsigned int 
  6137 ;; Return value:  Size  Location     Type
  6138 ;;		None               void
  6139 ;; Registers used:
  6140 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6141 ;; Tracked objects:
  6142 ;;		On entry : F/1
  6143 ;;		On exit  : C/0
  6144 ;;		Unchanged: 0/0
  6145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6146 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6147 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6148 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6149 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6150 ;;Total ram usage:       36 bytes
  6151 ;; Hardware stack levels used:    1
  6152 ;; Hardware stack levels required when called:   14
  6153 ;; This function calls:
  6154 ;;		_DHCP_Request
  6155 ;;		_ETH_Dump
  6156 ;;		_ETH_GetMAC
  6157 ;;		_ETH_Read16
  6158 ;;		_ETH_Read32
  6159 ;;		_ETH_Read8
  6160 ;;		_ETH_ReadBlock
  6161 ;;		_memcmp
  6162 ;; This function is called by:
  6163 ;;		_UDP_Receive
  6164 ;; This function uses a non-reentrant model
  6165 ;;
  6166                           
  6167                           	psect	text19
  6168  003D9C                     __ptext19:
  6169                           	opt stack 0
  6170  003D9C                     _DHCP_Handler:
  6171                           	opt stack 12
  6172                           
  6173                           ; BSR set to: 1
  6174                           ;dhcp_client.c: 165: uint32_t myip,v;
  6175                           ;dhcp_client.c: 166: uint16_t v16;
  6176                           ;dhcp_client.c: 167: uint16_t ip[4];
  6177                           ;dhcp_client.c: 169: mac48Address_t ethPktMAC;
  6178                           ;dhcp_client.c: 170: mac48Address_t ethMAC;
  6179                           ;dhcp_client.c: 172: ETH_GetMAC((char*)&ethMAC);
  6180                           
  6181                           ; BSR set to: 2
  6182                           ;incstack = 0
  6183  003D9C  0EC8               	movlw	DHCP_Handler@ethMAC& (0+255)
  6184  003D9E  ECB1  F02F         	call	_ETH_GetMAC
  6185                           
  6186                           ;dhcp_client.c: 178: if(length > 240)
  6187  003DA2  0100               	movlb	0	; () banked
  6188  003DA4  BFB0               	btfsc	(DHCP_Handler@length+1)& (0+255),7,b
  6189  003DA6  0012               	return	
  6190  003DA8  51B0               	movf	(DHCP_Handler@length+1)& (0+255),w,b
  6191  003DAA  E104               	bnz	u12640
  6192  003DAC  0EF1               	movlw	241
  6193  003DAE  5DAF               	subwf	DHCP_Handler@length& (0+255),w,b
  6194  003DB0  A0D8               	btfss	status,0,c
  6195  003DB2  0012               	return	
  6196  003DB4                     u12640:
  6197                           
  6198                           ; BSR set to: 0
  6199                           ;dhcp_client.c: 179: {
  6200                           ;dhcp_client.c: 180: v16 = ETH_Read16();
  6201  003DB4  ECF8  F02E         	call	_ETH_Read16	;wreg free
  6202  003DB8  C017  F0BF         	movff	?_ETH_Read16,DHCP_Handler@v16
  6203  003DBC  C018  F0C0         	movff	?_ETH_Read16+1,DHCP_Handler@v16+1
  6204                           
  6205                           ; BSR set to: 1
  6206                           ;dhcp_client.c: 181: if(v16 == 0x0201)
  6207  003DC0  0100               	movlb	0	; () banked
  6208  003DC2  05BF               	decf	DHCP_Handler@v16& (0+255),w,b
  6209  003DC4  E103               	bnz	u12651
  6210  003DC6  0E02               	movlw	2
  6211  003DC8  19C0               	xorwf	(DHCP_Handler@v16+1)& (0+255),w,b
  6212  003DCA  A4D8               	btfss	status,2,c
  6213  003DCC                     u12651:
  6214  003DCC  0012               	return	
  6215                           
  6216                           ; BSR set to: 0
  6217                           ;dhcp_client.c: 182: {
  6218                           ;dhcp_client.c: 183: ETH_Dump(2);
  6219  003DCE  6A18               	clrf	ETH_Dump@length+1,c
  6220  003DD0  0E02               	movlw	2
  6221  003DD2  6E17               	movwf	ETH_Dump@length,c
  6222  003DD4  EC2E  F030         	call	_ETH_Dump	;wreg free
  6223                           
  6224                           ;dhcp_client.c: 184: v = ETH_Read32();
  6225  003DD8  ECF7  F02C         	call	_ETH_Read32	;wreg free
  6226  003DDC  C017  F0BB         	movff	?_ETH_Read32,DHCP_Handler@v
  6227  003DE0  C018  F0BC         	movff	?_ETH_Read32+1,DHCP_Handler@v+1
  6228  003DE4  C019  F0BD         	movff	?_ETH_Read32+2,DHCP_Handler@v+2
  6229  003DE8  C01A  F0BE         	movff	?_ETH_Read32+3,DHCP_Handler@v+3
  6230                           
  6231                           ; BSR set to: 1
  6232                           ;dhcp_client.c: 185: if(v == xidValue)
  6233  003DEC  0E50               	movlw	80
  6234  003DEE  0100               	movlb	0	; () banked
  6235  003DF0  19BB               	xorwf	DHCP_Handler@v& (0+255),w,b
  6236  003DF2  E109               	bnz	u12661
  6237  003DF4  0E48               	movlw	72
  6238  003DF6  19BC               	xorwf	(DHCP_Handler@v+1)& (0+255),w,b
  6239  003DF8  E106               	bnz	u12661
  6240  003DFA  0E43               	movlw	67
  6241  003DFC  19BD               	xorwf	(DHCP_Handler@v+2)& (0+255),w,b
  6242  003DFE  E103               	bnz	u12661
  6243  003E00  0E4D               	movlw	77
  6244  003E02  19BE               	xorwf	(DHCP_Handler@v+3)& (0+255),w,b
  6245  003E04  A4D8               	btfss	status,2,c
  6246  003E06                     u12661:
  6247  003E06  0012               	return	
  6248                           
  6249                           ; BSR set to: 0
  6250                           ;dhcp_client.c: 186: {
  6251                           ;dhcp_client.c: 187: ETH_Dump(8);
  6252  003E08  D8F7               	call	PL773	;call to abstracted procedure
  6253  003E0A  EC2E  F030         	call	_ETH_Dump	;wreg free
  6254                           
  6255                           ;dhcp_client.c: 188: myip = ETH_Read32();
  6256  003E0E  ECF7  F02C         	call	_ETH_Read32	;wreg free
  6257  003E12  C017  F0CF         	movff	?_ETH_Read32,DHCP_Handler@myip
  6258  003E16  C018  F0D0         	movff	?_ETH_Read32+1,DHCP_Handler@myip+1
  6259  003E1A  C019  F0D1         	movff	?_ETH_Read32+2,DHCP_Handler@myip+2
  6260  003E1E  C01A  F0D2         	movff	?_ETH_Read32+3,DHCP_Handler@myip+3
  6261                           
  6262                           ; BSR set to: 1
  6263                           ;dhcp_client.c: 189: ip[0] = myip & 0x00FF;
  6264  003E22  0100               	movlb	0	; () banked
  6265  003E24  51CF               	movf	DHCP_Handler@myip& (0+255),w,b
  6266  003E26  6FB3               	movwf	DHCP_Handler@ip& (0+255),b
  6267  003E28  6BB4               	clrf	(DHCP_Handler@ip+1)& (0+255),b
  6268                           
  6269                           ; BSR set to: 0
  6270                           ;dhcp_client.c: 190: ip[1] = (myip >> 8) & 0x00FF;
  6271  003E2A  51D0               	movf	(DHCP_Handler@myip+1)& (0+255),w,b
  6272  003E2C  6FB5               	movwf	(DHCP_Handler@ip+2)& (0+255),b
  6273  003E2E  6BB6               	clrf	(DHCP_Handler@ip+3)& (0+255),b
  6274                           
  6275                           ; BSR set to: 0
  6276                           ;dhcp_client.c: 191: ip[2] = (myip >> 16) & 0x00FF;
  6277  003E30  51D1               	movf	(DHCP_Handler@myip+2)& (0+255),w,b
  6278  003E32  6FB7               	movwf	(DHCP_Handler@ip+4)& (0+255),b
  6279  003E34  6BB8               	clrf	(DHCP_Handler@ip+5)& (0+255),b
  6280                           
  6281                           ; BSR set to: 0
  6282                           ;dhcp_client.c: 192: ip[3] = (myip >> 24) & 0x00FF;
  6283  003E36  C0D2  F0B9         	movff	DHCP_Handler@myip+3,DHCP_Handler@ip+6
  6284  003E3A  6BBA               	clrf	(DHCP_Handler@ip+7)& (0+255),b
  6285                           
  6286                           ; BSR set to: 0
  6287                           ;dhcp_client.c: 193: ETH_Dump(8);
  6288  003E3C  D8DD               	call	PL773	;call to abstracted procedure
  6289  003E3E  EC2E  F030         	call	_ETH_Dump	;wreg free
  6290                           
  6291                           ; BSR set to: 2
  6292                           ;dhcp_client.c: 194: ETH_ReadBlock((char *)&ethPktMAC, sizeof(ethPktMAC.s));
  6293  003E42  0EC2               	movlw	low DHCP_Handler@ethPktMAC
  6294  003E44  6E17               	movwf	ETH_ReadBlock@buffer,c
  6295  003E46  6A18               	clrf	ETH_ReadBlock@buffer+1,c
  6296  003E48  6A1A               	clrf	ETH_ReadBlock@length+1,c
  6297  003E4A  0E06               	movlw	6
  6298  003E4C  6E19               	movwf	ETH_ReadBlock@length,c
  6299  003E4E  ECC5  F02C         	call	_ETH_ReadBlock	;wreg free
  6300                           
  6301                           ; BSR set to: 2
  6302                           ;dhcp_client.c: 196: if(memcmp(&ethPktMAC.s, &ethMAC.s, 6)== 0)
  6303  003E52  0EC8               	movlw	low DHCP_Handler@ethMAC
  6304  003E54  6E17               	movwf	memcmp@s2,c
  6305  003E56  6A19               	clrf	memcmp@n+1,c
  6306  003E58  0E06               	movlw	6
  6307  003E5A  6E18               	movwf	memcmp@n,c
  6308  003E5C  0EC2               	movlw	DHCP_Handler@ethPktMAC& (0+255)
  6309  003E5E  EC17  F02E         	call	_memcmp
  6310  003E62  5017               	movf	?_memcmp,w,c
  6311  003E64  1018               	iorwf	?_memcmp+1,w,c
  6312  003E66  E001 D0B5          	bnz	l8819
  6313                           
  6314                           ;dhcp_client.c: 197: {
  6315                           ;dhcp_client.c: 198: ETH_Dump(202);
  6316  003E6A  6A18               	clrf	ETH_Dump@length+1,c
  6317  003E6C  0ECA               	movlw	202
  6318  003E6E  6E17               	movwf	ETH_Dump@length,c
  6319  003E70  EC2E  F030         	call	_ETH_Dump	;wreg free
  6320                           
  6321                           ;dhcp_client.c: 199: if(ETH_Read32() == 0x63825363)
  6322  003E74  ECF7  F02C         	call	_ETH_Read32	;wreg free
  6323  003E78  0E63               	movlw	99
  6324  003E7A  1817               	xorwf	?_ETH_Read32,w,c
  6325  003E7C  E109               	bnz	u12681
  6326  003E7E  0E53               	movlw	83
  6327  003E80  1818               	xorwf	?_ETH_Read32+1,w,c
  6328  003E82  E106               	bnz	u12681
  6329  003E84  0E82               	movlw	130
  6330  003E86  1819               	xorwf	?_ETH_Read32+2,w,c
  6331  003E88  E103               	bnz	u12681
  6332  003E8A  0E63               	movlw	99
  6333  003E8C  181A               	xorwf	?_ETH_Read32+3,w,c
  6334  003E8E  A4D8               	btfss	status,2,c
  6335  003E90                     u12681:
  6336  003E90  0012               	return	
  6337                           
  6338                           ; BSR set to: 1
  6339                           ;dhcp_client.c: 200: {
  6340                           ;dhcp_client.c: 201: length -= 240;
  6341  003E92  0100               	movlb	0	; () banked
  6342  003E94  0E10               	movlw	16
  6343  003E96  27AF               	addwf	DHCP_Handler@length& (0+255),f,b
  6344  003E98  0EFF               	movlw	255
  6345  003E9A  23B0               	addwfc	(DHCP_Handler@length+1)& (0+255),f,b
  6346                           
  6347                           ;dhcp_client.c: 202: while(length>0)
  6348  003E9C  D08C               	goto	l8813
  6349  003E9E                     l8765:
  6350                           
  6351                           ; BSR set to: 0
  6352                           ;dhcp_client.c: 203: {
  6353                           ;dhcp_client.c: 205: uint8_t option, optionLength;
  6354                           ;dhcp_client.c: 206: option = ETH_Read8();
  6355  003E9E  EC17  F030         	call	_ETH_Read8	;wreg free
  6356  003EA2  0100               	movlb	0	; () banked
  6357  003EA4  6FC1               	movwf	DHCP_Handler@option& (0+255),b
  6358                           
  6359                           ;dhcp_client.c: 207: optionLength = ETH_Read8();
  6360  003EA6  EC17  F030         	call	_ETH_Read8	;wreg free
  6361  003EAA  0100               	movlb	0	; () banked
  6362  003EAC  6FCE               	movwf	DHCP_Handler@optionLength& (0+255),b
  6363                           
  6364                           ; BSR set to: 0
  6365                           ;dhcp_client.c: 208: length -= 2 + optionLength;
  6366  003EAE  51CE               	movf	DHCP_Handler@optionLength& (0+255),w,b
  6367  003EB0  6FB1               	movwf	??_DHCP_Handler& (0+255),b
  6368  003EB2  6BB2               	clrf	(??_DHCP_Handler+1)& (0+255),b
  6369  003EB4  0E02               	movlw	2
  6370  003EB6  27B1               	addwf	??_DHCP_Handler& (0+255),f,b
  6371  003EB8  0E00               	movlw	0
  6372  003EBA  23B2               	addwfc	(??_DHCP_Handler+1)& (0+255),f,b
  6373  003EBC  51B1               	movf	??_DHCP_Handler& (0+255),w,b
  6374  003EBE  5FAF               	subwf	DHCP_Handler@length& (0+255),f,b
  6375  003EC0  51B2               	movf	(??_DHCP_Handler+1)& (0+255),w,b
  6376  003EC2  5BB0               	subwfb	(DHCP_Handler@length+1)& (0+255),f,b
  6377                           
  6378                           ;dhcp_client.c: 209: switch(option)
  6379  003EC4  D06A               	goto	l8811
  6380  003EC6                     l8769:
  6381                           
  6382                           ; BSR set to: 0
  6383                           ;dhcp_client.c: 212: ipv4SubnetMask = ETH_Read32();
  6384  003EC6  ECF7  F02C         	call	_ETH_Read32	;wreg free
  6385  003ECA  C017  F224         	movff	?_ETH_Read32,_ipv4SubnetMask
  6386  003ECE  C018  F225         	movff	?_ETH_Read32+1,_ipv4SubnetMask+1
  6387  003ED2  C019  F226         	movff	?_ETH_Read32+2,_ipv4SubnetMask+2
  6388  003ED6  C01A  F227         	movff	?_ETH_Read32+3,_ipv4SubnetMask+3
  6389                           
  6390                           ;dhcp_client.c: 213: break;
  6391  003EDA  D06D               	goto	l8813
  6392  003EDC                     l8771:
  6393                           
  6394                           ; BSR set to: 0
  6395                           ;dhcp_client.c: 215: ipv4Router = ETH_Read32();
  6396  003EDC  ECF7  F02C         	call	_ETH_Read32	;wreg free
  6397  003EE0  C017  F220         	movff	?_ETH_Read32,_ipv4Router
  6398  003EE4  C018  F221         	movff	?_ETH_Read32+1,_ipv4Router+1
  6399  003EE8  C019  F222         	movff	?_ETH_Read32+2,_ipv4Router+2
  6400  003EEC  C01A  F223         	movff	?_ETH_Read32+3,_ipv4Router+3
  6401                           
  6402                           ;dhcp_client.c: 216: break;
  6403  003EF0  D062               	goto	l8813
  6404  003EF2                     l8773:
  6405                           
  6406                           ; BSR set to: 0
  6407                           ;dhcp_client.c: 219: if(optionLength >= 4)
  6408  003EF2  0E03               	movlw	3
  6409  003EF4  65CE               	cpfsgt	DHCP_Handler@optionLength& (0+255),b
  6410  003EF6  D05F               	goto	l8813
  6411                           
  6412                           ; BSR set to: 0
  6413                           ;dhcp_client.c: 220: {
  6414                           ;dhcp_client.c: 221: ipv4DNS[0] = ETH_Read32();
  6415  003EF8  ECF7  F02C         	call	_ETH_Read32	;wreg free
  6416  003EFC  C017  F210         	movff	?_ETH_Read32,_ipv4DNS
  6417  003F00  C018  F211         	movff	?_ETH_Read32+1,_ipv4DNS+1
  6418  003F04  C019  F212         	movff	?_ETH_Read32+2,_ipv4DNS+2
  6419  003F08  C01A  F213         	movff	?_ETH_Read32+3,_ipv4DNS+3
  6420                           
  6421                           ; BSR set to: 1
  6422                           ;dhcp_client.c: 222: optionLength -= 4;
  6423  003F0C  0E04               	movlw	4
  6424  003F0E  0100               	movlb	0	; () banked
  6425  003F10  5FCE               	subwf	DHCP_Handler@optionLength& (0+255),f,b
  6426                           
  6427                           ; BSR set to: 0
  6428                           ;dhcp_client.c: 223: if(optionLength >= 4)
  6429  003F12  0E03               	movlw	3
  6430  003F14  65CE               	cpfsgt	DHCP_Handler@optionLength& (0+255),b
  6431  003F16  D04F               	goto	l8813
  6432                           
  6433                           ; BSR set to: 0
  6434                           ;dhcp_client.c: 224: {
  6435                           ;dhcp_client.c: 225: ipv4DNS[1] = ETH_Read32();
  6436  003F18  ECF7  F02C         	call	_ETH_Read32	;wreg free
  6437  003F1C  C017  F214         	movff	?_ETH_Read32,_ipv4DNS+4
  6438  003F20  C018  F215         	movff	?_ETH_Read32+1,_ipv4DNS+5
  6439  003F24  C019  F216         	movff	?_ETH_Read32+2,_ipv4DNS+6
  6440  003F28  C01A  F217         	movff	?_ETH_Read32+3,_ipv4DNS+7
  6441  003F2C                     l8783:
  6442                           
  6443                           ; BSR set to: 1
  6444                           ;dhcp_client.c: 226: optionLength -= 4;
  6445  003F2C  0E04               	movlw	4
  6446  003F2E  0100               	movlb	0	; () banked
  6447  003F30  5FCE               	subwf	DHCP_Handler@optionLength& (0+255),f,b
  6448  003F32  D041               	goto	l8813
  6449  003F34                     l8785:
  6450                           
  6451                           ; BSR set to: 0
  6452                           ;dhcp_client.c: 231: if(optionLength >= 4)
  6453  003F34  0E03               	movlw	3
  6454  003F36  65CE               	cpfsgt	DHCP_Handler@optionLength& (0+255),b
  6455  003F38  D03E               	goto	l8813
  6456                           
  6457                           ; BSR set to: 0
  6458                           ;dhcp_client.c: 232: {
  6459                           ;dhcp_client.c: 233: dhcpLeaseTime = ETH_Read32();
  6460  003F3A  ECF7  F02C         	call	_ETH_Read32	;wreg free
  6461  003F3E  C017  F1C6         	movff	?_ETH_Read32,_dhcpLeaseTime
  6462  003F42  C018  F1C7         	movff	?_ETH_Read32+1,_dhcpLeaseTime+1
  6463  003F46  C019  F1C8         	movff	?_ETH_Read32+2,_dhcpLeaseTime+2
  6464  003F4A  C01A  F1C9         	movff	?_ETH_Read32+3,_dhcpLeaseTime+3
  6465  003F4E  D7EE               	goto	l8783
  6466  003F50                     l8791:
  6467                           
  6468                           ; BSR set to: 0
  6469                           ;dhcp_client.c: 238: dhcpServerId = ETH_Read32();
  6470  003F50  ECF7  F02C         	call	_ETH_Read32	;wreg free
  6471  003F54  C017  F21C         	movff	?_ETH_Read32,_dhcpServerId
  6472  003F58  C018  F21D         	movff	?_ETH_Read32+1,_dhcpServerId+1
  6473  003F5C  C019  F21E         	movff	?_ETH_Read32+2,_dhcpServerId+2
  6474  003F60  C01A  F21F         	movff	?_ETH_Read32+3,_dhcpServerId+3
  6475  003F64  D7E3               	goto	l8783
  6476  003F66                     l805:
  6477                           
  6478                           ; BSR set to: 1
  6479                           ;dhcp_client.c: 245: ipv4Address = myip;
  6480  003F66  D83F               	call	PL643	;call to abstracted procedure
  6481                           
  6482                           ; BSR set to: 1
  6483                           ;dhcp_client.c: 246: clientState = REQUESTING;
  6484  003F68  0E04               	movlw	4
  6485  003F6A  D004               	goto	L4
  6486  003F6C                     l807:
  6487                           
  6488                           ; BSR set to: 1
  6489                           ;dhcp_client.c: 249: ipv4Address = myip;
  6490  003F6C  D83C               	call	PL643	;call to abstracted procedure
  6491                           
  6492                           ; BSR set to: 1
  6493                           ;dhcp_client.c: 250: clientState = BOUND;
  6494  003F6E  0E05               	movlw	5
  6495  003F70  D001               	goto	L4
  6496  003F72                     l8799:
  6497                           
  6498                           ; BSR set to: 1
  6499                           ;dhcp_client.c: 254: clientState = INIT;
  6500  003F72  0E01               	movlw	1
  6501  003F74                     L4:
  6502  003F74  6E48               	movwf	_clientState,c
  6503                           
  6504                           ;dhcp_client.c: 255: break;
  6505  003F76  D008               	goto	l8805
  6506  003F78                     l8803:
  6507                           
  6508                           ; BSR set to: 0
  6509  003F78  EC17  F030         	call	_ETH_Read8	;wreg free
  6510                           
  6511                           ; Switch size 1, requested type "space"
  6512                           ; Number of cases is 3, Range of values is 2 to 6
  6513                           ; switch strategies available:
  6514                           ; Name         Instructions Cycles
  6515                           ; simple_byte           10     6 (average)
  6516                           ;	Chosen strategy is simple_byte
  6517  003F7C  0A02               	xorlw	2	; case 2
  6518  003F7E  E0F3               	bz	l805
  6519  003F80  0A07               	xorlw	7	; case 5
  6520  003F82  E0F4               	bz	l807
  6521  003F84  0A03               	xorlw	3	; case 6
  6522  003F86  E0F5               	bz	l8799
  6523  003F88                     l8805:
  6524                           
  6525                           ; BSR set to: 1
  6526                           ;dhcp_client.c: 259: optionLength -=1;
  6527  003F88  0100               	movlb	0	; () banked
  6528  003F8A  07CE               	decf	DHCP_Handler@optionLength& (0+255),f,b
  6529                           
  6530                           ;dhcp_client.c: 260: break;
  6531  003F8C  D014               	goto	l8813
  6532  003F8E                     l8807:
  6533                           
  6534                           ; BSR set to: 0
  6535                           ;dhcp_client.c: 262: ETH_Dump(optionLength);
  6536  003F8E  C0CE  F017         	movff	DHCP_Handler@optionLength,ETH_Dump@length
  6537  003F92  6A18               	clrf	ETH_Dump@length+1,c
  6538  003F94  EC2E  F030         	call	_ETH_Dump	;wreg free
  6539                           
  6540                           ;dhcp_client.c: 263: break;
  6541  003F98  D00E               	goto	l8813
  6542  003F9A                     l8811:
  6543                           
  6544                           ; BSR set to: 0
  6545  003F9A  51C1               	movf	DHCP_Handler@option& (0+255),w,b
  6546                           
  6547                           ; Switch size 1, requested type "space"
  6548                           ; Number of cases is 6, Range of values is 1 to 54
  6549                           ; switch strategies available:
  6550                           ; Name         Instructions Cycles
  6551                           ; simple_byte           19    10 (average)
  6552                           ;	Chosen strategy is simple_byte
  6553  003F9C  0A01               	xorlw	1	; case 1
  6554  003F9E  E093               	bz	l8769
  6555  003FA0  0A02               	xorlw	2	; case 3
  6556  003FA2  E09C               	bz	l8771
  6557  003FA4  0A05               	xorlw	5	; case 6
  6558  003FA6  E0A5               	bz	l8773
  6559  003FA8  0A35               	xorlw	53	; case 51
  6560  003FAA  E0C4               	bz	l8785
  6561  003FAC  0A06               	xorlw	6	; case 53
  6562  003FAE  E0E4               	bz	l8803
  6563  003FB0  0A03               	xorlw	3	; case 54
  6564  003FB2  E0CE               	bz	l8791
  6565  003FB4  D7EC               	goto	l8807
  6566  003FB6                     l8813:
  6567  003FB6  0100               	movlb	0	; () banked
  6568  003FB8  BFB0               	btfsc	(DHCP_Handler@length+1)& (0+255),7,b
  6569  003FBA  D005               	goto	l8815
  6570  003FBC  51B0               	movf	(DHCP_Handler@length+1)& (0+255),w,b
  6571  003FBE  E102               	bnz	u12721
  6572  003FC0  05AF               	decf	DHCP_Handler@length& (0+255),w,b
  6573  003FC2  B0D8               	btfsc	status,0,c
  6574  003FC4                     u12721:
  6575  003FC4  D76C               	goto	l8765
  6576  003FC6                     l8815:
  6577                           
  6578                           ; BSR set to: 0
  6579                           ;dhcp_client.c: 265: }
  6580                           ;dhcp_client.c: 266: if (clientState == REQUESTING)
  6581  003FC6  0E04               	movlw	4
  6582  003FC8  1848               	xorwf	_clientState,w,c
  6583  003FCA  A4D8               	btfss	status,2,c
  6584  003FCC  0012               	return	
  6585                           
  6586                           ; BSR set to: 0
  6587                           ;dhcp_client.c: 267: DHCP_Request( DHCP_REQUEST );
  6588  003FCE  0E03               	movlw	3
  6589  003FD0  EF32  F022         	goto	_DHCP_Request
  6590  003FD4                     l8819:
  6591                           
  6592                           ;dhcp_client.c: 270: else
  6593                           ;dhcp_client.c: 271: ETH_Dump(length - 34);
  6594  003FD4  0EDE               	movlw	222
  6595  003FD6  0100               	movlb	0	; () banked
  6596  003FD8  25AF               	addwf	DHCP_Handler@length& (0+255),w,b
  6597  003FDA  6E17               	movwf	ETH_Dump@length,c
  6598  003FDC  0EFF               	movlw	255
  6599  003FDE  21B0               	addwfc	(DHCP_Handler@length+1)& (0+255),w,b
  6600  003FE0  6E18               	movwf	ETH_Dump@length+1,c
  6601  003FE2  EF2E  F030         	goto	_ETH_Dump	;wreg free
  6602  003FE6                     __end_of_DHCP_Handler:
  6603                           	opt stack 0
  6604  003FE6                     PL643:
  6605                           	opt stack 12
  6606  003FE6  C0CF  F037         	movff	DHCP_Handler@myip,_ipv4Address
  6607  003FEA  C0D0  F038         	movff	DHCP_Handler@myip+1,_ipv4Address+1
  6608  003FEE  C0D1  F039         	movff	DHCP_Handler@myip+2,_ipv4Address+2
  6609  003FF2  C0D2  F03A         	movff	DHCP_Handler@myip+3,_ipv4Address+3
  6610  003FF6  0012               	return	
  6611  003FF8                     __end_ofPL643:
  6612                           	opt stack 0
  6613  003FF8                     PL773:
  6614                           	opt stack 12
  6615  003FF8  6A18               	clrf	ETH_Dump@length+1,c
  6616  003FFA  0E08               	movlw	8
  6617  003FFC  6E17               	movwf	ETH_Dump@length,c
  6618  003FFE  0C08               	retlw	8
  6619  004000                     __end_ofPL773:
  6620                           	opt stack 0
  6621                           tosu	equ	0xFFF
  6622                           tosh	equ	0xFFE
  6623                           tosl	equ	0xFFD
  6624                           pclath	equ	0xFFA
  6625                           tblptru	equ	0xFF8
  6626                           tblptrh	equ	0xFF7
  6627                           tblptrl	equ	0xFF6
  6628                           tablat	equ	0xFF5
  6629                           prodh	equ	0xFF4
  6630                           prodl	equ	0xFF3
  6631                           intcon	equ	0xFF2
  6632                           indf0	equ	0xFEF
  6633                           postinc0	equ	0xFEE
  6634                           fsr0h	equ	0xFEA
  6635                           fsr0l	equ	0xFE9
  6636                           wreg	equ	0xFE8
  6637                           postinc1	equ	0xFE6
  6638                           plusw1	equ	0xFE3
  6639                           fsr1h	equ	0xFE2
  6640                           fsr1l	equ	0xFE1
  6641                           bsr	equ	0xFE0
  6642                           indf2	equ	0xFDF
  6643                           postinc2	equ	0xFDE
  6644                           postdec2	equ	0xFDD
  6645                           plusw2	equ	0xFDB
  6646                           fsr2h	equ	0xFDA
  6647                           fsr2l	equ	0xFD9
  6648                           status	equ	0xFD8
  6649                           
  6650 ;; *************** function _memcmp *****************
  6651 ;; Defined at:
  6652 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memcmp.c"
  6653 ;; Parameters:    Size  Location     Type
  6654 ;;  s1              1    wreg     PTR const void 
  6655 ;;		 -> DHCP_Handler@ethPktMAC(6), 
  6656 ;;  s2              1   22[COMRAM] PTR const void 
  6657 ;;		 -> DHCP_Handler@ethMAC(6), 
  6658 ;;  n               2   23[COMRAM] unsigned int 
  6659 ;; Auto vars:     Size  Location     Type
  6660 ;;  s1              1   27[COMRAM] PTR const void 
  6661 ;;		 -> DHCP_Handler@ethPktMAC(6), 
  6662 ;; Return value:  Size  Location     Type
  6663 ;;                  2   22[COMRAM] int 
  6664 ;; Registers used:
  6665 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6666 ;; Tracked objects:
  6667 ;;		On entry : F/2
  6668 ;;		On exit  : 0/0
  6669 ;;		Unchanged: 0/0
  6670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6671 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6672 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6673 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6674 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6675 ;;Total ram usage:        6 bytes
  6676 ;; Hardware stack levels used:    1
  6677 ;; Hardware stack levels required when called:    8
  6678 ;; This function calls:
  6679 ;;		Nothing
  6680 ;; This function is called by:
  6681 ;;		_DHCP_Handler
  6682 ;; This function uses a non-reentrant model
  6683 ;;
  6684                           
  6685                           	psect	text20
  6686  005C2E                     __ptext20:
  6687                           	opt stack 0
  6688  005C2E                     _memcmp:
  6689                           	opt stack 17
  6690                           
  6691                           ;incstack = 0
  6692                           ;memcmp@s1 stored from wreg
  6693  005C2E  6E1C               	movwf	memcmp@s1,c
  6694  005C30  D01A               	goto	l8641
  6695  005C32                     l8633:
  6696  005C32  5017               	movf	memcmp@s2,w,c
  6697  005C34  6ED9               	movwf	fsr2l,c
  6698  005C36  6ADA               	clrf	fsr2h,c
  6699  005C38  501C               	movf	memcmp@s1,w,c
  6700  005C3A  6EE1               	movwf	fsr1l,c
  6701  005C3C  6AE2               	clrf	fsr1h,c
  6702  005C3E  50DE               	movf	postinc2,w,c
  6703  005C40  18E6               	xorwf	postinc1,w,c
  6704  005C42  E00F               	bz	l8639
  6705  005C44  501C               	movf	memcmp@s1,w,c
  6706  005C46  6ED9               	movwf	fsr2l,c
  6707  005C48  6ADA               	clrf	fsr2h,c
  6708  005C4A  50DF               	movf	indf2,w,c
  6709  005C4C  6E1A               	movwf	??_memcmp& (0+255),c
  6710  005C4E  5017               	movf	memcmp@s2,w,c
  6711  005C50  6ED9               	movwf	fsr2l,c
  6712  005C52  6ADA               	clrf	fsr2h,c
  6713  005C54  50DF               	movf	indf2,w,c
  6714  005C56  5C1A               	subwf	??_memcmp,w,c
  6715  005C58  6E17               	movwf	?_memcmp,c
  6716  005C5A  6A18               	clrf	?_memcmp+1,c
  6717  005C5C  A0D8               	btfss	status,0,c
  6718  005C5E  0618               	decf	?_memcmp+1,f,c
  6719  005C60  0012               	return	
  6720  005C62                     l8639:
  6721  005C62  2A1C               	incf	memcmp@s1,f,c
  6722  005C64  2A17               	incf	memcmp@s2,f,c
  6723  005C66                     l8641:
  6724  005C66  0618               	decf	memcmp@n,f,c
  6725  005C68  A0D8               	btfss	status,0,c
  6726  005C6A  0619               	decf	memcmp@n+1,f,c
  6727  005C6C  2818               	incf	memcmp@n,w,c
  6728  005C6E  E1E1               	bnz	l8633
  6729  005C70  2819               	incf	memcmp@n+1,w,c
  6730  005C72  E1DF               	bnz	l8633
  6731  005C74  6A17               	clrf	?_memcmp,c
  6732  005C76  6A18               	clrf	?_memcmp+1,c
  6733  005C78  0012               	return		;funcret
  6734  005C7A                     __end_of_memcmp:
  6735                           	opt stack 0
  6736                           tosu	equ	0xFFF
  6737                           tosh	equ	0xFFE
  6738                           tosl	equ	0xFFD
  6739                           pclath	equ	0xFFA
  6740                           tblptru	equ	0xFF8
  6741                           tblptrh	equ	0xFF7
  6742                           tblptrl	equ	0xFF6
  6743                           tablat	equ	0xFF5
  6744                           prodh	equ	0xFF4
  6745                           prodl	equ	0xFF3
  6746                           intcon	equ	0xFF2
  6747                           indf0	equ	0xFEF
  6748                           postinc0	equ	0xFEE
  6749                           fsr0h	equ	0xFEA
  6750                           fsr0l	equ	0xFE9
  6751                           wreg	equ	0xFE8
  6752                           postinc1	equ	0xFE6
  6753                           plusw1	equ	0xFE3
  6754                           fsr1h	equ	0xFE2
  6755                           fsr1l	equ	0xFE1
  6756                           bsr	equ	0xFE0
  6757                           indf2	equ	0xFDF
  6758                           postinc2	equ	0xFDE
  6759                           postdec2	equ	0xFDD
  6760                           plusw2	equ	0xFDB
  6761                           fsr2h	equ	0xFDA
  6762                           fsr2l	equ	0xFD9
  6763                           status	equ	0xFD8
  6764                           
  6765 ;; *************** function _ETH_Read32 *****************
  6766 ;; Defined at:
  6767 ;;		line 420 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
  6768 ;; Parameters:    Size  Location     Type
  6769 ;;		None
  6770 ;; Auto vars:     Size  Location     Type
  6771 ;;  ret             4   26[COMRAM] unsigned long 
  6772 ;; Return value:  Size  Location     Type
  6773 ;;                  4   22[COMRAM] unsigned long 
  6774 ;; Registers used:
  6775 ;;		wreg, status,2, status,0, cstack
  6776 ;; Tracked objects:
  6777 ;;		On entry : C/2
  6778 ;;		On exit  : F/1
  6779 ;;		Unchanged: 0/0
  6780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6781 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6782 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6784 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6785 ;;Total ram usage:        8 bytes
  6786 ;; Hardware stack levels used:    1
  6787 ;; Hardware stack levels required when called:    9
  6788 ;; This function calls:
  6789 ;;		_ETH_EdataRead
  6790 ;; This function is called by:
  6791 ;;		_DHCP_Handler
  6792 ;; This function uses a non-reentrant model
  6793 ;;
  6794                           
  6795                           	psect	text21
  6796  0059EE                     __ptext21:
  6797                           	opt stack 0
  6798  0059EE                     _ETH_Read32:
  6799                           	opt stack 16
  6800                           
  6801                           ;j60_driver.c: 422: uint32_t ret = 0;
  6802                           
  6803                           ;incstack = 0
  6804  0059EE  6A1B               	clrf	ETH_Read32@ret,c
  6805  0059F0  6A1C               	clrf	ETH_Read32@ret+1,c
  6806  0059F2  6A1D               	clrf	ETH_Read32@ret+2,c
  6807  0059F4  6A1E               	clrf	ETH_Read32@ret+3,c
  6808                           
  6809                           ;j60_driver.c: 423: if(rxPacketStatusVector.byteCount >= sizeof(ret))
  6810  0059F6  0102               	movlb	2	; () banked
  6811  0059F8  512D               	movf	(_rxPacketStatusVector+1)& (0+255),w,b
  6812  0059FA  E103               	bnz	u12170
  6813  0059FC  0E04               	movlw	4
  6814  0059FE  5D2C               	subwf	_rxPacketStatusVector& (0+255),w,b
  6815  005A00  E318               	bnc	l535
  6816  005A02                     u12170:
  6817  005A02                     i5L__ptext100:
  6818                           	opt stack 0
  6819  005A02                     i5L_ETH_EdataRead:
  6820                           	opt stack 0
  6821  005A02                     i5Ll7805:
  6822                           	opt stack 15
  6823  005A02  CF61 FE7E          	movff	3937,_errataTemp	;# 
  6824  005A06                     i5Ll7807:
  6825                           	opt stack 15
  6826                           
  6827                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
  6828  005A06  010E               	movlb	14	; () banked
  6829  005A08  517E               	movf	126,w,b
  6830  005A0A                     i5Ll460:
  6831                           	opt stack 16
  6832  005A0A  6E1E               	movwf	ETH_Read32@ret+3,c
  6833  005A0C                     i6L__ptext100:
  6834                           	opt stack 0
  6835  005A0C                     i6L_ETH_EdataRead:
  6836                           	opt stack 0
  6837  005A0C                     i6Ll7805:
  6838                           	opt stack 15
  6839  005A0C  CF61 FE7E          	movff	3937,_errataTemp	;# 
  6840  005A10                     i6Ll7807:
  6841                           	opt stack 15
  6842                           
  6843                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
  6844  005A10  010E               	movlb	14	; () banked
  6845  005A12  517E               	movf	126,w,b
  6846  005A14                     i6Ll460:
  6847                           	opt stack 16
  6848  005A14  6E1D               	movwf	ETH_Read32@ret+2,c
  6849  005A16                     i7L__ptext100:
  6850                           	opt stack 0
  6851  005A16                     i7L_ETH_EdataRead:
  6852                           	opt stack 0
  6853  005A16                     i7Ll7805:
  6854                           	opt stack 15
  6855  005A16  CF61 FE7E          	movff	3937,_errataTemp	;# 
  6856  005A1A                     i7Ll7807:
  6857                           	opt stack 15
  6858                           
  6859                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
  6860  005A1A  010E               	movlb	14	; () banked
  6861  005A1C  517E               	movf	126,w,b
  6862  005A1E                     i7Ll460:
  6863                           	opt stack 16
  6864  005A1E  6E1C               	movwf	ETH_Read32@ret+1,c
  6865  005A20                     i8L__ptext100:
  6866                           	opt stack 0
  6867  005A20                     i8L_ETH_EdataRead:
  6868                           	opt stack 0
  6869  005A20                     i8Ll7805:
  6870                           	opt stack 15
  6871  005A20  CF61 FE7E          	movff	3937,_errataTemp	;# 
  6872  005A24                     i8Ll7807:
  6873                           	opt stack 15
  6874                           
  6875                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
  6876  005A24  010E               	movlb	14	; () banked
  6877  005A26  517E               	movf	126,w,b
  6878  005A28                     i8Ll460:
  6879                           	opt stack 16
  6880  005A28  6E1B               	movwf	ETH_Read32@ret,c
  6881                           
  6882                           ; BSR set to: 14
  6883                           ;j60_driver.c: 429: rxPacketStatusVector.byteCount -= sizeof(ret);
  6884  005A2A  0E04               	movlw	4
  6885                           
  6886                           ; BSR set to: 2
  6887                           ;j60_driver.c: 430: ethData.error = 0;
  6888  005A2C  EC14  F02F         	call	PL695	;call to abstracted procedure
  6889                           
  6890                           ;j60_driver.c: 431: }
  6891  005A30  D002               	goto	l536
  6892  005A32                     l535:
  6893                           
  6894                           ; BSR set to: 2
  6895                           ;j60_driver.c: 432: else
  6896                           ;j60_driver.c: 433: {
  6897                           ;j60_driver.c: 434: ethData.error = 1;
  6898  005A32  0101               	movlb	1	; () banked
  6899  005A34  81BF               	bsf	_ethData& (0+255),0,b	;volatile
  6900  005A36                     l536:
  6901                           
  6902                           ; BSR set to: 1
  6903                           ;j60_driver.c: 435: }
  6904                           ;j60_driver.c: 436: return ret;
  6905  005A36  C01B  F017         	movff	ETH_Read32@ret,?_ETH_Read32
  6906  005A3A  C01C  F018         	movff	ETH_Read32@ret+1,?_ETH_Read32+1
  6907  005A3E  C01D  F019         	movff	ETH_Read32@ret+2,?_ETH_Read32+2
  6908  005A42  C01E  F01A         	movff	ETH_Read32@ret+3,?_ETH_Read32+3
  6909                           
  6910                           ; BSR set to: 1
  6911  005A46  0012               	return		;funcret
  6912  005A48                     __end_of_ETH_Read32:
  6913                           	opt stack 0
  6914                           tosu	equ	0xFFF
  6915                           tosh	equ	0xFFE
  6916                           tosl	equ	0xFFD
  6917                           pclath	equ	0xFFA
  6918                           tblptru	equ	0xFF8
  6919                           tblptrh	equ	0xFF7
  6920                           tblptrl	equ	0xFF6
  6921                           tablat	equ	0xFF5
  6922                           prodh	equ	0xFF4
  6923                           prodl	equ	0xFF3
  6924                           intcon	equ	0xFF2
  6925                           indf0	equ	0xFEF
  6926                           postinc0	equ	0xFEE
  6927                           fsr0h	equ	0xFEA
  6928                           fsr0l	equ	0xFE9
  6929                           wreg	equ	0xFE8
  6930                           postinc1	equ	0xFE6
  6931                           plusw1	equ	0xFE3
  6932                           fsr1h	equ	0xFE2
  6933                           fsr1l	equ	0xFE1
  6934                           bsr	equ	0xFE0
  6935                           indf2	equ	0xFDF
  6936                           postinc2	equ	0xFDE
  6937                           postdec2	equ	0xFDD
  6938                           plusw2	equ	0xFDB
  6939                           fsr2h	equ	0xFDA
  6940                           fsr2l	equ	0xFD9
  6941                           status	equ	0xFD8
  6942                           
  6943 ;; *************** function _memset *****************
  6944 ;; Defined at:
  6945 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
  6946 ;; Parameters:    Size  Location     Type
  6947 ;;  p1              2   22[COMRAM] PTR void 
  6948 ;;		 -> DEMO_UDP_Recv@str2(16), DEMO_UDP_Recv@str1(16), DEMO_UDP_Recv@str(32), main@str(32), 
  6949 ;;  c               2   24[COMRAM] int 
  6950 ;;  n               2   26[COMRAM] unsigned int 
  6951 ;; Auto vars:     Size  Location     Type
  6952 ;;  p               2   28[COMRAM] PTR unsigned char 
  6953 ;;		 -> DEMO_UDP_Recv@str2(16), DEMO_UDP_Recv@str1(16), DEMO_UDP_Recv@str(32), main@str(32), 
  6954 ;; Return value:  Size  Location     Type
  6955 ;;                  2   22[COMRAM] PTR void 
  6956 ;; Registers used:
  6957 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6958 ;; Tracked objects:
  6959 ;;		On entry : 0/2
  6960 ;;		On exit  : 0/0
  6961 ;;		Unchanged: 0/0
  6962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6963 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6964 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6966 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6967 ;;Total ram usage:        8 bytes
  6968 ;; Hardware stack levels used:    1
  6969 ;; Hardware stack levels required when called:    8
  6970 ;; This function calls:
  6971 ;;		Nothing
  6972 ;; This function is called by:
  6973 ;;		_main
  6974 ;;		_DEMO_UDP_Recv
  6975 ;; This function uses a non-reentrant model
  6976 ;;
  6977                           
  6978                           	psect	text22
  6979  00616A                     __ptext22:
  6980                           	opt stack 0
  6981  00616A                     _memset:
  6982                           	opt stack 22
  6983                           
  6984                           ; BSR set to: 1
  6985                           ;incstack = 0
  6986  00616A  C017  F01D         	movff	memset@p1,memset@p
  6987  00616E  C018  F01E         	movff	memset@p1+1,memset@p+1
  6988  006172  D008               	goto	l8699
  6989  006174                     l8695:
  6990  006174  C01D  FFD9         	movff	memset@p,fsr2l
  6991  006178  C01E  FFDA         	movff	memset@p+1,fsr2h
  6992  00617C  C019  FFDF         	movff	memset@c,indf2
  6993  006180  4A1D               	infsnz	memset@p,f,c
  6994  006182  2A1E               	incf	memset@p+1,f,c
  6995  006184                     l8699:
  6996  006184  061B               	decf	memset@n,f,c
  6997  006186  A0D8               	btfss	status,0,c
  6998  006188  061C               	decf	memset@n+1,f,c
  6999  00618A  281B               	incf	memset@n,w,c
  7000  00618C  E1F3               	bnz	l8695
  7001  00618E  281C               	incf	memset@n+1,w,c
  7002  006190  E1F1               	bnz	l8695
  7003  006192  0012               	return		;funcret
  7004  006194                     __end_of_memset:
  7005                           	opt stack 0
  7006                           tosu	equ	0xFFF
  7007                           tosh	equ	0xFFE
  7008                           tosl	equ	0xFFD
  7009                           pclath	equ	0xFFA
  7010                           tblptru	equ	0xFF8
  7011                           tblptrh	equ	0xFF7
  7012                           tblptrl	equ	0xFF6
  7013                           tablat	equ	0xFF5
  7014                           prodh	equ	0xFF4
  7015                           prodl	equ	0xFF3
  7016                           intcon	equ	0xFF2
  7017                           indf0	equ	0xFEF
  7018                           postinc0	equ	0xFEE
  7019                           fsr0h	equ	0xFEA
  7020                           fsr0l	equ	0xFE9
  7021                           wreg	equ	0xFE8
  7022                           postinc1	equ	0xFE6
  7023                           plusw1	equ	0xFE3
  7024                           fsr1h	equ	0xFE2
  7025                           fsr1l	equ	0xFE1
  7026                           bsr	equ	0xFE0
  7027                           indf2	equ	0xFDF
  7028                           postinc2	equ	0xFDE
  7029                           postdec2	equ	0xFDD
  7030                           plusw2	equ	0xFDB
  7031                           fsr2h	equ	0xFDA
  7032                           fsr2l	equ	0xFD9
  7033                           status	equ	0xFD8
  7034                           
  7035 ;; *************** function _lcd_puts *****************
  7036 ;; Defined at:
  7037 ;;		line 86 in file "../board_support_package/picdem2_net/lcd.c"
  7038 ;; Parameters:    Size  Location     Type
  7039 ;;  s               2   24[COMRAM] PTR const unsigned char 
  7040 ;;		 -> DEMO_UDP_Recv@str2(16), DEMO_UDP_Recv@str1(16), DEMO_UDP_Recv@str(32), main@str(32), 
  7041 ;; Auto vars:     Size  Location     Type
  7042 ;;		None
  7043 ;; Return value:  Size  Location     Type
  7044 ;;		None               void
  7045 ;; Registers used:
  7046 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7047 ;; Tracked objects:
  7048 ;;		On entry : 0/2
  7049 ;;		On exit  : 0/0
  7050 ;;		Unchanged: 0/0
  7051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7052 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7055 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7056 ;;Total ram usage:        2 bytes
  7057 ;; Hardware stack levels used:    1
  7058 ;; Hardware stack levels required when called:   10
  7059 ;; This function calls:
  7060 ;;		_lcd_putch
  7061 ;; This function is called by:
  7062 ;;		_main
  7063 ;;		_DEMO_UDP_Recv
  7064 ;; This function uses a non-reentrant model
  7065 ;;
  7066                           
  7067                           	psect	text23
  7068  0062FC                     __ptext23:
  7069                           	opt stack 0
  7070  0062FC                     _lcd_puts:
  7071                           	opt stack 20
  7072                           
  7073                           ;lcd.c: 88: while(*s)
  7074                           
  7075                           ;incstack = 0
  7076  0062FC  D005               	goto	l8489
  7077  0062FE                     l8485:
  7078                           
  7079                           ;lcd.c: 89: lcd_putch(*s++);
  7080  0062FE  D807               	call	PL717	;call to abstracted procedure
  7081  006300  EC9C  F031         	call	_lcd_putch
  7082  006304  4A19               	infsnz	lcd_puts@s,f,c
  7083  006306  2A1A               	incf	lcd_puts@s+1,f,c
  7084  006308                     l8489:
  7085  006308  D802               	call	PL717	;call to abstracted procedure
  7086  00630A  E1F9               	bnz	l8485
  7087  00630C  0012               	return		;funcret
  7088  00630E                     __end_of_lcd_puts:
  7089                           	opt stack 0
  7090  00630E                     PL717:
  7091                           	opt stack 20
  7092  00630E  C019  FFD9         	movff	lcd_puts@s,fsr2l
  7093  006312  C01A  FFDA         	movff	lcd_puts@s+1,fsr2h
  7094  006316  50DF               	movf	indf2,w,c
  7095  006318  0012               	return	
  7096  00631A                     __end_ofPL717:
  7097                           	opt stack 0
  7098                           tosu	equ	0xFFF
  7099                           tosh	equ	0xFFE
  7100                           tosl	equ	0xFFD
  7101                           pclath	equ	0xFFA
  7102                           tblptru	equ	0xFF8
  7103                           tblptrh	equ	0xFF7
  7104                           tblptrl	equ	0xFF6
  7105                           tablat	equ	0xFF5
  7106                           prodh	equ	0xFF4
  7107                           prodl	equ	0xFF3
  7108                           intcon	equ	0xFF2
  7109                           indf0	equ	0xFEF
  7110                           postinc0	equ	0xFEE
  7111                           fsr0h	equ	0xFEA
  7112                           fsr0l	equ	0xFE9
  7113                           wreg	equ	0xFE8
  7114                           postinc1	equ	0xFE6
  7115                           plusw1	equ	0xFE3
  7116                           fsr1h	equ	0xFE2
  7117                           fsr1l	equ	0xFE1
  7118                           bsr	equ	0xFE0
  7119                           indf2	equ	0xFDF
  7120                           postinc2	equ	0xFDE
  7121                           postdec2	equ	0xFDD
  7122                           plusw2	equ	0xFDB
  7123                           fsr2h	equ	0xFDA
  7124                           fsr2l	equ	0xFD9
  7125                           status	equ	0xFD8
  7126                           
  7127 ;; *************** function _lcd_putch *****************
  7128 ;; Defined at:
  7129 ;;		line 76 in file "../board_support_package/picdem2_net/lcd.c"
  7130 ;; Parameters:    Size  Location     Type
  7131 ;;  c               1    wreg     unsigned char 
  7132 ;; Auto vars:     Size  Location     Type
  7133 ;;  c               1   23[COMRAM] unsigned char 
  7134 ;; Return value:  Size  Location     Type
  7135 ;;		None               void
  7136 ;; Registers used:
  7137 ;;		wreg, status,2, status,0, cstack
  7138 ;; Tracked objects:
  7139 ;;		On entry : 0/2
  7140 ;;		On exit  : 0/0
  7141 ;;		Unchanged: 0/0
  7142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7144 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7146 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7147 ;;Total ram usage:        1 bytes
  7148 ;; Hardware stack levels used:    1
  7149 ;; Hardware stack levels required when called:    9
  7150 ;; This function calls:
  7151 ;;		_lcd_busy
  7152 ;;		_lcd_write_data
  7153 ;; This function is called by:
  7154 ;;		_lcd_puts
  7155 ;; This function uses a non-reentrant model
  7156 ;;
  7157                           
  7158                           	psect	text24
  7159  006338                     __ptext24:
  7160                           	opt stack 0
  7161  006338                     _lcd_putch:
  7162                           	opt stack 20
  7163                           
  7164                           ;incstack = 0
  7165                           ;lcd_putch@c stored from wreg
  7166  006338  6E18               	movwf	lcd_putch@c,c
  7167                           
  7168                           ;lcd.c: 78: if(c >= ' ' && c < 127)
  7169  00633A  0E1F               	movlw	31
  7170  00633C  6418               	cpfsgt	lcd_putch@c,c
  7171  00633E  EF61  F032         	goto	_lcd_busy
  7172  006342  0E7F               	movlw	127
  7173  006344  6018               	cpfslt	lcd_putch@c,c
  7174  006346  EF61  F032         	goto	_lcd_busy
  7175                           
  7176                           ;lcd.c: 79: {
  7177                           ;lcd.c: 80: lcd_write_data(c);
  7178  00634A  5018               	movf	lcd_putch@c,w,c
  7179  00634C  EC5E  F031         	call	_lcd_write_data
  7180                           
  7181                           ;lcd.c: 81: }
  7182                           ;lcd.c: 82: lcd_busy();
  7183  006350  EF61  F032         	goto	_lcd_busy	;wreg free
  7184  006354                     __end_of_lcd_putch:
  7185                           	opt stack 0
  7186                           tosu	equ	0xFFF
  7187                           tosh	equ	0xFFE
  7188                           tosl	equ	0xFFD
  7189                           pclath	equ	0xFFA
  7190                           tblptru	equ	0xFF8
  7191                           tblptrh	equ	0xFF7
  7192                           tblptrl	equ	0xFF6
  7193                           tablat	equ	0xFF5
  7194                           prodh	equ	0xFF4
  7195                           prodl	equ	0xFF3
  7196                           intcon	equ	0xFF2
  7197                           indf0	equ	0xFEF
  7198                           postinc0	equ	0xFEE
  7199                           fsr0h	equ	0xFEA
  7200                           fsr0l	equ	0xFE9
  7201                           wreg	equ	0xFE8
  7202                           postinc1	equ	0xFE6
  7203                           plusw1	equ	0xFE3
  7204                           fsr1h	equ	0xFE2
  7205                           fsr1l	equ	0xFE1
  7206                           bsr	equ	0xFE0
  7207                           indf2	equ	0xFDF
  7208                           postinc2	equ	0xFDE
  7209                           postdec2	equ	0xFDD
  7210                           plusw2	equ	0xFDB
  7211                           fsr2h	equ	0xFDA
  7212                           fsr2l	equ	0xFD9
  7213                           status	equ	0xFD8
  7214                           
  7215 ;; *************** function _lcd_write_data *****************
  7216 ;; Defined at:
  7217 ;;		line 71 in file "../board_support_package/picdem2_net/lcd_hw.c"
  7218 ;; Parameters:    Size  Location     Type
  7219 ;;  d               1    wreg     unsigned char 
  7220 ;; Auto vars:     Size  Location     Type
  7221 ;;  d               1   22[COMRAM] unsigned char 
  7222 ;; Return value:  Size  Location     Type
  7223 ;;		None               void
  7224 ;; Registers used:
  7225 ;;		wreg
  7226 ;; Tracked objects:
  7227 ;;		On entry : 0/2
  7228 ;;		On exit  : 0/0
  7229 ;;		Unchanged: 0/0
  7230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7232 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7234 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7235 ;;Total ram usage:        1 bytes
  7236 ;; Hardware stack levels used:    1
  7237 ;; Hardware stack levels required when called:    8
  7238 ;; This function calls:
  7239 ;;		Nothing
  7240 ;; This function is called by:
  7241 ;;		_lcd_putch
  7242 ;; This function uses a non-reentrant model
  7243 ;;
  7244                           
  7245                           	psect	text25
  7246  0062BC                     __ptext25:
  7247                           	opt stack 0
  7248  0062BC                     _lcd_write_data:
  7249                           	opt stack 20
  7250                           
  7251                           ;incstack = 0
  7252                           ;lcd_write_data@d stored from wreg
  7253  0062BC  6E17               	movwf	lcd_write_data@d,c
  7254                           
  7255                           ;lcd_hw.c: 73: LATH1 = 0;
  7256  0062BE  9290               	bcf	3984,1,c	;volatile
  7257                           
  7258                           ;lcd_hw.c: 74: LATH2 = 1;
  7259  0062C0  8490               	bsf	3984,2,c	;volatile
  7260                           
  7261                           ;lcd_hw.c: 75: LATE = d;
  7262  0062C2  C017  FF8D         	movff	lcd_write_data@d,3981	;volatile
  7263                           
  7264                           ;lcd_hw.c: 76: _delay((unsigned long)((1)*(41666667UL/4000000.0)));
  7265  0062C6  0E03               	movlw	3
  7266  0062C8                     u16287:
  7267  0062C8  2EE8               	decfsz	wreg,f,c
  7268  0062CA  D7FE               	goto	u16287
  7269  0062CC  F000               	nop	
  7270                           
  7271                           ;lcd_hw.c: 77: LATH0 = 1;
  7272  0062CE  8090               	bsf	3984,0,c	;volatile
  7273                           
  7274                           ;lcd_hw.c: 78: _delay((unsigned long)((1)*(41666667UL/4000000.0)));
  7275  0062D0  0E03               	movlw	3
  7276  0062D2                     u16297:
  7277  0062D2  2EE8               	decfsz	wreg,f,c
  7278  0062D4  D7FE               	goto	u16297
  7279  0062D6  F000               	nop	
  7280                           
  7281                           ;lcd_hw.c: 79: LATH0 = 0;
  7282  0062D8  9090               	bcf	3984,0,c	;volatile
  7283  0062DA  0012               	return		;funcret
  7284  0062DC                     __end_of_lcd_write_data:
  7285                           	opt stack 0
  7286                           tosu	equ	0xFFF
  7287                           tosh	equ	0xFFE
  7288                           tosl	equ	0xFFD
  7289                           pclath	equ	0xFFA
  7290                           tblptru	equ	0xFF8
  7291                           tblptrh	equ	0xFF7
  7292                           tblptrl	equ	0xFF6
  7293                           tablat	equ	0xFF5
  7294                           prodh	equ	0xFF4
  7295                           prodl	equ	0xFF3
  7296                           intcon	equ	0xFF2
  7297                           indf0	equ	0xFEF
  7298                           postinc0	equ	0xFEE
  7299                           fsr0h	equ	0xFEA
  7300                           fsr0l	equ	0xFE9
  7301                           wreg	equ	0xFE8
  7302                           postinc1	equ	0xFE6
  7303                           plusw1	equ	0xFE3
  7304                           fsr1h	equ	0xFE2
  7305                           fsr1l	equ	0xFE1
  7306                           bsr	equ	0xFE0
  7307                           indf2	equ	0xFDF
  7308                           postinc2	equ	0xFDE
  7309                           postdec2	equ	0xFDD
  7310                           plusw2	equ	0xFDB
  7311                           fsr2h	equ	0xFDA
  7312                           fsr2l	equ	0xFD9
  7313                           status	equ	0xFD8
  7314                           
  7315 ;; *************** function _lcd_goto2 *****************
  7316 ;; Defined at:
  7317 ;;		line 102 in file "../board_support_package/picdem2_net/lcd.c"
  7318 ;; Parameters:    Size  Location     Type
  7319 ;;  pos             1    wreg     unsigned char 
  7320 ;; Auto vars:     Size  Location     Type
  7321 ;;  pos             1   23[COMRAM] unsigned char 
  7322 ;; Return value:  Size  Location     Type
  7323 ;;		None               void
  7324 ;; Registers used:
  7325 ;;		wreg, status,2, status,0, cstack
  7326 ;; Tracked objects:
  7327 ;;		On entry : F/2
  7328 ;;		On exit  : 0/0
  7329 ;;		Unchanged: 0/0
  7330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7332 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7334 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7335 ;;Total ram usage:        1 bytes
  7336 ;; Hardware stack levels used:    1
  7337 ;; Hardware stack levels required when called:    9
  7338 ;; This function calls:
  7339 ;;		_lcd_busy
  7340 ;;		_lcd_write_ctrl
  7341 ;; This function is called by:
  7342 ;;		_DEMO_UDP_Recv
  7343 ;; This function uses a non-reentrant model
  7344 ;;
  7345                           
  7346                           	psect	text26
  7347  006482                     __ptext26:
  7348                           	opt stack 0
  7349  006482                     _lcd_goto2:
  7350                           	opt stack 16
  7351                           
  7352                           ;incstack = 0
  7353                           ;lcd_goto2@pos stored from wreg
  7354  006482  6E18               	movwf	lcd_goto2@pos,c
  7355                           
  7356                           ;lcd.c: 104: lcd_write_ctrl(0xC0+pos);
  7357  006484  5018               	movf	lcd_goto2@pos,w,c
  7358  006486  0FC0               	addlw	192
  7359  006488  EC6E  F031         	call	_lcd_write_ctrl
  7360                           
  7361                           ;lcd.c: 105: lcd_busy();
  7362  00648C  EF61  F032         	goto	_lcd_busy	;wreg free
  7363  006490                     __end_of_lcd_goto2:
  7364                           	opt stack 0
  7365                           tosu	equ	0xFFF
  7366                           tosh	equ	0xFFE
  7367                           tosl	equ	0xFFD
  7368                           pclath	equ	0xFFA
  7369                           tblptru	equ	0xFF8
  7370                           tblptrh	equ	0xFF7
  7371                           tblptrl	equ	0xFF6
  7372                           tablat	equ	0xFF5
  7373                           prodh	equ	0xFF4
  7374                           prodl	equ	0xFF3
  7375                           intcon	equ	0xFF2
  7376                           indf0	equ	0xFEF
  7377                           postinc0	equ	0xFEE
  7378                           fsr0h	equ	0xFEA
  7379                           fsr0l	equ	0xFE9
  7380                           wreg	equ	0xFE8
  7381                           postinc1	equ	0xFE6
  7382                           plusw1	equ	0xFE3
  7383                           fsr1h	equ	0xFE2
  7384                           fsr1l	equ	0xFE1
  7385                           bsr	equ	0xFE0
  7386                           indf2	equ	0xFDF
  7387                           postinc2	equ	0xFDE
  7388                           postdec2	equ	0xFDD
  7389                           plusw2	equ	0xFDB
  7390                           fsr2h	equ	0xFDA
  7391                           fsr2l	equ	0xFD9
  7392                           status	equ	0xFD8
  7393                           
  7394 ;; *************** function _lcd_goto1 *****************
  7395 ;; Defined at:
  7396 ;;		line 96 in file "../board_support_package/picdem2_net/lcd.c"
  7397 ;; Parameters:    Size  Location     Type
  7398 ;;  pos             1    wreg     unsigned char 
  7399 ;; Auto vars:     Size  Location     Type
  7400 ;;  pos             1   23[COMRAM] unsigned char 
  7401 ;; Return value:  Size  Location     Type
  7402 ;;		None               void
  7403 ;; Registers used:
  7404 ;;		wreg, status,2, status,0, cstack
  7405 ;; Tracked objects:
  7406 ;;		On entry : 0/2
  7407 ;;		On exit  : 0/0
  7408 ;;		Unchanged: 0/0
  7409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7411 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7413 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7414 ;;Total ram usage:        1 bytes
  7415 ;; Hardware stack levels used:    1
  7416 ;; Hardware stack levels required when called:    9
  7417 ;; This function calls:
  7418 ;;		_lcd_busy
  7419 ;;		_lcd_write_ctrl
  7420 ;; This function is called by:
  7421 ;;		_main
  7422 ;;		_DEMO_UDP_Recv
  7423 ;; This function uses a non-reentrant model
  7424 ;;
  7425                           
  7426                           	psect	text27
  7427  006490                     __ptext27:
  7428                           	opt stack 0
  7429  006490                     _lcd_goto1:
  7430                           	opt stack 21
  7431                           
  7432                           ;incstack = 0
  7433                           ;lcd_goto1@pos stored from wreg
  7434  006490  6E18               	movwf	lcd_goto1@pos,c
  7435                           
  7436                           ;lcd.c: 98: lcd_write_ctrl(0x80+pos);
  7437  006492  5018               	movf	lcd_goto1@pos,w,c
  7438  006494  0F80               	addlw	128
  7439  006496  EC6E  F031         	call	_lcd_write_ctrl
  7440                           
  7441                           ;lcd.c: 99: lcd_busy();
  7442  00649A  EF61  F032         	goto	_lcd_busy	;wreg free
  7443  00649E                     __end_of_lcd_goto1:
  7444                           	opt stack 0
  7445                           tosu	equ	0xFFF
  7446                           tosh	equ	0xFFE
  7447                           tosl	equ	0xFFD
  7448                           pclath	equ	0xFFA
  7449                           tblptru	equ	0xFF8
  7450                           tblptrh	equ	0xFF7
  7451                           tblptrl	equ	0xFF6
  7452                           tablat	equ	0xFF5
  7453                           prodh	equ	0xFF4
  7454                           prodl	equ	0xFF3
  7455                           intcon	equ	0xFF2
  7456                           indf0	equ	0xFEF
  7457                           postinc0	equ	0xFEE
  7458                           fsr0h	equ	0xFEA
  7459                           fsr0l	equ	0xFE9
  7460                           wreg	equ	0xFE8
  7461                           postinc1	equ	0xFE6
  7462                           plusw1	equ	0xFE3
  7463                           fsr1h	equ	0xFE2
  7464                           fsr1l	equ	0xFE1
  7465                           bsr	equ	0xFE0
  7466                           indf2	equ	0xFDF
  7467                           postinc2	equ	0xFDE
  7468                           postdec2	equ	0xFDD
  7469                           plusw2	equ	0xFDB
  7470                           fsr2h	equ	0xFDA
  7471                           fsr2l	equ	0xFD9
  7472                           status	equ	0xFD8
  7473                           
  7474 ;; *************** function _lcd_busy *****************
  7475 ;; Defined at:
  7476 ;;		line 82 in file "../board_support_package/picdem2_net/lcd_hw.c"
  7477 ;; Parameters:    Size  Location     Type
  7478 ;;		None
  7479 ;; Auto vars:     Size  Location     Type
  7480 ;;		None
  7481 ;; Return value:  Size  Location     Type
  7482 ;;		None               void
  7483 ;; Registers used:
  7484 ;;		wreg
  7485 ;; Tracked objects:
  7486 ;;		On entry : 0/2
  7487 ;;		On exit  : 0/0
  7488 ;;		Unchanged: 0/0
  7489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7494 ;;Total ram usage:        0 bytes
  7495 ;; Hardware stack levels used:    1
  7496 ;; Hardware stack levels required when called:    8
  7497 ;; This function calls:
  7498 ;;		Nothing
  7499 ;; This function is called by:
  7500 ;;		_lcd_putch
  7501 ;;		_lcd_goto1
  7502 ;;		_lcd_goto2
  7503 ;;		_lcd_init
  7504 ;; This function uses a non-reentrant model
  7505 ;;
  7506                           
  7507                           	psect	text28
  7508  0064C2                     __ptext28:
  7509                           	opt stack 0
  7510  0064C2                     _lcd_busy:
  7511                           	opt stack 20
  7512                           
  7513                           ;lcd_hw.c: 84: _delay((unsigned long)((50)*(41666667UL/4000000.0)));
  7514                           
  7515                           ;incstack = 0
  7516  0064C2  0EAD               	movlw	173
  7517  0064C4                     u16307:
  7518  0064C4  2EE8               	decfsz	wreg,f,c
  7519  0064C6  D7FE               	goto	u16307
  7520  0064C8  F000               	nop	
  7521  0064CA  0012               	return		;funcret
  7522  0064CC                     __end_of_lcd_busy:
  7523                           	opt stack 0
  7524                           tosu	equ	0xFFF
  7525                           tosh	equ	0xFFE
  7526                           tosl	equ	0xFFD
  7527                           pclath	equ	0xFFA
  7528                           tblptru	equ	0xFF8
  7529                           tblptrh	equ	0xFF7
  7530                           tblptrl	equ	0xFF6
  7531                           tablat	equ	0xFF5
  7532                           prodh	equ	0xFF4
  7533                           prodl	equ	0xFF3
  7534                           intcon	equ	0xFF2
  7535                           indf0	equ	0xFEF
  7536                           postinc0	equ	0xFEE
  7537                           fsr0h	equ	0xFEA
  7538                           fsr0l	equ	0xFE9
  7539                           wreg	equ	0xFE8
  7540                           postinc1	equ	0xFE6
  7541                           plusw1	equ	0xFE3
  7542                           fsr1h	equ	0xFE2
  7543                           fsr1l	equ	0xFE1
  7544                           bsr	equ	0xFE0
  7545                           indf2	equ	0xFDF
  7546                           postinc2	equ	0xFDE
  7547                           postdec2	equ	0xFDD
  7548                           plusw2	equ	0xFDB
  7549                           fsr2h	equ	0xFDA
  7550                           fsr2l	equ	0xFD9
  7551                           status	equ	0xFD8
  7552                           
  7553 ;; *************** function _lcd_clear *****************
  7554 ;; Defined at:
  7555 ;;		line 67 in file "../board_support_package/picdem2_net/lcd.c"
  7556 ;; Parameters:    Size  Location     Type
  7557 ;;		None
  7558 ;; Auto vars:     Size  Location     Type
  7559 ;;		None
  7560 ;; Return value:  Size  Location     Type
  7561 ;;		None               void
  7562 ;; Registers used:
  7563 ;;		wreg, cstack
  7564 ;; Tracked objects:
  7565 ;;		On entry : 0/1
  7566 ;;		On exit  : 0/0
  7567 ;;		Unchanged: 0/0
  7568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7571 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7572 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7573 ;;Total ram usage:        1 bytes
  7574 ;; Hardware stack levels used:    1
  7575 ;; Hardware stack levels required when called:    9
  7576 ;; This function calls:
  7577 ;;		_lcd_write_ctrl
  7578 ;; This function is called by:
  7579 ;;		_DEMO_UDP_Recv
  7580 ;; This function uses a non-reentrant model
  7581 ;;
  7582                           
  7583                           	psect	text29
  7584  006258                     __ptext29:
  7585                           	opt stack 0
  7586  006258                     _lcd_clear:
  7587                           	opt stack 16
  7588                           
  7589                           ;lcd.c: 69: lcd_write_ctrl(0x1);
  7590                           
  7591                           ;incstack = 0
  7592  006258  0E01               	movlw	1
  7593  00625A  EC6E  F031         	call	_lcd_write_ctrl
  7594                           
  7595                           ;lcd.c: 70: _delay((unsigned long)((10)*(41666667UL/4000.0)));
  7596  00625E  0E88               	movlw	136
  7597  006260  6E18               	movwf	??_lcd_clear& (0+255),c
  7598  006262  0E46               	movlw	70
  7599  006264                     u16317:
  7600  006264  2EE8               	decfsz	wreg,f,c
  7601  006266  D7FE               	goto	u16317
  7602  006268  2E18               	decfsz	??_lcd_clear& (0+255),f,c
  7603  00626A  D7FC               	goto	u16317
  7604  00626C  D000               	nop2	
  7605                           
  7606                           ;lcd.c: 71: lcd_write_ctrl(0x06);
  7607  00626E  0E06               	movlw	6
  7608  006270  EC6E  F031         	call	_lcd_write_ctrl
  7609                           
  7610                           ;lcd.c: 72: lcd_write_ctrl(0x0F);
  7611  006274  0E0F               	movlw	15
  7612  006276  EF6E  F031         	goto	_lcd_write_ctrl
  7613  00627A                     __end_of_lcd_clear:
  7614                           	opt stack 0
  7615                           tosu	equ	0xFFF
  7616                           tosh	equ	0xFFE
  7617                           tosl	equ	0xFFD
  7618                           pclath	equ	0xFFA
  7619                           tblptru	equ	0xFF8
  7620                           tblptrh	equ	0xFF7
  7621                           tblptrl	equ	0xFF6
  7622                           tablat	equ	0xFF5
  7623                           prodh	equ	0xFF4
  7624                           prodl	equ	0xFF3
  7625                           intcon	equ	0xFF2
  7626                           indf0	equ	0xFEF
  7627                           postinc0	equ	0xFEE
  7628                           fsr0h	equ	0xFEA
  7629                           fsr0l	equ	0xFE9
  7630                           wreg	equ	0xFE8
  7631                           postinc1	equ	0xFE6
  7632                           plusw1	equ	0xFE3
  7633                           fsr1h	equ	0xFE2
  7634                           fsr1l	equ	0xFE1
  7635                           bsr	equ	0xFE0
  7636                           indf2	equ	0xFDF
  7637                           postinc2	equ	0xFDE
  7638                           postdec2	equ	0xFDD
  7639                           plusw2	equ	0xFDB
  7640                           fsr2h	equ	0xFDA
  7641                           fsr2l	equ	0xFD9
  7642                           status	equ	0xFD8
  7643                           
  7644 ;; *************** function _lcd_write_ctrl *****************
  7645 ;; Defined at:
  7646 ;;		line 59 in file "../board_support_package/picdem2_net/lcd_hw.c"
  7647 ;; Parameters:    Size  Location     Type
  7648 ;;  c               1    wreg     unsigned char 
  7649 ;; Auto vars:     Size  Location     Type
  7650 ;;  c               1   22[COMRAM] unsigned char 
  7651 ;; Return value:  Size  Location     Type
  7652 ;;		None               void
  7653 ;; Registers used:
  7654 ;;		wreg
  7655 ;; Tracked objects:
  7656 ;;		On entry : 0/2
  7657 ;;		On exit  : 0/0
  7658 ;;		Unchanged: 0/0
  7659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7661 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7663 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7664 ;;Total ram usage:        1 bytes
  7665 ;; Hardware stack levels used:    1
  7666 ;; Hardware stack levels required when called:    8
  7667 ;; This function calls:
  7668 ;;		Nothing
  7669 ;; This function is called by:
  7670 ;;		_lcd_clear
  7671 ;;		_lcd_goto1
  7672 ;;		_lcd_goto2
  7673 ;;		_lcd_init
  7674 ;; This function uses a non-reentrant model
  7675 ;;
  7676                           
  7677                           	psect	text30
  7678  0062DC                     __ptext30:
  7679                           	opt stack 0
  7680  0062DC                     _lcd_write_ctrl:
  7681                           	opt stack 21
  7682                           
  7683                           ;incstack = 0
  7684                           ;lcd_write_ctrl@c stored from wreg
  7685  0062DC  6E17               	movwf	lcd_write_ctrl@c,c
  7686                           
  7687                           ;lcd_hw.c: 61: LATH1 = 0;
  7688  0062DE  9290               	bcf	3984,1,c	;volatile
  7689                           
  7690                           ;lcd_hw.c: 62: LATH2 = 0;
  7691  0062E0  9490               	bcf	3984,2,c	;volatile
  7692                           
  7693                           ;lcd_hw.c: 64: _delay((unsigned long)((50)*(41666667UL/4000000.0)));
  7694  0062E2  0EAD               	movlw	173
  7695  0062E4                     u16327:
  7696  0062E4  2EE8               	decfsz	wreg,f,c
  7697  0062E6  D7FE               	goto	u16327
  7698  0062E8  F000               	nop	
  7699                           
  7700                           ;lcd_hw.c: 65: LATE = c;
  7701  0062EA  C017  FF8D         	movff	lcd_write_ctrl@c,3981	;volatile
  7702                           
  7703                           ;lcd_hw.c: 66: LATH0 = 1;
  7704  0062EE  8090               	bsf	3984,0,c	;volatile
  7705                           
  7706                           ;lcd_hw.c: 67: _delay((unsigned long)((50)*(41666667UL/4000000.0)));
  7707  0062F0  0EAD               	movlw	173
  7708  0062F2                     u16337:
  7709  0062F2  2EE8               	decfsz	wreg,f,c
  7710  0062F4  D7FE               	goto	u16337
  7711  0062F6  F000               	nop	
  7712                           
  7713                           ;lcd_hw.c: 68: LATH0 = 0;
  7714  0062F8  9090               	bcf	3984,0,c	;volatile
  7715  0062FA  0012               	return		;funcret
  7716  0062FC                     __end_of_lcd_write_ctrl:
  7717                           	opt stack 0
  7718                           tosu	equ	0xFFF
  7719                           tosh	equ	0xFFE
  7720                           tosl	equ	0xFFD
  7721                           pclath	equ	0xFFA
  7722                           tblptru	equ	0xFF8
  7723                           tblptrh	equ	0xFF7
  7724                           tblptrl	equ	0xFF6
  7725                           tablat	equ	0xFF5
  7726                           prodh	equ	0xFF4
  7727                           prodl	equ	0xFF3
  7728                           intcon	equ	0xFF2
  7729                           indf0	equ	0xFEF
  7730                           postinc0	equ	0xFEE
  7731                           fsr0h	equ	0xFEA
  7732                           fsr0l	equ	0xFE9
  7733                           wreg	equ	0xFE8
  7734                           postinc1	equ	0xFE6
  7735                           plusw1	equ	0xFE3
  7736                           fsr1h	equ	0xFE2
  7737                           fsr1l	equ	0xFE1
  7738                           bsr	equ	0xFE0
  7739                           indf2	equ	0xFDF
  7740                           postinc2	equ	0xFDE
  7741                           postdec2	equ	0xFDD
  7742                           plusw2	equ	0xFDB
  7743                           fsr2h	equ	0xFDA
  7744                           fsr2l	equ	0xFD9
  7745                           status	equ	0xFD8
  7746                           
  7747 ;; *************** function _UDP_WriteBlock *****************
  7748 ;; Defined at:
  7749 ;;		line 198 in file "../../TCPIP Library/source/udpv4.c"
  7750 ;; Parameters:    Size  Location     Type
  7751 ;;  data            1    wreg     PTR void 
  7752 ;;		 -> DEMO_UDP_Recv@local_ip(4), 
  7753 ;;  length          2   28[COMRAM] unsigned int 
  7754 ;; Auto vars:     Size  Location     Type
  7755 ;;  data            1   30[COMRAM] PTR void 
  7756 ;;		 -> DEMO_UDP_Recv@local_ip(4), 
  7757 ;; Return value:  Size  Location     Type
  7758 ;;		None               void
  7759 ;; Registers used:
  7760 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7761 ;; Tracked objects:
  7762 ;;		On entry : F/0
  7763 ;;		On exit  : 0/0
  7764 ;;		Unchanged: 0/0
  7765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7766 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7767 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7769 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7770 ;;Total ram usage:        3 bytes
  7771 ;; Hardware stack levels used:    1
  7772 ;; Hardware stack levels required when called:   10
  7773 ;; This function calls:
  7774 ;;		_ETH_WriteBlock
  7775 ;; This function is called by:
  7776 ;;		_DEMO_UDP_Recv
  7777 ;; This function uses a non-reentrant model
  7778 ;;
  7779                           
  7780                           	psect	text31
  7781  000000                     __ptext31:
  7782                           	opt stack 0
  7783  000000                     _UDP_WriteBlock:
  7784                           	opt stack 0
  7785  000000                     __end_of_UDP_WriteBlock:
  7786                           	opt stack 0
  7787                           tosu	equ	0xFFF
  7788                           tosh	equ	0xFFE
  7789                           tosl	equ	0xFFD
  7790                           pclath	equ	0xFFA
  7791                           tblptru	equ	0xFF8
  7792                           tblptrh	equ	0xFF7
  7793                           tblptrl	equ	0xFF6
  7794                           tablat	equ	0xFF5
  7795                           prodh	equ	0xFF4
  7796                           prodl	equ	0xFF3
  7797                           intcon	equ	0xFF2
  7798                           indf0	equ	0xFEF
  7799                           postinc0	equ	0xFEE
  7800                           fsr0h	equ	0xFEA
  7801                           fsr0l	equ	0xFE9
  7802                           wreg	equ	0xFE8
  7803                           postinc1	equ	0xFE6
  7804                           plusw1	equ	0xFE3
  7805                           fsr1h	equ	0xFE2
  7806                           fsr1l	equ	0xFE1
  7807                           bsr	equ	0xFE0
  7808                           indf2	equ	0xFDF
  7809                           postinc2	equ	0xFDE
  7810                           postdec2	equ	0xFDD
  7811                           plusw2	equ	0xFDB
  7812                           fsr2h	equ	0xFDA
  7813                           fsr2l	equ	0xFD9
  7814                           status	equ	0xFD8
  7815                           
  7816 ;; *************** function _UDP_Write16 *****************
  7817 ;; Defined at:
  7818 ;;		line 187 in file "../../TCPIP Library/source/udpv4.c"
  7819 ;; Parameters:    Size  Location     Type
  7820 ;;  data            2   24[COMRAM] unsigned int 
  7821 ;; Auto vars:     Size  Location     Type
  7822 ;;		None
  7823 ;; Return value:  Size  Location     Type
  7824 ;;		None               void
  7825 ;; Registers used:
  7826 ;;		wreg, status,2, cstack
  7827 ;; Tracked objects:
  7828 ;;		On entry : F/0
  7829 ;;		On exit  : 0/0
  7830 ;;		Unchanged: 0/0
  7831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7832 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7835 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7836 ;;Total ram usage:        2 bytes
  7837 ;; Hardware stack levels used:    1
  7838 ;; Hardware stack levels required when called:   10
  7839 ;; This function calls:
  7840 ;;		_ETH_Write16
  7841 ;; This function is called by:
  7842 ;;		_DEMO_UDP_Recv
  7843 ;; This function uses a non-reentrant model
  7844 ;;
  7845                           
  7846                           	psect	text32
  7847  000000                     __ptext32:
  7848                           	opt stack 0
  7849  000000                     _UDP_Write16:
  7850                           	opt stack 0
  7851  000000                     __end_of_UDP_Write16:
  7852                           	opt stack 0
  7853                           tosu	equ	0xFFF
  7854                           tosh	equ	0xFFE
  7855                           tosl	equ	0xFFD
  7856                           pclath	equ	0xFFA
  7857                           tblptru	equ	0xFF8
  7858                           tblptrh	equ	0xFF7
  7859                           tblptrl	equ	0xFF6
  7860                           tablat	equ	0xFF5
  7861                           prodh	equ	0xFF4
  7862                           prodl	equ	0xFF3
  7863                           intcon	equ	0xFF2
  7864                           indf0	equ	0xFEF
  7865                           postinc0	equ	0xFEE
  7866                           fsr0h	equ	0xFEA
  7867                           fsr0l	equ	0xFE9
  7868                           wreg	equ	0xFE8
  7869                           postinc1	equ	0xFE6
  7870                           plusw1	equ	0xFE3
  7871                           fsr1h	equ	0xFE2
  7872                           fsr1l	equ	0xFE1
  7873                           bsr	equ	0xFE0
  7874                           indf2	equ	0xFDF
  7875                           postinc2	equ	0xFDE
  7876                           postdec2	equ	0xFDD
  7877                           plusw2	equ	0xFDB
  7878                           fsr2h	equ	0xFDA
  7879                           fsr2l	equ	0xFD9
  7880                           status	equ	0xFD8
  7881                           
  7882 ;; *************** function _UDP_Read8 *****************
  7883 ;; Defined at:
  7884 ;;		line 166 in file "../../TCPIP Library/source/udpv4.c"
  7885 ;; Parameters:    Size  Location     Type
  7886 ;;		None
  7887 ;; Auto vars:     Size  Location     Type
  7888 ;;		None
  7889 ;; Return value:  Size  Location     Type
  7890 ;;                  1    wreg      unsigned char 
  7891 ;; Registers used:
  7892 ;;		wreg, status,2, status,0, cstack
  7893 ;; Tracked objects:
  7894 ;;		On entry : F/0
  7895 ;;		On exit  : F/1
  7896 ;;		Unchanged: 0/0
  7897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7902 ;;Total ram usage:        0 bytes
  7903 ;; Hardware stack levels used:    1
  7904 ;; Hardware stack levels required when called:   10
  7905 ;; This function calls:
  7906 ;;		_ETH_Read8
  7907 ;; This function is called by:
  7908 ;;		_DEMO_UDP_Recv
  7909 ;; This function uses a non-reentrant model
  7910 ;;
  7911                           
  7912                           	psect	text33
  7913  000000                     __ptext33:
  7914                           	opt stack 0
  7915  000000                     _UDP_Read8:
  7916                           	opt stack 0
  7917  000000                     __end_of_UDP_Read8:
  7918                           	opt stack 0
  7919                           tosu	equ	0xFFF
  7920                           tosh	equ	0xFFE
  7921                           tosl	equ	0xFFD
  7922                           pclath	equ	0xFFA
  7923                           tblptru	equ	0xFF8
  7924                           tblptrh	equ	0xFF7
  7925                           tblptrl	equ	0xFF6
  7926                           tablat	equ	0xFF5
  7927                           prodh	equ	0xFF4
  7928                           prodl	equ	0xFF3
  7929                           intcon	equ	0xFF2
  7930                           indf0	equ	0xFEF
  7931                           postinc0	equ	0xFEE
  7932                           fsr0h	equ	0xFEA
  7933                           fsr0l	equ	0xFE9
  7934                           wreg	equ	0xFE8
  7935                           postinc1	equ	0xFE6
  7936                           plusw1	equ	0xFE3
  7937                           fsr1h	equ	0xFE2
  7938                           fsr1l	equ	0xFE1
  7939                           bsr	equ	0xFE0
  7940                           indf2	equ	0xFDF
  7941                           postinc2	equ	0xFDE
  7942                           postdec2	equ	0xFDD
  7943                           plusw2	equ	0xFDB
  7944                           fsr2h	equ	0xFDA
  7945                           fsr2l	equ	0xFD9
  7946                           status	equ	0xFD8
  7947                           
  7948 ;; *************** function _UDP_GetDestPort *****************
  7949 ;; Defined at:
  7950 ;;		line 209 in file "../../TCPIP Library/source/udpv4.c"
  7951 ;; Parameters:    Size  Location     Type
  7952 ;;		None
  7953 ;; Auto vars:     Size  Location     Type
  7954 ;;		None
  7955 ;; Return value:  Size  Location     Type
  7956 ;;                  2   22[COMRAM] unsigned int 
  7957 ;; Registers used:
  7958 ;;		None
  7959 ;; Tracked objects:
  7960 ;;		On entry : 0/1
  7961 ;;		On exit  : 0/0
  7962 ;;		Unchanged: 0/0
  7963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7964 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7967 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7968 ;;Total ram usage:        2 bytes
  7969 ;; Hardware stack levels used:    1
  7970 ;; Hardware stack levels required when called:    8
  7971 ;; This function calls:
  7972 ;;		Nothing
  7973 ;; This function is called by:
  7974 ;;		_DEMO_UDP_Recv
  7975 ;; This function uses a non-reentrant model
  7976 ;;
  7977                           
  7978                           	psect	text34
  7979  0064CC                     __ptext34:
  7980                           	opt stack 0
  7981  0064CC                     _UDP_GetDestPort:
  7982                           	opt stack 17
  7983                           
  7984                           ;udpv4.c: 211: return(destPort);
  7985                           
  7986                           ; BSR set to: 1
  7987                           ;incstack = 0
  7988  0064CC  C230  F017         	movff	_destPort,?_UDP_GetDestPort
  7989  0064D0  C231  F018         	movff	_destPort+1,?_UDP_GetDestPort+1
  7990  0064D4  0012               	return		;funcret
  7991  0064D6                     __end_of_UDP_GetDestPort:
  7992                           	opt stack 0
  7993                           tosu	equ	0xFFF
  7994                           tosh	equ	0xFFE
  7995                           tosl	equ	0xFFD
  7996                           pclath	equ	0xFFA
  7997                           tblptru	equ	0xFF8
  7998                           tblptrh	equ	0xFF7
  7999                           tblptrl	equ	0xFF6
  8000                           tablat	equ	0xFF5
  8001                           prodh	equ	0xFF4
  8002                           prodl	equ	0xFF3
  8003                           intcon	equ	0xFF2
  8004                           indf0	equ	0xFEF
  8005                           postinc0	equ	0xFEE
  8006                           fsr0h	equ	0xFEA
  8007                           fsr0l	equ	0xFE9
  8008                           wreg	equ	0xFE8
  8009                           postinc1	equ	0xFE6
  8010                           plusw1	equ	0xFE3
  8011                           fsr1h	equ	0xFE2
  8012                           fsr1l	equ	0xFE1
  8013                           bsr	equ	0xFE0
  8014                           indf2	equ	0xFDF
  8015                           postinc2	equ	0xFDE
  8016                           postdec2	equ	0xFDD
  8017                           plusw2	equ	0xFDB
  8018                           fsr2h	equ	0xFDA
  8019                           fsr2l	equ	0xFD9
  8020                           status	equ	0xFD8
  8021                           
  8022 ;; *************** function _UDP_GetDestIP *****************
  8023 ;; Defined at:
  8024 ;;		line 214 in file "../../TCPIP Library/source/udpv4.c"
  8025 ;; Parameters:    Size  Location     Type
  8026 ;;		None
  8027 ;; Auto vars:     Size  Location     Type
  8028 ;;		None
  8029 ;; Return value:  Size  Location     Type
  8030 ;;                  4   22[COMRAM] unsigned long 
  8031 ;; Registers used:
  8032 ;;		None
  8033 ;; Tracked objects:
  8034 ;;		On entry : 0/1
  8035 ;;		On exit  : 0/0
  8036 ;;		Unchanged: 0/0
  8037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8038 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8041 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8042 ;;Total ram usage:        4 bytes
  8043 ;; Hardware stack levels used:    1
  8044 ;; Hardware stack levels required when called:    8
  8045 ;; This function calls:
  8046 ;;		Nothing
  8047 ;; This function is called by:
  8048 ;;		_DEMO_UDP_Recv
  8049 ;; This function uses a non-reentrant model
  8050 ;;
  8051                           
  8052                           	psect	text35
  8053  00643E                     __ptext35:
  8054                           	opt stack 0
  8055  00643E                     _UDP_GetDestIP:
  8056                           	opt stack 17
  8057                           
  8058                           ;udpv4.c: 216: return (ipv4Header.srcIpAddress);
  8059                           
  8060                           ;incstack = 0
  8061  00643E  C2A8  F017         	movff	_ipv4Header+12,?_UDP_GetDestIP
  8062  006442  C2A9  F018         	movff	_ipv4Header+13,?_UDP_GetDestIP+1
  8063  006446  C2AA  F019         	movff	_ipv4Header+14,?_UDP_GetDestIP+2
  8064  00644A  C2AB  F01A         	movff	_ipv4Header+15,?_UDP_GetDestIP+3
  8065  00644E  0012               	return		;funcret
  8066  006450                     __end_of_UDP_GetDestIP:
  8067                           	opt stack 0
  8068                           tosu	equ	0xFFF
  8069                           tosh	equ	0xFFE
  8070                           tosl	equ	0xFFD
  8071                           pclath	equ	0xFFA
  8072                           tblptru	equ	0xFF8
  8073                           tblptrh	equ	0xFF7
  8074                           tblptrl	equ	0xFF6
  8075                           tablat	equ	0xFF5
  8076                           prodh	equ	0xFF4
  8077                           prodl	equ	0xFF3
  8078                           intcon	equ	0xFF2
  8079                           indf0	equ	0xFEF
  8080                           postinc0	equ	0xFEE
  8081                           fsr0h	equ	0xFEA
  8082                           fsr0l	equ	0xFE9
  8083                           wreg	equ	0xFE8
  8084                           postinc1	equ	0xFE6
  8085                           plusw1	equ	0xFE3
  8086                           fsr1h	equ	0xFE2
  8087                           fsr1l	equ	0xFE1
  8088                           bsr	equ	0xFE0
  8089                           indf2	equ	0xFDF
  8090                           postinc2	equ	0xFDE
  8091                           postdec2	equ	0xFDD
  8092                           plusw2	equ	0xFDB
  8093                           fsr2h	equ	0xFDA
  8094                           fsr2l	equ	0xFD9
  8095                           status	equ	0xFD8
  8096                           
  8097 ;; *************** function _DEMO_UDP_MeasureTemp *****************
  8098 ;; Defined at:
  8099 ;;		line 85 in file "udp_demo.c"
  8100 ;; Parameters:    Size  Location     Type
  8101 ;;		None
  8102 ;; Auto vars:     Size  Location     Type
  8103 ;;  adcResult       2   28[COMRAM] unsigned int 
  8104 ;; Return value:  Size  Location     Type
  8105 ;;                  2   26[COMRAM] unsigned int 
  8106 ;; Registers used:
  8107 ;;		wreg, status,2, status,0, cstack
  8108 ;; Tracked objects:
  8109 ;;		On entry : 0/0
  8110 ;;		On exit  : 0/0
  8111 ;;		Unchanged: 0/0
  8112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8113 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8114 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8116 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8117 ;;Total ram usage:        4 bytes
  8118 ;; Hardware stack levels used:    1
  8119 ;; Hardware stack levels required when called:    9
  8120 ;; This function calls:
  8121 ;;		_ADC_GetConversion
  8122 ;; This function is called by:
  8123 ;;		_DEMO_UDP_Recv
  8124 ;; This function uses a non-reentrant model
  8125 ;;
  8126                           
  8127                           	psect	text36
  8128  0063A2                     __ptext36:
  8129                           	opt stack 0
  8130  0063A2                     _DEMO_UDP_MeasureTemp:
  8131                           	opt stack 16
  8132                           
  8133                           ;udp_demo.c: 87: adc_result_t adcResult;
  8134                           ;udp_demo.c: 88: adcResult = ADC_GetConversion(channel_AN3);
  8135                           
  8136                           ;incstack = 0
  8137  0063A2  0E03               	movlw	3
  8138  0063A4  EC45  F030         	call	_ADC_GetConversion
  8139  0063A8  C017  F01D         	movff	?_ADC_GetConversion,DEMO_UDP_MeasureTemp@adcResult
  8140  0063AC  C018  F01E         	movff	?_ADC_GetConversion+1,DEMO_UDP_MeasureTemp@adcResult+1
  8141                           
  8142                           ;udp_demo.c: 90: return adcResult;
  8143  0063B0  C01D  F01B         	movff	DEMO_UDP_MeasureTemp@adcResult,?_DEMO_UDP_MeasureTemp
  8144  0063B4  C01E  F01C         	movff	DEMO_UDP_MeasureTemp@adcResult+1,?_DEMO_UDP_MeasureTemp+1
  8145  0063B8  0012               	return		;funcret
  8146  0063BA                     __end_of_DEMO_UDP_MeasureTemp:
  8147                           	opt stack 0
  8148                           tosu	equ	0xFFF
  8149                           tosh	equ	0xFFE
  8150                           tosl	equ	0xFFD
  8151                           pclath	equ	0xFFA
  8152                           tblptru	equ	0xFF8
  8153                           tblptrh	equ	0xFF7
  8154                           tblptrl	equ	0xFF6
  8155                           tablat	equ	0xFF5
  8156                           prodh	equ	0xFF4
  8157                           prodl	equ	0xFF3
  8158                           intcon	equ	0xFF2
  8159                           indf0	equ	0xFEF
  8160                           postinc0	equ	0xFEE
  8161                           fsr0h	equ	0xFEA
  8162                           fsr0l	equ	0xFE9
  8163                           wreg	equ	0xFE8
  8164                           postinc1	equ	0xFE6
  8165                           plusw1	equ	0xFE3
  8166                           fsr1h	equ	0xFE2
  8167                           fsr1l	equ	0xFE1
  8168                           bsr	equ	0xFE0
  8169                           indf2	equ	0xFDF
  8170                           postinc2	equ	0xFDE
  8171                           postdec2	equ	0xFDD
  8172                           plusw2	equ	0xFDB
  8173                           fsr2h	equ	0xFDA
  8174                           fsr2l	equ	0xFD9
  8175                           status	equ	0xFD8
  8176                           
  8177 ;; *************** function _UDP_ReadBlock *****************
  8178 ;; Defined at:
  8179 ;;		line 161 in file "../../TCPIP Library/source/udpv4.c"
  8180 ;; Parameters:    Size  Location     Type
  8181 ;;  data            2   31[COMRAM] PTR void 
  8182 ;;		 -> DEMO_UDP_Recv@str2(16), DEMO_UDP_Recv@str1(16), DEMO_UDP_Recv@str(32), data(2), 
  8183 ;;		 -> idle_packet(2), 
  8184 ;;  length          2   33[COMRAM] unsigned int 
  8185 ;; Auto vars:     Size  Location     Type
  8186 ;;		None
  8187 ;; Return value:  Size  Location     Type
  8188 ;;                  2   31[COMRAM] unsigned int 
  8189 ;; Registers used:
  8190 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8191 ;; Tracked objects:
  8192 ;;		On entry : E/1
  8193 ;;		On exit  : F/2
  8194 ;;		Unchanged: 0/0
  8195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8196 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8199 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8200 ;;Total ram usage:        4 bytes
  8201 ;; Hardware stack levels used:    1
  8202 ;; Hardware stack levels required when called:   10
  8203 ;; This function calls:
  8204 ;;		_ETH_ReadBlock
  8205 ;; This function is called by:
  8206 ;;		_DEMO_UDP_IdlePkt
  8207 ;;		_DEMO_UDP_Recv
  8208 ;; This function uses a non-reentrant model
  8209 ;;
  8210                           
  8211                           	psect	text37
  8212  006416                     __ptext37:
  8213                           	opt stack 0
  8214  006416                     _UDP_ReadBlock:
  8215                           	opt stack 15
  8216                           
  8217                           ;udpv4.c: 163: return (ETH_ReadBlock(data,length));
  8218                           ;	Return value of _UDP_ReadBlock is never used
  8219                           
  8220                           ;incstack = 0
  8221  006416  C020  F017         	movff	UDP_ReadBlock@data,ETH_ReadBlock@buffer
  8222  00641A  C021  F018         	movff	UDP_ReadBlock@data+1,ETH_ReadBlock@buffer+1
  8223  00641E  C022  F019         	movff	UDP_ReadBlock@length,ETH_ReadBlock@length
  8224  006422  C023  F01A         	movff	UDP_ReadBlock@length+1,ETH_ReadBlock@length+1
  8225  006426  EFC5  F02C         	goto	_ETH_ReadBlock	;wreg free
  8226  00642A                     __end_of_UDP_ReadBlock:
  8227                           	opt stack 0
  8228                           tosu	equ	0xFFF
  8229                           tosh	equ	0xFFE
  8230                           tosl	equ	0xFFD
  8231                           pclath	equ	0xFFA
  8232                           tblptru	equ	0xFF8
  8233                           tblptrh	equ	0xFF7
  8234                           tblptrl	equ	0xFF6
  8235                           tablat	equ	0xFF5
  8236                           prodh	equ	0xFF4
  8237                           prodl	equ	0xFF3
  8238                           intcon	equ	0xFF2
  8239                           indf0	equ	0xFEF
  8240                           postinc0	equ	0xFEE
  8241                           fsr0h	equ	0xFEA
  8242                           fsr0l	equ	0xFE9
  8243                           wreg	equ	0xFE8
  8244                           postinc1	equ	0xFE6
  8245                           plusw1	equ	0xFE3
  8246                           fsr1h	equ	0xFE2
  8247                           fsr1l	equ	0xFE1
  8248                           bsr	equ	0xFE0
  8249                           indf2	equ	0xFDF
  8250                           postinc2	equ	0xFDE
  8251                           postdec2	equ	0xFDD
  8252                           plusw2	equ	0xFDB
  8253                           fsr2h	equ	0xFDA
  8254                           fsr2l	equ	0xFD9
  8255                           status	equ	0xFD8
  8256                           
  8257 ;; *************** function _TCP_Recv *****************
  8258 ;; Defined at:
  8259 ;;		line 483 in file "../../TCPIP Library/source/tcpv4.c"
  8260 ;; Parameters:    Size  Location     Type
  8261 ;;  remoteAddres    4   17[BANK1 ] unsigned long 
  8262 ;;  length          2   21[BANK1 ] unsigned int 
  8263 ;; Auto vars:     Size  Location     Type
  8264 ;;  tcbPtr          2   52[BANK1 ] PTR struct .
  8265 ;;		 -> ?_sprintf(2), ?_printf(2), main@str(32), STR_6(13), 
  8266 ;;		 -> STR_5(17), Network_Read@debug_str(80), STR_1(15), NULL(0), 
  8267 ;;  count           1   51[BANK1 ] char 
  8268 ;; Return value:  Size  Location     Type
  8269 ;;		None               void
  8270 ;; Registers used:
  8271 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8272 ;; Tracked objects:
  8273 ;;		On entry : F/1
  8274 ;;		On exit  : C/0
  8275 ;;		Unchanged: 0/0
  8276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8277 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8278 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8279 ;;      Temps:          0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8280 ;;      Totals:         0       0      37       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8281 ;;Total ram usage:       37 bytes
  8282 ;; Hardware stack levels used:    1
  8283 ;; Hardware stack levels required when called:   15
  8284 ;; This function calls:
  8285 ;;		_ETH_ReadBlock
  8286 ;;		_TCP_FiniteStateMachine
  8287 ;;		_TCP_ParseTCPOptions
  8288 ;; This function is called by:
  8289 ;;		_IPV4_Packet
  8290 ;; This function uses a non-reentrant model
  8291 ;;
  8292                           
  8293                           	psect	text38
  8294  00309E                     __ptext38:
  8295                           	opt stack 0
  8296  00309E                     _TCP_Recv:
  8297                           	opt stack 12
  8298                           
  8299                           ; BSR set to: 1
  8300                           ;tcpv4.c: 485: tcpTCB_t *tcbPtr;
  8301                           ;tcpv4.c: 486: socklistsize_t count = 0;
  8302                           
  8303                           ; BSR set to: 2
  8304                           ;incstack = 0
  8305  00309E  6B33               	clrf	TCP_Recv@count& (0+255),b
  8306                           
  8307                           ;tcpv4.c: 490: receivedRemoteAddress = 0;
  8308  0030A0  6A3B               	clrf	_receivedRemoteAddress,c
  8309  0030A2  6A3C               	clrf	_receivedRemoteAddress+1,c
  8310  0030A4  6A3D               	clrf	_receivedRemoteAddress+2,c
  8311  0030A6  6A3E               	clrf	_receivedRemoteAddress+3,c
  8312                           
  8313                           ;tcpv4.c: 491: rcvPayloadLen = 0;
  8314  0030A8  6BCC               	clrf	_rcvPayloadLen& (0+255),b
  8315  0030AA  6BCD               	clrf	(_rcvPayloadLen+1)& (0+255),b
  8316                           
  8317                           ; BSR set to: 1
  8318                           ;tcpv4.c: 493: ETH_ReadBlock((char *)&tcpHeader,sizeof(tcpHeader_t));
  8319  0030AC  0ED1               	movlw	low _tcpHeader
  8320  0030AE  6E17               	movwf	ETH_ReadBlock@buffer,c
  8321  0030B0  0E01               	movlw	high _tcpHeader
  8322  0030B2  D9DB               	call	PL755	;call to abstracted procedure
  8323  0030B4  ECC5  F02C         	call	_ETH_ReadBlock	;wreg free
  8324                           
  8325                           ; BSR set to: 2
  8326                           ;tcpv4.c: 495: currentTCB = (0);
  8327  0030B8  6A3F               	clrf	_currentTCB,c
  8328  0030BA  6A40               	clrf	_currentTCB+1,c
  8329                           
  8330                           ; BSR set to: 2
  8331                           ;tcpv4.c: 498: if ((tcpHeader.destPort != 0) && (tcpHeader.sourcePort != 0))
  8332  0030BC  0101               	movlb	1	; () banked
  8333  0030BE  51D3               	movf	(_tcpHeader+2)& (0+255),w,b
  8334  0030C0  11D4               	iorwf	(_tcpHeader+3)& (0+255),w,b
  8335  0030C2  B4D8               	btfsc	status,2,c
  8336  0030C4  0012               	return	
  8337                           
  8338                           ; BSR set to: 1
  8339  0030C6  51D1               	movf	_tcpHeader& (0+255),w,b
  8340  0030C8  11D2               	iorwf	(_tcpHeader+1)& (0+255),w,b
  8341  0030CA  B4D8               	btfsc	status,2,c
  8342  0030CC  0012               	return	
  8343                           
  8344                           ; BSR set to: 1
  8345                           ;tcpv4.c: 499: {
  8346                           ;tcpv4.c: 500: tcpHeader.sourcePort = ((((uint16_t)tcpHeader.sourcePort & (uint16_t)0xFF
      +                          00) >> 8) | (((uint16_t)tcpHeader.sourcePort & (uint16_t)0x00FF) << 8));
  8347  0030CE  51D1               	movf	_tcpHeader& (0+255),w,b
  8348  0030D0  6F18               	movwf	(??_TCP_Recv+1)& (0+255),b
  8349  0030D2  6B17               	clrf	??_TCP_Recv& (0+255),b
  8350  0030D4  51D2               	movf	(_tcpHeader+1)& (0+255),w,b
  8351  0030D6  6F19               	movwf	(??_TCP_Recv+2)& (0+255),b
  8352  0030D8  6B1A               	clrf	(??_TCP_Recv+3)& (0+255),b
  8353  0030DA  5117               	movf	??_TCP_Recv& (0+255),w,b
  8354  0030DC  1119               	iorwf	(??_TCP_Recv+2)& (0+255),w,b
  8355  0030DE  6FD1               	movwf	_tcpHeader& (0+255),b
  8356  0030E0  5118               	movf	(??_TCP_Recv+1)& (0+255),w,b
  8357  0030E2  111A               	iorwf	(??_TCP_Recv+3)& (0+255),w,b
  8358  0030E4  6FD2               	movwf	(_tcpHeader+1)& (0+255),b
  8359                           
  8360                           ; BSR set to: 1
  8361                           ;tcpv4.c: 501: tcpHeader.destPort = ((((uint16_t)tcpHeader.destPort & (uint16_t)0xFF00) 
      +                          >> 8) | (((uint16_t)tcpHeader.destPort & (uint16_t)0x00FF) << 8));
  8362  0030E6  51D3               	movf	(_tcpHeader+2)& (0+255),w,b
  8363  0030E8  6F18               	movwf	(??_TCP_Recv+1)& (0+255),b
  8364  0030EA  6B17               	clrf	??_TCP_Recv& (0+255),b
  8365  0030EC  EE21  F0D3         	lfsr	2,_tcpHeader+2
  8366  0030F0  CFDE F119          	movff	postinc2,??_TCP_Recv+2
  8367  0030F4  CFDD F11A          	movff	postdec2,??_TCP_Recv+3
  8368  0030F8  C11A  F119         	movff	??_TCP_Recv+3,??_TCP_Recv+2
  8369  0030FC  6B1A               	clrf	(??_TCP_Recv+3)& (0+255),b
  8370  0030FE  6B1A               	clrf	(??_TCP_Recv+3)& (0+255),b
  8371  003100  5117               	movf	??_TCP_Recv& (0+255),w,b
  8372  003102  1119               	iorwf	(??_TCP_Recv+2)& (0+255),w,b
  8373  003104  6FD3               	movwf	(_tcpHeader+2)& (0+255),b
  8374  003106  5118               	movf	(??_TCP_Recv+1)& (0+255),w,b
  8375  003108  111A               	iorwf	(??_TCP_Recv+3)& (0+255),w,b
  8376  00310A  6FD4               	movwf	(_tcpHeader+3)& (0+255),b
  8377                           
  8378                           ; BSR set to: 1
  8379                           ;tcpv4.c: 504: tcbPtr = tcbList;
  8380  00310C  C1CE  F134         	movff	_tcbList,TCP_Recv@tcbPtr
  8381  003110  C1CF  F135         	movff	_tcbList+1,TCP_Recv@tcbPtr+1
  8382                           
  8383                           ;tcpv4.c: 505: while((tcbPtr != (0)) && (count < tcbListSize))
  8384  003114  D040               	goto	l9591
  8385  003116                     l9581:
  8386                           
  8387                           ; BSR set to: 1
  8388                           ;tcpv4.c: 506: {
  8389                           ;tcpv4.c: 507: if (tcpHeader.destPort == tcbPtr->localPort)
  8390  003116  C134  FFF6         	movff	TCP_Recv@tcbPtr,tblptrl
  8391  00311A  C135  FFF7         	movff	TCP_Recv@tcbPtr+1,tblptrh
  8392  00311E  0E00               	movlw	low (__smallconst shr (0+16))
  8393  003120  6EF8               	movwf	tblptru,c
  8394  003122  0E0F               	movlw	(high __ramtop+-1)
  8395  003124  64F7               	cpfsgt	tblptrh,c
  8396  003126  D007               	bra	u15107
  8397  003128  0009               	tblrd		*+
  8398  00312A  CFF5 F117          	movff	tablat,??_TCP_Recv
  8399  00312E  0009               	tblrd		*+
  8400  003130  CFF5 F118          	movff	tablat,??_TCP_Recv+1
  8401  003134  D006               	bra	u15100
  8402  003136                     u15107:
  8403  003136  EC6D  F011         	call	PL431	;call to abstracted procedure
  8404  00313A  CFEE F117          	movff	postinc0,??_TCP_Recv
  8405  00313E  CFEE F118          	movff	postinc0,??_TCP_Recv+1
  8406  003142                     u15100:
  8407  003142  0101               	movlb	1	; () banked
  8408  003144  5117               	movf	??_TCP_Recv& (0+255),w,b
  8409  003146  19D3               	xorwf	(_tcpHeader+2)& (0+255),w,b
  8410  003148  E108               	bnz	l9587
  8411  00314A  5118               	movf	(??_TCP_Recv+1)& (0+255),w,b
  8412  00314C  19D4               	xorwf	(_tcpHeader+3)& (0+255),w,b
  8413  00314E  E105               	bnz	l9587
  8414                           
  8415                           ; BSR set to: 1
  8416                           ;tcpv4.c: 508: {
  8417                           ;tcpv4.c: 509: currentTCB = tcbPtr;
  8418  003150  C134  F03F         	movff	TCP_Recv@tcbPtr,_currentTCB
  8419  003154  C135  F040         	movff	TCP_Recv@tcbPtr+1,_currentTCB+1
  8420                           
  8421                           ;tcpv4.c: 510: break;
  8422  003158  D028               	goto	l9595
  8423  00315A                     l9587:
  8424                           
  8425                           ; BSR set to: 1
  8426                           ;tcpv4.c: 512: else
  8427                           ;tcpv4.c: 513: {
  8428                           ;tcpv4.c: 514: tcbPtr = tcbPtr->nextTCB;
  8429  00315A  0E2C               	movlw	44
  8430  00315C  2534               	addwf	TCP_Recv@tcbPtr& (0+255),w,b
  8431  00315E  6F17               	movwf	??_TCP_Recv& (0+255),b
  8432  003160  0E00               	movlw	0
  8433  003162  2135               	addwfc	(TCP_Recv@tcbPtr+1)& (0+255),w,b
  8434  003164  6F18               	movwf	(??_TCP_Recv+1)& (0+255),b
  8435  003166  C117  FFF6         	movff	??_TCP_Recv,tblptrl
  8436  00316A  C118  FFF7         	movff	??_TCP_Recv+1,tblptrh
  8437  00316E  0E00               	movlw	low (__smallconst shr (0+16))
  8438  003170  6EF8               	movwf	tblptru,c
  8439  003172  0E0F               	movlw	(high __ramtop+-1)
  8440  003174  64F7               	cpfsgt	tblptrh,c
  8441  003176  D007               	bra	u15127
  8442  003178  0009               	tblrd		*+
  8443  00317A  CFF5 F134          	movff	tablat,TCP_Recv@tcbPtr
  8444  00317E  0009               	tblrd		*+
  8445  003180  CFF5 F135          	movff	tablat,TCP_Recv@tcbPtr+1
  8446  003184  D006               	bra	u15120
  8447  003186                     u15127:
  8448  003186  EC6D  F011         	call	PL431	;call to abstracted procedure
  8449  00318A  CFEE F134          	movff	postinc0,TCP_Recv@tcbPtr
  8450  00318E  CFEE F135          	movff	postinc0,TCP_Recv@tcbPtr+1
  8451  003192                     u15120:
  8452                           
  8453                           ;tcpv4.c: 515: count ++;
  8454  003192  0101               	movlb	1	; () banked
  8455  003194  2B33               	incf	TCP_Recv@count& (0+255),f,b
  8456  003196                     l9591:
  8457                           
  8458                           ; BSR set to: 1
  8459  003196  5134               	movf	TCP_Recv@tcbPtr& (0+255),w,b
  8460  003198  1135               	iorwf	(TCP_Recv@tcbPtr+1)& (0+255),w,b
  8461  00319A  E007               	bz	l9595
  8462                           
  8463                           ; BSR set to: 1
  8464  00319C  5133               	movf	TCP_Recv@count& (0+255),w,b
  8465  00319E  0A80               	xorlw	128
  8466  0031A0  6F17               	movwf	??_TCP_Recv& (0+255),b
  8467  0031A2  5047               	movf	_tcbListSize,w,c
  8468  0031A4  0A80               	xorlw	128
  8469  0031A6  5D17               	subwf	??_TCP_Recv& (0+255),w,b
  8470  0031A8  E3B6               	bnc	l9581
  8471  0031AA                     l9595:
  8472                           
  8473                           ; BSR set to: 1
  8474                           ;tcpv4.c: 516: }
  8475                           ;tcpv4.c: 517: }
  8476                           ;tcpv4.c: 519: if (currentTCB != (0))
  8477  0031AA  503F               	movf	_currentTCB,w,c
  8478  0031AC  1040               	iorwf	_currentTCB+1,w,c
  8479  0031AE  B4D8               	btfsc	status,2,c
  8480  0031B0  0012               	return	
  8481                           
  8482                           ; BSR set to: 1
  8483                           ;tcpv4.c: 520: {
  8484                           ;tcpv4.c: 521: if((tcpHeader.sourcePort == currentTCB->destPort) ||
  8485                           ;tcpv4.c: 522: (currentTCB->destIP == 0))
  8486  0031B2  0E06               	movlw	6
  8487  0031B4  D8E7               	call	PL453	;call to abstracted procedure
  8488  0031B6  64F7               	cpfsgt	tblptrh,c
  8489  0031B8  D002               	bra	u15167
  8490  0031BA  D94B               	call	PL693	;call to abstracted procedure
  8491  0031BC  D003               	bra	u15160
  8492  0031BE                     u15167:
  8493  0031BE  EC6D  F011         	call	PL431	;call to abstracted procedure
  8494  0031C2  D94E               	call	PL753	;call to abstracted procedure
  8495  0031C4                     u15160:
  8496  0031C4  0101               	movlb	1	; () banked
  8497  0031C6  51D1               	movf	_tcpHeader& (0+255),w,b
  8498  0031C8  1919               	xorwf	(??_TCP_Recv+2)& (0+255),w,b
  8499  0031CA  E103               	bnz	u15170
  8500  0031CC  51D2               	movf	(_tcpHeader+1)& (0+255),w,b
  8501  0031CE  191A               	xorwf	(??_TCP_Recv+3)& (0+255),w,b
  8502  0031D0  E01A               	bz	l1177
  8503  0031D2                     u15170:
  8504                           
  8505                           ; BSR set to: 1
  8506  0031D2  0E02               	movlw	2
  8507  0031D4  D8D7               	call	PL453	;call to abstracted procedure
  8508  0031D6  64F7               	cpfsgt	tblptrh,c
  8509  0031D8  D008               	bra	u15187
  8510  0031DA  D93B               	call	PL693	;call to abstracted procedure
  8511  0031DC  0009               	tblrd		*+
  8512  0031DE  CFF5 F11B          	movff	tablat,??_TCP_Recv+4
  8513  0031E2  0009               	tblrd		*+
  8514  0031E4  CFF5 F11C          	movff	tablat,??_TCP_Recv+5
  8515  0031E8  D007               	bra	u15180
  8516  0031EA                     u15187:
  8517  0031EA  EC6D  F011         	call	PL431	;call to abstracted procedure
  8518  0031EE  D938               	call	PL753	;call to abstracted procedure
  8519  0031F0  CFEE F11B          	movff	postinc0,??_TCP_Recv+4
  8520  0031F4  CFEE F11C          	movff	postinc0,??_TCP_Recv+5
  8521  0031F8                     u15180:
  8522  0031F8  0101               	movlb	1	; () banked
  8523  0031FA  5119               	movf	(??_TCP_Recv+2)& (0+255),w,b
  8524  0031FC  111A               	iorwf	(??_TCP_Recv+3)& (0+255),w,b
  8525  0031FE  111B               	iorwf	(??_TCP_Recv+4)& (0+255),w,b
  8526  003200  111C               	iorwf	(??_TCP_Recv+5)& (0+255),w,b
  8527  003202  A4D8               	btfss	status,2,c
  8528  003204  0012               	return	
  8529  003206                     l1177:
  8530                           
  8531                           ; BSR set to: 1
  8532                           ;tcpv4.c: 523: {
  8533                           ;tcpv4.c: 526: receivedRemoteAddress = remoteAddress;
  8534  003206  C111  F03B         	movff	TCP_Recv@remoteAddress,_receivedRemoteAddress
  8535  00320A  C112  F03C         	movff	TCP_Recv@remoteAddress+1,_receivedRemoteAddress+1
  8536  00320E  C113  F03D         	movff	TCP_Recv@remoteAddress+2,_receivedRemoteAddress+2
  8537  003212  C114  F03E         	movff	TCP_Recv@remoteAddress+3,_receivedRemoteAddress+3
  8538                           
  8539                           ; BSR set to: 1
  8540                           ;tcpv4.c: 527: rcvPayloadLen = length - (uint16_t)(tcpHeader.dataOffset << 2);
  8541  003216  39DD               	swapf	(_tcpHeader+12)& (0+255),w,b
  8542  003218  0B0F               	andlw	15
  8543  00321A  6F17               	movwf	??_TCP_Recv& (0+255),b
  8544  00321C  6B18               	clrf	(??_TCP_Recv+1)& (0+255),b
  8545  00321E  90D8               	bcf	status,0,c
  8546  003220  3717               	rlcf	??_TCP_Recv& (0+255),f,b
  8547  003222  3718               	rlcf	(??_TCP_Recv+1)& (0+255),f,b
  8548  003224  90D8               	bcf	status,0,c
  8549  003226  3717               	rlcf	??_TCP_Recv& (0+255),f,b
  8550  003228  3718               	rlcf	(??_TCP_Recv+1)& (0+255),f,b
  8551  00322A  5117               	movf	??_TCP_Recv& (0+255),w,b
  8552  00322C  5D15               	subwf	TCP_Recv@length& (0+255),w,b
  8553  00322E  6FCC               	movwf	_rcvPayloadLen& (0+255),b
  8554  003230  5118               	movf	(??_TCP_Recv+1)& (0+255),w,b
  8555  003232  5916               	subwfb	(TCP_Recv@length+1)& (0+255),w,b
  8556  003234  6FCD               	movwf	(_rcvPayloadLen+1)& (0+255),b
  8557                           
  8558                           ; BSR set to: 1
  8559                           ;tcpv4.c: 530: if (TCP_ParseTCPOptions() == 1)
  8560  003236  ECA2  F027         	call	_TCP_ParseTCPOptions	;wreg free
  8561  00323A  06E8               	decf	wreg,f,c
  8562  00323C  A4D8               	btfss	status,2,c
  8563  00323E  0012               	return	
  8564                           
  8565                           ;tcpv4.c: 531: {
  8566                           ;tcpv4.c: 534: if(tcpHeader.syn)
  8567  003240  0101               	movlb	1	; () banked
  8568  003242  A3DE               	btfss	(_tcpHeader+13)& (0+255),1,b
  8569  003244  D01C               	goto	l1179
  8570                           
  8571                           ; BSR set to: 1
  8572                           ;tcpv4.c: 535: {
  8573                           ;tcpv4.c: 536: if(tcpHeader.ack)
  8574  003246  A9DE               	btfss	(_tcpHeader+13)& (0+255),4,b
  8575  003248  D00D               	goto	l9611
  8576                           
  8577                           ; BSR set to: 1
  8578                           ;tcpv4.c: 537: {
  8579                           ;tcpv4.c: 538: ;
  8580                           ;tcpv4.c: 539: currentTCB->connectionEvent = RCV_SYNACK;
  8581  00324A  0E2B               	movlw	43
  8582  00324C  D89B               	call	PL453	;call to abstracted procedure
  8583  00324E  64F7               	cpfsgt	tblptrh,c
  8584  003250  D004               	bra	u15237
  8585  003252  0E05               	movlw	5
  8586  003254  6EF5               	movwf	tablat,c
  8587  003256  000C               	tblwt		*
  8588  003258  D004               	bra	u15230
  8589  00325A                     u15237:
  8590  00325A  EC6D  F011         	call	PL431	;call to abstracted procedure
  8591  00325E  0E05               	movlw	5
  8592  003260  D048               	goto	L9
  8593  003262                     u15230:
  8594                           
  8595                           ;tcpv4.c: 540: } else
  8596  003262  D057               	goto	l9627
  8597  003264                     l9611:
  8598                           
  8599                           ; BSR set to: 1
  8600                           ;tcpv4.c: 541: {
  8601                           ;tcpv4.c: 542: ;
  8602                           ;tcpv4.c: 543: currentTCB->connectionEvent = RCV_SYN;
  8603  003264  0E2B               	movlw	43
  8604  003266  D88E               	call	PL453	;call to abstracted procedure
  8605  003268  64F7               	cpfsgt	tblptrh,c
  8606  00326A  D004               	bra	u15247
  8607  00326C  0E03               	movlw	3
  8608  00326E  6EF5               	movwf	tablat,c
  8609  003270  000C               	tblwt		*
  8610  003272  D004               	bra	u15240
  8611  003274                     u15247:
  8612  003274  EC6D  F011         	call	PL431	;call to abstracted procedure
  8613  003278  0E03               	movlw	3
  8614  00327A  D03B               	goto	L9
  8615  00327C                     u15240:
  8616  00327C  D04A               	goto	l9627
  8617  00327E                     l1179:
  8618                           
  8619                           ; BSR set to: 1
  8620  00327E  A1DE               	btfss	(_tcpHeader+13)& (0+255),0,b
  8621  003280  D01C               	goto	l1183
  8622                           
  8623                           ; BSR set to: 1
  8624                           ;tcpv4.c: 546: {
  8625                           ;tcpv4.c: 547: if(tcpHeader.ack)
  8626  003282  A9DE               	btfss	(_tcpHeader+13)& (0+255),4,b
  8627  003284  D00D               	goto	l9617
  8628                           
  8629                           ; BSR set to: 1
  8630                           ;tcpv4.c: 548: {
  8631                           ;tcpv4.c: 549: ;
  8632                           ;tcpv4.c: 550: currentTCB->connectionEvent = RCV_FINACK;
  8633  003286  0E2B               	movlw	43
  8634  003288  D87D               	call	PL453	;call to abstracted procedure
  8635  00328A  64F7               	cpfsgt	tblptrh,c
  8636  00328C  D004               	bra	u15277
  8637  00328E  0E07               	movlw	7
  8638  003290  6EF5               	movwf	tablat,c
  8639  003292  000C               	tblwt		*
  8640  003294  D004               	bra	u15270
  8641  003296                     u15277:
  8642  003296  EC6D  F011         	call	PL431	;call to abstracted procedure
  8643  00329A  0E07               	movlw	7
  8644  00329C  D02A               	goto	L9
  8645  00329E                     u15270:
  8646                           
  8647                           ;tcpv4.c: 551: } else
  8648  00329E  D039               	goto	l9627
  8649  0032A0                     l9617:
  8650                           
  8651                           ; BSR set to: 1
  8652                           ;tcpv4.c: 552: {
  8653                           ;tcpv4.c: 553: ;
  8654                           ;tcpv4.c: 554: currentTCB->connectionEvent = RCV_FIN;
  8655  0032A0  0E2B               	movlw	43
  8656  0032A2  D870               	call	PL453	;call to abstracted procedure
  8657  0032A4  64F7               	cpfsgt	tblptrh,c
  8658  0032A6  D004               	bra	u15287
  8659  0032A8  0E06               	movlw	6
  8660  0032AA  6EF5               	movwf	tablat,c
  8661  0032AC  000C               	tblwt		*
  8662  0032AE  D004               	bra	u15280
  8663  0032B0                     u15287:
  8664  0032B0  EC6D  F011         	call	PL431	;call to abstracted procedure
  8665  0032B4  0E06               	movlw	6
  8666  0032B6  D01D               	goto	L9
  8667  0032B8                     u15280:
  8668  0032B8  D02C               	goto	l9627
  8669  0032BA                     l1183:
  8670                           
  8671                           ; BSR set to: 1
  8672  0032BA  A5DE               	btfss	(_tcpHeader+13)& (0+255),2,b
  8673  0032BC  D01C               	goto	l1187
  8674                           
  8675                           ; BSR set to: 1
  8676                           ;tcpv4.c: 557: {
  8677                           ;tcpv4.c: 558: if(tcpHeader.ack)
  8678  0032BE  A9DE               	btfss	(_tcpHeader+13)& (0+255),4,b
  8679  0032C0  D00D               	goto	l9623
  8680                           
  8681                           ; BSR set to: 1
  8682                           ;tcpv4.c: 559: {
  8683                           ;tcpv4.c: 560: ;
  8684                           ;tcpv4.c: 561: currentTCB->connectionEvent = RCV_RSTACK;
  8685  0032C2  0E2B               	movlw	43
  8686  0032C4  D85F               	call	PL453	;call to abstracted procedure
  8687  0032C6  64F7               	cpfsgt	tblptrh,c
  8688  0032C8  D004               	bra	u15317
  8689  0032CA  0E0A               	movlw	10
  8690  0032CC  6EF5               	movwf	tablat,c
  8691  0032CE  000C               	tblwt		*
  8692  0032D0  D004               	bra	u15310
  8693  0032D2                     u15317:
  8694  0032D2  EC6D  F011         	call	PL431	;call to abstracted procedure
  8695  0032D6  0E0A               	movlw	10
  8696  0032D8  D00C               	goto	L9
  8697  0032DA                     u15310:
  8698                           
  8699                           ;tcpv4.c: 562: } else
  8700  0032DA  D01B               	goto	l9627
  8701  0032DC                     l9623:
  8702                           
  8703                           ; BSR set to: 1
  8704                           ;tcpv4.c: 563: {
  8705                           ;tcpv4.c: 564: ;
  8706                           ;tcpv4.c: 565: currentTCB->connectionEvent = RCV_RST;
  8707  0032DC  0E2B               	movlw	43
  8708  0032DE  D852               	call	PL453	;call to abstracted procedure
  8709  0032E0  64F7               	cpfsgt	tblptrh,c
  8710  0032E2  D004               	bra	u15327
  8711  0032E4  0E09               	movlw	9
  8712  0032E6  6EF5               	movwf	tablat,c
  8713  0032E8  000C               	tblwt		*
  8714  0032EA  D004               	bra	u15320
  8715  0032EC                     u15327:
  8716  0032EC  EC6D  F011         	call	PL431	;call to abstracted procedure
  8717  0032F0  0E09               	movlw	9
  8718  0032F2                     L9:
  8719  0032F2  6EEF               	movwf	indf0,c
  8720  0032F4                     u15320:
  8721  0032F4  D00E               	goto	l9627
  8722  0032F6                     l1187:
  8723                           
  8724                           ; BSR set to: 1
  8725  0032F6  A9DE               	btfss	(_tcpHeader+13)& (0+255),4,b
  8726  0032F8  D00C               	goto	l9627
  8727                           
  8728                           ; BSR set to: 1
  8729                           ;tcpv4.c: 568: {
  8730                           ;tcpv4.c: 569: ;
  8731                           ;tcpv4.c: 570: currentTCB->connectionEvent = RCV_ACK;
  8732  0032FA  0E2B               	movlw	43
  8733  0032FC  D843               	call	PL453	;call to abstracted procedure
  8734  0032FE  64F7               	cpfsgt	tblptrh,c
  8735  003300  D004               	bra	u15347
  8736  003302  0E04               	movlw	4
  8737  003304  6EF5               	movwf	tablat,c
  8738  003306  000C               	tblwt		*
  8739  003308  D004               	bra	u15340
  8740  00330A                     u15347:
  8741  00330A  EC6D  F011         	call	PL431	;call to abstracted procedure
  8742  00330E  0E04               	movlw	4
  8743  003310  6EEF               	movwf	indf0,c
  8744  003312                     u15340:
  8745  003312                     l9627:
  8746                           
  8747                           ;tcpv4.c: 575: }
  8748                           ;tcpv4.c: 577: tcpHeader.ackNumber = ((((uint32_t)tcpHeader.ackNumber&(uint32_t)0xff0000
      +                          00) >> 24) | (((uint32_t)tcpHeader.ackNumber&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)t
      +                          cpHeader.ackNumber&(uint32_t)0x0000ff00) << 8) | (((uint32_t)tcpHeader.ackNumber&(uint32
      +                          _
  8749  003312  0101               	movlb	1	; () banked
  8750  003314  51D9               	movf	(_tcpHeader+8)& (0+255),w,b
  8751  003316  D893               	call	PL635	;call to abstracted procedure
  8752  003318  EE21  F0D9         	lfsr	2,_tcpHeader+8
  8753  00331C  D86F               	call	PL539	;call to abstracted procedure
  8754  00331E  C1D9  F11F         	movff	_tcpHeader+8,??_TCP_Recv+8
  8755  003322  C1DA  F120         	movff	_tcpHeader+9,??_TCP_Recv+9
  8756  003326  C1DB  F121         	movff	_tcpHeader+10,??_TCP_Recv+10
  8757  00332A  C1DC  F122         	movff	_tcpHeader+11,??_TCP_Recv+11
  8758  00332E  D87A               	call	PL579	;call to abstracted procedure
  8759  003330  EE21  F0D9         	lfsr	2,_tcpHeader+8
  8760  003334  D834               	call	PL479	;call to abstracted procedure
  8761  003336  6FD9               	movwf	(_tcpHeader+8)& (0+255),b
  8762  003338  5118               	movf	(??_TCP_Recv+1)& (0+255),w,b
  8763  00333A  1130               	iorwf	(??_TCP_Recv+25)& (0+255),w,b
  8764  00333C  6FDA               	movwf	(_tcpHeader+9)& (0+255),b
  8765  00333E  5119               	movf	(??_TCP_Recv+2)& (0+255),w,b
  8766  003340  1131               	iorwf	(??_TCP_Recv+26)& (0+255),w,b
  8767  003342  6FDB               	movwf	(_tcpHeader+10)& (0+255),b
  8768  003344  511A               	movf	(??_TCP_Recv+3)& (0+255),w,b
  8769  003346  1132               	iorwf	(??_TCP_Recv+27)& (0+255),w,b
  8770  003348  6FDC               	movwf	(_tcpHeader+11)& (0+255),b
  8771                           
  8772                           ;tcpv4.c: 578: tcpHeader.sequenceNumber = ((((uint32_t)tcpHeader.sequenceNumber&(uint32_
      +                          t)0xff000000) >> 24) | (((uint32_t)tcpHeader.sequenceNumber&(uint32_t)0x00ff0000) >> 8) 
      +                          | (((uint32_t)tcpHeader.sequenceNumber&(uint32_t)0x0000ff00) << 8) | (((uint32_t)tcpHead
      +                          e
  8773  00334A  51D5               	movf	(_tcpHeader+4)& (0+255),w,b
  8774  00334C  D878               	call	PL635	;call to abstracted procedure
  8775  00334E  EE21  F0D5         	lfsr	2,_tcpHeader+4
  8776  003352  D854               	call	PL539	;call to abstracted procedure
  8777  003354  C1D5  F11F         	movff	_tcpHeader+4,??_TCP_Recv+8
  8778  003358  C1D6  F120         	movff	_tcpHeader+5,??_TCP_Recv+9
  8779  00335C  C1D7  F121         	movff	_tcpHeader+6,??_TCP_Recv+10
  8780  003360  C1D8  F122         	movff	_tcpHeader+7,??_TCP_Recv+11
  8781  003364  D85F               	call	PL579	;call to abstracted procedure
  8782  003366  EE21  F0D5         	lfsr	2,_tcpHeader+4
  8783  00336A  D819               	call	PL479	;call to abstracted procedure
  8784  00336C  6FD5               	movwf	(_tcpHeader+4)& (0+255),b
  8785  00336E  5118               	movf	(??_TCP_Recv+1)& (0+255),w,b
  8786  003370  1130               	iorwf	(??_TCP_Recv+25)& (0+255),w,b
  8787  003372  6FD6               	movwf	(_tcpHeader+5)& (0+255),b
  8788  003374  5119               	movf	(??_TCP_Recv+2)& (0+255),w,b
  8789  003376  1131               	iorwf	(??_TCP_Recv+26)& (0+255),w,b
  8790  003378  6FD7               	movwf	(_tcpHeader+6)& (0+255),b
  8791  00337A  511A               	movf	(??_TCP_Recv+3)& (0+255),w,b
  8792  00337C  1132               	iorwf	(??_TCP_Recv+27)& (0+255),w,b
  8793  00337E  6FD8               	movwf	(_tcpHeader+7)& (0+255),b
  8794                           
  8795                           ; BSR set to: 1
  8796                           ;tcpv4.c: 580: TCP_FiniteStateMachine();
  8797  003380  EF62  F008         	goto	_TCP_FiniteStateMachine	;wreg free
  8798  003384                     __end_of_TCP_Recv:
  8799                           	opt stack 0
  8800  003384                     PL453:
  8801                           	opt stack 12
  8802  003384  243F               	addwf	_currentTCB,w,c
  8803  003386  6F17               	movwf	??_TCP_Recv& (0+255),b
  8804  003388  0E00               	movlw	0
  8805  00338A  2040               	addwfc	_currentTCB+1,w,c
  8806  00338C  6F18               	movwf	(??_TCP_Recv+1)& (0+255),b
  8807  00338E  C117  FFF6         	movff	??_TCP_Recv,tblptrl
  8808  003392  C118  FFF7         	movff	??_TCP_Recv+1,tblptrh
  8809  003396  0E00               	movlw	low (__smallconst shr (0+16))
  8810  003398  6EF8               	movwf	tblptru,c
  8811  00339A  0E0F               	movlw	(high __ramtop+-1)
  8812  00339C  0012               	return	
  8813  00339E                     __end_ofPL453:
  8814                           	opt stack 0
  8815  00339E                     PL479:
  8816                           	opt stack 12
  8817  00339E  14DE               	andwf	postinc2,w,c
  8818  0033A0  6F27               	movwf	(??_TCP_Recv+16)& (0+255),b
  8819  0033A2  0E00               	movlw	0
  8820  0033A4  14DE               	andwf	postinc2,w,c
  8821  0033A6  6F28               	movwf	(??_TCP_Recv+17)& (0+255),b
  8822  0033A8  0E00               	movlw	0
  8823  0033AA  14DE               	andwf	postinc2,w,c
  8824  0033AC  6F29               	movwf	(??_TCP_Recv+18)& (0+255),b
  8825  0033AE  0EFF               	movlw	255
  8826  0033B0  14DE               	andwf	postinc2,w,c
  8827  0033B2  6F2A               	movwf	(??_TCP_Recv+19)& (0+255),b
  8828  0033B4  0E19               	movlw	25
  8829  0033B6  D005               	goto	u15350
  8830  0033B8                     u15355:
  8831  0033B8  90D8               	bcf	status,0,c
  8832  0033BA  332A               	rrcf	(??_TCP_Recv+19)& (0+255),f,b
  8833  0033BC  3329               	rrcf	(??_TCP_Recv+18)& (0+255),f,b
  8834  0033BE  3328               	rrcf	(??_TCP_Recv+17)& (0+255),f,b
  8835  0033C0  3327               	rrcf	(??_TCP_Recv+16)& (0+255),f,b
  8836  0033C2                     u15350:
  8837  0033C2  2EE8               	decfsz	wreg,f,c
  8838  0033C4  D7F9               	goto	u15355
  8839  0033C6  5123               	movf	(??_TCP_Recv+12)& (0+255),w,b
  8840  0033C8  1127               	iorwf	(??_TCP_Recv+16)& (0+255),w,b
  8841  0033CA  6F2B               	movwf	(??_TCP_Recv+20)& (0+255),b
  8842  0033CC  5124               	movf	(??_TCP_Recv+13)& (0+255),w,b
  8843  0033CE  1128               	iorwf	(??_TCP_Recv+17)& (0+255),w,b
  8844  0033D0  6F2C               	movwf	(??_TCP_Recv+21)& (0+255),b
  8845  0033D2  5125               	movf	(??_TCP_Recv+14)& (0+255),w,b
  8846  0033D4  1129               	iorwf	(??_TCP_Recv+18)& (0+255),w,b
  8847  0033D6  6F2D               	movwf	(??_TCP_Recv+22)& (0+255),b
  8848  0033D8  5126               	movf	(??_TCP_Recv+15)& (0+255),w,b
  8849  0033DA  112A               	iorwf	(??_TCP_Recv+19)& (0+255),w,b
  8850  0033DC  6F2E               	movwf	(??_TCP_Recv+23)& (0+255),b
  8851  0033DE  511B               	movf	(??_TCP_Recv+4)& (0+255),w,b
  8852  0033E0  112B               	iorwf	(??_TCP_Recv+20)& (0+255),w,b
  8853  0033E2  6F2F               	movwf	(??_TCP_Recv+24)& (0+255),b
  8854  0033E4  511C               	movf	(??_TCP_Recv+5)& (0+255),w,b
  8855  0033E6  112C               	iorwf	(??_TCP_Recv+21)& (0+255),w,b
  8856  0033E8  6F30               	movwf	(??_TCP_Recv+25)& (0+255),b
  8857  0033EA  511D               	movf	(??_TCP_Recv+6)& (0+255),w,b
  8858  0033EC  112D               	iorwf	(??_TCP_Recv+22)& (0+255),w,b
  8859  0033EE  6F31               	movwf	(??_TCP_Recv+26)& (0+255),b
  8860  0033F0  511E               	movf	(??_TCP_Recv+7)& (0+255),w,b
  8861  0033F2  112E               	iorwf	(??_TCP_Recv+23)& (0+255),w,b
  8862  0033F4  6F32               	movwf	(??_TCP_Recv+27)& (0+255),b
  8863  0033F6  5117               	movf	??_TCP_Recv& (0+255),w,b
  8864  0033F8  112F               	iorwf	(??_TCP_Recv+24)& (0+255),w,b
  8865  0033FA  0012               	return	
  8866  0033FC                     __end_ofPL479:
  8867                           	opt stack 0
  8868  0033FC                     PL539:
  8869                           	opt stack 12
  8870  0033FC  0E00               	movlw	0
  8871  0033FE  14DE               	andwf	postinc2,w,c
  8872  003400  6F1B               	movwf	(??_TCP_Recv+4)& (0+255),b
  8873  003402  0EFF               	movlw	255
  8874  003404  14DE               	andwf	postinc2,w,c
  8875  003406  6F1C               	movwf	(??_TCP_Recv+5)& (0+255),b
  8876  003408  0E00               	movlw	0
  8877  00340A  14DE               	andwf	postinc2,w,c
  8878  00340C  6F1D               	movwf	(??_TCP_Recv+6)& (0+255),b
  8879  00340E  0E00               	movlw	0
  8880  003410  14DE               	andwf	postinc2,w,c
  8881  003412  6F1E               	movwf	(??_TCP_Recv+7)& (0+255),b
  8882  003414  C11D  F11E         	movff	??_TCP_Recv+6,??_TCP_Recv+7
  8883  003418  C11C  F11D         	movff	??_TCP_Recv+5,??_TCP_Recv+6
  8884  00341C  C11B  F11C         	movff	??_TCP_Recv+4,??_TCP_Recv+5
  8885  003420  6B1B               	clrf	(??_TCP_Recv+4)& (0+255),b
  8886  003422  0012               	return	
  8887  003424                     __end_ofPL539:
  8888                           	opt stack 0
  8889  003424                     PL579:
  8890                           	opt stack 12
  8891  003424  C120  F11F         	movff	??_TCP_Recv+9,??_TCP_Recv+8
  8892  003428  C121  F120         	movff	??_TCP_Recv+10,??_TCP_Recv+9
  8893  00342C  C122  F121         	movff	??_TCP_Recv+11,??_TCP_Recv+10
  8894  003430  6B22               	clrf	(??_TCP_Recv+11)& (0+255),b
  8895  003432  6B23               	clrf	(??_TCP_Recv+12)& (0+255),b
  8896  003434  5120               	movf	(??_TCP_Recv+9)& (0+255),w,b
  8897  003436  6F24               	movwf	(??_TCP_Recv+13)& (0+255),b
  8898  003438  6B25               	clrf	(??_TCP_Recv+14)& (0+255),b
  8899  00343A  6B26               	clrf	(??_TCP_Recv+15)& (0+255),b
  8900  00343C  0C00               	retlw	0
  8901  00343E                     __end_ofPL579:
  8902                           	opt stack 0
  8903  00343E                     PL635:
  8904                           	opt stack 12
  8905  00343E  6F17               	movwf	??_TCP_Recv& (0+255),b
  8906  003440  6B18               	clrf	(??_TCP_Recv+1)& (0+255),b
  8907  003442  6B19               	clrf	(??_TCP_Recv+2)& (0+255),b
  8908  003444  6B1A               	clrf	(??_TCP_Recv+3)& (0+255),b
  8909  003446  C117  F11A         	movff	??_TCP_Recv,??_TCP_Recv+3
  8910  00344A  6B19               	clrf	(??_TCP_Recv+2)& (0+255),b
  8911  00344C  6B18               	clrf	(??_TCP_Recv+1)& (0+255),b
  8912  00344E  6B17               	clrf	??_TCP_Recv& (0+255),b
  8913  003450  0012               	return	
  8914  003452                     __end_ofPL635:
  8915                           	opt stack 0
  8916  003452                     PL693:
  8917                           	opt stack 12
  8918  003452  0009               	tblrd		*+
  8919  003454  CFF5 F119          	movff	tablat,??_TCP_Recv+2
  8920  003458  0009               	tblrd		*+
  8921  00345A  CFF5 F11A          	movff	tablat,??_TCP_Recv+3
  8922  00345E  0012               	return	
  8923  003460                     __end_ofPL693:
  8924                           	opt stack 0
  8925  003460                     PL753:
  8926                           	opt stack 12
  8927  003460  CFEE F119          	movff	postinc0,??_TCP_Recv+2
  8928  003464  CFEE F11A          	movff	postinc0,??_TCP_Recv+3
  8929  003468  0012               	return	
  8930  00346A                     __end_ofPL753:
  8931                           	opt stack 0
  8932  00346A                     PL755:
  8933                           	opt stack 12
  8934  00346A  6E18               	movwf	ETH_ReadBlock@buffer+1,c
  8935  00346C  6A1A               	clrf	ETH_ReadBlock@length+1,c
  8936  00346E  0E14               	movlw	20
  8937  003470  6E19               	movwf	ETH_ReadBlock@length,c
  8938  003472  0C14               	retlw	20
  8939  003474                     __end_ofPL755:
  8940                           	opt stack 0
  8941                           tosu	equ	0xFFF
  8942                           tosh	equ	0xFFE
  8943                           tosl	equ	0xFFD
  8944                           pclath	equ	0xFFA
  8945                           tblptru	equ	0xFF8
  8946                           tblptrh	equ	0xFF7
  8947                           tblptrl	equ	0xFF6
  8948                           tablat	equ	0xFF5
  8949                           prodh	equ	0xFF4
  8950                           prodl	equ	0xFF3
  8951                           intcon	equ	0xFF2
  8952                           indf0	equ	0xFEF
  8953                           postinc0	equ	0xFEE
  8954                           fsr0h	equ	0xFEA
  8955                           fsr0l	equ	0xFE9
  8956                           wreg	equ	0xFE8
  8957                           postinc1	equ	0xFE6
  8958                           plusw1	equ	0xFE3
  8959                           fsr1h	equ	0xFE2
  8960                           fsr1l	equ	0xFE1
  8961                           bsr	equ	0xFE0
  8962                           indf2	equ	0xFDF
  8963                           postinc2	equ	0xFDE
  8964                           postdec2	equ	0xFDD
  8965                           plusw2	equ	0xFDB
  8966                           fsr2h	equ	0xFDA
  8967                           fsr2l	equ	0xFD9
  8968                           status	equ	0xFD8
  8969                           
  8970 ;; *************** function _TCP_ParseTCPOptions *****************
  8971 ;; Defined at:
  8972 ;;		line 356 in file "../../TCPIP Library/source/tcpv4.c"
  8973 ;; Parameters:    Size  Location     Type
  8974 ;;		None
  8975 ;; Auto vars:     Size  Location     Type
  8976 ;;  tcpOptionsSi    2   30[COMRAM] unsigned int 
  8977 ;;  opt             1   29[COMRAM] unsigned char 
  8978 ;;  ret             1   28[COMRAM] unsigned char 
  8979 ;; Return value:  Size  Location     Type
  8980 ;;                  1    wreg      unsigned char 
  8981 ;; Registers used:
  8982 ;;		wreg, status,2, status,0, cstack
  8983 ;; Tracked objects:
  8984 ;;		On entry : F/1
  8985 ;;		On exit  : C/0
  8986 ;;		Unchanged: 0/0
  8987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8989 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8990 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8991 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8992 ;;Total ram usage:        6 bytes
  8993 ;; Hardware stack levels used:    1
  8994 ;; Hardware stack levels required when called:   10
  8995 ;; This function calls:
  8996 ;;		_ETH_Dump
  8997 ;;		_ETH_Read16
  8998 ;;		_ETH_Read8
  8999 ;; This function is called by:
  9000 ;;		_TCP_Recv
  9001 ;; This function uses a non-reentrant model
  9002 ;;
  9003                           
  9004                           	psect	text39
  9005  004F44                     __ptext39:
  9006                           	opt stack 0
  9007  004F44                     _TCP_ParseTCPOptions:
  9008                           	opt stack 16
  9009                           
  9010                           ; BSR set to: 1
  9011                           ;tcpv4.c: 358: uint8_t opt;
  9012                           ;tcpv4.c: 359: uint16_t tcpOptionsSize;
  9013                           ;tcpv4.c: 360: bool ret;
  9014                           ;tcpv4.c: 362: ret = 0;
  9015                           
  9016                           ;incstack = 0
  9017  004F44  6A1D               	clrf	TCP_ParseTCPOptions@ret,c
  9018                           
  9019                           ; BSR set to: 1
  9020                           ;tcpv4.c: 364: tcpOptionsSize = (uint16_t)((tcpHeader.dataOffset << 2) - sizeof(tcpHeade
      +                          r_t));
  9021  004F46  39DD               	swapf	(_tcpHeader+12)& (0+255),w,b
  9022  004F48  0B0F               	andlw	15
  9023  004F4A  6E1B               	movwf	??_TCP_ParseTCPOptions& (0+255),c
  9024  004F4C  6A1C               	clrf	(??_TCP_ParseTCPOptions+1)& (0+255),c
  9025  004F4E  90D8               	bcf	status,0,c
  9026  004F50  361B               	rlcf	??_TCP_ParseTCPOptions,f,c
  9027  004F52  361C               	rlcf	??_TCP_ParseTCPOptions+1,f,c
  9028  004F54  90D8               	bcf	status,0,c
  9029  004F56  361B               	rlcf	??_TCP_ParseTCPOptions,f,c
  9030  004F58  361C               	rlcf	??_TCP_ParseTCPOptions+1,f,c
  9031  004F5A  0EEC               	movlw	236
  9032  004F5C  241B               	addwf	??_TCP_ParseTCPOptions,w,c
  9033  004F5E  6E1F               	movwf	TCP_ParseTCPOptions@tcpOptionsSize,c
  9034  004F60  0EFF               	movlw	255
  9035  004F62  201C               	addwfc	??_TCP_ParseTCPOptions+1,w,c
  9036  004F64  6E20               	movwf	TCP_ParseTCPOptions@tcpOptionsSize+1,c
  9037                           
  9038                           ;tcpv4.c: 366: if (tcpOptionsSize > 0)
  9039  004F66  101F               	iorwf	TCP_ParseTCPOptions@tcpOptionsSize,w,c
  9040  004F68  E06B               	bz	l8913
  9041                           
  9042                           ; BSR set to: 1
  9043                           ;tcpv4.c: 367: {
  9044                           ;tcpv4.c: 370: tcpMss = 536;
  9045  004F6A  0E02               	movlw	2
  9046  004F6C  6E44               	movwf	_tcpMss+1,c
  9047  004F6E  0E18               	movlw	24
  9048  004F70  6E43               	movwf	_tcpMss,c
  9049                           
  9050                           ; BSR set to: 1
  9051                           ;tcpv4.c: 372: if(tcpHeader.syn)
  9052  004F72  A3DE               	btfss	(_tcpHeader+13)& (0+255),1,b
  9053  004F74  D062               	goto	l8911
  9054  004F76  D059               	goto	l8909
  9055  004F78                     l8867:
  9056                           
  9057                           ;tcpv4.c: 376: {
  9058                           ;tcpv4.c: 377: opt = ETH_Read8();
  9059  004F78  EC17  F030         	call	_ETH_Read8	;wreg free
  9060  004F7C  6E1E               	movwf	TCP_ParseTCPOptions@opt,c
  9061                           
  9062                           ;tcpv4.c: 378: switch (opt)
  9063  004F7E  D04E               	goto	l8907
  9064  004F80                     l8869:
  9065                           
  9066                           ; BSR set to: 1
  9067                           ;tcpv4.c: 382: if (tcpOptionsSize)
  9068  004F80  501F               	movf	TCP_ParseTCPOptions@tcpOptionsSize,w,c
  9069  004F82  1020               	iorwf	TCP_ParseTCPOptions@tcpOptionsSize+1,w,c
  9070  004F84  E005               	bz	l8875
  9071                           
  9072                           ; BSR set to: 1
  9073                           ;tcpv4.c: 383: {
  9074                           ;tcpv4.c: 385: ETH_Dump(tcpOptionsSize);
  9075  004F86  D860               	call	PL747	;call to abstracted procedure
  9076  004F88  EC2E  F030         	call	_ETH_Dump	;wreg free
  9077                           
  9078                           ; BSR set to: 2
  9079                           ;tcpv4.c: 386: tcpOptionsSize = 0;
  9080  004F8C  6A1F               	clrf	TCP_ParseTCPOptions@tcpOptionsSize,c
  9081  004F8E  6A20               	clrf	TCP_ParseTCPOptions@tcpOptionsSize+1,c
  9082  004F90                     l8875:
  9083                           
  9084                           ;tcpv4.c: 387: }
  9085                           ;tcpv4.c: 388: ret = 1;
  9086  004F90  0E01               	movlw	1
  9087  004F92  6E1D               	movwf	TCP_ParseTCPOptions@ret,c
  9088                           
  9089                           ;tcpv4.c: 389: break;
  9090  004F94  D04A               	goto	l8909
  9091  004F96                     l8877:
  9092                           
  9093                           ; BSR set to: 1
  9094                           ;tcpv4.c: 394: if (tcpOptionsSize >= 3)
  9095  004F96  5020               	movf	TCP_ParseTCPOptions@tcpOptionsSize+1,w,c
  9096  004F98  E103               	bnz	u12790
  9097  004F9A  0E03               	movlw	3
  9098  004F9C  5C1F               	subwf	TCP_ParseTCPOptions@tcpOptionsSize,w,c
  9099  004F9E  E31D               	bnc	l1150
  9100  004FA0                     u12790:
  9101                           
  9102                           ; BSR set to: 1
  9103                           ;tcpv4.c: 395: {
  9104                           ;tcpv4.c: 396: opt = ETH_Read8();
  9105  004FA0  EC17  F030         	call	_ETH_Read8	;wreg free
  9106  004FA4  6E1E               	movwf	TCP_ParseTCPOptions@opt,c
  9107                           
  9108                           ; BSR set to: 1
  9109                           ;tcpv4.c: 397: if (opt == 0x04)
  9110  004FA6  0E04               	movlw	4
  9111  004FA8  181E               	xorwf	TCP_ParseTCPOptions@opt,w,c
  9112  004FAA  E114               	bnz	l1151
  9113                           
  9114                           ; BSR set to: 1
  9115                           ;tcpv4.c: 398: {
  9116                           ;tcpv4.c: 400: tcpMss = ETH_Read16();
  9117  004FAC  ECF8  F02E         	call	_ETH_Read16	;wreg free
  9118  004FB0  C017  F043         	movff	?_ETH_Read16,_tcpMss
  9119  004FB4  C018  F044         	movff	?_ETH_Read16+1,_tcpMss+1
  9120                           
  9121                           ; BSR set to: 1
  9122                           ;tcpv4.c: 402: tcpOptionsSize = tcpOptionsSize - 3;
  9123  004FB8  0EFD               	movlw	253
  9124  004FBA  261F               	addwf	TCP_ParseTCPOptions@tcpOptionsSize,f,c
  9125  004FBC  0EFF               	movlw	255
  9126  004FBE  2220               	addwfc	TCP_ParseTCPOptions@tcpOptionsSize+1,f,c
  9127                           
  9128                           ; BSR set to: 1
  9129                           ;tcpv4.c: 405: if (tcpMss > 1460u)
  9130  004FC0  0EB5               	movlw	181
  9131  004FC2  5C43               	subwf	_tcpMss,w,c
  9132  004FC4  0E05               	movlw	5
  9133  004FC6  5844               	subwfb	_tcpMss+1,w,c
  9134  004FC8  E3E3               	bnc	l8875
  9135                           
  9136                           ; BSR set to: 1
  9137                           ;tcpv4.c: 406: {
  9138                           ;tcpv4.c: 407: tcpMss = 1460u;
  9139  004FCA  0E05               	movlw	5
  9140  004FCC  6E44               	movwf	_tcpMss+1,c
  9141  004FCE  0EB4               	movlw	180
  9142  004FD0  6E43               	movwf	_tcpMss,c
  9143  004FD2  D7DE               	goto	l8875
  9144  004FD4                     l1151:
  9145                           
  9146                           ; BSR set to: 1
  9147                           ;tcpv4.c: 412: {
  9148                           ;tcpv4.c: 414: ;
  9149                           ;tcpv4.c: 416: tcpOptionsSize = 0;
  9150  004FD4  6A1F               	clrf	TCP_ParseTCPOptions@tcpOptionsSize,c
  9151  004FD6  6A20               	clrf	TCP_ParseTCPOptions@tcpOptionsSize+1,c
  9152  004FD8  D028               	goto	l8909
  9153  004FDA                     l1150:
  9154                           
  9155                           ; BSR set to: 1
  9156                           ;tcpv4.c: 419: {
  9157                           ;tcpv4.c: 421: tcpOptionsSize = 0;
  9158  004FDA  6A1F               	clrf	TCP_ParseTCPOptions@tcpOptionsSize,c
  9159  004FDC  6A20               	clrf	TCP_ParseTCPOptions@tcpOptionsSize+1,c
  9160                           
  9161                           ;tcpv4.c: 422: ret = 0;
  9162  004FDE  6A1D               	clrf	TCP_ParseTCPOptions@ret,c
  9163  004FE0  D024               	goto	l8909
  9164  004FE2                     l8891:
  9165                           
  9166                           ; BSR set to: 1
  9167                           ;tcpv4.c: 426: ;
  9168                           ;tcpv4.c: 427: opt = ETH_Read8();
  9169  004FE2  EC17  F030         	call	_ETH_Read8	;wreg free
  9170  004FE6  6E1E               	movwf	TCP_ParseTCPOptions@opt,c
  9171                           
  9172                           ; BSR set to: 1
  9173                           ;tcpv4.c: 428: tcpOptionsSize--;
  9174  004FE8  061F               	decf	TCP_ParseTCPOptions@tcpOptionsSize,f,c
  9175  004FEA  A0D8               	btfss	status,0,c
  9176  004FEC  0620               	decf	TCP_ParseTCPOptions@tcpOptionsSize+1,f,c
  9177                           
  9178                           ; BSR set to: 1
  9179                           ;tcpv4.c: 430: if (opt > 1)
  9180  004FEE  0E01               	movlw	1
  9181  004FF0  641E               	cpfsgt	TCP_ParseTCPOptions@opt,c
  9182  004FF2  D7F3               	goto	l1150
  9183                           
  9184                           ; BSR set to: 1
  9185                           ;tcpv4.c: 431: {
  9186                           ;tcpv4.c: 433: opt = opt - 2;
  9187  004FF4  0EFE               	movlw	254
  9188  004FF6  261E               	addwf	TCP_ParseTCPOptions@opt,f,c
  9189                           
  9190                           ;tcpv4.c: 434: if (opt <= tcpOptionsSize)
  9191  004FF8  501E               	movf	TCP_ParseTCPOptions@opt,w,c
  9192  004FFA  6E1B               	movwf	??_TCP_ParseTCPOptions& (0+255),c
  9193  004FFC  6A1C               	clrf	(??_TCP_ParseTCPOptions+1)& (0+255),c
  9194  004FFE  501B               	movf	??_TCP_ParseTCPOptions,w,c
  9195  005000  5C1F               	subwf	TCP_ParseTCPOptions@tcpOptionsSize,w,c
  9196  005002  501C               	movf	??_TCP_ParseTCPOptions+1,w,c
  9197  005004  5820               	subwfb	TCP_ParseTCPOptions@tcpOptionsSize+1,w,c
  9198  005006  E3E9               	bnc	l1150
  9199                           
  9200                           ; BSR set to: 1
  9201                           ;tcpv4.c: 435: {
  9202                           ;tcpv4.c: 437: ETH_Dump(opt);
  9203  005008  C01E  F017         	movff	TCP_ParseTCPOptions@opt,ETH_Dump@length
  9204  00500C  6A18               	clrf	ETH_Dump@length+1,c
  9205  00500E  EC2E  F030         	call	_ETH_Dump	;wreg free
  9206                           
  9207                           ; BSR set to: 2
  9208                           ;tcpv4.c: 438: tcpOptionsSize = tcpOptionsSize - opt;
  9209  005012  501E               	movf	TCP_ParseTCPOptions@opt,w,c
  9210  005014  5E1F               	subwf	TCP_ParseTCPOptions@tcpOptionsSize,f,c
  9211  005016  0E00               	movlw	0
  9212  005018  5A20               	subwfb	TCP_ParseTCPOptions@tcpOptionsSize+1,f,c
  9213  00501A  D7BA               	goto	l8875
  9214  00501C                     l8907:
  9215                           
  9216                           ; BSR set to: 1
  9217  00501C  501E               	movf	TCP_ParseTCPOptions@opt,w,c
  9218                           
  9219                           ; Switch size 1, requested type "space"
  9220                           ; Number of cases is 3, Range of values is 0 to 2
  9221                           ; switch strategies available:
  9222                           ; Name         Instructions Cycles
  9223                           ; simple_byte           10     6 (average)
  9224                           ;	Chosen strategy is simple_byte
  9225  00501E  E0B0               	bz	l8869
  9226  005020  0A01               	xorlw	1	; case 1
  9227  005022  E003               	bz	l8909
  9228  005024  0A03               	xorlw	3	; case 2
  9229  005026  E0B7               	bz	l8877
  9230  005028  D7DC               	goto	l8891
  9231  00502A                     l8909:
  9232  00502A  061F               	decf	TCP_ParseTCPOptions@tcpOptionsSize,f,c
  9233  00502C  A0D8               	btfss	status,0,c
  9234  00502E  0620               	decf	TCP_ParseTCPOptions@tcpOptionsSize+1,f,c
  9235  005030  281F               	incf	TCP_ParseTCPOptions@tcpOptionsSize,w,c
  9236  005032  E1A2               	bnz	l8867
  9237  005034  2820               	incf	TCP_ParseTCPOptions@tcpOptionsSize+1,w,c
  9238  005036  E006               	bz	l1162
  9239  005038  D79F               	goto	l8867
  9240  00503A                     l8911:
  9241                           
  9242                           ; BSR set to: 1
  9243                           ;tcpv4.c: 459: {
  9244                           ;tcpv4.c: 460: ETH_Dump(tcpOptionsSize);
  9245  00503A  D806               	call	PL747	;call to abstracted procedure
  9246  00503C  EC2E  F030         	call	_ETH_Dump	;wreg free
  9247  005040                     l8913:
  9248                           
  9249                           ;tcpv4.c: 461: ret = 1;
  9250  005040  0E01               	movlw	1
  9251  005042  6E1D               	movwf	TCP_ParseTCPOptions@ret,c
  9252  005044                     l1162:
  9253                           
  9254                           ;tcpv4.c: 466: }
  9255                           ;tcpv4.c: 468: return ret;
  9256  005044  501D               	movf	TCP_ParseTCPOptions@ret,w,c
  9257  005046  0012               	return		;funcret
  9258  005048                     __end_of_TCP_ParseTCPOptions:
  9259                           	opt stack 0
  9260  005048                     PL747:
  9261                           	opt stack 16
  9262  005048  C01F  F017         	movff	TCP_ParseTCPOptions@tcpOptionsSize,ETH_Dump@length
  9263  00504C  C020  F018         	movff	TCP_ParseTCPOptions@tcpOptionsSize+1,ETH_Dump@length+1
  9264  005050  0012               	return	
  9265  005052                     __end_ofPL747:
  9266                           	opt stack 0
  9267                           tosu	equ	0xFFF
  9268                           tosh	equ	0xFFE
  9269                           tosl	equ	0xFFD
  9270                           pclath	equ	0xFFA
  9271                           tblptru	equ	0xFF8
  9272                           tblptrh	equ	0xFF7
  9273                           tblptrl	equ	0xFF6
  9274                           tablat	equ	0xFF5
  9275                           prodh	equ	0xFF4
  9276                           prodl	equ	0xFF3
  9277                           intcon	equ	0xFF2
  9278                           indf0	equ	0xFEF
  9279                           postinc0	equ	0xFEE
  9280                           fsr0h	equ	0xFEA
  9281                           fsr0l	equ	0xFE9
  9282                           wreg	equ	0xFE8
  9283                           postinc1	equ	0xFE6
  9284                           plusw1	equ	0xFE3
  9285                           fsr1h	equ	0xFE2
  9286                           fsr1l	equ	0xFE1
  9287                           bsr	equ	0xFE0
  9288                           indf2	equ	0xFDF
  9289                           postinc2	equ	0xFDE
  9290                           postdec2	equ	0xFDD
  9291                           plusw2	equ	0xFDB
  9292                           fsr2h	equ	0xFDA
  9293                           fsr2l	equ	0xFD9
  9294                           status	equ	0xFD8
  9295                           
  9296 ;; *************** function _ETH_Read8 *****************
  9297 ;; Defined at:
  9298 ;;		line 380 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
  9299 ;; Parameters:    Size  Location     Type
  9300 ;;		None
  9301 ;; Auto vars:     Size  Location     Type
  9302 ;;  ret             1   22[COMRAM] unsigned char 
  9303 ;; Return value:  Size  Location     Type
  9304 ;;                  1    wreg      unsigned char 
  9305 ;; Registers used:
  9306 ;;		wreg, status,2, status,0, cstack
  9307 ;; Tracked objects:
  9308 ;;		On entry : C/0
  9309 ;;		On exit  : F/1
  9310 ;;		Unchanged: 0/0
  9311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9313 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9315 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9316 ;;Total ram usage:        1 bytes
  9317 ;; Hardware stack levels used:    1
  9318 ;; Hardware stack levels required when called:    9
  9319 ;; This function calls:
  9320 ;;		_ETH_EdataRead
  9321 ;; This function is called by:
  9322 ;;		_DHCP_Handler
  9323 ;;		_TCP_ParseTCPOptions
  9324 ;;		_UDP_Read8
  9325 ;; This function uses a non-reentrant model
  9326 ;;
  9327                           
  9328                           	psect	text40
  9329  00602E                     __ptext40:
  9330                           	opt stack 0
  9331  00602E                     _ETH_Read8:
  9332                           	opt stack 16
  9333                           
  9334                           ;j60_driver.c: 382: uint8_t ret = 0;
  9335                           
  9336                           ;incstack = 0
  9337  00602E  6A17               	clrf	ETH_Read8@ret,c
  9338                           
  9339                           ;j60_driver.c: 383: if(rxPacketStatusVector.byteCount >= sizeof(ret))
  9340  006030  0102               	movlb	2	; () banked
  9341  006032  512C               	movf	_rxPacketStatusVector& (0+255),w,b
  9342  006034  112D               	iorwf	(_rxPacketStatusVector+1)& (0+255),w,b
  9343  006036  E007               	bz	l525
  9344  006038                     i9L__ptext100:
  9345                           	opt stack 0
  9346  006038                     i9L_ETH_EdataRead:
  9347                           	opt stack 0
  9348  006038                     i9Ll7805:
  9349                           	opt stack 15
  9350  006038  CF61 FE7E          	movff	3937,_errataTemp	;# 
  9351  00603C                     i9Ll7807:
  9352                           	opt stack 15
  9353                           
  9354                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
  9355  00603C  010E               	movlb	14	; () banked
  9356  00603E  517E               	movf	126,w,b
  9357  006040                     i9Ll460:
  9358                           	opt stack 16
  9359  006040  6E17               	movwf	ETH_Read8@ret,c
  9360                           
  9361                           ; BSR set to: 14
  9362                           ;j60_driver.c: 386: rxPacketStatusVector.byteCount -= sizeof(ret);
  9363                           
  9364                           ; BSR set to: 2
  9365                           ;j60_driver.c: 387: ethData.error = 0;
  9366  006042  D805               	call	PL675	;call to abstracted procedure
  9367                           
  9368                           ;j60_driver.c: 388: }
  9369  006044  D002               	goto	l8333
  9370  006046                     l525:
  9371                           
  9372                           ; BSR set to: 2
  9373                           ;j60_driver.c: 389: else
  9374                           ;j60_driver.c: 390: {
  9375                           ;j60_driver.c: 391: ethData.error = 1;
  9376  006046  0101               	movlb	1	; () banked
  9377  006048  81BF               	bsf	_ethData& (0+255),0,b	;volatile
  9378  00604A                     l8333:
  9379                           
  9380                           ; BSR set to: 1
  9381                           ;j60_driver.c: 392: }
  9382                           ;j60_driver.c: 393: return ret;
  9383  00604A  5017               	movf	ETH_Read8@ret,w,c
  9384                           
  9385                           ; BSR set to: 1
  9386  00604C  0012               	return		;funcret
  9387  00604E                     __end_of_ETH_Read8:
  9388                           	opt stack 0
  9389  00604E                     PL675:
  9390                           	opt stack 17
  9391  00604E  0102               	movlb	2	; () banked
  9392  006050  072C               	decf	_rxPacketStatusVector& (0+255),f,b
  9393  006052  A0D8               	btfss	status,0,c
  9394  006054  072D               	decf	(_rxPacketStatusVector+1)& (0+255),f,b
  9395  006056  0101               	movlb	1	; () banked
  9396  006058  91BF               	bcf	_ethData& (0+255),0,b	;volatile
  9397  00605A  0012               	return	
  9398  00605C                     __end_ofPL675:
  9399                           	opt stack 0
  9400                           tosu	equ	0xFFF
  9401                           tosh	equ	0xFFE
  9402                           tosl	equ	0xFFD
  9403                           pclath	equ	0xFFA
  9404                           tblptru	equ	0xFF8
  9405                           tblptrh	equ	0xFF7
  9406                           tblptrl	equ	0xFF6
  9407                           tablat	equ	0xFF5
  9408                           prodh	equ	0xFF4
  9409                           prodl	equ	0xFF3
  9410                           intcon	equ	0xFF2
  9411                           indf0	equ	0xFEF
  9412                           postinc0	equ	0xFEE
  9413                           fsr0h	equ	0xFEA
  9414                           fsr0l	equ	0xFE9
  9415                           wreg	equ	0xFE8
  9416                           postinc1	equ	0xFE6
  9417                           plusw1	equ	0xFE3
  9418                           fsr1h	equ	0xFE2
  9419                           fsr1l	equ	0xFE1
  9420                           bsr	equ	0xFE0
  9421                           indf2	equ	0xFDF
  9422                           postinc2	equ	0xFDE
  9423                           postdec2	equ	0xFDD
  9424                           plusw2	equ	0xFDB
  9425                           fsr2h	equ	0xFDA
  9426                           fsr2l	equ	0xFD9
  9427                           status	equ	0xFD8
  9428                           
  9429 ;; *************** function _ETH_Read16 *****************
  9430 ;; Defined at:
  9431 ;;		line 399 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
  9432 ;; Parameters:    Size  Location     Type
  9433 ;;		None
  9434 ;; Auto vars:     Size  Location     Type
  9435 ;;  ret             2   24[COMRAM] unsigned int 
  9436 ;; Return value:  Size  Location     Type
  9437 ;;                  2   22[COMRAM] unsigned int 
  9438 ;; Registers used:
  9439 ;;		wreg, status,2, status,0, cstack
  9440 ;; Tracked objects:
  9441 ;;		On entry : E/0
  9442 ;;		On exit  : F/1
  9443 ;;		Unchanged: 0/0
  9444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9445 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9446 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9448 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9449 ;;Total ram usage:        4 bytes
  9450 ;; Hardware stack levels used:    1
  9451 ;; Hardware stack levels required when called:    9
  9452 ;; This function calls:
  9453 ;;		_ETH_EdataRead
  9454 ;; This function is called by:
  9455 ;;		_DHCP_Handler
  9456 ;;		_TCP_ParseTCPOptions
  9457 ;; This function uses a non-reentrant model
  9458 ;;
  9459                           
  9460                           	psect	text41
  9461  005DF0                     __ptext41:
  9462                           	opt stack 0
  9463  005DF0                     _ETH_Read16:
  9464                           	opt stack 16
  9465                           
  9466                           ;j60_driver.c: 401: uint16_t ret = 0;
  9467                           
  9468                           ; BSR set to: 1
  9469                           ;incstack = 0
  9470  005DF0  6A19               	clrf	ETH_Read16@ret,c
  9471  005DF2  6A1A               	clrf	ETH_Read16@ret+1,c
  9472                           
  9473                           ;j60_driver.c: 402: if(rxPacketStatusVector.byteCount >= sizeof(ret))
  9474  005DF4  0102               	movlb	2	; () banked
  9475  005DF6  512D               	movf	(_rxPacketStatusVector+1)& (0+255),w,b
  9476  005DF8  E103               	bnz	u12160
  9477  005DFA  0E02               	movlw	2
  9478  005DFC  5D2C               	subwf	_rxPacketStatusVector& (0+255),w,b
  9479  005DFE  E30D               	bnc	l530
  9480  005E00                     u12160:
  9481  005E00                     i10L__ptext100:
  9482                           	opt stack 0
  9483  005E00                     i10L_ETH_EdataRead:
  9484                           	opt stack 0
  9485  005E00                     i10Ll7805:
  9486                           	opt stack 15
  9487  005E00  CF61 FE7E          	movff	3937,_errataTemp	;# 
  9488  005E04                     i10Ll7807:
  9489                           	opt stack 15
  9490                           
  9491                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
  9492  005E04  010E               	movlb	14	; () banked
  9493  005E06  517E               	movf	126,w,b
  9494  005E08                     i10Ll460:
  9495                           	opt stack 16
  9496  005E08  6E1A               	movwf	ETH_Read16@ret+1,c
  9497  005E0A                     i11L__ptext100:
  9498                           	opt stack 0
  9499  005E0A                     i11L_ETH_EdataRead:
  9500                           	opt stack 0
  9501  005E0A                     i11Ll7805:
  9502                           	opt stack 15
  9503  005E0A  CF61 FE7E          	movff	3937,_errataTemp	;# 
  9504  005E0E                     i11Ll7807:
  9505                           	opt stack 15
  9506                           
  9507                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
  9508  005E0E  010E               	movlb	14	; () banked
  9509  005E10  517E               	movf	126,w,b
  9510  005E12                     i11Ll460:
  9511                           	opt stack 16
  9512  005E12  6E19               	movwf	ETH_Read16@ret,c
  9513                           
  9514                           ; BSR set to: 14
  9515                           ;j60_driver.c: 406: rxPacketStatusVector.byteCount -= sizeof(ret);
  9516  005E14  0E02               	movlw	2
  9517                           
  9518                           ; BSR set to: 2
  9519                           ;j60_driver.c: 407: ethData.error = 0;
  9520  005E16  D808               	call	PL695	;call to abstracted procedure
  9521                           
  9522                           ;j60_driver.c: 408: }
  9523  005E18  D002               	goto	l531
  9524  005E1A                     l530:
  9525                           
  9526                           ; BSR set to: 2
  9527                           ;j60_driver.c: 409: else
  9528                           ;j60_driver.c: 410: {
  9529                           ;j60_driver.c: 411: ethData.error = 1;
  9530  005E1A  0101               	movlb	1	; () banked
  9531  005E1C  81BF               	bsf	_ethData& (0+255),0,b	;volatile
  9532  005E1E                     l531:
  9533                           
  9534                           ; BSR set to: 1
  9535                           ;j60_driver.c: 412: }
  9536                           ;j60_driver.c: 413: return ret;
  9537  005E1E  C019  F017         	movff	ETH_Read16@ret,?_ETH_Read16
  9538  005E22  C01A  F018         	movff	ETH_Read16@ret+1,?_ETH_Read16+1
  9539                           
  9540                           ; BSR set to: 1
  9541  005E26  0012               	return		;funcret
  9542  005E28                     __end_of_ETH_Read16:
  9543                           	opt stack 0
  9544  005E28                     PL695:
  9545                           	opt stack 16
  9546  005E28  0102               	movlb	2	; () banked
  9547  005E2A  5F2C               	subwf	_rxPacketStatusVector& (0+255),f,b
  9548  005E2C  0E00               	movlw	0
  9549  005E2E  5B2D               	subwfb	(_rxPacketStatusVector+1)& (0+255),f,b
  9550  005E30  0101               	movlb	1	; () banked
  9551  005E32  91BF               	bcf	_ethData& (0+255),0,b	;volatile
  9552  005E34  0C00               	retlw	0
  9553  005E36                     __end_ofPL695:
  9554                           	opt stack 0
  9555                           tosu	equ	0xFFF
  9556                           tosh	equ	0xFFE
  9557                           tosl	equ	0xFFD
  9558                           pclath	equ	0xFFA
  9559                           tblptru	equ	0xFF8
  9560                           tblptrh	equ	0xFF7
  9561                           tblptrl	equ	0xFF6
  9562                           tablat	equ	0xFF5
  9563                           prodh	equ	0xFF4
  9564                           prodl	equ	0xFF3
  9565                           intcon	equ	0xFF2
  9566                           indf0	equ	0xFEF
  9567                           postinc0	equ	0xFEE
  9568                           fsr0h	equ	0xFEA
  9569                           fsr0l	equ	0xFE9
  9570                           wreg	equ	0xFE8
  9571                           postinc1	equ	0xFE6
  9572                           plusw1	equ	0xFE3
  9573                           fsr1h	equ	0xFE2
  9574                           fsr1l	equ	0xFE1
  9575                           bsr	equ	0xFE0
  9576                           indf2	equ	0xFDF
  9577                           postinc2	equ	0xFDE
  9578                           postdec2	equ	0xFDD
  9579                           plusw2	equ	0xFDB
  9580                           fsr2h	equ	0xFDA
  9581                           fsr2l	equ	0xFD9
  9582                           status	equ	0xFD8
  9583                           
  9584 ;; *************** function _ETH_Dump *****************
  9585 ;; Defined at:
  9586 ;;		line 611 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
  9587 ;; Parameters:    Size  Location     Type
  9588 ;;  length          2   22[COMRAM] unsigned int 
  9589 ;; Auto vars:     Size  Location     Type
  9590 ;;		None
  9591 ;; Return value:  Size  Location     Type
  9592 ;;		None               void
  9593 ;; Registers used:
  9594 ;;		wreg, status,2, status,0
  9595 ;; Tracked objects:
  9596 ;;		On entry : 0/1
  9597 ;;		On exit  : F/2
  9598 ;;		Unchanged: 0/0
  9599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9600 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9603 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9604 ;;Total ram usage:        2 bytes
  9605 ;; Hardware stack levels used:    1
  9606 ;; Hardware stack levels required when called:    8
  9607 ;; This function calls:
  9608 ;;		Nothing
  9609 ;; This function is called by:
  9610 ;;		_DHCP_Handler
  9611 ;;		_IPV4_Packet
  9612 ;;		_TCP_ParseTCPOptions
  9613 ;; This function uses a non-reentrant model
  9614 ;;
  9615                           
  9616                           	psect	text42
  9617  00605C                     __ptext42:
  9618                           	opt stack 0
  9619  00605C                     _ETH_Dump:
  9620                           	opt stack 17
  9621                           
  9622                           ;j60_driver.c: 613: length = (rxPacketStatusVector.byteCount <= length) ? rxPacketStatus
      +                          Vector.byteCount : length;
  9623                           
  9624                           ; BSR set to: 1
  9625                           ;incstack = 0
  9626  00605C  0102               	movlb	2	; () banked
  9627  00605E  512C               	movf	_rxPacketStatusVector& (0+255),w,b
  9628  006060  5C17               	subwf	ETH_Dump@length,w,c
  9629  006062  512D               	movf	(_rxPacketStatusVector+1)& (0+255),w,b
  9630  006064  5818               	subwfb	ETH_Dump@length+1,w,c
  9631  006066  E304               	bnc	l8545
  9632                           
  9633                           ; BSR set to: 2
  9634  006068  C22C  F017         	movff	_rxPacketStatusVector,ETH_Dump@length
  9635  00606C  C22D  F018         	movff	_rxPacketStatusVector+1,ETH_Dump@length+1
  9636  006070                     l8545:
  9637                           
  9638                           ; BSR set to: 2
  9639                           ;j60_driver.c: 614: if (length)
  9640  006070  5017               	movf	ETH_Dump@length,w,c
  9641  006072  1018               	iorwf	ETH_Dump@length+1,w,c
  9642  006074  B4D8               	btfsc	status,2,c
  9643  006076  0012               	return	
  9644                           
  9645                           ; BSR set to: 2
  9646                           ;j60_driver.c: 615: {
  9647                           ;j60_driver.c: 617: ERDPT += length;
  9648  006078  5017               	movf	ETH_Dump@length,w,c
  9649  00607A  267A               	addwf	3962,f,c	;volatile
  9650  00607C  5018               	movf	ETH_Dump@length+1,w,c
  9651  00607E  227B               	addwfc	3963,f,c	;volatile
  9652                           
  9653                           ;j60_driver.c: 618: rxPacketStatusVector.byteCount -= length;
  9654  006080  5017               	movf	ETH_Dump@length,w,c
  9655  006082  5F2C               	subwf	_rxPacketStatusVector& (0+255),f,b
  9656  006084  5018               	movf	ETH_Dump@length+1,w,c
  9657  006086  5B2D               	subwfb	(_rxPacketStatusVector+1)& (0+255),f,b
  9658                           
  9659                           ; BSR set to: 2
  9660  006088  0012               	return		;funcret
  9661  00608A                     __end_of_ETH_Dump:
  9662                           	opt stack 0
  9663                           tosu	equ	0xFFF
  9664                           tosh	equ	0xFFE
  9665                           tosl	equ	0xFFD
  9666                           pclath	equ	0xFFA
  9667                           tblptru	equ	0xFF8
  9668                           tblptrh	equ	0xFF7
  9669                           tblptrl	equ	0xFF6
  9670                           tablat	equ	0xFF5
  9671                           prodh	equ	0xFF4
  9672                           prodl	equ	0xFF3
  9673                           intcon	equ	0xFF2
  9674                           indf0	equ	0xFEF
  9675                           postinc0	equ	0xFEE
  9676                           fsr0h	equ	0xFEA
  9677                           fsr0l	equ	0xFE9
  9678                           wreg	equ	0xFE8
  9679                           postinc1	equ	0xFE6
  9680                           plusw1	equ	0xFE3
  9681                           fsr1h	equ	0xFE2
  9682                           fsr1l	equ	0xFE1
  9683                           bsr	equ	0xFE0
  9684                           indf2	equ	0xFDF
  9685                           postinc2	equ	0xFDE
  9686                           postdec2	equ	0xFDD
  9687                           plusw2	equ	0xFDB
  9688                           fsr2h	equ	0xFDA
  9689                           fsr2l	equ	0xFD9
  9690                           status	equ	0xFD8
  9691                           
  9692 ;; *************** function _TCP_FiniteStateMachine *****************
  9693 ;; Defined at:
  9694 ;;		line 602 in file "../../TCPIP Library/source/tcpv4.c"
  9695 ;; Parameters:    Size  Location     Type
  9696 ;;		None
  9697 ;; Auto vars:     Size  Location     Type
  9698 ;;  notAckBytes     2   13[BANK1 ] unsigned int 
  9699 ;;  nextState       1   16[BANK1 ] enum E638
  9700 ;;  event           1   15[BANK1 ] enum E651
  9701 ;;  ret             1   12[BANK1 ] unsigned char 
  9702 ;; Return value:  Size  Location     Type
  9703 ;;                  1    wreg      unsigned char 
  9704 ;; Registers used:
  9705 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9706 ;; Tracked objects:
  9707 ;;		On entry : 0/1
  9708 ;;		On exit  : F/1
  9709 ;;		Unchanged: 0/0
  9710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9712 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9713 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9714 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9715 ;;Total ram usage:       17 bytes
  9716 ;; Hardware stack levels used:    1
  9717 ;; Hardware stack levels required when called:   14
  9718 ;; This function calls:
  9719 ;;		_TCB_Reset
  9720 ;;		_TCP_PayloadSave
  9721 ;;		_TCP_Snd
  9722 ;; This function is called by:
  9723 ;;		_TCP_Recv
  9724 ;;		_TCP_Update
  9725 ;; This function uses a non-reentrant model
  9726 ;;
  9727                           
  9728                           	psect	text43
  9729  0010C4                     __ptext43:
  9730                           	opt stack 0
  9731  0010C4                     _TCP_FiniteStateMachine:
  9732                           	opt stack 14
  9733                           
  9734                           ;tcpv4.c: 604: uint16_t notAckBytes;
  9735                           ;tcpv4.c: 605: bool ret = 0;
  9736                           
  9737                           ; BSR set to: 2
  9738                           ;incstack = 0
  9739  0010C4  0101               	movlb	1	; () banked
  9740  0010C6  6B0C               	clrf	TCP_FiniteStateMachine@ret& (0+255),b
  9741                           
  9742                           ; BSR set to: 1
  9743                           ;tcpv4.c: 607: tcp_fsm_states_t nextState = currentTCB->fsmState;
  9744  0010C8  0E2A               	movlw	42
  9745  0010CA  243F               	addwf	_currentTCB,w,c
  9746  0010CC  EC61  F011         	call	PL429	;call to abstracted procedure
  9747  0010D0  64F7               	cpfsgt	tblptrh,c
  9748  0010D2  D003               	bra	u12857
  9749  0010D4  0008               	tblrd		*
  9750  0010D6  50F5               	movf	tablat,w,c
  9751  0010D8  D003               	bra	u12850
  9752  0010DA                     u12857:
  9753  0010DA  EC6D  F011         	call	PL431	;call to abstracted procedure
  9754  0010DE  50EF               	movf	indf0,w,c
  9755  0010E0                     u12850:
  9756  0010E0  0101               	movlb	1	; () banked
  9757  0010E2  6F10               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
  9758                           
  9759                           ;tcpv4.c: 608: tcpEvent_t event = currentTCB->connectionEvent;
  9760  0010E4  0E2B               	movlw	43
  9761  0010E6  243F               	addwf	_currentTCB,w,c
  9762  0010E8  EC61  F011         	call	PL429	;call to abstracted procedure
  9763  0010EC  64F7               	cpfsgt	tblptrh,c
  9764  0010EE  D003               	bra	u12867
  9765  0010F0  0008               	tblrd		*
  9766  0010F2  50F5               	movf	tablat,w,c
  9767  0010F4  D003               	bra	u12860
  9768  0010F6                     u12867:
  9769  0010F6  EC6D  F011         	call	PL431	;call to abstracted procedure
  9770  0010FA  50EF               	movf	indf0,w,c
  9771  0010FC                     u12860:
  9772  0010FC  0101               	movlb	1	; () banked
  9773  0010FE  6F0F               	movwf	TCP_FiniteStateMachine@event& (0+255),b
  9774                           
  9775                           ;tcpv4.c: 610: switch (currentTCB->fsmState)
  9776  001100  EF19  F011         	goto	l9261
  9777  001104                     l8923:
  9778                           
  9779                           ; BSR set to: 1
  9780                           ;tcpv4.c: 616: ;
  9781                           ;tcpv4.c: 619: currentTCB->destIP = receivedRemoteAddress;
  9782  001104  0E02               	movlw	2
  9783  001106  243F               	addwf	_currentTCB,w,c
  9784  001108  EC61  F011         	call	PL429	;call to abstracted procedure
  9785  00110C  64F7               	cpfsgt	tblptrh,c
  9786  00110E  D00D               	bra	u12877
  9787  001110  C03B  FFF5         	movff	_receivedRemoteAddress,tablat
  9788  001114  000D               	tblwt		*+
  9789  001116  C03C  FFF5         	movff	_receivedRemoteAddress+1,tablat
  9790  00111A  000D               	tblwt		*+
  9791  00111C  C03D  FFF5         	movff	_receivedRemoteAddress+2,tablat
  9792  001120  000D               	tblwt		*+
  9793  001122  C03E  FFF5         	movff	_receivedRemoteAddress+3,tablat
  9794  001126  000C               	tblwt		*
  9795  001128  D00A               	bra	u12870
  9796  00112A                     u12877:
  9797  00112A  EC6D  F011         	call	PL431	;call to abstracted procedure
  9798  00112E  C03B  FFEE         	movff	_receivedRemoteAddress,postinc0
  9799  001132  C03C  FFEE         	movff	_receivedRemoteAddress+1,postinc0
  9800  001136  C03D  FFEE         	movff	_receivedRemoteAddress+2,postinc0
  9801  00113A  C03E  FFEF         	movff	_receivedRemoteAddress+3,indf0
  9802  00113E                     u12870:
  9803                           
  9804                           ;tcpv4.c: 620: currentTCB->destPort = tcpHeader.sourcePort;
  9805  00113E  EC23  F012         	call	PL493	;call to abstracted procedure
  9806  001142  EC61  F011         	call	PL429	;call to abstracted procedure
  9807  001146  64F7               	cpfsgt	tblptrh,c
  9808  001148  D007               	bra	u12887
  9809  00114A  C1D1  FFF5         	movff	_tcpHeader,tablat
  9810  00114E  000D               	tblwt		*+
  9811  001150  C1D2  FFF5         	movff	_tcpHeader+1,tablat
  9812  001154  000C               	tblwt		*
  9813  001156  D006               	bra	u12880
  9814  001158                     u12887:
  9815  001158  EC6D  F011         	call	PL431	;call to abstracted procedure
  9816  00115C  C1D1  FFEE         	movff	_tcpHeader,postinc0
  9817  001160  C1D2  FFEF         	movff	_tcpHeader+1,indf0
  9818  001164                     u12880:
  9819                           
  9820                           ;tcpv4.c: 623: currentTCB->localLastAck = 0;
  9821  001164  EC56  F012         	call	PL519	;call to abstracted procedure
  9822  001168  EC61  F011         	call	PL429	;call to abstracted procedure
  9823  00116C  64F7               	cpfsgt	tblptrh,c
  9824  00116E  D007               	bra	u12897
  9825  001170  6AF5               	clrf	tablat,c
  9826  001172  000D               	tblwt		*+
  9827  001174  6AF5               	clrf	tablat,c
  9828  001176  000D               	tblwt		*+
  9829  001178  ECD9  F011         	call	PL467	;call to abstracted procedure
  9830  00117C  D004               	bra	u12890
  9831  00117E                     u12897:
  9832  00117E  EC6D  F011         	call	PL431	;call to abstracted procedure
  9833  001182  EC4D  F012         	call	PL513	;call to abstracted procedure
  9834  001186                     u12890:
  9835                           
  9836                           ;tcpv4.c: 625: currentTCB->remoteSeqno = tcpHeader.sequenceNumber;
  9837  001186  ECD1  F011         	call	PL461	;call to abstracted procedure
  9838  00118A  EC61  F011         	call	PL429	;call to abstracted procedure
  9839  00118E  64F7               	cpfsgt	tblptrh,c
  9840  001190  D003               	bra	u12907
  9841  001192  ECF8  F011         	call	PL483	;call to abstracted procedure
  9842  001196  D004               	bra	u12900
  9843  001198                     u12907:
  9844  001198  EC6D  F011         	call	PL431	;call to abstracted procedure
  9845  00119C  EC63  F012         	call	PL523	;call to abstracted procedure
  9846  0011A0                     u12900:
  9847                           
  9848                           ;tcpv4.c: 626: currentTCB->remoteAck = currentTCB->remoteSeqno + 1;
  9849  0011A0  ECD1  F011         	call	PL461	;call to abstracted procedure
  9850  0011A4  EC61  F011         	call	PL429	;call to abstracted procedure
  9851  0011A8  64F7               	cpfsgt	tblptrh,c
  9852  0011AA  D003               	bra	u12917
  9853  0011AC  EC76  F011         	call	PL437	;call to abstracted procedure
  9854  0011B0  D004               	bra	u12910
  9855  0011B2                     u12917:
  9856  0011B2  EC6D  F011         	call	PL431	;call to abstracted procedure
  9857  0011B6  EC97  F011         	call	PL445	;call to abstracted procedure
  9858  0011BA                     u12910:
  9859  0011BA  EC89  F011         	call	PL443	;call to abstracted procedure
  9860  0011BE  0E0C               	movlw	12
  9861  0011C0  EC12  F012         	call	PL487	;call to abstracted procedure
  9862  0011C4  64F7               	cpfsgt	tblptrh,c
  9863  0011C6  D003               	bra	u12927
  9864  0011C8  EC05  F012         	call	PL485	;call to abstracted procedure
  9865  0011CC  D004               	bra	u12920
  9866  0011CE                     u12927:
  9867  0011CE  EC6D  F011         	call	PL431	;call to abstracted procedure
  9868  0011D2  EC5A  F012         	call	PL521	;call to abstracted procedure
  9869  0011D6                     u12920:
  9870                           
  9871                           ;tcpv4.c: 629: currentTCB->remoteWnd = ((((uint16_t)tcpHeader.windowSize & (uint16_t)0xF
      +                          F00) >> 8) | (((uint16_t)tcpHeader.windowSize & (uint16_t)0x00FF) << 8));
  9872  0011D6  ECA0  F011         	call	PL447	;call to abstracted procedure
  9873  0011DA  64F7               	cpfsgt	tblptrh,c
  9874  0011DC  D003               	bra	u12937
  9875  0011DE  EC27  F012         	call	PL497	;call to abstracted procedure
  9876  0011E2  D004               	bra	u12930
  9877  0011E4                     u12937:
  9878  0011E4  EC6D  F011         	call	PL431	;call to abstracted procedure
  9879  0011E8  EC7E  F012         	call	PL547	;call to abstracted procedure
  9880  0011EC                     u12930:
  9881                           
  9882                           ;tcpv4.c: 630: currentTCB->mss = tcpMss;
  9883  0011EC  ECCD  F011         	call	PL459	;call to abstracted procedure
  9884  0011F0  EC61  F011         	call	PL429	;call to abstracted procedure
  9885  0011F4  64F7               	cpfsgt	tblptrh,c
  9886  0011F6  D003               	bra	u12947
  9887  0011F8  EC8F  F012         	call	PL569	;call to abstracted procedure
  9888  0011FC  D004               	bra	u12940
  9889  0011FE                     u12947:
  9890  0011FE  EC6D  F011         	call	PL431	;call to abstracted procedure
  9891  001202  EC9A  F012         	call	PL655	;call to abstracted procedure
  9892  001206                     u12940:
  9893                           
  9894                           ;tcpv4.c: 633: currentTCB->flags = 0x02U | 0x10U;
  9895  001206  EC72  F011         	call	PL435	;call to abstracted procedure
  9896  00120A  EC61  F011         	call	PL429	;call to abstracted procedure
  9897  00120E  64F7               	cpfsgt	tblptrh,c
  9898  001210  D004               	bra	u12957
  9899  001212  0E12               	movlw	18
  9900  001214  6EF5               	movwf	tablat,c
  9901  001216  000C               	tblwt		*
  9902  001218  D004               	bra	u12950
  9903  00121A                     u12957:
  9904  00121A  EC6D  F011         	call	PL431	;call to abstracted procedure
  9905  00121E  0E12               	movlw	18
  9906  001220  6EEF               	movwf	indf0,c
  9907  001222                     u12950:
  9908                           
  9909                           ;tcpv4.c: 634: currentTCB->timeout = ((unsigned long)1*2);
  9910  001222  ECEC  F011         	call	PL471	;call to abstracted procedure
  9911  001226  EC61  F011         	call	PL429	;call to abstracted procedure
  9912  00122A  64F7               	cpfsgt	tblptrh,c
  9913  00122C  D003               	bra	u12967
  9914  00122E  EC42  F012         	call	PL503	;call to abstracted procedure
  9915  001232  D004               	bra	u12960
  9916  001234                     u12967:
  9917  001234  EC6D  F011         	call	PL431	;call to abstracted procedure
  9918  001238  EC96  F012         	call	PL641	;call to abstracted procedure
  9919  00123C                     u12960:
  9920                           
  9921                           ;tcpv4.c: 635: currentTCB->timeoutReloadValue = ((unsigned long)1*2);
  9922  00123C  ECF4  F011         	call	PL475	;call to abstracted procedure
  9923  001240  EC61  F011         	call	PL429	;call to abstracted procedure
  9924  001244  64F7               	cpfsgt	tblptrh,c
  9925  001246  D003               	bra	u12977
  9926  001248  EC42  F012         	call	PL503	;call to abstracted procedure
  9927  00124C  D004               	bra	u12970
  9928  00124E                     u12977:
  9929  00124E  EC6D  F011         	call	PL431	;call to abstracted procedure
  9930  001252  EC96  F012         	call	PL641	;call to abstracted procedure
  9931  001256                     u12970:
  9932                           
  9933                           ;tcpv4.c: 636: currentTCB->timeoutsCount = (3u);
  9934  001256  ECD5  F011         	call	PL463	;call to abstracted procedure
  9935  00125A  EC61  F011         	call	PL429	;call to abstracted procedure
  9936  00125E  64F7               	cpfsgt	tblptrh,c
  9937  001260  D004               	bra	u12987
  9938  001262  0E03               	movlw	3
  9939  001264  6EF5               	movwf	tablat,c
  9940  001266  000C               	tblwt		*
  9941  001268  D004               	bra	u12980
  9942  00126A                     u12987:
  9943  00126A  EC6D  F011         	call	PL431	;call to abstracted procedure
  9944  00126E  0E03               	movlw	3
  9945  001270  6EEF               	movwf	indf0,c
  9946  001272                     u12980:
  9947  001272                     l8937:
  9948                           
  9949                           ;tcpv4.c: 638: TCP_Snd(currentTCB);
  9950  001272  EC48  F012         	call	PL509	;call to abstracted procedure
  9951  001276  ECB3  F012         	call	_TCP_Snd	;wreg free
  9952                           
  9953                           ; BSR set to: 0
  9954                           ;tcpv4.c: 639: nextState = SYN_RECEIVED;
  9955  00127A  0E03               	movlw	3
  9956  00127C  EF20  F010         	goto	L15
  9957  001280                     l1202:
  9958                           
  9959                           ;tcpv4.c: 642: ;
  9960                           ;tcpv4.c: 643: nextState = CLOSE;
  9961  001280  0101               	movlb	1	; () banked
  9962  001282  6B10               	clrf	TCP_FiniteStateMachine@nextState& (0+255),b
  9963                           
  9964                           ; BSR set to: 1
  9965                           ;tcpv4.c: 644: TCB_Reset(currentTCB);
  9966  001284  C03F  F017         	movff	_currentTCB,TCB_Reset@tcbPtr
  9967  001288  C040  F018         	movff	_currentTCB+1,TCB_Reset@tcbPtr+1
  9968  00128C  ECC9  F023         	call	_TCB_Reset	;wreg free
  9969                           
  9970                           ;tcpv4.c: 645: break;
  9971  001290  EF44  F011         	goto	l9263
  9972  001294                     l8945:
  9973  001294  0101               	movlb	1	; () banked
  9974  001296  510F               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
  9975                           
  9976                           ; Switch size 1, requested type "space"
  9977                           ; Number of cases is 2, Range of values is 0 to 3
  9978                           ; switch strategies available:
  9979                           ; Name         Instructions Cycles
  9980                           ; simple_byte            7     4 (average)
  9981                           ;	Chosen strategy is simple_byte
  9982  001298  E0F3               	bz	l1202
  9983  00129A  0A03               	xorlw	3	; case 3
  9984  00129C  E101 D732          	bz	l8923
  9985                           
  9986                           ;tcpv4.c: 650: break;
  9987  0012A0  EF44  F011         	goto	l9263
  9988  0012A4                     l8947:
  9989                           
  9990                           ; BSR set to: 1
  9991                           ;tcpv4.c: 655: ;
  9992                           ;tcpv4.c: 657: currentTCB->remoteSeqno = tcpHeader.sequenceNumber;
  9993  0012A4  0E08               	movlw	8
  9994  0012A6  243F               	addwf	_currentTCB,w,c
  9995  0012A8  EC61  F011         	call	PL429	;call to abstracted procedure
  9996  0012AC  64F7               	cpfsgt	tblptrh,c
  9997  0012AE  D003               	bra	u12997
  9998  0012B0  ECF8  F011         	call	PL483	;call to abstracted procedure
  9999  0012B4  D004               	bra	u12990
 10000  0012B6                     u12997:
 10001  0012B6  EC6D  F011         	call	PL431	;call to abstracted procedure
 10002  0012BA  EC63  F012         	call	PL523	;call to abstracted procedure
 10003  0012BE                     u12990:
 10004                           
 10005                           ;tcpv4.c: 658: currentTCB->remoteAck = tcpHeader.sequenceNumber + 1;
 10006  0012BE  ECDE  F011         	call	PL469	;call to abstracted procedure
 10007  0012C2  ECC0  F011         	call	PL449	;call to abstracted procedure
 10008  0012C6  64F7               	cpfsgt	tblptrh,c
 10009  0012C8  D005               	bra	u13007
 10010  0012CA  EC2E  F012         	call	PL499	;call to abstracted procedure
 10011  0012CE  EC27  F012         	call	PL497	;call to abstracted procedure
 10012  0012D2  D004               	bra	u13000
 10013  0012D4                     u13007:
 10014  0012D4  EC6D  F011         	call	PL431	;call to abstracted procedure
 10015  0012D8  EC6C  F012         	call	PL537	;call to abstracted procedure
 10016  0012DC                     u13000:
 10017                           
 10018                           ;tcpv4.c: 661: currentTCB->remoteWnd = ((((uint16_t)tcpHeader.windowSize & (uint16_t)0xF
      +                          F00) >> 8) | (((uint16_t)tcpHeader.windowSize & (uint16_t)0x00FF) << 8));
 10019  0012DC  ECA0  F011         	call	PL447	;call to abstracted procedure
 10020  0012E0  64F7               	cpfsgt	tblptrh,c
 10021  0012E2  D003               	bra	u13017
 10022  0012E4  EC27  F012         	call	PL497	;call to abstracted procedure
 10023  0012E8  D004               	bra	u13010
 10024  0012EA                     u13017:
 10025  0012EA  EC6D  F011         	call	PL431	;call to abstracted procedure
 10026  0012EE  EC7E  F012         	call	PL547	;call to abstracted procedure
 10027  0012F2                     u13010:
 10028                           
 10029                           ;tcpv4.c: 662: currentTCB->mss = tcpMss;
 10030  0012F2  ECCD  F011         	call	PL459	;call to abstracted procedure
 10031  0012F6  EC61  F011         	call	PL429	;call to abstracted procedure
 10032  0012FA  64F7               	cpfsgt	tblptrh,c
 10033  0012FC  D003               	bra	u13027
 10034  0012FE  EC8F  F012         	call	PL569	;call to abstracted procedure
 10035  001302  D004               	bra	u13020
 10036  001304                     u13027:
 10037  001304  EC6D  F011         	call	PL431	;call to abstracted procedure
 10038  001308  EC9A  F012         	call	PL655	;call to abstracted procedure
 10039  00130C                     u13020:
 10040                           
 10041                           ;tcpv4.c: 665: currentTCB->timeout = ((unsigned long)1*2);
 10042  00130C  ECEC  F011         	call	PL471	;call to abstracted procedure
 10043  001310  EC61  F011         	call	PL429	;call to abstracted procedure
 10044  001314  64F7               	cpfsgt	tblptrh,c
 10045  001316  D003               	bra	u13037
 10046  001318  EC42  F012         	call	PL503	;call to abstracted procedure
 10047  00131C  D004               	bra	u13030
 10048  00131E                     u13037:
 10049  00131E  EC6D  F011         	call	PL431	;call to abstracted procedure
 10050  001322  EC96  F012         	call	PL641	;call to abstracted procedure
 10051  001326                     u13030:
 10052                           
 10053                           ;tcpv4.c: 666: currentTCB->timeoutReloadValue = ((unsigned long)1*2);
 10054  001326  ECF4  F011         	call	PL475	;call to abstracted procedure
 10055  00132A  EC61  F011         	call	PL429	;call to abstracted procedure
 10056  00132E  64F7               	cpfsgt	tblptrh,c
 10057  001330  D003               	bra	u13047
 10058  001332  EC42  F012         	call	PL503	;call to abstracted procedure
 10059  001336  D004               	bra	u13040
 10060  001338                     u13047:
 10061  001338  EC6D  F011         	call	PL431	;call to abstracted procedure
 10062  00133C  EC96  F012         	call	PL641	;call to abstracted procedure
 10063  001340                     u13040:
 10064                           
 10065                           ;tcpv4.c: 667: currentTCB->timeoutsCount = (3u);
 10066  001340  ECD5  F011         	call	PL463	;call to abstracted procedure
 10067  001344  EC61  F011         	call	PL429	;call to abstracted procedure
 10068  001348  64F7               	cpfsgt	tblptrh,c
 10069  00134A  D004               	bra	u13057
 10070  00134C  0E03               	movlw	3
 10071  00134E  6EF5               	movwf	tablat,c
 10072  001350  000C               	tblwt		*
 10073  001352  D004               	bra	u13050
 10074  001354                     u13057:
 10075  001354  EC6D  F011         	call	PL431	;call to abstracted procedure
 10076  001358  0E03               	movlw	3
 10077  00135A  6EEF               	movwf	indf0,c
 10078  00135C                     u13050:
 10079                           
 10080                           ;tcpv4.c: 668: currentTCB->flags = 0x02U | 0x10U;
 10081  00135C  EC72  F011         	call	PL435	;call to abstracted procedure
 10082  001360  EC61  F011         	call	PL429	;call to abstracted procedure
 10083  001364  64F7               	cpfsgt	tblptrh,c
 10084  001366  D004               	bra	u13067
 10085  001368  0E12               	movlw	18
 10086  00136A  6EF5               	movwf	tablat,c
 10087  00136C  000C               	tblwt		*
 10088  00136E  D004               	bra	u13060
 10089  001370                     u13067:
 10090  001370  EC6D  F011         	call	PL431	;call to abstracted procedure
 10091  001374  0E12               	movlw	18
 10092  001376  6EEF               	movwf	indf0,c
 10093  001378                     u13060:
 10094  001378  D77C               	goto	l8937
 10095  00137A                     l8965:
 10096                           
 10097                           ; BSR set to: 1
 10098                           ;tcpv4.c: 676: ;
 10099                           ;tcpv4.c: 678: currentTCB->timeout = 0;
 10100  00137A  0E30               	movlw	48
 10101  00137C  243F               	addwf	_currentTCB,w,c
 10102  00137E  EC61  F011         	call	PL429	;call to abstracted procedure
 10103  001382  64F7               	cpfsgt	tblptrh,c
 10104  001384  D003               	bra	u13077
 10105  001386  ECD9  F011         	call	PL467	;call to abstracted procedure
 10106  00138A  D004               	bra	u13070
 10107  00138C                     u13077:
 10108  00138C  EC6D  F011         	call	PL431	;call to abstracted procedure
 10109  001390  6AEE               	clrf	postinc0,c
 10110  001392  6AEF               	clrf	indf0,c
 10111  001394                     u13070:
 10112                           
 10113                           ;tcpv4.c: 680: if ((currentTCB->localSeqno + 1) == tcpHeader.ackNumber)
 10114  001394  ECF0  F011         	call	PL473	;call to abstracted procedure
 10115  001398  EC61  F011         	call	PL429	;call to abstracted procedure
 10116  00139C  64F7               	cpfsgt	tblptrh,c
 10117  00139E  D003               	bra	u13087
 10118  0013A0  EC76  F011         	call	PL437	;call to abstracted procedure
 10119  0013A4  D004               	bra	u13080
 10120  0013A6                     u13087:
 10121  0013A6  EC6D  F011         	call	PL431	;call to abstracted procedure
 10122  0013AA  EC97  F011         	call	PL445	;call to abstracted procedure
 10123  0013AE                     u13080:
 10124  0013AE  EC89  F011         	call	PL443	;call to abstracted procedure
 10125  0013B2  51D9               	movf	(_tcpHeader+8)& (0+255),w,b
 10126  0013B4  1906               	xorwf	(??_TCP_FiniteStateMachine+6)& (0+255),w,b
 10127  0013B6  E17E               	bnz	l8979
 10128  0013B8  51DA               	movf	(_tcpHeader+9)& (0+255),w,b
 10129  0013BA  1907               	xorwf	(??_TCP_FiniteStateMachine+7)& (0+255),w,b
 10130  0013BC  E17B               	bnz	l8979
 10131  0013BE  51DB               	movf	(_tcpHeader+10)& (0+255),w,b
 10132  0013C0  1908               	xorwf	(??_TCP_FiniteStateMachine+8)& (0+255),w,b
 10133  0013C2  E178               	bnz	l8979
 10134  0013C4  51DC               	movf	(_tcpHeader+11)& (0+255),w,b
 10135  0013C6  1909               	xorwf	(??_TCP_FiniteStateMachine+9)& (0+255),w,b
 10136  0013C8  A4D8               	btfss	status,2,c
 10137  0013CA                     u13091:
 10138  0013CA  D074               	goto	l8979
 10139                           
 10140                           ; BSR set to: 1
 10141                           ;tcpv4.c: 681: {
 10142                           ;tcpv4.c: 683: currentTCB->localSeqno = currentTCB->localSeqno + 1;
 10143  0013CC  0E10               	movlw	16
 10144  0013CE  243F               	addwf	_currentTCB,w,c
 10145  0013D0  EC61  F011         	call	PL429	;call to abstracted procedure
 10146  0013D4  64F7               	cpfsgt	tblptrh,c
 10147  0013D6  D003               	bra	u13107
 10148  0013D8  EC76  F011         	call	PL437	;call to abstracted procedure
 10149  0013DC  D004               	bra	u13100
 10150  0013DE                     u13107:
 10151  0013DE  EC6D  F011         	call	PL431	;call to abstracted procedure
 10152  0013E2  EC97  F011         	call	PL445	;call to abstracted procedure
 10153  0013E6                     u13100:
 10154  0013E6  EC89  F011         	call	PL443	;call to abstracted procedure
 10155  0013EA  0E10               	movlw	16
 10156  0013EC  EC12  F012         	call	PL487	;call to abstracted procedure
 10157  0013F0  64F7               	cpfsgt	tblptrh,c
 10158  0013F2  D003               	bra	u13117
 10159  0013F4  EC05  F012         	call	PL485	;call to abstracted procedure
 10160  0013F8  D004               	bra	u13110
 10161  0013FA                     u13117:
 10162  0013FA  EC6D  F011         	call	PL431	;call to abstracted procedure
 10163  0013FE  EC5A  F012         	call	PL521	;call to abstracted procedure
 10164  001402                     u13110:
 10165                           
 10166                           ;tcpv4.c: 684: currentTCB->flags = 0x10U;
 10167  001402  EC72  F011         	call	PL435	;call to abstracted procedure
 10168  001406  EC61  F011         	call	PL429	;call to abstracted procedure
 10169  00140A  64F7               	cpfsgt	tblptrh,c
 10170  00140C  D004               	bra	u13127
 10171  00140E  0E10               	movlw	16
 10172  001410  6EF5               	movwf	tablat,c
 10173  001412  000C               	tblwt		*
 10174  001414  D004               	bra	u13120
 10175  001416                     u13127:
 10176  001416  EC6D  F011         	call	PL431	;call to abstracted procedure
 10177  00141A  0E10               	movlw	16
 10178  00141C  6EEF               	movwf	indf0,c
 10179  00141E                     u13120:
 10180                           
 10181                           ;tcpv4.c: 687: currentTCB->remoteSeqno = tcpHeader.sequenceNumber;
 10182  00141E  ECD1  F011         	call	PL461	;call to abstracted procedure
 10183  001422  EC61  F011         	call	PL429	;call to abstracted procedure
 10184  001426  64F7               	cpfsgt	tblptrh,c
 10185  001428  D003               	bra	u13137
 10186  00142A  ECF8  F011         	call	PL483	;call to abstracted procedure
 10187  00142E  D004               	bra	u13130
 10188  001430                     u13137:
 10189  001430  EC6D  F011         	call	PL431	;call to abstracted procedure
 10190  001434  EC63  F012         	call	PL523	;call to abstracted procedure
 10191  001438                     u13130:
 10192                           
 10193                           ;tcpv4.c: 689: currentTCB->remoteAck = tcpHeader.sequenceNumber + 1;
 10194  001438  ECDE  F011         	call	PL469	;call to abstracted procedure
 10195  00143C  ECC0  F011         	call	PL449	;call to abstracted procedure
 10196  001440  64F7               	cpfsgt	tblptrh,c
 10197  001442  D005               	bra	u13147
 10198  001444  EC2E  F012         	call	PL499	;call to abstracted procedure
 10199  001448  EC27  F012         	call	PL497	;call to abstracted procedure
 10200  00144C  D004               	bra	u13140
 10201  00144E                     u13147:
 10202  00144E  EC6D  F011         	call	PL431	;call to abstracted procedure
 10203  001452  EC6C  F012         	call	PL537	;call to abstracted procedure
 10204  001456                     u13140:
 10205                           
 10206                           ;tcpv4.c: 691: currentTCB->remoteWnd = ((((uint16_t)tcpHeader.windowSize & (uint16_t)0xF
      +                          F00) >> 8) | (((uint16_t)tcpHeader.windowSize & (uint16_t)0x00FF) << 8));
 10207  001456  ECA0  F011         	call	PL447	;call to abstracted procedure
 10208  00145A  64F7               	cpfsgt	tblptrh,c
 10209  00145C  D003               	bra	u13157
 10210  00145E  EC27  F012         	call	PL497	;call to abstracted procedure
 10211  001462  D004               	bra	u13150
 10212  001464                     u13157:
 10213  001464  EC6D  F011         	call	PL431	;call to abstracted procedure
 10214  001468  EC7E  F012         	call	PL547	;call to abstracted procedure
 10215  00146C                     u13150:
 10216                           
 10217                           ;tcpv4.c: 692: currentTCB->mss = tcpMss;
 10218  00146C  ECCD  F011         	call	PL459	;call to abstracted procedure
 10219  001470  EC61  F011         	call	PL429	;call to abstracted procedure
 10220  001474  64F7               	cpfsgt	tblptrh,c
 10221  001476  D003               	bra	u13167
 10222  001478  EC8F  F012         	call	PL569	;call to abstracted procedure
 10223  00147C  D004               	bra	u13160
 10224  00147E                     u13167:
 10225  00147E  EC6D  F011         	call	PL431	;call to abstracted procedure
 10226  001482  EC9A  F012         	call	PL655	;call to abstracted procedure
 10227  001486                     u13160:
 10228                           
 10229                           ;tcpv4.c: 694: if(TCP_Snd(currentTCB))
 10230  001486  EC48  F012         	call	PL509	;call to abstracted procedure
 10231  00148A  ECB3  F012         	call	_TCP_Snd	;wreg free
 10232  00148E  0900               	iorlw	0
 10233  001490  E102 EF44  F011    	bz	l9263
 10234                           
 10235                           ; BSR set to: 0
 10236                           ;tcpv4.c: 695: {
 10237                           ;tcpv4.c: 696: nextState = ESTABLISHED;
 10238  001496  0E04               	movlw	4
 10239  001498  0101               	movlb	1	; () banked
 10240                           
 10241                           ; BSR set to: 1
 10242                           ;tcpv4.c: 697: currentTCB->socketState = SOCKET_CONNECTED;
 10243  00149A  EC1F  F012         	call	PL491	;call to abstracted procedure
 10244  00149E  EC61  F011         	call	PL429	;call to abstracted procedure
 10245  0014A2  64F7               	cpfsgt	tblptrh,c
 10246  0014A4  D004               	bra	u13187
 10247  0014A6  0E03               	movlw	3
 10248  0014A8  6EF5               	movwf	tablat,c
 10249  0014AA  000C               	tblwt		*
 10250  0014AC  D001               	bra	u13180
 10251  0014AE                     u13187:
 10252  0014AE  D268               	goto	u13677
 10253  0014B0                     u13180:
 10254  0014B0  EF44  F011         	goto	l9263
 10255  0014B4                     l8979:
 10256                           
 10257                           ; BSR set to: 1
 10258                           ;tcpv4.c: 700: else
 10259                           ;tcpv4.c: 701: {
 10260                           ;tcpv4.c: 703: currentTCB->localSeqno = tcpHeader.ackNumber;
 10261  0014B4  0E10               	movlw	16
 10262  0014B6  243F               	addwf	_currentTCB,w,c
 10263  0014B8  EC61  F011         	call	PL429	;call to abstracted procedure
 10264  0014BC  64F7               	cpfsgt	tblptrh,c
 10265  0014BE  D003               	bra	u13197
 10266  0014C0  EC35  F012         	call	PL501	;call to abstracted procedure
 10267  0014C4  D004               	bra	u13190
 10268  0014C6                     u13197:
 10269  0014C6  EC6D  F011         	call	PL431	;call to abstracted procedure
 10270  0014CA  EC75  F012         	call	PL543	;call to abstracted procedure
 10271  0014CE                     u13190:
 10272                           
 10273                           ;tcpv4.c: 704: currentTCB->flags = 0x04U | 0x10U;
 10274  0014CE  EC72  F011         	call	PL435	;call to abstracted procedure
 10275  0014D2  EC61  F011         	call	PL429	;call to abstracted procedure
 10276  0014D6  64F7               	cpfsgt	tblptrh,c
 10277  0014D8  D004               	bra	u13207
 10278  0014DA  0E14               	movlw	20
 10279  0014DC  6EF5               	movwf	tablat,c
 10280  0014DE  000C               	tblwt		*
 10281  0014E0  D004               	bra	u13200
 10282  0014E2                     u13207:
 10283  0014E2  EC6D  F011         	call	PL431	;call to abstracted procedure
 10284  0014E6  0E14               	movlw	20
 10285  0014E8  6EEF               	movwf	indf0,c
 10286  0014EA                     u13200:
 10287                           
 10288                           ;tcpv4.c: 705: if(TCP_Snd(currentTCB))
 10289  0014EA  EC48  F012         	call	PL509	;call to abstracted procedure
 10290  0014EE  ECB3  F012         	call	_TCP_Snd	;wreg free
 10291  0014F2                     L11:
 10292  0014F2  0900               	iorlw	0
 10293  0014F4  E001 D6C4          	bnz	l1202
 10294  0014F8  EF44  F011         	goto	l9263
 10295  0014FC                     l8987:
 10296                           
 10297                           ; BSR set to: 1
 10298                           ;tcpv4.c: 713: ;
 10299                           ;tcpv4.c: 715: currentTCB->timeout = 0;
 10300  0014FC  0E30               	movlw	48
 10301  0014FE  243F               	addwf	_currentTCB,w,c
 10302  001500  EC61  F011         	call	PL429	;call to abstracted procedure
 10303  001504  64F7               	cpfsgt	tblptrh,c
 10304  001506  D003               	bra	u13227
 10305  001508  ECD9  F011         	call	PL467	;call to abstracted procedure
 10306  00150C  D004               	bra	u13220
 10307  00150E                     u13227:
 10308  00150E  EC6D  F011         	call	PL431	;call to abstracted procedure
 10309  001512  6AEE               	clrf	postinc0,c
 10310  001514  6AEF               	clrf	indf0,c
 10311  001516                     u13220:
 10312                           
 10313                           ;tcpv4.c: 717: if ((currentTCB->localSeqno + 1) == tcpHeader.ackNumber)
 10314  001516  ECF0  F011         	call	PL473	;call to abstracted procedure
 10315  00151A  EC61  F011         	call	PL429	;call to abstracted procedure
 10316  00151E  64F7               	cpfsgt	tblptrh,c
 10317  001520  D003               	bra	u13237
 10318  001522  EC76  F011         	call	PL437	;call to abstracted procedure
 10319  001526  D004               	bra	u13230
 10320  001528                     u13237:
 10321  001528  EC6D  F011         	call	PL431	;call to abstracted procedure
 10322  00152C  EC97  F011         	call	PL445	;call to abstracted procedure
 10323  001530                     u13230:
 10324  001530  EC89  F011         	call	PL443	;call to abstracted procedure
 10325  001534  51D9               	movf	(_tcpHeader+8)& (0+255),w,b
 10326  001536  1906               	xorwf	(??_TCP_FiniteStateMachine+6)& (0+255),w,b
 10327  001538  E176               	bnz	l8999
 10328  00153A  51DA               	movf	(_tcpHeader+9)& (0+255),w,b
 10329  00153C  1907               	xorwf	(??_TCP_FiniteStateMachine+7)& (0+255),w,b
 10330  00153E  E173               	bnz	l8999
 10331  001540  51DB               	movf	(_tcpHeader+10)& (0+255),w,b
 10332  001542  1908               	xorwf	(??_TCP_FiniteStateMachine+8)& (0+255),w,b
 10333  001544  E170               	bnz	l8999
 10334  001546  51DC               	movf	(_tcpHeader+11)& (0+255),w,b
 10335  001548  1909               	xorwf	(??_TCP_FiniteStateMachine+9)& (0+255),w,b
 10336  00154A  A4D8               	btfss	status,2,c
 10337  00154C                     u13241:
 10338  00154C  D06C               	goto	l8999
 10339                           
 10340                           ; BSR set to: 1
 10341                           ;tcpv4.c: 718: {
 10342                           ;tcpv4.c: 720: currentTCB->localSeqno = currentTCB->localSeqno + 1;
 10343  00154E  0E10               	movlw	16
 10344  001550  243F               	addwf	_currentTCB,w,c
 10345  001552  EC61  F011         	call	PL429	;call to abstracted procedure
 10346  001556  64F7               	cpfsgt	tblptrh,c
 10347  001558  D003               	bra	u13257
 10348  00155A  EC76  F011         	call	PL437	;call to abstracted procedure
 10349  00155E  D004               	bra	u13250
 10350  001560                     u13257:
 10351  001560  EC6D  F011         	call	PL431	;call to abstracted procedure
 10352  001564  EC97  F011         	call	PL445	;call to abstracted procedure
 10353  001568                     u13250:
 10354  001568  EC89  F011         	call	PL443	;call to abstracted procedure
 10355  00156C  0E10               	movlw	16
 10356  00156E  EC12  F012         	call	PL487	;call to abstracted procedure
 10357  001572  64F7               	cpfsgt	tblptrh,c
 10358  001574  D003               	bra	u13267
 10359  001576  EC05  F012         	call	PL485	;call to abstracted procedure
 10360  00157A  D004               	bra	u13260
 10361  00157C                     u13267:
 10362  00157C  EC6D  F011         	call	PL431	;call to abstracted procedure
 10363  001580  EC5A  F012         	call	PL521	;call to abstracted procedure
 10364  001584                     u13260:
 10365                           
 10366                           ;tcpv4.c: 721: currentTCB->flags = 0x10U;
 10367  001584  EC72  F011         	call	PL435	;call to abstracted procedure
 10368  001588  EC61  F011         	call	PL429	;call to abstracted procedure
 10369  00158C  64F7               	cpfsgt	tblptrh,c
 10370  00158E  D004               	bra	u13277
 10371  001590  0E10               	movlw	16
 10372  001592  6EF5               	movwf	tablat,c
 10373  001594  000C               	tblwt		*
 10374  001596  D004               	bra	u13270
 10375  001598                     u13277:
 10376  001598  EC6D  F011         	call	PL431	;call to abstracted procedure
 10377  00159C  0E10               	movlw	16
 10378  00159E  6EEF               	movwf	indf0,c
 10379  0015A0                     u13270:
 10380                           
 10381                           ;tcpv4.c: 724: currentTCB->remoteSeqno = tcpHeader.sequenceNumber;
 10382  0015A0  ECD1  F011         	call	PL461	;call to abstracted procedure
 10383  0015A4  EC61  F011         	call	PL429	;call to abstracted procedure
 10384  0015A8  64F7               	cpfsgt	tblptrh,c
 10385  0015AA  D003               	bra	u13287
 10386  0015AC  ECF8  F011         	call	PL483	;call to abstracted procedure
 10387  0015B0  D004               	bra	u13280
 10388  0015B2                     u13287:
 10389  0015B2  EC6D  F011         	call	PL431	;call to abstracted procedure
 10390  0015B6  EC63  F012         	call	PL523	;call to abstracted procedure
 10391  0015BA                     u13280:
 10392                           
 10393                           ;tcpv4.c: 725: currentTCB->remoteAck = tcpHeader.sequenceNumber + 1;
 10394  0015BA  ECDE  F011         	call	PL469	;call to abstracted procedure
 10395  0015BE  ECC0  F011         	call	PL449	;call to abstracted procedure
 10396  0015C2  64F7               	cpfsgt	tblptrh,c
 10397  0015C4  D005               	bra	u13297
 10398  0015C6  EC2E  F012         	call	PL499	;call to abstracted procedure
 10399  0015CA  EC27  F012         	call	PL497	;call to abstracted procedure
 10400  0015CE  D004               	bra	u13290
 10401  0015D0                     u13297:
 10402  0015D0  EC6D  F011         	call	PL431	;call to abstracted procedure
 10403  0015D4  EC6C  F012         	call	PL537	;call to abstracted procedure
 10404  0015D8                     u13290:
 10405                           
 10406                           ;tcpv4.c: 727: currentTCB->remoteWnd = ((((uint16_t)tcpHeader.windowSize & (uint16_t)0xF
      +                          F00) >> 8) | (((uint16_t)tcpHeader.windowSize & (uint16_t)0x00FF) << 8));
 10407  0015D8  ECA0  F011         	call	PL447	;call to abstracted procedure
 10408  0015DC  64F7               	cpfsgt	tblptrh,c
 10409  0015DE  D003               	bra	u13307
 10410  0015E0  EC27  F012         	call	PL497	;call to abstracted procedure
 10411  0015E4  D004               	bra	u13300
 10412  0015E6                     u13307:
 10413  0015E6  EC6D  F011         	call	PL431	;call to abstracted procedure
 10414  0015EA  EC7E  F012         	call	PL547	;call to abstracted procedure
 10415  0015EE                     u13300:
 10416                           
 10417                           ;tcpv4.c: 728: currentTCB->mss = tcpMss;
 10418  0015EE  ECCD  F011         	call	PL459	;call to abstracted procedure
 10419  0015F2  EC61  F011         	call	PL429	;call to abstracted procedure
 10420  0015F6  64F7               	cpfsgt	tblptrh,c
 10421  0015F8  D003               	bra	u13317
 10422  0015FA  EC8F  F012         	call	PL569	;call to abstracted procedure
 10423  0015FE  D004               	bra	u13310
 10424  001600                     u13317:
 10425  001600  EC6D  F011         	call	PL431	;call to abstracted procedure
 10426  001604  EC9A  F012         	call	PL655	;call to abstracted procedure
 10427  001608                     u13310:
 10428                           
 10429                           ;tcpv4.c: 730: nextState = ESTABLISHED;
 10430  001608  0E04               	movlw	4
 10431  00160A  0101               	movlb	1	; () banked
 10432                           
 10433                           ; BSR set to: 1
 10434                           ;tcpv4.c: 731: currentTCB->socketState = SOCKET_CONNECTED;
 10435  00160C  EC1F  F012         	call	PL491	;call to abstracted procedure
 10436  001610  EC61  F011         	call	PL429	;call to abstracted procedure
 10437  001614  64F7               	cpfsgt	tblptrh,c
 10438  001616  D004               	bra	u13327
 10439  001618  0E03               	movlw	3
 10440  00161A  6EF5               	movwf	tablat,c
 10441  00161C  000C               	tblwt		*
 10442  00161E  D001               	bra	u13320
 10443  001620                     u13327:
 10444  001620  D1AF               	goto	u13677
 10445  001622                     u13320:
 10446                           
 10447                           ;tcpv4.c: 732: }
 10448  001622  EF44  F011         	goto	l9263
 10449  001626                     l8999:
 10450                           
 10451                           ; BSR set to: 1
 10452                           ;tcpv4.c: 733: else
 10453                           ;tcpv4.c: 734: {
 10454                           ;tcpv4.c: 736: currentTCB->localSeqno = tcpHeader.ackNumber;
 10455  001626  0E10               	movlw	16
 10456  001628  243F               	addwf	_currentTCB,w,c
 10457  00162A  EC61  F011         	call	PL429	;call to abstracted procedure
 10458  00162E  64F7               	cpfsgt	tblptrh,c
 10459  001630  D003               	bra	u13337
 10460  001632  EC35  F012         	call	PL501	;call to abstracted procedure
 10461  001636  D004               	bra	u13330
 10462  001638                     u13337:
 10463  001638  EC6D  F011         	call	PL431	;call to abstracted procedure
 10464  00163C  EC75  F012         	call	PL543	;call to abstracted procedure
 10465  001640                     u13330:
 10466                           
 10467                           ;tcpv4.c: 737: currentTCB->flags = 0x04U;
 10468  001640  EC72  F011         	call	PL435	;call to abstracted procedure
 10469  001644  EC61  F011         	call	PL429	;call to abstracted procedure
 10470  001648  64F7               	cpfsgt	tblptrh,c
 10471  00164A  D004               	bra	u13347
 10472  00164C  0E04               	movlw	4
 10473  00164E  6EF5               	movwf	tablat,c
 10474  001650  000C               	tblwt		*
 10475  001652  D004               	bra	u13340
 10476  001654                     u13347:
 10477  001654  EC6D  F011         	call	PL431	;call to abstracted procedure
 10478  001658  0E04               	movlw	4
 10479  00165A  6EEF               	movwf	indf0,c
 10480  00165C                     u13340:
 10481                           
 10482                           ;tcpv4.c: 738: if(TCP_Snd(currentTCB))
 10483  00165C  EC48  F012         	call	PL509	;call to abstracted procedure
 10484  001660  ECB3  F012         	call	_TCP_Snd	;wreg free
 10485  001664  D746               	goto	L11
 10486  001666                     l9009:
 10487                           
 10488                           ; BSR set to: 1
 10489                           ;tcpv4.c: 752: ;
 10490                           ;tcpv4.c: 755: if (currentTCB->timeoutsCount)
 10491  001666  0E34               	movlw	52
 10492  001668  243F               	addwf	_currentTCB,w,c
 10493  00166A  EC61  F011         	call	PL429	;call to abstracted procedure
 10494  00166E  64F7               	cpfsgt	tblptrh,c
 10495  001670  D003               	bra	u13367
 10496  001672  0008               	tblrd		*
 10497  001674  50F5               	movf	tablat,w,c
 10498  001676  D003               	bra	u13360
 10499  001678                     u13367:
 10500  001678  EC6D  F011         	call	PL431	;call to abstracted procedure
 10501  00167C  50EF               	movf	indf0,w,c
 10502  00167E                     u13360:
 10503  00167E  0900               	iorlw	0
 10504  001680  E037               	bz	l9025
 10505                           
 10506                           ;tcpv4.c: 756: {
 10507                           ;tcpv4.c: 757: if(TCP_Snd(currentTCB))
 10508  001682  EC48  F012         	call	PL509	;call to abstracted procedure
 10509  001686  ECB3  F012         	call	_TCP_Snd	;wreg free
 10510  00168A  0900               	iorlw	0
 10511  00168C  E102 EF44  F011    	bz	l9263
 10512                           
 10513                           ; BSR set to: 0
 10514                           ;tcpv4.c: 758: {
 10515                           ;tcpv4.c: 759: if (currentTCB->flags & 0x04U)
 10516  001692  EC72  F011         	call	PL435	;call to abstracted procedure
 10517  001696  EC61  F011         	call	PL429	;call to abstracted procedure
 10518  00169A  64F7               	cpfsgt	tblptrh,c
 10519  00169C  D003               	bra	u13397
 10520  00169E  0008               	tblrd		*
 10521  0016A0  50F5               	movf	tablat,w,c
 10522  0016A2  D003               	bra	u13390
 10523  0016A4                     u13397:
 10524  0016A4  EC6D  F011         	call	PL431	;call to abstracted procedure
 10525  0016A8  50EF               	movf	indf0,w,c
 10526  0016AA                     u13390:
 10527  0016AA  0101               	movlb	1	; () banked
 10528  0016AC  6F02               	movwf	(??_TCP_FiniteStateMachine+2)& (0+255),b
 10529  0016AE  B502               	btfsc	(??_TCP_FiniteStateMachine+2)& (0+255),2,b
 10530  0016B0  D5E7               	goto	l1202
 10531                           
 10532                           ; BSR set to: 1
 10533                           ;tcpv4.c: 764: if(currentTCB->flags & 0x10U)
 10534  0016B2  0E35               	movlw	53
 10535  0016B4  243F               	addwf	_currentTCB,w,c
 10536  0016B6  EC61  F011         	call	PL429	;call to abstracted procedure
 10537  0016BA  64F7               	cpfsgt	tblptrh,c
 10538  0016BC  D003               	bra	u13417
 10539  0016BE  0008               	tblrd		*
 10540  0016C0  50F5               	movf	tablat,w,c
 10541  0016C2  D003               	bra	u13410
 10542  0016C4                     u13417:
 10543  0016C4  EC6D  F011         	call	PL431	;call to abstracted procedure
 10544  0016C8  50EF               	movf	indf0,w,c
 10545  0016CA                     u13410:
 10546  0016CA  0101               	movlb	1	; () banked
 10547  0016CC  6F02               	movwf	(??_TCP_FiniteStateMachine+2)& (0+255),b
 10548  0016CE  A902               	btfss	(??_TCP_FiniteStateMachine+2)& (0+255),4,b
 10549  0016D0  EF44  F011         	goto	l9263
 10550                           
 10551                           ; BSR set to: 1
 10552                           ;tcpv4.c: 765: {
 10553                           ;tcpv4.c: 766: nextState = ESTABLISHED;
 10554  0016D4  0E04               	movlw	4
 10555                           
 10556                           ; BSR set to: 1
 10557                           ;tcpv4.c: 767: currentTCB->socketState = SOCKET_CONNECTED;
 10558  0016D6  EC1F  F012         	call	PL491	;call to abstracted procedure
 10559  0016DA  EC61  F011         	call	PL429	;call to abstracted procedure
 10560  0016DE  64F7               	cpfsgt	tblptrh,c
 10561  0016E0  D004               	bra	u13437
 10562  0016E2  0E03               	movlw	3
 10563  0016E4  6EF5               	movwf	tablat,c
 10564  0016E6  000C               	tblwt		*
 10565  0016E8  D001               	bra	u13430
 10566  0016EA                     u13437:
 10567  0016EA  D14A               	goto	u13677
 10568  0016EC                     u13430:
 10569  0016EC  EF44  F011         	goto	l9263
 10570  0016F0                     l9025:
 10571                           
 10572                           ;tcpv4.c: 771: {
 10573                           ;tcpv4.c: 773: currentTCB->flags = 0x04U;
 10574  0016F0  EC72  F011         	call	PL435	;call to abstracted procedure
 10575  0016F4  EC61  F011         	call	PL429	;call to abstracted procedure
 10576  0016F8  64F7               	cpfsgt	tblptrh,c
 10577  0016FA  D004               	bra	u13447
 10578  0016FC  0E04               	movlw	4
 10579  0016FE  6EF5               	movwf	tablat,c
 10580  001700  000C               	tblwt		*
 10581  001702  D004               	bra	u13440
 10582  001704                     u13447:
 10583  001704  EC6D  F011         	call	PL431	;call to abstracted procedure
 10584  001708  0E04               	movlw	4
 10585  00170A  6EEF               	movwf	indf0,c
 10586  00170C                     u13440:
 10587                           
 10588                           ;tcpv4.c: 774: if(TCP_Snd(currentTCB))
 10589  00170C  EC48  F012         	call	PL509	;call to abstracted procedure
 10590  001710  ECB3  F012         	call	_TCP_Snd	;wreg free
 10591  001714  D6EE               	goto	L11
 10592  001716                     l9037:
 10593  001716  0101               	movlb	1	; () banked
 10594  001718  510F               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 10595                           
 10596                           ; Switch size 1, requested type "space"
 10597                           ; Number of cases is 7, Range of values is 0 to 12
 10598                           ; switch strategies available:
 10599                           ; Name         Instructions Cycles
 10600                           ; simple_byte           22    12 (average)
 10601                           ;	Chosen strategy is simple_byte
 10602  00171A  E101 D5B1          	bz	l1202
 10603  00171E  0A03               	xorlw	3	; case 3
 10604  001720  E101 D5C0          	bz	l8947
 10605  001724  0A07               	xorlw	7	; case 4
 10606  001726  E101 D6E9          	bz	l8987
 10607  00172A  0A01               	xorlw	1	; case 5
 10608  00172C  E101 D625          	bz	l8965
 10609  001730  0A0C               	xorlw	12	; case 9
 10610  001732  E101 D5A5          	bz	l1202
 10611  001736  0A03               	xorlw	3	; case 10
 10612  001738  E101 D5A2          	bz	l1202
 10613  00173C  0A06               	xorlw	6	; case 12
 10614  00173E  E093               	bz	l9009
 10615  001740  EF44  F011         	goto	l9263
 10616  001744                     l9039:
 10617                           
 10618                           ; BSR set to: 1
 10619                           ;tcpv4.c: 796: ;
 10620                           ;tcpv4.c: 797: if (currentTCB->localPort == tcpHeader.destPort)
 10621  001744  EC9F  F012         	call	PL657	;call to abstracted procedure
 10622  001748  64F7               	cpfsgt	tblptrh,c
 10623  00174A  D003               	bra	u13467
 10624  00174C  ECA7  F012         	call	PL679	;call to abstracted procedure
 10625  001750  D004               	bra	u13460
 10626  001752                     u13467:
 10627  001752  EC6D  F011         	call	PL431	;call to abstracted procedure
 10628  001756  ECAE  F012         	call	PL743	;call to abstracted procedure
 10629  00175A                     u13460:
 10630  00175A  0101               	movlb	1	; () banked
 10631  00175C  51D3               	movf	(_tcpHeader+2)& (0+255),w,b
 10632  00175E  1900               	xorwf	??_TCP_FiniteStateMachine& (0+255),w,b
 10633  001760  E103               	bnz	u13471
 10634  001762  51D4               	movf	(_tcpHeader+3)& (0+255),w,b
 10635  001764  1901               	xorwf	(??_TCP_FiniteStateMachine+1)& (0+255),w,b
 10636  001766  A4D8               	btfss	status,2,c
 10637  001768                     u13471:
 10638  001768  EF44  F011         	goto	l9263
 10639                           
 10640                           ; BSR set to: 1
 10641                           ;tcpv4.c: 798: {
 10642                           ;tcpv4.c: 800: currentTCB->timeout = 0;
 10643  00176C  0E30               	movlw	48
 10644  00176E  243F               	addwf	_currentTCB,w,c
 10645  001770  EC61  F011         	call	PL429	;call to abstracted procedure
 10646  001774  64F7               	cpfsgt	tblptrh,c
 10647  001776  D003               	bra	u13487
 10648  001778  ECD9  F011         	call	PL467	;call to abstracted procedure
 10649  00177C  D004               	bra	u13480
 10650  00177E                     u13487:
 10651  00177E  EC6D  F011         	call	PL431	;call to abstracted procedure
 10652  001782  6AEE               	clrf	postinc0,c
 10653  001784  6AEF               	clrf	indf0,c
 10654  001786                     u13480:
 10655                           
 10656                           ;tcpv4.c: 804: if ((currentTCB->destIP == receivedRemoteAddress) && (currentTCB->destPor
      +                          t == tcpHeader.sourcePort))
 10657  001786  EC8B  F012         	call	PL557	;call to abstracted procedure
 10658  00178A  EC61  F011         	call	PL429	;call to abstracted procedure
 10659  00178E  64F7               	cpfsgt	tblptrh,c
 10660  001790  D003               	bra	u13497
 10661  001792  EC76  F011         	call	PL437	;call to abstracted procedure
 10662  001796  D004               	bra	u13490
 10663  001798                     u13497:
 10664  001798  EC6D  F011         	call	PL431	;call to abstracted procedure
 10665  00179C  EC97  F011         	call	PL445	;call to abstracted procedure
 10666  0017A0                     u13490:
 10667  0017A0  503B               	movf	_receivedRemoteAddress,w,c
 10668  0017A2  0101               	movlb	1	; () banked
 10669  0017A4  1902               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 10670  0017A6  E13D               	bnz	l9049
 10671  0017A8  503C               	movf	_receivedRemoteAddress+1,w,c
 10672  0017AA  1903               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 10673  0017AC  E13A               	bnz	l9049
 10674  0017AE  503D               	movf	_receivedRemoteAddress+2,w,c
 10675  0017B0  1904               	xorwf	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 10676  0017B2  E137               	bnz	l9049
 10677  0017B4  503E               	movf	_receivedRemoteAddress+3,w,c
 10678  0017B6  1905               	xorwf	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 10679  0017B8  E134               	bnz	l9049
 10680                           
 10681                           ; BSR set to: 1
 10682  0017BA  0E06               	movlw	6
 10683  0017BC  243F               	addwf	_currentTCB,w,c
 10684  0017BE  EC61  F011         	call	PL429	;call to abstracted procedure
 10685  0017C2  64F7               	cpfsgt	tblptrh,c
 10686  0017C4  D004               	bra	u13517
 10687  0017C6  0009               	tblrd		*+
 10688  0017C8  EC83  F011         	call	PL439	;call to abstracted procedure
 10689  0017CC  D006               	bra	u13510
 10690  0017CE                     u13517:
 10691  0017CE  EC6D  F011         	call	PL431	;call to abstracted procedure
 10692  0017D2  CFEE F102          	movff	postinc0,??_TCP_FiniteStateMachine+2
 10693  0017D6  CFEE F103          	movff	postinc0,??_TCP_FiniteStateMachine+3
 10694  0017DA                     u13510:
 10695  0017DA  0101               	movlb	1	; () banked
 10696  0017DC  51D1               	movf	_tcpHeader& (0+255),w,b
 10697  0017DE  1902               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 10698  0017E0  E120               	bnz	l9049
 10699  0017E2  51D2               	movf	(_tcpHeader+1)& (0+255),w,b
 10700  0017E4  1903               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 10701  0017E6  E11D               	bnz	l9049
 10702                           
 10703                           ; BSR set to: 1
 10704                           ;tcpv4.c: 805: if ((currentTCB->localSeqno + 1) == tcpHeader.ackNumber)
 10705  0017E8  0E10               	movlw	16
 10706  0017EA  243F               	addwf	_currentTCB,w,c
 10707  0017EC  EC61  F011         	call	PL429	;call to abstracted procedure
 10708  0017F0  64F7               	cpfsgt	tblptrh,c
 10709  0017F2  D003               	bra	u13537
 10710  0017F4  EC76  F011         	call	PL437	;call to abstracted procedure
 10711  0017F8  D004               	bra	u13530
 10712  0017FA                     u13537:
 10713  0017FA  EC6D  F011         	call	PL431	;call to abstracted procedure
 10714  0017FE  EC97  F011         	call	PL445	;call to abstracted procedure
 10715  001802                     u13530:
 10716  001802  EC89  F011         	call	PL443	;call to abstracted procedure
 10717  001806  51D9               	movf	(_tcpHeader+8)& (0+255),w,b
 10718  001808  1906               	xorwf	(??_TCP_FiniteStateMachine+6)& (0+255),w,b
 10719  00180A  E10B               	bnz	l9049
 10720  00180C  51DA               	movf	(_tcpHeader+9)& (0+255),w,b
 10721  00180E  1907               	xorwf	(??_TCP_FiniteStateMachine+7)& (0+255),w,b
 10722  001810  E108               	bnz	l9049
 10723  001812  51DB               	movf	(_tcpHeader+10)& (0+255),w,b
 10724  001814  1908               	xorwf	(??_TCP_FiniteStateMachine+8)& (0+255),w,b
 10725  001816  E105               	bnz	l9049
 10726  001818  51DC               	movf	(_tcpHeader+11)& (0+255),w,b
 10727  00181A  1909               	xorwf	(??_TCP_FiniteStateMachine+9)& (0+255),w,b
 10728  00181C  E102               	bnz	l9049
 10729                           
 10730                           ; BSR set to: 1
 10731                           ;tcpv4.c: 807: nextState = ESTABLISHED;
 10732  00181E  0E04               	movlw	4
 10733  001820  6F10               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 10734  001822                     l9049:
 10735                           
 10736                           ; BSR set to: 1
 10737                           ;tcpv4.c: 808: currentTCB->socketState = SOCKET_CONNECTED;
 10738  001822  0E36               	movlw	54
 10739  001824  243F               	addwf	_currentTCB,w,c
 10740  001826  EC61  F011         	call	PL429	;call to abstracted procedure
 10741  00182A  64F7               	cpfsgt	tblptrh,c
 10742  00182C  D004               	bra	u13557
 10743  00182E  0E03               	movlw	3
 10744  001830  6EF5               	movwf	tablat,c
 10745  001832  000C               	tblwt		*
 10746  001834  D001               	bra	u13550
 10747  001836                     u13557:
 10748  001836  D0A4               	goto	u13677
 10749  001838                     u13550:
 10750  001838  EF44  F011         	goto	l9263
 10751  00183C                     l9051:
 10752                           
 10753                           ; BSR set to: 1
 10754                           ;tcpv4.c: 812: ;
 10755                           ;tcpv4.c: 816: if ((currentTCB->destIP == receivedRemoteAddress) && (currentTCB->destPor
      +                          t == tcpHeader.sourcePort))
 10756  00183C  0E02               	movlw	2
 10757  00183E  243F               	addwf	_currentTCB,w,c
 10758  001840  EC61  F011         	call	PL429	;call to abstracted procedure
 10759  001844  64F7               	cpfsgt	tblptrh,c
 10760  001846  D003               	bra	u13567
 10761  001848  EC76  F011         	call	PL437	;call to abstracted procedure
 10762  00184C  D004               	bra	u13560
 10763  00184E                     u13567:
 10764  00184E  EC6D  F011         	call	PL431	;call to abstracted procedure
 10765  001852  EC97  F011         	call	PL445	;call to abstracted procedure
 10766  001856                     u13560:
 10767  001856  503B               	movf	_receivedRemoteAddress,w,c
 10768  001858  0101               	movlb	1	; () banked
 10769  00185A  1902               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 10770  00185C  E109               	bnz	u13571
 10771  00185E  503C               	movf	_receivedRemoteAddress+1,w,c
 10772  001860  1903               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 10773  001862  E106               	bnz	u13571
 10774  001864  503D               	movf	_receivedRemoteAddress+2,w,c
 10775  001866  1904               	xorwf	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 10776  001868  E103               	bnz	u13571
 10777  00186A  503E               	movf	_receivedRemoteAddress+3,w,c
 10778  00186C  1905               	xorwf	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 10779  00186E  A4D8               	btfss	status,2,c
 10780  001870                     u13571:
 10781  001870  EF44  F011         	goto	l9263
 10782                           
 10783                           ; BSR set to: 1
 10784  001874  0E06               	movlw	6
 10785  001876  243F               	addwf	_currentTCB,w,c
 10786  001878  EC61  F011         	call	PL429	;call to abstracted procedure
 10787  00187C  64F7               	cpfsgt	tblptrh,c
 10788  00187E  D004               	bra	u13587
 10789  001880  0009               	tblrd		*+
 10790  001882  EC83  F011         	call	PL439	;call to abstracted procedure
 10791  001886  D006               	bra	u13580
 10792  001888                     u13587:
 10793  001888  EC6D  F011         	call	PL431	;call to abstracted procedure
 10794  00188C  CFEE F102          	movff	postinc0,??_TCP_FiniteStateMachine+2
 10795  001890  CFEE F103          	movff	postinc0,??_TCP_FiniteStateMachine+3
 10796  001894                     u13580:
 10797  001894  0101               	movlb	1	; () banked
 10798  001896  51D1               	movf	_tcpHeader& (0+255),w,b
 10799  001898  1902               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 10800  00189A  E103               	bnz	u13591
 10801  00189C  51D2               	movf	(_tcpHeader+1)& (0+255),w,b
 10802  00189E  1903               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 10803  0018A0  A4D8               	btfss	status,2,c
 10804  0018A2                     u13591:
 10805  0018A2  EF44  F011         	goto	l9263
 10806                           
 10807                           ; BSR set to: 1
 10808                           ;tcpv4.c: 817: {
 10809                           ;tcpv4.c: 820: if (currentTCB->remoteAck == tcpHeader.sequenceNumber)
 10810  0018A6  0E0C               	movlw	12
 10811  0018A8  243F               	addwf	_currentTCB,w,c
 10812  0018AA  EC61  F011         	call	PL429	;call to abstracted procedure
 10813  0018AE  64F7               	cpfsgt	tblptrh,c
 10814  0018B0  D003               	bra	u13607
 10815  0018B2  EC76  F011         	call	PL437	;call to abstracted procedure
 10816  0018B6  D004               	bra	u13600
 10817  0018B8                     u13607:
 10818  0018B8  EC6D  F011         	call	PL431	;call to abstracted procedure
 10819  0018BC  EC97  F011         	call	PL445	;call to abstracted procedure
 10820  0018C0                     u13600:
 10821  0018C0  0101               	movlb	1	; () banked
 10822  0018C2  51D5               	movf	(_tcpHeader+4)& (0+255),w,b
 10823  0018C4  1902               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 10824  0018C6  E109               	bnz	u13611
 10825  0018C8  51D6               	movf	(_tcpHeader+5)& (0+255),w,b
 10826  0018CA  1903               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 10827  0018CC  E106               	bnz	u13611
 10828  0018CE  51D7               	movf	(_tcpHeader+6)& (0+255),w,b
 10829  0018D0  1904               	xorwf	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 10830  0018D2  E103               	bnz	u13611
 10831  0018D4  51D8               	movf	(_tcpHeader+7)& (0+255),w,b
 10832  0018D6  1905               	xorwf	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 10833  0018D8  A4D8               	btfss	status,2,c
 10834  0018DA                     u13611:
 10835  0018DA  EF44  F011         	goto	l9263
 10836                           
 10837                           ; BSR set to: 1
 10838                           ;tcpv4.c: 821: {
 10839                           ;tcpv4.c: 823: if ((currentTCB->localSeqno + 1) == tcpHeader.ackNumber)
 10840  0018DE  0E10               	movlw	16
 10841  0018E0  243F               	addwf	_currentTCB,w,c
 10842  0018E2  EC61  F011         	call	PL429	;call to abstracted procedure
 10843  0018E6  64F7               	cpfsgt	tblptrh,c
 10844  0018E8  D003               	bra	u13627
 10845  0018EA  EC76  F011         	call	PL437	;call to abstracted procedure
 10846  0018EE  D004               	bra	u13620
 10847  0018F0                     u13627:
 10848  0018F0  EC6D  F011         	call	PL431	;call to abstracted procedure
 10849  0018F4  EC97  F011         	call	PL445	;call to abstracted procedure
 10850  0018F8                     u13620:
 10851  0018F8  EC89  F011         	call	PL443	;call to abstracted procedure
 10852  0018FC  51D9               	movf	(_tcpHeader+8)& (0+255),w,b
 10853  0018FE  1906               	xorwf	(??_TCP_FiniteStateMachine+6)& (0+255),w,b
 10854  001900  E109               	bnz	u13631
 10855  001902  51DA               	movf	(_tcpHeader+9)& (0+255),w,b
 10856  001904  1907               	xorwf	(??_TCP_FiniteStateMachine+7)& (0+255),w,b
 10857  001906  E106               	bnz	u13631
 10858  001908  51DB               	movf	(_tcpHeader+10)& (0+255),w,b
 10859  00190A  1908               	xorwf	(??_TCP_FiniteStateMachine+8)& (0+255),w,b
 10860  00190C  E103               	bnz	u13631
 10861  00190E  51DC               	movf	(_tcpHeader+11)& (0+255),w,b
 10862  001910  1909               	xorwf	(??_TCP_FiniteStateMachine+9)& (0+255),w,b
 10863  001912  A4D8               	btfss	status,2,c
 10864  001914                     u13631:
 10865  001914  EF44  F011         	goto	l9263
 10866                           
 10867                           ; BSR set to: 1
 10868                           ;tcpv4.c: 824: {
 10869                           ;tcpv4.c: 825: currentTCB->localSeqno = currentTCB->localSeqno + 1;
 10870  001918  0E10               	movlw	16
 10871  00191A  243F               	addwf	_currentTCB,w,c
 10872  00191C  EC61  F011         	call	PL429	;call to abstracted procedure
 10873  001920  64F7               	cpfsgt	tblptrh,c
 10874  001922  D003               	bra	u13647
 10875  001924  EC76  F011         	call	PL437	;call to abstracted procedure
 10876  001928  D004               	bra	u13640
 10877  00192A                     u13647:
 10878  00192A  EC6D  F011         	call	PL431	;call to abstracted procedure
 10879  00192E  EC97  F011         	call	PL445	;call to abstracted procedure
 10880  001932                     u13640:
 10881  001932  EC89  F011         	call	PL443	;call to abstracted procedure
 10882  001936  0E10               	movlw	16
 10883  001938  EC12  F012         	call	PL487	;call to abstracted procedure
 10884  00193C  64F7               	cpfsgt	tblptrh,c
 10885  00193E  D003               	bra	u13657
 10886  001940  EC05  F012         	call	PL485	;call to abstracted procedure
 10887  001944  D004               	bra	u13650
 10888  001946                     u13657:
 10889  001946  EC6D  F011         	call	PL431	;call to abstracted procedure
 10890  00194A  EC5A  F012         	call	PL521	;call to abstracted procedure
 10891  00194E                     u13650:
 10892                           
 10893                           ;tcpv4.c: 827: currentTCB->timeout = 0;
 10894  00194E  ECEC  F011         	call	PL471	;call to abstracted procedure
 10895  001952  EC61  F011         	call	PL429	;call to abstracted procedure
 10896  001956  64F7               	cpfsgt	tblptrh,c
 10897  001958  D003               	bra	u13667
 10898  00195A  ECD9  F011         	call	PL467	;call to abstracted procedure
 10899  00195E  D004               	bra	u13660
 10900  001960                     u13667:
 10901  001960  EC6D  F011         	call	PL431	;call to abstracted procedure
 10902  001964  6AEE               	clrf	postinc0,c
 10903  001966  6AEF               	clrf	indf0,c
 10904  001968                     u13660:
 10905                           
 10906                           ;tcpv4.c: 829: nextState = ESTABLISHED;
 10907  001968  0E04               	movlw	4
 10908  00196A  0101               	movlb	1	; () banked
 10909                           
 10910                           ; BSR set to: 1
 10911                           ;tcpv4.c: 830: currentTCB->socketState = SOCKET_CONNECTED;
 10912  00196C  EC1F  F012         	call	PL491	;call to abstracted procedure
 10913  001970  EC61  F011         	call	PL429	;call to abstracted procedure
 10914  001974  64F7               	cpfsgt	tblptrh,c
 10915  001976  D004               	bra	u13677
 10916  001978  0E03               	movlw	3
 10917  00197A  6EF5               	movwf	tablat,c
 10918  00197C  000C               	tblwt		*
 10919  00197E  D004               	bra	u13670
 10920  001980                     u13677:
 10921  001980  EC6D  F011         	call	PL431	;call to abstracted procedure
 10922  001984  0E03               	movlw	3
 10923  001986  6EEF               	movwf	indf0,c
 10924  001988                     u13670:
 10925  001988  EF44  F011         	goto	l9263
 10926  00198C                     l9065:
 10927                           
 10928                           ; BSR set to: 1
 10929                           ;tcpv4.c: 836: ;
 10930                           ;tcpv4.c: 838: currentTCB->timeout = 0;
 10931  00198C  0E30               	movlw	48
 10932  00198E  243F               	addwf	_currentTCB,w,c
 10933  001990  EC61  F011         	call	PL429	;call to abstracted procedure
 10934  001994  64F7               	cpfsgt	tblptrh,c
 10935  001996  D003               	bra	u13687
 10936  001998  ECD9  F011         	call	PL467	;call to abstracted procedure
 10937  00199C  D004               	bra	u13680
 10938  00199E                     u13687:
 10939  00199E  EC6D  F011         	call	PL431	;call to abstracted procedure
 10940  0019A2  6AEE               	clrf	postinc0,c
 10941  0019A4  6AEF               	clrf	indf0,c
 10942  0019A6                     u13680:
 10943                           
 10944                           ;tcpv4.c: 840: currentTCB->flags = 0x01U;
 10945  0019A6  EC72  F011         	call	PL435	;call to abstracted procedure
 10946  0019AA  EC61  F011         	call	PL429	;call to abstracted procedure
 10947  0019AE  64F7               	cpfsgt	tblptrh,c
 10948  0019B0  D004               	bra	u13697
 10949  0019B2  0E01               	movlw	1
 10950  0019B4  6EF5               	movwf	tablat,c
 10951  0019B6  000C               	tblwt		*
 10952  0019B8  D004               	bra	u13690
 10953  0019BA                     u13697:
 10954  0019BA  EC6D  F011         	call	PL431	;call to abstracted procedure
 10955  0019BE  0E01               	movlw	1
 10956  0019C0  6EEF               	movwf	indf0,c
 10957  0019C2                     u13690:
 10958                           
 10959                           ;tcpv4.c: 841: currentTCB->timeout = ((unsigned long)1*2);
 10960  0019C2  ECEC  F011         	call	PL471	;call to abstracted procedure
 10961  0019C6  EC61  F011         	call	PL429	;call to abstracted procedure
 10962  0019CA  64F7               	cpfsgt	tblptrh,c
 10963  0019CC  D003               	bra	u13707
 10964  0019CE  EC42  F012         	call	PL503	;call to abstracted procedure
 10965  0019D2  D004               	bra	u13700
 10966  0019D4                     u13707:
 10967  0019D4  EC6D  F011         	call	PL431	;call to abstracted procedure
 10968  0019D8  EC96  F012         	call	PL641	;call to abstracted procedure
 10969  0019DC                     u13700:
 10970                           
 10971                           ;tcpv4.c: 842: currentTCB->timeoutReloadValue = ((unsigned long)1*2);
 10972  0019DC  ECF4  F011         	call	PL475	;call to abstracted procedure
 10973  0019E0  EC61  F011         	call	PL429	;call to abstracted procedure
 10974  0019E4  64F7               	cpfsgt	tblptrh,c
 10975  0019E6  D003               	bra	u13717
 10976  0019E8  EC42  F012         	call	PL503	;call to abstracted procedure
 10977  0019EC  D004               	bra	u13710
 10978  0019EE                     u13717:
 10979  0019EE  EC6D  F011         	call	PL431	;call to abstracted procedure
 10980  0019F2  EC96  F012         	call	PL641	;call to abstracted procedure
 10981  0019F6                     u13710:
 10982                           
 10983                           ;tcpv4.c: 843: currentTCB->timeoutsCount = (5u);
 10984  0019F6  ECD5  F011         	call	PL463	;call to abstracted procedure
 10985  0019FA  EC61  F011         	call	PL429	;call to abstracted procedure
 10986  0019FE  64F7               	cpfsgt	tblptrh,c
 10987  001A00  D004               	bra	u13727
 10988  001A02  0E05               	movlw	5
 10989  001A04  6EF5               	movwf	tablat,c
 10990  001A06  000C               	tblwt		*
 10991  001A08  D004               	bra	u13720
 10992  001A0A                     u13727:
 10993  001A0A  EC6D  F011         	call	PL431	;call to abstracted procedure
 10994  001A0E  0E05               	movlw	5
 10995  001A10  6EEF               	movwf	indf0,c
 10996  001A12                     u13720:
 10997  001A12                     l9067:
 10998                           
 10999                           ;tcpv4.c: 845: nextState = FIN_WAIT_1;
 11000  001A12  0E05               	movlw	5
 11001  001A14  0101               	movlb	1	; () banked
 11002  001A16  6F10               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 11003  001A18                     l9069:
 11004                           
 11005                           ;tcpv4.c: 846: TCP_Snd(currentTCB);
 11006  001A18  EC48  F012         	call	PL509	;call to abstracted procedure
 11007  001A1C  ECB3  F012         	call	_TCP_Snd	;wreg free
 11008                           
 11009                           ;tcpv4.c: 847: break;
 11010  001A20  EF44  F011         	goto	l9263
 11011  001A24                     l9071:
 11012                           
 11013                           ; BSR set to: 1
 11014                           ;tcpv4.c: 849: case RCV_RST:
 11015                           ;tcpv4.c: 851: ;
 11016                           ;tcpv4.c: 853: if (currentTCB->localPort == tcpHeader.destPort)
 11017  001A24  EC9F  F012         	call	PL657	;call to abstracted procedure
 11018  001A28  64F7               	cpfsgt	tblptrh,c
 11019  001A2A  D003               	bra	u13737
 11020  001A2C  ECA7  F012         	call	PL679	;call to abstracted procedure
 11021  001A30  D004               	bra	u13730
 11022  001A32                     u13737:
 11023  001A32  EC6D  F011         	call	PL431	;call to abstracted procedure
 11024  001A36  ECAE  F012         	call	PL743	;call to abstracted procedure
 11025  001A3A                     u13730:
 11026  001A3A  0101               	movlb	1	; () banked
 11027  001A3C  51D3               	movf	(_tcpHeader+2)& (0+255),w,b
 11028  001A3E  1900               	xorwf	??_TCP_FiniteStateMachine& (0+255),w,b
 11029  001A40  E103               	bnz	u13741
 11030  001A42  51D4               	movf	(_tcpHeader+3)& (0+255),w,b
 11031  001A44  1901               	xorwf	(??_TCP_FiniteStateMachine+1)& (0+255),w,b
 11032  001A46  A4D8               	btfss	status,2,c
 11033  001A48                     u13741:
 11034  001A48  EF44  F011         	goto	l9263
 11035                           
 11036                           ; BSR set to: 1
 11037                           ;tcpv4.c: 854: {
 11038                           ;tcpv4.c: 855: if (currentTCB->remoteAck == tcpHeader.sequenceNumber)
 11039  001A4C  0E0C               	movlw	12
 11040  001A4E  243F               	addwf	_currentTCB,w,c
 11041  001A50  EC61  F011         	call	PL429	;call to abstracted procedure
 11042  001A54  64F7               	cpfsgt	tblptrh,c
 11043  001A56  D003               	bra	u13757
 11044  001A58  EC76  F011         	call	PL437	;call to abstracted procedure
 11045  001A5C  D004               	bra	u13750
 11046  001A5E                     u13757:
 11047  001A5E  EC6D  F011         	call	PL431	;call to abstracted procedure
 11048  001A62  EC97  F011         	call	PL445	;call to abstracted procedure
 11049  001A66                     u13750:
 11050  001A66  0101               	movlb	1	; () banked
 11051  001A68  51D5               	movf	(_tcpHeader+4)& (0+255),w,b
 11052  001A6A  1902               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 11053  001A6C  E109               	bnz	u13761
 11054  001A6E  51D6               	movf	(_tcpHeader+5)& (0+255),w,b
 11055  001A70  1903               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 11056  001A72  E106               	bnz	u13761
 11057  001A74  51D7               	movf	(_tcpHeader+6)& (0+255),w,b
 11058  001A76  1904               	xorwf	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 11059  001A78  E103               	bnz	u13761
 11060  001A7A  51D8               	movf	(_tcpHeader+7)& (0+255),w,b
 11061  001A7C  1905               	xorwf	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 11062  001A7E  A4D8               	btfss	status,2,c
 11063  001A80                     u13761:
 11064  001A80  EF44  F011         	goto	l9263
 11065                           
 11066                           ; BSR set to: 1
 11067                           ;tcpv4.c: 856: {
 11068                           ;tcpv4.c: 857: ;
 11069                           ;tcpv4.c: 858: currentTCB->destIP = 0;
 11070  001A84  0E02               	movlw	2
 11071  001A86  243F               	addwf	_currentTCB,w,c
 11072  001A88  EC61  F011         	call	PL429	;call to abstracted procedure
 11073  001A8C  64F7               	cpfsgt	tblptrh,c
 11074  001A8E  D007               	bra	u13777
 11075  001A90  6AF5               	clrf	tablat,c
 11076  001A92  000D               	tblwt		*+
 11077  001A94  6AF5               	clrf	tablat,c
 11078  001A96  000D               	tblwt		*+
 11079  001A98  ECD9  F011         	call	PL467	;call to abstracted procedure
 11080  001A9C  D004               	bra	u13770
 11081  001A9E                     u13777:
 11082  001A9E  EC6D  F011         	call	PL431	;call to abstracted procedure
 11083  001AA2  EC4D  F012         	call	PL513	;call to abstracted procedure
 11084  001AA6                     u13770:
 11085                           
 11086                           ;tcpv4.c: 859: currentTCB->destPort = 0;
 11087  001AA6  EC23  F012         	call	PL493	;call to abstracted procedure
 11088  001AAA  EC61  F011         	call	PL429	;call to abstracted procedure
 11089  001AAE  64F7               	cpfsgt	tblptrh,c
 11090  001AB0  D003               	bra	u13787
 11091  001AB2  ECD9  F011         	call	PL467	;call to abstracted procedure
 11092  001AB6  D004               	bra	u13780
 11093  001AB8                     u13787:
 11094  001AB8  EC6D  F011         	call	PL431	;call to abstracted procedure
 11095  001ABC  6AEE               	clrf	postinc0,c
 11096  001ABE  6AEF               	clrf	indf0,c
 11097  001AC0                     u13780:
 11098                           
 11099                           ;tcpv4.c: 860: currentTCB->localSeqno = 0;
 11100  001AC0  ECF0  F011         	call	PL473	;call to abstracted procedure
 11101  001AC4  DBFE               	call	PL429	;call to abstracted procedure
 11102  001AC6  64F7               	cpfsgt	tblptrh,c
 11103  001AC8  D007               	bra	u13797
 11104  001ACA  6AF5               	clrf	tablat,c
 11105  001ACC  000D               	tblwt		*+
 11106  001ACE  6AF5               	clrf	tablat,c
 11107  001AD0  000D               	tblwt		*+
 11108  001AD2  ECD9  F011         	call	PL467	;call to abstracted procedure
 11109  001AD6  D004               	bra	u13790
 11110  001AD8                     u13797:
 11111  001AD8  EC6D  F011         	call	PL431	;call to abstracted procedure
 11112  001ADC  EC4D  F012         	call	PL513	;call to abstracted procedure
 11113  001AE0                     u13790:
 11114                           
 11115                           ;tcpv4.c: 861: currentTCB->localLastAck = 0;
 11116  001AE0  EC56  F012         	call	PL519	;call to abstracted procedure
 11117  001AE4  DBEE               	call	PL429	;call to abstracted procedure
 11118  001AE6  64F7               	cpfsgt	tblptrh,c
 11119  001AE8  D007               	bra	u13807
 11120  001AEA  6AF5               	clrf	tablat,c
 11121  001AEC  000D               	tblwt		*+
 11122  001AEE  6AF5               	clrf	tablat,c
 11123  001AF0  000D               	tblwt		*+
 11124  001AF2  ECD9  F011         	call	PL467	;call to abstracted procedure
 11125  001AF6  D003               	bra	u13800
 11126  001AF8                     u13807:
 11127  001AF8  DBF0               	call	PL431	;call to abstracted procedure
 11128  001AFA  EC4D  F012         	call	PL513	;call to abstracted procedure
 11129  001AFE                     u13800:
 11130                           
 11131                           ;tcpv4.c: 862: currentTCB->remoteSeqno = 0;
 11132  001AFE  ECD1  F011         	call	PL461	;call to abstracted procedure
 11133  001B02  DBDF               	call	PL429	;call to abstracted procedure
 11134  001B04  64F7               	cpfsgt	tblptrh,c
 11135  001B06  D007               	bra	u13817
 11136  001B08  6AF5               	clrf	tablat,c
 11137  001B0A  000D               	tblwt		*+
 11138  001B0C  6AF5               	clrf	tablat,c
 11139  001B0E  000D               	tblwt		*+
 11140  001B10  ECD9  F011         	call	PL467	;call to abstracted procedure
 11141  001B14  D003               	bra	u13810
 11142  001B16                     u13817:
 11143  001B16  DBE1               	call	PL431	;call to abstracted procedure
 11144  001B18  EC4D  F012         	call	PL513	;call to abstracted procedure
 11145  001B1C                     u13810:
 11146                           
 11147                           ;tcpv4.c: 863: currentTCB->remoteAck = 0;
 11148  001B1C  EC52  F012         	call	PL517	;call to abstracted procedure
 11149  001B20  DBD0               	call	PL429	;call to abstracted procedure
 11150  001B22  64F7               	cpfsgt	tblptrh,c
 11151  001B24  D007               	bra	u13827
 11152  001B26  6AF5               	clrf	tablat,c
 11153  001B28  000D               	tblwt		*+
 11154  001B2A  6AF5               	clrf	tablat,c
 11155  001B2C  000D               	tblwt		*+
 11156  001B2E  ECD9  F011         	call	PL467	;call to abstracted procedure
 11157  001B32  D003               	bra	u13820
 11158  001B34                     u13827:
 11159  001B34  DBD2               	call	PL431	;call to abstracted procedure
 11160  001B36  EC4D  F012         	call	PL513	;call to abstracted procedure
 11161  001B3A                     u13820:
 11162                           
 11163                           ;tcpv4.c: 864: currentTCB->remoteWnd = 0;
 11164  001B3A  EC87  F012         	call	PL555	;call to abstracted procedure
 11165  001B3E  DBC1               	call	PL429	;call to abstracted procedure
 11166  001B40  64F7               	cpfsgt	tblptrh,c
 11167  001B42  D003               	bra	u13837
 11168  001B44  ECD9  F011         	call	PL467	;call to abstracted procedure
 11169  001B48  D003               	bra	u13830
 11170  001B4A                     u13837:
 11171  001B4A  DBC7               	call	PL431	;call to abstracted procedure
 11172  001B4C  6AEE               	clrf	postinc0,c
 11173  001B4E  6AEF               	clrf	indf0,c
 11174  001B50                     u13830:
 11175                           
 11176                           ;tcpv4.c: 865: currentTCB->mss = 0;
 11177  001B50  ECCD  F011         	call	PL459	;call to abstracted procedure
 11178  001B54  DBB6               	call	PL429	;call to abstracted procedure
 11179  001B56  64F7               	cpfsgt	tblptrh,c
 11180  001B58  D003               	bra	u13847
 11181  001B5A  ECD9  F011         	call	PL467	;call to abstracted procedure
 11182  001B5E  D003               	bra	u13840
 11183  001B60                     u13847:
 11184  001B60  DBBC               	call	PL431	;call to abstracted procedure
 11185  001B62  6AEE               	clrf	postinc0,c
 11186  001B64  6AEF               	clrf	indf0,c
 11187  001B66                     u13840:
 11188  001B66                     l9077:
 11189                           
 11190                           ;tcpv4.c: 867: nextState = LISTEN;
 11191  001B66  0E01               	movlw	1
 11192  001B68  D26B               	goto	L15
 11193  001B6A                     l9079:
 11194                           
 11195                           ; BSR set to: 1
 11196                           ;tcpv4.c: 872: ;
 11197                           ;tcpv4.c: 873: if (currentTCB->timeoutsCount)
 11198  001B6A  0E34               	movlw	52
 11199  001B6C  243F               	addwf	_currentTCB,w,c
 11200  001B6E  DBA9               	call	PL429	;call to abstracted procedure
 11201  001B70  64F7               	cpfsgt	tblptrh,c
 11202  001B72  D003               	bra	u13857
 11203  001B74  0008               	tblrd		*
 11204  001B76  50F5               	movf	tablat,w,c
 11205  001B78  D002               	bra	u13850
 11206  001B7A                     u13857:
 11207  001B7A  DBAF               	call	PL431	;call to abstracted procedure
 11208  001B7C  50EF               	movf	indf0,w,c
 11209  001B7E                     u13850:
 11210  001B7E  0900               	iorlw	0
 11211  001B80  E001 D74A          	bnz	l9069
 11212                           
 11213                           ;tcpv4.c: 877: else
 11214                           ;tcpv4.c: 878: {
 11215                           ;tcpv4.c: 880: currentTCB->flags = 0x04U;
 11216  001B84  DBAF               	call	PL435	;call to abstracted procedure
 11217  001B86  DB9D               	call	PL429	;call to abstracted procedure
 11218  001B88  64F7               	cpfsgt	tblptrh,c
 11219  001B8A  D004               	bra	u13877
 11220  001B8C  0E04               	movlw	4
 11221  001B8E  6EF5               	movwf	tablat,c
 11222  001B90  000C               	tblwt		*
 11223  001B92  D003               	bra	u13870
 11224  001B94                     u13877:
 11225  001B94  DBA2               	call	PL431	;call to abstracted procedure
 11226  001B96  0E04               	movlw	4
 11227  001B98  6EEF               	movwf	indf0,c
 11228  001B9A                     u13870:
 11229                           
 11230                           ;tcpv4.c: 881: if(TCP_Snd(currentTCB))
 11231  001B9A  EC48  F012         	call	PL509	;call to abstracted procedure
 11232  001B9E  ECB3  F012         	call	_TCP_Snd	;wreg free
 11233  001BA2  0900               	iorlw	0
 11234  001BA4  E101 D370          	bz	l9263
 11235                           
 11236                           ; BSR set to: 0
 11237                           ;tcpv4.c: 882: {
 11238                           ;tcpv4.c: 883: currentTCB->destIP = 0;
 11239  001BA8  EC8B  F012         	call	PL557	;call to abstracted procedure
 11240  001BAC  DB8A               	call	PL429	;call to abstracted procedure
 11241  001BAE  64F7               	cpfsgt	tblptrh,c
 11242  001BB0  D006               	bra	u13897
 11243  001BB2  6AF5               	clrf	tablat,c
 11244  001BB4  000D               	tblwt		*+
 11245  001BB6  6AF5               	clrf	tablat,c
 11246  001BB8  000D               	tblwt		*+
 11247  001BBA  DBFB               	call	PL467	;call to abstracted procedure
 11248  001BBC  D003               	bra	u13890
 11249  001BBE                     u13897:
 11250  001BBE  DB8D               	call	PL431	;call to abstracted procedure
 11251  001BC0  EC4D  F012         	call	PL513	;call to abstracted procedure
 11252  001BC4                     u13890:
 11253                           
 11254                           ;tcpv4.c: 884: currentTCB->destPort = 0;
 11255  001BC4  EC23  F012         	call	PL493	;call to abstracted procedure
 11256  001BC8  DB7C               	call	PL429	;call to abstracted procedure
 11257  001BCA  64F7               	cpfsgt	tblptrh,c
 11258  001BCC  D002               	bra	u13907
 11259  001BCE  DBF1               	call	PL467	;call to abstracted procedure
 11260  001BD0  D003               	bra	u13900
 11261  001BD2                     u13907:
 11262  001BD2  DB83               	call	PL431	;call to abstracted procedure
 11263  001BD4  6AEE               	clrf	postinc0,c
 11264  001BD6  6AEF               	clrf	indf0,c
 11265  001BD8                     u13900:
 11266                           
 11267                           ;tcpv4.c: 885: currentTCB->localSeqno = 0;
 11268  001BD8  ECF0  F011         	call	PL473	;call to abstracted procedure
 11269  001BDC  DB72               	call	PL429	;call to abstracted procedure
 11270  001BDE  64F7               	cpfsgt	tblptrh,c
 11271  001BE0  D006               	bra	u13917
 11272  001BE2  6AF5               	clrf	tablat,c
 11273  001BE4  000D               	tblwt		*+
 11274  001BE6  6AF5               	clrf	tablat,c
 11275  001BE8  000D               	tblwt		*+
 11276  001BEA  DBE3               	call	PL467	;call to abstracted procedure
 11277  001BEC  D003               	bra	u13910
 11278  001BEE                     u13917:
 11279  001BEE  DB75               	call	PL431	;call to abstracted procedure
 11280  001BF0  EC4D  F012         	call	PL513	;call to abstracted procedure
 11281  001BF4                     u13910:
 11282                           
 11283                           ;tcpv4.c: 886: currentTCB->localLastAck = 0;
 11284  001BF4  EC56  F012         	call	PL519	;call to abstracted procedure
 11285  001BF8  DB64               	call	PL429	;call to abstracted procedure
 11286  001BFA  64F7               	cpfsgt	tblptrh,c
 11287  001BFC  D006               	bra	u13927
 11288  001BFE  6AF5               	clrf	tablat,c
 11289  001C00  000D               	tblwt		*+
 11290  001C02  6AF5               	clrf	tablat,c
 11291  001C04  000D               	tblwt		*+
 11292  001C06  DBD5               	call	PL467	;call to abstracted procedure
 11293  001C08  D003               	bra	u13920
 11294  001C0A                     u13927:
 11295  001C0A  DB67               	call	PL431	;call to abstracted procedure
 11296  001C0C  EC4D  F012         	call	PL513	;call to abstracted procedure
 11297  001C10                     u13920:
 11298                           
 11299                           ;tcpv4.c: 887: currentTCB->remoteSeqno = 0;
 11300  001C10  DBC8               	call	PL461	;call to abstracted procedure
 11301  001C12  DB57               	call	PL429	;call to abstracted procedure
 11302  001C14  64F7               	cpfsgt	tblptrh,c
 11303  001C16  D006               	bra	u13937
 11304  001C18  6AF5               	clrf	tablat,c
 11305  001C1A  000D               	tblwt		*+
 11306  001C1C  6AF5               	clrf	tablat,c
 11307  001C1E  000D               	tblwt		*+
 11308  001C20  DBC8               	call	PL467	;call to abstracted procedure
 11309  001C22  D003               	bra	u13930
 11310  001C24                     u13937:
 11311  001C24  DB5A               	call	PL431	;call to abstracted procedure
 11312  001C26  EC4D  F012         	call	PL513	;call to abstracted procedure
 11313  001C2A                     u13930:
 11314                           
 11315                           ;tcpv4.c: 888: currentTCB->remoteAck = 0;
 11316  001C2A  EC52  F012         	call	PL517	;call to abstracted procedure
 11317  001C2E  DB49               	call	PL429	;call to abstracted procedure
 11318  001C30  64F7               	cpfsgt	tblptrh,c
 11319  001C32  D006               	bra	u13947
 11320  001C34  6AF5               	clrf	tablat,c
 11321  001C36  000D               	tblwt		*+
 11322  001C38  6AF5               	clrf	tablat,c
 11323  001C3A  000D               	tblwt		*+
 11324  001C3C  DBBA               	call	PL467	;call to abstracted procedure
 11325  001C3E  D003               	bra	u13940
 11326  001C40                     u13947:
 11327  001C40  DB4C               	call	PL431	;call to abstracted procedure
 11328  001C42  EC4D  F012         	call	PL513	;call to abstracted procedure
 11329  001C46                     u13940:
 11330                           
 11331                           ;tcpv4.c: 889: currentTCB->remoteWnd = 0;
 11332  001C46  EC87  F012         	call	PL555	;call to abstracted procedure
 11333  001C4A  DB3B               	call	PL429	;call to abstracted procedure
 11334  001C4C  64F7               	cpfsgt	tblptrh,c
 11335  001C4E  D002               	bra	u13957
 11336  001C50  DBB0               	call	PL467	;call to abstracted procedure
 11337  001C52  D003               	bra	u13950
 11338  001C54                     u13957:
 11339  001C54  DB42               	call	PL431	;call to abstracted procedure
 11340  001C56  6AEE               	clrf	postinc0,c
 11341  001C58  6AEF               	clrf	indf0,c
 11342  001C5A                     u13950:
 11343                           
 11344                           ;tcpv4.c: 890: currentTCB->mss = 0;
 11345  001C5A  DB9F               	call	PL459	;call to abstracted procedure
 11346  001C5C  DB32               	call	PL429	;call to abstracted procedure
 11347  001C5E  64F7               	cpfsgt	tblptrh,c
 11348  001C60  D002               	bra	u13967
 11349  001C62  DBA7               	call	PL467	;call to abstracted procedure
 11350  001C64  D003               	bra	u13960
 11351  001C66                     u13967:
 11352  001C66  DB39               	call	PL431	;call to abstracted procedure
 11353  001C68  6AEE               	clrf	postinc0,c
 11354  001C6A  6AEF               	clrf	indf0,c
 11355  001C6C                     u13960:
 11356  001C6C  D77C               	goto	l9077
 11357  001C6E                     l9093:
 11358  001C6E  0101               	movlb	1	; () banked
 11359  001C70  510F               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 11360                           
 11361                           ; Switch size 1, requested type "space"
 11362                           ; Number of cases is 6, Range of values is 0 to 12
 11363                           ; switch strategies available:
 11364                           ; Name         Instructions Cycles
 11365                           ; simple_byte           19    10 (average)
 11366                           ;	Chosen strategy is simple_byte
 11367  001C72  E101 D68B          	bz	l9065
 11368  001C76  0A04               	xorlw	4	; case 4
 11369  001C78  E101 D5E0          	bz	l9051
 11370  001C7C  0A01               	xorlw	1	; case 5
 11371  001C7E  E101 D561          	bz	l9039
 11372  001C82  0A0C               	xorlw	12	; case 9
 11373  001C84  E101 D6CE          	bz	l9071
 11374  001C88  0A03               	xorlw	3	; case 10
 11375  001C8A  E101 D6CB          	bz	l9071
 11376  001C8E  0A06               	xorlw	6	; case 12
 11377  001C90  E101 D76B          	bz	l9079
 11378  001C94  D2F9               	goto	l9263
 11379  001C96                     l9095:
 11380                           
 11381                           ; BSR set to: 1
 11382                           ;tcpv4.c: 904: ;
 11383                           ;tcpv4.c: 905: if (currentTCB->destIP == receivedRemoteAddress)
 11384  001C96  0E02               	movlw	2
 11385  001C98  243F               	addwf	_currentTCB,w,c
 11386  001C9A  DB13               	call	PL429	;call to abstracted procedure
 11387  001C9C  64F7               	cpfsgt	tblptrh,c
 11388  001C9E  D002               	bra	u13977
 11389  001CA0  DB25               	call	PL437	;call to abstracted procedure
 11390  001CA2  D002               	bra	u13970
 11391  001CA4                     u13977:
 11392  001CA4  DB1A               	call	PL431	;call to abstracted procedure
 11393  001CA6  DB43               	call	PL445	;call to abstracted procedure
 11394  001CA8                     u13970:
 11395  001CA8  503B               	movf	_receivedRemoteAddress,w,c
 11396  001CAA  0101               	movlb	1	; () banked
 11397  001CAC  1902               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 11398  001CAE  E109               	bnz	u13981
 11399  001CB0  503C               	movf	_receivedRemoteAddress+1,w,c
 11400  001CB2  1903               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 11401  001CB4  E106               	bnz	u13981
 11402  001CB6  503D               	movf	_receivedRemoteAddress+2,w,c
 11403  001CB8  1904               	xorwf	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 11404  001CBA  E103               	bnz	u13981
 11405  001CBC  503E               	movf	_receivedRemoteAddress+3,w,c
 11406  001CBE  1905               	xorwf	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 11407  001CC0  A4D8               	btfss	status,2,c
 11408  001CC2                     u13981:
 11409  001CC2  D2E2               	goto	l9263
 11410                           
 11411                           ; BSR set to: 1
 11412                           ;tcpv4.c: 906: {
 11413                           ;tcpv4.c: 910: if (currentTCB->remoteAck == tcpHeader.sequenceNumber)
 11414  001CC4  0E0C               	movlw	12
 11415  001CC6  243F               	addwf	_currentTCB,w,c
 11416  001CC8  DAFC               	call	PL429	;call to abstracted procedure
 11417  001CCA  64F7               	cpfsgt	tblptrh,c
 11418  001CCC  D002               	bra	u13997
 11419  001CCE  DB0E               	call	PL437	;call to abstracted procedure
 11420  001CD0  D002               	bra	u13990
 11421  001CD2                     u13997:
 11422  001CD2  DB03               	call	PL431	;call to abstracted procedure
 11423  001CD4  DB2C               	call	PL445	;call to abstracted procedure
 11424  001CD6                     u13990:
 11425  001CD6  0101               	movlb	1	; () banked
 11426  001CD8  51D5               	movf	(_tcpHeader+4)& (0+255),w,b
 11427  001CDA  1902               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 11428  001CDC  E109               	bnz	u14001
 11429  001CDE  51D6               	movf	(_tcpHeader+5)& (0+255),w,b
 11430  001CE0  1903               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 11431  001CE2  E106               	bnz	u14001
 11432  001CE4  51D7               	movf	(_tcpHeader+6)& (0+255),w,b
 11433  001CE6  1904               	xorwf	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 11434  001CE8  E103               	bnz	u14001
 11435  001CEA  51D8               	movf	(_tcpHeader+7)& (0+255),w,b
 11436  001CEC  1905               	xorwf	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 11437  001CEE  A4D8               	btfss	status,2,c
 11438  001CF0                     u14001:
 11439  001CF0  D2CB               	goto	l9263
 11440                           
 11441                           ; BSR set to: 1
 11442                           ;tcpv4.c: 911: {
 11443                           ;tcpv4.c: 915: if (currentTCB->localLastAck < tcpHeader.ackNumber)
 11444  001CF2  0E14               	movlw	20
 11445  001CF4  243F               	addwf	_currentTCB,w,c
 11446  001CF6  DAE5               	call	PL429	;call to abstracted procedure
 11447  001CF8  64F7               	cpfsgt	tblptrh,c
 11448  001CFA  D002               	bra	u14017
 11449  001CFC  DAF7               	call	PL437	;call to abstracted procedure
 11450  001CFE  D002               	bra	u14010
 11451  001D00                     u14017:
 11452  001D00  DAEC               	call	PL431	;call to abstracted procedure
 11453  001D02  DB15               	call	PL445	;call to abstracted procedure
 11454  001D04                     u14010:
 11455  001D04  0101               	movlb	1	; () banked
 11456  001D06  51D9               	movf	(_tcpHeader+8)& (0+255),w,b
 11457  001D08  5D02               	subwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 11458  001D0A  51DA               	movf	(_tcpHeader+9)& (0+255),w,b
 11459  001D0C  5903               	subwfb	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 11460  001D0E  51DB               	movf	(_tcpHeader+10)& (0+255),w,b
 11461  001D10  5904               	subwfb	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 11462  001D12  51DC               	movf	(_tcpHeader+11)& (0+255),w,b
 11463  001D14  5905               	subwfb	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 11464  001D16  E301 D2B7          	bc	l9263
 11465                           
 11466                           ; BSR set to: 1
 11467                           ;tcpv4.c: 916: {
 11468                           ;tcpv4.c: 918: if ((currentTCB->localSeqno + 1) >= tcpHeader.ackNumber)
 11469  001D1A  0E10               	movlw	16
 11470  001D1C  243F               	addwf	_currentTCB,w,c
 11471  001D1E  DAD1               	call	PL429	;call to abstracted procedure
 11472  001D20  64F7               	cpfsgt	tblptrh,c
 11473  001D22  D002               	bra	u14037
 11474  001D24  DAE3               	call	PL437	;call to abstracted procedure
 11475  001D26  D002               	bra	u14030
 11476  001D28                     u14037:
 11477  001D28  DAD8               	call	PL431	;call to abstracted procedure
 11478  001D2A  DB01               	call	PL445	;call to abstracted procedure
 11479  001D2C                     u14030:
 11480  001D2C  DAF2               	call	PL443	;call to abstracted procedure
 11481  001D2E  51D9               	movf	(_tcpHeader+8)& (0+255),w,b
 11482  001D30  5D06               	subwf	(??_TCP_FiniteStateMachine+6)& (0+255),w,b
 11483  001D32  51DA               	movf	(_tcpHeader+9)& (0+255),w,b
 11484  001D34  5907               	subwfb	(??_TCP_FiniteStateMachine+7)& (0+255),w,b
 11485  001D36  51DB               	movf	(_tcpHeader+10)& (0+255),w,b
 11486  001D38  5908               	subwfb	(??_TCP_FiniteStateMachine+8)& (0+255),w,b
 11487  001D3A  51DC               	movf	(_tcpHeader+11)& (0+255),w,b
 11488  001D3C  5909               	subwfb	(??_TCP_FiniteStateMachine+9)& (0+255),w,b
 11489  001D3E  E201 D0A3          	bnc	l9119
 11490                           
 11491                           ; BSR set to: 1
 11492                           ;tcpv4.c: 919: {
 11493                           ;tcpv4.c: 920: notAckBytes = currentTCB->localSeqno - tcpHeader.ackNumber;
 11494  001D42  0E10               	movlw	16
 11495  001D44  243F               	addwf	_currentTCB,w,c
 11496  001D46  DABD               	call	PL429	;call to abstracted procedure
 11497  001D48  64F7               	cpfsgt	tblptrh,c
 11498  001D4A  D003               	bra	u14057
 11499  001D4C  0009               	tblrd		*+
 11500  001D4E  DADB               	call	PL439	;call to abstracted procedure
 11501  001D50  D005               	bra	u14050
 11502  001D52                     u14057:
 11503  001D52  DAC3               	call	PL431	;call to abstracted procedure
 11504  001D54  CFEE F102          	movff	postinc0,??_TCP_FiniteStateMachine+2
 11505  001D58  CFEE F103          	movff	postinc0,??_TCP_FiniteStateMachine+3
 11506  001D5C                     u14050:
 11507  001D5C  0101               	movlb	1	; () banked
 11508  001D5E  51D9               	movf	(_tcpHeader+8)& (0+255),w,b
 11509  001D60  5D02               	subwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 11510  001D62  6F0D               	movwf	TCP_FiniteStateMachine@notAckBytes& (0+255),b
 11511  001D64  51DA               	movf	(_tcpHeader+9)& (0+255),w,b
 11512  001D66  5903               	subwfb	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 11513  001D68  6F0E               	movwf	(TCP_FiniteStateMachine@notAckBytes+1)& (0+255),b
 11514                           
 11515                           ;tcpv4.c: 923: currentTCB->txBufferPtr = currentTCB->txBufferPtr - notAckBytes;
 11516  001D6A  0E25               	movlw	37
 11517  001D6C  243F               	addwf	_currentTCB,w,c
 11518  001D6E  DAA9               	call	PL429	;call to abstracted procedure
 11519  001D70  64F7               	cpfsgt	tblptrh,c
 11520  001D72  D003               	bra	u14067
 11521  001D74  0009               	tblrd		*+
 11522  001D76  DAC7               	call	PL439	;call to abstracted procedure
 11523  001D78  D005               	bra	u14060
 11524  001D7A                     u14067:
 11525  001D7A  DAAF               	call	PL431	;call to abstracted procedure
 11526  001D7C  CFEE F102          	movff	postinc0,??_TCP_FiniteStateMachine+2
 11527  001D80  CFEE F103          	movff	postinc0,??_TCP_FiniteStateMachine+3
 11528  001D84                     u14060:
 11529  001D84  0101               	movlb	1	; () banked
 11530  001D86  510D               	movf	TCP_FiniteStateMachine@notAckBytes& (0+255),w,b
 11531  001D88  5F02               	subwf	(??_TCP_FiniteStateMachine+2)& (0+255),f,b
 11532  001D8A  510E               	movf	(TCP_FiniteStateMachine@notAckBytes+1)& (0+255),w,b
 11533  001D8C  5B03               	subwfb	(??_TCP_FiniteStateMachine+3)& (0+255),f,b
 11534  001D8E  0E25               	movlw	37
 11535  001D90  DAF7               	call	PL449	;call to abstracted procedure
 11536  001D92  64F7               	cpfsgt	tblptrh,c
 11537  001D94  D002               	bra	u14077
 11538  001D96  DB5B               	call	PL497	;call to abstracted procedure
 11539  001D98  D002               	bra	u14070
 11540  001D9A                     u14077:
 11541  001D9A  DA9F               	call	PL431	;call to abstracted procedure
 11542  001D9C  DBAF               	call	PL547	;call to abstracted procedure
 11543  001D9E                     u14070:
 11544                           
 11545                           ;tcpv4.c: 924: currentTCB->bytesToSend = currentTCB->bytesToSend + notAckBytes;
 11546  001D9E  DBB3               	call	PL553	;call to abstracted procedure
 11547  001DA0  DA90               	call	PL429	;call to abstracted procedure
 11548  001DA2  64F7               	cpfsgt	tblptrh,c
 11549  001DA4  D003               	bra	u14087
 11550  001DA6  0009               	tblrd		*+
 11551  001DA8  DAAE               	call	PL439	;call to abstracted procedure
 11552  001DAA  D005               	bra	u14080
 11553  001DAC                     u14087:
 11554  001DAC  DA96               	call	PL431	;call to abstracted procedure
 11555  001DAE  CFEE F102          	movff	postinc0,??_TCP_FiniteStateMachine+2
 11556  001DB2  CFEE F103          	movff	postinc0,??_TCP_FiniteStateMachine+3
 11557  001DB6                     u14080:
 11558  001DB6  0101               	movlb	1	; () banked
 11559  001DB8  510D               	movf	TCP_FiniteStateMachine@notAckBytes& (0+255),w,b
 11560  001DBA  2702               	addwf	(??_TCP_FiniteStateMachine+2)& (0+255),f,b
 11561  001DBC  510E               	movf	(TCP_FiniteStateMachine@notAckBytes+1)& (0+255),w,b
 11562  001DBE  2303               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),f,b
 11563  001DC0  0E27               	movlw	39
 11564  001DC2  DADE               	call	PL449	;call to abstracted procedure
 11565  001DC4  64F7               	cpfsgt	tblptrh,c
 11566  001DC6  D002               	bra	u14097
 11567  001DC8  DB42               	call	PL497	;call to abstracted procedure
 11568  001DCA  D002               	bra	u14090
 11569  001DCC                     u14097:
 11570  001DCC  DA86               	call	PL431	;call to abstracted procedure
 11571  001DCE  DB96               	call	PL547	;call to abstracted procedure
 11572  001DD0                     u14090:
 11573                           
 11574                           ;tcpv4.c: 927: if(currentTCB->bytesToSend == 0)
 11575  001DD0  DB9A               	call	PL553	;call to abstracted procedure
 11576  001DD2  DA77               	call	PL429	;call to abstracted procedure
 11577  001DD4  64F7               	cpfsgt	tblptrh,c
 11578  001DD6  D003               	bra	u14107
 11579  001DD8  0009               	tblrd		*+
 11580  001DDA  DA95               	call	PL439	;call to abstracted procedure
 11581  001DDC  D005               	bra	u14100
 11582  001DDE                     u14107:
 11583  001DDE  DA7D               	call	PL431	;call to abstracted procedure
 11584  001DE0  CFEE F102          	movff	postinc0,??_TCP_FiniteStateMachine+2
 11585  001DE4  CFEE F103          	movff	postinc0,??_TCP_FiniteStateMachine+3
 11586  001DE8                     u14100:
 11587  001DE8  0101               	movlb	1	; () banked
 11588  001DEA  5102               	movf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 11589  001DEC  1103               	iorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 11590  001DEE  E117               	bnz	l9109
 11591                           
 11592                           ; BSR set to: 1
 11593                           ;tcpv4.c: 928: {
 11594                           ;tcpv4.c: 929: if (currentTCB->txBufState == TX_BUFF_IN_USE)
 11595  001DF0  0E29               	movlw	41
 11596  001DF2  243F               	addwf	_currentTCB,w,c
 11597  001DF4  DA66               	call	PL429	;call to abstracted procedure
 11598  001DF6  64F7               	cpfsgt	tblptrh,c
 11599  001DF8  D003               	bra	u14127
 11600  001DFA  0008               	tblrd		*
 11601  001DFC  50F5               	movf	tablat,w,c
 11602  001DFE  D002               	bra	u14120
 11603  001E00                     u14127:
 11604  001E00  DA6C               	call	PL431	;call to abstracted procedure
 11605  001E02  50EF               	movf	indf0,w,c
 11606  001E04                     u14120:
 11607  001E04  0A02               	xorlw	2
 11608  001E06  E10B               	bnz	l9109
 11609                           
 11610                           ;tcpv4.c: 930: {
 11611                           ;tcpv4.c: 931: currentTCB->txBufState = NO_BUFF;
 11612  001E08  0E29               	movlw	41
 11613  001E0A  243F               	addwf	_currentTCB,w,c
 11614  001E0C  0101               	movlb	1	; () banked
 11615  001E0E  DA59               	call	PL429	;call to abstracted procedure
 11616  001E10  64F7               	cpfsgt	tblptrh,c
 11617  001E12  D003               	bra	u14147
 11618  001E14  6AF5               	clrf	tablat,c
 11619  001E16  000C               	tblwt		*
 11620  001E18  D002               	bra	u14140
 11621  001E1A                     u14147:
 11622  001E1A  DA5F               	call	PL431	;call to abstracted procedure
 11623  001E1C  6AEF               	clrf	indf0,c
 11624  001E1E                     u14140:
 11625  001E1E                     l9109:
 11626                           
 11627                           ;tcpv4.c: 932: }
 11628                           ;tcpv4.c: 933: }
 11629                           ;tcpv4.c: 935: currentTCB->localLastAck = tcpHeader.ackNumber - 1;
 11630  001E1E  EE21  F0D9         	lfsr	2,_tcpHeader+8
 11631  001E22  0EFF               	movlw	255
 11632  001E24  24DE               	addwf	postinc2,w,c
 11633  001E26  0101               	movlb	1	; () banked
 11634  001E28  6F00               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 11635  001E2A  0EFF               	movlw	255
 11636  001E2C  20DE               	addwfc	postinc2,w,c
 11637  001E2E  6F01               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 11638  001E30  0EFF               	movlw	255
 11639  001E32  20DE               	addwfc	postinc2,w,c
 11640  001E34  6F02               	movwf	(??_TCP_FiniteStateMachine+2)& (0+255),b
 11641  001E36  0EFF               	movlw	255
 11642  001E38  20DE               	addwfc	postinc2,w,c
 11643  001E3A  6F03               	movwf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 11644  001E3C  0E14               	movlw	20
 11645  001E3E  DAA0               	call	PL449	;call to abstracted procedure
 11646  001E40  64F7               	cpfsgt	tblptrh,c
 11647  001E42  D003               	bra	u14157
 11648  001E44  DB0B               	call	PL499	;call to abstracted procedure
 11649  001E46  DB03               	call	PL497	;call to abstracted procedure
 11650  001E48  D002               	bra	u14150
 11651  001E4A                     u14157:
 11652  001E4A  DA47               	call	PL431	;call to abstracted procedure
 11653  001E4C  DB45               	call	PL537	;call to abstracted procedure
 11654  001E4E                     u14150:
 11655                           
 11656                           ;tcpv4.c: 936: currentTCB->localSeqno = tcpHeader.ackNumber;
 11657  001E4E  DAC8               	call	PL473	;call to abstracted procedure
 11658  001E50  DA38               	call	PL429	;call to abstracted procedure
 11659  001E52  64F7               	cpfsgt	tblptrh,c
 11660  001E54  D002               	bra	u14167
 11661  001E56  DB09               	call	PL501	;call to abstracted procedure
 11662  001E58  D002               	bra	u14160
 11663  001E5A                     u14167:
 11664  001E5A  DA3F               	call	PL431	;call to abstracted procedure
 11665  001E5C  DB46               	call	PL543	;call to abstracted procedure
 11666  001E5E                     u14160:
 11667                           
 11668                           ;tcpv4.c: 939: if(rcvPayloadLen > 0)
 11669  001E5E  0101               	movlb	1	; () banked
 11670  001E60  51CC               	movf	_rcvPayloadLen& (0+255),w,b
 11671  001E62  11CD               	iorwf	(_rcvPayloadLen+1)& (0+255),w,b
 11672  001E64  E101 D210          	bz	l9263
 11673                           
 11674                           ; BSR set to: 1
 11675                           ;tcpv4.c: 940: {
 11676                           ;tcpv4.c: 941: currentTCB->remoteSeqno = tcpHeader.sequenceNumber;
 11677  001E68  0E08               	movlw	8
 11678  001E6A  243F               	addwf	_currentTCB,w,c
 11679  001E6C  DA2A               	call	PL429	;call to abstracted procedure
 11680  001E6E  64F7               	cpfsgt	tblptrh,c
 11681  001E70  D002               	bra	u14187
 11682  001E72  DABE               	call	PL483	;call to abstracted procedure
 11683  001E74  D002               	bra	u14180
 11684  001E76                     u14187:
 11685  001E76  DA31               	call	PL431	;call to abstracted procedure
 11686  001E78  DB26               	call	PL523	;call to abstracted procedure
 11687  001E7A                     u14180:
 11688                           
 11689                           ;tcpv4.c: 944: TCP_PayloadSave(rcvPayloadLen);
 11690  001E7A  C1CC  F0EE         	movff	_rcvPayloadLen,TCP_PayloadSave@len
 11691  001E7E  C1CD  F0EF         	movff	_rcvPayloadLen+1,TCP_PayloadSave@len+1
 11692  001E82  EC27  F021         	call	_TCP_PayloadSave	;wreg free
 11693  001E86  D200               	goto	l9263
 11694  001E88                     l9119:
 11695                           
 11696                           ; BSR set to: 1
 11697                           ;tcpv4.c: 947: {
 11698                           ;tcpv4.c: 951: currentTCB->flags = 0x04U | 0x10U;
 11699  001E88  0E35               	movlw	53
 11700  001E8A  243F               	addwf	_currentTCB,w,c
 11701  001E8C  DA1A               	call	PL429	;call to abstracted procedure
 11702  001E8E  64F7               	cpfsgt	tblptrh,c
 11703  001E90  D004               	bra	u14197
 11704  001E92  0E14               	movlw	20
 11705  001E94  6EF5               	movwf	tablat,c
 11706  001E96  000C               	tblwt		*
 11707  001E98  D003               	bra	u14190
 11708  001E9A                     u14197:
 11709  001E9A  DA1F               	call	PL431	;call to abstracted procedure
 11710  001E9C  0E14               	movlw	20
 11711  001E9E  6EEF               	movwf	indf0,c
 11712  001EA0                     u14190:
 11713                           
 11714                           ;tcpv4.c: 952: if (TCP_Snd(currentTCB))
 11715  001EA0  DAF7               	call	PL509	;call to abstracted procedure
 11716  001EA2  ECB3  F012         	call	_TCP_Snd	;wreg free
 11717  001EA6  EF79  F00A         	goto	L11
 11718  001EAA                     l9127:
 11719                           
 11720                           ; BSR set to: 1
 11721                           ;tcpv4.c: 963: ;
 11722                           ;tcpv4.c: 964: currentTCB->flags = 0x01U;
 11723  001EAA  0E35               	movlw	53
 11724  001EAC  243F               	addwf	_currentTCB,w,c
 11725  001EAE  DA09               	call	PL429	;call to abstracted procedure
 11726  001EB0  64F7               	cpfsgt	tblptrh,c
 11727  001EB2  D004               	bra	u14217
 11728  001EB4  0E01               	movlw	1
 11729  001EB6  6EF5               	movwf	tablat,c
 11730  001EB8  000C               	tblwt		*
 11731  001EBA  D003               	bra	u14210
 11732  001EBC                     u14217:
 11733  001EBC  DA0E               	call	PL431	;call to abstracted procedure
 11734  001EBE  0E01               	movlw	1
 11735  001EC0  6EEF               	movwf	indf0,c
 11736  001EC2                     u14210:
 11737  001EC2  D5A7               	goto	l9067
 11738  001EC4                     l9133:
 11739                           
 11740                           ; BSR set to: 1
 11741                           ;tcpv4.c: 971: ;
 11742                           ;tcpv4.c: 974: currentTCB->localSeqno = tcpHeader.ackNumber;
 11743  001EC4  0E10               	movlw	16
 11744  001EC6  243F               	addwf	_currentTCB,w,c
 11745  001EC8  D9FC               	call	PL429	;call to abstracted procedure
 11746  001ECA  64F7               	cpfsgt	tblptrh,c
 11747  001ECC  D002               	bra	u14227
 11748  001ECE  DACD               	call	PL501	;call to abstracted procedure
 11749  001ED0  D002               	bra	u14220
 11750  001ED2                     u14227:
 11751  001ED2  DA03               	call	PL431	;call to abstracted procedure
 11752  001ED4  DB0A               	call	PL543	;call to abstracted procedure
 11753  001ED6                     u14220:
 11754                           
 11755                           ;tcpv4.c: 975: currentTCB->remoteAck = currentTCB->remoteAck + 1;
 11756  001ED6  DAE6               	call	PL517	;call to abstracted procedure
 11757  001ED8  D9F4               	call	PL429	;call to abstracted procedure
 11758  001EDA  64F7               	cpfsgt	tblptrh,c
 11759  001EDC  D002               	bra	u14237
 11760  001EDE  DA06               	call	PL437	;call to abstracted procedure
 11761  001EE0  D002               	bra	u14230
 11762  001EE2                     u14237:
 11763  001EE2  D9FB               	call	PL431	;call to abstracted procedure
 11764  001EE4  DA24               	call	PL445	;call to abstracted procedure
 11765  001EE6                     u14230:
 11766  001EE6  DA15               	call	PL443	;call to abstracted procedure
 11767  001EE8  0E0C               	movlw	12
 11768  001EEA  DA9C               	call	PL487	;call to abstracted procedure
 11769  001EEC  64F7               	cpfsgt	tblptrh,c
 11770  001EEE  D002               	bra	u14247
 11771  001EF0  DA8C               	call	PL485	;call to abstracted procedure
 11772  001EF2  D002               	bra	u14240
 11773  001EF4                     u14247:
 11774  001EF4  D9F2               	call	PL431	;call to abstracted procedure
 11775  001EF6  DADE               	call	PL521	;call to abstracted procedure
 11776  001EF8                     u14240:
 11777                           
 11778                           ;tcpv4.c: 977: currentTCB->socketState = SOCKET_CLOSING;
 11779  001EF8  0E36               	movlw	54
 11780  001EFA  243F               	addwf	_currentTCB,w,c
 11781  001EFC  0101               	movlb	1	; () banked
 11782  001EFE  D9E1               	call	PL429	;call to abstracted procedure
 11783  001F00  64F7               	cpfsgt	tblptrh,c
 11784  001F02  D004               	bra	u14257
 11785  001F04  0E04               	movlw	4
 11786  001F06  6EF5               	movwf	tablat,c
 11787  001F08  000C               	tblwt		*
 11788  001F0A  D003               	bra	u14250
 11789  001F0C                     u14257:
 11790  001F0C  D9E6               	call	PL431	;call to abstracted procedure
 11791  001F0E  0E04               	movlw	4
 11792  001F10  6EEF               	movwf	indf0,c
 11793  001F12                     u14250:
 11794                           
 11795                           ;tcpv4.c: 978: currentTCB->timeout = ((unsigned long)1*2);
 11796  001F12  DA62               	call	PL471	;call to abstracted procedure
 11797  001F14  D9D6               	call	PL429	;call to abstracted procedure
 11798  001F16  64F7               	cpfsgt	tblptrh,c
 11799  001F18  D002               	bra	u14267
 11800  001F1A  DAB4               	call	PL503	;call to abstracted procedure
 11801  001F1C  D002               	bra	u14260
 11802  001F1E                     u14267:
 11803  001F1E  D9DD               	call	PL431	;call to abstracted procedure
 11804  001F20  DB05               	call	PL641	;call to abstracted procedure
 11805  001F22                     u14260:
 11806                           
 11807                           ;tcpv4.c: 979: currentTCB->timeoutReloadValue = ((unsigned long)1*2);
 11808  001F22  DA62               	call	PL475	;call to abstracted procedure
 11809  001F24  D9CE               	call	PL429	;call to abstracted procedure
 11810  001F26  64F7               	cpfsgt	tblptrh,c
 11811  001F28  D002               	bra	u14277
 11812  001F2A  DAAC               	call	PL503	;call to abstracted procedure
 11813  001F2C  D002               	bra	u14270
 11814  001F2E                     u14277:
 11815  001F2E  D9D5               	call	PL431	;call to abstracted procedure
 11816  001F30  DAFD               	call	PL641	;call to abstracted procedure
 11817  001F32                     u14270:
 11818                           
 11819                           ;tcpv4.c: 980: currentTCB->timeoutsCount = (5u);
 11820  001F32  DA3B               	call	PL463	;call to abstracted procedure
 11821  001F34  D9C6               	call	PL429	;call to abstracted procedure
 11822  001F36  64F7               	cpfsgt	tblptrh,c
 11823  001F38  D004               	bra	u14287
 11824  001F3A  0E05               	movlw	5
 11825  001F3C  6EF5               	movwf	tablat,c
 11826  001F3E  000C               	tblwt		*
 11827  001F40  D003               	bra	u14280
 11828  001F42                     u14287:
 11829  001F42  D9CB               	call	PL431	;call to abstracted procedure
 11830  001F44  0E05               	movlw	5
 11831  001F46  6EEF               	movwf	indf0,c
 11832  001F48                     u14280:
 11833                           
 11834                           ;tcpv4.c: 982: currentTCB->flags = 0x01U | 0x10U;
 11835  001F48  D9CD               	call	PL435	;call to abstracted procedure
 11836  001F4A  D9BB               	call	PL429	;call to abstracted procedure
 11837  001F4C  64F7               	cpfsgt	tblptrh,c
 11838  001F4E  D004               	bra	u14297
 11839  001F50  0E11               	movlw	17
 11840  001F52  6EF5               	movwf	tablat,c
 11841  001F54  000C               	tblwt		*
 11842  001F56  D003               	bra	u14290
 11843  001F58                     u14297:
 11844  001F58  D9C0               	call	PL431	;call to abstracted procedure
 11845  001F5A  0E11               	movlw	17
 11846  001F5C  6EEF               	movwf	indf0,c
 11847  001F5E                     u14290:
 11848                           
 11849                           ;tcpv4.c: 984: nextState = LAST_ACK;
 11850  001F5E  0E09               	movlw	9
 11851  001F60  D559               	goto	L13
 11852  001F62                     l9141:
 11853                           
 11854                           ; BSR set to: 1
 11855                           ;tcpv4.c: 993: ;
 11856                           ;tcpv4.c: 994: if (currentTCB->timeoutsCount)
 11857  001F62  0E34               	movlw	52
 11858  001F64  243F               	addwf	_currentTCB,w,c
 11859  001F66  D9AD               	call	PL429	;call to abstracted procedure
 11860  001F68  64F7               	cpfsgt	tblptrh,c
 11861  001F6A  D003               	bra	u14307
 11862  001F6C  0008               	tblrd		*
 11863  001F6E  50F5               	movf	tablat,w,c
 11864  001F70  D002               	bra	u14300
 11865  001F72                     u14307:
 11866  001F72  D9B3               	call	PL431	;call to abstracted procedure
 11867  001F74  50EF               	movf	indf0,w,c
 11868  001F76                     u14300:
 11869  001F76  0900               	iorlw	0
 11870  001F78  E001 D54E          	bnz	l9069
 11871                           
 11872                           ;tcpv4.c: 998: {
 11873                           ;tcpv4.c: 1000: currentTCB->flags = 0x04U;
 11874  001F7C  D9B3               	call	PL435	;call to abstracted procedure
 11875  001F7E  D9A1               	call	PL429	;call to abstracted procedure
 11876  001F80  64F7               	cpfsgt	tblptrh,c
 11877  001F82  D004               	bra	u14327
 11878  001F84  0E04               	movlw	4
 11879  001F86  6EF5               	movwf	tablat,c
 11880  001F88  000C               	tblwt		*
 11881  001F8A  D003               	bra	u14320
 11882  001F8C                     u14327:
 11883  001F8C  D9A6               	call	PL431	;call to abstracted procedure
 11884  001F8E  0E04               	movlw	4
 11885  001F90  6EEF               	movwf	indf0,c
 11886  001F92                     u14320:
 11887                           
 11888                           ;tcpv4.c: 1001: if(TCP_Snd(currentTCB))
 11889  001F92  DA7E               	call	PL509	;call to abstracted procedure
 11890  001F94  ECB3  F012         	call	_TCP_Snd	;wreg free
 11891  001F98  EF79  F00A         	goto	L11
 11892  001F9C                     l9155:
 11893  001F9C  0101               	movlb	1	; () banked
 11894  001F9E  510F               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 11895                           
 11896                           ; Switch size 1, requested type "space"
 11897                           ; Number of cases is 7, Range of values is 0 to 12
 11898                           ; switch strategies available:
 11899                           ; Name         Instructions Cycles
 11900                           ; simple_byte           22    12 (average)
 11901                           ;	Chosen strategy is simple_byte
 11902  001FA0  E084               	bz	l9127
 11903  001FA2  0A04               	xorlw	4	; case 4
 11904  001FA4  E101 D677          	bz	l9095
 11905  001FA8  0A02               	xorlw	2	; case 6
 11906  001FAA  E08C               	bz	l9133
 11907  001FAC  0A01               	xorlw	1	; case 7
 11908  001FAE  E08A               	bz	l9133
 11909  001FB0  0A0E               	xorlw	14	; case 9
 11910  001FB2  E102 EF40  F009    	bz	l1202
 11911  001FB8  0A03               	xorlw	3	; case 10
 11912  001FBA  E102 EF40  F009    	bz	l1202
 11913  001FC0  0A06               	xorlw	6	; case 12
 11914  001FC2  E0CF               	bz	l9141
 11915  001FC4  D161               	goto	l9263
 11916  001FC6                     l9157:
 11917                           
 11918                           ; BSR set to: 1
 11919                           ;tcpv4.c: 1016: ;
 11920                           ;tcpv4.c: 1017: currentTCB->flags = 0x10U;
 11921  001FC6  0E35               	movlw	53
 11922  001FC8  243F               	addwf	_currentTCB,w,c
 11923  001FCA  D97B               	call	PL429	;call to abstracted procedure
 11924  001FCC  64F7               	cpfsgt	tblptrh,c
 11925  001FCE  D004               	bra	u14347
 11926  001FD0  0E10               	movlw	16
 11927  001FD2  6EF5               	movwf	tablat,c
 11928  001FD4  000C               	tblwt		*
 11929  001FD6  D003               	bra	u14340
 11930  001FD8                     u14347:
 11931  001FD8  D980               	call	PL431	;call to abstracted procedure
 11932  001FDA  0E10               	movlw	16
 11933  001FDC  6EEF               	movwf	indf0,c
 11934  001FDE                     u14340:
 11935                           
 11936                           ;tcpv4.c: 1018: if(TCP_Snd(currentTCB))
 11937  001FDE  DA58               	call	PL509	;call to abstracted procedure
 11938  001FE0  ECB3  F012         	call	_TCP_Snd	;wreg free
 11939  001FE4  0900               	iorlw	0
 11940  001FE6  E101 D14F          	bz	l9263
 11941                           
 11942                           ; BSR set to: 0
 11943                           ;tcpv4.c: 1019: {
 11944                           ;tcpv4.c: 1020: nextState = CLOSING;
 11945  001FEA  0E08               	movlw	8
 11946  001FEC  D029               	goto	L15
 11947  001FEE                     l9163:
 11948                           
 11949                           ; BSR set to: 1
 11950                           ;tcpv4.c: 1024: ;
 11951                           ;tcpv4.c: 1026: currentTCB->timeout = ((unsigned long)1*2);
 11952  001FEE  0E30               	movlw	48
 11953  001FF0  243F               	addwf	_currentTCB,w,c
 11954  001FF2  D967               	call	PL429	;call to abstracted procedure
 11955  001FF4  64F7               	cpfsgt	tblptrh,c
 11956  001FF6  D002               	bra	u14367
 11957  001FF8  DA45               	call	PL503	;call to abstracted procedure
 11958  001FFA  D002               	bra	u14360
 11959  001FFC                     u14367:
 11960  001FFC  D96E               	call	PL431	;call to abstracted procedure
 11961  001FFE  DA96               	call	PL641	;call to abstracted procedure
 11962  002000                     u14360:
 11963                           
 11964                           ;tcpv4.c: 1027: currentTCB->timeoutsCount = 1;
 11965  002000  D9D4               	call	PL463	;call to abstracted procedure
 11966  002002  D95F               	call	PL429	;call to abstracted procedure
 11967  002004  64F7               	cpfsgt	tblptrh,c
 11968  002006  D004               	bra	u14377
 11969  002008  0E01               	movlw	1
 11970  00200A  6EF5               	movwf	tablat,c
 11971  00200C  000C               	tblwt		*
 11972  00200E  D003               	bra	u14370
 11973  002010                     u14377:
 11974  002010  D964               	call	PL431	;call to abstracted procedure
 11975  002012  0E01               	movlw	1
 11976  002014  6EEF               	movwf	indf0,c
 11977  002016                     u14370:
 11978                           
 11979                           ;tcpv4.c: 1028: nextState = FIN_WAIT_2;
 11980  002016  0E06               	movlw	6
 11981  002018  D013               	goto	L15
 11982  00201A                     l9167:
 11983                           
 11984                           ; BSR set to: 1
 11985                           ;tcpv4.c: 1031: ;
 11986                           ;tcpv4.c: 1032: currentTCB->flags = 0x10U;
 11987  00201A  0E35               	movlw	53
 11988  00201C  243F               	addwf	_currentTCB,w,c
 11989  00201E  D951               	call	PL429	;call to abstracted procedure
 11990  002020  64F7               	cpfsgt	tblptrh,c
 11991  002022  D004               	bra	u14387
 11992  002024  0E10               	movlw	16
 11993  002026  6EF5               	movwf	tablat,c
 11994  002028  000C               	tblwt		*
 11995  00202A  D003               	bra	u14380
 11996  00202C                     u14387:
 11997  00202C  D956               	call	PL431	;call to abstracted procedure
 11998  00202E  0E10               	movlw	16
 11999  002030  6EEF               	movwf	indf0,c
 12000  002032                     u14380:
 12001                           
 12002                           ;tcpv4.c: 1033: if(TCP_Snd(currentTCB))
 12003  002032  DA2E               	call	PL509	;call to abstracted procedure
 12004  002034  ECB3  F012         	call	_TCP_Snd	;wreg free
 12005  002038  0900               	iorlw	0
 12006  00203A  E101 D125          	bz	l9263
 12007  00203E                     l9171:
 12008                           
 12009                           ;tcpv4.c: 1034: {
 12010                           ;tcpv4.c: 1035: nextState = TIME_WAIT;
 12011  00203E  0E0A               	movlw	10
 12012  002040                     L15:
 12013  002040  0101               	movlb	1	; () banked
 12014  002042  6F10               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 12015  002044  D121               	goto	l9263
 12016  002046                     l9173:
 12017                           
 12018                           ; BSR set to: 1
 12019                           ;tcpv4.c: 1039: ;
 12020                           ;tcpv4.c: 1040: if (currentTCB->timeoutsCount)
 12021  002046  0E34               	movlw	52
 12022  002048  243F               	addwf	_currentTCB,w,c
 12023  00204A  D93B               	call	PL429	;call to abstracted procedure
 12024  00204C  64F7               	cpfsgt	tblptrh,c
 12025  00204E  D003               	bra	u14407
 12026  002050  0008               	tblrd		*
 12027  002052  50F5               	movf	tablat,w,c
 12028  002054  D002               	bra	u14400
 12029  002056                     u14407:
 12030  002056  D941               	call	PL431	;call to abstracted procedure
 12031  002058  50EF               	movf	indf0,w,c
 12032  00205A                     u14400:
 12033  00205A  0900               	iorlw	0
 12034  00205C  E001 D4DC          	bnz	l9069
 12035                           
 12036                           ;tcpv4.c: 1044: {
 12037                           ;tcpv4.c: 1046: currentTCB->flags = 0x04U;
 12038  002060  D941               	call	PL435	;call to abstracted procedure
 12039  002062  D92F               	call	PL429	;call to abstracted procedure
 12040  002064  64F7               	cpfsgt	tblptrh,c
 12041  002066  D004               	bra	u14427
 12042  002068  0E04               	movlw	4
 12043  00206A  6EF5               	movwf	tablat,c
 12044  00206C  000C               	tblwt		*
 12045  00206E  D003               	bra	u14420
 12046  002070                     u14427:
 12047  002070  D934               	call	PL431	;call to abstracted procedure
 12048  002072  0E04               	movlw	4
 12049  002074  6EEF               	movwf	indf0,c
 12050  002076                     u14420:
 12051                           
 12052                           ;tcpv4.c: 1047: if(TCP_Snd(currentTCB))
 12053  002076  DA0C               	call	PL509	;call to abstracted procedure
 12054  002078  ECB3  F012         	call	_TCP_Snd	;wreg free
 12055  00207C  EF79  F00A         	goto	L11
 12056  002080                     l9187:
 12057  002080  0101               	movlb	1	; () banked
 12058  002082  510F               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 12059                           
 12060                           ; Switch size 1, requested type "space"
 12061                           ; Number of cases is 4, Range of values is 4 to 12
 12062                           ; switch strategies available:
 12063                           ; Name         Instructions Cycles
 12064                           ; simple_byte           13     7 (average)
 12065                           ;	Chosen strategy is simple_byte
 12066  002084  0A04               	xorlw	4	; case 4
 12067  002086  E0B3               	bz	l9163
 12068  002088  0A02               	xorlw	2	; case 6
 12069  00208A  E09D               	bz	l9157
 12070  00208C  0A01               	xorlw	1	; case 7
 12071  00208E  E0C5               	bz	l9167
 12072  002090  0A0B               	xorlw	11	; case 12
 12073  002092  E0D9               	bz	l9173
 12074  002094  D0F9               	goto	l9263
 12075  002096                     l9189:
 12076                           
 12077                           ; BSR set to: 1
 12078                           ;tcpv4.c: 1062: ;
 12079                           ;tcpv4.c: 1063: if(TCP_Snd(currentTCB))
 12080  002096  D9FC               	call	PL509	;call to abstracted procedure
 12081  002098  ECB3  F012         	call	_TCP_Snd	;wreg free
 12082  00209C  D7CD               	goto	L16
 12083  00209E                     l9193:
 12084                           
 12085                           ; BSR set to: 1
 12086                           ;tcpv4.c: 1069: ;
 12087                           ;tcpv4.c: 1070: if (currentTCB->timeoutsCount)
 12088  00209E  0E34               	movlw	52
 12089  0020A0  243F               	addwf	_currentTCB,w,c
 12090  0020A2  D90F               	call	PL429	;call to abstracted procedure
 12091  0020A4  64F7               	cpfsgt	tblptrh,c
 12092  0020A6  D003               	bra	u14457
 12093  0020A8  0008               	tblrd		*
 12094  0020AA  50F5               	movf	tablat,w,c
 12095  0020AC  D002               	bra	u14450
 12096  0020AE                     u14457:
 12097  0020AE  D915               	call	PL431	;call to abstracted procedure
 12098  0020B0  50EF               	movf	indf0,w,c
 12099  0020B2                     u14450:
 12100  0020B2  0900               	iorlw	0
 12101  0020B4  E001 D4B0          	bnz	l9069
 12102                           
 12103                           ;tcpv4.c: 1074: {
 12104                           ;tcpv4.c: 1076: currentTCB->flags = 0x04U;
 12105  0020B8  D915               	call	PL435	;call to abstracted procedure
 12106  0020BA  D903               	call	PL429	;call to abstracted procedure
 12107  0020BC  64F7               	cpfsgt	tblptrh,c
 12108  0020BE  D004               	bra	u14477
 12109  0020C0  0E04               	movlw	4
 12110  0020C2  6EF5               	movwf	tablat,c
 12111  0020C4  000C               	tblwt		*
 12112  0020C6  D003               	bra	u14470
 12113  0020C8                     u14477:
 12114  0020C8  D908               	call	PL431	;call to abstracted procedure
 12115  0020CA  0E04               	movlw	4
 12116  0020CC  6EEF               	movwf	indf0,c
 12117  0020CE                     u14470:
 12118                           
 12119                           ;tcpv4.c: 1077: if(TCP_Snd(currentTCB))
 12120  0020CE  D9E0               	call	PL509	;call to abstracted procedure
 12121  0020D0  ECB3  F012         	call	_TCP_Snd	;wreg free
 12122  0020D4  EF79  F00A         	goto	L11
 12123  0020D8                     l9207:
 12124  0020D8  0101               	movlb	1	; () banked
 12125  0020DA  510F               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 12126                           
 12127                           ; Switch size 1, requested type "space"
 12128                           ; Number of cases is 2, Range of values is 6 to 12
 12129                           ; switch strategies available:
 12130                           ; Name         Instructions Cycles
 12131                           ; simple_byte            7     4 (average)
 12132                           ;	Chosen strategy is simple_byte
 12133  0020DC  0A06               	xorlw	6	; case 6
 12134  0020DE  E0DB               	bz	l9189
 12135  0020E0  0A0A               	xorlw	10	; case 12
 12136  0020E2  E0DD               	bz	l9193
 12137  0020E4  D0D1               	goto	l9263
 12138  0020E6                     l9213:
 12139  0020E6  0101               	movlb	1	; () banked
 12140  0020E8  510F               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 12141                           
 12142                           ; Switch size 1, requested type "space"
 12143                           ; Number of cases is 1, Range of values is 4 to 4
 12144                           ; switch strategies available:
 12145                           ; Name         Instructions Cycles
 12146                           ; simple_byte            4     3 (average)
 12147                           ;	Chosen strategy is simple_byte
 12148  0020EA  0A04               	xorlw	4	; case 4
 12149  0020EC  E0A8               	bz	l9171
 12150  0020EE  D0CC               	goto	l9263
 12151  0020F0                     l9215:
 12152                           
 12153                           ; BSR set to: 1
 12154                           ;tcpv4.c: 1107: case RCV_ACK:
 12155                           ;tcpv4.c: 1108: if ((currentTCB->destIP == receivedRemoteAddress) &&
 12156                           ;tcpv4.c: 1109: (currentTCB->destPort == tcpHeader.sourcePort))
 12157  0020F0  0E02               	movlw	2
 12158  0020F2  243F               	addwf	_currentTCB,w,c
 12159  0020F4  D8E6               	call	PL429	;call to abstracted procedure
 12160  0020F6  64F7               	cpfsgt	tblptrh,c
 12161  0020F8  D002               	bra	u14497
 12162  0020FA  D8F8               	call	PL437	;call to abstracted procedure
 12163  0020FC  D002               	bra	u14490
 12164  0020FE                     u14497:
 12165  0020FE  D8ED               	call	PL431	;call to abstracted procedure
 12166  002100  D916               	call	PL445	;call to abstracted procedure
 12167  002102                     u14490:
 12168  002102  503B               	movf	_receivedRemoteAddress,w,c
 12169  002104  0101               	movlb	1	; () banked
 12170  002106  1902               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 12171  002108  E109               	bnz	u14501
 12172  00210A  503C               	movf	_receivedRemoteAddress+1,w,c
 12173  00210C  1903               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 12174  00210E  E106               	bnz	u14501
 12175  002110  503D               	movf	_receivedRemoteAddress+2,w,c
 12176  002112  1904               	xorwf	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 12177  002114  E103               	bnz	u14501
 12178  002116  503E               	movf	_receivedRemoteAddress+3,w,c
 12179  002118  1905               	xorwf	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 12180  00211A  A4D8               	btfss	status,2,c
 12181  00211C                     u14501:
 12182  00211C  D0B5               	goto	l9263
 12183                           
 12184                           ; BSR set to: 1
 12185  00211E  0E06               	movlw	6
 12186  002120  243F               	addwf	_currentTCB,w,c
 12187  002122  D8CF               	call	PL429	;call to abstracted procedure
 12188  002124  64F7               	cpfsgt	tblptrh,c
 12189  002126  D003               	bra	u14517
 12190  002128  0009               	tblrd		*+
 12191  00212A  D8ED               	call	PL439	;call to abstracted procedure
 12192  00212C  D005               	bra	u14510
 12193  00212E                     u14517:
 12194  00212E  D8D5               	call	PL431	;call to abstracted procedure
 12195  002130  CFEE F102          	movff	postinc0,??_TCP_FiniteStateMachine+2
 12196  002134  CFEE F103          	movff	postinc0,??_TCP_FiniteStateMachine+3
 12197  002138                     u14510:
 12198  002138  0101               	movlb	1	; () banked
 12199  00213A  51D1               	movf	_tcpHeader& (0+255),w,b
 12200  00213C  1902               	xorwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 12201  00213E  E103               	bnz	u14521
 12202  002140  51D2               	movf	(_tcpHeader+1)& (0+255),w,b
 12203  002142  1903               	xorwf	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 12204  002144  D09E               	goto	L17
 12205  002146                     u14521:
 12206  002146  D0A0               	goto	l9263
 12207  002148                     l9223:
 12208                           
 12209                           ; BSR set to: 1
 12210                           ;tcpv4.c: 1117: if (currentTCB->timeoutsCount)
 12211  002148  0E34               	movlw	52
 12212  00214A  243F               	addwf	_currentTCB,w,c
 12213  00214C  D8BA               	call	PL429	;call to abstracted procedure
 12214  00214E  64F7               	cpfsgt	tblptrh,c
 12215  002150  D003               	bra	u14537
 12216  002152  0008               	tblrd		*
 12217  002154  50F5               	movf	tablat,w,c
 12218  002156  D002               	bra	u14530
 12219  002158                     u14537:
 12220  002158  D8C0               	call	PL431	;call to abstracted procedure
 12221  00215A  50EF               	movf	indf0,w,c
 12222  00215C                     u14530:
 12223  00215C  0900               	iorlw	0
 12224  00215E  E001 D45B          	bnz	l9069
 12225                           
 12226                           ;tcpv4.c: 1121: {
 12227                           ;tcpv4.c: 1123: currentTCB->flags = 0x04U;
 12228  002162  D8C0               	call	PL435	;call to abstracted procedure
 12229  002164  D8AE               	call	PL429	;call to abstracted procedure
 12230  002166  64F7               	cpfsgt	tblptrh,c
 12231  002168  D004               	bra	u14557
 12232  00216A  0E04               	movlw	4
 12233  00216C  6EF5               	movwf	tablat,c
 12234  00216E  000C               	tblwt		*
 12235  002170  D003               	bra	u14550
 12236  002172                     u14557:
 12237  002172  D8B3               	call	PL431	;call to abstracted procedure
 12238  002174  0E04               	movlw	4
 12239  002176  6EEF               	movwf	indf0,c
 12240  002178                     u14550:
 12241                           
 12242                           ;tcpv4.c: 1124: if(TCP_Snd(currentTCB))
 12243  002178  D98B               	call	PL509	;call to abstracted procedure
 12244  00217A  ECB3  F012         	call	_TCP_Snd	;wreg free
 12245  00217E  EF79  F00A         	goto	L11
 12246  002182                     l9237:
 12247  002182  0101               	movlb	1	; () banked
 12248  002184  510F               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 12249                           
 12250                           ; Switch size 1, requested type "space"
 12251                           ; Number of cases is 3, Range of values is 4 to 12
 12252                           ; switch strategies available:
 12253                           ; Name         Instructions Cycles
 12254                           ; simple_byte           10     6 (average)
 12255                           ;	Chosen strategy is simple_byte
 12256  002186  0A04               	xorlw	4	; case 4
 12257  002188  E0B3               	bz	l9215
 12258  00218A  0A03               	xorlw	3	; case 7
 12259  00218C  E0B1               	bz	l9215
 12260  00218E  0A0B               	xorlw	11	; case 12
 12261  002190  E0DB               	bz	l9223
 12262  002192  D07A               	goto	l9263
 12263  002194                     l9241:
 12264                           
 12265                           ; BSR set to: 1
 12266                           ;tcpv4.c: 1143: ;
 12267                           ;tcpv4.c: 1145: currentTCB->timeout = ((unsigned long)1*2);
 12268  002194  0E30               	movlw	48
 12269  002196  243F               	addwf	_currentTCB,w,c
 12270  002198  D894               	call	PL429	;call to abstracted procedure
 12271  00219A  64F7               	cpfsgt	tblptrh,c
 12272  00219C  D002               	bra	u14577
 12273  00219E  D972               	call	PL503	;call to abstracted procedure
 12274  0021A0  D002               	bra	u14570
 12275  0021A2                     u14577:
 12276  0021A2  D89B               	call	PL431	;call to abstracted procedure
 12277  0021A4  D9C3               	call	PL641	;call to abstracted procedure
 12278  0021A6                     u14570:
 12279                           
 12280                           ;tcpv4.c: 1146: currentTCB->timeoutReloadValue = ((unsigned long)1*2);
 12281  0021A6  D920               	call	PL475	;call to abstracted procedure
 12282  0021A8  D88C               	call	PL429	;call to abstracted procedure
 12283  0021AA  64F7               	cpfsgt	tblptrh,c
 12284  0021AC  D002               	bra	u14587
 12285  0021AE  D96A               	call	PL503	;call to abstracted procedure
 12286  0021B0  D002               	bra	u14580
 12287  0021B2                     u14587:
 12288  0021B2  D893               	call	PL431	;call to abstracted procedure
 12289  0021B4  D9BB               	call	PL641	;call to abstracted procedure
 12290  0021B6                     u14580:
 12291                           
 12292                           ;tcpv4.c: 1147: currentTCB->timeoutsCount = (3u);
 12293  0021B6  D8F9               	call	PL463	;call to abstracted procedure
 12294  0021B8  D884               	call	PL429	;call to abstracted procedure
 12295  0021BA  64F7               	cpfsgt	tblptrh,c
 12296  0021BC  D004               	bra	u14597
 12297  0021BE  0E03               	movlw	3
 12298  0021C0  6EF5               	movwf	tablat,c
 12299  0021C2  000C               	tblwt		*
 12300  0021C4  D003               	bra	u14590
 12301  0021C6                     u14597:
 12302  0021C6  D889               	call	PL431	;call to abstracted procedure
 12303  0021C8  0E03               	movlw	3
 12304  0021CA  6EEF               	movwf	indf0,c
 12305  0021CC                     u14590:
 12306                           
 12307                           ;tcpv4.c: 1148: currentTCB->flags = 0x02U;
 12308  0021CC  D88B               	call	PL435	;call to abstracted procedure
 12309  0021CE  D879               	call	PL429	;call to abstracted procedure
 12310  0021D0  64F7               	cpfsgt	tblptrh,c
 12311  0021D2  D004               	bra	u14607
 12312  0021D4  0E02               	movlw	2
 12313  0021D6  6EF5               	movwf	tablat,c
 12314  0021D8  000C               	tblwt		*
 12315  0021DA  D003               	bra	u14600
 12316  0021DC                     u14607:
 12317  0021DC  D87E               	call	PL431	;call to abstracted procedure
 12318  0021DE  0E02               	movlw	2
 12319  0021E0  6EEF               	movwf	indf0,c
 12320  0021E2                     u14600:
 12321                           
 12322                           ;tcpv4.c: 1149: TCP_Snd(currentTCB);
 12323  0021E2  D956               	call	PL509	;call to abstracted procedure
 12324  0021E4  ECB3  F012         	call	_TCP_Snd	;wreg free
 12325                           
 12326                           ; BSR set to: 0
 12327                           ;tcpv4.c: 1150: nextState = SYN_SENT;
 12328  0021E8  0E02               	movlw	2
 12329  0021EA  0101               	movlb	1	; () banked
 12330  0021EC  6F10               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 12331                           
 12332                           ; BSR set to: 1
 12333                           ;tcpv4.c: 1151: ret = 1;
 12334  0021EE  0E01               	movlw	1
 12335  0021F0  6F0C               	movwf	TCP_FiniteStateMachine@ret& (0+255),b
 12336                           
 12337                           ;tcpv4.c: 1152: break;
 12338  0021F2  D04A               	goto	l9263
 12339  0021F4                     l9249:
 12340                           
 12341                           ; BSR set to: 1
 12342                           ;tcpv4.c: 1154: ;
 12343                           ;tcpv4.c: 1155: currentTCB->destIP = 0;
 12344  0021F4  0E02               	movlw	2
 12345  0021F6  243F               	addwf	_currentTCB,w,c
 12346  0021F8  D864               	call	PL429	;call to abstracted procedure
 12347  0021FA  64F7               	cpfsgt	tblptrh,c
 12348  0021FC  D006               	bra	u14617
 12349  0021FE  6AF5               	clrf	tablat,c
 12350  002200  000D               	tblwt		*+
 12351  002202  6AF5               	clrf	tablat,c
 12352  002204  000D               	tblwt		*+
 12353  002206  D8D5               	call	PL467	;call to abstracted procedure
 12354  002208  D002               	bra	u14610
 12355  00220A                     u14617:
 12356  00220A  D867               	call	PL431	;call to abstracted procedure
 12357  00220C  D946               	call	PL513	;call to abstracted procedure
 12358  00220E                     u14610:
 12359                           
 12360                           ;tcpv4.c: 1156: currentTCB->destPort = 0;
 12361  00220E  D91B               	call	PL493	;call to abstracted procedure
 12362  002210  D858               	call	PL429	;call to abstracted procedure
 12363  002212  64F7               	cpfsgt	tblptrh,c
 12364  002214  D002               	bra	u14627
 12365  002216  D8CD               	call	PL467	;call to abstracted procedure
 12366  002218  D003               	bra	u14620
 12367  00221A                     u14627:
 12368  00221A  D85F               	call	PL431	;call to abstracted procedure
 12369  00221C  6AEE               	clrf	postinc0,c
 12370  00221E  6AEF               	clrf	indf0,c
 12371  002220                     u14620:
 12372                           
 12373                           ;tcpv4.c: 1157: nextState = LISTEN;
 12374  002220  0E01               	movlw	1
 12375  002222  D7E3               	goto	L18
 12376  002224                     l9257:
 12377  002224  0101               	movlb	1	; () banked
 12378  002226  510F               	movf	TCP_FiniteStateMachine@event& (0+255),w,b
 12379                           
 12380                           ; Switch size 1, requested type "space"
 12381                           ; Number of cases is 2, Range of values is 1 to 2
 12382                           ; switch strategies available:
 12383                           ; Name         Instructions Cycles
 12384                           ; simple_byte            7     4 (average)
 12385                           ;	Chosen strategy is simple_byte
 12386  002228  0A01               	xorlw	1	; case 1
 12387  00222A  E0B4               	bz	l9241
 12388  00222C  0A03               	xorlw	3	; case 2
 12389  00222E  E0E2               	bz	l9249
 12390  002230  D02B               	goto	l9263
 12391  002232                     l9261:
 12392                           
 12393                           ; BSR set to: 1
 12394  002232  0E2A               	movlw	42
 12395  002234  243F               	addwf	_currentTCB,w,c
 12396  002236  D845               	call	PL429	;call to abstracted procedure
 12397  002238  64F7               	cpfsgt	tblptrh,c
 12398  00223A  D003               	bra	u14637
 12399  00223C  0008               	tblrd		*
 12400  00223E  50F5               	movf	tablat,w,c
 12401  002240  D002               	bra	u14630
 12402  002242                     u14637:
 12403  002242  D84B               	call	PL431	;call to abstracted procedure
 12404  002244  50EF               	movf	indf0,w,c
 12405  002246                     u14630:
 12406                           
 12407                           ; Switch size 1, requested type "space"
 12408                           ; Number of cases is 11, Range of values is 0 to 10
 12409                           ; switch strategies available:
 12410                           ; Name         Instructions Cycles
 12411                           ; simple_byte           34    18 (average)
 12412                           ;	Chosen strategy is simple_byte
 12413  002246  0A00               	xorlw	0	; case 0
 12414  002248  E0ED               	bz	l9257
 12415  00224A  0A01               	xorlw	1	; case 1
 12416  00224C  E102 EF4A  F009    	bz	l8945
 12417  002252  0A03               	xorlw	3	; case 2
 12418  002254  E102 EF8B  F00B    	bz	l9037
 12419  00225A  0A01               	xorlw	1	; case 3
 12420  00225C  E101 D507          	bz	l9093
 12421  002260  0A07               	xorlw	7	; case 4
 12422  002262  E101 D69B          	bz	l9155
 12423  002266  0A01               	xorlw	1	; case 5
 12424  002268  E101 D70A          	bz	l9187
 12425  00226C  0A03               	xorlw	3	; case 6
 12426  00226E  E101 D733          	bz	l9207
 12427  002272  0A01               	xorlw	1	; case 7
 12428  002274  E009               	bz	l9263
 12429  002276  0A0F               	xorlw	15	; case 8
 12430  002278  E101 D735          	bz	l9213
 12431  00227C  0A01               	xorlw	1	; case 9
 12432  00227E  E081               	bz	l9237
 12433  002280  0A03               	xorlw	3	; case 10
 12434  002282                     L17:
 12435  002282  E102 EF40  F009    	bz	l1202
 12436  002288                     l9263:
 12437                           
 12438                           ;tcpv4.c: 1167: currentTCB->connectionEvent = NOP;
 12439  002288  0E2B               	movlw	43
 12440  00228A  243F               	addwf	_currentTCB,w,c
 12441  00228C  0101               	movlb	1	; () banked
 12442  00228E  D819               	call	PL429	;call to abstracted procedure
 12443  002290  64F7               	cpfsgt	tblptrh,c
 12444  002292  D004               	bra	u14647
 12445  002294  0E0D               	movlw	13
 12446  002296  6EF5               	movwf	tablat,c
 12447  002298  000C               	tblwt		*
 12448  00229A  D003               	bra	u14640
 12449  00229C                     u14647:
 12450  00229C  D81E               	call	PL431	;call to abstracted procedure
 12451  00229E  0E0D               	movlw	13
 12452  0022A0  6EEF               	movwf	indf0,c
 12453  0022A2                     u14640:
 12454                           
 12455                           ;tcpv4.c: 1168: currentTCB->fsmState = nextState;
 12456  0022A2  0E2A               	movlw	42
 12457  0022A4  243F               	addwf	_currentTCB,w,c
 12458  0022A6  0101               	movlb	1	; () banked
 12459  0022A8  D80C               	call	PL429	;call to abstracted procedure
 12460  0022AA  64F7               	cpfsgt	tblptrh,c
 12461  0022AC  D004               	bra	u14657
 12462  0022AE  C110  FFF5         	movff	TCP_FiniteStateMachine@nextState,tablat
 12463  0022B2  000C               	tblwt		*
 12464  0022B4  D003               	bra	u14650
 12465  0022B6                     u14657:
 12466  0022B6  D811               	call	PL431	;call to abstracted procedure
 12467  0022B8  C110  FFEF         	movff	TCP_FiniteStateMachine@nextState,indf0
 12468  0022BC                     u14650:
 12469                           
 12470                           ;tcpv4.c: 1169: return ret;
 12471  0022BC  0101               	movlb	1	; () banked
 12472  0022BE  510C               	movf	TCP_FiniteStateMachine@ret& (0+255),w,b
 12473                           
 12474                           ; BSR set to: 1
 12475  0022C0  0012               	return		;funcret
 12476  0022C2                     __end_of_TCP_FiniteStateMachine:
 12477                           	opt stack 0
 12478  0022C2                     PL429:
 12479                           	opt stack 14
 12480  0022C2  6F00               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 12481  0022C4  0E00               	movlw	0
 12482  0022C6  2040               	addwfc	_currentTCB+1,w,c
 12483  0022C8  6F01               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 12484  0022CA  C100  FFF6         	movff	??_TCP_FiniteStateMachine,tblptrl
 12485  0022CE  C101  FFF7         	movff	??_TCP_FiniteStateMachine+1,tblptrh
 12486  0022D2  0E00               	movlw	low (__smallconst shr (0+16))
 12487  0022D4  6EF8               	movwf	tblptru,c
 12488  0022D6  0E0F               	movlw	(high __ramtop+-1)
 12489  0022D8  0012               	return	
 12490  0022DA                     __end_ofPL429:
 12491                           	opt stack 0
 12492  0022DA                     PL431:
 12493                           	opt stack 20
 12494  0022DA  CFF6 FFE9          	movff	tblptrl,fsr0l
 12495  0022DE  CFF7 FFEA          	movff	tblptrh,fsr0h
 12496  0022E2  0012               	return	
 12497  0022E4                     __end_ofPL431:
 12498                           	opt stack 0
 12499  0022E4                     PL435:
 12500                           	opt stack 14
 12501  0022E4  0E35               	movlw	53
 12502  0022E6  243F               	addwf	_currentTCB,w,c
 12503  0022E8  0101               	movlb	1	; () banked
 12504  0022EA  0012               	return	
 12505  0022EC                     __end_ofPL435:
 12506                           	opt stack 0
 12507  0022EC                     PL437:
 12508                           	opt stack 14
 12509  0022EC  0009               	tblrd		*+
 12510  0022EE  CFF5 F102          	movff	tablat,??_TCP_FiniteStateMachine+2
 12511  0022F2  0009               	tblrd		*+
 12512  0022F4  CFF5 F103          	movff	tablat,??_TCP_FiniteStateMachine+3
 12513  0022F8  0009               	tblrd		*+
 12514  0022FA  CFF5 F104          	movff	tablat,??_TCP_FiniteStateMachine+4
 12515  0022FE  0009               	tblrd		*+
 12516  002300  CFF5 F105          	movff	tablat,??_TCP_FiniteStateMachine+5
 12517  002304  0012               	return	
 12518  002306                     __end_ofPL437:
 12519                           	opt stack 0
 12520  002306                     PL439:
 12521                           	opt stack 14
 12522  002306  CFF5 F102          	movff	tablat,??_TCP_FiniteStateMachine+2
 12523  00230A  0009               	tblrd		*+
 12524  00230C  CFF5 F103          	movff	tablat,??_TCP_FiniteStateMachine+3
 12525  002310  0012               	return	
 12526  002312                     __end_ofPL439:
 12527                           	opt stack 0
 12528  002312                     PL443:
 12529                           	opt stack 14
 12530  002312  0E01               	movlw	1
 12531  002314  0101               	movlb	1	; () banked
 12532  002316  2502               	addwf	(??_TCP_FiniteStateMachine+2)& (0+255),w,b
 12533  002318  6F06               	movwf	(??_TCP_FiniteStateMachine+6)& (0+255),b
 12534  00231A  0E00               	movlw	0
 12535  00231C  2103               	addwfc	(??_TCP_FiniteStateMachine+3)& (0+255),w,b
 12536  00231E  6F07               	movwf	(??_TCP_FiniteStateMachine+7)& (0+255),b
 12537  002320  0E00               	movlw	0
 12538  002322  2104               	addwfc	(??_TCP_FiniteStateMachine+4)& (0+255),w,b
 12539  002324  6F08               	movwf	(??_TCP_FiniteStateMachine+8)& (0+255),b
 12540  002326  0E00               	movlw	0
 12541  002328  2105               	addwfc	(??_TCP_FiniteStateMachine+5)& (0+255),w,b
 12542  00232A  6F09               	movwf	(??_TCP_FiniteStateMachine+9)& (0+255),b
 12543  00232C  0012               	return	
 12544  00232E                     __end_ofPL443:
 12545                           	opt stack 0
 12546  00232E                     PL445:
 12547                           	opt stack 14
 12548  00232E  CFEE F102          	movff	postinc0,??_TCP_FiniteStateMachine+2
 12549  002332  CFEE F103          	movff	postinc0,??_TCP_FiniteStateMachine+3
 12550  002336  CFEE F104          	movff	postinc0,??_TCP_FiniteStateMachine+4
 12551  00233A  CFEE F105          	movff	postinc0,??_TCP_FiniteStateMachine+5
 12552  00233E  0012               	return	
 12553  002340                     __end_ofPL445:
 12554                           	opt stack 0
 12555  002340                     PL447:
 12556                           	opt stack 14
 12557  002340  0101               	movlb	1	; () banked
 12558  002342  51DF               	movf	(_tcpHeader+14)& (0+255),w,b
 12559  002344  6F01               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 12560  002346  6B00               	clrf	??_TCP_FiniteStateMachine& (0+255),b
 12561  002348  EE21  F0DF         	lfsr	2,_tcpHeader+14
 12562  00234C  CFDE F102          	movff	postinc2,??_TCP_FiniteStateMachine+2
 12563  002350  CFDD F103          	movff	postdec2,??_TCP_FiniteStateMachine+3
 12564  002354  C103  F102         	movff	??_TCP_FiniteStateMachine+3,??_TCP_FiniteStateMachine+2
 12565  002358  6B03               	clrf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 12566  00235A  6B03               	clrf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 12567  00235C  5100               	movf	??_TCP_FiniteStateMachine& (0+255),w,b
 12568  00235E  1302               	iorwf	(??_TCP_FiniteStateMachine+2)& (0+255),f,b
 12569  002360  5101               	movf	(??_TCP_FiniteStateMachine+1)& (0+255),w,b
 12570  002362  1303               	iorwf	(??_TCP_FiniteStateMachine+3)& (0+255),f,b
 12571  002364  0E18               	movlw	24
 12572  002366  243F               	addwf	_currentTCB,w,c
 12573  002368  6F04               	movwf	(??_TCP_FiniteStateMachine+4)& (0+255),b
 12574  00236A  0E00               	movlw	0
 12575  00236C  2040               	addwfc	_currentTCB+1,w,c
 12576  00236E  6F05               	movwf	(??_TCP_FiniteStateMachine+5)& (0+255),b
 12577  002370  C104  FFF6         	movff	??_TCP_FiniteStateMachine+4,tblptrl
 12578  002374  C105  FFF7         	movff	??_TCP_FiniteStateMachine+5,tblptrh
 12579  002378  0E00               	movlw	low (__smallconst shr (0+16))
 12580  00237A  6EF8               	movwf	tblptru,c
 12581  00237C  0E0F               	movlw	(high __ramtop+-1)
 12582  00237E  0012               	return	
 12583  002380                     __end_ofPL447:
 12584                           	opt stack 0
 12585  002380                     PL449:
 12586                           	opt stack 14
 12587  002380  243F               	addwf	_currentTCB,w,c
 12588  002382  6F04               	movwf	(??_TCP_FiniteStateMachine+4)& (0+255),b
 12589  002384  0E00               	movlw	0
 12590  002386  2040               	addwfc	_currentTCB+1,w,c
 12591  002388  6F05               	movwf	(??_TCP_FiniteStateMachine+5)& (0+255),b
 12592  00238A  C104  FFF6         	movff	??_TCP_FiniteStateMachine+4,tblptrl
 12593  00238E  C105  FFF7         	movff	??_TCP_FiniteStateMachine+5,tblptrh
 12594  002392  0E00               	movlw	low (__smallconst shr (0+16))
 12595  002394  6EF8               	movwf	tblptru,c
 12596  002396  0E0F               	movlw	(high __ramtop+-1)
 12597  002398  0012               	return	
 12598  00239A                     __end_ofPL449:
 12599                           	opt stack 0
 12600  00239A                     PL459:
 12601                           	opt stack 14
 12602  00239A  0E1C               	movlw	28
 12603  00239C  243F               	addwf	_currentTCB,w,c
 12604  00239E  0101               	movlb	1	; () banked
 12605  0023A0  0012               	return	
 12606  0023A2                     __end_ofPL459:
 12607                           	opt stack 0
 12608  0023A2                     PL461:
 12609                           	opt stack 14
 12610  0023A2  0E08               	movlw	8
 12611  0023A4  243F               	addwf	_currentTCB,w,c
 12612  0023A6  0101               	movlb	1	; () banked
 12613  0023A8  0012               	return	
 12614  0023AA                     __end_ofPL461:
 12615                           	opt stack 0
 12616  0023AA                     PL463:
 12617                           	opt stack 14
 12618  0023AA  0E34               	movlw	52
 12619  0023AC  243F               	addwf	_currentTCB,w,c
 12620  0023AE  0101               	movlb	1	; () banked
 12621  0023B0  0012               	return	
 12622  0023B2                     __end_ofPL463:
 12623                           	opt stack 0
 12624  0023B2                     PL467:
 12625                           	opt stack 14
 12626  0023B2  6AF5               	clrf	tablat,c
 12627  0023B4  000D               	tblwt		*+
 12628  0023B6  6AF5               	clrf	tablat,c
 12629  0023B8  000C               	tblwt		*
 12630  0023BA  0012               	return	
 12631  0023BC                     __end_ofPL467:
 12632                           	opt stack 0
 12633  0023BC                     PL469:
 12634                           	opt stack 14
 12635  0023BC  0E01               	movlw	1
 12636  0023BE  0101               	movlb	1	; () banked
 12637  0023C0  25D5               	addwf	(_tcpHeader+4)& (0+255),w,b
 12638  0023C2  6F00               	movwf	??_TCP_FiniteStateMachine& (0+255),b
 12639  0023C4  0E00               	movlw	0
 12640  0023C6  21D6               	addwfc	(_tcpHeader+5)& (0+255),w,b
 12641  0023C8  6F01               	movwf	(??_TCP_FiniteStateMachine+1)& (0+255),b
 12642  0023CA  0E00               	movlw	0
 12643  0023CC  21D7               	addwfc	(_tcpHeader+6)& (0+255),w,b
 12644  0023CE  6F02               	movwf	(??_TCP_FiniteStateMachine+2)& (0+255),b
 12645  0023D0  0E00               	movlw	0
 12646  0023D2  21D8               	addwfc	(_tcpHeader+7)& (0+255),w,b
 12647  0023D4  6F03               	movwf	(??_TCP_FiniteStateMachine+3)& (0+255),b
 12648  0023D6  0C0C               	retlw	12
 12649  0023D8                     __end_ofPL469:
 12650                           	opt stack 0
 12651  0023D8                     PL471:
 12652                           	opt stack 14
 12653  0023D8  0E30               	movlw	48
 12654  0023DA  243F               	addwf	_currentTCB,w,c
 12655  0023DC  0101               	movlb	1	; () banked
 12656  0023DE  0012               	return	
 12657  0023E0                     __end_ofPL471:
 12658                           	opt stack 0
 12659  0023E0                     PL473:
 12660                           	opt stack 14
 12661  0023E0  0E10               	movlw	16
 12662  0023E2  243F               	addwf	_currentTCB,w,c
 12663  0023E4  0101               	movlb	1	; () banked
 12664  0023E6  0012               	return	
 12665  0023E8                     __end_ofPL473:
 12666                           	opt stack 0
 12667  0023E8                     PL475:
 12668                           	opt stack 14
 12669  0023E8  0E32               	movlw	50
 12670  0023EA  243F               	addwf	_currentTCB,w,c
 12671  0023EC  0101               	movlb	1	; () banked
 12672  0023EE  0012               	return	
 12673  0023F0                     __end_ofPL475:
 12674                           	opt stack 0
 12675  0023F0                     PL483:
 12676                           	opt stack 14
 12677  0023F0  C1D5  FFF5         	movff	_tcpHeader+4,tablat
 12678  0023F4  000D               	tblwt		*+
 12679  0023F6  C1D6  FFF5         	movff	_tcpHeader+5,tablat
 12680  0023FA  000D               	tblwt		*+
 12681  0023FC  C1D7  FFF5         	movff	_tcpHeader+6,tablat
 12682  002400  000D               	tblwt		*+
 12683  002402  C1D8  FFF5         	movff	_tcpHeader+7,tablat
 12684  002406  000C               	tblwt		*
 12685  002408  0012               	return	
 12686  00240A                     __end_ofPL483:
 12687                           	opt stack 0
 12688  00240A                     PL485:
 12689                           	opt stack 14
 12690  00240A  C106  FFF5         	movff	??_TCP_FiniteStateMachine+6,tablat
 12691  00240E  000D               	tblwt		*+
 12692  002410  C107  FFF5         	movff	??_TCP_FiniteStateMachine+7,tablat
 12693  002414  000D               	tblwt		*+
 12694  002416  C108  FFF5         	movff	??_TCP_FiniteStateMachine+8,tablat
 12695  00241A  000D               	tblwt		*+
 12696  00241C  C109  FFF5         	movff	??_TCP_FiniteStateMachine+9,tablat
 12697  002420  000C               	tblwt		*
 12698  002422  0012               	return	
 12699  002424                     __end_ofPL485:
 12700                           	opt stack 0
 12701  002424                     PL487:
 12702                           	opt stack 14
 12703  002424  243F               	addwf	_currentTCB,w,c
 12704  002426  6F0A               	movwf	(??_TCP_FiniteStateMachine+10)& (0+255),b
 12705  002428  0E00               	movlw	0
 12706  00242A  2040               	addwfc	_currentTCB+1,w,c
 12707  00242C  6F0B               	movwf	(??_TCP_FiniteStateMachine+11)& (0+255),b
 12708  00242E  C10A  FFF6         	movff	??_TCP_FiniteStateMachine+10,tblptrl
 12709  002432  C10B  FFF7         	movff	??_TCP_FiniteStateMachine+11,tblptrh
 12710  002436  0E00               	movlw	low (__smallconst shr (0+16))
 12711  002438  6EF8               	movwf	tblptru,c
 12712  00243A  0E0F               	movlw	(high __ramtop+-1)
 12713  00243C  0012               	return	
 12714  00243E                     __end_ofPL487:
 12715                           	opt stack 0
 12716  00243E                     PL491:
 12717                           	opt stack 14
 12718  00243E  6F10               	movwf	TCP_FiniteStateMachine@nextState& (0+255),b
 12719  002440  0E36               	movlw	54
 12720  002442  243F               	addwf	_currentTCB,w,c
 12721  002444  0012               	return	
 12722  002446                     __end_ofPL491:
 12723                           	opt stack 0
 12724  002446                     PL493:
 12725                           	opt stack 14
 12726  002446  0E06               	movlw	6
 12727  002448  243F               	addwf	_currentTCB,w,c
 12728  00244A  0101               	movlb	1	; () banked
 12729  00244C  0012               	return	
 12730  00244E                     __end_ofPL493:
 12731                           	opt stack 0
 12732  00244E                     PL497:
 12733                           	opt stack 14
 12734  00244E  C102  FFF5         	movff	??_TCP_FiniteStateMachine+2,tablat
 12735  002452  000D               	tblwt		*+
 12736  002454  C103  FFF5         	movff	??_TCP_FiniteStateMachine+3,tablat
 12737  002458  000C               	tblwt		*
 12738  00245A  0012               	return	
 12739  00245C                     __end_ofPL497:
 12740                           	opt stack 0
 12741  00245C                     PL499:
 12742                           	opt stack 14
 12743  00245C  C100  FFF5         	movff	??_TCP_FiniteStateMachine,tablat
 12744  002460  000D               	tblwt		*+
 12745  002462  C101  FFF5         	movff	??_TCP_FiniteStateMachine+1,tablat
 12746  002466  000D               	tblwt		*+
 12747  002468  0012               	return	
 12748  00246A                     __end_ofPL499:
 12749                           	opt stack 0
 12750  00246A                     PL501:
 12751                           	opt stack 14
 12752  00246A  C1D9  FFF5         	movff	_tcpHeader+8,tablat
 12753  00246E  000D               	tblwt		*+
 12754  002470  C1DA  FFF5         	movff	_tcpHeader+9,tablat
 12755  002474  000D               	tblwt		*+
 12756  002476  C1DB  FFF5         	movff	_tcpHeader+10,tablat
 12757  00247A  000D               	tblwt		*+
 12758  00247C  C1DC  FFF5         	movff	_tcpHeader+11,tablat
 12759  002480  000C               	tblwt		*
 12760  002482  0012               	return	
 12761  002484                     __end_ofPL501:
 12762                           	opt stack 0
 12763  002484                     PL503:
 12764                           	opt stack 14
 12765  002484  0E02               	movlw	2
 12766  002486  6EF5               	movwf	tablat,c
 12767  002488  000D               	tblwt		*+
 12768  00248A  6AF5               	clrf	tablat,c
 12769  00248C  000C               	tblwt		*
 12770  00248E  0C02               	retlw	2
 12771  002490                     __end_ofPL503:
 12772                           	opt stack 0
 12773  002490                     PL509:
 12774                           	opt stack 14
 12775  002490  C03F  F09F         	movff	_currentTCB,TCP_Snd@tcbPtr
 12776  002494  C040  F0A0         	movff	_currentTCB+1,TCP_Snd@tcbPtr+1
 12777  002498  0012               	return	
 12778  00249A                     __end_ofPL509:
 12779                           	opt stack 0
 12780  00249A                     PL513:
 12781                           	opt stack 14
 12782  00249A  6AEE               	clrf	postinc0,c
 12783  00249C  6AEE               	clrf	postinc0,c
 12784  00249E  6AEE               	clrf	postinc0,c
 12785  0024A0  6AEF               	clrf	indf0,c
 12786  0024A2  0012               	return	
 12787  0024A4                     __end_ofPL513:
 12788                           	opt stack 0
 12789  0024A4                     PL517:
 12790                           	opt stack 14
 12791  0024A4  0E0C               	movlw	12
 12792  0024A6  243F               	addwf	_currentTCB,w,c
 12793  0024A8  0101               	movlb	1	; () banked
 12794  0024AA  0012               	return	
 12795  0024AC                     __end_ofPL517:
 12796                           	opt stack 0
 12797  0024AC                     PL519:
 12798                           	opt stack 14
 12799  0024AC  0E14               	movlw	20
 12800  0024AE  243F               	addwf	_currentTCB,w,c
 12801  0024B0  0101               	movlb	1	; () banked
 12802  0024B2  0012               	return	
 12803  0024B4                     __end_ofPL519:
 12804                           	opt stack 0
 12805  0024B4                     PL521:
 12806                           	opt stack 14
 12807  0024B4  C106  FFEE         	movff	??_TCP_FiniteStateMachine+6,postinc0
 12808  0024B8  C107  FFEE         	movff	??_TCP_FiniteStateMachine+7,postinc0
 12809  0024BC  C108  FFEE         	movff	??_TCP_FiniteStateMachine+8,postinc0
 12810  0024C0  C109  FFEF         	movff	??_TCP_FiniteStateMachine+9,indf0
 12811  0024C4  0012               	return	
 12812  0024C6                     __end_ofPL521:
 12813                           	opt stack 0
 12814  0024C6                     PL523:
 12815                           	opt stack 14
 12816  0024C6  C1D5  FFEE         	movff	_tcpHeader+4,postinc0
 12817  0024CA  C1D6  FFEE         	movff	_tcpHeader+5,postinc0
 12818  0024CE  C1D7  FFEE         	movff	_tcpHeader+6,postinc0
 12819  0024D2  C1D8  FFEF         	movff	_tcpHeader+7,indf0
 12820  0024D6  0012               	return	
 12821  0024D8                     __end_ofPL523:
 12822                           	opt stack 0
 12823  0024D8                     PL537:
 12824                           	opt stack 14
 12825  0024D8  C100  FFEE         	movff	??_TCP_FiniteStateMachine,postinc0
 12826  0024DC  C101  FFEE         	movff	??_TCP_FiniteStateMachine+1,postinc0
 12827  0024E0  C102  FFEE         	movff	??_TCP_FiniteStateMachine+2,postinc0
 12828  0024E4  C103  FFEF         	movff	??_TCP_FiniteStateMachine+3,indf0
 12829  0024E8  0012               	return	
 12830  0024EA                     __end_ofPL537:
 12831                           	opt stack 0
 12832  0024EA                     PL543:
 12833                           	opt stack 14
 12834  0024EA  C1D9  FFEE         	movff	_tcpHeader+8,postinc0
 12835  0024EE  C1DA  FFEE         	movff	_tcpHeader+9,postinc0
 12836  0024F2  C1DB  FFEE         	movff	_tcpHeader+10,postinc0
 12837  0024F6  C1DC  FFEF         	movff	_tcpHeader+11,indf0
 12838  0024FA  0012               	return	
 12839  0024FC                     __end_ofPL543:
 12840                           	opt stack 0
 12841  0024FC                     PL547:
 12842                           	opt stack 14
 12843  0024FC  C102  FFEE         	movff	??_TCP_FiniteStateMachine+2,postinc0
 12844  002500  C103  FFEF         	movff	??_TCP_FiniteStateMachine+3,indf0
 12845  002504  0012               	return	
 12846  002506                     __end_ofPL547:
 12847                           	opt stack 0
 12848  002506                     PL553:
 12849                           	opt stack 14
 12850  002506  0E27               	movlw	39
 12851  002508  243F               	addwf	_currentTCB,w,c
 12852  00250A  0101               	movlb	1	; () banked
 12853  00250C  0012               	return	
 12854  00250E                     __end_ofPL553:
 12855                           	opt stack 0
 12856  00250E                     PL555:
 12857                           	opt stack 14
 12858  00250E  0E18               	movlw	24
 12859  002510  243F               	addwf	_currentTCB,w,c
 12860  002512  0101               	movlb	1	; () banked
 12861  002514  0012               	return	
 12862  002516                     __end_ofPL555:
 12863                           	opt stack 0
 12864  002516                     PL557:
 12865                           	opt stack 14
 12866  002516  0E02               	movlw	2
 12867  002518  243F               	addwf	_currentTCB,w,c
 12868  00251A  0101               	movlb	1	; () banked
 12869  00251C  0012               	return	
 12870  00251E                     __end_ofPL557:
 12871                           	opt stack 0
 12872  00251E                     PL569:
 12873                           	opt stack 14
 12874  00251E  C043  FFF5         	movff	_tcpMss,tablat
 12875  002522  000D               	tblwt		*+
 12876  002524  C044  FFF5         	movff	_tcpMss+1,tablat
 12877  002528  000C               	tblwt		*
 12878  00252A  0012               	return	
 12879  00252C                     __end_ofPL569:
 12880                           	opt stack 0
 12881  00252C                     PL641:
 12882                           	opt stack 14
 12883  00252C  0E02               	movlw	2
 12884  00252E  6EEE               	movwf	postinc0,c
 12885  002530  6AEF               	clrf	indf0,c
 12886  002532  0C02               	retlw	2
 12887  002534                     __end_ofPL641:
 12888                           	opt stack 0
 12889  002534                     PL655:
 12890                           	opt stack 14
 12891  002534  C043  FFEE         	movff	_tcpMss,postinc0
 12892  002538  C044  FFEF         	movff	_tcpMss+1,indf0
 12893  00253C  0012               	return	
 12894  00253E                     __end_ofPL655:
 12895                           	opt stack 0
 12896  00253E                     PL657:
 12897                           	opt stack 14
 12898  00253E  C03F  FFF6         	movff	_currentTCB,tblptrl
 12899  002542  C040  FFF7         	movff	_currentTCB+1,tblptrh
 12900  002546  0E00               	movlw	low (__smallconst shr (0+16))
 12901  002548  6EF8               	movwf	tblptru,c
 12902  00254A  0E0F               	movlw	(high __ramtop+-1)
 12903  00254C  0012               	return	
 12904  00254E                     __end_ofPL657:
 12905                           	opt stack 0
 12906  00254E                     PL679:
 12907                           	opt stack 14
 12908  00254E  0009               	tblrd		*+
 12909  002550  CFF5 F100          	movff	tablat,??_TCP_FiniteStateMachine
 12910  002554  0009               	tblrd		*+
 12911  002556  CFF5 F101          	movff	tablat,??_TCP_FiniteStateMachine+1
 12912  00255A  0012               	return	
 12913  00255C                     __end_ofPL679:
 12914                           	opt stack 0
 12915  00255C                     PL743:
 12916                           	opt stack 14
 12917  00255C  CFEE F100          	movff	postinc0,??_TCP_FiniteStateMachine
 12918  002560  CFEE F101          	movff	postinc0,??_TCP_FiniteStateMachine+1
 12919  002564  0012               	return	
 12920  002566                     __end_ofPL743:
 12921                           	opt stack 0
 12922                           tosu	equ	0xFFF
 12923                           tosh	equ	0xFFE
 12924                           tosl	equ	0xFFD
 12925                           pclath	equ	0xFFA
 12926                           tblptru	equ	0xFF8
 12927                           tblptrh	equ	0xFF7
 12928                           tblptrl	equ	0xFF6
 12929                           tablat	equ	0xFF5
 12930                           prodh	equ	0xFF4
 12931                           prodl	equ	0xFF3
 12932                           intcon	equ	0xFF2
 12933                           indf0	equ	0xFEF
 12934                           postinc0	equ	0xFEE
 12935                           fsr0h	equ	0xFEA
 12936                           fsr0l	equ	0xFE9
 12937                           wreg	equ	0xFE8
 12938                           postinc1	equ	0xFE6
 12939                           plusw1	equ	0xFE3
 12940                           fsr1h	equ	0xFE2
 12941                           fsr1l	equ	0xFE1
 12942                           bsr	equ	0xFE0
 12943                           indf2	equ	0xFDF
 12944                           postinc2	equ	0xFDE
 12945                           postdec2	equ	0xFDD
 12946                           plusw2	equ	0xFDB
 12947                           fsr2h	equ	0xFDA
 12948                           fsr2l	equ	0xFD9
 12949                           status	equ	0xFD8
 12950                           
 12951 ;; *************** function _TCP_PayloadSave *****************
 12952 ;; Defined at:
 12953 ;;		line 310 in file "../../TCPIP Library/source/tcpv4.c"
 12954 ;; Parameters:    Size  Location     Type
 12955 ;;  len             2  142[BANK0 ] unsigned int 
 12956 ;; Auto vars:     Size  Location     Type
 12957 ;;  buffer_size     2  157[BANK0 ] unsigned int 
 12958 ;;  ret             1    0        unsigned char 
 12959 ;; Return value:  Size  Location     Type
 12960 ;;                  1    wreg      unsigned char 
 12961 ;; Registers used:
 12962 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12963 ;; Tracked objects:
 12964 ;;		On entry : 0/1
 12965 ;;		On exit  : 0/0
 12966 ;;		Unchanged: 0/0
 12967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12968 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12969 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12970 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12971 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12972 ;;Total ram usage:       17 bytes
 12973 ;; Hardware stack levels used:    1
 12974 ;; Hardware stack levels required when called:   13
 12975 ;; This function calls:
 12976 ;;		_ETH_ReadBlock
 12977 ;;		_TCP_Snd
 12978 ;; This function is called by:
 12979 ;;		_TCP_FiniteStateMachine
 12980 ;; This function uses a non-reentrant model
 12981 ;;
 12982                           
 12983                           	psect	text44
 12984  00424E                     __ptext44:
 12985                           	opt stack 0
 12986  00424E                     _TCP_PayloadSave:
 12987                           	opt stack 14
 12988                           
 12989                           ;tcpv4.c: 313: uint16_t buffer_size;
 12990                           ;tcpv4.c: 316: if (currentTCB->rxBufState == RX_BUFF_IN_USE)
 12991                           
 12992                           ; BSR set to: 1
 12993                           ;incstack = 0
 12994  00424E  0E22               	movlw	34
 12995  004250  D8D6               	call	PL457	;call to abstracted procedure
 12996  004252  64F7               	cpfsgt	tblptrh,c
 12997  004254  D003               	bra	u12467
 12998  004256  0008               	tblrd		*
 12999  004258  50F5               	movf	tablat,w,c
 13000  00425A  D003               	bra	u12460
 13001  00425C                     u12467:
 13002  00425C  EC6D  F011         	call	PL431	;call to abstracted procedure
 13003  004260  50EF               	movf	indf0,w,c
 13004  004262                     u12460:
 13005  004262  06E8               	decf	wreg,f,c
 13006  004264  A4D8               	btfss	status,2,c
 13007  004266  0012               	return	
 13008                           
 13009                           ;tcpv4.c: 317: {
 13010                           ;tcpv4.c: 319: if (currentTCB->localWnd >= len)
 13011  004268  0E1A               	movlw	26
 13012  00426A  D8C9               	call	PL457	;call to abstracted procedure
 13013  00426C  64F7               	cpfsgt	tblptrh,c
 13014  00426E  D002               	bra	u12487
 13015  004270  D8D4               	call	PL567	;call to abstracted procedure
 13016  004272  D003               	bra	u12480
 13017  004274                     u12487:
 13018  004274  EC6D  F011         	call	PL431	;call to abstracted procedure
 13019  004278  D8E4               	call	PL673	;call to abstracted procedure
 13020  00427A                     u12480:
 13021  00427A  0100               	movlb	0	; () banked
 13022  00427C  51EE               	movf	TCP_PayloadSave@len& (0+255),w,b
 13023  00427E  5DF2               	subwf	(??_TCP_PayloadSave+2)& (0+255),w,b
 13024  004280  51EF               	movf	(TCP_PayloadSave@len+1)& (0+255),w,b
 13025  004282  59F3               	subwfb	(??_TCP_PayloadSave+3)& (0+255),w,b
 13026  004284  E305               	bnc	l8657
 13027                           
 13028                           ; BSR set to: 0
 13029                           ;tcpv4.c: 320: {
 13030                           ;tcpv4.c: 321: buffer_size = len;
 13031  004286  C0EE  F0FD         	movff	TCP_PayloadSave@len,TCP_PayloadSave@buffer_size
 13032  00428A  C0EF  F0FE         	movff	TCP_PayloadSave@len+1,TCP_PayloadSave@buffer_size+1
 13033                           
 13034                           ;tcpv4.c: 322: }else
 13035  00428E  D01C               	goto	l8659
 13036  004290                     l8657:
 13037                           
 13038                           ; BSR set to: 0
 13039                           ;tcpv4.c: 323: {
 13040                           ;tcpv4.c: 324: buffer_size = currentTCB->localWnd;
 13041  004290  0E1A               	movlw	26
 13042  004292  243F               	addwf	_currentTCB,w,c
 13043  004294  6FF0               	movwf	??_TCP_PayloadSave& (0+255),b
 13044  004296  0E00               	movlw	0
 13045  004298  2040               	addwfc	_currentTCB+1,w,c
 13046  00429A  6FF1               	movwf	(??_TCP_PayloadSave+1)& (0+255),b
 13047  00429C  C0F0  FFF6         	movff	??_TCP_PayloadSave,tblptrl
 13048  0042A0  C0F1  FFF7         	movff	??_TCP_PayloadSave+1,tblptrh
 13049  0042A4  0E00               	movlw	low (__smallconst shr (0+16))
 13050  0042A6  6EF8               	movwf	tblptru,c
 13051  0042A8  0E0F               	movlw	(high __ramtop+-1)
 13052  0042AA  64F7               	cpfsgt	tblptrh,c
 13053  0042AC  D007               	bra	u12507
 13054  0042AE  0009               	tblrd		*+
 13055  0042B0  CFF5 F0FD          	movff	tablat,TCP_PayloadSave@buffer_size
 13056  0042B4  0009               	tblrd		*+
 13057  0042B6  CFF5 F0FE          	movff	tablat,TCP_PayloadSave@buffer_size+1
 13058  0042BA  D006               	bra	u12500
 13059  0042BC                     u12507:
 13060  0042BC  EC6D  F011         	call	PL431	;call to abstracted procedure
 13061  0042C0  CFEE F0FD          	movff	postinc0,TCP_PayloadSave@buffer_size
 13062  0042C4  CFEE F0FE          	movff	postinc0,TCP_PayloadSave@buffer_size+1
 13063  0042C8                     u12500:
 13064  0042C8                     l8659:
 13065                           
 13066                           ;tcpv4.c: 325: }
 13067                           ;tcpv4.c: 327: ETH_ReadBlock(currentTCB->rxBufferPtr, buffer_size);
 13068  0042C8  0E20               	movlw	32
 13069  0042CA  D899               	call	PL457	;call to abstracted procedure
 13070  0042CC  64F7               	cpfsgt	tblptrh,c
 13071  0042CE  D007               	bra	u12517
 13072  0042D0  0009               	tblrd		*+
 13073  0042D2  CFF5 F017          	movff	tablat,ETH_ReadBlock@buffer
 13074  0042D6  0009               	tblrd		*+
 13075  0042D8  CFF5 F018          	movff	tablat,ETH_ReadBlock@buffer+1
 13076  0042DC  D006               	bra	u12510
 13077  0042DE                     u12517:
 13078  0042DE  EC6D  F011         	call	PL431	;call to abstracted procedure
 13079  0042E2  CFEE F017          	movff	postinc0,ETH_ReadBlock@buffer
 13080  0042E6  CFEE F018          	movff	postinc0,ETH_ReadBlock@buffer+1
 13081  0042EA                     u12510:
 13082  0042EA  C0FD  F019         	movff	TCP_PayloadSave@buffer_size,ETH_ReadBlock@length
 13083  0042EE  C0FE  F01A         	movff	TCP_PayloadSave@buffer_size+1,ETH_ReadBlock@length+1
 13084  0042F2  ECC5  F02C         	call	_ETH_ReadBlock	;wreg free
 13085                           
 13086                           ; BSR set to: 2
 13087                           ;tcpv4.c: 328: currentTCB->rxBufferPtr = currentTCB->rxBufferPtr + buffer_size;
 13088  0042F6  0E20               	movlw	32
 13089  0042F8  D882               	call	PL457	;call to abstracted procedure
 13090  0042FA  64F7               	cpfsgt	tblptrh,c
 13091  0042FC  D002               	bra	u12527
 13092  0042FE  D88D               	call	PL567	;call to abstracted procedure
 13093  004300  D003               	bra	u12520
 13094  004302                     u12527:
 13095  004302  EC6D  F011         	call	PL431	;call to abstracted procedure
 13096  004306  D89D               	call	PL673	;call to abstracted procedure
 13097  004308                     u12520:
 13098  004308  0100               	movlb	0	; () banked
 13099  00430A  51FD               	movf	TCP_PayloadSave@buffer_size& (0+255),w,b
 13100  00430C  27F2               	addwf	(??_TCP_PayloadSave+2)& (0+255),f,b
 13101  00430E  51FE               	movf	(TCP_PayloadSave@buffer_size+1)& (0+255),w,b
 13102  004310  23F3               	addwfc	(??_TCP_PayloadSave+3)& (0+255),f,b
 13103  004312  0E20               	movlw	32
 13104  004314  D889               	call	PL601	;call to abstracted procedure
 13105  004316  64F7               	cpfsgt	tblptrh,c
 13106  004318  D002               	bra	u12537
 13107  00431A  D898               	call	PL687	;call to abstracted procedure
 13108  00431C  D003               	bra	u12530
 13109  00431E                     u12537:
 13110  00431E  EC6D  F011         	call	PL431	;call to abstracted procedure
 13111  004322  D89B               	call	PL741	;call to abstracted procedure
 13112  004324                     u12530:
 13113                           
 13114                           ;tcpv4.c: 331: currentTCB->localWnd = currentTCB->localWnd - buffer_size;
 13115  004324  0E1A               	movlw	26
 13116  004326  D86B               	call	PL457	;call to abstracted procedure
 13117  004328  64F7               	cpfsgt	tblptrh,c
 13118  00432A  D002               	bra	u12547
 13119  00432C  D876               	call	PL567	;call to abstracted procedure
 13120  00432E  D003               	bra	u12540
 13121  004330                     u12547:
 13122  004330  EC6D  F011         	call	PL431	;call to abstracted procedure
 13123  004334  D886               	call	PL673	;call to abstracted procedure
 13124  004336                     u12540:
 13125  004336  0100               	movlb	0	; () banked
 13126  004338  51FD               	movf	TCP_PayloadSave@buffer_size& (0+255),w,b
 13127  00433A  5FF2               	subwf	(??_TCP_PayloadSave+2)& (0+255),f,b
 13128  00433C  51FE               	movf	(TCP_PayloadSave@buffer_size+1)& (0+255),w,b
 13129  00433E  5BF3               	subwfb	(??_TCP_PayloadSave+3)& (0+255),f,b
 13130  004340  0E1A               	movlw	26
 13131  004342  D872               	call	PL601	;call to abstracted procedure
 13132  004344  64F7               	cpfsgt	tblptrh,c
 13133  004346  D002               	bra	u12557
 13134  004348  D881               	call	PL687	;call to abstracted procedure
 13135  00434A  D003               	bra	u12550
 13136  00434C                     u12557:
 13137  00434C  EC6D  F011         	call	PL431	;call to abstracted procedure
 13138  004350  D884               	call	PL741	;call to abstracted procedure
 13139  004352                     u12550:
 13140                           
 13141                           ;tcpv4.c: 332: currentTCB->remoteAck = currentTCB->remoteSeqno + buffer_size;
 13142  004352  0E08               	movlw	8
 13143  004354  D854               	call	PL457	;call to abstracted procedure
 13144  004356  64F7               	cpfsgt	tblptrh,c
 13145  004358  D008               	bra	u12567
 13146  00435A  D85F               	call	PL567	;call to abstracted procedure
 13147  00435C  0009               	tblrd		*+
 13148  00435E  CFF5 F0F4          	movff	tablat,??_TCP_PayloadSave+4
 13149  004362  0009               	tblrd		*+
 13150  004364  CFF5 F0F5          	movff	tablat,??_TCP_PayloadSave+5
 13151  004368  D007               	bra	u12560
 13152  00436A                     u12567:
 13153  00436A  EC6D  F011         	call	PL431	;call to abstracted procedure
 13154  00436E  D869               	call	PL673	;call to abstracted procedure
 13155  004370  CFEE F0F4          	movff	postinc0,??_TCP_PayloadSave+4
 13156  004374  CFEE F0F5          	movff	postinc0,??_TCP_PayloadSave+5
 13157  004378                     u12560:
 13158  004378  0100               	movlb	0	; () banked
 13159  00437A  51FD               	movf	TCP_PayloadSave@buffer_size& (0+255),w,b
 13160  00437C  25F2               	addwf	(??_TCP_PayloadSave+2)& (0+255),w,b
 13161  00437E  6FF6               	movwf	(??_TCP_PayloadSave+6)& (0+255),b
 13162  004380  51FE               	movf	(TCP_PayloadSave@buffer_size+1)& (0+255),w,b
 13163  004382  21F3               	addwfc	(??_TCP_PayloadSave+3)& (0+255),w,b
 13164  004384  6FF7               	movwf	(??_TCP_PayloadSave+7)& (0+255),b
 13165  004386  0E00               	movlw	0
 13166  004388  21F4               	addwfc	(??_TCP_PayloadSave+4)& (0+255),w,b
 13167  00438A  6FF8               	movwf	(??_TCP_PayloadSave+8)& (0+255),b
 13168  00438C  0E00               	movlw	0
 13169  00438E  21F5               	addwfc	(??_TCP_PayloadSave+5)& (0+255),w,b
 13170  004390  6FF9               	movwf	(??_TCP_PayloadSave+9)& (0+255),b
 13171  004392  0E0C               	movlw	12
 13172  004394  243F               	addwf	_currentTCB,w,c
 13173  004396  6FFA               	movwf	(??_TCP_PayloadSave+10)& (0+255),b
 13174  004398  0E00               	movlw	0
 13175  00439A  2040               	addwfc	_currentTCB+1,w,c
 13176  00439C  6FFB               	movwf	(??_TCP_PayloadSave+11)& (0+255),b
 13177  00439E  C0FA  FFF6         	movff	??_TCP_PayloadSave+10,tblptrl
 13178  0043A2  C0FB  FFF7         	movff	??_TCP_PayloadSave+11,tblptrh
 13179  0043A6  0E00               	movlw	low (__smallconst shr (0+16))
 13180  0043A8  6EF8               	movwf	tblptru,c
 13181  0043AA  0E0F               	movlw	(high __ramtop+-1)
 13182  0043AC  64F7               	cpfsgt	tblptrh,c
 13183  0043AE  D00D               	bra	u12577
 13184  0043B0  C0F6  FFF5         	movff	??_TCP_PayloadSave+6,tablat
 13185  0043B4  000D               	tblwt		*+
 13186  0043B6  C0F7  FFF5         	movff	??_TCP_PayloadSave+7,tablat
 13187  0043BA  000D               	tblwt		*+
 13188  0043BC  C0F8  FFF5         	movff	??_TCP_PayloadSave+8,tablat
 13189  0043C0  000D               	tblwt		*+
 13190  0043C2  C0F9  FFF5         	movff	??_TCP_PayloadSave+9,tablat
 13191  0043C6  000C               	tblwt		*
 13192  0043C8  D00A               	bra	u12570
 13193  0043CA                     u12577:
 13194  0043CA  EC6D  F011         	call	PL431	;call to abstracted procedure
 13195  0043CE  C0F6  FFEE         	movff	??_TCP_PayloadSave+6,postinc0
 13196  0043D2  C0F7  FFEE         	movff	??_TCP_PayloadSave+7,postinc0
 13197  0043D6  C0F8  FFEE         	movff	??_TCP_PayloadSave+8,postinc0
 13198  0043DA  C0F9  FFEF         	movff	??_TCP_PayloadSave+9,indf0
 13199  0043DE                     u12570:
 13200                           
 13201                           ;tcpv4.c: 335: currentTCB->flags = 0x10U;
 13202  0043DE  0E35               	movlw	53
 13203  0043E0  D80E               	call	PL457	;call to abstracted procedure
 13204  0043E2  64F7               	cpfsgt	tblptrh,c
 13205  0043E4  D004               	bra	u12587
 13206  0043E6  0E10               	movlw	16
 13207  0043E8  6EF5               	movwf	tablat,c
 13208  0043EA  000C               	tblwt		*
 13209  0043EC  D004               	bra	u12580
 13210  0043EE                     u12587:
 13211  0043EE  EC6D  F011         	call	PL431	;call to abstracted procedure
 13212  0043F2  0E10               	movlw	16
 13213  0043F4  6EEF               	movwf	indf0,c
 13214  0043F6                     u12580:
 13215                           
 13216                           ;tcpv4.c: 336: TCP_Snd(currentTCB);
 13217  0043F6  EC48  F012         	call	PL509	;call to abstracted procedure
 13218  0043FA  EFB3  F012         	goto	_TCP_Snd	;wreg free
 13219  0043FE                     __end_of_TCP_PayloadSave:
 13220                           	opt stack 0
 13221  0043FE                     PL457:
 13222                           	opt stack 14
 13223  0043FE  243F               	addwf	_currentTCB,w,c
 13224  004400  0100               	movlb	0	; () banked
 13225  004402  6FF0               	movwf	??_TCP_PayloadSave& (0+255),b
 13226  004404  0E00               	movlw	0
 13227  004406  2040               	addwfc	_currentTCB+1,w,c
 13228  004408  6FF1               	movwf	(??_TCP_PayloadSave+1)& (0+255),b
 13229  00440A  C0F0  FFF6         	movff	??_TCP_PayloadSave,tblptrl
 13230  00440E  C0F1  FFF7         	movff	??_TCP_PayloadSave+1,tblptrh
 13231  004412  0E00               	movlw	low (__smallconst shr (0+16))
 13232  004414  6EF8               	movwf	tblptru,c
 13233  004416  0E0F               	movlw	(high __ramtop+-1)
 13234  004418  0012               	return	
 13235  00441A                     __end_ofPL457:
 13236                           	opt stack 0
 13237  00441A                     PL567:
 13238                           	opt stack 14
 13239  00441A  0009               	tblrd		*+
 13240  00441C  CFF5 F0F2          	movff	tablat,??_TCP_PayloadSave+2
 13241  004420  0009               	tblrd		*+
 13242  004422  CFF5 F0F3          	movff	tablat,??_TCP_PayloadSave+3
 13243  004426  0012               	return	
 13244  004428                     __end_ofPL567:
 13245                           	opt stack 0
 13246  004428                     PL601:
 13247                           	opt stack 14
 13248  004428  243F               	addwf	_currentTCB,w,c
 13249  00442A  6FF4               	movwf	(??_TCP_PayloadSave+4)& (0+255),b
 13250  00442C  0E00               	movlw	0
 13251  00442E  2040               	addwfc	_currentTCB+1,w,c
 13252  004430  6FF5               	movwf	(??_TCP_PayloadSave+5)& (0+255),b
 13253  004432  C0F4  FFF6         	movff	??_TCP_PayloadSave+4,tblptrl
 13254  004436  C0F5  FFF7         	movff	??_TCP_PayloadSave+5,tblptrh
 13255  00443A  0E00               	movlw	low (__smallconst shr (0+16))
 13256  00443C  6EF8               	movwf	tblptru,c
 13257  00443E  0E0F               	movlw	(high __ramtop+-1)
 13258  004440  0012               	return	
 13259  004442                     __end_ofPL601:
 13260                           	opt stack 0
 13261  004442                     PL673:
 13262                           	opt stack 14
 13263  004442  CFEE F0F2          	movff	postinc0,??_TCP_PayloadSave+2
 13264  004446  CFEE F0F3          	movff	postinc0,??_TCP_PayloadSave+3
 13265  00444A  0012               	return	
 13266  00444C                     __end_ofPL673:
 13267                           	opt stack 0
 13268  00444C                     PL687:
 13269                           	opt stack 14
 13270  00444C  C0F2  FFF5         	movff	??_TCP_PayloadSave+2,tablat
 13271  004450  000D               	tblwt		*+
 13272  004452  C0F3  FFF5         	movff	??_TCP_PayloadSave+3,tablat
 13273  004456  000C               	tblwt		*
 13274  004458  0012               	return	
 13275  00445A                     __end_ofPL687:
 13276                           	opt stack 0
 13277  00445A                     PL741:
 13278                           	opt stack 14
 13279  00445A  C0F2  FFEE         	movff	??_TCP_PayloadSave+2,postinc0
 13280  00445E  C0F3  FFEF         	movff	??_TCP_PayloadSave+3,indf0
 13281  004462  0012               	return	
 13282  004464                     __end_ofPL741:
 13283                           	opt stack 0
 13284                           tosu	equ	0xFFF
 13285                           tosh	equ	0xFFE
 13286                           tosl	equ	0xFFD
 13287                           pclath	equ	0xFFA
 13288                           tblptru	equ	0xFF8
 13289                           tblptrh	equ	0xFF7
 13290                           tblptrl	equ	0xFF6
 13291                           tablat	equ	0xFF5
 13292                           prodh	equ	0xFF4
 13293                           prodl	equ	0xFF3
 13294                           intcon	equ	0xFF2
 13295                           indf0	equ	0xFEF
 13296                           postinc0	equ	0xFEE
 13297                           fsr0h	equ	0xFEA
 13298                           fsr0l	equ	0xFE9
 13299                           wreg	equ	0xFE8
 13300                           postinc1	equ	0xFE6
 13301                           plusw1	equ	0xFE3
 13302                           fsr1h	equ	0xFE2
 13303                           fsr1l	equ	0xFE1
 13304                           bsr	equ	0xFE0
 13305                           indf2	equ	0xFDF
 13306                           postinc2	equ	0xFDE
 13307                           postdec2	equ	0xFDD
 13308                           plusw2	equ	0xFDB
 13309                           fsr2h	equ	0xFDA
 13310                           fsr2l	equ	0xFD9
 13311                           status	equ	0xFD8
 13312                           
 13313 ;; *************** function _TCP_Snd *****************
 13314 ;; Defined at:
 13315 ;;		line 200 in file "../../TCPIP Library/source/tcpv4.c"
 13316 ;; Parameters:    Size  Location     Type
 13317 ;;  tcbPtr          2   63[BANK0 ] PTR struct .
 13318 ;;		 -> ?_sprintf(2), ?_printf(2), main@str(32), STR_6(13), 
 13319 ;;		 -> STR_5(17), Network_Read@debug_str(80), STR_1(15), NULL(0), 
 13320 ;; Auto vars:     Size  Location     Type
 13321 ;;  txHeader       20  122[BANK0 ] struct .
 13322 ;;  tcpDataLengt    2  120[BANK0 ] unsigned int 
 13323 ;;  payloadLengt    2  117[BANK0 ] unsigned int 
 13324 ;;  cksm            2  115[BANK0 ] unsigned int 
 13325 ;;  data            2  113[BANK0 ] PTR unsigned char 
 13326 ;;		 -> ?_sprintf(2), ?_printf(2), main@str(32), STR_6(13), 
 13327 ;;		 -> STR_5(17), Network_Read@debug_str(80), STR_1(15), NULL(0), 
 13328 ;;  ret             1  119[BANK0 ] unsigned char 
 13329 ;; Return value:  Size  Location     Type
 13330 ;;                  1    wreg      unsigned char 
 13331 ;; Registers used:
 13332 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13333 ;; Tracked objects:
 13334 ;;		On entry : 0/1
 13335 ;;		On exit  : F/0
 13336 ;;		Unchanged: 0/0
 13337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13338 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13339 ;;      Locals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13340 ;;      Temps:          0      48       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13341 ;;      Totals:         0      79       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13342 ;;Total ram usage:       79 bytes
 13343 ;; Hardware stack levels used:    1
 13344 ;; Hardware stack levels required when called:   12
 13345 ;; This function calls:
 13346 ;;		_ETH_Insert
 13347 ;;		_ETH_TxComputeChecksum
 13348 ;;		_ETH_WriteBlock
 13349 ;;		_IPV4_Send
 13350 ;;		_IPv4_Start
 13351 ;; This function is called by:
 13352 ;;		_TCP_PayloadSave
 13353 ;;		_TCP_FiniteStateMachine
 13354 ;; This function uses a non-reentrant model
 13355 ;;
 13356                           
 13357                           	psect	text45
 13358  002566                     __ptext45:
 13359                           	opt stack 0
 13360  002566                     _TCP_Snd:
 13361                           	opt stack 0
 13362                           
 13363                           ;tcpv4.c: 203: tcpHeader_t txHeader;
 13364                           ;tcpv4.c: 204: uint16_t payloadLength;
 13365                           ;tcpv4.c: 205: uint16_t cksm;
 13366                           ;tcpv4.c: 206: uint16_t tcpDataLength;
 13367                           ;tcpv4.c: 207: uint8_t *data;
 13368                           ;tcpv4.c: 209: txHeader.sourcePort = ((((uint16_t)tcbPtr->localPort & (uint16_t)0xFF00) 
      +                          >> 8) | (((uint16_t)tcbPtr->localPort & (uint16_t)0x00FF) << 8));
 13369                           
 13370                           ;incstack = 0
 13371  002566  DB4F               	call	PL659	;call to abstracted procedure
 13372  002568  64F7               	cpfsgt	tblptrh,c
 13373  00256A  D007               	bra	u11667
 13374  00256C  0009               	tblrd		*+
 13375  00256E  CFF5 F0A1          	movff	tablat,??_TCP_Snd
 13376  002572  0009               	tblrd		*+
 13377  002574  CFF5 F0A2          	movff	tablat,??_TCP_Snd+1
 13378  002578  D006               	bra	u11660
 13379  00257A                     u11667:
 13380  00257A  EC6D  F011         	call	PL431	;call to abstracted procedure
 13381  00257E  CFEE F0A1          	movff	postinc0,??_TCP_Snd
 13382  002582  CFEE F0A2          	movff	postinc0,??_TCP_Snd+1
 13383  002586                     u11660:
 13384  002586  0100               	movlb	0	; () banked
 13385  002588  51A1               	movf	??_TCP_Snd& (0+255),w,b
 13386  00258A  6FA4               	movwf	(??_TCP_Snd+3)& (0+255),b
 13387  00258C  6BA3               	clrf	(??_TCP_Snd+2)& (0+255),b
 13388  00258E  DB3B               	call	PL659	;call to abstracted procedure
 13389  002590  64F7               	cpfsgt	tblptrh,c
 13390  002592  D002               	bra	u11677
 13391  002594  DA8C               	call	PL571	;call to abstracted procedure
 13392  002596  D003               	bra	u11670
 13393  002598                     u11677:
 13394  002598  EC6D  F011         	call	PL431	;call to abstracted procedure
 13395  00259C  DB3C               	call	PL667	;call to abstracted procedure
 13396  00259E                     u11670:
 13397  00259E  C0A6  F0A5         	movff	??_TCP_Snd+5,??_TCP_Snd+4
 13398  0025A2  0100               	movlb	0	; () banked
 13399  0025A4  6BA6               	clrf	(??_TCP_Snd+5)& (0+255),b
 13400  0025A6  6BA6               	clrf	(??_TCP_Snd+5)& (0+255),b
 13401  0025A8  51A3               	movf	(??_TCP_Snd+2)& (0+255),w,b
 13402  0025AA  11A5               	iorwf	(??_TCP_Snd+4)& (0+255),w,b
 13403  0025AC  6FDA               	movwf	TCP_Snd@txHeader& (0+255),b
 13404  0025AE  51A4               	movf	(??_TCP_Snd+3)& (0+255),w,b
 13405  0025B0  11A6               	iorwf	(??_TCP_Snd+5)& (0+255),w,b
 13406  0025B2  6FDB               	movwf	(TCP_Snd@txHeader+1)& (0+255),b
 13407                           
 13408                           ;tcpv4.c: 210: txHeader.destPort = ((((uint16_t)tcbPtr->destPort & (uint16_t)0xFF00) >> 
      +                          8) | (((uint16_t)tcbPtr->destPort & (uint16_t)0x00FF) << 8));
 13409  0025B4  0E06               	movlw	6
 13410  0025B6  DA2B               	call	PL433	;call to abstracted procedure
 13411  0025B8  64F7               	cpfsgt	tblptrh,c
 13412  0025BA  D002               	bra	u11687
 13413  0025BC  DA5F               	call	PL489	;call to abstracted procedure
 13414  0025BE  D003               	bra	u11680
 13415  0025C0                     u11687:
 13416  0025C0  EC6D  F011         	call	PL431	;call to abstracted procedure
 13417  0025C4  DA6F               	call	PL545	;call to abstracted procedure
 13418  0025C6                     u11680:
 13419  0025C6  DB52               	call	PL751	;call to abstracted procedure
 13420  0025C8  0E06               	movlw	6
 13421  0025CA  DAD5               	call	PL603	;call to abstracted procedure
 13422  0025CC  64F7               	cpfsgt	tblptrh,c
 13423  0025CE  D002               	bra	u11697
 13424  0025D0  DB36               	call	PL689	;call to abstracted procedure
 13425  0025D2  D003               	bra	u11690
 13426  0025D4                     u11697:
 13427  0025D4  EC6D  F011         	call	PL431	;call to abstracted procedure
 13428  0025D8  DB4E               	call	PL757	;call to abstracted procedure
 13429  0025DA                     u11690:
 13430  0025DA  DB22               	call	PL669	;call to abstracted procedure
 13431  0025DC  6FDC               	movwf	(TCP_Snd@txHeader+2)& (0+255),b
 13432  0025DE  51A6               	movf	(??_TCP_Snd+5)& (0+255),w,b
 13433  0025E0  11AA               	iorwf	(??_TCP_Snd+9)& (0+255),w,b
 13434  0025E2  6FDD               	movwf	(TCP_Snd@txHeader+3)& (0+255),b
 13435                           
 13436                           ;tcpv4.c: 212: txHeader.sequenceNumber = ((((uint32_t)tcbPtr->localSeqno&(uint32_t)0xff0
      +                          00000) >> 24) | (((uint32_t)tcbPtr->localSeqno&(uint32_t)0x00ff0000) >> 8) | (((uint32_t
      +                          )tcbPtr->localSeqno&(uint32_t)0x0000ff00) << 8) | (((uint32_t)tcbPtr->localSeqno&(uint32
      +                          _
 13437  0025E4  0E10               	movlw	16
 13438  0025E6  DA13               	call	PL433	;call to abstracted procedure
 13439  0025E8  64F7               	cpfsgt	tblptrh,c
 13440  0025EA  D003               	bra	u11707
 13441  0025EC  DA47               	call	PL489	;call to abstracted procedure
 13442  0025EE  DA5F               	call	PL571	;call to abstracted procedure
 13443  0025F0  D004               	bra	u11700
 13444  0025F2                     u11707:
 13445  0025F2  EC6D  F011         	call	PL431	;call to abstracted procedure
 13446  0025F6  DA56               	call	PL545	;call to abstracted procedure
 13447  0025F8  DB0E               	call	PL667	;call to abstracted procedure
 13448  0025FA                     u11700:
 13449  0025FA  DAD7               	call	PL615	;call to abstracted procedure
 13450  0025FC  0E10               	movlw	16
 13451  0025FE  DA45               	call	PL529	;call to abstracted procedure
 13452  002600  64F7               	cpfsgt	tblptrh,c
 13453  002602  D002               	bra	u11717
 13454  002604  DA77               	call	PL587	;call to abstracted procedure
 13455  002606  D003               	bra	u11710
 13456  002608                     u11717:
 13457  002608  EC6D  F011         	call	PL431	;call to abstracted procedure
 13458  00260C  DAE1               	call	PL645	;call to abstracted procedure
 13459  00260E                     u11710:
 13460  00260E  DA56               	call	PL575	;call to abstracted procedure
 13461  002610  0E10               	movlw	16
 13462  002612  DABE               	call	PL605	;call to abstracted procedure
 13463  002614  64F7               	cpfsgt	tblptrh,c
 13464  002616  D002               	bra	u11727
 13465  002618  DA7A               	call	PL589	;call to abstracted procedure
 13466  00261A  D003               	bra	u11720
 13467  00261C                     u11727:
 13468  00261C  EC6D  F011         	call	PL431	;call to abstracted procedure
 13469  002620  DAE0               	call	PL647	;call to abstracted procedure
 13470  002622                     u11720:
 13471  002622  DA5A               	call	PL581	;call to abstracted procedure
 13472  002624  0E10               	movlw	16
 13473  002626  DA8D               	call	PL593	;call to abstracted procedure
 13474  002628  64F7               	cpfsgt	tblptrh,c
 13475  00262A  D002               	bra	u11737
 13476  00262C  DA7D               	call	PL591	;call to abstracted procedure
 13477  00262E  D003               	bra	u11730
 13478  002630                     u11737:
 13479  002630  EC6D  F011         	call	PL431	;call to abstracted procedure
 13480  002634  DADF               	call	PL649	;call to abstracted procedure
 13481  002636                     u11730:
 13482  002636  D9F8               	call	PL481	;call to abstracted procedure
 13483  002638  6FDE               	movwf	(TCP_Snd@txHeader+4)& (0+255),b
 13484  00263A  51A8               	movf	(??_TCP_Snd+7)& (0+255),w,b
 13485  00263C  11CE               	iorwf	(??_TCP_Snd+45)& (0+255),w,b
 13486  00263E  6FDF               	movwf	(TCP_Snd@txHeader+5)& (0+255),b
 13487  002640  51A9               	movf	(??_TCP_Snd+8)& (0+255),w,b
 13488  002642  11CF               	iorwf	(??_TCP_Snd+46)& (0+255),w,b
 13489  002644  6FE0               	movwf	(TCP_Snd@txHeader+6)& (0+255),b
 13490  002646  51AA               	movf	(??_TCP_Snd+9)& (0+255),w,b
 13491  002648  11D0               	iorwf	(??_TCP_Snd+47)& (0+255),w,b
 13492  00264A  6FE1               	movwf	(TCP_Snd@txHeader+7)& (0+255),b
 13493                           
 13494                           ;tcpv4.c: 214: txHeader.ackNumber = ((((uint32_t)tcbPtr->remoteAck&(uint32_t)0xff000000)
      +                           >> 24) | (((uint32_t)tcbPtr->remoteAck&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)tcbPtr
      +                          ->remoteAck&(uint32_t)0x0000ff00) << 8) | (((uint32_t)tcbPtr->remoteAck&(uint32_t)0x0000
      +                          0
 13495  00264C  0E0C               	movlw	12
 13496  00264E  D9DF               	call	PL433	;call to abstracted procedure
 13497  002650  64F7               	cpfsgt	tblptrh,c
 13498  002652  D003               	bra	u11757
 13499  002654  DA13               	call	PL489	;call to abstracted procedure
 13500  002656  DA2B               	call	PL571	;call to abstracted procedure
 13501  002658  D004               	bra	u11750
 13502  00265A                     u11757:
 13503  00265A  EC6D  F011         	call	PL431	;call to abstracted procedure
 13504  00265E  DA22               	call	PL545	;call to abstracted procedure
 13505  002660  DADA               	call	PL667	;call to abstracted procedure
 13506  002662                     u11750:
 13507  002662  DAA3               	call	PL615	;call to abstracted procedure
 13508  002664  0E0C               	movlw	12
 13509  002666  DA11               	call	PL529	;call to abstracted procedure
 13510  002668  64F7               	cpfsgt	tblptrh,c
 13511  00266A  D002               	bra	u11767
 13512  00266C  DA43               	call	PL587	;call to abstracted procedure
 13513  00266E  D003               	bra	u11760
 13514  002670                     u11767:
 13515  002670  EC6D  F011         	call	PL431	;call to abstracted procedure
 13516  002674  DAAD               	call	PL645	;call to abstracted procedure
 13517  002676                     u11760:
 13518  002676  DA22               	call	PL575	;call to abstracted procedure
 13519  002678  0E0C               	movlw	12
 13520  00267A  DA8A               	call	PL605	;call to abstracted procedure
 13521  00267C  64F7               	cpfsgt	tblptrh,c
 13522  00267E  D002               	bra	u11777
 13523  002680  DA46               	call	PL589	;call to abstracted procedure
 13524  002682  D003               	bra	u11770
 13525  002684                     u11777:
 13526  002684  EC6D  F011         	call	PL431	;call to abstracted procedure
 13527  002688  DAAC               	call	PL647	;call to abstracted procedure
 13528  00268A                     u11770:
 13529  00268A  DA26               	call	PL581	;call to abstracted procedure
 13530  00268C  0E0C               	movlw	12
 13531  00268E  DA59               	call	PL593	;call to abstracted procedure
 13532  002690  64F7               	cpfsgt	tblptrh,c
 13533  002692  D002               	bra	u11787
 13534  002694  DA49               	call	PL591	;call to abstracted procedure
 13535  002696  D003               	bra	u11780
 13536  002698                     u11787:
 13537  002698  EC6D  F011         	call	PL431	;call to abstracted procedure
 13538  00269C  DAAB               	call	PL649	;call to abstracted procedure
 13539  00269E                     u11780:
 13540  00269E  D9C4               	call	PL481	;call to abstracted procedure
 13541  0026A0  6FE2               	movwf	(TCP_Snd@txHeader+8)& (0+255),b
 13542  0026A2  51A8               	movf	(??_TCP_Snd+7)& (0+255),w,b
 13543  0026A4  11CE               	iorwf	(??_TCP_Snd+45)& (0+255),w,b
 13544  0026A6  6FE3               	movwf	(TCP_Snd@txHeader+9)& (0+255),b
 13545  0026A8  51A9               	movf	(??_TCP_Snd+8)& (0+255),w,b
 13546  0026AA  11CF               	iorwf	(??_TCP_Snd+46)& (0+255),w,b
 13547  0026AC  6FE4               	movwf	(TCP_Snd@txHeader+10)& (0+255),b
 13548  0026AE  51AA               	movf	(??_TCP_Snd+9)& (0+255),w,b
 13549  0026B0  11D0               	iorwf	(??_TCP_Snd+47)& (0+255),w,b
 13550  0026B2  6FE5               	movwf	(TCP_Snd@txHeader+11)& (0+255),b
 13551                           
 13552                           ; BSR set to: 0
 13553                           ;tcpv4.c: 216: txHeader.ns = 0;
 13554  0026B4  91E6               	bcf	(TCP_Snd@txHeader+12)& (0+255),0,b
 13555                           
 13556                           ; BSR set to: 0
 13557                           ;tcpv4.c: 217: txHeader.reserved = 0;
 13558  0026B6  0EF1               	movlw	-15
 13559  0026B8  17E6               	andwf	(TCP_Snd@txHeader+12)& (0+255),f,b
 13560                           
 13561                           ; BSR set to: 0
 13562                           ;tcpv4.c: 218: txHeader.dataOffset = 5;
 13563  0026BA  51E6               	movf	(TCP_Snd@txHeader+12)& (0+255),w,b
 13564  0026BC  0B0F               	andlw	-241
 13565  0026BE  0950               	iorlw	80
 13566  0026C0  6FE6               	movwf	(TCP_Snd@txHeader+12)& (0+255),b
 13567                           
 13568                           ;tcpv4.c: 219: txHeader.windowSize = ((((uint16_t)tcbPtr->localWnd & (uint16_t)0xFF00) >
      +                          > 8) | (((uint16_t)tcbPtr->localWnd & (uint16_t)0x00FF) << 8));
 13569  0026C2  0E1A               	movlw	26
 13570  0026C4  D9A4               	call	PL433	;call to abstracted procedure
 13571  0026C6  64F7               	cpfsgt	tblptrh,c
 13572  0026C8  D002               	bra	u11807
 13573  0026CA  D9D8               	call	PL489	;call to abstracted procedure
 13574  0026CC  D003               	bra	u11800
 13575  0026CE                     u11807:
 13576  0026CE  EC6D  F011         	call	PL431	;call to abstracted procedure
 13577  0026D2  D9E8               	call	PL545	;call to abstracted procedure
 13578  0026D4                     u11800:
 13579  0026D4  DACB               	call	PL751	;call to abstracted procedure
 13580  0026D6  0E1A               	movlw	26
 13581  0026D8  DA4E               	call	PL603	;call to abstracted procedure
 13582  0026DA  64F7               	cpfsgt	tblptrh,c
 13583  0026DC  D002               	bra	u11817
 13584  0026DE  DAAF               	call	PL689	;call to abstracted procedure
 13585  0026E0  D003               	bra	u11810
 13586  0026E2                     u11817:
 13587  0026E2  EC6D  F011         	call	PL431	;call to abstracted procedure
 13588  0026E6  DAC7               	call	PL757	;call to abstracted procedure
 13589  0026E8                     u11810:
 13590  0026E8  DA9B               	call	PL669	;call to abstracted procedure
 13591  0026EA  6FE8               	movwf	(TCP_Snd@txHeader+14)& (0+255),b
 13592  0026EC  51A6               	movf	(??_TCP_Snd+5)& (0+255),w,b
 13593  0026EE  11AA               	iorwf	(??_TCP_Snd+9)& (0+255),w,b
 13594  0026F0  6FE9               	movwf	(TCP_Snd@txHeader+15)& (0+255),b
 13595                           
 13596                           ; BSR set to: 0
 13597                           ;tcpv4.c: 220: txHeader.checksum = 0;
 13598  0026F2  6BEA               	clrf	(TCP_Snd@txHeader+16)& (0+255),b
 13599  0026F4  6BEB               	clrf	(TCP_Snd@txHeader+17)& (0+255),b
 13600                           
 13601                           ; BSR set to: 0
 13602                           ;tcpv4.c: 221: txHeader.urgentPtr = 0;
 13603  0026F6  6BEC               	clrf	(TCP_Snd@txHeader+18)& (0+255),b
 13604  0026F8  6BED               	clrf	(TCP_Snd@txHeader+19)& (0+255),b
 13605                           
 13606                           ;tcpv4.c: 223: if ((tcbPtr->flags) & (0x02U | 0x04U))
 13607  0026FA  0E35               	movlw	53
 13608  0026FC  D988               	call	PL433	;call to abstracted procedure
 13609  0026FE  64F7               	cpfsgt	tblptrh,c
 13610  002700  D003               	bra	u11827
 13611  002702  0008               	tblrd		*
 13612  002704  50F5               	movf	tablat,w,c
 13613  002706  D003               	bra	u11820
 13614  002708                     u11827:
 13615  002708  EC6D  F011         	call	PL431	;call to abstracted procedure
 13616  00270C  50EF               	movf	indf0,w,c
 13617  00270E                     u11820:
 13618  00270E  0100               	movlb	0	; () banked
 13619  002710  6FA3               	movwf	(??_TCP_Snd+2)& (0+255),b
 13620  002712  0E06               	movlw	6
 13621  002714  17A3               	andwf	(??_TCP_Snd+2)& (0+255),f,b
 13622  002716  E003               	bz	l8425
 13623                           
 13624                           ; BSR set to: 0
 13625                           ;tcpv4.c: 224: {
 13626                           ;tcpv4.c: 225: tcpDataLength = 0;
 13627  002718  6BD8               	clrf	TCP_Snd@tcpDataLength& (0+255),b
 13628  00271A  6BD9               	clrf	(TCP_Snd@tcpDataLength+1)& (0+255),b
 13629                           
 13630                           ;tcpv4.c: 226: } else
 13631  00271C  D094               	goto	l1121
 13632  00271E                     l8425:
 13633                           
 13634                           ; BSR set to: 0
 13635                           ;tcpv4.c: 227: {
 13636                           ;tcpv4.c: 228: tcpDataLength = tcbPtr->bytesToSend;
 13637  00271E  0E27               	movlw	39
 13638  002720  D976               	call	PL433	;call to abstracted procedure
 13639  002722  64F7               	cpfsgt	tblptrh,c
 13640  002724  D002               	bra	u11847
 13641  002726  DA4D               	call	PL631	;call to abstracted procedure
 13642  002728  D003               	bra	u11840
 13643  00272A                     u11847:
 13644  00272A  EC6D  F011         	call	PL431	;call to abstracted procedure
 13645  00272E  DA8E               	call	PL699	;call to abstracted procedure
 13646  002730                     u11840:
 13647                           
 13648                           ;tcpv4.c: 230: if (tcpDataLength != 0)
 13649  002730  0100               	movlb	0	; () banked
 13650  002732  51D8               	movf	TCP_Snd@tcpDataLength& (0+255),w,b
 13651  002734  11D9               	iorwf	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 13652  002736  E101 D086          	bz	l1121
 13653                           
 13654                           ; BSR set to: 0
 13655                           ;tcpv4.c: 231: {
 13656                           ;tcpv4.c: 232: if(tcpDataLength > tcbPtr->remoteWnd)
 13657  00273A  0E18               	movlw	24
 13658  00273C  D968               	call	PL433	;call to abstracted procedure
 13659  00273E  64F7               	cpfsgt	tblptrh,c
 13660  002740  D002               	bra	u11867
 13661  002742  D99C               	call	PL489	;call to abstracted procedure
 13662  002744  D003               	bra	u11860
 13663  002746                     u11867:
 13664  002746  EC6D  F011         	call	PL431	;call to abstracted procedure
 13665  00274A  D9AC               	call	PL545	;call to abstracted procedure
 13666  00274C                     u11860:
 13667  00274C  DA84               	call	PL713	;call to abstracted procedure
 13668  00274E  E209               	bc	l1123
 13669                           
 13670                           ; BSR set to: 0
 13671                           ;tcpv4.c: 233: {
 13672                           ;tcpv4.c: 234: tcpDataLength = tcbPtr->remoteWnd;
 13673  002750  0E18               	movlw	24
 13674  002752  D95D               	call	PL433	;call to abstracted procedure
 13675  002754  64F7               	cpfsgt	tblptrh,c
 13676  002756  D002               	bra	u11887
 13677  002758  DA34               	call	PL631	;call to abstracted procedure
 13678  00275A  D003               	bra	u11880
 13679  00275C                     u11887:
 13680  00275C  EC6D  F011         	call	PL431	;call to abstracted procedure
 13681  002760  DA75               	call	PL699	;call to abstracted procedure
 13682  002762                     u11880:
 13683  002762                     l1123:
 13684                           
 13685                           ;tcpv4.c: 235: }
 13686                           ;tcpv4.c: 237: if(tcpDataLength > tcbPtr->mss)
 13687  002762  0E1C               	movlw	28
 13688  002764  0100               	movlb	0	; () banked
 13689  002766  D953               	call	PL433	;call to abstracted procedure
 13690  002768  64F7               	cpfsgt	tblptrh,c
 13691  00276A  D002               	bra	u11897
 13692  00276C  D987               	call	PL489	;call to abstracted procedure
 13693  00276E  D003               	bra	u11890
 13694  002770                     u11897:
 13695  002770  EC6D  F011         	call	PL431	;call to abstracted procedure
 13696  002774  D997               	call	PL545	;call to abstracted procedure
 13697  002776                     u11890:
 13698  002776  DA6F               	call	PL713	;call to abstracted procedure
 13699  002778  E209               	bc	l1124
 13700                           
 13701                           ; BSR set to: 0
 13702                           ;tcpv4.c: 238: {
 13703                           ;tcpv4.c: 239: tcpDataLength = tcbPtr->mss;
 13704  00277A  0E1C               	movlw	28
 13705  00277C  D948               	call	PL433	;call to abstracted procedure
 13706  00277E  64F7               	cpfsgt	tblptrh,c
 13707  002780  D002               	bra	u11917
 13708  002782  DA1F               	call	PL631	;call to abstracted procedure
 13709  002784  D003               	bra	u11910
 13710  002786                     u11917:
 13711  002786  EC6D  F011         	call	PL431	;call to abstracted procedure
 13712  00278A  DA60               	call	PL699	;call to abstracted procedure
 13713  00278C                     u11910:
 13714  00278C                     l1124:
 13715                           
 13716                           ;tcpv4.c: 240: }
 13717                           ;tcpv4.c: 241: data = tcbPtr->txBufferPtr;
 13718  00278C  0E25               	movlw	37
 13719  00278E  0100               	movlb	0	; () banked
 13720  002790  D93E               	call	PL433	;call to abstracted procedure
 13721  002792  64F7               	cpfsgt	tblptrh,c
 13722  002794  D007               	bra	u11927
 13723  002796  0009               	tblrd		*+
 13724  002798  CFF5 F0D1          	movff	tablat,TCP_Snd@data
 13725  00279C  0009               	tblrd		*+
 13726  00279E  CFF5 F0D2          	movff	tablat,TCP_Snd@data+1
 13727  0027A2  D006               	bra	u11920
 13728  0027A4                     u11927:
 13729  0027A4  EC6D  F011         	call	PL431	;call to abstracted procedure
 13730  0027A8  CFEE F0D1          	movff	postinc0,TCP_Snd@data
 13731  0027AC  CFEE F0D2          	movff	postinc0,TCP_Snd@data+1
 13732  0027B0                     u11920:
 13733                           
 13734                           ;tcpv4.c: 244: tcbPtr->txBufferPtr = tcbPtr->txBufferPtr + tcpDataLength;
 13735  0027B0  0E25               	movlw	37
 13736  0027B2  0100               	movlb	0	; () banked
 13737  0027B4  D92C               	call	PL433	;call to abstracted procedure
 13738  0027B6  64F7               	cpfsgt	tblptrh,c
 13739  0027B8  D002               	bra	u11937
 13740  0027BA  D960               	call	PL489	;call to abstracted procedure
 13741  0027BC  D003               	bra	u11930
 13742  0027BE                     u11937:
 13743  0027BE  EC6D  F011         	call	PL431	;call to abstracted procedure
 13744  0027C2  D970               	call	PL545	;call to abstracted procedure
 13745  0027C4                     u11930:
 13746  0027C4  0100               	movlb	0	; () banked
 13747  0027C6  51D8               	movf	TCP_Snd@tcpDataLength& (0+255),w,b
 13748  0027C8  27A3               	addwf	(??_TCP_Snd+2)& (0+255),f,b
 13749  0027CA  51D9               	movf	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 13750  0027CC  23A4               	addwfc	(??_TCP_Snd+3)& (0+255),f,b
 13751  0027CE  0E25               	movlw	37
 13752  0027D0  D9C5               	call	PL599	;call to abstracted procedure
 13753  0027D2  64F7               	cpfsgt	tblptrh,c
 13754  0027D4  D002               	bra	u11947
 13755  0027D6  DA2C               	call	PL683	;call to abstracted procedure
 13756  0027D8  D003               	bra	u11940
 13757  0027DA                     u11947:
 13758  0027DA  EC6D  F011         	call	PL431	;call to abstracted procedure
 13759  0027DE  DA41               	call	PL721	;call to abstracted procedure
 13760  0027E0                     u11940:
 13761                           
 13762                           ;tcpv4.c: 245: tcbPtr->bytesToSend = tcbPtr->bytesToSend - tcpDataLength;
 13763  0027E0  0E27               	movlw	39
 13764  0027E2  0100               	movlb	0	; () banked
 13765  0027E4  D914               	call	PL433	;call to abstracted procedure
 13766  0027E6  64F7               	cpfsgt	tblptrh,c
 13767  0027E8  D002               	bra	u11957
 13768  0027EA  D948               	call	PL489	;call to abstracted procedure
 13769  0027EC  D003               	bra	u11950
 13770  0027EE                     u11957:
 13771  0027EE  EC6D  F011         	call	PL431	;call to abstracted procedure
 13772  0027F2  D958               	call	PL545	;call to abstracted procedure
 13773  0027F4                     u11950:
 13774  0027F4  0100               	movlb	0	; () banked
 13775  0027F6  51D8               	movf	TCP_Snd@tcpDataLength& (0+255),w,b
 13776  0027F8  5FA3               	subwf	(??_TCP_Snd+2)& (0+255),f,b
 13777  0027FA  51D9               	movf	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 13778  0027FC  5BA4               	subwfb	(??_TCP_Snd+3)& (0+255),f,b
 13779  0027FE  0E27               	movlw	39
 13780  002800  D9AD               	call	PL599	;call to abstracted procedure
 13781  002802  64F7               	cpfsgt	tblptrh,c
 13782  002804  D002               	bra	u11967
 13783  002806  DA14               	call	PL683	;call to abstracted procedure
 13784  002808  D003               	bra	u11960
 13785  00280A                     u11967:
 13786  00280A  EC6D  F011         	call	PL431	;call to abstracted procedure
 13787  00280E  DA29               	call	PL721	;call to abstracted procedure
 13788  002810                     u11960:
 13789                           
 13790                           ;tcpv4.c: 247: if (tcbPtr->bytesToSend == 0)
 13791  002810  0E27               	movlw	39
 13792  002812  0100               	movlb	0	; () banked
 13793  002814  D8FC               	call	PL433	;call to abstracted procedure
 13794  002816  64F7               	cpfsgt	tblptrh,c
 13795  002818  D002               	bra	u11977
 13796  00281A  D930               	call	PL489	;call to abstracted procedure
 13797  00281C  D003               	bra	u11970
 13798  00281E                     u11977:
 13799  00281E  EC6D  F011         	call	PL431	;call to abstracted procedure
 13800  002822  D940               	call	PL545	;call to abstracted procedure
 13801  002824                     u11970:
 13802  002824  0100               	movlb	0	; () banked
 13803  002826  51A3               	movf	(??_TCP_Snd+2)& (0+255),w,b
 13804  002828  11A4               	iorwf	(??_TCP_Snd+3)& (0+255),w,b
 13805  00282A  E10D               	bnz	l1121
 13806                           
 13807                           ; BSR set to: 0
 13808                           ;tcpv4.c: 248: {
 13809                           ;tcpv4.c: 249: tcbPtr->flags |= 0x08U;
 13810  00282C  0E35               	movlw	53
 13811  00282E  D8EF               	call	PL433	;call to abstracted procedure
 13812  002830  64F7               	cpfsgt	tblptrh,c
 13813  002832  D005               	bra	u11997
 13814  002834  0E08               	movlw	8
 13815  002836  0008               	tblrd		*
 13816  002838  12F5               	iorwf	tablat,f,c
 13817  00283A  000C               	tblwt		*
 13818  00283C  D004               	bra	u11990
 13819  00283E                     u11997:
 13820  00283E  EC6D  F011         	call	PL431	;call to abstracted procedure
 13821  002842  0E08               	movlw	8
 13822  002844  12EF               	iorwf	indf0,f,c
 13823  002846                     u11990:
 13824  002846                     l1121:
 13825                           
 13826                           ;tcpv4.c: 250: }
 13827                           ;tcpv4.c: 251: }
 13828                           ;tcpv4.c: 252: }
 13829                           ;tcpv4.c: 254: txHeader.flags = tcbPtr->flags;
 13830  002846  0E35               	movlw	53
 13831  002848  0100               	movlb	0	; () banked
 13832  00284A  D8E1               	call	PL433	;call to abstracted procedure
 13833  00284C  64F7               	cpfsgt	tblptrh,c
 13834  00284E  D003               	bra	u12007
 13835  002850  0008               	tblrd		*
 13836  002852  50F5               	movf	tablat,w,c
 13837  002854  D003               	bra	u12000
 13838  002856                     u12007:
 13839  002856  EC6D  F011         	call	PL431	;call to abstracted procedure
 13840  00285A  50EF               	movf	indf0,w,c
 13841  00285C                     u12000:
 13842  00285C  0100               	movlb	0	; () banked
 13843  00285E  6FE7               	movwf	(TCP_Snd@txHeader+13)& (0+255),b
 13844                           
 13845                           ; BSR set to: 0
 13846                           ;tcpv4.c: 255: payloadLength = sizeof(tcpHeader_t) + tcpDataLength;
 13847  002860  0E14               	movlw	20
 13848  002862  25D8               	addwf	TCP_Snd@tcpDataLength& (0+255),w,b
 13849  002864  6FD5               	movwf	TCP_Snd@payloadLength& (0+255),b
 13850  002866  0E00               	movlw	0
 13851  002868  21D9               	addwfc	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 13852  00286A  6FD6               	movwf	(TCP_Snd@payloadLength+1)& (0+255),b
 13853                           
 13854                           ; BSR set to: 0
 13855                           ;tcpv4.c: 257: ret = IPv4_Start(tcbPtr->destIP, TCP);
 13856  00286C  0E02               	movlw	2
 13857  00286E  D8CF               	call	PL433	;call to abstracted procedure
 13858  002870  64F7               	cpfsgt	tblptrh,c
 13859  002872  D00D               	bra	u12017
 13860  002874  0009               	tblrd		*+
 13861  002876  CFF5 F022          	movff	tablat,IPv4_Start@destAddress
 13862  00287A  0009               	tblrd		*+
 13863  00287C  CFF5 F023          	movff	tablat,IPv4_Start@destAddress+1
 13864  002880  0009               	tblrd		*+
 13865  002882  CFF5 F024          	movff	tablat,IPv4_Start@destAddress+2
 13866  002886  0009               	tblrd		*+
 13867  002888  CFF5 F025          	movff	tablat,IPv4_Start@destAddress+3
 13868  00288C  D00A               	bra	u12010
 13869  00288E                     u12017:
 13870  00288E  EC6D  F011         	call	PL431	;call to abstracted procedure
 13871  002892  CFEE F022          	movff	postinc0,IPv4_Start@destAddress
 13872  002896  CFEE F023          	movff	postinc0,IPv4_Start@destAddress+1
 13873  00289A  CFEE F024          	movff	postinc0,IPv4_Start@destAddress+2
 13874  00289E  CFEE F025          	movff	postinc0,IPv4_Start@destAddress+3
 13875  0028A2                     u12010:
 13876  0028A2  0E06               	movlw	6
 13877  0028A4  6E26               	movwf	IPv4_Start@protocol,c
 13878  0028A6  EC08  F023         	call	_IPv4_Start	;wreg free
 13879  0028AA  6FD7               	movwf	TCP_Snd@ret& (0+255),b
 13880                           
 13881                           ; BSR set to: 0
 13882                           ;tcpv4.c: 258: if (ret)
 13883  0028AC  51D7               	movf	TCP_Snd@ret& (0+255),w,b
 13884  0028AE  E039               	bz	l8457
 13885                           
 13886                           ; BSR set to: 0
 13887                           ;tcpv4.c: 259: {
 13888                           ;tcpv4.c: 260: ETH_WriteBlock((uint8_t *) &txHeader, sizeof(tcpHeader_t));
 13889  0028B0  0EDA               	movlw	low TCP_Snd@txHeader
 13890  0028B2  6E17               	movwf	ETH_WriteBlock@buffer,c
 13891  0028B4  6A18               	clrf	ETH_WriteBlock@buffer+1,c
 13892  0028B6  D9E8               	call	PL771	;call to abstracted procedure
 13893  0028B8  EC89  F02E         	call	_ETH_WriteBlock	;wreg free
 13894                           
 13895                           ;tcpv4.c: 262: if (tcpDataLength > 0)
 13896  0028BC  0100               	movlb	0	; () banked
 13897  0028BE  51D8               	movf	TCP_Snd@tcpDataLength& (0+255),w,b
 13898  0028C0  11D9               	iorwf	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 13899  0028C2  E00A               	bz	l8449
 13900                           
 13901                           ; BSR set to: 0
 13902                           ;tcpv4.c: 263: {
 13903                           ;tcpv4.c: 264: ETH_WriteBlock( data, tcpDataLength);
 13904  0028C4  C0D1  F017         	movff	TCP_Snd@data,ETH_WriteBlock@buffer
 13905  0028C8  C0D2  F018         	movff	TCP_Snd@data+1,ETH_WriteBlock@buffer+1
 13906  0028CC  C0D8  F019         	movff	TCP_Snd@tcpDataLength,ETH_WriteBlock@length
 13907  0028D0  C0D9  F01A         	movff	TCP_Snd@tcpDataLength+1,ETH_WriteBlock@length+1
 13908  0028D4  EC89  F02E         	call	_ETH_WriteBlock	;wreg free
 13909  0028D8                     l8449:
 13910                           
 13911                           ;tcpv4.c: 265: }
 13912                           ;tcpv4.c: 267: cksm = payloadLength + TCP;
 13913  0028D8  0E06               	movlw	6
 13914  0028DA  0100               	movlb	0	; () banked
 13915  0028DC  25D5               	addwf	TCP_Snd@payloadLength& (0+255),w,b
 13916  0028DE  6FD3               	movwf	TCP_Snd@cksm& (0+255),b
 13917  0028E0  0E00               	movlw	0
 13918  0028E2  21D6               	addwfc	(TCP_Snd@payloadLength+1)& (0+255),w,b
 13919  0028E4  6FD4               	movwf	(TCP_Snd@cksm+1)& (0+255),b
 13920                           
 13921                           ; BSR set to: 0
 13922                           ;tcpv4.c: 269: cksm = ETH_TxComputeChecksum(sizeof(ethernetFrame_t) + sizeof(ipv4Header_
      +                          t) - 8, payloadLength + 8, cksm);
 13923  0028E6  D9CC               	call	PL769	;call to abstracted procedure
 13924  0028E8  25D5               	addwf	TCP_Snd@payloadLength& (0+255),w,b
 13925  0028EA  6E27               	movwf	ETH_TxComputeChecksum@len,c
 13926  0028EC  0E00               	movlw	0
 13927  0028EE  21D6               	addwfc	(TCP_Snd@payloadLength+1)& (0+255),w,b
 13928  0028F0  6E28               	movwf	ETH_TxComputeChecksum@len+1,c
 13929  0028F2  C0D3  F029         	movff	TCP_Snd@cksm,ETH_TxComputeChecksum@seed
 13930  0028F6  C0D4  F02A         	movff	TCP_Snd@cksm+1,ETH_TxComputeChecksum@seed+1
 13931  0028FA  ECBD  F02B         	call	_ETH_TxComputeChecksum	;wreg free
 13932  0028FE  C025  F0D3         	movff	?_ETH_TxComputeChecksum,TCP_Snd@cksm
 13933  002902  C026  F0D4         	movff	?_ETH_TxComputeChecksum+1,TCP_Snd@cksm+1
 13934                           
 13935                           ; BSR set to: 0
 13936                           ;tcpv4.c: 270: ETH_Insert((char *)&cksm, 2, sizeof(ethernetFrame_t) + sizeof(ipv4Header_
      +                          t) + (int)(((char*)&((tcpHeader_t *)1)->checksum)-1));
 13937  002906  ECC0  F02C         	call	PL625	;call to abstracted procedure
 13938  00290A  0E32               	movlw	50
 13939  00290C  6E19               	movwf	ETH_Insert@offset,c
 13940  00290E  0ED3               	movlw	TCP_Snd@cksm& (0+255)
 13941  002910  EC3B  F02F         	call	_ETH_Insert
 13942                           
 13943                           ;tcpv4.c: 272: ret = IPV4_Send(payloadLength);
 13944  002914  C0D5  F031         	movff	TCP_Snd@payloadLength,IPV4_Send@payloadLength
 13945  002918  C0D6  F032         	movff	TCP_Snd@payloadLength+1,IPV4_Send@payloadLength+1
 13946  00291C  EC8D  F02C         	call	_IPV4_Send	;wreg free
 13947  002920  6FD7               	movwf	TCP_Snd@ret& (0+255),b
 13948  002922                     l8457:
 13949                           
 13950                           ; BSR set to: 0
 13951                           ;tcpv4.c: 273: }
 13952                           ;tcpv4.c: 277: if (ret == 0)
 13953  002922  51D7               	movf	TCP_Snd@ret& (0+255),w,b
 13954  002924  E13E               	bnz	l8463
 13955                           
 13956                           ; BSR set to: 0
 13957                           ;tcpv4.c: 278: {
 13958                           ;tcpv4.c: 281: tcbPtr->timeoutsCount = tcbPtr->timeoutsCount + 1;
 13959  002926  0E34               	movlw	52
 13960  002928  D872               	call	PL433	;call to abstracted procedure
 13961  00292A  64F7               	cpfsgt	tblptrh,c
 13962  00292C  D003               	bra	u12057
 13963  00292E  0008               	tblrd		*
 13964  002930  50F5               	movf	tablat,w,c
 13965  002932  D003               	bra	u12050
 13966  002934                     u12057:
 13967  002934  EC6D  F011         	call	PL431	;call to abstracted procedure
 13968  002938  50EF               	movf	indf0,w,c
 13969  00293A                     u12050:
 13970  00293A  0100               	movlb	0	; () banked
 13971  00293C  6FA3               	movwf	(??_TCP_Snd+2)& (0+255),b
 13972  00293E  2BA3               	incf	(??_TCP_Snd+2)& (0+255),f,b
 13973  002940  0E34               	movlw	52
 13974  002942  259F               	addwf	TCP_Snd@tcbPtr& (0+255),w,b
 13975  002944  6FA4               	movwf	(??_TCP_Snd+3)& (0+255),b
 13976  002946  0E00               	movlw	0
 13977  002948  21A0               	addwfc	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 13978  00294A  6FA5               	movwf	(??_TCP_Snd+4)& (0+255),b
 13979  00294C  C0A4  FFF6         	movff	??_TCP_Snd+3,tblptrl
 13980  002950  C0A5  FFF7         	movff	??_TCP_Snd+4,tblptrh
 13981  002954  0E00               	movlw	low (__smallconst shr (0+16))
 13982  002956  6EF8               	movwf	tblptru,c
 13983  002958  0E0F               	movlw	(high __ramtop+-1)
 13984  00295A  64F7               	cpfsgt	tblptrh,c
 13985  00295C  D004               	bra	u12067
 13986  00295E  C0A3  FFF5         	movff	??_TCP_Snd+2,tablat
 13987  002962  000C               	tblwt		*
 13988  002964  D004               	bra	u12060
 13989  002966                     u12067:
 13990  002966  EC6D  F011         	call	PL431	;call to abstracted procedure
 13991  00296A  C0A3  FFEF         	movff	??_TCP_Snd+2,indf0
 13992  00296E                     u12060:
 13993                           
 13994                           ;tcpv4.c: 283: if (tcbPtr->timeout == 0)
 13995  00296E  0E30               	movlw	48
 13996  002970  0100               	movlb	0	; () banked
 13997  002972  D84D               	call	PL433	;call to abstracted procedure
 13998  002974  64F7               	cpfsgt	tblptrh,c
 13999  002976  D002               	bra	u12077
 14000  002978  D881               	call	PL489	;call to abstracted procedure
 14001  00297A  D003               	bra	u12070
 14002  00297C                     u12077:
 14003  00297C  EC6D  F011         	call	PL431	;call to abstracted procedure
 14004  002980  D891               	call	PL545	;call to abstracted procedure
 14005  002982                     u12070:
 14006  002982  0100               	movlb	0	; () banked
 14007  002984  51A3               	movf	(??_TCP_Snd+2)& (0+255),w,b
 14008  002986  11A4               	iorwf	(??_TCP_Snd+3)& (0+255),w,b
 14009  002988  E13F               	bnz	l8465
 14010                           
 14011                           ; BSR set to: 0
 14012                           ;tcpv4.c: 284: {
 14013                           ;tcpv4.c: 285: tcbPtr->timeout = ((unsigned long)1*2);
 14014  00298A  0E30               	movlw	48
 14015  00298C  D840               	call	PL433	;call to abstracted procedure
 14016  00298E  64F7               	cpfsgt	tblptrh,c
 14017  002990  D003               	bra	u12097
 14018  002992  EC42  F012         	call	PL503	;call to abstracted procedure
 14019  002996  D004               	bra	u12090
 14020  002998                     u12097:
 14021  002998  EC6D  F011         	call	PL431	;call to abstracted procedure
 14022  00299C  EC96  F012         	call	PL641	;call to abstracted procedure
 14023  0029A0                     u12090:
 14024  0029A0  D033               	goto	l8465
 14025  0029A2                     l8463:
 14026                           
 14027                           ; BSR set to: 0
 14028                           ;tcpv4.c: 288: else
 14029                           ;tcpv4.c: 289: {
 14030                           ;tcpv4.c: 291: tcbPtr->localSeqno = tcbPtr->localSeqno + tcpDataLength;
 14031  0029A2  0E10               	movlw	16
 14032  0029A4  D834               	call	PL433	;call to abstracted procedure
 14033  0029A6  64F7               	cpfsgt	tblptrh,c
 14034  0029A8  D003               	bra	u12107
 14035  0029AA  D868               	call	PL489	;call to abstracted procedure
 14036  0029AC  D880               	call	PL571	;call to abstracted procedure
 14037  0029AE  D004               	bra	u12100
 14038  0029B0                     u12107:
 14039  0029B0  EC6D  F011         	call	PL431	;call to abstracted procedure
 14040  0029B4  D877               	call	PL545	;call to abstracted procedure
 14041  0029B6  D92F               	call	PL667	;call to abstracted procedure
 14042  0029B8                     u12100:
 14043  0029B8  0100               	movlb	0	; () banked
 14044  0029BA  51D8               	movf	TCP_Snd@tcpDataLength& (0+255),w,b
 14045  0029BC  25A3               	addwf	(??_TCP_Snd+2)& (0+255),w,b
 14046  0029BE  6FA7               	movwf	(??_TCP_Snd+6)& (0+255),b
 14047  0029C0  51D9               	movf	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 14048  0029C2  21A4               	addwfc	(??_TCP_Snd+3)& (0+255),w,b
 14049  0029C4  6FA8               	movwf	(??_TCP_Snd+7)& (0+255),b
 14050  0029C6  0E00               	movlw	0
 14051  0029C8  21A5               	addwfc	(??_TCP_Snd+4)& (0+255),w,b
 14052  0029CA  6FA9               	movwf	(??_TCP_Snd+8)& (0+255),b
 14053  0029CC  0E00               	movlw	0
 14054  0029CE  21A6               	addwfc	(??_TCP_Snd+5)& (0+255),w,b
 14055  0029D0  6FAA               	movwf	(??_TCP_Snd+9)& (0+255),b
 14056  0029D2  0E10               	movlw	16
 14057  0029D4  D85A               	call	PL529	;call to abstracted procedure
 14058  0029D6  64F7               	cpfsgt	tblptrh,c
 14059  0029D8  D00D               	bra	u12117
 14060  0029DA  C0A7  FFF5         	movff	??_TCP_Snd+6,tablat
 14061  0029DE  000D               	tblwt		*+
 14062  0029E0  C0A8  FFF5         	movff	??_TCP_Snd+7,tablat
 14063  0029E4  000D               	tblwt		*+
 14064  0029E6  C0A9  FFF5         	movff	??_TCP_Snd+8,tablat
 14065  0029EA  000D               	tblwt		*+
 14066  0029EC  C0AA  FFF5         	movff	??_TCP_Snd+9,tablat
 14067  0029F0  000C               	tblwt		*
 14068  0029F2  D00A               	bra	u12110
 14069  0029F4                     u12117:
 14070  0029F4  EC6D  F011         	call	PL431	;call to abstracted procedure
 14071  0029F8  C0A7  FFEE         	movff	??_TCP_Snd+6,postinc0
 14072  0029FC  C0A8  FFEE         	movff	??_TCP_Snd+7,postinc0
 14073  002A00  C0A9  FFEE         	movff	??_TCP_Snd+8,postinc0
 14074  002A04  C0AA  FFEF         	movff	??_TCP_Snd+9,indf0
 14075  002A08                     u12110:
 14076  002A08                     l8465:
 14077                           
 14078                           ;tcpv4.c: 293: }
 14079                           ;tcpv4.c: 295: return ret;
 14080  002A08  0100               	movlb	0	; () banked
 14081  002A0A  51D7               	movf	TCP_Snd@ret& (0+255),w,b
 14082                           
 14083                           ; BSR set to: 0
 14084  002A0C  0012               	return		;funcret
 14085  002A0E                     __end_of_TCP_Snd:
 14086                           	opt stack 0
 14087  002A0E                     PL433:
 14088                           	opt stack 15
 14089  002A0E  259F               	addwf	TCP_Snd@tcbPtr& (0+255),w,b
 14090  002A10  6FA1               	movwf	??_TCP_Snd& (0+255),b
 14091  002A12  0E00               	movlw	0
 14092  002A14  21A0               	addwfc	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 14093  002A16  6FA2               	movwf	(??_TCP_Snd+1)& (0+255),b
 14094  002A18  C0A1  FFF6         	movff	??_TCP_Snd,tblptrl
 14095  002A1C  C0A2  FFF7         	movff	??_TCP_Snd+1,tblptrh
 14096  002A20  0E00               	movlw	low (__smallconst shr (0+16))
 14097  002A22  6EF8               	movwf	tblptru,c
 14098  002A24  0E0F               	movlw	(high __ramtop+-1)
 14099  002A26  0012               	return	
 14100  002A28                     __end_ofPL433:
 14101                           	opt stack 0
 14102  002A28                     PL481:
 14103                           	opt stack 15
 14104  002A28  0100               	movlb	0	; () banked
 14105  002A2A  6BC5               	clrf	(??_TCP_Snd+36)& (0+255),b
 14106  002A2C  6BC6               	clrf	(??_TCP_Snd+37)& (0+255),b
 14107  002A2E  6BC7               	clrf	(??_TCP_Snd+38)& (0+255),b
 14108  002A30  51C4               	movf	(??_TCP_Snd+35)& (0+255),w,b
 14109  002A32  6FC8               	movwf	(??_TCP_Snd+39)& (0+255),b
 14110  002A34  0E19               	movlw	25
 14111  002A36  D005               	goto	u11740
 14112  002A38                     u11745:
 14113  002A38  90D8               	bcf	status,0,c
 14114  002A3A  33C8               	rrcf	(??_TCP_Snd+39)& (0+255),f,b
 14115  002A3C  33C7               	rrcf	(??_TCP_Snd+38)& (0+255),f,b
 14116  002A3E  33C6               	rrcf	(??_TCP_Snd+37)& (0+255),f,b
 14117  002A40  33C5               	rrcf	(??_TCP_Snd+36)& (0+255),f,b
 14118  002A42                     u11740:
 14119  002A42  2EE8               	decfsz	wreg,f,c
 14120  002A44  D7F9               	goto	u11745
 14121  002A46  51BB               	movf	(??_TCP_Snd+26)& (0+255),w,b
 14122  002A48  11C5               	iorwf	(??_TCP_Snd+36)& (0+255),w,b
 14123  002A4A  6FC9               	movwf	(??_TCP_Snd+40)& (0+255),b
 14124  002A4C  51BC               	movf	(??_TCP_Snd+27)& (0+255),w,b
 14125  002A4E  11C6               	iorwf	(??_TCP_Snd+37)& (0+255),w,b
 14126  002A50  6FCA               	movwf	(??_TCP_Snd+41)& (0+255),b
 14127  002A52  51BD               	movf	(??_TCP_Snd+28)& (0+255),w,b
 14128  002A54  11C7               	iorwf	(??_TCP_Snd+38)& (0+255),w,b
 14129  002A56  6FCB               	movwf	(??_TCP_Snd+42)& (0+255),b
 14130  002A58  51BE               	movf	(??_TCP_Snd+29)& (0+255),w,b
 14131  002A5A  11C8               	iorwf	(??_TCP_Snd+39)& (0+255),w,b
 14132  002A5C  6FCC               	movwf	(??_TCP_Snd+43)& (0+255),b
 14133  002A5E  51B1               	movf	(??_TCP_Snd+16)& (0+255),w,b
 14134  002A60  11C9               	iorwf	(??_TCP_Snd+40)& (0+255),w,b
 14135  002A62  6FCD               	movwf	(??_TCP_Snd+44)& (0+255),b
 14136  002A64  51B2               	movf	(??_TCP_Snd+17)& (0+255),w,b
 14137  002A66  11CA               	iorwf	(??_TCP_Snd+41)& (0+255),w,b
 14138  002A68  6FCE               	movwf	(??_TCP_Snd+45)& (0+255),b
 14139  002A6A  51B3               	movf	(??_TCP_Snd+18)& (0+255),w,b
 14140  002A6C  11CB               	iorwf	(??_TCP_Snd+42)& (0+255),w,b
 14141  002A6E  6FCF               	movwf	(??_TCP_Snd+46)& (0+255),b
 14142  002A70  51B4               	movf	(??_TCP_Snd+19)& (0+255),w,b
 14143  002A72  11CC               	iorwf	(??_TCP_Snd+43)& (0+255),w,b
 14144  002A74  6FD0               	movwf	(??_TCP_Snd+47)& (0+255),b
 14145  002A76  51A7               	movf	(??_TCP_Snd+6)& (0+255),w,b
 14146  002A78  11CD               	iorwf	(??_TCP_Snd+44)& (0+255),w,b
 14147  002A7A  0012               	return	
 14148  002A7C                     __end_ofPL481:
 14149                           	opt stack 0
 14150  002A7C                     PL489:
 14151                           	opt stack 15
 14152  002A7C  0009               	tblrd		*+
 14153  002A7E  CFF5 F0A3          	movff	tablat,??_TCP_Snd+2
 14154  002A82  0009               	tblrd		*+
 14155  002A84  CFF5 F0A4          	movff	tablat,??_TCP_Snd+3
 14156  002A88  0012               	return	
 14157  002A8A                     __end_ofPL489:
 14158                           	opt stack 0
 14159  002A8A                     PL529:
 14160                           	opt stack 15
 14161  002A8A  259F               	addwf	TCP_Snd@tcbPtr& (0+255),w,b
 14162  002A8C  6FAB               	movwf	(??_TCP_Snd+10)& (0+255),b
 14163  002A8E  0E00               	movlw	0
 14164  002A90  21A0               	addwfc	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 14165  002A92  6FAC               	movwf	(??_TCP_Snd+11)& (0+255),b
 14166  002A94  C0AB  FFF6         	movff	??_TCP_Snd+10,tblptrl
 14167  002A98  C0AC  FFF7         	movff	??_TCP_Snd+11,tblptrh
 14168  002A9C  0E00               	movlw	low (__smallconst shr (0+16))
 14169  002A9E  6EF8               	movwf	tblptru,c
 14170  002AA0  0E0F               	movlw	(high __ramtop+-1)
 14171  002AA2  0012               	return	
 14172  002AA4                     __end_ofPL529:
 14173                           	opt stack 0
 14174  002AA4                     PL545:
 14175                           	opt stack 15
 14176  002AA4  CFEE F0A3          	movff	postinc0,??_TCP_Snd+2
 14177  002AA8  CFEE F0A4          	movff	postinc0,??_TCP_Snd+3
 14178  002AAC  0012               	return	
 14179  002AAE                     __end_ofPL545:
 14180                           	opt stack 0
 14181  002AAE                     PL571:
 14182                           	opt stack 15
 14183  002AAE  0009               	tblrd		*+
 14184  002AB0  CFF5 F0A5          	movff	tablat,??_TCP_Snd+4
 14185  002AB4  0009               	tblrd		*+
 14186  002AB6  CFF5 F0A6          	movff	tablat,??_TCP_Snd+5
 14187  002ABA  0012               	return	
 14188  002ABC                     __end_ofPL571:
 14189                           	opt stack 0
 14190  002ABC                     PL575:
 14191                           	opt stack 15
 14192  002ABC  0100               	movlb	0	; () banked
 14193  002ABE  6BB1               	clrf	(??_TCP_Snd+16)& (0+255),b
 14194  002AC0  51AE               	movf	(??_TCP_Snd+13)& (0+255),w,b
 14195  002AC2  6FB2               	movwf	(??_TCP_Snd+17)& (0+255),b
 14196  002AC4  6BB3               	clrf	(??_TCP_Snd+18)& (0+255),b
 14197  002AC6  6BB4               	clrf	(??_TCP_Snd+19)& (0+255),b
 14198  002AC8  C0B3  F0B4         	movff	??_TCP_Snd+18,??_TCP_Snd+19
 14199  002ACC  C0B2  F0B3         	movff	??_TCP_Snd+17,??_TCP_Snd+18
 14200  002AD0  C0B1  F0B2         	movff	??_TCP_Snd+16,??_TCP_Snd+17
 14201  002AD4  6BB1               	clrf	(??_TCP_Snd+16)& (0+255),b
 14202  002AD6  0012               	return	
 14203  002AD8                     __end_ofPL575:
 14204                           	opt stack 0
 14205  002AD8                     PL581:
 14206                           	opt stack 15
 14207  002AD8  C0B8  F0B7         	movff	??_TCP_Snd+23,??_TCP_Snd+22
 14208  002ADC  C0B9  F0B8         	movff	??_TCP_Snd+24,??_TCP_Snd+23
 14209  002AE0  C0BA  F0B9         	movff	??_TCP_Snd+25,??_TCP_Snd+24
 14210  002AE4  0100               	movlb	0	; () banked
 14211  002AE6  6BBA               	clrf	(??_TCP_Snd+25)& (0+255),b
 14212  002AE8  6BBB               	clrf	(??_TCP_Snd+26)& (0+255),b
 14213  002AEA  51B8               	movf	(??_TCP_Snd+23)& (0+255),w,b
 14214  002AEC  6FBC               	movwf	(??_TCP_Snd+27)& (0+255),b
 14215  002AEE  6BBD               	clrf	(??_TCP_Snd+28)& (0+255),b
 14216  002AF0  6BBE               	clrf	(??_TCP_Snd+29)& (0+255),b
 14217  002AF2  0012               	return	
 14218  002AF4                     __end_ofPL581:
 14219                           	opt stack 0
 14220  002AF4                     PL587:
 14221                           	opt stack 15
 14222  002AF4  0009               	tblrd		*+
 14223  002AF6  CFF5 F0AD          	movff	tablat,??_TCP_Snd+12
 14224  002AFA  0009               	tblrd		*+
 14225  002AFC  CFF5 F0AE          	movff	tablat,??_TCP_Snd+13
 14226  002B00  0009               	tblrd		*+
 14227  002B02  CFF5 F0AF          	movff	tablat,??_TCP_Snd+14
 14228  002B06  0009               	tblrd		*+
 14229  002B08  CFF5 F0B0          	movff	tablat,??_TCP_Snd+15
 14230  002B0C  0012               	return	
 14231  002B0E                     __end_ofPL587:
 14232                           	opt stack 0
 14233  002B0E                     PL589:
 14234                           	opt stack 15
 14235  002B0E  0009               	tblrd		*+
 14236  002B10  CFF5 F0B7          	movff	tablat,??_TCP_Snd+22
 14237  002B14  0009               	tblrd		*+
 14238  002B16  CFF5 F0B8          	movff	tablat,??_TCP_Snd+23
 14239  002B1A  0009               	tblrd		*+
 14240  002B1C  CFF5 F0B9          	movff	tablat,??_TCP_Snd+24
 14241  002B20  0009               	tblrd		*+
 14242  002B22  CFF5 F0BA          	movff	tablat,??_TCP_Snd+25
 14243  002B26  0012               	return	
 14244  002B28                     __end_ofPL589:
 14245                           	opt stack 0
 14246  002B28                     PL591:
 14247                           	opt stack 15
 14248  002B28  0009               	tblrd		*+
 14249  002B2A  CFF5 F0C1          	movff	tablat,??_TCP_Snd+32
 14250  002B2E  0009               	tblrd		*+
 14251  002B30  CFF5 F0C2          	movff	tablat,??_TCP_Snd+33
 14252  002B34  0009               	tblrd		*+
 14253  002B36  CFF5 F0C3          	movff	tablat,??_TCP_Snd+34
 14254  002B3A  0009               	tblrd		*+
 14255  002B3C  CFF5 F0C4          	movff	tablat,??_TCP_Snd+35
 14256  002B40  0012               	return	
 14257  002B42                     __end_ofPL591:
 14258                           	opt stack 0
 14259  002B42                     PL593:
 14260                           	opt stack 15
 14261  002B42  259F               	addwf	TCP_Snd@tcbPtr& (0+255),w,b
 14262  002B44  6FBF               	movwf	(??_TCP_Snd+30)& (0+255),b
 14263  002B46  0E00               	movlw	0
 14264  002B48  21A0               	addwfc	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 14265  002B4A  6FC0               	movwf	(??_TCP_Snd+31)& (0+255),b
 14266  002B4C  C0BF  FFF6         	movff	??_TCP_Snd+30,tblptrl
 14267  002B50  C0C0  FFF7         	movff	??_TCP_Snd+31,tblptrh
 14268  002B54  0E00               	movlw	low (__smallconst shr (0+16))
 14269  002B56  6EF8               	movwf	tblptru,c
 14270  002B58  0E0F               	movlw	(high __ramtop+-1)
 14271  002B5A  0012               	return	
 14272  002B5C                     __end_ofPL593:
 14273                           	opt stack 0
 14274  002B5C                     PL599:
 14275                           	opt stack 15
 14276  002B5C  259F               	addwf	TCP_Snd@tcbPtr& (0+255),w,b
 14277  002B5E  6FA5               	movwf	(??_TCP_Snd+4)& (0+255),b
 14278  002B60  0E00               	movlw	0
 14279  002B62  21A0               	addwfc	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 14280  002B64  6FA6               	movwf	(??_TCP_Snd+5)& (0+255),b
 14281  002B66  C0A5  FFF6         	movff	??_TCP_Snd+4,tblptrl
 14282  002B6A  C0A6  FFF7         	movff	??_TCP_Snd+5,tblptrh
 14283  002B6E  0E00               	movlw	low (__smallconst shr (0+16))
 14284  002B70  6EF8               	movwf	tblptru,c
 14285  002B72  0E0F               	movlw	(high __ramtop+-1)
 14286  002B74  0012               	return	
 14287  002B76                     __end_ofPL599:
 14288                           	opt stack 0
 14289  002B76                     PL603:
 14290                           	opt stack 15
 14291  002B76  259F               	addwf	TCP_Snd@tcbPtr& (0+255),w,b
 14292  002B78  6FA7               	movwf	(??_TCP_Snd+6)& (0+255),b
 14293  002B7A  0E00               	movlw	0
 14294  002B7C  21A0               	addwfc	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 14295  002B7E  6FA8               	movwf	(??_TCP_Snd+7)& (0+255),b
 14296  002B80  C0A7  FFF6         	movff	??_TCP_Snd+6,tblptrl
 14297  002B84  C0A8  FFF7         	movff	??_TCP_Snd+7,tblptrh
 14298  002B88  0E00               	movlw	low (__smallconst shr (0+16))
 14299  002B8A  6EF8               	movwf	tblptru,c
 14300  002B8C  0E0F               	movlw	(high __ramtop+-1)
 14301  002B8E  0012               	return	
 14302  002B90                     __end_ofPL603:
 14303                           	opt stack 0
 14304  002B90                     PL605:
 14305                           	opt stack 15
 14306  002B90  259F               	addwf	TCP_Snd@tcbPtr& (0+255),w,b
 14307  002B92  6FB5               	movwf	(??_TCP_Snd+20)& (0+255),b
 14308  002B94  0E00               	movlw	0
 14309  002B96  21A0               	addwfc	(TCP_Snd@tcbPtr+1)& (0+255),w,b
 14310  002B98  6FB6               	movwf	(??_TCP_Snd+21)& (0+255),b
 14311  002B9A  C0B5  FFF6         	movff	??_TCP_Snd+20,tblptrl
 14312  002B9E  C0B6  FFF7         	movff	??_TCP_Snd+21,tblptrh
 14313  002BA2  0E00               	movlw	low (__smallconst shr (0+16))
 14314  002BA4  6EF8               	movwf	tblptru,c
 14315  002BA6  0E0F               	movlw	(high __ramtop+-1)
 14316  002BA8  0012               	return	
 14317  002BAA                     __end_ofPL605:
 14318                           	opt stack 0
 14319  002BAA                     PL615:
 14320                           	opt stack 15
 14321  002BAA  0100               	movlb	0	; () banked
 14322  002BAC  51A3               	movf	(??_TCP_Snd+2)& (0+255),w,b
 14323  002BAE  6FA7               	movwf	(??_TCP_Snd+6)& (0+255),b
 14324  002BB0  6BA8               	clrf	(??_TCP_Snd+7)& (0+255),b
 14325  002BB2  6BA9               	clrf	(??_TCP_Snd+8)& (0+255),b
 14326  002BB4  6BAA               	clrf	(??_TCP_Snd+9)& (0+255),b
 14327  002BB6  C0A7  F0AA         	movff	??_TCP_Snd+6,??_TCP_Snd+9
 14328  002BBA  6BA9               	clrf	(??_TCP_Snd+8)& (0+255),b
 14329  002BBC  6BA8               	clrf	(??_TCP_Snd+7)& (0+255),b
 14330  002BBE  6BA7               	clrf	(??_TCP_Snd+6)& (0+255),b
 14331  002BC0  0012               	return	
 14332  002BC2                     __end_ofPL615:
 14333                           	opt stack 0
 14334  002BC2                     PL631:
 14335                           	opt stack 15
 14336  002BC2  0009               	tblrd		*+
 14337  002BC4  CFF5 F0D8          	movff	tablat,TCP_Snd@tcpDataLength
 14338  002BC8  0009               	tblrd		*+
 14339  002BCA  CFF5 F0D9          	movff	tablat,TCP_Snd@tcpDataLength+1
 14340  002BCE  0012               	return	
 14341  002BD0                     __end_ofPL631:
 14342                           	opt stack 0
 14343  002BD0                     PL645:
 14344                           	opt stack 15
 14345  002BD0  CFEE F0AD          	movff	postinc0,??_TCP_Snd+12
 14346  002BD4  CFEE F0AE          	movff	postinc0,??_TCP_Snd+13
 14347  002BD8  CFEE F0AF          	movff	postinc0,??_TCP_Snd+14
 14348  002BDC  CFEE F0B0          	movff	postinc0,??_TCP_Snd+15
 14349  002BE0  0012               	return	
 14350  002BE2                     __end_ofPL645:
 14351                           	opt stack 0
 14352  002BE2                     PL647:
 14353                           	opt stack 15
 14354  002BE2  CFEE F0B7          	movff	postinc0,??_TCP_Snd+22
 14355  002BE6  CFEE F0B8          	movff	postinc0,??_TCP_Snd+23
 14356  002BEA  CFEE F0B9          	movff	postinc0,??_TCP_Snd+24
 14357  002BEE  CFEE F0BA          	movff	postinc0,??_TCP_Snd+25
 14358  002BF2  0012               	return	
 14359  002BF4                     __end_ofPL647:
 14360                           	opt stack 0
 14361  002BF4                     PL649:
 14362                           	opt stack 15
 14363  002BF4  CFEE F0C1          	movff	postinc0,??_TCP_Snd+32
 14364  002BF8  CFEE F0C2          	movff	postinc0,??_TCP_Snd+33
 14365  002BFC  CFEE F0C3          	movff	postinc0,??_TCP_Snd+34
 14366  002C00  CFEE F0C4          	movff	postinc0,??_TCP_Snd+35
 14367  002C04  0012               	return	
 14368  002C06                     __end_ofPL649:
 14369                           	opt stack 0
 14370  002C06                     PL659:
 14371                           	opt stack 15
 14372  002C06  C09F  FFF6         	movff	TCP_Snd@tcbPtr,tblptrl
 14373  002C0A  C0A0  FFF7         	movff	TCP_Snd@tcbPtr+1,tblptrh
 14374  002C0E  0E00               	movlw	low (__smallconst shr (0+16))
 14375  002C10  6EF8               	movwf	tblptru,c
 14376  002C12  0E0F               	movlw	(high __ramtop+-1)
 14377  002C14  0012               	return	
 14378  002C16                     __end_ofPL659:
 14379                           	opt stack 0
 14380  002C16                     PL667:
 14381                           	opt stack 15
 14382  002C16  CFEE F0A5          	movff	postinc0,??_TCP_Snd+4
 14383  002C1A  CFEE F0A6          	movff	postinc0,??_TCP_Snd+5
 14384  002C1E  0012               	return	
 14385  002C20                     __end_ofPL667:
 14386                           	opt stack 0
 14387  002C20                     PL669:
 14388                           	opt stack 15
 14389  002C20  C0AA  F0A9         	movff	??_TCP_Snd+9,??_TCP_Snd+8
 14390  002C24  0100               	movlb	0	; () banked
 14391  002C26  6BAA               	clrf	(??_TCP_Snd+9)& (0+255),b
 14392  002C28  6BAA               	clrf	(??_TCP_Snd+9)& (0+255),b
 14393  002C2A  51A5               	movf	(??_TCP_Snd+4)& (0+255),w,b
 14394  002C2C  11A9               	iorwf	(??_TCP_Snd+8)& (0+255),w,b
 14395  002C2E  0012               	return	
 14396  002C30                     __end_ofPL669:
 14397                           	opt stack 0
 14398  002C30                     PL683:
 14399                           	opt stack 15
 14400  002C30  C0A3  FFF5         	movff	??_TCP_Snd+2,tablat
 14401  002C34  000D               	tblwt		*+
 14402  002C36  C0A4  FFF5         	movff	??_TCP_Snd+3,tablat
 14403  002C3A  000C               	tblwt		*
 14404  002C3C  0012               	return	
 14405  002C3E                     __end_ofPL683:
 14406                           	opt stack 0
 14407  002C3E                     PL689:
 14408                           	opt stack 15
 14409  002C3E  0009               	tblrd		*+
 14410  002C40  CFF5 F0A9          	movff	tablat,??_TCP_Snd+8
 14411  002C44  0009               	tblrd		*+
 14412  002C46  CFF5 F0AA          	movff	tablat,??_TCP_Snd+9
 14413  002C4A  0012               	return	
 14414  002C4C                     __end_ofPL689:
 14415                           	opt stack 0
 14416  002C4C                     PL699:
 14417                           	opt stack 15
 14418  002C4C  CFEE F0D8          	movff	postinc0,TCP_Snd@tcpDataLength
 14419  002C50  CFEE F0D9          	movff	postinc0,TCP_Snd@tcpDataLength+1
 14420  002C54  0012               	return	
 14421  002C56                     __end_ofPL699:
 14422                           	opt stack 0
 14423  002C56                     PL713:
 14424                           	opt stack 15
 14425  002C56  0100               	movlb	0	; () banked
 14426  002C58  51D8               	movf	TCP_Snd@tcpDataLength& (0+255),w,b
 14427  002C5A  5DA3               	subwf	(??_TCP_Snd+2)& (0+255),w,b
 14428  002C5C  51D9               	movf	(TCP_Snd@tcpDataLength+1)& (0+255),w,b
 14429  002C5E  59A4               	subwfb	(??_TCP_Snd+3)& (0+255),w,b
 14430  002C60  0012               	return	
 14431  002C62                     __end_ofPL713:
 14432                           	opt stack 0
 14433  002C62                     PL721:
 14434                           	opt stack 15
 14435  002C62  C0A3  FFEE         	movff	??_TCP_Snd+2,postinc0
 14436  002C66  C0A4  FFEF         	movff	??_TCP_Snd+3,indf0
 14437  002C6A  0012               	return	
 14438  002C6C                     __end_ofPL721:
 14439                           	opt stack 0
 14440  002C6C                     PL751:
 14441                           	opt stack 15
 14442  002C6C  0100               	movlb	0	; () banked
 14443  002C6E  51A3               	movf	(??_TCP_Snd+2)& (0+255),w,b
 14444  002C70  6FA6               	movwf	(??_TCP_Snd+5)& (0+255),b
 14445  002C72  6BA5               	clrf	(??_TCP_Snd+4)& (0+255),b
 14446  002C74  0012               	return	
 14447  002C76                     __end_ofPL751:
 14448                           	opt stack 0
 14449  002C76                     PL757:
 14450                           	opt stack 15
 14451  002C76  CFEE F0A9          	movff	postinc0,??_TCP_Snd+8
 14452  002C7A  CFEE F0AA          	movff	postinc0,??_TCP_Snd+9
 14453  002C7E  0012               	return	
 14454  002C80                     __end_ofPL757:
 14455                           	opt stack 0
 14456  002C80                     PL769:
 14457                           	opt stack 12
 14458  002C80  6A26               	clrf	ETH_TxComputeChecksum@position+1,c
 14459  002C82  0E1A               	movlw	26
 14460  002C84  6E25               	movwf	ETH_TxComputeChecksum@position,c
 14461  002C86  0C08               	retlw	8
 14462  002C88                     __end_ofPL769:
 14463                           	opt stack 0
 14464  002C88                     PL771:
 14465                           	opt stack 12
 14466  002C88  6A1A               	clrf	ETH_WriteBlock@length+1,c
 14467  002C8A  0E14               	movlw	20
 14468  002C8C  6E19               	movwf	ETH_WriteBlock@length,c
 14469  002C8E  0C14               	retlw	20
 14470  002C90                     __end_ofPL771:
 14471                           	opt stack 0
 14472                           tosu	equ	0xFFF
 14473                           tosh	equ	0xFFE
 14474                           tosl	equ	0xFFD
 14475                           pclath	equ	0xFFA
 14476                           tblptru	equ	0xFF8
 14477                           tblptrh	equ	0xFF7
 14478                           tblptrl	equ	0xFF6
 14479                           tablat	equ	0xFF5
 14480                           prodh	equ	0xFF4
 14481                           prodl	equ	0xFF3
 14482                           intcon	equ	0xFF2
 14483                           indf0	equ	0xFEF
 14484                           postinc0	equ	0xFEE
 14485                           fsr0h	equ	0xFEA
 14486                           fsr0l	equ	0xFE9
 14487                           wreg	equ	0xFE8
 14488                           postinc1	equ	0xFE6
 14489                           plusw1	equ	0xFE3
 14490                           fsr1h	equ	0xFE2
 14491                           fsr1l	equ	0xFE1
 14492                           bsr	equ	0xFE0
 14493                           indf2	equ	0xFDF
 14494                           postinc2	equ	0xFDE
 14495                           postdec2	equ	0xFDD
 14496                           plusw2	equ	0xFDB
 14497                           fsr2h	equ	0xFDA
 14498                           fsr2l	equ	0xFD9
 14499                           status	equ	0xFD8
 14500                           
 14501 ;; *************** function _TCB_Reset *****************
 14502 ;; Defined at:
 14503 ;;		line 134 in file "../../TCPIP Library/source/tcpv4.c"
 14504 ;; Parameters:    Size  Location     Type
 14505 ;;  tcbPtr          2   22[COMRAM] PTR struct .
 14506 ;;		 -> ?_sprintf(2), ?_printf(2), main@str(32), STR_6(13), 
 14507 ;;		 -> STR_5(17), Network_Read@debug_str(80), STR_1(15), NULL(0), 
 14508 ;; Auto vars:     Size  Location     Type
 14509 ;;		None
 14510 ;; Return value:  Size  Location     Type
 14511 ;;		None               void
 14512 ;; Registers used:
 14513 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 14514 ;; Tracked objects:
 14515 ;;		On entry : F/1
 14516 ;;		On exit  : 0/0
 14517 ;;		Unchanged: 0/0
 14518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14519 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14521 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14522 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14523 ;;Total ram usage:        4 bytes
 14524 ;; Hardware stack levels used:    1
 14525 ;; Hardware stack levels required when called:    8
 14526 ;; This function calls:
 14527 ;;		Nothing
 14528 ;; This function is called by:
 14529 ;;		_TCP_FiniteStateMachine
 14530 ;; This function uses a non-reentrant model
 14531 ;;
 14532                           
 14533                           	psect	text46
 14534  004792                     __ptext46:
 14535                           	opt stack 0
 14536  004792                     _TCB_Reset:
 14537                           	opt stack 19
 14538                           
 14539                           ; BSR set to: 1
 14540                           ;tcpv4.c: 136: tcbPtr->destIP = 0;
 14541                           
 14542                           ; BSR set to: 0
 14543                           ;incstack = 0
 14544  004792  0E02               	movlw	2
 14545  004794  D8A6               	call	PL441	;call to abstracted procedure
 14546  004796  64F7               	cpfsgt	tblptrh,c
 14547  004798  D007               	bra	u12337
 14548  00479A  6AF5               	clrf	tablat,c
 14549  00479C  000D               	tblwt		*+
 14550  00479E  6AF5               	clrf	tablat,c
 14551  0047A0  000D               	tblwt		*+
 14552  0047A2  ECD9  F011         	call	PL467	;call to abstracted procedure
 14553  0047A6  D004               	bra	u12330
 14554  0047A8                     u12337:
 14555  0047A8  EC6D  F011         	call	PL431	;call to abstracted procedure
 14556  0047AC  EC4D  F012         	call	PL513	;call to abstracted procedure
 14557  0047B0                     u12330:
 14558                           
 14559                           ;tcpv4.c: 137: tcbPtr->destPort = 0;
 14560  0047B0  0E06               	movlw	6
 14561  0047B2  D897               	call	PL441	;call to abstracted procedure
 14562  0047B4  64F7               	cpfsgt	tblptrh,c
 14563  0047B6  D003               	bra	u12347
 14564  0047B8  ECD9  F011         	call	PL467	;call to abstracted procedure
 14565  0047BC  D004               	bra	u12340
 14566  0047BE                     u12347:
 14567  0047BE  EC6D  F011         	call	PL431	;call to abstracted procedure
 14568  0047C2  6AEE               	clrf	postinc0,c
 14569  0047C4  6AEF               	clrf	indf0,c
 14570  0047C6                     u12340:
 14571                           
 14572                           ;tcpv4.c: 138: tcbPtr->localSeqno = 0;
 14573  0047C6  0E10               	movlw	16
 14574  0047C8  D88C               	call	PL441	;call to abstracted procedure
 14575  0047CA  64F7               	cpfsgt	tblptrh,c
 14576  0047CC  D007               	bra	u12357
 14577  0047CE  6AF5               	clrf	tablat,c
 14578  0047D0  000D               	tblwt		*+
 14579  0047D2  6AF5               	clrf	tablat,c
 14580  0047D4  000D               	tblwt		*+
 14581  0047D6  ECD9  F011         	call	PL467	;call to abstracted procedure
 14582  0047DA  D004               	bra	u12350
 14583  0047DC                     u12357:
 14584  0047DC  EC6D  F011         	call	PL431	;call to abstracted procedure
 14585  0047E0  EC4D  F012         	call	PL513	;call to abstracted procedure
 14586  0047E4                     u12350:
 14587                           
 14588                           ;tcpv4.c: 139: tcbPtr->localLastAck = 0;
 14589  0047E4  0E14               	movlw	20
 14590  0047E6  D87D               	call	PL441	;call to abstracted procedure
 14591  0047E8  64F7               	cpfsgt	tblptrh,c
 14592  0047EA  D007               	bra	u12367
 14593  0047EC  6AF5               	clrf	tablat,c
 14594  0047EE  000D               	tblwt		*+
 14595  0047F0  6AF5               	clrf	tablat,c
 14596  0047F2  000D               	tblwt		*+
 14597  0047F4  ECD9  F011         	call	PL467	;call to abstracted procedure
 14598  0047F8  D004               	bra	u12360
 14599  0047FA                     u12367:
 14600  0047FA  EC6D  F011         	call	PL431	;call to abstracted procedure
 14601  0047FE  EC4D  F012         	call	PL513	;call to abstracted procedure
 14602  004802                     u12360:
 14603                           
 14604                           ;tcpv4.c: 140: tcbPtr->remoteSeqno = 0;
 14605  004802  0E08               	movlw	8
 14606  004804  D86E               	call	PL441	;call to abstracted procedure
 14607  004806  64F7               	cpfsgt	tblptrh,c
 14608  004808  D007               	bra	u12377
 14609  00480A  6AF5               	clrf	tablat,c
 14610  00480C  000D               	tblwt		*+
 14611  00480E  6AF5               	clrf	tablat,c
 14612  004810  000D               	tblwt		*+
 14613  004812  ECD9  F011         	call	PL467	;call to abstracted procedure
 14614  004816  D004               	bra	u12370
 14615  004818                     u12377:
 14616  004818  EC6D  F011         	call	PL431	;call to abstracted procedure
 14617  00481C  EC4D  F012         	call	PL513	;call to abstracted procedure
 14618  004820                     u12370:
 14619                           
 14620                           ;tcpv4.c: 141: tcbPtr->remoteAck = 0;
 14621  004820  0E0C               	movlw	12
 14622  004822  D85F               	call	PL441	;call to abstracted procedure
 14623  004824  64F7               	cpfsgt	tblptrh,c
 14624  004826  D007               	bra	u12387
 14625  004828  6AF5               	clrf	tablat,c
 14626  00482A  000D               	tblwt		*+
 14627  00482C  6AF5               	clrf	tablat,c
 14628  00482E  000D               	tblwt		*+
 14629  004830  ECD9  F011         	call	PL467	;call to abstracted procedure
 14630  004834  D004               	bra	u12380
 14631  004836                     u12387:
 14632  004836  EC6D  F011         	call	PL431	;call to abstracted procedure
 14633  00483A  EC4D  F012         	call	PL513	;call to abstracted procedure
 14634  00483E                     u12380:
 14635                           
 14636                           ;tcpv4.c: 142: tcbPtr->remoteWnd = 0;
 14637  00483E  0E18               	movlw	24
 14638  004840  D850               	call	PL441	;call to abstracted procedure
 14639  004842  64F7               	cpfsgt	tblptrh,c
 14640  004844  D003               	bra	u12397
 14641  004846  ECD9  F011         	call	PL467	;call to abstracted procedure
 14642  00484A  D004               	bra	u12390
 14643  00484C                     u12397:
 14644  00484C  EC6D  F011         	call	PL431	;call to abstracted procedure
 14645  004850  6AEE               	clrf	postinc0,c
 14646  004852  6AEF               	clrf	indf0,c
 14647  004854                     u12390:
 14648                           
 14649                           ;tcpv4.c: 144: tcbPtr->timeout = 0;
 14650  004854  0E30               	movlw	48
 14651  004856  D845               	call	PL441	;call to abstracted procedure
 14652  004858  64F7               	cpfsgt	tblptrh,c
 14653  00485A  D003               	bra	u12407
 14654  00485C  ECD9  F011         	call	PL467	;call to abstracted procedure
 14655  004860  D004               	bra	u12400
 14656  004862                     u12407:
 14657  004862  EC6D  F011         	call	PL431	;call to abstracted procedure
 14658  004866  6AEE               	clrf	postinc0,c
 14659  004868  6AEF               	clrf	indf0,c
 14660  00486A                     u12400:
 14661                           
 14662                           ;tcpv4.c: 145: tcbPtr->timeoutReloadValue = 0;
 14663  00486A  0E32               	movlw	50
 14664  00486C  D83A               	call	PL441	;call to abstracted procedure
 14665  00486E  64F7               	cpfsgt	tblptrh,c
 14666  004870  D003               	bra	u12417
 14667  004872  ECD9  F011         	call	PL467	;call to abstracted procedure
 14668  004876  D004               	bra	u12410
 14669  004878                     u12417:
 14670  004878  EC6D  F011         	call	PL431	;call to abstracted procedure
 14671  00487C  6AEE               	clrf	postinc0,c
 14672  00487E  6AEF               	clrf	indf0,c
 14673  004880                     u12410:
 14674                           
 14675                           ;tcpv4.c: 146: tcbPtr->timeoutsCount = 0;
 14676  004880  0E34               	movlw	52
 14677  004882  D82F               	call	PL441	;call to abstracted procedure
 14678  004884  64F7               	cpfsgt	tblptrh,c
 14679  004886  D003               	bra	u12427
 14680  004888  6AF5               	clrf	tablat,c
 14681  00488A  000C               	tblwt		*
 14682  00488C  D003               	bra	u12420
 14683  00488E                     u12427:
 14684  00488E  EC6D  F011         	call	PL431	;call to abstracted procedure
 14685  004892  6AEF               	clrf	indf0,c
 14686  004894                     u12420:
 14687                           
 14688                           ;tcpv4.c: 147: tcbPtr->flags = 0;
 14689  004894  0E35               	movlw	53
 14690  004896  D825               	call	PL441	;call to abstracted procedure
 14691  004898  64F7               	cpfsgt	tblptrh,c
 14692  00489A  D003               	bra	u12437
 14693  00489C  6AF5               	clrf	tablat,c
 14694  00489E  000C               	tblwt		*
 14695  0048A0  D003               	bra	u12430
 14696  0048A2                     u12437:
 14697  0048A2  EC6D  F011         	call	PL431	;call to abstracted procedure
 14698  0048A6  6AEF               	clrf	indf0,c
 14699  0048A8                     u12430:
 14700                           
 14701                           ;tcpv4.c: 149: tcbPtr->localPort = 0;
 14702  0048A8  C017  FFF6         	movff	TCB_Reset@tcbPtr,tblptrl
 14703  0048AC  C018  FFF7         	movff	TCB_Reset@tcbPtr+1,tblptrh
 14704  0048B0  0E00               	movlw	low (__smallconst shr (0+16))
 14705  0048B2  6EF8               	movwf	tblptru,c
 14706  0048B4  0E0F               	movlw	(high __ramtop+-1)
 14707  0048B6  64F7               	cpfsgt	tblptrh,c
 14708  0048B8  D003               	bra	u12447
 14709  0048BA  ECD9  F011         	call	PL467	;call to abstracted procedure
 14710  0048BE  D004               	bra	u12440
 14711  0048C0                     u12447:
 14712  0048C0  EC6D  F011         	call	PL431	;call to abstracted procedure
 14713  0048C4  6AEE               	clrf	postinc0,c
 14714  0048C6  6AEF               	clrf	indf0,c
 14715  0048C8                     u12440:
 14716                           
 14717                           ;tcpv4.c: 150: tcbPtr->socketState = SOCKET_CLOSED;
 14718  0048C8  0E36               	movlw	54
 14719  0048CA  D80B               	call	PL441	;call to abstracted procedure
 14720  0048CC  64F7               	cpfsgt	tblptrh,c
 14721  0048CE  D004               	bra	u12457
 14722  0048D0  0E01               	movlw	1
 14723  0048D2  6EF5               	movwf	tablat,c
 14724  0048D4  000C               	tblwt		*
 14725  0048D6  D004               	bra	u12450
 14726  0048D8                     u12457:
 14727  0048D8  EC6D  F011         	call	PL431	;call to abstracted procedure
 14728  0048DC  0E01               	movlw	1
 14729  0048DE  6EEF               	movwf	indf0,c
 14730  0048E0                     u12450:
 14731  0048E0  0012               	return		;funcret
 14732  0048E2                     __end_of_TCB_Reset:
 14733                           	opt stack 0
 14734  0048E2                     PL441:
 14735                           	opt stack 19
 14736  0048E2  2417               	addwf	TCB_Reset@tcbPtr,w,c
 14737  0048E4  6E19               	movwf	??_TCB_Reset& (0+255),c
 14738  0048E6  0E00               	movlw	0
 14739  0048E8  2018               	addwfc	TCB_Reset@tcbPtr+1,w,c
 14740  0048EA  6E1A               	movwf	(??_TCB_Reset+1)& (0+255),c
 14741  0048EC  C019  FFF6         	movff	??_TCB_Reset,tblptrl
 14742  0048F0  C01A  FFF7         	movff	??_TCB_Reset+1,tblptrh
 14743  0048F4  0E00               	movlw	low (__smallconst shr (0+16))
 14744  0048F6  6EF8               	movwf	tblptru,c
 14745  0048F8  0E0F               	movlw	(high __ramtop+-1)
 14746  0048FA  0012               	return	
 14747  0048FC                     __end_ofPL441:
 14748                           	opt stack 0
 14749                           tosu	equ	0xFFF
 14750                           tosh	equ	0xFFE
 14751                           tosl	equ	0xFFD
 14752                           pclath	equ	0xFFA
 14753                           tblptru	equ	0xFF8
 14754                           tblptrh	equ	0xFF7
 14755                           tblptrl	equ	0xFF6
 14756                           tablat	equ	0xFF5
 14757                           prodh	equ	0xFF4
 14758                           prodl	equ	0xFF3
 14759                           intcon	equ	0xFF2
 14760                           indf0	equ	0xFEF
 14761                           postinc0	equ	0xFEE
 14762                           fsr0h	equ	0xFEA
 14763                           fsr0l	equ	0xFE9
 14764                           wreg	equ	0xFE8
 14765                           postinc1	equ	0xFE6
 14766                           plusw1	equ	0xFE3
 14767                           fsr1h	equ	0xFE2
 14768                           fsr1l	equ	0xFE1
 14769                           bsr	equ	0xFE0
 14770                           indf2	equ	0xFDF
 14771                           postinc2	equ	0xFDE
 14772                           postdec2	equ	0xFDD
 14773                           plusw2	equ	0xFDB
 14774                           fsr2h	equ	0xFDA
 14775                           fsr2l	equ	0xFD9
 14776                           status	equ	0xFD8
 14777                           
 14778 ;; *************** function _IPV4_PseudoHeaderChecksum *****************
 14779 ;; Defined at:
 14780 ;;		line 83 in file "../../TCPIP Library/source/ipv4.c"
 14781 ;; Parameters:    Size  Location     Type
 14782 ;;  payloadLen      2   22[COMRAM] unsigned int 
 14783 ;; Auto vars:     Size  Location     Type
 14784 ;;  tmp            12   34[COMRAM] struct .
 14785 ;;  cksm            4   30[COMRAM] unsigned long 
 14786 ;;  len             1   29[COMRAM] unsigned char 
 14787 ;;  v               1   28[COMRAM] PTR unsigned int 
 14788 ;;		 -> IPV4_PseudoHeaderChecksum@tmp(12), 
 14789 ;; Return value:  Size  Location     Type
 14790 ;;                  2   22[COMRAM] unsigned int 
 14791 ;; Registers used:
 14792 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14793 ;; Tracked objects:
 14794 ;;		On entry : F/1
 14795 ;;		On exit  : F/1
 14796 ;;		Unchanged: F/0
 14797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14798 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14799 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14800 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14801 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14802 ;;Total ram usage:       24 bytes
 14803 ;; Hardware stack levels used:    1
 14804 ;; Hardware stack levels required when called:    8
 14805 ;; This function calls:
 14806 ;;		Nothing
 14807 ;; This function is called by:
 14808 ;;		_IPV4_Packet
 14809 ;; This function uses a non-reentrant model
 14810 ;;
 14811                           
 14812                           	psect	text47
 14813  00564C                     __ptext47:
 14814                           	opt stack 0
 14815  00564C                     _IPV4_PseudoHeaderChecksum:
 14816                           	opt stack 19
 14817                           
 14818                           ; BSR set to: 1
 14819                           ;ipv4.c: 85: ipv4_pseudo_header_t tmp;
 14820                           ;ipv4.c: 86: uint8_t len;
 14821                           ;ipv4.c: 87: uint32_t cksm = 0;
 14822                           
 14823                           ;incstack = 0
 14824  00564C  6A1F               	clrf	IPV4_PseudoHeaderChecksum@cksm,c
 14825  00564E  6A20               	clrf	IPV4_PseudoHeaderChecksum@cksm+1,c
 14826  005650  6A21               	clrf	IPV4_PseudoHeaderChecksum@cksm+2,c
 14827  005652  6A22               	clrf	IPV4_PseudoHeaderChecksum@cksm+3,c
 14828                           
 14829                           ;ipv4.c: 88: uint16_t *v;
 14830                           ;ipv4.c: 90: tmp.srcIpAddress = ipv4Header.srcIpAddress;
 14831  005654  C2A8  F023         	movff	_ipv4Header+12,IPV4_PseudoHeaderChecksum@tmp
 14832  005658  C2A9  F024         	movff	_ipv4Header+13,IPV4_PseudoHeaderChecksum@tmp+1
 14833  00565C  C2AA  F025         	movff	_ipv4Header+14,IPV4_PseudoHeaderChecksum@tmp+2
 14834  005660  C2AB  F026         	movff	_ipv4Header+15,IPV4_PseudoHeaderChecksum@tmp+3
 14835                           
 14836                           ;ipv4.c: 91: tmp.dstIpAddress = ipv4Header.dstIpAddress;
 14837  005664  C2AC  F027         	movff	_ipv4Header+16,IPV4_PseudoHeaderChecksum@tmp+4
 14838  005668  C2AD  F028         	movff	_ipv4Header+17,IPV4_PseudoHeaderChecksum@tmp+5
 14839  00566C  C2AE  F029         	movff	_ipv4Header+18,IPV4_PseudoHeaderChecksum@tmp+6
 14840  005670  C2AF  F02A         	movff	_ipv4Header+19,IPV4_PseudoHeaderChecksum@tmp+7
 14841                           
 14842                           ;ipv4.c: 92: tmp.protocol = ipv4Header.protocol;
 14843  005674  C2A5  F02B         	movff	_ipv4Header+9,IPV4_PseudoHeaderChecksum@tmp+8
 14844                           
 14845                           ;ipv4.c: 93: tmp.z = 0;
 14846  005678  6A2C               	clrf	IPV4_PseudoHeaderChecksum@tmp+9,c
 14847                           
 14848                           ;ipv4.c: 94: tmp.length = payloadLen;
 14849  00567A  C017  F02D         	movff	IPV4_PseudoHeaderChecksum@payloadLen,IPV4_PseudoHeaderChecksum@tmp+10
 14850  00567E  C018  F02E         	movff	IPV4_PseudoHeaderChecksum@payloadLen+1,IPV4_PseudoHeaderChecksum@tmp+11
 14851                           
 14852                           ; BSR set to: 1
 14853                           ;ipv4.c: 96: len = sizeof(tmp);
 14854  005682  0E0C               	movlw	12
 14855  005684  6E1E               	movwf	IPV4_PseudoHeaderChecksum@len,c
 14856                           
 14857                           ; BSR set to: 1
 14858                           ;ipv4.c: 97: len = len >> 1;
 14859  005686  90D8               	bcf	status,0,c
 14860  005688  321E               	rrcf	IPV4_PseudoHeaderChecksum@len,f,c
 14861                           
 14862                           ; BSR set to: 1
 14863                           ;ipv4.c: 99: v = (uint16_t *) &tmp;
 14864  00568A  0E23               	movlw	low IPV4_PseudoHeaderChecksum@tmp
 14865  00568C  6E1D               	movwf	IPV4_PseudoHeaderChecksum@v,c
 14866                           
 14867                           ;ipv4.c: 101: while(len)
 14868  00568E  D011               	goto	l9519
 14869  005690                     l9513:
 14870                           
 14871                           ; BSR set to: 1
 14872                           ;ipv4.c: 102: {
 14873                           ;ipv4.c: 103: cksm += *v;
 14874  005690  501D               	movf	IPV4_PseudoHeaderChecksum@v,w,c
 14875  005692  6ED9               	movwf	fsr2l,c
 14876  005694  6ADA               	clrf	fsr2h,c
 14877  005696  CFDE F019          	movff	postinc2,??_IPV4_PseudoHeaderChecksum
 14878  00569A  CFDD F01A          	movff	postdec2,??_IPV4_PseudoHeaderChecksum+1
 14879  00569E  5019               	movf	??_IPV4_PseudoHeaderChecksum,w,c
 14880  0056A0  261F               	addwf	IPV4_PseudoHeaderChecksum@cksm,f,c
 14881  0056A2  501A               	movf	??_IPV4_PseudoHeaderChecksum+1,w,c
 14882  0056A4  2220               	addwfc	IPV4_PseudoHeaderChecksum@cksm+1,f,c
 14883  0056A6  0E00               	movlw	0
 14884  0056A8  2221               	addwfc	IPV4_PseudoHeaderChecksum@cksm+2,f,c
 14885  0056AA  2222               	addwfc	IPV4_PseudoHeaderChecksum@cksm+3,f,c
 14886                           
 14887                           ; BSR set to: 1
 14888                           ;ipv4.c: 104: len--;
 14889  0056AC  061E               	decf	IPV4_PseudoHeaderChecksum@len,f,c
 14890                           
 14891                           ; BSR set to: 1
 14892                           ;ipv4.c: 105: v++;
 14893  0056AE  0E02               	movlw	2
 14894  0056B0  261D               	addwf	IPV4_PseudoHeaderChecksum@v,f,c
 14895  0056B2                     l9519:
 14896                           
 14897                           ; BSR set to: 1
 14898  0056B2  501E               	movf	IPV4_PseudoHeaderChecksum@len,w,c
 14899  0056B4  E1ED               	bnz	l9513
 14900                           
 14901                           ; BSR set to: 1
 14902                           ;ipv4.c: 106: }
 14903                           ;ipv4.c: 109: cksm = (cksm & 0x0FFFF) + (cksm>>16);
 14904  0056B6  501F               	movf	IPV4_PseudoHeaderChecksum@cksm,w,c
 14905  0056B8  6E19               	movwf	??_IPV4_PseudoHeaderChecksum& (0+255),c
 14906  0056BA  5020               	movf	IPV4_PseudoHeaderChecksum@cksm+1,w,c
 14907  0056BC  6E1A               	movwf	(??_IPV4_PseudoHeaderChecksum+1)& (0+255),c
 14908  0056BE  6A1B               	clrf	(??_IPV4_PseudoHeaderChecksum+2)& (0+255),c
 14909  0056C0  6A1C               	clrf	(??_IPV4_PseudoHeaderChecksum+3)& (0+255),c
 14910  0056C2  5021               	movf	IPV4_PseudoHeaderChecksum@cksm+2,w,c
 14911  0056C4  2419               	addwf	??_IPV4_PseudoHeaderChecksum,w,c
 14912  0056C6  6E1F               	movwf	IPV4_PseudoHeaderChecksum@cksm,c
 14913  0056C8  5022               	movf	IPV4_PseudoHeaderChecksum@cksm+3,w,c
 14914  0056CA  201A               	addwfc	??_IPV4_PseudoHeaderChecksum+1,w,c
 14915  0056CC  6E20               	movwf	IPV4_PseudoHeaderChecksum@cksm+1,c
 14916  0056CE  0E00               	movlw	0
 14917  0056D0  201B               	addwfc	??_IPV4_PseudoHeaderChecksum+2,w,c
 14918  0056D2  6E21               	movwf	IPV4_PseudoHeaderChecksum@cksm+2,c
 14919  0056D4  0E00               	movlw	0
 14920  0056D6  201C               	addwfc	??_IPV4_PseudoHeaderChecksum+3,w,c
 14921  0056D8  6E22               	movwf	IPV4_PseudoHeaderChecksum@cksm+3,c
 14922                           
 14923                           ; BSR set to: 1
 14924                           ;ipv4.c: 112: return cksm;
 14925  0056DA  C01F  F017         	movff	IPV4_PseudoHeaderChecksum@cksm,?_IPV4_PseudoHeaderChecksum
 14926  0056DE  C020  F018         	movff	IPV4_PseudoHeaderChecksum@cksm+1,?_IPV4_PseudoHeaderChecksum+1
 14927                           
 14928                           ; BSR set to: 1
 14929  0056E2  0012               	return		;funcret
 14930  0056E4                     __end_of_IPV4_PseudoHeaderChecksum:
 14931                           	opt stack 0
 14932                           tosu	equ	0xFFF
 14933                           tosh	equ	0xFFE
 14934                           tosl	equ	0xFFD
 14935                           pclath	equ	0xFFA
 14936                           tblptru	equ	0xFF8
 14937                           tblptrh	equ	0xFF7
 14938                           tblptrl	equ	0xFF6
 14939                           tablat	equ	0xFF5
 14940                           prodh	equ	0xFF4
 14941                           prodl	equ	0xFF3
 14942                           intcon	equ	0xFF2
 14943                           indf0	equ	0xFEF
 14944                           postinc0	equ	0xFEE
 14945                           fsr0h	equ	0xFEA
 14946                           fsr0l	equ	0xFE9
 14947                           wreg	equ	0xFE8
 14948                           postinc1	equ	0xFE6
 14949                           plusw1	equ	0xFE3
 14950                           fsr1h	equ	0xFE2
 14951                           fsr1l	equ	0xFE1
 14952                           bsr	equ	0xFE0
 14953                           indf2	equ	0xFDF
 14954                           postinc2	equ	0xFDE
 14955                           postdec2	equ	0xFDD
 14956                           plusw2	equ	0xFDB
 14957                           fsr2h	equ	0xFDA
 14958                           fsr2l	equ	0xFD9
 14959                           status	equ	0xFD8
 14960                           
 14961 ;; *************** function _ICMP_Receive *****************
 14962 ;; Defined at:
 14963 ;;		line 56 in file "../../TCPIP Library/source/icmp.c"
 14964 ;; Parameters:    Size  Location     Type
 14965 ;;  ipv4Hdr         2   79[BANK0 ] PTR struct .
 14966 ;;		 -> ipv4Header(20), 
 14967 ;; Auto vars:     Size  Location     Type
 14968 ;;  icmpHdr         8   86[BANK0 ] struct .
 14969 ;;  ret             1    0        enum E366
 14970 ;; Return value:  Size  Location     Type
 14971 ;;                  1    wreg      enum E366
 14972 ;; Registers used:
 14973 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14974 ;; Tracked objects:
 14975 ;;		On entry : F/0
 14976 ;;		On exit  : F/0
 14977 ;;		Unchanged: 0/0
 14978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14979 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14980 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14981 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14982 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14983 ;;Total ram usage:       15 bytes
 14984 ;; Hardware stack levels used:    1
 14985 ;; Hardware stack levels required when called:   14
 14986 ;; This function calls:
 14987 ;;		_ETH_ReadBlock
 14988 ;;		_ETH_SaveRDPT
 14989 ;;		_ICMP_EchoReply
 14990 ;; This function is called by:
 14991 ;;		_IPV4_Packet
 14992 ;; This function uses a non-reentrant model
 14993 ;;
 14994                           
 14995                           	psect	text48
 14996  005C7A                     __ptext48:
 14997                           	opt stack 0
 14998  005C7A                     _ICMP_Receive:
 14999                           	opt stack 13
 15000                           
 15001                           ; BSR set to: 0
 15002                           ;icmp.c: 60: ETH_ReadBlock((char *)&icmpHdr, sizeof(icmpHeader_t));
 15003                           
 15004                           ; BSR set to: 0
 15005                           
 15006                           ; BSR set to: 1
 15007                           ;incstack = 0
 15008  005C7A  0EB6               	movlw	low ICMP_Receive@icmpHdr
 15009  005C7C  6E17               	movwf	ETH_ReadBlock@buffer,c
 15010  005C7E  6A18               	clrf	ETH_ReadBlock@buffer+1,c
 15011  005C80  D81E               	call	PL787	;call to abstracted procedure
 15012  005C82  ECC5  F02C         	call	_ETH_ReadBlock	;wreg free
 15013                           
 15014                           ; BSR set to: 2
 15015                           ;icmp.c: 61: ETH_SaveRDPT();
 15016  005C86  EC6B  F032         	call	_ETH_SaveRDPT	;wreg free
 15017                           
 15018                           ;icmp.c: 63: switch(((((uint16_t)(icmpTypeCodes_t)icmpHdr.typeCode & (uint16_t)0xFF00) >
      +                          > 8) | (((uint16_t)(icmpTypeCodes_t)icmpHdr.typeCode & (uint16_t)0x00FF) << 8)))
 15019  005C8A  D007               	goto	l9499
 15020  005C8C                     l9495:
 15021                           
 15022                           ; BSR set to: 0
 15023  005C8C  C0AF  F09F         	movff	ICMP_Receive@ipv4Hdr,ICMP_EchoReply@ipv4Hdr
 15024  005C90  C0B0  F0A0         	movff	ICMP_Receive@ipv4Hdr+1,ICMP_EchoReply@ipv4Hdr+1
 15025  005C94  0EB6               	movlw	ICMP_Receive@icmpHdr& (0+255)
 15026  005C96  EF30  F025         	goto	_ICMP_EchoReply
 15027  005C9A                     l9499:
 15028  005C9A  0100               	movlb	0	; () banked
 15029  005C9C  51B6               	movf	ICMP_Receive@icmpHdr& (0+255),w,b
 15030  005C9E  6FB2               	movwf	(??_ICMP_Receive+1)& (0+255),b
 15031  005CA0  6BB1               	clrf	??_ICMP_Receive& (0+255),b
 15032  005CA2  51B7               	movf	(ICMP_Receive@icmpHdr+1)& (0+255),w,b
 15033  005CA4  6FB3               	movwf	(??_ICMP_Receive+2)& (0+255),b
 15034  005CA6  6BB4               	clrf	(??_ICMP_Receive+3)& (0+255),b
 15035  005CA8  51B1               	movf	??_ICMP_Receive& (0+255),w,b
 15036  005CAA  13B3               	iorwf	(??_ICMP_Receive+2)& (0+255),f,b
 15037  005CAC  51B2               	movf	(??_ICMP_Receive+1)& (0+255),w,b
 15038  005CAE  13B4               	iorwf	(??_ICMP_Receive+3)& (0+255),f,b
 15039                           
 15040                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15041                           ; Switch size 1, requested type "space"
 15042                           ; Number of cases is 1, Range of values is 8 to 8
 15043                           ; switch strategies available:
 15044                           ; Name         Instructions Cycles
 15045                           ; simple_byte            4     3 (average)
 15046                           ;	Chosen strategy is simple_byte
 15047  005CB0  51B4               	movf	(??_ICMP_Receive+3)& (0+255),w,b
 15048  005CB2  0A08               	xorlw	8	; case 8
 15049  005CB4  A4D8               	btfss	status,2,c
 15050  005CB6  0012               	return	
 15051                           
 15052                           ; BSR set to: 0
 15053                           ; Switch size 1, requested type "space"
 15054                           ; Number of cases is 1, Range of values is 0 to 0
 15055                           ; switch strategies available:
 15056                           ; Name         Instructions Cycles
 15057                           ; simple_byte            4     3 (average)
 15058                           ;	Chosen strategy is simple_byte
 15059  005CB8  51B3               	movf	(??_ICMP_Receive+2)& (0+255),w,b
 15060  005CBA  E0E8               	bz	l9495
 15061                           
 15062                           ; BSR set to: 0
 15063  005CBC  0012               	return		;funcret
 15064  005CBE                     __end_of_ICMP_Receive:
 15065                           	opt stack 0
 15066  005CBE                     PL787:
 15067                           	opt stack 12
 15068  005CBE  6A1A               	clrf	ETH_ReadBlock@length+1,c
 15069  005CC0  0E08               	movlw	8
 15070  005CC2  6E19               	movwf	ETH_ReadBlock@length,c
 15071  005CC4  0C08               	retlw	8
 15072  005CC6                     __end_ofPL787:
 15073                           	opt stack 0
 15074                           tosu	equ	0xFFF
 15075                           tosh	equ	0xFFE
 15076                           tosl	equ	0xFFD
 15077                           pclath	equ	0xFFA
 15078                           tblptru	equ	0xFF8
 15079                           tblptrh	equ	0xFF7
 15080                           tblptrl	equ	0xFF6
 15081                           tablat	equ	0xFF5
 15082                           prodh	equ	0xFF4
 15083                           prodl	equ	0xFF3
 15084                           intcon	equ	0xFF2
 15085                           indf0	equ	0xFEF
 15086                           postinc0	equ	0xFEE
 15087                           fsr0h	equ	0xFEA
 15088                           fsr0l	equ	0xFE9
 15089                           wreg	equ	0xFE8
 15090                           postinc1	equ	0xFE6
 15091                           plusw1	equ	0xFE3
 15092                           fsr1h	equ	0xFE2
 15093                           fsr1l	equ	0xFE1
 15094                           bsr	equ	0xFE0
 15095                           indf2	equ	0xFDF
 15096                           postinc2	equ	0xFDE
 15097                           postdec2	equ	0xFDD
 15098                           plusw2	equ	0xFDB
 15099                           fsr2h	equ	0xFDA
 15100                           fsr2l	equ	0xFD9
 15101                           status	equ	0xFD8
 15102                           
 15103 ;; *************** function _ICMP_EchoReply *****************
 15104 ;; Defined at:
 15105 ;;		line 86 in file "../../TCPIP Library/source/icmp.c"
 15106 ;; Parameters:    Size  Location     Type
 15107 ;;  icmpHdr         1    wreg     PTR struct .
 15108 ;;		 -> ICMP_Receive@icmpHdr(8), 
 15109 ;;  ipv4Hdr         2   63[BANK0 ] PTR struct .
 15110 ;;		 -> ipv4Header(20), 
 15111 ;; Auto vars:     Size  Location     Type
 15112 ;;  icmpHdr         1   78[BANK0 ] PTR struct .
 15113 ;;		 -> ICMP_Receive@icmpHdr(8), 
 15114 ;;  ipv4PayloadL    2   75[BANK0 ] unsigned int 
 15115 ;;  icmp_cksm_st    2    0        unsigned int 
 15116 ;;  cksm            2   73[BANK0 ] unsigned int 
 15117 ;;  ret             1   77[BANK0 ] enum E366
 15118 ;; Return value:  Size  Location     Type
 15119 ;;                  1    wreg      enum E366
 15120 ;; Registers used:
 15121 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15122 ;; Tracked objects:
 15123 ;;		On entry : F/0
 15124 ;;		On exit  : F/0
 15125 ;;		Unchanged: 0/0
 15126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15127 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15128 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15129 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15130 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15131 ;;Total ram usage:       16 bytes
 15132 ;; Hardware stack levels used:    1
 15133 ;; Hardware stack levels required when called:   13
 15134 ;; This function calls:
 15135 ;;		_ETH_Copy
 15136 ;;		_ETH_Insert
 15137 ;;		_ETH_SaveRDPT
 15138 ;;		_ETH_TxComputeChecksum
 15139 ;;		_ETH_Write16
 15140 ;;		_IPV4_Send
 15141 ;;		_IPv4_Start
 15142 ;; This function is called by:
 15143 ;;		_ICMP_Receive
 15144 ;; This function uses a non-reentrant model
 15145 ;;
 15146                           
 15147                           	psect	text49
 15148  004A60                     __ptext49:
 15149                           	opt stack 0
 15150  004A60                     _ICMP_EchoReply:
 15151                           	opt stack 13
 15152                           
 15153                           ; BSR set to: 0
 15154                           ;incstack = 0
 15155                           ;ICMP_EchoReply@icmpHdr stored from wreg
 15156  004A60  6FAE               	movwf	ICMP_EchoReply@icmpHdr& (0+255),b
 15157                           
 15158                           ;icmp.c: 89: error_msg ret = ERROR;
 15159  004A62  0100               	movlb	0	; () banked
 15160  004A64  6BAD               	clrf	ICMP_EchoReply@ret& (0+255),b
 15161                           
 15162                           ; BSR set to: 0
 15163                           ;icmp.c: 91: ret = IPv4_Start(ipv4Hdr->srcIpAddress, ipv4Hdr->protocol);
 15164  004A66  EE20 F00C          	lfsr	2,12
 15165  004A6A  D89A               	call	PL661	;call to abstracted procedure
 15166  004A6C  CFDE F022          	movff	postinc2,IPv4_Start@destAddress
 15167  004A70  CFDE F023          	movff	postinc2,IPv4_Start@destAddress+1
 15168  004A74  CFDE F024          	movff	postinc2,IPv4_Start@destAddress+2
 15169  004A78  CFDE F025          	movff	postinc2,IPv4_Start@destAddress+3
 15170  004A7C  EE20 F009          	lfsr	2,9
 15171  004A80  D88F               	call	PL661	;call to abstracted procedure
 15172  004A82  50DF               	movf	indf2,w,c
 15173  004A84  6E26               	movwf	IPv4_Start@protocol,c
 15174  004A86  EC08  F023         	call	_IPv4_Start	;wreg free
 15175  004A8A  6FAD               	movwf	ICMP_EchoReply@ret& (0+255),b
 15176                           
 15177                           ; BSR set to: 0
 15178                           ;icmp.c: 92: if(ret == SUCCESS)
 15179  004A8C  05AD               	decf	ICMP_EchoReply@ret& (0+255),w,b
 15180  004A8E  E16A               	bnz	l8853
 15181                           
 15182                           ; BSR set to: 0
 15183                           ;icmp.c: 93: {
 15184                           ;icmp.c: 94: uint16_t icmp_cksm_start;
 15185                           ;icmp.c: 95: uint16_t ipv4PayloadLength = ipv4Hdr->length - sizeof(ipv4Header_t);
 15186  004A90  EE20 F002          	lfsr	2,2
 15187  004A94  D885               	call	PL661	;call to abstracted procedure
 15188  004A96  CFDE F0A1          	movff	postinc2,??_ICMP_EchoReply
 15189  004A9A  CFDD F0A2          	movff	postdec2,??_ICMP_EchoReply+1
 15190  004A9E  0EEC               	movlw	236
 15191  004AA0  25A1               	addwf	??_ICMP_EchoReply& (0+255),w,b
 15192  004AA2  6FAB               	movwf	ICMP_EchoReply@ipv4PayloadLength& (0+255),b
 15193  004AA4  0EFF               	movlw	255
 15194  004AA6  21A2               	addwfc	(??_ICMP_EchoReply+1)& (0+255),w,b
 15195  004AA8  6FAC               	movwf	(ICMP_EchoReply@ipv4PayloadLength+1)& (0+255),b
 15196                           
 15197                           ;icmp.c: 97: ipv4PayloadLength = ipv4Hdr->length - (uint16_t)(ipv4Hdr->ihl << 2);
 15198  004AAA  C09F  FFD9         	movff	ICMP_EchoReply@ipv4Hdr,fsr2l
 15199  004AAE  C0A0  FFDA         	movff	ICMP_EchoReply@ipv4Hdr+1,fsr2h
 15200  004AB2  50DF               	movf	223,w,c
 15201  004AB4  0B0F               	andlw	15
 15202  004AB6  6FA1               	movwf	??_ICMP_EchoReply& (0+255),b
 15203  004AB8  6BA2               	clrf	(??_ICMP_EchoReply+1)& (0+255),b
 15204  004ABA  90D8               	bcf	status,0,c
 15205  004ABC  37A1               	rlcf	??_ICMP_EchoReply& (0+255),f,b
 15206  004ABE  37A2               	rlcf	(??_ICMP_EchoReply+1)& (0+255),f,b
 15207  004AC0  90D8               	bcf	status,0,c
 15208  004AC2  37A1               	rlcf	??_ICMP_EchoReply& (0+255),f,b
 15209  004AC4  37A2               	rlcf	(??_ICMP_EchoReply+1)& (0+255),f,b
 15210  004AC6  EE20 F002          	lfsr	2,2
 15211  004ACA  D86A               	call	PL661	;call to abstracted procedure
 15212  004ACC  CFDE F0A3          	movff	postinc2,??_ICMP_EchoReply+2
 15213  004AD0  CFDD F0A4          	movff	postdec2,??_ICMP_EchoReply+3
 15214  004AD4  51A1               	movf	??_ICMP_EchoReply& (0+255),w,b
 15215  004AD6  5DA3               	subwf	(??_ICMP_EchoReply+2)& (0+255),w,b
 15216  004AD8  6FAB               	movwf	ICMP_EchoReply@ipv4PayloadLength& (0+255),b
 15217  004ADA  51A2               	movf	(??_ICMP_EchoReply+1)& (0+255),w,b
 15218  004ADC  59A4               	subwfb	(??_ICMP_EchoReply+3)& (0+255),w,b
 15219  004ADE  6FAC               	movwf	(ICMP_EchoReply@ipv4PayloadLength+1)& (0+255),b
 15220                           
 15221                           ; BSR set to: 0
 15222                           ;icmp.c: 99: ETH_Write16(ECHO_REPLY);
 15223  004AE0  6A18               	clrf	ETH_Write16@data+1,c
 15224  004AE2  6A17               	clrf	ETH_Write16@data,c
 15225  004AE4  EC4F  F032         	call	_ETH_Write16	;wreg free
 15226                           
 15227                           ;icmp.c: 100: ETH_Write16(0);
 15228  004AE8  6A18               	clrf	ETH_Write16@data+1,c
 15229  004AEA  6A17               	clrf	ETH_Write16@data,c
 15230  004AEC  EC4F  F032         	call	_ETH_Write16	;wreg free
 15231                           
 15232                           ;icmp.c: 101: ETH_Write16(((((uint16_t)icmpHdr->identifier & (uint16_t)0xFF00) >> 8) | (
      +                          ((uint16_t)icmpHdr->identifier & (uint16_t)0x00FF) << 8)));
 15233  004AF0  D85C               	call	PL723	;call to abstracted procedure
 15234  004AF2  0E04               	movlw	4
 15235  004AF4  D849               	call	PL613	;call to abstracted procedure
 15236  004AF6  0E04               	movlw	4
 15237  004AF8  D837               	call	PL551	;call to abstracted procedure
 15238  004AFA  EC4F  F032         	call	_ETH_Write16	;wreg free
 15239                           
 15240                           ;icmp.c: 102: ETH_Write16(((((uint16_t)icmpHdr->sequence & (uint16_t)0xFF00) >> 8) | (((
      +                          uint16_t)icmpHdr->sequence & (uint16_t)0x00FF) << 8)));
 15241  004AFE  D855               	call	PL723	;call to abstracted procedure
 15242  004B00  0E06               	movlw	6
 15243  004B02  D842               	call	PL613	;call to abstracted procedure
 15244  004B04  0E06               	movlw	6
 15245  004B06  D830               	call	PL551	;call to abstracted procedure
 15246  004B08  EC4F  F032         	call	_ETH_Write16	;wreg free
 15247                           
 15248                           ;icmp.c: 105: ret = ETH_Copy(ipv4PayloadLength - sizeof(icmpHeader_t));
 15249  004B0C  0EF8               	movlw	248
 15250  004B0E  0100               	movlb	0	; () banked
 15251  004B10  25AB               	addwf	ICMP_EchoReply@ipv4PayloadLength& (0+255),w,b
 15252  004B12  6F6D               	movwf	ETH_Copy@len& (0+255),b
 15253  004B14  0EFF               	movlw	255
 15254  004B16  21AC               	addwfc	(ICMP_EchoReply@ipv4PayloadLength+1)& (0+255),w,b
 15255  004B18  6F6E               	movwf	(ETH_Copy@len+1)& (0+255),b
 15256  004B1A  EC2A  F029         	call	_ETH_Copy	;wreg free
 15257  004B1E  0100               	movlb	0	; () banked
 15258  004B20  6FAD               	movwf	ICMP_EchoReply@ret& (0+255),b
 15259                           
 15260                           ; BSR set to: 0
 15261                           ;icmp.c: 106: if(ret==SUCCESS)
 15262  004B22  05AD               	decf	ICMP_EchoReply@ret& (0+255),w,b
 15263  004B24  E11F               	bnz	l8853
 15264                           
 15265                           ; BSR set to: 0
 15266                           ;icmp.c: 107: {
 15267                           ;icmp.c: 108: ETH_SaveRDPT();
 15268  004B26  EC6B  F032         	call	_ETH_SaveRDPT	;wreg free
 15269                           
 15270                           ;icmp.c: 112: cksm = ETH_TxComputeChecksum(icmp_cksm_start, ipv4PayloadLength, 0);
 15271  004B2A  6A26               	clrf	ETH_TxComputeChecksum@position+1,c
 15272  004B2C  0E22               	movlw	34
 15273  004B2E  6E25               	movwf	ETH_TxComputeChecksum@position,c
 15274  004B30  C0AB  F027         	movff	ICMP_EchoReply@ipv4PayloadLength,ETH_TxComputeChecksum@len
 15275  004B34  C0AC  F028         	movff	ICMP_EchoReply@ipv4PayloadLength+1,ETH_TxComputeChecksum@len+1
 15276  004B38  6A2A               	clrf	ETH_TxComputeChecksum@seed+1,c
 15277  004B3A  6A29               	clrf	ETH_TxComputeChecksum@seed,c
 15278  004B3C  ECBD  F02B         	call	_ETH_TxComputeChecksum	;wreg free
 15279  004B40  C025  F0A9         	movff	?_ETH_TxComputeChecksum,ICMP_EchoReply@cksm
 15280  004B44  C026  F0AA         	movff	?_ETH_TxComputeChecksum+1,ICMP_EchoReply@cksm+1
 15281                           
 15282                           ; BSR set to: 0
 15283                           ;icmp.c: 113: ETH_Insert((char *)&cksm,sizeof(cksm),sizeof(ethernetFrame_t) + sizeof(ipv
      +                          4Header_t) + (int)(((char*)&((icmpHeader_t *)1)->checksum)-1));
 15284  004B48  ECC0  F02C         	call	PL625	;call to abstracted procedure
 15285  004B4C  0E24               	movlw	36
 15286  004B4E  6E19               	movwf	ETH_Insert@offset,c
 15287  004B50  0EA9               	movlw	ICMP_EchoReply@cksm& (0+255)
 15288  004B52  EC3B  F02F         	call	_ETH_Insert
 15289                           
 15290                           ;icmp.c: 114: ret = IPV4_Send(ipv4PayloadLength);
 15291  004B56  C0AB  F031         	movff	ICMP_EchoReply@ipv4PayloadLength,IPV4_Send@payloadLength
 15292  004B5A  C0AC  F032         	movff	ICMP_EchoReply@ipv4PayloadLength+1,IPV4_Send@payloadLength+1
 15293  004B5E  EC8D  F02C         	call	_IPV4_Send	;wreg free
 15294  004B62  6FAD               	movwf	ICMP_EchoReply@ret& (0+255),b
 15295  004B64                     l8853:
 15296                           
 15297                           ; BSR set to: 0
 15298                           ;icmp.c: 115: }
 15299                           ;icmp.c: 116: }
 15300                           ;icmp.c: 117: return ret;
 15301  004B64  51AD               	movf	ICMP_EchoReply@ret& (0+255),w,b
 15302                           
 15303                           ; BSR set to: 0
 15304  004B66  0012               	return		;funcret
 15305  004B68                     __end_of_ICMP_EchoReply:
 15306                           	opt stack 0
 15307  004B68                     PL551:
 15308                           	opt stack 13
 15309  004B68  26D9               	addwf	fsr2l,f,c
 15310  004B6A  CFDE F0A5          	movff	postinc2,??_ICMP_EchoReply+4
 15311  004B6E  CFDD F0A6          	movff	postdec2,??_ICMP_EchoReply+5
 15312  004B72  C0A6  F0A5         	movff	??_ICMP_EchoReply+5,??_ICMP_EchoReply+4
 15313  004B76  6BA6               	clrf	(??_ICMP_EchoReply+5)& (0+255),b
 15314  004B78  6BA6               	clrf	(??_ICMP_EchoReply+5)& (0+255),b
 15315  004B7A  51A3               	movf	(??_ICMP_EchoReply+2)& (0+255),w,b
 15316  004B7C  11A5               	iorwf	(??_ICMP_EchoReply+4)& (0+255),w,b
 15317  004B7E  6E17               	movwf	ETH_Write16@data,c
 15318  004B80  51A4               	movf	(??_ICMP_EchoReply+3)& (0+255),w,b
 15319  004B82  11A6               	iorwf	(??_ICMP_EchoReply+5)& (0+255),w,b
 15320  004B84  6E18               	movwf	ETH_Write16@data+1,c
 15321  004B86  0012               	return	
 15322  004B88                     __end_ofPL551:
 15323                           	opt stack 0
 15324  004B88                     PL613:
 15325                           	opt stack 13
 15326  004B88  26D9               	addwf	fsr2l,f,c
 15327  004B8A  CFDE F0A1          	movff	postinc2,??_ICMP_EchoReply
 15328  004B8E  CFDD F0A2          	movff	postdec2,??_ICMP_EchoReply+1
 15329  004B92  51A1               	movf	??_ICMP_EchoReply& (0+255),w,b
 15330  004B94  6FA4               	movwf	(??_ICMP_EchoReply+3)& (0+255),b
 15331  004B96  6BA3               	clrf	(??_ICMP_EchoReply+2)& (0+255),b
 15332  004B98  51AE               	movf	ICMP_EchoReply@icmpHdr& (0+255),w,b
 15333  004B9A  6ED9               	movwf	fsr2l,c
 15334  004B9C  6ADA               	clrf	fsr2h,c
 15335  004B9E  0012               	return	
 15336  004BA0                     __end_ofPL613:
 15337                           	opt stack 0
 15338  004BA0                     PL661:
 15339                           	opt stack 13
 15340  004BA0  519F               	movf	ICMP_EchoReply@ipv4Hdr& (0+255),w,b
 15341  004BA2  26D9               	addwf	fsr2l,f,c
 15342  004BA4  51A0               	movf	(ICMP_EchoReply@ipv4Hdr+1)& (0+255),w,b
 15343  004BA6  22DA               	addwfc	fsr2h,f,c
 15344  004BA8  0012               	return	
 15345  004BAA                     __end_ofPL661:
 15346                           	opt stack 0
 15347  004BAA                     PL723:
 15348                           	opt stack 13
 15349  004BAA  0100               	movlb	0	; () banked
 15350  004BAC  51AE               	movf	ICMP_EchoReply@icmpHdr& (0+255),w,b
 15351  004BAE  6ED9               	movwf	fsr2l,c
 15352  004BB0  6ADA               	clrf	fsr2h,c
 15353  004BB2  0012               	return	
 15354  004BB4                     __end_ofPL723:
 15355                           	opt stack 0
 15356                           tosu	equ	0xFFF
 15357                           tosh	equ	0xFFE
 15358                           tosl	equ	0xFFD
 15359                           pclath	equ	0xFFA
 15360                           tblptru	equ	0xFF8
 15361                           tblptrh	equ	0xFF7
 15362                           tblptrl	equ	0xFF6
 15363                           tablat	equ	0xFF5
 15364                           prodh	equ	0xFF4
 15365                           prodl	equ	0xFF3
 15366                           intcon	equ	0xFF2
 15367                           indf0	equ	0xFEF
 15368                           postinc0	equ	0xFEE
 15369                           fsr0h	equ	0xFEA
 15370                           fsr0l	equ	0xFE9
 15371                           wreg	equ	0xFE8
 15372                           postinc1	equ	0xFE6
 15373                           plusw1	equ	0xFE3
 15374                           fsr1h	equ	0xFE2
 15375                           fsr1l	equ	0xFE1
 15376                           bsr	equ	0xFE0
 15377                           indf2	equ	0xFDF
 15378                           postinc2	equ	0xFDE
 15379                           postdec2	equ	0xFDD
 15380                           plusw2	equ	0xFDB
 15381                           fsr2h	equ	0xFDA
 15382                           fsr2l	equ	0xFD9
 15383                           status	equ	0xFD8
 15384                           
 15385 ;; *************** function _ETH_SaveRDPT *****************
 15386 ;; Defined at:
 15387 ;;		line 828 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 15388 ;; Parameters:    Size  Location     Type
 15389 ;;		None
 15390 ;; Auto vars:     Size  Location     Type
 15391 ;;		None
 15392 ;; Return value:  Size  Location     Type
 15393 ;;		None               void
 15394 ;; Registers used:
 15395 ;;		None
 15396 ;; Tracked objects:
 15397 ;;		On entry : D/2
 15398 ;;		On exit  : D/0
 15399 ;;		Unchanged: D/0
 15400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15405 ;;Total ram usage:        0 bytes
 15406 ;; Hardware stack levels used:    1
 15407 ;; Hardware stack levels required when called:    8
 15408 ;; This function calls:
 15409 ;;		Nothing
 15410 ;; This function is called by:
 15411 ;;		_ICMP_Receive
 15412 ;;		_ICMP_EchoReply
 15413 ;; This function uses a non-reentrant model
 15414 ;;
 15415                           
 15416                           	psect	text50
 15417  0064D6                     __ptext50:
 15418                           	opt stack 0
 15419  0064D6                     _ETH_SaveRDPT:
 15420                           	opt stack 17
 15421                           
 15422                           ;j60_driver.c: 830: ethData.saveRDPT = ERDPT;
 15423                           
 15424                           ; BSR set to: 0
 15425                           ;incstack = 0
 15426  0064D6  CF7A F1C2          	movff	3962,_ethData+3	;volatile
 15427  0064DA  CF7B F1C3          	movff	3963,_ethData+4	;volatile
 15428  0064DE  0012               	return		;funcret
 15429  0064E0                     __end_of_ETH_SaveRDPT:
 15430                           	opt stack 0
 15431                           tosu	equ	0xFFF
 15432                           tosh	equ	0xFFE
 15433                           tosl	equ	0xFFD
 15434                           pclath	equ	0xFFA
 15435                           tblptru	equ	0xFF8
 15436                           tblptrh	equ	0xFF7
 15437                           tblptrl	equ	0xFF6
 15438                           tablat	equ	0xFF5
 15439                           prodh	equ	0xFF4
 15440                           prodl	equ	0xFF3
 15441                           intcon	equ	0xFF2
 15442                           indf0	equ	0xFEF
 15443                           postinc0	equ	0xFEE
 15444                           fsr0h	equ	0xFEA
 15445                           fsr0l	equ	0xFE9
 15446                           wreg	equ	0xFE8
 15447                           postinc1	equ	0xFE6
 15448                           plusw1	equ	0xFE3
 15449                           fsr1h	equ	0xFE2
 15450                           fsr1l	equ	0xFE1
 15451                           bsr	equ	0xFE0
 15452                           indf2	equ	0xFDF
 15453                           postinc2	equ	0xFDE
 15454                           postdec2	equ	0xFDD
 15455                           plusw2	equ	0xFDB
 15456                           fsr2h	equ	0xFDA
 15457                           fsr2l	equ	0xFD9
 15458                           status	equ	0xFD8
 15459                           
 15460 ;; *************** function _ETH_Copy *****************
 15461 ;; Defined at:
 15462 ;;		line 668 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 15463 ;; Parameters:    Size  Location     Type
 15464 ;;  len             2   13[BANK0 ] unsigned int 
 15465 ;; Auto vars:     Size  Location     Type
 15466 ;;  tmp_len         2   17[BANK0 ] unsigned int 
 15467 ;;  timer           2   15[BANK0 ] unsigned int 
 15468 ;; Return value:  Size  Location     Type
 15469 ;;                  1    wreg      enum E6944
 15470 ;; Registers used:
 15471 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15472 ;; Tracked objects:
 15473 ;;		On entry : F/0
 15474 ;;		On exit  : 0/0
 15475 ;;		Unchanged: 0/0
 15476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15477 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15478 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15480 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15481 ;;Total ram usage:        6 bytes
 15482 ;; Hardware stack levels used:    1
 15483 ;; Hardware stack levels required when called:   12
 15484 ;; This function calls:
 15485 ;;		_SYSLOG_Write
 15486 ;;		___wmul
 15487 ;; This function is called by:
 15488 ;;		_ICMP_EchoReply
 15489 ;; This function uses a non-reentrant model
 15490 ;;
 15491                           
 15492                           	psect	text51
 15493  005254                     __ptext51:
 15494                           	opt stack 0
 15495  005254                     _ETH_Copy:
 15496                           	opt stack 13
 15497                           
 15498                           ; BSR set to: 0
 15499                           ;j60_driver.c: 670: uint16_t timer;
 15500                           ;j60_driver.c: 671: uint16_t tmp_len;
 15501                           ;j60_driver.c: 673: timer = 2 * len;
 15502                           
 15503                           ;incstack = 0
 15504  005254  90D8               	bcf	status,0,c
 15505  005256  356D               	rlcf	ETH_Copy@len& (0+255),w,b
 15506  005258  6F6F               	movwf	ETH_Copy@timer& (0+255),b
 15507  00525A  356E               	rlcf	(ETH_Copy@len+1)& (0+255),w,b
 15508  00525C  6F70               	movwf	(ETH_Copy@timer+1)& (0+255),b
 15509                           
 15510                           ;j60_driver.c: 674: while(ECON1bits.DMAST!=0 && --timer) __nop();
 15511  00525E  D001               	goto	l599
 15512  005260                     l600:
 15513                           
 15514                           ; BSR set to: 0
 15515  005260  F000               	nop	
 15516  005262                     l599:
 15517  005262  AAD2               	btfss	4050,5,c	;volatile
 15518  005264  D002               	goto	l603
 15519  005266  D84A               	call	PL681	;call to abstracted procedure
 15520  005268  E1FB               	bnz	l600
 15521  00526A                     l603:
 15522                           
 15523                           ;j60_driver.c: 675: if(ECON1bits.DMAST==0)
 15524  00526A  BAD2               	btfsc	4050,5,c	;volatile
 15525  00526C  D040               	goto	l8571
 15526                           
 15527                           ;j60_driver.c: 676: {
 15528                           ;j60_driver.c: 677: EDMADST = EWRPT;
 15529  00526E  CEE2 FEF4          	movff	3810,3828	;volatile
 15530  005272  CEE3 FEF5          	movff	3811,3829	;volatile
 15531                           
 15532                           ;j60_driver.c: 678: EDMAST = ethData.saveRDPT;
 15533  005276  C1C2  FEF0         	movff	_ethData+3,3824	;volatile
 15534  00527A  C1C3  FEF1         	movff	_ethData+4,3825	;volatile
 15535                           
 15536                           ;j60_driver.c: 680: tmp_len = ethData.saveRDPT + len;
 15537  00527E  0100               	movlb	0	; () banked
 15538  005280  516D               	movf	ETH_Copy@len& (0+255),w,b
 15539  005282  0101               	movlb	1	; () banked
 15540  005284  25C2               	addwf	(_ethData+3)& (0+255),w,b	;volatile
 15541  005286  0100               	movlb	0	; () banked
 15542  005288  6F71               	movwf	ETH_Copy@tmp_len& (0+255),b
 15543  00528A  516E               	movf	(ETH_Copy@len+1)& (0+255),w,b
 15544  00528C  0101               	movlb	1	; () banked
 15545  00528E  21C3               	addwfc	(_ethData+4)& (0+255),w,b	;volatile
 15546  005290  0100               	movlb	0	; () banked
 15547  005292  6F72               	movwf	(ETH_Copy@tmp_len+1)& (0+255),b
 15548                           
 15549                           ;j60_driver.c: 682: if (tmp_len > ((((8192) - (1518)) - 2)) )
 15550  005294  0E11               	movlw	17
 15551  005296  5D71               	subwf	ETH_Copy@tmp_len& (0+255),w,b
 15552  005298  0E1A               	movlw	26
 15553  00529A  5972               	subwfb	(ETH_Copy@tmp_len+1)& (0+255),w,b
 15554  00529C  E304               	bnc	l8559
 15555                           
 15556                           ; BSR set to: 0
 15557                           ;j60_driver.c: 683: {
 15558                           ;j60_driver.c: 684: tmp_len = tmp_len - ((((8192) - (1518)) - 2));
 15559  00529E  0EF0               	movlw	240
 15560  0052A0  2771               	addwf	ETH_Copy@tmp_len& (0+255),f,b
 15561  0052A2  0EE5               	movlw	229
 15562  0052A4  2372               	addwfc	(ETH_Copy@tmp_len+1)& (0+255),f,b
 15563  0052A6                     l8559:
 15564                           
 15565                           ; BSR set to: 0
 15566                           ;j60_driver.c: 685: EDMAND = (0) + tmp_len;
 15567  0052A6  C071  FEF2         	movff	ETH_Copy@tmp_len,3826	;volatile
 15568  0052AA  C072  FEF3         	movff	ETH_Copy@tmp_len+1,3827	;volatile
 15569                           
 15570                           ; BSR set to: 0
 15571                           ;j60_driver.c: 690: }
 15572                           ;j60_driver.c: 692: ECON1bits.CSUMEN = 0;
 15573                           
 15574                           ;j60_driver.c: 687: }else
 15575  0052AE  98D2               	bcf	4050,4,c	;volatile
 15576                           
 15577                           ;j60_driver.c: 693: ECON1bits.DMAST = 1;
 15578  0052B0  8AD2               	bsf	4050,5,c	;volatile
 15579                           
 15580                           ; BSR set to: 0
 15581                           ;j60_driver.c: 695: timer = 40 * len;
 15582  0052B2  C06D  F017         	movff	ETH_Copy@len,___wmul@multiplier
 15583  0052B6  C06E  F018         	movff	ETH_Copy@len+1,___wmul@multiplier+1
 15584  0052BA  6A1A               	clrf	___wmul@multiplicand+1,c
 15585  0052BC  0E28               	movlw	40
 15586  0052BE  6E19               	movwf	___wmul@multiplicand,c
 15587  0052C0  ECF3  F030         	call	___wmul	;wreg free
 15588  0052C4  C017  F06F         	movff	?___wmul,ETH_Copy@timer
 15589  0052C8  C018  F070         	movff	?___wmul+1,ETH_Copy@timer+1
 15590                           
 15591                           ;j60_driver.c: 696: while(ECON1bits.DMAST!=0 && --timer) __nop();
 15592  0052CC  D001               	goto	l607
 15593  0052CE                     l608:
 15594                           
 15595                           ; BSR set to: 0
 15596  0052CE  F000               	nop	
 15597  0052D0                     l607:
 15598  0052D0  AAD2               	btfss	4050,5,c	;volatile
 15599  0052D2  D002               	goto	l611
 15600  0052D4  D813               	call	PL681	;call to abstracted procedure
 15601  0052D6  E1FB               	bnz	l608
 15602  0052D8                     l611:
 15603                           
 15604                           ;j60_driver.c: 697: if(ECON1bits.DMAST == 0)
 15605  0052D8  BAD2               	btfsc	4050,5,c	;volatile
 15606  0052DA  D009               	goto	l8571
 15607                           
 15608                           ;j60_driver.c: 698: {
 15609                           ;j60_driver.c: 699: EWRPT += len;
 15610  0052DC  0100               	movlb	0	; () banked
 15611  0052DE  516D               	movf	ETH_Copy@len& (0+255),w,b
 15612  0052E0  010E               	movlb	14	; () banked
 15613  0052E2  27E2               	addwf	226,f,b	;volatile
 15614  0052E4  0100               	movlb	0	; () banked
 15615  0052E6  516E               	movf	(ETH_Copy@len+1)& (0+255),w,b
 15616  0052E8  010E               	movlb	14	; () banked
 15617  0052EA  23E3               	addwfc	227,f,b	;volatile
 15618                           
 15619                           ; BSR set to: 14
 15620                           ;j60_driver.c: 700: return SUCCESS;
 15621  0052EC  0C01               	retlw	1
 15622  0052EE                     l8571:
 15623                           
 15624                           ;j60_driver.c: 701: }
 15625                           ;j60_driver.c: 702: }
 15626                           ;j60_driver.c: 704: SYSLOG_Write("DMA TIMEOUT!!!");
 15627  0052EE  0E81               	movlw	low STR_1
 15628  0052F0  EC71  F026         	call	PL651	;call to abstracted procedure
 15629  0052F4  EC06  F031         	call	_SYSLOG_Write	;wreg free
 15630  0052F8  00FF               	reset		;# 
 15631                           
 15632                           ;j60_driver.c: 706: return DMA_TIMEOUT;
 15633  0052FA  0C0C               	retlw	12	;funcret
 15634  0052FC                     __end_of_ETH_Copy:
 15635                           	opt stack 0
 15636  0052FC                     PL681:
 15637                           	opt stack 13
 15638  0052FC  0100               	movlb	0	; () banked
 15639  0052FE  076F               	decf	ETH_Copy@timer& (0+255),f,b
 15640  005300  A0D8               	btfss	status,0,c
 15641  005302  0770               	decf	(ETH_Copy@timer+1)& (0+255),f,b
 15642  005304  516F               	movf	ETH_Copy@timer& (0+255),w,b
 15643  005306  1170               	iorwf	(ETH_Copy@timer+1)& (0+255),w,b
 15644  005308  0012               	return	
 15645  00530A                     __end_ofPL681:
 15646                           	opt stack 0
 15647                           tosu	equ	0xFFF
 15648                           tosh	equ	0xFFE
 15649                           tosl	equ	0xFFD
 15650                           pclath	equ	0xFFA
 15651                           tblptru	equ	0xFF8
 15652                           tblptrh	equ	0xFF7
 15653                           tblptrl	equ	0xFF6
 15654                           tablat	equ	0xFF5
 15655                           prodh	equ	0xFF4
 15656                           prodl	equ	0xFF3
 15657                           intcon	equ	0xFF2
 15658                           indf0	equ	0xFEF
 15659                           postinc0	equ	0xFEE
 15660                           fsr0h	equ	0xFEA
 15661                           fsr0l	equ	0xFE9
 15662                           wreg	equ	0xFE8
 15663                           postinc1	equ	0xFE6
 15664                           plusw1	equ	0xFE3
 15665                           fsr1h	equ	0xFE2
 15666                           fsr1l	equ	0xFE1
 15667                           bsr	equ	0xFE0
 15668                           indf2	equ	0xFDF
 15669                           postinc2	equ	0xFDE
 15670                           postdec2	equ	0xFDD
 15671                           plusw2	equ	0xFDB
 15672                           fsr2h	equ	0xFDA
 15673                           fsr2l	equ	0xFD9
 15674                           status	equ	0xFD8
 15675                           
 15676 ;; *************** function ___wmul *****************
 15677 ;; Defined at:
 15678 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 15679 ;; Parameters:    Size  Location     Type
 15680 ;;  multiplier      2   22[COMRAM] unsigned int 
 15681 ;;  multiplicand    2   24[COMRAM] unsigned int 
 15682 ;; Auto vars:     Size  Location     Type
 15683 ;;  product         2   26[COMRAM] unsigned int 
 15684 ;; Return value:  Size  Location     Type
 15685 ;;                  2   22[COMRAM] unsigned int 
 15686 ;; Registers used:
 15687 ;;		wreg, status,2, status,0, prodl, prodh
 15688 ;; Tracked objects:
 15689 ;;		On entry : F/0
 15690 ;;		On exit  : F/0
 15691 ;;		Unchanged: F/0
 15692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15693 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15694 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15696 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15697 ;;Total ram usage:        6 bytes
 15698 ;; Hardware stack levels used:    1
 15699 ;; Hardware stack levels required when called:    8
 15700 ;; This function calls:
 15701 ;;		Nothing
 15702 ;; This function is called by:
 15703 ;;		_ETH_Copy
 15704 ;; This function uses a non-reentrant model
 15705 ;;
 15706                           
 15707                           	psect	text52
 15708  0061E6                     __ptext52:
 15709                           	opt stack 0
 15710  0061E6                     ___wmul:
 15711                           	opt stack 16
 15712                           
 15713                           ; BSR set to: 0
 15714                           
 15715                           ;incstack = 0
 15716  0061E6  5017               	movf	___wmul@multiplier,w,c
 15717  0061E8  0219               	mulwf	___wmul@multiplicand,c
 15718  0061EA  CFF3 F01B          	movff	prodl,___wmul@product
 15719  0061EE  CFF4 F01C          	movff	prodh,___wmul@product+1
 15720  0061F2  5017               	movf	___wmul@multiplier,w,c
 15721  0061F4  021A               	mulwf	___wmul@multiplicand+1,c
 15722  0061F6  50F3               	movf	prodl,w,c
 15723  0061F8  261C               	addwf	___wmul@product+1,f,c
 15724  0061FA  5018               	movf	___wmul@multiplier+1,w,c
 15725  0061FC  0219               	mulwf	___wmul@multiplicand,c
 15726  0061FE  50F3               	movf	prodl,w,c
 15727  006200  261C               	addwf	___wmul@product+1,f,c
 15728                           
 15729                           ; BSR set to: 0
 15730  006202  C01B  F017         	movff	___wmul@product,?___wmul
 15731  006206  C01C  F018         	movff	___wmul@product+1,?___wmul+1
 15732                           
 15733                           ; BSR set to: 0
 15734  00620A  0012               	return		;funcret
 15735  00620C                     __end_of___wmul:
 15736                           	opt stack 0
 15737                           tosu	equ	0xFFF
 15738                           tosh	equ	0xFFE
 15739                           tosl	equ	0xFFD
 15740                           pclath	equ	0xFFA
 15741                           tblptru	equ	0xFF8
 15742                           tblptrh	equ	0xFF7
 15743                           tblptrl	equ	0xFF6
 15744                           tablat	equ	0xFF5
 15745                           prodh	equ	0xFF4
 15746                           prodl	equ	0xFF3
 15747                           intcon	equ	0xFF2
 15748                           indf0	equ	0xFEF
 15749                           postinc0	equ	0xFEE
 15750                           fsr0h	equ	0xFEA
 15751                           fsr0l	equ	0xFE9
 15752                           wreg	equ	0xFE8
 15753                           postinc1	equ	0xFE6
 15754                           plusw1	equ	0xFE3
 15755                           fsr1h	equ	0xFE2
 15756                           fsr1l	equ	0xFE1
 15757                           bsr	equ	0xFE0
 15758                           indf2	equ	0xFDF
 15759                           postinc2	equ	0xFDE
 15760                           postdec2	equ	0xFDD
 15761                           plusw2	equ	0xFDB
 15762                           fsr2h	equ	0xFDA
 15763                           fsr2l	equ	0xFD9
 15764                           status	equ	0xFD8
 15765                           
 15766 ;; *************** function _SYSLOG_Write *****************
 15767 ;; Defined at:
 15768 ;;		line 50 in file "../../TCPIP Library/source/syslog.c"
 15769 ;; Parameters:    Size  Location     Type
 15770 ;;  message         2   48[COMRAM] PTR const unsigned char 
 15771 ;;		 -> main@str(32), STR_6(13), STR_5(17), STR_1(15), 
 15772 ;; Auto vars:     Size  Location     Type
 15773 ;;  t               2   11[BANK0 ] unsigned int 
 15774 ;; Return value:  Size  Location     Type
 15775 ;;		None               void
 15776 ;; Registers used:
 15777 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15778 ;; Tracked objects:
 15779 ;;		On entry : 0/2
 15780 ;;		On exit  : 0/0
 15781 ;;		Unchanged: 0/0
 15782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15783 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15784 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15786 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15787 ;;Total ram usage:        4 bytes
 15788 ;; Hardware stack levels used:    1
 15789 ;; Hardware stack levels required when called:   11
 15790 ;; This function calls:
 15791 ;;		_printf
 15792 ;;		_time
 15793 ;; This function is called by:
 15794 ;;		_ETH_Copy
 15795 ;;		_main
 15796 ;; This function uses a non-reentrant model
 15797 ;;
 15798                           
 15799                           	psect	text53
 15800  00620C                     __ptext53:
 15801                           	opt stack 0
 15802  00620C                     _SYSLOG_Write:
 15803                           	opt stack 19
 15804                           
 15805                           ;syslog.c: 52: unsigned int t = (unsigned int) time(0);
 15806                           
 15807                           ; BSR set to: 0
 15808                           ;incstack = 0
 15809  00620C  6A17               	clrf	time@t,c
 15810  00620E  6A18               	clrf	time@t+1,c
 15811  006210  EC4F  F02D         	call	_time	;wreg free
 15812  006214  C017  F06B         	movff	?_time,SYSLOG_Write@t
 15813  006218  C018  F06C         	movff	?_time+1,SYSLOG_Write@t+1
 15814                           
 15815                           ;syslog.c: 53: printf("%u : %s\r\n",t,message);
 15816  00621C  C06B  F060         	movff	SYSLOG_Write@t,?_printf
 15817  006220  C06C  F061         	movff	SYSLOG_Write@t+1,?_printf+1
 15818  006224  C031  F062         	movff	SYSLOG_Write@message,?_printf+2
 15819  006228  C032  F063         	movff	SYSLOG_Write@message+1,?_printf+3
 15820  00622C  0EA9               	movlw	STR_4& (0+255)
 15821  00622E  EF19  F031         	goto	_printf
 15822  006232                     __end_of_SYSLOG_Write:
 15823                           	opt stack 0
 15824                           tosu	equ	0xFFF
 15825                           tosh	equ	0xFFE
 15826                           tosl	equ	0xFFD
 15827                           pclath	equ	0xFFA
 15828                           tblptru	equ	0xFF8
 15829                           tblptrh	equ	0xFF7
 15830                           tblptrl	equ	0xFF6
 15831                           tablat	equ	0xFF5
 15832                           prodh	equ	0xFF4
 15833                           prodl	equ	0xFF3
 15834                           intcon	equ	0xFF2
 15835                           indf0	equ	0xFEF
 15836                           postinc0	equ	0xFEE
 15837                           fsr0h	equ	0xFEA
 15838                           fsr0l	equ	0xFE9
 15839                           wreg	equ	0xFE8
 15840                           postinc1	equ	0xFE6
 15841                           plusw1	equ	0xFE3
 15842                           fsr1h	equ	0xFE2
 15843                           fsr1l	equ	0xFE1
 15844                           bsr	equ	0xFE0
 15845                           indf2	equ	0xFDF
 15846                           postinc2	equ	0xFDE
 15847                           postdec2	equ	0xFDD
 15848                           plusw2	equ	0xFDB
 15849                           fsr2h	equ	0xFDA
 15850                           fsr2l	equ	0xFD9
 15851                           status	equ	0xFD8
 15852                           
 15853 ;; *************** function _printf *****************
 15854 ;; Defined at:
 15855 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\printf.c"
 15856 ;; Parameters:    Size  Location     Type
 15857 ;;  f               1    wreg     PTR const unsigned char 
 15858 ;;		 -> STR_4(10), STR_3(28), 
 15859 ;; Auto vars:     Size  Location     Type
 15860 ;;  f               1    4[BANK0 ] PTR const unsigned char 
 15861 ;;		 -> STR_4(10), STR_3(28), 
 15862 ;;  pb              5    6[BANK0 ] struct __prbuf
 15863 ;;  ap              1    5[BANK0 ] PTR void [1]
 15864 ;;		 -> ?_sprintf(2), ?_printf(2), 
 15865 ;; Return value:  Size  Location     Type
 15866 ;;                  2    0[BANK0 ] int 
 15867 ;; Registers used:
 15868 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15869 ;; Tracked objects:
 15870 ;;		On entry : 0/2
 15871 ;;		On exit  : 0/0
 15872 ;;		Unchanged: 0/0
 15873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15874 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15875 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15877 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15878 ;;Total ram usage:       11 bytes
 15879 ;; Hardware stack levels used:    1
 15880 ;; Hardware stack levels required when called:   10
 15881 ;; This function calls:
 15882 ;;		__doprnt
 15883 ;; This function is called by:
 15884 ;;		_SYSLOG_Init
 15885 ;;		_SYSLOG_Write
 15886 ;; This function uses a non-reentrant model
 15887 ;;
 15888                           
 15889                           	psect	text54
 15890  006232                     __ptext54:
 15891                           	opt stack 0
 15892  006232                     _printf:
 15893                           	opt stack 19
 15894                           
 15895                           ;incstack = 0
 15896                           ;printf@f stored from wreg
 15897  006232  0100               	movlb	0	; () banked
 15898  006234  6F64               	movwf	printf@f& (0+255),b
 15899  006236  6B66               	clrf	printf@pb& (0+255),b
 15900  006238  6B67               	clrf	(printf@pb+1)& (0+255),b
 15901                           
 15902                           ; BSR set to: 0
 15903  00623A  0E54               	movlw	low _putch
 15904  00623C  6F68               	movwf	(printf@pb+2)& (0+255),b
 15905  00623E  0E63               	movlw	high _putch
 15906  006240  6F69               	movwf	(printf@pb+3)& (0+255),b
 15907  006242  0E00               	movlw	low (_putch shr (0+16))
 15908  006244  6F6A               	movwf	(printf@pb+4)& (0+255),b
 15909  006246  0E60               	movlw	low ?_printf
 15910  006248  6F65               	movwf	printf@ap& (0+255),b
 15911                           
 15912                           ; BSR set to: 0
 15913                           ;	Return value of _printf is never used
 15914  00624A  C064  F023         	movff	printf@f,__doprnt@f
 15915  00624E  0E65               	movlw	low printf@ap
 15916  006250  6E24               	movwf	__doprnt@ap,c
 15917  006252  0E66               	movlw	printf@pb& (0+255)
 15918  006254  EF56  F01D         	goto	__doprnt
 15919  006258                     __end_of_printf:
 15920                           	opt stack 0
 15921                           tosu	equ	0xFFF
 15922                           tosh	equ	0xFFE
 15923                           tosl	equ	0xFFD
 15924                           pclath	equ	0xFFA
 15925                           tblptru	equ	0xFF8
 15926                           tblptrh	equ	0xFF7
 15927                           tblptrl	equ	0xFF6
 15928                           tablat	equ	0xFF5
 15929                           prodh	equ	0xFF4
 15930                           prodl	equ	0xFF3
 15931                           intcon	equ	0xFF2
 15932                           indf0	equ	0xFEF
 15933                           postinc0	equ	0xFEE
 15934                           fsr0h	equ	0xFEA
 15935                           fsr0l	equ	0xFE9
 15936                           wreg	equ	0xFE8
 15937                           postinc1	equ	0xFE6
 15938                           plusw1	equ	0xFE3
 15939                           fsr1h	equ	0xFE2
 15940                           fsr1l	equ	0xFE1
 15941                           bsr	equ	0xFE0
 15942                           indf2	equ	0xFDF
 15943                           postinc2	equ	0xFDE
 15944                           postdec2	equ	0xFDD
 15945                           plusw2	equ	0xFDB
 15946                           fsr2h	equ	0xFDA
 15947                           fsr2l	equ	0xFD9
 15948                           status	equ	0xFD8
 15949                           
 15950 ;; *************** function __doprnt *****************
 15951 ;; Defined at:
 15952 ;;		line 458 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
 15953 ;; Parameters:    Size  Location     Type
 15954 ;;  pb              1    wreg     PTR struct __prbuf
 15955 ;;		 -> sprintf@pb(5), printf@pb(5), 
 15956 ;;  f               1   34[COMRAM] PTR const unsigned char 
 15957 ;;		 -> STR_7(12), STR_4(10), STR_3(28), STR_2(8), 
 15958 ;;  ap              1   35[COMRAM] PTR PTR void 
 15959 ;;		 -> sprintf@ap(1), printf@ap(1), 
 15960 ;; Auto vars:     Size  Location     Type
 15961 ;;  pb              1   47[COMRAM] PTR struct __prbuf
 15962 ;;		 -> sprintf@pb(5), printf@pb(5), 
 15963 ;;  idx             1   39[COMRAM] unsigned char 
 15964 ;;  tmpval          4    0        struct .
 15965 ;;  val             2   44[COMRAM] unsigned int 
 15966 ;;  cp              2   41[COMRAM] PTR const unsigned char 
 15967 ;;		 -> ?_sprintf(2), ?_printf(2), STR_8(7), main@str(32), 
 15968 ;;		 -> STR_6(13), STR_5(17), Network_Read@debug_str(80), STR_1(15), 
 15969 ;;		 -> NULL(0), 
 15970 ;;  len             2    0        unsigned int 
 15971 ;;  c               1   46[COMRAM] char 
 15972 ;;  flag            1   43[COMRAM] unsigned char 
 15973 ;;  prec            1   40[COMRAM] char 
 15974 ;; Return value:  Size  Location     Type
 15975 ;;                  2   34[COMRAM] int 
 15976 ;; Registers used:
 15977 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15978 ;; Tracked objects:
 15979 ;;		On entry : F/0
 15980 ;;		On exit  : 0/0
 15981 ;;		Unchanged: 0/0
 15982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15983 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15984 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15985 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15986 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15987 ;;Total ram usage:       14 bytes
 15988 ;; Hardware stack levels used:    1
 15989 ;; Hardware stack levels required when called:    9
 15990 ;; This function calls:
 15991 ;;		Absolute function
 15992 ;;		___lwdiv
 15993 ;;		___lwmod
 15994 ;;		_putch
 15995 ;; This function is called by:
 15996 ;;		_printf
 15997 ;;		_sprintf
 15998 ;; This function uses a non-reentrant model
 15999 ;;
 16000                           
 16001                           	psect	text55
 16002  003AAC                     __ptext55:
 16003                           	opt stack 0
 16004  003AAC                     __doprnt:
 16005                           	opt stack 20
 16006                           
 16007                           ;incstack = 0
 16008                           ;__doprnt@pb stored from wreg
 16009  003AAC  6E30               	movwf	__doprnt@pb,c
 16010                           
 16011                           ;doprnt.c: 499: signed char c;
 16012                           ;doprnt.c: 506: signed char prec;
 16013                           ;doprnt.c: 508: unsigned char flag;
 16014                           ;doprnt.c: 523: union {
 16015                           ;doprnt.c: 524: unsigned long vd;
 16016                           ;doprnt.c: 525: double integ;
 16017                           ;doprnt.c: 526: } tmpval;
 16018                           ;doprnt.c: 528: unsigned int val;
 16019                           ;doprnt.c: 529: unsigned len;
 16020                           ;doprnt.c: 530: const char * cp;
 16021                           ;doprnt.c: 536: while(c = *f++) {
 16022  003AAE  D11E               	goto	l8193
 16023  003AB0                     l8079:
 16024                           
 16025                           ;doprnt.c: 538: if(c != '%')
 16026  003AB0  0E25               	movlw	37
 16027  003AB2  182F               	xorwf	__doprnt@c,w,c
 16028  003AB4  E018               	bz	l1727
 16029                           
 16030                           ;doprnt.c: 540: {
 16031                           ;doprnt.c: 541: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 16032  003AB6  D937               	call	PL531	;call to abstracted procedure
 16033  003AB8  50DE               	movf	postinc2,w,c
 16034  003ABA  10DE               	iorwf	postinc2,w,c
 16035  003ABC  10DE               	iorwf	postinc2,w,c
 16036  003ABE  E00E               	bz	l8085
 16037  003AC0  D932               	call	PL531	;call to abstracted procedure
 16038  003AC2  D801               	call	u11258
 16039  003AC4  D113               	goto	l8193
 16040  003AC6                     u11258:
 16041  003AC6  0005               	push	
 16042  003AC8  6EFA               	movwf	pclath,c
 16043  003ACA  50DE               	movf	postinc2,w,c
 16044  003ACC  6EFD               	movwf	tosl,c
 16045  003ACE  50DE               	movf	postinc2,w,c
 16046  003AD0  6EFE               	movwf	tosh,c
 16047  003AD2  50DE               	movf	postinc2,w,c
 16048  003AD4  6EFF               	movwf	tosu,c
 16049  003AD6  50FA               	movf	pclath,w,c
 16050  003AD8  502F               	movf	__doprnt@c,w,c
 16051  003ADA  0012               	return		;indir
 16052  003ADC                     l8085:
 16053  003ADC  D918               	call	PL511	;call to abstracted procedure
 16054  003ADE  C02F  FFDF         	movff	__doprnt@c,indf2
 16055  003AE2  D930               	call	PL585	;call to abstracted procedure
 16056  003AE4  D103               	goto	l8193
 16057  003AE6                     l1727:
 16058                           
 16059                           ;doprnt.c: 543: }
 16060                           ;doprnt.c: 548: flag = 0;
 16061  003AE6  6A2C               	clrf	__doprnt@flag,c
 16062                           
 16063                           ;doprnt.c: 635: switch(c = *f++) {
 16064  003AE8  D050               	goto	l8115
 16065  003AEA                     l8089:
 16066                           
 16067                           ;doprnt.c: 721: flag |= 0x80;
 16068  003AEA  8E2C               	bsf	__doprnt@flag,7,c
 16069                           
 16070                           ;doprnt.c: 723: break;
 16071  003AEC  D05F               	goto	l8117
 16072  003AEE                     l8091:
 16073                           
 16074                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 16075  003AEE  D921               	call	PL563	;call to abstracted procedure
 16076  003AF0  CFDE F02A          	movff	postinc2,__doprnt@cp
 16077  003AF4  CFDE F02B          	movff	postinc2,__doprnt@cp+1
 16078                           
 16079                           ;doprnt.c: 740: if(!cp)
 16080  003AF8  502A               	movf	__doprnt@cp,w,c
 16081  003AFA  102B               	iorwf	__doprnt@cp+1,w,c
 16082  003AFC  E135               	bnz	l8109
 16083                           
 16084                           ;doprnt.c: 741: cp = "(null)";
 16085  003AFE  0EBB               	movlw	low STR_8
 16086  003B00  6E2A               	movwf	__doprnt@cp,c
 16087  003B02  502A               	movf	__doprnt@cp,w,c
 16088  003B04  A4D8               	btfss	status,2,c
 16089  003B06  0E10               	movlw	high __smallconst
 16090  003B08  6E2B               	movwf	__doprnt@cp+1,c
 16091  003B0A  D02E               	goto	l8109
 16092  003B0C                     l8097:
 16093                           
 16094                           ;doprnt.c: 778: if(pb->func) (pb->func(*cp++)); else ((*pb->ptr++ = *cp++));
 16095  003B0C  D90C               	call	PL531	;call to abstracted procedure
 16096  003B0E  50DE               	movf	postinc2,w,c
 16097  003B10  10DE               	iorwf	postinc2,w,c
 16098  003B12  10DE               	iorwf	postinc2,w,c
 16099  003B14  E01A               	bz	l8103
 16100  003B16  D907               	call	PL531	;call to abstracted procedure
 16101  003B18  D801               	call	u11288
 16102  003B1A  D014               	goto	l8101
 16103  003B1C                     u11288:
 16104  003B1C  0005               	push	
 16105  003B1E  6EFA               	movwf	pclath,c
 16106  003B20  50DE               	movf	postinc2,w,c
 16107  003B22  6EFD               	movwf	tosl,c
 16108  003B24  50DE               	movf	postinc2,w,c
 16109  003B26  6EFE               	movwf	tosh,c
 16110  003B28  50DE               	movf	postinc2,w,c
 16111  003B2A  6EFF               	movwf	tosu,c
 16112  003B2C  50FA               	movf	pclath,w,c
 16113  003B2E  D919               	call	PL633	;call to abstracted procedure
 16114  003B30  0E0F               	movlw	(high __ramtop+-1)
 16115  003B32  64F7               	cpfsgt	tblptrh,c
 16116  003B34  D003               	bra	u11297
 16117  003B36  0008               	tblrd		*
 16118  003B38  50F5               	movf	tablat,w,c
 16119  003B3A  D003               	bra	u11290
 16120  003B3C                     u11297:
 16121  003B3C  EC6D  F011         	call	PL431	;call to abstracted procedure
 16122  003B40  50EF               	movf	indf0,w,c
 16123  003B42                     u11290:
 16124  003B42  0012               	return		;indir
 16125  003B44                     l8101:
 16126  003B44  4A2A               	infsnz	__doprnt@cp,f,c
 16127  003B46  2A2B               	incf	__doprnt@cp+1,f,c
 16128  003B48  D00F               	goto	l8109
 16129  003B4A                     l8103:
 16130  003B4A  D90B               	call	PL633	;call to abstracted procedure
 16131  003B4C  D8E0               	call	PL511	;call to abstracted procedure
 16132  003B4E  0E0F               	movlw	(high __ramtop+-1)
 16133  003B50  64F7               	cpfsgt	tblptrh,c
 16134  003B52  D003               	bra	u11307
 16135  003B54  0008               	tblrd		*
 16136  003B56  50F5               	movf	tablat,w,c
 16137  003B58  D003               	bra	u11300
 16138  003B5A                     u11307:
 16139  003B5A  EC6D  F011         	call	PL431	;call to abstracted procedure
 16140  003B5E  50EF               	movf	indf0,w,c
 16141  003B60                     u11300:
 16142  003B60  6EDF               	movwf	indf2,c
 16143  003B62  4A2A               	infsnz	__doprnt@cp,f,c
 16144  003B64  2A2B               	incf	__doprnt@cp+1,f,c
 16145  003B66  D8EE               	call	PL585	;call to abstracted procedure
 16146  003B68                     l8109:
 16147  003B68  D8FC               	call	PL633	;call to abstracted procedure
 16148  003B6A  0E0F               	movlw	(high __ramtop+-1)
 16149  003B6C  64F7               	cpfsgt	tblptrh,c
 16150  003B6E  D003               	bra	u11317
 16151  003B70  0008               	tblrd		*
 16152  003B72  50F5               	movf	tablat,w,c
 16153  003B74  D003               	bra	u11310
 16154  003B76                     u11317:
 16155  003B76  EC6D  F011         	call	PL431	;call to abstracted procedure
 16156  003B7A  50EF               	movf	indf0,w,c
 16157  003B7C                     u11310:
 16158  003B7C  0900               	iorlw	0
 16159  003B7E  E101 D0B5          	bz	l8193
 16160  003B82  D7C4               	goto	l8097
 16161  003B84                     l8111:
 16162                           
 16163                           ;doprnt.c: 818: flag |= 0xC0;
 16164  003B84  0EC0               	movlw	192
 16165  003B86  122C               	iorwf	__doprnt@flag,f,c
 16166                           
 16167                           ;doprnt.c: 819: break;
 16168  003B88  D011               	goto	l8117
 16169  003B8A                     l8115:
 16170  003B8A  2A23               	incf	__doprnt@f,f,c
 16171  003B8C  0423               	decf	__doprnt@f,w,c
 16172  003B8E  D8B7               	call	PL507	;call to abstracted procedure
 16173  003B90  D900               	call	PL767	;call to abstracted procedure
 16174                           
 16175                           ; Switch size 1, requested type "space"
 16176                           ; Number of cases is 6, Range of values is 0 to 120
 16177                           ; switch strategies available:
 16178                           ; Name         Instructions Cycles
 16179                           ; simple_byte           19    10 (average)
 16180                           ;	Chosen strategy is simple_byte
 16181  003B92  E101 D0B1          	bz	l1732
 16182  003B96  0A64               	xorlw	100	; case 100
 16183  003B98  E009               	bz	l8117
 16184  003B9A  0A0D               	xorlw	13	; case 105
 16185  003B9C  E007               	bz	l8117
 16186  003B9E  0A1A               	xorlw	26	; case 115
 16187  003BA0  E0A6               	bz	l8091
 16188  003BA2  0A06               	xorlw	6	; case 117
 16189  003BA4  E0EF               	bz	l8111
 16190  003BA6  0A0D               	xorlw	13	; case 120
 16191  003BA8  E0A0               	bz	l8089
 16192  003BAA  D0A0               	goto	l8193
 16193  003BAC                     l8117:
 16194                           
 16195                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 16196  003BAC  C02C  F025         	movff	__doprnt@flag,??__doprnt
 16197  003BB0  0EC0               	movlw	192
 16198  003BB2  1625               	andwf	??__doprnt,f,c
 16199  003BB4  E10B               	bnz	l8127
 16200                           
 16201                           ;doprnt.c: 1253: {
 16202                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
 16203  003BB6  D8BD               	call	PL563	;call to abstracted procedure
 16204  003BB8  D8E7               	call	PL731	;call to abstracted procedure
 16205                           
 16206                           ;doprnt.c: 1261: if((int)val < 0) {
 16207  003BBA  AE2E               	btfss	__doprnt@val+1,7,c
 16208  003BBC  D02C               	goto	l8159
 16209                           
 16210                           ;doprnt.c: 1262: flag |= 0x03;
 16211  003BBE  0E03               	movlw	3
 16212  003BC0  122C               	iorwf	__doprnt@flag,f,c
 16213                           
 16214                           ;doprnt.c: 1263: val = -val;
 16215  003BC2  6C2D               	negf	__doprnt@val,c
 16216  003BC4  1E2E               	comf	__doprnt@val+1,f,c
 16217  003BC6  B0D8               	btfsc	status,0,c
 16218  003BC8  2A2E               	incf	__doprnt@val+1,f,c
 16219  003BCA  D025               	goto	l8159
 16220  003BCC                     l8127:
 16221                           
 16222                           ;doprnt.c: 1268: else
 16223                           ;doprnt.c: 1273: {
 16224                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 16225  003BCC  D8B2               	call	PL563	;call to abstracted procedure
 16226  003BCE  D8DC               	call	PL731	;call to abstracted procedure
 16227  003BD0  D022               	goto	l8159
 16228  003BD2                     l8129:
 16229                           
 16230                           ;doprnt.c: 1302: case 0xC0:
 16231                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 16232  003BD2  0E01               	movlw	1
 16233  003BD4  6E2F               	movwf	__doprnt@c,c
 16234  003BD6                     l8135:
 16235                           
 16236                           ;doprnt.c: 1306: if(val < dpowers[c])
 16237  003BD6  502F               	movf	__doprnt@c,w,c
 16238  003BD8  D8BC               	call	PL611	;call to abstracted procedure
 16239  003BDA  D891               	call	PL507	;call to abstracted procedure
 16240  003BDC  0009               	tblrd		*+
 16241  003BDE  50F5               	movf	tablat,w,c
 16242  003BE0  5C2D               	subwf	__doprnt@val,w,c
 16243  003BE2  0009               	tblrd		*+
 16244  003BE4  50F5               	movf	tablat,w,c
 16245  003BE6  582E               	subwfb	__doprnt@val+1,w,c
 16246  003BE8  E31D               	bnc	l8161
 16247  003BEA  2A2F               	incf	__doprnt@c,f,c
 16248  003BEC  0E05               	movlw	5
 16249  003BEE  182F               	xorwf	__doprnt@c,w,c
 16250  003BF0  E019               	bz	l8161
 16251  003BF2  D7F1               	goto	l8135
 16252  003BF4                     l8143:
 16253                           
 16254                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 16255  003BF4  0E01               	movlw	1
 16256  003BF6  6E2F               	movwf	__doprnt@c,c
 16257  003BF8                     l8149:
 16258                           
 16259                           ;doprnt.c: 1317: if(val < hexpowers[c])
 16260  003BF8  502F               	movf	__doprnt@c,w,c
 16261  003BFA  D8AF               	call	PL617	;call to abstracted procedure
 16262  003BFC  D880               	call	PL507	;call to abstracted procedure
 16263  003BFE  0009               	tblrd		*+
 16264  003C00  50F5               	movf	tablat,w,c
 16265  003C02  5C2D               	subwf	__doprnt@val,w,c
 16266  003C04  0009               	tblrd		*+
 16267  003C06  50F5               	movf	tablat,w,c
 16268  003C08  582E               	subwfb	__doprnt@val+1,w,c
 16269  003C0A  E30C               	bnc	l8161
 16270  003C0C  2A2F               	incf	__doprnt@c,f,c
 16271  003C0E  0E04               	movlw	4
 16272  003C10  182F               	xorwf	__doprnt@c,w,c
 16273  003C12  E008               	bz	l8161
 16274  003C14  D7F1               	goto	l8149
 16275  003C16                     l8159:
 16276  003C16  502C               	movf	__doprnt@flag,w,c
 16277  003C18  0BC0               	andlw	192
 16278                           
 16279                           ; Switch size 1, requested type "space"
 16280                           ; Number of cases is 3, Range of values is 0 to 192
 16281                           ; switch strategies available:
 16282                           ; Name         Instructions Cycles
 16283                           ; simple_byte           10     6 (average)
 16284                           ;	Chosen strategy is simple_byte
 16285  003C1A  E0DB               	bz	l8129
 16286  003C1C  0A80               	xorlw	128	; case 128
 16287  003C1E  E0EA               	bz	l8143
 16288  003C20  0A40               	xorlw	64	; case 192
 16289  003C22  E0D7               	bz	l8129
 16290  003C24                     l8161:
 16291                           
 16292                           ;doprnt.c: 1422: {
 16293                           ;doprnt.c: 1438: if(flag & 0x03)
 16294  003C24  C02C  F025         	movff	__doprnt@flag,??__doprnt
 16295  003C28  0E03               	movlw	3
 16296  003C2A  1625               	andwf	??__doprnt,f,c
 16297  003C2C  E016               	bz	l8171
 16298                           
 16299                           ;doprnt.c: 1439: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 16300  003C2E  D87B               	call	PL531	;call to abstracted procedure
 16301  003C30  50DE               	movf	postinc2,w,c
 16302  003C32  10DE               	iorwf	postinc2,w,c
 16303  003C34  10DE               	iorwf	postinc2,w,c
 16304  003C36  E00D               	bz	l8167
 16305  003C38  D876               	call	PL531	;call to abstracted procedure
 16306  003C3A  D801               	call	u11418
 16307  003C3C  D00E               	goto	l8171
 16308  003C3E                     u11418:
 16309  003C3E  0005               	push	
 16310  003C40  6EFA               	movwf	pclath,c
 16311  003C42  50DE               	movf	postinc2,w,c
 16312  003C44  6EFD               	movwf	tosl,c
 16313  003C46  50DE               	movf	postinc2,w,c
 16314  003C48  6EFE               	movwf	tosh,c
 16315  003C4A  50DE               	movf	postinc2,w,c
 16316  003C4C  6EFF               	movwf	tosu,c
 16317  003C4E  50FA               	movf	pclath,w,c
 16318  003C50  0C2D               	retlw	45	;indir
 16319  003C52                     l8167:
 16320  003C52  D85D               	call	PL511	;call to abstracted procedure
 16321  003C54  0E2D               	movlw	45
 16322  003C56  6EDF               	movwf	indf2,c
 16323  003C58  D875               	call	PL585	;call to abstracted procedure
 16324  003C5A                     l8171:
 16325                           
 16326                           ;doprnt.c: 1469: }
 16327                           ;doprnt.c: 1472: prec = c;
 16328  003C5A  C02F  F029         	movff	__doprnt@c,__doprnt@prec
 16329                           
 16330                           ;doprnt.c: 1474: while(prec--) {
 16331  003C5E  D043               	goto	l8191
 16332  003C60                     l8173:
 16333                           
 16334                           ;doprnt.c: 1486: case 0xC0:
 16335                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 16336  003C60  5029               	movf	__doprnt@prec,w,c
 16337  003C62  D877               	call	PL611	;call to abstracted procedure
 16338  003C64  D84C               	call	PL507	;call to abstracted procedure
 16339  003C66  D884               	call	PL677	;call to abstracted procedure
 16340  003C68  D88A               	call	PL729	;call to abstracted procedure
 16341  003C6A  ECAF  F02E         	call	___lwdiv
 16342  003C6E  C017  F01E         	movff	?___lwdiv,___lwmod@dividend
 16343  003C72  C018  F01F         	movff	?___lwdiv+1,___lwmod@dividend+1
 16344  003C76  6A21               	clrf	___lwmod@divisor+1,c
 16345  003C78  0E0A               	movlw	10
 16346  003C7A  6E20               	movwf	___lwmod@divisor,c
 16347  003C7C  EC5B  F02F         	call	___lwmod	;wreg free
 16348  003C80  501E               	movf	?___lwmod,w,c
 16349  003C82  0F30               	addlw	48
 16350  003C84  6E2F               	movwf	__doprnt@c,c
 16351                           
 16352                           ;doprnt.c: 1491: break;
 16353  003C86  D018               	goto	l8183
 16354  003C88                     l8175:
 16355                           
 16356                           ;doprnt.c: 1499: {
 16357                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 16358  003C88  D87A               	call	PL729	;call to abstracted procedure
 16359  003C8A  5029               	movf	__doprnt@prec,w,c
 16360  003C8C  D866               	call	PL617	;call to abstracted procedure
 16361  003C8E  D837               	call	PL507	;call to abstracted procedure
 16362  003C90  D86F               	call	PL677	;call to abstracted procedure
 16363  003C92  ECAF  F02E         	call	___lwdiv	;wreg free
 16364  003C96  5017               	movf	?___lwdiv,w,c
 16365  003C98  0B0F               	andlw	15
 16366  003C9A  6E28               	movwf	__doprnt@idx,c
 16367                           
 16368                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
 16369  003C9C  5028               	movf	__doprnt@idx,w,c
 16370  003C9E  0F5F               	addlw	low STR_9
 16371  003CA0  D82E               	call	PL507	;call to abstracted procedure
 16372  003CA2  0008               	tblrd		*
 16373  003CA4  CFF5 F02F          	movff	tablat,__doprnt@c
 16374                           
 16375                           ;doprnt.c: 1508: }
 16376                           ;doprnt.c: 1510: break;
 16377  003CA8  D007               	goto	l8183
 16378  003CAA                     l8181:
 16379  003CAA  502C               	movf	__doprnt@flag,w,c
 16380  003CAC  0BC0               	andlw	192
 16381                           
 16382                           ; Switch size 1, requested type "space"
 16383                           ; Number of cases is 3, Range of values is 0 to 192
 16384                           ; switch strategies available:
 16385                           ; Name         Instructions Cycles
 16386                           ; simple_byte           10     6 (average)
 16387                           ;	Chosen strategy is simple_byte
 16388  003CAE  E0D8               	bz	l8173
 16389  003CB0  0A80               	xorlw	128	; case 128
 16390  003CB2  E0EA               	bz	l8175
 16391  003CB4  0A40               	xorlw	64	; case 192
 16392  003CB6  E0D4               	bz	l8173
 16393  003CB8                     l8183:
 16394                           
 16395                           ;doprnt.c: 1524: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 16396  003CB8  D836               	call	PL531	;call to abstracted procedure
 16397  003CBA  50DE               	movf	postinc2,w,c
 16398  003CBC  10DE               	iorwf	postinc2,w,c
 16399  003CBE  10DE               	iorwf	postinc2,w,c
 16400  003CC0  E00E               	bz	l8187
 16401  003CC2  D831               	call	PL531	;call to abstracted procedure
 16402  003CC4  D801               	call	u11438
 16403  003CC6  D00F               	goto	l8191
 16404  003CC8                     u11438:
 16405  003CC8  0005               	push	
 16406  003CCA  6EFA               	movwf	pclath,c
 16407  003CCC  50DE               	movf	postinc2,w,c
 16408  003CCE  6EFD               	movwf	tosl,c
 16409  003CD0  50DE               	movf	postinc2,w,c
 16410  003CD2  6EFE               	movwf	tosh,c
 16411  003CD4  50DE               	movf	postinc2,w,c
 16412  003CD6  6EFF               	movwf	tosu,c
 16413  003CD8  50FA               	movf	pclath,w,c
 16414  003CDA  502F               	movf	__doprnt@c,w,c
 16415  003CDC  0012               	return		;indir
 16416  003CDE                     l8187:
 16417  003CDE  D817               	call	PL511	;call to abstracted procedure
 16418  003CE0  C02F  FFDF         	movff	__doprnt@c,indf2
 16419  003CE4  D82F               	call	PL585	;call to abstracted procedure
 16420  003CE6                     l8191:
 16421  003CE6  0629               	decf	__doprnt@prec,f,c
 16422  003CE8  2829               	incf	__doprnt@prec,w,c
 16423  003CEA  E1DF               	bnz	l8181
 16424  003CEC                     l8193:
 16425  003CEC  2A23               	incf	__doprnt@f,f,c
 16426  003CEE  0423               	decf	__doprnt@f,w,c
 16427  003CF0  D806               	call	PL507	;call to abstracted procedure
 16428  003CF2  D84F               	call	PL767	;call to abstracted procedure
 16429  003CF4  E001 D6DC          	bnz	l8079
 16430  003CF8                     l1732:
 16431                           
 16432                           ;doprnt.c: 1540: return 0;
 16433  003CF8  6A23               	clrf	?__doprnt,c
 16434  003CFA  6A24               	clrf	?__doprnt+1,c
 16435  003CFC  0012               	return		;funcret
 16436  003CFE                     __end_of__doprnt:
 16437                           	opt stack 0
 16438  003CFE                     PL507:
 16439                           	opt stack 20
 16440  003CFE  6E25               	movwf	??__doprnt& (0+255),c
 16441  003D00  C025  FFF6         	movff	??__doprnt,tblptrl
 16442  003D04                     	if	1	;There is more than 1 active tblptr byte
 16443  003D04  0E10               	movlw	high __smallconst
 16444  003D06  6EF7               	movwf	tblptrh,c
 16445  003D08                     	endif
 16446  003D08                     	if	0	;tblptru may be non-zero
 16447  003D08                     	endif
 16448  003D08                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16449  003D08  0E00               	movlw	low (__smallconst shr (0+16))
 16450  003D0A  6EF8               	movwf	tblptru,c
 16451  003D0C                     	endif
 16452  003D0C  0012               	return	
 16453  003D0E                     __end_ofPL507:
 16454                           	opt stack 0
 16455  003D0E                     PL511:
 16456                           	opt stack 20
 16457  003D0E  5030               	movf	__doprnt@pb,w,c
 16458  003D10  6ED9               	movwf	fsr2l,c
 16459  003D12  6ADA               	clrf	fsr2h,c
 16460  003D14  CFDE F025          	movff	postinc2,??__doprnt
 16461  003D18  CFDD F026          	movff	postdec2,??__doprnt+1
 16462  003D1C  C025  FFD9         	movff	??__doprnt,fsr2l
 16463  003D20  C026  FFDA         	movff	??__doprnt+1,fsr2h
 16464  003D24  0012               	return	
 16465  003D26                     __end_ofPL511:
 16466                           	opt stack 0
 16467  003D26                     PL531:
 16468                           	opt stack 20
 16469  003D26  5030               	movf	__doprnt@pb,w,c
 16470  003D28  6ED9               	movwf	fsr2l,c
 16471  003D2A  6ADA               	clrf	fsr2h,c
 16472  003D2C  0E02               	movlw	2
 16473  003D2E  26D9               	addwf	fsr2l,f,c
 16474  003D30  0C02               	retlw	2
 16475  003D32                     __end_ofPL531:
 16476                           	opt stack 0
 16477  003D32                     PL563:
 16478                           	opt stack 20
 16479  003D32  5024               	movf	__doprnt@ap,w,c
 16480  003D34  6ED9               	movwf	fsr2l,c
 16481  003D36  6ADA               	clrf	fsr2h,c
 16482  003D38  0E02               	movlw	2
 16483  003D3A  26DF               	addwf	indf2,f,c
 16484  003D3C  5CDF               	subwf	indf2,w,c
 16485  003D3E  6ED9               	movwf	fsr2l,c
 16486  003D40  6ADA               	clrf	fsr2h,c
 16487  003D42  0012               	return	
 16488  003D44                     __end_ofPL563:
 16489                           	opt stack 0
 16490  003D44                     PL585:
 16491                           	opt stack 20
 16492  003D44  5030               	movf	__doprnt@pb,w,c
 16493  003D46  6ED9               	movwf	fsr2l,c
 16494  003D48  6ADA               	clrf	fsr2h,c
 16495  003D4A  2ADE               	incf	postinc2,f,c
 16496  003D4C  0E00               	movlw	0
 16497  003D4E  22DD               	addwfc	postdec2,f,c
 16498  003D50  0C00               	retlw	0
 16499  003D52                     __end_ofPL585:
 16500                           	opt stack 0
 16501  003D52                     PL611:
 16502                           	opt stack 20
 16503  003D52  0D02               	mullw	2
 16504  003D54  50F3               	movf	prodl,w,c
 16505  003D56  0F01               	addlw	low _dpowers
 16506  003D58  0012               	return	
 16507  003D5A                     __end_ofPL611:
 16508                           	opt stack 0
 16509  003D5A                     PL617:
 16510                           	opt stack 20
 16511  003D5A  0D02               	mullw	2
 16512  003D5C  50F3               	movf	prodl,w,c
 16513  003D5E  0F0B               	addlw	low _hexpowers
 16514  003D60  0012               	return	
 16515  003D62                     __end_ofPL617:
 16516                           	opt stack 0
 16517  003D62                     PL633:
 16518                           	opt stack 20
 16519  003D62  C02A  FFF6         	movff	__doprnt@cp,tblptrl
 16520  003D66  C02B  FFF7         	movff	__doprnt@cp+1,tblptrh
 16521  003D6A  0E00               	movlw	low (__smallconst shr (0+16))
 16522  003D6C  6EF8               	movwf	tblptru,c
 16523  003D6E  0012               	return	
 16524  003D70                     __end_ofPL633:
 16525                           	opt stack 0
 16526  003D70                     PL677:
 16527                           	opt stack 20
 16528  003D70  0009               	tblrd		*+
 16529  003D72  CFF5 F019          	movff	tablat,___lwdiv@divisor
 16530  003D76  000A               	tblrd		*-
 16531  003D78  CFF5 F01A          	movff	tablat,___lwdiv@divisor+1
 16532  003D7C  0012               	return	
 16533  003D7E                     __end_ofPL677:
 16534                           	opt stack 0
 16535  003D7E                     PL729:
 16536                           	opt stack 20
 16537  003D7E  C02D  F017         	movff	__doprnt@val,___lwdiv@dividend
 16538  003D82  C02E  F018         	movff	__doprnt@val+1,___lwdiv@dividend+1
 16539  003D86  0012               	return	
 16540  003D88                     __end_ofPL729:
 16541                           	opt stack 0
 16542  003D88                     PL731:
 16543                           	opt stack 20
 16544  003D88  CFDE F02D          	movff	postinc2,__doprnt@val
 16545  003D8C  CFDE F02E          	movff	postinc2,__doprnt@val+1
 16546  003D90  0012               	return	
 16547  003D92                     __end_ofPL731:
 16548                           	opt stack 0
 16549  003D92                     PL767:
 16550                           	opt stack 20
 16551  003D92  0008               	tblrd		*
 16552  003D94  CFF5 F02F          	movff	tablat,__doprnt@c
 16553  003D98  502F               	movf	__doprnt@c,w,c
 16554  003D9A  0012               	return	
 16555  003D9C                     __end_ofPL767:
 16556                           	opt stack 0
 16557                           tosu	equ	0xFFF
 16558                           tosh	equ	0xFFE
 16559                           tosl	equ	0xFFD
 16560                           pclath	equ	0xFFA
 16561                           tblptru	equ	0xFF8
 16562                           tblptrh	equ	0xFF7
 16563                           tblptrl	equ	0xFF6
 16564                           tablat	equ	0xFF5
 16565                           prodh	equ	0xFF4
 16566                           prodl	equ	0xFF3
 16567                           intcon	equ	0xFF2
 16568                           indf0	equ	0xFEF
 16569                           postinc0	equ	0xFEE
 16570                           fsr0h	equ	0xFEA
 16571                           fsr0l	equ	0xFE9
 16572                           wreg	equ	0xFE8
 16573                           postinc1	equ	0xFE6
 16574                           plusw1	equ	0xFE3
 16575                           fsr1h	equ	0xFE2
 16576                           fsr1l	equ	0xFE1
 16577                           bsr	equ	0xFE0
 16578                           indf2	equ	0xFDF
 16579                           postinc2	equ	0xFDE
 16580                           postdec2	equ	0xFDD
 16581                           plusw2	equ	0xFDB
 16582                           fsr2h	equ	0xFDA
 16583                           fsr2l	equ	0xFD9
 16584                           status	equ	0xFD8
 16585                           
 16586 ;; *************** function _putch *****************
 16587 ;; Defined at:
 16588 ;;		line 77 in file "../board_support_package/picdem2_net/uart.c"
 16589 ;; Parameters:    Size  Location     Type
 16590 ;;  data            1    wreg     unsigned char 
 16591 ;; Auto vars:     Size  Location     Type
 16592 ;;  data            1   22[COMRAM] unsigned char 
 16593 ;; Return value:  Size  Location     Type
 16594 ;;		None               void
 16595 ;; Registers used:
 16596 ;;		wreg, status,2, status,0
 16597 ;; Tracked objects:
 16598 ;;		On entry : 0/0
 16599 ;;		On exit  : 0/0
 16600 ;;		Unchanged: 0/0
 16601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16603 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16605 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16606 ;;Total ram usage:        1 bytes
 16607 ;; Hardware stack levels used:    1
 16608 ;; Hardware stack levels required when called:    8
 16609 ;; This function calls:
 16610 ;;		Nothing
 16611 ;; This function is called by:
 16612 ;;		_printf
 16613 ;;		__doprnt
 16614 ;; This function uses a non-reentrant model
 16615 ;;
 16616                           
 16617                           	psect	text56
 16618  006354                     __ptext56:
 16619                           	opt stack 0
 16620  006354                     _putch:
 16621                           	opt stack 20
 16622                           
 16623                           ;incstack = 0
 16624                           ;putch@data stored from wreg
 16625  006354  6E17               	movwf	putch@data,c
 16626                           
 16627                           ;uart.c: 79: if(data == '\n')
 16628  006356  0E0A               	movlw	10
 16629  006358  1817               	xorwf	putch@data,w,c
 16630  00635A  E104               	bnz	l350
 16631  00635C                     l347:
 16632  00635C  A89E               	btfss	3998,4,c	;volatile
 16633  00635E  D7FE               	goto	l347
 16634                           
 16635                           ;uart.c: 83: TXREG1 = '\r';
 16636  006360  0E0D               	movlw	13
 16637  006362  6EAD               	movwf	4013,c	;volatile
 16638  006364                     l350:
 16639  006364  A89E               	btfss	3998,4,c	;volatile
 16640  006366  D7FE               	goto	l350
 16641                           
 16642                           ;uart.c: 87: TXREG1 = data;
 16643  006368  C017  FFAD         	movff	putch@data,4013	;volatile
 16644  00636C  0012               	return		;funcret
 16645  00636E                     __end_of_putch:
 16646                           	opt stack 0
 16647                           tosu	equ	0xFFF
 16648                           tosh	equ	0xFFE
 16649                           tosl	equ	0xFFD
 16650                           pclath	equ	0xFFA
 16651                           tblptru	equ	0xFF8
 16652                           tblptrh	equ	0xFF7
 16653                           tblptrl	equ	0xFF6
 16654                           tablat	equ	0xFF5
 16655                           prodh	equ	0xFF4
 16656                           prodl	equ	0xFF3
 16657                           intcon	equ	0xFF2
 16658                           indf0	equ	0xFEF
 16659                           postinc0	equ	0xFEE
 16660                           fsr0h	equ	0xFEA
 16661                           fsr0l	equ	0xFE9
 16662                           wreg	equ	0xFE8
 16663                           postinc1	equ	0xFE6
 16664                           plusw1	equ	0xFE3
 16665                           fsr1h	equ	0xFE2
 16666                           fsr1l	equ	0xFE1
 16667                           bsr	equ	0xFE0
 16668                           indf2	equ	0xFDF
 16669                           postinc2	equ	0xFDE
 16670                           postdec2	equ	0xFDD
 16671                           plusw2	equ	0xFDB
 16672                           fsr2h	equ	0xFDA
 16673                           fsr2l	equ	0xFD9
 16674                           status	equ	0xFD8
 16675                           
 16676 ;; *************** function ___lwmod *****************
 16677 ;; Defined at:
 16678 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
 16679 ;; Parameters:    Size  Location     Type
 16680 ;;  dividend        2   29[COMRAM] unsigned int 
 16681 ;;  divisor         2   31[COMRAM] unsigned int 
 16682 ;; Auto vars:     Size  Location     Type
 16683 ;;  counter         1   33[COMRAM] unsigned char 
 16684 ;; Return value:  Size  Location     Type
 16685 ;;                  2   29[COMRAM] unsigned int 
 16686 ;; Registers used:
 16687 ;;		wreg, status,2, status,0
 16688 ;; Tracked objects:
 16689 ;;		On entry : 0/0
 16690 ;;		On exit  : 0/0
 16691 ;;		Unchanged: 0/0
 16692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16693 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16694 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16696 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16697 ;;Total ram usage:        5 bytes
 16698 ;; Hardware stack levels used:    1
 16699 ;; Hardware stack levels required when called:    8
 16700 ;; This function calls:
 16701 ;;		Nothing
 16702 ;; This function is called by:
 16703 ;;		__doprnt
 16704 ;; This function uses a non-reentrant model
 16705 ;;
 16706                           
 16707                           	psect	text57
 16708  005EB6                     __ptext57:
 16709                           	opt stack 0
 16710  005EB6                     ___lwmod:
 16711                           	opt stack 20
 16712                           
 16713                           ;incstack = 0
 16714  005EB6  5020               	movf	___lwmod@divisor,w,c
 16715  005EB8  1021               	iorwf	___lwmod@divisor+1,w,c
 16716  005EBA  E017               	bz	l2187
 16717  005EBC  0E01               	movlw	1
 16718  005EBE  6E22               	movwf	___lwmod@counter,c
 16719  005EC0  D004               	goto	l7979
 16720  005EC2                     l7977:
 16721  005EC2  90D8               	bcf	status,0,c
 16722  005EC4  3620               	rlcf	___lwmod@divisor,f,c
 16723  005EC6  3621               	rlcf	___lwmod@divisor+1,f,c
 16724  005EC8  2A22               	incf	___lwmod@counter,f,c
 16725  005ECA                     l7979:
 16726  005ECA  AE21               	btfss	___lwmod@divisor+1,7,c
 16727  005ECC  D7FA               	goto	l7977
 16728  005ECE                     l7981:
 16729  005ECE  5020               	movf	___lwmod@divisor,w,c
 16730  005ED0  5C1E               	subwf	___lwmod@dividend,w,c
 16731  005ED2  5021               	movf	___lwmod@divisor+1,w,c
 16732  005ED4  581F               	subwfb	___lwmod@dividend+1,w,c
 16733  005ED6  E304               	bnc	l7985
 16734  005ED8  5020               	movf	___lwmod@divisor,w,c
 16735  005EDA  5E1E               	subwf	___lwmod@dividend,f,c
 16736  005EDC  5021               	movf	___lwmod@divisor+1,w,c
 16737  005EDE  5A1F               	subwfb	___lwmod@dividend+1,f,c
 16738  005EE0                     l7985:
 16739  005EE0  90D8               	bcf	status,0,c
 16740  005EE2  3221               	rrcf	___lwmod@divisor+1,f,c
 16741  005EE4  3220               	rrcf	___lwmod@divisor,f,c
 16742  005EE6  2E22               	decfsz	___lwmod@counter,f,c
 16743  005EE8  D7F2               	goto	l7981
 16744  005EEA                     l2187:
 16745  005EEA  C01E  F01E         	movff	___lwmod@dividend,?___lwmod
 16746  005EEE  C01F  F01F         	movff	___lwmod@dividend+1,?___lwmod+1
 16747  005EF2  0012               	return		;funcret
 16748  005EF4                     __end_of___lwmod:
 16749                           	opt stack 0
 16750                           tosu	equ	0xFFF
 16751                           tosh	equ	0xFFE
 16752                           tosl	equ	0xFFD
 16753                           pclath	equ	0xFFA
 16754                           tblptru	equ	0xFF8
 16755                           tblptrh	equ	0xFF7
 16756                           tblptrl	equ	0xFF6
 16757                           tablat	equ	0xFF5
 16758                           prodh	equ	0xFF4
 16759                           prodl	equ	0xFF3
 16760                           intcon	equ	0xFF2
 16761                           indf0	equ	0xFEF
 16762                           postinc0	equ	0xFEE
 16763                           fsr0h	equ	0xFEA
 16764                           fsr0l	equ	0xFE9
 16765                           wreg	equ	0xFE8
 16766                           postinc1	equ	0xFE6
 16767                           plusw1	equ	0xFE3
 16768                           fsr1h	equ	0xFE2
 16769                           fsr1l	equ	0xFE1
 16770                           bsr	equ	0xFE0
 16771                           indf2	equ	0xFDF
 16772                           postinc2	equ	0xFDE
 16773                           postdec2	equ	0xFDD
 16774                           plusw2	equ	0xFDB
 16775                           fsr2h	equ	0xFDA
 16776                           fsr2l	equ	0xFD9
 16777                           status	equ	0xFD8
 16778                           
 16779 ;; *************** function ___lwdiv *****************
 16780 ;; Defined at:
 16781 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 16782 ;; Parameters:    Size  Location     Type
 16783 ;;  dividend        2   22[COMRAM] unsigned int 
 16784 ;;  divisor         2   24[COMRAM] unsigned int 
 16785 ;; Auto vars:     Size  Location     Type
 16786 ;;  quotient        2   27[COMRAM] unsigned int 
 16787 ;;  counter         1   26[COMRAM] unsigned char 
 16788 ;; Return value:  Size  Location     Type
 16789 ;;                  2   22[COMRAM] unsigned int 
 16790 ;; Registers used:
 16791 ;;		wreg, status,2, status,0
 16792 ;; Tracked objects:
 16793 ;;		On entry : 0/0
 16794 ;;		On exit  : 0/0
 16795 ;;		Unchanged: 0/0
 16796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16797 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16798 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16800 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16801 ;;Total ram usage:        7 bytes
 16802 ;; Hardware stack levels used:    1
 16803 ;; Hardware stack levels required when called:    8
 16804 ;; This function calls:
 16805 ;;		Nothing
 16806 ;; This function is called by:
 16807 ;;		__doprnt
 16808 ;; This function uses a non-reentrant model
 16809 ;;
 16810                           
 16811                           	psect	text58
 16812  005D5E                     __ptext58:
 16813                           	opt stack 0
 16814  005D5E                     ___lwdiv:
 16815                           	opt stack 20
 16816                           
 16817                           ;incstack = 0
 16818  005D5E  6A1C               	clrf	___lwdiv@quotient,c
 16819  005D60  6A1D               	clrf	___lwdiv@quotient+1,c
 16820  005D62  5019               	movf	___lwdiv@divisor,w,c
 16821  005D64  101A               	iorwf	___lwdiv@divisor+1,w,c
 16822  005D66  E01B               	bz	l2177
 16823  005D68  0E01               	movlw	1
 16824  005D6A  6E1B               	movwf	___lwdiv@counter,c
 16825  005D6C  D004               	goto	l7959
 16826  005D6E                     l7957:
 16827  005D6E  90D8               	bcf	status,0,c
 16828  005D70  3619               	rlcf	___lwdiv@divisor,f,c
 16829  005D72  361A               	rlcf	___lwdiv@divisor+1,f,c
 16830  005D74  2A1B               	incf	___lwdiv@counter,f,c
 16831  005D76                     l7959:
 16832  005D76  AE1A               	btfss	___lwdiv@divisor+1,7,c
 16833  005D78  D7FA               	goto	l7957
 16834  005D7A                     l7961:
 16835  005D7A  90D8               	bcf	status,0,c
 16836  005D7C  361C               	rlcf	___lwdiv@quotient,f,c
 16837  005D7E  361D               	rlcf	___lwdiv@quotient+1,f,c
 16838  005D80  5019               	movf	___lwdiv@divisor,w,c
 16839  005D82  5C17               	subwf	___lwdiv@dividend,w,c
 16840  005D84  501A               	movf	___lwdiv@divisor+1,w,c
 16841  005D86  5818               	subwfb	___lwdiv@dividend+1,w,c
 16842  005D88  E305               	bnc	l7969
 16843  005D8A  5019               	movf	___lwdiv@divisor,w,c
 16844  005D8C  5E17               	subwf	___lwdiv@dividend,f,c
 16845  005D8E  501A               	movf	___lwdiv@divisor+1,w,c
 16846  005D90  5A18               	subwfb	___lwdiv@dividend+1,f,c
 16847  005D92  801C               	bsf	___lwdiv@quotient,0,c
 16848  005D94                     l7969:
 16849  005D94  90D8               	bcf	status,0,c
 16850  005D96  321A               	rrcf	___lwdiv@divisor+1,f,c
 16851  005D98  3219               	rrcf	___lwdiv@divisor,f,c
 16852  005D9A  2E1B               	decfsz	___lwdiv@counter,f,c
 16853  005D9C  D7EE               	goto	l7961
 16854  005D9E                     l2177:
 16855  005D9E  C01C  F017         	movff	___lwdiv@quotient,?___lwdiv
 16856  005DA2  C01D  F018         	movff	___lwdiv@quotient+1,?___lwdiv+1
 16857  005DA6  0012               	return		;funcret
 16858  005DA8                     __end_of___lwdiv:
 16859                           	opt stack 0
 16860                           tosu	equ	0xFFF
 16861                           tosh	equ	0xFFE
 16862                           tosl	equ	0xFFD
 16863                           pclath	equ	0xFFA
 16864                           tblptru	equ	0xFF8
 16865                           tblptrh	equ	0xFF7
 16866                           tblptrl	equ	0xFF6
 16867                           tablat	equ	0xFF5
 16868                           prodh	equ	0xFF4
 16869                           prodl	equ	0xFF3
 16870                           intcon	equ	0xFF2
 16871                           indf0	equ	0xFEF
 16872                           postinc0	equ	0xFEE
 16873                           fsr0h	equ	0xFEA
 16874                           fsr0l	equ	0xFE9
 16875                           wreg	equ	0xFE8
 16876                           postinc1	equ	0xFE6
 16877                           plusw1	equ	0xFE3
 16878                           fsr1h	equ	0xFE2
 16879                           fsr1l	equ	0xFE1
 16880                           bsr	equ	0xFE0
 16881                           indf2	equ	0xFDF
 16882                           postinc2	equ	0xFDE
 16883                           postdec2	equ	0xFDD
 16884                           plusw2	equ	0xFDB
 16885                           fsr2h	equ	0xFDA
 16886                           fsr2l	equ	0xFD9
 16887                           status	equ	0xFD8
 16888                           
 16889 ;; *************** function _ETH_RxComputeChecksum *****************
 16890 ;; Defined at:
 16891 ;;		line 781 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 16892 ;; Parameters:    Size  Location     Type
 16893 ;;  len             2   36[COMRAM] unsigned int 
 16894 ;;  seed            2   38[COMRAM] unsigned int 
 16895 ;; Auto vars:     Size  Location     Type
 16896 ;;  cksm            4   46[COMRAM] unsigned long 
 16897 ;;  rxptr           2   44[COMRAM] unsigned int 
 16898 ;; Return value:  Size  Location     Type
 16899 ;;                  2   36[COMRAM] unsigned int 
 16900 ;; Registers used:
 16901 ;;		wreg, status,2, status,0, cstack
 16902 ;; Tracked objects:
 16903 ;;		On entry : F/1
 16904 ;;		On exit  : 0/0
 16905 ;;		Unchanged: 0/0
 16906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16907 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16908 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16909 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16910 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16911 ;;Total ram usage:       14 bytes
 16912 ;; Hardware stack levels used:    1
 16913 ;; Hardware stack levels required when called:   10
 16914 ;; This function calls:
 16915 ;;		_ETH_ComputeChecksum
 16916 ;; This function is called by:
 16917 ;;		_IPV4_Packet
 16918 ;; This function uses a non-reentrant model
 16919 ;;
 16920                           
 16921                           	psect	text59
 16922  005DA8                     __ptext59:
 16923                           	opt stack 0
 16924  005DA8                     _ETH_RxComputeChecksum:
 16925                           	opt stack 17
 16926                           
 16927                           ; BSR set to: 1
 16928                           ;j60_driver.c: 783: uint16_t rxptr;
 16929                           ;j60_driver.c: 784: uint32_t cksm;
 16930                           ;j60_driver.c: 787: rxptr = ERDPT;
 16931                           
 16932                           ;incstack = 0
 16933  005DA8  CF7A F02D          	movff	3962,ETH_RxComputeChecksum@rxptr	;volatile
 16934  005DAC  CF7B F02E          	movff	3963,ETH_RxComputeChecksum@rxptr+1	;volatile
 16935                           
 16936                           ; BSR set to: 1
 16937                           ;j60_driver.c: 789: cksm = ETH_ComputeChecksum( len, seed);
 16938  005DB0  C025  F017         	movff	ETH_RxComputeChecksum@len,ETH_ComputeChecksum@len
 16939  005DB4  C026  F018         	movff	ETH_RxComputeChecksum@len+1,ETH_ComputeChecksum@len+1
 16940  005DB8  C027  F019         	movff	ETH_RxComputeChecksum@seed,ETH_ComputeChecksum@seed
 16941  005DBC  C028  F01A         	movff	ETH_RxComputeChecksum@seed+1,ETH_ComputeChecksum@seed+1
 16942  005DC0  EC87  F02A         	call	_ETH_ComputeChecksum
 16943  005DC4  C017  F02F         	movff	?_ETH_ComputeChecksum,ETH_RxComputeChecksum@cksm
 16944  005DC8  C018  F030         	movff	?_ETH_ComputeChecksum+1,ETH_RxComputeChecksum@cksm+1
 16945  005DCC  6A31               	clrf	ETH_RxComputeChecksum@cksm+2,c
 16946  005DCE  6A32               	clrf	ETH_RxComputeChecksum@cksm+3,c
 16947                           
 16948                           ;j60_driver.c: 792: ERDPT = rxptr;
 16949  005DD0  C02D  FF7A         	movff	ETH_RxComputeChecksum@rxptr,3962	;volatile
 16950  005DD4  C02E  FF7B         	movff	ETH_RxComputeChecksum@rxptr+1,3963	;volatile
 16951                           
 16952                           ;j60_driver.c: 795: return ((cksm & 0xFF00) >> 8) | ((cksm & 0x00FF) << 8);
 16953  005DD8  502F               	movf	ETH_RxComputeChecksum@cksm,w,c
 16954  005DDA  6E2A               	movwf	(??_ETH_RxComputeChecksum+1)& (0+255),c
 16955  005DDC  6A29               	clrf	??_ETH_RxComputeChecksum& (0+255),c
 16956  005DDE  5030               	movf	ETH_RxComputeChecksum@cksm+1,w,c
 16957  005DE0  6E2B               	movwf	(??_ETH_RxComputeChecksum+2)& (0+255),c
 16958  005DE2  6A2C               	clrf	(??_ETH_RxComputeChecksum+3)& (0+255),c
 16959  005DE4  1029               	iorwf	??_ETH_RxComputeChecksum,w,c
 16960  005DE6  6E25               	movwf	?_ETH_RxComputeChecksum,c
 16961  005DE8  502A               	movf	??_ETH_RxComputeChecksum+1,w,c
 16962  005DEA  102C               	iorwf	??_ETH_RxComputeChecksum+3,w,c
 16963  005DEC  6E26               	movwf	?_ETH_RxComputeChecksum+1,c
 16964  005DEE  0012               	return		;funcret
 16965  005DF0                     __end_of_ETH_RxComputeChecksum:
 16966                           	opt stack 0
 16967                           tosu	equ	0xFFF
 16968                           tosh	equ	0xFFE
 16969                           tosl	equ	0xFFD
 16970                           pclath	equ	0xFFA
 16971                           tblptru	equ	0xFF8
 16972                           tblptrh	equ	0xFF7
 16973                           tblptrl	equ	0xFF6
 16974                           tablat	equ	0xFF5
 16975                           prodh	equ	0xFF4
 16976                           prodl	equ	0xFF3
 16977                           intcon	equ	0xFF2
 16978                           indf0	equ	0xFEF
 16979                           postinc0	equ	0xFEE
 16980                           fsr0h	equ	0xFEA
 16981                           fsr0l	equ	0xFE9
 16982                           wreg	equ	0xFE8
 16983                           postinc1	equ	0xFE6
 16984                           plusw1	equ	0xFE3
 16985                           fsr1h	equ	0xFE2
 16986                           fsr1l	equ	0xFE1
 16987                           bsr	equ	0xFE0
 16988                           indf2	equ	0xFDF
 16989                           postinc2	equ	0xFDE
 16990                           postdec2	equ	0xFDD
 16991                           plusw2	equ	0xFDB
 16992                           fsr2h	equ	0xFDA
 16993                           fsr2l	equ	0xFD9
 16994                           status	equ	0xFD8
 16995                           
 16996 ;; *************** function _ETH_NextPacketUpdate *****************
 16997 ;; Defined at:
 16998 ;;		line 266 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 16999 ;; Parameters:    Size  Location     Type
 17000 ;;		None
 17001 ;; Auto vars:     Size  Location     Type
 17002 ;;		None
 17003 ;; Return value:  Size  Location     Type
 17004 ;;		None               void
 17005 ;; Registers used:
 17006 ;;		wreg, status,2, status,0, cstack
 17007 ;; Tracked objects:
 17008 ;;		On entry : F/1
 17009 ;;		On exit  : F/2
 17010 ;;		Unchanged: 0/0
 17011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17016 ;;Total ram usage:        0 bytes
 17017 ;; Hardware stack levels used:    1
 17018 ;; Hardware stack levels required when called:    9
 17019 ;; This function calls:
 17020 ;;		_ETH_EdataRead
 17021 ;; This function is called by:
 17022 ;;		_Network_Read
 17023 ;; This function uses a non-reentrant model
 17024 ;;
 17025                           
 17026                           	psect	text60
 17027  005A48                     __ptext60:
 17028                           	opt stack 0
 17029  005A48                     _ETH_NextPacketUpdate:
 17030                           	opt stack 19
 17031                           
 17032                           ; BSR set to: 1
 17033                           ;j60_driver.c: 269: ERDPT = nextPacketPointer;
 17034                           
 17035                           ;incstack = 0
 17036  005A48  C041  FF7A         	movff	_nextPacketPointer,3962	;volatile
 17037  005A4C  C042  FF7B         	movff	_nextPacketPointer+1,3963	;volatile
 17038  005A50                     i12L__ptext100:
 17039                           	opt stack 0
 17040  005A50                     i12L_ETH_EdataRead:
 17041                           	opt stack 0
 17042  005A50                     i12Ll7805:
 17043                           	opt stack 15
 17044  005A50  CF61 FE7E          	movff	3937,_errataTemp	;# 
 17045  005A54                     i12Ll7807:
 17046                           	opt stack 15
 17047                           
 17048                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
 17049  005A54  010E               	movlb	14	; () banked
 17050  005A56  517E               	movf	126,w,b
 17051  005A58                     i12Ll460:
 17052                           	opt stack 19
 17053  005A58  6E41               	movwf	_nextPacketPointer,c
 17054  005A5A                     i13L__ptext100:
 17055                           	opt stack 0
 17056  005A5A                     i13L_ETH_EdataRead:
 17057                           	opt stack 0
 17058  005A5A                     i13Ll7805:
 17059                           	opt stack 15
 17060  005A5A  CF61 FE7E          	movff	3937,_errataTemp	;# 
 17061  005A5E                     i13Ll7807:
 17062                           	opt stack 15
 17063                           
 17064                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
 17065  005A5E  010E               	movlb	14	; () banked
 17066  005A60  517E               	movf	126,w,b
 17067  005A62                     i13Ll460:
 17068                           	opt stack 19
 17069  005A62  6E42               	movwf	_nextPacketPointer+1,c
 17070  005A64                     i14L__ptext100:
 17071                           	opt stack 0
 17072  005A64                     i14L_ETH_EdataRead:
 17073                           	opt stack 0
 17074  005A64                     i14Ll7805:
 17075                           	opt stack 15
 17076  005A64  CF61 FE7E          	movff	3937,_errataTemp	;# 
 17077  005A68                     i14Ll7807:
 17078                           	opt stack 15
 17079                           
 17080                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
 17081  005A68  010E               	movlb	14	; () banked
 17082  005A6A  517E               	movf	126,w,b
 17083  005A6C                     i14Ll460:
 17084                           	opt stack 19
 17085  005A6C  0102               	movlb	2	; () banked
 17086  005A6E  6F2C               	movwf	_rxPacketStatusVector& (0+255),b
 17087  005A70                     i15L__ptext100:
 17088                           	opt stack 0
 17089  005A70                     i15L_ETH_EdataRead:
 17090                           	opt stack 0
 17091  005A70                     i15Ll7805:
 17092                           	opt stack 15
 17093  005A70  CF61 FE7E          	movff	3937,_errataTemp	;# 
 17094  005A74                     i15Ll7807:
 17095                           	opt stack 15
 17096                           
 17097                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
 17098  005A74  010E               	movlb	14	; () banked
 17099  005A76  517E               	movf	126,w,b
 17100  005A78                     i15Ll460:
 17101                           	opt stack 19
 17102  005A78  0102               	movlb	2	; () banked
 17103  005A7A  6F2D               	movwf	(_rxPacketStatusVector+1)& (0+255),b
 17104  005A7C                     i16L__ptext100:
 17105                           	opt stack 0
 17106  005A7C                     i16L_ETH_EdataRead:
 17107                           	opt stack 0
 17108  005A7C                     i16Ll7805:
 17109                           	opt stack 15
 17110  005A7C  CF61 FE7E          	movff	3937,_errataTemp	;# 
 17111  005A80                     i16Ll7807:
 17112                           	opt stack 15
 17113                           
 17114                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
 17115  005A80  010E               	movlb	14	; () banked
 17116  005A82  517E               	movf	126,w,b
 17117  005A84                     i16Ll460:
 17118                           	opt stack 19
 17119  005A84  0102               	movlb	2	; () banked
 17120  005A86  6F2E               	movwf	(_rxPacketStatusVector+2)& (0+255),b
 17121  005A88                     i17L__ptext100:
 17122                           	opt stack 0
 17123  005A88                     i17L_ETH_EdataRead:
 17124                           	opt stack 0
 17125  005A88                     i17Ll7805:
 17126                           	opt stack 15
 17127  005A88  CF61 FE7E          	movff	3937,_errataTemp	;# 
 17128  005A8C                     i17Ll7807:
 17129                           	opt stack 15
 17130                           
 17131                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
 17132  005A8C  010E               	movlb	14	; () banked
 17133  005A8E  517E               	movf	126,w,b
 17134  005A90                     i17Ll460:
 17135                           	opt stack 19
 17136  005A90  0102               	movlb	2	; () banked
 17137  005A92  6F2F               	movwf	(_rxPacketStatusVector+3)& (0+255),b
 17138                           
 17139                           ; BSR set to: 2
 17140                           ;j60_driver.c: 281: rxPacketStatusVector.byteCount -= 4;
 17141  005A94  0E04               	movlw	4
 17142  005A96  5F2C               	subwf	_rxPacketStatusVector& (0+255),f,b
 17143  005A98  0E00               	movlw	0
 17144  005A9A  5B2D               	subwfb	(_rxPacketStatusVector+1)& (0+255),f,b
 17145                           
 17146                           ; BSR set to: 2
 17147  005A9C  0C00               	retlw	0	;funcret
 17148  005A9E                     __end_of_ETH_NextPacketUpdate:
 17149                           	opt stack 0
 17150                           tosu	equ	0xFFF
 17151                           tosh	equ	0xFFE
 17152                           tosl	equ	0xFFD
 17153                           pclath	equ	0xFFA
 17154                           tblptru	equ	0xFF8
 17155                           tblptrh	equ	0xFF7
 17156                           tblptrl	equ	0xFF6
 17157                           tablat	equ	0xFF5
 17158                           prodh	equ	0xFF4
 17159                           prodl	equ	0xFF3
 17160                           intcon	equ	0xFF2
 17161                           indf0	equ	0xFEF
 17162                           postinc0	equ	0xFEE
 17163                           fsr0h	equ	0xFEA
 17164                           fsr0l	equ	0xFE9
 17165                           wreg	equ	0xFE8
 17166                           postinc1	equ	0xFE6
 17167                           plusw1	equ	0xFE3
 17168                           fsr1h	equ	0xFE2
 17169                           fsr1l	equ	0xFE1
 17170                           bsr	equ	0xFE0
 17171                           indf2	equ	0xFDF
 17172                           postinc2	equ	0xFDE
 17173                           postdec2	equ	0xFDD
 17174                           plusw2	equ	0xFDB
 17175                           fsr2h	equ	0xFDA
 17176                           fsr2l	equ	0xFD9
 17177                           status	equ	0xFD8
 17178                           
 17179 ;; *************** function _ETH_Flush *****************
 17180 ;; Defined at:
 17181 ;;		line 625 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 17182 ;; Parameters:    Size  Location     Type
 17183 ;;		None
 17184 ;; Auto vars:     Size  Location     Type
 17185 ;;		None
 17186 ;; Return value:  Size  Location     Type
 17187 ;;		None               void
 17188 ;; Registers used:
 17189 ;;		wreg, status,2, status,0
 17190 ;; Tracked objects:
 17191 ;;		On entry : 0/1
 17192 ;;		On exit  : F/E
 17193 ;;		Unchanged: 0/0
 17194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17197 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17198 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17199 ;;Total ram usage:        4 bytes
 17200 ;; Hardware stack levels used:    1
 17201 ;; Hardware stack levels required when called:    8
 17202 ;; This function calls:
 17203 ;;		Nothing
 17204 ;; This function is called by:
 17205 ;;		_Network_Read
 17206 ;; This function uses a non-reentrant model
 17207 ;;
 17208                           
 17209                           	psect	text61
 17210  005AF2                     __ptext61:
 17211                           	opt stack 0
 17212  005AF2                     _ETH_Flush:
 17213                           	opt stack 20
 17214                           
 17215                           ;j60_driver.c: 627: ethData.pktReady = 0;
 17216                           
 17217                           ; BSR set to: 2
 17218                           ;incstack = 0
 17219  005AF2  0101               	movlb	1	; () banked
 17220  005AF4  93BF               	bcf	_ethData& (0+255),1,b	;volatile
 17221                           
 17222                           ; BSR set to: 1
 17223                           ;j60_driver.c: 629: ECON2 = ECON2 | 0x40;
 17224  005AF6  010E               	movlb	14	; () banked
 17225  005AF8  8DFE               	bsf	254,6,b	;volatile
 17226                           
 17227                           ; BSR set to: 14
 17228                           ;j60_driver.c: 635: if (((nextPacketPointer - 1) < ERXST) ||
 17229                           ;j60_driver.c: 636: ((nextPacketPointer - 1) > ERXND))
 17230  005AFA  D818               	call	PL623	;call to abstracted procedure
 17231  005AFC  51E8               	movf	232,w,b	;volatile
 17232  005AFE  5C19               	subwf	??_ETH_Flush+2,w,c
 17233  005B00  51E9               	movf	233,w,b	;volatile
 17234  005B02  581A               	subwfb	??_ETH_Flush+3,w,c
 17235  005B04  E306               	bnc	l594
 17236                           
 17237                           ; BSR set to: 14
 17238  005B06  D812               	call	PL623	;call to abstracted procedure
 17239  005B08  5019               	movf	??_ETH_Flush+2,w,c
 17240  005B0A  5DEA               	subwf	234,w,b	;volatile
 17241  005B0C  501A               	movf	??_ETH_Flush+3,w,c
 17242  005B0E  59EB               	subwfb	235,w,b	;volatile
 17243  005B10  E205               	bc	l9683
 17244  005B12                     l594:
 17245                           
 17246                           ; BSR set to: 14
 17247                           ;j60_driver.c: 637: ERXRDPT = ERXND;
 17248  005B12  CEEA FEEC          	movff	3818,3820	;volatile
 17249  005B16  CEEB FEED          	movff	3819,3821	;volatile
 17250  005B1A  D006               	goto	l9685
 17251  005B1C                     l9683:
 17252                           
 17253                           ; BSR set to: 14
 17254                           ;j60_driver.c: 638: else
 17255                           ;j60_driver.c: 639: ERXRDPT = nextPacketPointer - 1;
 17256  005B1C  0EFF               	movlw	255
 17257  005B1E  2441               	addwf	_nextPacketPointer,w,c
 17258  005B20  6FEC               	movwf	236,b	;volatile
 17259  005B22  0EFF               	movlw	255
 17260  005B24  2042               	addwfc	_nextPacketPointer+1,w,c
 17261  005B26  6FED               	movwf	237,b	;volatile
 17262  005B28                     l9685:
 17263                           
 17264                           ; BSR set to: 14
 17265                           ;j60_driver.c: 641: EIEbits.PKTIE = 1;
 17266  005B28  8DFB               	bsf	251,6,b	;volatile
 17267                           
 17268                           ; BSR set to: 14
 17269  005B2A  0012               	return		;funcret
 17270  005B2C                     __end_of_ETH_Flush:
 17271                           	opt stack 0
 17272  005B2C                     PL623:
 17273                           	opt stack 20
 17274  005B2C  6817               	setf	??_ETH_Flush& (0+255),c
 17275  005B2E  6818               	setf	(??_ETH_Flush+1)& (0+255),c
 17276  005B30  C041  F019         	movff	_nextPacketPointer,??_ETH_Flush+2
 17277  005B34  C042  F01A         	movff	_nextPacketPointer+1,??_ETH_Flush+3
 17278  005B38  5017               	movf	??_ETH_Flush,w,c
 17279  005B3A  2619               	addwf	??_ETH_Flush+2,f,c
 17280  005B3C  5018               	movf	??_ETH_Flush+1,w,c
 17281  005B3E  221A               	addwfc	??_ETH_Flush+3,f,c
 17282  005B40  0012               	return	
 17283  005B42                     __end_ofPL623:
 17284                           	opt stack 0
 17285                           tosu	equ	0xFFF
 17286                           tosh	equ	0xFFE
 17287                           tosl	equ	0xFFD
 17288                           pclath	equ	0xFFA
 17289                           tblptru	equ	0xFF8
 17290                           tblptrh	equ	0xFF7
 17291                           tblptrl	equ	0xFF6
 17292                           tablat	equ	0xFF5
 17293                           prodh	equ	0xFF4
 17294                           prodl	equ	0xFF3
 17295                           intcon	equ	0xFF2
 17296                           indf0	equ	0xFEF
 17297                           postinc0	equ	0xFEE
 17298                           fsr0h	equ	0xFEA
 17299                           fsr0l	equ	0xFE9
 17300                           wreg	equ	0xFE8
 17301                           postinc1	equ	0xFE6
 17302                           plusw1	equ	0xFE3
 17303                           fsr1h	equ	0xFE2
 17304                           fsr1l	equ	0xFE1
 17305                           bsr	equ	0xFE0
 17306                           indf2	equ	0xFDF
 17307                           postinc2	equ	0xFDE
 17308                           postdec2	equ	0xFDD
 17309                           plusw2	equ	0xFDB
 17310                           fsr2h	equ	0xFDA
 17311                           fsr2l	equ	0xFD9
 17312                           status	equ	0xFD8
 17313                           
 17314 ;; *************** function _ARPV4_Packet *****************
 17315 ;; Defined at:
 17316 ;;		line 97 in file "../../TCPIP Library/source/arpv4.c"
 17317 ;; Parameters:    Size  Location     Type
 17318 ;;		None
 17319 ;; Auto vars:     Size  Location     Type
 17320 ;;  x               1   39[BANK0 ] unsigned char 
 17321 ;;  arpPtr          2   36[BANK0 ] PTR struct .
 17322 ;;		 -> arpMap(104), 
 17323 ;;  x               1   38[BANK0 ] unsigned char 
 17324 ;;  header         28   42[BANK0 ] struct .
 17325 ;;  entryPointer    2   40[BANK0 ] PTR struct .
 17326 ;;		 -> arpMap(104), 
 17327 ;;  length          2   32[BANK0 ] unsigned int 
 17328 ;;  ret             1   35[BANK0 ] enum E450
 17329 ;;  mergeFlag       1   34[BANK0 ] unsigned char 
 17330 ;; Return value:  Size  Location     Type
 17331 ;;                  1    wreg      enum E450
 17332 ;; Registers used:
 17333 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17334 ;; Tracked objects:
 17335 ;;		On entry : 0/1
 17336 ;;		On exit  : 0/0
 17337 ;;		Unchanged: 0/0
 17338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17340 ;;      Locals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17341 ;;      Temps:          0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17342 ;;      Totals:         0      70       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17343 ;;Total ram usage:       70 bytes
 17344 ;; Hardware stack levels used:    1
 17345 ;; Hardware stack levels required when called:   10
 17346 ;; This function calls:
 17347 ;;		_ETH_GetMAC
 17348 ;;		_ETH_ReadBlock
 17349 ;;		_ETH_Send
 17350 ;;		_ETH_WriteBlock
 17351 ;;		_ETH_WriteStart
 17352 ;; This function is called by:
 17353 ;;		_Network_Read
 17354 ;; This function uses a non-reentrant model
 17355 ;;
 17356                           
 17357                           	psect	text62
 17358  003474                     __ptext62:
 17359                           	opt stack 0
 17360  003474                     _ARPV4_Packet:
 17361                           	opt stack 18
 17362                           
 17363                           ;arpv4.c: 107: length = ETH_ReadBlock((char*)&header,sizeof(arpHeader_t));
 17364                           
 17365                           ; BSR set to: 14
 17366                           ;incstack = 0
 17367  003474  0E8A               	movlw	low ARPV4_Packet@header
 17368  003476  6E17               	movwf	ETH_ReadBlock@buffer,c
 17369  003478  6A18               	clrf	ETH_ReadBlock@buffer+1,c
 17370  00347A  6A1A               	clrf	ETH_ReadBlock@length+1,c
 17371  00347C  0E1C               	movlw	28
 17372  00347E  6E19               	movwf	ETH_ReadBlock@length,c
 17373  003480  ECC5  F02C         	call	_ETH_ReadBlock	;wreg free
 17374  003484  C017  F080         	movff	?_ETH_ReadBlock,ARPV4_Packet@length
 17375  003488  C018  F081         	movff	?_ETH_ReadBlock+1,ARPV4_Packet@length+1
 17376                           
 17377                           ; BSR set to: 2
 17378                           ;arpv4.c: 108: if(length == sizeof(arpHeader_t))
 17379  00348C  0E1C               	movlw	28
 17380  00348E  0100               	movlb	0	; () banked
 17381  003490  1980               	xorwf	ARPV4_Packet@length& (0+255),w,b
 17382  003492  1181               	iorwf	(ARPV4_Packet@length+1)& (0+255),w,b
 17383  003494  A4D8               	btfss	status,2,c
 17384  003496  0012               	return	
 17385                           
 17386                           ; BSR set to: 0
 17387                           ;arpv4.c: 109: {
 17388                           ;arpv4.c: 111: mergeFlag = 0;
 17389  003498  6B82               	clrf	ARPV4_Packet@mergeFlag& (0+255),b
 17390                           
 17391                           ; BSR set to: 0
 17392                           ;arpv4.c: 112: entryPointer = arpMap;
 17393  00349A  D988               	call	PL761	;call to abstracted procedure
 17394                           
 17395                           ; BSR set to: 0
 17396                           ;arpv4.c: 114: for(uint8_t x=8; x > 0; x--)
 17397  00349C  0E08               	movlw	8
 17398  00349E  6F86               	movwf	ARPV4_Packet@x& (0+255),b
 17399  0034A0                     l9703:
 17400                           
 17401                           ; BSR set to: 0
 17402                           ;arpv4.c: 115: {
 17403                           ;arpv4.c: 116: if( (header.spa == entryPointer->ipAddress) && (header.ptype == entryPoin
      +                          ter->protocolType) )
 17404  0034A0  EE20 F006          	lfsr	2,6
 17405  0034A4  D97E               	call	PL619	;call to abstracted procedure
 17406  0034A6  50DE               	movf	postinc2,w,c
 17407  0034A8  1998               	xorwf	(ARPV4_Packet@header+14)& (0+255),w,b
 17408  0034AA  E11A               	bnz	l9713
 17409  0034AC  50DE               	movf	postinc2,w,c
 17410  0034AE  1999               	xorwf	(ARPV4_Packet@header+15)& (0+255),w,b
 17411  0034B0  E117               	bnz	l9713
 17412  0034B2  50DE               	movf	postinc2,w,c
 17413  0034B4  199A               	xorwf	(ARPV4_Packet@header+16)& (0+255),w,b
 17414  0034B6  E114               	bnz	l9713
 17415  0034B8  50DE               	movf	postinc2,w,c
 17416  0034BA  199B               	xorwf	(ARPV4_Packet@header+17)& (0+255),w,b
 17417  0034BC  E111               	bnz	l9713
 17418                           
 17419                           ; BSR set to: 0
 17420  0034BE  EE20 F00A          	lfsr	2,10
 17421  0034C2  D96F               	call	PL619	;call to abstracted procedure
 17422  0034C4  50DE               	movf	postinc2,w,c
 17423  0034C6  198C               	xorwf	(ARPV4_Packet@header+2)& (0+255),w,b
 17424  0034C8  E10B               	bnz	l9713
 17425  0034CA  50DE               	movf	postinc2,w,c
 17426  0034CC  198D               	xorwf	(ARPV4_Packet@header+3)& (0+255),w,b
 17427  0034CE  E108               	bnz	l9713
 17428                           
 17429                           ; BSR set to: 0
 17430                           ;arpv4.c: 117: {
 17431                           ;arpv4.c: 118: entryPointer->age = 0;
 17432                           
 17433                           ; BSR set to: 0
 17434                           ;arpv4.c: 119: entryPointer->macAddress.s = header.sha.s;
 17435  0034D0  D94D               	call	PL559	;call to abstracted procedure
 17436  0034D2                     u15431:
 17437  0034D2  CFDB FFE3          	movff	plusw2,plusw1
 17438  0034D6  06E8               	decf	wreg,f,c
 17439  0034D8  E2FC               	bc	u15431
 17440                           
 17441                           ; BSR set to: 0
 17442                           ;arpv4.c: 120: mergeFlag = 1;
 17443  0034DA  0E01               	movlw	1
 17444  0034DC  6F82               	movwf	ARPV4_Packet@mergeFlag& (0+255),b
 17445                           
 17446                           ;arpv4.c: 121: break;
 17447  0034DE  D007               	goto	l9719
 17448  0034E0                     l9713:
 17449                           
 17450                           ; BSR set to: 0
 17451                           ;arpv4.c: 122: }
 17452                           ;arpv4.c: 123: entryPointer++;
 17453  0034E0  0E0D               	movlw	13
 17454  0034E2  2788               	addwf	ARPV4_Packet@entryPointer& (0+255),f,b
 17455  0034E4  0E00               	movlw	0
 17456  0034E6  2389               	addwfc	(ARPV4_Packet@entryPointer+1)& (0+255),f,b
 17457                           
 17458                           ; BSR set to: 0
 17459  0034E8  0786               	decf	ARPV4_Packet@x& (0+255),f,b
 17460                           
 17461                           ; BSR set to: 0
 17462  0034EA  5186               	movf	ARPV4_Packet@x& (0+255),w,b
 17463  0034EC  E1D9               	bnz	l9703
 17464  0034EE                     l9719:
 17465                           
 17466                           ; BSR set to: 0
 17467                           ;arpv4.c: 124: }
 17468                           ;arpv4.c: 126: if(ipv4Address && (ipv4Address == ((((uint32_t)header.tpa&(uint32_t)0xff0
      +                          00000) >> 24) | (((uint32_t)header.tpa&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)header.
      +                          tpa&(uint32_t)0x0000ff00) << 8) | (((uint32_t)header.tpa&(uint32_t)0x000000ff) << 24) ))
      +                          )
 17469  0034EE  ECC4  F023         	call	PL745	;call to abstracted procedure
 17470  0034F2  B4D8               	btfsc	status,2,c
 17471  0034F4  0012               	return	
 17472                           
 17473                           ; BSR set to: 0
 17474  0034F6  51A2               	movf	(ARPV4_Packet@header+24)& (0+255),w,b
 17475  0034F8  D92F               	call	PL549	;call to abstracted procedure
 17476  0034FA  EE20  F0A2         	lfsr	2,ARPV4_Packet@header+24
 17477  0034FE  D918               	call	PL541	;call to abstracted procedure
 17478  003500  C0A2  F068         	movff	ARPV4_Packet@header+24,??_ARPV4_Packet+8
 17479  003504  C0A3  F069         	movff	ARPV4_Packet@header+25,??_ARPV4_Packet+9
 17480  003508  C0A4  F06A         	movff	ARPV4_Packet@header+26,??_ARPV4_Packet+10
 17481  00350C  C0A5  F06B         	movff	ARPV4_Packet@header+27,??_ARPV4_Packet+11
 17482  003510  D93B               	call	PL573	;call to abstracted procedure
 17483  003512  EE20  F0A2         	lfsr	2,ARPV4_Packet@header+24
 17484  003516  D8D3               	call	PL465	;call to abstracted procedure
 17485  003518  5037               	movf	_ipv4Address,w,c
 17486  00351A  197C               	xorwf	(??_ARPV4_Packet+28)& (0+255),w,b
 17487  00351C  E109               	bnz	u15471
 17488  00351E  5038               	movf	_ipv4Address+1,w,c
 17489  003520  197D               	xorwf	(??_ARPV4_Packet+29)& (0+255),w,b
 17490  003522  E106               	bnz	u15471
 17491  003524  5039               	movf	_ipv4Address+2,w,c
 17492  003526  197E               	xorwf	(??_ARPV4_Packet+30)& (0+255),w,b
 17493  003528  E103               	bnz	u15471
 17494  00352A  503A               	movf	_ipv4Address+3,w,c
 17495  00352C  197F               	xorwf	(??_ARPV4_Packet+31)& (0+255),w,b
 17496  00352E  A4D8               	btfss	status,2,c
 17497  003530                     u15471:
 17498  003530  0012               	return	
 17499                           
 17500                           ; BSR set to: 0
 17501                           ;arpv4.c: 127: {
 17502                           ;arpv4.c: 128: if(!mergeFlag)
 17503  003532  5182               	movf	ARPV4_Packet@mergeFlag& (0+255),w,b
 17504  003534  E149               	bnz	l9749
 17505                           
 17506                           ; BSR set to: 0
 17507                           ;arpv4.c: 129: {
 17508                           ;arpv4.c: 131: entryPointer = arpMap;
 17509  003536  D93A               	call	PL761	;call to abstracted procedure
 17510                           
 17511                           ;arpv4.c: 132: arpMap_t *arpPtr = arpMap;
 17512  003538  0E34               	movlw	low _arpMap
 17513  00353A  6F84               	movwf	ARPV4_Packet@arpPtr& (0+255),b
 17514  00353C  0E02               	movlw	high _arpMap
 17515  00353E  6F85               	movwf	(ARPV4_Packet@arpPtr+1)& (0+255),b
 17516                           
 17517                           ; BSR set to: 0
 17518                           ;arpv4.c: 133: for(uint8_t x=8; x !=0; x--)
 17519  003540  0E08               	movlw	8
 17520  003542  6F87               	movwf	ARPV4_Packet@x_1672& (0+255),b
 17521  003544                     l9733:
 17522                           
 17523                           ; BSR set to: 0
 17524                           ;arpv4.c: 134: {
 17525                           ;arpv4.c: 135: if(entryPointer->age < arpPtr->age)
 17526  003544  EE20 F00C          	lfsr	2,12
 17527  003548  5184               	movf	ARPV4_Packet@arpPtr& (0+255),w,b
 17528  00354A  26D9               	addwf	fsr2l,f,c
 17529  00354C  5185               	movf	(ARPV4_Packet@arpPtr+1)& (0+255),w,b
 17530  00354E  22DA               	addwfc	fsr2h,f,c
 17531  003550  EE10 F00C          	lfsr	1,12
 17532  003554  5188               	movf	ARPV4_Packet@entryPointer& (0+255),w,b
 17533  003556  26E1               	addwf	fsr1l,f,c
 17534  003558  5189               	movf	(ARPV4_Packet@entryPointer+1)& (0+255),w,b
 17535  00355A  22E2               	addwfc	fsr1h,f,c
 17536  00355C  50DE               	movf	postinc2,w,c
 17537  00355E  5CE6               	subwf	postinc1,w,c
 17538  003560  E204               	bc	l680
 17539                           
 17540                           ; BSR set to: 0
 17541                           ;arpv4.c: 136: {
 17542                           ;arpv4.c: 137: entryPointer = arpPtr;
 17543  003562  C084  F088         	movff	ARPV4_Packet@arpPtr,ARPV4_Packet@entryPointer
 17544  003566  C085  F089         	movff	ARPV4_Packet@arpPtr+1,ARPV4_Packet@entryPointer+1
 17545  00356A                     l680:
 17546                           
 17547                           ; BSR set to: 0
 17548                           ;arpv4.c: 138: }
 17549                           ;arpv4.c: 140: arpPtr++;
 17550  00356A  0E0D               	movlw	13
 17551  00356C  2784               	addwf	ARPV4_Packet@arpPtr& (0+255),f,b
 17552  00356E  0E00               	movlw	0
 17553  003570  2385               	addwfc	(ARPV4_Packet@arpPtr+1)& (0+255),f,b
 17554                           
 17555                           ; BSR set to: 0
 17556  003572  0787               	decf	ARPV4_Packet@x_1672& (0+255),f,b
 17557                           
 17558                           ; BSR set to: 0
 17559  003574  5187               	movf	ARPV4_Packet@x_1672& (0+255),w,b
 17560  003576  E1E6               	bnz	l9733
 17561                           
 17562                           ; BSR set to: 0
 17563                           ;arpv4.c: 141: }
 17564                           ;arpv4.c: 144: entryPointer->age = 0;
 17565                           
 17566                           ; BSR set to: 0
 17567                           ;arpv4.c: 145: entryPointer->macAddress.s = header.sha.s;
 17568  003578  D8F9               	call	PL559	;call to abstracted procedure
 17569  00357A                     u15511:
 17570  00357A  CFDB FFE3          	movff	plusw2,plusw1
 17571  00357E  06E8               	decf	wreg,f,c
 17572  003580  E2FC               	bc	u15511
 17573                           
 17574                           ; BSR set to: 0
 17575                           ;arpv4.c: 146: entryPointer->ipAddress = ((((uint32_t)header.spa&(uint32_t)0xff000000) >
      +                          > 24) | (((uint32_t)header.spa&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)header.spa&(uin
      +                          t32_t)0x0000ff00) << 8) | (((uint32_t)header.spa&(uint32_t)0x000000ff) << 24) );
 17576  003582  5198               	movf	(ARPV4_Packet@header+14)& (0+255),w,b
 17577  003584  D8E9               	call	PL549	;call to abstracted procedure
 17578  003586  EE20  F098         	lfsr	2,ARPV4_Packet@header+14
 17579  00358A  D8D2               	call	PL541	;call to abstracted procedure
 17580  00358C  C098  F068         	movff	ARPV4_Packet@header+14,??_ARPV4_Packet+8
 17581  003590  C099  F069         	movff	ARPV4_Packet@header+15,??_ARPV4_Packet+9
 17582  003594  C09A  F06A         	movff	ARPV4_Packet@header+16,??_ARPV4_Packet+10
 17583  003598  C09B  F06B         	movff	ARPV4_Packet@header+17,??_ARPV4_Packet+11
 17584  00359C  D8F5               	call	PL573	;call to abstracted procedure
 17585  00359E  EE20  F098         	lfsr	2,ARPV4_Packet@header+14
 17586  0035A2  D88D               	call	PL465	;call to abstracted procedure
 17587  0035A4  EE20 F006          	lfsr	2,6
 17588  0035A8  D8FC               	call	PL619	;call to abstracted procedure
 17589  0035AA  C07C  FFDE         	movff	??_ARPV4_Packet+28,postinc2
 17590  0035AE  C07D  FFDE         	movff	??_ARPV4_Packet+29,postinc2
 17591  0035B2  C07E  FFDE         	movff	??_ARPV4_Packet+30,postinc2
 17592  0035B6  C07F  FFDE         	movff	??_ARPV4_Packet+31,postinc2
 17593                           
 17594                           ; BSR set to: 0
 17595                           ;arpv4.c: 147: entryPointer->protocolType = header.ptype;
 17596  0035BA  EE20 F00A          	lfsr	2,10
 17597  0035BE  D8F1               	call	PL619	;call to abstracted procedure
 17598  0035C0  C08C  FFDE         	movff	ARPV4_Packet@header+2,postinc2
 17599  0035C4  C08D  FFDD         	movff	ARPV4_Packet@header+3,postdec2
 17600  0035C8                     l9749:
 17601                           
 17602                           ; BSR set to: 0
 17603                           ;arpv4.c: 148: }
 17604                           ;arpv4.c: 149: if(header.oper == ((((uint16_t)1 & (uint16_t)0xFF00) >> 8) | (((uint16_t)
      +                          1 & (uint16_t)0x00FF) << 8)))
 17605  0035C8  0591               	decf	(ARPV4_Packet@header+7)& (0+255),w,b
 17606  0035CA  1190               	iorwf	(ARPV4_Packet@header+6)& (0+255),w,b
 17607  0035CC  A4D8               	btfss	status,2,c
 17608  0035CE  0012               	return	
 17609                           
 17610                           ; BSR set to: 0
 17611                           ;arpv4.c: 150: {
 17612                           ;arpv4.c: 151: ret = ETH_WriteStart(&header.sha ,0x0806);
 17613  0035D0  0E92               	movlw	low (ARPV4_Packet@header+8)
 17614  0035D2  6E17               	movwf	ETH_WriteStart@dest_mac,c
 17615  0035D4  6A18               	clrf	ETH_WriteStart@dest_mac+1,c
 17616  0035D6  EC2B  F025         	call	PL727	;call to abstracted procedure
 17617  0035DA  EC0D  F027         	call	_ETH_WriteStart	;wreg free
 17618  0035DE  0100               	movlb	0	; () banked
 17619  0035E0  6F83               	movwf	ARPV4_Packet@ret& (0+255),b
 17620                           
 17621                           ; BSR set to: 0
 17622                           ;arpv4.c: 152: if(ret == SUCCESS)
 17623  0035E2  0583               	decf	ARPV4_Packet@ret& (0+255),w,b
 17624  0035E4  A4D8               	btfss	status,2,c
 17625  0035E6  0012               	return	
 17626                           
 17627                           ; BSR set to: 0
 17628                           ;arpv4.c: 153: {
 17629                           ;arpv4.c: 155: header.tha.s = header.sha.s;
 17630  0035E8  EE20  F092         	lfsr	2,ARPV4_Packet@header+8
 17631  0035EC  EE10  F09C         	lfsr	1,ARPV4_Packet@header+18
 17632  0035F0  0E05               	movlw	5
 17633  0035F2                     u15551:
 17634  0035F2  CFDB FFE3          	movff	plusw2,plusw1
 17635  0035F6  06E8               	decf	wreg,f,c
 17636  0035F8  E2FC               	bc	u15551
 17637                           
 17638                           ; BSR set to: 0
 17639                           ;arpv4.c: 156: ETH_GetMAC((char*)&header.sha.s);
 17640  0035FA  0E8A               	movlw	ARPV4_Packet@header& (0+255)
 17641  0035FC  0F08               	addlw	8
 17642  0035FE  ECB1  F02F         	call	_ETH_GetMAC
 17643                           
 17644                           ;arpv4.c: 157: header.tpa = header.spa;
 17645  003602  C098  F0A2         	movff	ARPV4_Packet@header+14,ARPV4_Packet@header+24
 17646  003606  C099  F0A3         	movff	ARPV4_Packet@header+15,ARPV4_Packet@header+25
 17647  00360A  C09A  F0A4         	movff	ARPV4_Packet@header+16,ARPV4_Packet@header+26
 17648  00360E  C09B  F0A5         	movff	ARPV4_Packet@header+17,ARPV4_Packet@header+27
 17649                           
 17650                           ;arpv4.c: 158: header.spa = ((((uint32_t)ipv4Address&(uint32_t)0xff000000) >> 24) | (((u
      +                          int32_t)ipv4Address&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)ipv4Address&(uint32_t)0x00
      +                          00ff00) << 8) | (((uint32_t)ipv4Address&(uint32_t)0x000000ff) << 24) );
 17651  003612  5037               	movf	_ipv4Address,w,c
 17652  003614  0100               	movlb	0	; () banked
 17653  003616  D8A0               	call	PL549	;call to abstracted procedure
 17654  003618  6B64               	clrf	(??_ARPV4_Packet+4)& (0+255),b
 17655  00361A  5038               	movf	_ipv4Address+1,w,c
 17656  00361C  6F65               	movwf	(??_ARPV4_Packet+5)& (0+255),b
 17657  00361E  6B66               	clrf	(??_ARPV4_Packet+6)& (0+255),b
 17658  003620  6B67               	clrf	(??_ARPV4_Packet+7)& (0+255),b
 17659  003622  C066  F067         	movff	??_ARPV4_Packet+6,??_ARPV4_Packet+7
 17660  003626  C065  F066         	movff	??_ARPV4_Packet+5,??_ARPV4_Packet+6
 17661  00362A  C064  F065         	movff	??_ARPV4_Packet+4,??_ARPV4_Packet+5
 17662  00362E  6B64               	clrf	(??_ARPV4_Packet+4)& (0+255),b
 17663  003630  6B68               	clrf	(??_ARPV4_Packet+8)& (0+255),b
 17664  003632  5039               	movf	_ipv4Address+2,w,c
 17665  003634  6F69               	movwf	(??_ARPV4_Packet+9)& (0+255),b
 17666  003636  6B6A               	clrf	(??_ARPV4_Packet+10)& (0+255),b
 17667  003638  5168               	movf	(??_ARPV4_Packet+8)& (0+255),w,b
 17668  00363A  6F6B               	movwf	(??_ARPV4_Packet+11)& (0+255),b
 17669  00363C  5169               	movf	(??_ARPV4_Packet+9)& (0+255),w,b
 17670  00363E  6F6C               	movwf	(??_ARPV4_Packet+12)& (0+255),b
 17671  003640  516A               	movf	(??_ARPV4_Packet+10)& (0+255),w,b
 17672  003642  6F6D               	movwf	(??_ARPV4_Packet+13)& (0+255),b
 17673  003644  6B6E               	clrf	(??_ARPV4_Packet+14)& (0+255),b
 17674  003646  6B6F               	clrf	(??_ARPV4_Packet+15)& (0+255),b
 17675  003648  6B70               	clrf	(??_ARPV4_Packet+16)& (0+255),b
 17676  00364A  6B71               	clrf	(??_ARPV4_Packet+17)& (0+255),b
 17677  00364C  503A               	movf	_ipv4Address+3,w,c
 17678  00364E  6F72               	movwf	(??_ARPV4_Packet+18)& (0+255),b
 17679  003650  0E19               	movlw	25
 17680  003652  D005               	goto	u15560
 17681  003654                     u15565:
 17682  003654  90D8               	bcf	status,0,c
 17683  003656  3372               	rrcf	(??_ARPV4_Packet+18)& (0+255),f,b
 17684  003658  3371               	rrcf	(??_ARPV4_Packet+17)& (0+255),f,b
 17685  00365A  3370               	rrcf	(??_ARPV4_Packet+16)& (0+255),f,b
 17686  00365C  336F               	rrcf	(??_ARPV4_Packet+15)& (0+255),f,b
 17687  00365E                     u15560:
 17688  00365E  2EE8               	decfsz	wreg,f,c
 17689  003660  D7F9               	goto	u15565
 17690  003662  516B               	movf	(??_ARPV4_Packet+11)& (0+255),w,b
 17691  003664  116F               	iorwf	(??_ARPV4_Packet+15)& (0+255),w,b
 17692  003666  6F73               	movwf	(??_ARPV4_Packet+19)& (0+255),b
 17693  003668  516C               	movf	(??_ARPV4_Packet+12)& (0+255),w,b
 17694  00366A  1170               	iorwf	(??_ARPV4_Packet+16)& (0+255),w,b
 17695  00366C  6F74               	movwf	(??_ARPV4_Packet+20)& (0+255),b
 17696  00366E  516D               	movf	(??_ARPV4_Packet+13)& (0+255),w,b
 17697  003670  1171               	iorwf	(??_ARPV4_Packet+17)& (0+255),w,b
 17698  003672  6F75               	movwf	(??_ARPV4_Packet+21)& (0+255),b
 17699  003674  516E               	movf	(??_ARPV4_Packet+14)& (0+255),w,b
 17700  003676  1172               	iorwf	(??_ARPV4_Packet+18)& (0+255),w,b
 17701  003678  6F76               	movwf	(??_ARPV4_Packet+22)& (0+255),b
 17702  00367A  5164               	movf	(??_ARPV4_Packet+4)& (0+255),w,b
 17703  00367C  1173               	iorwf	(??_ARPV4_Packet+19)& (0+255),w,b
 17704  00367E  6F77               	movwf	(??_ARPV4_Packet+23)& (0+255),b
 17705  003680  5165               	movf	(??_ARPV4_Packet+5)& (0+255),w,b
 17706  003682  1174               	iorwf	(??_ARPV4_Packet+20)& (0+255),w,b
 17707  003684  6F78               	movwf	(??_ARPV4_Packet+24)& (0+255),b
 17708  003686  5166               	movf	(??_ARPV4_Packet+6)& (0+255),w,b
 17709  003688  1175               	iorwf	(??_ARPV4_Packet+21)& (0+255),w,b
 17710  00368A  6F79               	movwf	(??_ARPV4_Packet+25)& (0+255),b
 17711  00368C  5167               	movf	(??_ARPV4_Packet+7)& (0+255),w,b
 17712  00368E  1176               	iorwf	(??_ARPV4_Packet+22)& (0+255),w,b
 17713  003690  6F7A               	movwf	(??_ARPV4_Packet+26)& (0+255),b
 17714  003692  5160               	movf	??_ARPV4_Packet& (0+255),w,b
 17715  003694  1177               	iorwf	(??_ARPV4_Packet+23)& (0+255),w,b
 17716  003696  6F98               	movwf	(ARPV4_Packet@header+14)& (0+255),b
 17717  003698  5161               	movf	(??_ARPV4_Packet+1)& (0+255),w,b
 17718  00369A  1178               	iorwf	(??_ARPV4_Packet+24)& (0+255),w,b
 17719  00369C  6F99               	movwf	(ARPV4_Packet@header+15)& (0+255),b
 17720  00369E  5162               	movf	(??_ARPV4_Packet+2)& (0+255),w,b
 17721  0036A0  1179               	iorwf	(??_ARPV4_Packet+25)& (0+255),w,b
 17722  0036A2  6F9A               	movwf	(ARPV4_Packet@header+16)& (0+255),b
 17723  0036A4  5163               	movf	(??_ARPV4_Packet+3)& (0+255),w,b
 17724  0036A6  117A               	iorwf	(??_ARPV4_Packet+26)& (0+255),w,b
 17725  0036A8  6F9B               	movwf	(ARPV4_Packet@header+17)& (0+255),b
 17726                           
 17727                           ; BSR set to: 0
 17728                           ;arpv4.c: 159: header.oper = ((((uint16_t)2 & (uint16_t)0xFF00) >> 8) | (((uint16_t)2 & 
      +                          (uint16_t)0x00FF) << 8));
 17729  0036AA  0E02               	movlw	2
 17730  0036AC  6F91               	movwf	(ARPV4_Packet@header+7)& (0+255),b
 17731  0036AE  6B90               	clrf	(ARPV4_Packet@header+6)& (0+255),b
 17732                           
 17733                           ; BSR set to: 0
 17734                           ;arpv4.c: 160: ETH_WriteBlock((char*)&header,sizeof(header));
 17735  0036B0  0E8A               	movlw	low ARPV4_Packet@header
 17736  0036B2  EC1F  F025         	call	PL705	;call to abstracted procedure
 17737  0036B6  EC89  F02E         	call	_ETH_WriteBlock	;wreg free
 17738  0036BA  EF9F  F030         	goto	_ETH_Send	;wreg free
 17739  0036BE                     __end_of_ARPV4_Packet:
 17740                           	opt stack 0
 17741  0036BE                     PL465:
 17742                           	opt stack 18
 17743  0036BE  14DE               	andwf	postinc2,w,c
 17744  0036C0  6F70               	movwf	(??_ARPV4_Packet+16)& (0+255),b
 17745  0036C2  0E00               	movlw	0
 17746  0036C4  14DE               	andwf	postinc2,w,c
 17747  0036C6  6F71               	movwf	(??_ARPV4_Packet+17)& (0+255),b
 17748  0036C8  0E00               	movlw	0
 17749  0036CA  14DE               	andwf	postinc2,w,c
 17750  0036CC  6F72               	movwf	(??_ARPV4_Packet+18)& (0+255),b
 17751  0036CE  0EFF               	movlw	255
 17752  0036D0  14DE               	andwf	postinc2,w,c
 17753  0036D2  6F73               	movwf	(??_ARPV4_Packet+19)& (0+255),b
 17754  0036D4  0E19               	movlw	25
 17755  0036D6  D005               	goto	u15460
 17756  0036D8                     u15465:
 17757  0036D8  90D8               	bcf	status,0,c
 17758  0036DA  3373               	rrcf	(??_ARPV4_Packet+19)& (0+255),f,b
 17759  0036DC  3372               	rrcf	(??_ARPV4_Packet+18)& (0+255),f,b
 17760  0036DE  3371               	rrcf	(??_ARPV4_Packet+17)& (0+255),f,b
 17761  0036E0  3370               	rrcf	(??_ARPV4_Packet+16)& (0+255),f,b
 17762  0036E2                     u15460:
 17763  0036E2  2EE8               	decfsz	wreg,f,c
 17764  0036E4  D7F9               	goto	u15465
 17765  0036E6  516C               	movf	(??_ARPV4_Packet+12)& (0+255),w,b
 17766  0036E8  1170               	iorwf	(??_ARPV4_Packet+16)& (0+255),w,b
 17767  0036EA  6F74               	movwf	(??_ARPV4_Packet+20)& (0+255),b
 17768  0036EC  516D               	movf	(??_ARPV4_Packet+13)& (0+255),w,b
 17769  0036EE  1171               	iorwf	(??_ARPV4_Packet+17)& (0+255),w,b
 17770  0036F0  6F75               	movwf	(??_ARPV4_Packet+21)& (0+255),b
 17771  0036F2  516E               	movf	(??_ARPV4_Packet+14)& (0+255),w,b
 17772  0036F4  1172               	iorwf	(??_ARPV4_Packet+18)& (0+255),w,b
 17773  0036F6  6F76               	movwf	(??_ARPV4_Packet+22)& (0+255),b
 17774  0036F8  516F               	movf	(??_ARPV4_Packet+15)& (0+255),w,b
 17775  0036FA  1173               	iorwf	(??_ARPV4_Packet+19)& (0+255),w,b
 17776  0036FC  6F77               	movwf	(??_ARPV4_Packet+23)& (0+255),b
 17777  0036FE  5164               	movf	(??_ARPV4_Packet+4)& (0+255),w,b
 17778  003700  1174               	iorwf	(??_ARPV4_Packet+20)& (0+255),w,b
 17779  003702  6F78               	movwf	(??_ARPV4_Packet+24)& (0+255),b
 17780  003704  5165               	movf	(??_ARPV4_Packet+5)& (0+255),w,b
 17781  003706  1175               	iorwf	(??_ARPV4_Packet+21)& (0+255),w,b
 17782  003708  6F79               	movwf	(??_ARPV4_Packet+25)& (0+255),b
 17783  00370A  5166               	movf	(??_ARPV4_Packet+6)& (0+255),w,b
 17784  00370C  1176               	iorwf	(??_ARPV4_Packet+22)& (0+255),w,b
 17785  00370E  6F7A               	movwf	(??_ARPV4_Packet+26)& (0+255),b
 17786  003710  5167               	movf	(??_ARPV4_Packet+7)& (0+255),w,b
 17787  003712  1177               	iorwf	(??_ARPV4_Packet+23)& (0+255),w,b
 17788  003714  6F7B               	movwf	(??_ARPV4_Packet+27)& (0+255),b
 17789  003716  5160               	movf	??_ARPV4_Packet& (0+255),w,b
 17790  003718  1178               	iorwf	(??_ARPV4_Packet+24)& (0+255),w,b
 17791  00371A  6F7C               	movwf	(??_ARPV4_Packet+28)& (0+255),b
 17792  00371C  5161               	movf	(??_ARPV4_Packet+1)& (0+255),w,b
 17793  00371E  1179               	iorwf	(??_ARPV4_Packet+25)& (0+255),w,b
 17794  003720  6F7D               	movwf	(??_ARPV4_Packet+29)& (0+255),b
 17795  003722  5162               	movf	(??_ARPV4_Packet+2)& (0+255),w,b
 17796  003724  117A               	iorwf	(??_ARPV4_Packet+26)& (0+255),w,b
 17797  003726  6F7E               	movwf	(??_ARPV4_Packet+30)& (0+255),b
 17798  003728  5163               	movf	(??_ARPV4_Packet+3)& (0+255),w,b
 17799  00372A  117B               	iorwf	(??_ARPV4_Packet+27)& (0+255),w,b
 17800  00372C  6F7F               	movwf	(??_ARPV4_Packet+31)& (0+255),b
 17801  00372E  0012               	return	
 17802  003730                     __end_ofPL465:
 17803                           	opt stack 0
 17804  003730                     PL541:
 17805                           	opt stack 18
 17806  003730  0E00               	movlw	0
 17807  003732  14DE               	andwf	postinc2,w,c
 17808  003734  6F64               	movwf	(??_ARPV4_Packet+4)& (0+255),b
 17809  003736  0EFF               	movlw	255
 17810  003738  14DE               	andwf	postinc2,w,c
 17811  00373A  6F65               	movwf	(??_ARPV4_Packet+5)& (0+255),b
 17812  00373C  0E00               	movlw	0
 17813  00373E  14DE               	andwf	postinc2,w,c
 17814  003740  6F66               	movwf	(??_ARPV4_Packet+6)& (0+255),b
 17815  003742  0E00               	movlw	0
 17816  003744  14DE               	andwf	postinc2,w,c
 17817  003746  6F67               	movwf	(??_ARPV4_Packet+7)& (0+255),b
 17818  003748  C066  F067         	movff	??_ARPV4_Packet+6,??_ARPV4_Packet+7
 17819  00374C  C065  F066         	movff	??_ARPV4_Packet+5,??_ARPV4_Packet+6
 17820  003750  C064  F065         	movff	??_ARPV4_Packet+4,??_ARPV4_Packet+5
 17821  003754  6B64               	clrf	(??_ARPV4_Packet+4)& (0+255),b
 17822  003756  0012               	return	
 17823  003758                     __end_ofPL541:
 17824                           	opt stack 0
 17825  003758                     PL549:
 17826                           	opt stack 18
 17827  003758  6F60               	movwf	??_ARPV4_Packet& (0+255),b
 17828  00375A  6B61               	clrf	(??_ARPV4_Packet+1)& (0+255),b
 17829  00375C  6B62               	clrf	(??_ARPV4_Packet+2)& (0+255),b
 17830  00375E  6B63               	clrf	(??_ARPV4_Packet+3)& (0+255),b
 17831  003760  C060  F063         	movff	??_ARPV4_Packet,??_ARPV4_Packet+3
 17832  003764  6B62               	clrf	(??_ARPV4_Packet+2)& (0+255),b
 17833  003766  6B61               	clrf	(??_ARPV4_Packet+1)& (0+255),b
 17834  003768  6B60               	clrf	??_ARPV4_Packet& (0+255),b
 17835  00376A  0012               	return	
 17836  00376C                     __end_ofPL549:
 17837                           	opt stack 0
 17838  00376C                     PL559:
 17839                           	opt stack 18
 17840  00376C  EE20 F00C          	lfsr	2,12
 17841  003770  5188               	movf	ARPV4_Packet@entryPointer& (0+255),w,b
 17842  003772  26D9               	addwf	fsr2l,f,c
 17843  003774  5189               	movf	(ARPV4_Packet@entryPointer+1)& (0+255),w,b
 17844  003776  22DA               	addwfc	fsr2h,f,c
 17845  003778  6ADF               	clrf	indf2,c
 17846  00377A  EE20  F092         	lfsr	2,ARPV4_Packet@header+8
 17847  00377E  C088  FFE1         	movff	ARPV4_Packet@entryPointer,fsr1l
 17848  003782  C089  FFE2         	movff	ARPV4_Packet@entryPointer+1,fsr1h
 17849  003786  0C05               	retlw	5
 17850  003788                     __end_ofPL559:
 17851                           	opt stack 0
 17852  003788                     PL573:
 17853                           	opt stack 18
 17854  003788  C069  F068         	movff	??_ARPV4_Packet+9,??_ARPV4_Packet+8
 17855  00378C  C06A  F069         	movff	??_ARPV4_Packet+10,??_ARPV4_Packet+9
 17856  003790  C06B  F06A         	movff	??_ARPV4_Packet+11,??_ARPV4_Packet+10
 17857  003794  6B6B               	clrf	(??_ARPV4_Packet+11)& (0+255),b
 17858  003796  6B6C               	clrf	(??_ARPV4_Packet+12)& (0+255),b
 17859  003798  5169               	movf	(??_ARPV4_Packet+9)& (0+255),w,b
 17860  00379A  6F6D               	movwf	(??_ARPV4_Packet+13)& (0+255),b
 17861  00379C  6B6E               	clrf	(??_ARPV4_Packet+14)& (0+255),b
 17862  00379E  6B6F               	clrf	(??_ARPV4_Packet+15)& (0+255),b
 17863  0037A0  0C00               	retlw	0
 17864  0037A2                     __end_ofPL573:
 17865                           	opt stack 0
 17866  0037A2                     PL619:
 17867                           	opt stack 18
 17868  0037A2  5188               	movf	ARPV4_Packet@entryPointer& (0+255),w,b
 17869  0037A4  26D9               	addwf	fsr2l,f,c
 17870  0037A6  5189               	movf	(ARPV4_Packet@entryPointer+1)& (0+255),w,b
 17871  0037A8  22DA               	addwfc	fsr2h,f,c
 17872  0037AA  0012               	return	
 17873  0037AC                     __end_ofPL619:
 17874                           	opt stack 0
 17875  0037AC                     PL761:
 17876                           	opt stack 18
 17877  0037AC  0E34               	movlw	low _arpMap
 17878  0037AE  6F88               	movwf	ARPV4_Packet@entryPointer& (0+255),b
 17879  0037B0  0E02               	movlw	high _arpMap
 17880  0037B2  6F89               	movwf	(ARPV4_Packet@entryPointer+1)& (0+255),b
 17881  0037B4  0012               	return	
 17882  0037B6                     __end_ofPL761:
 17883                           	opt stack 0
 17884                           tosu	equ	0xFFF
 17885                           tosh	equ	0xFFE
 17886                           tosl	equ	0xFFD
 17887                           pclath	equ	0xFFA
 17888                           tblptru	equ	0xFF8
 17889                           tblptrh	equ	0xFF7
 17890                           tblptrl	equ	0xFF6
 17891                           tablat	equ	0xFF5
 17892                           prodh	equ	0xFF4
 17893                           prodl	equ	0xFF3
 17894                           intcon	equ	0xFF2
 17895                           indf0	equ	0xFEF
 17896                           postinc0	equ	0xFEE
 17897                           fsr0h	equ	0xFEA
 17898                           fsr0l	equ	0xFE9
 17899                           wreg	equ	0xFE8
 17900                           postinc1	equ	0xFE6
 17901                           plusw1	equ	0xFE3
 17902                           fsr1h	equ	0xFE2
 17903                           fsr1l	equ	0xFE1
 17904                           bsr	equ	0xFE0
 17905                           indf2	equ	0xFDF
 17906                           postinc2	equ	0xFDE
 17907                           postdec2	equ	0xFDD
 17908                           plusw2	equ	0xFDB
 17909                           fsr2h	equ	0xFDA
 17910                           fsr2l	equ	0xFD9
 17911                           status	equ	0xFD8
 17912                           
 17913 ;; *************** function _ETH_ReadBlock *****************
 17914 ;; Defined at:
 17915 ;;		line 445 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 17916 ;; Parameters:    Size  Location     Type
 17917 ;;  buffer          2   22[COMRAM] PTR void 
 17918 ;;		 -> ?_sprintf(2), ?_printf(2), DEMO_UDP_Recv@str2(16), DEMO_UDP_Recv@str1(16), 
 17919 ;;		 -> DEMO_UDP_Recv@str(32), data(2), idle_packet(2), main@str(32), 
 17920 ;;		 -> STR_6(13), STR_5(17), udpHeader(8), tcpHeader(20), 
 17921 ;;		 -> Network_Read@debug_str(80), Network_Read@header(14), ipv4Header(20), ICMP_Receive@icmpHdr(8), 
 17922 ;;		 -> DHCP_Handler@ethPktMAC(6), ARPV4_Packet@header(28), STR_1(15), NULL(0), 
 17923 ;;  length          2   24[COMRAM] unsigned int 
 17924 ;; Auto vars:     Size  Location     Type
 17925 ;;  p               2   29[COMRAM] PTR unsigned char 
 17926 ;;		 -> ?_sprintf(2), ?_printf(2), DEMO_UDP_Recv@str2(16), DEMO_UDP_Recv@str1(16), 
 17927 ;;		 -> DEMO_UDP_Recv@str(32), data(2), idle_packet(2), main@str(32), 
 17928 ;;		 -> STR_6(13), STR_5(17), udpHeader(8), tcpHeader(20), 
 17929 ;;		 -> Network_Read@debug_str(80), Network_Read@header(14), ipv4Header(20), ICMP_Receive@icmpHdr(8), 
 17930 ;;		 -> DHCP_Handler@ethPktMAC(6), ARPV4_Packet@header(28), STR_1(15), NULL(0), 
 17931 ;;  len             2   27[COMRAM] unsigned int 
 17932 ;; Return value:  Size  Location     Type
 17933 ;;                  2   22[COMRAM] unsigned int 
 17934 ;; Registers used:
 17935 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17936 ;; Tracked objects:
 17937 ;;		On entry : 0/2
 17938 ;;		On exit  : F/2
 17939 ;;		Unchanged: 0/0
 17940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17941 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17942 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17943 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17944 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17945 ;;Total ram usage:        9 bytes
 17946 ;; Hardware stack levels used:    1
 17947 ;; Hardware stack levels required when called:    9
 17948 ;; This function calls:
 17949 ;;		_ETH_EdataRead
 17950 ;; This function is called by:
 17951 ;;		_ARPV4_Packet
 17952 ;;		_DHCP_Handler
 17953 ;;		_ICMP_Receive
 17954 ;;		_IPV4_Packet
 17955 ;;		_Network_Read
 17956 ;;		_TCP_PayloadSave
 17957 ;;		_TCP_Recv
 17958 ;;		_UDP_Receive
 17959 ;;		_UDP_ReadBlock
 17960 ;; This function uses a non-reentrant model
 17961 ;;
 17962                           
 17963                           	psect	text63
 17964  00598A                     __ptext63:
 17965                           	opt stack 0
 17966  00598A                     _ETH_ReadBlock:
 17967                           	opt stack 17
 17968                           
 17969                           ;j60_driver.c: 447: uint16_t len = 0;
 17970                           
 17971                           ;incstack = 0
 17972  00598A  6A1C               	clrf	ETH_ReadBlock@len,c
 17973  00598C  6A1D               	clrf	ETH_ReadBlock@len+1,c
 17974                           
 17975                           ;j60_driver.c: 448: char *p = buffer;
 17976  00598E  C017  F01E         	movff	ETH_ReadBlock@buffer,ETH_ReadBlock@p
 17977  005992  C018  F01F         	movff	ETH_ReadBlock@buffer+1,ETH_ReadBlock@p+1
 17978                           
 17979                           ;j60_driver.c: 449: while(rxPacketStatusVector.byteCount && length)
 17980  005996  D01F               	goto	l8353
 17981  005998                     l8341:
 17982                           
 17983                           ; BSR set to: 2
 17984                           ;j60_driver.c: 450: {
 17985                           ;j60_driver.c: 451: *p++ = ETH_EdataRead();
 17986  005998  C01E  FFF6         	movff	ETH_ReadBlock@p,tblptrl
 17987  00599C  C01F  FFF7         	movff	ETH_ReadBlock@p+1,tblptrh
 17988  0059A0  0E00               	movlw	low (__smallconst shr (0+16))
 17989  0059A2  6EF8               	movwf	tblptru,c
 17990  0059A4                     i18L__ptext100:
 17991                           	opt stack 0
 17992  0059A4                     i18L_ETH_EdataRead:
 17993                           	opt stack 0
 17994  0059A4                     i18Ll7805:
 17995                           	opt stack 15
 17996  0059A4  CF61 FE7E          	movff	3937,_errataTemp	;# 
 17997  0059A8                     i18Ll7807:
 17998                           	opt stack 15
 17999                           
 18000                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
 18001  0059A8  010E               	movlb	14	; () banked
 18002  0059AA  517E               	movf	126,w,b
 18003  0059AC                     i18Ll460:
 18004                           	opt stack 17
 18005  0059AC  6E1B               	movwf	??_ETH_ReadBlock& (0+255),c
 18006  0059AE  0E0F               	movlw	(high __ramtop+-1)
 18007  0059B0  64F7               	cpfsgt	tblptrh,c
 18008  0059B2  D004               	bra	u11607
 18009  0059B4  C01B  FFF5         	movff	??_ETH_ReadBlock,tablat
 18010  0059B8  000C               	tblwt		*
 18011  0059BA  D004               	bra	u11600
 18012  0059BC                     u11607:
 18013  0059BC  EC6D  F011         	call	PL431	;call to abstracted procedure
 18014  0059C0  C01B  FFEF         	movff	??_ETH_ReadBlock,indf0
 18015  0059C4                     u11600:
 18016  0059C4  4A1E               	infsnz	ETH_ReadBlock@p,f,c
 18017  0059C6  2A1F               	incf	ETH_ReadBlock@p+1,f,c
 18018                           
 18019                           ;j60_driver.c: 452: len ++;
 18020  0059C8  4A1C               	infsnz	ETH_ReadBlock@len,f,c
 18021  0059CA  2A1D               	incf	ETH_ReadBlock@len+1,f,c
 18022                           
 18023                           ;j60_driver.c: 453: length --;
 18024  0059CC  0619               	decf	ETH_ReadBlock@length,f,c
 18025  0059CE  A0D8               	btfss	status,0,c
 18026  0059D0  061A               	decf	ETH_ReadBlock@length+1,f,c
 18027                           
 18028                           ;j60_driver.c: 454: rxPacketStatusVector.byteCount --;
 18029                           
 18030                           ; BSR set to: 2
 18031                           ;j60_driver.c: 455: ethData.error = 0;
 18032  0059D2  EC27  F030         	call	PL675	;call to abstracted procedure
 18033  0059D6                     l8353:
 18034  0059D6  0102               	movlb	2	; () banked
 18035  0059D8  512C               	movf	_rxPacketStatusVector& (0+255),w,b
 18036  0059DA  112D               	iorwf	(_rxPacketStatusVector+1)& (0+255),w,b
 18037  0059DC  E003               	bz	l544
 18038                           
 18039                           ; BSR set to: 2
 18040  0059DE  5019               	movf	ETH_ReadBlock@length,w,c
 18041  0059E0  101A               	iorwf	ETH_ReadBlock@length+1,w,c
 18042  0059E2  E1DA               	bnz	l8341
 18043  0059E4                     l544:
 18044                           
 18045                           ; BSR set to: 2
 18046                           ;j60_driver.c: 456: }
 18047                           ;j60_driver.c: 457: return len;
 18048  0059E4  C01C  F017         	movff	ETH_ReadBlock@len,?_ETH_ReadBlock
 18049  0059E8  C01D  F018         	movff	ETH_ReadBlock@len+1,?_ETH_ReadBlock+1
 18050                           
 18051                           ; BSR set to: 2
 18052  0059EC  0012               	return		;funcret
 18053  0059EE                     __end_of_ETH_ReadBlock:
 18054                           	opt stack 0
 18055                           tosu	equ	0xFFF
 18056                           tosh	equ	0xFFE
 18057                           tosl	equ	0xFFD
 18058                           pclath	equ	0xFFA
 18059                           tblptru	equ	0xFF8
 18060                           tblptrh	equ	0xFF7
 18061                           tblptrl	equ	0xFF6
 18062                           tablat	equ	0xFF5
 18063                           prodh	equ	0xFF4
 18064                           prodl	equ	0xFF3
 18065                           intcon	equ	0xFF2
 18066                           indf0	equ	0xFEF
 18067                           postinc0	equ	0xFEE
 18068                           fsr0h	equ	0xFEA
 18069                           fsr0l	equ	0xFE9
 18070                           wreg	equ	0xFE8
 18071                           postinc1	equ	0xFE6
 18072                           plusw1	equ	0xFE3
 18073                           fsr1h	equ	0xFE2
 18074                           fsr1l	equ	0xFE1
 18075                           bsr	equ	0xFE0
 18076                           indf2	equ	0xFDF
 18077                           postinc2	equ	0xFDE
 18078                           postdec2	equ	0xFDD
 18079                           plusw2	equ	0xFDB
 18080                           fsr2h	equ	0xFDA
 18081                           fsr2l	equ	0xFD9
 18082                           status	equ	0xFD8
 18083                           
 18084 ;; *************** function _ETH_EventHandler *****************
 18085 ;; Defined at:
 18086 ;;		line 215 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 18087 ;; Parameters:    Size  Location     Type
 18088 ;;		None
 18089 ;; Auto vars:     Size  Location     Type
 18090 ;;		None
 18091 ;; Return value:  Size  Location     Type
 18092 ;;		None               void
 18093 ;; Registers used:
 18094 ;;		wreg, status,2, status,0, cstack
 18095 ;; Tracked objects:
 18096 ;;		On entry : 0/2
 18097 ;;		On exit  : 0/0
 18098 ;;		Unchanged: 0/0
 18099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18104 ;;Total ram usage:        0 bytes
 18105 ;; Hardware stack levels used:    1
 18106 ;; Hardware stack levels required when called:   12
 18107 ;; This function calls:
 18108 ;;		_ETH_CheckLinkUp
 18109 ;;		_PHY_Read
 18110 ;; This function is called by:
 18111 ;;		_Network_Manage
 18112 ;; This function uses a non-reentrant model
 18113 ;;
 18114                           
 18115                           	psect	text64
 18116  005CC6                     __ptext64:
 18117                           	opt stack 0
 18118  005CC6                     _ETH_EventHandler:
 18119                           	opt stack 0
 18120                           
 18121                           ;j60_driver.c: 218: PIR2bits.ETHIF = 0;
 18122                           
 18123                           ; BSR set to: 2
 18124                           ;incstack = 0
 18125                           
 18126                           ;j60_driver.c: 219: if(EPKTCNT >= 3)
 18127  005CC6  D822               	call	PL785	;call to abstracted procedure
 18128  005CC8  65D9               	cpfsgt	217,b	;volatile
 18129  005CCA  D008               	goto	l484
 18130                           
 18131                           ; BSR set to: 14
 18132                           ;j60_driver.c: 222: if (EIRbits.LINKIF)
 18133  005CCC  A860               	btfss	3936,4,c	;volatile
 18134  005CCE  D006               	goto	l484
 18135                           
 18136                           ; BSR set to: 14
 18137                           ;j60_driver.c: 223: {
 18138                           ;j60_driver.c: 224: PHY_Read(PHIR);
 18139  005CD0  0E13               	movlw	19
 18140  005CD2  ECDD  F029         	call	_PHY_Read
 18141                           
 18142                           ; BSR set to: 14
 18143                           ;j60_driver.c: 226: ethData.linkChange = 1;
 18144                           
 18145                           ; BSR set to: 1
 18146                           ;j60_driver.c: 227: ethData.up = 0;
 18147  005CD6  D812               	call	PL775	;call to abstracted procedure
 18148                           
 18149                           ;j60_driver.c: 230: if(ETH_CheckLinkUp())
 18150  005CD8  ECE7  F02F         	call	_ETH_CheckLinkUp	;wreg free
 18151  005CDC                     l484:
 18152                           
 18153                           ;j60_driver.c: 233: }
 18154                           ;j60_driver.c: 234: }
 18155                           ;j60_driver.c: 236: if(EIRbits.RXERIF)
 18156  005CDC  B060               	btfsc	3936,0,c	;volatile
 18157                           
 18158                           ;j60_driver.c: 237: {
 18159                           ;j60_driver.c: 239: EIRbits.RXERIF = 0;
 18160  005CDE  9060               	bcf	3936,0,c	;volatile
 18161                           
 18162                           ;j60_driver.c: 240: }
 18163                           ;j60_driver.c: 242: if (EIRbits.TXERIF)
 18164  005CE0  B260               	btfsc	3936,1,c	;volatile
 18165                           
 18166                           ;j60_driver.c: 243: {
 18167                           ;j60_driver.c: 245: EIRbits.TXERIF = 0;
 18168  005CE2  9260               	bcf	3936,1,c	;volatile
 18169                           
 18170                           ;j60_driver.c: 246: }
 18171                           ;j60_driver.c: 248: if(EIRbits.TXIF)
 18172  005CE4  B660               	btfsc	3936,3,c	;volatile
 18173                           
 18174                           ;j60_driver.c: 249: {
 18175                           ;j60_driver.c: 251: EIRbits.TXIF = 0;
 18176                           
 18177                           ;j60_driver.c: 252: ethData.bufferBusy = 0;
 18178  005CE6  D80E               	call	PL783	;call to abstracted procedure
 18179  005CE8                     l489:
 18180                           
 18181                           ;j60_driver.c: 253: }
 18182                           ;j60_driver.c: 255: if (EIRbits.PKTIF)
 18183  005CE8  AC60               	btfss	3936,6,c	;volatile
 18184  005CEA  0012               	return	
 18185                           
 18186                           ;j60_driver.c: 256: {
 18187                           ;j60_driver.c: 257: if(ethData.pktReady == 0)
 18188  005CEC  0101               	movlb	1	; () banked
 18189  005CEE  B3BF               	btfsc	_ethData& (0+255),1,b	;volatile
 18190  005CF0  0012               	return	
 18191                           
 18192                           ; BSR set to: 1
 18193                           ;j60_driver.c: 258: {
 18194                           ;j60_driver.c: 260: ethData.pktReady = 1;
 18195                           
 18196                           ;j60_driver.c: 261: EIEbits.PKTIE = 0;
 18197  005CF2  D000               	goto	PL763	;call to abstracted procedure
 18198  005CF4                     __end_of_ETH_EventHandler:
 18199                           	opt stack 0
 18200  005CF4                     PL763:
 18201                           	opt stack 12
 18202  005CF4  83BF               	bsf	_ethData& (0+255),1,b	;volatile
 18203  005CF6  010E               	movlb	14	; () banked
 18204  005CF8  9DFB               	bcf	251,6,b	;volatile
 18205  005CFA  0012               	return		;funcret
 18206  005CFC                     __end_ofPL763:
 18207                           	opt stack 0
 18208  005CFC                     PL775:
 18209                           	opt stack 12
 18210  005CFC  0101               	movlb	1	; () banked
 18211  005CFE  89BF               	bsf	_ethData& (0+255),4,b	;volatile
 18212  005D00  95BF               	bcf	_ethData& (0+255),2,b	;volatile
 18213  005D02  0012               	return	
 18214  005D04                     __end_ofPL775:
 18215                           	opt stack 0
 18216  005D04                     PL783:
 18217                           	opt stack 12
 18218  005D04  9660               	bcf	3936,3,c	;volatile
 18219  005D06  0101               	movlb	1	; () banked
 18220  005D08  9BBF               	bcf	_ethData& (0+255),5,b	;volatile
 18221  005D0A  0012               	return	
 18222  005D0C                     __end_ofPL783:
 18223                           	opt stack 0
 18224  005D0C                     PL785:
 18225                           	opt stack 12
 18226  005D0C  9AA1               	bcf	4001,5,c	;volatile
 18227  005D0E  010E               	movlb	14	; () banked
 18228  005D10  0C02               	retlw	2
 18229  005D12                     __end_ofPL785:
 18230                           	opt stack 0
 18231                           tosu	equ	0xFFF
 18232                           tosh	equ	0xFFE
 18233                           tosl	equ	0xFFD
 18234                           pclath	equ	0xFFA
 18235                           tblptru	equ	0xFF8
 18236                           tblptrh	equ	0xFF7
 18237                           tblptrl	equ	0xFF6
 18238                           tablat	equ	0xFF5
 18239                           prodh	equ	0xFF4
 18240                           prodl	equ	0xFF3
 18241                           intcon	equ	0xFF2
 18242                           indf0	equ	0xFEF
 18243                           postinc0	equ	0xFEE
 18244                           fsr0h	equ	0xFEA
 18245                           fsr0l	equ	0xFE9
 18246                           wreg	equ	0xFE8
 18247                           postinc1	equ	0xFE6
 18248                           plusw1	equ	0xFE3
 18249                           fsr1h	equ	0xFE2
 18250                           fsr1l	equ	0xFE1
 18251                           bsr	equ	0xFE0
 18252                           indf2	equ	0xFDF
 18253                           postinc2	equ	0xFDE
 18254                           postdec2	equ	0xFDD
 18255                           plusw2	equ	0xFDB
 18256                           fsr2h	equ	0xFDA
 18257                           fsr2l	equ	0xFD9
 18258                           status	equ	0xFD8
 18259                           
 18260 ;; *************** function _DHCP_Manage *****************
 18261 ;; Defined at:
 18262 ;;		line 130 in file "../../TCPIP Library/source/dhcp_client.c"
 18263 ;; Parameters:    Size  Location     Type
 18264 ;;		None
 18265 ;; Auto vars:     Size  Location     Type
 18266 ;;		None
 18267 ;; Return value:  Size  Location     Type
 18268 ;;		None               void
 18269 ;; Registers used:
 18270 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 18271 ;; Tracked objects:
 18272 ;;		On entry : F/1
 18273 ;;		On exit  : E/0
 18274 ;;		Unchanged: 0/0
 18275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18280 ;;Total ram usage:        0 bytes
 18281 ;; Hardware stack levels used:    1
 18282 ;; Hardware stack levels required when called:   14
 18283 ;; This function calls:
 18284 ;;		_DHCP_Request
 18285 ;; This function is called by:
 18286 ;;		_Network_Manage
 18287 ;; This function uses a non-reentrant model
 18288 ;;
 18289                           
 18290                           	psect	text65
 18291  005894                     __ptext65:
 18292                           	opt stack 0
 18293  005894                     _DHCP_Manage:
 18294                           	opt stack 15
 18295                           
 18296                           ; BSR set to: 1
 18297                           ;dhcp_client.c: 132: if(ethData.linkChange)
 18298                           
 18299                           ;incstack = 0
 18300  005894  A9BF               	btfss	_ethData& (0+255),4,b	;volatile
 18301  005896  D015               	goto	l10035
 18302                           
 18303                           ; BSR set to: 1
 18304                           ;dhcp_client.c: 133: {
 18305                           ;dhcp_client.c: 134: if (clientState == BOUND && dhcpLeaseTime)
 18306  005898  0E05               	movlw	5
 18307  00589A  1848               	xorwf	_clientState,w,c
 18308  00589C  E10B               	bnz	l10029
 18309                           
 18310                           ; BSR set to: 1
 18311  00589E  D838               	call	PL703	;call to abstracted procedure
 18312  0058A0  E009               	bz	l10029
 18313                           
 18314                           ; BSR set to: 1
 18315                           ;dhcp_client.c: 135: {
 18316                           ;dhcp_client.c: 136: dhcpServerId = 0xFFFFFFFF;
 18317  0058A2  0102               	movlb	2	; () banked
 18318  0058A4  691C               	setf	_dhcpServerId& (0+255),b
 18319  0058A6  691D               	setf	(_dhcpServerId+1)& (0+255),b
 18320  0058A8  691E               	setf	(_dhcpServerId+2)& (0+255),b
 18321  0058AA  691F               	setf	(_dhcpServerId+3)& (0+255),b
 18322                           
 18323                           ; BSR set to: 2
 18324                           ;dhcp_client.c: 137: DHCP_Request(DHCP_REQUEST);
 18325  0058AC  0E03               	movlw	3
 18326  0058AE  EC32  F022         	call	_DHCP_Request
 18327                           
 18328                           ;dhcp_client.c: 138: }
 18329  0058B2  D004               	goto	l10033
 18330  0058B4                     l10029:
 18331                           
 18332                           ; BSR set to: 1
 18333                           ;dhcp_client.c: 139: else
 18334                           ;dhcp_client.c: 140: {
 18335                           ;dhcp_client.c: 141: clientState = INIT;
 18336  0058B4  0E01               	movlw	1
 18337  0058B6  6E48               	movwf	_clientState,c
 18338                           
 18339                           ; BSR set to: 1
 18340                           ;dhcp_client.c: 142: DHCP_Request(DHCP_DISCOVER);
 18341  0058B8  EC32  F022         	call	_DHCP_Request
 18342  0058BC                     l10033:
 18343                           
 18344                           ; BSR set to: 0
 18345                           ;dhcp_client.c: 143: }
 18346                           ;dhcp_client.c: 144: ethData.linkChange=0;
 18347  0058BC  0101               	movlb	1	; () banked
 18348  0058BE  99BF               	bcf	_ethData& (0+255),4,b	;volatile
 18349                           
 18350                           ;dhcp_client.c: 145: }
 18351  0058C0  0012               	return	
 18352  0058C2                     l10035:
 18353                           
 18354                           ; BSR set to: 1
 18355                           ;dhcp_client.c: 146: else if (clientState == INIT || clientState == INIT_REBOOT)
 18356  0058C2  0448               	decf	_clientState,w,c
 18357  0058C4  E003               	bz	l10039
 18358                           
 18359                           ; BSR set to: 1
 18360  0058C6  0E02               	movlw	2
 18361  0058C8  1848               	xorwf	_clientState,w,c
 18362  0058CA  E104               	bnz	l10043
 18363  0058CC                     l10039:
 18364                           
 18365                           ; BSR set to: 1
 18366                           ;dhcp_client.c: 147: {
 18367                           ;dhcp_client.c: 148: clientState = INIT;
 18368  0058CC  0E01               	movlw	1
 18369  0058CE  6E48               	movwf	_clientState,c
 18370                           
 18371                           ; BSR set to: 1
 18372                           ;dhcp_client.c: 149: DHCP_Request(DHCP_DISCOVER);
 18373  0058D0  EF32  F022         	goto	_DHCP_Request
 18374  0058D4                     l10043:
 18375                           
 18376                           ; BSR set to: 1
 18377                           ;dhcp_client.c: 151: else if ((dhcpLeaseTime < 100)&& clientState == BOUND)
 18378  0058D4  51C9               	movf	(_dhcpLeaseTime+3)& (0+255),w,b
 18379  0058D6  11C8               	iorwf	(_dhcpLeaseTime+2)& (0+255),w,b
 18380  0058D8  11C7               	iorwf	(_dhcpLeaseTime+1)& (0+255),w,b
 18381  0058DA  E109               	bnz	l10049
 18382  0058DC  0E64               	movlw	100
 18383  0058DE  5DC6               	subwf	_dhcpLeaseTime& (0+255),w,b
 18384  0058E0  E206               	bc	l10049
 18385                           
 18386                           ; BSR set to: 1
 18387  0058E2  0E05               	movlw	5
 18388  0058E4  1848               	xorwf	_clientState,w,c
 18389  0058E6  E103               	bnz	l10049
 18390                           
 18391                           ; BSR set to: 1
 18392                           ;dhcp_client.c: 152: {
 18393                           ;dhcp_client.c: 153: DHCP_Request(DHCP_REQUEST);
 18394  0058E8  0E03               	movlw	3
 18395  0058EA  EF32  F022         	goto	_DHCP_Request
 18396  0058EE                     l10049:
 18397                           
 18398                           ; BSR set to: 1
 18399                           ;dhcp_client.c: 155: else
 18400                           ;dhcp_client.c: 156: {
 18401                           ;dhcp_client.c: 157: if(clientState == BOUND && dhcpLeaseTime) dhcpLeaseTime --;
 18402  0058EE  0E05               	movlw	5
 18403  0058F0  1848               	xorwf	_clientState,w,c
 18404  0058F2  E108               	bnz	l10055
 18405                           
 18406                           ; BSR set to: 1
 18407  0058F4  D80D               	call	PL703	;call to abstracted procedure
 18408  0058F6  E006               	bz	l10055
 18409                           
 18410                           ; BSR set to: 1
 18411  0058F8  07C6               	decf	_dhcpLeaseTime& (0+255),f,b
 18412  0058FA  0E00               	movlw	0
 18413  0058FC  5BC7               	subwfb	(_dhcpLeaseTime+1)& (0+255),f,b
 18414  0058FE  5BC8               	subwfb	(_dhcpLeaseTime+2)& (0+255),f,b
 18415  005900  5BC9               	subwfb	(_dhcpLeaseTime+3)& (0+255),f,b
 18416  005902  0C00               	retlw	0
 18417  005904                     l10055:
 18418                           
 18419                           ; BSR set to: 1
 18420                           ;dhcp_client.c: 158: else if (!dhcpLeaseTime) clientState = INIT_REBOOT;
 18421  005904  D805               	call	PL703	;call to abstracted procedure
 18422  005906  A4D8               	btfss	status,2,c
 18423  005908  0012               	return	
 18424                           
 18425                           ; BSR set to: 1
 18426  00590A  0E02               	movlw	2
 18427  00590C  6E48               	movwf	_clientState,c
 18428  00590E  0C02               	retlw	2
 18429  005910                     __end_of_DHCP_Manage:
 18430                           	opt stack 0
 18431  005910                     PL703:
 18432                           	opt stack 15
 18433  005910  51C6               	movf	_dhcpLeaseTime& (0+255),w,b
 18434  005912  11C7               	iorwf	(_dhcpLeaseTime+1)& (0+255),w,b
 18435  005914  11C8               	iorwf	(_dhcpLeaseTime+2)& (0+255),w,b
 18436  005916  11C9               	iorwf	(_dhcpLeaseTime+3)& (0+255),w,b
 18437  005918  0012               	return	
 18438  00591A                     __end_ofPL703:
 18439                           	opt stack 0
 18440                           tosu	equ	0xFFF
 18441                           tosh	equ	0xFFE
 18442                           tosl	equ	0xFFD
 18443                           pclath	equ	0xFFA
 18444                           tblptru	equ	0xFF8
 18445                           tblptrh	equ	0xFF7
 18446                           tblptrl	equ	0xFF6
 18447                           tablat	equ	0xFF5
 18448                           prodh	equ	0xFF4
 18449                           prodl	equ	0xFF3
 18450                           intcon	equ	0xFF2
 18451                           indf0	equ	0xFEF
 18452                           postinc0	equ	0xFEE
 18453                           fsr0h	equ	0xFEA
 18454                           fsr0l	equ	0xFE9
 18455                           wreg	equ	0xFE8
 18456                           postinc1	equ	0xFE6
 18457                           plusw1	equ	0xFE3
 18458                           fsr1h	equ	0xFE2
 18459                           fsr1l	equ	0xFE1
 18460                           bsr	equ	0xFE0
 18461                           indf2	equ	0xFDF
 18462                           postinc2	equ	0xFDE
 18463                           postdec2	equ	0xFDD
 18464                           plusw2	equ	0xFDB
 18465                           fsr2h	equ	0xFDA
 18466                           fsr2l	equ	0xFD9
 18467                           status	equ	0xFD8
 18468                           
 18469 ;; *************** function _DHCP_Request *****************
 18470 ;; Defined at:
 18471 ;;		line 71 in file "../../TCPIP Library/source/dhcp_client.c"
 18472 ;; Parameters:    Size  Location     Type
 18473 ;;  type            1    wreg     enum E592
 18474 ;; Auto vars:     Size  Location     Type
 18475 ;;  type            1   72[BANK0 ] enum E592
 18476 ;;  ethMAC          6   73[BANK0 ] struct .
 18477 ;;  msglength       2    0        unsigned int 
 18478 ;;  started         1   71[BANK0 ] unsigned char 
 18479 ;; Return value:  Size  Location     Type
 18480 ;;		None               void
 18481 ;; Registers used:
 18482 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 18483 ;; Tracked objects:
 18484 ;;		On entry : C/0
 18485 ;;		On exit  : F/0
 18486 ;;		Unchanged: 0/0
 18487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18489 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18491 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18492 ;;Total ram usage:        8 bytes
 18493 ;; Hardware stack levels used:    1
 18494 ;; Hardware stack levels required when called:   13
 18495 ;; This function calls:
 18496 ;;		_DHCP_WriteZeros
 18497 ;;		_ETH_GetMAC
 18498 ;;		_ETH_Write16
 18499 ;;		_ETH_Write32
 18500 ;;		_ETH_Write8
 18501 ;;		_ETH_WriteBlock
 18502 ;;		_UDP_Send
 18503 ;;		_UDP_Start
 18504 ;; This function is called by:
 18505 ;;		_DHCP_Manage
 18506 ;;		_DHCP_Handler
 18507 ;; This function uses a non-reentrant model
 18508 ;;
 18509                           
 18510                           	psect	text66
 18511  004464                     __ptext66:
 18512                           	opt stack 0
 18513  004464                     _DHCP_Request:
 18514                           	opt stack 12
 18515                           
 18516                           ;incstack = 0
 18517                           ;DHCP_Request@type stored from wreg
 18518  004464  0100               	movlb	0	; () banked
 18519  004466  6FA8               	movwf	DHCP_Request@type& (0+255),b
 18520                           
 18521                           ;dhcp_client.c: 78: ETH_GetMAC((char*)&ethMAC);
 18522  004468  0EA9               	movlw	DHCP_Request@ethMAC& (0+255)
 18523  00446A  ECB1  F02F         	call	_ETH_GetMAC
 18524                           
 18525                           ;dhcp_client.c: 83: }
 18526                           ;dhcp_client.c: 85: started = UDP_Start(0xFFFFFFFF,68,67);
 18527  00446E  EC24  F029         	call	PL707	;call to abstracted procedure
 18528  004472  6BA4               	clrf	(UDP_Start@srcPort+1)& (0+255),b
 18529  004474  0E44               	movlw	68
 18530  004476  6FA3               	movwf	UDP_Start@srcPort& (0+255),b
 18531  004478  6BA6               	clrf	(UDP_Start@dstPort+1)& (0+255),b
 18532  00447A  0E43               	movlw	67
 18533  00447C  6FA5               	movwf	UDP_Start@dstPort& (0+255),b
 18534  00447E  ECC9  F02D         	call	_UDP_Start	;wreg free
 18535  004482  0100               	movlb	0	; () banked
 18536  004484  6FA7               	movwf	DHCP_Request@started& (0+255),b
 18537                           
 18538                           ; BSR set to: 0
 18539                           ;dhcp_client.c: 87: if(started==SUCCESS)
 18540  004486  05A7               	decf	DHCP_Request@started& (0+255),w,b
 18541  004488  A4D8               	btfss	status,2,c
 18542  00448A  0012               	return	
 18543                           
 18544                           ; BSR set to: 0
 18545                           ;dhcp_client.c: 88: {
 18546                           ;dhcp_client.c: 89: ETH_Write32(0x01010600);
 18547  00448C  6A17               	clrf	ETH_Write32@data,c
 18548  00448E  0E06               	movlw	6
 18549  004490  6E18               	movwf	ETH_Write32@data+1,c
 18550  004492  0E01               	movlw	1
 18551  004494  6E19               	movwf	ETH_Write32@data+2,c
 18552  004496  6E1A               	movwf	ETH_Write32@data+3,c
 18553  004498  ECC4  F031         	call	_ETH_Write32	;wreg free
 18554                           
 18555                           ;dhcp_client.c: 90: ETH_Write32(xidValue);
 18556  00449C  0E50               	movlw	80
 18557  00449E  6E17               	movwf	ETH_Write32@data,c
 18558  0044A0  0E48               	movlw	72
 18559  0044A2  6E18               	movwf	ETH_Write32@data+1,c
 18560  0044A4  0E43               	movlw	67
 18561  0044A6  6E19               	movwf	ETH_Write32@data+2,c
 18562  0044A8  0E4D               	movlw	77
 18563  0044AA  6E1A               	movwf	ETH_Write32@data+3,c
 18564  0044AC  ECC4  F031         	call	_ETH_Write32	;wreg free
 18565                           
 18566                           ;dhcp_client.c: 91: ETH_Write32(0x00008000);
 18567  0044B0  6A17               	clrf	ETH_Write32@data,c
 18568  0044B2  0E80               	movlw	128
 18569  0044B4  6E18               	movwf	ETH_Write32@data+1,c
 18570  0044B6  6A19               	clrf	ETH_Write32@data+2,c
 18571  0044B8  6A1A               	clrf	ETH_Write32@data+3,c
 18572  0044BA  ECC4  F031         	call	_ETH_Write32	;wreg free
 18573                           
 18574                           ;dhcp_client.c: 92: if (type == DHCP_REQUEST)
 18575  0044BE  0E03               	movlw	3
 18576  0044C0  0100               	movlb	0	; () banked
 18577  0044C2  19A8               	xorwf	DHCP_Request@type& (0+255),w,b
 18578  0044C4  E104               	bnz	l8595
 18579                           
 18580                           ; BSR set to: 0
 18581                           ;dhcp_client.c: 93: {
 18582                           ;dhcp_client.c: 94: ETH_Write32(0);
 18583  0044C6  D898               	call	PL671	;call to abstracted procedure
 18584  0044C8  ECC4  F031         	call	_ETH_Write32	;wreg free
 18585                           
 18586                           ;dhcp_client.c: 95: }
 18587  0044CC  D003               	goto	l764
 18588  0044CE                     l8595:
 18589                           
 18590                           ; BSR set to: 0
 18591                           ;dhcp_client.c: 96: else
 18592                           ;dhcp_client.c: 97: {
 18593                           ;dhcp_client.c: 98: ETH_Write32(ipv4Address);
 18594  0044CE  D88B               	call	PL561	;call to abstracted procedure
 18595  0044D0  ECC4  F031         	call	_ETH_Write32	;wreg free
 18596  0044D4                     l764:
 18597                           
 18598                           ;dhcp_client.c: 99: }
 18599                           ;dhcp_client.c: 100: ETH_Write32(0);
 18600  0044D4  D891               	call	PL671	;call to abstracted procedure
 18601  0044D6  ECC4  F031         	call	_ETH_Write32	;wreg free
 18602                           
 18603                           ;dhcp_client.c: 101: ETH_Write32(0);
 18604  0044DA  D88E               	call	PL671	;call to abstracted procedure
 18605  0044DC  ECC4  F031         	call	_ETH_Write32	;wreg free
 18606                           
 18607                           ;dhcp_client.c: 102: ETH_Write32(0);
 18608  0044E0  D88B               	call	PL671	;call to abstracted procedure
 18609  0044E2  ECC4  F031         	call	_ETH_Write32	;wreg free
 18610                           
 18611                           ;dhcp_client.c: 103: ETH_WriteBlock((char *)&ethMAC,6);
 18612  0044E6  D88D               	call	PL691	;call to abstracted procedure
 18613  0044E8  EC89  F02E         	call	_ETH_WriteBlock	;wreg free
 18614                           
 18615                           ;dhcp_client.c: 104: DHCP_WriteZeros(202);
 18616  0044EC  6A19               	clrf	DHCP_WriteZeros@length+1,c
 18617  0044EE  0ECA               	movlw	202
 18618  0044F0  6E18               	movwf	DHCP_WriteZeros@length,c
 18619  0044F2  ECDD  F031         	call	_DHCP_WriteZeros	;wreg free
 18620                           
 18621                           ;dhcp_client.c: 105: ETH_Write32(0x63825363);
 18622  0044F6  0E63               	movlw	99
 18623  0044F8  6E17               	movwf	ETH_Write32@data,c
 18624  0044FA  0E53               	movlw	83
 18625  0044FC  6E18               	movwf	ETH_Write32@data+1,c
 18626  0044FE  0E82               	movlw	130
 18627  004500  6E19               	movwf	ETH_Write32@data+2,c
 18628  004502  0E63               	movlw	99
 18629  004504  6E1A               	movwf	ETH_Write32@data+3,c
 18630  004506  ECC4  F031         	call	_ETH_Write32	;wreg free
 18631                           
 18632                           ;dhcp_client.c: 107: ETH_Write8(53);
 18633  00450A  0E35               	movlw	53
 18634  00450C  EC75  F032         	call	_ETH_Write8
 18635                           
 18636                           ;dhcp_client.c: 108: ETH_Write8(1);
 18637  004510  0E01               	movlw	1
 18638  004512  EC75  F032         	call	_ETH_Write8
 18639                           
 18640                           ;dhcp_client.c: 109: ETH_Write8(type);
 18641  004516  0100               	movlb	0	; () banked
 18642  004518  51A8               	movf	DHCP_Request@type& (0+255),w,b
 18643  00451A  EC75  F032         	call	_ETH_Write8
 18644                           
 18645                           ;dhcp_client.c: 110: if(type == DHCP_REQUEST)
 18646  00451E  0E03               	movlw	3
 18647  004520  0100               	movlb	0	; () banked
 18648  004522  19A8               	xorwf	DHCP_Request@type& (0+255),w,b
 18649  004524  E119               	bnz	l765
 18650                           
 18651                           ; BSR set to: 0
 18652                           ;dhcp_client.c: 111: {
 18653                           ;dhcp_client.c: 112: ETH_Write8(54);ETH_Write8(4);ETH_Write32(dhcpServerId);
 18654  004526  0E36               	movlw	54
 18655  004528  EC75  F032         	call	_ETH_Write8
 18656  00452C  0E04               	movlw	4
 18657  00452E  EC75  F032         	call	_ETH_Write8
 18658  004532  C21C  F017         	movff	_dhcpServerId,ETH_Write32@data
 18659  004536  C21D  F018         	movff	_dhcpServerId+1,ETH_Write32@data+1
 18660  00453A  C21E  F019         	movff	_dhcpServerId+2,ETH_Write32@data+2
 18661  00453E  C21F  F01A         	movff	_dhcpServerId+3,ETH_Write32@data+3
 18662  004542  ECC4  F031         	call	_ETH_Write32	;wreg free
 18663                           
 18664                           ;dhcp_client.c: 113: ETH_Write8(50);ETH_Write8(4);ETH_Write32(ipv4Address);
 18665  004546  0E32               	movlw	50
 18666  004548  EC75  F032         	call	_ETH_Write8
 18667  00454C  0E04               	movlw	4
 18668  00454E  EC75  F032         	call	_ETH_Write8
 18669  004552  D849               	call	PL561	;call to abstracted procedure
 18670  004554  ECC4  F031         	call	_ETH_Write32	;wreg free
 18671  004558                     l765:
 18672                           
 18673                           ;dhcp_client.c: 114: }
 18674                           ;dhcp_client.c: 115: ETH_Write8(55); ETH_Write8(4); ETH_Write8(1); ETH_Write8(3); ETH_Wr
      +                          ite8(6); ETH_Write8(15);
 18675  004558  0E37               	movlw	55
 18676  00455A  EC75  F032         	call	_ETH_Write8
 18677  00455E  0E04               	movlw	4
 18678  004560  EC75  F032         	call	_ETH_Write8
 18679  004564  0E01               	movlw	1
 18680  004566  EC75  F032         	call	_ETH_Write8
 18681  00456A  0E03               	movlw	3
 18682  00456C  EC75  F032         	call	_ETH_Write8
 18683  004570  0E06               	movlw	6
 18684  004572  EC75  F032         	call	_ETH_Write8
 18685  004576  0E0F               	movlw	15
 18686  004578  EC75  F032         	call	_ETH_Write8
 18687                           
 18688                           ;dhcp_client.c: 116: ETH_Write8(57); ETH_Write8(2); ETH_Write16(512);
 18689  00457C  0E39               	movlw	57
 18690  00457E  EC75  F032         	call	_ETH_Write8
 18691  004582  0E02               	movlw	2
 18692  004584  EC75  F032         	call	_ETH_Write8
 18693  004588  0E02               	movlw	2
 18694  00458A  6E18               	movwf	ETH_Write16@data+1,c
 18695  00458C  6A17               	clrf	ETH_Write16@data,c
 18696  00458E  EC4F  F032         	call	_ETH_Write16	;wreg free
 18697                           
 18698                           ;dhcp_client.c: 117: ETH_Write8(12); ETH_Write8(20); ETH_WriteBlock((char *)dhcpName,20)
      +                          ;
 18699  004592  0E0C               	movlw	12
 18700  004594  EC75  F032         	call	_ETH_Write8
 18701  004598  0E14               	movlw	20
 18702  00459A  EC75  F032         	call	_ETH_Write8
 18703  00459E  0E13               	movlw	low _dhcpName
 18704  0045A0  6E17               	movwf	ETH_WriteBlock@buffer,c
 18705  0045A2  5017               	movf	ETH_WriteBlock@buffer,w,c
 18706  0045A4  A4D8               	btfss	status,2,c
 18707  0045A6  0E10               	movlw	high __smallconst
 18708  0045A8  6E18               	movwf	ETH_WriteBlock@buffer+1,c
 18709  0045AA  EC44  F016         	call	PL771	;call to abstracted procedure
 18710  0045AE  EC89  F02E         	call	_ETH_WriteBlock	;wreg free
 18711                           
 18712                           ;dhcp_client.c: 119: ETH_Write8(61); ETH_Write8(7); ETH_Write8(1); ETH_WriteBlock((char 
      +                          *)&ethMAC,6);
 18713  0045B2  0E3D               	movlw	61
 18714  0045B4  EC75  F032         	call	_ETH_Write8
 18715  0045B8  0E07               	movlw	7
 18716  0045BA  EC75  F032         	call	_ETH_Write8
 18717  0045BE  0E01               	movlw	1
 18718  0045C0  EC75  F032         	call	_ETH_Write8
 18719  0045C4  D81E               	call	PL691	;call to abstracted procedure
 18720  0045C6  EC89  F02E         	call	_ETH_WriteBlock	;wreg free
 18721                           
 18722                           ;dhcp_client.c: 120: ETH_Write8(255);
 18723  0045CA  0EFF               	movlw	255
 18724  0045CC  EC75  F032         	call	_ETH_Write8
 18725                           
 18726                           ;dhcp_client.c: 122: ETH_Write8(0);
 18727  0045D0  0E00               	movlw	0
 18728  0045D2  EC75  F032         	call	_ETH_Write8
 18729                           
 18730                           ;dhcp_client.c: 124: UDP_Send();
 18731  0045D6  EC04  F02C         	call	_UDP_Send	;wreg free
 18732                           
 18733                           ; BSR set to: 0
 18734                           ;dhcp_client.c: 125: if (type == DHCP_DISCOVER)
 18735  0045DA  05A8               	decf	DHCP_Request@type& (0+255),w,b
 18736  0045DC  A4D8               	btfss	status,2,c
 18737  0045DE  0012               	return	
 18738                           
 18739                           ; BSR set to: 0
 18740                           ;dhcp_client.c: 126: clientState=SELECTING;
 18741  0045E0  0E03               	movlw	3
 18742  0045E2  6E48               	movwf	_clientState,c
 18743                           
 18744                           ; BSR set to: 0
 18745  0045E4  0C03               	retlw	3	;funcret
 18746  0045E6                     __end_of_DHCP_Request:
 18747                           	opt stack 0
 18748  0045E6                     PL561:
 18749                           	opt stack 12
 18750  0045E6  C037  F017         	movff	_ipv4Address,ETH_Write32@data
 18751  0045EA  C038  F018         	movff	_ipv4Address+1,ETH_Write32@data+1
 18752  0045EE  C039  F019         	movff	_ipv4Address+2,ETH_Write32@data+2
 18753  0045F2  C03A  F01A         	movff	_ipv4Address+3,ETH_Write32@data+3
 18754  0045F6  0012               	return	
 18755  0045F8                     __end_ofPL561:
 18756                           	opt stack 0
 18757  0045F8                     PL671:
 18758                           	opt stack 12
 18759  0045F8  6A17               	clrf	ETH_Write32@data,c
 18760  0045FA  6A18               	clrf	ETH_Write32@data+1,c
 18761  0045FC  6A19               	clrf	ETH_Write32@data+2,c
 18762  0045FE  6A1A               	clrf	ETH_Write32@data+3,c
 18763  004600  0012               	return	
 18764  004602                     __end_ofPL671:
 18765                           	opt stack 0
 18766  004602                     PL691:
 18767                           	opt stack 12
 18768  004602  0EA9               	movlw	low DHCP_Request@ethMAC
 18769  004604  6E17               	movwf	ETH_WriteBlock@buffer,c
 18770  004606  6A18               	clrf	ETH_WriteBlock@buffer+1,c
 18771  004608  6A1A               	clrf	ETH_WriteBlock@length+1,c
 18772  00460A  0E06               	movlw	6
 18773  00460C  6E19               	movwf	ETH_WriteBlock@length,c
 18774  00460E  0C06               	retlw	6
 18775  004610                     __end_ofPL691:
 18776                           	opt stack 0
 18777                           tosu	equ	0xFFF
 18778                           tosh	equ	0xFFE
 18779                           tosl	equ	0xFFD
 18780                           pclath	equ	0xFFA
 18781                           tblptru	equ	0xFF8
 18782                           tblptrh	equ	0xFF7
 18783                           tblptrl	equ	0xFF6
 18784                           tablat	equ	0xFF5
 18785                           prodh	equ	0xFF4
 18786                           prodl	equ	0xFF3
 18787                           intcon	equ	0xFF2
 18788                           indf0	equ	0xFEF
 18789                           postinc0	equ	0xFEE
 18790                           fsr0h	equ	0xFEA
 18791                           fsr0l	equ	0xFE9
 18792                           wreg	equ	0xFE8
 18793                           postinc1	equ	0xFE6
 18794                           plusw1	equ	0xFE3
 18795                           fsr1h	equ	0xFE2
 18796                           fsr1l	equ	0xFE1
 18797                           bsr	equ	0xFE0
 18798                           indf2	equ	0xFDF
 18799                           postinc2	equ	0xFDE
 18800                           postdec2	equ	0xFDD
 18801                           plusw2	equ	0xFDB
 18802                           fsr2h	equ	0xFDA
 18803                           fsr2l	equ	0xFD9
 18804                           status	equ	0xFD8
 18805                           
 18806 ;; *************** function _DHCP_WriteZeros *****************
 18807 ;; Defined at:
 18808 ;;		line 277 in file "../../TCPIP Library/source/dhcp_client.c"
 18809 ;; Parameters:    Size  Location     Type
 18810 ;;  length          2   23[COMRAM] unsigned int 
 18811 ;; Auto vars:     Size  Location     Type
 18812 ;;		None
 18813 ;; Return value:  Size  Location     Type
 18814 ;;		None               void
 18815 ;; Registers used:
 18816 ;;		wreg, status,2, status,0, cstack
 18817 ;; Tracked objects:
 18818 ;;		On entry : 0/0
 18819 ;;		On exit  : 0/0
 18820 ;;		Unchanged: 0/0
 18821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18822 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18825 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18826 ;;Total ram usage:        2 bytes
 18827 ;; Hardware stack levels used:    1
 18828 ;; Hardware stack levels required when called:   10
 18829 ;; This function calls:
 18830 ;;		_ETH_Write8
 18831 ;; This function is called by:
 18832 ;;		_DHCP_Request
 18833 ;; This function uses a non-reentrant model
 18834 ;;
 18835                           
 18836                           	psect	text67
 18837  0063BA                     __ptext67:
 18838                           	opt stack 0
 18839  0063BA                     _DHCP_WriteZeros:
 18840                           	opt stack 14
 18841                           
 18842                           ;dhcp_client.c: 279: while(length--)
 18843                           
 18844                           ; BSR set to: 0
 18845                           ;incstack = 0
 18846  0063BA  D003               	goto	l8385
 18847  0063BC                     l8383:
 18848                           
 18849                           ;dhcp_client.c: 280: {
 18850                           ;dhcp_client.c: 281: ETH_Write8(0);
 18851  0063BC  0E00               	movlw	0
 18852  0063BE  EC75  F032         	call	_ETH_Write8
 18853  0063C2                     l8385:
 18854  0063C2  0618               	decf	DHCP_WriteZeros@length,f,c
 18855  0063C4  A0D8               	btfss	status,0,c
 18856  0063C6  0619               	decf	DHCP_WriteZeros@length+1,f,c
 18857  0063C8  2818               	incf	DHCP_WriteZeros@length,w,c
 18858  0063CA  E1F8               	bnz	l8383
 18859  0063CC  2819               	incf	DHCP_WriteZeros@length+1,w,c
 18860  0063CE  E1F6               	bnz	l8383
 18861  0063D0  0012               	return		;funcret
 18862  0063D2                     __end_of_DHCP_WriteZeros:
 18863                           	opt stack 0
 18864                           tosu	equ	0xFFF
 18865                           tosh	equ	0xFFE
 18866                           tosl	equ	0xFFD
 18867                           pclath	equ	0xFFA
 18868                           tblptru	equ	0xFF8
 18869                           tblptrh	equ	0xFF7
 18870                           tblptrl	equ	0xFF6
 18871                           tablat	equ	0xFF5
 18872                           prodh	equ	0xFF4
 18873                           prodl	equ	0xFF3
 18874                           intcon	equ	0xFF2
 18875                           indf0	equ	0xFEF
 18876                           postinc0	equ	0xFEE
 18877                           fsr0h	equ	0xFEA
 18878                           fsr0l	equ	0xFE9
 18879                           wreg	equ	0xFE8
 18880                           postinc1	equ	0xFE6
 18881                           plusw1	equ	0xFE3
 18882                           fsr1h	equ	0xFE2
 18883                           fsr1l	equ	0xFE1
 18884                           bsr	equ	0xFE0
 18885                           indf2	equ	0xFDF
 18886                           postinc2	equ	0xFDE
 18887                           postdec2	equ	0xFDD
 18888                           plusw2	equ	0xFDB
 18889                           fsr2h	equ	0xFDA
 18890                           fsr2l	equ	0xFD9
 18891                           status	equ	0xFD8
 18892                           
 18893 ;; *************** function _ARPV4_Update *****************
 18894 ;; Defined at:
 18895 ;;		line 179 in file "../../TCPIP Library/source/arpv4.c"
 18896 ;; Parameters:    Size  Location     Type
 18897 ;;		None
 18898 ;; Auto vars:     Size  Location     Type
 18899 ;;  x               1   24[COMRAM] unsigned char 
 18900 ;;  entryPointer    2   22[COMRAM] PTR struct .
 18901 ;;		 -> arpMap(104), 
 18902 ;; Return value:  Size  Location     Type
 18903 ;;		None               void
 18904 ;; Registers used:
 18905 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18906 ;; Tracked objects:
 18907 ;;		On entry : F/1
 18908 ;;		On exit  : F/1
 18909 ;;		Unchanged: F/0
 18910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18912 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18914 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18915 ;;Total ram usage:        3 bytes
 18916 ;; Hardware stack levels used:    1
 18917 ;; Hardware stack levels required when called:    8
 18918 ;; This function calls:
 18919 ;;		Nothing
 18920 ;; This function is called by:
 18921 ;;		_Network_Manage
 18922 ;; This function uses a non-reentrant model
 18923 ;;
 18924                           
 18925                           	psect	text68
 18926  006194                     __ptext68:
 18927                           	opt stack 0
 18928  006194                     _ARPV4_Update:
 18929                           	opt stack 21
 18930                           
 18931                           ; BSR set to: 1
 18932                           ;arpv4.c: 181: arpMap_t *entryPointer = arpMap;
 18933                           
 18934                           ;incstack = 0
 18935  006194  0E34               	movlw	low _arpMap
 18936  006196  6E17               	movwf	ARPV4_Update@entryPointer,c
 18937  006198  0E02               	movlw	high _arpMap
 18938  00619A  6E18               	movwf	ARPV4_Update@entryPointer+1,c
 18939                           
 18940                           ; BSR set to: 1
 18941                           ;arpv4.c: 182: for(uint8_t x=0; x < 8; x++)
 18942  00619C  6A19               	clrf	ARPV4_Update@x,c
 18943  00619E                     l10011:
 18944                           
 18945                           ; BSR set to: 1
 18946                           ;arpv4.c: 183: {
 18947                           ;arpv4.c: 184: entryPointer->age ++;
 18948  00619E  EE20 F00C          	lfsr	2,12
 18949  0061A2  5017               	movf	ARPV4_Update@entryPointer,w,c
 18950  0061A4  26D9               	addwf	fsr2l,f,c
 18951  0061A6  5018               	movf	ARPV4_Update@entryPointer+1,w,c
 18952  0061A8  22DA               	addwfc	fsr2h,f,c
 18953  0061AA  2ADF               	incf	indf2,f,c
 18954                           
 18955                           ; BSR set to: 1
 18956                           ;arpv4.c: 185: entryPointer ++;
 18957  0061AC  0E0D               	movlw	13
 18958  0061AE  2617               	addwf	ARPV4_Update@entryPointer,f,c
 18959  0061B0  0E00               	movlw	0
 18960  0061B2  2218               	addwfc	ARPV4_Update@entryPointer+1,f,c
 18961                           
 18962                           ; BSR set to: 1
 18963  0061B4  2A19               	incf	ARPV4_Update@x,f,c
 18964                           
 18965                           ; BSR set to: 1
 18966  0061B6  0E07               	movlw	7
 18967  0061B8  6419               	cpfsgt	ARPV4_Update@x,c
 18968  0061BA  D7F1               	goto	l10011
 18969  0061BC  0C07               	retlw	7
 18970  0061BE                     __end_of_ARPV4_Update:
 18971                           	opt stack 0
 18972                           tosu	equ	0xFFF
 18973                           tosh	equ	0xFFE
 18974                           tosl	equ	0xFFD
 18975                           pclath	equ	0xFFA
 18976                           tblptru	equ	0xFF8
 18977                           tblptrh	equ	0xFF7
 18978                           tblptrl	equ	0xFF6
 18979                           tablat	equ	0xFF5
 18980                           prodh	equ	0xFF4
 18981                           prodl	equ	0xFF3
 18982                           intcon	equ	0xFF2
 18983                           indf0	equ	0xFEF
 18984                           postinc0	equ	0xFEE
 18985                           fsr0h	equ	0xFEA
 18986                           fsr0l	equ	0xFE9
 18987                           wreg	equ	0xFE8
 18988                           postinc1	equ	0xFE6
 18989                           plusw1	equ	0xFE3
 18990                           fsr1h	equ	0xFE2
 18991                           fsr1l	equ	0xFE1
 18992                           bsr	equ	0xFE0
 18993                           indf2	equ	0xFDF
 18994                           postinc2	equ	0xFDE
 18995                           postdec2	equ	0xFDD
 18996                           plusw2	equ	0xFDB
 18997                           fsr2h	equ	0xFDA
 18998                           fsr2l	equ	0xFD9
 18999                           status	equ	0xFD8
 19000                           
 19001 ;; *************** function _Network_Init *****************
 19002 ;; Defined at:
 19003 ;;		line 65 in file "../../TCPIP Library/source/network.c"
 19004 ;; Parameters:    Size  Location     Type
 19005 ;;		None
 19006 ;; Auto vars:     Size  Location     Type
 19007 ;;		None
 19008 ;; Return value:  Size  Location     Type
 19009 ;;		None               void
 19010 ;; Registers used:
 19011 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19012 ;; Tracked objects:
 19013 ;;		On entry : 0/2
 19014 ;;		On exit  : F/2
 19015 ;;		Unchanged: 0/0
 19016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19021 ;;Total ram usage:        0 bytes
 19022 ;; Hardware stack levels used:    1
 19023 ;; Hardware stack levels required when called:   13
 19024 ;; This function calls:
 19025 ;;		_ARPV4_Init
 19026 ;;		_ETH_Init
 19027 ;;		_IPV4_Init
 19028 ;;		_TCP_Init
 19029 ;;		_time
 19030 ;; This function is called by:
 19031 ;;		_main
 19032 ;; This function uses a non-reentrant model
 19033 ;;
 19034                           
 19035                           	psect	text69
 19036  00627A                     __ptext69:
 19037                           	opt stack 0
 19038  00627A                     _Network_Init:
 19039                           	opt stack 17
 19040                           
 19041                           ;network.c: 67: ETH_Init();
 19042                           
 19043                           ; BSR set to: 1
 19044                           ;incstack = 0
 19045  00627A  EC77  F026         	call	_ETH_Init	;wreg free
 19046                           
 19047                           ; BSR set to: 14
 19048                           ;network.c: 68: ARPV4_Init();
 19049  00627E  ECB7  F031         	call	_ARPV4_Init	;wreg free
 19050                           
 19051                           ; BSR set to: 14
 19052                           ;network.c: 69: IPV4_Init();
 19053  006282  EC70  F032         	call	_IPV4_Init	;wreg free
 19054                           
 19055                           ; BSR set to: 14
 19056                           ;network.c: 70: TCP_Init();
 19057  006286  EC28  F032         	call	_TCP_Init	;wreg free
 19058                           
 19059                           ; BSR set to: 2
 19060                           ;network.c: 72: time(&arpTimer);
 19061  00628A  0EB8               	movlw	low _arpTimer
 19062  00628C  6E17               	movwf	time@t,c
 19063  00628E  0E02               	movlw	high _arpTimer
 19064  006290  6E18               	movwf	time@t+1,c
 19065  006292  EC4F  F02D         	call	_time	;wreg free
 19066                           
 19067                           ;network.c: 73: arpTimer += 10;
 19068  006296  ECB5  F02B         	call	PL665	;call to abstracted procedure
 19069                           
 19070                           ; BSR set to: 2
 19071  00629A  0C00               	retlw	0	;funcret
 19072  00629C                     __end_of_Network_Init:
 19073                           	opt stack 0
 19074                           tosu	equ	0xFFF
 19075                           tosh	equ	0xFFE
 19076                           tosl	equ	0xFFD
 19077                           pclath	equ	0xFFA
 19078                           tblptru	equ	0xFF8
 19079                           tblptrh	equ	0xFF7
 19080                           tblptrl	equ	0xFF6
 19081                           tablat	equ	0xFF5
 19082                           prodh	equ	0xFF4
 19083                           prodl	equ	0xFF3
 19084                           intcon	equ	0xFF2
 19085                           indf0	equ	0xFEF
 19086                           postinc0	equ	0xFEE
 19087                           fsr0h	equ	0xFEA
 19088                           fsr0l	equ	0xFE9
 19089                           wreg	equ	0xFE8
 19090                           postinc1	equ	0xFE6
 19091                           plusw1	equ	0xFE3
 19092                           fsr1h	equ	0xFE2
 19093                           fsr1l	equ	0xFE1
 19094                           bsr	equ	0xFE0
 19095                           indf2	equ	0xFDF
 19096                           postinc2	equ	0xFDE
 19097                           postdec2	equ	0xFDD
 19098                           plusw2	equ	0xFDB
 19099                           fsr2h	equ	0xFDA
 19100                           fsr2l	equ	0xFD9
 19101                           status	equ	0xFD8
 19102                           
 19103 ;; *************** function _time *****************
 19104 ;; Defined at:
 19105 ;;		line 198 in file "../board_support_package/picdem2_net/rtcc.c"
 19106 ;; Parameters:    Size  Location     Type
 19107 ;;  t               2   22[COMRAM] PTR long 
 19108 ;;		 -> main@t(4), main@now_p(4), main@ip_timer(4), Network_Manage@now(4), 
 19109 ;;		 -> arpTimer(4), NULL(0), 
 19110 ;; Auto vars:     Size  Location     Type
 19111 ;;  the_time        4   27[COMRAM] long 
 19112 ;;  gie_val         1   26[COMRAM] unsigned char 
 19113 ;; Return value:  Size  Location     Type
 19114 ;;                  4   22[COMRAM] long 
 19115 ;; Registers used:
 19116 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19117 ;; Tracked objects:
 19118 ;;		On entry : 0/2
 19119 ;;		On exit  : 0/0
 19120 ;;		Unchanged: 0/0
 19121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19122 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19123 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19125 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19126 ;;Total ram usage:        9 bytes
 19127 ;; Hardware stack levels used:    1
 19128 ;; Hardware stack levels required when called:    8
 19129 ;; This function calls:
 19130 ;;		Nothing
 19131 ;; This function is called by:
 19132 ;;		_Network_Init
 19133 ;;		_Network_Manage
 19134 ;;		_SYSLOG_Init
 19135 ;;		_SYSLOG_Write
 19136 ;;		_main
 19137 ;; This function uses a non-reentrant model
 19138 ;;
 19139                           
 19140                           	psect	text70
 19141  005A9E                     __ptext70:
 19142                           	opt stack 0
 19143  005A9E                     _time:
 19144                           	opt stack 22
 19145                           
 19146                           ;rtcc.c: 200: bool gie_val;
 19147                           ;rtcc.c: 201: time_t the_time;
 19148                           ;rtcc.c: 203: gie_val = GIE;
 19149                           
 19150                           ; BSR set to: 2
 19151                           ;incstack = 0
 19152  005A9E  0E00               	movlw	0
 19153  005AA0  BEF2               	btfsc	intcon,7,c	;volatile
 19154  005AA2  0E01               	movlw	1
 19155  005AA4  6E1B               	movwf	time@gie_val,c
 19156                           
 19157                           ;rtcc.c: 204: GIE = 0;
 19158  005AA6  9EF2               	bcf	intcon,7,c	;volatile
 19159                           
 19160                           ;rtcc.c: 205: the_time = deviceTime;
 19161  005AA8  C2F3  F01C         	movff	_deviceTime,time@the_time	;volatile
 19162  005AAC  C2F4  F01D         	movff	_deviceTime+1,time@the_time+1	;volatile
 19163  005AB0  C2F5  F01E         	movff	_deviceTime+2,time@the_time+2	;volatile
 19164  005AB4  C2F6  F01F         	movff	_deviceTime+3,time@the_time+3	;volatile
 19165                           
 19166                           ;rtcc.c: 206: GIE = gie_val;
 19167  005AB8  A01B               	btfss	time@gie_val,0,c
 19168  005ABA  D002               	goto	u11460
 19169  005ABC  8EF2               	bsf	intcon,7,c	;volatile
 19170  005ABE  D001               	goto	l8217
 19171  005AC0                     u11460:
 19172  005AC0  9EF2               	bcf	intcon,7,c	;volatile
 19173  005AC2                     l8217:
 19174                           
 19175                           ;rtcc.c: 208: if(t)
 19176  005AC2  5017               	movf	time@t,w,c
 19177  005AC4  1018               	iorwf	time@t+1,w,c
 19178  005AC6  E00C               	bz	l8221
 19179                           
 19180                           ;rtcc.c: 209: {
 19181                           ;rtcc.c: 210: *t = the_time;
 19182  005AC8  C017  FFD9         	movff	time@t,fsr2l
 19183  005ACC  C018  FFDA         	movff	time@t+1,fsr2h
 19184  005AD0  C01C  FFDE         	movff	time@the_time,postinc2
 19185  005AD4  C01D  FFDE         	movff	time@the_time+1,postinc2
 19186  005AD8  C01E  FFDE         	movff	time@the_time+2,postinc2
 19187  005ADC  C01F  FFDE         	movff	time@the_time+3,postinc2
 19188  005AE0                     l8221:
 19189                           
 19190                           ;rtcc.c: 211: }
 19191                           ;rtcc.c: 213: return (the_time);
 19192  005AE0  C01C  F017         	movff	time@the_time,?_time
 19193  005AE4  C01D  F018         	movff	time@the_time+1,?_time+1
 19194  005AE8  C01E  F019         	movff	time@the_time+2,?_time+2
 19195  005AEC  C01F  F01A         	movff	time@the_time+3,?_time+3
 19196  005AF0  0012               	return		;funcret
 19197  005AF2                     __end_of_time:
 19198                           	opt stack 0
 19199                           tosu	equ	0xFFF
 19200                           tosh	equ	0xFFE
 19201                           tosl	equ	0xFFD
 19202                           pclath	equ	0xFFA
 19203                           tblptru	equ	0xFF8
 19204                           tblptrh	equ	0xFF7
 19205                           tblptrl	equ	0xFF6
 19206                           tablat	equ	0xFF5
 19207                           prodh	equ	0xFF4
 19208                           prodl	equ	0xFF3
 19209                           intcon	equ	0xFF2
 19210                           indf0	equ	0xFEF
 19211                           postinc0	equ	0xFEE
 19212                           fsr0h	equ	0xFEA
 19213                           fsr0l	equ	0xFE9
 19214                           wreg	equ	0xFE8
 19215                           postinc1	equ	0xFE6
 19216                           plusw1	equ	0xFE3
 19217                           fsr1h	equ	0xFE2
 19218                           fsr1l	equ	0xFE1
 19219                           bsr	equ	0xFE0
 19220                           indf2	equ	0xFDF
 19221                           postinc2	equ	0xFDE
 19222                           postdec2	equ	0xFDD
 19223                           plusw2	equ	0xFDB
 19224                           fsr2h	equ	0xFDA
 19225                           fsr2l	equ	0xFD9
 19226                           status	equ	0xFD8
 19227                           
 19228 ;; *************** function _TCP_Init *****************
 19229 ;; Defined at:
 19230 ;;		line 1173 in file "../../TCPIP Library/source/tcpv4.c"
 19231 ;; Parameters:    Size  Location     Type
 19232 ;;		None
 19233 ;; Auto vars:     Size  Location     Type
 19234 ;;		None
 19235 ;; Return value:  Size  Location     Type
 19236 ;;		None               void
 19237 ;; Registers used:
 19238 ;;		wreg, status,2
 19239 ;; Tracked objects:
 19240 ;;		On entry : F/E
 19241 ;;		On exit  : F/2
 19242 ;;		Unchanged: 0/0
 19243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19248 ;;Total ram usage:        0 bytes
 19249 ;; Hardware stack levels used:    1
 19250 ;; Hardware stack levels required when called:    8
 19251 ;; This function calls:
 19252 ;;		Nothing
 19253 ;; This function is called by:
 19254 ;;		_Network_Init
 19255 ;; This function uses a non-reentrant model
 19256 ;;
 19257                           
 19258                           	psect	text71
 19259  006450                     __ptext71:
 19260                           	opt stack 0
 19261  006450                     _TCP_Init:
 19262                           	opt stack 21
 19263                           
 19264                           ; BSR set to: 14
 19265                           ;tcpv4.c: 1175: tcbList = (0);
 19266                           
 19267                           ;incstack = 0
 19268  006450  0101               	movlb	1	; () banked
 19269  006452  6BCE               	clrf	_tcbList& (0+255),b
 19270  006454  6BCF               	clrf	(_tcbList+1)& (0+255),b
 19271                           
 19272                           ;tcpv4.c: 1176: tcbListSize = 0;
 19273  006456  6A47               	clrf	_tcbListSize,c
 19274                           
 19275                           ; BSR set to: 1
 19276                           ;tcpv4.c: 1178: nextSequenceNumber = 0;
 19277  006458  0E04               	movlw	4
 19278  00645A  0102               	movlb	2	; () banked
 19279  00645C  6F33               	movwf	(_nextAvailablePort+1)& (0+255),b
 19280  00645E  6B32               	clrf	_nextAvailablePort& (0+255),b
 19281                           
 19282                           ; BSR set to: 2
 19283  006460  0C00               	retlw	0	;funcret
 19284  006462                     __end_of_TCP_Init:
 19285                           	opt stack 0
 19286                           tosu	equ	0xFFF
 19287                           tosh	equ	0xFFE
 19288                           tosl	equ	0xFFD
 19289                           pclath	equ	0xFFA
 19290                           tblptru	equ	0xFF8
 19291                           tblptrh	equ	0xFF7
 19292                           tblptrl	equ	0xFF6
 19293                           tablat	equ	0xFF5
 19294                           prodh	equ	0xFF4
 19295                           prodl	equ	0xFF3
 19296                           intcon	equ	0xFF2
 19297                           indf0	equ	0xFEF
 19298                           postinc0	equ	0xFEE
 19299                           fsr0h	equ	0xFEA
 19300                           fsr0l	equ	0xFE9
 19301                           wreg	equ	0xFE8
 19302                           postinc1	equ	0xFE6
 19303                           plusw1	equ	0xFE3
 19304                           fsr1h	equ	0xFE2
 19305                           fsr1l	equ	0xFE1
 19306                           bsr	equ	0xFE0
 19307                           indf2	equ	0xFDF
 19308                           postinc2	equ	0xFDE
 19309                           postdec2	equ	0xFDD
 19310                           plusw2	equ	0xFDB
 19311                           fsr2h	equ	0xFDA
 19312                           fsr2l	equ	0xFD9
 19313                           status	equ	0xFD8
 19314                           
 19315 ;; *************** function _IPV4_Init *****************
 19316 ;; Defined at:
 19317 ;;		line 78 in file "../../TCPIP Library/source/ipv4.c"
 19318 ;; Parameters:    Size  Location     Type
 19319 ;;		None
 19320 ;; Auto vars:     Size  Location     Type
 19321 ;;		None
 19322 ;; Return value:  Size  Location     Type
 19323 ;;		None               void
 19324 ;; Registers used:
 19325 ;;		None
 19326 ;; Tracked objects:
 19327 ;;		On entry : F/E
 19328 ;;		On exit  : F/E
 19329 ;;		Unchanged: F/0
 19330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19335 ;;Total ram usage:        0 bytes
 19336 ;; Hardware stack levels used:    1
 19337 ;; Hardware stack levels required when called:    8
 19338 ;; This function calls:
 19339 ;;		Nothing
 19340 ;; This function is called by:
 19341 ;;		_Network_Init
 19342 ;; This function uses a non-reentrant model
 19343 ;;
 19344                           
 19345                           	psect	text72
 19346  0064E0                     __ptext72:
 19347                           	opt stack 0
 19348  0064E0                     _IPV4_Init:
 19349                           	opt stack 21
 19350                           
 19351                           ; BSR set to: 14
 19352                           ;ipv4.c: 80: ipv4Address = 0;
 19353                           
 19354                           ; BSR set to: 2
 19355                           ;incstack = 0
 19356  0064E0  6A37               	clrf	_ipv4Address,c
 19357  0064E2  6A38               	clrf	_ipv4Address+1,c
 19358  0064E4  6A39               	clrf	_ipv4Address+2,c
 19359  0064E6  6A3A               	clrf	_ipv4Address+3,c
 19360                           
 19361                           ; BSR set to: 14
 19362  0064E8  0012               	return		;funcret
 19363  0064EA                     __end_of_IPV4_Init:
 19364                           	opt stack 0
 19365                           tosu	equ	0xFFF
 19366                           tosh	equ	0xFFE
 19367                           tosl	equ	0xFFD
 19368                           pclath	equ	0xFFA
 19369                           tblptru	equ	0xFF8
 19370                           tblptrh	equ	0xFF7
 19371                           tblptrl	equ	0xFF6
 19372                           tablat	equ	0xFF5
 19373                           prodh	equ	0xFF4
 19374                           prodl	equ	0xFF3
 19375                           intcon	equ	0xFF2
 19376                           indf0	equ	0xFEF
 19377                           postinc0	equ	0xFEE
 19378                           fsr0h	equ	0xFEA
 19379                           fsr0l	equ	0xFE9
 19380                           wreg	equ	0xFE8
 19381                           postinc1	equ	0xFE6
 19382                           plusw1	equ	0xFE3
 19383                           fsr1h	equ	0xFE2
 19384                           fsr1l	equ	0xFE1
 19385                           bsr	equ	0xFE0
 19386                           indf2	equ	0xFDF
 19387                           postinc2	equ	0xFDE
 19388                           postdec2	equ	0xFDD
 19389                           plusw2	equ	0xFDB
 19390                           fsr2h	equ	0xFDA
 19391                           fsr2l	equ	0xFD9
 19392                           status	equ	0xFD8
 19393                           
 19394 ;; *************** function _ETH_Init *****************
 19395 ;; Defined at:
 19396 ;;		line 100 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 19397 ;; Parameters:    Size  Location     Type
 19398 ;;		None
 19399 ;; Auto vars:     Size  Location     Type
 19400 ;;  phycon1_valu    2    0        unsigned int 
 19401 ;;  mac             1   44[COMRAM] PTR const struct .
 19402 ;;		 -> macAddress(6), 
 19403 ;; Return value:  Size  Location     Type
 19404 ;;		None               void
 19405 ;; Registers used:
 19406 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19407 ;; Tracked objects:
 19408 ;;		On entry : 0/2
 19409 ;;		On exit  : F/E
 19410 ;;		Unchanged: 0/0
 19411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19413 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19414 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19415 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19416 ;;Total ram usage:        4 bytes
 19417 ;; Hardware stack levels used:    1
 19418 ;; Hardware stack levels required when called:   12
 19419 ;; This function calls:
 19420 ;;		_ETH_CheckLinkUp
 19421 ;;		_MAC_getAddress
 19422 ;;		_PHY_Write
 19423 ;; This function is called by:
 19424 ;;		_Network_Init
 19425 ;; This function uses a non-reentrant model
 19426 ;;
 19427                           
 19428                           	psect	text73
 19429  004CEE                     __ptext73:
 19430                           	opt stack 0
 19431  004CEE                     _ETH_Init:
 19432                           	opt stack 17
 19433                           
 19434                           ;j60_driver.c: 102: const mac48Address_t *mac;
 19435                           ;j60_driver.c: 103: uint16_t phycon1_value;
 19436                           ;j60_driver.c: 106: ethData.error = 0;
 19437                           
 19438                           ; BSR set to: 14
 19439                           ;incstack = 0
 19440  004CEE  0101               	movlb	1	; () banked
 19441  004CF0  91BF               	bcf	_ethData& (0+255),0,b	;volatile
 19442                           
 19443                           ;j60_driver.c: 107: ethData.up = 0;
 19444  004CF2  95BF               	bcf	_ethData& (0+255),2,b	;volatile
 19445                           
 19446                           ;j60_driver.c: 108: ethData.linkChange = 0;
 19447  004CF4  99BF               	bcf	_ethData& (0+255),4,b	;volatile
 19448                           
 19449                           ;j60_driver.c: 109: ethData.bufferBusy = 0;
 19450  004CF6  9BBF               	bcf	_ethData& (0+255),5,b	;volatile
 19451                           
 19452                           ;j60_driver.c: 110: ethData.saveRDPT = 0;
 19453  004CF8  6BC2               	clrf	(_ethData+3)& (0+255),b	;volatile
 19454  004CFA  6BC3               	clrf	(_ethData+4)& (0+255),b	;volatile
 19455                           
 19456                           ;j60_driver.c: 112: nextPacketPointer = (0);
 19457  004CFC  6A41               	clrf	_nextPacketPointer,c
 19458  004CFE  6A42               	clrf	_nextPacketPointer+1,c
 19459                           
 19460                           ; BSR set to: 1
 19461                           ;j60_driver.c: 115: ECON2 = 0xA0;
 19462  004D00  0EA0               	movlw	160
 19463  004D02  010E               	movlb	14	; () banked
 19464  004D04  6FFE               	movwf	254,b	;volatile
 19465  004D06                     l470:
 19466                           
 19467                           ; BSR set to: 14
 19468  004D06  A1FD               	btfss	253,0,b	;volatile
 19469  004D08  D7FE               	goto	l470
 19470                           
 19471                           ; BSR set to: 14
 19472                           ;j60_driver.c: 122: MACON1 = 0b00001101; __nop();
 19473  004D0A  0E0D               	movlw	13
 19474  004D0C  6FA0               	movwf	160,b	;volatile
 19475                           
 19476                           ; BSR set to: 14
 19477  004D0E  F000               	nop	
 19478                           
 19479                           ;j60_driver.c: 123: MACON3 = 0b10110011; __nop();
 19480  004D10  0EB3               	movlw	179
 19481  004D12  010E               	movlb	14	; () banked
 19482  004D14  6FA2               	movwf	162,b	;volatile
 19483                           
 19484                           ; BSR set to: 14
 19485  004D16  F000               	nop	
 19486                           
 19487                           ;j60_driver.c: 124: MACON4 = 0b00000000; __nop();
 19488  004D18  6BA3               	clrf	163,b	;volatile
 19489                           
 19490                           ; BSR set to: 14
 19491  004D1A  F000               	nop	
 19492                           
 19493                           ;j60_driver.c: 125: MABBIPG = 0x15; __nop();
 19494  004D1C  0E15               	movlw	21
 19495  004D1E  6FA4               	movwf	164,b	;volatile
 19496                           
 19497                           ; BSR set to: 14
 19498  004D20  F000               	nop	
 19499                           
 19500                           ;j60_driver.c: 126: MAIPG = 0x0012; __nop();
 19501  004D22  6BA7               	clrf	167,b	;volatile
 19502  004D24  0E12               	movlw	18
 19503  004D26  6FA6               	movwf	166,b	;volatile
 19504                           
 19505                           ; BSR set to: 14
 19506  004D28  F000               	nop	
 19507                           
 19508                           ;j60_driver.c: 142: ETXST = ((8192) - (1518));
 19509  004D2A  0E1A               	movlw	26
 19510  004D2C  6FE5               	movwf	229,b	;volatile
 19511  004D2E  0E12               	movlw	18
 19512  004D30  6FE4               	movwf	228,b	;volatile
 19513                           
 19514                           ;j60_driver.c: 143: ETXND = ((8192)-1);
 19515  004D32  0E1F               	movlw	31
 19516  004D34  6FE7               	movwf	231,b	;volatile
 19517  004D36  69E6               	setf	230,b	;volatile
 19518                           
 19519                           ; BSR set to: 14
 19520                           ;j60_driver.c: 144: ERXST = (0);
 19521  004D38  6BE8               	clrf	232,b	;volatile
 19522  004D3A  6BE9               	clrf	233,b	;volatile
 19523                           
 19524                           ;j60_driver.c: 145: ERXND = (((8192) - (1518)) - 2);
 19525  004D3C  0E1A               	movlw	26
 19526  004D3E  6FEB               	movwf	235,b	;volatile
 19527  004D40  0E10               	movlw	16
 19528  004D42  6FEA               	movwf	234,b	;volatile
 19529                           
 19530                           ; BSR set to: 14
 19531                           ;j60_driver.c: 148: ERDPT = (0);
 19532  004D44  6A7A               	clrf	3962,c	;volatile
 19533  004D46  6A7B               	clrf	3963,c	;volatile
 19534                           
 19535                           ;j60_driver.c: 149: EWRPT = ((8192) - (1518));
 19536  004D48  EC9D  F027         	call	PL765	;call to abstracted procedure
 19537                           
 19538                           ; BSR set to: 14
 19539                           ;j60_driver.c: 152: ERXRDPT = -1;
 19540  004D4C  69EC               	setf	236,b	;volatile
 19541  004D4E  69ED               	setf	237,b	;volatile
 19542                           
 19543                           ;j60_driver.c: 154: MAMXFL = (1518);
 19544  004D50  0E05               	movlw	5
 19545  004D52  6FAB               	movwf	171,b	;volatile
 19546  004D54  0EEE               	movlw	238
 19547  004D56  6FAA               	movwf	170,b	;volatile
 19548                           
 19549                           ; BSR set to: 14
 19550                           ;j60_driver.c: 157: mac = MAC_getAddress();
 19551  004D58  EC87  F032         	call	_MAC_getAddress	;wreg free
 19552  004D5C  6E2D               	movwf	ETH_Init@mac,c
 19553                           
 19554                           ; BSR set to: 14
 19555                           ;j60_driver.c: 158: MAADR1 = mac->mac_array[0]; __nop();
 19556  004D5E  C02D  FFF6         	movff	ETH_Init@mac,tblptrl
 19557  004D62                     	if	1	;There is more than 1 active tblptr byte
 19558  004D62  D851               	call	PL525	;call to abstracted procedure
 19559  004D64  CFF5 FE84          	movff	tablat,3716	;volatile
 19560                           
 19561                           ; BSR set to: 14
 19562  004D68  F000               	nop	
 19563                           
 19564                           ;j60_driver.c: 159: MAADR2 = mac->mac_array[1]; __nop();
 19565  004D6A  C02D  F02A         	movff	ETH_Init@mac,??_ETH_Init
 19566  004D6E  2A2A               	incf	??_ETH_Init,f,c
 19567  004D70  C02A  FFF6         	movff	??_ETH_Init,tblptrl
 19568  004D74                     	if	1	;There is more than 1 active tblptr byte
 19569  004D74  D848               	call	PL525	;call to abstracted procedure
 19570  004D76  CFF5 FE85          	movff	tablat,3717	;volatile
 19571  004D7A  F000               	nop	
 19572                           
 19573                           ;j60_driver.c: 160: MAADR3 = mac->mac_array[2]; __nop();
 19574  004D7C  C02D  F02A         	movff	ETH_Init@mac,??_ETH_Init
 19575  004D80  0E02               	movlw	2
 19576  004D82  D847               	call	PL535	;call to abstracted procedure
 19577  004D84  D840               	call	PL525	;call to abstracted procedure
 19578  004D86  CFF5 FE82          	movff	tablat,3714	;volatile
 19579  004D8A  F000               	nop	
 19580                           
 19581                           ;j60_driver.c: 161: MAADR4 = mac->mac_array[3]; __nop();
 19582  004D8C  C02D  F02A         	movff	ETH_Init@mac,??_ETH_Init
 19583  004D90  0E03               	movlw	3
 19584  004D92  D83F               	call	PL535	;call to abstracted procedure
 19585  004D94  D838               	call	PL525	;call to abstracted procedure
 19586  004D96  CFF5 FE83          	movff	tablat,3715	;volatile
 19587  004D9A  F000               	nop	
 19588                           
 19589                           ;j60_driver.c: 162: MAADR5 = mac->mac_array[4]; __nop();
 19590  004D9C  C02D  F02A         	movff	ETH_Init@mac,??_ETH_Init
 19591  004DA0  0E04               	movlw	4
 19592  004DA2  D837               	call	PL535	;call to abstracted procedure
 19593  004DA4  D830               	call	PL525	;call to abstracted procedure
 19594  004DA6  CFF5 FE80          	movff	tablat,3712	;volatile
 19595  004DAA  F000               	nop	
 19596                           
 19597                           ;j60_driver.c: 163: MAADR6 = mac->mac_array[5]; __nop();
 19598  004DAC  C02D  F02A         	movff	ETH_Init@mac,??_ETH_Init
 19599  004DB0  0E05               	movlw	5
 19600  004DB2  D82F               	call	PL535	;call to abstracted procedure
 19601  004DB4  D828               	call	PL525	;call to abstracted procedure
 19602  004DB6  CFF5 FE81          	movff	tablat,3713	;volatile
 19603  004DBA  F000               	nop	
 19604                           
 19605                           ;j60_driver.c: 167: ERXFCON = 0b10101011;
 19606  004DBC  0EAB               	movlw	171
 19607  004DBE  010E               	movlb	14	; () banked
 19608  004DC0  6FD8               	movwf	216,b	;volatile
 19609                           
 19610                           ; BSR set to: 14
 19611                           ;j60_driver.c: 170: ECON1=0x04;
 19612  004DC2  0E04               	movlw	4
 19613  004DC4  6ED2               	movwf	4050,c	;volatile
 19614                           
 19615                           ;j60_driver.c: 173: PHY_Write(PHCON1, phycon1_value);
 19616  004DC6  0E01               	movlw	1
 19617  004DC8  6E1A               	movwf	PHY_Write@data+1,c
 19618  004DCA  0E00               	movlw	0
 19619  004DCC  6A19               	clrf	PHY_Write@data,c
 19620  004DCE  ECA1  F02D         	call	_PHY_Write
 19621                           
 19622                           ;j60_driver.c: 174: PHY_Write(PHCON2, 0x0110);
 19623  004DD2  0E01               	movlw	1
 19624  004DD4  6E1A               	movwf	PHY_Write@data+1,c
 19625  004DD6  0E10               	movlw	16
 19626  004DD8  6E19               	movwf	PHY_Write@data,c
 19627  004DDA  ECA1  F02D         	call	_PHY_Write
 19628                           
 19629                           ;j60_driver.c: 175: PHY_Write(PHLCON, 0b01110101001010);
 19630  004DDE  0E1D               	movlw	29
 19631  004DE0  6E1A               	movwf	PHY_Write@data+1,c
 19632  004DE2  0E4A               	movlw	74
 19633  004DE4  6E19               	movwf	PHY_Write@data,c
 19634  004DE6  0E14               	movlw	20
 19635  004DE8  ECA1  F02D         	call	_PHY_Write
 19636                           
 19637                           ;j60_driver.c: 178: ETH_CheckLinkUp();
 19638  004DEC  ECE7  F02F         	call	_ETH_CheckLinkUp	;wreg free
 19639                           
 19640                           ;j60_driver.c: 181: EIE = 0b01011001;
 19641  004DF0  0E59               	movlw	89
 19642  004DF2  010E               	movlb	14	; () banked
 19643  004DF4  6FFB               	movwf	251,b	;volatile
 19644                           
 19645                           ; BSR set to: 14
 19646                           ;j60_driver.c: 182: PHY_Write(PHIE,0x0012);
 19647  004DF6  6A1A               	clrf	PHY_Write@data+1,c
 19648  004DF8  0E12               	movlw	18
 19649  004DFA  6E19               	movwf	PHY_Write@data,c
 19650  004DFC  ECA1  F02D         	call	_PHY_Write
 19651                           
 19652                           ; BSR set to: 14
 19653                           ;j60_driver.c: 185: IPR2bits.ETHIP = 0;
 19654  004E00  9AA2               	bcf	4002,5,c	;volatile
 19655                           
 19656                           ; BSR set to: 14
 19657                           ;j60_driver.c: 186: PIE2bits.ETHIE = 1;
 19658  004E02  8AA0               	bsf	4000,5,c	;volatile
 19659                           
 19660                           ; BSR set to: 14
 19661  004E04  0012               	return		;funcret
 19662  004E06                     __end_of_ETH_Init:
 19663                           	opt stack 0
 19664  004E06                     PL525:
 19665                           	opt stack 17
 19666  004E06  0E10               	movlw	high __smallconst
 19667  004E08  6EF7               	movwf	tblptrh,c
 19668  004E0A                     	endif
 19669  004E0A                     	if	0	;tblptru may be non-zero
 19670  004E0A                     	endif
 19671  004E0A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19672  004E0A  0E00               	movlw	low (__smallconst shr (0+16))
 19673  004E0C  6EF8               	movwf	tblptru,c
 19674  004E0E                     	endif
 19675  004E0E  0008               	tblrd		*
 19676  004E10  0012               	return	
 19677  004E12                     __end_ofPL525:
 19678                           	opt stack 0
 19679  004E12                     PL535:
 19680                           	opt stack 17
 19681  004E12  262A               	addwf	??_ETH_Init,f,c
 19682  004E14  C02A  FFF6         	movff	??_ETH_Init,tblptrl
 19683  004E18                     	if	1	;There is more than 1 active tblptr byte
 19684  004E18  0012               	return	
 19685  004E1A                     __end_ofPL535:
 19686                           	opt stack 0
 19687                           tosu	equ	0xFFF
 19688                           tosh	equ	0xFFE
 19689                           tosl	equ	0xFFD
 19690                           pclath	equ	0xFFA
 19691                           tblptru	equ	0xFF8
 19692                           tblptrh	equ	0xFF7
 19693                           tblptrl	equ	0xFF6
 19694                           tablat	equ	0xFF5
 19695                           prodh	equ	0xFF4
 19696                           prodl	equ	0xFF3
 19697                           intcon	equ	0xFF2
 19698                           indf0	equ	0xFEF
 19699                           postinc0	equ	0xFEE
 19700                           fsr0h	equ	0xFEA
 19701                           fsr0l	equ	0xFE9
 19702                           wreg	equ	0xFE8
 19703                           postinc1	equ	0xFE6
 19704                           plusw1	equ	0xFE3
 19705                           fsr1h	equ	0xFE2
 19706                           fsr1l	equ	0xFE1
 19707                           bsr	equ	0xFE0
 19708                           indf2	equ	0xFDF
 19709                           postinc2	equ	0xFDE
 19710                           postdec2	equ	0xFDD
 19711                           plusw2	equ	0xFDB
 19712                           fsr2h	equ	0xFDA
 19713                           fsr2l	equ	0xFD9
 19714                           status	equ	0xFD8
 19715                           
 19716 ;; *************** function _PHY_Write *****************
 19717 ;; Defined at:
 19718 ;;		line 317 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 19719 ;; Parameters:    Size  Location     Type
 19720 ;;  reg             1    wreg     enum E7098
 19721 ;;  data            2   24[COMRAM] unsigned int 
 19722 ;; Auto vars:     Size  Location     Type
 19723 ;;  reg             1   26[COMRAM] enum E7098
 19724 ;;  GIESave         1   27[COMRAM] unsigned char 
 19725 ;; Return value:  Size  Location     Type
 19726 ;;                  1    wreg      enum E7107
 19727 ;; Registers used:
 19728 ;;		wreg, status,2, status,0, cstack
 19729 ;; Tracked objects:
 19730 ;;		On entry : F/E
 19731 ;;		On exit  : F/E
 19732 ;;		Unchanged: 0/0
 19733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19734 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19735 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19737 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19738 ;;Total ram usage:        4 bytes
 19739 ;; Hardware stack levels used:    1
 19740 ;; Hardware stack levels required when called:    9
 19741 ;; This function calls:
 19742 ;;		_PHY_WaitForBusy
 19743 ;; This function is called by:
 19744 ;;		_ETH_Init
 19745 ;; This function uses a non-reentrant model
 19746 ;;
 19747                           
 19748                           	psect	text74
 19749  005B42                     __ptext74:
 19750                           	opt stack 0
 19751  005B42                     _PHY_Write:
 19752                           	opt stack 19
 19753                           
 19754                           ; BSR set to: 14
 19755                           ;incstack = 0
 19756                           ;PHY_Write@reg stored from wreg
 19757  005B42  6E1B               	movwf	PHY_Write@reg,c
 19758                           
 19759                           ;j60_driver.c: 319: uint8_t GIESave;
 19760                           ;j60_driver.c: 321: MIREGADR = reg;
 19761  005B44  C01B  FEB4         	movff	PHY_Write@reg,3764	;volatile
 19762                           
 19763                           ;j60_driver.c: 333: errataTemp = data;
 19764  005B48  C019  FE7E         	movff	PHY_Write@data,3710
 19765  005B4C  C01A  FE7F         	movff	PHY_Write@data+1,3711
 19766                           
 19767                           ;j60_driver.c: 334: GIESave = INTCON;
 19768  005B50  CFF2 F01C          	movff	intcon,PHY_Write@GIESave	;volatile
 19769                           
 19770                           ;j60_driver.c: 335: INTCON = 0;
 19771  005B54  6AF2               	clrf	intcon,c	;volatile
 19772                           
 19773                           ;j60_driver.c: 336: MIWR = errataTemp;
 19774  005B56  CE7E FEB6          	movff	3710,3766	;volatile
 19775  005B5A  CE7F FEB7          	movff	3711,3767	;volatile
 19776                           
 19777                           ;j60_driver.c: 337: INTCON = GIESave;
 19778  005B5E  C01C  FFF2         	movff	PHY_Write@GIESave,intcon	;volatile
 19779  005B62                     i19L__ptext79:
 19780                           	opt stack 0
 19781  005B62                     i19L_PHY_WaitForBusy:
 19782                           	opt stack 0
 19783  005B62                     i19Ll8499:
 19784                           	opt stack 18
 19785                           
 19786                           ;j60_driver.c: 300: phyError_t ret = NOERROR;
 19787  005B62  6A17               	clrf	PHY_WaitForBusy@ret,c
 19788                           
 19789                           ;j60_driver.c: 301: uint8_t timeout;
 19790                           ;j60_driver.c: 303: for(timeout = 0; timeout < 10;timeout++) __nop();
 19791  005B64  6A18               	clrf	PHY_WaitForBusy@timeout,c
 19792  005B66                     i19Ll504:
 19793                           	opt stack 18
 19794  005B66  F000               	nop	
 19795  005B68                     i19Ll8505:
 19796                           	opt stack 18
 19797  005B68  2A18               	incf	PHY_WaitForBusy@timeout,f,c
 19798  005B6A                     i19Ll8507:
 19799                           	opt stack 18
 19800  005B6A  0E09               	movlw	9
 19801  005B6C  6418               	cpfsgt	PHY_WaitForBusy@timeout,c
 19802  005B6E  D7FB               	goto	i19Ll504
 19803  005B70  D001               	goto	i19Lu12130
 19804  005B72                     i19Lu12131:
 19805                           	opt stack 0
 19806  005B72  D7F9               	goto	i19Ll504
 19807  005B74                     i19Lu12130:
 19808                           	opt stack 0
 19809  005B74                     i19Ll8509:
 19810                           	opt stack 18
 19811                           
 19812                           ;j60_driver.c: 304: timeout = 90;
 19813  005B74  0E5A               	movlw	90
 19814  005B76  6E18               	movwf	PHY_WaitForBusy@timeout,c
 19815  005B78  D001               	goto	i19Ll506
 19816  005B7A                     i19Ll507:
 19817                           	opt stack 18
 19818                           
 19819                           ; BSR set to: 14
 19820  005B7A  F000               	nop	
 19821  005B7C                     i19Ll506:
 19822                           	opt stack 18
 19823  005B7C  010E               	movlb	14	; () banked
 19824  005B7E  A18A               	btfss	138,0,b	;volatile
 19825  005B80                     i19Lu12141:
 19826                           	opt stack 0
 19827  005B80  D002               	goto	i19Ll8513
 19828  005B82                     i19Lu12140:
 19829                           	opt stack 0
 19830  005B82                     i19Ll8511:
 19831                           	opt stack 18
 19832                           
 19833                           ; BSR set to: 14
 19834  005B82  2E18               	decfsz	PHY_WaitForBusy@timeout,f,c
 19835  005B84  D7FA               	goto	i19Ll507
 19836  005B86                     i19Ll8513:
 19837                           	opt stack 18
 19838                           
 19839                           ; BSR set to: 14
 19840                           ;j60_driver.c: 307: if(timeout == 0) ret = BUSY_TIMEOUT;
 19841  005B86  5018               	movf	PHY_WaitForBusy@timeout,w,c
 19842  005B88  A4D8               	btfss	status,2,c
 19843  005B8A                     i19Lu12151:
 19844                           	opt stack 0
 19845  005B8A  D001               	goto	i19Ll8517
 19846  005B8C                     i19Lu12150:
 19847                           	opt stack 0
 19848  005B8C                     i19Ll8515:
 19849                           	opt stack 18
 19850                           
 19851                           ; BSR set to: 14
 19852  005B8C  6817               	setf	PHY_WaitForBusy@ret,c
 19853  005B8E                     i19Ll8517:
 19854                           	opt stack 18
 19855                           
 19856                           ; BSR set to: 14
 19857                           ;j60_driver.c: 308: return ret;
 19858  005B8E  5017               	movf	PHY_WaitForBusy@ret,w,c
 19859  005B90                     i19Ll512:
 19860                           	opt stack 0
 19861  005B90  0012               	return	
 19862  005B92                     __end_of_PHY_Write:
 19863                           	opt stack 0
 19864                           tosu	equ	0xFFF
 19865                           tosh	equ	0xFFE
 19866                           tosl	equ	0xFFD
 19867                           pclath	equ	0xFFA
 19868                           tblptru	equ	0xFF8
 19869                           tblptrh	equ	0xFF7
 19870                           tblptrl	equ	0xFF6
 19871                           tablat	equ	0xFF5
 19872                           prodh	equ	0xFF4
 19873                           prodl	equ	0xFF3
 19874                           intcon	equ	0xFF2
 19875                           indf0	equ	0xFEF
 19876                           postinc0	equ	0xFEE
 19877                           fsr0h	equ	0xFEA
 19878                           fsr0l	equ	0xFE9
 19879                           wreg	equ	0xFE8
 19880                           postinc1	equ	0xFE6
 19881                           plusw1	equ	0xFE3
 19882                           fsr1h	equ	0xFE2
 19883                           fsr1l	equ	0xFE1
 19884                           bsr	equ	0xFE0
 19885                           indf2	equ	0xFDF
 19886                           postinc2	equ	0xFDE
 19887                           postdec2	equ	0xFDD
 19888                           plusw2	equ	0xFDB
 19889                           fsr2h	equ	0xFDA
 19890                           fsr2l	equ	0xFD9
 19891                           status	equ	0xFD8
 19892                           
 19893 ;; *************** function _MAC_getAddress *****************
 19894 ;; Defined at:
 19895 ;;		line 46 in file "../../TCPIP Library/source/mac_address.c"
 19896 ;; Parameters:    Size  Location     Type
 19897 ;;		None
 19898 ;; Auto vars:     Size  Location     Type
 19899 ;;		None
 19900 ;; Return value:  Size  Location     Type
 19901 ;;                  1    wreg      PTR const struct .
 19902 ;; Registers used:
 19903 ;;		wreg
 19904 ;; Tracked objects:
 19905 ;;		On entry : F/E
 19906 ;;		On exit  : F/E
 19907 ;;		Unchanged: F/0
 19908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19909 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19912 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19913 ;;Total ram usage:        2 bytes
 19914 ;; Hardware stack levels used:    1
 19915 ;; Hardware stack levels required when called:    8
 19916 ;; This function calls:
 19917 ;;		Nothing
 19918 ;; This function is called by:
 19919 ;;		_ETH_Init
 19920 ;; This function uses a non-reentrant model
 19921 ;;
 19922                           
 19923                           	psect	text75
 19924  00650E                     __ptext75:
 19925                           	opt stack 0
 19926  00650E                     _MAC_getAddress:
 19927                           	opt stack 20
 19928                           
 19929                           ; BSR set to: 14
 19930                           ;mac_address.c: 48: return &macAddress;
 19931                           
 19932                           ; BSR set to: 14
 19933                           ;incstack = 0
 19934  00650E  0E3D               	movlw	_macAddress& (0+255)
 19935                           
 19936                           ; BSR set to: 14
 19937  006510  0012               	return		;funcret
 19938  006512                     __end_of_MAC_getAddress:
 19939                           	opt stack 0
 19940                           tosu	equ	0xFFF
 19941                           tosh	equ	0xFFE
 19942                           tosl	equ	0xFFD
 19943                           pclath	equ	0xFFA
 19944                           tblptru	equ	0xFF8
 19945                           tblptrh	equ	0xFF7
 19946                           tblptrl	equ	0xFF6
 19947                           tablat	equ	0xFF5
 19948                           prodh	equ	0xFF4
 19949                           prodl	equ	0xFF3
 19950                           intcon	equ	0xFF2
 19951                           indf0	equ	0xFEF
 19952                           postinc0	equ	0xFEE
 19953                           fsr0h	equ	0xFEA
 19954                           fsr0l	equ	0xFE9
 19955                           wreg	equ	0xFE8
 19956                           postinc1	equ	0xFE6
 19957                           plusw1	equ	0xFE3
 19958                           fsr1h	equ	0xFE2
 19959                           fsr1l	equ	0xFE1
 19960                           bsr	equ	0xFE0
 19961                           indf2	equ	0xFDF
 19962                           postinc2	equ	0xFDE
 19963                           postdec2	equ	0xFDD
 19964                           plusw2	equ	0xFDB
 19965                           fsr2h	equ	0xFDA
 19966                           fsr2l	equ	0xFD9
 19967                           status	equ	0xFD8
 19968                           
 19969 ;; *************** function _ETH_CheckLinkUp *****************
 19970 ;; Defined at:
 19971 ;;		line 198 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 19972 ;; Parameters:    Size  Location     Type
 19973 ;;		None
 19974 ;; Auto vars:     Size  Location     Type
 19975 ;;  value           4   37[COMRAM] unsigned long 
 19976 ;; Return value:  Size  Location     Type
 19977 ;;                  1    wreg      unsigned char 
 19978 ;; Registers used:
 19979 ;;		wreg, status,2, status,0, cstack
 19980 ;; Tracked objects:
 19981 ;;		On entry : 0/2
 19982 ;;		On exit  : 0/0
 19983 ;;		Unchanged: 0/0
 19984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19986 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19988 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19989 ;;Total ram usage:        4 bytes
 19990 ;; Hardware stack levels used:    1
 19991 ;; Hardware stack levels required when called:   11
 19992 ;; This function calls:
 19993 ;;		_ETH_readLinkStatus
 19994 ;; This function is called by:
 19995 ;;		_ETH_Init
 19996 ;;		_ETH_EventHandler
 19997 ;;		_Network_WaitForLink
 19998 ;; This function uses a non-reentrant model
 19999 ;;
 20000                           
 20001                           	psect	text76
 20002  005FCE                     __ptext76:
 20003                           	opt stack 0
 20004  005FCE                     _ETH_CheckLinkUp:
 20005                           	opt stack 0
 20006  005FCE                     i20L__ptext77:
 20007                           	opt stack 0
 20008  005FCE                     i20L_ETH_readLinkStatus:
 20009                           	opt stack 0
 20010  005FCE                     i20Ll9475:
 20011                           	opt stack 18
 20012                           
 20013                           ;j60_driver.c: 195: return (PHY_Read(PHSTAT2));
 20014  005FCE  0E11               	movlw	17
 20015  005FD0  ECDD  F029         	call	_PHY_Read
 20016  005FD4  C019  F022         	movff	?_PHY_Read,?_ETH_readLinkStatus
 20017  005FD8  C01A  F023         	movff	?_PHY_Read+1,?_ETH_readLinkStatus+1
 20018  005FDC  C01B  F024         	movff	?_PHY_Read+2,?_ETH_readLinkStatus+2
 20019  005FE0  C01C  F025         	movff	?_PHY_Read+3,?_ETH_readLinkStatus+3
 20020  005FE4                     i20Ll476:
 20021                           	opt stack 18
 20022  005FE4  C022  F026         	movff	?_ETH_readLinkStatus,ETH_CheckLinkUp@value
 20023  005FE8  C023  F027         	movff	?_ETH_readLinkStatus+1,ETH_CheckLinkUp@value+1
 20024  005FEC  C024  F028         	movff	?_ETH_readLinkStatus+2,ETH_CheckLinkUp@value+2
 20025  005FF0  C025  F029         	movff	?_ETH_readLinkStatus+3,ETH_CheckLinkUp@value+3
 20026                           
 20027                           ; BSR set to: 14
 20028                           ;j60_driver.c: 203: if(value & 0x0400)
 20029  005FF4  A427               	btfss	ETH_CheckLinkUp@value+1,2,c
 20030  005FF6  0C00               	retlw	0
 20031                           
 20032                           ; BSR set to: 14
 20033                           ;j60_driver.c: 204: {
 20034                           ;j60_driver.c: 205: ethData.up = 1;
 20035                           
 20036                           ; BSR set to: 1
 20037                           ;j60_driver.c: 206: return 1;
 20038  005FF8  D000               	goto	PL781	;call to abstracted procedure
 20039  005FFA                     __end_of_ETH_CheckLinkUp:
 20040                           	opt stack 0
 20041  005FFA                     PL781:
 20042                           	opt stack 12
 20043  005FFA  0101               	movlb	1	; () banked
 20044  005FFC  85BF               	bsf	_ethData& (0+255),2,b	;volatile
 20045  005FFE  0C01               	retlw	1
 20046  006000                     __end_ofPL781:
 20047                           	opt stack 0
 20048                           tosu	equ	0xFFF
 20049                           tosh	equ	0xFFE
 20050                           tosl	equ	0xFFD
 20051                           pclath	equ	0xFFA
 20052                           tblptru	equ	0xFF8
 20053                           tblptrh	equ	0xFF7
 20054                           tblptrl	equ	0xFF6
 20055                           tablat	equ	0xFF5
 20056                           prodh	equ	0xFF4
 20057                           prodl	equ	0xFF3
 20058                           intcon	equ	0xFF2
 20059                           indf0	equ	0xFEF
 20060                           postinc0	equ	0xFEE
 20061                           fsr0h	equ	0xFEA
 20062                           fsr0l	equ	0xFE9
 20063                           wreg	equ	0xFE8
 20064                           postinc1	equ	0xFE6
 20065                           plusw1	equ	0xFE3
 20066                           fsr1h	equ	0xFE2
 20067                           fsr1l	equ	0xFE1
 20068                           bsr	equ	0xFE0
 20069                           indf2	equ	0xFDF
 20070                           postinc2	equ	0xFDE
 20071                           postdec2	equ	0xFDD
 20072                           plusw2	equ	0xFDB
 20073                           fsr2h	equ	0xFDA
 20074                           fsr2l	equ	0xFD9
 20075                           status	equ	0xFD8
 20076                           
 20077 ;; *************** function _ETH_readLinkStatus *****************
 20078 ;; Defined at:
 20079 ;;		line 193 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 20080 ;; Parameters:    Size  Location     Type
 20081 ;;		None
 20082 ;; Auto vars:     Size  Location     Type
 20083 ;;		None
 20084 ;; Return value:  Size  Location     Type
 20085 ;;                  4   33[COMRAM] unsigned long 
 20086 ;; Registers used:
 20087 ;;		wreg, status,2, status,0, cstack
 20088 ;; Tracked objects:
 20089 ;;		On entry : 0/2
 20090 ;;		On exit  : F/E
 20091 ;;		Unchanged: 0/0
 20092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20093 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20096 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20097 ;;Total ram usage:        4 bytes
 20098 ;; Hardware stack levels used:    1
 20099 ;; Hardware stack levels required when called:   10
 20100 ;; This function calls:
 20101 ;;		_PHY_Read
 20102 ;; This function is called by:
 20103 ;;		_ETH_CheckLinkUp
 20104 ;; This function uses a non-reentrant model
 20105 ;;
 20106                           
 20107                           	psect	text77
 20108  000000                     __ptext77:
 20109                           	opt stack 0
 20110  000000                     _ETH_readLinkStatus:
 20111                           	opt stack 0
 20112  000000                     __end_of_ETH_readLinkStatus:
 20113                           	opt stack 0
 20114                           tosu	equ	0xFFF
 20115                           tosh	equ	0xFFE
 20116                           tosl	equ	0xFFD
 20117                           pclath	equ	0xFFA
 20118                           tblptru	equ	0xFF8
 20119                           tblptrh	equ	0xFF7
 20120                           tblptrl	equ	0xFF6
 20121                           tablat	equ	0xFF5
 20122                           prodh	equ	0xFF4
 20123                           prodl	equ	0xFF3
 20124                           intcon	equ	0xFF2
 20125                           indf0	equ	0xFEF
 20126                           postinc0	equ	0xFEE
 20127                           fsr0h	equ	0xFEA
 20128                           fsr0l	equ	0xFE9
 20129                           wreg	equ	0xFE8
 20130                           postinc1	equ	0xFE6
 20131                           plusw1	equ	0xFE3
 20132                           fsr1h	equ	0xFE2
 20133                           fsr1l	equ	0xFE1
 20134                           bsr	equ	0xFE0
 20135                           indf2	equ	0xFDF
 20136                           postinc2	equ	0xFDE
 20137                           postdec2	equ	0xFDD
 20138                           plusw2	equ	0xFDB
 20139                           fsr2h	equ	0xFDA
 20140                           fsr2l	equ	0xFD9
 20141                           status	equ	0xFD8
 20142                           
 20143 ;; *************** function _PHY_Read *****************
 20144 ;; Defined at:
 20145 ;;		line 350 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 20146 ;; Parameters:    Size  Location     Type
 20147 ;;  reg             1    wreg     enum E7098
 20148 ;; Auto vars:     Size  Location     Type
 20149 ;;  reg             1   28[COMRAM] enum E7098
 20150 ;;  ret             4   29[COMRAM] long 
 20151 ;; Return value:  Size  Location     Type
 20152 ;;                  4   24[COMRAM] long 
 20153 ;; Registers used:
 20154 ;;		wreg, status,2, status,0, cstack
 20155 ;; Tracked objects:
 20156 ;;		On entry : 0/E
 20157 ;;		On exit  : F/E
 20158 ;;		Unchanged: 0/0
 20159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20160 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20161 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20163 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20164 ;;Total ram usage:        9 bytes
 20165 ;; Hardware stack levels used:    1
 20166 ;; Hardware stack levels required when called:    9
 20167 ;; This function calls:
 20168 ;;		_PHY_WaitForBusy
 20169 ;; This function is called by:
 20170 ;;		_ETH_readLinkStatus
 20171 ;;		_ETH_EventHandler
 20172 ;; This function uses a non-reentrant model
 20173 ;;
 20174                           
 20175                           	psect	text78
 20176  0053BA                     __ptext78:
 20177                           	opt stack 0
 20178  0053BA                     _PHY_Read:
 20179                           	opt stack 18
 20180                           
 20181                           ; BSR set to: 14
 20182                           ;incstack = 0
 20183                           ;PHY_Read@reg stored from wreg
 20184  0053BA  6E1D               	movwf	PHY_Read@reg,c
 20185  0053BC                     i21L__ptext79:
 20186                           	opt stack 0
 20187  0053BC                     i21L_PHY_WaitForBusy:
 20188                           	opt stack 0
 20189  0053BC                     i21Ll8499:
 20190                           	opt stack 18
 20191                           
 20192                           ;j60_driver.c: 300: phyError_t ret = NOERROR;
 20193  0053BC  6A17               	clrf	PHY_WaitForBusy@ret,c
 20194                           
 20195                           ;j60_driver.c: 301: uint8_t timeout;
 20196                           ;j60_driver.c: 303: for(timeout = 0; timeout < 10;timeout++) __nop();
 20197  0053BE  6A18               	clrf	PHY_WaitForBusy@timeout,c
 20198  0053C0                     i21Ll504:
 20199                           	opt stack 18
 20200  0053C0  F000               	nop	
 20201  0053C2                     i21Ll8505:
 20202                           	opt stack 18
 20203  0053C2  2A18               	incf	PHY_WaitForBusy@timeout,f,c
 20204  0053C4                     i21Ll8507:
 20205                           	opt stack 18
 20206  0053C4  0E09               	movlw	9
 20207  0053C6  6418               	cpfsgt	PHY_WaitForBusy@timeout,c
 20208  0053C8  D7FB               	goto	i21Ll504
 20209  0053CA  D001               	goto	i21Lu12130
 20210  0053CC                     i21Lu12131:
 20211                           	opt stack 0
 20212  0053CC  D7F9               	goto	i21Ll504
 20213  0053CE                     i21Lu12130:
 20214                           	opt stack 0
 20215  0053CE                     i21Ll8509:
 20216                           	opt stack 18
 20217                           
 20218                           ;j60_driver.c: 304: timeout = 90;
 20219  0053CE  0E5A               	movlw	90
 20220  0053D0  6E18               	movwf	PHY_WaitForBusy@timeout,c
 20221  0053D2  D001               	goto	i21Ll506
 20222  0053D4                     i21Ll507:
 20223                           	opt stack 18
 20224                           
 20225                           ; BSR set to: 14
 20226  0053D4  F000               	nop	
 20227  0053D6                     i21Ll506:
 20228                           	opt stack 18
 20229  0053D6  010E               	movlb	14	; () banked
 20230  0053D8  A18A               	btfss	138,0,b	;volatile
 20231  0053DA                     i21Lu12141:
 20232                           	opt stack 0
 20233  0053DA  D002               	goto	i21Ll8513
 20234  0053DC                     i21Lu12140:
 20235                           	opt stack 0
 20236  0053DC                     i21Ll8511:
 20237                           	opt stack 18
 20238                           
 20239                           ; BSR set to: 14
 20240  0053DC  2E18               	decfsz	PHY_WaitForBusy@timeout,f,c
 20241  0053DE  D7FA               	goto	i21Ll507
 20242  0053E0                     i21Ll8513:
 20243                           	opt stack 18
 20244                           
 20245                           ; BSR set to: 14
 20246                           ;j60_driver.c: 307: if(timeout == 0) ret = BUSY_TIMEOUT;
 20247  0053E0  5018               	movf	PHY_WaitForBusy@timeout,w,c
 20248  0053E2  A4D8               	btfss	status,2,c
 20249  0053E4                     i21Lu12151:
 20250                           	opt stack 0
 20251  0053E4  D001               	goto	i21Ll8517
 20252  0053E6                     i21Lu12150:
 20253                           	opt stack 0
 20254  0053E6                     i21Ll8515:
 20255                           	opt stack 18
 20256                           
 20257                           ; BSR set to: 14
 20258  0053E6  6817               	setf	PHY_WaitForBusy@ret,c
 20259  0053E8                     i21Ll8517:
 20260                           	opt stack 18
 20261                           
 20262                           ; BSR set to: 14
 20263                           ;j60_driver.c: 308: return ret;
 20264  0053E8  5017               	movf	PHY_WaitForBusy@ret,w,c
 20265  0053EA                     i21Ll512:
 20266                           	opt stack 18
 20267  0053EA  0900               	iorlw	0
 20268  0053EC  E12C               	bnz	l518
 20269                           
 20270                           ; BSR set to: 14
 20271                           ;j60_driver.c: 354: {
 20272                           ;j60_driver.c: 355: MIREGADR = reg;
 20273  0053EE  C01D  FEB4         	movff	PHY_Read@reg,3764	;volatile
 20274                           
 20275                           ;j60_driver.c: 356: MICMD = 0;
 20276  0053F2  6BB2               	clrf	178,b	;volatile
 20277                           
 20278                           ;j60_driver.c: 357: MICMDbits.MIIRD = 1;
 20279  0053F4  81B2               	bsf	178,0,b	;volatile
 20280                           
 20281                           ;j60_driver.c: 358: __nop(); __nop();
 20282  0053F6  F000               	nop	
 20283  0053F8  F000               	nop	
 20284  0053FA                     i22L__ptext79:
 20285                           	opt stack 0
 20286  0053FA                     i22L_PHY_WaitForBusy:
 20287                           	opt stack 0
 20288  0053FA                     i22Ll8499:
 20289                           	opt stack 18
 20290                           
 20291                           ;j60_driver.c: 300: phyError_t ret = NOERROR;
 20292  0053FA  6A17               	clrf	PHY_WaitForBusy@ret,c
 20293                           
 20294                           ;j60_driver.c: 301: uint8_t timeout;
 20295                           ;j60_driver.c: 303: for(timeout = 0; timeout < 10;timeout++) __nop();
 20296  0053FC  6A18               	clrf	PHY_WaitForBusy@timeout,c
 20297  0053FE                     i22Ll504:
 20298                           	opt stack 18
 20299  0053FE  F000               	nop	
 20300  005400                     i22Ll8505:
 20301                           	opt stack 18
 20302  005400  2A18               	incf	PHY_WaitForBusy@timeout,f,c
 20303  005402                     i22Ll8507:
 20304                           	opt stack 18
 20305  005402  0E09               	movlw	9
 20306  005404  6418               	cpfsgt	PHY_WaitForBusy@timeout,c
 20307  005406  D7FB               	goto	i22Ll504
 20308  005408  D001               	goto	i22Lu12130
 20309  00540A                     i22Lu12131:
 20310                           	opt stack 0
 20311  00540A  D7F9               	goto	i22Ll504
 20312  00540C                     i22Lu12130:
 20313                           	opt stack 0
 20314  00540C                     i22Ll8509:
 20315                           	opt stack 18
 20316                           
 20317                           ;j60_driver.c: 304: timeout = 90;
 20318  00540C  0E5A               	movlw	90
 20319  00540E  6E18               	movwf	PHY_WaitForBusy@timeout,c
 20320  005410  D001               	goto	i22Ll506
 20321  005412                     i22Ll507:
 20322                           	opt stack 18
 20323                           
 20324                           ; BSR set to: 14
 20325  005412  F000               	nop	
 20326  005414                     i22Ll506:
 20327                           	opt stack 18
 20328  005414  010E               	movlb	14	; () banked
 20329  005416  A18A               	btfss	138,0,b	;volatile
 20330  005418                     i22Lu12141:
 20331                           	opt stack 0
 20332  005418  D002               	goto	i22Ll8513
 20333  00541A                     i22Lu12140:
 20334                           	opt stack 0
 20335  00541A                     i22Ll8511:
 20336                           	opt stack 18
 20337                           
 20338                           ; BSR set to: 14
 20339  00541A  2E18               	decfsz	PHY_WaitForBusy@timeout,f,c
 20340  00541C  D7FA               	goto	i22Ll507
 20341  00541E                     i22Ll8513:
 20342                           	opt stack 18
 20343                           
 20344                           ; BSR set to: 14
 20345                           ;j60_driver.c: 307: if(timeout == 0) ret = BUSY_TIMEOUT;
 20346  00541E  5018               	movf	PHY_WaitForBusy@timeout,w,c
 20347  005420  A4D8               	btfss	status,2,c
 20348  005422                     i22Lu12151:
 20349                           	opt stack 0
 20350  005422  D001               	goto	i22Ll8517
 20351  005424                     i22Lu12150:
 20352                           	opt stack 0
 20353  005424                     i22Ll8515:
 20354                           	opt stack 18
 20355                           
 20356                           ; BSR set to: 14
 20357  005424  6817               	setf	PHY_WaitForBusy@ret,c
 20358  005426                     i22Ll8517:
 20359                           	opt stack 18
 20360                           
 20361                           ; BSR set to: 14
 20362                           ;j60_driver.c: 308: return ret;
 20363  005426  5017               	movf	PHY_WaitForBusy@ret,w,c
 20364  005428                     i22Ll512:
 20365                           	opt stack 18
 20366  005428  0AFF               	xorlw	-1
 20367  00542A  E105               	bnz	l519
 20368                           
 20369                           ; BSR set to: 14
 20370                           ;j60_driver.c: 360: {
 20371                           ;j60_driver.c: 361: ret = READ_FAIL;
 20372  00542C  0EFD               	movlw	253
 20373  00542E  6E1E               	movwf	PHY_Read@ret,c
 20374  005430  0EFF               	movlw	255
 20375  005432  D814               	call	PL779	;call to abstracted procedure
 20376                           
 20377                           ;j60_driver.c: 362: }
 20378  005434  D00A               	goto	l521
 20379  005436                     l519:
 20380                           
 20381                           ; BSR set to: 14
 20382                           ;j60_driver.c: 363: else
 20383                           ;j60_driver.c: 364: {
 20384                           ;j60_driver.c: 365: MICMDbits.MIIRD = 0;
 20385  005436  91B2               	bcf	178,0,b	;volatile
 20386                           
 20387                           ; BSR set to: 14
 20388                           ;j60_driver.c: 366: ret = MIRD;
 20389  005438  CEB8 F01E          	movff	3768,PHY_Read@ret	;volatile
 20390  00543C  CEB9 F01F          	movff	3769,PHY_Read@ret+1	;volatile
 20391  005440  6A20               	clrf	PHY_Read@ret+2,c
 20392  005442  6A21               	clrf	PHY_Read@ret+3,c
 20393  005444  D002               	goto	l521
 20394  005446                     l518:
 20395                           
 20396                           ; BSR set to: 14
 20397                           ;j60_driver.c: 369: else
 20398                           ;j60_driver.c: 370: {
 20399                           ;j60_driver.c: 371: ret = BUSY_TIMEOUT;
 20400  005446  681E               	setf	PHY_Read@ret,c
 20401  005448  D809               	call	PL779	;call to abstracted procedure
 20402  00544A                     l521:
 20403                           
 20404                           ; BSR set to: 14
 20405                           ;j60_driver.c: 372: }
 20406                           ;j60_driver.c: 373: return ret;
 20407  00544A  C01E  F019         	movff	PHY_Read@ret,?_PHY_Read
 20408  00544E  C01F  F01A         	movff	PHY_Read@ret+1,?_PHY_Read+1
 20409  005452  C020  F01B         	movff	PHY_Read@ret+2,?_PHY_Read+2
 20410  005456  C021  F01C         	movff	PHY_Read@ret+3,?_PHY_Read+3
 20411                           
 20412                           ; BSR set to: 14
 20413  00545A  0012               	return		;funcret
 20414  00545C                     __end_of_PHY_Read:
 20415                           	opt stack 0
 20416  00545C                     PL779:
 20417                           	opt stack 18
 20418  00545C  681F               	setf	PHY_Read@ret+1,c
 20419  00545E  6820               	setf	PHY_Read@ret+2,c
 20420  005460  6821               	setf	PHY_Read@ret+3,c
 20421  005462  0012               	return	
 20422  005464                     __end_ofPL779:
 20423                           	opt stack 0
 20424                           tosu	equ	0xFFF
 20425                           tosh	equ	0xFFE
 20426                           tosl	equ	0xFFD
 20427                           pclath	equ	0xFFA
 20428                           tblptru	equ	0xFF8
 20429                           tblptrh	equ	0xFF7
 20430                           tblptrl	equ	0xFF6
 20431                           tablat	equ	0xFF5
 20432                           prodh	equ	0xFF4
 20433                           prodl	equ	0xFF3
 20434                           intcon	equ	0xFF2
 20435                           indf0	equ	0xFEF
 20436                           postinc0	equ	0xFEE
 20437                           fsr0h	equ	0xFEA
 20438                           fsr0l	equ	0xFE9
 20439                           wreg	equ	0xFE8
 20440                           postinc1	equ	0xFE6
 20441                           plusw1	equ	0xFE3
 20442                           fsr1h	equ	0xFE2
 20443                           fsr1l	equ	0xFE1
 20444                           bsr	equ	0xFE0
 20445                           indf2	equ	0xFDF
 20446                           postinc2	equ	0xFDE
 20447                           postdec2	equ	0xFDD
 20448                           plusw2	equ	0xFDB
 20449                           fsr2h	equ	0xFDA
 20450                           fsr2l	equ	0xFD9
 20451                           status	equ	0xFD8
 20452                           
 20453 ;; *************** function _PHY_WaitForBusy *****************
 20454 ;; Defined at:
 20455 ;;		line 298 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 20456 ;; Parameters:    Size  Location     Type
 20457 ;;		None
 20458 ;; Auto vars:     Size  Location     Type
 20459 ;;  timeout         1   23[COMRAM] unsigned char 
 20460 ;;  ret             1   22[COMRAM] enum E7107
 20461 ;; Return value:  Size  Location     Type
 20462 ;;                  1    wreg      enum E7107
 20463 ;; Registers used:
 20464 ;;		wreg, status,2, status,0
 20465 ;; Tracked objects:
 20466 ;;		On entry : 0/E
 20467 ;;		On exit  : F/E
 20468 ;;		Unchanged: 0/0
 20469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20471 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20473 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20474 ;;Total ram usage:        2 bytes
 20475 ;; Hardware stack levels used:    1
 20476 ;; Hardware stack levels required when called:    8
 20477 ;; This function calls:
 20478 ;;		Nothing
 20479 ;; This function is called by:
 20480 ;;		_PHY_Write
 20481 ;;		_PHY_Read
 20482 ;; This function uses a non-reentrant model
 20483 ;;
 20484                           
 20485                           	psect	text79
 20486  000000                     __ptext79:
 20487                           	opt stack 0
 20488  000000                     _PHY_WaitForBusy:
 20489                           	opt stack 0
 20490  000000                     __end_of_PHY_WaitForBusy:
 20491                           	opt stack 0
 20492                           tosu	equ	0xFFF
 20493                           tosh	equ	0xFFE
 20494                           tosl	equ	0xFFD
 20495                           pclath	equ	0xFFA
 20496                           tblptru	equ	0xFF8
 20497                           tblptrh	equ	0xFF7
 20498                           tblptrl	equ	0xFF6
 20499                           tablat	equ	0xFF5
 20500                           prodh	equ	0xFF4
 20501                           prodl	equ	0xFF3
 20502                           intcon	equ	0xFF2
 20503                           indf0	equ	0xFEF
 20504                           postinc0	equ	0xFEE
 20505                           fsr0h	equ	0xFEA
 20506                           fsr0l	equ	0xFE9
 20507                           wreg	equ	0xFE8
 20508                           postinc1	equ	0xFE6
 20509                           plusw1	equ	0xFE3
 20510                           fsr1h	equ	0xFE2
 20511                           fsr1l	equ	0xFE1
 20512                           bsr	equ	0xFE0
 20513                           indf2	equ	0xFDF
 20514                           postinc2	equ	0xFDE
 20515                           postdec2	equ	0xFDD
 20516                           plusw2	equ	0xFDB
 20517                           fsr2h	equ	0xFDA
 20518                           fsr2l	equ	0xFD9
 20519                           status	equ	0xFD8
 20520                           
 20521 ;; *************** function _ARPV4_Init *****************
 20522 ;; Defined at:
 20523 ;;		line 86 in file "../../TCPIP Library/source/arpv4.c"
 20524 ;; Parameters:    Size  Location     Type
 20525 ;;		None
 20526 ;; Auto vars:     Size  Location     Type
 20527 ;;  x               1   22[COMRAM] unsigned char 
 20528 ;; Return value:  Size  Location     Type
 20529 ;;		None               void
 20530 ;; Registers used:
 20531 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20532 ;; Tracked objects:
 20533 ;;		On entry : F/E
 20534 ;;		On exit  : F/E
 20535 ;;		Unchanged: F/0
 20536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20538 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20540 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20541 ;;Total ram usage:        1 bytes
 20542 ;; Hardware stack levels used:    1
 20543 ;; Hardware stack levels required when called:    8
 20544 ;; This function calls:
 20545 ;;		Nothing
 20546 ;; This function is called by:
 20547 ;;		_Network_Init
 20548 ;; This function uses a non-reentrant model
 20549 ;;
 20550                           
 20551                           	psect	text80
 20552  00636E                     __ptext80:
 20553                           	opt stack 0
 20554  00636E                     _ARPV4_Init:
 20555                           	opt stack 21
 20556                           
 20557                           ; BSR set to: 14
 20558                           ;arpv4.c: 88: for(uint8_t x= 0 ; x < sizeof(arpMap); x++)
 20559                           
 20560                           ; BSR set to: 14
 20561                           ;incstack = 0
 20562  00636E  6A17               	clrf	ARPV4_Init@x,c
 20563  006370                     l9999:
 20564                           
 20565                           ; BSR set to: 14
 20566                           ;arpv4.c: 89: ((char *)arpMap)[x] = 0;
 20567  006370  0E34               	movlw	low _arpMap
 20568  006372  2417               	addwf	ARPV4_Init@x,w,c
 20569  006374  6ED9               	movwf	fsr2l,c
 20570  006376  6ADA               	clrf	fsr2h,c
 20571  006378  0E02               	movlw	high _arpMap
 20572  00637A  22DA               	addwfc	fsr2h,f,c
 20573  00637C  6ADF               	clrf	indf2,c
 20574                           
 20575                           ; BSR set to: 14
 20576  00637E  2A17               	incf	ARPV4_Init@x,f,c
 20577                           
 20578                           ; BSR set to: 14
 20579  006380  0E67               	movlw	103
 20580  006382  6417               	cpfsgt	ARPV4_Init@x,c
 20581  006384  D7F5               	goto	l9999
 20582  006386  0C67               	retlw	103
 20583  006388                     __end_of_ARPV4_Init:
 20584                           	opt stack 0
 20585                           tosu	equ	0xFFF
 20586                           tosh	equ	0xFFE
 20587                           tosl	equ	0xFFD
 20588                           pclath	equ	0xFFA
 20589                           tblptru	equ	0xFF8
 20590                           tblptrh	equ	0xFF7
 20591                           tblptrl	equ	0xFF6
 20592                           tablat	equ	0xFF5
 20593                           prodh	equ	0xFF4
 20594                           prodl	equ	0xFF3
 20595                           intcon	equ	0xFF2
 20596                           indf0	equ	0xFEF
 20597                           postinc0	equ	0xFEE
 20598                           fsr0h	equ	0xFEA
 20599                           fsr0l	equ	0xFE9
 20600                           wreg	equ	0xFE8
 20601                           postinc1	equ	0xFE6
 20602                           plusw1	equ	0xFE3
 20603                           fsr1h	equ	0xFE2
 20604                           fsr1l	equ	0xFE1
 20605                           bsr	equ	0xFE0
 20606                           indf2	equ	0xFDF
 20607                           postinc2	equ	0xFDE
 20608                           postdec2	equ	0xFDD
 20609                           plusw2	equ	0xFDB
 20610                           fsr2h	equ	0xFDA
 20611                           fsr2l	equ	0xFD9
 20612                           status	equ	0xFD8
 20613                           
 20614 ;; *************** function _IPV4_GetMyIP *****************
 20615 ;; Defined at:
 20616 ;;		line 288 in file "../../TCPIP Library/source/ipv4.c"
 20617 ;; Parameters:    Size  Location     Type
 20618 ;;		None
 20619 ;; Auto vars:     Size  Location     Type
 20620 ;;		None
 20621 ;; Return value:  Size  Location     Type
 20622 ;;                  4   22[COMRAM] unsigned long 
 20623 ;; Registers used:
 20624 ;;		None
 20625 ;; Tracked objects:
 20626 ;;		On entry : 0/1
 20627 ;;		On exit  : 0/0
 20628 ;;		Unchanged: 0/0
 20629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20630 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20633 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20634 ;;Total ram usage:        4 bytes
 20635 ;; Hardware stack levels used:    1
 20636 ;; Hardware stack levels required when called:    8
 20637 ;; This function calls:
 20638 ;;		Nothing
 20639 ;; This function is called by:
 20640 ;;		_main
 20641 ;; This function uses a non-reentrant model
 20642 ;;
 20643                           
 20644                           	psect	text81
 20645  006462                     __ptext81:
 20646                           	opt stack 0
 20647  006462                     _IPV4_GetMyIP:
 20648                           	opt stack 22
 20649                           
 20650                           ;ipv4.c: 290: return(ipv4Address);
 20651                           
 20652                           ; BSR set to: 14
 20653                           ;incstack = 0
 20654  006462  C037  F017         	movff	_ipv4Address,?_IPV4_GetMyIP
 20655  006466  C038  F018         	movff	_ipv4Address+1,?_IPV4_GetMyIP+1
 20656  00646A  C039  F019         	movff	_ipv4Address+2,?_IPV4_GetMyIP+2
 20657  00646E  C03A  F01A         	movff	_ipv4Address+3,?_IPV4_GetMyIP+3
 20658  006472  0012               	return		;funcret
 20659  006474                     __end_of_IPV4_GetMyIP:
 20660                           	opt stack 0
 20661                           tosu	equ	0xFFF
 20662                           tosh	equ	0xFFE
 20663                           tosl	equ	0xFFD
 20664                           pclath	equ	0xFFA
 20665                           tblptru	equ	0xFF8
 20666                           tblptrh	equ	0xFF7
 20667                           tblptrl	equ	0xFF6
 20668                           tablat	equ	0xFF5
 20669                           prodh	equ	0xFF4
 20670                           prodl	equ	0xFF3
 20671                           intcon	equ	0xFF2
 20672                           indf0	equ	0xFEF
 20673                           postinc0	equ	0xFEE
 20674                           fsr0h	equ	0xFEA
 20675                           fsr0l	equ	0xFE9
 20676                           wreg	equ	0xFE8
 20677                           postinc1	equ	0xFE6
 20678                           plusw1	equ	0xFE3
 20679                           fsr1h	equ	0xFE2
 20680                           fsr1l	equ	0xFE1
 20681                           bsr	equ	0xFE0
 20682                           indf2	equ	0xFDF
 20683                           postinc2	equ	0xFDE
 20684                           postdec2	equ	0xFDD
 20685                           plusw2	equ	0xFDB
 20686                           fsr2h	equ	0xFDA
 20687                           fsr2l	equ	0xFD9
 20688                           status	equ	0xFD8
 20689                           
 20690 ;; *************** function _DEMO_UDP_Send *****************
 20691 ;; Defined at:
 20692 ;;		line 379 in file "udp_demo.c"
 20693 ;; Parameters:    Size  Location     Type
 20694 ;;		None
 20695 ;; Auto vars:     Size  Location     Type
 20696 ;;  pot_adcResul    2   76[BANK0 ] unsigned int 
 20697 ;;  started         1   75[BANK0 ] unsigned char 
 20698 ;; Return value:  Size  Location     Type
 20699 ;;		None               void
 20700 ;; Registers used:
 20701 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20702 ;; Tracked objects:
 20703 ;;		On entry : 0/1
 20704 ;;		On exit  : E/0
 20705 ;;		Unchanged: 0/0
 20706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20708 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20709 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20710 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20711 ;;Total ram usage:        7 bytes
 20712 ;; Hardware stack levels used:    1
 20713 ;; Hardware stack levels required when called:   13
 20714 ;; This function calls:
 20715 ;;		_ADC_GetConversion
 20716 ;;		_DEMO_UDP_ClaimIPCheck
 20717 ;;		_UDP_Send
 20718 ;;		_UDP_Start
 20719 ;;		_UDP_Write32
 20720 ;;		_UDP_Write8
 20721 ;; This function is called by:
 20722 ;;		_main
 20723 ;; This function uses a non-reentrant model
 20724 ;;
 20725                           
 20726                           	psect	text82
 20727  00515E                     __ptext82:
 20728                           	opt stack 0
 20729  00515E                     _DEMO_UDP_Send:
 20730                           	opt stack 17
 20731                           
 20732                           ;udp_demo.c: 382: adc_result_t pot_adcResult;
 20733                           ;udp_demo.c: 384: if(!DEMO_UDP_ClaimIPCheck())
 20734                           
 20735                           ;incstack = 0
 20736  00515E  ECE9  F031         	call	_DEMO_UDP_ClaimIPCheck	;wreg free
 20737  005162  E20F               	bc	l10219
 20738                           
 20739                           ;udp_demo.c: 385: {
 20740                           ;udp_demo.c: 386: started = UDP_Start(0xFFFFFFFF,65533,65531);
 20741  005164  D871               	call	PL707	;call to abstracted procedure
 20742  005166  D869               	call	PL685	;call to abstracted procedure
 20743  005168  ECC9  F02D         	call	_UDP_Start	;wreg free
 20744  00516C  0100               	movlb	0	; () banked
 20745  00516E  6FAB               	movwf	DEMO_UDP_Send@started& (0+255),b
 20746                           
 20747                           ; BSR set to: 0
 20748                           ;udp_demo.c: 387: if(started==SUCCESS)
 20749  005170  05AB               	decf	DEMO_UDP_Send@started& (0+255),w,b
 20750  005172  E107               	bnz	l10219
 20751                           
 20752                           ; BSR set to: 0
 20753                           ;udp_demo.c: 388: {
 20754                           ;udp_demo.c: 389: UDP_Write8('L');
 20755  005174  0E4C               	movlw	76
 20756  005176                     i23L__ptext83:
 20757                           	opt stack 0
 20758  005176                     i23L_UDP_Write8:
 20759                           	opt stack 15
 20760                           
 20761                           ;incstack = 0
 20762                           ;UDP_Write8@data stored from wreg
 20763  005176  6E18               	movwf	UDP_Write8@data,c
 20764  005178                     i23Ll8683:
 20765                           	opt stack 15
 20766                           
 20767                           ;udpv4.c: 184: ETH_Write8(data);
 20768  005178  5018               	movf	UDP_Write8@data,w,c
 20769  00517A  EC75  F032         	call	_ETH_Write8
 20770  00517E                     i23Ll1477:
 20771                           	opt stack 17
 20772                           
 20773                           ;udp_demo.c: 390: UDP_Send();
 20774  00517E  EC04  F02C         	call	_UDP_Send	;wreg free
 20775  005182                     l10219:
 20776                           
 20777                           ;udp_demo.c: 391: }
 20778                           ;udp_demo.c: 392: }
 20779                           ;udp_demo.c: 394: if(pot_init)
 20780  005182  0101               	movlb	1	; () banked
 20781  005184  51D0               	movf	_pot_init& (0+255),w,b
 20782  005186  B4D8               	btfsc	status,2,c
 20783  005188  0012               	return	
 20784                           
 20785                           ; BSR set to: 1
 20786                           ;udp_demo.c: 395: {
 20787                           ;udp_demo.c: 396: pot_adcResult = ADC_GetConversion(channel_AN2);
 20788  00518A  0E02               	movlw	2
 20789  00518C  EC45  F030         	call	_ADC_GetConversion
 20790  005190  C017  F0AC         	movff	?_ADC_GetConversion,DEMO_UDP_Send@pot_adcResult
 20791  005194  C018  F0AD         	movff	?_ADC_GetConversion+1,DEMO_UDP_Send@pot_adcResult+1
 20792                           
 20793                           ;udp_demo.c: 398: if(((pot_adcResult > (pot_initial_adcResult + 100)) || (pot_adcResult 
      +                          <(pot_initial_adcResult - 100))) && pot_adcResult > 100)
 20794  005198  0E64               	movlw	100
 20795  00519A  0101               	movlb	1	; () banked
 20796  00519C  25CA               	addwf	_pot_initial_adcResult& (0+255),w,b
 20797  00519E  0100               	movlb	0	; () banked
 20798  0051A0  6FA7               	movwf	??_DEMO_UDP_Send& (0+255),b
 20799  0051A2  0E00               	movlw	0
 20800  0051A4  0101               	movlb	1	; () banked
 20801  0051A6  21CB               	addwfc	(_pot_initial_adcResult+1)& (0+255),w,b
 20802  0051A8  0100               	movlb	0	; () banked
 20803  0051AA  6FA8               	movwf	(??_DEMO_UDP_Send+1)& (0+255),b
 20804  0051AC  51AC               	movf	DEMO_UDP_Send@pot_adcResult& (0+255),w,b
 20805  0051AE  5DA7               	subwf	??_DEMO_UDP_Send& (0+255),w,b
 20806  0051B0  51AD               	movf	(DEMO_UDP_Send@pot_adcResult+1)& (0+255),w,b
 20807  0051B2  59A8               	subwfb	(??_DEMO_UDP_Send+1)& (0+255),w,b
 20808  0051B4  E311               	bnc	l10227
 20809                           
 20810                           ; BSR set to: 0
 20811  0051B6  0E9C               	movlw	156
 20812  0051B8  6FA7               	movwf	??_DEMO_UDP_Send& (0+255),b
 20813  0051BA  69A8               	setf	(??_DEMO_UDP_Send+1)& (0+255),b
 20814  0051BC  C1CA  F0A9         	movff	_pot_initial_adcResult,??_DEMO_UDP_Send+2
 20815  0051C0  C1CB  F0AA         	movff	_pot_initial_adcResult+1,??_DEMO_UDP_Send+3
 20816  0051C4  51A7               	movf	??_DEMO_UDP_Send& (0+255),w,b
 20817  0051C6  27A9               	addwf	(??_DEMO_UDP_Send+2)& (0+255),f,b
 20818  0051C8  51A8               	movf	(??_DEMO_UDP_Send+1)& (0+255),w,b
 20819  0051CA  23AA               	addwfc	(??_DEMO_UDP_Send+3)& (0+255),f,b
 20820  0051CC  51A9               	movf	(??_DEMO_UDP_Send+2)& (0+255),w,b
 20821  0051CE  5DAC               	subwf	DEMO_UDP_Send@pot_adcResult& (0+255),w,b
 20822  0051D0  51AA               	movf	(??_DEMO_UDP_Send+3)& (0+255),w,b
 20823  0051D2  59AD               	subwfb	(DEMO_UDP_Send@pot_adcResult+1)& (0+255),w,b
 20824  0051D4  B0D8               	btfsc	status,0,c
 20825  0051D6  0012               	return	
 20826  0051D8                     l10227:
 20827                           
 20828                           ; BSR set to: 0
 20829  0051D8  51AD               	movf	(DEMO_UDP_Send@pot_adcResult+1)& (0+255),w,b
 20830  0051DA  E104               	bnz	u16160
 20831  0051DC  0E65               	movlw	101
 20832  0051DE  5DAC               	subwf	DEMO_UDP_Send@pot_adcResult& (0+255),w,b
 20833  0051E0  A0D8               	btfss	status,0,c
 20834  0051E2  0012               	return	
 20835  0051E4                     u16160:
 20836                           
 20837                           ; BSR set to: 0
 20838                           ;udp_demo.c: 399: {
 20839                           ;udp_demo.c: 400: started = UDP_Start(claim_dest_ip,65533,65531);
 20840  0051E4  C033  F09F         	movff	_claim_dest_ip,UDP_Start@destIP
 20841  0051E8  C034  F0A0         	movff	_claim_dest_ip+1,UDP_Start@destIP+1
 20842  0051EC  C035  F0A1         	movff	_claim_dest_ip+2,UDP_Start@destIP+2
 20843  0051F0  C036  F0A2         	movff	_claim_dest_ip+3,UDP_Start@destIP+3
 20844  0051F4  D822               	call	PL685	;call to abstracted procedure
 20845  0051F6  ECC9  F02D         	call	_UDP_Start	;wreg free
 20846  0051FA  0100               	movlb	0	; () banked
 20847  0051FC  6FAB               	movwf	DEMO_UDP_Send@started& (0+255),b
 20848                           
 20849                           ; BSR set to: 0
 20850                           ;udp_demo.c: 401: if(started==SUCCESS)
 20851  0051FE  05AB               	decf	DEMO_UDP_Send@started& (0+255),w,b
 20852  005200  E117               	bnz	l10237
 20853                           
 20854                           ; BSR set to: 0
 20855                           ;udp_demo.c: 402: {
 20856                           ;udp_demo.c: 403: UDP_Write8('P');
 20857  005202  0E50               	movlw	80
 20858  005204                     i24L__ptext83:
 20859                           	opt stack 0
 20860  005204                     i24L_UDP_Write8:
 20861                           	opt stack 15
 20862                           
 20863                           ;incstack = 0
 20864                           ;UDP_Write8@data stored from wreg
 20865  005204  6E18               	movwf	UDP_Write8@data,c
 20866  005206                     i24Ll8683:
 20867                           	opt stack 15
 20868                           
 20869                           ;udpv4.c: 184: ETH_Write8(data);
 20870  005206  5018               	movf	UDP_Write8@data,w,c
 20871  005208  EC75  F032         	call	_ETH_Write8
 20872  00520C                     i24Ll1477:
 20873                           	opt stack 17
 20874                           
 20875                           ;udp_demo.c: 404: UDP_Write32(pot_adcResult);
 20876  00520C  C0AC  F01B         	movff	DEMO_UDP_Send@pot_adcResult,UDP_Write32@data
 20877  005210  C0AD  F01C         	movff	DEMO_UDP_Send@pot_adcResult+1,UDP_Write32@data+1
 20878  005214  6A1D               	clrf	UDP_Write32@data+2,c
 20879  005216  6A1E               	clrf	UDP_Write32@data+3,c
 20880  005218                     i25L__ptext84:
 20881                           	opt stack 0
 20882  005218                     i25L_UDP_Write32:
 20883                           	opt stack 0
 20884  005218                     i25Ll10129:
 20885                           	opt stack 19
 20886                           
 20887                           ;udpv4.c: 195: ETH_Write32(data);
 20888  005218  C01B  F017         	movff	UDP_Write32@data,ETH_Write32@data
 20889  00521C  C01C  F018         	movff	UDP_Write32@data+1,ETH_Write32@data+1
 20890  005220  C01D  F019         	movff	UDP_Write32@data+2,ETH_Write32@data+2
 20891  005224  C01E  F01A         	movff	UDP_Write32@data+3,ETH_Write32@data+3
 20892  005228  ECC4  F031         	call	_ETH_Write32	;wreg free
 20893  00522C                     i25Ll1483:
 20894                           	opt stack 17
 20895                           
 20896                           ;udp_demo.c: 405: UDP_Send();
 20897  00522C  EC04  F02C         	call	_UDP_Send	;wreg free
 20898  005230                     l10237:
 20899                           
 20900                           ; BSR set to: 0
 20901                           ;udp_demo.c: 406: }
 20902                           ;udp_demo.c: 407: pot_initial_adcResult = pot_adcResult;
 20903  005230  C0AC  F1CA         	movff	DEMO_UDP_Send@pot_adcResult,_pot_initial_adcResult
 20904  005234  C0AD  F1CB         	movff	DEMO_UDP_Send@pot_adcResult+1,_pot_initial_adcResult+1
 20905  005238  0012               	return		;funcret
 20906  00523A                     __end_of_DEMO_UDP_Send:
 20907                           	opt stack 0
 20908  00523A                     PL685:
 20909                           	opt stack 17
 20910  00523A  69A4               	setf	(UDP_Start@srcPort+1)& (0+255),b
 20911  00523C  0EFD               	movlw	253
 20912  00523E  6FA3               	movwf	UDP_Start@srcPort& (0+255),b
 20913  005240  69A6               	setf	(UDP_Start@dstPort+1)& (0+255),b
 20914  005242  0EFB               	movlw	251
 20915  005244  6FA5               	movwf	UDP_Start@dstPort& (0+255),b
 20916  005246  0CFB               	retlw	251
 20917  005248                     __end_ofPL685:
 20918                           	opt stack 0
 20919  005248                     PL707:
 20920                           	opt stack 12
 20921  005248  0100               	movlb	0	; () banked
 20922  00524A  699F               	setf	UDP_Start@destIP& (0+255),b
 20923  00524C  69A0               	setf	(UDP_Start@destIP+1)& (0+255),b
 20924  00524E  69A1               	setf	(UDP_Start@destIP+2)& (0+255),b
 20925  005250  69A2               	setf	(UDP_Start@destIP+3)& (0+255),b
 20926  005252  0012               	return	
 20927  005254                     __end_ofPL707:
 20928                           	opt stack 0
 20929                           tosu	equ	0xFFF
 20930                           tosh	equ	0xFFE
 20931                           tosl	equ	0xFFD
 20932                           pclath	equ	0xFFA
 20933                           tblptru	equ	0xFF8
 20934                           tblptrh	equ	0xFF7
 20935                           tblptrl	equ	0xFF6
 20936                           tablat	equ	0xFF5
 20937                           prodh	equ	0xFF4
 20938                           prodl	equ	0xFF3
 20939                           intcon	equ	0xFF2
 20940                           indf0	equ	0xFEF
 20941                           postinc0	equ	0xFEE
 20942                           fsr0h	equ	0xFEA
 20943                           fsr0l	equ	0xFE9
 20944                           wreg	equ	0xFE8
 20945                           postinc1	equ	0xFE6
 20946                           plusw1	equ	0xFE3
 20947                           fsr1h	equ	0xFE2
 20948                           fsr1l	equ	0xFE1
 20949                           bsr	equ	0xFE0
 20950                           indf2	equ	0xFDF
 20951                           postinc2	equ	0xFDE
 20952                           postdec2	equ	0xFDD
 20953                           plusw2	equ	0xFDB
 20954                           fsr2h	equ	0xFDA
 20955                           fsr2l	equ	0xFD9
 20956                           status	equ	0xFD8
 20957                           
 20958 ;; *************** function _UDP_Write8 *****************
 20959 ;; Defined at:
 20960 ;;		line 182 in file "../../TCPIP Library/source/udpv4.c"
 20961 ;; Parameters:    Size  Location     Type
 20962 ;;  data            1    wreg     unsigned char 
 20963 ;; Auto vars:     Size  Location     Type
 20964 ;;  data            1   23[COMRAM] unsigned char 
 20965 ;; Return value:  Size  Location     Type
 20966 ;;		None               void
 20967 ;; Registers used:
 20968 ;;		wreg, status,2, cstack
 20969 ;; Tracked objects:
 20970 ;;		On entry : F/0
 20971 ;;		On exit  : 0/0
 20972 ;;		Unchanged: 0/0
 20973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20975 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20977 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20978 ;;Total ram usage:        1 bytes
 20979 ;; Hardware stack levels used:    1
 20980 ;; Hardware stack levels required when called:   10
 20981 ;; This function calls:
 20982 ;;		_ETH_Write8
 20983 ;; This function is called by:
 20984 ;;		_DEMO_UDP_Recv
 20985 ;;		_DEMO_UDP_Send
 20986 ;; This function uses a non-reentrant model
 20987 ;;
 20988                           
 20989                           	psect	text83
 20990  000000                     __ptext83:
 20991                           	opt stack 0
 20992  000000                     _UDP_Write8:
 20993                           	opt stack 0
 20994  000000                     __end_of_UDP_Write8:
 20995                           	opt stack 0
 20996                           tosu	equ	0xFFF
 20997                           tosh	equ	0xFFE
 20998                           tosl	equ	0xFFD
 20999                           pclath	equ	0xFFA
 21000                           tblptru	equ	0xFF8
 21001                           tblptrh	equ	0xFF7
 21002                           tblptrl	equ	0xFF6
 21003                           tablat	equ	0xFF5
 21004                           prodh	equ	0xFF4
 21005                           prodl	equ	0xFF3
 21006                           intcon	equ	0xFF2
 21007                           indf0	equ	0xFEF
 21008                           postinc0	equ	0xFEE
 21009                           fsr0h	equ	0xFEA
 21010                           fsr0l	equ	0xFE9
 21011                           wreg	equ	0xFE8
 21012                           postinc1	equ	0xFE6
 21013                           plusw1	equ	0xFE3
 21014                           fsr1h	equ	0xFE2
 21015                           fsr1l	equ	0xFE1
 21016                           bsr	equ	0xFE0
 21017                           indf2	equ	0xFDF
 21018                           postinc2	equ	0xFDE
 21019                           postdec2	equ	0xFDD
 21020                           plusw2	equ	0xFDB
 21021                           fsr2h	equ	0xFDA
 21022                           fsr2l	equ	0xFD9
 21023                           status	equ	0xFD8
 21024                           
 21025 ;; *************** function _UDP_Write32 *****************
 21026 ;; Defined at:
 21027 ;;		line 193 in file "../../TCPIP Library/source/udpv4.c"
 21028 ;; Parameters:    Size  Location     Type
 21029 ;;  data            4   26[COMRAM] unsigned long 
 21030 ;; Auto vars:     Size  Location     Type
 21031 ;;		None
 21032 ;; Return value:  Size  Location     Type
 21033 ;;		None               void
 21034 ;; Registers used:
 21035 ;;		wreg, status,2, cstack
 21036 ;; Tracked objects:
 21037 ;;		On entry : 0/0
 21038 ;;		On exit  : 0/0
 21039 ;;		Unchanged: 0/0
 21040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21041 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21044 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21045 ;;Total ram usage:        4 bytes
 21046 ;; Hardware stack levels used:    1
 21047 ;; Hardware stack levels required when called:   10
 21048 ;; This function calls:
 21049 ;;		_ETH_Write32
 21050 ;; This function is called by:
 21051 ;;		_DEMO_UDP_Send
 21052 ;; This function uses a non-reentrant model
 21053 ;;
 21054                           
 21055                           	psect	text84
 21056  000000                     __ptext84:
 21057                           	opt stack 0
 21058  000000                     _UDP_Write32:
 21059                           	opt stack 0
 21060  000000                     __end_of_UDP_Write32:
 21061                           	opt stack 0
 21062                           tosu	equ	0xFFF
 21063                           tosh	equ	0xFFE
 21064                           tosl	equ	0xFFD
 21065                           pclath	equ	0xFFA
 21066                           tblptru	equ	0xFF8
 21067                           tblptrh	equ	0xFF7
 21068                           tblptrl	equ	0xFF6
 21069                           tablat	equ	0xFF5
 21070                           prodh	equ	0xFF4
 21071                           prodl	equ	0xFF3
 21072                           intcon	equ	0xFF2
 21073                           indf0	equ	0xFEF
 21074                           postinc0	equ	0xFEE
 21075                           fsr0h	equ	0xFEA
 21076                           fsr0l	equ	0xFE9
 21077                           wreg	equ	0xFE8
 21078                           postinc1	equ	0xFE6
 21079                           plusw1	equ	0xFE3
 21080                           fsr1h	equ	0xFE2
 21081                           fsr1l	equ	0xFE1
 21082                           bsr	equ	0xFE0
 21083                           indf2	equ	0xFDF
 21084                           postinc2	equ	0xFDE
 21085                           postdec2	equ	0xFDD
 21086                           plusw2	equ	0xFDB
 21087                           fsr2h	equ	0xFDA
 21088                           fsr2l	equ	0xFD9
 21089                           status	equ	0xFD8
 21090                           
 21091 ;; *************** function _UDP_Start *****************
 21092 ;; Defined at:
 21093 ;;		line 71 in file "../../TCPIP Library/source/udpv4.c"
 21094 ;; Parameters:    Size  Location     Type
 21095 ;;  destIP          4   63[BANK0 ] unsigned long 
 21096 ;;  srcPort         2   67[BANK0 ] unsigned int 
 21097 ;;  dstPort         2   69[BANK0 ] unsigned int 
 21098 ;; Auto vars:     Size  Location     Type
 21099 ;;  ret             1   46[COMRAM] enum E367
 21100 ;; Return value:  Size  Location     Type
 21101 ;;                  1    wreg      enum E449
 21102 ;; Registers used:
 21103 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21104 ;; Tracked objects:
 21105 ;;		On entry : F/0
 21106 ;;		On exit  : 0/0
 21107 ;;		Unchanged: 0/0
 21108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21109 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21110 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21112 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21113 ;;Total ram usage:        9 bytes
 21114 ;; Hardware stack levels used:    1
 21115 ;; Hardware stack levels required when called:   12
 21116 ;; This function calls:
 21117 ;;		_ETH_ResetByteCount
 21118 ;;		_ETH_Write16
 21119 ;;		_IPv4_Start
 21120 ;; This function is called by:
 21121 ;;		_DHCP_Request
 21122 ;;		_DEMO_UDP_Recv
 21123 ;;		_DEMO_UDP_Send
 21124 ;; This function uses a non-reentrant model
 21125 ;;
 21126                           
 21127                           	psect	text85
 21128  005B92                     __ptext85:
 21129                           	opt stack 0
 21130  005B92                     _UDP_Start:
 21131                           	opt stack 12
 21132                           
 21133                           ; BSR set to: 0
 21134                           ;udpv4.c: 77: ret = IPv4_Start(destIP,UDP);
 21135                           
 21136                           ; BSR set to: 0
 21137                           
 21138                           ;incstack = 0
 21139  005B92  C09F  F022         	movff	UDP_Start@destIP,IPv4_Start@destAddress
 21140  005B96  C0A0  F023         	movff	UDP_Start@destIP+1,IPv4_Start@destAddress+1
 21141  005B9A  C0A1  F024         	movff	UDP_Start@destIP+2,IPv4_Start@destAddress+2
 21142  005B9E  C0A2  F025         	movff	UDP_Start@destIP+3,IPv4_Start@destAddress+3
 21143  005BA2  0E11               	movlw	17
 21144  005BA4  6E26               	movwf	IPv4_Start@protocol,c
 21145  005BA6  EC08  F023         	call	_IPv4_Start	;wreg free
 21146  005BAA  6E2F               	movwf	UDP_Start@ret,c
 21147                           
 21148                           ; BSR set to: 0
 21149                           ;udpv4.c: 78: if(ret == SUCCESS)
 21150  005BAC  042F               	decf	UDP_Start@ret,w,c
 21151  005BAE  E116               	bnz	l8377
 21152                           
 21153                           ; BSR set to: 0
 21154                           ;udpv4.c: 79: {
 21155                           ;udpv4.c: 81: ETH_ResetByteCount();
 21156  005BB0  EC7A  F032         	call	_ETH_ResetByteCount	;wreg free
 21157                           
 21158                           ;udpv4.c: 84: ETH_Write16(srcPort);
 21159  005BB4  C0A3  F017         	movff	UDP_Start@srcPort,ETH_Write16@data
 21160  005BB8  C0A4  F018         	movff	UDP_Start@srcPort+1,ETH_Write16@data+1
 21161  005BBC  EC4F  F032         	call	_ETH_Write16	;wreg free
 21162                           
 21163                           ;udpv4.c: 87: ETH_Write16(dstPort);
 21164  005BC0  C0A5  F017         	movff	UDP_Start@dstPort,ETH_Write16@data
 21165  005BC4  C0A6  F018         	movff	UDP_Start@dstPort+1,ETH_Write16@data+1
 21166  005BC8  EC4F  F032         	call	_ETH_Write16	;wreg free
 21167                           
 21168                           ;udpv4.c: 90: ETH_Write16(0);
 21169  005BCC  6A18               	clrf	ETH_Write16@data+1,c
 21170  005BCE  6A17               	clrf	ETH_Write16@data,c
 21171  005BD0  EC4F  F032         	call	_ETH_Write16	;wreg free
 21172                           
 21173                           ;udpv4.c: 93: ETH_Write16(0);
 21174  005BD4  6A18               	clrf	ETH_Write16@data+1,c
 21175  005BD6  6A17               	clrf	ETH_Write16@data,c
 21176  005BD8  EC4F  F032         	call	_ETH_Write16	;wreg free
 21177  005BDC                     l8377:
 21178                           
 21179                           ;udpv4.c: 95: }
 21180                           ;udpv4.c: 96: return ret;
 21181  005BDC  502F               	movf	UDP_Start@ret,w,c
 21182  005BDE  0012               	return		;funcret
 21183  005BE0                     __end_of_UDP_Start:
 21184                           	opt stack 0
 21185                           tosu	equ	0xFFF
 21186                           tosh	equ	0xFFE
 21187                           tosl	equ	0xFFD
 21188                           pclath	equ	0xFFA
 21189                           tblptru	equ	0xFF8
 21190                           tblptrh	equ	0xFF7
 21191                           tblptrl	equ	0xFF6
 21192                           tablat	equ	0xFF5
 21193                           prodh	equ	0xFF4
 21194                           prodl	equ	0xFF3
 21195                           intcon	equ	0xFF2
 21196                           indf0	equ	0xFEF
 21197                           postinc0	equ	0xFEE
 21198                           fsr0h	equ	0xFEA
 21199                           fsr0l	equ	0xFE9
 21200                           wreg	equ	0xFE8
 21201                           postinc1	equ	0xFE6
 21202                           plusw1	equ	0xFE3
 21203                           fsr1h	equ	0xFE2
 21204                           fsr1l	equ	0xFE1
 21205                           bsr	equ	0xFE0
 21206                           indf2	equ	0xFDF
 21207                           postinc2	equ	0xFDE
 21208                           postdec2	equ	0xFDD
 21209                           plusw2	equ	0xFDB
 21210                           fsr2h	equ	0xFDA
 21211                           fsr2l	equ	0xFD9
 21212                           status	equ	0xFD8
 21213                           
 21214 ;; *************** function _IPv4_Start *****************
 21215 ;; Defined at:
 21216 ;;		line 213 in file "../../TCPIP Library/source/ipv4.c"
 21217 ;; Parameters:    Size  Location     Type
 21218 ;;  destAddress     4   33[COMRAM] unsigned long 
 21219 ;;  protocol        1   37[COMRAM] enum E6803
 21220 ;; Auto vars:     Size  Location     Type
 21221 ;;  targetAddres    4   56[BANK0 ] unsigned long 
 21222 ;;  macAddress      2   60[BANK0 ] PTR const struct .
 21223 ;;		 -> arpMap.macAddress(6), broadcastMAC(6), arpMap(104), NULL(0), 
 21224 ;;  ret             1   62[BANK0 ] enum E6944
 21225 ;; Return value:  Size  Location     Type
 21226 ;;                  1    wreg      enum E366
 21227 ;; Registers used:
 21228 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21229 ;; Tracked objects:
 21230 ;;		On entry : 0/0
 21231 ;;		On exit  : F/0
 21232 ;;		Unchanged: 0/0
 21233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21234 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21235 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21236 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21237 ;;      Totals:        13       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21238 ;;Total ram usage:       20 bytes
 21239 ;; Hardware stack levels used:    1
 21240 ;; Hardware stack levels required when called:   11
 21241 ;; This function calls:
 21242 ;;		_ARPV4_Lookup
 21243 ;;		_ARPV4_Request
 21244 ;;		_ETH_Write16
 21245 ;;		_ETH_Write32
 21246 ;;		_ETH_Write8
 21247 ;;		_ETH_WriteStart
 21248 ;; This function is called by:
 21249 ;;		_ICMP_EchoReply
 21250 ;;		_TCP_Snd
 21251 ;;		_UDP_Start
 21252 ;; This function uses a non-reentrant model
 21253 ;;
 21254                           
 21255                           	psect	text86
 21256  004610                     __ptext86:
 21257                           	opt stack 0
 21258  004610                     _IPv4_Start:
 21259                           	opt stack 15
 21260                           
 21261                           ;ipv4.c: 215: error_msg ret = ERROR;
 21262                           
 21263                           ;incstack = 0
 21264  004610  0100               	movlb	0	; () banked
 21265  004612  6B9E               	clrf	IPv4_Start@ret& (0+255),b
 21266                           
 21267                           ; BSR set to: 0
 21268                           ;ipv4.c: 217: const mac48Address_t *macAddress;
 21269                           ;ipv4.c: 218: uint32_t targetAddress;
 21270                           ;ipv4.c: 221: if(((ipv4Address != 0) || (protocol == UDP))
 21271                           ;ipv4.c: 222: && (ipv4Address != 0x7F000001))
 21272  004614  D8B9               	call	PL745	;call to abstracted procedure
 21273  004616  E103               	bnz	l8237
 21274                           
 21275                           ; BSR set to: 0
 21276  004618  0E11               	movlw	17
 21277  00461A  1826               	xorwf	IPv4_Start@protocol,w,c
 21278  00461C  E162               	bnz	l8251
 21279  00461E                     l8237:
 21280                           
 21281                           ; BSR set to: 0
 21282  00461E  0437               	decf	_ipv4Address,w,c
 21283  004620  E105               	bnz	u11510
 21284  004622  0E7F               	movlw	127
 21285  004624  183A               	xorwf	_ipv4Address+3,w,c
 21286  004626  1038               	iorwf	_ipv4Address+1,w,c
 21287  004628  1039               	iorwf	_ipv4Address+2,w,c
 21288  00462A  E05B               	bz	l8251
 21289  00462C                     u11510:
 21290                           
 21291                           ; BSR set to: 0
 21292                           ;ipv4.c: 223: {
 21293                           ;ipv4.c: 224: if(destAddress != 0xFFFFFFFF)
 21294  00462C  2822               	incf	IPv4_Start@destAddress,w,c
 21295  00462E  E106               	bnz	u11520
 21296  004630  2823               	incf	IPv4_Start@destAddress+1,w,c
 21297  004632  E104               	bnz	u11520
 21298  004634  2824               	incf	IPv4_Start@destAddress+2,w,c
 21299  004636  E102               	bnz	u11520
 21300  004638  2825               	incf	IPv4_Start@destAddress+3,w,c
 21301  00463A  E056               	bz	l8255
 21302  00463C                     u11520:
 21303                           
 21304                           ; BSR set to: 0
 21305                           ;ipv4.c: 225: {
 21306                           ;ipv4.c: 226: if((ipv4SubnetMask & destAddress) == (ipv4SubnetMask & ipv4Address))
 21307  00463C  5037               	movf	_ipv4Address,w,c
 21308  00463E  0102               	movlb	2	; () banked
 21309  004640  1524               	andwf	_ipv4SubnetMask& (0+255),w,b
 21310  004642  6E27               	movwf	??_IPv4_Start& (0+255),c
 21311  004644  5038               	movf	_ipv4Address+1,w,c
 21312  004646  1525               	andwf	(_ipv4SubnetMask+1)& (0+255),w,b
 21313  004648  6E28               	movwf	(??_IPv4_Start+1)& (0+255),c
 21314  00464A  5039               	movf	_ipv4Address+2,w,c
 21315  00464C  1526               	andwf	(_ipv4SubnetMask+2)& (0+255),w,b
 21316  00464E  6E29               	movwf	(??_IPv4_Start+2)& (0+255),c
 21317  004650  503A               	movf	_ipv4Address+3,w,c
 21318  004652  1527               	andwf	(_ipv4SubnetMask+3)& (0+255),w,b
 21319  004654  6E2A               	movwf	(??_IPv4_Start+3)& (0+255),c
 21320  004656  5022               	movf	IPv4_Start@destAddress,w,c
 21321  004658  1524               	andwf	_ipv4SubnetMask& (0+255),w,b
 21322  00465A  6E2B               	movwf	(??_IPv4_Start+4)& (0+255),c
 21323  00465C  5023               	movf	IPv4_Start@destAddress+1,w,c
 21324  00465E  1525               	andwf	(_ipv4SubnetMask+1)& (0+255),w,b
 21325  004660  6E2C               	movwf	(??_IPv4_Start+5)& (0+255),c
 21326  004662  5024               	movf	IPv4_Start@destAddress+2,w,c
 21327  004664  1526               	andwf	(_ipv4SubnetMask+2)& (0+255),w,b
 21328  004666  6E2D               	movwf	(??_IPv4_Start+6)& (0+255),c
 21329  004668  5025               	movf	IPv4_Start@destAddress+3,w,c
 21330  00466A  1527               	andwf	(_ipv4SubnetMask+3)& (0+255),w,b
 21331  00466C  6E2E               	movwf	(??_IPv4_Start+7)& (0+255),c
 21332  00466E  5027               	movf	??_IPv4_Start,w,c
 21333  004670  182B               	xorwf	??_IPv4_Start+4,w,c
 21334  004672  E112               	bnz	l944
 21335  004674  5028               	movf	??_IPv4_Start+1,w,c
 21336  004676  182C               	xorwf	??_IPv4_Start+5,w,c
 21337  004678  E10F               	bnz	l944
 21338  00467A  5029               	movf	??_IPv4_Start+2,w,c
 21339  00467C  182D               	xorwf	??_IPv4_Start+6,w,c
 21340  00467E  E10C               	bnz	l944
 21341  004680  502A               	movf	??_IPv4_Start+3,w,c
 21342  004682  182E               	xorwf	??_IPv4_Start+7,w,c
 21343  004684  E109               	bnz	l944
 21344                           
 21345                           ; BSR set to: 2
 21346                           ;ipv4.c: 227: {
 21347                           ;ipv4.c: 228: targetAddress = destAddress;
 21348  004686  C022  F098         	movff	IPv4_Start@destAddress,IPv4_Start@targetAddress
 21349  00468A  C023  F099         	movff	IPv4_Start@destAddress+1,IPv4_Start@targetAddress+1
 21350  00468E  C024  F09A         	movff	IPv4_Start@destAddress+2,IPv4_Start@targetAddress+2
 21351  004692  C025  F09B         	movff	IPv4_Start@destAddress+3,IPv4_Start@targetAddress+3
 21352                           
 21353                           ;ipv4.c: 229: }
 21354  004696  D008               	goto	l8245
 21355  004698                     l944:
 21356                           
 21357                           ; BSR set to: 2
 21358                           ;ipv4.c: 230: else
 21359                           ;ipv4.c: 231: {
 21360                           ;ipv4.c: 232: targetAddress = ipv4Router;
 21361  004698  C220  F098         	movff	_ipv4Router,IPv4_Start@targetAddress
 21362  00469C  C221  F099         	movff	_ipv4Router+1,IPv4_Start@targetAddress+1
 21363  0046A0  C222  F09A         	movff	_ipv4Router+2,IPv4_Start@targetAddress+2
 21364  0046A4  C223  F09B         	movff	_ipv4Router+3,IPv4_Start@targetAddress+3
 21365  0046A8                     l8245:
 21366                           
 21367                           ; BSR set to: 2
 21368                           ;ipv4.c: 233: }
 21369                           ;ipv4.c: 235: macAddress= ARPV4_Lookup(targetAddress);
 21370  0046A8  C098  F017         	movff	IPv4_Start@targetAddress,ARPV4_Lookup@ip_address
 21371  0046AC  C099  F018         	movff	IPv4_Start@targetAddress+1,ARPV4_Lookup@ip_address+1
 21372  0046B0  C09A  F019         	movff	IPv4_Start@targetAddress+2,ARPV4_Lookup@ip_address+2
 21373  0046B4  C09B  F01A         	movff	IPv4_Start@targetAddress+3,ARPV4_Lookup@ip_address+3
 21374  0046B8  ECF0  F02D         	call	_ARPV4_Lookup	;wreg free
 21375  0046BC  C017  F09C         	movff	?_ARPV4_Lookup,IPv4_Start@macAddress
 21376  0046C0  C018  F09D         	movff	?_ARPV4_Lookup+1,IPv4_Start@macAddress+1
 21377                           
 21378                           ; BSR set to: 2
 21379                           ;ipv4.c: 236: if(macAddress == 0)
 21380  0046C4  0100               	movlb	0	; () banked
 21381  0046C6  519C               	movf	IPv4_Start@macAddress& (0+255),w,b
 21382  0046C8  119D               	iorwf	(IPv4_Start@macAddress+1)& (0+255),w,b
 21383  0046CA  E114               	bnz	l8257
 21384                           
 21385                           ; BSR set to: 0
 21386                           ;ipv4.c: 237: {
 21387                           ;ipv4.c: 238: ret = ARPV4_Request(targetAddress);
 21388  0046CC  C098  F01D         	movff	IPv4_Start@targetAddress,ARPV4_Request@destAddress
 21389  0046D0  C099  F01E         	movff	IPv4_Start@targetAddress+1,ARPV4_Request@destAddress+1
 21390  0046D4  C09A  F01F         	movff	IPv4_Start@targetAddress+2,ARPV4_Request@destAddress+2
 21391  0046D8  C09B  F020         	movff	IPv4_Start@targetAddress+3,ARPV4_Request@destAddress+3
 21392  0046DC  EC7E  F024         	call	_ARPV4_Request	;wreg free
 21393  0046E0  6F9E               	movwf	IPv4_Start@ret& (0+255),b
 21394  0046E2                     l8251:
 21395                           
 21396                           ;ipv4.c: 239: return ret;
 21397  0046E2  0100               	movlb	0	; () banked
 21398  0046E4  519E               	movf	IPv4_Start@ret& (0+255),w,b
 21399  0046E6  0012               	return	
 21400  0046E8                     l8255:
 21401                           
 21402                           ; BSR set to: 0
 21403                           ;ipv4.c: 242: else
 21404                           ;ipv4.c: 243: {
 21405                           ;ipv4.c: 244: macAddress = &broadcastMAC;
 21406  0046E8  0E37               	movlw	low _broadcastMAC
 21407  0046EA  6F9C               	movwf	IPv4_Start@macAddress& (0+255),b
 21408  0046EC  519C               	movf	IPv4_Start@macAddress& (0+255),w,b
 21409  0046EE  A4D8               	btfss	status,2,c
 21410  0046F0  0E10               	movlw	high __smallconst
 21411  0046F2  6F9D               	movwf	(IPv4_Start@macAddress+1)& (0+255),b
 21412  0046F4                     l8257:
 21413                           
 21414                           ; BSR set to: 0
 21415                           ;ipv4.c: 245: }
 21416                           ;ipv4.c: 246: ret = ETH_WriteStart(macAddress, 0x0800);
 21417  0046F4  C09C  F017         	movff	IPv4_Start@macAddress,ETH_WriteStart@dest_mac
 21418  0046F8  C09D  F018         	movff	IPv4_Start@macAddress+1,ETH_WriteStart@dest_mac+1
 21419  0046FC  0E08               	movlw	8
 21420  0046FE  6E1A               	movwf	ETH_WriteStart@type+1,c
 21421  004700  6A19               	clrf	ETH_WriteStart@type,c
 21422  004702  EC0D  F027         	call	_ETH_WriteStart	;wreg free
 21423  004706  0100               	movlb	0	; () banked
 21424  004708  6F9E               	movwf	IPv4_Start@ret& (0+255),b
 21425                           
 21426                           ; BSR set to: 0
 21427                           ;ipv4.c: 247: if(ret == SUCCESS)
 21428  00470A  059E               	decf	IPv4_Start@ret& (0+255),w,b
 21429  00470C  E1EA               	bnz	l8251
 21430                           
 21431                           ; BSR set to: 0
 21432                           ;ipv4.c: 248: {
 21433                           ;ipv4.c: 249: ETH_Write16(0x4500);
 21434  00470E  0E45               	movlw	69
 21435  004710  6E18               	movwf	ETH_Write16@data+1,c
 21436  004712  6A17               	clrf	ETH_Write16@data,c
 21437  004714  EC4F  F032         	call	_ETH_Write16	;wreg free
 21438                           
 21439                           ;ipv4.c: 250: ETH_Write16(0);
 21440  004718  6A18               	clrf	ETH_Write16@data+1,c
 21441  00471A  6A17               	clrf	ETH_Write16@data,c
 21442  00471C  EC4F  F032         	call	_ETH_Write16	;wreg free
 21443                           
 21444                           ;ipv4.c: 251: ETH_Write32(0xAA554000);
 21445  004720  6A17               	clrf	ETH_Write32@data,c
 21446  004722  0E40               	movlw	64
 21447  004724  6E18               	movwf	ETH_Write32@data+1,c
 21448  004726  0E55               	movlw	85
 21449  004728  6E19               	movwf	ETH_Write32@data+2,c
 21450  00472A  0EAA               	movlw	170
 21451  00472C  6E1A               	movwf	ETH_Write32@data+3,c
 21452  00472E  ECC4  F031         	call	_ETH_Write32	;wreg free
 21453                           
 21454                           ;ipv4.c: 252: ETH_Write8(64u);
 21455  004732  0E40               	movlw	64
 21456  004734  EC75  F032         	call	_ETH_Write8
 21457                           
 21458                           ;ipv4.c: 253: ETH_Write8(protocol);
 21459  004738  5026               	movf	IPv4_Start@protocol,w,c
 21460  00473A  EC75  F032         	call	_ETH_Write8
 21461                           
 21462                           ;ipv4.c: 254: ETH_Write16(0);
 21463  00473E  6A18               	clrf	ETH_Write16@data+1,c
 21464  004740  6A17               	clrf	ETH_Write16@data,c
 21465  004742  EC4F  F032         	call	_ETH_Write16	;wreg free
 21466                           
 21467                           ;ipv4.c: 255: ETH_Write32(ipv4Address);
 21468  004746  ECF3  F022         	call	PL561	;call to abstracted procedure
 21469  00474A  ECC4  F031         	call	_ETH_Write32	;wreg free
 21470                           
 21471                           ;ipv4.c: 256: ETH_Write32(destAddress);
 21472  00474E  C022  F017         	movff	IPv4_Start@destAddress,ETH_Write32@data
 21473  004752  C023  F018         	movff	IPv4_Start@destAddress+1,ETH_Write32@data+1
 21474  004756  C024  F019         	movff	IPv4_Start@destAddress+2,ETH_Write32@data+2
 21475  00475A  C025  F01A         	movff	IPv4_Start@destAddress+3,ETH_Write32@data+3
 21476  00475E  ECC4  F031         	call	_ETH_Write32	;wreg free
 21477                           
 21478                           ;ipv4.c: 259: ipv4Header.srcIpAddress = ipv4Address;
 21479  004762  C037  F2A8         	movff	_ipv4Address,_ipv4Header+12
 21480  004766  C038  F2A9         	movff	_ipv4Address+1,_ipv4Header+13
 21481  00476A  C039  F2AA         	movff	_ipv4Address+2,_ipv4Header+14
 21482  00476E  C03A  F2AB         	movff	_ipv4Address+3,_ipv4Header+15
 21483                           
 21484                           ;ipv4.c: 260: ipv4Header.dstIpAddress = destAddress;
 21485  004772  C022  F2AC         	movff	IPv4_Start@destAddress,_ipv4Header+16
 21486  004776  C023  F2AD         	movff	IPv4_Start@destAddress+1,_ipv4Header+17
 21487  00477A  C024  F2AE         	movff	IPv4_Start@destAddress+2,_ipv4Header+18
 21488  00477E  C025  F2AF         	movff	IPv4_Start@destAddress+3,_ipv4Header+19
 21489                           
 21490                           ;ipv4.c: 261: ipv4Header.protocol = protocol;
 21491  004782  C026  F2A5         	movff	IPv4_Start@protocol,_ipv4Header+9
 21492  004786  D7AD               	goto	l8251
 21493  004788                     __end_of_IPv4_Start:
 21494                           	opt stack 0
 21495  004788                     PL745:
 21496                           	opt stack 18
 21497  004788  5037               	movf	_ipv4Address,w,c
 21498  00478A  1038               	iorwf	_ipv4Address+1,w,c
 21499  00478C  1039               	iorwf	_ipv4Address+2,w,c
 21500  00478E  103A               	iorwf	_ipv4Address+3,w,c
 21501  004790  0012               	return	
 21502  004792                     __end_ofPL745:
 21503                           	opt stack 0
 21504                           tosu	equ	0xFFF
 21505                           tosh	equ	0xFFE
 21506                           tosl	equ	0xFFD
 21507                           pclath	equ	0xFFA
 21508                           tblptru	equ	0xFF8
 21509                           tblptrh	equ	0xFF7
 21510                           tblptrl	equ	0xFF6
 21511                           tablat	equ	0xFF5
 21512                           prodh	equ	0xFF4
 21513                           prodl	equ	0xFF3
 21514                           intcon	equ	0xFF2
 21515                           indf0	equ	0xFEF
 21516                           postinc0	equ	0xFEE
 21517                           fsr0h	equ	0xFEA
 21518                           fsr0l	equ	0xFE9
 21519                           wreg	equ	0xFE8
 21520                           postinc1	equ	0xFE6
 21521                           plusw1	equ	0xFE3
 21522                           fsr1h	equ	0xFE2
 21523                           fsr1l	equ	0xFE1
 21524                           bsr	equ	0xFE0
 21525                           indf2	equ	0xFDF
 21526                           postinc2	equ	0xFDE
 21527                           postdec2	equ	0xFDD
 21528                           plusw2	equ	0xFDB
 21529                           fsr2h	equ	0xFDA
 21530                           fsr2l	equ	0xFD9
 21531                           status	equ	0xFD8
 21532                           
 21533 ;; *************** function _ETH_Write8 *****************
 21534 ;; Defined at:
 21535 ;;		line 465 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 21536 ;; Parameters:    Size  Location     Type
 21537 ;;  data            1    wreg     unsigned char 
 21538 ;; Auto vars:     Size  Location     Type
 21539 ;;  data            1   22[COMRAM] unsigned char 
 21540 ;; Return value:  Size  Location     Type
 21541 ;;		None               void
 21542 ;; Registers used:
 21543 ;;		wreg, status,2, cstack
 21544 ;; Tracked objects:
 21545 ;;		On entry : 0/0
 21546 ;;		On exit  : 0/0
 21547 ;;		Unchanged: 0/0
 21548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21550 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21552 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21553 ;;Total ram usage:        1 bytes
 21554 ;; Hardware stack levels used:    1
 21555 ;; Hardware stack levels required when called:    9
 21556 ;; This function calls:
 21557 ;;		_ETH_EdataWrite
 21558 ;; This function is called by:
 21559 ;;		_DHCP_Request
 21560 ;;		_DHCP_WriteZeros
 21561 ;;		_IPv4_Start
 21562 ;;		_UDP_Write8
 21563 ;; This function uses a non-reentrant model
 21564 ;;
 21565                           
 21566                           	psect	text87
 21567  0064EA                     __ptext87:
 21568                           	opt stack 0
 21569  0064EA                     _ETH_Write8:
 21570                           	opt stack 16
 21571                           
 21572                           ; BSR set to: 0
 21573                           ;incstack = 0
 21574                           ;ETH_Write8@data stored from wreg
 21575  0064EA  6E17               	movwf	ETH_Write8@data,c
 21576                           
 21577                           ;j60_driver.c: 467: ETH_EdataWrite(data);
 21578  0064EC  5017               	movf	ETH_Write8@data,w,c
 21579  0064EE                     i26L__ptext103:
 21580                           	opt stack 0
 21581  0064EE                     i26L_ETH_EdataWrite:
 21582                           	opt stack 0
 21583  0064EE                     i26Ll7811:
 21584                           	opt stack 16
 21585  0064EE  CFE8 FF61          	movff	wreg,3937	;# 
 21586  0064F2                     i26Ll463:
 21587                           	opt stack 0
 21588  0064F2  0012               	return	
 21589  0064F4                     __end_of_ETH_Write8:
 21590                           	opt stack 0
 21591                           tosu	equ	0xFFF
 21592                           tosh	equ	0xFFE
 21593                           tosl	equ	0xFFD
 21594                           pclath	equ	0xFFA
 21595                           tblptru	equ	0xFF8
 21596                           tblptrh	equ	0xFF7
 21597                           tblptrl	equ	0xFF6
 21598                           tablat	equ	0xFF5
 21599                           prodh	equ	0xFF4
 21600                           prodl	equ	0xFF3
 21601                           intcon	equ	0xFF2
 21602                           indf0	equ	0xFEF
 21603                           postinc0	equ	0xFEE
 21604                           fsr0h	equ	0xFEA
 21605                           fsr0l	equ	0xFE9
 21606                           wreg	equ	0xFE8
 21607                           postinc1	equ	0xFE6
 21608                           plusw1	equ	0xFE3
 21609                           fsr1h	equ	0xFE2
 21610                           fsr1l	equ	0xFE1
 21611                           bsr	equ	0xFE0
 21612                           indf2	equ	0xFDF
 21613                           postinc2	equ	0xFDE
 21614                           postdec2	equ	0xFDD
 21615                           plusw2	equ	0xFDB
 21616                           fsr2h	equ	0xFDA
 21617                           fsr2l	equ	0xFD9
 21618                           status	equ	0xFD8
 21619                           
 21620 ;; *************** function _ETH_Write32 *****************
 21621 ;; Defined at:
 21622 ;;		line 495 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 21623 ;; Parameters:    Size  Location     Type
 21624 ;;  data            4   22[COMRAM] unsigned long 
 21625 ;; Auto vars:     Size  Location     Type
 21626 ;;		None
 21627 ;; Return value:  Size  Location     Type
 21628 ;;		None               void
 21629 ;; Registers used:
 21630 ;;		wreg, status,2, cstack
 21631 ;; Tracked objects:
 21632 ;;		On entry : 0/0
 21633 ;;		On exit  : 0/0
 21634 ;;		Unchanged: 0/0
 21635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21636 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21639 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21640 ;;Total ram usage:        4 bytes
 21641 ;; Hardware stack levels used:    1
 21642 ;; Hardware stack levels required when called:    9
 21643 ;; This function calls:
 21644 ;;		_ETH_EdataWrite
 21645 ;; This function is called by:
 21646 ;;		_DHCP_Request
 21647 ;;		_IPv4_Start
 21648 ;;		_UDP_Write32
 21649 ;; This function uses a non-reentrant model
 21650 ;;
 21651                           
 21652                           	psect	text88
 21653  006388                     __ptext88:
 21654                           	opt stack 0
 21655  006388                     _ETH_Write32:
 21656                           	opt stack 16
 21657                           
 21658                           ;j60_driver.c: 497: ETH_EdataWrite(data >> 24);
 21659                           
 21660                           ;incstack = 0
 21661  006388  501A               	movf	ETH_Write32@data+3,w,c
 21662  00638A                     i27L__ptext103:
 21663                           	opt stack 0
 21664  00638A                     i27L_ETH_EdataWrite:
 21665                           	opt stack 0
 21666  00638A                     i27Ll7811:
 21667                           	opt stack 16
 21668  00638A  CFE8 FF61          	movff	wreg,3937	;# 
 21669  00638E                     i27Ll463:
 21670                           	opt stack 16
 21671                           
 21672                           ;j60_driver.c: 498: ETH_EdataWrite(data >> 16);
 21673  00638E  5019               	movf	ETH_Write32@data+2,w,c
 21674  006390                     i28L__ptext103:
 21675                           	opt stack 0
 21676  006390                     i28L_ETH_EdataWrite:
 21677                           	opt stack 0
 21678  006390                     i28Ll7811:
 21679                           	opt stack 16
 21680  006390  CFE8 FF61          	movff	wreg,3937	;# 
 21681  006394                     i28Ll463:
 21682                           	opt stack 16
 21683                           
 21684                           ;j60_driver.c: 499: ETH_EdataWrite(data >> 8);
 21685  006394  5018               	movf	ETH_Write32@data+1,w,c
 21686  006396                     i29L__ptext103:
 21687                           	opt stack 0
 21688  006396                     i29L_ETH_EdataWrite:
 21689                           	opt stack 0
 21690  006396                     i29Ll7811:
 21691                           	opt stack 16
 21692  006396  CFE8 FF61          	movff	wreg,3937	;# 
 21693  00639A                     i29Ll463:
 21694                           	opt stack 16
 21695                           
 21696                           ;j60_driver.c: 500: ETH_EdataWrite(data);
 21697  00639A  5017               	movf	ETH_Write32@data,w,c
 21698  00639C                     i30L__ptext103:
 21699                           	opt stack 0
 21700  00639C                     i30L_ETH_EdataWrite:
 21701                           	opt stack 0
 21702  00639C                     i30Ll7811:
 21703                           	opt stack 16
 21704  00639C  CFE8 FF61          	movff	wreg,3937	;# 
 21705  0063A0                     i30Ll463:
 21706                           	opt stack 0
 21707  0063A0  0012               	return	
 21708  0063A2                     __end_of_ETH_Write32:
 21709                           	opt stack 0
 21710                           tosu	equ	0xFFF
 21711                           tosh	equ	0xFFE
 21712                           tosl	equ	0xFFD
 21713                           pclath	equ	0xFFA
 21714                           tblptru	equ	0xFF8
 21715                           tblptrh	equ	0xFF7
 21716                           tblptrl	equ	0xFF6
 21717                           tablat	equ	0xFF5
 21718                           prodh	equ	0xFF4
 21719                           prodl	equ	0xFF3
 21720                           intcon	equ	0xFF2
 21721                           indf0	equ	0xFEF
 21722                           postinc0	equ	0xFEE
 21723                           fsr0h	equ	0xFEA
 21724                           fsr0l	equ	0xFE9
 21725                           wreg	equ	0xFE8
 21726                           postinc1	equ	0xFE6
 21727                           plusw1	equ	0xFE3
 21728                           fsr1h	equ	0xFE2
 21729                           fsr1l	equ	0xFE1
 21730                           bsr	equ	0xFE0
 21731                           indf2	equ	0xFDF
 21732                           postinc2	equ	0xFDE
 21733                           postdec2	equ	0xFDD
 21734                           plusw2	equ	0xFDB
 21735                           fsr2h	equ	0xFDA
 21736                           fsr2l	equ	0xFD9
 21737                           status	equ	0xFD8
 21738                           
 21739 ;; *************** function _ETH_Write16 *****************
 21740 ;; Defined at:
 21741 ;;		line 474 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 21742 ;; Parameters:    Size  Location     Type
 21743 ;;  data            2   22[COMRAM] unsigned int 
 21744 ;; Auto vars:     Size  Location     Type
 21745 ;;		None
 21746 ;; Return value:  Size  Location     Type
 21747 ;;		None               void
 21748 ;; Registers used:
 21749 ;;		wreg, status,2, cstack
 21750 ;; Tracked objects:
 21751 ;;		On entry : 0/0
 21752 ;;		On exit  : 0/0
 21753 ;;		Unchanged: 0/0
 21754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21755 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21758 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21759 ;;Total ram usage:        2 bytes
 21760 ;; Hardware stack levels used:    1
 21761 ;; Hardware stack levels required when called:    9
 21762 ;; This function calls:
 21763 ;;		_ETH_EdataWrite
 21764 ;; This function is called by:
 21765 ;;		_DHCP_Request
 21766 ;;		_ICMP_EchoReply
 21767 ;;		_IPv4_Start
 21768 ;;		_UDP_Start
 21769 ;;		_UDP_Write16
 21770 ;; This function uses a non-reentrant model
 21771 ;;
 21772                           
 21773                           	psect	text89
 21774  00649E                     __ptext89:
 21775                           	opt stack 0
 21776  00649E                     _ETH_Write16:
 21777                           	opt stack 16
 21778                           
 21779                           ;j60_driver.c: 476: ETH_EdataWrite(data >> 8);
 21780                           
 21781                           ;incstack = 0
 21782  00649E  5018               	movf	ETH_Write16@data+1,w,c
 21783  0064A0                     i31L__ptext103:
 21784                           	opt stack 0
 21785  0064A0                     i31L_ETH_EdataWrite:
 21786                           	opt stack 0
 21787  0064A0                     i31Ll7811:
 21788                           	opt stack 16
 21789  0064A0  CFE8 FF61          	movff	wreg,3937	;# 
 21790  0064A4                     i31Ll463:
 21791                           	opt stack 16
 21792                           
 21793                           ;j60_driver.c: 477: ETH_EdataWrite(data);
 21794  0064A4  5017               	movf	ETH_Write16@data,w,c
 21795  0064A6                     i32L__ptext103:
 21796                           	opt stack 0
 21797  0064A6                     i32L_ETH_EdataWrite:
 21798                           	opt stack 0
 21799  0064A6                     i32Ll7811:
 21800                           	opt stack 16
 21801  0064A6  CFE8 FF61          	movff	wreg,3937	;# 
 21802  0064AA                     i32Ll463:
 21803                           	opt stack 0
 21804  0064AA  0012               	return	
 21805  0064AC                     __end_of_ETH_Write16:
 21806                           	opt stack 0
 21807                           tosu	equ	0xFFF
 21808                           tosh	equ	0xFFE
 21809                           tosl	equ	0xFFD
 21810                           pclath	equ	0xFFA
 21811                           tblptru	equ	0xFF8
 21812                           tblptrh	equ	0xFF7
 21813                           tblptrl	equ	0xFF6
 21814                           tablat	equ	0xFF5
 21815                           prodh	equ	0xFF4
 21816                           prodl	equ	0xFF3
 21817                           intcon	equ	0xFF2
 21818                           indf0	equ	0xFEF
 21819                           postinc0	equ	0xFEE
 21820                           fsr0h	equ	0xFEA
 21821                           fsr0l	equ	0xFE9
 21822                           wreg	equ	0xFE8
 21823                           postinc1	equ	0xFE6
 21824                           plusw1	equ	0xFE3
 21825                           fsr1h	equ	0xFE2
 21826                           fsr1l	equ	0xFE1
 21827                           bsr	equ	0xFE0
 21828                           indf2	equ	0xFDF
 21829                           postinc2	equ	0xFDE
 21830                           postdec2	equ	0xFDD
 21831                           plusw2	equ	0xFDB
 21832                           fsr2h	equ	0xFDA
 21833                           fsr2l	equ	0xFD9
 21834                           status	equ	0xFD8
 21835                           
 21836 ;; *************** function _ARPV4_Request *****************
 21837 ;; Defined at:
 21838 ;;		line 194 in file "../../TCPIP Library/source/arpv4.c"
 21839 ;; Parameters:    Size  Location     Type
 21840 ;;  destAddress     4   28[COMRAM] unsigned long 
 21841 ;; Auto vars:     Size  Location     Type
 21842 ;;  header         28   28[BANK0 ] struct .
 21843 ;;  ret             1   27[BANK0 ] enum E450
 21844 ;; Return value:  Size  Location     Type
 21845 ;;                  1    wreg      enum E450
 21846 ;; Registers used:
 21847 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21848 ;; Tracked objects:
 21849 ;;		On entry : F/0
 21850 ;;		On exit  : F/0
 21851 ;;		Unchanged: 0/0
 21852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21853 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21854 ;;      Locals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21855 ;;      Temps:          0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21856 ;;      Totals:         4      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21857 ;;Total ram usage:       60 bytes
 21858 ;; Hardware stack levels used:    1
 21859 ;; Hardware stack levels required when called:   10
 21860 ;; This function calls:
 21861 ;;		_ETH_GetMAC
 21862 ;;		_ETH_Send
 21863 ;;		_ETH_WriteBlock
 21864 ;;		_ETH_WriteStart
 21865 ;; This function is called by:
 21866 ;;		_IPv4_Start
 21867 ;; This function uses a non-reentrant model
 21868 ;;
 21869                           
 21870                           	psect	text90
 21871  0048FC                     __ptext90:
 21872                           	opt stack 0
 21873  0048FC                     _ARPV4_Request:
 21874                           	opt stack 15
 21875                           
 21876                           ; BSR set to: 0
 21877                           ;arpv4.c: 200: arpHeader_t header;
 21878                           ;arpv4.c: 201: header.htype = ((((uint16_t)1 & (uint16_t)0xFF00) >> 8) | (((uint16_t)1 &
      +                           (uint16_t)0x00FF) << 8));
 21879                           
 21880                           ; BSR set to: 0
 21881                           
 21882                           ;incstack = 0
 21883  0048FC  0E01               	movlw	1
 21884  0048FE  6F7D               	movwf	(ARPV4_Request@header+1)& (0+255),b
 21885  004900  6B7C               	clrf	ARPV4_Request@header& (0+255),b
 21886                           
 21887                           ;arpv4.c: 202: header.ptype = ((((uint16_t)0x0800 & (uint16_t)0xFF00) >> 8) | (((uint16_
      +                          t)0x0800 & (uint16_t)0x00FF) << 8));
 21888  004902  6B7F               	clrf	(ARPV4_Request@header+3)& (0+255),b
 21889  004904  0E08               	movlw	8
 21890  004906  6F7E               	movwf	(ARPV4_Request@header+2)& (0+255),b
 21891                           
 21892                           ;arpv4.c: 203: header.hlen = 6;
 21893  004908  0E06               	movlw	6
 21894  00490A  6F80               	movwf	(ARPV4_Request@header+4)& (0+255),b
 21895                           
 21896                           ;arpv4.c: 204: header.plen = 4;
 21897  00490C  0E04               	movlw	4
 21898  00490E  6F81               	movwf	(ARPV4_Request@header+5)& (0+255),b
 21899                           
 21900                           ;arpv4.c: 205: header.oper = ((((uint16_t)1 & (uint16_t)0xFF00) >> 8) | (((uint16_t)1 & 
      +                          (uint16_t)0x00FF) << 8));
 21901  004910  0E01               	movlw	1
 21902  004912  6F83               	movwf	(ARPV4_Request@header+7)& (0+255),b
 21903  004914  6B82               	clrf	(ARPV4_Request@header+6)& (0+255),b
 21904                           
 21905                           ; BSR set to: 0
 21906                           ;arpv4.c: 206: ETH_GetMAC((char*)&header.sha);
 21907  004916  0E7C               	movlw	ARPV4_Request@header& (0+255)
 21908  004918  0F08               	addlw	8
 21909  00491A  ECB1  F02F         	call	_ETH_GetMAC
 21910                           
 21911                           ;arpv4.c: 207: header.spa = ((((uint32_t)ipv4Address&(uint32_t)0xff000000) >> 24) | (((u
      +                          int32_t)ipv4Address&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)ipv4Address&(uint32_t)0x00
      +                          00ff00) << 8) | (((uint32_t)ipv4Address&(uint32_t)0x000000ff) << 24) );
 21912  00491E  5037               	movf	_ipv4Address,w,c
 21913  004920  0100               	movlb	0	; () banked
 21914  004922  D882               	call	PL627	;call to abstracted procedure
 21915  004924  5038               	movf	_ipv4Address+1,w,c
 21916  004926  D874               	call	PL609	;call to abstracted procedure
 21917  004928  5039               	movf	_ipv4Address+2,w,c
 21918  00492A  D865               	call	PL595	;call to abstracted procedure
 21919  00492C  503A               	movf	_ipv4Address+3,w,c
 21920  00492E  6F72               	movwf	(??_ARPV4_Request+18)& (0+255),b
 21921  004930  0E19               	movlw	25
 21922  004932  D001               	goto	u11170
 21923  004934                     u11175:
 21924  004934  D88A               	call	PL711	;call to abstracted procedure
 21925  004936                     u11170:
 21926  004936  2EE8               	decfsz	wreg,f,c
 21927  004938  D7FD               	goto	u11175
 21928  00493A  D842               	call	PL515	;call to abstracted procedure
 21929  00493C  6F8A               	movwf	(ARPV4_Request@header+14)& (0+255),b
 21930  00493E  5161               	movf	(??_ARPV4_Request+1)& (0+255),w,b
 21931  004940  1178               	iorwf	(??_ARPV4_Request+24)& (0+255),w,b
 21932  004942  6F8B               	movwf	(ARPV4_Request@header+15)& (0+255),b
 21933  004944  5162               	movf	(??_ARPV4_Request+2)& (0+255),w,b
 21934  004946  1179               	iorwf	(??_ARPV4_Request+25)& (0+255),w,b
 21935  004948  6F8C               	movwf	(ARPV4_Request@header+16)& (0+255),b
 21936  00494A  5163               	movf	(??_ARPV4_Request+3)& (0+255),w,b
 21937  00494C  117A               	iorwf	(??_ARPV4_Request+26)& (0+255),w,b
 21938  00494E  6F8D               	movwf	(ARPV4_Request@header+17)& (0+255),b
 21939                           
 21940                           ; BSR set to: 0
 21941                           ;arpv4.c: 208: header.tpa= ((((uint32_t)destAddress&(uint32_t)0xff000000) >> 24) | (((ui
      +                          nt32_t)destAddress&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)destAddress&(uint32_t)0x000
      +                          0ff00) << 8) | (((uint32_t)destAddress&(uint32_t)0x000000ff) << 24) );
 21942  004950  501D               	movf	ARPV4_Request@destAddress,w,c
 21943  004952  D86A               	call	PL627	;call to abstracted procedure
 21944  004954  501E               	movf	ARPV4_Request@destAddress+1,w,c
 21945  004956  D85C               	call	PL609	;call to abstracted procedure
 21946  004958  501F               	movf	ARPV4_Request@destAddress+2,w,c
 21947  00495A  D84D               	call	PL595	;call to abstracted procedure
 21948  00495C  5020               	movf	ARPV4_Request@destAddress+3,w,c
 21949  00495E  6F72               	movwf	(??_ARPV4_Request+18)& (0+255),b
 21950  004960  0E19               	movlw	25
 21951  004962  D001               	goto	u11180
 21952  004964                     u11185:
 21953  004964  D872               	call	PL711	;call to abstracted procedure
 21954  004966                     u11180:
 21955  004966  2EE8               	decfsz	wreg,f,c
 21956  004968  D7FD               	goto	u11185
 21957  00496A  D82A               	call	PL515	;call to abstracted procedure
 21958  00496C  6F94               	movwf	(ARPV4_Request@header+24)& (0+255),b
 21959  00496E  5161               	movf	(??_ARPV4_Request+1)& (0+255),w,b
 21960  004970  1178               	iorwf	(??_ARPV4_Request+24)& (0+255),w,b
 21961  004972  6F95               	movwf	(ARPV4_Request@header+25)& (0+255),b
 21962  004974  5162               	movf	(??_ARPV4_Request+2)& (0+255),w,b
 21963  004976  1179               	iorwf	(??_ARPV4_Request+25)& (0+255),w,b
 21964  004978  6F96               	movwf	(ARPV4_Request@header+26)& (0+255),b
 21965  00497A  5163               	movf	(??_ARPV4_Request+3)& (0+255),w,b
 21966  00497C  117A               	iorwf	(??_ARPV4_Request+26)& (0+255),w,b
 21967  00497E  6F97               	movwf	(ARPV4_Request@header+27)& (0+255),b
 21968                           
 21969                           ; BSR set to: 0
 21970                           ;arpv4.c: 209: header.tha.s.byte1 = 0;
 21971  004980  6B8E               	clrf	(ARPV4_Request@header+18)& (0+255),b
 21972                           
 21973                           ; BSR set to: 0
 21974                           ;arpv4.c: 210: header.tha.s.byte2 = 0;
 21975  004982  6B8F               	clrf	(ARPV4_Request@header+19)& (0+255),b
 21976                           
 21977                           ; BSR set to: 0
 21978                           ;arpv4.c: 211: header.tha.s.byte3 = 0;
 21979  004984  6B90               	clrf	(ARPV4_Request@header+20)& (0+255),b
 21980                           
 21981                           ; BSR set to: 0
 21982                           ;arpv4.c: 212: header.tha.s.byte4 = 0;
 21983  004986  6B91               	clrf	(ARPV4_Request@header+21)& (0+255),b
 21984                           
 21985                           ; BSR set to: 0
 21986                           ;arpv4.c: 213: header.tha.s.byte5 = 0;
 21987  004988  6B92               	clrf	(ARPV4_Request@header+22)& (0+255),b
 21988                           
 21989                           ; BSR set to: 0
 21990                           ;arpv4.c: 214: header.tha.s.byte6 = 0;
 21991  00498A  6B93               	clrf	(ARPV4_Request@header+23)& (0+255),b
 21992                           
 21993                           ; BSR set to: 0
 21994                           ;arpv4.c: 216: ret = ETH_WriteStart(&broadcastMAC,0x0806);
 21995  00498C  0E37               	movlw	low _broadcastMAC
 21996  00498E  6E17               	movwf	ETH_WriteStart@dest_mac,c
 21997  004990  5017               	movf	ETH_WriteStart@dest_mac,w,c
 21998  004992  A4D8               	btfss	status,2,c
 21999  004994  0E10               	movlw	high __smallconst
 22000  004996  6E18               	movwf	ETH_WriteStart@dest_mac+1,c
 22001  004998  D85E               	call	PL727	;call to abstracted procedure
 22002  00499A  EC0D  F027         	call	_ETH_WriteStart	;wreg free
 22003  00499E  0100               	movlb	0	; () banked
 22004  0049A0  6F7B               	movwf	ARPV4_Request@ret& (0+255),b
 22005                           
 22006                           ; BSR set to: 0
 22007                           ;arpv4.c: 217: if(ret == SUCCESS)
 22008  0049A2  057B               	decf	ARPV4_Request@ret& (0+255),w,b
 22009  0049A4  E10B               	bnz	l8055
 22010                           
 22011                           ; BSR set to: 0
 22012                           ;arpv4.c: 218: {
 22013                           ;arpv4.c: 219: ETH_WriteBlock((char*)&header,sizeof(arpHeader_t));
 22014  0049A6  0E7C               	movlw	low ARPV4_Request@header
 22015  0049A8  D84A               	call	PL705	;call to abstracted procedure
 22016  0049AA  EC89  F02E         	call	_ETH_WriteBlock	;wreg free
 22017                           
 22018                           ;arpv4.c: 220: ret = ETH_Send();
 22019  0049AE  EC9F  F030         	call	_ETH_Send	;wreg free
 22020  0049B2  0100               	movlb	0	; () banked
 22021  0049B4  6F7B               	movwf	ARPV4_Request@ret& (0+255),b
 22022                           
 22023                           ; BSR set to: 0
 22024                           ;arpv4.c: 221: if(ret == SUCCESS)
 22025  0049B6  057B               	decf	ARPV4_Request@ret& (0+255),w,b
 22026  0049B8  E101               	bnz	l8055
 22027                           
 22028                           ; BSR set to: 0
 22029                           ;arpv4.c: 222: {
 22030                           ;arpv4.c: 223: return MAC_NOT_FOUND;
 22031  0049BA  0C05               	retlw	5
 22032  0049BC                     l8055:
 22033                           
 22034                           ; BSR set to: 0
 22035                           ;arpv4.c: 224: }
 22036                           ;arpv4.c: 225: }
 22037                           ;arpv4.c: 226: return ret;
 22038  0049BC  517B               	movf	ARPV4_Request@ret& (0+255),w,b
 22039                           
 22040                           ; BSR set to: 0
 22041  0049BE  0012               	return		;funcret
 22042  0049C0                     __end_of_ARPV4_Request:
 22043                           	opt stack 0
 22044  0049C0                     PL515:
 22045                           	opt stack 15
 22046  0049C0  516B               	movf	(??_ARPV4_Request+11)& (0+255),w,b
 22047  0049C2  116F               	iorwf	(??_ARPV4_Request+15)& (0+255),w,b
 22048  0049C4  6F73               	movwf	(??_ARPV4_Request+19)& (0+255),b
 22049  0049C6  516C               	movf	(??_ARPV4_Request+12)& (0+255),w,b
 22050  0049C8  1170               	iorwf	(??_ARPV4_Request+16)& (0+255),w,b
 22051  0049CA  6F74               	movwf	(??_ARPV4_Request+20)& (0+255),b
 22052  0049CC  516D               	movf	(??_ARPV4_Request+13)& (0+255),w,b
 22053  0049CE  1171               	iorwf	(??_ARPV4_Request+17)& (0+255),w,b
 22054  0049D0  6F75               	movwf	(??_ARPV4_Request+21)& (0+255),b
 22055  0049D2  516E               	movf	(??_ARPV4_Request+14)& (0+255),w,b
 22056  0049D4  1172               	iorwf	(??_ARPV4_Request+18)& (0+255),w,b
 22057  0049D6  6F76               	movwf	(??_ARPV4_Request+22)& (0+255),b
 22058  0049D8  5164               	movf	(??_ARPV4_Request+4)& (0+255),w,b
 22059  0049DA  1173               	iorwf	(??_ARPV4_Request+19)& (0+255),w,b
 22060  0049DC  6F77               	movwf	(??_ARPV4_Request+23)& (0+255),b
 22061  0049DE  5165               	movf	(??_ARPV4_Request+5)& (0+255),w,b
 22062  0049E0  1174               	iorwf	(??_ARPV4_Request+20)& (0+255),w,b
 22063  0049E2  6F78               	movwf	(??_ARPV4_Request+24)& (0+255),b
 22064  0049E4  5166               	movf	(??_ARPV4_Request+6)& (0+255),w,b
 22065  0049E6  1175               	iorwf	(??_ARPV4_Request+21)& (0+255),w,b
 22066  0049E8  6F79               	movwf	(??_ARPV4_Request+25)& (0+255),b
 22067  0049EA  5167               	movf	(??_ARPV4_Request+7)& (0+255),w,b
 22068  0049EC  1176               	iorwf	(??_ARPV4_Request+22)& (0+255),w,b
 22069  0049EE  6F7A               	movwf	(??_ARPV4_Request+26)& (0+255),b
 22070  0049F0  5160               	movf	??_ARPV4_Request& (0+255),w,b
 22071  0049F2  1177               	iorwf	(??_ARPV4_Request+23)& (0+255),w,b
 22072  0049F4  0012               	return	
 22073  0049F6                     __end_ofPL515:
 22074                           	opt stack 0
 22075  0049F6                     PL595:
 22076                           	opt stack 15
 22077  0049F6  6F69               	movwf	(??_ARPV4_Request+9)& (0+255),b
 22078  0049F8  6B6A               	clrf	(??_ARPV4_Request+10)& (0+255),b
 22079  0049FA  5168               	movf	(??_ARPV4_Request+8)& (0+255),w,b
 22080  0049FC  6F6B               	movwf	(??_ARPV4_Request+11)& (0+255),b
 22081  0049FE  5169               	movf	(??_ARPV4_Request+9)& (0+255),w,b
 22082  004A00  6F6C               	movwf	(??_ARPV4_Request+12)& (0+255),b
 22083  004A02  516A               	movf	(??_ARPV4_Request+10)& (0+255),w,b
 22084  004A04  6F6D               	movwf	(??_ARPV4_Request+13)& (0+255),b
 22085  004A06  6B6E               	clrf	(??_ARPV4_Request+14)& (0+255),b
 22086  004A08  6B6F               	clrf	(??_ARPV4_Request+15)& (0+255),b
 22087  004A0A  6B70               	clrf	(??_ARPV4_Request+16)& (0+255),b
 22088  004A0C  6B71               	clrf	(??_ARPV4_Request+17)& (0+255),b
 22089  004A0E  0012               	return	
 22090  004A10                     __end_ofPL595:
 22091                           	opt stack 0
 22092  004A10                     PL609:
 22093                           	opt stack 15
 22094  004A10  6F65               	movwf	(??_ARPV4_Request+5)& (0+255),b
 22095  004A12  6B66               	clrf	(??_ARPV4_Request+6)& (0+255),b
 22096  004A14  6B67               	clrf	(??_ARPV4_Request+7)& (0+255),b
 22097  004A16  C066  F067         	movff	??_ARPV4_Request+6,??_ARPV4_Request+7
 22098  004A1A  C065  F066         	movff	??_ARPV4_Request+5,??_ARPV4_Request+6
 22099  004A1E  C064  F065         	movff	??_ARPV4_Request+4,??_ARPV4_Request+5
 22100  004A22  6B64               	clrf	(??_ARPV4_Request+4)& (0+255),b
 22101  004A24  6B68               	clrf	(??_ARPV4_Request+8)& (0+255),b
 22102  004A26  0012               	return	
 22103  004A28                     __end_ofPL609:
 22104                           	opt stack 0
 22105  004A28                     PL627:
 22106                           	opt stack 15
 22107  004A28  6F60               	movwf	??_ARPV4_Request& (0+255),b
 22108  004A2A  6B61               	clrf	(??_ARPV4_Request+1)& (0+255),b
 22109  004A2C  6B62               	clrf	(??_ARPV4_Request+2)& (0+255),b
 22110  004A2E  6B63               	clrf	(??_ARPV4_Request+3)& (0+255),b
 22111  004A30  C060  F063         	movff	??_ARPV4_Request,??_ARPV4_Request+3
 22112  004A34  6B62               	clrf	(??_ARPV4_Request+2)& (0+255),b
 22113  004A36  6B61               	clrf	(??_ARPV4_Request+1)& (0+255),b
 22114  004A38  6B60               	clrf	??_ARPV4_Request& (0+255),b
 22115  004A3A  6B64               	clrf	(??_ARPV4_Request+4)& (0+255),b
 22116  004A3C  0012               	return	
 22117  004A3E                     __end_ofPL627:
 22118                           	opt stack 0
 22119  004A3E                     PL705:
 22120                           	opt stack 18
 22121  004A3E  6E17               	movwf	ETH_WriteBlock@buffer,c
 22122  004A40  6A18               	clrf	ETH_WriteBlock@buffer+1,c
 22123  004A42  6A1A               	clrf	ETH_WriteBlock@length+1,c
 22124  004A44  0E1C               	movlw	28
 22125  004A46  6E19               	movwf	ETH_WriteBlock@length,c
 22126  004A48  0C1C               	retlw	28
 22127  004A4A                     __end_ofPL705:
 22128                           	opt stack 0
 22129  004A4A                     PL711:
 22130                           	opt stack 15
 22131  004A4A  90D8               	bcf	status,0,c
 22132  004A4C  3372               	rrcf	(??_ARPV4_Request+18)& (0+255),f,b
 22133  004A4E  3371               	rrcf	(??_ARPV4_Request+17)& (0+255),f,b
 22134  004A50  3370               	rrcf	(??_ARPV4_Request+16)& (0+255),f,b
 22135  004A52  336F               	rrcf	(??_ARPV4_Request+15)& (0+255),f,b
 22136  004A54  0012               	return	
 22137  004A56                     __end_ofPL711:
 22138                           	opt stack 0
 22139  004A56                     PL727:
 22140                           	opt stack 18
 22141  004A56  0E08               	movlw	8
 22142  004A58  6E1A               	movwf	ETH_WriteStart@type+1,c
 22143  004A5A  0E06               	movlw	6
 22144  004A5C  6E19               	movwf	ETH_WriteStart@type,c
 22145  004A5E  0C06               	retlw	6
 22146  004A60                     __end_ofPL727:
 22147                           	opt stack 0
 22148                           tosu	equ	0xFFF
 22149                           tosh	equ	0xFFE
 22150                           tosl	equ	0xFFD
 22151                           pclath	equ	0xFFA
 22152                           tblptru	equ	0xFF8
 22153                           tblptrh	equ	0xFF7
 22154                           tblptrl	equ	0xFF6
 22155                           tablat	equ	0xFF5
 22156                           prodh	equ	0xFF4
 22157                           prodl	equ	0xFF3
 22158                           intcon	equ	0xFF2
 22159                           indf0	equ	0xFEF
 22160                           postinc0	equ	0xFEE
 22161                           fsr0h	equ	0xFEA
 22162                           fsr0l	equ	0xFE9
 22163                           wreg	equ	0xFE8
 22164                           postinc1	equ	0xFE6
 22165                           plusw1	equ	0xFE3
 22166                           fsr1h	equ	0xFE2
 22167                           fsr1l	equ	0xFE1
 22168                           bsr	equ	0xFE0
 22169                           indf2	equ	0xFDF
 22170                           postinc2	equ	0xFDE
 22171                           postdec2	equ	0xFDD
 22172                           plusw2	equ	0xFDB
 22173                           fsr2h	equ	0xFDA
 22174                           fsr2l	equ	0xFD9
 22175                           status	equ	0xFD8
 22176                           
 22177 ;; *************** function _ETH_WriteStart *****************
 22178 ;; Defined at:
 22179 ;;		line 526 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 22180 ;; Parameters:    Size  Location     Type
 22181 ;;  dest_mac        2   22[COMRAM] PTR const struct .
 22182 ;;		 -> arpMap.macAddress(6), broadcastMAC(6), header.sha(6), ARPV4_Packet@header(28), 
 22183 ;;		 -> arpMap(104), NULL(0), 
 22184 ;;  type            2   24[COMRAM] unsigned int 
 22185 ;; Auto vars:     Size  Location     Type
 22186 ;;		None
 22187 ;; Return value:  Size  Location     Type
 22188 ;;                  1    wreg      enum E6944
 22189 ;; Registers used:
 22190 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22191 ;; Tracked objects:
 22192 ;;		On entry : F/0
 22193 ;;		On exit  : F/1
 22194 ;;		Unchanged: 0/0
 22195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22196 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22198 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22199 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22200 ;;Total ram usage:        6 bytes
 22201 ;; Hardware stack levels used:    1
 22202 ;; Hardware stack levels required when called:    9
 22203 ;; This function calls:
 22204 ;;		_ETH_EdataWrite
 22205 ;;		_ETH_ResetByteCount
 22206 ;; This function is called by:
 22207 ;;		_ARPV4_Packet
 22208 ;;		_ARPV4_Request
 22209 ;;		_IPv4_Start
 22210 ;; This function uses a non-reentrant model
 22211 ;;
 22212                           
 22213                           	psect	text91
 22214  004E1A                     __ptext91:
 22215                           	opt stack 0
 22216  004E1A                     _ETH_WriteStart:
 22217                           	opt stack 16
 22218                           
 22219                           ; BSR set to: 0
 22220                           ;j60_driver.c: 528: if(ethData.bufferBusy)
 22221                           
 22222                           ; BSR set to: 0
 22223                           ;incstack = 0
 22224  004E1A  0101               	movlb	1	; () banked
 22225  004E1C  BBBF               	btfsc	_ethData& (0+255),5,b	;volatile
 22226                           
 22227                           ; BSR set to: 1
 22228                           ;j60_driver.c: 529: {
 22229                           ;j60_driver.c: 530: return BUFFER_BUSY;
 22230  004E1E  0C03               	retlw	3
 22231                           
 22232                           ; BSR set to: 1
 22233                           ;j60_driver.c: 531: }
 22234                           ;j60_driver.c: 533: if(ECON1bits.TXRTS)
 22235  004E20  B6D2               	btfsc	4050,3,c	;volatile
 22236                           
 22237                           ; BSR set to: 1
 22238                           ;j60_driver.c: 534: {
 22239                           ;j60_driver.c: 535: return TX_LOGIC_NOT_IDLE;
 22240  004E22  0C04               	retlw	4
 22241                           
 22242                           ; BSR set to: 1
 22243                           ;j60_driver.c: 536: }
 22244                           ;j60_driver.c: 537: ETXST = ((8192) - (1518));
 22245  004E24  D884               	call	PL715	;call to abstracted procedure
 22246                           
 22247                           ;j60_driver.c: 538: EWRPT = ((8192) - (1518));
 22248  004E26  D889               	call	PL765	;call to abstracted procedure
 22249                           
 22250                           ; BSR set to: 14
 22251                           ;j60_driver.c: 540: ETH_ResetByteCount();
 22252  004E28  EC7A  F032         	call	_ETH_ResetByteCount	;wreg free
 22253                           
 22254                           ;j60_driver.c: 542: ETH_EdataWrite(0x06);
 22255  004E2C  0E06               	movlw	6
 22256  004E2E                     i33L__ptext103:
 22257                           	opt stack 0
 22258  004E2E                     i33L_ETH_EdataWrite:
 22259                           	opt stack 0
 22260  004E2E                     i33Ll7811:
 22261                           	opt stack 16
 22262  004E2E  CFE8 FF61          	movff	wreg,3937	;# 
 22263  004E32                     i33Ll463:
 22264                           	opt stack 16
 22265                           
 22266                           ;j60_driver.c: 543: ETH_EdataWrite(dest_mac->mac_array[0]);
 22267  004E32  C017  FFF6         	movff	ETH_WriteStart@dest_mac,tblptrl
 22268  004E36  C018  FFF7         	movff	ETH_WriteStart@dest_mac+1,tblptrh
 22269  004E3A  0E00               	movlw	low (__smallconst shr (0+16))
 22270  004E3C  6EF8               	movwf	tblptru,c
 22271  004E3E  0E0F               	movlw	(high __ramtop+-1)
 22272  004E40  64F7               	cpfsgt	tblptrh,c
 22273  004E42  D003               	bra	u10997
 22274  004E44  0008               	tblrd		*
 22275  004E46  50F5               	movf	tablat,w,c
 22276  004E48  D003               	bra	u10990
 22277  004E4A                     u10997:
 22278  004E4A  EC6D  F011         	call	PL431	;call to abstracted procedure
 22279  004E4E  50EF               	movf	indf0,w,c
 22280  004E50                     u10990:
 22281  004E50                     i34L__ptext103:
 22282                           	opt stack 0
 22283  004E50                     i34L_ETH_EdataWrite:
 22284                           	opt stack 0
 22285  004E50                     i34Ll7811:
 22286                           	opt stack 16
 22287  004E50  CFE8 FF61          	movff	wreg,3937	;# 
 22288  004E54                     i34Ll463:
 22289                           	opt stack 16
 22290                           
 22291                           ;j60_driver.c: 544: ETH_EdataWrite(dest_mac->mac_array[1]);
 22292  004E54  2817               	incf	ETH_WriteStart@dest_mac,w,c
 22293  004E56  D85F               	call	PL495	;call to abstracted procedure
 22294  004E58  64F7               	cpfsgt	tblptrh,c
 22295  004E5A  D003               	bra	u11007
 22296  004E5C  0008               	tblrd		*
 22297  004E5E  50F5               	movf	tablat,w,c
 22298  004E60  D003               	bra	u11000
 22299  004E62                     u11007:
 22300  004E62  EC6D  F011         	call	PL431	;call to abstracted procedure
 22301  004E66  50EF               	movf	indf0,w,c
 22302  004E68                     u11000:
 22303  004E68                     i35L__ptext103:
 22304                           	opt stack 0
 22305  004E68                     i35L_ETH_EdataWrite:
 22306                           	opt stack 0
 22307  004E68                     i35Ll7811:
 22308                           	opt stack 16
 22309  004E68  CFE8 FF61          	movff	wreg,3937	;# 
 22310  004E6C                     i35Ll463:
 22311                           	opt stack 16
 22312                           
 22313                           ;j60_driver.c: 545: ETH_EdataWrite(dest_mac->mac_array[2]);
 22314  004E6C  0E02               	movlw	2
 22315  004E6E  2417               	addwf	ETH_WriteStart@dest_mac,w,c
 22316  004E70  D852               	call	PL495	;call to abstracted procedure
 22317  004E72  64F7               	cpfsgt	tblptrh,c
 22318  004E74  D003               	bra	u11017
 22319  004E76  0008               	tblrd		*
 22320  004E78  50F5               	movf	tablat,w,c
 22321  004E7A  D003               	bra	u11010
 22322  004E7C                     u11017:
 22323  004E7C  EC6D  F011         	call	PL431	;call to abstracted procedure
 22324  004E80  50EF               	movf	indf0,w,c
 22325  004E82                     u11010:
 22326  004E82                     i36L__ptext103:
 22327                           	opt stack 0
 22328  004E82                     i36L_ETH_EdataWrite:
 22329                           	opt stack 0
 22330  004E82                     i36Ll7811:
 22331                           	opt stack 16
 22332  004E82  CFE8 FF61          	movff	wreg,3937	;# 
 22333  004E86                     i36Ll463:
 22334                           	opt stack 16
 22335                           
 22336                           ;j60_driver.c: 546: ETH_EdataWrite(dest_mac->mac_array[3]);
 22337  004E86  0E03               	movlw	3
 22338  004E88  2417               	addwf	ETH_WriteStart@dest_mac,w,c
 22339  004E8A  D845               	call	PL495	;call to abstracted procedure
 22340  004E8C  64F7               	cpfsgt	tblptrh,c
 22341  004E8E  D003               	bra	u11027
 22342  004E90  0008               	tblrd		*
 22343  004E92  50F5               	movf	tablat,w,c
 22344  004E94  D003               	bra	u11020
 22345  004E96                     u11027:
 22346  004E96  EC6D  F011         	call	PL431	;call to abstracted procedure
 22347  004E9A  50EF               	movf	indf0,w,c
 22348  004E9C                     u11020:
 22349  004E9C                     i37L__ptext103:
 22350                           	opt stack 0
 22351  004E9C                     i37L_ETH_EdataWrite:
 22352                           	opt stack 0
 22353  004E9C                     i37Ll7811:
 22354                           	opt stack 16
 22355  004E9C  CFE8 FF61          	movff	wreg,3937	;# 
 22356  004EA0                     i37Ll463:
 22357                           	opt stack 16
 22358                           
 22359                           ;j60_driver.c: 547: ETH_EdataWrite(dest_mac->mac_array[4]);
 22360  004EA0  0E04               	movlw	4
 22361  004EA2  2417               	addwf	ETH_WriteStart@dest_mac,w,c
 22362  004EA4  D838               	call	PL495	;call to abstracted procedure
 22363  004EA6  64F7               	cpfsgt	tblptrh,c
 22364  004EA8  D003               	bra	u11037
 22365  004EAA  0008               	tblrd		*
 22366  004EAC  50F5               	movf	tablat,w,c
 22367  004EAE  D003               	bra	u11030
 22368  004EB0                     u11037:
 22369  004EB0  EC6D  F011         	call	PL431	;call to abstracted procedure
 22370  004EB4  50EF               	movf	indf0,w,c
 22371  004EB6                     u11030:
 22372  004EB6                     i38L__ptext103:
 22373                           	opt stack 0
 22374  004EB6                     i38L_ETH_EdataWrite:
 22375                           	opt stack 0
 22376  004EB6                     i38Ll7811:
 22377                           	opt stack 16
 22378  004EB6  CFE8 FF61          	movff	wreg,3937	;# 
 22379  004EBA                     i38Ll463:
 22380                           	opt stack 16
 22381                           
 22382                           ;j60_driver.c: 548: ETH_EdataWrite(dest_mac->mac_array[5]);
 22383  004EBA  0E05               	movlw	5
 22384  004EBC  2417               	addwf	ETH_WriteStart@dest_mac,w,c
 22385  004EBE  D82B               	call	PL495	;call to abstracted procedure
 22386  004EC0  64F7               	cpfsgt	tblptrh,c
 22387  004EC2  D003               	bra	u11047
 22388  004EC4  0008               	tblrd		*
 22389  004EC6  50F5               	movf	tablat,w,c
 22390  004EC8  D003               	bra	u11040
 22391  004ECA                     u11047:
 22392  004ECA  EC6D  F011         	call	PL431	;call to abstracted procedure
 22393  004ECE  50EF               	movf	indf0,w,c
 22394  004ED0                     u11040:
 22395  004ED0                     i39L__ptext103:
 22396                           	opt stack 0
 22397  004ED0                     i39L_ETH_EdataWrite:
 22398                           	opt stack 0
 22399  004ED0                     i39Ll7811:
 22400                           	opt stack 16
 22401  004ED0  CFE8 FF61          	movff	wreg,3937	;# 
 22402  004ED4                     i39Ll463:
 22403                           	opt stack 16
 22404                           
 22405                           ;j60_driver.c: 550: ETH_EdataWrite(MAADR1);
 22406  004ED4  010E               	movlb	14	; () banked
 22407  004ED6  5184               	movf	132,w,b	;volatile
 22408  004ED8                     i40L__ptext103:
 22409                           	opt stack 0
 22410  004ED8                     i40L_ETH_EdataWrite:
 22411                           	opt stack 0
 22412  004ED8                     i40Ll7811:
 22413                           	opt stack 16
 22414  004ED8  CFE8 FF61          	movff	wreg,3937	;# 
 22415  004EDC                     i40Ll463:
 22416                           	opt stack 16
 22417                           
 22418                           ;j60_driver.c: 551: ETH_EdataWrite(MAADR2);
 22419  004EDC  010E               	movlb	14	; () banked
 22420  004EDE  5185               	movf	133,w,b	;volatile
 22421  004EE0                     i41L__ptext103:
 22422                           	opt stack 0
 22423  004EE0                     i41L_ETH_EdataWrite:
 22424                           	opt stack 0
 22425  004EE0                     i41Ll7811:
 22426                           	opt stack 16
 22427  004EE0  CFE8 FF61          	movff	wreg,3937	;# 
 22428  004EE4                     i41Ll463:
 22429                           	opt stack 16
 22430                           
 22431                           ;j60_driver.c: 552: ETH_EdataWrite(MAADR3);
 22432  004EE4  010E               	movlb	14	; () banked
 22433  004EE6  5182               	movf	130,w,b	;volatile
 22434  004EE8                     i42L__ptext103:
 22435                           	opt stack 0
 22436  004EE8                     i42L_ETH_EdataWrite:
 22437                           	opt stack 0
 22438  004EE8                     i42Ll7811:
 22439                           	opt stack 16
 22440  004EE8  CFE8 FF61          	movff	wreg,3937	;# 
 22441  004EEC                     i42Ll463:
 22442                           	opt stack 16
 22443                           
 22444                           ;j60_driver.c: 553: ETH_EdataWrite(MAADR4);
 22445  004EEC  010E               	movlb	14	; () banked
 22446  004EEE  5183               	movf	131,w,b	;volatile
 22447  004EF0                     i43L__ptext103:
 22448                           	opt stack 0
 22449  004EF0                     i43L_ETH_EdataWrite:
 22450                           	opt stack 0
 22451  004EF0                     i43Ll7811:
 22452                           	opt stack 16
 22453  004EF0  CFE8 FF61          	movff	wreg,3937	;# 
 22454  004EF4                     i43Ll463:
 22455                           	opt stack 16
 22456                           
 22457                           ;j60_driver.c: 554: ETH_EdataWrite(MAADR5);
 22458  004EF4  010E               	movlb	14	; () banked
 22459  004EF6  5180               	movf	128,w,b	;volatile
 22460  004EF8                     i44L__ptext103:
 22461                           	opt stack 0
 22462  004EF8                     i44L_ETH_EdataWrite:
 22463                           	opt stack 0
 22464  004EF8                     i44Ll7811:
 22465                           	opt stack 16
 22466  004EF8  CFE8 FF61          	movff	wreg,3937	;# 
 22467  004EFC                     i44Ll463:
 22468                           	opt stack 16
 22469                           
 22470                           ;j60_driver.c: 555: ETH_EdataWrite(MAADR6);
 22471  004EFC  010E               	movlb	14	; () banked
 22472  004EFE  5181               	movf	129,w,b	;volatile
 22473  004F00                     i45L__ptext103:
 22474                           	opt stack 0
 22475  004F00                     i45L_ETH_EdataWrite:
 22476                           	opt stack 0
 22477  004F00                     i45Ll7811:
 22478                           	opt stack 16
 22479  004F00  CFE8 FF61          	movff	wreg,3937	;# 
 22480  004F04                     i45Ll463:
 22481                           	opt stack 16
 22482                           
 22483                           ;j60_driver.c: 556: ETH_EdataWrite(((char *)&type)[1]);
 22484  004F04  501A               	movf	ETH_WriteStart@type+1,w,c
 22485  004F06                     i46L__ptext103:
 22486                           	opt stack 0
 22487  004F06                     i46L_ETH_EdataWrite:
 22488                           	opt stack 0
 22489  004F06                     i46Ll7811:
 22490                           	opt stack 16
 22491  004F06  CFE8 FF61          	movff	wreg,3937	;# 
 22492  004F0A                     i46Ll463:
 22493                           	opt stack 16
 22494                           
 22495                           ;j60_driver.c: 557: ETH_EdataWrite(((char *)&type)[0]);
 22496  004F0A  5019               	movf	ETH_WriteStart@type,w,c
 22497  004F0C                     i47L__ptext103:
 22498                           	opt stack 0
 22499  004F0C                     i47L_ETH_EdataWrite:
 22500                           	opt stack 0
 22501  004F0C                     i47Ll7811:
 22502                           	opt stack 16
 22503  004F0C  CFE8 FF61          	movff	wreg,3937	;# 
 22504  004F10                     i47Ll463:
 22505                           	opt stack 16
 22506                           
 22507                           ;j60_driver.c: 559: ethData.bufferBusy = 1;
 22508  004F10  0101               	movlb	1	; () banked
 22509  004F12  8BBF               	bsf	_ethData& (0+255),5,b	;volatile
 22510                           
 22511                           ; BSR set to: 1
 22512                           
 22513                           ; BSR set to: 1
 22514                           ;j60_driver.c: 560: return SUCCESS;
 22515  004F14  0C01               	retlw	1	;funcret
 22516  004F16                     __end_of_ETH_WriteStart:
 22517                           	opt stack 0
 22518  004F16                     PL495:
 22519                           	opt stack 16
 22520  004F16  6E1B               	movwf	??_ETH_WriteStart& (0+255),c
 22521  004F18  0E00               	movlw	0
 22522  004F1A  2018               	addwfc	ETH_WriteStart@dest_mac+1,w,c
 22523  004F1C  6E1C               	movwf	(??_ETH_WriteStart+1)& (0+255),c
 22524  004F1E  C01B  FFF6         	movff	??_ETH_WriteStart,tblptrl
 22525  004F22  C01C  FFF7         	movff	??_ETH_WriteStart+1,tblptrh
 22526  004F26  0E00               	movlw	low (__smallconst shr (0+16))
 22527  004F28  6EF8               	movwf	tblptru,c
 22528  004F2A  0E0F               	movlw	(high __ramtop+-1)
 22529  004F2C  0012               	return	
 22530  004F2E                     __end_ofPL495:
 22531                           	opt stack 0
 22532  004F2E                     PL715:
 22533                           	opt stack 16
 22534  004F2E  0E1A               	movlw	26
 22535  004F30  010E               	movlb	14	; () banked
 22536  004F32  6FE5               	movwf	229,b	;volatile
 22537  004F34  0E12               	movlw	18
 22538  004F36  6FE4               	movwf	228,b	;volatile
 22539  004F38  0C12               	retlw	18
 22540  004F3A                     __end_ofPL715:
 22541                           	opt stack 0
 22542  004F3A                     PL765:
 22543                           	opt stack 17
 22544  004F3A  0E1A               	movlw	26
 22545  004F3C  6FE3               	movwf	227,b	;volatile
 22546  004F3E  0E12               	movlw	18
 22547  004F40  6FE2               	movwf	226,b	;volatile
 22548  004F42  0C12               	retlw	18
 22549  004F44                     __end_ofPL765:
 22550                           	opt stack 0
 22551                           tosu	equ	0xFFF
 22552                           tosh	equ	0xFFE
 22553                           tosl	equ	0xFFD
 22554                           pclath	equ	0xFFA
 22555                           tblptru	equ	0xFF8
 22556                           tblptrh	equ	0xFF7
 22557                           tblptrl	equ	0xFF6
 22558                           tablat	equ	0xFF5
 22559                           prodh	equ	0xFF4
 22560                           prodl	equ	0xFF3
 22561                           intcon	equ	0xFF2
 22562                           indf0	equ	0xFEF
 22563                           postinc0	equ	0xFEE
 22564                           fsr0h	equ	0xFEA
 22565                           fsr0l	equ	0xFE9
 22566                           wreg	equ	0xFE8
 22567                           postinc1	equ	0xFE6
 22568                           plusw1	equ	0xFE3
 22569                           fsr1h	equ	0xFE2
 22570                           fsr1l	equ	0xFE1
 22571                           bsr	equ	0xFE0
 22572                           indf2	equ	0xFDF
 22573                           postinc2	equ	0xFDE
 22574                           postdec2	equ	0xFDD
 22575                           plusw2	equ	0xFDB
 22576                           fsr2h	equ	0xFDA
 22577                           fsr2l	equ	0xFD9
 22578                           status	equ	0xFD8
 22579                           
 22580 ;; *************** function _ETH_ResetByteCount *****************
 22581 ;; Defined at:
 22582 ;;		line 833 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 22583 ;; Parameters:    Size  Location     Type
 22584 ;;		None
 22585 ;; Auto vars:     Size  Location     Type
 22586 ;;		None
 22587 ;; Return value:  Size  Location     Type
 22588 ;;		None               void
 22589 ;; Registers used:
 22590 ;;		None
 22591 ;; Tracked objects:
 22592 ;;		On entry : 1/0
 22593 ;;		On exit  : 1/0
 22594 ;;		Unchanged: 1/0
 22595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22600 ;;Total ram usage:        0 bytes
 22601 ;; Hardware stack levels used:    1
 22602 ;; Hardware stack levels required when called:    8
 22603 ;; This function calls:
 22604 ;;		Nothing
 22605 ;; This function is called by:
 22606 ;;		_ETH_WriteStart
 22607 ;;		_UDP_Start
 22608 ;; This function uses a non-reentrant model
 22609 ;;
 22610                           
 22611                           	psect	text92
 22612  0064F4                     __ptext92:
 22613                           	opt stack 0
 22614  0064F4                     _ETH_ResetByteCount:
 22615                           	opt stack 16
 22616                           
 22617                           ;j60_driver.c: 835: ethData.saveWRPT = EWRPT;
 22618                           
 22619                           ; BSR set to: 1
 22620                           ;incstack = 0
 22621  0064F4  CEE2 F1C4          	movff	3810,_ethData+5	;volatile
 22622  0064F8  CEE3 F1C5          	movff	3811,_ethData+6	;volatile
 22623  0064FC  0012               	return		;funcret
 22624  0064FE                     __end_of_ETH_ResetByteCount:
 22625                           	opt stack 0
 22626                           tosu	equ	0xFFF
 22627                           tosh	equ	0xFFE
 22628                           tosl	equ	0xFFD
 22629                           pclath	equ	0xFFA
 22630                           tblptru	equ	0xFF8
 22631                           tblptrh	equ	0xFF7
 22632                           tblptrl	equ	0xFF6
 22633                           tablat	equ	0xFF5
 22634                           prodh	equ	0xFF4
 22635                           prodl	equ	0xFF3
 22636                           intcon	equ	0xFF2
 22637                           indf0	equ	0xFEF
 22638                           postinc0	equ	0xFEE
 22639                           fsr0h	equ	0xFEA
 22640                           fsr0l	equ	0xFE9
 22641                           wreg	equ	0xFE8
 22642                           postinc1	equ	0xFE6
 22643                           plusw1	equ	0xFE3
 22644                           fsr1h	equ	0xFE2
 22645                           fsr1l	equ	0xFE1
 22646                           bsr	equ	0xFE0
 22647                           indf2	equ	0xFDF
 22648                           postinc2	equ	0xFDE
 22649                           postdec2	equ	0xFDD
 22650                           plusw2	equ	0xFDB
 22651                           fsr2h	equ	0xFDA
 22652                           fsr2l	equ	0xFD9
 22653                           status	equ	0xFD8
 22654                           
 22655 ;; *************** function _ETH_WriteBlock *****************
 22656 ;; Defined at:
 22657 ;;		line 509 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 22658 ;; Parameters:    Size  Location     Type
 22659 ;;  buffer          2   22[COMRAM] PTR void 
 22660 ;;		 -> ?_sprintf(2), ?_printf(2), DEMO_UDP_Recv@local_ip(4), main@str(32), 
 22661 ;;		 -> STR_6(13), STR_5(17), TCP_Snd@txHeader(20), Network_Read@debug_str(80), 
 22662 ;;		 -> dhcpName(21), DHCP_Request@ethMAC(6), ARPV4_Request@header(28), ARPV4_Packet@header(28), 
 22663 ;;		 -> STR_1(15), NULL(0), 
 22664 ;;  length          2   24[COMRAM] unsigned int 
 22665 ;; Auto vars:     Size  Location     Type
 22666 ;;  p               2   26[COMRAM] PTR unsigned char 
 22667 ;;		 -> ?_sprintf(2), ?_printf(2), DEMO_UDP_Recv@local_ip(4), main@str(32), 
 22668 ;;		 -> STR_6(13), STR_5(17), TCP_Snd@txHeader(20), Network_Read@debug_str(80), 
 22669 ;;		 -> dhcpName(21), DHCP_Request@ethMAC(6), ARPV4_Request@header(28), ARPV4_Packet@header(28), 
 22670 ;;		 -> STR_1(15), NULL(0), 
 22671 ;; Return value:  Size  Location     Type
 22672 ;;                  2   22[COMRAM] unsigned int 
 22673 ;; Registers used:
 22674 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22675 ;; Tracked objects:
 22676 ;;		On entry : 0/0
 22677 ;;		On exit  : 0/0
 22678 ;;		Unchanged: 0/0
 22679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22680 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22681 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22683 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22684 ;;Total ram usage:        6 bytes
 22685 ;; Hardware stack levels used:    1
 22686 ;; Hardware stack levels required when called:    9
 22687 ;; This function calls:
 22688 ;;		_ETH_EdataWrite
 22689 ;; This function is called by:
 22690 ;;		_ARPV4_Packet
 22691 ;;		_ARPV4_Request
 22692 ;;		_DHCP_Request
 22693 ;;		_TCP_Snd
 22694 ;;		_UDP_WriteBlock
 22695 ;; This function uses a non-reentrant model
 22696 ;;
 22697                           
 22698                           	psect	text93
 22699  005D12                     __ptext93:
 22700                           	opt stack 0
 22701  005D12                     _ETH_WriteBlock:
 22702                           	opt stack 15
 22703                           
 22704                           ;j60_driver.c: 511: char *p = buffer;
 22705                           
 22706                           ;incstack = 0
 22707  005D12  C017  F01B         	movff	ETH_WriteBlock@buffer,ETH_WriteBlock@p
 22708  005D16  C018  F01C         	movff	ETH_WriteBlock@buffer+1,ETH_WriteBlock@p+1
 22709                           
 22710                           ;j60_driver.c: 512: while(length-- && (EWRPT < ((8192)-1)))
 22711  005D1A  D013               	goto	l7827
 22712  005D1C                     l7823:
 22713                           
 22714                           ; BSR set to: 14
 22715                           ;j60_driver.c: 513: {
 22716                           ;j60_driver.c: 514: ETH_EdataWrite(*p++);
 22717  005D1C  C01B  FFF6         	movff	ETH_WriteBlock@p,tblptrl
 22718  005D20  C01C  FFF7         	movff	ETH_WriteBlock@p+1,tblptrh
 22719  005D24  0E00               	movlw	low (__smallconst shr (0+16))
 22720  005D26  6EF8               	movwf	tblptru,c
 22721  005D28  0E0F               	movlw	(high __ramtop+-1)
 22722  005D2A  64F7               	cpfsgt	tblptrh,c
 22723  005D2C  D003               	bra	u10947
 22724  005D2E  0008               	tblrd		*
 22725  005D30  50F5               	movf	tablat,w,c
 22726  005D32  D003               	bra	u10940
 22727  005D34                     u10947:
 22728  005D34  EC6D  F011         	call	PL431	;call to abstracted procedure
 22729  005D38  50EF               	movf	indf0,w,c
 22730  005D3A                     u10940:
 22731  005D3A                     i48L__ptext103:
 22732                           	opt stack 0
 22733  005D3A                     i48L_ETH_EdataWrite:
 22734                           	opt stack 0
 22735  005D3A                     i48Ll7811:
 22736                           	opt stack 16
 22737  005D3A  CFE8 FF61          	movff	wreg,3937	;# 
 22738  005D3E                     i48Ll463:
 22739                           	opt stack 15
 22740  005D3E  4A1B               	infsnz	ETH_WriteBlock@p,f,c
 22741  005D40  2A1C               	incf	ETH_WriteBlock@p+1,f,c
 22742  005D42                     l7827:
 22743  005D42  0619               	decf	ETH_WriteBlock@length,f,c
 22744  005D44  A0D8               	btfss	status,0,c
 22745  005D46  061A               	decf	ETH_WriteBlock@length+1,f,c
 22746  005D48  2819               	incf	ETH_WriteBlock@length,w,c
 22747  005D4A  E103               	bnz	u10950
 22748  005D4C  281A               	incf	ETH_WriteBlock@length+1,w,c
 22749  005D4E  B4D8               	btfsc	status,2,c
 22750  005D50  0012               	return	
 22751  005D52                     u10950:
 22752  005D52  010E               	movlb	14	; () banked
 22753  005D54  29E2               	incf	226,w,b	;volatile
 22754  005D56  0E1F               	movlw	31
 22755  005D58  59E3               	subwfb	227,w,b	;volatile
 22756  005D5A  E3E0               	bnc	l7823
 22757  005D5C  0012               	return		;funcret
 22758  005D5E                     __end_of_ETH_WriteBlock:
 22759                           	opt stack 0
 22760                           tosu	equ	0xFFF
 22761                           tosh	equ	0xFFE
 22762                           tosl	equ	0xFFD
 22763                           pclath	equ	0xFFA
 22764                           tblptru	equ	0xFF8
 22765                           tblptrh	equ	0xFF7
 22766                           tblptrl	equ	0xFF6
 22767                           tablat	equ	0xFF5
 22768                           prodh	equ	0xFF4
 22769                           prodl	equ	0xFF3
 22770                           intcon	equ	0xFF2
 22771                           indf0	equ	0xFEF
 22772                           postinc0	equ	0xFEE
 22773                           fsr0h	equ	0xFEA
 22774                           fsr0l	equ	0xFE9
 22775                           wreg	equ	0xFE8
 22776                           postinc1	equ	0xFE6
 22777                           plusw1	equ	0xFE3
 22778                           fsr1h	equ	0xFE2
 22779                           fsr1l	equ	0xFE1
 22780                           bsr	equ	0xFE0
 22781                           indf2	equ	0xFDF
 22782                           postinc2	equ	0xFDE
 22783                           postdec2	equ	0xFDD
 22784                           plusw2	equ	0xFDB
 22785                           fsr2h	equ	0xFDA
 22786                           fsr2l	equ	0xFD9
 22787                           status	equ	0xFD8
 22788                           
 22789 ;; *************** function _ETH_GetMAC *****************
 22790 ;; Defined at:
 22791 ;;		line 802 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 22792 ;; Parameters:    Size  Location     Type
 22793 ;;  mac             1    wreg     PTR unsigned char 
 22794 ;;		 -> DHCP_Handler@ethMAC(6), DHCP_Request@ethMAC(6), ARPV4_Request@header(28), header.sha(6), 
 22795 ;;		 -> ARPV4_Packet@header(28), 
 22796 ;; Auto vars:     Size  Location     Type
 22797 ;;  mac             1   22[COMRAM] PTR unsigned char 
 22798 ;;		 -> DHCP_Handler@ethMAC(6), DHCP_Request@ethMAC(6), ARPV4_Request@header(28), header.sha(6), 
 22799 ;;		 -> ARPV4_Packet@header(28), 
 22800 ;; Return value:  Size  Location     Type
 22801 ;;		None               void
 22802 ;; Registers used:
 22803 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22804 ;; Tracked objects:
 22805 ;;		On entry : 0/1
 22806 ;;		On exit  : 0/0
 22807 ;;		Unchanged: 0/0
 22808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22810 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22812 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22813 ;;Total ram usage:        1 bytes
 22814 ;; Hardware stack levels used:    1
 22815 ;; Hardware stack levels required when called:    8
 22816 ;; This function calls:
 22817 ;;		Nothing
 22818 ;; This function is called by:
 22819 ;;		_ARPV4_Packet
 22820 ;;		_ARPV4_Request
 22821 ;;		_DHCP_Request
 22822 ;;		_DHCP_Handler
 22823 ;; This function uses a non-reentrant model
 22824 ;;
 22825                           
 22826                           	psect	text94
 22827  005F62                     __ptext94:
 22828                           	opt stack 0
 22829  005F62                     _ETH_GetMAC:
 22830                           	opt stack 16
 22831                           
 22832                           ;incstack = 0
 22833                           ;ETH_GetMAC@mac stored from wreg
 22834  005F62  6E17               	movwf	ETH_GetMAC@mac,c
 22835                           
 22836                           ;j60_driver.c: 804: *mac++ = MAADR1;
 22837  005F64  5017               	movf	ETH_GetMAC@mac,w,c
 22838  005F66  6ED9               	movwf	fsr2l,c
 22839  005F68  6ADA               	clrf	fsr2h,c
 22840  005F6A  CE84 FFDF          	movff	3716,indf2	;volatile
 22841                           
 22842                           ;j60_driver.c: 805: *mac++ = MAADR2;
 22843  005F6E  D80F               	call	PL639	;call to abstracted procedure
 22844  005F70  CE85 FFDF          	movff	3717,indf2	;volatile
 22845                           
 22846                           ;j60_driver.c: 806: *mac++ = MAADR3;
 22847  005F74  D80C               	call	PL639	;call to abstracted procedure
 22848  005F76  CE82 FFDF          	movff	3714,indf2	;volatile
 22849                           
 22850                           ;j60_driver.c: 807: *mac++ = MAADR4;
 22851  005F7A  D809               	call	PL639	;call to abstracted procedure
 22852  005F7C  CE83 FFDF          	movff	3715,indf2	;volatile
 22853                           
 22854                           ;j60_driver.c: 808: *mac++ = MAADR5;
 22855  005F80  D806               	call	PL639	;call to abstracted procedure
 22856  005F82  CE80 FFDF          	movff	3712,indf2	;volatile
 22857                           
 22858                           ;j60_driver.c: 809: *mac = MAADR6;
 22859  005F86  D803               	call	PL639	;call to abstracted procedure
 22860  005F88  CE81 FFDF          	movff	3713,indf2	;volatile
 22861  005F8C  0012               	return		;funcret
 22862  005F8E                     __end_of_ETH_GetMAC:
 22863                           	opt stack 0
 22864  005F8E                     PL639:
 22865                           	opt stack 16
 22866  005F8E  2A17               	incf	ETH_GetMAC@mac,f,c
 22867  005F90  5017               	movf	ETH_GetMAC@mac,w,c
 22868  005F92  6ED9               	movwf	fsr2l,c
 22869  005F94  6ADA               	clrf	fsr2h,c
 22870  005F96  0012               	return	
 22871  005F98                     __end_ofPL639:
 22872                           	opt stack 0
 22873                           tosu	equ	0xFFF
 22874                           tosh	equ	0xFFE
 22875                           tosl	equ	0xFFD
 22876                           pclath	equ	0xFFA
 22877                           tblptru	equ	0xFF8
 22878                           tblptrh	equ	0xFF7
 22879                           tblptrl	equ	0xFF6
 22880                           tablat	equ	0xFF5
 22881                           prodh	equ	0xFF4
 22882                           prodl	equ	0xFF3
 22883                           intcon	equ	0xFF2
 22884                           indf0	equ	0xFEF
 22885                           postinc0	equ	0xFEE
 22886                           fsr0h	equ	0xFEA
 22887                           fsr0l	equ	0xFE9
 22888                           wreg	equ	0xFE8
 22889                           postinc1	equ	0xFE6
 22890                           plusw1	equ	0xFE3
 22891                           fsr1h	equ	0xFE2
 22892                           fsr1l	equ	0xFE1
 22893                           bsr	equ	0xFE0
 22894                           indf2	equ	0xFDF
 22895                           postinc2	equ	0xFDE
 22896                           postdec2	equ	0xFDD
 22897                           plusw2	equ	0xFDB
 22898                           fsr2h	equ	0xFDA
 22899                           fsr2l	equ	0xFD9
 22900                           status	equ	0xFD8
 22901                           
 22902 ;; *************** function _ARPV4_Lookup *****************
 22903 ;; Defined at:
 22904 ;;		line 234 in file "../../TCPIP Library/source/arpv4.c"
 22905 ;; Parameters:    Size  Location     Type
 22906 ;;  ip_address      4   22[COMRAM] unsigned long 
 22907 ;; Auto vars:     Size  Location     Type
 22908 ;;  entry_pointe    2   30[COMRAM] PTR struct .
 22909 ;;		 -> arpMap(104), 
 22910 ;;  x               1   32[COMRAM] unsigned char 
 22911 ;; Return value:  Size  Location     Type
 22912 ;;                  2   22[COMRAM] PTR struct .
 22913 ;; Registers used:
 22914 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22915 ;; Tracked objects:
 22916 ;;		On entry : F/2
 22917 ;;		On exit  : F/2
 22918 ;;		Unchanged: F/0
 22919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22920 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22921 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22922 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22923 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22924 ;;Total ram usage:       11 bytes
 22925 ;; Hardware stack levels used:    1
 22926 ;; Hardware stack levels required when called:    8
 22927 ;; This function calls:
 22928 ;;		Nothing
 22929 ;; This function is called by:
 22930 ;;		_IPv4_Start
 22931 ;; This function uses a non-reentrant model
 22932 ;;
 22933                           
 22934                           	psect	text95
 22935  005BE0                     __ptext95:
 22936                           	opt stack 0
 22937  005BE0                     _ARPV4_Lookup:
 22938                           	opt stack 17
 22939                           
 22940                           ; BSR set to: 2
 22941                           ;arpv4.c: 236: arpMap_t *entry_pointer = arpMap;
 22942                           
 22943                           ;incstack = 0
 22944  005BE0  0E34               	movlw	low _arpMap
 22945  005BE2  6E1F               	movwf	ARPV4_Lookup@entry_pointer,c
 22946  005BE4  0E02               	movlw	high _arpMap
 22947  005BE6  6E20               	movwf	ARPV4_Lookup@entry_pointer+1,c
 22948                           
 22949                           ; BSR set to: 2
 22950                           ;arpv4.c: 237: uint8_t x;
 22951                           ;arpv4.c: 239: for(x = 0; x < 8; x++)
 22952  005BE8  6A21               	clrf	ARPV4_Lookup@x,c
 22953  005BEA                     l8065:
 22954                           
 22955                           ; BSR set to: 2
 22956                           ;arpv4.c: 240: {
 22957                           ;arpv4.c: 241: if(entry_pointer->ipAddress == ip_address)
 22958  005BEA  EE20 F006          	lfsr	2,6
 22959  005BEE  501F               	movf	ARPV4_Lookup@entry_pointer,w,c
 22960  005BF0  26D9               	addwf	fsr2l,f,c
 22961  005BF2  5020               	movf	ARPV4_Lookup@entry_pointer+1,w,c
 22962  005BF4  22DA               	addwfc	fsr2h,f,c
 22963  005BF6  5017               	movf	ARPV4_Lookup@ip_address,w,c
 22964  005BF8  18DE               	xorwf	postinc2,w,c
 22965  005BFA  E10E               	bnz	l8071
 22966  005BFC  5018               	movf	ARPV4_Lookup@ip_address+1,w,c
 22967  005BFE  18DE               	xorwf	postinc2,w,c
 22968  005C00  E10B               	bnz	l8071
 22969  005C02  5019               	movf	ARPV4_Lookup@ip_address+2,w,c
 22970  005C04  18DE               	xorwf	postinc2,w,c
 22971  005C06  E108               	bnz	l8071
 22972  005C08  501A               	movf	ARPV4_Lookup@ip_address+3,w,c
 22973  005C0A  18DE               	xorwf	postinc2,w,c
 22974  005C0C  E105               	bnz	l8071
 22975                           
 22976                           ; BSR set to: 2
 22977                           ;arpv4.c: 242: return &entry_pointer->macAddress;
 22978  005C0E  C01F  F017         	movff	ARPV4_Lookup@entry_pointer,?_ARPV4_Lookup
 22979  005C12  C020  F018         	movff	ARPV4_Lookup@entry_pointer+1,?_ARPV4_Lookup+1
 22980  005C16  0012               	return	
 22981  005C18                     l8071:
 22982                           
 22983                           ; BSR set to: 2
 22984                           ;arpv4.c: 243: entry_pointer ++;
 22985  005C18  0E0D               	movlw	13
 22986  005C1A  261F               	addwf	ARPV4_Lookup@entry_pointer,f,c
 22987  005C1C  0E00               	movlw	0
 22988  005C1E  2220               	addwfc	ARPV4_Lookup@entry_pointer+1,f,c
 22989                           
 22990                           ; BSR set to: 2
 22991  005C20  2A21               	incf	ARPV4_Lookup@x,f,c
 22992                           
 22993                           ; BSR set to: 2
 22994  005C22  0E07               	movlw	7
 22995  005C24  6421               	cpfsgt	ARPV4_Lookup@x,c
 22996  005C26  D7E1               	goto	l8065
 22997                           
 22998                           ; BSR set to: 2
 22999                           ;arpv4.c: 244: }
 23000                           ;arpv4.c: 245: return 0;
 23001  005C28  6A17               	clrf	?_ARPV4_Lookup,c
 23002  005C2A  6A18               	clrf	?_ARPV4_Lookup+1,c
 23003                           
 23004                           ; BSR set to: 2
 23005  005C2C  0012               	return		;funcret
 23006  005C2E                     __end_of_ARPV4_Lookup:
 23007                           	opt stack 0
 23008                           tosu	equ	0xFFF
 23009                           tosh	equ	0xFFE
 23010                           tosl	equ	0xFFD
 23011                           pclath	equ	0xFFA
 23012                           tblptru	equ	0xFF8
 23013                           tblptrh	equ	0xFF7
 23014                           tblptrl	equ	0xFF6
 23015                           tablat	equ	0xFF5
 23016                           prodh	equ	0xFF4
 23017                           prodl	equ	0xFF3
 23018                           intcon	equ	0xFF2
 23019                           indf0	equ	0xFEF
 23020                           postinc0	equ	0xFEE
 23021                           fsr0h	equ	0xFEA
 23022                           fsr0l	equ	0xFE9
 23023                           wreg	equ	0xFE8
 23024                           postinc1	equ	0xFE6
 23025                           plusw1	equ	0xFE3
 23026                           fsr1h	equ	0xFE2
 23027                           fsr1l	equ	0xFE1
 23028                           bsr	equ	0xFE0
 23029                           indf2	equ	0xFDF
 23030                           postinc2	equ	0xFDE
 23031                           postdec2	equ	0xFDD
 23032                           plusw2	equ	0xFDB
 23033                           fsr2h	equ	0xFDA
 23034                           fsr2l	equ	0xFD9
 23035                           status	equ	0xFD8
 23036                           
 23037 ;; *************** function _UDP_Send *****************
 23038 ;; Defined at:
 23039 ;;		line 99 in file "../../TCPIP Library/source/udpv4.c"
 23040 ;; Parameters:    Size  Location     Type
 23041 ;;		None
 23042 ;; Auto vars:     Size  Location     Type
 23043 ;;  udpLength       2   27[BANK0 ] unsigned int 
 23044 ;;  cksm            2   25[BANK0 ] unsigned int 
 23045 ;;  ret             1    0        enum E367
 23046 ;; Return value:  Size  Location     Type
 23047 ;;                  1    wreg      enum E449
 23048 ;; Registers used:
 23049 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23050 ;; Tracked objects:
 23051 ;;		On entry : 0/0
 23052 ;;		On exit  : F/0
 23053 ;;		Unchanged: 0/0
 23054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23056 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23057 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23058 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23059 ;;Total ram usage:        9 bytes
 23060 ;; Hardware stack levels used:    1
 23061 ;; Hardware stack levels required when called:   12
 23062 ;; This function calls:
 23063 ;;		_ETH_GetByteCount
 23064 ;;		_ETH_Insert
 23065 ;;		_ETH_TxComputeChecksum
 23066 ;;		_IPV4_Send
 23067 ;; This function is called by:
 23068 ;;		_DHCP_Request
 23069 ;;		_DEMO_UDP_Recv
 23070 ;;		_DEMO_UDP_Send
 23071 ;; This function uses a non-reentrant model
 23072 ;;
 23073                           
 23074                           	psect	text96
 23075  005808                     __ptext96:
 23076                           	opt stack 0
 23077  005808                     _UDP_Send:
 23078                           	opt stack 12
 23079                           
 23080                           ;udpv4.c: 105: udpLength = ETH_GetByteCount();
 23081                           
 23082                           ; BSR set to: 2
 23083                           ;incstack = 0
 23084  005808  EC8D  F031         	call	_ETH_GetByteCount	;wreg free
 23085  00580C  C017  F07B         	movff	?_ETH_GetByteCount,UDP_Send@udpLength
 23086  005810  C018  F07C         	movff	?_ETH_GetByteCount+1,UDP_Send@udpLength+1
 23087                           
 23088                           ; BSR set to: 14
 23089                           ;udpv4.c: 106: udpLength = ((((uint16_t)udpLength & (uint16_t)0xFF00) >> 8) | (((uint16_
      +                          t)udpLength & (uint16_t)0x00FF) << 8));
 23090  005814  D831               	call	PL577	;call to abstracted procedure
 23091                           
 23092                           ; BSR set to: 0
 23093                           ;udpv4.c: 107: ETH_Insert((char *)&udpLength, 2, sizeof(ethernetFrame_t) + sizeof(ipv4He
      +                          ader_t) + (int)(((char*)&((udpHeader_t *)1)->length)-1));
 23094  005816  ECC0  F02C         	call	PL625	;call to abstracted procedure
 23095  00581A  0E26               	movlw	38
 23096  00581C  6E19               	movwf	ETH_Insert@offset,c
 23097  00581E  0E7B               	movlw	UDP_Send@udpLength& (0+255)
 23098  005820  EC3B  F02F         	call	_ETH_Insert
 23099                           
 23100                           ;udpv4.c: 108: udpLength = ((((uint16_t)udpLength & (uint16_t)0xFF00) >> 8) | (((uint16_
      +                          t)udpLength & (uint16_t)0x00FF) << 8));
 23101  005824  D829               	call	PL577	;call to abstracted procedure
 23102                           
 23103                           ; BSR set to: 0
 23104                           ;udpv4.c: 111: cksm = udpLength + UDP;
 23105  005826  0E11               	movlw	17
 23106  005828  257B               	addwf	UDP_Send@udpLength& (0+255),w,b
 23107  00582A  6F79               	movwf	UDP_Send@cksm& (0+255),b
 23108  00582C  0E00               	movlw	0
 23109  00582E  217C               	addwfc	(UDP_Send@udpLength+1)& (0+255),w,b
 23110  005830  6F7A               	movwf	(UDP_Send@cksm+1)& (0+255),b
 23111                           
 23112                           ; BSR set to: 0
 23113                           ;udpv4.c: 112: cksm = ETH_TxComputeChecksum(sizeof(ethernetFrame_t) + sizeof(ipv4Header_
      +                          t) - 8, udpLength + 8, cksm);
 23114  005832  EC40  F016         	call	PL769	;call to abstracted procedure
 23115  005836  257B               	addwf	UDP_Send@udpLength& (0+255),w,b
 23116  005838  6E27               	movwf	ETH_TxComputeChecksum@len,c
 23117  00583A  0E00               	movlw	0
 23118  00583C  217C               	addwfc	(UDP_Send@udpLength+1)& (0+255),w,b
 23119  00583E  6E28               	movwf	ETH_TxComputeChecksum@len+1,c
 23120  005840  C079  F029         	movff	UDP_Send@cksm,ETH_TxComputeChecksum@seed
 23121  005844  C07A  F02A         	movff	UDP_Send@cksm+1,ETH_TxComputeChecksum@seed+1
 23122  005848  ECBD  F02B         	call	_ETH_TxComputeChecksum	;wreg free
 23123  00584C  C025  F079         	movff	?_ETH_TxComputeChecksum,UDP_Send@cksm
 23124  005850  C026  F07A         	movff	?_ETH_TxComputeChecksum+1,UDP_Send@cksm+1
 23125                           
 23126                           ; BSR set to: 0
 23127                           ;udpv4.c: 115: if (cksm == 0){
 23128  005854  5179               	movf	UDP_Send@cksm& (0+255),w,b
 23129  005856  117A               	iorwf	(UDP_Send@cksm+1)& (0+255),w,b
 23130  005858  E102               	bnz	l8405
 23131                           
 23132                           ; BSR set to: 0
 23133                           ;udpv4.c: 116: cksm = 0xffff;
 23134  00585A  6979               	setf	UDP_Send@cksm& (0+255),b
 23135  00585C  697A               	setf	(UDP_Send@cksm+1)& (0+255),b
 23136  00585E                     l8405:
 23137                           
 23138                           ; BSR set to: 0
 23139                           ;udpv4.c: 117: }
 23140                           ;udpv4.c: 119: ETH_Insert((char *)&cksm, 2, sizeof(ethernetFrame_t) + sizeof(ipv4Header_
      +                          t) + (int)(((char*)&((udpHeader_t *)1)->checksum)-1));
 23141  00585E  ECC0  F02C         	call	PL625	;call to abstracted procedure
 23142  005862  0E28               	movlw	40
 23143  005864  6E19               	movwf	ETH_Insert@offset,c
 23144  005866  0E79               	movlw	UDP_Send@cksm& (0+255)
 23145  005868  EC3B  F02F         	call	_ETH_Insert
 23146  00586C  C07B  F031         	movff	UDP_Send@udpLength,IPV4_Send@payloadLength
 23147  005870  C07C  F032         	movff	UDP_Send@udpLength+1,IPV4_Send@payloadLength+1
 23148  005874  EF8D  F02C         	goto	_IPV4_Send	;wreg free
 23149  005878                     __end_of_UDP_Send:
 23150                           	opt stack 0
 23151  005878                     PL577:
 23152                           	opt stack 12
 23153  005878  0100               	movlb	0	; () banked
 23154  00587A  517B               	movf	UDP_Send@udpLength& (0+255),w,b
 23155  00587C  6F75               	movwf	(??_UDP_Send+1)& (0+255),b
 23156  00587E  6B74               	clrf	??_UDP_Send& (0+255),b
 23157  005880  517C               	movf	(UDP_Send@udpLength+1)& (0+255),w,b
 23158  005882  6F76               	movwf	(??_UDP_Send+2)& (0+255),b
 23159  005884  6B77               	clrf	(??_UDP_Send+3)& (0+255),b
 23160  005886  5174               	movf	??_UDP_Send& (0+255),w,b
 23161  005888  1176               	iorwf	(??_UDP_Send+2)& (0+255),w,b
 23162  00588A  6F7B               	movwf	UDP_Send@udpLength& (0+255),b
 23163  00588C  5175               	movf	(??_UDP_Send+1)& (0+255),w,b
 23164  00588E  1177               	iorwf	(??_UDP_Send+3)& (0+255),w,b
 23165  005890  6F7C               	movwf	(UDP_Send@udpLength+1)& (0+255),b
 23166  005892  0012               	return	
 23167  005894                     __end_ofPL577:
 23168                           	opt stack 0
 23169                           tosu	equ	0xFFF
 23170                           tosh	equ	0xFFE
 23171                           tosl	equ	0xFFD
 23172                           pclath	equ	0xFFA
 23173                           tblptru	equ	0xFF8
 23174                           tblptrh	equ	0xFF7
 23175                           tblptrl	equ	0xFF6
 23176                           tablat	equ	0xFF5
 23177                           prodh	equ	0xFF4
 23178                           prodl	equ	0xFF3
 23179                           intcon	equ	0xFF2
 23180                           indf0	equ	0xFEF
 23181                           postinc0	equ	0xFEE
 23182                           fsr0h	equ	0xFEA
 23183                           fsr0l	equ	0xFE9
 23184                           wreg	equ	0xFE8
 23185                           postinc1	equ	0xFE6
 23186                           plusw1	equ	0xFE3
 23187                           fsr1h	equ	0xFE2
 23188                           fsr1l	equ	0xFE1
 23189                           bsr	equ	0xFE0
 23190                           indf2	equ	0xFDF
 23191                           postinc2	equ	0xFDE
 23192                           postdec2	equ	0xFDD
 23193                           plusw2	equ	0xFDB
 23194                           fsr2h	equ	0xFDA
 23195                           fsr2l	equ	0xFD9
 23196                           status	equ	0xFD8
 23197                           
 23198 ;; *************** function _IPV4_Send *****************
 23199 ;; Defined at:
 23200 ;;		line 267 in file "../../TCPIP Library/source/ipv4.c"
 23201 ;; Parameters:    Size  Location     Type
 23202 ;;  payloadLengt    2   48[COMRAM] unsigned int 
 23203 ;; Auto vars:     Size  Location     Type
 23204 ;;  totalLength     2   18[BANK0 ] unsigned int 
 23205 ;;  cksm            2   16[BANK0 ] unsigned int 
 23206 ;;  ret             1   15[BANK0 ] enum E6944
 23207 ;; Return value:  Size  Location     Type
 23208 ;;                  1    wreg      enum E366
 23209 ;; Registers used:
 23210 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23211 ;; Tracked objects:
 23212 ;;		On entry : 0/0
 23213 ;;		On exit  : F/0
 23214 ;;		Unchanged: 0/0
 23215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23216 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23217 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23218 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23219 ;;      Totals:         2       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23220 ;;Total ram usage:       11 bytes
 23221 ;; Hardware stack levels used:    1
 23222 ;; Hardware stack levels required when called:   11
 23223 ;; This function calls:
 23224 ;;		_ETH_Insert
 23225 ;;		_ETH_Send
 23226 ;;		_ETH_TxComputeChecksum
 23227 ;; This function is called by:
 23228 ;;		_ICMP_EchoReply
 23229 ;;		_TCP_Snd
 23230 ;;		_UDP_Send
 23231 ;; This function uses a non-reentrant model
 23232 ;;
 23233                           
 23234                           	psect	text97
 23235  00591A                     __ptext97:
 23236                           	opt stack 0
 23237  00591A                     _IPV4_Send:
 23238                           	opt stack 15
 23239                           
 23240                           ;ipv4.c: 269: uint16_t totalLength;
 23241                           ;ipv4.c: 270: uint16_t cksm;
 23242                           ;ipv4.c: 271: error_msg ret;
 23243                           ;ipv4.c: 273: totalLength = 20 + payloadLength;
 23244                           
 23245                           ; BSR set to: 0
 23246                           ;incstack = 0
 23247  00591A  0E14               	movlw	20
 23248  00591C  2431               	addwf	IPV4_Send@payloadLength,w,c
 23249  00591E  0100               	movlb	0	; () banked
 23250  005920  6F72               	movwf	IPV4_Send@totalLength& (0+255),b
 23251  005922  0E00               	movlw	0
 23252  005924  2032               	addwfc	IPV4_Send@payloadLength+1,w,c
 23253  005926  6F73               	movwf	(IPV4_Send@totalLength+1)& (0+255),b
 23254                           
 23255                           ;ipv4.c: 274: totalLength = ((((uint16_t)totalLength & (uint16_t)0xFF00) >> 8) | (((uint
      +                          16_t)totalLength & (uint16_t)0x00FF) << 8));
 23256  005928  5172               	movf	IPV4_Send@totalLength& (0+255),w,b
 23257  00592A  6F6C               	movwf	(??_IPV4_Send+1)& (0+255),b
 23258  00592C  6B6B               	clrf	??_IPV4_Send& (0+255),b
 23259  00592E  5173               	movf	(IPV4_Send@totalLength+1)& (0+255),w,b
 23260  005930  6F6D               	movwf	(??_IPV4_Send+2)& (0+255),b
 23261  005932  6B6E               	clrf	(??_IPV4_Send+3)& (0+255),b
 23262  005934  516B               	movf	??_IPV4_Send& (0+255),w,b
 23263  005936  116D               	iorwf	(??_IPV4_Send+2)& (0+255),w,b
 23264  005938  6F72               	movwf	IPV4_Send@totalLength& (0+255),b
 23265  00593A  516C               	movf	(??_IPV4_Send+1)& (0+255),w,b
 23266  00593C  116E               	iorwf	(??_IPV4_Send+3)& (0+255),w,b
 23267  00593E  6F73               	movwf	(IPV4_Send@totalLength+1)& (0+255),b
 23268                           
 23269                           ; BSR set to: 0
 23270                           ;ipv4.c: 277: ETH_Insert((char *)&totalLength, 2, sizeof(ethernetFrame_t) + (int)(((char
      +                          *)&((ipv4Header_t *)1)->length)-1));
 23271  005940  D81F               	call	PL625	;call to abstracted procedure
 23272  005942  0E10               	movlw	16
 23273  005944  6E19               	movwf	ETH_Insert@offset,c
 23274  005946  0E72               	movlw	IPV4_Send@totalLength& (0+255)
 23275  005948  EC3B  F02F         	call	_ETH_Insert
 23276                           
 23277                           ;ipv4.c: 279: cksm = ETH_TxComputeChecksum(sizeof(ethernetFrame_t),sizeof(ipv4Header_t),
      +                          0);
 23278  00594C  6A26               	clrf	ETH_TxComputeChecksum@position+1,c
 23279  00594E  0E0E               	movlw	14
 23280  005950  6E25               	movwf	ETH_TxComputeChecksum@position,c
 23281  005952  6A28               	clrf	ETH_TxComputeChecksum@len+1,c
 23282  005954  0E14               	movlw	20
 23283  005956  6E27               	movwf	ETH_TxComputeChecksum@len,c
 23284  005958  6A2A               	clrf	ETH_TxComputeChecksum@seed+1,c
 23285  00595A  6A29               	clrf	ETH_TxComputeChecksum@seed,c
 23286  00595C  ECBD  F02B         	call	_ETH_TxComputeChecksum	;wreg free
 23287  005960  C025  F070         	movff	?_ETH_TxComputeChecksum,IPV4_Send@cksm
 23288  005964  C026  F071         	movff	?_ETH_TxComputeChecksum+1,IPV4_Send@cksm+1
 23289                           
 23290                           ; BSR set to: 0
 23291                           ;ipv4.c: 281: ETH_Insert((char *)&cksm, 2, sizeof(ethernetFrame_t) + (int)(((char*)&((ip
      +                          v4Header_t *)1)->headerCksm)-1));
 23292  005968  D80B               	call	PL625	;call to abstracted procedure
 23293  00596A  0E18               	movlw	24
 23294  00596C  6E19               	movwf	ETH_Insert@offset,c
 23295  00596E  0E70               	movlw	IPV4_Send@cksm& (0+255)
 23296  005970  EC3B  F02F         	call	_ETH_Insert
 23297                           
 23298                           ;ipv4.c: 282: ret = ETH_Send();
 23299  005974  EC9F  F030         	call	_ETH_Send	;wreg free
 23300  005978  0100               	movlb	0	; () banked
 23301  00597A  6F6F               	movwf	IPV4_Send@ret& (0+255),b
 23302                           
 23303                           ; BSR set to: 0
 23304                           ;ipv4.c: 284: return ret;
 23305  00597C  516F               	movf	IPV4_Send@ret& (0+255),w,b
 23306                           
 23307                           ; BSR set to: 0
 23308  00597E  0012               	return		;funcret
 23309  005980                     __end_of_IPV4_Send:
 23310                           	opt stack 0
 23311  005980                     PL625:
 23312                           	opt stack 12
 23313  005980  6A18               	clrf	ETH_Insert@len+1,c
 23314  005982  0E02               	movlw	2
 23315  005984  6E17               	movwf	ETH_Insert@len,c
 23316  005986  6A1A               	clrf	ETH_Insert@offset+1,c
 23317  005988  0C02               	retlw	2
 23318  00598A                     __end_ofPL625:
 23319                           	opt stack 0
 23320                           tosu	equ	0xFFF
 23321                           tosh	equ	0xFFE
 23322                           tosl	equ	0xFFD
 23323                           pclath	equ	0xFFA
 23324                           tblptru	equ	0xFF8
 23325                           tblptrh	equ	0xFF7
 23326                           tblptrl	equ	0xFF6
 23327                           tablat	equ	0xFF5
 23328                           prodh	equ	0xFF4
 23329                           prodl	equ	0xFF3
 23330                           intcon	equ	0xFF2
 23331                           indf0	equ	0xFEF
 23332                           postinc0	equ	0xFEE
 23333                           fsr0h	equ	0xFEA
 23334                           fsr0l	equ	0xFE9
 23335                           wreg	equ	0xFE8
 23336                           postinc1	equ	0xFE6
 23337                           plusw1	equ	0xFE3
 23338                           fsr1h	equ	0xFE2
 23339                           fsr1l	equ	0xFE1
 23340                           bsr	equ	0xFE0
 23341                           indf2	equ	0xFDF
 23342                           postinc2	equ	0xFDE
 23343                           postdec2	equ	0xFDD
 23344                           plusw2	equ	0xFDB
 23345                           fsr2h	equ	0xFDA
 23346                           fsr2l	equ	0xFD9
 23347                           status	equ	0xFD8
 23348                           
 23349 ;; *************** function _ETH_TxComputeChecksum *****************
 23350 ;; Defined at:
 23351 ;;		line 754 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 23352 ;; Parameters:    Size  Location     Type
 23353 ;;  position        2   36[COMRAM] unsigned int 
 23354 ;;  len             2   38[COMRAM] unsigned int 
 23355 ;;  seed            2   40[COMRAM] unsigned int 
 23356 ;; Auto vars:     Size  Location     Type
 23357 ;;  cksm            4   44[COMRAM] unsigned long 
 23358 ;;  rxptr           2   42[COMRAM] unsigned int 
 23359 ;; Return value:  Size  Location     Type
 23360 ;;                  2   36[COMRAM] unsigned int 
 23361 ;; Registers used:
 23362 ;;		wreg, status,2, status,0, cstack
 23363 ;; Tracked objects:
 23364 ;;		On entry : 0/0
 23365 ;;		On exit  : F/0
 23366 ;;		Unchanged: 0/0
 23367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23368 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23369 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23370 ;;      Temps:          0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23371 ;;      Totals:        12      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23372 ;;Total ram usage:       23 bytes
 23373 ;; Hardware stack levels used:    1
 23374 ;; Hardware stack levels required when called:   10
 23375 ;; This function calls:
 23376 ;;		_ETH_ComputeChecksum
 23377 ;; This function is called by:
 23378 ;;		_ICMP_EchoReply
 23379 ;;		_IPV4_Send
 23380 ;;		_TCP_Snd
 23381 ;;		_UDP_Send
 23382 ;; This function uses a non-reentrant model
 23383 ;;
 23384                           
 23385                           	psect	text98
 23386  00577A                     __ptext98:
 23387                           	opt stack 0
 23388  00577A                     _ETH_TxComputeChecksum:
 23389                           	opt stack 15
 23390                           
 23391                           ;j60_driver.c: 756: uint16_t rxptr;
 23392                           ;j60_driver.c: 757: uint32_t cksm;
 23393                           ;j60_driver.c: 760: rxptr = ERDPT;
 23394                           
 23395                           ; BSR set to: 0
 23396                           ;incstack = 0
 23397  00577A  CF7A F02B          	movff	3962,ETH_TxComputeChecksum@rxptr	;volatile
 23398  00577E  CF7B F02C          	movff	3963,ETH_TxComputeChecksum@rxptr+1	;volatile
 23399                           
 23400                           ;j60_driver.c: 763: ERDPT = ((8192) - (1518)) + position + 1;
 23401  005782  0E13               	movlw	19
 23402  005784  2425               	addwf	ETH_TxComputeChecksum@position,w,c
 23403  005786  6E7A               	movwf	3962,c	;volatile
 23404  005788  0E1A               	movlw	26
 23405  00578A  2026               	addwfc	ETH_TxComputeChecksum@position+1,w,c
 23406  00578C  6E7B               	movwf	3963,c	;volatile
 23407                           
 23408                           ;j60_driver.c: 765: cksm = ETH_ComputeChecksum( len, seed);
 23409  00578E  C027  F017         	movff	ETH_TxComputeChecksum@len,ETH_ComputeChecksum@len
 23410  005792  C028  F018         	movff	ETH_TxComputeChecksum@len+1,ETH_ComputeChecksum@len+1
 23411  005796  C029  F019         	movff	ETH_TxComputeChecksum@seed,ETH_ComputeChecksum@seed
 23412  00579A  C02A  F01A         	movff	ETH_TxComputeChecksum@seed+1,ETH_ComputeChecksum@seed+1
 23413  00579E  EC87  F02A         	call	_ETH_ComputeChecksum	;wreg free
 23414  0057A2  C017  F02D         	movff	?_ETH_ComputeChecksum,ETH_TxComputeChecksum@cksm
 23415  0057A6  C018  F02E         	movff	?_ETH_ComputeChecksum+1,ETH_TxComputeChecksum@cksm+1
 23416  0057AA  6A2F               	clrf	ETH_TxComputeChecksum@cksm+2,c
 23417  0057AC  6A30               	clrf	ETH_TxComputeChecksum@cksm+3,c
 23418                           
 23419                           ;j60_driver.c: 768: ERDPT = rxptr;
 23420  0057AE  C02B  FF7A         	movff	ETH_TxComputeChecksum@rxptr,3962	;volatile
 23421  0057B2  C02C  FF7B         	movff	ETH_TxComputeChecksum@rxptr+1,3963	;volatile
 23422                           
 23423                           ;j60_driver.c: 770: cksm = ((cksm & 0xFF00) >> 8) | ((cksm & 0x00FF) << 8);
 23424  0057B6  502D               	movf	ETH_TxComputeChecksum@cksm,w,c
 23425  0057B8  0100               	movlb	0	; () banked
 23426  0057BA  6F60               	movwf	??_ETH_TxComputeChecksum& (0+255),b
 23427  0057BC  6B61               	clrf	(??_ETH_TxComputeChecksum+1)& (0+255),b
 23428  0057BE  6B62               	clrf	(??_ETH_TxComputeChecksum+2)& (0+255),b
 23429  0057C0  6B63               	clrf	(??_ETH_TxComputeChecksum+3)& (0+255),b
 23430  0057C2  C062  F063         	movff	??_ETH_TxComputeChecksum+2,??_ETH_TxComputeChecksum+3
 23431  0057C6  C061  F062         	movff	??_ETH_TxComputeChecksum+1,??_ETH_TxComputeChecksum+2
 23432  0057CA  C060  F061         	movff	??_ETH_TxComputeChecksum,??_ETH_TxComputeChecksum+1
 23433  0057CE  6B60               	clrf	??_ETH_TxComputeChecksum& (0+255),b
 23434  0057D0  502E               	movf	ETH_TxComputeChecksum@cksm+1,w,c
 23435  0057D2  6F64               	movwf	(??_ETH_TxComputeChecksum+4)& (0+255),b
 23436  0057D4  6B65               	clrf	(??_ETH_TxComputeChecksum+5)& (0+255),b
 23437  0057D6  6B66               	clrf	(??_ETH_TxComputeChecksum+6)& (0+255),b
 23438  0057D8  5164               	movf	(??_ETH_TxComputeChecksum+4)& (0+255),w,b
 23439  0057DA  6F67               	movwf	(??_ETH_TxComputeChecksum+7)& (0+255),b
 23440  0057DC  5165               	movf	(??_ETH_TxComputeChecksum+5)& (0+255),w,b
 23441  0057DE  6F68               	movwf	(??_ETH_TxComputeChecksum+8)& (0+255),b
 23442  0057E0  5166               	movf	(??_ETH_TxComputeChecksum+6)& (0+255),w,b
 23443  0057E2  6F69               	movwf	(??_ETH_TxComputeChecksum+9)& (0+255),b
 23444  0057E4  6B6A               	clrf	(??_ETH_TxComputeChecksum+10)& (0+255),b
 23445  0057E6  5160               	movf	??_ETH_TxComputeChecksum& (0+255),w,b
 23446  0057E8  1167               	iorwf	(??_ETH_TxComputeChecksum+7)& (0+255),w,b
 23447  0057EA  6E2D               	movwf	ETH_TxComputeChecksum@cksm,c
 23448  0057EC  5161               	movf	(??_ETH_TxComputeChecksum+1)& (0+255),w,b
 23449  0057EE  1168               	iorwf	(??_ETH_TxComputeChecksum+8)& (0+255),w,b
 23450  0057F0  6E2E               	movwf	ETH_TxComputeChecksum@cksm+1,c
 23451  0057F2  5162               	movf	(??_ETH_TxComputeChecksum+2)& (0+255),w,b
 23452  0057F4  1169               	iorwf	(??_ETH_TxComputeChecksum+9)& (0+255),w,b
 23453  0057F6  6E2F               	movwf	ETH_TxComputeChecksum@cksm+2,c
 23454  0057F8  5163               	movf	(??_ETH_TxComputeChecksum+3)& (0+255),w,b
 23455  0057FA  116A               	iorwf	(??_ETH_TxComputeChecksum+10)& (0+255),w,b
 23456  0057FC  6E30               	movwf	ETH_TxComputeChecksum@cksm+3,c
 23457                           
 23458                           ; BSR set to: 0
 23459                           ;j60_driver.c: 772: return cksm;
 23460  0057FE  C02D  F025         	movff	ETH_TxComputeChecksum@cksm,?_ETH_TxComputeChecksum
 23461  005802  C02E  F026         	movff	ETH_TxComputeChecksum@cksm+1,?_ETH_TxComputeChecksum+1
 23462                           
 23463                           ; BSR set to: 0
 23464  005806  0012               	return		;funcret
 23465  005808                     __end_of_ETH_TxComputeChecksum:
 23466                           	opt stack 0
 23467                           tosu	equ	0xFFF
 23468                           tosh	equ	0xFFE
 23469                           tosl	equ	0xFFD
 23470                           pclath	equ	0xFFA
 23471                           tblptru	equ	0xFF8
 23472                           tblptrh	equ	0xFF7
 23473                           tblptrl	equ	0xFF6
 23474                           tablat	equ	0xFF5
 23475                           prodh	equ	0xFF4
 23476                           prodl	equ	0xFF3
 23477                           intcon	equ	0xFF2
 23478                           indf0	equ	0xFEF
 23479                           postinc0	equ	0xFEE
 23480                           fsr0h	equ	0xFEA
 23481                           fsr0l	equ	0xFE9
 23482                           wreg	equ	0xFE8
 23483                           postinc1	equ	0xFE6
 23484                           plusw1	equ	0xFE3
 23485                           fsr1h	equ	0xFE2
 23486                           fsr1l	equ	0xFE1
 23487                           bsr	equ	0xFE0
 23488                           indf2	equ	0xFDF
 23489                           postinc2	equ	0xFDE
 23490                           postdec2	equ	0xFDD
 23491                           plusw2	equ	0xFDB
 23492                           fsr2h	equ	0xFDA
 23493                           fsr2l	equ	0xFD9
 23494                           status	equ	0xFD8
 23495                           
 23496 ;; *************** function _ETH_ComputeChecksum *****************
 23497 ;; Defined at:
 23498 ;;		line 710 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 23499 ;; Parameters:    Size  Location     Type
 23500 ;;  len             2   22[COMRAM] unsigned int 
 23501 ;;  seed            2   24[COMRAM] unsigned int 
 23502 ;; Auto vars:     Size  Location     Type
 23503 ;;  cksm            4   30[COMRAM] unsigned long 
 23504 ;;  v               2   34[COMRAM] unsigned int 
 23505 ;; Return value:  Size  Location     Type
 23506 ;;                  2   22[COMRAM] unsigned int 
 23507 ;; Registers used:
 23508 ;;		wreg, status,2, status,0, cstack
 23509 ;; Tracked objects:
 23510 ;;		On entry : 0/1
 23511 ;;		On exit  : 0/0
 23512 ;;		Unchanged: 0/0
 23513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23514 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23515 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23516 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23517 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23518 ;;Total ram usage:       14 bytes
 23519 ;; Hardware stack levels used:    1
 23520 ;; Hardware stack levels required when called:    9
 23521 ;; This function calls:
 23522 ;;		_ETH_EdataRead
 23523 ;; This function is called by:
 23524 ;;		_ETH_TxComputeChecksum
 23525 ;;		_ETH_RxComputeChecksum
 23526 ;; This function uses a non-reentrant model
 23527 ;;
 23528                           
 23529                           	psect	text99
 23530  00550E                     __ptext99:
 23531                           	opt stack 0
 23532  00550E                     _ETH_ComputeChecksum:
 23533                           	opt stack 15
 23534                           
 23535                           ;j60_driver.c: 712: uint32_t cksm;
 23536                           ;j60_driver.c: 713: uint16_t v;
 23537                           ;j60_driver.c: 715: cksm = seed;
 23538                           
 23539                           ; BSR set to: 0
 23540                           ;incstack = 0
 23541  00550E  C019  F01F         	movff	ETH_ComputeChecksum@seed,ETH_ComputeChecksum@cksm
 23542  005512  C01A  F020         	movff	ETH_ComputeChecksum@seed+1,ETH_ComputeChecksum@cksm+1
 23543  005516  6A21               	clrf	ETH_ComputeChecksum@cksm+2,c
 23544  005518  6A22               	clrf	ETH_ComputeChecksum@cksm+3,c
 23545                           
 23546                           ;j60_driver.c: 717: while(len > 1)
 23547  00551A  D011               	goto	l7915
 23548  00551C                     l617:
 23549                           
 23550                           ;j60_driver.c: 718: {
 23551                           ;j60_driver.c: 719: v = 0;
 23552  00551C  6A23               	clrf	ETH_ComputeChecksum@v,c
 23553  00551E  6A24               	clrf	ETH_ComputeChecksum@v+1,c
 23554  005520                     i49L__ptext100:
 23555                           	opt stack 0
 23556  005520                     i49L_ETH_EdataRead:
 23557                           	opt stack 0
 23558  005520                     i49Ll7805:
 23559                           	opt stack 15
 23560  005520  CF61 FE7E          	movff	3937,_errataTemp	;# 
 23561  005524                     i49Ll7807:
 23562                           	opt stack 15
 23563                           
 23564                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
 23565  005524  010E               	movlb	14	; () banked
 23566  005526  517E               	movf	126,w,b
 23567  005528                     i49Ll460:
 23568                           	opt stack 15
 23569  005528  6E24               	movwf	ETH_ComputeChecksum@v+1,c
 23570  00552A                     i50L__ptext100:
 23571                           	opt stack 0
 23572  00552A                     i50L_ETH_EdataRead:
 23573                           	opt stack 0
 23574  00552A                     i50Ll7805:
 23575                           	opt stack 15
 23576  00552A  CF61 FE7E          	movff	3937,_errataTemp	;# 
 23577  00552E                     i50Ll7807:
 23578                           	opt stack 15
 23579                           
 23580                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
 23581  00552E  010E               	movlb	14	; () banked
 23582  005530  517E               	movf	126,w,b
 23583  005532                     i50Ll460:
 23584                           	opt stack 15
 23585  005532  6E23               	movwf	ETH_ComputeChecksum@v,c
 23586                           
 23587                           ; BSR set to: 14
 23588                           ;j60_driver.c: 722: cksm += v;
 23589  005534  D834               	call	PL663	;call to abstracted procedure
 23590                           
 23591                           ; BSR set to: 14
 23592                           ;j60_driver.c: 723: len -= 2;
 23593  005536  0E02               	movlw	2
 23594  005538  5E17               	subwf	ETH_ComputeChecksum@len,f,c
 23595  00553A  0E00               	movlw	0
 23596  00553C  5A18               	subwfb	ETH_ComputeChecksum@len+1,f,c
 23597  00553E                     l7915:
 23598  00553E  5018               	movf	ETH_ComputeChecksum@len+1,w,c
 23599  005540  E1ED               	bnz	l617
 23600  005542  0E02               	movlw	2
 23601  005544  5C17               	subwf	ETH_ComputeChecksum@len,w,c
 23602  005546  E2EA               	bc	l617
 23603                           
 23604                           ;j60_driver.c: 724: }
 23605                           ;j60_driver.c: 726: if(len)
 23606  005548  5017               	movf	ETH_ComputeChecksum@len,w,c
 23607  00554A  1018               	iorwf	ETH_ComputeChecksum@len+1,w,c
 23608  00554C  E01C               	bz	l620
 23609                           
 23610                           ;j60_driver.c: 727: {
 23611                           ;j60_driver.c: 728: v = 0;
 23612  00554E  6A23               	clrf	ETH_ComputeChecksum@v,c
 23613  005550  6A24               	clrf	ETH_ComputeChecksum@v+1,c
 23614  005552                     i51L__ptext100:
 23615                           	opt stack 0
 23616  005552                     i51L_ETH_EdataRead:
 23617                           	opt stack 0
 23618  005552                     i51Ll7805:
 23619                           	opt stack 15
 23620  005552  CF61 FE7E          	movff	3937,_errataTemp	;# 
 23621  005556                     i51Ll7807:
 23622                           	opt stack 15
 23623                           
 23624                           ;j60_driver.c: 79: return (uint8_t) errataTemp;
 23625  005556  010E               	movlb	14	; () banked
 23626  005558  517E               	movf	126,w,b
 23627  00555A                     i51Ll460:
 23628                           	opt stack 15
 23629  00555A  6E24               	movwf	ETH_ComputeChecksum@v+1,c
 23630                           
 23631                           ; BSR set to: 14
 23632                           ;j60_driver.c: 730: ((char *)&v)[0] = 0;
 23633  00555C  6A23               	clrf	ETH_ComputeChecksum@v,c
 23634                           
 23635                           ; BSR set to: 14
 23636                           ;j60_driver.c: 731: cksm += v;
 23637  00555E  D81F               	call	PL663	;call to abstracted procedure
 23638  005560  D012               	goto	l620
 23639  005562                     l7927:
 23640                           
 23641                           ;j60_driver.c: 736: {
 23642                           ;j60_driver.c: 737: cksm = (cksm & 0x0FFFF) + (cksm>>16);
 23643  005562  501F               	movf	ETH_ComputeChecksum@cksm,w,c
 23644  005564  6E1B               	movwf	??_ETH_ComputeChecksum& (0+255),c
 23645  005566  5020               	movf	ETH_ComputeChecksum@cksm+1,w,c
 23646  005568  6E1C               	movwf	(??_ETH_ComputeChecksum+1)& (0+255),c
 23647  00556A  6A1D               	clrf	(??_ETH_ComputeChecksum+2)& (0+255),c
 23648  00556C  6A1E               	clrf	(??_ETH_ComputeChecksum+3)& (0+255),c
 23649  00556E  5021               	movf	ETH_ComputeChecksum@cksm+2,w,c
 23650  005570  241B               	addwf	??_ETH_ComputeChecksum,w,c
 23651  005572  6E1F               	movwf	ETH_ComputeChecksum@cksm,c
 23652  005574  5022               	movf	ETH_ComputeChecksum@cksm+3,w,c
 23653  005576  201C               	addwfc	??_ETH_ComputeChecksum+1,w,c
 23654  005578  6E20               	movwf	ETH_ComputeChecksum@cksm+1,c
 23655  00557A  0E00               	movlw	0
 23656  00557C  201D               	addwfc	??_ETH_ComputeChecksum+2,w,c
 23657  00557E  6E21               	movwf	ETH_ComputeChecksum@cksm+2,c
 23658  005580  0E00               	movlw	0
 23659  005582  201E               	addwfc	??_ETH_ComputeChecksum+3,w,c
 23660  005584  6E22               	movwf	ETH_ComputeChecksum@cksm+3,c
 23661  005586                     l620:
 23662  005586  5021               	movf	ETH_ComputeChecksum@cksm+2,w,c
 23663  005588  1022               	iorwf	ETH_ComputeChecksum@cksm+3,w,c
 23664  00558A  E1EB               	bnz	l7927
 23665                           
 23666                           ;j60_driver.c: 738: }
 23667                           ;j60_driver.c: 741: cksm = ~cksm;
 23668  00558C  1E1F               	comf	ETH_ComputeChecksum@cksm,f,c
 23669  00558E  1E20               	comf	ETH_ComputeChecksum@cksm+1,f,c
 23670  005590  1E21               	comf	ETH_ComputeChecksum@cksm+2,f,c
 23671  005592  1E22               	comf	ETH_ComputeChecksum@cksm+3,f,c
 23672                           
 23673                           ;j60_driver.c: 744: return cksm;
 23674  005594  C01F  F017         	movff	ETH_ComputeChecksum@cksm,?_ETH_ComputeChecksum
 23675  005598  C020  F018         	movff	ETH_ComputeChecksum@cksm+1,?_ETH_ComputeChecksum+1
 23676  00559C  0CFF               	retlw	255	;funcret
 23677  00559E                     __end_of_ETH_ComputeChecksum:
 23678                           	opt stack 0
 23679  00559E                     PL663:
 23680                           	opt stack 15
 23681  00559E  5023               	movf	ETH_ComputeChecksum@v,w,c
 23682  0055A0  261F               	addwf	ETH_ComputeChecksum@cksm,f,c
 23683  0055A2  5024               	movf	ETH_ComputeChecksum@v+1,w,c
 23684  0055A4  2220               	addwfc	ETH_ComputeChecksum@cksm+1,f,c
 23685  0055A6  0E00               	movlw	0
 23686  0055A8  2221               	addwfc	ETH_ComputeChecksum@cksm+2,f,c
 23687  0055AA  2222               	addwfc	ETH_ComputeChecksum@cksm+3,f,c
 23688  0055AC  0C00               	retlw	0
 23689  0055AE                     __end_ofPL663:
 23690                           	opt stack 0
 23691                           tosu	equ	0xFFF
 23692                           tosh	equ	0xFFE
 23693                           tosl	equ	0xFFD
 23694                           pclath	equ	0xFFA
 23695                           tblptru	equ	0xFF8
 23696                           tblptrh	equ	0xFF7
 23697                           tblptrl	equ	0xFF6
 23698                           tablat	equ	0xFF5
 23699                           prodh	equ	0xFF4
 23700                           prodl	equ	0xFF3
 23701                           intcon	equ	0xFF2
 23702                           indf0	equ	0xFEF
 23703                           postinc0	equ	0xFEE
 23704                           fsr0h	equ	0xFEA
 23705                           fsr0l	equ	0xFE9
 23706                           wreg	equ	0xFE8
 23707                           postinc1	equ	0xFE6
 23708                           plusw1	equ	0xFE3
 23709                           fsr1h	equ	0xFE2
 23710                           fsr1l	equ	0xFE1
 23711                           bsr	equ	0xFE0
 23712                           indf2	equ	0xFDF
 23713                           postinc2	equ	0xFDE
 23714                           postdec2	equ	0xFDD
 23715                           plusw2	equ	0xFDB
 23716                           fsr2h	equ	0xFDA
 23717                           fsr2l	equ	0xFD9
 23718                           status	equ	0xFD8
 23719                           
 23720 ;; *************** function _ETH_EdataRead *****************
 23721 ;; Defined at:
 23722 ;;		line 76 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 23723 ;; Parameters:    Size  Location     Type
 23724 ;;		None
 23725 ;; Auto vars:     Size  Location     Type
 23726 ;;		None
 23727 ;; Return value:  Size  Location     Type
 23728 ;;                  1    wreg      unsigned char 
 23729 ;; Registers used:
 23730 ;;		wreg, status,2
 23731 ;; Tracked objects:
 23732 ;;		On entry : 0/2
 23733 ;;		On exit  : F/E
 23734 ;;		Unchanged: 0/0
 23735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23740 ;;Total ram usage:        0 bytes
 23741 ;; Hardware stack levels used:    1
 23742 ;; Hardware stack levels required when called:    8
 23743 ;; This function calls:
 23744 ;;		Nothing
 23745 ;; This function is called by:
 23746 ;;		_ETH_NextPacketUpdate
 23747 ;;		_ETH_Read8
 23748 ;;		_ETH_Read16
 23749 ;;		_ETH_Read32
 23750 ;;		_ETH_ReadBlock
 23751 ;;		_ETH_ComputeChecksum
 23752 ;; This function uses a non-reentrant model
 23753 ;;
 23754                           
 23755                           	psect	text100
 23756  000000                     __ptext100:
 23757                           	opt stack 0
 23758  000000                     _ETH_EdataRead:
 23759                           	opt stack 0
 23760  000000                     __end_of_ETH_EdataRead:
 23761                           	opt stack 0
 23762                           tosu	equ	0xFFF
 23763                           tosh	equ	0xFFE
 23764                           tosl	equ	0xFFD
 23765                           pclath	equ	0xFFA
 23766                           tblptru	equ	0xFF8
 23767                           tblptrh	equ	0xFF7
 23768                           tblptrl	equ	0xFF6
 23769                           tablat	equ	0xFF5
 23770                           prodh	equ	0xFF4
 23771                           prodl	equ	0xFF3
 23772                           intcon	equ	0xFF2
 23773                           indf0	equ	0xFEF
 23774                           postinc0	equ	0xFEE
 23775                           fsr0h	equ	0xFEA
 23776                           fsr0l	equ	0xFE9
 23777                           wreg	equ	0xFE8
 23778                           postinc1	equ	0xFE6
 23779                           plusw1	equ	0xFE3
 23780                           fsr1h	equ	0xFE2
 23781                           fsr1l	equ	0xFE1
 23782                           bsr	equ	0xFE0
 23783                           indf2	equ	0xFDF
 23784                           postinc2	equ	0xFDE
 23785                           postdec2	equ	0xFDD
 23786                           plusw2	equ	0xFDB
 23787                           fsr2h	equ	0xFDA
 23788                           fsr2l	equ	0xFD9
 23789                           status	equ	0xFD8
 23790                           
 23791 ;; *************** function _ETH_Send *****************
 23792 ;; Defined at:
 23793 ;;		line 567 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 23794 ;; Parameters:    Size  Location     Type
 23795 ;;		None
 23796 ;; Auto vars:     Size  Location     Type
 23797 ;;  packetEnd       2   22[COMRAM] unsigned int 
 23798 ;; Return value:  Size  Location     Type
 23799 ;;                  1    wreg      enum E6944
 23800 ;; Registers used:
 23801 ;;		wreg, status,2, status,0
 23802 ;; Tracked objects:
 23803 ;;		On entry : 0/0
 23804 ;;		On exit  : 0/0
 23805 ;;		Unchanged: 0/0
 23806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23808 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23810 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23811 ;;Total ram usage:        2 bytes
 23812 ;; Hardware stack levels used:    1
 23813 ;; Hardware stack levels required when called:    8
 23814 ;; This function calls:
 23815 ;;		Nothing
 23816 ;; This function is called by:
 23817 ;;		_ARPV4_Packet
 23818 ;;		_ARPV4_Request
 23819 ;;		_IPV4_Send
 23820 ;; This function uses a non-reentrant model
 23821 ;;
 23822                           
 23823                           	psect	text101
 23824  00613E                     __ptext101:
 23825                           	opt stack 0
 23826  00613E                     _ETH_Send:
 23827                           	opt stack 16
 23828                           
 23829                           ;j60_driver.c: 569: uint16_t packetEnd;
 23830                           ;j60_driver.c: 571: packetEnd = EWRPT - 1;
 23831                           
 23832                           ; BSR set to: 14
 23833                           ;incstack = 0
 23834  00613E  0EFF               	movlw	255
 23835  006140  010E               	movlb	14	; () banked
 23836  006142  25E2               	addwf	226,w,b	;volatile
 23837  006144  6E17               	movwf	ETH_Send@packetEnd,c
 23838  006146  0EFF               	movlw	255
 23839  006148  21E3               	addwfc	227,w,b	;volatile
 23840  00614A  6E18               	movwf	ETH_Send@packetEnd+1,c
 23841                           
 23842                           ; BSR set to: 14
 23843                           ;j60_driver.c: 573: if(!ethData.up)
 23844  00614C  0101               	movlb	1	; () banked
 23845  00614E  A5BF               	btfss	_ethData& (0+255),2,b	;volatile
 23846                           
 23847                           ; BSR set to: 1
 23848                           ;j60_driver.c: 574: {
 23849                           ;j60_driver.c: 575: return LINK_NOT_FOUND;
 23850  006150  0C02               	retlw	2
 23851                           
 23852                           ; BSR set to: 1
 23853                           ;j60_driver.c: 576: }
 23854                           ;j60_driver.c: 577: if(!ethData.bufferBusy)
 23855  006152  ABBF               	btfss	_ethData& (0+255),5,b	;volatile
 23856                           
 23857                           ; BSR set to: 1
 23858                           ;j60_driver.c: 578: {
 23859                           ;j60_driver.c: 579: return BUFFER_BUSY;
 23860  006154  0C03               	retlw	3
 23861                           
 23862                           ; BSR set to: 1
 23863                           ;j60_driver.c: 580: }
 23864                           ;j60_driver.c: 581: ETXST = ((8192) - (1518));
 23865  006156  EC97  F027         	call	PL715	;call to abstracted procedure
 23866                           
 23867                           ; BSR set to: 14
 23868                           ;j60_driver.c: 582: ETXND = packetEnd;
 23869  00615A  C017  FEE6         	movff	ETH_Send@packetEnd,3814	;volatile
 23870  00615E  C018  FEE7         	movff	ETH_Send@packetEnd+1,3815	;volatile
 23871                           
 23872                           ; BSR set to: 14
 23873                           ;j60_driver.c: 583: __nop(); __nop();
 23874  006162  F000               	nop	
 23875  006164  F000               	nop	
 23876                           
 23877                           ;j60_driver.c: 584: ECON1bits.TXRTS = 1;
 23878  006166  86D2               	bsf	4050,3,c	;volatile
 23879                           
 23880                           ;j60_driver.c: 586: return SUCCESS;
 23881  006168  0C01               	retlw	1	;funcret
 23882  00616A                     __end_of_ETH_Send:
 23883                           	opt stack 0
 23884                           tosu	equ	0xFFF
 23885                           tosh	equ	0xFFE
 23886                           tosl	equ	0xFFD
 23887                           pclath	equ	0xFFA
 23888                           tblptru	equ	0xFF8
 23889                           tblptrh	equ	0xFF7
 23890                           tblptrl	equ	0xFF6
 23891                           tablat	equ	0xFF5
 23892                           prodh	equ	0xFF4
 23893                           prodl	equ	0xFF3
 23894                           intcon	equ	0xFF2
 23895                           indf0	equ	0xFEF
 23896                           postinc0	equ	0xFEE
 23897                           fsr0h	equ	0xFEA
 23898                           fsr0l	equ	0xFE9
 23899                           wreg	equ	0xFE8
 23900                           postinc1	equ	0xFE6
 23901                           plusw1	equ	0xFE3
 23902                           fsr1h	equ	0xFE2
 23903                           fsr1l	equ	0xFE1
 23904                           bsr	equ	0xFE0
 23905                           indf2	equ	0xFDF
 23906                           postinc2	equ	0xFDE
 23907                           postdec2	equ	0xFDD
 23908                           plusw2	equ	0xFDB
 23909                           fsr2h	equ	0xFDA
 23910                           fsr2l	equ	0xFD9
 23911                           status	equ	0xFD8
 23912                           
 23913 ;; *************** function _ETH_Insert *****************
 23914 ;; Defined at:
 23915 ;;		line 596 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 23916 ;; Parameters:    Size  Location     Type
 23917 ;;  data            1    wreg     PTR unsigned char 
 23918 ;;		 -> UDP_Send@cksm(2), UDP_Send@udpLength(2), TCP_Snd@cksm(2), IPV4_Send@cksm(2), 
 23919 ;;		 -> IPV4_Send@totalLength(2), ICMP_EchoReply@cksm(2), 
 23920 ;;  len             2   22[COMRAM] unsigned int 
 23921 ;;  offset          2   24[COMRAM] unsigned int 
 23922 ;; Auto vars:     Size  Location     Type
 23923 ;;  data            1   28[COMRAM] PTR unsigned char 
 23924 ;;		 -> UDP_Send@cksm(2), UDP_Send@udpLength(2), TCP_Snd@cksm(2), IPV4_Send@cksm(2), 
 23925 ;;		 -> IPV4_Send@totalLength(2), ICMP_EchoReply@cksm(2), 
 23926 ;;  current_tx_p    2   26[COMRAM] unsigned int 
 23927 ;; Return value:  Size  Location     Type
 23928 ;;		None               void
 23929 ;; Registers used:
 23930 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23931 ;; Tracked objects:
 23932 ;;		On entry : F/0
 23933 ;;		On exit  : 0/0
 23934 ;;		Unchanged: 0/0
 23935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23936 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23937 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23939 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23940 ;;Total ram usage:        7 bytes
 23941 ;; Hardware stack levels used:    1
 23942 ;; Hardware stack levels required when called:    9
 23943 ;; This function calls:
 23944 ;;		_ETH_EdataWrite
 23945 ;; This function is called by:
 23946 ;;		_ICMP_EchoReply
 23947 ;;		_IPV4_Send
 23948 ;;		_TCP_Snd
 23949 ;;		_UDP_Send
 23950 ;; This function uses a non-reentrant model
 23951 ;;
 23952                           
 23953                           	psect	text102
 23954  005E76                     __ptext102:
 23955                           	opt stack 0
 23956  005E76                     _ETH_Insert:
 23957                           	opt stack 16
 23958                           
 23959                           ;incstack = 0
 23960                           ;ETH_Insert@data stored from wreg
 23961  005E76  6E1D               	movwf	ETH_Insert@data,c
 23962                           
 23963                           ;j60_driver.c: 598: uint16_t current_tx_ptr = EWRPT;
 23964  005E78  CEE2 F01B          	movff	3810,ETH_Insert@current_tx_ptr	;volatile
 23965  005E7C  CEE3 F01C          	movff	3811,ETH_Insert@current_tx_ptr+1	;volatile
 23966                           
 23967                           ;j60_driver.c: 599: EWRPT = ((8192) - (1518)) + offset + 1;
 23968  005E80  0E13               	movlw	19
 23969  005E82  2419               	addwf	ETH_Insert@offset,w,c
 23970  005E84  010E               	movlb	14	; () banked
 23971  005E86  6FE2               	movwf	226,b	;volatile
 23972  005E88  0E1A               	movlw	26
 23973  005E8A  201A               	addwfc	ETH_Insert@offset+1,w,c
 23974  005E8C  6FE3               	movwf	227,b	;volatile
 23975                           
 23976                           ;j60_driver.c: 600: while(len--)
 23977  005E8E  D007               	goto	l8003
 23978  005E90                     l7999:
 23979                           
 23980                           ;j60_driver.c: 601: {
 23981                           ;j60_driver.c: 602: ETH_EdataWrite(*data++);
 23982  005E90  501D               	movf	ETH_Insert@data,w,c
 23983  005E92  6ED9               	movwf	fsr2l,c
 23984  005E94  6ADA               	clrf	fsr2h,c
 23985  005E96  50DF               	movf	indf2,w,c
 23986  005E98                     i52L__ptext103:
 23987                           	opt stack 0
 23988  005E98                     i52L_ETH_EdataWrite:
 23989                           	opt stack 0
 23990  005E98                     i52Ll7811:
 23991                           	opt stack 16
 23992  005E98  CFE8 FF61          	movff	wreg,3937	;# 
 23993  005E9C                     i52Ll463:
 23994                           	opt stack 16
 23995  005E9C  2A1D               	incf	ETH_Insert@data,f,c
 23996  005E9E                     l8003:
 23997  005E9E  0617               	decf	ETH_Insert@len,f,c
 23998  005EA0  A0D8               	btfss	status,0,c
 23999  005EA2  0618               	decf	ETH_Insert@len+1,f,c
 24000  005EA4  2817               	incf	ETH_Insert@len,w,c
 24001  005EA6  E1F4               	bnz	l7999
 24002  005EA8  2818               	incf	ETH_Insert@len+1,w,c
 24003  005EAA  E1F2               	bnz	l7999
 24004                           
 24005                           ;j60_driver.c: 603: }
 24006                           ;j60_driver.c: 604: EWRPT = current_tx_ptr;
 24007  005EAC  C01B  FEE2         	movff	ETH_Insert@current_tx_ptr,3810	;volatile
 24008  005EB0  C01C  FEE3         	movff	ETH_Insert@current_tx_ptr+1,3811	;volatile
 24009  005EB4  0012               	return		;funcret
 24010  005EB6                     __end_of_ETH_Insert:
 24011                           	opt stack 0
 24012                           tosu	equ	0xFFF
 24013                           tosh	equ	0xFFE
 24014                           tosl	equ	0xFFD
 24015                           pclath	equ	0xFFA
 24016                           tblptru	equ	0xFF8
 24017                           tblptrh	equ	0xFF7
 24018                           tblptrl	equ	0xFF6
 24019                           tablat	equ	0xFF5
 24020                           prodh	equ	0xFF4
 24021                           prodl	equ	0xFF3
 24022                           intcon	equ	0xFF2
 24023                           indf0	equ	0xFEF
 24024                           postinc0	equ	0xFEE
 24025                           fsr0h	equ	0xFEA
 24026                           fsr0l	equ	0xFE9
 24027                           wreg	equ	0xFE8
 24028                           postinc1	equ	0xFE6
 24029                           plusw1	equ	0xFE3
 24030                           fsr1h	equ	0xFE2
 24031                           fsr1l	equ	0xFE1
 24032                           bsr	equ	0xFE0
 24033                           indf2	equ	0xFDF
 24034                           postinc2	equ	0xFDE
 24035                           postdec2	equ	0xFDD
 24036                           plusw2	equ	0xFDB
 24037                           fsr2h	equ	0xFDA
 24038                           fsr2l	equ	0xFD9
 24039                           status	equ	0xFD8
 24040                           
 24041 ;; *************** function _ETH_EdataWrite *****************
 24042 ;; Defined at:
 24043 ;;		line 82 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 24044 ;; Parameters:    Size  Location     Type
 24045 ;;  d               1    wreg     unsigned char 
 24046 ;; Auto vars:     Size  Location     Type
 24047 ;;  d               1    0[COMRAM] unsigned char 
 24048 ;; Return value:  Size  Location     Type
 24049 ;;		None               void
 24050 ;; Registers used:
 24051 ;;		wreg
 24052 ;; Tracked objects:
 24053 ;;		On entry : 0/0
 24054 ;;		On exit  : 0/0
 24055 ;;		Unchanged: 0/0
 24056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24061 ;;Total ram usage:        0 bytes
 24062 ;; Hardware stack levels used:    1
 24063 ;; Hardware stack levels required when called:    8
 24064 ;; This function calls:
 24065 ;;		Nothing
 24066 ;; This function is called by:
 24067 ;;		_ETH_Write8
 24068 ;;		_ETH_Write16
 24069 ;;		_ETH_Write32
 24070 ;;		_ETH_WriteBlock
 24071 ;;		_ETH_WriteStart
 24072 ;;		_ETH_Insert
 24073 ;; This function uses a non-reentrant model
 24074 ;;
 24075                           
 24076                           	psect	text103
 24077  000000                     __ptext103:
 24078                           	opt stack 0
 24079  000000                     _ETH_EdataWrite:
 24080                           	opt stack 0
 24081  000000                     __end_of_ETH_EdataWrite:
 24082                           	opt stack 0
 24083                           tosu	equ	0xFFF
 24084                           tosh	equ	0xFFE
 24085                           tosl	equ	0xFFD
 24086                           pclath	equ	0xFFA
 24087                           tblptru	equ	0xFF8
 24088                           tblptrh	equ	0xFF7
 24089                           tblptrl	equ	0xFF6
 24090                           tablat	equ	0xFF5
 24091                           prodh	equ	0xFF4
 24092                           prodl	equ	0xFF3
 24093                           intcon	equ	0xFF2
 24094                           indf0	equ	0xFEF
 24095                           postinc0	equ	0xFEE
 24096                           fsr0h	equ	0xFEA
 24097                           fsr0l	equ	0xFE9
 24098                           wreg	equ	0xFE8
 24099                           postinc1	equ	0xFE6
 24100                           plusw1	equ	0xFE3
 24101                           fsr1h	equ	0xFE2
 24102                           fsr1l	equ	0xFE1
 24103                           bsr	equ	0xFE0
 24104                           indf2	equ	0xFDF
 24105                           postinc2	equ	0xFDE
 24106                           postdec2	equ	0xFDD
 24107                           plusw2	equ	0xFDB
 24108                           fsr2h	equ	0xFDA
 24109                           fsr2l	equ	0xFD9
 24110                           status	equ	0xFD8
 24111                           
 24112 ;; *************** function _ETH_GetByteCount *****************
 24113 ;; Defined at:
 24114 ;;		line 843 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 24115 ;; Parameters:    Size  Location     Type
 24116 ;;		None
 24117 ;; Auto vars:     Size  Location     Type
 24118 ;;  val             2   24[COMRAM] unsigned int 
 24119 ;; Return value:  Size  Location     Type
 24120 ;;                  2   22[COMRAM] unsigned int 
 24121 ;; Registers used:
 24122 ;;		wreg, status,2, status,0
 24123 ;; Tracked objects:
 24124 ;;		On entry : 0/0
 24125 ;;		On exit  : F/E
 24126 ;;		Unchanged: 0/0
 24127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24128 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24129 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24131 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24132 ;;Total ram usage:        4 bytes
 24133 ;; Hardware stack levels used:    1
 24134 ;; Hardware stack levels required when called:    8
 24135 ;; This function calls:
 24136 ;;		Nothing
 24137 ;; This function is called by:
 24138 ;;		_UDP_Send
 24139 ;; This function uses a non-reentrant model
 24140 ;;
 24141                           
 24142                           	psect	text104
 24143  00631A                     __ptext104:
 24144                           	opt stack 0
 24145  00631A                     _ETH_GetByteCount:
 24146                           	opt stack 15
 24147                           
 24148                           ;j60_driver.c: 845: uint16_t val;
 24149                           ;j60_driver.c: 846: val = EWRPT - ethData.saveWRPT;
 24150                           
 24151                           ;incstack = 0
 24152  00631A  0101               	movlb	1	; () banked
 24153  00631C  51C4               	movf	(_ethData+5)& (0+255),w,b	;volatile
 24154  00631E  010E               	movlb	14	; () banked
 24155  006320  5DE2               	subwf	226,w,b	;volatile
 24156  006322  6E19               	movwf	ETH_GetByteCount@val,c
 24157  006324  0101               	movlb	1	; () banked
 24158  006326  51C5               	movf	(_ethData+6)& (0+255),w,b	;volatile
 24159  006328  010E               	movlb	14	; () banked
 24160  00632A  59E3               	subwfb	227,w,b	;volatile
 24161  00632C  6E1A               	movwf	ETH_GetByteCount@val+1,c
 24162                           
 24163                           ; BSR set to: 14
 24164                           ;j60_driver.c: 847: return val ;
 24165  00632E  C019  F017         	movff	ETH_GetByteCount@val,?_ETH_GetByteCount
 24166  006332  C01A  F018         	movff	ETH_GetByteCount@val+1,?_ETH_GetByteCount+1
 24167                           
 24168                           ; BSR set to: 14
 24169  006336  0012               	return		;funcret
 24170  006338                     __end_of_ETH_GetByteCount:
 24171                           	opt stack 0
 24172                           tosu	equ	0xFFF
 24173                           tosh	equ	0xFFE
 24174                           tosl	equ	0xFFD
 24175                           pclath	equ	0xFFA
 24176                           tblptru	equ	0xFF8
 24177                           tblptrh	equ	0xFF7
 24178                           tblptrl	equ	0xFF6
 24179                           tablat	equ	0xFF5
 24180                           prodh	equ	0xFF4
 24181                           prodl	equ	0xFF3
 24182                           intcon	equ	0xFF2
 24183                           indf0	equ	0xFEF
 24184                           postinc0	equ	0xFEE
 24185                           fsr0h	equ	0xFEA
 24186                           fsr0l	equ	0xFE9
 24187                           wreg	equ	0xFE8
 24188                           postinc1	equ	0xFE6
 24189                           plusw1	equ	0xFE3
 24190                           fsr1h	equ	0xFE2
 24191                           fsr1l	equ	0xFE1
 24192                           bsr	equ	0xFE0
 24193                           indf2	equ	0xFDF
 24194                           postinc2	equ	0xFDE
 24195                           postdec2	equ	0xFDD
 24196                           plusw2	equ	0xFDB
 24197                           fsr2h	equ	0xFDA
 24198                           fsr2l	equ	0xFD9
 24199                           status	equ	0xFD8
 24200                           
 24201 ;; *************** function _DEMO_UDP_ClaimIPCheck *****************
 24202 ;; Defined at:
 24203 ;;		line 46 in file "udp_demo.c"
 24204 ;; Parameters:    Size  Location     Type
 24205 ;;		None
 24206 ;; Auto vars:     Size  Location     Type
 24207 ;;  ret             1   23[COMRAM] unsigned char 
 24208 ;; Return value:  Size  Location     Type
 24209 ;;		None               void
 24210 ;; Registers used:
 24211 ;;		wreg, status,2, status,0
 24212 ;; Tracked objects:
 24213 ;;		On entry : 0/1
 24214 ;;		On exit  : 0/0
 24215 ;;		Unchanged: 0/0
 24216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24218 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24219 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24220 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24221 ;;Total ram usage:        2 bytes
 24222 ;; Hardware stack levels used:    1
 24223 ;; Hardware stack levels required when called:    8
 24224 ;; This function calls:
 24225 ;;		Nothing
 24226 ;; This function is called by:
 24227 ;;		_DEMO_UDP_Recv
 24228 ;;		_DEMO_UDP_Send
 24229 ;; This function uses a non-reentrant model
 24230 ;;
 24231                           
 24232                           	psect	text105
 24233  0063D2                     __ptext105:
 24234                           	opt stack 0
 24235  0063D2                     _DEMO_UDP_ClaimIPCheck:
 24236                           	opt stack 17
 24237                           
 24238                           ;udp_demo.c: 48: bool ret;
 24239                           ;udp_demo.c: 49: if(claim == 1)
 24240                           
 24241                           ; BSR set to: 14
 24242                           ;incstack = 0
 24243  0063D2  0445               	decf	_claim,w,c
 24244  0063D4  E103               	bnz	l8705
 24245                           
 24246                           ;udp_demo.c: 50: {
 24247                           ;udp_demo.c: 51: ret = 1;
 24248  0063D6  0E01               	movlw	1
 24249  0063D8  6E18               	movwf	DEMO_UDP_ClaimIPCheck@ret,c
 24250                           
 24251                           ;udp_demo.c: 52: }
 24252  0063DA  D003               	goto	l8709
 24253  0063DC                     l8705:
 24254                           
 24255                           ;udp_demo.c: 53: else if(claim == 0)
 24256  0063DC  5045               	movf	_claim,w,c
 24257  0063DE  E101               	bnz	l8709
 24258                           
 24259                           ;udp_demo.c: 54: {
 24260                           ;udp_demo.c: 55: ret = 0;
 24261  0063E0  6A18               	clrf	DEMO_UDP_ClaimIPCheck@ret,c
 24262  0063E2                     l8709:
 24263                           
 24264                           ;udp_demo.c: 56: }
 24265                           ;udp_demo.c: 57: return ret;
 24266  0063E2  C018  F017         	movff	DEMO_UDP_ClaimIPCheck@ret,??_DEMO_UDP_ClaimIPCheck
 24267  0063E6  3017               	rrcf	??_DEMO_UDP_ClaimIPCheck,w,c
 24268  0063E8  0012               	return		;funcret
 24269  0063EA                     __end_of_DEMO_UDP_ClaimIPCheck:
 24270                           	opt stack 0
 24271                           tosu	equ	0xFFF
 24272                           tosh	equ	0xFFE
 24273                           tosl	equ	0xFFD
 24274                           pclath	equ	0xFFA
 24275                           tblptru	equ	0xFF8
 24276                           tblptrh	equ	0xFF7
 24277                           tblptrl	equ	0xFF6
 24278                           tablat	equ	0xFF5
 24279                           prodh	equ	0xFF4
 24280                           prodl	equ	0xFF3
 24281                           intcon	equ	0xFF2
 24282                           indf0	equ	0xFEF
 24283                           postinc0	equ	0xFEE
 24284                           fsr0h	equ	0xFEA
 24285                           fsr0l	equ	0xFE9
 24286                           wreg	equ	0xFE8
 24287                           postinc1	equ	0xFE6
 24288                           plusw1	equ	0xFE3
 24289                           fsr1h	equ	0xFE2
 24290                           fsr1l	equ	0xFE1
 24291                           bsr	equ	0xFE0
 24292                           indf2	equ	0xFDF
 24293                           postinc2	equ	0xFDE
 24294                           postdec2	equ	0xFDD
 24295                           plusw2	equ	0xFDB
 24296                           fsr2h	equ	0xFDA
 24297                           fsr2l	equ	0xFD9
 24298                           status	equ	0xFD8
 24299                           
 24300 ;; *************** function _ADC_GetConversion *****************
 24301 ;; Defined at:
 24302 ;;		line 106 in file "../board_support_package/picdem2_net/adc.c"
 24303 ;; Parameters:    Size  Location     Type
 24304 ;;  channel         1    wreg     enum E6609
 24305 ;; Auto vars:     Size  Location     Type
 24306 ;;  channel         1   25[COMRAM] enum E6609
 24307 ;; Return value:  Size  Location     Type
 24308 ;;                  2   22[COMRAM] unsigned int 
 24309 ;; Registers used:
 24310 ;;		wreg, status,2, status,0
 24311 ;; Tracked objects:
 24312 ;;		On entry : 0/0
 24313 ;;		On exit  : 0/0
 24314 ;;		Unchanged: 0/0
 24315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24316 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24317 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24318 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24319 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24320 ;;Total ram usage:        4 bytes
 24321 ;; Hardware stack levels used:    1
 24322 ;; Hardware stack levels required when called:    8
 24323 ;; This function calls:
 24324 ;;		Nothing
 24325 ;; This function is called by:
 24326 ;;		_DEMO_UDP_MeasureTemp
 24327 ;;		_DEMO_UDP_Send
 24328 ;; This function uses a non-reentrant model
 24329 ;;
 24330                           
 24331                           	psect	text106
 24332  00608A                     __ptext106:
 24333                           	opt stack 0
 24334  00608A                     _ADC_GetConversion:
 24335                           	opt stack 16
 24336                           
 24337                           ;incstack = 0
 24338                           ;ADC_GetConversion@channel stored from wreg
 24339  00608A  6E1A               	movwf	ADC_GetConversion@channel,c
 24340                           
 24341                           ;adc.c: 109: ADCON0bits.CHS = channel;
 24342  00608C  C01A  F019         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
 24343  006090  4619               	rlncf	??_ADC_GetConversion,f,c
 24344  006092  4619               	rlncf	??_ADC_GetConversion,f,c
 24345  006094  50C2               	movf	4034,w,c	;volatile
 24346  006096  1819               	xorwf	??_ADC_GetConversion,w,c
 24347  006098  0BC3               	andlw	-61
 24348  00609A  1819               	xorwf	??_ADC_GetConversion,w,c
 24349  00609C  6EC2               	movwf	4034,c	;volatile
 24350                           
 24351                           ;adc.c: 112: ADCON0bits.ADON = 1;
 24352  00609E  80C2               	bsf	4034,0,c	;volatile
 24353                           
 24354                           ;adc.c: 115: _delay((unsigned long)((5)*(41666667UL/4000000.0)));
 24355  0060A0  0E11               	movlw	17
 24356  0060A2                     u16347:
 24357  0060A2  2EE8               	decfsz	wreg,f,c
 24358  0060A4  D7FE               	goto	u16347
 24359  0060A6  F000               	nop	
 24360                           
 24361                           ;adc.c: 118: ADCON0bits.GO_nDONE = 1;
 24362  0060A8  82C2               	bsf	4034,1,c	;volatile
 24363  0060AA                     l33:
 24364  0060AA  B2C2               	btfsc	4034,1,c	;volatile
 24365  0060AC  D7FE               	goto	l33
 24366                           
 24367                           ;adc.c: 123: }
 24368                           ;adc.c: 127: return (ADRES);
 24369  0060AE  CFC3 F017          	movff	4035,?_ADC_GetConversion	;volatile
 24370  0060B2  CFC4 F018          	movff	4036,?_ADC_GetConversion+1	;volatile
 24371  0060B6  0012               	return		;funcret
 24372  0060B8                     __end_of_ADC_GetConversion:
 24373                           	opt stack 0
 24374                           tosu	equ	0xFFF
 24375                           tosh	equ	0xFFE
 24376                           tosl	equ	0xFFD
 24377                           pclath	equ	0xFFA
 24378                           tblptru	equ	0xFF8
 24379                           tblptrh	equ	0xFF7
 24380                           tblptrl	equ	0xFF6
 24381                           tablat	equ	0xFF5
 24382                           prodh	equ	0xFF4
 24383                           prodl	equ	0xFF3
 24384                           intcon	equ	0xFF2
 24385                           indf0	equ	0xFEF
 24386                           postinc0	equ	0xFEE
 24387                           fsr0h	equ	0xFEA
 24388                           fsr0l	equ	0xFE9
 24389                           wreg	equ	0xFE8
 24390                           postinc1	equ	0xFE6
 24391                           plusw1	equ	0xFE3
 24392                           fsr1h	equ	0xFE2
 24393                           fsr1l	equ	0xFE1
 24394                           bsr	equ	0xFE0
 24395                           indf2	equ	0xFDF
 24396                           postinc2	equ	0xFDE
 24397                           postdec2	equ	0xFDD
 24398                           plusw2	equ	0xFDB
 24399                           fsr2h	equ	0xFDA
 24400                           fsr2l	equ	0xFD9
 24401                           status	equ	0xFD8
 24402                           
 24403 ;; *************** function _DEMO_UDP_IPLockTimer *****************
 24404 ;; Defined at:
 24405 ;;		line 68 in file "udp_demo.c"
 24406 ;; Parameters:    Size  Location     Type
 24407 ;;		None
 24408 ;; Auto vars:     Size  Location     Type
 24409 ;;		None
 24410 ;; Return value:  Size  Location     Type
 24411 ;;		None               void
 24412 ;; Registers used:
 24413 ;;		wreg, status,2, cstack
 24414 ;; Tracked objects:
 24415 ;;		On entry : F/1
 24416 ;;		On exit  : 0/0
 24417 ;;		Unchanged: 0/0
 24418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24423 ;;Total ram usage:        0 bytes
 24424 ;; Hardware stack levels used:    1
 24425 ;; Hardware stack levels required when called:    9
 24426 ;; This function calls:
 24427 ;;		_DEMO_UDP_SetClaimIP
 24428 ;; This function is called by:
 24429 ;;		_main
 24430 ;; This function uses a non-reentrant model
 24431 ;;
 24432                           
 24433                           	psect	text107
 24434  00642A                     __ptext107:
 24435                           	opt stack 0
 24436  00642A                     _DEMO_UDP_IPLockTimer:
 24437                           	opt stack 21
 24438                           
 24439                           ; BSR set to: 1
 24440                           ;udp_demo.c: 71: if(!idle_pkt_received)
 24441                           
 24442                           ;incstack = 0
 24443  00642A  5046               	movf	_idle_pkt_received,w,c
 24444  00642C  E103               	bnz	l10203
 24445                           
 24446                           ; BSR set to: 1
 24447                           ;udp_demo.c: 72: {
 24448                           ;udp_demo.c: 73: DEMO_UDP_SetClaimIP(0);
 24449  00642E  0E00               	movlw	0
 24450  006430  EF7F  F032         	goto	_DEMO_UDP_SetClaimIP
 24451  006434                     l10203:
 24452                           
 24453                           ; BSR set to: 1
 24454                           ;udp_demo.c: 75: else
 24455                           ;udp_demo.c: 76: {
 24456                           ;udp_demo.c: 77: DEMO_UDP_SetClaimIP(1);
 24457  006434  0E01               	movlw	1
 24458  006436  EC7F  F032         	call	_DEMO_UDP_SetClaimIP
 24459                           
 24460                           ;udp_demo.c: 78: idle_pkt_received = 0;
 24461  00643A  6A46               	clrf	_idle_pkt_received,c
 24462  00643C  0012               	return		;funcret
 24463  00643E                     __end_of_DEMO_UDP_IPLockTimer:
 24464                           	opt stack 0
 24465                           tosu	equ	0xFFF
 24466                           tosh	equ	0xFFE
 24467                           tosl	equ	0xFFD
 24468                           pclath	equ	0xFFA
 24469                           tblptru	equ	0xFF8
 24470                           tblptrh	equ	0xFF7
 24471                           tblptrl	equ	0xFF6
 24472                           tablat	equ	0xFF5
 24473                           prodh	equ	0xFF4
 24474                           prodl	equ	0xFF3
 24475                           intcon	equ	0xFF2
 24476                           indf0	equ	0xFEF
 24477                           postinc0	equ	0xFEE
 24478                           fsr0h	equ	0xFEA
 24479                           fsr0l	equ	0xFE9
 24480                           wreg	equ	0xFE8
 24481                           postinc1	equ	0xFE6
 24482                           plusw1	equ	0xFE3
 24483                           fsr1h	equ	0xFE2
 24484                           fsr1l	equ	0xFE1
 24485                           bsr	equ	0xFE0
 24486                           indf2	equ	0xFDF
 24487                           postinc2	equ	0xFDE
 24488                           postdec2	equ	0xFDD
 24489                           plusw2	equ	0xFDB
 24490                           fsr2h	equ	0xFDA
 24491                           fsr2l	equ	0xFD9
 24492                           status	equ	0xFD8
 24493                           
 24494 ;; *************** function _DEMO_UDP_SetClaimIP *****************
 24495 ;; Defined at:
 24496 ;;		line 61 in file "udp_demo.c"
 24497 ;; Parameters:    Size  Location     Type
 24498 ;;  claim_ip        1    wreg     unsigned char 
 24499 ;; Auto vars:     Size  Location     Type
 24500 ;;  claim_ip        1   22[COMRAM] unsigned char 
 24501 ;; Return value:  Size  Location     Type
 24502 ;;		None               void
 24503 ;; Registers used:
 24504 ;;		wreg
 24505 ;; Tracked objects:
 24506 ;;		On entry : 0/1
 24507 ;;		On exit  : 0/0
 24508 ;;		Unchanged: 0/0
 24509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24511 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24513 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24514 ;;Total ram usage:        1 bytes
 24515 ;; Hardware stack levels used:    1
 24516 ;; Hardware stack levels required when called:    8
 24517 ;; This function calls:
 24518 ;;		Nothing
 24519 ;; This function is called by:
 24520 ;;		_DEMO_UDP_IPLockTimer
 24521 ;;		_DEMO_UDP_Recv
 24522 ;; This function uses a non-reentrant model
 24523 ;;
 24524                           
 24525                           	psect	text108
 24526  0064FE                     __ptext108:
 24527                           	opt stack 0
 24528  0064FE                     _DEMO_UDP_SetClaimIP:
 24529                           	opt stack 17
 24530                           
 24531                           ;incstack = 0
 24532                           ;DEMO_UDP_SetClaimIP@claim_ip stored from wreg
 24533  0064FE  6E17               	movwf	DEMO_UDP_SetClaimIP@claim_ip,c
 24534                           
 24535                           ;udp_demo.c: 63: claim = claim_ip;
 24536  006500  C017  F045         	movff	DEMO_UDP_SetClaimIP@claim_ip,_claim
 24537  006504  0012               	return		;funcret
 24538  006506                     __end_of_DEMO_UDP_SetClaimIP:
 24539                           	opt stack 0
 24540                           tosu	equ	0xFFF
 24541                           tosh	equ	0xFFE
 24542                           tosl	equ	0xFFD
 24543                           pclath	equ	0xFFA
 24544                           tblptru	equ	0xFF8
 24545                           tblptrh	equ	0xFF7
 24546                           tblptrl	equ	0xFF6
 24547                           tablat	equ	0xFF5
 24548                           prodh	equ	0xFF4
 24549                           prodl	equ	0xFF3
 24550                           intcon	equ	0xFF2
 24551                           indf0	equ	0xFEF
 24552                           postinc0	equ	0xFEE
 24553                           fsr0h	equ	0xFEA
 24554                           fsr0l	equ	0xFE9
 24555                           wreg	equ	0xFE8
 24556                           postinc1	equ	0xFE6
 24557                           plusw1	equ	0xFE3
 24558                           fsr1h	equ	0xFE2
 24559                           fsr1l	equ	0xFE1
 24560                           bsr	equ	0xFE0
 24561                           indf2	equ	0xFDF
 24562                           postinc2	equ	0xFDE
 24563                           postdec2	equ	0xFDD
 24564                           plusw2	equ	0xFDB
 24565                           fsr2h	equ	0xFDA
 24566                           fsr2l	equ	0xFD9
 24567                           status	equ	0xFD8
 24568                           
 24569 ;; *************** function _low_isr *****************
 24570 ;; Defined at:
 24571 ;;		line 61 in file "main.c"
 24572 ;; Parameters:    Size  Location     Type
 24573 ;;		None
 24574 ;; Auto vars:     Size  Location     Type
 24575 ;;		None
 24576 ;; Return value:  Size  Location     Type
 24577 ;;		None               void
 24578 ;; Registers used:
 24579 ;;		wreg, status,2, status,0, cstack
 24580 ;; Tracked objects:
 24581 ;;		On entry : 0/0
 24582 ;;		On exit  : 0/0
 24583 ;;		Unchanged: 0/0
 24584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24587 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24588 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24589 ;;Total ram usage:        3 bytes
 24590 ;; Hardware stack levels used:    1
 24591 ;; Hardware stack levels required when called:    7
 24592 ;; This function calls:
 24593 ;;		i1_ETH_EventHandler
 24594 ;; This function is called by:
 24595 ;;		Interrupt level 1
 24596 ;; This function uses a non-reentrant model
 24597 ;;
 24598                           
 24599                           	psect	intcodelo
 24600  000018                     __pintcodelo:
 24601                           	opt stack 0
 24602  000018                     _low_isr:
 24603                           	opt stack 12
 24604                           
 24605                           ;incstack = 0
 24606  000018  8049               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 24607  00001A  CFD8 F014          	movff	status,??_low_isr
 24608  00001E  CFE8 F015          	movff	wreg,??_low_isr+1
 24609  000022  CFE0 F016          	movff	bsr,??_low_isr+2
 24610                           
 24611                           ;main.c: 64: ETH_EventHandler();
 24612  000026  ECCC  F02F         	call	i1_ETH_EventHandler	;wreg free
 24613  00002A  C016  FFE0         	movff	??_low_isr+2,bsr
 24614  00002E  C015  FFE8         	movff	??_low_isr+1,wreg
 24615  000032  C014  FFD8         	movff	??_low_isr,status
 24616  000036  9049               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 24617  000038  0010               	retfie	
 24618  00003A                     __end_of_low_isr:
 24619                           	opt stack 0
 24620                           tosu	equ	0xFFF
 24621                           tosh	equ	0xFFE
 24622                           tosl	equ	0xFFD
 24623                           pclath	equ	0xFFA
 24624                           tblptru	equ	0xFF8
 24625                           tblptrh	equ	0xFF7
 24626                           tblptrl	equ	0xFF6
 24627                           tablat	equ	0xFF5
 24628                           prodh	equ	0xFF4
 24629                           prodl	equ	0xFF3
 24630                           intcon	equ	0xFF2
 24631                           indf0	equ	0xFEF
 24632                           postinc0	equ	0xFEE
 24633                           fsr0h	equ	0xFEA
 24634                           fsr0l	equ	0xFE9
 24635                           wreg	equ	0xFE8
 24636                           postinc1	equ	0xFE6
 24637                           plusw1	equ	0xFE3
 24638                           fsr1h	equ	0xFE2
 24639                           fsr1l	equ	0xFE1
 24640                           bsr	equ	0xFE0
 24641                           indf2	equ	0xFDF
 24642                           postinc2	equ	0xFDE
 24643                           postdec2	equ	0xFDD
 24644                           plusw2	equ	0xFDB
 24645                           fsr2h	equ	0xFDA
 24646                           fsr2l	equ	0xFD9
 24647                           status	equ	0xFD8
 24648                           
 24649 ;; *************** function i1_ETH_EventHandler *****************
 24650 ;; Defined at:
 24651 ;;		line 215 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 24652 ;; Parameters:    Size  Location     Type
 24653 ;;		None
 24654 ;; Auto vars:     Size  Location     Type
 24655 ;;		None
 24656 ;; Return value:  Size  Location     Type
 24657 ;;		None               void
 24658 ;; Registers used:
 24659 ;;		wreg, status,2, status,0, cstack
 24660 ;; Tracked objects:
 24661 ;;		On entry : 0/0
 24662 ;;		On exit  : 0/0
 24663 ;;		Unchanged: 0/0
 24664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24669 ;;Total ram usage:        0 bytes
 24670 ;; Hardware stack levels used:    1
 24671 ;; Hardware stack levels required when called:    6
 24672 ;; This function calls:
 24673 ;;		i1_ETH_CheckLinkUp
 24674 ;;		i1_PHY_Read
 24675 ;; This function is called by:
 24676 ;;		_low_isr
 24677 ;; This function uses a non-reentrant model
 24678 ;;
 24679                           
 24680                           	psect	text110
 24681  005F98                     __ptext110:
 24682                           	opt stack 0
 24683  005F98                     i1_ETH_EventHandler:
 24684                           	opt stack 0
 24685                           
 24686                           ;j60_driver.c: 218: PIR2bits.ETHIF = 0;
 24687                           
 24688                           ;incstack = 0
 24689                           
 24690                           ;j60_driver.c: 219: if(EPKTCNT >= 3)
 24691  005F98  EC86  F02E         	call	PL785	;call to abstracted procedure
 24692  005F9C  65D9               	cpfsgt	217,b	;volatile
 24693  005F9E  D009               	goto	i1l484
 24694                           
 24695                           ; BSR set to: 14
 24696                           ;j60_driver.c: 222: if (EIRbits.LINKIF)
 24697  005FA0  A860               	btfss	3936,4,c	;volatile
 24698  005FA2  D007               	goto	i1l484
 24699                           
 24700                           ; BSR set to: 14
 24701                           ;j60_driver.c: 223: {
 24702                           ;j60_driver.c: 224: PHY_Read(PHIR);
 24703  005FA4  0E13               	movlw	19
 24704  005FA6  EC32  F02A         	call	i1_PHY_Read
 24705                           
 24706                           ; BSR set to: 14
 24707                           ;j60_driver.c: 226: ethData.linkChange = 1;
 24708                           
 24709                           ; BSR set to: 1
 24710                           ;j60_driver.c: 227: ethData.up = 0;
 24711  005FAA  EC7E  F02E         	call	PL775	;call to abstracted procedure
 24712                           
 24713                           ;j60_driver.c: 230: if(ETH_CheckLinkUp())
 24714  005FAE  EC5C  F030         	call	i1_ETH_CheckLinkUp	;wreg free
 24715  005FB2                     i1l484:
 24716                           
 24717                           ;j60_driver.c: 233: }
 24718                           ;j60_driver.c: 234: }
 24719                           ;j60_driver.c: 236: if(EIRbits.RXERIF)
 24720  005FB2  B060               	btfsc	3936,0,c	;volatile
 24721                           
 24722                           ;j60_driver.c: 237: {
 24723                           ;j60_driver.c: 239: EIRbits.RXERIF = 0;
 24724  005FB4  9060               	bcf	3936,0,c	;volatile
 24725                           
 24726                           ;j60_driver.c: 240: }
 24727                           ;j60_driver.c: 242: if (EIRbits.TXERIF)
 24728  005FB6  B260               	btfsc	3936,1,c	;volatile
 24729                           
 24730                           ;j60_driver.c: 243: {
 24731                           ;j60_driver.c: 245: EIRbits.TXERIF = 0;
 24732  005FB8  9260               	bcf	3936,1,c	;volatile
 24733                           
 24734                           ;j60_driver.c: 246: }
 24735                           ;j60_driver.c: 248: if(EIRbits.TXIF)
 24736  005FBA  B660               	btfsc	3936,3,c	;volatile
 24737                           
 24738                           ;j60_driver.c: 249: {
 24739                           ;j60_driver.c: 251: EIRbits.TXIF = 0;
 24740                           
 24741                           ;j60_driver.c: 252: ethData.bufferBusy = 0;
 24742  005FBC  EC82  F02E         	call	PL783	;call to abstracted procedure
 24743  005FC0                     i1l489:
 24744                           
 24745                           ;j60_driver.c: 253: }
 24746                           ;j60_driver.c: 255: if (EIRbits.PKTIF)
 24747  005FC0  AC60               	btfss	3936,6,c	;volatile
 24748  005FC2  0012               	return	
 24749                           
 24750                           ;j60_driver.c: 256: {
 24751                           ;j60_driver.c: 257: if(ethData.pktReady == 0)
 24752  005FC4  0101               	movlb	1	; () banked
 24753  005FC6  B3BF               	btfsc	_ethData& (0+255),1,b	;volatile
 24754  005FC8  0012               	return	
 24755                           
 24756                           ; BSR set to: 1
 24757                           ;j60_driver.c: 258: {
 24758                           ;j60_driver.c: 260: ethData.pktReady = 1;
 24759                           
 24760                           ;j60_driver.c: 261: EIEbits.PKTIE = 0;
 24761  005FCA  EF7A  F02E         	goto	PL763	;call to abstracted procedure
 24762  005FCE                     __end_ofi1_ETH_EventHandler:
 24763                           	opt stack 0
 24764                           tosu	equ	0xFFF
 24765                           tosh	equ	0xFFE
 24766                           tosl	equ	0xFFD
 24767                           pclath	equ	0xFFA
 24768                           tblptru	equ	0xFF8
 24769                           tblptrh	equ	0xFF7
 24770                           tblptrl	equ	0xFF6
 24771                           tablat	equ	0xFF5
 24772                           prodh	equ	0xFF4
 24773                           prodl	equ	0xFF3
 24774                           intcon	equ	0xFF2
 24775                           indf0	equ	0xFEF
 24776                           postinc0	equ	0xFEE
 24777                           fsr0h	equ	0xFEA
 24778                           fsr0l	equ	0xFE9
 24779                           wreg	equ	0xFE8
 24780                           postinc1	equ	0xFE6
 24781                           plusw1	equ	0xFE3
 24782                           fsr1h	equ	0xFE2
 24783                           fsr1l	equ	0xFE1
 24784                           bsr	equ	0xFE0
 24785                           indf2	equ	0xFDF
 24786                           postinc2	equ	0xFDE
 24787                           postdec2	equ	0xFDD
 24788                           plusw2	equ	0xFDB
 24789                           fsr2h	equ	0xFDA
 24790                           fsr2l	equ	0xFD9
 24791                           status	equ	0xFD8
 24792                           
 24793 ;; *************** function i1_ETH_CheckLinkUp *****************
 24794 ;; Defined at:
 24795 ;;		line 198 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 24796 ;; Parameters:    Size  Location     Type
 24797 ;;		None
 24798 ;; Auto vars:     Size  Location     Type
 24799 ;;  ETH_CheckLin    4   15[COMRAM] unsigned long 
 24800 ;; Return value:  Size  Location     Type
 24801 ;;                  1    wreg      unsigned char 
 24802 ;; Registers used:
 24803 ;;		wreg, status,2, status,0, cstack
 24804 ;; Tracked objects:
 24805 ;;		On entry : F/1
 24806 ;;		On exit  : 0/0
 24807 ;;		Unchanged: 0/0
 24808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24810 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24812 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24813 ;;Total ram usage:        4 bytes
 24814 ;; Hardware stack levels used:    1
 24815 ;; Hardware stack levels required when called:    5
 24816 ;; This function calls:
 24817 ;;		i1_ETH_readLinkStatus
 24818 ;; This function is called by:
 24819 ;;		i1_ETH_EventHandler
 24820 ;; This function uses a non-reentrant model
 24821 ;;
 24822                           
 24823                           	psect	text111
 24824  0060B8                     __ptext111:
 24825                           	opt stack 0
 24826  0060B8                     i1_ETH_CheckLinkUp:
 24827                           	opt stack 0
 24828  0060B8                     i53L__ptext112:
 24829                           	opt stack 0
 24830  0060B8                     i53Li1_ETH_readLinkStatus:
 24831                           	opt stack 0
 24832  0060B8                     i53Li1l7211:
 24833                           	opt stack 12
 24834                           
 24835                           ; BSR set to: 1
 24836                           ;j60_driver.c: 195: return (PHY_Read(PHSTAT2));
 24837  0060B8  0E11               	movlw	17
 24838  0060BA  EC32  F02A         	call	i1_PHY_Read
 24839  0060BE  C003  F00C         	movff	?i1_PHY_Read,?i1_ETH_readLinkStatus
 24840  0060C2  C004  F00D         	movff	?i1_PHY_Read+1,?i1_ETH_readLinkStatus+1
 24841  0060C6  C005  F00E         	movff	?i1_PHY_Read+2,?i1_ETH_readLinkStatus+2
 24842  0060CA  C006  F00F         	movff	?i1_PHY_Read+3,?i1_ETH_readLinkStatus+3
 24843  0060CE                     i53Li1l476:
 24844                           	opt stack 12
 24845  0060CE  C00C  F010         	movff	?i1_ETH_readLinkStatus,i1ETH_CheckLinkUp@value
 24846  0060D2  C00D  F011         	movff	?i1_ETH_readLinkStatus+1,i1ETH_CheckLinkUp@value+1
 24847  0060D6  C00E  F012         	movff	?i1_ETH_readLinkStatus+2,i1ETH_CheckLinkUp@value+2
 24848  0060DA  C00F  F013         	movff	?i1_ETH_readLinkStatus+3,i1ETH_CheckLinkUp@value+3
 24849                           
 24850                           ; BSR set to: 14
 24851                           ;j60_driver.c: 203: if(value & 0x0400)
 24852  0060DE  A411               	btfss	i1ETH_CheckLinkUp@value+1,2,c
 24853  0060E0  0C00               	retlw	0
 24854                           
 24855                           ; BSR set to: 14
 24856                           ;j60_driver.c: 204: {
 24857                           ;j60_driver.c: 205: ethData.up = 1;
 24858                           
 24859                           ; BSR set to: 1
 24860                           ;j60_driver.c: 206: return 1;
 24861  0060E2  EFFD  F02F         	goto	PL781	;call to abstracted procedure
 24862  0060E6                     __end_ofi1_ETH_CheckLinkUp:
 24863                           	opt stack 0
 24864                           tosu	equ	0xFFF
 24865                           tosh	equ	0xFFE
 24866                           tosl	equ	0xFFD
 24867                           pclath	equ	0xFFA
 24868                           tblptru	equ	0xFF8
 24869                           tblptrh	equ	0xFF7
 24870                           tblptrl	equ	0xFF6
 24871                           tablat	equ	0xFF5
 24872                           prodh	equ	0xFF4
 24873                           prodl	equ	0xFF3
 24874                           intcon	equ	0xFF2
 24875                           indf0	equ	0xFEF
 24876                           postinc0	equ	0xFEE
 24877                           fsr0h	equ	0xFEA
 24878                           fsr0l	equ	0xFE9
 24879                           wreg	equ	0xFE8
 24880                           postinc1	equ	0xFE6
 24881                           plusw1	equ	0xFE3
 24882                           fsr1h	equ	0xFE2
 24883                           fsr1l	equ	0xFE1
 24884                           bsr	equ	0xFE0
 24885                           indf2	equ	0xFDF
 24886                           postinc2	equ	0xFDE
 24887                           postdec2	equ	0xFDD
 24888                           plusw2	equ	0xFDB
 24889                           fsr2h	equ	0xFDA
 24890                           fsr2l	equ	0xFD9
 24891                           status	equ	0xFD8
 24892                           
 24893 ;; *************** function i1_ETH_readLinkStatus *****************
 24894 ;; Defined at:
 24895 ;;		line 193 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 24896 ;; Parameters:    Size  Location     Type
 24897 ;;		None
 24898 ;; Auto vars:     Size  Location     Type
 24899 ;;		None
 24900 ;; Return value:  Size  Location     Type
 24901 ;;                  4   11[COMRAM] unsigned long 
 24902 ;; Registers used:
 24903 ;;		wreg, status,2, status,0, cstack
 24904 ;; Tracked objects:
 24905 ;;		On entry : F/1
 24906 ;;		On exit  : F/E
 24907 ;;		Unchanged: 0/0
 24908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24909 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24912 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24913 ;;Total ram usage:        4 bytes
 24914 ;; Hardware stack levels used:    1
 24915 ;; Hardware stack levels required when called:    4
 24916 ;; This function calls:
 24917 ;;		i1_PHY_Read
 24918 ;; This function is called by:
 24919 ;;		i1_ETH_CheckLinkUp
 24920 ;; This function uses a non-reentrant model
 24921 ;;
 24922                           
 24923                           	psect	text112
 24924  000000                     __ptext112:
 24925                           	opt stack 0
 24926  000000                     __end_ofi1_ETH_readLinkStatus:
 24927                           	opt stack 0
 24928                           tosu	equ	0xFFF
 24929                           tosh	equ	0xFFE
 24930                           tosl	equ	0xFFD
 24931                           pclath	equ	0xFFA
 24932                           tblptru	equ	0xFF8
 24933                           tblptrh	equ	0xFF7
 24934                           tblptrl	equ	0xFF6
 24935                           tablat	equ	0xFF5
 24936                           prodh	equ	0xFF4
 24937                           prodl	equ	0xFF3
 24938                           intcon	equ	0xFF2
 24939                           indf0	equ	0xFEF
 24940                           postinc0	equ	0xFEE
 24941                           fsr0h	equ	0xFEA
 24942                           fsr0l	equ	0xFE9
 24943                           wreg	equ	0xFE8
 24944                           postinc1	equ	0xFE6
 24945                           plusw1	equ	0xFE3
 24946                           fsr1h	equ	0xFE2
 24947                           fsr1l	equ	0xFE1
 24948                           bsr	equ	0xFE0
 24949                           indf2	equ	0xFDF
 24950                           postinc2	equ	0xFDE
 24951                           postdec2	equ	0xFDD
 24952                           plusw2	equ	0xFDB
 24953                           fsr2h	equ	0xFDA
 24954                           fsr2l	equ	0xFD9
 24955                           status	equ	0xFD8
 24956                           
 24957 ;; *************** function i1_PHY_Read *****************
 24958 ;; Defined at:
 24959 ;;		line 350 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 24960 ;; Parameters:    Size  Location     Type
 24961 ;;  reg             1    wreg     enum E7098
 24962 ;; Auto vars:     Size  Location     Type
 24963 ;;  reg             1    6[COMRAM] enum E7098
 24964 ;;  PHY_Read        4    7[COMRAM] long 
 24965 ;; Return value:  Size  Location     Type
 24966 ;;                  4    2[COMRAM] long 
 24967 ;; Registers used:
 24968 ;;		wreg, status,2, status,0, cstack
 24969 ;; Tracked objects:
 24970 ;;		On entry : 0/E
 24971 ;;		On exit  : F/E
 24972 ;;		Unchanged: 0/0
 24973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24974 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24975 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24977 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24978 ;;Total ram usage:        9 bytes
 24979 ;; Hardware stack levels used:    1
 24980 ;; Hardware stack levels required when called:    3
 24981 ;; This function calls:
 24982 ;;		i1_PHY_WaitForBusy
 24983 ;; This function is called by:
 24984 ;;		i1_ETH_readLinkStatus
 24985 ;;		i1_ETH_EventHandler
 24986 ;; This function uses a non-reentrant model
 24987 ;;
 24988                           
 24989                           	psect	text113
 24990  005464                     __ptext113:
 24991                           	opt stack 0
 24992  005464                     i1_PHY_Read:
 24993                           	opt stack 14
 24994                           
 24995                           ; BSR set to: 14
 24996                           ;incstack = 0
 24997                           ;i1PHY_Read@reg stored from wreg
 24998  005464  6E07               	movwf	i1PHY_Read@reg,c
 24999  005466                     i54L__ptext114:
 25000                           	opt stack 0
 25001  005466                     i54Li1_PHY_WaitForBusy:
 25002                           	opt stack 0
 25003  005466                     i54Li1l6805:
 25004                           	opt stack 14
 25005                           
 25006                           ;j60_driver.c: 300: phyError_t ret = NOERROR;
 25007  005466  6A01               	clrf	i1PHY_WaitForBusy@ret,c
 25008                           
 25009                           ;j60_driver.c: 301: uint8_t timeout;
 25010                           ;j60_driver.c: 303: for(timeout = 0; timeout < 10;timeout++) __nop();
 25011  005468  6A02               	clrf	i1PHY_WaitForBusy@timeout,c
 25012  00546A                     i54Li1l504:
 25013                           	opt stack 14
 25014  00546A  F000               	nop	
 25015  00546C                     i54Li1l6811:
 25016                           	opt stack 14
 25017  00546C  2A02               	incf	i1PHY_WaitForBusy@timeout,f,c
 25018  00546E                     i54Li1l6813:
 25019                           	opt stack 14
 25020  00546E  0E09               	movlw	9
 25021  005470  6402               	cpfsgt	i1PHY_WaitForBusy@timeout,c
 25022  005472  D7FB               	goto	i54Li1l504
 25023  005474  D001               	goto	i54Li1u957_20
 25024  005476                     i54Li1u957_21:
 25025                           	opt stack 0
 25026  005476  D7F9               	goto	i54Li1l504
 25027  005478                     i54Li1u957_20:
 25028                           	opt stack 0
 25029  005478                     i54Li1l6815:
 25030                           	opt stack 14
 25031                           
 25032                           ;j60_driver.c: 304: timeout = 90;
 25033  005478  0E5A               	movlw	90
 25034  00547A  6E02               	movwf	i1PHY_WaitForBusy@timeout,c
 25035  00547C  D001               	goto	i54Li1l506
 25036  00547E                     i54Li1l507:
 25037                           	opt stack 14
 25038                           
 25039                           ; BSR set to: 14
 25040  00547E  F000               	nop	
 25041  005480                     i54Li1l506:
 25042                           	opt stack 14
 25043  005480  010E               	movlb	14	; () banked
 25044  005482  A18A               	btfss	138,0,b	;volatile
 25045  005484                     i54Li1u958_21:
 25046                           	opt stack 0
 25047  005484  D002               	goto	i54Li1l6819
 25048  005486                     i54Li1u958_20:
 25049                           	opt stack 0
 25050  005486                     i54Li1l6817:
 25051                           	opt stack 14
 25052                           
 25053                           ; BSR set to: 14
 25054  005486  2E02               	decfsz	i1PHY_WaitForBusy@timeout,f,c
 25055  005488  D7FA               	goto	i54Li1l507
 25056  00548A                     i54Li1l6819:
 25057                           	opt stack 14
 25058                           
 25059                           ; BSR set to: 14
 25060                           ;j60_driver.c: 307: if(timeout == 0) ret = BUSY_TIMEOUT;
 25061  00548A  5002               	movf	i1PHY_WaitForBusy@timeout,w,c
 25062  00548C  A4D8               	btfss	status,2,c
 25063  00548E                     i54Li1u959_21:
 25064                           	opt stack 0
 25065  00548E  D001               	goto	i54Li1l6823
 25066  005490                     i54Li1u959_20:
 25067                           	opt stack 0
 25068  005490                     i54Li1l6821:
 25069                           	opt stack 14
 25070                           
 25071                           ; BSR set to: 14
 25072  005490  6801               	setf	i1PHY_WaitForBusy@ret,c
 25073  005492                     i54Li1l6823:
 25074                           	opt stack 14
 25075                           
 25076                           ; BSR set to: 14
 25077                           ;j60_driver.c: 308: return ret;
 25078  005492  5001               	movf	i1PHY_WaitForBusy@ret,w,c
 25079  005494                     i54Li1l512:
 25080                           	opt stack 14
 25081  005494  0900               	iorlw	0
 25082  005496  E12C               	bnz	i1l518
 25083                           
 25084                           ; BSR set to: 14
 25085                           ;j60_driver.c: 354: {
 25086                           ;j60_driver.c: 355: MIREGADR = reg;
 25087  005498  C007  FEB4         	movff	i1PHY_Read@reg,3764	;volatile
 25088                           
 25089                           ;j60_driver.c: 356: MICMD = 0;
 25090  00549C  6BB2               	clrf	178,b	;volatile
 25091                           
 25092                           ;j60_driver.c: 357: MICMDbits.MIIRD = 1;
 25093  00549E  81B2               	bsf	178,0,b	;volatile
 25094                           
 25095                           ;j60_driver.c: 358: __nop(); __nop();
 25096  0054A0  F000               	nop	
 25097  0054A2  F000               	nop	
 25098  0054A4                     i55L__ptext114:
 25099                           	opt stack 0
 25100  0054A4                     i55Li1_PHY_WaitForBusy:
 25101                           	opt stack 0
 25102  0054A4                     i55Li1l6805:
 25103                           	opt stack 14
 25104                           
 25105                           ;j60_driver.c: 300: phyError_t ret = NOERROR;
 25106  0054A4  6A01               	clrf	i1PHY_WaitForBusy@ret,c
 25107                           
 25108                           ;j60_driver.c: 301: uint8_t timeout;
 25109                           ;j60_driver.c: 303: for(timeout = 0; timeout < 10;timeout++) __nop();
 25110  0054A6  6A02               	clrf	i1PHY_WaitForBusy@timeout,c
 25111  0054A8                     i55Li1l504:
 25112                           	opt stack 14
 25113  0054A8  F000               	nop	
 25114  0054AA                     i55Li1l6811:
 25115                           	opt stack 14
 25116  0054AA  2A02               	incf	i1PHY_WaitForBusy@timeout,f,c
 25117  0054AC                     i55Li1l6813:
 25118                           	opt stack 14
 25119  0054AC  0E09               	movlw	9
 25120  0054AE  6402               	cpfsgt	i1PHY_WaitForBusy@timeout,c
 25121  0054B0  D7FB               	goto	i55Li1l504
 25122  0054B2  D001               	goto	i55Li1u957_20
 25123  0054B4                     i55Li1u957_21:
 25124                           	opt stack 0
 25125  0054B4  D7F9               	goto	i55Li1l504
 25126  0054B6                     i55Li1u957_20:
 25127                           	opt stack 0
 25128  0054B6                     i55Li1l6815:
 25129                           	opt stack 14
 25130                           
 25131                           ;j60_driver.c: 304: timeout = 90;
 25132  0054B6  0E5A               	movlw	90
 25133  0054B8  6E02               	movwf	i1PHY_WaitForBusy@timeout,c
 25134  0054BA  D001               	goto	i55Li1l506
 25135  0054BC                     i55Li1l507:
 25136                           	opt stack 14
 25137                           
 25138                           ; BSR set to: 14
 25139  0054BC  F000               	nop	
 25140  0054BE                     i55Li1l506:
 25141                           	opt stack 14
 25142  0054BE  010E               	movlb	14	; () banked
 25143  0054C0  A18A               	btfss	138,0,b	;volatile
 25144  0054C2                     i55Li1u958_21:
 25145                           	opt stack 0
 25146  0054C2  D002               	goto	i55Li1l6819
 25147  0054C4                     i55Li1u958_20:
 25148                           	opt stack 0
 25149  0054C4                     i55Li1l6817:
 25150                           	opt stack 14
 25151                           
 25152                           ; BSR set to: 14
 25153  0054C4  2E02               	decfsz	i1PHY_WaitForBusy@timeout,f,c
 25154  0054C6  D7FA               	goto	i55Li1l507
 25155  0054C8                     i55Li1l6819:
 25156                           	opt stack 14
 25157                           
 25158                           ; BSR set to: 14
 25159                           ;j60_driver.c: 307: if(timeout == 0) ret = BUSY_TIMEOUT;
 25160  0054C8  5002               	movf	i1PHY_WaitForBusy@timeout,w,c
 25161  0054CA  A4D8               	btfss	status,2,c
 25162  0054CC                     i55Li1u959_21:
 25163                           	opt stack 0
 25164  0054CC  D001               	goto	i55Li1l6823
 25165  0054CE                     i55Li1u959_20:
 25166                           	opt stack 0
 25167  0054CE                     i55Li1l6821:
 25168                           	opt stack 14
 25169                           
 25170                           ; BSR set to: 14
 25171  0054CE  6801               	setf	i1PHY_WaitForBusy@ret,c
 25172  0054D0                     i55Li1l6823:
 25173                           	opt stack 14
 25174                           
 25175                           ; BSR set to: 14
 25176                           ;j60_driver.c: 308: return ret;
 25177  0054D0  5001               	movf	i1PHY_WaitForBusy@ret,w,c
 25178  0054D2                     i55Li1l512:
 25179                           	opt stack 14
 25180  0054D2  0AFF               	xorlw	-1
 25181  0054D4  E105               	bnz	i1l519
 25182                           
 25183                           ; BSR set to: 14
 25184                           ;j60_driver.c: 360: {
 25185                           ;j60_driver.c: 361: ret = READ_FAIL;
 25186  0054D6  0EFD               	movlw	253
 25187  0054D8  6E08               	movwf	i1PHY_Read@ret,c
 25188  0054DA  0EFF               	movlw	255
 25189  0054DC  D814               	call	PL789	;call to abstracted procedure
 25190                           
 25191                           ;j60_driver.c: 362: }
 25192  0054DE  D00A               	goto	i1l521
 25193  0054E0                     i1l519:
 25194                           
 25195                           ; BSR set to: 14
 25196                           ;j60_driver.c: 363: else
 25197                           ;j60_driver.c: 364: {
 25198                           ;j60_driver.c: 365: MICMDbits.MIIRD = 0;
 25199  0054E0  91B2               	bcf	178,0,b	;volatile
 25200                           
 25201                           ; BSR set to: 14
 25202                           ;j60_driver.c: 366: ret = MIRD;
 25203  0054E2  CEB8 F008          	movff	3768,i1PHY_Read@ret	;volatile
 25204  0054E6  CEB9 F009          	movff	3769,i1PHY_Read@ret+1	;volatile
 25205  0054EA  6A0A               	clrf	i1PHY_Read@ret+2,c
 25206  0054EC  6A0B               	clrf	i1PHY_Read@ret+3,c
 25207  0054EE  D002               	goto	i1l521
 25208  0054F0                     i1l518:
 25209                           
 25210                           ; BSR set to: 14
 25211                           ;j60_driver.c: 369: else
 25212                           ;j60_driver.c: 370: {
 25213                           ;j60_driver.c: 371: ret = BUSY_TIMEOUT;
 25214  0054F0  6808               	setf	i1PHY_Read@ret,c
 25215  0054F2  D809               	call	PL789	;call to abstracted procedure
 25216  0054F4                     i1l521:
 25217                           
 25218                           ; BSR set to: 14
 25219                           ;j60_driver.c: 372: }
 25220                           ;j60_driver.c: 373: return ret;
 25221  0054F4  C008  F003         	movff	i1PHY_Read@ret,?i1_PHY_Read
 25222  0054F8  C009  F004         	movff	i1PHY_Read@ret+1,?i1_PHY_Read+1
 25223  0054FC  C00A  F005         	movff	i1PHY_Read@ret+2,?i1_PHY_Read+2
 25224  005500  C00B  F006         	movff	i1PHY_Read@ret+3,?i1_PHY_Read+3
 25225                           
 25226                           ; BSR set to: 14
 25227  005504  0012               	return		;funcret
 25228  005506                     __end_ofi1_PHY_Read:
 25229                           	opt stack 0
 25230  005506                     PL789:
 25231                           	opt stack 14
 25232  005506  6809               	setf	i1PHY_Read@ret+1,c
 25233  005508  680A               	setf	i1PHY_Read@ret+2,c
 25234  00550A  680B               	setf	i1PHY_Read@ret+3,c
 25235  00550C  0012               	return	
 25236  00550E                     __end_ofPL789:
 25237                           	opt stack 0
 25238                           tosu	equ	0xFFF
 25239                           tosh	equ	0xFFE
 25240                           tosl	equ	0xFFD
 25241                           pclath	equ	0xFFA
 25242                           tblptru	equ	0xFF8
 25243                           tblptrh	equ	0xFF7
 25244                           tblptrl	equ	0xFF6
 25245                           tablat	equ	0xFF5
 25246                           prodh	equ	0xFF4
 25247                           prodl	equ	0xFF3
 25248                           intcon	equ	0xFF2
 25249                           indf0	equ	0xFEF
 25250                           postinc0	equ	0xFEE
 25251                           fsr0h	equ	0xFEA
 25252                           fsr0l	equ	0xFE9
 25253                           wreg	equ	0xFE8
 25254                           postinc1	equ	0xFE6
 25255                           plusw1	equ	0xFE3
 25256                           fsr1h	equ	0xFE2
 25257                           fsr1l	equ	0xFE1
 25258                           bsr	equ	0xFE0
 25259                           indf2	equ	0xFDF
 25260                           postinc2	equ	0xFDE
 25261                           postdec2	equ	0xFDD
 25262                           plusw2	equ	0xFDB
 25263                           fsr2h	equ	0xFDA
 25264                           fsr2l	equ	0xFD9
 25265                           status	equ	0xFD8
 25266                           
 25267 ;; *************** function i1_PHY_WaitForBusy *****************
 25268 ;; Defined at:
 25269 ;;		line 298 in file "../../TCPIP Library/ethernet_drivers/j60_driver.c"
 25270 ;; Parameters:    Size  Location     Type
 25271 ;;		None
 25272 ;; Auto vars:     Size  Location     Type
 25273 ;;  PHY_WaitForB    1    1[COMRAM] unsigned char 
 25274 ;;  PHY_WaitForB    1    0[COMRAM] enum E7107
 25275 ;; Return value:  Size  Location     Type
 25276 ;;                  1    wreg      enum E7107
 25277 ;; Registers used:
 25278 ;;		wreg, status,2, status,0
 25279 ;; Tracked objects:
 25280 ;;		On entry : 0/E
 25281 ;;		On exit  : F/E
 25282 ;;		Unchanged: 0/0
 25283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25285 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25287 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25288 ;;Total ram usage:        2 bytes
 25289 ;; Hardware stack levels used:    1
 25290 ;; Hardware stack levels required when called:    2
 25291 ;; This function calls:
 25292 ;;		Nothing
 25293 ;; This function is called by:
 25294 ;;		i1_PHY_Read
 25295 ;; This function uses a non-reentrant model
 25296 ;;
 25297                           
 25298                           	psect	text114
 25299  000000                     __ptext114:
 25300                           	opt stack 0
 25301  000000                     __end_ofi1_PHY_WaitForBusy:
 25302                           	opt stack 0
 25303                           tosu	equ	0xFFF
 25304                           tosh	equ	0xFFE
 25305                           tosl	equ	0xFFD
 25306                           pclath	equ	0xFFA
 25307                           tblptru	equ	0xFF8
 25308                           tblptrh	equ	0xFF7
 25309                           tblptrl	equ	0xFF6
 25310                           tablat	equ	0xFF5
 25311                           prodh	equ	0xFF4
 25312                           prodl	equ	0xFF3
 25313                           intcon	equ	0xFF2
 25314                           indf0	equ	0xFEF
 25315                           postinc0	equ	0xFEE
 25316                           fsr0h	equ	0xFEA
 25317                           fsr0l	equ	0xFE9
 25318                           wreg	equ	0xFE8
 25319                           postinc1	equ	0xFE6
 25320                           plusw1	equ	0xFE3
 25321                           fsr1h	equ	0xFE2
 25322                           fsr1l	equ	0xFE1
 25323                           bsr	equ	0xFE0
 25324                           indf2	equ	0xFDF
 25325                           postinc2	equ	0xFDE
 25326                           postdec2	equ	0xFDD
 25327                           plusw2	equ	0xFDB
 25328                           fsr2h	equ	0xFDA
 25329                           fsr2l	equ	0xFD9
 25330                           status	equ	0xFD8
 25331                           
 25332 ;; *************** function _high_isr *****************
 25333 ;; Defined at:
 25334 ;;		line 56 in file "main.c"
 25335 ;; Parameters:    Size  Location     Type
 25336 ;;		None
 25337 ;; Auto vars:     Size  Location     Type
 25338 ;;		None
 25339 ;; Return value:  Size  Location     Type
 25340 ;;		None               void
 25341 ;; Registers used:
 25342 ;;		wreg, status,2, status,0, cstack
 25343 ;; Tracked objects:
 25344 ;;		On entry : 0/0
 25345 ;;		On exit  : 0/0
 25346 ;;		Unchanged: 0/0
 25347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25352 ;;Total ram usage:        0 bytes
 25353 ;; Hardware stack levels used:    1
 25354 ;; Hardware stack levels required when called:    1
 25355 ;; This function calls:
 25356 ;;		_rtcc_handler
 25357 ;; This function is called by:
 25358 ;;		Interrupt level 2
 25359 ;; This function uses a non-reentrant model
 25360 ;;
 25361                           
 25362                           	psect	intcode
 25363  000008                     __pintcode:
 25364                           	opt stack 0
 25365  000008                     _high_isr:
 25366                           	opt stack 12
 25367                           
 25368                           ; BSR set to: 14
 25369                           ;incstack = 0
 25370  000008  8249               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 25371  00000A  EF83  F032         	goto	int_func
 25372                           tosu	equ	0xFFF
 25373                           tosh	equ	0xFFE
 25374                           tosl	equ	0xFFD
 25375                           pclath	equ	0xFFA
 25376                           tblptru	equ	0xFF8
 25377                           tblptrh	equ	0xFF7
 25378                           tblptrl	equ	0xFF6
 25379                           tablat	equ	0xFF5
 25380                           prodh	equ	0xFF4
 25381                           prodl	equ	0xFF3
 25382                           intcon	equ	0xFF2
 25383                           indf0	equ	0xFEF
 25384                           postinc0	equ	0xFEE
 25385                           fsr0h	equ	0xFEA
 25386                           fsr0l	equ	0xFE9
 25387                           wreg	equ	0xFE8
 25388                           postinc1	equ	0xFE6
 25389                           plusw1	equ	0xFE3
 25390                           fsr1h	equ	0xFE2
 25391                           fsr1l	equ	0xFE1
 25392                           bsr	equ	0xFE0
 25393                           indf2	equ	0xFDF
 25394                           postinc2	equ	0xFDE
 25395                           postdec2	equ	0xFDD
 25396                           plusw2	equ	0xFDB
 25397                           fsr2h	equ	0xFDA
 25398                           fsr2l	equ	0xFD9
 25399                           status	equ	0xFD8
 25400                           
 25401                           	psect	intcode_body
 25402  006506                     __pintcode_body:
 25403                           	opt stack 12
 25404  006506                     int_func:
 25405                           	opt stack 12
 25406                           
 25407                           ;main.c: 58: rtcc_handler();
 25408  006506  ECDF  F030         	call	_rtcc_handler	;wreg free
 25409  00650A  9249               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 25410  00650C  0011               	retfie		f
 25411  00650E                     __end_of_high_isr:
 25412                           	opt stack 0
 25413                           tosu	equ	0xFFF
 25414                           tosh	equ	0xFFE
 25415                           tosl	equ	0xFFD
 25416                           pclath	equ	0xFFA
 25417                           tblptru	equ	0xFF8
 25418                           tblptrh	equ	0xFF7
 25419                           tblptrl	equ	0xFF6
 25420                           tablat	equ	0xFF5
 25421                           prodh	equ	0xFF4
 25422                           prodl	equ	0xFF3
 25423                           intcon	equ	0xFF2
 25424                           indf0	equ	0xFEF
 25425                           postinc0	equ	0xFEE
 25426                           fsr0h	equ	0xFEA
 25427                           fsr0l	equ	0xFE9
 25428                           wreg	equ	0xFE8
 25429                           postinc1	equ	0xFE6
 25430                           plusw1	equ	0xFE3
 25431                           fsr1h	equ	0xFE2
 25432                           fsr1l	equ	0xFE1
 25433                           bsr	equ	0xFE0
 25434                           indf2	equ	0xFDF
 25435                           postinc2	equ	0xFDE
 25436                           postdec2	equ	0xFDD
 25437                           plusw2	equ	0xFDB
 25438                           fsr2h	equ	0xFDA
 25439                           fsr2l	equ	0xFD9
 25440                           status	equ	0xFD8
 25441                           
 25442 ;; *************** function _rtcc_handler *****************
 25443 ;; Defined at:
 25444 ;;		line 122 in file "../board_support_package/picdem2_net/rtcc.c"
 25445 ;; Parameters:    Size  Location     Type
 25446 ;;		None
 25447 ;; Auto vars:     Size  Location     Type
 25448 ;;		None
 25449 ;; Return value:  Size  Location     Type
 25450 ;;		None               void
 25451 ;; Registers used:
 25452 ;;		wreg, status,2, status,0
 25453 ;; Tracked objects:
 25454 ;;		On entry : 0/0
 25455 ;;		On exit  : 0/0
 25456 ;;		Unchanged: 0/0
 25457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25462 ;;Total ram usage:        0 bytes
 25463 ;; Hardware stack levels used:    1
 25464 ;; This function calls:
 25465 ;;		Nothing
 25466 ;; This function is called by:
 25467 ;;		_high_isr
 25468 ;; This function uses a non-reentrant model
 25469 ;;
 25470                           
 25471                           	psect	text116
 25472  0061BE                     __ptext116:
 25473                           	opt stack 0
 25474  0061BE                     _rtcc_handler:
 25475                           	opt stack 12
 25476                           
 25477                           ;rtcc.c: 124: if(TMR1IE && TMR1IF)
 25478                           
 25479                           ;incstack = 0
 25480  0061BE  B09D               	btfsc	3997,0,c	;volatile
 25481  0061C0  A09E               	btfss	3998,0,c	;volatile
 25482  0061C2  0012               	return	
 25483                           
 25484                           ;rtcc.c: 125: {
 25485                           ;rtcc.c: 126: TMR1IF = 0;
 25486  0061C4  909E               	bcf	3998,0,c	;volatile
 25487                           
 25488                           ;rtcc.c: 127: TMR1ON = 0;
 25489  0061C6  90CD               	bcf	4045,0,c	;volatile
 25490                           
 25491                           ;rtcc.c: 128: TMR1 = 32768UL;
 25492  0061C8  0E80               	movlw	128
 25493  0061CA  6ECF               	movwf	4047,c	;volatile
 25494  0061CC  6ACE               	clrf	4046,c	;volatile
 25495                           
 25496                           ;rtcc.c: 129: TMR1ON = 1;
 25497  0061CE  80CD               	bsf	4045,0,c	;volatile
 25498                           
 25499                           ;rtcc.c: 130: deviceTime++;
 25500  0061D0  0102               	movlb	2	; () banked
 25501  0061D2  2BF3               	incf	_deviceTime& (0+255),f,b	;volatile
 25502  0061D4  0E00               	movlw	0
 25503  0061D6  23F4               	addwfc	(_deviceTime+1)& (0+255),f,b	;volatile
 25504  0061D8  23F5               	addwfc	(_deviceTime+2)& (0+255),f,b	;volatile
 25505  0061DA  23F6               	addwfc	(_deviceTime+3)& (0+255),f,b	;volatile
 25506                           
 25507                           ; BSR set to: 2
 25508                           ;rtcc.c: 131: localTime++;
 25509  0061DC  2BF7               	incf	_localTime& (0+255),f,b	;volatile
 25510  0061DE  23F8               	addwfc	(_localTime+1)& (0+255),f,b	;volatile
 25511  0061E0  23F9               	addwfc	(_localTime+2)& (0+255),f,b	;volatile
 25512  0061E2  23FA               	addwfc	(_localTime+3)& (0+255),f,b	;volatile
 25513  0061E4  0C00               	retlw	0	;funcret
 25514  0061E6                     __end_of_rtcc_handler:
 25515                           	opt stack 0
 25516                           tosu	equ	0xFFF
 25517                           tosh	equ	0xFFE
 25518                           tosl	equ	0xFFD
 25519                           pclath	equ	0xFFA
 25520                           tblptru	equ	0xFF8
 25521                           tblptrh	equ	0xFF7
 25522                           tblptrl	equ	0xFF6
 25523                           tablat	equ	0xFF5
 25524                           prodh	equ	0xFF4
 25525                           prodl	equ	0xFF3
 25526                           intcon	equ	0xFF2
 25527                           indf0	equ	0xFEF
 25528                           postinc0	equ	0xFEE
 25529                           fsr0h	equ	0xFEA
 25530                           fsr0l	equ	0xFE9
 25531                           wreg	equ	0xFE8
 25532                           postinc1	equ	0xFE6
 25533                           plusw1	equ	0xFE3
 25534                           fsr1h	equ	0xFE2
 25535                           fsr1l	equ	0xFE1
 25536                           bsr	equ	0xFE0
 25537                           indf2	equ	0xFDF
 25538                           postinc2	equ	0xFDE
 25539                           postdec2	equ	0xFDD
 25540                           plusw2	equ	0xFDB
 25541                           fsr2h	equ	0xFDA
 25542                           fsr2l	equ	0xFD9
 25543                           status	equ	0xFD8
 25544                           tosu	equ	0xFFF
 25545                           tosh	equ	0xFFE
 25546                           tosl	equ	0xFFD
 25547                           pclath	equ	0xFFA
 25548                           tblptru	equ	0xFF8
 25549                           tblptrh	equ	0xFF7
 25550                           tblptrl	equ	0xFF6
 25551                           tablat	equ	0xFF5
 25552                           prodh	equ	0xFF4
 25553                           prodl	equ	0xFF3
 25554                           intcon	equ	0xFF2
 25555                           indf0	equ	0xFEF
 25556                           postinc0	equ	0xFEE
 25557                           fsr0h	equ	0xFEA
 25558                           fsr0l	equ	0xFE9
 25559                           wreg	equ	0xFE8
 25560                           postinc1	equ	0xFE6
 25561                           plusw1	equ	0xFE3
 25562                           fsr1h	equ	0xFE2
 25563                           fsr1l	equ	0xFE1
 25564                           bsr	equ	0xFE0
 25565                           indf2	equ	0xFDF
 25566                           postinc2	equ	0xFDE
 25567                           postdec2	equ	0xFDD
 25568                           plusw2	equ	0xFDB
 25569                           fsr2h	equ	0xFDA
 25570                           fsr2l	equ	0xFD9
 25571                           status	equ	0xFD8
 25572                           
 25573                           	psect	text117
 25574  000000                     __ptext117:
 25575                           	opt stack 0
 25576                           tosu	equ	0xFFF
 25577                           tosh	equ	0xFFE
 25578                           tosl	equ	0xFFD
 25579                           pclath	equ	0xFFA
 25580                           tblptru	equ	0xFF8
 25581                           tblptrh	equ	0xFF7
 25582                           tblptrl	equ	0xFF6
 25583                           tablat	equ	0xFF5
 25584                           prodh	equ	0xFF4
 25585                           prodl	equ	0xFF3
 25586                           intcon	equ	0xFF2
 25587                           indf0	equ	0xFEF
 25588                           postinc0	equ	0xFEE
 25589                           fsr0h	equ	0xFEA
 25590                           fsr0l	equ	0xFE9
 25591                           wreg	equ	0xFE8
 25592                           postinc1	equ	0xFE6
 25593                           plusw1	equ	0xFE3
 25594                           fsr1h	equ	0xFE2
 25595                           fsr1l	equ	0xFE1
 25596                           bsr	equ	0xFE0
 25597                           indf2	equ	0xFDF
 25598                           postinc2	equ	0xFDE
 25599                           postdec2	equ	0xFDD
 25600                           plusw2	equ	0xFDB
 25601                           fsr2h	equ	0xFDA
 25602                           fsr2l	equ	0xFD9
 25603                           status	equ	0xFD8
 25604                           
 25605                           	psect	rparam
 25606  0000                     tosu	equ	0xFFF
 25607                           tosh	equ	0xFFE
 25608                           tosl	equ	0xFFD
 25609                           pclath	equ	0xFFA
 25610                           tblptru	equ	0xFF8
 25611                           tblptrh	equ	0xFF7
 25612                           tblptrl	equ	0xFF6
 25613                           tablat	equ	0xFF5
 25614                           prodh	equ	0xFF4
 25615                           prodl	equ	0xFF3
 25616                           intcon	equ	0xFF2
 25617                           indf0	equ	0xFEF
 25618                           postinc0	equ	0xFEE
 25619                           fsr0h	equ	0xFEA
 25620                           fsr0l	equ	0xFE9
 25621                           wreg	equ	0xFE8
 25622                           postinc1	equ	0xFE6
 25623                           plusw1	equ	0xFE3
 25624                           fsr1h	equ	0xFE2
 25625                           fsr1l	equ	0xFE1
 25626                           bsr	equ	0xFE0
 25627                           indf2	equ	0xFDF
 25628                           postinc2	equ	0xFDE
 25629                           postdec2	equ	0xFDD
 25630                           plusw2	equ	0xFDB
 25631                           fsr2h	equ	0xFDA
 25632                           fsr2l	equ	0xFD9
 25633                           status	equ	0xFD8
 25634                           
 25635                           	psect	temp
 25636  000049                     btemp:
 25637                           	opt stack 0
 25638  000049                     	ds	1
 25639  0000                     int$flags	set	btemp
 25640                           tosu	equ	0xFFF
 25641                           tosh	equ	0xFFE
 25642                           tosl	equ	0xFFD
 25643                           pclath	equ	0xFFA
 25644                           tblptru	equ	0xFF8
 25645                           tblptrh	equ	0xFF7
 25646                           tblptrl	equ	0xFF6
 25647                           tablat	equ	0xFF5
 25648                           prodh	equ	0xFF4
 25649                           prodl	equ	0xFF3
 25650                           intcon	equ	0xFF2
 25651                           indf0	equ	0xFEF
 25652                           postinc0	equ	0xFEE
 25653                           fsr0h	equ	0xFEA
 25654                           fsr0l	equ	0xFE9
 25655                           wreg	equ	0xFE8
 25656                           postinc1	equ	0xFE6
 25657                           plusw1	equ	0xFE3
 25658                           fsr1h	equ	0xFE2
 25659                           fsr1l	equ	0xFE1
 25660                           bsr	equ	0xFE0
 25661                           indf2	equ	0xFDF
 25662                           postinc2	equ	0xFDE
 25663                           postdec2	equ	0xFDD
 25664                           plusw2	equ	0xFDB
 25665                           fsr2h	equ	0xFDA
 25666                           fsr2l	equ	0xFD9
 25667                           status	equ	0xFD8
 25668                           tosu	equ	0xFFF
 25669                           tosh	equ	0xFFE
 25670                           tosl	equ	0xFFD
 25671                           pclath	equ	0xFFA
 25672                           tblptru	equ	0xFF8
 25673                           tblptrh	equ	0xFF7
 25674                           tblptrl	equ	0xFF6
 25675                           tablat	equ	0xFF5
 25676                           prodh	equ	0xFF4
 25677                           prodl	equ	0xFF3
 25678                           intcon	equ	0xFF2
 25679                           indf0	equ	0xFEF
 25680                           postinc0	equ	0xFEE
 25681                           fsr0h	equ	0xFEA
 25682                           fsr0l	equ	0xFE9
 25683                           wreg	equ	0xFE8
 25684                           postinc1	equ	0xFE6
 25685                           plusw1	equ	0xFE3
 25686                           fsr1h	equ	0xFE2
 25687                           fsr1l	equ	0xFE1
 25688                           bsr	equ	0xFE0
 25689                           indf2	equ	0xFDF
 25690                           postinc2	equ	0xFDE
 25691                           postdec2	equ	0xFDD
 25692                           plusw2	equ	0xFDB
 25693                           fsr2h	equ	0xFDA
 25694                           fsr2l	equ	0xFD9
 25695                           status	equ	0xFD8


Data Sizes:
    Strings     127
    Constant    66
    Data        1
    BSS         251
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     50      72
    BANK0           160    160     160
    BANK1           256    191     231
    BANK2           256     53     251
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          126      0       0
    BANK15           96      0       0

Pointer List with Targets:

    Network_Read@debug_str.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    Network_Read@debug_str.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    Network_Read@debug_str.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    Network_Read@debug_str.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    Network_Read@debug_str.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    Network_Read@debug_str.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    main@str.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    main@str.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    main@str.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    main@str.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    main@str.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    main@str.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ?_printf.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ?_printf.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ?_printf.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ?_printf.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ?_printf.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ?_printf.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ?_sprintf.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ?_sprintf.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ?_sprintf.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ?_sprintf.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ?_sprintf.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ?_sprintf.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_7(CODE[12]), STR_2(CODE[8]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    sprintf@wh	PTR unsigned char  size(2) Largest target is 80
		 -> main@str(BANK2[32]), Network_Read@debug_str(BANK1[80]), 

    pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 0
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 80
		 -> main@str(BANK2[32]), Network_Read@debug_str(BANK1[80]), NULL(NULL[0]), 

    printf@f	PTR const unsigned char  size(1) Largest target is 28
		 -> STR_4(CODE[10]), STR_3(CODE[28]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 0
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 80
		 -> main@str(BANK2[32]), Network_Read@debug_str(BANK1[80]), NULL(NULL[0]), 

    memset@p1	PTR void  size(2) Largest target is 32
		 -> DEMO_UDP_Recv@str2(BANK0[16]), DEMO_UDP_Recv@str1(BANK0[16]), DEMO_UDP_Recv@str(BANK0[32]), main@str(BANK2[32]), 

    memset@p	PTR unsigned char  size(2) Largest target is 32
		 -> DEMO_UDP_Recv@str2(BANK0[16]), DEMO_UDP_Recv@str1(BANK0[16]), DEMO_UDP_Recv@str(BANK0[32]), main@str(BANK2[32]), 

    memcmp@s2	PTR const void  size(1) Largest target is 6
		 -> DHCP_Handler@ethMAC(BANK0[6]), 

    memcmp@s1	PTR const void  size(1) Largest target is 6
		 -> DHCP_Handler@ethPktMAC(BANK0[6]), 

    _doprnt@f	PTR const unsigned char  size(1) Largest target is 28
		 -> STR_7(CODE[12]), STR_4(CODE[10]), STR_3(CODE[28]), STR_2(CODE[8]), 

    _doprnt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), printf@ap(BANK0[1]), 

    _doprnt@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), STR_8(CODE[7]), main@str(BANK2[32]), 
		 -> STR_6(CODE[13]), STR_5(CODE[17]), Network_Read@debug_str(BANK1[80]), STR_1(CODE[15]), 
		 -> NULL(NULL[0]), 

    S4264__prbuf$func	PTR FTN(unsigned char ,)void  size(3) Largest target is 0
		 -> Absolute function(), putch(), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 0
		 -> Absolute function(), putch(), 

    S4264__prbuf$ptr	PTR unsigned char  size(2) Largest target is 80
		 -> main@str(BANK2[32]), Network_Read@debug_str(BANK1[80]), NULL(NULL[0]), 

    _doprnt@pb.ptr	PTR unsigned char  size(2) Largest target is 80
		 -> main@str(BANK2[32]), Network_Read@debug_str(BANK1[80]), NULL(NULL[0]), 

    _doprnt@pb	PTR struct __prbuf size(1) Largest target is 6
		 -> sprintf@pb(BANK0[5]), printf@pb(BANK0[5]), 

    sp__memset	PTR void  size(2) Largest target is 32
		 -> DEMO_UDP_Recv@str2(BANK0[16]), DEMO_UDP_Recv@str1(BANK0[16]), DEMO_UDP_Recv@str(BANK0[32]), main@str(BANK2[32]), 

    UDP_WriteBlock@data	PTR void  size(1) Largest target is 4
		 -> DEMO_UDP_Recv@local_ip(BANK0[4]), 

    UDP_ReadBlock@data	PTR void  size(2) Largest target is 32
		 -> DEMO_UDP_Recv@str2(BANK0[16]), DEMO_UDP_Recv@str1(BANK0[16]), DEMO_UDP_Recv@str(BANK0[32]), data(BANK1[2]), 
		 -> idle_packet(BANK2[2]), 

    UDP_Receive@hptr.callBack	PTR FTN(int ,)void  size(3) Largest target is 0
		 -> DHCP_Handler(), DEMO_UDP_Recv(), DEMO_UDP_IdlePkt(), 

    UDP_Receive@hptr	PTR const struct . size(1) Largest target is 15
		 -> UDP_CallBackTable(CODE[15]), 

    TCP_Update@tcbPtr.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Update@tcbPtr.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Update@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Update@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Update@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Update@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Update@tcbPtr	PTR struct . size(2) Largest target is 0
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), main@str(BANK2[32]), STR_6(CODE[13]), 
		 -> STR_5(CODE[17]), Network_Read@debug_str(BANK1[80]), STR_1(CODE[15]), NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SendDone@tcbPtr.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SendDone@tcbPtr.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SendDone@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SendDone@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SendDone@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SendDone@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Send@tcbPtr.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Send@tcbPtr.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Send@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Send@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Send@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Send@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Close@tcbPtr.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Close@tcbPtr.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Close@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Close@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Close@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Close@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Connect@tcbPtr.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Connect@tcbPtr.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Connect@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Connect@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Connect@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Connect@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Listen@tcbPtr.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Listen@tcbPtr.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Listen@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Listen@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Listen@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Listen@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Bind@tcbPtr.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Bind@tcbPtr.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Bind@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Bind@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Bind@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Bind@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Recv@tcbPtr.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Recv@tcbPtr.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Recv@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Recv@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Recv@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Recv@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Recv@tcbPtr	PTR struct . size(2) Largest target is 0
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), main@str(BANK2[32]), STR_6(CODE[13]), 
		 -> STR_5(CODE[17]), Network_Read@debug_str(BANK1[80]), STR_1(CODE[15]), NULL(NULL[0]), 

    currentTCB.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    currentTCB.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    currentTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    currentTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    currentTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    currentTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    currentTCB	PTR struct . size(2) Largest target is 0
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), main@str(BANK2[32]), STR_6(CODE[13]), 
		 -> STR_5(CODE[17]), Network_Read@debug_str(BANK1[80]), STR_1(CODE[15]), NULL(NULL[0]), 

    TCP_Snd@data	PTR unsigned char  size(2) Largest target is 0
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), main@str(BANK2[32]), STR_6(CODE[13]), 
		 -> STR_5(CODE[17]), Network_Read@debug_str(BANK1[80]), STR_1(CODE[15]), NULL(NULL[0]), 

    TCP_Snd@tcbPtr.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Snd@tcbPtr.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Snd@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Snd@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Snd@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Snd@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCP_Snd@tcbPtr	PTR struct . size(2) Largest target is 0
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), main@str(BANK2[32]), STR_6(CODE[13]), 
		 -> STR_5(CODE[17]), Network_Read@debug_str(BANK1[80]), STR_1(CODE[15]), NULL(NULL[0]), 

    TCB_Check@tcbPtr.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Check@tcbPtr.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Check@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Check@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Check@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Check@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Reset@tcbPtr.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Reset@tcbPtr.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Reset@tcbPtr.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Reset@tcbPtr.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Reset@tcbPtr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Reset@tcbPtr.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Reset@tcbPtr	PTR struct . size(2) Largest target is 0
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), main@str(BANK2[32]), STR_6(CODE[13]), 
		 -> STR_5(CODE[17]), Network_Read@debug_str(BANK1[80]), STR_1(CODE[15]), NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Remove@ptr.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Insert@ptr.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Insert@ptr.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Insert@ptr.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Insert@ptr.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TCB_Insert@ptr.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tcbList.prevTCB.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tcbList.prevTCB.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tcbList.prevTCB.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tcbList.prevTCB.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tcbList.prevTCB.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tcbList.prevTCB.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2678$prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tcbList.prevTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2678$nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tcbList.nextTCB	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2678$txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tcbList.txBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2678$txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tcbList.txBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2678$rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tcbList.rxBufferPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2678$rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tcbList.rxBufferStart	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tcbList	PTR struct . size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    SYSLOG_Write@message	PTR const unsigned char  size(2) Largest target is 32
		 -> main@str(BANK2[32]), STR_6(CODE[13]), STR_5(CODE[17]), STR_1(CODE[15]), 

    IPv4_Start@macAddress	PTR const struct . size(2) Largest target is 104
		 -> arpMap.macAddress(BANK2[6]), broadcastMAC(CODE[6]), arpMap(BANK2[104]), NULL(NULL[0]), 

    IPV4_PseudoHeaderChecksum@v	PTR unsigned int  size(1) Largest target is 12
		 -> IPV4_PseudoHeaderChecksum@tmp(COMRAM[12]), 

    ICMP_EchoReply@icmpHdr	PTR struct . size(1) Largest target is 8
		 -> ICMP_Receive@icmpHdr(BANK0[8]), 

    ICMP_EchoReply@ipv4Hdr	PTR struct . size(2) Largest target is 20
		 -> ipv4Header(BANK2[20]), 

    ICMP_Receive@ipv4Hdr	PTR struct . size(2) Largest target is 20
		 -> ipv4Header(BANK2[20]), 

    S1757$callBack	PTR FTN(int ,)void  size(3) Largest target is 0
		 -> DHCP_Handler(), DEMO_UDP_Recv(), DEMO_UDP_IdlePkt(), 

    UDP_CallBackTable.callBack	PTR FTN(int ,)void  size(3) Largest target is 0
		 -> DHCP_Handler(), DEMO_UDP_Recv(), DEMO_UDP_IdlePkt(), 

    sp__ARPV4_Lookup	PTR struct . size(2) Largest target is 104
		 -> arpMap.macAddress(BANK2[6]), arpMap(BANK2[104]), NULL(NULL[0]), 

    ARPV4_Lookup@entry_pointer	PTR struct . size(2) Largest target is 104
		 -> arpMap(BANK2[104]), 

    ARPV4_Update@entryPointer	PTR struct . size(2) Largest target is 104
		 -> arpMap(BANK2[104]), 

    ARPV4_Packet@arpPtr	PTR struct . size(2) Largest target is 104
		 -> arpMap(BANK2[104]), 

    ARPV4_Packet@entryPointer	PTR struct . size(2) Largest target is 104
		 -> arpMap(BANK2[104]), 

    ETH_GetMAC@mac	PTR unsigned char  size(1) Largest target is 28
		 -> DHCP_Handler@ethMAC(BANK0[6]), DHCP_Request@ethMAC(BANK0[6]), ARPV4_Request@header(BANK0[28]), header.sha(COMRAM[6]), 
		 -> ARPV4_Packet@header(BANK0[28]), 

    ETH_Insert@data	PTR unsigned char  size(1) Largest target is 2
		 -> UDP_Send@cksm(BANK0[2]), UDP_Send@udpLength(BANK0[2]), TCP_Snd@cksm(BANK0[2]), IPV4_Send@cksm(BANK0[2]), 
		 -> IPV4_Send@totalLength(BANK0[2]), ICMP_EchoReply@cksm(BANK0[2]), 

    ETH_WriteStart@dest_mac	PTR const struct . size(2) Largest target is 104
		 -> arpMap.macAddress(BANK2[6]), broadcastMAC(CODE[6]), header.sha(COMRAM[6]), ARPV4_Packet@header(BANK0[28]), 
		 -> arpMap(BANK2[104]), NULL(NULL[0]), 

    ETH_WriteBlock@buffer	PTR void  size(2) Largest target is 28
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), DEMO_UDP_Recv@local_ip(BANK0[4]), main@str(BANK2[32]), 
		 -> STR_6(CODE[13]), STR_5(CODE[17]), TCP_Snd@txHeader(BANK0[20]), Network_Read@debug_str(BANK1[80]), 
		 -> dhcpName(CODE[21]), DHCP_Request@ethMAC(BANK0[6]), ARPV4_Request@header(BANK0[28]), ARPV4_Packet@header(BANK0[28]), 
		 -> STR_1(CODE[15]), NULL(NULL[0]), 

    ETH_WriteBlock@p	PTR unsigned char  size(2) Largest target is 28
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), DEMO_UDP_Recv@local_ip(BANK0[4]), main@str(BANK2[32]), 
		 -> STR_6(CODE[13]), STR_5(CODE[17]), TCP_Snd@txHeader(BANK0[20]), Network_Read@debug_str(BANK1[80]), 
		 -> dhcpName(CODE[21]), DHCP_Request@ethMAC(BANK0[6]), ARPV4_Request@header(BANK0[28]), ARPV4_Packet@header(BANK0[28]), 
		 -> STR_1(CODE[15]), NULL(NULL[0]), 

    ETH_ReadBlock@buffer	PTR void  size(2) Largest target is 32
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), DEMO_UDP_Recv@str2(BANK0[16]), DEMO_UDP_Recv@str1(BANK0[16]), 
		 -> DEMO_UDP_Recv@str(BANK0[32]), data(BANK1[2]), idle_packet(BANK2[2]), main@str(BANK2[32]), 
		 -> STR_6(CODE[13]), STR_5(CODE[17]), udpHeader(BANK2[8]), tcpHeader(BANK1[20]), 
		 -> Network_Read@debug_str(BANK1[80]), Network_Read@header(BANK1[14]), ipv4Header(BANK2[20]), ICMP_Receive@icmpHdr(BANK0[8]), 
		 -> DHCP_Handler@ethPktMAC(BANK0[6]), ARPV4_Packet@header(BANK0[28]), STR_1(CODE[15]), NULL(NULL[0]), 

    ETH_ReadBlock@p	PTR unsigned char  size(2) Largest target is 32
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), DEMO_UDP_Recv@str2(BANK0[16]), DEMO_UDP_Recv@str1(BANK0[16]), 
		 -> DEMO_UDP_Recv@str(BANK0[32]), data(BANK1[2]), idle_packet(BANK2[2]), main@str(BANK2[32]), 
		 -> STR_6(CODE[13]), STR_5(CODE[17]), udpHeader(BANK2[8]), tcpHeader(BANK1[20]), 
		 -> Network_Read@debug_str(BANK1[80]), Network_Read@header(BANK1[14]), ipv4Header(BANK2[20]), ICMP_Receive@icmpHdr(BANK0[8]), 
		 -> DHCP_Handler@ethPktMAC(BANK0[6]), ARPV4_Packet@header(BANK0[28]), STR_1(CODE[15]), NULL(NULL[0]), 

    sp__MAC_getAddress	PTR const struct . size(1) Largest target is 6
		 -> macAddress(CODE[6]), 

    ETH_Init@mac	PTR const struct . size(1) Largest target is 6
		 -> macAddress(CODE[6]), 

    time@t	PTR long  size(2) Largest target is 4
		 -> main@t(BANK2[4]), main@now_p(BANK2[4]), main@ip_timer(BANK2[4]), Network_Manage@now(BANK1[4]), 
		 -> arpTimer(BANK2[4]), NULL(NULL[0]), 

    lcd_puts@s	PTR const unsigned char  size(2) Largest target is 32
		 -> DEMO_UDP_Recv@str2(BANK0[16]), DEMO_UDP_Recv@str1(BANK0[16]), DEMO_UDP_Recv@str(BANK0[32]), main@str(BANK2[32]), 


Critical Paths under _main in COMRAM

    _main->_SYSLOG_Write
    _initHW->_lcd_init
    _lcd_init->_lcd_write_ctrl
    _Network_WaitForLink->_ETH_CheckLinkUp
    _sprintf->__doprnt
    _IPV4_Packet->_ETH_RxComputeChecksum
    _lcd_puts->_lcd_putch
    _lcd_putch->_lcd_write_data
    _lcd_goto2->_lcd_write_ctrl
    _lcd_goto1->_lcd_write_ctrl
    _lcd_clear->_lcd_write_ctrl
    _UDP_WriteBlock->_ETH_WriteBlock
    _UDP_Write16->_ETH_Write16
    _UDP_Read8->_ETH_Read8
    _DEMO_UDP_MeasureTemp->_ADC_GetConversion
    _UDP_ReadBlock->_ETH_ReadBlock
    _TCP_ParseTCPOptions->_ETH_Read16
    _TCP_Snd->_IPV4_Send
    _ICMP_EchoReply->_IPV4_Send
    _ETH_Copy->_SYSLOG_Write
    _printf->__doprnt
    __doprnt->___lwmod
    ___lwmod->___lwdiv
    _ETH_RxComputeChecksum->_ETH_ComputeChecksum
    _ARPV4_Packet->_ETH_ReadBlock
    _ETH_EventHandler->_ETH_CheckLinkUp
    _DHCP_WriteZeros->_ETH_Write8
    _Network_Init->_ETH_Init
    _ETH_Init->_ETH_CheckLinkUp
    _PHY_Write->_PHY_WaitForBusy
    _ETH_CheckLinkUp->_ETH_readLinkStatus
    _ETH_readLinkStatus->_PHY_Read
    _PHY_Read->_PHY_WaitForBusy
    _UDP_Write8->_ETH_Write8
    _UDP_Write32->_ETH_Write32
    _UDP_Start->_IPv4_Start
    _IPv4_Start->_ARPV4_Lookup
    _ARPV4_Request->_ETH_WriteBlock
    _ARPV4_Request->_ETH_WriteStart
    _UDP_Send->_IPV4_Send
    _IPV4_Send->_ETH_TxComputeChecksum
    _ETH_TxComputeChecksum->_ETH_ComputeChecksum
    _DEMO_UDP_IPLockTimer->_DEMO_UDP_SetClaimIP

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _low_isr in COMRAM

    i1_ETH_EventHandler->i1_ETH_CheckLinkUp
    i1_ETH_CheckLinkUp->i1_ETH_readLinkStatus
    i1_ETH_readLinkStatus->i1_PHY_Read
    i1_PHY_Read->i1_PHY_WaitForBusy

Critical Paths under _main in BANK0

    _SYSLOG_Init->_printf
    _UDP_Receive->_DEMO_UDP_Recv
    _DHCP_Handler->_DHCP_Request
    _TCP_FiniteStateMachine->_TCP_PayloadSave
    _TCP_PayloadSave->_TCP_Snd
    _TCP_Snd->_IPv4_Start
    _ICMP_Receive->_ICMP_EchoReply
    _ICMP_EchoReply->_IPv4_Start
    _ETH_Copy->_SYSLOG_Write
    _SYSLOG_Write->_printf
    _DHCP_Manage->_DHCP_Request
    _DHCP_Request->_UDP_Start
    _DEMO_UDP_Send->_UDP_Start
    _UDP_Start->_IPv4_Start
    _IPv4_Start->_ARPV4_Request
    _UDP_Send->_IPV4_Send
    _IPV4_Send->_ETH_TxComputeChecksum

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Network_Manage
    _Network_Manage->_Network_Read
    _TCP_Update->_TCP_FiniteStateMachine
    _Network_Read->_IPV4_Packet
    _IPV4_Packet->_TCP_Recv
    _TCP_Recv->_TCP_FiniteStateMachine

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _low_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _low_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Critical Paths under _low_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                54    54      0  272362
                                            190 BANK1      1     1      0
                                              0 BANK2     53    53      0
               _DEMO_UDP_IPLockTimer
                      _DEMO_UDP_Send
                       _IPV4_GetMyIP
                       _Network_Init
                     _Network_Manage
                _Network_WaitForLink
                        _SYSLOG_Init
                       _SYSLOG_Write
                             _initHW
                          _lcd_goto1
                           _lcd_puts
                             _memset
                            _sprintf
                               _time
 ---------------------------------------------------------------------------------
 (1) _initHW                                               0     0      0     133
                     _ADC_Initialize
                           _LED_Init
                           _lcd_init
                          _rtcc_init
                           _spi_init
                          _uart_init
 ---------------------------------------------------------------------------------
 (2) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _spi_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _rtcc_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             5     5      0      31
                                             23 COMRAM     1     1      0
                           _lcd_busy
                      _lcd_init_pins
                     _lcd_write_ctrl
 ---------------------------------------------------------------------------------
 (3) _lcd_init_pins                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_Init                                             1     1      0     102
                                             22 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSLOG_Init                                          4     4      0    4262
                                             11 BANK0      4     4      0
                             _printf
                               _time
 ---------------------------------------------------------------------------------
 (1) _Network_WaitForLink                                  0     0      0     278
                    _ETH_CheckLinkUp
 ---------------------------------------------------------------------------------
 (1) _Network_Manage                                       5     5      0  232042
                                            185 BANK1      5     5      0
                       _ARPV4_Update
                        _DHCP_Manage
                   _ETH_EventHandler
                       _Network_Read
                         _TCP_Update
                               _time
 ---------------------------------------------------------------------------------
 (2) _TCP_Update                                          12    12      0   48716
                                             17 BANK1     12    12      0
             _TCP_FiniteStateMachine
 ---------------------------------------------------------------------------------
 (2) _Network_Read                                        98    98      0  157343
                                             87 BANK1     98    98      0
                       _ARPV4_Packet
                          _ETH_Flush
               _ETH_NextPacketUpdate
                      _ETH_ReadBlock
                        _IPV4_Packet
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             17     6     11    3711
                                              0 BANK0     17     6     11
                            __doprnt
 ---------------------------------------------------------------------------------
 (3) _IPV4_Packet                                         73    73      0  144515
                                             54 BANK1     33    33      0
                           _ETH_Dump
                      _ETH_ReadBlock
              _ETH_RxComputeChecksum
                       _ICMP_Receive
          _IPV4_PseudoHeaderChecksum
                           _TCP_Recv
                        _UDP_Receive
 ---------------------------------------------------------------------------------
 (4) _UDP_Receive                                         11     9      2   61521
                                              0 BANK1     11     9      2
                   _DEMO_UDP_IdlePkt *
                      _DEMO_UDP_Recv *
                       _DHCP_Handler *
                      _ETH_ReadBlock
 ---------------------------------------------------------------------------------
 (5) _DHCP_Handler                                        36    34      2   29221
                                             79 BANK0     36    34      2
                       _DHCP_Request
                           _ETH_Dump
                         _ETH_GetMAC
                         _ETH_Read16
                         _ETH_Read32
                          _ETH_Read8
                      _ETH_ReadBlock
                             _memcmp
 ---------------------------------------------------------------------------------
 (6) _memcmp                                               6     3      3     377
                                             22 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (6) _ETH_Read32                                           8     4      4     148
                                             22 COMRAM     8     4      4
                      _ETH_EdataRead
 ---------------------------------------------------------------------------------
 (5) _DEMO_UDP_Recv                                       81    79      2   27794
                                             79 BANK0     81    79      2
              _DEMO_UDP_ClaimIPCheck
               _DEMO_UDP_MeasureTemp
                _DEMO_UDP_SetClaimIP
                      _UDP_GetDestIP
                    _UDP_GetDestPort
                          _UDP_Read8
                      _UDP_ReadBlock
                           _UDP_Send
                          _UDP_Start
                        _UDP_Write16
                         _UDP_Write8
                     _UDP_WriteBlock
                          _lcd_clear
                          _lcd_goto1
                          _lcd_goto2
                           _lcd_puts
                             _memset
 ---------------------------------------------------------------------------------
 (1) _memset                                               8     2      6    1037
                                             22 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             2     0      2     369
                                             24 COMRAM     2     0      2
                          _lcd_putch
 ---------------------------------------------------------------------------------
 (2) _lcd_putch                                            1     1      0     124
                                             23 COMRAM     1     1      0
                           _lcd_busy
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (3) _lcd_write_data                                       1     1      0      31
                                             22 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _lcd_goto2                                            1     1      0      62
                                             23 COMRAM     1     1      0
                           _lcd_busy
                     _lcd_write_ctrl
 ---------------------------------------------------------------------------------
 (1) _lcd_goto1                                            1     1      0      62
                                             23 COMRAM     1     1      0
                           _lcd_busy
                     _lcd_write_ctrl
 ---------------------------------------------------------------------------------
 (3) _lcd_busy                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _lcd_clear                                            1     1      0      31
                                             23 COMRAM     1     1      0
                     _lcd_write_ctrl
 ---------------------------------------------------------------------------------
 (2) _lcd_write_ctrl                                       1     1      0      31
                                             22 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _UDP_WriteBlock                                       3     1      2    1734
                                             28 COMRAM     3     1      2
                     _ETH_WriteBlock
 ---------------------------------------------------------------------------------
 (6) _UDP_Write16                                          2     0      2    1356
                                             24 COMRAM     2     0      2
                        _ETH_Write16
 ---------------------------------------------------------------------------------
 (6) _UDP_Read8                                            0     0      0      37
                          _ETH_Read8
 ---------------------------------------------------------------------------------
 (6) _UDP_GetDestPort                                      2     0      2       0
                                             22 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _UDP_GetDestIP                                        4     0      4       0
                                             22 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) _DEMO_UDP_MeasureTemp                                 4     2      2      65
                                             26 COMRAM     4     2      2
                  _ADC_GetConversion
 ---------------------------------------------------------------------------------
 (5) _DEMO_UDP_IdlePkt                                     2     0      2    2471
                                             79 BANK0      2     0      2
                      _UDP_ReadBlock
 ---------------------------------------------------------------------------------
 (6) _UDP_ReadBlock                                        4     0      4    2471
                                             31 COMRAM     4     0      4
                      _ETH_ReadBlock
 ---------------------------------------------------------------------------------
 (4) _TCP_Recv                                            37    31      6   52135
                                             17 BANK1     37    31      6
                      _ETH_ReadBlock
             _TCP_FiniteStateMachine
                _TCP_ParseTCPOptions
 ---------------------------------------------------------------------------------
 (5) _TCP_ParseTCPOptions                                  6     6      0    1728
                                             26 COMRAM     6     6      0
                           _ETH_Dump
                         _ETH_Read16
                          _ETH_Read8
 ---------------------------------------------------------------------------------
 (6) _ETH_Read8                                            1     1      0      37
                                             22 COMRAM     1     1      0
                      _ETH_EdataRead
 ---------------------------------------------------------------------------------
 (6) _ETH_Read16                                           4     2      2      74
                                             22 COMRAM     4     2      2
                      _ETH_EdataRead
 ---------------------------------------------------------------------------------
 (6) _ETH_Dump                                             2     0      2    1117
                                             22 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _TCP_FiniteStateMachine                              17    17      0   48236
                                              0 BANK1     17    17      0
                          _TCB_Reset
                    _TCP_PayloadSave
                            _TCP_Snd
 ---------------------------------------------------------------------------------
 (4) _TCP_PayloadSave                                     17    15      2   23972
                                            142 BANK0     17    15      2
                      _ETH_ReadBlock
                            _TCP_Snd
 ---------------------------------------------------------------------------------
 (4) _TCP_Snd                                             79    77      2   21918
                                             63 BANK0     79    77      2
                         _ETH_Insert
              _ETH_TxComputeChecksum
                     _ETH_WriteBlock
                          _IPV4_Send
                         _IPv4_Start
 ---------------------------------------------------------------------------------
 (4) _TCB_Reset                                            4     2      2    1823
                                             22 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _IPV4_PseudoHeaderChecksum                           24    22      2     578
                                             22 COMRAM    24    22      2
 ---------------------------------------------------------------------------------
 (4) _ICMP_Receive                                        15    13      2   25240
                                             79 BANK0     15    13      2
                      _ETH_ReadBlock
                       _ETH_SaveRDPT
                     _ICMP_EchoReply
 ---------------------------------------------------------------------------------
 (5) _ICMP_EchoReply                                      16    14      2   23252
                                             63 BANK0     16    14      2
                           _ETH_Copy
                         _ETH_Insert
                       _ETH_SaveRDPT
              _ETH_TxComputeChecksum
                        _ETH_Write16
                          _IPV4_Send
                         _IPv4_Start
 ---------------------------------------------------------------------------------
 (6) _ETH_SaveRDPT                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ETH_Copy                                             6     4      2    5446
                                             13 BANK0      6     4      2
                       _SYSLOG_Write
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     412
                                             22 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSLOG_Write                                         4     2      2    4653
                                             48 COMRAM     2     0      2
                                             11 BANK0      2     2      0
                             _printf
                               _time
 ---------------------------------------------------------------------------------
 (2) _printf                                              11     7      4    3437
                                              0 BANK0     11     7      4
                            __doprnt
 ---------------------------------------------------------------------------------
 (2) __doprnt                                             20    18      2    3151
                                             34 COMRAM    14    12      2
                   Absolute function *
                            ___lwdiv
                            ___lwmod
                              _putch *
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      62
                                             22 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     412
                                             29 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     601
                                             22 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ETH_RxComputeChecksum                               14    10      4    1633
                                             36 COMRAM    14    10      4
                _ETH_ComputeChecksum
 ---------------------------------------------------------------------------------
 (3) _ETH_NextPacketUpdate                                 0     0      0       0
                      _ETH_EdataRead
 ---------------------------------------------------------------------------------
 (3) _ETH_Flush                                            4     4      0       0
                                             22 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (3) _ARPV4_Packet                                        70    70      0    5970
                                              0 BANK0     70    70      0
                         _ETH_GetMAC
                      _ETH_ReadBlock
                           _ETH_Send
                     _ETH_WriteBlock
                     _ETH_WriteStart
 ---------------------------------------------------------------------------------
 (5) _ETH_ReadBlock                                        9     5      4    1759
                                             22 COMRAM     9     5      4
                      _ETH_EdataRead
 ---------------------------------------------------------------------------------
 (2) _ETH_EventHandler                                     0     0      0     522
                    _ETH_CheckLinkUp
                           _PHY_Read
 ---------------------------------------------------------------------------------
 (2) _DHCP_Manage                                          0     0      0   24435
                       _DHCP_Request
 ---------------------------------------------------------------------------------
 (6) _DHCP_Request                                        10    10      0   24435
                                             71 BANK0      8     8      0
                    _DHCP_WriteZeros
                         _ETH_GetMAC
                        _ETH_Write16
                        _ETH_Write32
                         _ETH_Write8
                     _ETH_WriteBlock
                           _UDP_Send
                          _UDP_Start
 ---------------------------------------------------------------------------------
 (7) _DHCP_WriteZeros                                      2     0      2     152
                                             23 COMRAM     2     0      2
                         _ETH_Write8
 ---------------------------------------------------------------------------------
 (2) _ARPV4_Update                                         3     3      0     105
                                             22 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Network_Init                                         0     0      0    2017
                         _ARPV4_Init
                           _ETH_Init
                          _IPV4_Init
                           _TCP_Init
                               _time
 ---------------------------------------------------------------------------------
 (1) _time                                                 9     5      4     791
                                             22 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (2) _TCP_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IPV4_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ETH_Init                                             4     4      0    1127
                                             41 COMRAM     4     4      0
                    _ETH_CheckLinkUp
                     _MAC_getAddress
                          _PHY_Write
 ---------------------------------------------------------------------------------
 (3) _PHY_Write                                            4     2      2     626
                                             24 COMRAM     4     2      2
                    _PHY_WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _MAC_getAddress                                       2     0      2       0
                                             22 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ETH_CheckLinkUp                                      4     4      0     278
                                             37 COMRAM     4     4      0
                 _ETH_readLinkStatus
 ---------------------------------------------------------------------------------
 (3) _ETH_readLinkStatus                                   4     0      4     244
                                             33 COMRAM     4     0      4
                           _PHY_Read
 ---------------------------------------------------------------------------------
 (4) _PHY_Read                                             9     5      4     244
                                             24 COMRAM     9     5      4
                    _PHY_WaitForBusy
 ---------------------------------------------------------------------------------
 (5) _PHY_WaitForBusy                                      2     2      0     170
                                             22 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ARPV4_Init                                           1     1      0      99
                                             22 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _IPV4_GetMyIP                                         4     0      4       0
                                             22 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _DEMO_UDP_Send                                        7     7      0   21282
                                             71 BANK0      7     7      0
                  _ADC_GetConversion
              _DEMO_UDP_ClaimIPCheck
                           _UDP_Send
                          _UDP_Start
                        _UDP_Write32
                         _UDP_Write8
 ---------------------------------------------------------------------------------
 (6) _UDP_Write8                                           1     1      0      62
                                             23 COMRAM     1     1      0
                         _ETH_Write8
 ---------------------------------------------------------------------------------
 (2) _UDP_Write32                                          4     0      4    1604
                                             26 COMRAM     4     0      4
                        _ETH_Write32
 ---------------------------------------------------------------------------------
 (7) _UDP_Start                                            9     1      8   11422
                                             46 COMRAM     1     1      0
                                             63 BANK0      8     0      8
                 _ETH_ResetByteCount
                        _ETH_Write16
                         _IPv4_Start
 ---------------------------------------------------------------------------------
 (5) _IPv4_Start                                          20    15      5    8406
                                             33 COMRAM    13     8      5
                                             56 BANK0      7     7      0
                       _ARPV4_Lookup
                      _ARPV4_Request
                        _ETH_Write16
                        _ETH_Write32
                         _ETH_Write8
                     _ETH_WriteStart
 ---------------------------------------------------------------------------------
 (6) _ETH_Write8                                           1     1      0      31
                                             22 COMRAM     1     1      0
                     _ETH_EdataWrite
 ---------------------------------------------------------------------------------
 (6) _ETH_Write32                                          4     0      4    1483
                                             22 COMRAM     4     0      4
                     _ETH_EdataWrite
 ---------------------------------------------------------------------------------
 (6) _ETH_Write16                                          2     0      2    1235
                                             22 COMRAM     2     0      2
                     _ETH_EdataWrite
 ---------------------------------------------------------------------------------
 (6) _ARPV4_Request                                       60    56      4    3583
                                             28 COMRAM     4     0      4
                                              0 BANK0     56    56      0
                         _ETH_GetMAC
                           _ETH_Send
                     _ETH_WriteBlock
                     _ETH_WriteStart
 ---------------------------------------------------------------------------------
 (6) _ETH_WriteStart                                       6     2      4     791
                                             22 COMRAM     6     2      4
                     _ETH_EdataWrite
                 _ETH_ResetByteCount
 ---------------------------------------------------------------------------------
 (7) _ETH_ResetByteCount                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ETH_WriteBlock                                       6     2      4    1546
                                             22 COMRAM     6     2      4
                     _ETH_EdataWrite
 ---------------------------------------------------------------------------------
 (7) _ETH_GetMAC                                           1     1      0     345
                                             22 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _ARPV4_Lookup                                        11     7      4     257
                                             22 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (7) _UDP_Send                                             9     9      0    7897
                                             20 BANK0      9     9      0
                   _ETH_GetByteCount
                         _ETH_Insert
              _ETH_TxComputeChecksum
                          _IPV4_Send
 ---------------------------------------------------------------------------------
 (5) _IPV4_Send                                           11     9      2    3995
                                             48 COMRAM     2     0      2
                                             11 BANK0      9     9      0
                         _ETH_Insert
                           _ETH_Send
              _ETH_TxComputeChecksum
 ---------------------------------------------------------------------------------
 (6) _ETH_TxComputeChecksum                               23    17      6    2058
                                             36 COMRAM    12     6      6
                                              0 BANK0     11    11      0
                _ETH_ComputeChecksum
 ---------------------------------------------------------------------------------
 (7) _ETH_ComputeChecksum                                 14    10      4     749
                                             22 COMRAM    14    10      4
                      _ETH_EdataRead
 ---------------------------------------------------------------------------------
 (8) _ETH_EdataRead                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ETH_Send                                             2     2      0      34
                                             22 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (6) _ETH_Insert                                           7     3      4    1426
                                             22 COMRAM     7     3      4
                     _ETH_EdataWrite
 ---------------------------------------------------------------------------------
 (7) _ETH_EdataWrite                                       1     1      0       0
 ---------------------------------------------------------------------------------
 (8) _ETH_GetByteCount                                     4     2      2      34
                                             22 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _DEMO_UDP_ClaimIPCheck                                2     2      0      37
                                             22 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _ADC_GetConversion                                    4     2      2      31
                                             22 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _DEMO_UDP_IPLockTimer                                 0     0      0      31
                _DEMO_UDP_SetClaimIP
 ---------------------------------------------------------------------------------
 (6) _DEMO_UDP_SetClaimIP                                  1     1      0      31
                                             22 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _low_isr                                             3     3      0     349
                                             19 COMRAM     3     3      0
                 i1_ETH_EventHandler
 ---------------------------------------------------------------------------------
 (13) i1_ETH_EventHandler                                  0     0      0     349
                  i1_ETH_CheckLinkUp
                         i1_PHY_Read
 ---------------------------------------------------------------------------------
 (14) i1_ETH_CheckLinkUp                                   4     4      0     186
                                             15 COMRAM     4     4      0
               i1_ETH_readLinkStatus
 ---------------------------------------------------------------------------------
 (15) i1_ETH_readLinkStatus                                4     0      4     163
                                             11 COMRAM     4     0      4
                         i1_PHY_Read
 ---------------------------------------------------------------------------------
 (14) i1_PHY_Read                                          9     5      4     163
                                              2 COMRAM     9     5      4
                  i1_PHY_WaitForBusy
 ---------------------------------------------------------------------------------
 (15) i1_PHY_WaitForBusy                                   2     2      0     115
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _high_isr                                            0     0      0       0
                       _rtcc_handler
 ---------------------------------------------------------------------------------
 (19) _rtcc_handler                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DEMO_UDP_IPLockTimer
     _DEMO_UDP_SetClaimIP
   _DEMO_UDP_Send
     _ADC_GetConversion
     _DEMO_UDP_ClaimIPCheck
     _UDP_Send
       _ETH_GetByteCount
       _ETH_Insert
         _ETH_EdataWrite
       _ETH_TxComputeChecksum
         _ETH_ComputeChecksum
           _ETH_EdataRead
       _IPV4_Send
         _ETH_Insert
           _ETH_EdataWrite
         _ETH_Send
         _ETH_TxComputeChecksum
           _ETH_ComputeChecksum
             _ETH_EdataRead
     _UDP_Start
       _ETH_ResetByteCount
       _ETH_Write16
         _ETH_EdataWrite
       _IPv4_Start
         _ARPV4_Lookup
         _ARPV4_Request
           _ETH_GetMAC
           _ETH_Send
           _ETH_WriteBlock
             _ETH_EdataWrite
           _ETH_WriteStart
             _ETH_EdataWrite
             _ETH_ResetByteCount
         _ETH_Write16
           _ETH_EdataWrite
         _ETH_Write32
           _ETH_EdataWrite
         _ETH_Write8
           _ETH_EdataWrite
         _ETH_WriteStart
           _ETH_EdataWrite
           _ETH_ResetByteCount
     _UDP_Write32
       _ETH_Write32
         _ETH_EdataWrite
     _UDP_Write8
       _ETH_Write8
         _ETH_EdataWrite
   _IPV4_GetMyIP
   _Network_Init
     _ARPV4_Init
     _ETH_Init
       _ETH_CheckLinkUp
         _ETH_readLinkStatus
           _PHY_Read
             _PHY_WaitForBusy
       _MAC_getAddress
       _PHY_Write
         _PHY_WaitForBusy
     _IPV4_Init
     _TCP_Init
     _time
   _Network_Manage
     _ARPV4_Update
     _DHCP_Manage
       _DHCP_Request
         _DHCP_WriteZeros
           _ETH_Write8
             _ETH_EdataWrite
         _ETH_GetMAC
         _ETH_Write16
           _ETH_EdataWrite
         _ETH_Write32
           _ETH_EdataWrite
         _ETH_Write8
           _ETH_EdataWrite
         _ETH_WriteBlock
           _ETH_EdataWrite
         _UDP_Send
           _ETH_GetByteCount
           _ETH_Insert
             _ETH_EdataWrite
           _ETH_TxComputeChecksum
             _ETH_ComputeChecksum
               _ETH_EdataRead
           _IPV4_Send
             _ETH_Insert
               _ETH_EdataWrite
             _ETH_Send
             _ETH_TxComputeChecksum
               _ETH_ComputeChecksum
                 _ETH_EdataRead
         _UDP_Start
           _ETH_ResetByteCount
           _ETH_Write16
             _ETH_EdataWrite
           _IPv4_Start
             _ARPV4_Lookup
             _ARPV4_Request
               _ETH_GetMAC
               _ETH_Send
               _ETH_WriteBlock
                 _ETH_EdataWrite
               _ETH_WriteStart
                 _ETH_EdataWrite
                 _ETH_ResetByteCount
             _ETH_Write16
               _ETH_EdataWrite
             _ETH_Write32
               _ETH_EdataWrite
             _ETH_Write8
               _ETH_EdataWrite
             _ETH_WriteStart
               _ETH_EdataWrite
               _ETH_ResetByteCount
     _ETH_EventHandler
       _ETH_CheckLinkUp
         _ETH_readLinkStatus
           _PHY_Read
             _PHY_WaitForBusy
       _PHY_Read
         _PHY_WaitForBusy
     _Network_Read
       _ARPV4_Packet
         _ETH_GetMAC
         _ETH_ReadBlock
           _ETH_EdataRead
         _ETH_Send
         _ETH_WriteBlock
           _ETH_EdataWrite
         _ETH_WriteStart
           _ETH_EdataWrite
           _ETH_ResetByteCount
       _ETH_Flush
       _ETH_NextPacketUpdate
         _ETH_EdataRead
       _ETH_ReadBlock
         _ETH_EdataRead
       _IPV4_Packet
         _ETH_Dump
         _ETH_ReadBlock
           _ETH_EdataRead
         _ETH_RxComputeChecksum
           _ETH_ComputeChecksum
             _ETH_EdataRead
         _ICMP_Receive
           _ETH_ReadBlock
             _ETH_EdataRead
           _ETH_SaveRDPT
           _ICMP_EchoReply
             _ETH_Copy
               _SYSLOG_Write
                 _printf
                   __doprnt
                     Absolute function(Fake) *
                     ___lwdiv *
                     ___lwmod *
                       ___lwdiv (ARG)
                     _putch *
                 _time
               ___wmul
             _ETH_Insert
               _ETH_EdataWrite
             _ETH_SaveRDPT
             _ETH_TxComputeChecksum
               _ETH_ComputeChecksum
                 _ETH_EdataRead
             _ETH_Write16
               _ETH_EdataWrite
             _IPV4_Send
               _ETH_Insert
                 _ETH_EdataWrite
               _ETH_Send
               _ETH_TxComputeChecksum
                 _ETH_ComputeChecksum
                   _ETH_EdataRead
             _IPv4_Start
               _ARPV4_Lookup
               _ARPV4_Request
                 _ETH_GetMAC
                 _ETH_Send
                 _ETH_WriteBlock
                   _ETH_EdataWrite
                 _ETH_WriteStart
                   _ETH_EdataWrite
                   _ETH_ResetByteCount
               _ETH_Write16
                 _ETH_EdataWrite
               _ETH_Write32
                 _ETH_EdataWrite
               _ETH_Write8
                 _ETH_EdataWrite
               _ETH_WriteStart
                 _ETH_EdataWrite
                 _ETH_ResetByteCount
         _IPV4_PseudoHeaderChecksum
         _TCP_Recv
           _ETH_ReadBlock
             _ETH_EdataRead
           _TCP_FiniteStateMachine
             _TCB_Reset
             _TCP_PayloadSave
               _ETH_ReadBlock
                 _ETH_EdataRead
               _TCP_Snd
                 _ETH_Insert
                   _ETH_EdataWrite
                 _ETH_TxComputeChecksum
                   _ETH_ComputeChecksum
                     _ETH_EdataRead
                 _ETH_WriteBlock
                   _ETH_EdataWrite
                 _IPV4_Send
                   _ETH_Insert
                     _ETH_EdataWrite
                   _ETH_Send
                   _ETH_TxComputeChecksum
                     _ETH_ComputeChecksum
                       _ETH_EdataRead
                 _IPv4_Start
                   _ARPV4_Lookup
                   _ARPV4_Request
                     _ETH_GetMAC
                     _ETH_Send
                     _ETH_WriteBlock
                       _ETH_EdataWrite
                     _ETH_WriteStart
                       _ETH_EdataWrite
                       _ETH_ResetByteCount
                   _ETH_Write16
                     _ETH_EdataWrite
                   _ETH_Write32
                     _ETH_EdataWrite
                   _ETH_Write8
                     _ETH_EdataWrite
                   _ETH_WriteStart
                     _ETH_EdataWrite
                     _ETH_ResetByteCount
             _TCP_Snd
               _ETH_Insert
                 _ETH_EdataWrite
               _ETH_TxComputeChecksum
                 _ETH_ComputeChecksum
                   _ETH_EdataRead
               _ETH_WriteBlock
                 _ETH_EdataWrite
               _IPV4_Send
                 _ETH_Insert
                   _ETH_EdataWrite
                 _ETH_Send
                 _ETH_TxComputeChecksum
                   _ETH_ComputeChecksum
                     _ETH_EdataRead
               _IPv4_Start
                 _ARPV4_Lookup
                 _ARPV4_Request
                   _ETH_GetMAC
                   _ETH_Send
                   _ETH_WriteBlock
                     _ETH_EdataWrite
                   _ETH_WriteStart
                     _ETH_EdataWrite
                     _ETH_ResetByteCount
                 _ETH_Write16
                   _ETH_EdataWrite
                 _ETH_Write32
                   _ETH_EdataWrite
                 _ETH_Write8
                   _ETH_EdataWrite
                 _ETH_WriteStart
                   _ETH_EdataWrite
                   _ETH_ResetByteCount
           _TCP_ParseTCPOptions
             _ETH_Dump
             _ETH_Read16
               _ETH_EdataRead
             _ETH_Read8
               _ETH_EdataRead
         _UDP_Receive
           _DEMO_UDP_IdlePkt *
             _UDP_ReadBlock
               _ETH_ReadBlock
                 _ETH_EdataRead
           _DEMO_UDP_Recv *
             _DEMO_UDP_ClaimIPCheck
             _DEMO_UDP_MeasureTemp
               _ADC_GetConversion
             _DEMO_UDP_SetClaimIP
             _UDP_GetDestIP
             _UDP_GetDestPort
             _UDP_Read8
               _ETH_Read8
                 _ETH_EdataRead
             _UDP_ReadBlock
               _ETH_ReadBlock
                 _ETH_EdataRead
             _UDP_Send
               _ETH_GetByteCount
               _ETH_Insert
                 _ETH_EdataWrite
               _ETH_TxComputeChecksum
                 _ETH_ComputeChecksum
                   _ETH_EdataRead
               _IPV4_Send
                 _ETH_Insert
                   _ETH_EdataWrite
                 _ETH_Send
                 _ETH_TxComputeChecksum
                   _ETH_ComputeChecksum
                     _ETH_EdataRead
             _UDP_Start
               _ETH_ResetByteCount
               _ETH_Write16
                 _ETH_EdataWrite
               _IPv4_Start
                 _ARPV4_Lookup
                 _ARPV4_Request
                   _ETH_GetMAC
                   _ETH_Send
                   _ETH_WriteBlock
                     _ETH_EdataWrite
                   _ETH_WriteStart
                     _ETH_EdataWrite
                     _ETH_ResetByteCount
                 _ETH_Write16
                   _ETH_EdataWrite
                 _ETH_Write32
                   _ETH_EdataWrite
                 _ETH_Write8
                   _ETH_EdataWrite
                 _ETH_WriteStart
                   _ETH_EdataWrite
                   _ETH_ResetByteCount
             _UDP_Write16
               _ETH_Write16
                 _ETH_EdataWrite
             _UDP_Write8
               _ETH_Write8
                 _ETH_EdataWrite
             _UDP_WriteBlock
               _ETH_WriteBlock
                 _ETH_EdataWrite
             _lcd_clear
               _lcd_write_ctrl
             _lcd_goto1
               _lcd_busy
               _lcd_write_ctrl
             _lcd_goto2
               _lcd_busy
               _lcd_write_ctrl
             _lcd_puts
               _lcd_putch
                 _lcd_busy
                 _lcd_write_data
             _memset
           _DHCP_Handler *
             _DHCP_Request
               _DHCP_WriteZeros
                 _ETH_Write8
                   _ETH_EdataWrite
               _ETH_GetMAC
               _ETH_Write16
                 _ETH_EdataWrite
               _ETH_Write32
                 _ETH_EdataWrite
               _ETH_Write8
                 _ETH_EdataWrite
               _ETH_WriteBlock
                 _ETH_EdataWrite
               _UDP_Send
                 _ETH_GetByteCount
                 _ETH_Insert
                   _ETH_EdataWrite
                 _ETH_TxComputeChecksum
                   _ETH_ComputeChecksum
                     _ETH_EdataRead
                 _IPV4_Send
                   _ETH_Insert
                     _ETH_EdataWrite
                   _ETH_Send
                   _ETH_TxComputeChecksum
                     _ETH_ComputeChecksum
                       _ETH_EdataRead
               _UDP_Start
                 _ETH_ResetByteCount
                 _ETH_Write16
                   _ETH_EdataWrite
                 _IPv4_Start
                   _ARPV4_Lookup
                   _ARPV4_Request
                     _ETH_GetMAC
                     _ETH_Send
                     _ETH_WriteBlock
                       _ETH_EdataWrite
                     _ETH_WriteStart
                       _ETH_EdataWrite
                       _ETH_ResetByteCount
                   _ETH_Write16
                     _ETH_EdataWrite
                   _ETH_Write32
                     _ETH_EdataWrite
                   _ETH_Write8
                     _ETH_EdataWrite
                   _ETH_WriteStart
                     _ETH_EdataWrite
                     _ETH_ResetByteCount
             _ETH_Dump
             _ETH_GetMAC
             _ETH_Read16
               _ETH_EdataRead
             _ETH_Read32
               _ETH_EdataRead
             _ETH_Read8
               _ETH_EdataRead
             _ETH_ReadBlock
               _ETH_EdataRead
             _memcmp
           _ETH_ReadBlock *
             _ETH_EdataRead
       _sprintf
         __doprnt
           Absolute function(Fake) *
           ___lwdiv *
           ___lwmod *
             ___lwdiv (ARG)
           _putch *
     _TCP_Update
       _TCP_FiniteStateMachine
         _TCB_Reset
         _TCP_PayloadSave
           _ETH_ReadBlock
             _ETH_EdataRead
           _TCP_Snd
             _ETH_Insert
               _ETH_EdataWrite
             _ETH_TxComputeChecksum
               _ETH_ComputeChecksum
                 _ETH_EdataRead
             _ETH_WriteBlock
               _ETH_EdataWrite
             _IPV4_Send
               _ETH_Insert
                 _ETH_EdataWrite
               _ETH_Send
               _ETH_TxComputeChecksum
                 _ETH_ComputeChecksum
                   _ETH_EdataRead
             _IPv4_Start
               _ARPV4_Lookup
               _ARPV4_Request
                 _ETH_GetMAC
                 _ETH_Send
                 _ETH_WriteBlock
                   _ETH_EdataWrite
                 _ETH_WriteStart
                   _ETH_EdataWrite
                   _ETH_ResetByteCount
               _ETH_Write16
                 _ETH_EdataWrite
               _ETH_Write32
                 _ETH_EdataWrite
               _ETH_Write8
                 _ETH_EdataWrite
               _ETH_WriteStart
                 _ETH_EdataWrite
                 _ETH_ResetByteCount
         _TCP_Snd
           _ETH_Insert
             _ETH_EdataWrite
           _ETH_TxComputeChecksum
             _ETH_ComputeChecksum
               _ETH_EdataRead
           _ETH_WriteBlock
             _ETH_EdataWrite
           _IPV4_Send
             _ETH_Insert
               _ETH_EdataWrite
             _ETH_Send
             _ETH_TxComputeChecksum
               _ETH_ComputeChecksum
                 _ETH_EdataRead
           _IPv4_Start
             _ARPV4_Lookup
             _ARPV4_Request
               _ETH_GetMAC
               _ETH_Send
               _ETH_WriteBlock
                 _ETH_EdataWrite
               _ETH_WriteStart
                 _ETH_EdataWrite
                 _ETH_ResetByteCount
             _ETH_Write16
               _ETH_EdataWrite
             _ETH_Write32
               _ETH_EdataWrite
             _ETH_Write8
               _ETH_EdataWrite
             _ETH_WriteStart
               _ETH_EdataWrite
               _ETH_ResetByteCount
     _time
   _Network_WaitForLink
     _ETH_CheckLinkUp
       _ETH_readLinkStatus
         _PHY_Read
           _PHY_WaitForBusy
   _SYSLOG_Init
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         _putch *
     _time
   _SYSLOG_Write
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         _putch *
     _time
   _initHW
     _ADC_Initialize
     _LED_Init
     _lcd_init
       _lcd_busy
       _lcd_init_pins
       _lcd_write_ctrl
     _rtcc_init
     _spi_init
     _uart_init
   _lcd_goto1
     _lcd_busy
     _lcd_write_ctrl
   _lcd_puts
     _lcd_putch
       _lcd_busy
       _lcd_write_data
   _memset
   _sprintf
     __doprnt
       Absolute function(Fake) *
       ___lwdiv *
       ___lwmod *
         ___lwdiv (ARG)
       _putch *
   _time

 _low_isr (ROOT)
   i1_ETH_EventHandler
     i1_ETH_CheckLinkUp
       i1_ETH_readLinkStatus
         i1_PHY_Read
           i1_PHY_WaitForBusy
     i1_PHY_Read
       i1_PHY_WaitForBusy

 _high_isr (ROOT)
   _rtcc_handler

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E7D      0       0      38        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      30        0.0%
BANK12             100      0       0      28        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100     35      FB       9       98.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     BF      E7       7       90.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     A0      A0       5      100.0%
BITBANK14           7E      0       0      33        0.0%
BANK14              7E      0       0      34        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BIGRAM_1            60      0       0      37        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     32      48       1       76.6%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2CA      29        0.0%
DATA                 0      0     2CA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Wed Sep 09 15:11:43 2015

                         __CFG_BW$16 000000                 __end_of_DHCP_Handler 3FE6  
                                 l33 60AA                                   bsr 000FE0  
                 UDP_WriteBlock@data 001F                  ___wmul@multiplicand 0019  
               i1PHY_WaitForBusy@ret 0001                     ??_ICMP_EchoReply 00A1  
        ??_IPV4_PseudoHeaderChecksum 0019                       ??_ICMP_Receive 00B1  
                       __CFG_CP0$OFF 000000                                  l350 6364  
                                l512 0036                                  l504 0004  
                                l600 5260                                  l521 544A  
                                l506 001A                                  l530 5E1A  
                                l507 0018                                  l347 635C  
                                l611 52D8                                  l603 526A  
                                l531 5E1E                                  l460 0008  
                                l620 5586                                  l525 6046  
                                l518 5446                                  l470 4D06  
                                l463 0004                                  l519 5436  
                                l607 52D0                                  l535 5A32  
                                l544 59E4                                  l608 52CE  
                                l536 5A36                                  l617 551C  
                                WREG 000FE8                                  l476 0016  
                                l484 5CDC                                  l805 3F66  
                                l807 3F6C                                  l680 356A  
                                l489 5CE8                                  l594 5B12  
                                l764 44D4               __size_of_ETH_EdataRead 0000  
                                l765 4558                                  l599 5262  
                                l944 4698                                  _EIE 000EFB  
                                _GIE 007F97                          ?_ETH_GetMAC 0001  
               __end_of_DHCP_Request 45E6                   ICMP_EchoReply@cksm 00A9  
            IPv4_Start@targetAddress 0098                          ?_ETH_Read32 0017  
                        ?_ETH_Read16 0017                         UDP_Start@ret 002F  
                                prod 000FF3                 TCP_Snd@tcpDataLength 00D8  
              ??_ETH_ComputeChecksum 001B                                  tosl 000FFD  
                                wreg 000FE8                          ?_ETH_Insert 0017  
                       __CFG_IESO$ON 000000                      ??_UDP_ReadBlock 0024  
                       __CFG_MODE$MM 000000        __size_of_DEMO_UDP_IPLockTimer 0014  
                        ?_ETH_Write8 0001                                 EDATA 000F61  
                     _ipv4SubnetMask 0224                                 PL501 246A  
                               PL511 3D0E                                 PL503 2484  
                               PL431 22DA                                 PL601 4428  
                               PL521 24B4                                 PL513 249A  
                               PL505 305A                                 PL441 48E2  
                               PL433 2A0E                                 PL611 3D52  
                               PL603 2B76                                 PL531 3D26  
                               PL523 24C6                                 PL515 49C0  
                               PL507 3CFE                                 PL451 3042  
                               PL443 2312                                 PL435 22E4  
                               PL701 4244                                 PL621 3A64  
                               PL613 4B88                                 PL605 2B90  
                               PL541 3730                                 PL533 39E6  
                               PL525 4E06                                 PL517 24A4  
                               PL509 2490                                 PL461 23A2  
                               PL453 3384                                 PL445 232E  
                               PL437 22EC                                 PL429 22C2  
                               PL711 4A4A                                 PL703 5910  
                               PL631 2BC2                                 PL623 5B2C  
                               PL615 2BAA                                 PL607 3A54  
                               PL551 4B68                                 PL543 24EA  
                               PL535 4E12                                 PL527 5136  
                               PL519 24AC                                 PL471 23D8  
                               PL463 23AA                                 PL455 421C  
                               PL447 2340                                 PL439 2306  
                               PL721 2C62                                 PL713 2C56  
                               PL705 4A3E                                 PL641 252C  
                               PL633 3D62                                 PL625 5980  
                               PL617 3D5A                                 PL609 4A10  
                               PL561 45E6                                 PL553 2506  
                               PL545 2AA4                                 PL537 24D8  
                               PL529 2A8A                                 PL481 2A28  
                               PL473 23E0                                 PL465 36BE  
                               PL457 43FE                                 PL449 2380  
                               PL731 3D88                                 PL723 4BAA  
                               PL715 4F2E                                 PL707 5248  
                               PL651 4CE2                                 PL643 3FE6  
                               PL635 343E                                 PL627 4A28  
                               PL619 37A2                                 PL571 2AAE  
                               PL563 3D32                                 PL555 250E  
                               PL547 24FC                                 PL539 33FC  
                               PL491 243E                                 PL483 23F0  
                               PL475 23E8                                 PL467 23B2  
                               PL459 239A                                 PL741 445A  
                               PL733 3A7A                                 PL725 6134  
                               PL717 630E                                 PL709 3092  
                               PL661 4BA0                                 PL653 307C  
                               PL645 2BD0                                 PL637 5140  
                               PL629 4236                                 PL581 2AD8  
                               PL573 3788                                 PL565 3A0E  
                               PL557 2516                                 PL549 3758  
                               PL493 2446                                 PL485 240A  
                               PL477 3986                                 PL469 23BC  
                               PL751 2C6C                                 PL743 255C  
                               PL735 3A84                                 PL727 4A56  
                               PL719 5640                                 PL671 45F8  
                               PL663 559E                                 PL655 2534  
                               PL647 2BE2                                 PL639 5F8E  
                               PL591 2B28                                 PL583 3A20  
                               PL575 2ABC                                 PL567 441A  
                               PL559 376C                                 PL495 4F16  
                               PL487 2424                                 PL479 339E  
                               PL761 37AC                                 PL753 3460  
                               PL745 4788                                 PL737 5154  
                               PL729 3D7E                                 PL681 52FC  
                               PL673 4442                                 PL665 576A  
                               PL657 253E                                 PL649 2BF4  
                               PL593 2B42                                 PL585 3D44  
                               PL577 5878                                 PL569 251E  
                               PL497 244E                                 PL489 2A7C  
                               PL771 2C88                                 PL763 5CF4  
                               PL755 346A                                 PL747 5048  
                               PL739 3A8E                                 PL691 4602  
                               PL683 2C30                                 PL675 604E  
                               PL667 2C16                                 PL659 2C06  
                               PL595 49F6                                 PL587 2AF4  
                               PL579 3424                                 PL499 245C  
                               PL781 5FFA                                 PL773 3FF8  
                               PL765 4F3A                                 PL757 2C76  
                               PL749 3A98                                 PL693 3452  
                               PL685 523A                                 PL677 3D70  
                               PL669 2C20                                 PL597 3A3A  
                               PL589 2B0E                                 PL783 5D04  
                               PL775 5CFC                                 PL767 3D92  
                               PL759 3AA2                                 PL695 5E28  
                               PL687 444C                                 PL679 254E  
                               PL599 2B5C                                 PL785 5D0C  
                               PL777 5646                                 PL769 2C80  
                               PL697 3088                                 PL689 2C3E  
                               PL787 5CBE                                 PL779 545C  
                               PL699 2C4C                                 PL789 5506  
          TCP_FiniteStateMachine@ret 010C                      ?_Network_Manage 0001  
                       __CFG_WDT$OFF 000000                                 l1121 2846  
                               l1017 6476                                 l1202 1280  
                               l1123 2762                                 l1124 278C  
                               l1150 4FDA                                 l1151 4FD4  
                               l1162 5044                                 l1183 32BA  
                               l1177 3206                                 l1187 32F6  
                               l1179 327E                                 l1462 5134  
                               l1480 000C                                 l1552 4C46  
                               l2177 5D9E                                 l1706 3040  
                               l1483 0014                                 l2187 5EEA  
                               l1732 3CF8                                 l1468 0004  
                               l1660 2D98                                 l1477 0008  
                               l1486 0014                                 l1670 2DF8  
                               l1727 3AE6                                 l1680 2E58  
                               l1665 2DC8                                 l1690 2EB8  
                               l1675 2E28                                 l1685 2E88  
                               l1695 2EE8                                 l8003 5E9E  
                               l8101 3B44                                 l8111 3B84  
                               l8103 3B4A                                 l8115 3B8A  
                               l8221 5AE0                                 l8109 3B68  
                               l8117 3BAC                                 l8071 5C18  
                               l8055 49BC                                 l8143 3BF4  
                               l8135 3BD6                                 l8127 3BCC  
                               l8065 5BEA                                 l8217 5AC2  
                               l8161 3C24                                 l8129 3BD2  
                               l9025 16F0                                 l9009 1666  
                               l8251 46E2                                 l8171 3C5A  
                               l8091 3AEE                                 l9051 183C  
                               l8405 585E                                 l8245 46A8  
                               l8237 461E                                 l8341 5998  
                               l8181 3CAA                                 l8173 3C60  
                               l8149 3BF8                                 l8085 3ADC  
                               l9213 20E6                                 l9141 1F62  
                               l9133 1EC4                                 l9109 1E1E  
                               l9037 1716                                 l8333 604A  
                               l8255 46E8                                 l8511 0024  
                               l8175 3C88                                 l8183 3CB8  
                               l8191 3CE6                                 l8167 3C52  
                               l8159 3C16                                 l8079 3AB0  
                               l9223 2148                                 l9215 20F0  
                               l9207 20D8                                 l9127 1EAA  
                               l9119 1E88                                 l9071 1A24  
                               l9039 1744                                 l9311 2D06  
                               l8257 46F4                                 l8513 0028  
                               l8505 0006                                 l8353 59D6  
                               l8097 3B0C                                 l8089 3AEA  
                               l8193 3CEC                                 l8425 271E  
                               l9241 2194                                 l9065 198C  
                               l9049 1822                                 l9321 2D34  
                               l9313 2D0E                                 l7811 0000  
                               l8515 0032                                 l8507 0008  
                               l8187 3CDE                                 l9171 203E  
                               l9163 1FEE                                 l9155 1F9C  
                               l9067 1A12                                 l7805 0000  
                               l8517 0034                                 l8509 0012  
                               l9237 2182                                 l9173 2046  
                               l9157 1FC6                                 l9093 1C6E  
                               l9077 1B66                                 l9069 1A18  
                               l9261 2232                                 l9405 2EBC  
                               l9309 2D00                                 l7807 0004  
                               l7823 5D1C                                 l8383 63BC  
                               l8463 29A2                                 l9167 201A  
                               l9095 1C96                                 l9079 1B6A  
                               l9263 2288                                 l9415 2EEC  
                               l9335 2D6C                                 l8705 63DC  
                               l8377 5BDC                                 l8385 63C2  
                               l9513 5690                                 l8465 2A08  
                               l8449 28D8                                 l8457 2922  
                               l9257 2224                                 l9249 21F4  
                               l9193 209E                                 l8545 6070  
                               l8633 5C32                                 l8641 5C66  
                               l9345 2D9C                                 l9329 2D62  
                               l7915 553E                                 l7827 5D42  
                               l8571 52EE                                 l9187 2080  
                               l9611 3264                                 l8803 3F78  
                               l8811 3F9A                                 l9275 6126  
                               l9355 2DCC                                 l8709 63E2  
                               l9189 2096                                 l8485 62FE  
                               l8805 3F88                                 l8813 3FB6  
                               l9453 2F96                                 l9365 2DFC  
                               l7927 5562                                 l9703 34A0  
                               l8559 52A6                                 l9519 56B2  
                               l8911 503A                                 l9623 32DC  
                               l8639 5C62                                 l8815 3FC6  
                               l8807 3F8E                                 l9279 612C  
                               l9447 2F7E                                 l9375 2E2C  
                               l9713 34E0                                 l7961 5D7A  
                               l8657 4290                                 l8913 5040  
                               l9617 32A0                                 l8489 6308  
                               l9385 2E5C                                 l9289 2CAA  
                               l9473 2FF4                                 l9537 5078  
                               l9801 38C8                                 l8683 0002  
                               l8499 0000                                 l9475 0000  
                               l8595 44CE                                 l8659 42C8  
                               l8923 1104                                 l8907 501C  
                               l9627 3312                                 l8771 3EDC  
                               l8819 3FD4                                 l9395 2E8C  
                               l9555 511E                                 l9733 3544  
                               l7957 5D6E                                 l7981 5ECE  
                               l8853 4B64                                 l8909 502A  
                               l9581 3116                                 l8685 0000  
                               l8773 3EF2                                 l8765 3E9E  
                               l9549 50B6                                 l9719 34EE  
                               l7959 5D76                                 l9495 5C8C  
                               l9591 3196                                 l8679 0000  
                               l8687 0002                                 l8695 6174  
                               l8791 3F50                                 l8783 3F2C  
                               l9903 62A0                                 l7969 5D94  
                               l7985 5EE0                                 l7977 5EC2  
                               l8945 1294                                 l8937 1272  
                               l8785 3F34                                 l8769 3EC6  
                               l9817 3920                                 l9809 38F6  
                               l9833 3974                                 l9683 5B1C  
                               l7979 5ECA                                 l9499 5C9A  
                               l8947 12A4                                 l8891 4FE2  
                               l8875 4F90                                 l8867 4F78  
                               l9595 31AA                                 l9587 315A  
                               l8699 6184                                 l9749 35C8  
                               l9685 5B28                                 l8965 137A  
                               l8877 4F96                                 l8869 4F80  
                               l9829 3968                                 l9781 37D0  
                               l7999 5E90                                 l8799 3F72  
                               STR_1 1081                                 STR_2 10B3  
                               l9793 3872                                 STR_3 1043  
                               STR_4 10A9                                 l8987 14FC  
                               l8979 14B4                                 l9787 37E8  
                               STR_5 1070                                 STR_6 1090  
                               STR_7 109D                                 STR_8 10BB  
                               l8999 1626                                 STR_9 105F  
                               l9999 6370                                 _GIEH 007F97  
                               _GIEL 007F96                                 _LATE 000F8D  
                               _LATH 000F90                                 _LATJ 000F91  
                               _IPEN 007E87                                 _MIRD 000EB8  
                               _MIWR 000EB6                    ??_PHY_WaitForBusy 0017  
                               _TMR1 000FCE                      lcd_write_data@d 0017  
            __size_of_ETH_EdataWrite 0000                         lcd_goto1@pos 0018  
                       lcd_goto2@pos 0018                        __CFG_FCMEN$ON 000000  
                  DEMO_UDP_Recv@str1 00D1                    DEMO_UDP_Recv@str2 00E1  
                       __CFG_STVR$ON 000000               __end_of_lcd_write_data 62DC  
                    __end_of_TCP_Snd 2A0E                                 _data 01E5  
             __end_of_lcd_write_ctrl 62FC                __end_of_DEMO_UDP_Recv 3042  
                    _TCP_PayloadSave 424E                __end_of_DEMO_UDP_Send 523A  
                    lcd_write_ctrl@c 0017                                 _main 4BB4  
                               _time 5A9E                                 fsr0h 000FEA  
                               fsr1h 000FE2                                 indf0 000FEF  
                               fsr0l 000FE9                                 fsr2h 000FDA  
                               fsr1l 000FE1                                 indf2 000FDF  
                               fsr2l 000FD9                                 btemp 0049  
     __size_of_DEMO_UDP_ClaimIPCheck 0018                          _SYSLOG_Init 6000  
      __end_of_DEMO_UDP_ClaimIPCheck 63EA                                 prodh 000FF4  
                               prodl 000FF3                                 start 003A  
             ??_DEMO_UDP_MeasureTemp 001D                 UDP_WriteBlock@length 001D  
                      __CFG_FOSC2$ON 000000                      ETH_EdataWrite@d 0001  
                       ?_IPV4_Packet 0001                   __size_of_ETH_Read8 0020  
                  i1_ETH_CheckLinkUp 60B8                   __size_of_ETH_Flush 003A  
             __size_of_ETH_ReadBlock 0064                         ___param_bank 000010  
              __size_of_SYSLOG_Write 0026                   __size_of_IPV4_Init 000A  
                        ?i1_PHY_Read 0003                   __size_of_IPV4_Send 0066  
                       ?_ETH_Write32 0017                         ?_ETH_Write16 0017  
         __size_ofi1_PHY_WaitForBusy 0000                   ?i1_ETH_CheckLinkUp 0001  
                   ARPV4_Request@ret 007B                  __size_of_ARPV4_Init 001A  
           __size_of_ETH_CheckLinkUp 002C              ?_TCP_FiniteStateMachine 0001  
                   __end_of_LED_Init 62BC                         _BAUDCON1bits 000F7E  
                      __CFG_WAIT$OFF 000000                     _ETH_GetByteCount 631A  
                     __CFG_CCP2MX$ON 000000                                l10011 619E  
                              l10033 58BC                                l10121 41C8  
                              l10105 4018                                l10203 6434  
                              l10043 58D4                                l10035 58C2  
                              l10107 4022                                l10029 58B4  
                              l10125 41F2                                l10055 5904  
                              l10039 58CC                                l10129 0000  
                              l10049 58EE                                l10401 53AC  
                              l10073 5350                                l10081 5386  
                              l10227 51D8                                l10219 5182  
                   __end_of_ETH_Copy 52FC                                l10403 53B0  
                              l10075 5358                                l10237 5230  
                              l10077 5360                                l10261 4BEC  
                              l10175 6478                                l10263 4BF8  
                              l10193 5758                                l10189 5728  
                              l10287 4CB8                     __end_of_ETH_Dump 608A  
                              l10399 53A2                     __end_of_ETH_Init 4E06  
                  _nextPacketPointer 0041                     __end_of_ETH_Send 616A  
                              ?_main 0001                                _ADRES 000FC3  
                              _ECON1 000FD2                                _ECON2 000EFE  
                              ?_time 0017  IPV4_PseudoHeaderChecksum@payloadLen 0017  
                              _CREN1 007D5C                                u11000 4E68  
                              u11010 4E82                                u11020 4E9C  
                              u11030 4EB6                                u11007 4E62  
                              u11040 4ED0                                u12000 285C  
                              u11017 4E7C                                u12010 28A2  
                              u11027 4E96                                u11300 3B60  
                              u12100 29B8                                u11037 4EB0  
                              u11310 3B7C                                u12110 2A08  
                              u11047 4ECA                                u12007 2856  
                              u13000 12DC                                u12017 288E  
                              u11170 4936                                u12130 0012  
                              u12050 293A                                u13010 12F2  
                              u12131 0010                                u11307 3B5A  
                              u12107 29B0                                u11180 4966  
                              u12140 0024                                u12060 296E  
                              u13100 13E6                                u13020 130C  
                              u12141 0022                                u11317 3B76  
                              u12117 29F4                                u11510 462C  
                              u12150 0032                                u12070 2982  
                              u13110 1402                                u13030 1326  
                              u11175 4934                                u12151 0030  
                              u13007 12D4                                u11520 463C  
                              u11600 59C4                                u12400 486A  
                              u13200 14EA                                u13120 141E  
                              u13040 1340                                u12160 5E00  
                              u11185 4964                                u12057 2934  
                              u14001 1CF0                                u13017 12EA  
                              u11418 3C3E                                u11290 3B42  
                              u11258 3AC6                                u12410 4880  
                              u12330 47B0                                u12090 29A0  
                              u14010 1D04                                u13130 1438  
                              u13050 135C                                u12170 5A02  
                              u12067 2966                                u13107 13DE  
                              u13027 1304                                u11460 5AC0  
                              u12420 4894                                u12340 47C6  
                              u11700 25FA                                u12500 42C8  
                              u14100 1DE8                                u13300 15EE  
                              u13220 1516                                u13140 1456  
                              u13060 1378                                u12077 297C  
                              u13117 13FA                                u13037 131E  
                              u11438 3CC8                                u12430 48A8  
                              u12350 47E4                                u11710 260E  
                              u12510 42EA                                u14030 1D2C  
                              u13310 1608                                u13230 1530  
                              u13150 146C                                u13070 1394  
                              u11607 59BC                                u12407 4862  
                              u13207 14E2                                u13127 1416  
                              u13047 1338                                u11288 3B1C  
                              u12440 48C8                                u12360 4802  
                              u11800 26D4                                u11720 2622  
                              u12520 4308                                u14120 1E04  
                              u13320 1622                                u13160 1486  
                              u13080 13AE                                u11297 3B3C  
                              u12417 4878                                u12337 47A8  
                              u12097 2998                                u14017 1D00  
                              u13241 154C                                u13137 1430  
                              u13057 1354                                u12450 48E0  
                              u12370 4820                                u11810 26E8  
                              u11730 2636                                u12530 4324  
                              u14210 1EC2                                u14050 1D5C  
                              u13410 16CA                                u13330 1640  
                              u13250 1568                                u12427 488E  
                              u12347 47BE                                u11707 25F2  
                              u12507 42BC                                u14107 1DDE  
                              u13307 15E6                                u13227 150E  
                              u13147 144E                                u13091 13CA  
                              u13067 1370                                u10940 5D3A  
                              u12380 483E                                u11820 270E  
                              u11740 2A42                                u11660 2586  
                              u12540 4336                                u12460 4262  
                              u14300 1F76                                u14220 1ED6  
                              u14140 1E1E                                u14060 1D84  
                              u13340 165C                                u13260 1584  
                              u13180 14B0                                u15100 3142  
                              u12437 48A2                                u12357 47DC  
                              u11717 2608                                u12517 42DE  
                              u14037 1D28                                u13317 1600  
                              u13237 1528                                u13157 1464  
                              u13077 138C                                u10950 5D52  
                              u12390 4854                                u11910 278C  
                              u11750 2662                                u11670 259E  
                              u12550 4352                                u14230 1EE6  
                              u14150 1E4E                                u14070 1D9E  
                              u13510 17DA                                u13430 16EC  
                              u13270 15A0                                u13190 14CE  
                              u12447 48C0                                u12367 47FA  
                              u11807 26CE                                u11727 261C  
                              u12527 4302                                u14127 1E00  
                              u13327 1620                                u13167 147E  
                              u13087 13A6                                u11920 27B0  
                              u11840 2730                                u11760 2676  
                              u11680 25C6                                u12560 4378  
                              u12480 427A                                u14400 205A  
                              u14320 1F92                                u14240 1EF8  
                              u14160 1E5E                                u14080 1DB6  
                              u13600 18C0                                u13440 170C  
                              u13360 167E                                u13280 15BA  
                              u15120 3192                                u12640 3DB4  
                              u16000 4158                                u12457 48D8  
                              u12377 4818                                u11817 26E2  
                              u11745 2A38                                u11737 2630  
                              u12537 431E                                u14217 1EBC  
                              u14057 1D52                                u13417 16C4  
                              u13337 1638                                u13257 1560  
                              u12721 3FC4                                u11930 27C4  
                              u11770 268A                                u11690 25DA  
                              u12570 43DE                                u14250 1F12  
                              u14090 1DD0                                u13530 1802  
                              u13290 15D8                                u16010 416E  
                              u10947 5D34                                u12387 4836  
                              u11827 2708                                u11667 257A  
                              u12547 4330                                u12467 425C  
                              u14307 1F72                                u14227 1ED2  
                              u14147 1E1A                                u14067 1D7A  
                              u13611 18DA                                u13347 1654  
                              u13267 157C                                u13187 14AE  
                              u15107 3136                                u12651 3DCC  
                              u11940 27E0                                u11860 274C  
                              u11780 269E                                u12580 43F6  
                              u14420 2076                                u14340 1FDE  
                              u14260 1F22                                u14180 1E7A  
                              u13700 19DC                                u13620 18F8  
                              u13460 175A                                u12900 11A0  
                              u16020 41A2                                u12397 484C  
                              u11917 2786                                u11757 265A  
                              u11677 2598                                u12557 434C  
                              u14501 211C                                u14237 1EE2  
                              u14157 1E4A                                u14077 1D9A  
                              u13517 17CE                                u13437 16EA  
                              u13277 1598                                u13197 14C6  
                              u12661 3E06                                u10990 4E50  
                              u11950 27F4                                u14510 2138  
                              u14270 1F32                                u14190 1EA0  
                              u13710 19F6                                u13550 1838  
                              u13390 16AA                                u12910 11BA  
                              u15310 32DA                                u15230 3262  
                              u16030 41BC                                u11927 27A4  
                              u11847 272A                                u11767 2670  
                              u11687 25C0                                u12567 436A  
                              u12487 4274                                u14407 2056  
                              u14327 1F8C                                u14247 1EF4  
                              u14167 1E5A                                u14087 1DAC  
                              u13631 1914                                u13607 18B8  
                              u13471 1768                                u13447 1704  
                              u13367 1678                                u13287 15B2  
                              u15127 3186                                u16007 414C  
                              u11960 2810                                u11880 2762  
                              u14600 21E2                                u14360 2000  
                              u14280 1F48                                u13800 1AFE  
                              u13720 1A12                                u13640 1932  
                              u13560 1856                                u13480 1786  
                              u12920 11D6                                u15320 32F4  
                              u15240 327C                                u15160 31C4  
                              u16040 41EC                                _LATH0 007C80  
                              u11937 27BE                                u11777 2684  
                              u11697 25D4                                u12577 43CA  
                              u14521 2146                                u14257 1F0C  
                              u14097 1DCC                                u13537 17FA  
                              u13297 15D0                                u12681 3E90  
                              u16017 4168                                _LATH1 007C81  
                              u11970 2824                                u11890 2776  
                              u14610 220E                                u14530 215C  
                              u14450 20B2                                u14370 2016  
                              u14290 1F5E                                u13810 1B1C  
                              u13730 1A3A                                u13650 194E  
                              u13490 17A0                                u12930 11EC  
                              u12850 10E0                                u15170 31D2  
                              _LATH2 007C82                                u11947 27DA  
                              u11867 2746                                u11787 2698  
                              u12587 43EE                                u14427 2070  
                              u14347 1FD8                                u14267 1F1E  
                              u14187 1E76                                u13707 19D4  
                              u13627 18F0                                u13571 1870  
                              u13467 1752                                u12907 1198  
                              u16027 419A                                u14620 2220  
                              u14380 2032                                u13900 1BD8  
                              u13820 1B3A                                u13660 1968  
                              u13580 1894                                u12940 1206  
                              u12860 10FC                                u15340 3312  
                              u15180 31F8                                u10997 4E4A  
                              u11957 27EE                                u14517 212E  
                              u14277 1F2E                                u14197 1E9A  
                              u13741 1A48                                u13717 19EE  
                              u13557 1836                                u13397 16A4  
                              u12917 11B2                                u15317 32D2  
                              u15237 325A                                u16037 41B4  
                              u11990 2846                                u14630 2246  
                              u14550 2178                                u14470 20CE  
                              u13910 1BF4                                u13830 1B50  
                              u13750 1A66                                u13670 1988  
                              u12950 1222                                u12870 113E  
                              u12790 4FA0                                u15350 33C2  
                              u15270 329E                                u15511 357A  
                              u15431 34D2                                u11967 280A  
                              u11887 275C                                u14607 21DC  
                              u14367 1FFC                                u14287 1F42  
                              u13807 1AF8                                u13727 1A0A  
                              u13647 192A                                u13591 18A2  
                              u13567 184E                                u13487 177E  
                              u12927 11CE                                u15327 32EC  
                              u15247 3274                                u15167 31BE  
                              u16047 41E0                                u16160 51E4  
                              u14640 22A2                                u13920 1C10  
                              u13840 1B66                                u13680 19A6  
                              u12960 123C                                u12880 1164  
                              u15280 32B8                                u11977 281E  
                              u11897 2770                                u14617 220A  
                              u14537 2158                                u14457 20AE  
                              u14377 2010                                u14297 1F58  
                              u13817 1B16                                u13761 1A80  
                              u13737 1A32                                u13657 1946  
                              u13497 1798                                u12937 11E4  
                              u12857 10DA                                u16217 55B4  
                              u14650 22BC                                u14570 21A6  
                              u14490 2102                                u13930 1C2A  
                              u13850 1B7E                                u13770 1AA6  
                              u13690 19C2                                u12970 1256  
                              u12890 1186                                u15610 3860  
        __size_of_ETH_readLinkStatus 0000                                u14627 221A  
                              u14387 202C                                u13907 1BD2  
                              u13827 1B34                                u13667 1960  
                              u13587 1888                                u12947 11FE  
                              u12867 10F6                                u15355 33B8  
                              u15347 330A                                u15187 31EA  
                              u16307 64C4                                u14731 2D8E  
                              u16227 55C0                                _MAIPG 000EA6  
                              u15460 36E2                                u14580 21B6  
                              u13940 1C46                                u13780 1AC0  
                              u12980 1272                                _ERDPT 000F7A  
                              u11997 283E                                u14637 2242  
                              u14557 2172                                u14477 20C8  
                              u13917 1BEE                                u13837 1B4A  
                              u13757 1A5E                                u13677 1980  
                              u12957 121A                                u12877 112A  
                              u15277 3296                                u16317 6264  
                              u14821 2E1E                                u15621 3870  
                              u16237 55CC                                u14590 21CC  
                              u13950 1C5A                                u13870 1B9A  
                              u13790 1AE0                                u12990 12BE  
                              u16190 4C46                                u15551 35F2  
                              u15471 3530                                u14647 229C  
                              u13927 1C0A                                u13847 1B60  
                              u13687 199E                                u12967 1234  
                              u12887 1158                                u15287 32B0  
                              u16327 62E4                                u14911 2EAE  
                              u16247 55D8                                u15560 365E  
                              u13960 1C6C                                u15465 36D8  
                              u14657 22B6                                u14577 21A2  
                              u14497 20FE                                u13937 1C24  
                              u13857 1B7A                                u13777 1A9E  
                              u13697 19BA                                u12977 124E  
                              u12897 117E                                u16337 62F2  
                              u14761 2DBE                                u16257 55EA  
                              u13970 1CA8                                u13890 1BC4  
                              u16347 60A2                                u14587 21B2  
                              u13947 1C40                                u13787 1AB8  
                              u12987 126A                                u14851 2E4E  
                              u16267 55FC                                u15565 3654  
                              u14597 21C6                                u13981 1CC2  
                              u13957 1C54                                u13877 1B94  
                              u13797 1AD8                                u12997 12B6  
                              u14941 2EDE                                u16277 5636  
                              u13990 1CD6                                u15590 39AA  
                              u15910 407A                                u13967 1C66  
                              u16287 62C8                                u14791 2DEE  
                              u15920 40BC                                u13977 1CA4  
                              u13897 1BBE                                u16297 62D2  
                              u14881 2E7E                                u15930 40D0  
                 __size_of_TCB_Reset 0150                                u14971 2F36  
                              u15595 39A0                                u13997 1CD2  
                              u15917 406E                                u15950 40EC  
                              u15927 40B0                                u15937 40CA  
                              u15970 4106                                u15890 4034  
                    __end_of___lwdiv 5DA8                                u15957 40E6  
                              u15990 411E                                u15977 4100  
                              u15897 402E                                _MICMD 000EB2  
                              u15997 4118                                i1l512 0036  
                              i1l504 0004                                i1l521 54F4  
                    __end_of___lwmod 5EF4                                i1l506 001A  
                              i1l507 0018                                i1l518 54F0  
                ??i1_ETH_CheckLinkUp 0010                                i1l519 54E0  
                              _ERXND 000EEA                                i1l476 0016  
                              i1l484 5FB2                                i1l489 5FC0  
                              _ETXND 000EE6                                _ERXST 000EE8  
                              _EWRPT 000EE2                                _ETXST 000EE4  
                              _SPEN1 007D5F                                _TX1IF 007CF4  
                              _PORTJ 000F88                         main@ip_timer 02CB  
                    __end_of__doprnt 3CFE                                _TRISA 000F92  
                              _TRISB 000F93                                _TRISE 000F96  
                              _TRISH 000F99                                _TRISJ 000F9A  
                     __CFG_ECCPMX$ON 000000       __size_of_ETH_TxComputeChecksum 008E  
      __end_of_ETH_TxComputeChecksum 5808                 __size_of_DHCP_Manage 007C  
                   __end_of_TCP_Init 6462                     __end_of_TCP_Recv 3384  
                        ?_IPv4_Start 0022                     __end_of_PHY_Read 545C  
                              _claim 0045                      __end_of_dpowers 100B  
                   __end_of_UDP_Send 5878                          ?_TCP_Update 0001  
                 __size_of_UDP_Read8 0000                                _putch 6354  
                              main@t 02C2                   __size_of_PHY_Write 0050  
                 __size_of_UDP_Start 004E                      __end_of_low_isr 003A  
          __size_of_ETH_EventHandler 002E            _IPV4_PseudoHeaderChecksum 564C  
                              pclath 000FFA      TCP_FiniteStateMachine@nextState 0110  
                              tablat 000FF5                                time@t 0017  
                              plusw1 000FE3                                plusw2 000FDB  
                       _SYSLOG_Write 620C                      ?_lcd_write_data 0001  
                    ??_lcd_init_pins 0017                      ?_lcd_write_ctrl 0001  
                              status 000FD8                      __end_of_sprintf 6112  
                      _ETH_EdataRead 0000                        ?_IPV4_GetMyIP 0017  
                        ?_UDP_Write8 0001                        ?_ETH_SaveRDPT 0001  
                       __end_ofPL501 2484                         __end_ofPL511 3D26  
                       __end_ofPL503 2490                         __end_ofPL431 22E4  
                       __end_ofPL601 4442                         __end_ofPL521 24C6  
                       __end_ofPL513 24A4                         __end_ofPL505 307C  
                       __end_ofPL441 48FC                         __end_ofPL433 2A28  
                       __end_ofPL611 3D5A                         __end_ofPL603 2B90  
                       __end_ofPL531 3D32                         __end_ofPL523 24D8  
                       __end_ofPL515 49F6                         __end_ofPL507 3D0E  
                       __end_ofPL451 305A                         __end_ofPL443 232E  
                       __end_ofPL435 22EC                         __end_ofPL701 424E  
                       __end_ofPL621 3A7A                         __end_ofPL613 4BA0  
                       __end_ofPL605 2BAA                         __end_ofPL541 3758  
                       __end_ofPL533 3A0E                         __end_ofPL525 4E12  
                       __end_ofPL517 24AC                         __end_ofPL509 249A  
                       __end_ofPL461 23AA                         __end_ofPL453 339E  
                       __end_ofPL445 2340                         __end_ofPL437 2306  
                       __end_ofPL429 22DA                         __end_ofPL711 4A56  
                       __end_ofPL703 591A                         __end_ofPL631 2BD0  
                       __end_ofPL623 5B42                         __end_ofPL615 2BC2  
                       __end_ofPL607 3A64                         __end_ofPL551 4B88  
                       __end_ofPL543 24FC                         __end_ofPL535 4E1A  
                       __end_ofPL527 5140                         __end_ofPL519 24B4  
                       __end_ofPL471 23E0                         __end_ofPL463 23B2  
                       __end_ofPL455 4236                         __end_ofPL447 2380  
                       __end_ofPL439 2312                         __end_ofPL721 2C6C  
                       __end_ofPL713 2C62                         __end_ofPL705 4A4A  
                       __end_ofPL641 2534                         __end_ofPL633 3D70  
                       __end_ofPL625 598A                         __end_ofPL617 3D62  
                       __end_ofPL609 4A28                         __end_ofPL561 45F8  
                       __end_ofPL553 250E                         __end_ofPL545 2AAE  
                       __end_ofPL537 24EA                         __end_ofPL529 2AA4  
                       __end_ofPL481 2A7C                         __end_ofPL473 23E8  
                       __end_ofPL465 3730                         __end_ofPL457 441A  
                       __end_ofPL449 239A                         __end_ofPL731 3D92  
                       __end_ofPL723 4BB4                         __end_ofPL715 4F3A  
                       __end_ofPL707 5254                         __end_ofPL651 4CEE  
                       __end_ofPL643 3FF8                         __end_ofPL635 3452  
                       __end_ofPL627 4A3E                         __end_ofPL619 37AC  
                       __end_ofPL571 2ABC                         __end_ofPL563 3D44  
                       __end_ofPL555 2516                         __end_ofPL547 2506  
                       __end_ofPL539 3424                         __end_ofPL491 2446  
                       __end_ofPL483 240A                         __end_ofPL475 23F0  
                       __end_ofPL467 23BC                         __end_ofPL459 23A2  
                       __end_ofPL741 4464                         __end_ofPL733 3A84  
                       __end_ofPL725 613E                         __end_ofPL717 631A  
                       __end_ofPL709 309E                         __end_ofPL661 4BAA  
                       __end_ofPL653 3088                         __end_ofPL645 2BE2  
                       __end_ofPL637 5154                         __end_ofPL629 4244  
                       __end_ofPL581 2AF4                         __end_ofPL573 37A2  
                       __end_ofPL565 3A20                         __end_ofPL557 251E  
                       __end_ofPL549 376C                         __end_ofPL493 244E  
                       __end_ofPL485 2424                         __end_ofPL477 39E6  
                       __end_ofPL469 23D8                         __end_ofPL751 2C76  
                       __end_ofPL743 2566                         __end_ofPL735 3A8E  
                       __end_ofPL727 4A60                         __end_ofPL719 5646  
                       __end_ofPL671 4602                         __end_ofPL663 55AE  
                       __end_ofPL655 253E                         __end_ofPL647 2BF4  
                       __end_ofPL639 5F98                         __end_ofPL591 2B42  
                       __end_ofPL583 3A3A                         __end_ofPL575 2AD8  
                       __end_ofPL567 4428                         __end_ofPL559 3788  
                       __end_ofPL495 4F2E                         __end_ofPL487 243E  
                       __end_ofPL479 33FC                         __end_ofPL761 37B6  
                       __end_ofPL753 346A                         __end_ofPL745 4792  
                       __end_ofPL737 515E                         __end_ofPL729 3D88  
                       __end_ofPL681 530A                         __end_ofPL673 444C  
                       __end_ofPL665 577A                         __end_ofPL657 254E  
                       __end_ofPL649 2C06                         __end_ofPL593 2B5C  
                       __end_ofPL585 3D52                         __end_ofPL577 5894  
                       __end_ofPL569 252C                         __end_ofPL497 245C  
                       __end_ofPL489 2A8A                         __end_ofPL771 2C90  
                       __end_ofPL763 5CFC                         __end_ofPL755 3474  
                       __end_ofPL747 5052                         __end_ofPL739 3A98  
                       __end_ofPL691 4610                         __end_ofPL683 2C3E  
                       __end_ofPL675 605C                         __end_ofPL667 2C20  
                       __end_ofPL659 2C16                         __end_ofPL595 4A10  
                       __end_ofPL587 2B0E                         __end_ofPL579 343E  
                       __end_ofPL499 246A                         __end_ofPL781 6000  
                       __end_ofPL773 4000                         __end_ofPL765 4F44  
                       __end_ofPL757 2C80                         __end_ofPL749 3AA2  
                       __end_ofPL693 3460                         __end_ofPL685 5248  
                       __end_ofPL677 3D7E                         __end_ofPL669 2C30  
                       __end_ofPL597 3A54                         __end_ofPL589 2B28  
                       __end_ofPL783 5D0C                         __end_ofPL775 5D04  
                       __end_ofPL767 3D9C                         __end_ofPL759 3AAC  
                       __end_ofPL695 5E36                         __end_ofPL687 445A  
                       __end_ofPL679 255C                         __end_ofPL599 2B76  
                       __end_ofPL785 5D12                         __end_ofPL777 564C  
                       __end_ofPL769 2C88                         __end_ofPL697 3092  
                       __end_ofPL689 2C4C                         __end_ofPL787 5CC6  
                       __end_ofPL779 5464                         __end_ofPL699 2C56  
                       __end_ofPL789 550E            __end_ofi1_ETH_CheckLinkUp 60E6  
         ETH_RxComputeChecksum@rxptr 002D                  __size_of_ETH_GetMAC 002C  
                     __CFG_ETHLED$ON 000000                  UDP_ReadBlock@length 0022  
      ETH_TxComputeChecksum@position 0025                  __size_of_ETH_Read16 0038  
                __size_of_ETH_Read32 005A                 __end_of_ARPV4_Packet 36BE  
                    __initialization 5E36                  __size_of_ETH_Insert 0040  
               __end_of_ARPV4_Lookup 5C2E                         __end_of_main 4CE2  
               __end_of_ARPV4_Update 61BE                         __end_of_time 5AF2  
     __end_of_TCP_FiniteStateMachine 22C2                  __size_of_ETH_Write8 000A  
                        ETH_Copy@len 006D                          ETH_Init@mac 002D  
                    _DHCP_WriteZeros 63BA             ETH_TxComputeChecksum@len 0027  
                             ??_main 01BE                               ??_time 001B  
                      __activetblptr 000003                       _MAC_getAddress 650E  
                _TCP_ParseTCPOptions 4F44                        _ETH_ReadBlock 598A  
                    TCP_Snd@txHeader 00DA                    __end_of_ETH_Read8 604E  
                  __end_of_ETH_Flush 5B2C                    ETH_Send@packetEnd 0017  
            __end_of_TCP_PayloadSave 43FE                    __end_of_IPV4_Init 64EA  
                     UDP_Write8@data 0018                    __end_of_IPV4_Send 5980  
                          ??_TCP_Snd 00A1                               _ADCON0 000FC2  
                             _ADCON1 000FC1                               _ADCON2 000FC0  
                   _DEMO_UDP_IdlePkt 6112                  __size_ofi1_PHY_Read 00A2  
                             _ADRESH 000FC4                               _ADRESL 000FC3  
                     ETH_Dump@length 0017                               _EDMAND 000EF2  
                             _EDMAST 000EF0                               ?_putch 0001  
                             _MAADR1 000E84                               _MAADR2 000E85  
                             _MAADR3 000E82                               _MAADR4 000E83  
                             _MAADR5 000E80                               _MAADR6 000E81  
                             _MACON1 000EA0                               _MACON3 000EA2  
                             _MACON4 000EA3                               _MAMXFL 000EAA  
                             _T1SYNC 007E6A                               i1l7211 0000  
                             i1l6811 0006                               i1l6821 0032  
                             i1l6813 0008                               i1l6805 0000  
                             i1l6823 0034                               i1l6815 0012  
                             i1l6817 0024                               i1l6819 0028  
                             _INTCON 000FF2                               _OSCCON 000FD3  
                     ?_ETH_EdataRead 0001                       ??_IPV4_GetMyIP 001B  
                             _SPBRG1 000FAF                               _TMR1IE 007CE8  
                             _TMR1IF 007CF0                               _TMR1CS 007E69  
                     ??_ETH_SaveRDPT 0017                               _TMR1IP 007CF8  
                             _TMR1ON 007E68                 __end_of_ICMP_Receive 5CBE  
                             _TXREG1 000FAD                               _TXSTA1 000FAC  
                   __end_of_dhcpName 1028                 ?_TCP_ParseTCPOptions 0001  
                  __end_of_TCB_Reset 48E2                __size_of_DHCP_Handler 024A  
                  main@no_ip_display 02C6                       __CFG_XINST$OFF 000000  
                DEMO_UDP_Recv@length 00AF                      __CFG_EASHFT$OFF 000000  
                   __end_of_lcd_busy 64CC                     __end_of_lcd_init 5640  
                     ETH_ReadBlock@p 001E                     __end_of_high_isr 650E  
                   ??_UDP_WriteBlock 001F           __end_ofi1_ETH_EventHandler 5FCE  
              ICMP_EchoReply@icmpHdr 00AE                     __end_of_lcd_puts 630E  
                 _ETH_ResetByteCount 64F4                 TCP_Snd@payloadLength 00D5  
              ICMP_EchoReply@ipv4Hdr 009F                               ___wmul 61E6  
                __size_of_IPv4_Start 0178                               _arpMap 0234  
                          ??___lwdiv 001B                            ??___lwmod 0022  
              __size_of_DHCP_Request 0182                    __end_of_UDP_Read8 0000  
                __size_of_TCP_Update 021C                    __end_of_PHY_Write 5B92  
                             _initHW 5F2C                               _memcmp 5C2E  
                          ??__doprnt 0025                               _memset 616A  
                  __end_of_UDP_Start 5BE0                               clear_0 5E3C  
                             clear_1 5E48                               clear_2 5E54  
             __end_of_MAC_getAddress 6512                               _tcpMss 0043  
                       __doprnt@flag 002C                 __end_of_broadcastMAC 103D  
                             _printf 6232                  ?_ETH_ResetByteCount 0001  
                       __doprnt@prec 0029                               main@ip 02EF  
             ETH_ComputeChecksum@len 0017                      UDP_Start@destIP 009F  
                __size_of_UDP_Write8 0000                         __pdataCOMRAM 0048  
                     ?_ETH_ReadBlock 0017                         ?_UDP_Receive 0100  
                       __mediumconst 0000                    ??_ETH_CheckLinkUp 0026  
                          ??_low_isr 0014         __size_of_DEMO_UDP_SetClaimIP 0008  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8                     __end_of_spi_init 64B8  
           ADC_GetConversion@channel 001A         __size_of_Network_WaitForLink 000E  
                    _UDP_GetDestPort 64CC                            ??_sprintf 0031  
                       ??_ARPV4_Init 0017             i1PHY_WaitForBusy@timeout 0002  
                       ?_UDP_Write32 001B                         ?_UDP_Write16 0019  
              DHCP_WriteZeros@length 0018                         _DHCP_Handler 3D9C  
                      DHCP_Handler@v 00BB                       _ETH_EdataWrite 0000  
                     ETH_Insert@data 001D                      __CFG_FOSC$HSPLL 000000  
                         __accesstop 0060              __end_of__initialization 5E6C  
               ??_ETH_ResetByteCount 0017                            ?_LED_Init 0001  
              ??_TCP_ParseTCPOptions 001B                            ?_ETH_Copy 006D  
                          ?_ETH_Dump 0017                            ?_ETH_Init 0001  
                          ?_ETH_Send 0001           __size_ofi1_ETH_CheckLinkUp 002E  
                      ___rparam_used 000001                         _DHCP_Request 4464  
                      ?_Network_Init 0001                        ?_Network_Read 0001  
             IPV4_Send@payloadLength 0031                IPv4_Start@destAddress 0022  
            __end_of_DHCP_WriteZeros 63D2         __end_ofi1_ETH_readLinkStatus 0000  
                     __pcstackCOMRAM 0001                _ETH_RxComputeChecksum 5DA8  
            __size_of_ETH_WriteBlock 004C                 __size_of_IPV4_Packet 01D0  
              __end_of_ARPV4_Request 49C0                            LED_Init@x 0017  
                          ?_TCP_Init 0001                            ?_TCP_Recv 0111  
                          ?_PHY_Read 0019              __size_of_ETH_WriteStart 00FC  
                          ?_UDP_Send 0001                        __end_of_putch 636E  
                  UDP_ReadBlock@data 0020                   PHY_WaitForBusy@ret 0017  
               __size_of_ETH_Write16 000E                 __size_of_ETH_Write32 001A  
                    ?_MAC_getAddress 0017                   __end_of_ARPV4_Init 6388  
  TCP_ParseTCPOptions@tcpOptionsSize 001F         __end_of_ETH_NextPacketUpdate 5A9E  
                       ??_ETH_GetMAC 0017                      ETH_Copy@tmp_len 0071  
                    _PHY_WaitForBusy 0000                         _dhcpServerId 021C  
                       ETH_Read8@ret 0017                         ??_ETH_Read32 001B  
                       ??_ETH_Read16 0019                     ??_Network_Manage 01B9  
                       ??_ETH_Insert 001B                   __size_of_lcd_clear 0022  
                 __size_of_lcd_goto1 000E                   __size_of_lcd_goto2 000E  
                       ??_ETH_Write8 0017             DHCP_Handler@optionLength 00CE  
                   ?_TCP_PayloadSave 00EE                           __doprnt@ap 0024  
                         __doprnt@cp 002A               __end_of_ETH_EdataWrite 0000  
                         __doprnt@pb 0030                   __size_of_lcd_putch 001C  
               ETH_ComputeChecksum@v 0023                              ??_putch 0017  
                    ??_ETH_EdataRead 0017                           __pbssBANK1 01BF  
                         __pbssBANK2 0200                     _ETH_EventHandler 5CC6  
           __end_of_ETH_GetByteCount 6338                __size_of_ARPV4_Packet 024A  
                    UDP_Write32@data 001B                      UDP_Write16@data 0019  
                         ??_LED_Init 0017                __size_of_ARPV4_Lookup 004E  
                       ?_SYSLOG_Init 0001                           ??_ETH_Copy 0033  
                         ??_ETH_Dump 0019                           ??_ETH_Init 002A  
                     ??_Network_Init 002E                       ??_Network_Read 0157  
                         ??_ETH_Send 0017                __size_of_ARPV4_Update 002A  
         DEMO_UDP_Send@pot_adcResult 00AC                           _macAddress 103D  
                    TCB_Reset@tcbPtr 0017         __end_of_DEMO_UDP_IPLockTimer 643E  
                 __end_of_ETH_GetMAC 5F8E                         ??i1_PHY_Read 0007  
                 __end_of_ETH_Read16 5E28                   __end_of_ETH_Read32 5A48  
              __end_of_UDP_GetDestIP 6450                   __end_of_ETH_Insert 5EB6  
                       IPV4_Send@ret 006F                              ?___wmul 0017  
                         ??_TCP_Init 0017                           ??_TCP_Recv 0117  
                         ??_PHY_Read 001D                   __end_of_ETH_Write8 64F4  
                            ?_initHW 0001                           ??_UDP_Send 0074  
                            ?_memcmp 0017                           _deviceTime 02F3  
                            ?_memset 0017          __end_of_ETH_ComputeChecksum 559E  
                            _EDMADST 000EF4                              ?_printf 0060  
                            _MABBIPG 000EA4              __size_of_ADC_Initialize 0016  
                            _T1CKPS0 007E6C                              _T1CKPS1 007E6D  
               __end_of_IPV4_GetMyIP 6474                      ??_ETH_ReadBlock 001B  
               __end_of_ETH_SaveRDPT 64E0              __end_of_UDP_GetDestPort 64D6  
                            _T1OSCEN 007E6B                              _EPKTCNT 000ED9  
                            _EIEbits 000EFB                   __size_of_uart_init 0016  
                            _ERXFCON 000ED8                   __size_of_rtcc_init 0038  
                       SYSLOG_Init@t 006B                              _EIRbits 000F60  
                            _ERXRDPT 000EEC                           _ipv4Header 029C  
                       _ARPV4_Packet 3474                              _OSCTUNE 000F9B  
                       ??_IPv4_Start 0027                     ??_lcd_write_data 0017  
                   ??_lcd_write_ctrl 0017                         _ARPV4_Lookup 5BE0  
                            _TCP_Snd 2566                      ?_ETH_EdataWrite 0001  
              __end_of_UDP_ReadBlock 642A                         ??_TCP_Update 0111  
              __size_of_ICMP_Receive 0044                         _ARPV4_Update 6194  
                          ?_lcd_busy 0001                            ?_lcd_init 0001  
                          ?_high_isr 0001                            ?_lcd_puts 0019  
                 __end_ofi1_PHY_Read 5506               ARPV4_Lookup@ip_address 0017  
                         _ipv4Router 0220                           _led_values 0200  
                    TCP_Update@count 0119                         ??_UDP_Write8 0018  
               DEMO_UDP_Recv@dest_ip 00FC                   UDP_Receive@udpcksm 0100  
                SYSLOG_Write@message 0031                              __Hparam 0000  
                            __Lparam 0000                _DEMO_UDP_ClaimIPCheck 63D2  
             ?_ETH_RxComputeChecksum 0025                    __end_of_lcd_clear 627A  
                         _errataTemp 000E7E                     ?_DHCP_WriteZeros 0018  
      __size_of_DEMO_UDP_MeasureTemp 0018                            _ECON1bits 000FD2  
                  __end_of_lcd_goto1 649E                    __end_of_lcd_goto2 6490  
                          ?_spi_init 0001                    __end_of_lcd_putch 6354  
            __end_of_PHY_WaitForBusy 0000             __end_of_DEMO_UDP_IdlePkt 6134  
                        time@gie_val 001B                      __size_of___wmul 0026  
               DEMO_UDP_Recv@started 00FB                              ___lwdiv 5D5E  
                            ___lwmod 5EB6                 DEMO_UDP_Recv@str_len 00F8  
                         _currentTCB 003F                         __psmallconst 1000  
                 __end_of_IPv4_Start 4788                              __doprnt 3AAC  
         __end_of_ETH_readLinkStatus 0000                      __size_of_initHW 0036  
                 __end_of_TCP_Update 421C                              __pcinit 5E36  
                    __size_of_memcmp 004C                      __size_of_memset 002A  
                            __ramtop 1000                              __ptext0 4BB4  
                            __ptext1 5F2C                              __ptext2 63EA  
                            __ptext3 64AC                              __ptext4 5EF4  
                            __ptext5 55AE                              __ptext6 64B8  
                            __ptext7 629C                              __ptext8 6400  
                            __ptext9 6000                              _ethData 01BF  
                            _ipv4DNS 0210                      __size_of_printf 0026  
  TCP_FiniteStateMachine@notAckBytes 010D                        ??_DHCP_Manage 0033  
                       _ICMP_Receive 5C7A                    __end_of_hexpowers 1013  
             __size_of_DEMO_UDP_Recv 03B2               __size_of_DEMO_UDP_Send 00DC  
                            _dpowers 1001                              _tcbList 01CE  
             DEMO_UDP_IdlePkt@length 00AF                   __end_of_UDP_Write8 0000  
                            _low_isr 0018                 i1_ETH_readLinkStatus 0000  
               __size_of_UDP_Receive 00E4                _ETH_TxComputeChecksum 577A  
            __size_of_ICMP_EchoReply 0108                              _sprintf 60E6  
                         ??_lcd_busy 0017                           ??_lcd_init 0018  
                          _MICMDbits 000EB2                              main@str 02CF  
                         ??_high_isr 0017                       __pintcode_body 6506  
                         ??_lcd_puts 001B                 end_of_initialization 5E6C  
                          _ESTATbits 000EFD              ETH_ComputeChecksum@cksm 001F  
                        TCP_Snd@data 00D1              ETH_ComputeChecksum@seed 0019  
                        TCP_Snd@cksm 00D3                            _ETH_Read8 602E  
                          _ETH_Flush 5AF2                              memcmp@n 0018  
                          _IPV4_Init 64E0                            _IPV4_Send 591A  
                 IPv4_Start@protocol 0026                 __size_of_UDP_Write32 0000  
               __size_of_UDP_Write16 0000                              memset@c 0019  
                            memset@n 001B                              memset@p 001D  
                            int_func 6506                         _broadcastMAC 1037  
                   UDP_Start@dstPort 00A5                  ETH_ReadBlock@buffer 0017  
               _ETH_NextPacketUpdate 5A48                __end_of_lcd_init_pins 64C2  
                ETH_ReadBlock@length 0019                 DEMO_UDP_Send@started 00AB  
                  __end_of_uart_init 6400                       ETH_Write8@data 0017  
                      ?_rtcc_handler 0001                    __end_of_rtcc_init 5F2C  
                        PHY_Read@reg 001D                          PHY_Read@ret 001E  
                   DHCP_Request@type 00A8                  _DEMO_UDP_SetClaimIP 64FE  
                   UDP_Start@srcPort 00A3                              printf@f 0064  
                     _ETH_WriteBlock 5D12                  _Network_WaitForLink 6474  
                          _TCB_Reset 4792                              postdec2 000FDD  
                         ??_spi_init 0017                              postinc0 000FEE  
                            postinc1 000FE6                              postinc2 000FDE  
                    _ETH_CheckLinkUp 5FCE                       _ETH_WriteStart 4E1A  
                 TCP_PayloadSave@len 00EE                ARPV4_Packet@mergeFlag 0082  
           DEMO_UDP_Recv@temperature 00F1             ETH_RxComputeChecksum@len 0025  
                          _PORTJbits 000F88                       DHCP_Handler@ip 00B3  
                          _UDP_Read8 0000                     ?_UDP_GetDestPort 0017  
                          _PHY_Write 5B42                            _UDP_Start 5B92  
               __end_of_Network_Init 629C                 __end_of_Network_Read 53BA  
                 i1_ETH_EventHandler 5F98                 ?_DEMO_UDP_SetClaimIP 0001  
                          _TRISAbits 000F92                            _TRISCbits 000F94  
                          _TRISDbits 000F95                        _rcvPayloadLen 01CC  
               _DEMO_UDP_IPLockTimer 642A                ?i1_ETH_readLinkStatus 000C  
               ?_Network_WaitForLink 0001                    IPV4_Packet@hdrLen 0152  
                __end_of_DHCP_Manage 5910                        ETH_GetMAC@mac 0017  
                  IPV4_Packet@length 0153             DEMO_UDP_ClaimIPCheck@ret 0018  
                ?i1_ETH_EventHandler 0001                    ICMP_EchoReply@ret 00AD  
                         ?_ETH_Read8 0001                           ?_ETH_Flush 0001  
                         ?_IPV4_Init 0001                           ?_IPV4_Send 0031  
              ?_ETH_NextPacketUpdate 0001                        _DEMO_UDP_Recv 2C90  
                      _DEMO_UDP_Send 515E               PHY_WaitForBusy@timeout 0018  
                         main@old_ip 02BE                       ??_rtcc_handler 0017  
                   DEMO_UDP_Recv@str 00B1                           lcd_putch@c 0018  
             ?_DEMO_UDP_ClaimIPCheck 0001               __end_of_ETH_WriteBlock 5D5E  
                  __size_of_LED_Init 0020                        _dhcpLeaseTime 01C6  
               __size_of_SYSLOG_Init 002E                    __size_of_ETH_Copy 00A8  
                  __size_of_ETH_Dump 002E                    __size_of_ETH_Init 0118  
             __end_of_ETH_WriteStart 4F16                    __size_of_ETH_Send 002C  
                   ??_MAC_getAddress 0019                           ?_TCB_Reset 0017  
              __size_of_IPV4_GetMyIP 0012                __size_of_ETH_SaveRDPT 000A  
                   ?_PHY_WaitForBusy 0001                 ??i1_ETH_EventHandler 0014  
                     __end_of___wmul 620C             __end_of_ETH_EventHandler 5CF4  
           ARPV4_Request@destAddress 001D                       TCP_Recv@length 0115  
                      __pidataCOMRAM 6512                    _UDP_CallBackTable 1028  
                     TCP_Recv@tcbPtr 0134                       _ADC_Initialize 6400  
                  __size_of_TCP_Init 0012                    __size_of_TCP_Recv 02E6  
                     __end_of_initHW 5F62                       __end_of_memcmp 5C7A  
                  __size_of_PHY_Read 00A2                       __end_of_memset 6194  
                  __size_of_UDP_Send 0070                           ?_UDP_Read8 0001  
                         ?_PHY_Write 0019                       __end_of_printf 6258  
          ETH_RxComputeChecksum@cksm 002F                           ?_UDP_Start 009F  
                ICMP_Receive@icmpHdr 00B6            ETH_RxComputeChecksum@seed 0027  
              ??_DEMO_UDP_SetClaimIP 0017                  ICMP_Receive@ipv4Hdr 00AF  
                start_initialization 5E36                    _idle_pkt_received 0046  
              ?_DEMO_UDP_IPLockTimer 0001                ??_Network_WaitForLink 002A  
             ?_ETH_TxComputeChecksum 0025                        ETH_Copy@timer 006F  
                      ETH_Read32@ret 001B                        ETH_Read16@ret 0019  
        __end_of_TCP_ParseTCPOptions 5048        DEMO_UDP_MeasureTemp@adcResult 001D  
             ETH_WriteStart@dest_mac 0017                       ?_DEMO_UDP_Recv 00AF  
                     ?_DEMO_UDP_Send 0001          __size_of_ETH_ResetByteCount 000A  
                  ?_ETH_GetByteCount 0017                         _IPV4_GetMyIP 6462  
                       _ETH_SaveRDPT 64D6             ??_TCP_FiniteStateMachine 0100  
            __end_of_ETH_CheckLinkUp 5FFA                   ??_ETH_GetByteCount 0019  
                      ??_IPV4_Packet 0136                      ?_ETH_WriteBlock 0017  
              DHCP_Handler@ethPktMAC 00C2                      ?_ETH_WriteStart 0017  
                      ??_ETH_Write32 001B                        ??_ETH_Write16 0019  
                           ??___wmul 001B            __end_of_UDP_CallBackTable 1037  
                        __doprnt@idx 0028               __end_of_ADC_Initialize 6416  
                        __doprnt@val 002D                  ARPV4_Request@header 007C  
                           ??_initHW 0019                             ??_memcmp 001A  
                ETH_GetByteCount@val 0019                             ??_memset 001D  
                           ??_printf 0031                     ??_ETH_EdataWrite 0017  
                        _DHCP_Manage 5894                 IPv4_Start@macAddress 009C  
                      ETH_Insert@len 0017                      IPV4_Packet@cksm 0155  
            __size_of_UDP_WriteBlock 0000                          __pbssCOMRAM 0033  
             ??i1_ETH_readLinkStatus 0010                        __pcstackBANK0 0060  
                      __pcstackBANK1 0100                        __pcstackBANK2 02BE  
              TCP_Recv@remoteAddress 0111                        _claim_dest_ip 0033  
                     _ICMP_EchoReply 4A60                             ?_TCP_Snd 009F  
             __size_of_ARPV4_Request 00C4                          ??_ETH_Read8 0017  
                        ??_ETH_Flush 0017               ??_ETH_NextPacketUpdate 0017  
                        ??_IPV4_Init 0017                        ?_SYSLOG_Write 0031  
                        ??_IPV4_Send 006B                __end_of_ETH_EdataRead 0000  
                  __size_of_lcd_busy 000A                    __size_of_lcd_init 0092  
                  __size_of_high_isr 6506                            __doprnt@c 002F  
                          __doprnt@f 0023                    __size_of_lcd_puts 0012  
            ??_ETH_RxComputeChecksum 0029             __size_of_TCP_PayloadSave 01B0  
                          __pnvBANK2 02F3      ICMP_EchoReply@ipv4PayloadLength 00AB  
                   ___lwdiv@dividend 0017                            __pintcode 0008  
                        ??_TCB_Reset 0019                            __ptext100 0000  
                          __ptext101 613E                            __ptext110 5F98  
                          __ptext102 5E76                            __ptext111 60B8  
                          __ptext103 0000                            __ptext112 0000  
                          __ptext104 631A                            __ptext113 5464  
                          __ptext105 63D2                            __ptext114 0000  
                          __ptext106 608A                            __ptext107 642A  
                          __ptext116 61BE                            __ptext108 64FE  
                          __ptext117 0000                   ARPV4_Packet@x_1672 0087  
                           ?___lwdiv 0017                             ?___lwmod 001E  
                      IPV4_Send@cksm 0070                      ?_ADC_Initialize 0001  
                  ?_DEMO_UDP_IdlePkt 00AF                             ?__doprnt 0023  
              __size_of_Network_Init 0022                __size_of_Network_Read 00B0  
                 ARPV4_Packet@header 008A                            _lcd_clear 6258  
                        __pintcodelo 0018                  __end_of_IPV4_Packet 3986  
                 ARPV4_Packet@arpPtr 0084                    __size_of_spi_init 000C  
                          _lcd_goto1 6490                            _lcd_goto2 6482  
                 ARPV4_Packet@length 0080                   ??_DEMO_UDP_IdlePkt 0033  
       IPV4_PseudoHeaderChecksum@len 001E                            _lcd_putch 6338  
       IPV4_PseudoHeaderChecksum@tmp 0023             ARPV4_Update@entryPointer 0017  
                        ??_UDP_Read8 0018                  __end_of_ETH_Write16 64AC  
                __end_of_ETH_Write32 63A2                          ??_PHY_Write 001B  
                        __smallconst 1000                             _BAUDCON1 000F7E  
                        _clientState 0048                          ??_UDP_Start 002F  
             ??_DEMO_UDP_IPLockTimer 0018                __end_of_ETH_ReadBlock 59EE  
               __end_of_rtcc_handler 61E6               __end_of_ICMP_EchoReply 4B68  
       __end_of_DEMO_UDP_MeasureTemp 63BA                             ?_low_isr 0001  
       __size_of_ETH_ComputeChecksum 0090                            _hexpowers 100B  
                   ___lwdiv@quotient 001C                            _localTime 02F7  
                DHCP_Request@started 00A7                   _ETH_readLinkStatus 0000  
              _pot_initial_adcResult 01CA                             ?_sprintf 0060  
             __size_of_UDP_GetDestIP 0012                       __size_of_putch 001A  
                    ??_DEMO_UDP_Recv 0033                      ??_DEMO_UDP_Send 00A7  
                     ??_SYSLOG_Write 0033                            _tcpHeader 01D1  
            __size_of_Network_Manage 0086                       ___wmul@product 001B  
               ETH_WriteBlock@buffer 0017                            _udpHeader 02B0  
                           _LED_Init 629C                             _LATDbits 000F8C  
                ?_ETH_readLinkStatus 0022                 ETH_WriteBlock@length 0019  
                           _MIREGADR 000EB4                          _idle_packet 02BC  
                           _ETH_Copy 5254                           TCP_Snd@ret 00D7  
                           _ETH_Dump 605C                             _ETH_Init 4CEE  
                           _ETH_Send 613E                             _IPR2bits 000FA2  
                           _PIE2bits 000FA0                     ?_ETH_CheckLinkUp 0001  
    __size_of_TCP_FiniteStateMachine 11FE                          _ipv4Address 0037  
                       _Network_Init 627A                         _Network_Read 530A  
                  _nextAvailablePort 0232                             _PIR2bits 000FA1  
                           i1u957_20 0012                             i1u957_21 0010  
                           i1u958_20 0024                             i1u958_21 0022  
                           i1u959_20 0032                             i1u959_21 0030  
                   __CFG_WDTPS$32768 000000                            _uart_init 63EA  
                           _SSP1CON1 000FC6                        ARPV4_Packet@x 0086  
                      SYSLOG_Write@t 006B                             _TCP_Init 6450  
                          _rtcc_init 5EF4                             _TCP_Recv 309E  
                           _PHY_Read 53BA               __size_of_UDP_ReadBlock 0014  
 __size_of_IPV4_PseudoHeaderChecksum 0098                        _ARPV4_Request 48FC  
                           _UDP_Send 5808                           ?_lcd_clear 0001  
         ?_IPV4_PseudoHeaderChecksum 0017                           ?_lcd_goto1 0001  
                         ?_lcd_goto2 0001                           ?_lcd_putch 0001  
                         _ADCON0bits 000FC2                    ___wmul@multiplier 0017  
               ??_ETH_readLinkStatus 0026             __size_of_DHCP_WriteZeros 0018  
                      ARPV4_Lookup@x 0021          TCP_FiniteStateMachine@event 010F  
                      ??_UDP_Receive 0102                      ?_ICMP_EchoReply 009F  
                          main@now_p 02C7                            lcd_puts@s 0019  
                      ARPV4_Update@x 0019                   __end_of_macAddress 1043  
                      ??_UDP_Write32 001F                        ??_UDP_Write16 001B  
         IPV4_PseudoHeaderChecksum@v 001D                        TCP_Recv@count 0133  
                   TCP_Update@tcbPtr 011B                        ?_DHCP_Handler 00AF  
                   __size_of_TCP_Snd 04A8                DEMO_UDP_Recv@destPort 00F9  
            ??_DEMO_UDP_ClaimIPCheck 0017                        TCP_Snd@tcbPtr 009F  
                      ?_DHCP_Request 0001                DEMO_UDP_Recv@local_ip 00F3  
            __size_of_lcd_write_data 0020                        IPv4_Start@ret 009E  
            __size_of_lcd_write_ctrl 0020                             __Hrparam 0000  
         ETH_TxComputeChecksum@rxptr 002B                          _IPV4_Packet 37B6  
                           __Lrparam 0000                    _ADC_GetConversion 608A  
                         ?_uart_init 0001                          _ETH_Write32 6388  
                        _ETH_Write16 649E                     ETH_ReadBlock@len 001C  
                     ?_ARPV4_Request 001D                    ??_TCP_PayloadSave 00F0  
                      _UDP_GetDestIP 643E                           ?_rtcc_init 0001  
                 ?_ADC_GetConversion 0017                     __size_of___lwdiv 004A  
                   __size_of___lwmod 003E                    ?_ETH_EventHandler 0001  
                   __size_of__doprnt 0252    __end_of_IPV4_PseudoHeaderChecksum 56E4  
             TCP_ParseTCPOptions@ret 001D               TCP_ParseTCPOptions@opt 001E  
                        _tcbListSize 0047             ARPV4_Packet@entryPointer 0088  
            ??_ETH_TxComputeChecksum 0060                   DHCP_Handler@ethMAC 00C8  
                 ??_ETH_EventHandler 002A                       _UDP_WriteBlock 0000  
             _TCP_FiniteStateMachine 10C4                  ??_ADC_GetConversion 0019  
                 DHCP_Handler@length 00AF                             _dhcpName 1013  
             __size_of_lcd_init_pins 000A                   DHCP_Handler@option 00C1  
                    ___lwdiv@divisor 0019                      ___lwdiv@counter 001B  
                   __size_of_low_isr 0022                             __ptext10 6474  
                           __ptext11 56E4                             __ptext20 5C2E  
                           __ptext12 4000                             _destPort 0230  
                           __ptext21 59EE                             __ptext13 530A  
                           __ptext30 62DC                             __ptext22 616A  
                           __ptext14 60E6                             __ptext31 0000  
                           __ptext23 62FC                             __ptext15 37B6  
                           __ptext40 602E                             __ptext32 0000  
                           __ptext24 6338                             __ptext16 5052  
                           _arpTimer 02B8                             __ptext41 5DF0  
                           __ptext33 0000                             __ptext25 62BC  
                           __ptext17 2C90                             __ptext50 64D6  
                           __ptext42 605C                             __ptext34 64CC  
                           __ptext26 6482                             __ptext18 6112  
                           __ptext51 5254                             __ptext43 10C4  
                           __ptext35 643E                             __ptext27 6490  
                           __ptext19 3D9C                             __ptext60 5A48  
                           __ptext52 61E6                             __ptext44 424E  
                           __ptext36 63A2                             __ptext28 64C2  
                           __ptext61 5AF2                             __ptext53 620C  
                           __ptext45 2566                             __ptext37 6416  
                           __ptext29 6258                             __ptext70 5A9E  
                           __ptext62 3474                             __ptext54 6232  
                           __ptext46 4792                             __ptext38 309E  
                           __ptext71 6450                             __ptext63 598A  
                           __ptext55 3AAC                             __ptext47 564C  
                           __ptext39 4F44                             __ptext80 636E  
                           __ptext72 64E0                             __ptext64 5CC6  
                           __ptext56 6354                             __ptext48 5C7A  
                           __ptext81 6462                             __ptext73 4CEE  
                           __ptext65 5894                             __ptext57 5EB6  
                           __ptext49 4A60                             __ptext90 48FC  
                           __ptext82 515E                             __ptext74 5B42  
                           __ptext66 4464                             __ptext58 5D5E  
                           __ptext91 4E1A                             __ptext83 0000  
                           __ptext75 650E                             __ptext67 63BA  
                           __ptext59 5DA8                             __ptext92 64F4  
                           __ptext84 0000                             __ptext76 5FCE  
                           __ptext68 6194                             __ptext93 5D12  
                           __ptext85 5B92                             __ptext77 0000  
                           __ptext69 627A                             __ptext94 5F62  
                           __ptext86 4610                             __ptext78 53BA  
                           __ptext95 5BE0                             __ptext87 64EA  
                           __ptext79 0000                             __ptext96 5808  
                           __ptext88 6388                             __ptext97 591A  
                           __ptext89 649E                             __ptext98 577A  
                           __ptext99 550E                       ??_DHCP_Handler 00B1  
                       _SSP1CON1bits 000FC6                             _lcd_busy 64C2  
                           _lcd_init 55AE                   DHCP_Request@ethMAC 00A9  
                           _high_isr 0008                           _ARPV4_Init 636E  
                      _UDP_ReadBlock 6416                         time@the_time 001C  
                           _lcd_puts 62FC             __size_of_UDP_GetDestPort 000A  
                   __size_of_sprintf 002C                  __end_of_UDP_Receive 5136  
                   ??_ETH_WriteBlock 001B                    _remoteIpv4Address 0228  
                 ETH_WriteStart@type 0019            ARPV4_Lookup@entry_pointer 001F  
                   ??_ETH_WriteStart 001B                        __size_of_main 012E  
                      ??_SYSLOG_Init 0031                       ??_DHCP_Request 0033  
                      __size_of_time 0054                  __end_of_UDP_Write32 0000  
                __end_of_UDP_Write16 0000            __end_of_ADC_GetConversion 60B8  
              Network_Read@debug_str 015B                    UDP_Send@udpLength 007B  
               _DEMO_UDP_MeasureTemp 63A2                     PHY_Write@GIESave 001C  
                           _pot_init 01D0                       ?_UDP_GetDestIP 0017  
                           _spi_init 64AC                             int$flags 0049  
        DEMO_UDP_SetClaimIP@claim_ip 0017                 _rxPacketStatusVector 022C  
        __size_ofi1_ETH_EventHandler 0036                          ??_lcd_clear 0018  
                       _SSP1STATbits 000FC7          __end_of_DEMO_UDP_SetClaimIP 6506  
                        ??_lcd_goto1 0018                          ??_lcd_goto2 0018  
                  i1_PHY_WaitForBusy 0000                __size_of_rtcc_handler 0028  
               __end_of_SYSLOG_Write 6232               __end_of_UDP_WriteBlock 0000  
          __size_of_ETH_GetByteCount 001E          __end_of_Network_WaitForLink 6482  
                        ??_lcd_putch 0018               i1ETH_CheckLinkUp@value 0010  
                 ?i1_PHY_WaitForBusy 0001                         ?_DHCP_Manage 0001  
                         _ETH_GetMAC 5F62                            putch@data 0017  
                Network_Manage@nowPv 0218                           _ETH_Read32 59EE  
                         _ETH_Read16 5DF0            ETH_TxComputeChecksum@cksm 002D  
           __size_of_PHY_WaitForBusy 0000            ETH_TxComputeChecksum@seed 0029  
                           memcmp@s1 001C                             memcmp@s2 0017  
                         _ETH_Insert 5E76                        ?_ARPV4_Packet 0001  
                    ETH_Write32@data 0017                      ETH_Write16@data 0017  
                      ?_ARPV4_Lookup 0017                             memset@p1 0017  
                         _ETH_Write8 64EA                    ??_DHCP_WriteZeros 001A  
                      ?_ARPV4_Update 0001                _receivedRemoteAddress 003B  
                ??i1_PHY_WaitForBusy 0001                       ?_UDP_ReadBlock 0020  
         __end_of_ETH_ResetByteCount 64FE                             intlevel1 0000  
                           intlevel2 0000                            sprintf@ap 006B  
                          sprintf@pb 006C                            sprintf@wh 0060  
                     _Network_Manage 56E4                           _MISTATbits 000E8A  
                   ___lwmod@dividend 001E                      UDP_Receive@hptr 010A  
       __size_of_TCP_ParseTCPOptions 0104       __size_of_ETH_RxComputeChecksum 0048  
                   ??_ADC_Initialize 0017                        _lcd_init_pins 64B8  
      __end_of_ETH_RxComputeChecksum 5DF0                         _rtcc_handler 61BE  
              ?_DEMO_UDP_MeasureTemp 001B                      ??_ARPV4_Request 0060  
                _ETH_ComputeChecksum 550E                          ARPV4_Init@x 0017  
                         i1_PHY_Read 5464                          ??_uart_init 0017  
                __end_of_SYSLOG_Init 602E                             printf@ap 0065  
                           printf@pb 0066            __end_ofi1_PHY_WaitForBusy 0000  
                        ??_rtcc_init 0017                 IPV4_Send@totalLength 0072  
                    ?_UDP_WriteBlock 001D                        ?_ICMP_Receive 00AF  
                           sprintf@f 0062                 ETH_CheckLinkUp@value 0026  
                   DHCP_Handler@myip 00CF              __size_of_MAC_getAddress 0004  
                    ETH_WriteBlock@p 001B        IPV4_PseudoHeaderChecksum@cksm 001F  
                    ___lwmod@divisor 0020                      ARPV4_Packet@ret 0083  
                     ??_ARPV4_Packet 0060                      ___lwmod@counter 0022  
                        _UDP_Receive 5052                       ??_ARPV4_Lookup 001B  
               ?_ETH_ComputeChecksum 0017           TCP_PayloadSave@buffer_size 00FD  
                     ??_ARPV4_Update 0017                           _IPv4_Start 4610  
      __size_ofi1_ETH_readLinkStatus 0000             ETH_Insert@current_tx_ptr 001B  
                  Network_Manage@now 01BA                           _TCP_Update 4000  
          __size_of_DEMO_UDP_IdlePkt 0022               __end_of_Network_Manage 576A  
                        ?_ARPV4_Init 0001                      DHCP_Handler@v16 00BF  
                        _UDP_Write32 0000                          _UDP_Write16 0000  
                 Network_Read@header 01AB                           _UDP_Write8 0000  
      __size_of_ETH_NextPacketUpdate 0056                         UDP_Receive@x 0108  
                      PHY_Write@data 0019                       _lcd_write_data 62BC  
                     ?_lcd_init_pins 0001           __size_of_ADC_GetConversion 002E  
                     _lcd_write_ctrl 62DC                    ??_UDP_GetDestPort 0019  
                       UDP_Send@cksm 0079                         PHY_Write@reg 001B  
                   ETH_Insert@offset 0019                      ??_UDP_GetDestIP 001B  
                      i1PHY_Read@reg 0007                        i1PHY_Read@ret 0008  
